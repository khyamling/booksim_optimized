
;; Function bool ParseArgs(Configuration*, int, char**) (_Z9ParseArgsP13ConfigurationiPPc, funcdef_no=1749, decl_uid=35335, cgraph_uid=435, symbol_order=437)


Pass statistics:
----------------


Global statistics (BBS:169, LOOPS:2, CONDITIONS:72, STMTS:1069)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

bool ParseArgs(Configuration*, int, char**) (struct ConfigurationD.32032 * cfD.38292, intD.9 argcD.38293, charD.10 * * argvD.38294)
Eh tree:
   5 cleanup land:{59,<L77>},{58,<L76>},{57,<L75>},{56,<L74>},{55,<L73>},{54,<L72>},{53,<L71>},{52,<L70>},{51,<L69>},{50,<L68>},{49,<L67>},{48,<L66>},{47,<L64>},{28,<L44>},{19,<L31>},{18,<L30>},{3,<L78>}
     28 cleanup land:{14,<L27>}
       29 cleanup land:{15,<L26>}
         30 cleanup land:{46,<L63>},{16,<L65>}
           32 cleanup land:{17,<L28>}
           31 must_not_throw
     27 must_not_throw
     26 must_not_throw
     22 cleanup land:{23,<L36>},{11,<L43>}
       23 cleanup land:{24,<L37>},{12,<L42>}
         25 must_not_throw
         24 cleanup land:{27,<L40>},{26,<L39>},{25,<L38>},{13,<L41>}
     17 cleanup land:{10,<L19>}
     14 must_not_throw
     11 cleanup land:{45,<L61>},{44,<L60>},{43,<L59>},{42,<L58>},{41,<L57>},{40,<L56>},{39,<L55>},{38,<L54>},{37,<L53>},{36,<L52>},{35,<L51>},{34,<L50>},{33,<L49>},{32,<L48>},{31,<L47>},{30,<L46>},{29,<L45>},{7,<L62>}
     8 cleanup land:{22,<L34>},{21,<L33>},{20,<L32>},{5,<L35>}
{
  size_typeD.11502 __dnewD.55842;
  char_typeD.17868 D.55822;
  charD.10 __cD.55821;
  char_typeD.17868 D.55819;
  charD.10 __cD.55818;
  char_typeD.20947 D.55816;
  struct basic_ostreamD.7361 & D.55810;
  char_typeD.17868 D.55793;
  charD.10 __cD.55792;
  char_typeD.17868 D.55790;
  charD.10 __cD.55789;
  char_typeD.20947 D.55787;
  struct basic_ostreamD.7361 & D.55781;
  struct basic_ostreamD.7361 & D.55769;
  char_typeD.17868 D.55765;
  charD.10 __cD.55764;
  char_typeD.17868 D.55762;
  charD.10 __cD.55761;
  char_typeD.20947 D.55759;
  struct basic_ostreamD.7361 & D.55753;
  struct basic_ostreamD.7361 & D.55741;
  size_typeD.11502 __dnewD.55683;
  size_typeD.11502 __dnewD.55638;
  charD.10 __cD.51353;
  charD.10 cD.38413;
  struct ifstreamD.7376 inD.38307;
  size_tD.5382 posD.38302;
  struct stringD.2845 argD.38299;
  intD.9 iD.38298;
  boolD.2757 rcD.38297;
  const struct stringD.2845 D.38416;
  const struct stringD.2845 D.38306;
  intD.9 pretmp_4;
  intD.9 prephitmp_5;
  long unsigned intD.14 _13;
  long unsigned intD.14 _14;
  charD.10 * * _16;
  charD.10 * _17;
  charD.10 * _21;
  charD.10 _22;
  boolD.2757 _23;
  boolD.2757 _24;
  boolD.2757 _25;
  intD.9 _26;
  intD.9 pretmp_27;
  charD.10 * const _31;
  charD.10 * _32;
  charD.10 * * _33;
  charD.10 * _34;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _35;
  const iostateD.15838 _37;
  intD.9 __a.135_38;
  charD.10 c.118_40;
  charD.10 * _43;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _44;
  charD.10 * const _50;
  const size_typeD.11502 _52;
  charD.10 * _53;
  charD.10 * const _56;
  charD.10 * const _58;
  charD.10 * const _60;
  charD.10 * const _64;
  long intD.12 _65;
  charD.10 * const _66;
  struct basic_ostreamD.7361 & _67;
  size_typeD.11502 prephitmp_74;
  charD.10 * const pretmp_75;
  charD.10 * const prephitmp_76;
  const struct __ctype_typeD.20952 * _79;
  const struct __ctype_typeD.20952 * _83;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_88;
  const struct __ctype_typeD.20952 * _91;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_93;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_94;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_95;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_96;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_98;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_99;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_100;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_101;
  intD.9 pretmp_103;
  intD.9 prephitmp_104;
  size_typeD.11502 pretmp_105;
  size_typeD.11502 prephitmp_106;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_108;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_109;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_110;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_111;
  size_tD.2818 _113;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_120;
  charD.10 * _121;
  long unsigned intD.14 __dnew.111_122;
  const char_typeD.6439 _124;
  long unsigned intD.14 __dnew.111_125;
  charD.10 * const _126;
  charD.10 * _127;
  intD.9 pretmp_128;
  size_tD.2818 _129;
  charD.10 * const _132;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_136;
  charD.10 * _137;
  long unsigned intD.14 __dnew.111_138;
  const char_typeD.6439 _140;
  charD.10 * _143;
  charD.10 * const _144;
  struct FILED.5379 * _145;
  struct FILED.5379 * _146;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_147;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_148;
  long intD.12 _149;
  sizetype iftmp.126_150;
  struct basic_iosD.7355 * _151;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.127_152;
  long intD.12 _153;
  sizetype iftmp.128_154;
  struct basic_iosD.7355 * _155;
  intD.9 _156;
  charD.10 * _158;
  long intD.12 _159;
  sizetype iftmp.133_160;
  struct basic_iosD.7355 * _161;
  intD.9 prephitmp_162;
  struct __filebuf_typeD.26924 * _165;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _166;
  long intD.12 _167;
  sizetype _168;
  struct basic_iosD.7355 * _169;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _170;
  long intD.12 _171;
  sizetype _172;
  struct basic_iosD.7355 * _173;
  const iostateD.15838 _174;
  intD.9 __a.104_175;
  intD.9 _176;
  _Ios_IostateD.15710 _177;
  size_tD.2818 _178;
  long intD.12 _179;
  long intD.12 _180;
  sizetype _181;
  struct basic_iosD.7355 * _182;
  const iostateD.15838 _183;
  intD.9 __a.104_184;
  intD.9 _185;
  _Ios_IostateD.15710 _186;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _187;
  long intD.12 _188;
  sizetype _189;
  struct basic_iosD.7355 * _190;
  struct basic_ostreamD.7361 & _193;
  charD.10 _195;
  charD.10 * const _196;
  char_typeD.17868 _198;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _203;
  intD.9 (*__vtbl_ptr_typeD.2760) () _204;
  voidD.45 * PROF_208;
  char_typeD.17868 _210;
  size_tD.2818 _213;
  long intD.12 _214;
  long intD.12 _215;
  sizetype _216;
  struct basic_iosD.7355 * _217;
  const iostateD.15838 _218;
  intD.9 __a.104_219;
  intD.9 _220;
  _Ios_IostateD.15710 _221;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _222;
  long intD.12 _223;
  sizetype _224;
  struct basic_iosD.7355 * _225;
  struct basic_ostreamD.7361 & _228;
  charD.10 _230;
  char_typeD.17868 _233;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _238;
  intD.9 (*__vtbl_ptr_typeD.2760) () _239;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_241;
  voidD.45 * PROF_243;
  intD.9 __a.135_244;
  char_typeD.17868 _245;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_246;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_247;
  const iostateD.15838 _250;
  long intD.12 _251;
  sizetype iftmp.133_252;
  struct basic_iosD.7355 * _253;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.125_254;
  charD.10 * * _257;
  long intD.12 _258;
  sizetype iftmp.133_259;
  struct basic_iosD.7355 * _260;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _266;
  long intD.12 _267;
  sizetype _268;
  struct basic_iosD.7355 * _269;
  struct basic_ostreamD.7361 & _272;
  charD.10 _274;
  char_typeD.17868 _277;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _282;
  intD.9 (*__vtbl_ptr_typeD.2760) () _283;
  voidD.45 * PROF_287;
  char_typeD.17868 _289;
  size_tD.2818 _293;
  charD.10 * _301;
  long unsigned intD.14 __dnew.111_302;
  const char_typeD.6439 _304;
  charD.10 * _307;
  intD.9 pretmp_316;
  charD.10 * _375;
  charD.10 * const pretmp_398;
  charD.10 * const prephitmp_400;
  size_typeD.11502 pretmp_402;
  intD.9 pretmp_407;
  charD.10 * const _430;

;;   basic block 2, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG rcD.38297 => 0
  # DEBUG iD.38298 => 1
  # DEBUG iD.38298 => 1
  # DEBUG rcD.38297 => 0
  if (argc_11(D) <= 1)
    goto <bb 149>;
  else
    goto <bb 3>;
;;    succ:       149 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#42ptD.0 => &D.38301
  # DEBUG thisD.51320 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # PT = nonlocal 
  _257 = argv_15(D) + 8;
  # VUSE <.MEM_10(D)>
  # PT = nonlocal escaped 
  _375 = MEM[(charD.10 * *)argv_15(D) + 8B];
  # DEBUG D#400ptD.0 => &D.38301
  # DEBUG thisD.55619 => &argD.38299
  # DEBUG __sD.55620 => _375
  # DEBUG __aD.55621 => D#400ptD.0
  # DEBUG D#399ptD.0 => D#400ptD.0
  # DEBUG thisD.55631 => &argD.38299
  # DEBUG D#397ptD.0 => &argD.38299._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#399ptD.0
  # DEBUG thisD.55634 => D#397ptD.0
  # DEBUG __datD.55633 => &argD.38299.D.11539._M_local_bufD.11541
  # DEBUG __aD.55632 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#397ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_285 = VDEF <.MEM_10(D)>
  MEM[(struct _Alloc_hiderD.11518 *)&argD.38299]._M_pD.11525 = &argD.38299.D.11539._M_local_bufD.11541;
  if (_375 != 0B)
    goto <bb 6>;
  else
    goto <bb 166>;
;;    succ:       6 [78.4%]  (TRUE_VALUE,EXECUTABLE)
;;                166 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 1014, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       147 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#42ptD.0 => &D.38301
  # DEBUG thisD.51320 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # RANGE [0, 18446744073709551615]
  _13 = (long unsigned intD.14) i_62;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _14 = _13 * 8;
  # PT = nonlocal 
  _16 = argv_15(D) + _14;
  # VUSE <.MEM_61>
  # PT = nonlocal escaped 
  _17 = *_16;
  # DEBUG D#400ptD.0 => &D.38301
  # DEBUG thisD.55619 => &argD.38299
  # DEBUG __sD.55620 => _17
  # DEBUG __aD.55621 => D#400ptD.0
  # DEBUG D#399ptD.0 => D#400ptD.0
  # DEBUG thisD.55631 => &argD.38299
  # DEBUG D#397ptD.0 => &argD.38299._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#399ptD.0
  # DEBUG thisD.55634 => D#397ptD.0
  # DEBUG __datD.55633 => &argD.38299.D.11539._M_local_bufD.11541
  # DEBUG __aD.55632 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#397ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_324 = VDEF <.MEM_61>
  MEM[(struct _Alloc_hiderD.11518 *)&argD.38299]._M_pD.11525 = &argD.38299.D.11539._M_local_bufD.11541;
  if (_17 != 0B)
    goto <bb 5>;
  else
    goto <bb 166>;
;;    succ:       5 [78.4%]  (TRUE_VALUE,EXECUTABLE)
;;                166 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 795, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [78.4%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 17, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       3 [78.4%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 1036, maybe hot
;;   Invalid sum of incoming frequencies 812, should be 1036
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1]
  # rc_206 = PHI <0(6), rc_2(5)>
  # i_29 = PHI <1(6), i_62(5)>
  # PT = nonlocal 
  # _33 = PHI <_257(6), _16(5)>
  # PT = nonlocal escaped 
  # _158 = PHI <_375(6), _17(5)>
  # .MEM_163 = PHI <.MEM_285(6), .MEM_324(5)>
  # DEBUG iD.38298 => i_29
  # DEBUG rcD.38297 => rc_206
  # DEBUG D#42ptD.0 => &D.38301
  # DEBUG thisD.51320 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG D#400ptD.0 => &D.38301
  # DEBUG thisD.55619 => &argD.38299
  # DEBUG __sD.55620 => _158
  # DEBUG __aD.55621 => D#400ptD.0
  # DEBUG D#399ptD.0 => D#400ptD.0
  # DEBUG thisD.55631 => &argD.38299
  # DEBUG D#397ptD.0 => &argD.38299._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#399ptD.0
  # DEBUG thisD.55634 => D#397ptD.0
  # DEBUG __datD.55633 => &argD.38299.D.11539._M_local_bufD.11541
  # DEBUG __aD.55632 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#397ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # DEBUG __sD.55630 => _158
  # VUSE <.MEM_163>
  # RANGE [0, 18446744073709551615]
  # USE = nonlocal escaped 
  _113 = strlenD.1037 (_158);
  # DEBUG D#658ptD.0 => _158 + _113
  # DEBUG thisD.55624 => &argD.38299
  # DEBUG __begD.55623 => _158
  # DEBUG __endD.55622 => D#658ptD.0
  # DEBUG thisD.55628 => &argD.38299
  # DEBUG __begD.55627 => _158
  # DEBUG __endD.55626 => D#658ptD.0
  # DEBUG thisD.55635 => &argD.38299
  # DEBUG __begD.55636 => _158
  # DEBUG __endD.55637 => D#658ptD.0
  # DEBUG __ptrD.51229 => _158
  # DEBUG __firstD.55661 => _158
  # DEBUG __lastD.55660 => D#658ptD.0
  # DEBUG D#393ptD.0 => &__firstD.55661
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.55663 => _158
  # DEBUG __lastD.55662 => D#658ptD.0
  # .MEM_325 = VDEF <.MEM_163>
  __dnewD.55638 = _113;
  if (_113 > 15)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_326 = VDEF <.MEM_325>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _121 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&argD.38299, &__dnewD.55638, 0);
  # DEBUG D#6ptD.0 => &argD.38299
  # DEBUG __pD.55657 => _121
  # DEBUG thisD.55656 => D#6ptD.0
  # .MEM_327 = VDEF <.MEM_326>
  MEM[(charD.10 * *)&argD.38299] = _121;
  # VUSE <.MEM_327>
  __dnew.111_122 = __dnewD.55638;
  # DEBUG D#7ptD.0 => &argD.38299
  # DEBUG __capacityD.55659 => __dnew.111_122
  # DEBUG thisD.55658 => D#7ptD.0
  # .MEM_328 = VDEF <.MEM_327>
  MEM[(size_typeD.11502 *)&argD.38299 + 16B] = __dnew.111_122;
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55641 => _121
  # DEBUG __k1D.55640 => _158
  # DEBUG __k2D.55639 => D#658ptD.0
  # DEBUG __dD.55644 => _121
  # DEBUG __sD.55643 => _158
  # DEBUG __nD.55642 => _113
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 736, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#655ptD.0 => MEM[(charD.10 * *)&argD.38299]
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55641 => D#655ptD.0
  # DEBUG __k1D.55640 => _158
  # DEBUG __k2D.55639 => D#658ptD.0
  # DEBUG __dD.55644 => D#655ptD.0
  # DEBUG __sD.55643 => _158
  # DEBUG __nD.55642 => _113
  if (_113 == 1)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 392, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_325>
  _124 = MEM[(const char_typeD.6439 &)_158];
  # DEBUG D#13ptD.0 => _158
  # DEBUG __c1D.55649 => D#655ptD.0
  # DEBUG __c2D.55648 => D#13ptD.0
  # .MEM_329 = VDEF <.MEM_325>
  MEM[(char_typeD.6439 &)&argD.38299 + 16] = _124;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 644, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38299 } (escaped)
  # _132 = PHI <&argD.38299.D.11539._M_local_bufD.11541(9), _121(8)>
  # .MEM_157 = PHI <.MEM_325(9), .MEM_328(8)>
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55641 => _132
  # DEBUG __k1D.55640 => _158
  # DEBUG __k2D.55639 => D#658ptD.0
  # DEBUG __dD.55644 => _132
  # DEBUG __sD.55643 => _158
  # DEBUG __nD.55642 => _113
  # DEBUG __s1D.55647 => _132
  # DEBUG __s2D.55646 => _158
  # DEBUG __nD.55645 => _113
  # .MEM_330 = VDEF <.MEM_157>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  memcpyD.992 (_132, _158, _113);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 1036, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_242 = PHI <.MEM_329(10), .MEM_330(11)>
  # VUSE <.MEM_242>
  __dnew.111_125 = __dnewD.55638;
  # DEBUG thisD.55651 => &argD.38299
  # DEBUG __nD.55650 => __dnew.111_125
  # DEBUG D#5ptD.0 => &argD.38299
  # DEBUG __lengthD.55653 => __dnew.111_125
  # DEBUG thisD.55652 => D#5ptD.0
  # .MEM_331 = VDEF <.MEM_242>
  MEM[(size_typeD.11502 *)&argD.38299 + 8B] = __dnew.111_125;
  # VUSE <.MEM_331>
  # PT = nonlocal escaped null { D.38299 } (escaped)
  _126 = MEM[(charD.10 * *)&argD.38299];
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38299 } (escaped)
  _127 = _126 + __dnew.111_125;
  # DEBUG __c1D.55655 => _127
  # DEBUG __c2D.55654 => D#13ptD.0
  # .MEM_332 = VDEF <.MEM_331>
  MEM[(char_typeD.6439 &)_127] = 0;
  # .MEM_333 = VDEF <.MEM_332>
  __dnewD.55638 ={v} {CLOBBER};
  # DEBUG thisD.51321 => &D.38301
  # DEBUG thisD.51322 => &D.38301
  [LP 18] # .MEM_19 = VDEF <.MEM_333>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  pos_20 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcmD.12131 (&argD.38299, 61, 0);
;;    succ:       162 (EH,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 1036, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG posD.38302 => pos_20
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _21 = *_33;
  # VUSE <.MEM_19>
  _22 = *_21;
  # DEBUG dashD.38303 => _22 == 45
  # RANGE [0, 1]
  _23 = pos_20 == 18446744073709551615;
  # RANGE [0, 1]
  _24 = _22 != 45;
  # RANGE [0, 1]
  _25 = _23 & _24;
  if (_25 != 0)
    goto <bb 14>;
  else
    goto <bb 113>;
;;    succ:       14 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                113 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#42ptD.0 => &D.38305
  # DEBUG thisD.51323 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG D#400ptD.0 => &D.38305
  # DEBUG thisD.55664 => &D.38306
  # DEBUG __sD.55665 => _21
  # DEBUG __aD.55666 => D#400ptD.0
  # DEBUG D#399ptD.0 => D#400ptD.0
  # DEBUG thisD.55676 => &D.38306
  # DEBUG D#397ptD.0 => &D.38306._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#399ptD.0
  # DEBUG thisD.55679 => D#397ptD.0
  # DEBUG __datD.55678 => &D.38306.D.11539._M_local_bufD.11541
  # DEBUG __aD.55677 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#397ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_334 = VDEF <.MEM_19>
  MEM[(struct _Alloc_hiderD.11518 *)&D.38306]._M_pD.11525 = &D.38306.D.11539._M_local_bufD.11541;
  # DEBUG __sD.55675 => _21
  # VUSE <.MEM_334>
  # RANGE [0, 18446744073709551615]
  # USE = nonlocal escaped 
  _129 = strlenD.1037 (_21);
  # DEBUG D#657ptD.0 => _21 + _129
  # DEBUG thisD.55669 => &D.38306
  # DEBUG __begD.55668 => _21
  # DEBUG __endD.55667 => D#657ptD.0
  # DEBUG thisD.55673 => &D.38306
  # DEBUG __begD.55672 => _21
  # DEBUG __endD.55671 => D#657ptD.0
  # DEBUG thisD.55680 => &D.38306
  # DEBUG __begD.55681 => _21
  # DEBUG __endD.55682 => D#657ptD.0
  # DEBUG __ptrD.51229 => _21
  # DEBUG __firstD.55706 => _21
  # DEBUG __lastD.55705 => D#657ptD.0
  # DEBUG D#393ptD.0 => &__firstD.55706
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.55708 => _21
  # DEBUG __lastD.55707 => D#657ptD.0
  # .MEM_335 = VDEF <.MEM_334>
  __dnewD.55683 = _129;
  if (_129 > 15)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 87, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 19] # .MEM_336 = VDEF <.MEM_335>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _137 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.38306, &__dnewD.55683, 0);
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 (EH,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 (EH,EXECUTABLE)
<L31>: [LP 19]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 87, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.38306
  # DEBUG __pD.55702 => _137
  # DEBUG thisD.55701 => D#6ptD.0
  # .MEM_337 = VDEF <.MEM_336>
  MEM[(charD.10 * *)&D.38306] = _137;
  # VUSE <.MEM_337>
  __dnew.111_138 = __dnewD.55683;
  # DEBUG D#7ptD.0 => &D.38306
  # DEBUG __capacityD.55704 => __dnew.111_138
  # DEBUG thisD.55703 => D#7ptD.0
  # .MEM_338 = VDEF <.MEM_337>
  MEM[(size_typeD.11502 *)&D.38306 + 16B] = __dnew.111_138;
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55686 => _137
  # DEBUG __k1D.55685 => _21
  # DEBUG __k2D.55684 => D#657ptD.0
  # DEBUG __dD.55689 => _137
  # DEBUG __sD.55688 => _21
  # DEBUG __nD.55687 => _129
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 213, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       14 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55686 => &D.38306.D.11539._M_local_bufD.11541
  # DEBUG __k1D.55685 => _21
  # DEBUG __k2D.55684 => D#657ptD.0
  # DEBUG __dD.55689 => &D.38306.D.11539._M_local_bufD.11541
  # DEBUG __sD.55688 => _21
  # DEBUG __nD.55687 => _129
  if (_129 == 1)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 114, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_335>
  _140 = MEM[(const char_typeD.6439 &)_21];
  # DEBUG D#13ptD.0 => _21
  # DEBUG __c1D.55694 => &D.38306.D.11539._M_local_bufD.11541
  # DEBUG __c2D.55693 => D#13ptD.0
  # .MEM_339 = VDEF <.MEM_335>
  MEM[(char_typeD.6439 &)&D.38306 + 16] = _140;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 187, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38306 } (escaped)
  # _430 = PHI <&D.38306.D.11539._M_local_bufD.11541(18), _137(17)>
  # .MEM_131 = PHI <.MEM_335(18), .MEM_338(17)>
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55686 => _430
  # DEBUG __k1D.55685 => _21
  # DEBUG __k2D.55684 => D#657ptD.0
  # DEBUG __dD.55689 => _430
  # DEBUG __sD.55688 => _21
  # DEBUG __nD.55687 => _129
  # DEBUG __s1D.55692 => _430
  # DEBUG __s2D.55691 => _21
  # DEBUG __nD.55690 => _129
  # .MEM_340 = VDEF <.MEM_131>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  memcpyD.992 (_430, _21, _129);
  # VUSE <.MEM_340>
  pretmp_402 = __dnewD.55683;
  # VUSE <.MEM_340>
  pretmp_75 = MEM[(charD.10 * *)&D.38306];
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_339(19), .MEM_340(20)>
  # prephitmp_74 = PHI <_129(19), pretmp_402(20)>
  # PT = nonlocal escaped null { D.38306 } (escaped)
  # prephitmp_76 = PHI <&D.38306.D.11539._M_local_bufD.11541(19), pretmp_75(20)>
  # DEBUG D#654ptD.0 => __dnewD.55683
  # DEBUG thisD.55696 => &D.38306
  # DEBUG __nD.55695 => D#654ptD.0
  # DEBUG D#5ptD.0 => &D.38306
  # DEBUG __lengthD.55698 => D#654ptD.0
  # DEBUG thisD.55697 => D#5ptD.0
  # .MEM_341 = VDEF <.MEM_7>
  MEM[(size_typeD.11502 *)&D.38306 + 8B] = prephitmp_74;
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38306 } (escaped)
  _143 = prephitmp_76 + prephitmp_74;
  # DEBUG __c1D.55700 => _143
  # DEBUG __c2D.55699 => D#13ptD.0
  # .MEM_342 = VDEF <.MEM_341>
  MEM[(char_typeD.6439 &)_143] = 0;
  # .MEM_343 = VDEF <.MEM_342>
  __dnewD.55683 ={v} {CLOBBER};
  # DEBUG thisD.55709 => cf_28(D)
  # DEBUG filenameD.55710 => &D.38306
  # DEBUG thisD.47180 => &D.38306
  # VUSE <.MEM_343>
  # PT = nonlocal escaped null { D.38306 } (escaped)
  _144 = MEM[(charD.10 * *)&D.38306];
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.46877 => D#3ptD.0
  [LP 20] # .MEM_344 = VDEF <.MEM_343>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _145 = fopenD.25636 (_144, "r");
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                150 (EH,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_345 = VDEF <.MEM_344>
  cf_28(D)->_config_fileD.32035 = _145;
  if (_145 == 0B)
    goto <bb 23>;
  else
    goto <bb 25>;
;;    succ:       23 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#31ptD.0 => cf_28(D)
  [LP 21] # .MEM_429 = VDEF <.MEM_345>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZN13Configuration9ParseFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.part.14D.47193 (&D.38306);
;;    succ:       24 (EH,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 (EH,EXECUTABLE)
<L33>: [LP 21]
  goto <bb 151> (<L14>);
;;    succ:       151 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  [LP 22] # .MEM_346 = VDEF <.MEM_345>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  yyparseD.32031 ();
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 (EH,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 (EH,EXECUTABLE)
<L34>: [LP 22]
  goto <bb 151> (<L14>);
;;    succ:       151 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_346>
  # PT = nonlocal escaped 
  _146 = cf_28(D)->_config_fileD.32035;
  [LP 5] # .MEM_347 = VDEF <.MEM_346>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  fcloseD.25628 (_146);
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 (EH,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 27, next block 29, flags: (NEW)
;;    pred:       27 (EH,EXECUTABLE)
<L35>: [LP 5]
  goto <bb 151> (<L14>);
;;    succ:       151 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_348 = VDEF <.MEM_347>
  cf_28(D)->_config_fileD.32035 = 0B;
  # DEBUG thisD.51326 => &D.38306
  # DEBUG thisD.51327 => &D.38306
  # DEBUG thisD.51336 => &D.38306
  # VUSE <.MEM_348>
  # PT = nonlocal escaped null { D.38306 } (escaped)
  _31 = MEM[(charD.10 * *)&D.38306];
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51337 => &D.38306
  if (&D.38306.D.11539._M_local_bufD.11541 != _31)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 210, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.38306.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51329 => &D.38306
  # DEBUG __sizeD.51328 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.38306
  # DEBUG D#183ptD.0 => &D.38306._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51332 => _31
  # DEBUG __aD.51330 => D#181ptD.0
  # DEBUG __nD.51331 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51335 => _31
  # DEBUG thisD.51333 => D#177ptD.0
  # DEBUG D.51334 => D#178ptD.0
  # .MEM_73 = VDEF <.MEM_348>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZdlPvD.2766 (_31);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_63 = PHI <.MEM_348(29), .MEM_73(30)>
  # DEBUG D#187ptD.0 => &D.38306._M_dataplusD.11519
  # DEBUG thisD.51338 => D#187ptD.0
  # DEBUG thisD.51339 => D#187ptD.0
  # DEBUG thisD.51340 => D#187ptD.0
  # .MEM_30 = VDEF <.MEM_63>
  D.38306 ={v} {CLOBBER};
  # DEBUG thisD.51324 => &D.38305
  # DEBUG thisD.51325 => &D.38305
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _32 = *_33;
  # DEBUG thisD.55711 => &inD.38307
  # DEBUG __sD.55712 => _32
  # DEBUG __modeD.55713 => 8
  # DEBUG D#24ptD.0 => &inD.38307.D.27129
  # DEBUG thisD.55717 => D#24ptD.0
  # .MEM_349 = VDEF <.MEM_30>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt8ios_baseC2EvD.16016 (&MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051);
  # .MEM_350 = VDEF <.MEM_349>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.21060 + 16B];
  # .MEM_351 = VDEF <.MEM_350>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B]._M_tieD.20955 = 0B;
  # .MEM_352 = VDEF <.MEM_351>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B]._M_fillD.20956 = 0;
  # .MEM_353 = VDEF <.MEM_352>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B]._M_fill_initD.20957 = 0;
  # .MEM_354 = VDEF <.MEM_353>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B]._M_streambufD.20958 = 0B;
  # .MEM_355 = VDEF <.MEM_354>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B]._M_ctypeD.20959 = 0B;
  # .MEM_356 = VDEF <.MEM_355>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B]._M_num_putD.20960 = 0B;
  # .MEM_357 = VDEF <.MEM_356>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B]._M_num_getD.20961 = 0B;
  # DEBUG thisD.55719 => &inD.38307.D.27126
  # DEBUG __vtt_parmD.55718 => &MEM[(voidD.45 *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEED.27135 + 8B]
  # VUSE <.MEM_357>
  # PT = nonlocal escaped 
  iftmp.125_148 = MEM[(const voidD.45 * *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEED.27135 + 8B];
  # .MEM_358 = VDEF <.MEM_357>
  MEM[(struct basic_istreamD.7359 *)&inD.38307]._vptr.basic_istreamD.22556 = iftmp.125_148;
  # VUSE <.MEM_358>
  _149 = MEM[(long intD.12 *)iftmp.125_148 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.126_150 = (sizetype) _149;
  # PT = { D.38307 } (escaped)
  _151 = &inD.38307.D.27126 + iftmp.126_150;
  # VUSE <.MEM_358>
  # PT = nonlocal escaped 
  iftmp.127_152 = MEM[(const voidD.45 * *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEED.27135 + 16B];
  # .MEM_359 = VDEF <.MEM_358>
  _151->D.21051._vptr.ios_baseD.16027 = iftmp.127_152;
  # .MEM_360 = VDEF <.MEM_359>
  MEM[(struct basic_istreamD.7359 *)&inD.38307]._M_gcountD.22384 = 0;
  # VUSE <.MEM_360>
  _153 = MEM[(long intD.12 *)iftmp.125_148 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.128_154 = (sizetype) _153;
  # PT = { D.38307 } (escaped)
  _155 = &inD.38307.D.27126 + iftmp.128_154;
  [LP 23] # .MEM_361 = VDEF <.MEM_360>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.21026 (_155, 0B);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 (EH,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_362 = VDEF <.MEM_361>
  inD.38307.D.27126._vptr.basic_istreamD.22556 = &MEM[(voidD.45 *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEED.27130 + 24B];
  # .MEM_363 = VDEF <.MEM_362>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEED.27130 + 64B];
  [LP 24] # .MEM_364 = VDEF <.MEM_363>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt13basic_filebufIcSt11char_traitsIcEEC1EvD.27022 (&inD.38307._M_filebufD.27067);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 (EH,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 25] # .MEM_365 = VDEF <.MEM_364>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.21026 (&MEM[(voidD.45 *)&inD.38307 + 256B], &inD.38307._M_filebufD.27067.D.27035);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 (EH,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.55723 => &inD.38307
  # DEBUG __sD.55724 => _32
  # DEBUG __modeD.55725 => 8
  # DEBUG __aD.55727 => 8
  # DEBUG __bD.55726 => 8
  [LP 26] # .MEM_366 = VDEF <.MEM_365>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _165 = _ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_OpenmodeD.26959 (&inD.38307._M_filebufD.27067, _32, 8);
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 (EH,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.125_254 = PHI <iftmp.125_148(34)>
  # PT = nonlocal escaped 
  # iftmp.127_111 = PHI <iftmp.127_152(34)>
<L39>: [LP 26]
  goto <bb 42> (<L23>);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_165 == 0B)
    goto <bb 37>;
  else
    goto <bb 39>;
;;    succ:       37 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 30, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#19ptD.0 => _32
  # DEBUG D#20ptD.0 => 8
  # DEBUG thisD.55728 => &inD.38307
  # DEBUG D#21ptD.0 => D#20ptD.0
  # DEBUG __modeD.55729 => D#21ptD.0
  # DEBUG D#22ptD.0 => D#19ptD.0
  # DEBUG __sD.55730 => D#22ptD.0
  # VUSE <.MEM_366>
  # PT = nonlocal escaped null { D.16832 D.21060 D.27057 D.27130 } (nonlocal, escaped)
  _170 = inD.38307.D.27126._vptr.basic_istreamD.22556;
  # VUSE <.MEM_366>
  _171 = MEM[(long intD.12 *)_170 + -24B];
  # RANGE [0, 18446744073709551615]
  _172 = (sizetype) _171;
  # PT = { D.38307 } (escaped)
  _173 = &inD.38307 + _172;
  # DEBUG thisD.55732 => _173
  # DEBUG __stateD.55731 => 4
  # VUSE <.MEM_366>
  _174 = MEM[(_Ios_IostateD.15710 *)_173 + 32B];
  # DEBUG D#4ptD.0 => _173
  # DEBUG thisD.47094 => D#4ptD.0
  # DEBUG __aD.55734 => _174
  # DEBUG __bD.55733 => 4
  __a.104_175 = (intD.9) _174;
  # RANGE ~[0, 0]
  _176 = __a.104_175 | 4;
  # RANGE [1, 4294967295]
  _177 = (_Ios_IostateD.15710) _176;
  [LP 27] # .MEM_368 = VDEF <.MEM_366>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_IostateD.20968 (_173, _177);
  goto <bb 50>;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       37 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.125_247 = PHI <iftmp.125_148(37)>
  # PT = nonlocal escaped 
  # iftmp.127_110 = PHI <iftmp.127_152(37)>
<L40>: [LP 27]
  goto <bb 42> (<L23>);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 270, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       36 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_366>
  # PT = nonlocal escaped null { D.16832 D.21060 D.27057 D.27130 } (nonlocal, escaped)
  _166 = inD.38307.D.27126._vptr.basic_istreamD.22556;
  # VUSE <.MEM_366>
  _167 = MEM[(long intD.12 *)_166 + -24B];
  # RANGE [0, 18446744073709551615]
  _168 = (sizetype) _167;
  # PT = { D.38307 } (escaped)
  _169 = &inD.38307 + _168;
  [LP 13] # .MEM_367 = VDEF <.MEM_366>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_IostateD.20968 (_169, 0);
  goto <bb 50>;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 (EH,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.125_246 = PHI <iftmp.125_148(39)>
  # PT = nonlocal escaped 
  # iftmp.127_109 = PHI <iftmp.127_152(39)>
<L41>: [LP 13]
  goto <bb 42> (<L23>);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 40, next block 42, flags: (NEW)
;;    pred:       33 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.125_241 = PHI <iftmp.125_148(33)>
  # PT = nonlocal escaped 
  # iftmp.127_108 = PHI <iftmp.127_152(33)>
<L38>: [LP 25]
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_308 = PHI <.MEM_365(41), .MEM_367(40), .MEM_366(35), .MEM_368(38)>
  # PT = nonlocal escaped 
  # iftmp.125_98 = PHI <iftmp.125_241(41), iftmp.125_246(40), iftmp.125_254(35), iftmp.125_247(38)>
  # PT = nonlocal escaped 
  # iftmp.127_94 = PHI <iftmp.127_108(41), iftmp.127_109(40), iftmp.127_111(35), iftmp.127_110(38)>
<L23>:
  [MNT 25] # .MEM_421 = VDEF <.MEM_308>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt13basic_filebufIcSt11char_traitsIcEED1EvD.27029 (&inD.38307._M_filebufD.27067);
  [LP 12] resx 24
;;    succ:       43 (EH,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       42 (EH,EXECUTABLE)
<L42>: [LP 12]
  goto <bb 45> (<L24>);
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       32 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.125_147 = PHI <iftmp.125_148(32)>
  # PT = nonlocal escaped 
  # iftmp.127_101 = PHI <iftmp.127_152(32)>
<L37>: [LP 24]
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_309 = PHI <.MEM_364(44), .MEM_421(43)>
  # PT = nonlocal escaped 
  # iftmp.125_96 = PHI <iftmp.125_147(44), iftmp.125_98(43)>
  # PT = nonlocal escaped 
  # iftmp.127_93 = PHI <iftmp.127_101(44), iftmp.127_94(43)>
<L24>:
  # DEBUG thisD.55716 => &inD.38307.D.27126
  # DEBUG __vtt_parmD.55715 => &MEM[(voidD.45 *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEED.27135 + 8B]
  # VUSE <.MEM_309>
  _159 = MEM[(long intD.12 *)iftmp.125_96 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.133_160 = (sizetype) _159;
  # PT = { D.38307 } (escaped)
  _161 = &inD.38307.D.27126 + iftmp.133_160;
  # .MEM_423 = VDEF <.MEM_309>
  _161->D.21051._vptr.ios_baseD.16027 = iftmp.127_93;
  # .MEM_425 = VDEF <.MEM_423>
  MEM[(struct  &)&inD.38307] ={v} {CLOBBER};
  [LP 11] resx 23
;;    succ:       46 (EH,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       45 (EH,EXECUTABLE)
<L43>: [LP 11]
  goto <bb 48> (<L25>);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       31 (EH,EXECUTABLE)
<L36>: [LP 23]
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_310 = PHI <.MEM_361(47), .MEM_425(46)>
<L25>:
  # DEBUG D#23ptD.0 => &inD.38307.D.27129
  # DEBUG thisD.55714 => D#23ptD.0
  # .MEM_426 = VDEF <.MEM_310>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.21060 + 16B];
  [MNT 26] # .MEM_427 = VDEF <.MEM_426>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.16024 (&MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051);
  [LP 28] resx 22
;;    succ:       49 (EH,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       48 (EH,EXECUTABLE)
<L44>: [LP 28]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_424 = PHI <.MEM_368(37), .MEM_367(39)>
  # VUSE <.MEM_424>
  # PT = nonlocal escaped 
  _34 = *_33;
  # DEBUG __outD.51341 => &_ZSt4coutD.23717
  # DEBUG __sD.51342 => "BEGIN Configuration File: "
  # DEBUG __sD.51343 => "BEGIN Configuration File: "
  [LP 29] # .MEM_78 = VDEF <.MEM_424>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (&_ZSt4coutD.23717, "BEGIN Configuration File: ", 26);
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                155 (EH,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __sD.55738 => _34
  # DEBUG __outD.55739 => &_ZSt4coutD.23717
  if (_34 == 0B)
    goto <bb 52>;
  else
    goto <bb 55>;
;;    succ:       52 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 30, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       51 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#17ptD.0 => 0B
  # DEBUG __outD.55742 => &_ZSt4coutD.23717
  # DEBUG D#18ptD.0 => D#17ptD.0
  # DEBUG __sD.55743 => D#18ptD.0
  # VUSE <.MEM_78>
  # PT = nonlocal escaped 
  _35 = _ZSt4coutD.23717._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_78>
  _180 = MEM[(long intD.12 *)_35 + -24B];
  # RANGE [0, 18446744073709551615]
  _181 = (sizetype) _180;
  # PT = { D.23717 } (nonlocal, escaped)
  _182 = &_ZSt4coutD.23717 + _181;
  # DEBUG thisD.55746 => _182
  # DEBUG __stateD.55745 => 1
  # VUSE <.MEM_78>
  _183 = MEM[(_Ios_IostateD.15710 *)_182 + 32B];
  # DEBUG D#4ptD.0 => _182
  # DEBUG thisD.47094 => D#4ptD.0
  # DEBUG __aD.55748 => _183
  # DEBUG __bD.55747 => 1
  __a.104_184 = (intD.9) _183;
  # RANGE ~[0, 0]
  _185 = __a.104_184 | 1;
  # RANGE [1, 4294967295]
  _186 = (_Ios_IostateD.15710) _185;
  [LP 30] # .MEM_369 = VDEF <.MEM_78>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_IostateD.20968 (_182, _186);
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 (EH,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       52 (EH,EXECUTABLE)
<L46>: [LP 30]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                55 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_422 = PHI <.MEM_369(52), .MEM_370(55)>
  # DEBUG thisD.51345 => NULL
  # DEBUG __pfD.51346 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.55751 => &_ZSt4coutD.23717
  # VUSE <.MEM_422>
  # PT = nonlocal escaped 
  _187 = _ZSt4coutD.23717._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_422>
  _188 = MEM[(long intD.12 *)_187 + -24B];
  # RANGE [0, 18446744073709551615]
  _189 = (sizetype) _188;
  # PT = { D.23717 } (nonlocal, escaped)
  _190 = &_ZSt4coutD.23717 + _189;
  # DEBUG thisD.55754 => _190
  # DEBUG __cD.55755 => 10
  # VUSE <.MEM_422>
  # PT = nonlocal escaped 
  _79 = MEM[(const struct basic_iosD.7355 *)_190]._M_ctypeD.20959;
  # DEBUG __fD.55756 => _79
  if (_79 == 0B)
    goto <bb 57>;
  else
    goto <bb 59>;
;;    succ:       57 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 270, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       51 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __sD.55740 => _34
  # VUSE <.MEM_78>
  # USE = nonlocal escaped 
  _178 = strlenD.1037 (_34);
  _179 = (long intD.12) _178;
  [LP 31] # .MEM_370 = VDEF <.MEM_78>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (&_ZSt4coutD.23717, _34, _179);
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 (EH,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       55 (EH,EXECUTABLE)
<L47>: [LP 31]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       54 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 32] # .MEM_420 = VDEF <.MEM_422>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2851 ();
;;    succ:       58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW)
;;    pred:       57 (EH,EXECUTABLE)
<L48>: [LP 32]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       54 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55758 => _79
  # DEBUG __cD.55757 => 10
  # VUSE <.MEM_422>
  _195 = MEM[(const struct ctypeD.7662 *)_79]._M_widen_okD.17874;
  if (_195 != 0)
    goto <bb 60>;
  else
    goto <bb 61>;
;;    succ:       60 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 60, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       59 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_422>
  _198 = MEM[(const struct ctypeD.7662 *)_79]._M_widenD.17875[10];
  pretmp_128 = (intD.9) _198;
  goto <bb 67>;
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 1, count 0, freq 117, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       59 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55760 => _79
  # DEBUG __cD.55761 => 10
  [LP 33] # .MEM_372 = VDEF <.MEM_422>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_79);
  goto <bb 63>;
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                62 (EH,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 61, next block 63, flags: (NEW)
;;    pred:       61 (EH,EXECUTABLE)
<L49>: [LP 33]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 1, count 0, freq 117, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_372>
  # PT = nonlocal escaped 
  _203 = MEM[(const struct ctypeD.7662 *)_79].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_372>
  # PT = nonlocal escaped 
  _204 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_203 + 48B];
  # PT = anything 
  PROF_208 = [obj_type_ref] OBJ_TYPE_REF(_204;(const struct ctypeD.7662)_79->6);
  if (PROF_208 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 67>;
  else
    goto <bb 64>;
;;    succ:       67 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                64 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 64, loop depth 1, count 0, freq 23, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       63 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  [LP 34] # .MEM_373 = VDEF <.MEM_372>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _210 = OBJ_TYPE_REF(_204;(const struct ctypeD.7662)_79->6) (_79, 10);
  goto <bb 66>;
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                65 (EH,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW)
;;    pred:       64 (EH,EXECUTABLE)
<L50>: [LP 34]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 1, count 0, freq 23, maybe hot
;;    prev block 65, next block 67, flags: (NEW)
;;    pred:       64 [100.0%]  (FALLTHRU,EXECUTABLE)
  pretmp_316 = (intD.9) _210;
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_314 = PHI <.MEM_422(60), .MEM_372(63), .MEM_373(66)>
  # RANGE [-128, 127]
  # prephitmp_5 = PHI <pretmp_128(60), 10(63), pretmp_316(66)>
  [LP 35] # .MEM_377 = VDEF <.MEM_314>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _193 = _ZNSo3putEcD.21670 (&_ZSt4coutD.23717, prephitmp_5);
  goto <bb 69>;
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 (EH,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW)
;;    pred:       67 (EH,EXECUTABLE)
<L51>: [LP 35]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       67 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.55752 => _193
  [LP 36] # .MEM_378 = VDEF <.MEM_377>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_193);
  goto <bb 71>;
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                70 (EH,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW)
;;    pred:       69 (EH,EXECUTABLE)
<L52>: [LP 36]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.51348 => &inD.38307.D.27129
  # VUSE <.MEM_378>
  _250 = MEM[(_Ios_IostateD.15710 *)&inD.38307 + 288B];
  # DEBUG D#4ptD.0 => &inD.38307.D.27129
  # DEBUG thisD.47086 => D#4ptD.0
  # DEBUG __aD.51350 => _250
  # DEBUG __bD.51349 => 2
  __a.135_244 = (intD.9) _250;
  # RANGE [0, 2] NONZERO 2
  _156 = __a.135_244 & 2;
  if (_156 == 0)
    goto <bb 73>;
  else
    goto <bb 72>;
;;    succ:       73 [97.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [3.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 72, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       71 [3.0%]  (FALSE_VALUE,EXECUTABLE)
;;                78 [3.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_418 = PHI <.MEM_378(71), .MEM_41(78)>
  # VUSE <.MEM_418>
  # PT = nonlocal escaped 
  _43 = *_33;
  # DEBUG __outD.51355 => &_ZSt4coutD.23717
  # DEBUG __sD.51356 => "END Configuration File: "
  # DEBUG __sD.51357 => "END Configuration File: "
  [LP 39] # .MEM_82 = VDEF <.MEM_418>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (&_ZSt4coutD.23717, "END Configuration File: ", 24);
  goto <bb 81>;
;;    succ:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                80 (EH,EXECUTABLE)

;;   basic block 73, loop depth 1, count 0, freq 291, maybe hot
;;    prev block 72, next block 74, flags: (NEW)
;;    pred:       71 [97.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       74 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 74, loop depth 2, count 0, freq 9700, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                79 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_240 = PHI <.MEM_378(73), .MEM_41(79)>
  # DEBUG thisD.51348 => &inD.38307.D.27129
  # DEBUG D#4ptD.0 => &inD.38307.D.27129
  # DEBUG thisD.47086 => D#4ptD.0
  # DEBUG __aD.51350 => _250
  # DEBUG __bD.51349 => 2
  [LP 37] # .MEM_39 = VDEF <.MEM_240>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSi3getERcD.22450 (&inD.38307.D.27126, &cD.38413);
  goto <bb 76>;
;;    succ:       75 (EH,EXECUTABLE)
;;                76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW)
;;    pred:       74 (EH,EXECUTABLE)
<L53>: [LP 37]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 2, count 0, freq 9700, maybe hot
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       74 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_39>
  c.118_40 = cD.38413;
  # DEBUG __outD.51352 => &_ZSt4coutD.23717
  # .MEM_80 = VDEF <.MEM_39>
  __cD.51353 = c.118_40;
  # DEBUG __cD.51353 => __cD.51353
  [LP 38] # .MEM_81 = VDEF <.MEM_80>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (&_ZSt4coutD.23717, &__cD.51353, 1);
  goto <bb 78>;
;;    succ:       78 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                77 (EH,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 76, next block 78, flags: (NEW)
;;    pred:       76 (EH,EXECUTABLE)
<L54>: [LP 38]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 78, loop depth 2, count 0, freq 9700, maybe hot
;;    prev block 77, next block 79, flags: (NEW, REACHABLE)
;;    pred:       76 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_41 = VDEF <.MEM_81>
  cD.38413 ={v} {CLOBBER};
  # DEBUG thisD.51348 => &inD.38307.D.27129
  # VUSE <.MEM_41>
  _37 = MEM[(_Ios_IostateD.15710 *)&inD.38307 + 288B];
  # DEBUG D#4ptD.0 => &inD.38307.D.27129
  # DEBUG thisD.47086 => D#4ptD.0
  # DEBUG __aD.51350 => _37
  # DEBUG __bD.51349 => 2
  __a.135_38 = (intD.9) _37;
  # RANGE [0, 2] NONZERO 2
  _26 = __a.135_38 & 2;
  if (_26 == 0)
    goto <bb 79>;
  else
    goto <bb 72>;
;;    succ:       79 [97.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [3.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 79, loop depth 2, count 0, freq 9409, maybe hot
;;    prev block 78, next block 80, flags: (NEW)
;;    pred:       78 [97.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 74>;
;;    succ:       74 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 79, next block 81, flags: (NEW)
;;    pred:       72 (EH,EXECUTABLE)
<L55>: [LP 39]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 81, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 80, next block 82, flags: (NEW, REACHABLE)
;;    pred:       72 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __sD.55766 => _43
  # DEBUG __outD.55767 => &_ZSt4coutD.23717
  if (_43 == 0B)
    goto <bb 82>;
  else
    goto <bb 85>;
;;    succ:       82 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                85 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 82, loop depth 1, count 0, freq 30, maybe hot
;;    prev block 81, next block 83, flags: (NEW, REACHABLE)
;;    pred:       81 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#17ptD.0 => 0B
  # DEBUG __outD.55770 => &_ZSt4coutD.23717
  # DEBUG D#18ptD.0 => D#17ptD.0
  # DEBUG __sD.55771 => D#18ptD.0
  # VUSE <.MEM_82>
  # PT = nonlocal escaped 
  _44 = _ZSt4coutD.23717._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_82>
  _215 = MEM[(long intD.12 *)_44 + -24B];
  # RANGE [0, 18446744073709551615]
  _216 = (sizetype) _215;
  # PT = { D.23717 } (nonlocal, escaped)
  _217 = &_ZSt4coutD.23717 + _216;
  # DEBUG thisD.55774 => _217
  # DEBUG __stateD.55773 => 1
  # VUSE <.MEM_82>
  _218 = MEM[(_Ios_IostateD.15710 *)_217 + 32B];
  # DEBUG D#4ptD.0 => _217
  # DEBUG thisD.47094 => D#4ptD.0
  # DEBUG __aD.55776 => _218
  # DEBUG __bD.55775 => 1
  __a.104_219 = (intD.9) _218;
  # RANGE ~[0, 0]
  _220 = __a.104_219 | 1;
  # RANGE [1, 4294967295]
  _221 = (_Ios_IostateD.15710) _220;
  [LP 40] # .MEM_380 = VDEF <.MEM_82>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_IostateD.20968 (_217, _221);
  goto <bb 84>;
;;    succ:       84 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                83 (EH,EXECUTABLE)

;;   basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 82, next block 84, flags: (NEW)
;;    pred:       82 (EH,EXECUTABLE)
<L56>: [LP 40]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 84, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 83, next block 85, flags: (NEW, REACHABLE)
;;    pred:       82 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                85 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_414 = PHI <.MEM_380(82), .MEM_381(85)>
  # DEBUG thisD.51359 => NULL
  # DEBUG __pfD.51360 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.55779 => &_ZSt4coutD.23717
  # VUSE <.MEM_414>
  # PT = nonlocal escaped 
  _222 = _ZSt4coutD.23717._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_414>
  _223 = MEM[(long intD.12 *)_222 + -24B];
  # RANGE [0, 18446744073709551615]
  _224 = (sizetype) _223;
  # PT = { D.23717 } (nonlocal, escaped)
  _225 = &_ZSt4coutD.23717 + _224;
  # DEBUG thisD.55782 => _225
  # DEBUG __cD.55783 => 10
  # VUSE <.MEM_414>
  # PT = nonlocal escaped 
  _83 = MEM[(const struct basic_iosD.7355 *)_225]._M_ctypeD.20959;
  # DEBUG __fD.55784 => _83
  if (_83 == 0B)
    goto <bb 87>;
  else
    goto <bb 89>;
;;    succ:       87 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                89 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 85, loop depth 1, count 0, freq 270, maybe hot
;;    prev block 84, next block 86, flags: (NEW, REACHABLE)
;;    pred:       81 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __sD.55768 => _43
  # VUSE <.MEM_82>
  # USE = nonlocal escaped 
  _213 = strlenD.1037 (_43);
  _214 = (long intD.12) _213;
  [LP 41] # .MEM_381 = VDEF <.MEM_82>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (&_ZSt4coutD.23717, _43, _214);
  goto <bb 84>;
;;    succ:       84 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                86 (EH,EXECUTABLE)

;;   basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 85, next block 87, flags: (NEW)
;;    pred:       85 (EH,EXECUTABLE)
<L57>: [LP 41]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 86, next block 88, flags: (NEW, REACHABLE)
;;    pred:       84 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 42] # .MEM_419 = VDEF <.MEM_414>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2851 ();
;;    succ:       88 (EH,EXECUTABLE)

;;   basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 87, next block 89, flags: (NEW)
;;    pred:       87 (EH,EXECUTABLE)
<L58>: [LP 42]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 89, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 88, next block 90, flags: (NEW, REACHABLE)
;;    pred:       84 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55786 => _83
  # DEBUG __cD.55785 => 10
  # VUSE <.MEM_414>
  _230 = MEM[(const struct ctypeD.7662 *)_83]._M_widen_okD.17874;
  if (_230 != 0)
    goto <bb 90>;
  else
    goto <bb 91>;
;;    succ:       90 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                91 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 90, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 89, next block 91, flags: (NEW, REACHABLE)
;;    pred:       89 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_414>
  _233 = MEM[(const struct ctypeD.7662 *)_83]._M_widenD.17875[10];
  pretmp_4 = (intD.9) _233;
  goto <bb 97>;
;;    succ:       97 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 91, loop depth 1, count 0, freq 117, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       89 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55788 => _83
  # DEBUG __cD.55789 => 10
  [LP 43] # .MEM_383 = VDEF <.MEM_414>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_83);
  goto <bb 93>;
;;    succ:       93 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                92 (EH,EXECUTABLE)

;;   basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 91, next block 93, flags: (NEW)
;;    pred:       91 (EH,EXECUTABLE)
<L59>: [LP 43]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 93, loop depth 1, count 0, freq 117, maybe hot
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       91 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_383>
  # PT = nonlocal escaped 
  _238 = MEM[(const struct ctypeD.7662 *)_83].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_383>
  # PT = nonlocal escaped 
  _239 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_238 + 48B];
  # PT = anything 
  PROF_243 = [obj_type_ref] OBJ_TYPE_REF(_239;(const struct ctypeD.7662)_83->6);
  if (PROF_243 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 97>;
  else
    goto <bb 94>;
;;    succ:       97 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                94 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 94, loop depth 1, count 0, freq 23, maybe hot
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       93 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  [LP 44] # .MEM_384 = VDEF <.MEM_383>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _245 = OBJ_TYPE_REF(_239;(const struct ctypeD.7662)_83->6) (_83, 10);
  goto <bb 96>;
;;    succ:       96 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                95 (EH,EXECUTABLE)

;;   basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 94, next block 96, flags: (NEW)
;;    pred:       94 (EH,EXECUTABLE)
<L60>: [LP 44]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 96, loop depth 1, count 0, freq 23, maybe hot
;;    prev block 95, next block 97, flags: (NEW)
;;    pred:       94 [100.0%]  (FALLTHRU,EXECUTABLE)
  pretmp_27 = (intD.9) _245;
;;    succ:       97 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 97, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       90 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                93 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                96 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_317 = PHI <.MEM_414(90), .MEM_383(93), .MEM_384(96)>
  # RANGE [-128, 127]
  # prephitmp_162 = PHI <pretmp_4(90), 10(93), pretmp_27(96)>
  [LP 45] # .MEM_388 = VDEF <.MEM_317>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _228 = _ZNSo3putEcD.21670 (&_ZSt4coutD.23717, prephitmp_162);
  goto <bb 99>;
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                98 (EH,EXECUTABLE)

;;   basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 97, next block 99, flags: (NEW)
;;    pred:       97 (EH,EXECUTABLE)
<L61>: [LP 45]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 99, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       97 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.55780 => _228
  [LP 7] # .MEM_389 = VDEF <.MEM_388>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_228);
  goto <bb 101>;
;;    succ:       101 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                100 (EH,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 99, next block 101, flags: (NEW)
;;    pred:       99 (EH,EXECUTABLE)
<L62>: [LP 7]
  goto <bb 156> (<L17>);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 101, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 100, next block 102, flags: (NEW, REACHABLE)
;;    pred:       99 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG rcD.38297 => 1
  # DEBUG thisD.55794 => &inD.38307
  # .MEM_391 = VDEF <.MEM_389>
  inD.38307.D.27126._vptr.basic_istreamD.22556 = &MEM[(voidD.45 *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEED.27130 + 24B];
  # .MEM_392 = VDEF <.MEM_391>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt14basic_ifstreamIcSt11char_traitsIcEED.27130 + 64B];
  # DEBUG thisD.55803 => &inD.38307._M_filebufD.27067
  # .MEM_393 = VDEF <.MEM_392>
  MEM[(struct basic_filebufD.7373 *)&inD.38307 + 16B].D.27035._vptr.basic_streambufD.16823 = &MEM[(voidD.45 *)&_ZTVSt13basic_filebufIcSt11char_traitsIcEED.27057 + 16B];
  [LP 17] # .MEM_394 = VDEF <.MEM_393>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEvD.26963 (&inD.38307._M_filebufD.27067);
;;    succ:       102 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                105 (EH,EXECUTABLE)

;;   basic block 102, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 101, next block 103, flags: (NEW, REACHABLE)
;;    pred:       101 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 46] # .MEM_395 = VDEF <.MEM_394>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt12__basic_fileIcED1EvD.26278 (&MEM[(struct basic_filebufD.7373 *)&inD.38307 + 16B]._M_fileD.26929);
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                107 (EH,EXECUTABLE)

;;   basic block 103, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       102 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#8ptD.0 => &MEM[(struct basic_filebufD.7373 *)&inD.38307 + 16B].D.27035
  # DEBUG thisD.55805 => D#8ptD.0
  # .MEM_396 = VDEF <.MEM_395>
  MEM[(struct basic_streambufD.7357 *)&inD.38307 + 16B]._vptr.basic_streambufD.16823 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.16832 + 16B];
  # .MEM_397 = VDEF <.MEM_396>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt6localeD1EvD.14562 (&MEM[(struct basic_streambufD.7357 *)&inD.38307 + 16B]._M_buf_localeD.16675);
  # .MEM_399 = VDEF <.MEM_397>
  MEM[(struct  &)&inD.38307 + 16] ={v} {CLOBBER};
  # DEBUG thisD.55800 => &inD.38307.D.27126
  # DEBUG __vtt_parmD.55799 => &MEM[(voidD.45 *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEED.27135 + 8B]
  # VUSE <.MEM_399>
  _251 = MEM[(long intD.12 *)iftmp.125_148 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.133_252 = (sizetype) _251;
  # PT = { D.38307 } (escaped)
  _253 = &inD.38307.D.27126 + iftmp.133_252;
  # .MEM_401 = VDEF <.MEM_399>
  _253->D.21051._vptr.ios_baseD.16027 = iftmp.127_152;
  # .MEM_403 = VDEF <.MEM_401>
  MEM[(struct  &)&inD.38307] ={v} {CLOBBER};
  # DEBUG D#11ptD.0 => &inD.38307.D.27129
  # DEBUG thisD.55798 => D#11ptD.0
  # .MEM_404 = VDEF <.MEM_403>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.21060 + 16B];
  [LP 47] # .MEM_405 = VDEF <.MEM_404>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.16024 (&MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051);
  goto <bb 109>;
;;    succ:       109 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                104 (EH,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 103, next block 105, flags: (NEW)
;;    pred:       103 (EH,EXECUTABLE)
<L64>: [LP 47]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 104, next block 106, flags: (NEW, REACHABLE)
;;    pred:       101 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.125_136 = PHI <iftmp.125_148(101)>
  # PT = nonlocal escaped 
  # iftmp.127_100 = PHI <iftmp.127_152(101)>
<L28>: [LP 17]
  [MNT 31] # .MEM_408 = VDEF <.MEM_394>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt12__basic_fileIcED1EvD.26278 (&MEM[(struct basic_filebufD.7373 *)&inD.38307 + 16B]._M_fileD.26929);
  [LP 16] resx 32
;;    succ:       106 (EH,EXECUTABLE)

;;   basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 105, next block 107, flags: (NEW)
;;    pred:       105 (EH,EXECUTABLE)
<L65>: [LP 16]
  goto <bb 108> (<L29>);
;;    succ:       108 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 106, next block 108, flags: (NEW)
;;    pred:       102 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.125_120 = PHI <iftmp.125_148(102)>
  # PT = nonlocal escaped 
  # iftmp.127_99 = PHI <iftmp.127_152(102)>
<L63>: [LP 46]
;;    succ:       108 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       107 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                106 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_318 = PHI <.MEM_395(107), .MEM_408(106)>
  # PT = nonlocal escaped 
  # iftmp.125_95 = PHI <iftmp.125_120(107), iftmp.125_136(106)>
  # PT = nonlocal escaped 
  # iftmp.127_88 = PHI <iftmp.127_99(107), iftmp.127_100(106)>
<L29>:
  # DEBUG D#9ptD.0 => &MEM[(struct basic_filebufD.7373 *)&inD.38307 + 16B].D.27035
  # DEBUG thisD.55804 => D#9ptD.0
  # .MEM_409 = VDEF <.MEM_318>
  MEM[(struct basic_streambufD.7357 *)&inD.38307 + 16B]._vptr.basic_streambufD.16823 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.16832 + 16B];
  # .MEM_410 = VDEF <.MEM_409>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt6localeD1EvD.14562 (&MEM[(struct basic_streambufD.7357 *)&inD.38307 + 16B]._M_buf_localeD.16675);
  # .MEM_411 = VDEF <.MEM_410>
  MEM[(struct  &)&inD.38307 + 16] ={v} {CLOBBER};
  [LP 15] resx 30
;;    succ:       110 (EH,EXECUTABLE)

;;   basic block 109, loop depth 1, count 0, freq 300, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       103 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_47 = VDEF <.MEM_405>
  inD.38307 ={v} {CLOBBER};
  goto <bb 145>;
;;    succ:       145 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 109, next block 111, flags: (NEW, REACHABLE)
;;    pred:       108 (EH,EXECUTABLE)
<L26>: [LP 15]
  # DEBUG thisD.55797 => &inD.38307.D.27126
  # DEBUG __vtt_parmD.55796 => &MEM[(voidD.45 *)&_ZTTSt14basic_ifstreamIcSt11char_traitsIcEED.27135 + 8B]
  # VUSE <.MEM_411>
  _258 = MEM[(long intD.12 *)iftmp.125_95 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.133_259 = (sizetype) _258;
  # PT = { D.38307 } (escaped)
  _260 = &inD.38307.D.27126 + iftmp.133_259;
  # .MEM_413 = VDEF <.MEM_411>
  _260->D.21051._vptr.ios_baseD.16027 = iftmp.127_88;
  # .MEM_415 = VDEF <.MEM_413>
  MEM[(struct  &)&inD.38307] ={v} {CLOBBER};
  [LP 14] resx 29
;;    succ:       111 (EH,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 110, next block 112, flags: (NEW, REACHABLE)
;;    pred:       110 (EH,EXECUTABLE)
<L27>: [LP 14]
  # DEBUG D#10ptD.0 => &inD.38307.D.27129
  # DEBUG thisD.55795 => D#10ptD.0
  # .MEM_416 = VDEF <.MEM_415>
  MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.21060 + 16B];
  [MNT 27] # .MEM_417 = VDEF <.MEM_416>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.16024 (&MEM[(struct basic_iosD.7355 *)&inD.38307 + 256B].D.21051);
  [LP 48] resx 28
;;    succ:       112 (EH,EXECUTABLE)

;;   basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 111, next block 113, flags: (NEW)
;;    pred:       111 (EH,EXECUTABLE)
<L66>: [LP 48]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 113, loop depth 1, count 0, freq 735, maybe hot
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       13 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  if (pos_20 != 18446744073709551615)
    goto <bb 114>;
  else
    goto <bb 145>;
;;    succ:       114 [51.2%]  (TRUE_VALUE,EXECUTABLE)
;;                145 [48.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 114, loop depth 1, count 0, freq 377, maybe hot
;;    prev block 113, next block 115, flags: (NEW, REACHABLE)
;;    pred:       113 [51.2%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __outD.51362 => &_ZSt4coutD.23717
  # DEBUG __sD.51363 => "OVERRIDE Parameter: "
  # DEBUG __sD.51364 => "OVERRIDE Parameter: "
  [LP 49] # .MEM_89 = VDEF <.MEM_19>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (&_ZSt4coutD.23717, "OVERRIDE Parameter: ", 20);
  goto <bb 116>;
;;    succ:       116 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                115 (EH,EXECUTABLE)

;;   basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 114, next block 116, flags: (NEW)
;;    pred:       114 (EH,EXECUTABLE)
<L67>: [LP 49]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 116, loop depth 1, count 0, freq 377, maybe hot
;;    prev block 115, next block 117, flags: (NEW, REACHABLE)
;;    pred:       114 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.51366 => &_ZSt4coutD.23717
  # DEBUG __strD.51367 => &argD.38299
  # VUSE <.MEM_89>
  _52 = MEM[(long unsigned intD.14 *)&argD.38299 + 8B];
  # DEBUG D#2ptD.0 => &argD.38299
  # DEBUG thisD.46951 => D#2ptD.0
  _65 = (long intD.12) _52;
  # DEBUG thisD.46948 => &argD.38299
  # VUSE <.MEM_89>
  # PT = nonlocal escaped null { D.38299 } (escaped)
  _66 = MEM[(charD.10 * *)&argD.38299];
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.46885 => D#3ptD.0
  [LP 50] # .MEM_90 = VDEF <.MEM_89>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _67 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (&_ZSt4coutD.23717, _66, _65);
  goto <bb 118>;
;;    succ:       118 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                117 (EH,EXECUTABLE)

;;   basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 116, next block 118, flags: (NEW)
;;    pred:       116 (EH,EXECUTABLE)
<L68>: [LP 50]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 118, loop depth 1, count 0, freq 377, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       116 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.51369 => _67
  # DEBUG __pfD.51370 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.55808 => _67
  # VUSE <.MEM_90>
  # PT = nonlocal escaped null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _266 = _67->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_90>
  _267 = MEM[(long intD.12 *)_266 + -24B];
  # RANGE [0, 18446744073709551615]
  _268 = (sizetype) _267;
  # PT = nonlocal escaped 
  _269 = _67 + _268;
  # DEBUG thisD.55811 => _269
  # DEBUG __cD.55812 => 10
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  _91 = MEM[(const struct basic_iosD.7355 *)_269]._M_ctypeD.20959;
  # DEBUG __fD.55813 => _91
  if (_91 == 0B)
    goto <bb 119>;
  else
    goto <bb 121>;
;;    succ:       119 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                121 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 118, next block 120, flags: (NEW, REACHABLE)
;;    pred:       118 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 51] # .MEM_450 = VDEF <.MEM_90>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2851 ();
;;    succ:       120 (EH,EXECUTABLE)

;;   basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 119, next block 121, flags: (NEW)
;;    pred:       119 (EH,EXECUTABLE)
<L69>: [LP 51]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 121, loop depth 1, count 0, freq 377, maybe hot
;;    prev block 120, next block 122, flags: (NEW, REACHABLE)
;;    pred:       118 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55815 => _91
  # DEBUG __cD.55814 => 10
  # VUSE <.MEM_90>
  _274 = MEM[(const struct ctypeD.7662 *)_91]._M_widen_okD.17874;
  if (_274 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;
;;    succ:       122 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                123 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 122, loop depth 1, count 0, freq 230, maybe hot
;;    prev block 121, next block 123, flags: (NEW, REACHABLE)
;;    pred:       121 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_90>
  _277 = MEM[(const struct ctypeD.7662 *)_91]._M_widenD.17875[10];
  pretmp_407 = (intD.9) _277;
  goto <bb 129>;
;;    succ:       129 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 123, loop depth 1, count 0, freq 147, maybe hot
;;    prev block 122, next block 124, flags: (NEW, REACHABLE)
;;    pred:       121 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55817 => _91
  # DEBUG __cD.55818 => 10
  [LP 52] # .MEM_431 = VDEF <.MEM_90>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_91);
  goto <bb 125>;
;;    succ:       125 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                124 (EH,EXECUTABLE)

;;   basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 123, next block 125, flags: (NEW)
;;    pred:       123 (EH,EXECUTABLE)
<L70>: [LP 52]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 125, loop depth 1, count 0, freq 147, maybe hot
;;    prev block 124, next block 126, flags: (NEW, REACHABLE)
;;    pred:       123 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_431>
  # PT = nonlocal escaped 
  _282 = MEM[(const struct ctypeD.7662 *)_91].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_431>
  # PT = nonlocal escaped 
  _283 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_282 + 48B];
  # PT = anything 
  PROF_287 = [obj_type_ref] OBJ_TYPE_REF(_283;(const struct ctypeD.7662)_91->6);
  if (PROF_287 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 129>;
  else
    goto <bb 126>;
;;    succ:       129 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                126 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 126, loop depth 1, count 0, freq 29, maybe hot
;;    prev block 125, next block 127, flags: (NEW, REACHABLE)
;;    pred:       125 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  [LP 53] # .MEM_432 = VDEF <.MEM_431>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _289 = OBJ_TYPE_REF(_283;(const struct ctypeD.7662)_91->6) (_91, 10);
  goto <bb 128>;
;;    succ:       128 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                127 (EH,EXECUTABLE)

;;   basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 126, next block 128, flags: (NEW)
;;    pred:       126 (EH,EXECUTABLE)
<L71>: [LP 53]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 128, loop depth 1, count 0, freq 29, maybe hot
;;    prev block 127, next block 129, flags: (NEW)
;;    pred:       126 [100.0%]  (FALLTHRU,EXECUTABLE)
  pretmp_103 = (intD.9) _289;
;;    succ:       129 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 129, loop depth 1, count 0, freq 377, maybe hot
;;    prev block 128, next block 130, flags: (NEW, REACHABLE)
;;    pred:       122 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                125 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                128 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_320 = PHI <.MEM_90(122), .MEM_431(125), .MEM_432(128)>
  # RANGE [-128, 127]
  # prephitmp_104 = PHI <pretmp_407(122), 10(125), pretmp_103(128)>
  [LP 54] # .MEM_436 = VDEF <.MEM_320>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _272 = _ZNSo3putEcD.21670 (_67, prephitmp_104);
  goto <bb 131>;
;;    succ:       131 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                130 (EH,EXECUTABLE)

;;   basic block 130, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 129, next block 131, flags: (NEW)
;;    pred:       129 (EH,EXECUTABLE)
<L72>: [LP 54]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 131, loop depth 1, count 0, freq 377, maybe hot
;;    prev block 130, next block 132, flags: (NEW, REACHABLE)
;;    pred:       129 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.55809 => _272
  [LP 55] # .MEM_437 = VDEF <.MEM_436>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_272);
  goto <bb 133>;
;;    succ:       133 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                132 (EH,EXECUTABLE)

;;   basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 131, next block 133, flags: (NEW)
;;    pred:       131 (EH,EXECUTABLE)
<L73>: [LP 55]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 133, loop depth 1, count 0, freq 377, maybe hot
;;    prev block 132, next block 134, flags: (NEW, REACHABLE)
;;    pred:       131 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#42ptD.0 => &D.38415
  # DEBUG thisD.51372 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # VUSE <.MEM_437>
  # PT = nonlocal escaped 
  _53 = *_33;
  # DEBUG D#400ptD.0 => &D.38415
  # DEBUG thisD.55823 => &D.38416
  # DEBUG __sD.55824 => _53
  # DEBUG __aD.55825 => D#400ptD.0
  # DEBUG D#399ptD.0 => D#400ptD.0
  # DEBUG thisD.55835 => &D.38416
  # DEBUG D#397ptD.0 => &D.38416._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#399ptD.0
  # DEBUG thisD.55838 => D#397ptD.0
  # DEBUG __datD.55837 => &D.38416.D.11539._M_local_bufD.11541
  # DEBUG __aD.55836 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#397ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_439 = VDEF <.MEM_437>
  MEM[(struct _Alloc_hiderD.11518 *)&D.38416]._M_pD.11525 = &D.38416.D.11539._M_local_bufD.11541;
  if (_53 != 0B)
    goto <bb 134>;
  else
    goto <bb 167>;
;;    succ:       134 [78.4%]  (TRUE_VALUE,EXECUTABLE)
;;                167 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 134, loop depth 1, count 0, freq 376, maybe hot
;;    prev block 133, next block 135, flags: (NEW, REACHABLE)
;;    pred:       133 [78.4%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sD.55834 => _53
  # VUSE <.MEM_439>
  # RANGE [0, 18446744073709551615]
  # USE = nonlocal escaped 
  _293 = strlenD.1037 (_53);
  # DEBUG D#656ptD.0 => _53 + _293
  # DEBUG thisD.55828 => &D.38416
  # DEBUG __begD.55827 => _53
  # DEBUG __endD.55826 => D#656ptD.0
  # DEBUG thisD.55832 => &D.38416
  # DEBUG __begD.55831 => _53
  # DEBUG __endD.55830 => D#656ptD.0
  # DEBUG thisD.55839 => &D.38416
  # DEBUG __begD.55840 => _53
  # DEBUG __endD.55841 => D#656ptD.0
  # DEBUG __ptrD.51229 => _53
  # DEBUG __firstD.55865 => _53
  # DEBUG __lastD.55864 => D#656ptD.0
  # DEBUG D#393ptD.0 => &__firstD.55865
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.55867 => _53
  # DEBUG __lastD.55866 => D#656ptD.0
  # .MEM_440 = VDEF <.MEM_439>
  __dnewD.55842 = _293;
  if (_293 > 15)
    goto <bb 135>;
  else
    goto <bb 138>;
;;    succ:       135 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                138 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 135, loop depth 1, count 0, freq 109, maybe hot
;;    prev block 134, next block 136, flags: (NEW, REACHABLE)
;;    pred:       134 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 56] # .MEM_441 = VDEF <.MEM_440>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _301 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.38416, &__dnewD.55842, 0);
  goto <bb 137>;
;;    succ:       137 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                136 (EH,EXECUTABLE)

;;   basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 135, next block 137, flags: (NEW)
;;    pred:       135 (EH,EXECUTABLE)
<L74>: [LP 56]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 137, loop depth 1, count 0, freq 109, maybe hot
;;    prev block 136, next block 138, flags: (NEW, REACHABLE)
;;    pred:       135 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.38416
  # DEBUG __pD.55861 => _301
  # DEBUG thisD.55860 => D#6ptD.0
  # .MEM_442 = VDEF <.MEM_441>
  MEM[(charD.10 * *)&D.38416] = _301;
  # VUSE <.MEM_442>
  __dnew.111_302 = __dnewD.55842;
  # DEBUG D#7ptD.0 => &D.38416
  # DEBUG __capacityD.55863 => __dnew.111_302
  # DEBUG thisD.55862 => D#7ptD.0
  # .MEM_443 = VDEF <.MEM_442>
  MEM[(size_typeD.11502 *)&D.38416 + 16B] = __dnew.111_302;
  # DEBUG D#3ptD.0 => &D.38416
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55845 => _301
  # DEBUG __k1D.55844 => _53
  # DEBUG __k2D.55843 => D#656ptD.0
  # DEBUG __dD.55848 => _301
  # DEBUG __sD.55847 => _53
  # DEBUG __nD.55846 => _293
  goto <bb 140>;
;;    succ:       140 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 138, loop depth 1, count 0, freq 267, maybe hot
;;    prev block 137, next block 139, flags: (NEW, REACHABLE)
;;    pred:       134 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.38416
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55845 => &D.38416.D.11539._M_local_bufD.11541
  # DEBUG __k1D.55844 => _53
  # DEBUG __k2D.55843 => D#656ptD.0
  # DEBUG __dD.55848 => &D.38416.D.11539._M_local_bufD.11541
  # DEBUG __sD.55847 => _53
  # DEBUG __nD.55846 => _293
  if (_293 == 1)
    goto <bb 139>;
  else
    goto <bb 140>;
;;    succ:       139 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                140 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 139, loop depth 1, count 0, freq 142, maybe hot
;;    prev block 138, next block 140, flags: (NEW, REACHABLE)
;;    pred:       138 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_440>
  _304 = MEM[(const char_typeD.6439 &)_53];
  # DEBUG D#13ptD.0 => _53
  # DEBUG __c1D.55853 => &D.38416.D.11539._M_local_bufD.11541
  # DEBUG __c2D.55852 => D#13ptD.0
  # .MEM_444 = VDEF <.MEM_440>
  MEM[(char_typeD.6439 &)&D.38416 + 16] = _304;
  goto <bb 141>;
;;    succ:       141 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 140, loop depth 1, count 0, freq 234, maybe hot
;;    prev block 139, next block 141, flags: (NEW, REACHABLE)
;;    pred:       138 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                137 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38416 } (escaped)
  # _196 = PHI <&D.38416.D.11539._M_local_bufD.11541(138), _301(137)>
  # .MEM_164 = PHI <.MEM_440(138), .MEM_443(137)>
  # DEBUG D#3ptD.0 => &D.38416
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.55845 => _196
  # DEBUG __k1D.55844 => _53
  # DEBUG __k2D.55843 => D#656ptD.0
  # DEBUG __dD.55848 => _196
  # DEBUG __sD.55847 => _53
  # DEBUG __nD.55846 => _293
  # DEBUG __s1D.55851 => _196
  # DEBUG __s2D.55850 => _53
  # DEBUG __nD.55849 => _293
  # .MEM_445 = VDEF <.MEM_164>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  memcpyD.992 (_196, _53, _293);
  # VUSE <.MEM_445>
  pretmp_105 = __dnewD.55842;
  # VUSE <.MEM_445>
  pretmp_398 = MEM[(charD.10 * *)&D.38416];
;;    succ:       141 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 141, loop depth 1, count 0, freq 376, maybe hot
;;    prev block 140, next block 142, flags: (NEW, REACHABLE)
;;    pred:       139 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                140 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_322 = PHI <.MEM_444(139), .MEM_445(140)>
  # prephitmp_106 = PHI <_293(139), pretmp_105(140)>
  # PT = nonlocal escaped null { D.38416 } (escaped)
  # prephitmp_400 = PHI <&D.38416.D.11539._M_local_bufD.11541(139), pretmp_398(140)>
  # DEBUG D#653ptD.0 => __dnewD.55842
  # DEBUG thisD.55855 => &D.38416
  # DEBUG __nD.55854 => D#653ptD.0
  # DEBUG D#5ptD.0 => &D.38416
  # DEBUG __lengthD.55857 => D#653ptD.0
  # DEBUG thisD.55856 => D#5ptD.0
  # .MEM_446 = VDEF <.MEM_322>
  MEM[(size_typeD.11502 *)&D.38416 + 8B] = prephitmp_106;
  # DEBUG D#3ptD.0 => &D.38416
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38416 } (escaped)
  _307 = prephitmp_400 + prephitmp_106;
  # DEBUG __c1D.55859 => _307
  # DEBUG __c2D.55858 => D#13ptD.0
  # .MEM_447 = VDEF <.MEM_446>
  MEM[(char_typeD.6439 &)_307] = 0;
  # .MEM_448 = VDEF <.MEM_447>
  __dnewD.55842 ={v} {CLOBBER};
  [LP 10] # .MEM_55 = VDEF <.MEM_448>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZN13Configuration11ParseStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.35297 (cf_28(D), &D.38416);
;;    succ:       158 (EH,EXECUTABLE)
;;                142 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 142, loop depth 1, count 0, freq 376, maybe hot
;;    prev block 141, next block 143, flags: (NEW, REACHABLE)
;;    pred:       141 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.51375 => &D.38416
  # DEBUG thisD.51376 => &D.38416
  # DEBUG thisD.51385 => &D.38416
  # VUSE <.MEM_55>
  # PT = nonlocal escaped null { D.38416 } (escaped)
  _58 = MEM[(charD.10 * *)&D.38416];
  # DEBUG D#3ptD.0 => &D.38416
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51386 => &D.38416
  if (&D.38416.D.11539._M_local_bufD.11541 != _58)
    goto <bb 143>;
  else
    goto <bb 144>;
;;    succ:       143 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                144 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 143, loop depth 1, count 0, freq 263, maybe hot
;;    prev block 142, next block 144, flags: (NEW, REACHABLE)
;;    pred:       142 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.38416.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51378 => &D.38416
  # DEBUG __sizeD.51377 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.38416
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.38416
  # DEBUG D#183ptD.0 => &D.38416._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51381 => _58
  # DEBUG __aD.51379 => D#181ptD.0
  # DEBUG __nD.51380 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51384 => _58
  # DEBUG thisD.51382 => D#177ptD.0
  # DEBUG D.51383 => D#178ptD.0
  # .MEM_92 = VDEF <.MEM_55>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZdlPvD.2766 (_58);
;;    succ:       144 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 144, loop depth 1, count 0, freq 376, maybe hot
;;    prev block 143, next block 145, flags: (NEW, REACHABLE)
;;    pred:       142 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                143 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_68 = PHI <.MEM_55(142), .MEM_92(143)>
  # DEBUG D#187ptD.0 => &D.38416._M_dataplusD.11519
  # DEBUG thisD.51387 => D#187ptD.0
  # DEBUG thisD.51388 => D#187ptD.0
  # DEBUG thisD.51389 => D#187ptD.0
  # .MEM_57 = VDEF <.MEM_68>
  D.38416 ={v} {CLOBBER};
  # DEBUG thisD.51373 => &D.38415
  # DEBUG thisD.51374 => &D.38415
;;    succ:       145 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 145, loop depth 1, count 0, freq 1035, maybe hot
;;    prev block 144, next block 146, flags: (NEW, REACHABLE)
;;    pred:       109 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                113 [48.8%]  (FALSE_VALUE,EXECUTABLE)
;;                144 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1]
  # rc_2 = PHI <1(109), rc_206(113), rc_206(144)>
  # .MEM_6 = PHI <.MEM_47(109), .MEM_19(113), .MEM_57(144)>
  # DEBUG rcD.38297 => rc_2
  # DEBUG thisD.51390 => &argD.38299
  # DEBUG thisD.51391 => &argD.38299
  # DEBUG thisD.51400 => &argD.38299
  # VUSE <.MEM_6>
  # PT = nonlocal escaped null { D.38299 } (escaped)
  _56 = MEM[(charD.10 * *)&argD.38299];
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51401 => &argD.38299
  if (&argD.38299.D.11539._M_local_bufD.11541 != _56)
    goto <bb 146>;
  else
    goto <bb 147>;
;;    succ:       146 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                147 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 146, loop depth 1, count 0, freq 723, maybe hot
;;    prev block 145, next block 147, flags: (NEW, REACHABLE)
;;    pred:       145 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => argD.38299.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51393 => &argD.38299
  # DEBUG __sizeD.51392 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &argD.38299
  # DEBUG D#183ptD.0 => &argD.38299._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51396 => _56
  # DEBUG __aD.51394 => D#181ptD.0
  # DEBUG __nD.51395 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51399 => _56
  # DEBUG thisD.51397 => D#177ptD.0
  # DEBUG D.51398 => D#178ptD.0
  # .MEM_102 = VDEF <.MEM_6>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZdlPvD.2766 (_56);
;;    succ:       147 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 147, loop depth 1, count 0, freq 1035, maybe hot
;;    prev block 146, next block 148, flags: (NEW, REACHABLE)
;;    pred:       145 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                146 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_69 = PHI <.MEM_6(145), .MEM_102(146)>
  # DEBUG D#187ptD.0 => &argD.38299._M_dataplusD.11519
  # DEBUG thisD.51402 => D#187ptD.0
  # DEBUG thisD.51403 => D#187ptD.0
  # DEBUG thisD.51404 => D#187ptD.0
  # .MEM_61 = VDEF <.MEM_69>
  argD.38299 ={v} {CLOBBER};
  i_62 = i_29 + 1;
  # DEBUG iD.38298 => i_62
  # DEBUG iD.38298 => i_62
  # DEBUG rcD.38297 => rc_2
  if (argc_11(D) <= i_62)
    goto <bb 148>;
  else
    goto <bb 4>;
;;    succ:       148 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 148, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 147, next block 149, flags: (NEW)
;;    pred:       147 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # rc_300 = PHI <rc_2(147)>
;;    succ:       149 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 149, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 148, next block 150, flags: (NEW, REACHABLE)
;;    pred:       148 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # rc_438 = PHI <rc_300(148), 0(2)>
  # .MEM_112 = PHI <.MEM_61(148), .MEM_10(D)(2)>
  # VUSE <.MEM_112>
  return rc_438;
;;    succ:       EXIT [100.0%] 

;;   basic block 150, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 149, next block 151, flags: (NEW)
;;    pred:       21 (EH,EXECUTABLE)
<L32>: [LP 20]
;;    succ:       151 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 151, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 150, next block 152, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                150 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_323 = PHI <.MEM_347(28), .MEM_344(150), .MEM_429(24), .MEM_346(26)>
<L14>:
  # DEBUG thisD.51407 => &D.38306
  # DEBUG thisD.51408 => &D.38306
  # DEBUG thisD.51417 => &D.38306
  # VUSE <.MEM_323>
  # PT = nonlocal escaped null { D.38306 } (escaped)
  _64 = MEM[(charD.10 * *)&D.38306];
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51418 => &D.38306
  if (&D.38306.D.11539._M_local_bufD.11541 != _64)
    goto <bb 152>;
  else
    goto <bb 153>;
;;    succ:       152 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                153 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 152, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 151, next block 153, flags: (NEW, REACHABLE)
;;    pred:       151 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.38306.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51410 => &D.38306
  # DEBUG __sizeD.51409 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.38306
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.38306
  # DEBUG D#183ptD.0 => &D.38306._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51413 => _64
  # DEBUG __aD.51411 => D#181ptD.0
  # DEBUG __nD.51412 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51416 => _64
  # DEBUG thisD.51414 => D#177ptD.0
  # DEBUG D.51415 => D#178ptD.0
  # .MEM_84 = VDEF <.MEM_323>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZdlPvD.2766 (_64);
;;    succ:       153 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 153, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 152, next block 154, flags: (NEW, REACHABLE)
;;    pred:       151 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                152 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_70 = PHI <.MEM_323(151), .MEM_84(152)>
  # DEBUG D#187ptD.0 => &D.38306._M_dataplusD.11519
  # DEBUG thisD.51419 => D#187ptD.0
  # DEBUG thisD.51420 => D#187ptD.0
  # DEBUG thisD.51421 => D#187ptD.0
  # .MEM_49 = VDEF <.MEM_70>
  D.38306 ={v} {CLOBBER};
  [LP 57] resx 8
;;    succ:       154 (EH,EXECUTABLE)

;;   basic block 154, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 153, next block 155, flags: (NEW)
;;    pred:       153 (EH,EXECUTABLE)
<L75>: [LP 57]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 154, next block 156, flags: (NEW)
;;    pred:       50 (EH,EXECUTABLE)
<L45>: [LP 29]
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 155, next block 157, flags: (NEW, REACHABLE)
;;    pred:       155 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                77 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                80 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                86 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                100 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                95 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                98 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                92 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_78(155), .MEM_370(56), .MEM_378(70), .MEM_81(77), .MEM_82(80), .MEM_381(86), .MEM_389(100), .MEM_39(75), .MEM_369(53), .MEM_373(65), .MEM_377(68), .MEM_420(58), .MEM_372(62), .MEM_380(83), .MEM_384(95), .MEM_388(98), .MEM_419(88), .MEM_383(92)>
<L17>:
  # .MEM_42 = VDEF <.MEM_8>
  cD.38413 ={v} {CLOBBER};
  [MNT 14] # .MEM_48 = VDEF <.MEM_42>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZNSt14basic_ifstreamIcSt11char_traitsIcEED1EvD.27118 (&inD.38307);
  [LP 58] resx 11
;;    succ:       157 (EH,EXECUTABLE)

;;   basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 156, next block 158, flags: (NEW)
;;    pred:       156 (EH,EXECUTABLE)
<L76>: [LP 58]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 157, next block 159, flags: (NEW, REACHABLE)
;;    pred:       141 (EH,EXECUTABLE)
<L19>: [LP 10]
  # DEBUG thisD.51424 => &D.38416
  # DEBUG thisD.51425 => &D.38416
  # DEBUG thisD.51434 => &D.38416
  # VUSE <.MEM_55>
  # PT = nonlocal escaped null { D.38416 } (escaped)
  _50 = MEM[(charD.10 * *)&D.38416];
  # DEBUG D#3ptD.0 => &D.38416
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51435 => &D.38416
  if (&D.38416.D.11539._M_local_bufD.11541 != _50)
    goto <bb 159>;
  else
    goto <bb 160>;
;;    succ:       159 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                160 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 158, next block 160, flags: (NEW, REACHABLE)
;;    pred:       158 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.38416.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51427 => &D.38416
  # DEBUG __sizeD.51426 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.38416
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.38416
  # DEBUG D#183ptD.0 => &D.38416._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51430 => _50
  # DEBUG __aD.51428 => D#181ptD.0
  # DEBUG __nD.51429 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51433 => _50
  # DEBUG thisD.51431 => D#177ptD.0
  # DEBUG D.51432 => D#178ptD.0
  # .MEM_97 = VDEF <.MEM_55>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZdlPvD.2766 (_50);
;;    succ:       160 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 159, next block 161, flags: (NEW, REACHABLE)
;;    pred:       158 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                159 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_55(158), .MEM_97(159)>
  # DEBUG D#187ptD.0 => &D.38416._M_dataplusD.11519
  # DEBUG thisD.51436 => D#187ptD.0
  # DEBUG thisD.51437 => D#187ptD.0
  # DEBUG thisD.51438 => D#187ptD.0
  # .MEM_59 = VDEF <.MEM_71>
  D.38416 ={v} {CLOBBER};
  [LP 59] resx 17
;;    succ:       161 (EH,EXECUTABLE)

;;   basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 160, next block 162, flags: (NEW)
;;    pred:       160 (EH,EXECUTABLE)
<L77>: [LP 59]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 161, next block 163, flags: (NEW)
;;    pred:       12 (EH,EXECUTABLE)
<L30>: [LP 18]
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 162, next block 164, flags: (NEW, REACHABLE)
;;    pred:       162 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                115 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                117 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                132 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                136 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                161 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                154 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                157 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                112 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                168 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                104 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                127 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                130 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                120 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                124 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_9 = PHI <.MEM_19(162), .MEM_89(115), .MEM_90(117), .MEM_437(132), .MEM_441(136), .MEM_59(161), .MEM_427(49), .MEM_49(154), .MEM_336(16), .MEM_48(157), .MEM_417(112), .MEM_449(168), .MEM_405(104), .MEM_432(127), .MEM_436(130), .MEM_450(120), .MEM_431(124)>
<L21>:
  # .MEM_51 = VDEF <.MEM_9>
  inD.38307 ={v} {CLOBBER};
  # DEBUG thisD.51441 => &argD.38299
  # DEBUG thisD.51442 => &argD.38299
  # DEBUG thisD.51451 => &argD.38299
  # VUSE <.MEM_51>
  # PT = nonlocal escaped null { D.38299 } (escaped)
  _60 = MEM[(charD.10 * *)&argD.38299];
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51452 => &argD.38299
  if (&argD.38299.D.11539._M_local_bufD.11541 != _60)
    goto <bb 164>;
  else
    goto <bb 165>;
;;    succ:       164 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                165 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 164, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 163, next block 165, flags: (NEW, REACHABLE)
;;    pred:       163 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => argD.38299.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51444 => &argD.38299
  # DEBUG __sizeD.51443 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &argD.38299
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &argD.38299
  # DEBUG D#183ptD.0 => &argD.38299._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51447 => _60
  # DEBUG __aD.51445 => D#181ptD.0
  # DEBUG __nD.51446 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51450 => _60
  # DEBUG thisD.51448 => D#177ptD.0
  # DEBUG D.51449 => D#178ptD.0
  # .MEM_107 = VDEF <.MEM_51>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZdlPvD.2766 (_60);
;;    succ:       165 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 164, next block 166, flags: (NEW, REACHABLE)
;;    pred:       163 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                164 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_51(163), .MEM_107(164)>
  # DEBUG D#187ptD.0 => &argD.38299._M_dataplusD.11519
  # DEBUG thisD.51453 => D#187ptD.0
  # DEBUG thisD.51454 => D#187ptD.0
  # DEBUG thisD.51455 => D#187ptD.0
  resx 5
;;    succ:      

;;   basic block 166, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 165, next block 167, flags: (NEW, REACHABLE)
;;    pred:       3 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_428 = PHI <.MEM_285(3), .MEM_324(4)>
  # DEBUG thisD.55624 => &argD.38299
  # DEBUG __begD.55623 => _375
  # DEBUG __endD.55622 => -1B
  # DEBUG thisD.55628 => &argD.38299
  # DEBUG __begD.55627 => _375
  # DEBUG __endD.55626 => -1B
  # DEBUG thisD.55635 => &argD.38299
  # DEBUG __begD.55636 => _375
  # DEBUG __endD.55637 => -1B
  # DEBUG __ptrD.51229 => _375
  # DEBUG thisD.55624 => &argD.38299
  # DEBUG __begD.55623 => _375
  # DEBUG __endD.55622 => -1B
  # DEBUG thisD.55628 => &argD.38299
  # DEBUG __begD.55627 => _375
  # DEBUG __endD.55626 => -1B
  # DEBUG thisD.55635 => &argD.38299
  # DEBUG __begD.55636 => _375
  # DEBUG __endD.55637 => -1B
  # DEBUG __ptrD.51229 => _375
  # .MEM_451 = VDEF <.MEM_428>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 167, loop depth 0, count 0, freq 48, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 166, next block 168, flags: (NEW, REACHABLE)
;;    pred:       133 [21.6%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55828 => &D.38416
  # DEBUG __begD.55827 => 0B
  # DEBUG __endD.55826 => -1B
  # DEBUG thisD.55832 => &D.38416
  # DEBUG __begD.55831 => 0B
  # DEBUG __endD.55830 => -1B
  # DEBUG thisD.55839 => &D.38416
  # DEBUG __begD.55840 => 0B
  # DEBUG __endD.55841 => -1B
  # DEBUG __ptrD.51229 => 0B
  # DEBUG thisD.55828 => &D.38416
  # DEBUG __begD.55827 => 0B
  # DEBUG __endD.55826 => -1B
  # DEBUG thisD.55832 => &D.38416
  # DEBUG __begD.55831 => 0B
  # DEBUG __endD.55830 => -1B
  # DEBUG thisD.55839 => &D.38416
  # DEBUG __begD.55840 => 0B
  # DEBUG __endD.55841 => -1B
  # DEBUG __ptrD.51229 => 0B
  [LP 3] # .MEM_449 = VDEF <.MEM_439>
  # USE = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  # CLB = nonlocal null { D.16832 D.21060 D.23717 D.27057 D.27130 D.38299 D.38306 D.38307 D.38413 D.38416 D.51353 D.55638 D.55683 D.55842 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       168 (EH,EXECUTABLE)

;;   basic block 168, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 167, next block 1, flags: (NEW)
;;    pred:       167 (EH,EXECUTABLE)
<L78>: [LP 3]
  goto <bb 163> (<L21>);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function void Configuration::WriteFile(const string&) (_ZN13Configuration9WriteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1750, decl_uid=35308, cgraph_uid=436, symbol_order=438)


Pass statistics:
----------------

void Configuration::WriteFile(const string&) (struct ConfigurationD.32032 * const thisD.38423, const struct stringD.2845 & filenameD.38421)
Eh tree:
   1 cleanup land:{1,<L15>}
     19 cleanup land:{8,<L22>},{5,<L29>}
       20 cleanup land:{9,<L23>},{6,<L28>}
         22 cleanup land:{12,<L26>},{11,<L25>},{10,<L24>},{7,<L27>}
         21 must_not_throw
     18 must_not_throw
{
  char_typeD.17868 D.56040;
  charD.10 __cD.56039;
  char_typeD.17868 D.56037;
  charD.10 __cD.56036;
  char_typeD.20947 D.56034;
  struct basic_ostreamD.7361 & D.56028;
  char_typeD.17868 D.56025;
  charD.10 __cD.56024;
  char_typeD.17868 D.56022;
  charD.10 __cD.56021;
  char_typeD.20947 D.56019;
  struct basic_ostreamD.7361 & D.56013;
  char_typeD.17868 D.56010;
  charD.10 __cD.56009;
  char_typeD.17868 D.56007;
  charD.10 __cD.56006;
  char_typeD.20947 D.56004;
  struct basic_ostreamD.7361 & D.55998;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47841;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47837;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47833;
  const size_typeD.11502 _8;
  voidD.45 * _10;
  intD.9 pretmp_11;
  charD.10 * const _14;
  charD.10 _16;
  const size_typeD.11502 _17;
  const size_typeD.11502 _20;
  charD.10 * const _22;
  intD.9 _23;
  struct basic_ostreamD.7361 & _25;
  const size_typeD.11502 _28;
  doubleD.39 _30;
  struct __ostream_typeD.21606 & _31;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _34;
  intD.9 (*__vtbl_ptr_typeD.2760) () _35;
  long intD.12 _38;
  charD.10 * const _39;
  struct basic_ostreamD.7361 & _40;
  long intD.12 _41;
  charD.10 * const _42;
  struct basic_ostreamD.7361 & _43;
  long intD.12 _45;
  charD.10 * const _46;
  struct basic_ostreamD.7361 & _47;
  long intD.12 _49;
  charD.10 * const _50;
  struct basic_ostreamD.7361 & _51;
  const struct __ctype_typeD.20952 * _58;
  const struct __ctype_typeD.20952 * _63;
  const struct __ctype_typeD.20952 * _69;
  struct ios_baseD.7294 * _70;
  struct basic_ostreamD.7361 * _71;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.155_72;
  long intD.12 _73;
  sizetype iftmp.156_74;
  struct basic_iosD.7355 * _75;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.157_76;
  struct __filebuf_typeD.27142 * _77;
  struct basic_iosD.7355 * _79;
  long intD.12 _80;
  sizetype iftmp.161_81;
  struct basic_iosD.7355 * _82;
  intD.9 pretmp_83;
  intD.9 prephitmp_84;
  struct __filebuf_typeD.26924 * _86;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _87;
  long intD.12 _88;
  sizetype _89;
  struct basic_iosD.7355 * _90;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _91;
  long intD.12 _92;
  sizetype _93;
  struct basic_iosD.7355 * _94;
  const iostateD.15838 _95;
  intD.9 __a.104_96;
  intD.9 _97;
  _Ios_IostateD.15710 _98;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _99;
  long intD.12 _100;
  sizetype _101;
  struct basic_iosD.7355 * _102;
  struct _Rb_tree_node_baseD.27676 * _103;
  struct basic_ostreamD.7361 & _105;
  charD.10 _107;
  char_typeD.17868 _110;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _115;
  intD.9 (*__vtbl_ptr_typeD.2760) () _116;
  voidD.45 * PROF_120;
  char_typeD.17868 _122;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _125;
  long intD.12 _126;
  sizetype _127;
  struct basic_iosD.7355 * _128;
  struct _Rb_tree_node_baseD.27676 * _129;
  struct basic_ostreamD.7361 & _131;
  charD.10 _133;
  char_typeD.17868 _136;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _141;
  intD.9 (*__vtbl_ptr_typeD.2760) () _142;
  intD.9 pretmp_144;
  voidD.45 * PROF_146;
  char_typeD.17868 _148;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _151;
  long intD.12 _152;
  sizetype _153;
  struct basic_iosD.7355 * _154;
  struct basic_ostreamD.7361 & _157;
  struct _Rb_tree_node_baseD.27676 * _158;
  charD.10 _159;
  char_typeD.17868 _162;
  intD.9 pretmp_164;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _167;
  intD.9 (*__vtbl_ptr_typeD.2760) () _168;
  voidD.45 * PROF_172;
  char_typeD.17868 _174;
  intD.9 pretmp_180;
  intD.9 pretmp_182;
  intD.9 prephitmp_224;
  intD.9 prephitmp_225;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.47711 => filename_7(D)
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _22 = MEM[(charD.10 * *)filename_7(D)];
  # DEBUG D#3ptD.0 => filename_7(D)
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __aD.47708 => 16
  # DEBUG __bD.47709 => 32
  # .MEM_9 = VDEF <.MEM_6(D)>
  # PT = { D.56051 } (escaped heap)
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _10 = _ZnwmD.2764 (512);
  # DEBUG thisD.55969 => _10
  # DEBUG __sD.55970 => _22
  # DEBUG __modeD.55971 => 48
  # DEBUG D#30ptD.0 => &MEM[(struct basic_ofstreamD.7377 *)_10].D.27206
  # DEBUG thisD.55975 => D#30ptD.0
  # PT = { D.56051 } (escaped heap)
  _70 = &MEM[(struct basic_iosD.7355 *)_10 + 248B].D.21051;
  # .MEM_184 = VDEF <.MEM_9>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt8ios_baseC2EvD.16016 (_70);
  # .MEM_185 = VDEF <.MEM_184>
  MEM[(struct basic_iosD.7355 *)_10 + 248B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.21060 + 16B];
  # .MEM_186 = VDEF <.MEM_185>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_tieD.20955 = 0B;
  # .MEM_187 = VDEF <.MEM_186>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_fillD.20956 = 0;
  # .MEM_188 = VDEF <.MEM_187>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_fill_initD.20957 = 0;
  # .MEM_189 = VDEF <.MEM_188>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_streambufD.20958 = 0B;
  # .MEM_190 = VDEF <.MEM_189>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_ctypeD.20959 = 0B;
  # .MEM_191 = VDEF <.MEM_190>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_num_putD.20960 = 0B;
  # .MEM_192 = VDEF <.MEM_191>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_num_getD.20961 = 0B;
  # PT = { D.56051 } (escaped heap)
  _71 = &MEM[(struct basic_ofstreamD.7377 *)_10].D.27203;
  # DEBUG thisD.55977 => _71
  # DEBUG __vtt_parmD.55976 => &MEM[(voidD.45 *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEED.27212 + 8B]
  # VUSE <.MEM_192>
  # PT = nonlocal escaped 
  iftmp.155_72 = MEM[(const voidD.45 * *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEED.27212 + 8B];
  # .MEM_193 = VDEF <.MEM_192>
  MEM[(struct basic_ostreamD.7361 *)_10]._vptr.basic_ostreamD.21735 = iftmp.155_72;
  # VUSE <.MEM_193>
  _73 = MEM[(long intD.12 *)iftmp.155_72 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.156_74 = (sizetype) _73;
  # PT = { D.56051 } (escaped heap)
  _75 = _71 + iftmp.156_74;
  # VUSE <.MEM_193>
  # PT = nonlocal escaped 
  iftmp.157_76 = MEM[(const voidD.45 * *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEED.27212 + 16B];
  # .MEM_194 = VDEF <.MEM_193>
  _75->D.21051._vptr.ios_baseD.16027 = iftmp.157_76;
  [LP 8] # .MEM_195 = VDEF <.MEM_194>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.21026 (_75, 0B);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 (EH,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_196 = VDEF <.MEM_195>
  MEM[(struct basic_ofstreamD.7377 *)_10].D.27203._vptr.basic_ostreamD.21735 = &MEM[(voidD.45 *)&_ZTVSt14basic_ofstreamIcSt11char_traitsIcEED.27207 + 24B];
  # .MEM_197 = VDEF <.MEM_196>
  MEM[(struct basic_iosD.7355 *)_10 + 248B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt14basic_ofstreamIcSt11char_traitsIcEED.27207 + 64B];
  # PT = { D.56051 } (escaped heap)
  _77 = &MEM[(struct basic_ofstreamD.7377 *)_10]._M_filebufD.27144;
  [LP 9] # .MEM_198 = VDEF <.MEM_197>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt13basic_filebufIcSt11char_traitsIcEEC1EvD.27022 (_77);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.56051 } (escaped heap)
  _79 = _10 + 248;
  [LP 10] # .MEM_199 = VDEF <.MEM_198>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.21026 (_79, _77);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.55981 => _10
  # DEBUG __sD.55982 => _22
  # DEBUG __modeD.55983 => 48
  # DEBUG __aD.55985 => 48
  # DEBUG __bD.55984 => 16
  [LP 11] # .MEM_200 = VDEF <.MEM_199>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _86 = _ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_OpenmodeD.26959 (_77, _22, 48);
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L25>: [LP 11]
  goto <bb 13> (<L19>);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_86 == 0B)
    goto <bb 8>;
  else
    goto <bb 10>;
;;    succ:       8 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 91, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#25ptD.0 => _22
  # DEBUG D#26ptD.0 => 48
  # DEBUG thisD.55986 => _10
  # DEBUG D#27ptD.0 => D#26ptD.0
  # DEBUG __modeD.55987 => D#27ptD.0
  # DEBUG D#28ptD.0 => D#25ptD.0
  # DEBUG __sD.55988 => D#28ptD.0
  # VUSE <.MEM_200>
  # PT = nonlocal escaped null { D.21060 D.27207 } (nonlocal, escaped)
  _91 = MEM[(struct basic_ofstreamD.7377 *)_10].D.27203._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_200>
  _92 = MEM[(long intD.12 *)_91 + -24B];
  # RANGE [0, 18446744073709551615]
  _93 = (sizetype) _92;
  # PT = { D.56051 } (escaped heap)
  _94 = _10 + _93;
  # DEBUG thisD.55990 => _94
  # DEBUG __stateD.55989 => 4
  # VUSE <.MEM_200>
  _95 = MEM[(_Ios_IostateD.15710 *)_94 + 32B];
  # DEBUG D#4ptD.0 => _94
  # DEBUG thisD.47094 => D#4ptD.0
  # DEBUG __aD.55992 => _95
  # DEBUG __bD.55991 => 4
  __a.104_96 = (intD.9) _95;
  # RANGE ~[0, 0]
  _97 = __a.104_96 | 4;
  # RANGE [1, 4294967295]
  _98 = (_Ios_IostateD.15710) _97;
  [LP 12] # .MEM_202 = VDEF <.MEM_200>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_IostateD.20968 (_94, _98);
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L26>: [LP 12]
  goto <bb 13> (<L19>);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 810, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       7 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_200>
  # PT = nonlocal escaped null { D.21060 D.27207 } (nonlocal, escaped)
  _87 = MEM[(struct basic_ofstreamD.7377 *)_10].D.27203._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_200>
  _88 = MEM[(long intD.12 *)_87 + -24B];
  # RANGE [0, 18446744073709551615]
  _89 = (sizetype) _88;
  # PT = { D.56051 } (escaped heap)
  _90 = _10 + _89;
  [LP 7] # .MEM_201 = VDEF <.MEM_200>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_IostateD.20968 (_90, 0);
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 (EH,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 (EH,EXECUTABLE)
<L27>: [LP 7]
  goto <bb 13> (<L19>);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L24>: [LP 10]
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_171 = PHI <.MEM_199(12), .MEM_201(11), .MEM_200(6), .MEM_202(9)>
<L19>:
  [MNT 21] # .MEM_230 = VDEF <.MEM_171>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt13basic_filebufIcSt11char_traitsIcEED1EvD.27029 (_77);
  [LP 6] resx 22
;;    succ:       14 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 (EH,EXECUTABLE)
<L28>: [LP 6]
  goto <bb 16> (<L20>);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       3 (EH,EXECUTABLE)
<L23>: [LP 9]
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_145 = PHI <.MEM_198(15), .MEM_230(14)>
<L20>:
  # DEBUG thisD.55974 => _71
  # DEBUG __vtt_parmD.55973 => &MEM[(voidD.45 *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEED.27212 + 8B]
  # VUSE <.MEM_145>
  _80 = MEM[(long intD.12 *)iftmp.155_72 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.161_81 = (sizetype) _80;
  # PT = { D.56051 } (escaped heap)
  _82 = _71 + iftmp.161_81;
  # .MEM_232 = VDEF <.MEM_145>
  _82->D.21051._vptr.ios_baseD.16027 = iftmp.157_76;
  # .MEM_233 = VDEF <.MEM_232>
  MEM[(struct  &)_10] ={v} {CLOBBER};
  [LP 5] resx 20
;;    succ:       17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L29>: [LP 5]
  goto <bb 19> (<L21>);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       2 (EH,EXECUTABLE)
<L22>: [LP 8]
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_195(18), .MEM_233(17)>
<L21>:
  # DEBUG D#29ptD.0 => &MEM[(struct basic_ofstreamD.7377 *)_10].D.27206
  # DEBUG thisD.55972 => D#29ptD.0
  # .MEM_234 = VDEF <.MEM_119>
  MEM[(struct basic_iosD.7355 *)_10 + 248B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.21060 + 16B];
  [MNT 18] # .MEM_235 = VDEF <.MEM_234>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.16024 (_70);
  # .MEM_236 = VDEF <.MEM_235>
  MEM[(struct  &)_10 + 248] ={v} {CLOBBER};
  [LP 1] resx 19
;;    succ:       51 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_228 = PHI <.MEM_202(8), .MEM_201(10)>
  # DEBUG config_outD.38425 => _10
  # DEBUG D#82ptD.0 => &this_12(D)->_str_mapD.33116
  # DEBUG thisD.47715 => D#82ptD.0
  # DEBUG D#55ptD.0 => &D#82ptD.0->_M_tD.32259
  # VUSE <.MEM_228>
  # PT = nonlocal escaped 
  i$_M_node_13 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_12(D) + 64B];
  # DEBUG D#54ptD.0 => D#55ptD.0
  # DEBUG thisD.47461 => D#54ptD.0
  # DEBUG thisD.47453 => NULL
  # DEBUG __xD.47452 => i$_M_node_13
  # DEBUG thisD.47713 => &iD.38459
  # DEBUG __itD.47714 => &D.38460
  # DEBUG i$_M_nodeD.47833 => i$_M_node_13
  # DEBUG i$_M_nodeD.47833 => i$_M_node_13
  # DEBUG D#89ptD.0 => &this_12(D)->_str_mapD.33116
  # DEBUG thisD.47723 => D#89ptD.0
  # DEBUG D#53ptD.0 => &D#89ptD.0->_M_tD.32259
  # DEBUG thisD.47724 => D#53ptD.0
  # PT = nonlocal 
  _129 = &MEM[(struct _Rb_treeD.32258 *)this_12(D) + 40B]._M_implD.32337._M_headerD.32503;
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => _129
  # DEBUG thisD.47721 => &D.38463
  # DEBUG __itD.47722 => &D.38462
  # DEBUG thisD.47718 => &iD.38459
  # DEBUG __xD.47719 => &D.38463
  if (i$_M_node_13 != _129)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_219 = PHI <.MEM_228(20), .MEM_2(31)>
  # DEBUG D#101ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47833 => D#101ptD.0
  # DEBUG D#90ptD.0 => &this_12(D)->_int_mapD.34183
  # DEBUG thisD.47760 => D#90ptD.0
  # DEBUG D#58ptD.0 => &D#90ptD.0->_M_tD.33338
  # VUSE <.MEM_219>
  # PT = nonlocal escaped 
  i$_M_node_19 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_12(D) + 112B];
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG thisD.47493 => D#57ptD.0
  # DEBUG thisD.47485 => NULL
  # DEBUG __xD.47484 => i$_M_node_19
  # DEBUG thisD.47758 => &iD.38464
  # DEBUG __itD.47759 => &D.38465
  # DEBUG i$_M_nodeD.47837 => i$_M_node_19
  # DEBUG i$_M_nodeD.47837 => i$_M_node_19
  # DEBUG D#94ptD.0 => &this_12(D)->_int_mapD.34183
  # DEBUG thisD.47768 => D#94ptD.0
  # DEBUG D#56ptD.0 => &D#94ptD.0->_M_tD.33338
  # DEBUG thisD.47769 => D#56ptD.0
  # PT = nonlocal 
  _103 = &MEM[(struct _Rb_treeD.33337 *)this_12(D) + 88B]._M_implD.33415._M_headerD.33570;
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => _103
  # DEBUG thisD.47766 => &D.38468
  # DEBUG __itD.47767 => &D.38467
  # DEBUG thisD.47763 => &iD.38464
  # DEBUG __xD.47764 => &D.38468
  if (i$_M_node_19 != _103)
    goto <bb 34>;
  else
    goto <bb 33>;
;;    succ:       34 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 820, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       20 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_206 = PHI <.MEM_228(22), .MEM_2(32)>
  # PT = nonlocal escaped 
  # i$_M_node_118 = PHI <i$_M_node_13(22), i$_M_node_44(32)>
  # DEBUG i$_M_nodeD.47833 => i$_M_node_118
  # DEBUG D#89ptD.0 => &this_12(D)->_str_mapD.33116
  # DEBUG thisD.47723 => D#89ptD.0
  # DEBUG D#53ptD.0 => &D#89ptD.0->_M_tD.32259
  # DEBUG thisD.47724 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => _129
  # DEBUG thisD.47721 => &D.38463
  # DEBUG __itD.47722 => &D.38462
  # DEBUG thisD.47718 => &iD.38459
  # DEBUG __xD.47719 => &D.38463
  # DEBUG thisD.47730 => &iD.38459
  # DEBUG thisD.47731 => i$_M_node_118
  # DEBUG D#83ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_118]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#83ptD.0
  # DEBUG D#84ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_118 + 32B].secondD.35539
  # DEBUG thisD.47727 => D#84ptD.0
  # DEBUG __posD.47728 => 0
  # VUSE <.MEM_206>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)i$_M_node_118 + 64B];
  # DEBUG D#3ptD.0 => D#84ptD.0
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_206>
  _16 = MEM[(const charD.10 &)_14];
  if (_16 != 0)
    goto <bb 24>;
  else
    goto <bb 31>;
;;    succ:       24 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 2639, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.47739 => &iD.38459
  # DEBUG thisD.47740 => i$_M_node_118
  # DEBUG D#85ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_118]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#85ptD.0
  # DEBUG D#86ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_118 + 32B].secondD.35539
  # DEBUG thisD.47736 => &iD.38459
  # DEBUG thisD.47737 => i$_M_node_118
  # DEBUG D#87ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_118]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#87ptD.0
  # DEBUG D#88ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_118 + 32B].firstD.35538
  # DEBUG __osD.47733 => _10
  # DEBUG __strD.47734 => D#88ptD.0
  # VUSE <.MEM_206>
  _8 = MEM[(long unsigned intD.14 *)i$_M_node_118 + 40B];
  # DEBUG D#2ptD.0 => D#88ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _38 = (long intD.12) _8;
  # DEBUG thisD.46948 => D#88ptD.0
  # VUSE <.MEM_206>
  # PT = nonlocal escaped 
  _39 = MEM[(charD.10 * *)i$_M_node_118 + 32B];
  # DEBUG D#3ptD.0 => D#88ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_54 = VDEF <.MEM_206>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _40 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_10, _39, _38);
  # DEBUG __outD.47742 => _40
  # DEBUG __sD.47743 => " = "
  # DEBUG __sD.47744 => " = "
  # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_40, " = ", 3);
  # DEBUG __osD.47746 => _40
  # DEBUG __strD.47747 => D#86ptD.0
  # VUSE <.MEM_55>
  _17 = MEM[(long unsigned intD.14 *)i$_M_node_118 + 72B];
  # DEBUG D#2ptD.0 => D#86ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _41 = (long intD.12) _17;
  # DEBUG thisD.46948 => D#86ptD.0
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _42 = MEM[(charD.10 * *)i$_M_node_118 + 64B];
  # DEBUG D#3ptD.0 => D#86ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_56 = VDEF <.MEM_55>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _43 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_40, _42, _41);
  # DEBUG __outD.47749 => _43
  # DEBUG __sD.47750 => ";"
  # DEBUG __sD.47751 => ";"
  # .MEM_57 = VDEF <.MEM_56>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_43, ";", 1);
  # DEBUG thisD.47753 => _43
  # DEBUG __pfD.47754 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.55996 => _43
  # VUSE <.MEM_57>
  # PT = nonlocal escaped null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _99 = _43->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_57>
  _100 = MEM[(long intD.12 *)_99 + -24B];
  # RANGE [0, 18446744073709551615]
  _101 = (sizetype) _100;
  # PT = nonlocal escaped 
  _102 = _43 + _101;
  # DEBUG thisD.55999 => _102
  # DEBUG __cD.56000 => 10
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _58 = MEM[(const struct basic_iosD.7355 *)_102]._M_ctypeD.20959;
  # DEBUG __fD.56001 => _58
  if (_58 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_231 = PHI <.MEM_57(24), .MEM_62(35), .MEM_68(44)>
  # .MEM_211 = VDEF <.MEM_231>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2851 ();
;;    succ:      

;;   basic block 26, loop depth 1, count 0, freq 2638, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56003 => _58
  # DEBUG __cD.56002 => 10
  # VUSE <.MEM_57>
  _107 = MEM[(const struct ctypeD.7662 *)_58]._M_widen_okD.17874;
  if (_107 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 1610, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_57>
  _110 = MEM[(const struct ctypeD.7662 *)_58]._M_widenD.17875[10];
  pretmp_11 = (intD.9) _110;
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 1028, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56005 => _58
  # DEBUG __cD.56006 => 10
  # .MEM_203 = VDEF <.MEM_57>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_58);
  # VUSE <.MEM_203>
  # PT = nonlocal escaped 
  _115 = MEM[(const struct ctypeD.7662 *)_58].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_203>
  # PT = nonlocal escaped 
  _116 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_115 + 48B];
  # PT = anything 
  PROF_120 = [obj_type_ref] OBJ_TYPE_REF(_116;(const struct ctypeD.7662)_58->6);
  if (PROF_120 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 30>;
  else
    goto <bb 29>;
;;    succ:       30 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 204, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_204 = VDEF <.MEM_203>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _122 = OBJ_TYPE_REF(_116;(const struct ctypeD.7662)_58->6) (_58, 10);
  pretmp_83 = (intD.9) _122;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 2638, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_179 = PHI <.MEM_57(27), .MEM_203(28), .MEM_204(29)>
  # RANGE [-128, 127]
  # prephitmp_84 = PHI <pretmp_11(27), 10(28), pretmp_83(29)>
  # .MEM_208 = VDEF <.MEM_179>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _105 = _ZNSo3putEcD.21670 (_43, prephitmp_84);
  # DEBUG __osD.55997 => _105
  # .MEM_209 = VDEF <.MEM_208>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_105);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       23 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_206(23), .MEM_209(30)>
  # DEBUG thisD.47756 => &iD.38459
  # VUSE <.MEM_2>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_44 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_118);
  # DEBUG i$_M_nodeD.47833 => i$_M_node_44
  # DEBUG i$_M_nodeD.47833 => i$_M_node_44
  # DEBUG D#89ptD.0 => &this_12(D)->_str_mapD.33116
  # DEBUG thisD.47723 => D#89ptD.0
  # DEBUG D#53ptD.0 => &D#89ptD.0->_M_tD.32259
  # DEBUG thisD.47724 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => _129
  # DEBUG thisD.47721 => &D.38463
  # DEBUG __itD.47722 => &D.38462
  # DEBUG thisD.47718 => &iD.38459
  # DEBUG __xD.47719 => &D.38463
  if (i$_M_node_44 != _129)
    goto <bb 32>;
  else
    goto <bb 21>;
;;    succ:       32 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       31 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 897, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       21 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                40 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_178 = PHI <.MEM_219(21), .MEM_218(40)>
  # DEBUG D#103ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47837 => D#103ptD.0
  # DEBUG D#95ptD.0 => &this_12(D)->_float_mapD.35250
  # DEBUG thisD.47796 => D#95ptD.0
  # DEBUG D#65ptD.0 => &D#95ptD.0->_M_tD.34405
  # VUSE <.MEM_178>
  # PT = nonlocal escaped 
  i$_M_node_27 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_12(D) + 160B];
  # DEBUG D#64ptD.0 => D#65ptD.0
  # DEBUG thisD.47544 => D#64ptD.0
  # DEBUG thisD.47536 => NULL
  # DEBUG __xD.47535 => i$_M_node_27
  # DEBUG thisD.47794 => &iD.38469
  # DEBUG __itD.47795 => &D.38470
  # DEBUG i$_M_nodeD.47841 => i$_M_node_27
  # DEBUG i$_M_nodeD.47841 => i$_M_node_27
  # DEBUG D#99ptD.0 => &this_12(D)->_float_mapD.35250
  # DEBUG thisD.47804 => D#99ptD.0
  # DEBUG D#63ptD.0 => &D#99ptD.0->_M_tD.34405
  # DEBUG thisD.47805 => D#63ptD.0
  # PT = nonlocal 
  _158 = &MEM[(struct _Rb_treeD.34404 *)this_12(D) + 136B]._M_implD.34482._M_headerD.34637;
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => _158
  # DEBUG thisD.47802 => &D.38473
  # DEBUG __itD.47803 => &D.38472
  # DEBUG thisD.47799 => &iD.38469
  # DEBUG __xD.47800 => &D.38473
  if (i$_M_node_27 != _158)
    goto <bb 43>;
  else
    goto <bb 42>;
;;    succ:       43 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       21 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 9063, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_207 = PHI <.MEM_219(34), .MEM_218(41)>
  # PT = nonlocal escaped 
  # i$_M_node_170 = PHI <i$_M_node_19(34), i$_M_node_48(41)>
  # DEBUG i$_M_nodeD.47837 => i$_M_node_170
  # DEBUG D#94ptD.0 => &this_12(D)->_int_mapD.34183
  # DEBUG thisD.47768 => D#94ptD.0
  # DEBUG D#56ptD.0 => &D#94ptD.0->_M_tD.33338
  # DEBUG thisD.47769 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => _103
  # DEBUG thisD.47766 => &D.38468
  # DEBUG __itD.47767 => &D.38467
  # DEBUG thisD.47763 => &iD.38464
  # DEBUG __xD.47764 => &D.38468
  # DEBUG thisD.47778 => &iD.38464
  # DEBUG thisD.47779 => i$_M_node_170
  # DEBUG D#91ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)i$_M_node_170]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#91ptD.0
  # VUSE <.MEM_207>
  _23 = MEM[(const struct pairD.33117 *)i$_M_node_170 + 32B].secondD.35722;
  # DEBUG thisD.47775 => &iD.38464
  # DEBUG thisD.47776 => i$_M_node_170
  # DEBUG D#92ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)i$_M_node_170]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#92ptD.0
  # DEBUG D#93ptD.0 => &MEM[(const struct pairD.33117 *)i$_M_node_170 + 32B].firstD.35721
  # DEBUG __osD.47772 => _10
  # DEBUG __strD.47773 => D#93ptD.0
  # VUSE <.MEM_207>
  _20 = MEM[(long unsigned intD.14 *)i$_M_node_170 + 40B];
  # DEBUG D#2ptD.0 => D#93ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _45 = (long intD.12) _20;
  # DEBUG thisD.46948 => D#93ptD.0
  # VUSE <.MEM_207>
  # PT = nonlocal escaped 
  _46 = MEM[(charD.10 * *)i$_M_node_170 + 32B];
  # DEBUG D#3ptD.0 => D#93ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_60 = VDEF <.MEM_207>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _47 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_10, _46, _45);
  # DEBUG __outD.47781 => _47
  # DEBUG __sD.47782 => " = "
  # DEBUG __sD.47783 => " = "
  # .MEM_61 = VDEF <.MEM_60>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_47, " = ", 3);
  # .MEM_24 = VDEF <.MEM_61>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _25 = _ZNSolsEiD.21643 (_47, _23);
  # DEBUG __outD.47785 => _25
  # DEBUG __sD.47786 => ";"
  # DEBUG __sD.47787 => ";"
  # .MEM_62 = VDEF <.MEM_24>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_25, ";", 1);
  # DEBUG thisD.47789 => _25
  # DEBUG __pfD.47790 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56011 => _25
  # VUSE <.MEM_62>
  # PT = nonlocal escaped null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _125 = _25->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_62>
  _126 = MEM[(long intD.12 *)_125 + -24B];
  # RANGE [0, 18446744073709551615]
  _127 = (sizetype) _126;
  # PT = nonlocal escaped 
  _128 = _25 + _127;
  # DEBUG thisD.56014 => _128
  # DEBUG __cD.56015 => 10
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _63 = MEM[(const struct basic_iosD.7355 *)_128]._M_ctypeD.20959;
  # DEBUG __fD.56016 => _63
  if (_63 == 0B)
    goto <bb 25>;
  else
    goto <bb 36>;
;;    succ:       25 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 9060, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56018 => _63
  # DEBUG __cD.56017 => 10
  # VUSE <.MEM_62>
  _133 = MEM[(const struct ctypeD.7662 *)_63]._M_widen_okD.17874;
  if (_133 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 5528, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_62>
  _136 = MEM[(const struct ctypeD.7662 *)_63]._M_widenD.17875[10];
  pretmp_144 = (intD.9) _136;
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 3531, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56020 => _63
  # DEBUG __cD.56021 => 10
  # .MEM_212 = VDEF <.MEM_62>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_63);
  # VUSE <.MEM_212>
  # PT = nonlocal escaped 
  _141 = MEM[(const struct ctypeD.7662 *)_63].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_212>
  # PT = nonlocal escaped 
  _142 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_141 + 48B];
  # PT = anything 
  PROF_146 = [obj_type_ref] OBJ_TYPE_REF(_142;(const struct ctypeD.7662)_63->6);
  if (PROF_146 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 40>;
  else
    goto <bb 39>;
;;    succ:       40 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 701, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_213 = VDEF <.MEM_212>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _148 = OBJ_TYPE_REF(_142;(const struct ctypeD.7662)_63->6) (_63, 10);
  pretmp_164 = (intD.9) _148;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 9064, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_181 = PHI <.MEM_62(37), .MEM_212(38), .MEM_213(39)>
  # RANGE [-128, 127]
  # prephitmp_224 = PHI <pretmp_144(37), 10(38), pretmp_164(39)>
  # .MEM_217 = VDEF <.MEM_181>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _131 = _ZNSo3putEcD.21670 (_25, prephitmp_224);
  # DEBUG __osD.56012 => _131
  # .MEM_218 = VDEF <.MEM_217>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_131);
  # DEBUG thisD.47792 => &iD.38464
  # VUSE <.MEM_218>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_48 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_170);
  # DEBUG i$_M_nodeD.47837 => i$_M_node_48
  # DEBUG i$_M_nodeD.47837 => i$_M_node_48
  # DEBUG D#94ptD.0 => &this_12(D)->_int_mapD.34183
  # DEBUG thisD.47768 => D#94ptD.0
  # DEBUG D#56ptD.0 => &D#94ptD.0->_M_tD.33338
  # DEBUG thisD.47769 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => _103
  # DEBUG thisD.47766 => &D.38468
  # DEBUG __itD.47767 => &D.38467
  # DEBUG thisD.47763 => &iD.38464
  # DEBUG __xD.47764 => &D.38468
  if (i$_M_node_48 != _103)
    goto <bb 41>;
  else
    goto <bb 33>;
;;    succ:       41 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 8248, maybe hot
;;    prev block 40, next block 42, flags: (NEW)
;;    pred:       40 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 893, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       33 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_155 = PHI <.MEM_178(33), .MEM_227(49)>
  # DEBUG D#105ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47841 => D#105ptD.0
  # .MEM_33 = VDEF <.MEM_155>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_10);
  # VUSE <.MEM_33>
  # PT = nonlocal escaped null { D.21060 D.27207 } (nonlocal, escaped)
  _34 = MEM[(struct ostreamD.7362 *)_10]._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _35 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_34 + 8B];
  # .MEM_36 = VDEF <.MEM_33>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  OBJ_TYPE_REF(_35;(struct basic_ostreamD.7361)_10->1) (_10);
  # VUSE <.MEM_36>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 43, loop depth 0, count 0, freq 816, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       33 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 9027, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_138 = PHI <.MEM_178(43), .MEM_227(50)>
  # PT = nonlocal escaped 
  # i$_M_node_215 = PHI <i$_M_node_27(43), i$_M_node_52(50)>
  # DEBUG i$_M_nodeD.47841 => i$_M_node_215
  # DEBUG D#99ptD.0 => &this_12(D)->_float_mapD.35250
  # DEBUG thisD.47804 => D#99ptD.0
  # DEBUG D#63ptD.0 => &D#99ptD.0->_M_tD.34405
  # DEBUG thisD.47805 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => _158
  # DEBUG thisD.47802 => &D.38473
  # DEBUG __itD.47803 => &D.38472
  # DEBUG thisD.47799 => &iD.38469
  # DEBUG __xD.47800 => &D.38473
  # DEBUG thisD.47814 => &iD.38469
  # DEBUG thisD.47815 => i$_M_node_215
  # DEBUG D#96ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)i$_M_node_215]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#96ptD.0
  # VUSE <.MEM_138>
  _30 = MEM[(const struct pairD.34184 *)i$_M_node_215 + 32B].secondD.35902;
  # DEBUG thisD.47811 => &iD.38469
  # DEBUG thisD.47812 => i$_M_node_215
  # DEBUG D#97ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)i$_M_node_215]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#97ptD.0
  # DEBUG D#98ptD.0 => &MEM[(const struct pairD.34184 *)i$_M_node_215 + 32B].firstD.35901
  # DEBUG __osD.47808 => _10
  # DEBUG __strD.47809 => D#98ptD.0
  # VUSE <.MEM_138>
  _28 = MEM[(long unsigned intD.14 *)i$_M_node_215 + 40B];
  # DEBUG D#2ptD.0 => D#98ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _49 = (long intD.12) _28;
  # DEBUG thisD.46948 => D#98ptD.0
  # VUSE <.MEM_138>
  # PT = nonlocal escaped 
  _50 = MEM[(charD.10 * *)i$_M_node_215 + 32B];
  # DEBUG D#3ptD.0 => D#98ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_65 = VDEF <.MEM_138>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _51 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_10, _50, _49);
  # DEBUG __outD.47817 => _51
  # DEBUG __sD.47818 => " = "
  # DEBUG __sD.47819 => " = "
  # .MEM_66 = VDEF <.MEM_65>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_51, " = ", 3);
  # DEBUG thisD.47821 => _51
  # DEBUG __fD.47822 => _30
  # .MEM_67 = VDEF <.MEM_66>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _31 = _ZNSo9_M_insertIdEERSoT_D.21878 (_51, _30);
  # DEBUG __outD.47824 => _31
  # DEBUG __sD.47825 => ";"
  # DEBUG __sD.47826 => ";"
  # .MEM_68 = VDEF <.MEM_67>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_31, ";", 1);
  # DEBUG thisD.47828 => _31
  # DEBUG __pfD.47829 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56026 => _31
  # VUSE <.MEM_68>
  # PT = nonlocal escaped null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _151 = MEM[(struct basic_ostreamD.7361 *)_31]._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_68>
  _152 = MEM[(long intD.12 *)_151 + -24B];
  # RANGE [0, 18446744073709551615]
  _153 = (sizetype) _152;
  # PT = nonlocal escaped 
  _154 = _31 + _153;
  # DEBUG thisD.56029 => _154
  # DEBUG __cD.56030 => 10
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _69 = MEM[(const struct basic_iosD.7355 *)_154]._M_ctypeD.20959;
  # DEBUG __fD.56031 => _69
  if (_69 == 0B)
    goto <bb 25>;
  else
    goto <bb 45>;
;;    succ:       25 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 9023, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56033 => _69
  # DEBUG __cD.56032 => 10
  # VUSE <.MEM_68>
  _159 = MEM[(const struct ctypeD.7662 *)_69]._M_widen_okD.17874;
  if (_159 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 5506, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_68>
  _162 = MEM[(const struct ctypeD.7662 *)_69]._M_widenD.17875[10];
  pretmp_180 = (intD.9) _162;
  goto <bb 49>;
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 3517, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56035 => _69
  # DEBUG __cD.56036 => 10
  # .MEM_221 = VDEF <.MEM_68>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_69);
  # VUSE <.MEM_221>
  # PT = nonlocal escaped 
  _167 = MEM[(const struct ctypeD.7662 *)_69].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_221>
  # PT = nonlocal escaped 
  _168 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_167 + 48B];
  # PT = anything 
  PROF_172 = [obj_type_ref] OBJ_TYPE_REF(_168;(const struct ctypeD.7662)_69->6);
  if (PROF_172 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 49>;
  else
    goto <bb 48>;
;;    succ:       49 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 698, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_222 = VDEF <.MEM_221>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _174 = OBJ_TYPE_REF(_168;(const struct ctypeD.7662)_69->6) (_69, 10);
  pretmp_182 = (intD.9) _174;
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 1, count 0, freq 9027, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_183 = PHI <.MEM_68(46), .MEM_221(47), .MEM_222(48)>
  # RANGE [-128, 127]
  # prephitmp_225 = PHI <pretmp_180(46), 10(47), pretmp_182(48)>
  # .MEM_226 = VDEF <.MEM_183>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _157 = _ZNSo3putEcD.21670 (_31, prephitmp_225);
  # DEBUG __osD.56027 => _157
  # .MEM_227 = VDEF <.MEM_226>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_157);
  # DEBUG thisD.47831 => &iD.38469
  # VUSE <.MEM_227>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_52 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_215);
  # DEBUG i$_M_nodeD.47841 => i$_M_node_52
  # DEBUG i$_M_nodeD.47841 => i$_M_node_52
  # DEBUG D#99ptD.0 => &this_12(D)->_float_mapD.35250
  # DEBUG thisD.47804 => D#99ptD.0
  # DEBUG D#63ptD.0 => &D#99ptD.0->_M_tD.34405
  # DEBUG thisD.47805 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => _158
  # DEBUG thisD.47802 => &D.38473
  # DEBUG __itD.47803 => &D.38472
  # DEBUG thisD.47799 => &iD.38469
  # DEBUG __xD.47800 => &D.38473
  if (i$_M_node_52 != _158)
    goto <bb 50>;
  else
    goto <bb 42>;
;;    succ:       50 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 8215, maybe hot
;;    prev block 49, next block 51, flags: (NEW)
;;    pred:       49 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 44>;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 (EH,EXECUTABLE)
<L15>: [LP 1]
  # .MEM_37 = VDEF <.MEM_236>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZdlPvD.2766 (_10);
  resx 1
;;    succ:      

}


Creating dr for MEM[(char * *)filename_7(D)]
analyze_innermost: success.
	base_address: filename_7(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)filename_7(D)]
Creating dr for MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream
analyze_innermost: success.
	base_address: _10
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ofstream *)_10]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct basic_ios *)_10 + 248B].D.21051._vptr.ios_base
analyze_innermost: success.
	base_address: _10
	offset from base address: 0
	constant offset from base address: 248
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ios *)_10 + 248B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream
analyze_innermost: success.
	base_address: _10
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ofstream *)_10]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(long int *)_91 + -24B]
analyze_innermost: success.
	base_address: _91
	offset from base address: 0
	constant offset from base address: -24(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(long int *)_91 + -24B]
Creating dr for MEM[(_Ios_Iostate *)_94 + 32B]
analyze_innermost: success.
	base_address: _10 + (sizetype) _92
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(_Ios_Iostate *)_94 + 32B]
Creating dr for MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream
analyze_innermost: success.
	base_address: _10
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ofstream *)_10]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(long int *)_87 + -24B]
analyze_innermost: success.
	base_address: _87
	offset from base address: 0
	constant offset from base address: -24(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(long int *)_87 + -24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_12(D) + 64B]
analyze_innermost: success.
	base_address: this_12(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_12(D) + 64B]
Creating dr for MEM[(char * *)i$_M_node_118 + 64B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_118 + 64B]
Creating dr for MEM[(char * *)i$_M_node_118 + 64B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_118 + 64B]
Creating dr for MEM[(const char &)_14]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char &)_14]
Creating dr for MEM[(const char &)_14]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char &)_14]
Creating dr for MEM[(char * *)i$_M_node_118 + 64B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_118 + 64B]
Creating dr for MEM[(char * *)i$_M_node_118 + 64B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_118 + 64B]
Creating dr for MEM[(const char &)_14]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char &)_14]
Creating dr for MEM[(const char &)_14]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char &)_14]
Creating dr for MEM[(long unsigned int *)i$_M_node_118 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_118 + 40B]
Creating dr for MEM[(long unsigned int *)i$_M_node_118 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_118 + 40B]
Creating dr for MEM[(char * *)i$_M_node_118 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_118 + 32B]
Creating dr for MEM[(char * *)i$_M_node_118 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_118 + 32B]
Creating dr for MEM[(const struct ctype *)_58]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_58]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_58]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_58]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_58]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_58]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_58]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_58]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_12(D) + 112B]
analyze_innermost: success.
	base_address: this_12(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_12(D) + 112B]
Creating dr for MEM[(const struct pair *)i$_M_node_170 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_170 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_170 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_170 + 32B]
	Access function 0: 256
Creating dr for MEM[(long unsigned int *)i$_M_node_170 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_170 + 40B]
Creating dr for MEM[(long unsigned int *)i$_M_node_170 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_170 + 40B]
Creating dr for MEM[(char * *)i$_M_node_170 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_170 + 32B]
Creating dr for MEM[(char * *)i$_M_node_170 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_170 + 32B]
Creating dr for MEM[(const struct pair *)i$_M_node_170 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_170 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_170 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_170 + 32B]
	Access function 0: 256
Creating dr for MEM[(long unsigned int *)i$_M_node_170 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_170 + 40B]
Creating dr for MEM[(long unsigned int *)i$_M_node_170 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_170 + 40B]
Creating dr for MEM[(char * *)i$_M_node_170 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_170 + 32B]
Creating dr for MEM[(char * *)i$_M_node_170 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_170 + 32B]
Creating dr for MEM[(const struct ctype *)_63]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_63]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_63]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_63]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_63]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_63]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_63]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_63]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_12(D) + 160B]
analyze_innermost: success.
	base_address: this_12(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_12(D) + 160B]
Creating dr for MEM[(const struct pair *)i$_M_node_215 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_215 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_215 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_215 + 32B]
	Access function 0: 256
Creating dr for MEM[(long unsigned int *)i$_M_node_215 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_215 + 40B]
Creating dr for MEM[(long unsigned int *)i$_M_node_215 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_215 + 40B]
Creating dr for MEM[(char * *)i$_M_node_215 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_215 + 32B]
Creating dr for MEM[(char * *)i$_M_node_215 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_215 + 32B]
Creating dr for MEM[(const struct pair *)i$_M_node_215 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_215 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_215 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_215 + 32B]
	Access function 0: 256
Creating dr for MEM[(long unsigned int *)i$_M_node_215 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_215 + 40B]
Creating dr for MEM[(long unsigned int *)i$_M_node_215 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)i$_M_node_215 + 40B]
Creating dr for MEM[(char * *)i$_M_node_215 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_215 + 32B]
Creating dr for MEM[(char * *)i$_M_node_215 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_215 + 32B]
Creating dr for MEM[(const struct ctype *)_69]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_69]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_69]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_69]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_69]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_69]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_69]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_69]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(long int *)iftmp.155_72 + -24B]
analyze_innermost: success.
	base_address: iftmp.155_72
	offset from base address: 0
	constant offset from base address: -24(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(long int *)iftmp.155_72 + -24B]
Creating dr for _82->D.21051._vptr.ios_base
analyze_innermost: success.
	base_address: (struct basic_ostream *) _10 + (sizetype) _80
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_82
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct basic_ios *)_10 + 248B].D.21051._vptr.ios_base
analyze_innermost: success.
	base_address: _10
	offset from base address: 0
	constant offset from base address: 248
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ios *)_10 + 248B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:52, LOOPS:3, CONDITIONS:23, STMTS:470)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_18 })
  {
    <bb 2>:
    # DEBUG this => filename_7(D)
    # VUSE <.MEM_6(D)>
    _22 = MEM[(char * *)filename_7(D)];
    # DEBUG D#3 => filename_7(D)
    # DEBUG this => D#3
    # DEBUG __a => 16
    # DEBUG __b => 32
    # .MEM_9 = VDEF <.MEM_6(D)>
    _10 = operator new (512);
    # DEBUG this => _10
    # DEBUG __s => _22
    # DEBUG __mode => 48
    # DEBUG D#30 => &MEM[(struct basic_ofstream *)_10].D.27206
    # DEBUG this => D#30
    _70 = &MEM[(struct basic_ios *)_10 + 248B].D.21051;
    # .MEM_184 = VDEF <.MEM_9>
    std::ios_base::ios_base (_70);
    # .MEM_185 = VDEF <.MEM_184>
    MEM[(struct basic_ios *)_10 + 248B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
    # .MEM_186 = VDEF <.MEM_185>
    MEM[(struct basic_ios *)_10 + 248B]._M_tie = 0B;
    # .MEM_187 = VDEF <.MEM_186>
    MEM[(struct basic_ios *)_10 + 248B]._M_fill = 0;
    # .MEM_188 = VDEF <.MEM_187>
    MEM[(struct basic_ios *)_10 + 248B]._M_fill_init = 0;
    # .MEM_189 = VDEF <.MEM_188>
    MEM[(struct basic_ios *)_10 + 248B]._M_streambuf = 0B;
    # .MEM_190 = VDEF <.MEM_189>
    MEM[(struct basic_ios *)_10 + 248B]._M_ctype = 0B;
    # .MEM_191 = VDEF <.MEM_190>
    MEM[(struct basic_ios *)_10 + 248B]._M_num_put = 0B;
    # .MEM_192 = VDEF <.MEM_191>
    MEM[(struct basic_ios *)_10 + 248B]._M_num_get = 0B;
    _71 = &MEM[(struct basic_ofstream *)_10].D.27203;
    # DEBUG this => _71
    # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE + 8B]
    # VUSE <.MEM_192>
    iftmp.155_72 = MEM[(const void * *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE + 8B];
    # .MEM_193 = VDEF <.MEM_192>
    MEM[(struct basic_ostream *)_10]._vptr.basic_ostream = iftmp.155_72;
    # VUSE <.MEM_193>
    _73 = MEM[(long int *)iftmp.155_72 + -24B];
    iftmp.156_74 = (sizetype) _73;
    _75 = _71 + iftmp.156_74;
    # VUSE <.MEM_193>
    iftmp.157_76 = MEM[(const void * *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE + 16B];
    # .MEM_194 = VDEF <.MEM_193>
    _75->D.21051._vptr.ios_base = iftmp.157_76;
    # .MEM_195 = VDEF <.MEM_194>
    std::basic_ios<char>::init (_75, 0B);

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_15 })
  {
    <bb 3>:
    # .MEM_196 = VDEF <.MEM_195>
    MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream = &MEM[(void *)&_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE + 24B];
    # .MEM_197 = VDEF <.MEM_196>
    MEM[(struct basic_ios *)_10 + 248B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE + 64B];
    _77 = &MEM[(struct basic_ofstream *)_10]._M_filebuf;
    # .MEM_198 = VDEF <.MEM_197>
    std::basic_filebuf<char>::basic_filebuf (_77);

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 bb_12 })
  {
    <bb 4>:
    _79 = _10 + 248;
    # .MEM_199 = VDEF <.MEM_198>
    std::basic_ios<char>::init (_79, _77);

  }
  bb_5 (preds = {bb_4 }, succs = {bb_7 bb_6 })
  {
    <bb 5>:
    # DEBUG this => _10
    # DEBUG __s => _22
    # DEBUG __mode => 48
    # DEBUG __a => 48
    # DEBUG __b => 16
    # .MEM_200 = VDEF <.MEM_199>
    _86 = std::basic_filebuf<char>::open (_77, _22, 48);
    goto <bb 7>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_13 })
  {
  <L25>:
    goto <bb 13> (<L19>);

  }
  bb_7 (preds = {bb_5 }, succs = {bb_8 bb_10 })
  {
    <bb 7>:
    if (_86 == 0B)
      goto <bb 8>;
    else
      goto <bb 10>;

  }
  bb_8 (preds = {bb_7 }, succs = {bb_20 bb_9 })
  {
    <bb 8>:
    # DEBUG D#25 => _22
    # DEBUG D#26 => 48
    # DEBUG this => _10
    # DEBUG D#27 => D#26
    # DEBUG __mode => D#27
    # DEBUG D#28 => D#25
    # DEBUG __s => D#28
    # VUSE <.MEM_200>
    _91 = MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream;
    # VUSE <.MEM_200>
    _92 = MEM[(long int *)_91 + -24B];
    _93 = (sizetype) _92;
    _94 = _10 + _93;
    # DEBUG this => _94
    # DEBUG __state => 4
    # VUSE <.MEM_200>
    _95 = MEM[(_Ios_Iostate *)_94 + 32B];
    # DEBUG D#4 => _94
    # DEBUG this => D#4
    # DEBUG __a => _95
    # DEBUG __b => 4
    __a.104_96 = (int) _95;
    _97 = __a.104_96 | 4;
    _98 = (_Ios_Iostate) _97;
    # .MEM_202 = VDEF <.MEM_200>
    std::basic_ios<char>::clear (_94, _98);
    goto <bb 20>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_13 })
  {
  <L26>:
    goto <bb 13> (<L19>);

  }
  bb_10 (preds = {bb_7 }, succs = {bb_20 bb_11 })
  {
    <bb 10>:
    # VUSE <.MEM_200>
    _87 = MEM[(struct basic_ofstream *)_10].D.27203._vptr.basic_ostream;
    # VUSE <.MEM_200>
    _88 = MEM[(long int *)_87 + -24B];
    _89 = (sizetype) _88;
    _90 = _10 + _89;
    # .MEM_201 = VDEF <.MEM_200>
    std::basic_ios<char>::clear (_90, 0);
    goto <bb 20>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_13 })
  {
  <L27>:
    goto <bb 13> (<L19>);

  }
  bb_12 (preds = {bb_4 }, succs = {bb_13 })
  {
  <L24>:

  }
  bb_13 (preds = {bb_12 bb_11 bb_6 bb_9 }, succs = {bb_14 })
  {
    # .MEM_171 = PHI <.MEM_199(12), .MEM_201(11), .MEM_200(6), .MEM_202(9)>
  <L19>:
    # .MEM_230 = VDEF <.MEM_171>
    std::basic_filebuf<char>::~basic_filebuf (_77);
    resx 22

  }
  bb_14 (preds = {bb_13 }, succs = {bb_16 })
  {
  <L28>:
    goto <bb 16> (<L20>);

  }
  bb_15 (preds = {bb_3 }, succs = {bb_16 })
  {
  <L23>:

  }
  bb_16 (preds = {bb_15 bb_14 }, succs = {bb_17 })
  {
    # .MEM_145 = PHI <.MEM_198(15), .MEM_230(14)>
  <L20>:
    # DEBUG this => _71
    # DEBUG __vtt_parm => &MEM[(void *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE + 8B]
    # VUSE <.MEM_145>
    _80 = MEM[(long int *)iftmp.155_72 + -24B];
    iftmp.161_81 = (sizetype) _80;
    _82 = _71 + iftmp.161_81;
    # .MEM_232 = VDEF <.MEM_145>
    _82->D.21051._vptr.ios_base = iftmp.157_76;
    # .MEM_233 = VDEF <.MEM_232>
    MEM[(struct  &)_10] ={v} {CLOBBER};
    resx 20

  }
  bb_17 (preds = {bb_16 }, succs = {bb_19 })
  {
  <L29>:
    goto <bb 19> (<L21>);

  }
  bb_18 (preds = {bb_2 }, succs = {bb_19 })
  {
  <L22>:

  }
  bb_19 (preds = {bb_18 bb_17 }, succs = {bb_51 })
  {
    # .MEM_119 = PHI <.MEM_195(18), .MEM_233(17)>
  <L21>:
    # DEBUG D#29 => &MEM[(struct basic_ofstream *)_10].D.27206
    # DEBUG this => D#29
    # .MEM_234 = VDEF <.MEM_119>
    MEM[(struct basic_ios *)_10 + 248B].D.21051._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
    # .MEM_235 = VDEF <.MEM_234>
    std::ios_base::~ios_base (_70);
    # .MEM_236 = VDEF <.MEM_235>
    MEM[(struct  &)_10 + 248] ={v} {CLOBBER};
    resx 19

  }
  bb_20 (preds = {bb_8 bb_10 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # .MEM_228 = PHI <.MEM_202(8), .MEM_201(10)>
    # DEBUG config_out => _10
    # DEBUG D#82 => &this_12(D)->_str_map
    # DEBUG this => D#82
    # DEBUG D#55 => &D#82->_M_t
    # VUSE <.MEM_228>
    i$_M_node_13 = MEM[(struct _Rb_tree_node_base * *)this_12(D) + 64B];
    # DEBUG D#54 => D#55
    # DEBUG this => D#54
    # DEBUG this => NULL
    # DEBUG __x => i$_M_node_13
    # DEBUG this => &i
    # DEBUG __it => &D.38460
    # DEBUG i$_M_node => i$_M_node_13
    # DEBUG i$_M_node => i$_M_node_13
    # DEBUG D#89 => &this_12(D)->_str_map
    # DEBUG this => D#89
    # DEBUG D#53 => &D#89->_M_t
    # DEBUG this => D#53
    _129 = &MEM[(struct _Rb_tree *)this_12(D) + 40B]._M_impl._M_header;
    # DEBUG this => NULL
    # DEBUG __x => _129
    # DEBUG this => &D.38463
    # DEBUG __it => &D.38462
    # DEBUG this => &i
    # DEBUG __x => &D.38463
    if (i$_M_node_13 != _129)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 bb_31 }, succs = {bb_34 bb_33 })
  {
    <bb 21>:
    # .MEM_219 = PHI <.MEM_228(20), .MEM_2(31)>
    # DEBUG D#101 => {CLOBBER}
    # DEBUG i$_M_node => D#101
    # DEBUG D#90 => &this_12(D)->_int_map
    # DEBUG this => D#90
    # DEBUG D#58 => &D#90->_M_t
    # VUSE <.MEM_219>
    i$_M_node_19 = MEM[(struct _Rb_tree_node_base * *)this_12(D) + 112B];
    # DEBUG D#57 => D#58
    # DEBUG this => D#57
    # DEBUG this => NULL
    # DEBUG __x => i$_M_node_19
    # DEBUG this => &i
    # DEBUG __it => &D.38465
    # DEBUG i$_M_node => i$_M_node_19
    # DEBUG i$_M_node => i$_M_node_19
    # DEBUG D#94 => &this_12(D)->_int_map
    # DEBUG this => D#94
    # DEBUG D#56 => &D#94->_M_t
    # DEBUG this => D#56
    _103 = &MEM[(struct _Rb_tree *)this_12(D) + 88B]._M_impl._M_header;
    # DEBUG this => NULL
    # DEBUG __x => _103
    # DEBUG this => &D.38468
    # DEBUG __it => &D.38467
    # DEBUG this => &i
    # DEBUG __x => &D.38468
    if (i$_M_node_19 != _103)
      goto <bb 34>;
    else
      goto <bb 33>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:

  }
  bb_25 (preds = {bb_24 bb_35 bb_44 }, succs = {})
  {
    <bb 25>:
    # .MEM_231 = PHI <.MEM_57(24), .MEM_62(35), .MEM_68(44)>
    # .MEM_211 = VDEF <.MEM_231>
    std::__throw_bad_cast ();

  }
  bb_33 (preds = {bb_21 bb_40 }, succs = {bb_43 bb_42 })
  {
    <bb 33>:
    # .MEM_178 = PHI <.MEM_219(21), .MEM_218(40)>
    # DEBUG D#103 => {CLOBBER}
    # DEBUG i$_M_node => D#103
    # DEBUG D#95 => &this_12(D)->_float_map
    # DEBUG this => D#95
    # DEBUG D#65 => &D#95->_M_t
    # VUSE <.MEM_178>
    i$_M_node_27 = MEM[(struct _Rb_tree_node_base * *)this_12(D) + 160B];
    # DEBUG D#64 => D#65
    # DEBUG this => D#64
    # DEBUG this => NULL
    # DEBUG __x => i$_M_node_27
    # DEBUG this => &i
    # DEBUG __it => &D.38470
    # DEBUG i$_M_node => i$_M_node_27
    # DEBUG i$_M_node => i$_M_node_27
    # DEBUG D#99 => &this_12(D)->_float_map
    # DEBUG this => D#99
    # DEBUG D#63 => &D#99->_M_t
    # DEBUG this => D#63
    _158 = &MEM[(struct _Rb_tree *)this_12(D) + 136B]._M_impl._M_header;
    # DEBUG this => NULL
    # DEBUG __x => _158
    # DEBUG this => &D.38473
    # DEBUG __it => &D.38472
    # DEBUG this => &i
    # DEBUG __x => &D.38473
    if (i$_M_node_27 != _158)
      goto <bb 43>;
    else
      goto <bb 42>;

  }
  bb_34 (preds = {bb_21 }, succs = {bb_35 })
  {
    <bb 34>:

  }
  bb_42 (preds = {bb_33 bb_49 }, succs = {bb_1 })
  {
    <bb 42>:
    # .MEM_155 = PHI <.MEM_178(33), .MEM_227(49)>
    # DEBUG D#105 => {CLOBBER}
    # DEBUG i$_M_node => D#105
    # .MEM_33 = VDEF <.MEM_155>
    std::basic_ostream<char>::flush (_10);
    # VUSE <.MEM_33>
    _34 = MEM[(struct ostream *)_10]._vptr.basic_ostream;
    # VUSE <.MEM_33>
    _35 = MEM[(int (*__vtbl_ptr_type) () *)_34 + 8B];
    # .MEM_36 = VDEF <.MEM_33>
    OBJ_TYPE_REF(_35;(struct basic_ostream)_10->1) (_10);
    # VUSE <.MEM_36>
    return;

  }
  bb_43 (preds = {bb_33 }, succs = {bb_44 })
  {
    <bb 43>:

  }
  bb_51 (preds = {bb_19 }, succs = {})
  {
  <L15>:
    # .MEM_37 = VDEF <.MEM_236>
    operator delete (_10);
    resx 1

  }
  loop_3 (header = 44, latch = 50, niter = )
  {
    bb_44 (preds = {bb_43 bb_50 }, succs = {bb_25 bb_45 })
    {
      <bb 44>:
      # .MEM_138 = PHI <.MEM_178(43), .MEM_227(50)>
      # i$_M_node_215 = PHI <i$_M_node_27(43), i$_M_node_52(50)>
      # DEBUG i$_M_node => i$_M_node_215
      # DEBUG D#99 => &this_12(D)->_float_map
      # DEBUG this => D#99
      # DEBUG D#63 => &D#99->_M_t
      # DEBUG this => D#63
      # DEBUG this => NULL
      # DEBUG __x => _158
      # DEBUG this => &D.38473
      # DEBUG __it => &D.38472
      # DEBUG this => &i
      # DEBUG __x => &D.38473
      # DEBUG this => &i
      # DEBUG this => i$_M_node_215
      # DEBUG D#96 => &MEM[(const struct _Rb_tree_node *)i$_M_node_215]._M_value_field
      # DEBUG __r => D#96
      # VUSE <.MEM_138>
      _30 = MEM[(const struct pair *)i$_M_node_215 + 32B].second;
      # DEBUG this => &i
      # DEBUG this => i$_M_node_215
      # DEBUG D#97 => &MEM[(const struct _Rb_tree_node *)i$_M_node_215]._M_value_field
      # DEBUG __r => D#97
      # DEBUG D#98 => &MEM[(const struct pair *)i$_M_node_215 + 32B].first
      # DEBUG __os => _10
      # DEBUG __str => D#98
      # VUSE <.MEM_138>
      _28 = MEM[(long unsigned int *)i$_M_node_215 + 40B];
      # DEBUG D#2 => D#98
      # DEBUG this => D#2
      _49 = (long int) _28;
      # DEBUG this => D#98
      # VUSE <.MEM_138>
      _50 = MEM[(char * *)i$_M_node_215 + 32B];
      # DEBUG D#3 => D#98
      # DEBUG this => D#3
      # .MEM_65 = VDEF <.MEM_138>
      _51 = std::__ostream_insert<char, std::char_traits<char> > (_10, _50, _49);
      # DEBUG __out => _51
      # DEBUG __s => " = "
      # DEBUG __s => " = "
      # .MEM_66 = VDEF <.MEM_65>
      std::__ostream_insert<char, std::char_traits<char> > (_51, " = ", 3);
      # DEBUG this => _51
      # DEBUG __f => _30
      # .MEM_67 = VDEF <.MEM_66>
      _31 = std::basic_ostream<char>::_M_insert<double> (_51, _30);
      # DEBUG __out => _31
      # DEBUG __s => ";"
      # DEBUG __s => ";"
      # .MEM_68 = VDEF <.MEM_67>
      std::__ostream_insert<char, std::char_traits<char> > (_31, ";", 1);
      # DEBUG this => _31
      # DEBUG __pf => endl
      # DEBUG __os => _31
      # VUSE <.MEM_68>
      _151 = MEM[(struct basic_ostream *)_31]._vptr.basic_ostream;
      # VUSE <.MEM_68>
      _152 = MEM[(long int *)_151 + -24B];
      _153 = (sizetype) _152;
      _154 = _31 + _153;
      # DEBUG this => _154
      # DEBUG __c => 10
      # VUSE <.MEM_68>
      _69 = MEM[(const struct basic_ios *)_154]._M_ctype;
      # DEBUG __f => _69
      if (_69 == 0B)
        goto <bb 25>;
      else
        goto <bb 45>;

    }
    bb_45 (preds = {bb_44 }, succs = {bb_46 bb_47 })
    {
      <bb 45>:
      # DEBUG this => _69
      # DEBUG __c => 10
      # VUSE <.MEM_68>
      _159 = MEM[(const struct ctype *)_69]._M_widen_ok;
      if (_159 != 0)
        goto <bb 46>;
      else
        goto <bb 47>;

    }
    bb_46 (preds = {bb_45 }, succs = {bb_49 })
    {
      <bb 46>:
      # VUSE <.MEM_68>
      _162 = MEM[(const struct ctype *)_69]._M_widen[10];
      pretmp_180 = (int) _162;
      goto <bb 49>;

    }
    bb_47 (preds = {bb_45 }, succs = {bb_49 bb_48 })
    {
      <bb 47>:
      # DEBUG this => _69
      # DEBUG __c => 10
      # .MEM_221 = VDEF <.MEM_68>
      std::ctype<char>::_M_widen_init (_69);
      # VUSE <.MEM_221>
      _167 = MEM[(const struct ctype *)_69].D.18015._vptr.facet;
      # VUSE <.MEM_221>
      _168 = MEM[(int (*__vtbl_ptr_type) () *)_167 + 48B];
      PROF_172 = [obj_type_ref] OBJ_TYPE_REF(_168;(const struct ctype)_69->6);
      if (PROF_172 == do_widen)
        goto <bb 49>;
      else
        goto <bb 48>;

    }
    bb_48 (preds = {bb_47 }, succs = {bb_49 })
    {
      <bb 48>:
      # .MEM_222 = VDEF <.MEM_221>
      _174 = OBJ_TYPE_REF(_168;(const struct ctype)_69->6) (_69, 10);
      pretmp_182 = (int) _174;

    }
    bb_49 (preds = {bb_46 bb_47 bb_48 }, succs = {bb_50 bb_42 })
    {
      <bb 49>:
      # .MEM_183 = PHI <.MEM_68(46), .MEM_221(47), .MEM_222(48)>
      # prephitmp_225 = PHI <pretmp_180(46), 10(47), pretmp_182(48)>
      # .MEM_226 = VDEF <.MEM_183>
      _157 = std::basic_ostream<char>::put (_31, prephitmp_225);
      # DEBUG __os => _157
      # .MEM_227 = VDEF <.MEM_226>
      std::basic_ostream<char>::flush (_157);
      # DEBUG this => &i
      # VUSE <.MEM_227>
      i$_M_node_52 = std::_Rb_tree_increment (i$_M_node_215);
      # DEBUG i$_M_node => i$_M_node_52
      # DEBUG i$_M_node => i$_M_node_52
      # DEBUG D#99 => &this_12(D)->_float_map
      # DEBUG this => D#99
      # DEBUG D#63 => &D#99->_M_t
      # DEBUG this => D#63
      # DEBUG this => NULL
      # DEBUG __x => _158
      # DEBUG this => &D.38473
      # DEBUG __it => &D.38472
      # DEBUG this => &i
      # DEBUG __x => &D.38473
      if (i$_M_node_52 != _158)
        goto <bb 50>;
      else
        goto <bb 42>;

    }
    bb_50 (preds = {bb_49 }, succs = {bb_44 })
    {
      <bb 50>:
      goto <bb 44>;

    }
  }
  loop_2 (header = 35, latch = 41, niter = )
  {
    bb_35 (preds = {bb_34 bb_41 }, succs = {bb_25 bb_36 })
    {
      <bb 35>:
      # .MEM_207 = PHI <.MEM_219(34), .MEM_218(41)>
      # i$_M_node_170 = PHI <i$_M_node_19(34), i$_M_node_48(41)>
      # DEBUG i$_M_node => i$_M_node_170
      # DEBUG D#94 => &this_12(D)->_int_map
      # DEBUG this => D#94
      # DEBUG D#56 => &D#94->_M_t
      # DEBUG this => D#56
      # DEBUG this => NULL
      # DEBUG __x => _103
      # DEBUG this => &D.38468
      # DEBUG __it => &D.38467
      # DEBUG this => &i
      # DEBUG __x => &D.38468
      # DEBUG this => &i
      # DEBUG this => i$_M_node_170
      # DEBUG D#91 => &MEM[(const struct _Rb_tree_node *)i$_M_node_170]._M_value_field
      # DEBUG __r => D#91
      # VUSE <.MEM_207>
      _23 = MEM[(const struct pair *)i$_M_node_170 + 32B].second;
      # DEBUG this => &i
      # DEBUG this => i$_M_node_170
      # DEBUG D#92 => &MEM[(const struct _Rb_tree_node *)i$_M_node_170]._M_value_field
      # DEBUG __r => D#92
      # DEBUG D#93 => &MEM[(const struct pair *)i$_M_node_170 + 32B].first
      # DEBUG __os => _10
      # DEBUG __str => D#93
      # VUSE <.MEM_207>
      _20 = MEM[(long unsigned int *)i$_M_node_170 + 40B];
      # DEBUG D#2 => D#93
      # DEBUG this => D#2
      _45 = (long int) _20;
      # DEBUG this => D#93
      # VUSE <.MEM_207>
      _46 = MEM[(char * *)i$_M_node_170 + 32B];
      # DEBUG D#3 => D#93
      # DEBUG this => D#3
      # .MEM_60 = VDEF <.MEM_207>
      _47 = std::__ostream_insert<char, std::char_traits<char> > (_10, _46, _45);
      # DEBUG __out => _47
      # DEBUG __s => " = "
      # DEBUG __s => " = "
      # .MEM_61 = VDEF <.MEM_60>
      std::__ostream_insert<char, std::char_traits<char> > (_47, " = ", 3);
      # .MEM_24 = VDEF <.MEM_61>
      _25 = std::basic_ostream<char>::operator<< (_47, _23);
      # DEBUG __out => _25
      # DEBUG __s => ";"
      # DEBUG __s => ";"
      # .MEM_62 = VDEF <.MEM_24>
      std::__ostream_insert<char, std::char_traits<char> > (_25, ";", 1);
      # DEBUG this => _25
      # DEBUG __pf => endl
      # DEBUG __os => _25
      # VUSE <.MEM_62>
      _125 = _25->_vptr.basic_ostream;
      # VUSE <.MEM_62>
      _126 = MEM[(long int *)_125 + -24B];
      _127 = (sizetype) _126;
      _128 = _25 + _127;
      # DEBUG this => _128
      # DEBUG __c => 10
      # VUSE <.MEM_62>
      _63 = MEM[(const struct basic_ios *)_128]._M_ctype;
      # DEBUG __f => _63
      if (_63 == 0B)
        goto <bb 25>;
      else
        goto <bb 36>;

    }
    bb_36 (preds = {bb_35 }, succs = {bb_37 bb_38 })
    {
      <bb 36>:
      # DEBUG this => _63
      # DEBUG __c => 10
      # VUSE <.MEM_62>
      _133 = MEM[(const struct ctype *)_63]._M_widen_ok;
      if (_133 != 0)
        goto <bb 37>;
      else
        goto <bb 38>;

    }
    bb_37 (preds = {bb_36 }, succs = {bb_40 })
    {
      <bb 37>:
      # VUSE <.MEM_62>
      _136 = MEM[(const struct ctype *)_63]._M_widen[10];
      pretmp_144 = (int) _136;
      goto <bb 40>;

    }
    bb_38 (preds = {bb_36 }, succs = {bb_40 bb_39 })
    {
      <bb 38>:
      # DEBUG this => _63
      # DEBUG __c => 10
      # .MEM_212 = VDEF <.MEM_62>
      std::ctype<char>::_M_widen_init (_63);
      # VUSE <.MEM_212>
      _141 = MEM[(const struct ctype *)_63].D.18015._vptr.facet;
      # VUSE <.MEM_212>
      _142 = MEM[(int (*__vtbl_ptr_type) () *)_141 + 48B];
      PROF_146 = [obj_type_ref] OBJ_TYPE_REF(_142;(const struct ctype)_63->6);
      if (PROF_146 == do_widen)
        goto <bb 40>;
      else
        goto <bb 39>;

    }
    bb_39 (preds = {bb_38 }, succs = {bb_40 })
    {
      <bb 39>:
      # .MEM_213 = VDEF <.MEM_212>
      _148 = OBJ_TYPE_REF(_142;(const struct ctype)_63->6) (_63, 10);
      pretmp_164 = (int) _148;

    }
    bb_40 (preds = {bb_37 bb_38 bb_39 }, succs = {bb_41 bb_33 })
    {
      <bb 40>:
      # .MEM_181 = PHI <.MEM_62(37), .MEM_212(38), .MEM_213(39)>
      # prephitmp_224 = PHI <pretmp_144(37), 10(38), pretmp_164(39)>
      # .MEM_217 = VDEF <.MEM_181>
      _131 = std::basic_ostream<char>::put (_25, prephitmp_224);
      # DEBUG __os => _131
      # .MEM_218 = VDEF <.MEM_217>
      std::basic_ostream<char>::flush (_131);
      # DEBUG this => &i
      # VUSE <.MEM_218>
      i$_M_node_48 = std::_Rb_tree_increment (i$_M_node_170);
      # DEBUG i$_M_node => i$_M_node_48
      # DEBUG i$_M_node => i$_M_node_48
      # DEBUG D#94 => &this_12(D)->_int_map
      # DEBUG this => D#94
      # DEBUG D#56 => &D#94->_M_t
      # DEBUG this => D#56
      # DEBUG this => NULL
      # DEBUG __x => _103
      # DEBUG this => &D.38468
      # DEBUG __it => &D.38467
      # DEBUG this => &i
      # DEBUG __x => &D.38468
      if (i$_M_node_48 != _103)
        goto <bb 41>;
      else
        goto <bb 33>;

    }
    bb_41 (preds = {bb_40 }, succs = {bb_35 })
    {
      <bb 41>:
      goto <bb 35>;

    }
  }
  loop_1 (header = 23, latch = 32, niter = )
  {
    bb_23 (preds = {bb_22 bb_32 }, succs = {bb_24 bb_31 })
    {
      <bb 23>:
      # .MEM_206 = PHI <.MEM_228(22), .MEM_2(32)>
      # i$_M_node_118 = PHI <i$_M_node_13(22), i$_M_node_44(32)>
      # DEBUG i$_M_node => i$_M_node_118
      # DEBUG D#89 => &this_12(D)->_str_map
      # DEBUG this => D#89
      # DEBUG D#53 => &D#89->_M_t
      # DEBUG this => D#53
      # DEBUG this => NULL
      # DEBUG __x => _129
      # DEBUG this => &D.38463
      # DEBUG __it => &D.38462
      # DEBUG this => &i
      # DEBUG __x => &D.38463
      # DEBUG this => &i
      # DEBUG this => i$_M_node_118
      # DEBUG D#83 => &MEM[(const struct _Rb_tree_node *)i$_M_node_118]._M_value_field
      # DEBUG __r => D#83
      # DEBUG D#84 => &MEM[(const struct pair *)i$_M_node_118 + 32B].second
      # DEBUG this => D#84
      # DEBUG __pos => 0
      # VUSE <.MEM_206>
      _14 = MEM[(char * *)i$_M_node_118 + 64B];
      # DEBUG D#3 => D#84
      # DEBUG this => D#3
      # VUSE <.MEM_206>
      _16 = MEM[(const char &)_14];
      if (_16 != 0)
        goto <bb 24>;
      else
        goto <bb 31>;

    }
    bb_24 (preds = {bb_23 }, succs = {bb_25 bb_26 })
    {
      <bb 24>:
      # DEBUG this => &i
      # DEBUG this => i$_M_node_118
      # DEBUG D#85 => &MEM[(const struct _Rb_tree_node *)i$_M_node_118]._M_value_field
      # DEBUG __r => D#85
      # DEBUG D#86 => &MEM[(const struct pair *)i$_M_node_118 + 32B].second
      # DEBUG this => &i
      # DEBUG this => i$_M_node_118
      # DEBUG D#87 => &MEM[(const struct _Rb_tree_node *)i$_M_node_118]._M_value_field
      # DEBUG __r => D#87
      # DEBUG D#88 => &MEM[(const struct pair *)i$_M_node_118 + 32B].first
      # DEBUG __os => _10
      # DEBUG __str => D#88
      # VUSE <.MEM_206>
      _8 = MEM[(long unsigned int *)i$_M_node_118 + 40B];
      # DEBUG D#2 => D#88
      # DEBUG this => D#2
      _38 = (long int) _8;
      # DEBUG this => D#88
      # VUSE <.MEM_206>
      _39 = MEM[(char * *)i$_M_node_118 + 32B];
      # DEBUG D#3 => D#88
      # DEBUG this => D#3
      # .MEM_54 = VDEF <.MEM_206>
      _40 = std::__ostream_insert<char, std::char_traits<char> > (_10, _39, _38);
      # DEBUG __out => _40
      # DEBUG __s => " = "
      # DEBUG __s => " = "
      # .MEM_55 = VDEF <.MEM_54>
      std::__ostream_insert<char, std::char_traits<char> > (_40, " = ", 3);
      # DEBUG __os => _40
      # DEBUG __str => D#86
      # VUSE <.MEM_55>
      _17 = MEM[(long unsigned int *)i$_M_node_118 + 72B];
      # DEBUG D#2 => D#86
      # DEBUG this => D#2
      _41 = (long int) _17;
      # DEBUG this => D#86
      # VUSE <.MEM_55>
      _42 = MEM[(char * *)i$_M_node_118 + 64B];
      # DEBUG D#3 => D#86
      # DEBUG this => D#3
      # .MEM_56 = VDEF <.MEM_55>
      _43 = std::__ostream_insert<char, std::char_traits<char> > (_40, _42, _41);
      # DEBUG __out => _43
      # DEBUG __s => ";"
      # DEBUG __s => ";"
      # .MEM_57 = VDEF <.MEM_56>
      std::__ostream_insert<char, std::char_traits<char> > (_43, ";", 1);
      # DEBUG this => _43
      # DEBUG __pf => endl
      # DEBUG __os => _43
      # VUSE <.MEM_57>
      _99 = _43->_vptr.basic_ostream;
      # VUSE <.MEM_57>
      _100 = MEM[(long int *)_99 + -24B];
      _101 = (sizetype) _100;
      _102 = _43 + _101;
      # DEBUG this => _102
      # DEBUG __c => 10
      # VUSE <.MEM_57>
      _58 = MEM[(const struct basic_ios *)_102]._M_ctype;
      # DEBUG __f => _58
      if (_58 == 0B)
        goto <bb 25>;
      else
        goto <bb 26>;

    }
    bb_26 (preds = {bb_24 }, succs = {bb_27 bb_28 })
    {
      <bb 26>:
      # DEBUG this => _58
      # DEBUG __c => 10
      # VUSE <.MEM_57>
      _107 = MEM[(const struct ctype *)_58]._M_widen_ok;
      if (_107 != 0)
        goto <bb 27>;
      else
        goto <bb 28>;

    }
    bb_27 (preds = {bb_26 }, succs = {bb_30 })
    {
      <bb 27>:
      # VUSE <.MEM_57>
      _110 = MEM[(const struct ctype *)_58]._M_widen[10];
      pretmp_11 = (int) _110;
      goto <bb 30>;

    }
    bb_28 (preds = {bb_26 }, succs = {bb_30 bb_29 })
    {
      <bb 28>:
      # DEBUG this => _58
      # DEBUG __c => 10
      # .MEM_203 = VDEF <.MEM_57>
      std::ctype<char>::_M_widen_init (_58);
      # VUSE <.MEM_203>
      _115 = MEM[(const struct ctype *)_58].D.18015._vptr.facet;
      # VUSE <.MEM_203>
      _116 = MEM[(int (*__vtbl_ptr_type) () *)_115 + 48B];
      PROF_120 = [obj_type_ref] OBJ_TYPE_REF(_116;(const struct ctype)_58->6);
      if (PROF_120 == do_widen)
        goto <bb 30>;
      else
        goto <bb 29>;

    }
    bb_29 (preds = {bb_28 }, succs = {bb_30 })
    {
      <bb 29>:
      # .MEM_204 = VDEF <.MEM_203>
      _122 = OBJ_TYPE_REF(_116;(const struct ctype)_58->6) (_58, 10);
      pretmp_83 = (int) _122;

    }
    bb_30 (preds = {bb_27 bb_28 bb_29 }, succs = {bb_31 })
    {
      <bb 30>:
      # .MEM_179 = PHI <.MEM_57(27), .MEM_203(28), .MEM_204(29)>
      # prephitmp_84 = PHI <pretmp_11(27), 10(28), pretmp_83(29)>
      # .MEM_208 = VDEF <.MEM_179>
      _105 = std::basic_ostream<char>::put (_43, prephitmp_84);
      # DEBUG __os => _105
      # .MEM_209 = VDEF <.MEM_208>
      std::basic_ostream<char>::flush (_105);

    }
    bb_31 (preds = {bb_23 bb_30 }, succs = {bb_32 bb_21 })
    {
      <bb 31>:
      # .MEM_2 = PHI <.MEM_206(23), .MEM_209(30)>
      # DEBUG this => &i
      # VUSE <.MEM_2>
      i$_M_node_44 = std::_Rb_tree_increment (i$_M_node_118);
      # DEBUG i$_M_node => i$_M_node_44
      # DEBUG i$_M_node => i$_M_node_44
      # DEBUG D#89 => &this_12(D)->_str_map
      # DEBUG this => D#89
      # DEBUG D#53 => &D#89->_M_t
      # DEBUG this => D#53
      # DEBUG this => NULL
      # DEBUG __x => _129
      # DEBUG this => &D.38463
      # DEBUG __it => &D.38462
      # DEBUG this => &i
      # DEBUG __x => &D.38463
      if (i$_M_node_44 != _129)
        goto <bb 32>;
      else
        goto <bb 21>;

    }
    bb_32 (preds = {bb_31 }, succs = {bb_23 })
    {
      <bb 32>:
      goto <bb 23>;

    }
  }
}

Pass statistics:
----------------

void Configuration::WriteFile(const string&) (struct ConfigurationD.32032 * const thisD.38423, const struct stringD.2845 & filenameD.38421)
Eh tree:
   1 cleanup land:{1,<L15>}
     19 cleanup land:{8,<L22>},{5,<L29>}
       20 cleanup land:{9,<L23>},{6,<L28>}
         22 cleanup land:{12,<L26>},{11,<L25>},{10,<L24>},{7,<L27>}
         21 must_not_throw
     18 must_not_throw
{
  char_typeD.17868 D.56040;
  charD.10 __cD.56039;
  char_typeD.17868 D.56037;
  charD.10 __cD.56036;
  char_typeD.20947 D.56034;
  struct basic_ostreamD.7361 & D.56028;
  char_typeD.17868 D.56025;
  charD.10 __cD.56024;
  char_typeD.17868 D.56022;
  charD.10 __cD.56021;
  char_typeD.20947 D.56019;
  struct basic_ostreamD.7361 & D.56013;
  char_typeD.17868 D.56010;
  charD.10 __cD.56009;
  char_typeD.17868 D.56007;
  charD.10 __cD.56006;
  char_typeD.20947 D.56004;
  struct basic_ostreamD.7361 & D.55998;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47841;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47837;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47833;
  const size_typeD.11502 _8;
  voidD.45 * _10;
  intD.9 pretmp_11;
  charD.10 * const _14;
  charD.10 _16;
  const size_typeD.11502 _17;
  const size_typeD.11502 _20;
  charD.10 * const _22;
  intD.9 _23;
  struct basic_ostreamD.7361 & _25;
  const size_typeD.11502 _28;
  doubleD.39 _30;
  struct __ostream_typeD.21606 & _31;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _34;
  intD.9 (*__vtbl_ptr_typeD.2760) () _35;
  long intD.12 _38;
  charD.10 * const _39;
  struct basic_ostreamD.7361 & _40;
  long intD.12 _41;
  charD.10 * const _42;
  struct basic_ostreamD.7361 & _43;
  long intD.12 _45;
  charD.10 * const _46;
  struct basic_ostreamD.7361 & _47;
  long intD.12 _49;
  charD.10 * const _50;
  struct basic_ostreamD.7361 & _51;
  const struct __ctype_typeD.20952 * _58;
  const struct __ctype_typeD.20952 * _63;
  const struct __ctype_typeD.20952 * _69;
  struct ios_baseD.7294 * _70;
  struct basic_ostreamD.7361 * _71;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.155_72;
  long intD.12 _73;
  sizetype iftmp.156_74;
  struct basic_iosD.7355 * _75;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.157_76;
  struct __filebuf_typeD.27142 * _77;
  struct basic_iosD.7355 * _79;
  long intD.12 _80;
  sizetype iftmp.161_81;
  struct basic_iosD.7355 * _82;
  intD.9 pretmp_83;
  intD.9 prephitmp_84;
  struct __filebuf_typeD.26924 * _86;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _87;
  long intD.12 _88;
  sizetype _89;
  struct basic_iosD.7355 * _90;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _91;
  long intD.12 _92;
  sizetype _93;
  struct basic_iosD.7355 * _94;
  const iostateD.15838 _95;
  intD.9 __a.104_96;
  intD.9 _97;
  _Ios_IostateD.15710 _98;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _99;
  long intD.12 _100;
  sizetype _101;
  struct basic_iosD.7355 * _102;
  struct _Rb_tree_node_baseD.27676 * _103;
  struct basic_ostreamD.7361 & _105;
  charD.10 _107;
  char_typeD.17868 _110;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _115;
  intD.9 (*__vtbl_ptr_typeD.2760) () _116;
  voidD.45 * PROF_120;
  char_typeD.17868 _122;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _125;
  long intD.12 _126;
  sizetype _127;
  struct basic_iosD.7355 * _128;
  struct _Rb_tree_node_baseD.27676 * _129;
  struct basic_ostreamD.7361 & _131;
  charD.10 _133;
  char_typeD.17868 _136;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _141;
  intD.9 (*__vtbl_ptr_typeD.2760) () _142;
  intD.9 pretmp_144;
  voidD.45 * PROF_146;
  char_typeD.17868 _148;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _151;
  long intD.12 _152;
  sizetype _153;
  struct basic_iosD.7355 * _154;
  struct basic_ostreamD.7361 & _157;
  struct _Rb_tree_node_baseD.27676 * _158;
  charD.10 _159;
  char_typeD.17868 _162;
  intD.9 pretmp_164;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _167;
  intD.9 (*__vtbl_ptr_typeD.2760) () _168;
  voidD.45 * PROF_172;
  char_typeD.17868 _174;
  intD.9 pretmp_180;
  intD.9 pretmp_182;
  intD.9 prephitmp_224;
  intD.9 prephitmp_225;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.47711 => filename_7(D)
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _22 = MEM[(charD.10 * *)filename_7(D)];
  # DEBUG D#3ptD.0 => filename_7(D)
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __aD.47708 => 16
  # DEBUG __bD.47709 => 32
  # .MEM_9 = VDEF <.MEM_6(D)>
  # PT = { D.56051 } (escaped heap)
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _10 = _ZnwmD.2764 (512);
  # DEBUG thisD.55969 => _10
  # DEBUG __sD.55970 => _22
  # DEBUG __modeD.55971 => 48
  # DEBUG D#30ptD.0 => &MEM[(struct basic_ofstreamD.7377 *)_10].D.27206
  # DEBUG thisD.55975 => D#30ptD.0
  # PT = { D.56051 } (escaped heap)
  _70 = &MEM[(struct basic_iosD.7355 *)_10 + 248B].D.21051;
  # .MEM_184 = VDEF <.MEM_9>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt8ios_baseC2EvD.16016 (_70);
  # .MEM_185 = VDEF <.MEM_184>
  MEM[(struct basic_iosD.7355 *)_10 + 248B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.21060 + 16B];
  # .MEM_186 = VDEF <.MEM_185>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_tieD.20955 = 0B;
  # .MEM_187 = VDEF <.MEM_186>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_fillD.20956 = 0;
  # .MEM_188 = VDEF <.MEM_187>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_fill_initD.20957 = 0;
  # .MEM_189 = VDEF <.MEM_188>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_streambufD.20958 = 0B;
  # .MEM_190 = VDEF <.MEM_189>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_ctypeD.20959 = 0B;
  # .MEM_191 = VDEF <.MEM_190>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_num_putD.20960 = 0B;
  # .MEM_192 = VDEF <.MEM_191>
  MEM[(struct basic_iosD.7355 *)_10 + 248B]._M_num_getD.20961 = 0B;
  # PT = { D.56051 } (escaped heap)
  _71 = &MEM[(struct basic_ofstreamD.7377 *)_10].D.27203;
  # DEBUG thisD.55977 => _71
  # DEBUG __vtt_parmD.55976 => &MEM[(voidD.45 *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEED.27212 + 8B]
  # VUSE <.MEM_192>
  # PT = nonlocal escaped 
  iftmp.155_72 = MEM[(const voidD.45 * *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEED.27212 + 8B];
  # .MEM_193 = VDEF <.MEM_192>
  MEM[(struct basic_ostreamD.7361 *)_10]._vptr.basic_ostreamD.21735 = iftmp.155_72;
  # VUSE <.MEM_193>
  _73 = MEM[(long intD.12 *)iftmp.155_72 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.156_74 = (sizetype) _73;
  # PT = { D.56051 } (escaped heap)
  _75 = _71 + iftmp.156_74;
  # VUSE <.MEM_193>
  # PT = nonlocal escaped 
  iftmp.157_76 = MEM[(const voidD.45 * *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEED.27212 + 16B];
  # .MEM_194 = VDEF <.MEM_193>
  _75->D.21051._vptr.ios_baseD.16027 = iftmp.157_76;
  [LP 8] # .MEM_195 = VDEF <.MEM_194>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.21026 (_75, 0B);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 (EH,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_196 = VDEF <.MEM_195>
  MEM[(struct basic_ofstreamD.7377 *)_10].D.27203._vptr.basic_ostreamD.21735 = &MEM[(voidD.45 *)&_ZTVSt14basic_ofstreamIcSt11char_traitsIcEED.27207 + 24B];
  # .MEM_197 = VDEF <.MEM_196>
  MEM[(struct basic_iosD.7355 *)_10 + 248B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt14basic_ofstreamIcSt11char_traitsIcEED.27207 + 64B];
  # PT = { D.56051 } (escaped heap)
  _77 = &MEM[(struct basic_ofstreamD.7377 *)_10]._M_filebufD.27144;
  [LP 9] # .MEM_198 = VDEF <.MEM_197>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt13basic_filebufIcSt11char_traitsIcEEC1EvD.27022 (_77);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.56051 } (escaped heap)
  _79 = _10 + 248;
  [LP 10] # .MEM_199 = VDEF <.MEM_198>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.21026 (_79, _77);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.55981 => _10
  # DEBUG __sD.55982 => _22
  # DEBUG __modeD.55983 => 48
  # DEBUG __aD.55985 => 48
  # DEBUG __bD.55984 => 16
  [LP 11] # .MEM_200 = VDEF <.MEM_199>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _86 = _ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_OpenmodeD.26959 (_77, _22, 48);
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L25>: [LP 11]
  goto <bb 13> (<L19>);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_86 == 0B)
    goto <bb 8>;
  else
    goto <bb 10>;
;;    succ:       8 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 91, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#25ptD.0 => _22
  # DEBUG D#26ptD.0 => 48
  # DEBUG thisD.55986 => _10
  # DEBUG D#27ptD.0 => D#26ptD.0
  # DEBUG __modeD.55987 => D#27ptD.0
  # DEBUG D#28ptD.0 => D#25ptD.0
  # DEBUG __sD.55988 => D#28ptD.0
  # VUSE <.MEM_200>
  # PT = nonlocal escaped null { D.21060 D.27207 } (nonlocal, escaped)
  _91 = MEM[(struct basic_ofstreamD.7377 *)_10].D.27203._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_200>
  _92 = MEM[(long intD.12 *)_91 + -24B];
  # RANGE [0, 18446744073709551615]
  _93 = (sizetype) _92;
  # PT = { D.56051 } (escaped heap)
  _94 = _10 + _93;
  # DEBUG thisD.55990 => _94
  # DEBUG __stateD.55989 => 4
  # VUSE <.MEM_200>
  _95 = MEM[(_Ios_IostateD.15710 *)_94 + 32B];
  # DEBUG D#4ptD.0 => _94
  # DEBUG thisD.47094 => D#4ptD.0
  # DEBUG __aD.55992 => _95
  # DEBUG __bD.55991 => 4
  __a.104_96 = (intD.9) _95;
  # RANGE ~[0, 0]
  _97 = __a.104_96 | 4;
  # RANGE [1, 4294967295]
  _98 = (_Ios_IostateD.15710) _97;
  [LP 12] # .MEM_202 = VDEF <.MEM_200>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_IostateD.20968 (_94, _98);
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L26>: [LP 12]
  goto <bb 13> (<L19>);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 810, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       7 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_200>
  # PT = nonlocal escaped null { D.21060 D.27207 } (nonlocal, escaped)
  _87 = MEM[(struct basic_ofstreamD.7377 *)_10].D.27203._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_200>
  _88 = MEM[(long intD.12 *)_87 + -24B];
  # RANGE [0, 18446744073709551615]
  _89 = (sizetype) _88;
  # PT = { D.56051 } (escaped heap)
  _90 = _10 + _89;
  [LP 7] # .MEM_201 = VDEF <.MEM_200>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_IostateD.20968 (_90, 0);
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 (EH,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 (EH,EXECUTABLE)
<L27>: [LP 7]
  goto <bb 13> (<L19>);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L24>: [LP 10]
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_171 = PHI <.MEM_199(12), .MEM_201(11), .MEM_200(6), .MEM_202(9)>
<L19>:
  [MNT 21] # .MEM_230 = VDEF <.MEM_171>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt13basic_filebufIcSt11char_traitsIcEED1EvD.27029 (_77);
  [LP 6] resx 22
;;    succ:       14 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 (EH,EXECUTABLE)
<L28>: [LP 6]
  goto <bb 16> (<L20>);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       3 (EH,EXECUTABLE)
<L23>: [LP 9]
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_145 = PHI <.MEM_198(15), .MEM_230(14)>
<L20>:
  # DEBUG thisD.55974 => _71
  # DEBUG __vtt_parmD.55973 => &MEM[(voidD.45 *)&_ZTTSt14basic_ofstreamIcSt11char_traitsIcEED.27212 + 8B]
  # VUSE <.MEM_145>
  _80 = MEM[(long intD.12 *)iftmp.155_72 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.161_81 = (sizetype) _80;
  # PT = { D.56051 } (escaped heap)
  _82 = _71 + iftmp.161_81;
  # .MEM_232 = VDEF <.MEM_145>
  _82->D.21051._vptr.ios_baseD.16027 = iftmp.157_76;
  # .MEM_233 = VDEF <.MEM_232>
  MEM[(struct  &)_10] ={v} {CLOBBER};
  [LP 5] resx 20
;;    succ:       17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L29>: [LP 5]
  goto <bb 19> (<L21>);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       2 (EH,EXECUTABLE)
<L22>: [LP 8]
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_195(18), .MEM_233(17)>
<L21>:
  # DEBUG D#29ptD.0 => &MEM[(struct basic_ofstreamD.7377 *)_10].D.27206
  # DEBUG thisD.55972 => D#29ptD.0
  # .MEM_234 = VDEF <.MEM_119>
  MEM[(struct basic_iosD.7355 *)_10 + 248B].D.21051._vptr.ios_baseD.16027 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.21060 + 16B];
  [MNT 18] # .MEM_235 = VDEF <.MEM_234>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.16024 (_70);
  # .MEM_236 = VDEF <.MEM_235>
  MEM[(struct  &)_10 + 248] ={v} {CLOBBER};
  [LP 1] resx 19
;;    succ:       51 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_228 = PHI <.MEM_202(8), .MEM_201(10)>
  # DEBUG config_outD.38425 => _10
  # DEBUG D#82ptD.0 => &this_12(D)->_str_mapD.33116
  # DEBUG thisD.47715 => D#82ptD.0
  # DEBUG D#55ptD.0 => &D#82ptD.0->_M_tD.32259
  # VUSE <.MEM_228>
  # PT = nonlocal escaped 
  i$_M_node_13 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_12(D) + 64B];
  # DEBUG D#54ptD.0 => D#55ptD.0
  # DEBUG thisD.47461 => D#54ptD.0
  # DEBUG thisD.47453 => NULL
  # DEBUG __xD.47452 => i$_M_node_13
  # DEBUG thisD.47713 => &iD.38459
  # DEBUG __itD.47714 => &D.38460
  # DEBUG i$_M_nodeD.47833 => i$_M_node_13
  # DEBUG i$_M_nodeD.47833 => i$_M_node_13
  # DEBUG D#89ptD.0 => &this_12(D)->_str_mapD.33116
  # DEBUG thisD.47723 => D#89ptD.0
  # DEBUG D#53ptD.0 => &D#89ptD.0->_M_tD.32259
  # DEBUG thisD.47724 => D#53ptD.0
  # PT = nonlocal 
  _129 = &MEM[(struct _Rb_treeD.32258 *)this_12(D) + 40B]._M_implD.32337._M_headerD.32503;
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => _129
  # DEBUG thisD.47721 => &D.38463
  # DEBUG __itD.47722 => &D.38462
  # DEBUG thisD.47718 => &iD.38459
  # DEBUG __xD.47719 => &D.38463
  if (i$_M_node_13 != _129)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_219 = PHI <.MEM_228(20), .MEM_2(31)>
  # DEBUG D#101ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47833 => D#101ptD.0
  # DEBUG D#90ptD.0 => &this_12(D)->_int_mapD.34183
  # DEBUG thisD.47760 => D#90ptD.0
  # DEBUG D#58ptD.0 => &D#90ptD.0->_M_tD.33338
  # VUSE <.MEM_219>
  # PT = nonlocal escaped 
  i$_M_node_19 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_12(D) + 112B];
  # DEBUG D#57ptD.0 => D#58ptD.0
  # DEBUG thisD.47493 => D#57ptD.0
  # DEBUG thisD.47485 => NULL
  # DEBUG __xD.47484 => i$_M_node_19
  # DEBUG thisD.47758 => &iD.38464
  # DEBUG __itD.47759 => &D.38465
  # DEBUG i$_M_nodeD.47837 => i$_M_node_19
  # DEBUG i$_M_nodeD.47837 => i$_M_node_19
  # DEBUG D#94ptD.0 => &this_12(D)->_int_mapD.34183
  # DEBUG thisD.47768 => D#94ptD.0
  # DEBUG D#56ptD.0 => &D#94ptD.0->_M_tD.33338
  # DEBUG thisD.47769 => D#56ptD.0
  # PT = nonlocal 
  _103 = &MEM[(struct _Rb_treeD.33337 *)this_12(D) + 88B]._M_implD.33415._M_headerD.33570;
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => _103
  # DEBUG thisD.47766 => &D.38468
  # DEBUG __itD.47767 => &D.38467
  # DEBUG thisD.47763 => &iD.38464
  # DEBUG __xD.47764 => &D.38468
  if (i$_M_node_19 != _103)
    goto <bb 34>;
  else
    goto <bb 33>;
;;    succ:       34 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 820, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       20 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_206 = PHI <.MEM_228(22), .MEM_2(32)>
  # PT = nonlocal escaped 
  # i$_M_node_118 = PHI <i$_M_node_13(22), i$_M_node_44(32)>
  # DEBUG i$_M_nodeD.47833 => i$_M_node_118
  # DEBUG D#89ptD.0 => &this_12(D)->_str_mapD.33116
  # DEBUG thisD.47723 => D#89ptD.0
  # DEBUG D#53ptD.0 => &D#89ptD.0->_M_tD.32259
  # DEBUG thisD.47724 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => _129
  # DEBUG thisD.47721 => &D.38463
  # DEBUG __itD.47722 => &D.38462
  # DEBUG thisD.47718 => &iD.38459
  # DEBUG __xD.47719 => &D.38463
  # DEBUG thisD.47730 => &iD.38459
  # DEBUG thisD.47731 => i$_M_node_118
  # DEBUG D#83ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_118]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#83ptD.0
  # DEBUG D#84ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_118 + 32B].secondD.35539
  # DEBUG thisD.47727 => D#84ptD.0
  # DEBUG __posD.47728 => 0
  # VUSE <.MEM_206>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)i$_M_node_118 + 64B];
  # DEBUG D#3ptD.0 => D#84ptD.0
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_206>
  _16 = MEM[(const charD.10 &)_14];
  if (_16 != 0)
    goto <bb 24>;
  else
    goto <bb 31>;
;;    succ:       24 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 2639, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.47739 => &iD.38459
  # DEBUG thisD.47740 => i$_M_node_118
  # DEBUG D#85ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_118]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#85ptD.0
  # DEBUG D#86ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_118 + 32B].secondD.35539
  # DEBUG thisD.47736 => &iD.38459
  # DEBUG thisD.47737 => i$_M_node_118
  # DEBUG D#87ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_118]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#87ptD.0
  # DEBUG D#88ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_118 + 32B].firstD.35538
  # DEBUG __osD.47733 => _10
  # DEBUG __strD.47734 => D#88ptD.0
  # VUSE <.MEM_206>
  _8 = MEM[(long unsigned intD.14 *)i$_M_node_118 + 40B];
  # DEBUG D#2ptD.0 => D#88ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _38 = (long intD.12) _8;
  # DEBUG thisD.46948 => D#88ptD.0
  # VUSE <.MEM_206>
  # PT = nonlocal escaped 
  _39 = MEM[(charD.10 * *)i$_M_node_118 + 32B];
  # DEBUG D#3ptD.0 => D#88ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_54 = VDEF <.MEM_206>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _40 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_10, _39, _38);
  # DEBUG __outD.47742 => _40
  # DEBUG __sD.47743 => " = "
  # DEBUG __sD.47744 => " = "
  # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_40, " = ", 3);
  # DEBUG __osD.47746 => _40
  # DEBUG __strD.47747 => D#86ptD.0
  # VUSE <.MEM_55>
  _17 = MEM[(long unsigned intD.14 *)i$_M_node_118 + 72B];
  # DEBUG D#2ptD.0 => D#86ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _41 = (long intD.12) _17;
  # DEBUG thisD.46948 => D#86ptD.0
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _42 = MEM[(charD.10 * *)i$_M_node_118 + 64B];
  # DEBUG D#3ptD.0 => D#86ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_56 = VDEF <.MEM_55>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _43 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_40, _42, _41);
  # DEBUG __outD.47749 => _43
  # DEBUG __sD.47750 => ";"
  # DEBUG __sD.47751 => ";"
  # .MEM_57 = VDEF <.MEM_56>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_43, ";", 1);
  # DEBUG thisD.47753 => _43
  # DEBUG __pfD.47754 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.55996 => _43
  # VUSE <.MEM_57>
  # PT = nonlocal escaped null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _99 = _43->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_57>
  _100 = MEM[(long intD.12 *)_99 + -24B];
  # RANGE [0, 18446744073709551615]
  _101 = (sizetype) _100;
  # PT = nonlocal escaped 
  _102 = _43 + _101;
  # DEBUG thisD.55999 => _102
  # DEBUG __cD.56000 => 10
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _58 = MEM[(const struct basic_iosD.7355 *)_102]._M_ctypeD.20959;
  # DEBUG __fD.56001 => _58
  if (_58 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_231 = PHI <.MEM_57(24), .MEM_62(35), .MEM_68(44)>
  # .MEM_211 = VDEF <.MEM_231>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2851 ();
;;    succ:      

;;   basic block 26, loop depth 1, count 0, freq 2638, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56003 => _58
  # DEBUG __cD.56002 => 10
  # VUSE <.MEM_57>
  _107 = MEM[(const struct ctypeD.7662 *)_58]._M_widen_okD.17874;
  if (_107 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 1610, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_57>
  _110 = MEM[(const struct ctypeD.7662 *)_58]._M_widenD.17875[10];
  pretmp_11 = (intD.9) _110;
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 1028, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56005 => _58
  # DEBUG __cD.56006 => 10
  # .MEM_203 = VDEF <.MEM_57>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_58);
  # VUSE <.MEM_203>
  # PT = nonlocal escaped 
  _115 = MEM[(const struct ctypeD.7662 *)_58].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_203>
  # PT = nonlocal escaped 
  _116 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_115 + 48B];
  # PT = anything 
  PROF_120 = [obj_type_ref] OBJ_TYPE_REF(_116;(const struct ctypeD.7662)_58->6);
  if (PROF_120 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 30>;
  else
    goto <bb 29>;
;;    succ:       30 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 204, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_204 = VDEF <.MEM_203>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _122 = OBJ_TYPE_REF(_116;(const struct ctypeD.7662)_58->6) (_58, 10);
  pretmp_83 = (intD.9) _122;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 2638, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_179 = PHI <.MEM_57(27), .MEM_203(28), .MEM_204(29)>
  # RANGE [-128, 127]
  # prephitmp_84 = PHI <pretmp_11(27), 10(28), pretmp_83(29)>
  # .MEM_208 = VDEF <.MEM_179>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _105 = _ZNSo3putEcD.21670 (_43, prephitmp_84);
  # DEBUG __osD.55997 => _105
  # .MEM_209 = VDEF <.MEM_208>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_105);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       23 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_206(23), .MEM_209(30)>
  # DEBUG thisD.47756 => &iD.38459
  # VUSE <.MEM_2>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_44 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_118);
  # DEBUG i$_M_nodeD.47833 => i$_M_node_44
  # DEBUG i$_M_nodeD.47833 => i$_M_node_44
  # DEBUG D#89ptD.0 => &this_12(D)->_str_mapD.33116
  # DEBUG thisD.47723 => D#89ptD.0
  # DEBUG D#53ptD.0 => &D#89ptD.0->_M_tD.32259
  # DEBUG thisD.47724 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => _129
  # DEBUG thisD.47721 => &D.38463
  # DEBUG __itD.47722 => &D.38462
  # DEBUG thisD.47718 => &iD.38459
  # DEBUG __xD.47719 => &D.38463
  if (i$_M_node_44 != _129)
    goto <bb 32>;
  else
    goto <bb 21>;
;;    succ:       32 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       31 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 897, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       21 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                40 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_178 = PHI <.MEM_219(21), .MEM_218(40)>
  # DEBUG D#103ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47837 => D#103ptD.0
  # DEBUG D#95ptD.0 => &this_12(D)->_float_mapD.35250
  # DEBUG thisD.47796 => D#95ptD.0
  # DEBUG D#65ptD.0 => &D#95ptD.0->_M_tD.34405
  # VUSE <.MEM_178>
  # PT = nonlocal escaped 
  i$_M_node_27 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_12(D) + 160B];
  # DEBUG D#64ptD.0 => D#65ptD.0
  # DEBUG thisD.47544 => D#64ptD.0
  # DEBUG thisD.47536 => NULL
  # DEBUG __xD.47535 => i$_M_node_27
  # DEBUG thisD.47794 => &iD.38469
  # DEBUG __itD.47795 => &D.38470
  # DEBUG i$_M_nodeD.47841 => i$_M_node_27
  # DEBUG i$_M_nodeD.47841 => i$_M_node_27
  # DEBUG D#99ptD.0 => &this_12(D)->_float_mapD.35250
  # DEBUG thisD.47804 => D#99ptD.0
  # DEBUG D#63ptD.0 => &D#99ptD.0->_M_tD.34405
  # DEBUG thisD.47805 => D#63ptD.0
  # PT = nonlocal 
  _158 = &MEM[(struct _Rb_treeD.34404 *)this_12(D) + 136B]._M_implD.34482._M_headerD.34637;
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => _158
  # DEBUG thisD.47802 => &D.38473
  # DEBUG __itD.47803 => &D.38472
  # DEBUG thisD.47799 => &iD.38469
  # DEBUG __xD.47800 => &D.38473
  if (i$_M_node_27 != _158)
    goto <bb 43>;
  else
    goto <bb 42>;
;;    succ:       43 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       21 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 9063, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_207 = PHI <.MEM_219(34), .MEM_218(41)>
  # PT = nonlocal escaped 
  # i$_M_node_170 = PHI <i$_M_node_19(34), i$_M_node_48(41)>
  # DEBUG i$_M_nodeD.47837 => i$_M_node_170
  # DEBUG D#94ptD.0 => &this_12(D)->_int_mapD.34183
  # DEBUG thisD.47768 => D#94ptD.0
  # DEBUG D#56ptD.0 => &D#94ptD.0->_M_tD.33338
  # DEBUG thisD.47769 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => _103
  # DEBUG thisD.47766 => &D.38468
  # DEBUG __itD.47767 => &D.38467
  # DEBUG thisD.47763 => &iD.38464
  # DEBUG __xD.47764 => &D.38468
  # DEBUG thisD.47778 => &iD.38464
  # DEBUG thisD.47779 => i$_M_node_170
  # DEBUG D#91ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)i$_M_node_170]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#91ptD.0
  # VUSE <.MEM_207>
  _23 = MEM[(const struct pairD.33117 *)i$_M_node_170 + 32B].secondD.35722;
  # DEBUG thisD.47775 => &iD.38464
  # DEBUG thisD.47776 => i$_M_node_170
  # DEBUG D#92ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)i$_M_node_170]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#92ptD.0
  # DEBUG D#93ptD.0 => &MEM[(const struct pairD.33117 *)i$_M_node_170 + 32B].firstD.35721
  # DEBUG __osD.47772 => _10
  # DEBUG __strD.47773 => D#93ptD.0
  # VUSE <.MEM_207>
  _20 = MEM[(long unsigned intD.14 *)i$_M_node_170 + 40B];
  # DEBUG D#2ptD.0 => D#93ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _45 = (long intD.12) _20;
  # DEBUG thisD.46948 => D#93ptD.0
  # VUSE <.MEM_207>
  # PT = nonlocal escaped 
  _46 = MEM[(charD.10 * *)i$_M_node_170 + 32B];
  # DEBUG D#3ptD.0 => D#93ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_60 = VDEF <.MEM_207>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _47 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_10, _46, _45);
  # DEBUG __outD.47781 => _47
  # DEBUG __sD.47782 => " = "
  # DEBUG __sD.47783 => " = "
  # .MEM_61 = VDEF <.MEM_60>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_47, " = ", 3);
  # .MEM_24 = VDEF <.MEM_61>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _25 = _ZNSolsEiD.21643 (_47, _23);
  # DEBUG __outD.47785 => _25
  # DEBUG __sD.47786 => ";"
  # DEBUG __sD.47787 => ";"
  # .MEM_62 = VDEF <.MEM_24>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_25, ";", 1);
  # DEBUG thisD.47789 => _25
  # DEBUG __pfD.47790 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56011 => _25
  # VUSE <.MEM_62>
  # PT = nonlocal escaped null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _125 = _25->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_62>
  _126 = MEM[(long intD.12 *)_125 + -24B];
  # RANGE [0, 18446744073709551615]
  _127 = (sizetype) _126;
  # PT = nonlocal escaped 
  _128 = _25 + _127;
  # DEBUG thisD.56014 => _128
  # DEBUG __cD.56015 => 10
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _63 = MEM[(const struct basic_iosD.7355 *)_128]._M_ctypeD.20959;
  # DEBUG __fD.56016 => _63
  if (_63 == 0B)
    goto <bb 25>;
  else
    goto <bb 36>;
;;    succ:       25 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 9060, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56018 => _63
  # DEBUG __cD.56017 => 10
  # VUSE <.MEM_62>
  _133 = MEM[(const struct ctypeD.7662 *)_63]._M_widen_okD.17874;
  if (_133 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 5528, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_62>
  _136 = MEM[(const struct ctypeD.7662 *)_63]._M_widenD.17875[10];
  pretmp_144 = (intD.9) _136;
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 3531, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56020 => _63
  # DEBUG __cD.56021 => 10
  # .MEM_212 = VDEF <.MEM_62>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_63);
  # VUSE <.MEM_212>
  # PT = nonlocal escaped 
  _141 = MEM[(const struct ctypeD.7662 *)_63].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_212>
  # PT = nonlocal escaped 
  _142 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_141 + 48B];
  # PT = anything 
  PROF_146 = [obj_type_ref] OBJ_TYPE_REF(_142;(const struct ctypeD.7662)_63->6);
  if (PROF_146 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 40>;
  else
    goto <bb 39>;
;;    succ:       40 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 701, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_213 = VDEF <.MEM_212>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _148 = OBJ_TYPE_REF(_142;(const struct ctypeD.7662)_63->6) (_63, 10);
  pretmp_164 = (intD.9) _148;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 9064, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_181 = PHI <.MEM_62(37), .MEM_212(38), .MEM_213(39)>
  # RANGE [-128, 127]
  # prephitmp_224 = PHI <pretmp_144(37), 10(38), pretmp_164(39)>
  # .MEM_217 = VDEF <.MEM_181>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _131 = _ZNSo3putEcD.21670 (_25, prephitmp_224);
  # DEBUG __osD.56012 => _131
  # .MEM_218 = VDEF <.MEM_217>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_131);
  # DEBUG thisD.47792 => &iD.38464
  # VUSE <.MEM_218>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_48 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_170);
  # DEBUG i$_M_nodeD.47837 => i$_M_node_48
  # DEBUG i$_M_nodeD.47837 => i$_M_node_48
  # DEBUG D#94ptD.0 => &this_12(D)->_int_mapD.34183
  # DEBUG thisD.47768 => D#94ptD.0
  # DEBUG D#56ptD.0 => &D#94ptD.0->_M_tD.33338
  # DEBUG thisD.47769 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => _103
  # DEBUG thisD.47766 => &D.38468
  # DEBUG __itD.47767 => &D.38467
  # DEBUG thisD.47763 => &iD.38464
  # DEBUG __xD.47764 => &D.38468
  if (i$_M_node_48 != _103)
    goto <bb 41>;
  else
    goto <bb 33>;
;;    succ:       41 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 8248, maybe hot
;;    prev block 40, next block 42, flags: (NEW)
;;    pred:       40 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 893, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       33 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_155 = PHI <.MEM_178(33), .MEM_227(49)>
  # DEBUG D#105ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47841 => D#105ptD.0
  # .MEM_33 = VDEF <.MEM_155>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_10);
  # VUSE <.MEM_33>
  # PT = nonlocal escaped null { D.21060 D.27207 } (nonlocal, escaped)
  _34 = MEM[(struct ostreamD.7362 *)_10]._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _35 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_34 + 8B];
  # .MEM_36 = VDEF <.MEM_33>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  OBJ_TYPE_REF(_35;(struct basic_ostreamD.7361)_10->1) (_10);
  # VUSE <.MEM_36>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 43, loop depth 0, count 0, freq 816, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       33 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 9027, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_138 = PHI <.MEM_178(43), .MEM_227(50)>
  # PT = nonlocal escaped 
  # i$_M_node_215 = PHI <i$_M_node_27(43), i$_M_node_52(50)>
  # DEBUG i$_M_nodeD.47841 => i$_M_node_215
  # DEBUG D#99ptD.0 => &this_12(D)->_float_mapD.35250
  # DEBUG thisD.47804 => D#99ptD.0
  # DEBUG D#63ptD.0 => &D#99ptD.0->_M_tD.34405
  # DEBUG thisD.47805 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => _158
  # DEBUG thisD.47802 => &D.38473
  # DEBUG __itD.47803 => &D.38472
  # DEBUG thisD.47799 => &iD.38469
  # DEBUG __xD.47800 => &D.38473
  # DEBUG thisD.47814 => &iD.38469
  # DEBUG thisD.47815 => i$_M_node_215
  # DEBUG D#96ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)i$_M_node_215]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#96ptD.0
  # VUSE <.MEM_138>
  _30 = MEM[(const struct pairD.34184 *)i$_M_node_215 + 32B].secondD.35902;
  # DEBUG thisD.47811 => &iD.38469
  # DEBUG thisD.47812 => i$_M_node_215
  # DEBUG D#97ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)i$_M_node_215]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#97ptD.0
  # DEBUG D#98ptD.0 => &MEM[(const struct pairD.34184 *)i$_M_node_215 + 32B].firstD.35901
  # DEBUG __osD.47808 => _10
  # DEBUG __strD.47809 => D#98ptD.0
  # VUSE <.MEM_138>
  _28 = MEM[(long unsigned intD.14 *)i$_M_node_215 + 40B];
  # DEBUG D#2ptD.0 => D#98ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _49 = (long intD.12) _28;
  # DEBUG thisD.46948 => D#98ptD.0
  # VUSE <.MEM_138>
  # PT = nonlocal escaped 
  _50 = MEM[(charD.10 * *)i$_M_node_215 + 32B];
  # DEBUG D#3ptD.0 => D#98ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_65 = VDEF <.MEM_138>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _51 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_10, _50, _49);
  # DEBUG __outD.47817 => _51
  # DEBUG __sD.47818 => " = "
  # DEBUG __sD.47819 => " = "
  # .MEM_66 = VDEF <.MEM_65>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_51, " = ", 3);
  # DEBUG thisD.47821 => _51
  # DEBUG __fD.47822 => _30
  # .MEM_67 = VDEF <.MEM_66>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _31 = _ZNSo9_M_insertIdEERSoT_D.21878 (_51, _30);
  # DEBUG __outD.47824 => _31
  # DEBUG __sD.47825 => ";"
  # DEBUG __sD.47826 => ";"
  # .MEM_68 = VDEF <.MEM_67>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_31, ";", 1);
  # DEBUG thisD.47828 => _31
  # DEBUG __pfD.47829 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56026 => _31
  # VUSE <.MEM_68>
  # PT = nonlocal escaped null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _151 = MEM[(struct basic_ostreamD.7361 *)_31]._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_68>
  _152 = MEM[(long intD.12 *)_151 + -24B];
  # RANGE [0, 18446744073709551615]
  _153 = (sizetype) _152;
  # PT = nonlocal escaped 
  _154 = _31 + _153;
  # DEBUG thisD.56029 => _154
  # DEBUG __cD.56030 => 10
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _69 = MEM[(const struct basic_iosD.7355 *)_154]._M_ctypeD.20959;
  # DEBUG __fD.56031 => _69
  if (_69 == 0B)
    goto <bb 25>;
  else
    goto <bb 45>;
;;    succ:       25 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 9023, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56033 => _69
  # DEBUG __cD.56032 => 10
  # VUSE <.MEM_68>
  _159 = MEM[(const struct ctypeD.7662 *)_69]._M_widen_okD.17874;
  if (_159 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 5506, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_68>
  _162 = MEM[(const struct ctypeD.7662 *)_69]._M_widenD.17875[10];
  pretmp_180 = (intD.9) _162;
  goto <bb 49>;
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 3517, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56035 => _69
  # DEBUG __cD.56036 => 10
  # .MEM_221 = VDEF <.MEM_68>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_69);
  # VUSE <.MEM_221>
  # PT = nonlocal escaped 
  _167 = MEM[(const struct ctypeD.7662 *)_69].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_221>
  # PT = nonlocal escaped 
  _168 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_167 + 48B];
  # PT = anything 
  PROF_172 = [obj_type_ref] OBJ_TYPE_REF(_168;(const struct ctypeD.7662)_69->6);
  if (PROF_172 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 49>;
  else
    goto <bb 48>;
;;    succ:       49 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 698, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_222 = VDEF <.MEM_221>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _174 = OBJ_TYPE_REF(_168;(const struct ctypeD.7662)_69->6) (_69, 10);
  pretmp_182 = (intD.9) _174;
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 1, count 0, freq 9027, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_183 = PHI <.MEM_68(46), .MEM_221(47), .MEM_222(48)>
  # RANGE [-128, 127]
  # prephitmp_225 = PHI <pretmp_180(46), 10(47), pretmp_182(48)>
  # .MEM_226 = VDEF <.MEM_183>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _157 = _ZNSo3putEcD.21670 (_31, prephitmp_225);
  # DEBUG __osD.56027 => _157
  # .MEM_227 = VDEF <.MEM_226>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZNSo5flushEvD.21681 (_157);
  # DEBUG thisD.47831 => &iD.38469
  # VUSE <.MEM_227>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_52 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_215);
  # DEBUG i$_M_nodeD.47841 => i$_M_node_52
  # DEBUG i$_M_nodeD.47841 => i$_M_node_52
  # DEBUG D#99ptD.0 => &this_12(D)->_float_mapD.35250
  # DEBUG thisD.47804 => D#99ptD.0
  # DEBUG D#63ptD.0 => &D#99ptD.0->_M_tD.34405
  # DEBUG thisD.47805 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => _158
  # DEBUG thisD.47802 => &D.38473
  # DEBUG __itD.47803 => &D.38472
  # DEBUG thisD.47799 => &iD.38469
  # DEBUG __xD.47800 => &D.38473
  if (i$_M_node_52 != _158)
    goto <bb 50>;
  else
    goto <bb 42>;
;;    succ:       50 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 8215, maybe hot
;;    prev block 49, next block 51, flags: (NEW)
;;    pred:       49 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 44>;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 (EH,EXECUTABLE)
<L15>: [LP 1]
  # .MEM_37 = VDEF <.MEM_236>
  # USE = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  # CLB = nonlocal null { D.21060 D.27207 D.56051 } (nonlocal, escaped)
  _ZdlPvD.2766 (_10);
  resx 1
;;    succ:      

}



;; Function void Configuration::WriteMatlabFile(std::ostream*) const (_ZNK13Configuration15WriteMatlabFileEPSo, funcdef_no=1751, decl_uid=35311, cgraph_uid=437, symbol_order=439)


Pass statistics:
----------------

void Configuration::WriteMatlabFile(std::ostream*) const (const struct ConfigurationD.32032 * const thisD.38482, struct ostreamD.7362 * config_outD.38480)
{
  char_typeD.17868 D.56122;
  charD.10 __cD.56121;
  char_typeD.17868 D.56119;
  charD.10 __cD.56118;
  char_typeD.20947 D.56116;
  struct basic_ostreamD.7361 & D.56110;
  char_typeD.17868 D.56107;
  charD.10 __cD.56106;
  char_typeD.17868 D.56104;
  charD.10 __cD.56103;
  char_typeD.20947 D.56101;
  struct basic_ostreamD.7361 & D.56095;
  char_typeD.17868 D.56092;
  charD.10 __cD.56091;
  char_typeD.17868 D.56089;
  charD.10 __cD.56088;
  char_typeD.20947 D.56086;
  struct basic_ostreamD.7361 & D.56080;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47983;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47981;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47979;
  intD.9 pretmp_1;
  intD.9 pretmp_3;
  charD.10 * const _7;
  charD.10 _8;
  const size_typeD.11502 _10;
  intD.9 pretmp_11;
  intD.9 _13;
  struct basic_ostreamD.7361 & _16;
  intD.9 pretmp_18;
  doubleD.39 _19;
  struct __ostream_typeD.21606 & _21;
  const size_typeD.11502 _25;
  long intD.12 _26;
  charD.10 * const _27;
  struct basic_ostreamD.7361 & _28;
  long intD.12 _29;
  charD.10 * const _30;
  struct basic_ostreamD.7361 & _31;
  const size_typeD.11502 _34;
  long intD.12 _35;
  charD.10 * const _36;
  struct basic_ostreamD.7361 & _37;
  const size_typeD.11502 _40;
  long intD.12 _41;
  charD.10 * const _42;
  struct basic_ostreamD.7361 & _43;
  const struct __ctype_typeD.20952 * _50;
  const struct __ctype_typeD.20952 * _56;
  const struct __ctype_typeD.20952 * _63;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _64;
  long intD.12 _65;
  sizetype _66;
  struct basic_iosD.7355 * _67;
  struct basic_ostreamD.7361 & _70;
  intD.9 pretmp_71;
  charD.10 _72;
  char_typeD.17868 _75;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _80;
  intD.9 (*__vtbl_ptr_typeD.2760) () _81;
  const struct _Rb_tree_node_baseD.27676 * _83;
  intD.9 prephitmp_84;
  voidD.45 * PROF_85;
  char_typeD.17868 _87;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _90;
  long intD.12 _91;
  sizetype _92;
  struct basic_iosD.7355 * _93;
  struct basic_ostreamD.7361 & _96;
  intD.9 prephitmp_97;
  charD.10 _98;
  char_typeD.17868 _101;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _106;
  intD.9 (*__vtbl_ptr_typeD.2760) () _107;
  const struct _Rb_tree_node_baseD.27676 * _109;
  voidD.45 * PROF_111;
  char_typeD.17868 _113;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _116;
  long intD.12 _117;
  sizetype _118;
  struct basic_iosD.7355 * _119;
  struct basic_ostreamD.7361 & _122;
  const struct _Rb_tree_node_baseD.27676 * _123;
  charD.10 _124;
  char_typeD.17868 _127;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _132;
  intD.9 (*__vtbl_ptr_typeD.2760) () _133;
  voidD.45 * PROF_137;
  char_typeD.17868 _139;
  intD.9 prephitmp_148;
  intD.9 pretmp_157;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#106ptD.0 => &this_5(D)->_str_mapD.33116
  # DEBUG thisD.47859 => D#106ptD.0
  # DEBUG D#73ptD.0 => &D#106ptD.0->_M_tD.32259
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  i$_M_node_20 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_5(D) + 64B];
  # DEBUG D#72ptD.0 => D#73ptD.0
  # DEBUG thisD.47603 => D#72ptD.0
  # DEBUG thisD.47595 => NULL
  # DEBUG __xD.47594 => i$_M_node_20
  # DEBUG i$_M_nodeD.47979 => i$_M_node_20
  # DEBUG i$_M_nodeD.47979 => i$_M_node_20
  # DEBUG D#113ptD.0 => &this_5(D)->_str_mapD.33116
  # DEBUG thisD.47865 => D#113ptD.0
  # DEBUG D#71ptD.0 => &D#113ptD.0->_M_tD.32259
  # DEBUG thisD.47866 => D#71ptD.0
  # PT = nonlocal 
  _109 = &MEM[(const struct _Rb_treeD.32258 *)this_5(D) + 40B]._M_implD.32337._M_headerD.32503;
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => _109
  # DEBUG thisD.47862 => &iD.38484
  # DEBUG __xD.47863 => &D.38495
  if (i$_M_node_20 != _109)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_6(D)(2), .MEM_2(13)>
  # DEBUG D#125ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47979 => D#125ptD.0
  # DEBUG D#114ptD.0 => &this_5(D)->_int_mapD.34183
  # DEBUG thisD.47904 => D#114ptD.0
  # DEBUG D#77ptD.0 => &D#114ptD.0->_M_tD.33338
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  i$_M_node_12 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_5(D) + 112B];
  # DEBUG D#76ptD.0 => D#77ptD.0
  # DEBUG thisD.47650 => D#76ptD.0
  # DEBUG thisD.47642 => NULL
  # DEBUG __xD.47641 => i$_M_node_12
  # DEBUG i$_M_nodeD.47981 => i$_M_node_12
  # DEBUG i$_M_nodeD.47981 => i$_M_node_12
  # DEBUG D#118ptD.0 => &this_5(D)->_int_mapD.34183
  # DEBUG thisD.47910 => D#118ptD.0
  # DEBUG D#75ptD.0 => &D#118ptD.0->_M_tD.33338
  # DEBUG thisD.47911 => D#75ptD.0
  # PT = nonlocal 
  _83 = &MEM[(const struct _Rb_treeD.33337 *)this_5(D) + 88B]._M_implD.33415._M_headerD.33570;
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => _83
  # DEBUG thisD.47907 => &iD.38496
  # DEBUG __xD.47908 => &D.38507
  if (i$_M_node_12 != _83)
    goto <bb 16>;
  else
    goto <bb 15>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 820, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_143 = PHI <.MEM_6(D)(4), .MEM_2(14)>
  # PT = nonlocal escaped 
  # i$_M_node_94 = PHI <i$_M_node_20(4), i$_M_node_32(14)>
  # DEBUG i$_M_nodeD.47979 => i$_M_node_94
  # DEBUG D#113ptD.0 => &this_5(D)->_str_mapD.33116
  # DEBUG thisD.47865 => D#113ptD.0
  # DEBUG D#71ptD.0 => &D#113ptD.0->_M_tD.32259
  # DEBUG thisD.47866 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => _109
  # DEBUG thisD.47862 => &iD.38484
  # DEBUG __xD.47863 => &D.38495
  # DEBUG thisD.47872 => &iD.38484
  # DEBUG thisD.47873 => i$_M_node_94
  # DEBUG D#107ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_94]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#107ptD.0
  # DEBUG D#108ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_94 + 32B].secondD.35539
  # DEBUG thisD.47869 => D#108ptD.0
  # DEBUG __posD.47870 => 0
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _7 = MEM[(charD.10 * *)i$_M_node_94 + 64B];
  # DEBUG D#3ptD.0 => D#108ptD.0
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_143>
  _8 = MEM[(const charD.10 &)_7];
  if (_8 != 0)
    goto <bb 6>;
  else
    goto <bb 13>;
;;    succ:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 2639, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.47882 => &iD.38484
  # DEBUG thisD.47883 => i$_M_node_94
  # DEBUG D#109ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_94]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#109ptD.0
  # DEBUG D#110ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_94 + 32B].secondD.35539
  # DEBUG thisD.47879 => &iD.38484
  # DEBUG thisD.47880 => i$_M_node_94
  # DEBUG D#111ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_94]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#111ptD.0
  # DEBUG D#112ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_94 + 32B].firstD.35538
  # DEBUG __outD.47875 => config_out_9(D)
  # DEBUG __sD.47876 => "%"
  # DEBUG __sD.47877 => "%"
  # .MEM_45 = VDEF <.MEM_143>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), "%", 1);
  # DEBUG __osD.47885 => config_out_9(D)
  # DEBUG __strD.47886 => D#112ptD.0
  # VUSE <.MEM_45>
  _25 = MEM[(long unsigned intD.14 *)i$_M_node_94 + 40B];
  # DEBUG D#2ptD.0 => D#112ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _26 = (long intD.12) _25;
  # DEBUG thisD.46948 => D#112ptD.0
  # VUSE <.MEM_45>
  # PT = nonlocal escaped 
  _27 = MEM[(charD.10 * *)i$_M_node_94 + 32B];
  # DEBUG D#3ptD.0 => D#112ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_46 = VDEF <.MEM_45>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _28 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), _27, _26);
  # DEBUG __outD.47888 => _28
  # DEBUG __sD.47889 => " = \'"
  # DEBUG __sD.47890 => " = \'"
  # .MEM_47 = VDEF <.MEM_46>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_28, " = \'", 4);
  # DEBUG __osD.47892 => _28
  # DEBUG __strD.47893 => D#110ptD.0
  # VUSE <.MEM_47>
  _10 = MEM[(long unsigned intD.14 *)i$_M_node_94 + 72B];
  # DEBUG D#2ptD.0 => D#110ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _29 = (long intD.12) _10;
  # DEBUG thisD.46948 => D#110ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _30 = MEM[(charD.10 * *)i$_M_node_94 + 64B];
  # DEBUG D#3ptD.0 => D#110ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_48 = VDEF <.MEM_47>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _31 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_28, _30, _29);
  # DEBUG __outD.47895 => _31
  # DEBUG __sD.47896 => "\';"
  # DEBUG __sD.47897 => "\';"
  # .MEM_49 = VDEF <.MEM_48>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_31, "\';", 2);
  # DEBUG thisD.47899 => _31
  # DEBUG __pfD.47900 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56078 => _31
  # VUSE <.MEM_49>
  # PT = nonlocal escaped 
  _64 = _31->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_49>
  _65 = MEM[(long intD.12 *)_64 + -24B];
  # RANGE [0, 18446744073709551615]
  _66 = (sizetype) _65;
  # PT = nonlocal escaped 
  _67 = _31 + _66;
  # DEBUG thisD.56081 => _67
  # DEBUG __cD.56082 => 10
  # VUSE <.MEM_49>
  # PT = nonlocal escaped 
  _50 = MEM[(const struct basic_iosD.7355 *)_67]._M_ctypeD.20959;
  # DEBUG __fD.56083 => _50
  if (_50 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_49(6), .MEM_55(17), .MEM_62(26)>
  # .MEM_153 = VDEF <.MEM_103>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__throw_bad_castvD.2851 ();
;;    succ:      

;;   basic block 8, loop depth 1, count 0, freq 2638, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56085 => _50
  # DEBUG __cD.56084 => 10
  # VUSE <.MEM_49>
  _72 = MEM[(const struct ctypeD.7662 *)_50]._M_widen_okD.17874;
  if (_72 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 1610, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_49>
  _75 = MEM[(const struct ctypeD.7662 *)_50]._M_widenD.17875[10];
  pretmp_1 = (intD.9) _75;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1028, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56087 => _50
  # DEBUG __cD.56088 => 10
  # .MEM_145 = VDEF <.MEM_49>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_50);
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _80 = MEM[(const struct ctypeD.7662 *)_50].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _81 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_80 + 48B];
  # PT = anything 
  PROF_85 = [obj_type_ref] OBJ_TYPE_REF(_81;(const struct ctypeD.7662)_50->6);
  if (PROF_85 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 12>;
  else
    goto <bb 11>;
;;    succ:       12 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 204, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal 
  # CLB = nonlocal 
  _87 = OBJ_TYPE_REF(_81;(const struct ctypeD.7662)_50->6) (_50, 10);
  pretmp_157 = (intD.9) _87;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2638, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_110 = PHI <.MEM_49(9), .MEM_145(10), .MEM_146(11)>
  # RANGE [-128, 127]
  # prephitmp_84 = PHI <pretmp_1(9), 10(10), pretmp_157(11)>
  # .MEM_150 = VDEF <.MEM_110>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _70 = _ZNSo3putEcD.21670 (_31, prephitmp_84);
  # DEBUG __osD.56079 => _70
  # .MEM_151 = VDEF <.MEM_150>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSo5flushEvD.21681 (_70);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       5 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_143(5), .MEM_151(12)>
  # DEBUG thisD.47902 => &iD.38484
  # VUSE <.MEM_2>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_32 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_94);
  # DEBUG i$_M_nodeD.47979 => i$_M_node_32
  # DEBUG i$_M_nodeD.47979 => i$_M_node_32
  # DEBUG D#113ptD.0 => &this_5(D)->_str_mapD.33116
  # DEBUG thisD.47865 => D#113ptD.0
  # DEBUG D#71ptD.0 => &D#113ptD.0->_M_tD.32259
  # DEBUG thisD.47866 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => _109
  # DEBUG thisD.47862 => &iD.38484
  # DEBUG __xD.47863 => &D.38495
  if (i$_M_node_32 != _109)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 897, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       3 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_33 = PHI <.MEM_39(3), .MEM_160(22)>
  # DEBUG D#127ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47981 => D#127ptD.0
  # DEBUG D#119ptD.0 => &this_5(D)->_float_mapD.35250
  # DEBUG thisD.47940 => D#119ptD.0
  # DEBUG D#81ptD.0 => &D#119ptD.0->_M_tD.34405
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  i$_M_node_17 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_5(D) + 160B];
  # DEBUG D#80ptD.0 => D#81ptD.0
  # DEBUG thisD.47697 => D#80ptD.0
  # DEBUG thisD.47689 => NULL
  # DEBUG __xD.47688 => i$_M_node_17
  # DEBUG i$_M_nodeD.47983 => i$_M_node_17
  # DEBUG i$_M_nodeD.47983 => i$_M_node_17
  # DEBUG D#123ptD.0 => &this_5(D)->_float_mapD.35250
  # DEBUG thisD.47946 => D#123ptD.0
  # DEBUG D#79ptD.0 => &D#123ptD.0->_M_tD.34405
  # DEBUG thisD.47947 => D#79ptD.0
  # PT = nonlocal 
  _123 = &MEM[(const struct _Rb_treeD.34404 *)this_5(D) + 136B]._M_implD.34482._M_headerD.34637;
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => _123
  # DEBUG thisD.47943 => &iD.38508
  # DEBUG __xD.47944 => &D.38519
  if (i$_M_node_17 != _123)
    goto <bb 25>;
  else
    goto <bb 24>;
;;    succ:       25 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       3 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9063, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_152 = PHI <.MEM_39(16), .MEM_160(23)>
  # PT = nonlocal escaped 
  # i$_M_node_158 = PHI <i$_M_node_12(16), i$_M_node_38(23)>
  # DEBUG i$_M_nodeD.47981 => i$_M_node_158
  # DEBUG D#118ptD.0 => &this_5(D)->_int_mapD.34183
  # DEBUG thisD.47910 => D#118ptD.0
  # DEBUG D#75ptD.0 => &D#118ptD.0->_M_tD.33338
  # DEBUG thisD.47911 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => _83
  # DEBUG thisD.47907 => &iD.38496
  # DEBUG __xD.47908 => &D.38507
  # DEBUG thisD.47921 => &iD.38496
  # DEBUG thisD.47922 => i$_M_node_158
  # DEBUG D#115ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)i$_M_node_158]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#115ptD.0
  # VUSE <.MEM_152>
  _13 = MEM[(const struct pairD.33117 *)i$_M_node_158 + 32B].secondD.35722;
  # DEBUG thisD.47918 => &iD.38496
  # DEBUG thisD.47919 => i$_M_node_158
  # DEBUG D#116ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)i$_M_node_158]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#116ptD.0
  # DEBUG D#117ptD.0 => &MEM[(const struct pairD.33117 *)i$_M_node_158 + 32B].firstD.35721
  # DEBUG __outD.47914 => config_out_9(D)
  # DEBUG __sD.47915 => "%"
  # DEBUG __sD.47916 => "%"
  # .MEM_52 = VDEF <.MEM_152>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), "%", 1);
  # DEBUG __osD.47924 => config_out_9(D)
  # DEBUG __strD.47925 => D#117ptD.0
  # VUSE <.MEM_52>
  _34 = MEM[(long unsigned intD.14 *)i$_M_node_158 + 40B];
  # DEBUG D#2ptD.0 => D#117ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _35 = (long intD.12) _34;
  # DEBUG thisD.46948 => D#117ptD.0
  # VUSE <.MEM_52>
  # PT = nonlocal escaped 
  _36 = MEM[(charD.10 * *)i$_M_node_158 + 32B];
  # DEBUG D#3ptD.0 => D#117ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_53 = VDEF <.MEM_52>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _37 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), _36, _35);
  # DEBUG __outD.47927 => _37
  # DEBUG __sD.47928 => " = "
  # DEBUG __sD.47929 => " = "
  # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_37, " = ", 3);
  # .MEM_15 = VDEF <.MEM_54>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _16 = _ZNSolsEiD.21643 (_37, _13);
  # DEBUG __outD.47931 => _16
  # DEBUG __sD.47932 => ";"
  # DEBUG __sD.47933 => ";"
  # .MEM_55 = VDEF <.MEM_15>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_16, ";", 1);
  # DEBUG thisD.47935 => _16
  # DEBUG __pfD.47936 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56093 => _16
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _90 = _16->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_55>
  _91 = MEM[(long intD.12 *)_90 + -24B];
  # RANGE [0, 18446744073709551615]
  _92 = (sizetype) _91;
  # PT = nonlocal escaped 
  _93 = _16 + _92;
  # DEBUG thisD.56096 => _93
  # DEBUG __cD.56097 => 10
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _56 = MEM[(const struct basic_iosD.7355 *)_93]._M_ctypeD.20959;
  # DEBUG __fD.56098 => _56
  if (_56 == 0B)
    goto <bb 7>;
  else
    goto <bb 18>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 9060, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56100 => _56
  # DEBUG __cD.56099 => 10
  # VUSE <.MEM_55>
  _98 = MEM[(const struct ctypeD.7662 *)_56]._M_widen_okD.17874;
  if (_98 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 5528, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_55>
  _101 = MEM[(const struct ctypeD.7662 *)_56]._M_widenD.17875[10];
  pretmp_3 = (intD.9) _101;
  goto <bb 22>;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 3531, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56102 => _56
  # DEBUG __cD.56103 => 10
  # .MEM_154 = VDEF <.MEM_55>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_56);
  # VUSE <.MEM_154>
  # PT = nonlocal escaped 
  _106 = MEM[(const struct ctypeD.7662 *)_56].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_154>
  # PT = nonlocal escaped 
  _107 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_106 + 48B];
  # PT = anything 
  PROF_111 = [obj_type_ref] OBJ_TYPE_REF(_107;(const struct ctypeD.7662)_56->6);
  if (PROF_111 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 701, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_155 = VDEF <.MEM_154>
  # USE = nonlocal 
  # CLB = nonlocal 
  _113 = OBJ_TYPE_REF(_107;(const struct ctypeD.7662)_56->6) (_56, 10);
  pretmp_18 = (intD.9) _113;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 9064, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_142 = PHI <.MEM_55(19), .MEM_154(20), .MEM_155(21)>
  # RANGE [-128, 127]
  # prephitmp_148 = PHI <pretmp_3(19), 10(20), pretmp_18(21)>
  # .MEM_159 = VDEF <.MEM_142>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _96 = _ZNSo3putEcD.21670 (_16, prephitmp_148);
  # DEBUG __osD.56094 => _96
  # .MEM_160 = VDEF <.MEM_159>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSo5flushEvD.21681 (_96);
  # DEBUG thisD.47938 => &iD.38496
  # VUSE <.MEM_160>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_38 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_158);
  # DEBUG i$_M_nodeD.47981 => i$_M_node_38
  # DEBUG i$_M_nodeD.47981 => i$_M_node_38
  # DEBUG D#118ptD.0 => &this_5(D)->_int_mapD.34183
  # DEBUG thisD.47910 => D#118ptD.0
  # DEBUG D#75ptD.0 => &D#118ptD.0->_M_tD.33338
  # DEBUG thisD.47911 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => _83
  # DEBUG thisD.47907 => &iD.38496
  # DEBUG __xD.47908 => &D.38507
  if (i$_M_node_38 != _83)
    goto <bb 23>;
  else
    goto <bb 15>;
;;    succ:       23 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 8248, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 893, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_33(15), .MEM_169(31)>
  # DEBUG D#129ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47983 => D#129ptD.0
  # .MEM_24 = VDEF <.MEM_23>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSo5flushEvD.21681 (config_out_9(D));
  # VUSE <.MEM_24>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 25, loop depth 0, count 0, freq 816, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 9027, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_33(25), .MEM_169(32)>
  # PT = nonlocal escaped 
  # i$_M_node_136 = PHI <i$_M_node_17(25), i$_M_node_44(32)>
  # DEBUG i$_M_nodeD.47983 => i$_M_node_136
  # DEBUG D#123ptD.0 => &this_5(D)->_float_mapD.35250
  # DEBUG thisD.47946 => D#123ptD.0
  # DEBUG D#79ptD.0 => &D#123ptD.0->_M_tD.34405
  # DEBUG thisD.47947 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => _123
  # DEBUG thisD.47943 => &iD.38508
  # DEBUG __xD.47944 => &D.38519
  # DEBUG thisD.47957 => &iD.38508
  # DEBUG thisD.47958 => i$_M_node_136
  # DEBUG D#120ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)i$_M_node_136]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#120ptD.0
  # VUSE <.MEM_77>
  _19 = MEM[(const struct pairD.34184 *)i$_M_node_136 + 32B].secondD.35902;
  # DEBUG thisD.47954 => &iD.38508
  # DEBUG thisD.47955 => i$_M_node_136
  # DEBUG D#121ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)i$_M_node_136]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#121ptD.0
  # DEBUG D#122ptD.0 => &MEM[(const struct pairD.34184 *)i$_M_node_136 + 32B].firstD.35901
  # DEBUG __outD.47950 => config_out_9(D)
  # DEBUG __sD.47951 => "%"
  # DEBUG __sD.47952 => "%"
  # .MEM_58 = VDEF <.MEM_77>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), "%", 1);
  # DEBUG __osD.47960 => config_out_9(D)
  # DEBUG __strD.47961 => D#122ptD.0
  # VUSE <.MEM_58>
  _40 = MEM[(long unsigned intD.14 *)i$_M_node_136 + 40B];
  # DEBUG D#2ptD.0 => D#122ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _41 = (long intD.12) _40;
  # DEBUG thisD.46948 => D#122ptD.0
  # VUSE <.MEM_58>
  # PT = nonlocal escaped 
  _42 = MEM[(charD.10 * *)i$_M_node_136 + 32B];
  # DEBUG D#3ptD.0 => D#122ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_59 = VDEF <.MEM_58>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _43 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), _42, _41);
  # DEBUG __outD.47963 => _43
  # DEBUG __sD.47964 => " = "
  # DEBUG __sD.47965 => " = "
  # .MEM_60 = VDEF <.MEM_59>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_43, " = ", 3);
  # DEBUG thisD.47967 => _43
  # DEBUG __fD.47968 => _19
  # .MEM_61 = VDEF <.MEM_60>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _21 = _ZNSo9_M_insertIdEERSoT_D.21878 (_43, _19);
  # DEBUG __outD.47970 => _21
  # DEBUG __sD.47971 => ";"
  # DEBUG __sD.47972 => ";"
  # .MEM_62 = VDEF <.MEM_61>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_21, ";", 1);
  # DEBUG thisD.47974 => _21
  # DEBUG __pfD.47975 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56108 => _21
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _116 = MEM[(struct basic_ostreamD.7361 *)_21]._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_62>
  _117 = MEM[(long intD.12 *)_116 + -24B];
  # RANGE [0, 18446744073709551615]
  _118 = (sizetype) _117;
  # PT = nonlocal escaped 
  _119 = _21 + _118;
  # DEBUG thisD.56111 => _119
  # DEBUG __cD.56112 => 10
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _63 = MEM[(const struct basic_iosD.7355 *)_119]._M_ctypeD.20959;
  # DEBUG __fD.56113 => _63
  if (_63 == 0B)
    goto <bb 7>;
  else
    goto <bb 27>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 9023, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56115 => _63
  # DEBUG __cD.56114 => 10
  # VUSE <.MEM_62>
  _124 = MEM[(const struct ctypeD.7662 *)_63]._M_widen_okD.17874;
  if (_124 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 5506, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_62>
  _127 = MEM[(const struct ctypeD.7662 *)_63]._M_widenD.17875[10];
  pretmp_11 = (intD.9) _127;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 3517, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56117 => _63
  # DEBUG __cD.56118 => 10
  # .MEM_163 = VDEF <.MEM_62>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_63);
  # VUSE <.MEM_163>
  # PT = nonlocal escaped 
  _132 = MEM[(const struct ctypeD.7662 *)_63].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_163>
  # PT = nonlocal escaped 
  _133 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_132 + 48B];
  # PT = anything 
  PROF_137 = [obj_type_ref] OBJ_TYPE_REF(_133;(const struct ctypeD.7662)_63->6);
  if (PROF_137 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 31>;
  else
    goto <bb 30>;
;;    succ:       31 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 698, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_164 = VDEF <.MEM_163>
  # USE = nonlocal 
  # CLB = nonlocal 
  _139 = OBJ_TYPE_REF(_133;(const struct ctypeD.7662)_63->6) (_63, 10);
  pretmp_71 = (intD.9) _139;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 9027, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_144 = PHI <.MEM_62(28), .MEM_163(29), .MEM_164(30)>
  # RANGE [-128, 127]
  # prephitmp_97 = PHI <pretmp_11(28), 10(29), pretmp_71(30)>
  # .MEM_168 = VDEF <.MEM_144>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _122 = _ZNSo3putEcD.21670 (_21, prephitmp_97);
  # DEBUG __osD.56109 => _122
  # .MEM_169 = VDEF <.MEM_168>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSo5flushEvD.21681 (_122);
  # DEBUG thisD.47977 => &iD.38508
  # VUSE <.MEM_169>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_44 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_136);
  # DEBUG i$_M_nodeD.47983 => i$_M_node_44
  # DEBUG i$_M_nodeD.47983 => i$_M_node_44
  # DEBUG D#123ptD.0 => &this_5(D)->_float_mapD.35250
  # DEBUG thisD.47946 => D#123ptD.0
  # DEBUG D#79ptD.0 => &D#123ptD.0->_M_tD.34405
  # DEBUG thisD.47947 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => _123
  # DEBUG thisD.47943 => &iD.38508
  # DEBUG __xD.47944 => &D.38519
  if (i$_M_node_44 != _123)
    goto <bb 32>;
  else
    goto <bb 24>;
;;    succ:       32 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 8215, maybe hot
;;    prev block 31, next block 1, flags: (NEW)
;;    pred:       31 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_5(D) + 64B]
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_5(D) + 64B]
Creating dr for MEM[(char * *)i$_M_node_94 + 64B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_94 + 64B]
Creating dr for MEM[(char * *)i$_M_node_94 + 64B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_94 + 64B]
Creating dr for MEM[(const char &)_7]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char &)_7]
Creating dr for MEM[(const char &)_7]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char &)_7]
Creating dr for MEM[(char * *)i$_M_node_94 + 64B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_94 + 64B]
Creating dr for MEM[(char * *)i$_M_node_94 + 64B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)i$_M_node_94 + 64B]
Creating dr for MEM[(const char &)_7]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char &)_7]
Creating dr for MEM[(const char &)_7]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char &)_7]
Creating dr for MEM[(const struct ctype *)_50]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_50]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_50]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_50]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_50]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_50]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_50]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_50]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_5(D) + 112B]
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_5(D) + 112B]
Creating dr for MEM[(const struct pair *)i$_M_node_158 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_158 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_158 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_158 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_158 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_158 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_158 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_158 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct ctype *)_56]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_56]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_56]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_56]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_56]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_56]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_56]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_56]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_5(D) + 160B]
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_5(D) + 160B]
Creating dr for MEM[(const struct pair *)i$_M_node_136 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_136 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_136 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_136 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_136 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_136 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct pair *)i$_M_node_136 + 32B].second
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct pair *)i$_M_node_136 + 32B]
	Access function 0: 256
Creating dr for MEM[(const struct ctype *)_63]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_63]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_63]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_63]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_63]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_63]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_63]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_63]
	Access function 0: 10
	Access function 1: 456

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:33, LOOPS:3, CONDITIONS:16, STMTS:351)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#106 => &this_5(D)->_str_map
    # DEBUG this => D#106
    # DEBUG D#73 => &D#106->_M_t
    # VUSE <.MEM_6(D)>
    i$_M_node_20 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 64B];
    # DEBUG D#72 => D#73
    # DEBUG this => D#72
    # DEBUG this => NULL
    # DEBUG __x => i$_M_node_20
    # DEBUG i$_M_node => i$_M_node_20
    # DEBUG i$_M_node => i$_M_node_20
    # DEBUG D#113 => &this_5(D)->_str_map
    # DEBUG this => D#113
    # DEBUG D#71 => &D#113->_M_t
    # DEBUG this => D#71
    _109 = &MEM[(const struct _Rb_tree *)this_5(D) + 40B]._M_impl._M_header;
    # DEBUG this => NULL
    # DEBUG __x => _109
    # DEBUG this => &i
    # DEBUG __x => &D.38495
    if (i$_M_node_20 != _109)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_13 }, succs = {bb_16 bb_15 })
  {
    <bb 3>:
    # .MEM_39 = PHI <.MEM_6(D)(2), .MEM_2(13)>
    # DEBUG D#125 => {CLOBBER}
    # DEBUG i$_M_node => D#125
    # DEBUG D#114 => &this_5(D)->_int_map
    # DEBUG this => D#114
    # DEBUG D#77 => &D#114->_M_t
    # VUSE <.MEM_39>
    i$_M_node_12 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 112B];
    # DEBUG D#76 => D#77
    # DEBUG this => D#76
    # DEBUG this => NULL
    # DEBUG __x => i$_M_node_12
    # DEBUG i$_M_node => i$_M_node_12
    # DEBUG i$_M_node => i$_M_node_12
    # DEBUG D#118 => &this_5(D)->_int_map
    # DEBUG this => D#118
    # DEBUG D#75 => &D#118->_M_t
    # DEBUG this => D#75
    _83 = &MEM[(const struct _Rb_tree *)this_5(D) + 88B]._M_impl._M_header;
    # DEBUG this => NULL
    # DEBUG __x => _83
    # DEBUG this => &i
    # DEBUG __x => &D.38507
    if (i$_M_node_12 != _83)
      goto <bb 16>;
    else
      goto <bb 15>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_6 bb_17 bb_26 }, succs = {})
  {
    <bb 7>:
    # .MEM_103 = PHI <.MEM_49(6), .MEM_55(17), .MEM_62(26)>
    # .MEM_153 = VDEF <.MEM_103>
    std::__throw_bad_cast ();

  }
  bb_15 (preds = {bb_3 bb_22 }, succs = {bb_25 bb_24 })
  {
    <bb 15>:
    # .MEM_33 = PHI <.MEM_39(3), .MEM_160(22)>
    # DEBUG D#127 => {CLOBBER}
    # DEBUG i$_M_node => D#127
    # DEBUG D#119 => &this_5(D)->_float_map
    # DEBUG this => D#119
    # DEBUG D#81 => &D#119->_M_t
    # VUSE <.MEM_33>
    i$_M_node_17 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 160B];
    # DEBUG D#80 => D#81
    # DEBUG this => D#80
    # DEBUG this => NULL
    # DEBUG __x => i$_M_node_17
    # DEBUG i$_M_node => i$_M_node_17
    # DEBUG i$_M_node => i$_M_node_17
    # DEBUG D#123 => &this_5(D)->_float_map
    # DEBUG this => D#123
    # DEBUG D#79 => &D#123->_M_t
    # DEBUG this => D#79
    _123 = &MEM[(const struct _Rb_tree *)this_5(D) + 136B]._M_impl._M_header;
    # DEBUG this => NULL
    # DEBUG __x => _123
    # DEBUG this => &i
    # DEBUG __x => &D.38519
    if (i$_M_node_17 != _123)
      goto <bb 25>;
    else
      goto <bb 24>;

  }
  bb_16 (preds = {bb_3 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_24 (preds = {bb_15 bb_31 }, succs = {bb_1 })
  {
    <bb 24>:
    # .MEM_23 = PHI <.MEM_33(15), .MEM_169(31)>
    # DEBUG D#129 => {CLOBBER}
    # DEBUG i$_M_node => D#129
    # .MEM_24 = VDEF <.MEM_23>
    std::basic_ostream<char>::flush (config_out_9(D));
    # VUSE <.MEM_24>
    return;

  }
  bb_25 (preds = {bb_15 }, succs = {bb_26 })
  {
    <bb 25>:

  }
  loop_3 (header = 26, latch = 32, niter = )
  {
    bb_26 (preds = {bb_25 bb_32 }, succs = {bb_7 bb_27 })
    {
      <bb 26>:
      # .MEM_77 = PHI <.MEM_33(25), .MEM_169(32)>
      # i$_M_node_136 = PHI <i$_M_node_17(25), i$_M_node_44(32)>
      # DEBUG i$_M_node => i$_M_node_136
      # DEBUG D#123 => &this_5(D)->_float_map
      # DEBUG this => D#123
      # DEBUG D#79 => &D#123->_M_t
      # DEBUG this => D#79
      # DEBUG this => NULL
      # DEBUG __x => _123
      # DEBUG this => &i
      # DEBUG __x => &D.38519
      # DEBUG this => &i
      # DEBUG this => i$_M_node_136
      # DEBUG D#120 => &MEM[(const struct _Rb_tree_node *)i$_M_node_136]._M_value_field
      # DEBUG __r => D#120
      # VUSE <.MEM_77>
      _19 = MEM[(const struct pair *)i$_M_node_136 + 32B].second;
      # DEBUG this => &i
      # DEBUG this => i$_M_node_136
      # DEBUG D#121 => &MEM[(const struct _Rb_tree_node *)i$_M_node_136]._M_value_field
      # DEBUG __r => D#121
      # DEBUG D#122 => &MEM[(const struct pair *)i$_M_node_136 + 32B].first
      # DEBUG __out => config_out_9(D)
      # DEBUG __s => "%"
      # DEBUG __s => "%"
      # .MEM_58 = VDEF <.MEM_77>
      std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), "%", 1);
      # DEBUG __os => config_out_9(D)
      # DEBUG __str => D#122
      # VUSE <.MEM_58>
      _40 = MEM[(long unsigned int *)i$_M_node_136 + 40B];
      # DEBUG D#2 => D#122
      # DEBUG this => D#2
      _41 = (long int) _40;
      # DEBUG this => D#122
      # VUSE <.MEM_58>
      _42 = MEM[(char * *)i$_M_node_136 + 32B];
      # DEBUG D#3 => D#122
      # DEBUG this => D#3
      # .MEM_59 = VDEF <.MEM_58>
      _43 = std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), _42, _41);
      # DEBUG __out => _43
      # DEBUG __s => " = "
      # DEBUG __s => " = "
      # .MEM_60 = VDEF <.MEM_59>
      std::__ostream_insert<char, std::char_traits<char> > (_43, " = ", 3);
      # DEBUG this => _43
      # DEBUG __f => _19
      # .MEM_61 = VDEF <.MEM_60>
      _21 = std::basic_ostream<char>::_M_insert<double> (_43, _19);
      # DEBUG __out => _21
      # DEBUG __s => ";"
      # DEBUG __s => ";"
      # .MEM_62 = VDEF <.MEM_61>
      std::__ostream_insert<char, std::char_traits<char> > (_21, ";", 1);
      # DEBUG this => _21
      # DEBUG __pf => endl
      # DEBUG __os => _21
      # VUSE <.MEM_62>
      _116 = MEM[(struct basic_ostream *)_21]._vptr.basic_ostream;
      # VUSE <.MEM_62>
      _117 = MEM[(long int *)_116 + -24B];
      _118 = (sizetype) _117;
      _119 = _21 + _118;
      # DEBUG this => _119
      # DEBUG __c => 10
      # VUSE <.MEM_62>
      _63 = MEM[(const struct basic_ios *)_119]._M_ctype;
      # DEBUG __f => _63
      if (_63 == 0B)
        goto <bb 7>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_26 }, succs = {bb_28 bb_29 })
    {
      <bb 27>:
      # DEBUG this => _63
      # DEBUG __c => 10
      # VUSE <.MEM_62>
      _124 = MEM[(const struct ctype *)_63]._M_widen_ok;
      if (_124 != 0)
        goto <bb 28>;
      else
        goto <bb 29>;

    }
    bb_28 (preds = {bb_27 }, succs = {bb_31 })
    {
      <bb 28>:
      # VUSE <.MEM_62>
      _127 = MEM[(const struct ctype *)_63]._M_widen[10];
      pretmp_11 = (int) _127;
      goto <bb 31>;

    }
    bb_29 (preds = {bb_27 }, succs = {bb_31 bb_30 })
    {
      <bb 29>:
      # DEBUG this => _63
      # DEBUG __c => 10
      # .MEM_163 = VDEF <.MEM_62>
      std::ctype<char>::_M_widen_init (_63);
      # VUSE <.MEM_163>
      _132 = MEM[(const struct ctype *)_63].D.18015._vptr.facet;
      # VUSE <.MEM_163>
      _133 = MEM[(int (*__vtbl_ptr_type) () *)_132 + 48B];
      PROF_137 = [obj_type_ref] OBJ_TYPE_REF(_133;(const struct ctype)_63->6);
      if (PROF_137 == do_widen)
        goto <bb 31>;
      else
        goto <bb 30>;

    }
    bb_30 (preds = {bb_29 }, succs = {bb_31 })
    {
      <bb 30>:
      # .MEM_164 = VDEF <.MEM_163>
      _139 = OBJ_TYPE_REF(_133;(const struct ctype)_63->6) (_63, 10);
      pretmp_71 = (int) _139;

    }
    bb_31 (preds = {bb_28 bb_29 bb_30 }, succs = {bb_32 bb_24 })
    {
      <bb 31>:
      # .MEM_144 = PHI <.MEM_62(28), .MEM_163(29), .MEM_164(30)>
      # prephitmp_97 = PHI <pretmp_11(28), 10(29), pretmp_71(30)>
      # .MEM_168 = VDEF <.MEM_144>
      _122 = std::basic_ostream<char>::put (_21, prephitmp_97);
      # DEBUG __os => _122
      # .MEM_169 = VDEF <.MEM_168>
      std::basic_ostream<char>::flush (_122);
      # DEBUG this => &i
      # VUSE <.MEM_169>
      i$_M_node_44 = std::_Rb_tree_increment (i$_M_node_136);
      # DEBUG i$_M_node => i$_M_node_44
      # DEBUG i$_M_node => i$_M_node_44
      # DEBUG D#123 => &this_5(D)->_float_map
      # DEBUG this => D#123
      # DEBUG D#79 => &D#123->_M_t
      # DEBUG this => D#79
      # DEBUG this => NULL
      # DEBUG __x => _123
      # DEBUG this => &i
      # DEBUG __x => &D.38519
      if (i$_M_node_44 != _123)
        goto <bb 32>;
      else
        goto <bb 24>;

    }
    bb_32 (preds = {bb_31 }, succs = {bb_26 })
    {
      <bb 32>:
      goto <bb 26>;

    }
  }
  loop_2 (header = 17, latch = 23, niter = )
  {
    bb_17 (preds = {bb_16 bb_23 }, succs = {bb_7 bb_18 })
    {
      <bb 17>:
      # .MEM_152 = PHI <.MEM_39(16), .MEM_160(23)>
      # i$_M_node_158 = PHI <i$_M_node_12(16), i$_M_node_38(23)>
      # DEBUG i$_M_node => i$_M_node_158
      # DEBUG D#118 => &this_5(D)->_int_map
      # DEBUG this => D#118
      # DEBUG D#75 => &D#118->_M_t
      # DEBUG this => D#75
      # DEBUG this => NULL
      # DEBUG __x => _83
      # DEBUG this => &i
      # DEBUG __x => &D.38507
      # DEBUG this => &i
      # DEBUG this => i$_M_node_158
      # DEBUG D#115 => &MEM[(const struct _Rb_tree_node *)i$_M_node_158]._M_value_field
      # DEBUG __r => D#115
      # VUSE <.MEM_152>
      _13 = MEM[(const struct pair *)i$_M_node_158 + 32B].second;
      # DEBUG this => &i
      # DEBUG this => i$_M_node_158
      # DEBUG D#116 => &MEM[(const struct _Rb_tree_node *)i$_M_node_158]._M_value_field
      # DEBUG __r => D#116
      # DEBUG D#117 => &MEM[(const struct pair *)i$_M_node_158 + 32B].first
      # DEBUG __out => config_out_9(D)
      # DEBUG __s => "%"
      # DEBUG __s => "%"
      # .MEM_52 = VDEF <.MEM_152>
      std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), "%", 1);
      # DEBUG __os => config_out_9(D)
      # DEBUG __str => D#117
      # VUSE <.MEM_52>
      _34 = MEM[(long unsigned int *)i$_M_node_158 + 40B];
      # DEBUG D#2 => D#117
      # DEBUG this => D#2
      _35 = (long int) _34;
      # DEBUG this => D#117
      # VUSE <.MEM_52>
      _36 = MEM[(char * *)i$_M_node_158 + 32B];
      # DEBUG D#3 => D#117
      # DEBUG this => D#3
      # .MEM_53 = VDEF <.MEM_52>
      _37 = std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), _36, _35);
      # DEBUG __out => _37
      # DEBUG __s => " = "
      # DEBUG __s => " = "
      # .MEM_54 = VDEF <.MEM_53>
      std::__ostream_insert<char, std::char_traits<char> > (_37, " = ", 3);
      # .MEM_15 = VDEF <.MEM_54>
      _16 = std::basic_ostream<char>::operator<< (_37, _13);
      # DEBUG __out => _16
      # DEBUG __s => ";"
      # DEBUG __s => ";"
      # .MEM_55 = VDEF <.MEM_15>
      std::__ostream_insert<char, std::char_traits<char> > (_16, ";", 1);
      # DEBUG this => _16
      # DEBUG __pf => endl
      # DEBUG __os => _16
      # VUSE <.MEM_55>
      _90 = _16->_vptr.basic_ostream;
      # VUSE <.MEM_55>
      _91 = MEM[(long int *)_90 + -24B];
      _92 = (sizetype) _91;
      _93 = _16 + _92;
      # DEBUG this => _93
      # DEBUG __c => 10
      # VUSE <.MEM_55>
      _56 = MEM[(const struct basic_ios *)_93]._M_ctype;
      # DEBUG __f => _56
      if (_56 == 0B)
        goto <bb 7>;
      else
        goto <bb 18>;

    }
    bb_18 (preds = {bb_17 }, succs = {bb_19 bb_20 })
    {
      <bb 18>:
      # DEBUG this => _56
      # DEBUG __c => 10
      # VUSE <.MEM_55>
      _98 = MEM[(const struct ctype *)_56]._M_widen_ok;
      if (_98 != 0)
        goto <bb 19>;
      else
        goto <bb 20>;

    }
    bb_19 (preds = {bb_18 }, succs = {bb_22 })
    {
      <bb 19>:
      # VUSE <.MEM_55>
      _101 = MEM[(const struct ctype *)_56]._M_widen[10];
      pretmp_3 = (int) _101;
      goto <bb 22>;

    }
    bb_20 (preds = {bb_18 }, succs = {bb_22 bb_21 })
    {
      <bb 20>:
      # DEBUG this => _56
      # DEBUG __c => 10
      # .MEM_154 = VDEF <.MEM_55>
      std::ctype<char>::_M_widen_init (_56);
      # VUSE <.MEM_154>
      _106 = MEM[(const struct ctype *)_56].D.18015._vptr.facet;
      # VUSE <.MEM_154>
      _107 = MEM[(int (*__vtbl_ptr_type) () *)_106 + 48B];
      PROF_111 = [obj_type_ref] OBJ_TYPE_REF(_107;(const struct ctype)_56->6);
      if (PROF_111 == do_widen)
        goto <bb 22>;
      else
        goto <bb 21>;

    }
    bb_21 (preds = {bb_20 }, succs = {bb_22 })
    {
      <bb 21>:
      # .MEM_155 = VDEF <.MEM_154>
      _113 = OBJ_TYPE_REF(_107;(const struct ctype)_56->6) (_56, 10);
      pretmp_18 = (int) _113;

    }
    bb_22 (preds = {bb_19 bb_20 bb_21 }, succs = {bb_23 bb_15 })
    {
      <bb 22>:
      # .MEM_142 = PHI <.MEM_55(19), .MEM_154(20), .MEM_155(21)>
      # prephitmp_148 = PHI <pretmp_3(19), 10(20), pretmp_18(21)>
      # .MEM_159 = VDEF <.MEM_142>
      _96 = std::basic_ostream<char>::put (_16, prephitmp_148);
      # DEBUG __os => _96
      # .MEM_160 = VDEF <.MEM_159>
      std::basic_ostream<char>::flush (_96);
      # DEBUG this => &i
      # VUSE <.MEM_160>
      i$_M_node_38 = std::_Rb_tree_increment (i$_M_node_158);
      # DEBUG i$_M_node => i$_M_node_38
      # DEBUG i$_M_node => i$_M_node_38
      # DEBUG D#118 => &this_5(D)->_int_map
      # DEBUG this => D#118
      # DEBUG D#75 => &D#118->_M_t
      # DEBUG this => D#75
      # DEBUG this => NULL
      # DEBUG __x => _83
      # DEBUG this => &i
      # DEBUG __x => &D.38507
      if (i$_M_node_38 != _83)
        goto <bb 23>;
      else
        goto <bb 15>;

    }
    bb_23 (preds = {bb_22 }, succs = {bb_17 })
    {
      <bb 23>:
      goto <bb 17>;

    }
  }
  loop_1 (header = 5, latch = 14, niter = )
  {
    bb_5 (preds = {bb_4 bb_14 }, succs = {bb_6 bb_13 })
    {
      <bb 5>:
      # .MEM_143 = PHI <.MEM_6(D)(4), .MEM_2(14)>
      # i$_M_node_94 = PHI <i$_M_node_20(4), i$_M_node_32(14)>
      # DEBUG i$_M_node => i$_M_node_94
      # DEBUG D#113 => &this_5(D)->_str_map
      # DEBUG this => D#113
      # DEBUG D#71 => &D#113->_M_t
      # DEBUG this => D#71
      # DEBUG this => NULL
      # DEBUG __x => _109
      # DEBUG this => &i
      # DEBUG __x => &D.38495
      # DEBUG this => &i
      # DEBUG this => i$_M_node_94
      # DEBUG D#107 => &MEM[(const struct _Rb_tree_node *)i$_M_node_94]._M_value_field
      # DEBUG __r => D#107
      # DEBUG D#108 => &MEM[(const struct pair *)i$_M_node_94 + 32B].second
      # DEBUG this => D#108
      # DEBUG __pos => 0
      # VUSE <.MEM_143>
      _7 = MEM[(char * *)i$_M_node_94 + 64B];
      # DEBUG D#3 => D#108
      # DEBUG this => D#3
      # VUSE <.MEM_143>
      _8 = MEM[(const char &)_7];
      if (_8 != 0)
        goto <bb 6>;
      else
        goto <bb 13>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
    {
      <bb 6>:
      # DEBUG this => &i
      # DEBUG this => i$_M_node_94
      # DEBUG D#109 => &MEM[(const struct _Rb_tree_node *)i$_M_node_94]._M_value_field
      # DEBUG __r => D#109
      # DEBUG D#110 => &MEM[(const struct pair *)i$_M_node_94 + 32B].second
      # DEBUG this => &i
      # DEBUG this => i$_M_node_94
      # DEBUG D#111 => &MEM[(const struct _Rb_tree_node *)i$_M_node_94]._M_value_field
      # DEBUG __r => D#111
      # DEBUG D#112 => &MEM[(const struct pair *)i$_M_node_94 + 32B].first
      # DEBUG __out => config_out_9(D)
      # DEBUG __s => "%"
      # DEBUG __s => "%"
      # .MEM_45 = VDEF <.MEM_143>
      std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), "%", 1);
      # DEBUG __os => config_out_9(D)
      # DEBUG __str => D#112
      # VUSE <.MEM_45>
      _25 = MEM[(long unsigned int *)i$_M_node_94 + 40B];
      # DEBUG D#2 => D#112
      # DEBUG this => D#2
      _26 = (long int) _25;
      # DEBUG this => D#112
      # VUSE <.MEM_45>
      _27 = MEM[(char * *)i$_M_node_94 + 32B];
      # DEBUG D#3 => D#112
      # DEBUG this => D#3
      # .MEM_46 = VDEF <.MEM_45>
      _28 = std::__ostream_insert<char, std::char_traits<char> > (config_out_9(D), _27, _26);
      # DEBUG __out => _28
      # DEBUG __s => " = \'"
      # DEBUG __s => " = \'"
      # .MEM_47 = VDEF <.MEM_46>
      std::__ostream_insert<char, std::char_traits<char> > (_28, " = \'", 4);
      # DEBUG __os => _28
      # DEBUG __str => D#110
      # VUSE <.MEM_47>
      _10 = MEM[(long unsigned int *)i$_M_node_94 + 72B];
      # DEBUG D#2 => D#110
      # DEBUG this => D#2
      _29 = (long int) _10;
      # DEBUG this => D#110
      # VUSE <.MEM_47>
      _30 = MEM[(char * *)i$_M_node_94 + 64B];
      # DEBUG D#3 => D#110
      # DEBUG this => D#3
      # .MEM_48 = VDEF <.MEM_47>
      _31 = std::__ostream_insert<char, std::char_traits<char> > (_28, _30, _29);
      # DEBUG __out => _31
      # DEBUG __s => "\';"
      # DEBUG __s => "\';"
      # .MEM_49 = VDEF <.MEM_48>
      std::__ostream_insert<char, std::char_traits<char> > (_31, "\';", 2);
      # DEBUG this => _31
      # DEBUG __pf => endl
      # DEBUG __os => _31
      # VUSE <.MEM_49>
      _64 = _31->_vptr.basic_ostream;
      # VUSE <.MEM_49>
      _65 = MEM[(long int *)_64 + -24B];
      _66 = (sizetype) _65;
      _67 = _31 + _66;
      # DEBUG this => _67
      # DEBUG __c => 10
      # VUSE <.MEM_49>
      _50 = MEM[(const struct basic_ios *)_67]._M_ctype;
      # DEBUG __f => _50
      if (_50 == 0B)
        goto <bb 7>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_6 }, succs = {bb_9 bb_10 })
    {
      <bb 8>:
      # DEBUG this => _50
      # DEBUG __c => 10
      # VUSE <.MEM_49>
      _72 = MEM[(const struct ctype *)_50]._M_widen_ok;
      if (_72 != 0)
        goto <bb 9>;
      else
        goto <bb 10>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_12 })
    {
      <bb 9>:
      # VUSE <.MEM_49>
      _75 = MEM[(const struct ctype *)_50]._M_widen[10];
      pretmp_1 = (int) _75;
      goto <bb 12>;

    }
    bb_10 (preds = {bb_8 }, succs = {bb_12 bb_11 })
    {
      <bb 10>:
      # DEBUG this => _50
      # DEBUG __c => 10
      # .MEM_145 = VDEF <.MEM_49>
      std::ctype<char>::_M_widen_init (_50);
      # VUSE <.MEM_145>
      _80 = MEM[(const struct ctype *)_50].D.18015._vptr.facet;
      # VUSE <.MEM_145>
      _81 = MEM[(int (*__vtbl_ptr_type) () *)_80 + 48B];
      PROF_85 = [obj_type_ref] OBJ_TYPE_REF(_81;(const struct ctype)_50->6);
      if (PROF_85 == do_widen)
        goto <bb 12>;
      else
        goto <bb 11>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_12 })
    {
      <bb 11>:
      # .MEM_146 = VDEF <.MEM_145>
      _87 = OBJ_TYPE_REF(_81;(const struct ctype)_50->6) (_50, 10);
      pretmp_157 = (int) _87;

    }
    bb_12 (preds = {bb_9 bb_10 bb_11 }, succs = {bb_13 })
    {
      <bb 12>:
      # .MEM_110 = PHI <.MEM_49(9), .MEM_145(10), .MEM_146(11)>
      # prephitmp_84 = PHI <pretmp_1(9), 10(10), pretmp_157(11)>
      # .MEM_150 = VDEF <.MEM_110>
      _70 = std::basic_ostream<char>::put (_31, prephitmp_84);
      # DEBUG __os => _70
      # .MEM_151 = VDEF <.MEM_150>
      std::basic_ostream<char>::flush (_70);

    }
    bb_13 (preds = {bb_5 bb_12 }, succs = {bb_14 bb_3 })
    {
      <bb 13>:
      # .MEM_2 = PHI <.MEM_143(5), .MEM_151(12)>
      # DEBUG this => &i
      # VUSE <.MEM_2>
      i$_M_node_32 = std::_Rb_tree_increment (i$_M_node_94);
      # DEBUG i$_M_node => i$_M_node_32
      # DEBUG i$_M_node => i$_M_node_32
      # DEBUG D#113 => &this_5(D)->_str_map
      # DEBUG this => D#113
      # DEBUG D#71 => &D#113->_M_t
      # DEBUG this => D#71
      # DEBUG this => NULL
      # DEBUG __x => _109
      # DEBUG this => &i
      # DEBUG __x => &D.38495
      if (i$_M_node_32 != _109)
        goto <bb 14>;
      else
        goto <bb 3>;

    }
    bb_14 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 14>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

void Configuration::WriteMatlabFile(std::ostream*) const (const struct ConfigurationD.32032 * const thisD.38482, struct ostreamD.7362 * config_outD.38480)
{
  char_typeD.17868 D.56122;
  charD.10 __cD.56121;
  char_typeD.17868 D.56119;
  charD.10 __cD.56118;
  char_typeD.20947 D.56116;
  struct basic_ostreamD.7361 & D.56110;
  char_typeD.17868 D.56107;
  charD.10 __cD.56106;
  char_typeD.17868 D.56104;
  charD.10 __cD.56103;
  char_typeD.20947 D.56101;
  struct basic_ostreamD.7361 & D.56095;
  char_typeD.17868 D.56092;
  charD.10 __cD.56091;
  char_typeD.17868 D.56089;
  charD.10 __cD.56088;
  char_typeD.20947 D.56086;
  struct basic_ostreamD.7361 & D.56080;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47983;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47981;
  const struct _Rb_tree_node_baseD.27676 * const i$_M_nodeD.47979;
  intD.9 pretmp_1;
  intD.9 pretmp_3;
  charD.10 * const _7;
  charD.10 _8;
  const size_typeD.11502 _10;
  intD.9 pretmp_11;
  intD.9 _13;
  struct basic_ostreamD.7361 & _16;
  intD.9 pretmp_18;
  doubleD.39 _19;
  struct __ostream_typeD.21606 & _21;
  const size_typeD.11502 _25;
  long intD.12 _26;
  charD.10 * const _27;
  struct basic_ostreamD.7361 & _28;
  long intD.12 _29;
  charD.10 * const _30;
  struct basic_ostreamD.7361 & _31;
  const size_typeD.11502 _34;
  long intD.12 _35;
  charD.10 * const _36;
  struct basic_ostreamD.7361 & _37;
  const size_typeD.11502 _40;
  long intD.12 _41;
  charD.10 * const _42;
  struct basic_ostreamD.7361 & _43;
  const struct __ctype_typeD.20952 * _50;
  const struct __ctype_typeD.20952 * _56;
  const struct __ctype_typeD.20952 * _63;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _64;
  long intD.12 _65;
  sizetype _66;
  struct basic_iosD.7355 * _67;
  struct basic_ostreamD.7361 & _70;
  intD.9 pretmp_71;
  charD.10 _72;
  char_typeD.17868 _75;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _80;
  intD.9 (*__vtbl_ptr_typeD.2760) () _81;
  const struct _Rb_tree_node_baseD.27676 * _83;
  intD.9 prephitmp_84;
  voidD.45 * PROF_85;
  char_typeD.17868 _87;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _90;
  long intD.12 _91;
  sizetype _92;
  struct basic_iosD.7355 * _93;
  struct basic_ostreamD.7361 & _96;
  intD.9 prephitmp_97;
  charD.10 _98;
  char_typeD.17868 _101;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _106;
  intD.9 (*__vtbl_ptr_typeD.2760) () _107;
  const struct _Rb_tree_node_baseD.27676 * _109;
  voidD.45 * PROF_111;
  char_typeD.17868 _113;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _116;
  long intD.12 _117;
  sizetype _118;
  struct basic_iosD.7355 * _119;
  struct basic_ostreamD.7361 & _122;
  const struct _Rb_tree_node_baseD.27676 * _123;
  charD.10 _124;
  char_typeD.17868 _127;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _132;
  intD.9 (*__vtbl_ptr_typeD.2760) () _133;
  voidD.45 * PROF_137;
  char_typeD.17868 _139;
  intD.9 prephitmp_148;
  intD.9 pretmp_157;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#106ptD.0 => &this_5(D)->_str_mapD.33116
  # DEBUG thisD.47859 => D#106ptD.0
  # DEBUG D#73ptD.0 => &D#106ptD.0->_M_tD.32259
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  i$_M_node_20 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_5(D) + 64B];
  # DEBUG D#72ptD.0 => D#73ptD.0
  # DEBUG thisD.47603 => D#72ptD.0
  # DEBUG thisD.47595 => NULL
  # DEBUG __xD.47594 => i$_M_node_20
  # DEBUG i$_M_nodeD.47979 => i$_M_node_20
  # DEBUG i$_M_nodeD.47979 => i$_M_node_20
  # DEBUG D#113ptD.0 => &this_5(D)->_str_mapD.33116
  # DEBUG thisD.47865 => D#113ptD.0
  # DEBUG D#71ptD.0 => &D#113ptD.0->_M_tD.32259
  # DEBUG thisD.47866 => D#71ptD.0
  # PT = nonlocal 
  _109 = &MEM[(const struct _Rb_treeD.32258 *)this_5(D) + 40B]._M_implD.32337._M_headerD.32503;
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => _109
  # DEBUG thisD.47862 => &iD.38484
  # DEBUG __xD.47863 => &D.38495
  if (i$_M_node_20 != _109)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_6(D)(2), .MEM_2(13)>
  # DEBUG D#125ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47979 => D#125ptD.0
  # DEBUG D#114ptD.0 => &this_5(D)->_int_mapD.34183
  # DEBUG thisD.47904 => D#114ptD.0
  # DEBUG D#77ptD.0 => &D#114ptD.0->_M_tD.33338
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  i$_M_node_12 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_5(D) + 112B];
  # DEBUG D#76ptD.0 => D#77ptD.0
  # DEBUG thisD.47650 => D#76ptD.0
  # DEBUG thisD.47642 => NULL
  # DEBUG __xD.47641 => i$_M_node_12
  # DEBUG i$_M_nodeD.47981 => i$_M_node_12
  # DEBUG i$_M_nodeD.47981 => i$_M_node_12
  # DEBUG D#118ptD.0 => &this_5(D)->_int_mapD.34183
  # DEBUG thisD.47910 => D#118ptD.0
  # DEBUG D#75ptD.0 => &D#118ptD.0->_M_tD.33338
  # DEBUG thisD.47911 => D#75ptD.0
  # PT = nonlocal 
  _83 = &MEM[(const struct _Rb_treeD.33337 *)this_5(D) + 88B]._M_implD.33415._M_headerD.33570;
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => _83
  # DEBUG thisD.47907 => &iD.38496
  # DEBUG __xD.47908 => &D.38507
  if (i$_M_node_12 != _83)
    goto <bb 16>;
  else
    goto <bb 15>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 820, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_143 = PHI <.MEM_6(D)(4), .MEM_2(14)>
  # PT = nonlocal escaped 
  # i$_M_node_94 = PHI <i$_M_node_20(4), i$_M_node_32(14)>
  # DEBUG i$_M_nodeD.47979 => i$_M_node_94
  # DEBUG D#113ptD.0 => &this_5(D)->_str_mapD.33116
  # DEBUG thisD.47865 => D#113ptD.0
  # DEBUG D#71ptD.0 => &D#113ptD.0->_M_tD.32259
  # DEBUG thisD.47866 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => _109
  # DEBUG thisD.47862 => &iD.38484
  # DEBUG __xD.47863 => &D.38495
  # DEBUG thisD.47872 => &iD.38484
  # DEBUG thisD.47873 => i$_M_node_94
  # DEBUG D#107ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_94]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#107ptD.0
  # DEBUG D#108ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_94 + 32B].secondD.35539
  # DEBUG thisD.47869 => D#108ptD.0
  # DEBUG __posD.47870 => 0
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _7 = MEM[(charD.10 * *)i$_M_node_94 + 64B];
  # DEBUG D#3ptD.0 => D#108ptD.0
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_143>
  _8 = MEM[(const charD.10 &)_7];
  if (_8 != 0)
    goto <bb 6>;
  else
    goto <bb 13>;
;;    succ:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 2639, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.47882 => &iD.38484
  # DEBUG thisD.47883 => i$_M_node_94
  # DEBUG D#109ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_94]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#109ptD.0
  # DEBUG D#110ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_94 + 32B].secondD.35539
  # DEBUG thisD.47879 => &iD.38484
  # DEBUG thisD.47880 => i$_M_node_94
  # DEBUG D#111ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)i$_M_node_94]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#111ptD.0
  # DEBUG D#112ptD.0 => &MEM[(const struct pairD.32038 *)i$_M_node_94 + 32B].firstD.35538
  # DEBUG __outD.47875 => config_out_9(D)
  # DEBUG __sD.47876 => "%"
  # DEBUG __sD.47877 => "%"
  # .MEM_45 = VDEF <.MEM_143>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), "%", 1);
  # DEBUG __osD.47885 => config_out_9(D)
  # DEBUG __strD.47886 => D#112ptD.0
  # VUSE <.MEM_45>
  _25 = MEM[(long unsigned intD.14 *)i$_M_node_94 + 40B];
  # DEBUG D#2ptD.0 => D#112ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _26 = (long intD.12) _25;
  # DEBUG thisD.46948 => D#112ptD.0
  # VUSE <.MEM_45>
  # PT = nonlocal escaped 
  _27 = MEM[(charD.10 * *)i$_M_node_94 + 32B];
  # DEBUG D#3ptD.0 => D#112ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_46 = VDEF <.MEM_45>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _28 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), _27, _26);
  # DEBUG __outD.47888 => _28
  # DEBUG __sD.47889 => " = \'"
  # DEBUG __sD.47890 => " = \'"
  # .MEM_47 = VDEF <.MEM_46>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_28, " = \'", 4);
  # DEBUG __osD.47892 => _28
  # DEBUG __strD.47893 => D#110ptD.0
  # VUSE <.MEM_47>
  _10 = MEM[(long unsigned intD.14 *)i$_M_node_94 + 72B];
  # DEBUG D#2ptD.0 => D#110ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _29 = (long intD.12) _10;
  # DEBUG thisD.46948 => D#110ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _30 = MEM[(charD.10 * *)i$_M_node_94 + 64B];
  # DEBUG D#3ptD.0 => D#110ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_48 = VDEF <.MEM_47>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _31 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_28, _30, _29);
  # DEBUG __outD.47895 => _31
  # DEBUG __sD.47896 => "\';"
  # DEBUG __sD.47897 => "\';"
  # .MEM_49 = VDEF <.MEM_48>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_31, "\';", 2);
  # DEBUG thisD.47899 => _31
  # DEBUG __pfD.47900 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56078 => _31
  # VUSE <.MEM_49>
  # PT = nonlocal escaped 
  _64 = _31->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_49>
  _65 = MEM[(long intD.12 *)_64 + -24B];
  # RANGE [0, 18446744073709551615]
  _66 = (sizetype) _65;
  # PT = nonlocal escaped 
  _67 = _31 + _66;
  # DEBUG thisD.56081 => _67
  # DEBUG __cD.56082 => 10
  # VUSE <.MEM_49>
  # PT = nonlocal escaped 
  _50 = MEM[(const struct basic_iosD.7355 *)_67]._M_ctypeD.20959;
  # DEBUG __fD.56083 => _50
  if (_50 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_49(6), .MEM_55(17), .MEM_62(26)>
  # .MEM_153 = VDEF <.MEM_103>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__throw_bad_castvD.2851 ();
;;    succ:      

;;   basic block 8, loop depth 1, count 0, freq 2638, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56085 => _50
  # DEBUG __cD.56084 => 10
  # VUSE <.MEM_49>
  _72 = MEM[(const struct ctypeD.7662 *)_50]._M_widen_okD.17874;
  if (_72 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 1610, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_49>
  _75 = MEM[(const struct ctypeD.7662 *)_50]._M_widenD.17875[10];
  pretmp_1 = (intD.9) _75;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1028, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56087 => _50
  # DEBUG __cD.56088 => 10
  # .MEM_145 = VDEF <.MEM_49>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_50);
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _80 = MEM[(const struct ctypeD.7662 *)_50].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _81 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_80 + 48B];
  # PT = anything 
  PROF_85 = [obj_type_ref] OBJ_TYPE_REF(_81;(const struct ctypeD.7662)_50->6);
  if (PROF_85 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 12>;
  else
    goto <bb 11>;
;;    succ:       12 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 204, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal 
  # CLB = nonlocal 
  _87 = OBJ_TYPE_REF(_81;(const struct ctypeD.7662)_50->6) (_50, 10);
  pretmp_157 = (intD.9) _87;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2638, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_110 = PHI <.MEM_49(9), .MEM_145(10), .MEM_146(11)>
  # RANGE [-128, 127]
  # prephitmp_84 = PHI <pretmp_1(9), 10(10), pretmp_157(11)>
  # .MEM_150 = VDEF <.MEM_110>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _70 = _ZNSo3putEcD.21670 (_31, prephitmp_84);
  # DEBUG __osD.56079 => _70
  # .MEM_151 = VDEF <.MEM_150>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSo5flushEvD.21681 (_70);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       5 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_143(5), .MEM_151(12)>
  # DEBUG thisD.47902 => &iD.38484
  # VUSE <.MEM_2>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_32 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_94);
  # DEBUG i$_M_nodeD.47979 => i$_M_node_32
  # DEBUG i$_M_nodeD.47979 => i$_M_node_32
  # DEBUG D#113ptD.0 => &this_5(D)->_str_mapD.33116
  # DEBUG thisD.47865 => D#113ptD.0
  # DEBUG D#71ptD.0 => &D#113ptD.0->_M_tD.32259
  # DEBUG thisD.47866 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => _109
  # DEBUG thisD.47862 => &iD.38484
  # DEBUG __xD.47863 => &D.38495
  if (i$_M_node_32 != _109)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 897, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       3 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_33 = PHI <.MEM_39(3), .MEM_160(22)>
  # DEBUG D#127ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47981 => D#127ptD.0
  # DEBUG D#119ptD.0 => &this_5(D)->_float_mapD.35250
  # DEBUG thisD.47940 => D#119ptD.0
  # DEBUG D#81ptD.0 => &D#119ptD.0->_M_tD.34405
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  i$_M_node_17 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_5(D) + 160B];
  # DEBUG D#80ptD.0 => D#81ptD.0
  # DEBUG thisD.47697 => D#80ptD.0
  # DEBUG thisD.47689 => NULL
  # DEBUG __xD.47688 => i$_M_node_17
  # DEBUG i$_M_nodeD.47983 => i$_M_node_17
  # DEBUG i$_M_nodeD.47983 => i$_M_node_17
  # DEBUG D#123ptD.0 => &this_5(D)->_float_mapD.35250
  # DEBUG thisD.47946 => D#123ptD.0
  # DEBUG D#79ptD.0 => &D#123ptD.0->_M_tD.34405
  # DEBUG thisD.47947 => D#79ptD.0
  # PT = nonlocal 
  _123 = &MEM[(const struct _Rb_treeD.34404 *)this_5(D) + 136B]._M_implD.34482._M_headerD.34637;
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => _123
  # DEBUG thisD.47943 => &iD.38508
  # DEBUG __xD.47944 => &D.38519
  if (i$_M_node_17 != _123)
    goto <bb 25>;
  else
    goto <bb 24>;
;;    succ:       25 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       3 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9063, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_152 = PHI <.MEM_39(16), .MEM_160(23)>
  # PT = nonlocal escaped 
  # i$_M_node_158 = PHI <i$_M_node_12(16), i$_M_node_38(23)>
  # DEBUG i$_M_nodeD.47981 => i$_M_node_158
  # DEBUG D#118ptD.0 => &this_5(D)->_int_mapD.34183
  # DEBUG thisD.47910 => D#118ptD.0
  # DEBUG D#75ptD.0 => &D#118ptD.0->_M_tD.33338
  # DEBUG thisD.47911 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => _83
  # DEBUG thisD.47907 => &iD.38496
  # DEBUG __xD.47908 => &D.38507
  # DEBUG thisD.47921 => &iD.38496
  # DEBUG thisD.47922 => i$_M_node_158
  # DEBUG D#115ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)i$_M_node_158]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#115ptD.0
  # VUSE <.MEM_152>
  _13 = MEM[(const struct pairD.33117 *)i$_M_node_158 + 32B].secondD.35722;
  # DEBUG thisD.47918 => &iD.38496
  # DEBUG thisD.47919 => i$_M_node_158
  # DEBUG D#116ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)i$_M_node_158]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#116ptD.0
  # DEBUG D#117ptD.0 => &MEM[(const struct pairD.33117 *)i$_M_node_158 + 32B].firstD.35721
  # DEBUG __outD.47914 => config_out_9(D)
  # DEBUG __sD.47915 => "%"
  # DEBUG __sD.47916 => "%"
  # .MEM_52 = VDEF <.MEM_152>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), "%", 1);
  # DEBUG __osD.47924 => config_out_9(D)
  # DEBUG __strD.47925 => D#117ptD.0
  # VUSE <.MEM_52>
  _34 = MEM[(long unsigned intD.14 *)i$_M_node_158 + 40B];
  # DEBUG D#2ptD.0 => D#117ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _35 = (long intD.12) _34;
  # DEBUG thisD.46948 => D#117ptD.0
  # VUSE <.MEM_52>
  # PT = nonlocal escaped 
  _36 = MEM[(charD.10 * *)i$_M_node_158 + 32B];
  # DEBUG D#3ptD.0 => D#117ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_53 = VDEF <.MEM_52>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _37 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), _36, _35);
  # DEBUG __outD.47927 => _37
  # DEBUG __sD.47928 => " = "
  # DEBUG __sD.47929 => " = "
  # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_37, " = ", 3);
  # .MEM_15 = VDEF <.MEM_54>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _16 = _ZNSolsEiD.21643 (_37, _13);
  # DEBUG __outD.47931 => _16
  # DEBUG __sD.47932 => ";"
  # DEBUG __sD.47933 => ";"
  # .MEM_55 = VDEF <.MEM_15>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_16, ";", 1);
  # DEBUG thisD.47935 => _16
  # DEBUG __pfD.47936 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56093 => _16
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _90 = _16->_vptr.basic_ostreamD.21735;
  # VUSE <.MEM_55>
  _91 = MEM[(long intD.12 *)_90 + -24B];
  # RANGE [0, 18446744073709551615]
  _92 = (sizetype) _91;
  # PT = nonlocal escaped 
  _93 = _16 + _92;
  # DEBUG thisD.56096 => _93
  # DEBUG __cD.56097 => 10
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _56 = MEM[(const struct basic_iosD.7355 *)_93]._M_ctypeD.20959;
  # DEBUG __fD.56098 => _56
  if (_56 == 0B)
    goto <bb 7>;
  else
    goto <bb 18>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 9060, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56100 => _56
  # DEBUG __cD.56099 => 10
  # VUSE <.MEM_55>
  _98 = MEM[(const struct ctypeD.7662 *)_56]._M_widen_okD.17874;
  if (_98 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 5528, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_55>
  _101 = MEM[(const struct ctypeD.7662 *)_56]._M_widenD.17875[10];
  pretmp_3 = (intD.9) _101;
  goto <bb 22>;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 3531, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56102 => _56
  # DEBUG __cD.56103 => 10
  # .MEM_154 = VDEF <.MEM_55>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_56);
  # VUSE <.MEM_154>
  # PT = nonlocal escaped 
  _106 = MEM[(const struct ctypeD.7662 *)_56].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_154>
  # PT = nonlocal escaped 
  _107 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_106 + 48B];
  # PT = anything 
  PROF_111 = [obj_type_ref] OBJ_TYPE_REF(_107;(const struct ctypeD.7662)_56->6);
  if (PROF_111 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 701, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_155 = VDEF <.MEM_154>
  # USE = nonlocal 
  # CLB = nonlocal 
  _113 = OBJ_TYPE_REF(_107;(const struct ctypeD.7662)_56->6) (_56, 10);
  pretmp_18 = (intD.9) _113;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 9064, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_142 = PHI <.MEM_55(19), .MEM_154(20), .MEM_155(21)>
  # RANGE [-128, 127]
  # prephitmp_148 = PHI <pretmp_3(19), 10(20), pretmp_18(21)>
  # .MEM_159 = VDEF <.MEM_142>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _96 = _ZNSo3putEcD.21670 (_16, prephitmp_148);
  # DEBUG __osD.56094 => _96
  # .MEM_160 = VDEF <.MEM_159>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSo5flushEvD.21681 (_96);
  # DEBUG thisD.47938 => &iD.38496
  # VUSE <.MEM_160>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_38 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_158);
  # DEBUG i$_M_nodeD.47981 => i$_M_node_38
  # DEBUG i$_M_nodeD.47981 => i$_M_node_38
  # DEBUG D#118ptD.0 => &this_5(D)->_int_mapD.34183
  # DEBUG thisD.47910 => D#118ptD.0
  # DEBUG D#75ptD.0 => &D#118ptD.0->_M_tD.33338
  # DEBUG thisD.47911 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => _83
  # DEBUG thisD.47907 => &iD.38496
  # DEBUG __xD.47908 => &D.38507
  if (i$_M_node_38 != _83)
    goto <bb 23>;
  else
    goto <bb 15>;
;;    succ:       23 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 8248, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 893, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_33(15), .MEM_169(31)>
  # DEBUG D#129ptD.0 => {CLOBBER}
  # DEBUG i$_M_nodeD.47983 => D#129ptD.0
  # .MEM_24 = VDEF <.MEM_23>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSo5flushEvD.21681 (config_out_9(D));
  # VUSE <.MEM_24>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 25, loop depth 0, count 0, freq 816, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 9027, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_33(25), .MEM_169(32)>
  # PT = nonlocal escaped 
  # i$_M_node_136 = PHI <i$_M_node_17(25), i$_M_node_44(32)>
  # DEBUG i$_M_nodeD.47983 => i$_M_node_136
  # DEBUG D#123ptD.0 => &this_5(D)->_float_mapD.35250
  # DEBUG thisD.47946 => D#123ptD.0
  # DEBUG D#79ptD.0 => &D#123ptD.0->_M_tD.34405
  # DEBUG thisD.47947 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => _123
  # DEBUG thisD.47943 => &iD.38508
  # DEBUG __xD.47944 => &D.38519
  # DEBUG thisD.47957 => &iD.38508
  # DEBUG thisD.47958 => i$_M_node_136
  # DEBUG D#120ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)i$_M_node_136]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#120ptD.0
  # VUSE <.MEM_77>
  _19 = MEM[(const struct pairD.34184 *)i$_M_node_136 + 32B].secondD.35902;
  # DEBUG thisD.47954 => &iD.38508
  # DEBUG thisD.47955 => i$_M_node_136
  # DEBUG D#121ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)i$_M_node_136]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#121ptD.0
  # DEBUG D#122ptD.0 => &MEM[(const struct pairD.34184 *)i$_M_node_136 + 32B].firstD.35901
  # DEBUG __outD.47950 => config_out_9(D)
  # DEBUG __sD.47951 => "%"
  # DEBUG __sD.47952 => "%"
  # .MEM_58 = VDEF <.MEM_77>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), "%", 1);
  # DEBUG __osD.47960 => config_out_9(D)
  # DEBUG __strD.47961 => D#122ptD.0
  # VUSE <.MEM_58>
  _40 = MEM[(long unsigned intD.14 *)i$_M_node_136 + 40B];
  # DEBUG D#2ptD.0 => D#122ptD.0
  # DEBUG thisD.46951 => D#2ptD.0
  _41 = (long intD.12) _40;
  # DEBUG thisD.46948 => D#122ptD.0
  # VUSE <.MEM_58>
  # PT = nonlocal escaped 
  _42 = MEM[(charD.10 * *)i$_M_node_136 + 32B];
  # DEBUG D#3ptD.0 => D#122ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # .MEM_59 = VDEF <.MEM_58>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _43 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (config_out_9(D), _42, _41);
  # DEBUG __outD.47963 => _43
  # DEBUG __sD.47964 => " = "
  # DEBUG __sD.47965 => " = "
  # .MEM_60 = VDEF <.MEM_59>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_43, " = ", 3);
  # DEBUG thisD.47967 => _43
  # DEBUG __fD.47968 => _19
  # .MEM_61 = VDEF <.MEM_60>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _21 = _ZNSo9_M_insertIdEERSoT_D.21878 (_43, _19);
  # DEBUG __outD.47970 => _21
  # DEBUG __sD.47971 => ";"
  # DEBUG __sD.47972 => ";"
  # .MEM_62 = VDEF <.MEM_61>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.7824 (_21, ";", 1);
  # DEBUG thisD.47974 => _21
  # DEBUG __pfD.47975 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.21775
  # DEBUG __osD.56108 => _21
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _116 = MEM[(struct basic_ostreamD.7361 *)_21]._vptr.basic_ostreamD.21735;
  # VUSE <.MEM_62>
  _117 = MEM[(long intD.12 *)_116 + -24B];
  # RANGE [0, 18446744073709551615]
  _118 = (sizetype) _117;
  # PT = nonlocal escaped 
  _119 = _21 + _118;
  # DEBUG thisD.56111 => _119
  # DEBUG __cD.56112 => 10
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _63 = MEM[(const struct basic_iosD.7355 *)_119]._M_ctypeD.20959;
  # DEBUG __fD.56113 => _63
  if (_63 == 0B)
    goto <bb 7>;
  else
    goto <bb 27>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 9023, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56115 => _63
  # DEBUG __cD.56114 => 10
  # VUSE <.MEM_62>
  _124 = MEM[(const struct ctypeD.7662 *)_63]._M_widen_okD.17874;
  if (_124 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 5506, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_62>
  _127 = MEM[(const struct ctypeD.7662 *)_63]._M_widenD.17875[10];
  pretmp_11 = (intD.9) _127;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 3517, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56117 => _63
  # DEBUG __cD.56118 => 10
  # .MEM_163 = VDEF <.MEM_62>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.17982 (_63);
  # VUSE <.MEM_163>
  # PT = nonlocal escaped 
  _132 = MEM[(const struct ctypeD.7662 *)_63].D.18015._vptr.facetD.14633;
  # VUSE <.MEM_163>
  # PT = nonlocal escaped 
  _133 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_132 + 48B];
  # PT = anything 
  PROF_137 = [obj_type_ref] OBJ_TYPE_REF(_133;(const struct ctypeD.7662)_63->6);
  if (PROF_137 == _ZNKSt5ctypeIcE8do_widenEcD.17963)
    goto <bb 31>;
  else
    goto <bb 30>;
;;    succ:       31 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 698, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_164 = VDEF <.MEM_163>
  # USE = nonlocal 
  # CLB = nonlocal 
  _139 = OBJ_TYPE_REF(_133;(const struct ctypeD.7662)_63->6) (_63, 10);
  pretmp_71 = (intD.9) _139;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 9027, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_144 = PHI <.MEM_62(28), .MEM_163(29), .MEM_164(30)>
  # RANGE [-128, 127]
  # prephitmp_97 = PHI <pretmp_11(28), 10(29), pretmp_71(30)>
  # .MEM_168 = VDEF <.MEM_144>
  # PT = nonlocal escaped 
  # USE = nonlocal 
  # CLB = nonlocal 
  _122 = _ZNSo3putEcD.21670 (_21, prephitmp_97);
  # DEBUG __osD.56109 => _122
  # .MEM_169 = VDEF <.MEM_168>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSo5flushEvD.21681 (_122);
  # DEBUG thisD.47977 => &iD.38508
  # VUSE <.MEM_169>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  i$_M_node_44 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.27723 (i$_M_node_136);
  # DEBUG i$_M_nodeD.47983 => i$_M_node_44
  # DEBUG i$_M_nodeD.47983 => i$_M_node_44
  # DEBUG D#123ptD.0 => &this_5(D)->_float_mapD.35250
  # DEBUG thisD.47946 => D#123ptD.0
  # DEBUG D#79ptD.0 => &D#123ptD.0->_M_tD.34405
  # DEBUG thisD.47947 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => _123
  # DEBUG thisD.47943 => &iD.38508
  # DEBUG __xD.47944 => &D.38519
  if (i$_M_node_44 != _123)
    goto <bb 32>;
  else
    goto <bb 24>;
;;    succ:       32 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 8215, maybe hot
;;    prev block 31, next block 1, flags: (NEW)
;;    pred:       31 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function int Configuration::GetInt(const string&) const (_ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1734, decl_uid=35273, cgraph_uid=420, symbol_order=422)


Pass statistics:
----------------

int Configuration::GetInt(const string&) const (const struct ConfigurationD.32032 * const thisD.35964, const struct stringD.2845 & fieldD.35962)
Eh tree:
   3 cleanup land:{2,<L4>}
{
  const struct _Rb_tree_node_baseD.27676 * SR.1198D.56261;
  const struct _Rb_tree_node_baseD.27676 * SR.1197D.56260;
  const size_typeD.11502 __sizeD.56246;
  const size_typeD.11502 __osizeD.56247;
  const size_typeD.11502 __lenD.56248;
  intD.9 __rD.56249;
  const difference_typeD.11503 __dD.56252;
  intD.9 D.56258;
  const size_typeD.11502 __sizeD.56231;
  const size_typeD.11502 __osizeD.56232;
  const size_typeD.11502 __lenD.56233;
  intD.9 __rD.56234;
  const difference_typeD.11503 __dD.56237;
  intD.9 D.56243;
  struct const_iteratorD.33643 D.56228;
  const struct _Rb_tree_nodeD.33341 * __yD.56218;
  const struct _Rb_tree_node_baseD.27676 * SR.822D.50237;
  struct const_iteratorD.33915 D.50213;
  struct basic_stringD.2844 D.35969;
  charD.10 * const _5;
  intD.9 _7;
  const size_typeD.11502 _13;
  const size_typeD.11502 pretmp_33;
  charD.10 * const _35;
  long unsigned intD.14 _37;
  const size_typeD.11502 _43;
  charD.10 * const _46;
  long unsigned intD.14 _49;
  charD.10 * const pretmp_85;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50214 => &matchD.35966
  # DEBUG match$_M_nodeD.50233 => 0B
  # DEBUG D#342ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50210 => D#342ptD.0
  # DEBUG __xD.50211 => field_3(D)
  # DEBUG D#673ptD.0 => &MEM[(const struct mapD.33119 *)this_2(D) + 88B]._M_tD.33338
  # DEBUG thisD.56204 => D#673ptD.0
  # DEBUG __kD.56205 => field_3(D)
  # DEBUG thisD.56215 => D#673ptD.0
  # PT = nonlocal 
  __y_19 = &MEM[(const struct _Rb_treeD.33337 *)this_2(D) + 88B]._M_implD.33415._M_headerD.33570;
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  __y_20 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_2(D) + 104B];
  # DEBUG D#74ptD.0 => D#673ptD.0
  # DEBUG thisD.49125 => D#74ptD.0
  # DEBUG D#223ptD.0 => D#673ptD.0
  # DEBUG __xD.56219 => NULL
  # DEBUG __yD.56218 => NULL
  # DEBUG __kD.56217 => field_3(D)
  # DEBUG __yD.56218 => __y_19
  # DEBUG __xD.56219 => __y_20
  if (__y_20 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1(D)>
  pretmp_33 = MEM[(long unsigned intD.14 *)field_3(D) + 8B];
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  pretmp_85 = MEM[(charD.10 * *)field_3(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_1(D)(2), .MEM_32(14), .MEM_32(17), .MEM_32(19)>
  # DEBUG thisD.49139 => D#673ptD.0
  # DEBUG thisD.49141 => NULL
  # DEBUG __xD.49140 => __y_19
  # DEBUG D#224ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49143 => D#224ptD.0
  # DEBUG match$_M_nodeD.50233 => __y_19
  # DEBUG D#343ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50206 => D#343ptD.0
  # DEBUG D#75ptD.0 => &D#343ptD.0->_M_tD.33338
  # DEBUG thisD.50207 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => __y_19
  # DEBUG thisD.50203 => &matchD.35966
  # DEBUG __xD.50204 => &D.35968
  # DEBUG D#224ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49143 => D#224ptD.0
  # DEBUG match$_M_nodeD.50233 => __y_19
  # DEBUG D#343ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50206 => D#343ptD.0
  # DEBUG D#75ptD.0 => &D#343ptD.0->_M_tD.33338
  # DEBUG thisD.50207 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => __y_19
  # DEBUG thisD.50203 => &matchD.35966
  # DEBUG __xD.50204 => &D.35968
  # .MEM_9 = VDEF <.MEM_90>
  # USE = nonlocal null { D.35969 } (escaped)
  # CLB = nonlocal null { D.35969 } (escaped)
  D.35969 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown integer field: ", field_3(D)); [return slot optimization]
  [LP 2] # .MEM_10 = VDEF <.MEM_9>
  # USE = nonlocal null { D.35969 } (escaped)
  # CLB = nonlocal null { D.35969 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_2(D), &D.35969, 0);
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_30 = PHI <__y_24(12), __y_25(13)>
  # PT = nonlocal escaped 
  # __y_29 = PHI <__y_88(12), __y_28(13)>
  # DEBUG __yD.56218 => __y_29
  # DEBUG __xD.56219 => __y_30
  if (__y_30 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_88 = PHI <__y_20(3), __y_30(6)>
  # PT = nonlocal escaped 
  # __y_28 = PHI <__y_19(3), __y_29(6)>
  # .MEM_32 = PHI <.MEM_1(D)(3), .MEM_32(6)>
  # DEBUG __yD.56218 => __y_28
  # DEBUG __xD.56219 => __y_88
  # DEBUG __xD.56220 => __y_88
  # DEBUG __xD.48933 => __y_88
  # DEBUG thisD.48934 => __y_88
  # DEBUG D#215ptD.0 => &__y_88->_M_value_fieldD.38961
  # DEBUG __rD.47655 => D#215ptD.0
  # DEBUG __xD.56222 => D#215ptD.0
  # DEBUG thisD.56221 => D#151ptD.0
  # DEBUG D#674ptD.0 => &MEM[(const struct pairD.33117 &)__y_88 + 32].firstD.35721
  # DEBUG D#221ptD.0 => &D#222ptD.0->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#221ptD.0
  # DEBUG __xD.56225 => D#674ptD.0
  # DEBUG __yD.56224 => field_3(D)
  # DEBUG thisD.56223 => D#203ptD.0
  # DEBUG __lhsD.56227 => D#674ptD.0
  # DEBUG __rhsD.56226 => field_3(D)
  # DEBUG thisD.56229 => D#674ptD.0
  # DEBUG __strD.56230 => field_3(D)
  # VUSE <.MEM_32>
  _13 = MEM[(long unsigned intD.14 *)__y_88 + 40B];
  # DEBUG D#2ptD.0 => D#674ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56231 => _13
  # DEBUG D#691ptD.0 => MEM[(long unsigned intD.14 *)field_3(D) + 8B]
  # DEBUG D#2ptD.0 => field_3(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56232 => D#691ptD.0
  # DEBUG __aD.56239 => &__sizeD.56231
  # DEBUG __bD.56238 => &__osizeD.56232
  __len_83 = MIN_EXPR <_13, pretmp_33>;
  # DEBUG __lenD.56233 => D#671ptD.0
  # DEBUG thisD.48671 => field_3(D)
  # DEBUG D#690ptD.0 => MEM[(charD.10 * *)field_3(D)]
  # DEBUG D#3ptD.0 => field_3(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _35 = MEM[(charD.10 * *)__y_88 + 32B];
  # DEBUG D#3ptD.0 => D#674ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56242 => _35
  # DEBUG __s2D.56241 => D#690ptD.0
  # DEBUG __nD.56240 => D#671ptD.0
  # VUSE <.MEM_32>
  # USE = nonlocal escaped 
  __r_36 = memcmpD.989 (_35, pretmp_85, __len_83);
  # DEBUG __rD.56234 => NULL
  if (__r_36 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56236 => _13
  # DEBUG __n2D.56235 => D#691ptD.0
  # RANGE [0, 18446744073709551615]
  _37 = _13 - pretmp_33;
  __d_38 = (const difference_typeD.11503) _37;
  # DEBUG __dD.56237 => __d_38
  if (__d_38 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_38 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_39 = (intD.9) _37;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_40 = PHI <__r_36(7), __r_39(10)>
  # DEBUG __rD.56234 => __r_40
  # DEBUG D#680ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56231 => D#680ptD.0
  # DEBUG D#681ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56232 => D#681ptD.0
  if (__r_40 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56234 => NULL
  # DEBUG __yD.56218 => __y_88
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __y_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_88 + 16B];
  # DEBUG D#157ptD.0 => __y_88
  # DEBUG __xD.49084 => D#157ptD.0
  # DEBUG __xD.56219 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56234 => NULL
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __y_25 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_88 + 24B];
  # DEBUG D#158ptD.0 => __y_88
  # DEBUG __xD.49083 => D#158ptD.0
  # DEBUG __xD.56219 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_55 = PHI <__y_29(5)>
  # DEBUG thisD.49082 => NULL
  # DEBUG __xD.49081 => __y_55
  # DEBUG __j$_M_nodeD.49143 => __y_55
  # DEBUG thisD.49105 => D#673ptD.0
  # DEBUG thisD.49107 => NULL
  # DEBUG __xD.49106 => __y_19
  # DEBUG thisD.49102 => &__jD.56206
  # DEBUG __xD.49103 => NULL
  if (__y_19 == __y_55)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.56207 => __y_55
  # DEBUG __xD.48187 => __y_55
  # DEBUG thisD.48188 => __y_55
  # DEBUG D#152ptD.0 => &__y_55->_M_value_fieldD.38961
  # DEBUG __rD.47655 => D#152ptD.0
  # DEBUG __xD.56209 => D#152ptD.0
  # DEBUG thisD.56208 => D#151ptD.0
  # DEBUG D#675ptD.0 => &MEM[(const struct pairD.33117 &)__y_55 + 32].firstD.35721
  # DEBUG D#225ptD.0 => &MEM[(const struct _Rb_treeD.33337 *)D#673ptD.0]._M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#225ptD.0
  # DEBUG __xD.56212 => field_3(D)
  # DEBUG __yD.56211 => D#675ptD.0
  # DEBUG thisD.56210 => D#203ptD.0
  # DEBUG __lhsD.56214 => field_3(D)
  # DEBUG __rhsD.56213 => D#675ptD.0
  # DEBUG thisD.56244 => field_3(D)
  # DEBUG __strD.56245 => D#675ptD.0
  # DEBUG D#689ptD.0 => MEM[(long unsigned intD.14 *)field_3(D) + 8B]
  # DEBUG D#2ptD.0 => field_3(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56246 => D#689ptD.0
  # VUSE <.MEM_32>
  _43 = MEM[(long unsigned intD.14 *)__y_55 + 40B];
  # DEBUG D#2ptD.0 => D#675ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56247 => _43
  # DEBUG __aD.56254 => &__sizeD.56246
  # DEBUG __bD.56253 => &__osizeD.56247
  __len_53 = MIN_EXPR <pretmp_33, _43>;
  # DEBUG __lenD.56248 => D#672ptD.0
  # DEBUG thisD.48671 => D#675ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _46 = MEM[(charD.10 * *)__y_55 + 32B];
  # DEBUG D#3ptD.0 => D#675ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#688ptD.0 => MEM[(charD.10 * *)field_3(D)]
  # DEBUG D#3ptD.0 => field_3(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56257 => D#688ptD.0
  # DEBUG __s2D.56256 => _46
  # DEBUG __nD.56255 => D#672ptD.0
  # VUSE <.MEM_32>
  # USE = nonlocal escaped 
  __r_48 = memcmpD.989 (pretmp_85, _46, __len_53);
  # DEBUG __rD.56249 => NULL
  if (__r_48 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56251 => D#689ptD.0
  # DEBUG __n2D.56250 => _43
  # RANGE [0, 18446744073709551615]
  _49 = pretmp_33 - _43;
  __d_50 = (const difference_typeD.11503) _49;
  # DEBUG __dD.56252 => __d_50
  if (__d_50 > 2147483647)
    goto <bb 23>;
  else
    goto <bb 17>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_50 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_51 = (intD.9) _49;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_52 = PHI <__r_48(15), __r_51(18)>
  # DEBUG __rD.56249 => __r_52
  # DEBUG D#686ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56246 => D#686ptD.0
  # DEBUG D#687ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56247 => D#687ptD.0
  if (__r_52 < 0)
    goto <bb 4>;
  else
    goto <bb 23>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L4>: [LP 2]
  # DEBUG thisD.50218 => &D.35969
  # DEBUG thisD.50219 => &D.35969
  # DEBUG thisD.50228 => &D.35969
  # VUSE <.MEM_10>
  # PT = nonlocal escaped 
  _5 = MEM[(charD.10 * *)&D.35969];
  # DEBUG D#3ptD.0 => &D.35969
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50229 => &D.35969
  if (&D.35969.D.11539._M_local_bufD.11541 != _5)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35969.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.50221 => &D.35969
  # DEBUG __sizeD.50220 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35969
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35969
  # DEBUG D#183ptD.0 => &D.35969._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.50224 => _5
  # DEBUG __aD.50222 => D#181ptD.0
  # DEBUG __nD.50223 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.50227 => _5
  # DEBUG thisD.50225 => D#177ptD.0
  # DEBUG D.50226 => D#178ptD.0
  # .MEM_14 = VDEF <.MEM_10>
  # USE = nonlocal null { D.35969 } (escaped)
  # CLB = nonlocal null { D.35969 } (escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_10(20), .MEM_14(21)>
  # DEBUG D#187ptD.0 => &D.35969._M_dataplusD.11519
  # DEBUG thisD.50230 => D#187ptD.0
  # DEBUG thisD.50231 => D#187ptD.0
  # DEBUG thisD.50232 => D#187ptD.0
  # .MEM_12 = VDEF <.MEM_11>
  D.35969 ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 22, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56249 => NULL
  # DEBUG D#224ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49143 => D#224ptD.0
  # DEBUG match$_M_nodeD.50233 => __y_55
  # DEBUG D#343ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50206 => D#343ptD.0
  # DEBUG D#75ptD.0 => &D#343ptD.0->_M_tD.33338
  # DEBUG thisD.50207 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => __y_19
  # DEBUG thisD.50203 => &matchD.35966
  # DEBUG __xD.50204 => &D.35968
  # DEBUG D#224ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49143 => D#224ptD.0
  # DEBUG match$_M_nodeD.50233 => __y_55
  # DEBUG D#343ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50206 => D#343ptD.0
  # DEBUG D#75ptD.0 => &D#343ptD.0->_M_tD.33338
  # DEBUG thisD.50207 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => __y_19
  # DEBUG thisD.50203 => &matchD.35966
  # DEBUG __xD.50204 => &D.35968
  # DEBUG thisD.50215 => &matchD.35966
  # DEBUG thisD.50216 => __y_55
  # DEBUG D#344ptD.0 => &__y_55->_M_value_fieldD.38961
  # DEBUG __rD.47655 => D#344ptD.0
  # VUSE <.MEM_32>
  _7 = MEM[(const struct pairD.33117 *)__y_55 + 32B].secondD.35722;
  # DEBUG D#345ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.50233 => D#345ptD.0
  # VUSE <.MEM_32>
  return _7;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_2(D) + 104B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 104
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_2(D) + 104B]
Creating dr for MEM[(long unsigned int *)field_3(D) + 8B]
analyze_innermost: success.
	base_address: field_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)field_3(D) + 8B]
Creating dr for MEM[(char * *)field_3(D)]
analyze_innermost: success.
	base_address: field_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)field_3(D)]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
Applying pattern match.pd:397, generic-match.c:4039
Creating dr for MEM[(long unsigned int *)__y_55 + 40B]
analyze_innermost: success.
	base_address: __y_55
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__y_55 + 40B]
Creating dr for MEM[(char * *)__y_55 + 32B]
analyze_innermost: success.
	base_address: __y_55
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__y_55 + 32B]
Creating dr for MEM[(const struct pair *)__y_55 + 32B].second
analyze_innermost: success.
	base_address: __y_55
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(const struct pair *)__y_55 + 32B]
	Access function 0: 256
Creating dr for MEM[(char * *)&D.35969]
analyze_innermost: success.
	base_address: &D.35969
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.35969]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:31)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:28, LOOPS:1, CONDITIONS:12, STMTS:254)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG this => &match
    # DEBUG match$_M_node => 0B
    # DEBUG D#342 => &this_2(D)->_int_map
    # DEBUG this => D#342
    # DEBUG __x => field_3(D)
    # DEBUG D#673 => &MEM[(const struct map *)this_2(D) + 88B]._M_t
    # DEBUG this => D#673
    # DEBUG __k => field_3(D)
    # DEBUG this => D#673
    __y_19 = &MEM[(const struct _Rb_tree *)this_2(D) + 88B]._M_impl._M_header;
    # VUSE <.MEM_1(D)>
    __y_20 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 104B];
    # DEBUG D#74 => D#673
    # DEBUG this => D#74
    # DEBUG D#223 => D#673
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_3(D)
    # DEBUG __y => __y_19
    # DEBUG __x => __y_20
    if (__y_20 == 0B)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 3>:
    # VUSE <.MEM_1(D)>
    pretmp_33 = MEM[(long unsigned int *)field_3(D) + 8B];
    # VUSE <.MEM_1(D)>
    pretmp_85 = MEM[(char * *)field_3(D)];
    goto <bb 7>;

  }
  bb_4 (preds = {bb_2 bb_24 bb_17 bb_19 }, succs = {bb_20 })
  {
    <bb 4>:
    # .MEM_90 = PHI <.MEM_1(D)(2), .MEM_32(24), .MEM_32(17), .MEM_32(19)>
    # DEBUG this => D#673
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG D#224 => {CLOBBER}
    # DEBUG __j$_M_node => D#224
    # DEBUG match$_M_node => __y_19
    # DEBUG D#343 => &this_2(D)->_int_map
    # DEBUG this => D#343
    # DEBUG D#75 => &D#343->_M_t
    # DEBUG this => D#75
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &match
    # DEBUG __x => &D.35968
    # DEBUG D#224 => {CLOBBER}
    # DEBUG __j$_M_node => D#224
    # DEBUG match$_M_node => __y_19
    # DEBUG D#343 => &this_2(D)->_int_map
    # DEBUG this => D#343
    # DEBUG D#75 => &D#343->_M_t
    # DEBUG this => D#75
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &match
    # DEBUG __x => &D.35968
    # .MEM_9 = VDEF <.MEM_90>
    D.35969 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown integer field: ", field_3(D)); [return slot optimization]
    # .MEM_10 = VDEF <.MEM_9>
    Configuration::ParseError (this_2(D), &D.35969, 0);

  }
  bb_14 (preds = {bb_5 }, succs = {bb_24 })
  {
    <bb 14>:
    # __y_55 = PHI <__y_29(5)>

  }
  bb_24 (preds = {bb_14 }, succs = {bb_4 bb_15 })
  {
    <bb 24>:
    # DEBUG this => NULL
    # DEBUG __x => __y_55
    # DEBUG __j$_M_node => __y_55
    # DEBUG this => D#673
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &__j
    # DEBUG __x => NULL
    if (__y_19 == __y_55)
      goto <bb 4>;
    else
      goto <bb 15>;

  }
  bb_15 (preds = {bb_24 }, succs = {bb_16 bb_19 })
  {
    <bb 15>:
    # DEBUG __x => __y_55
    # DEBUG __x => __y_55
    # DEBUG this => __y_55
    # DEBUG D#152 => &__y_55->_M_value_field
    # DEBUG __r => D#152
    # DEBUG __x => D#152
    # DEBUG this => D#151
    # DEBUG D#675 => &MEM[(const struct pair &)__y_55 + 32].first
    # DEBUG D#225 => &MEM[(const struct _Rb_tree *)D#673]._M_impl._M_key_compare
    # DEBUG D#203 => D#225
    # DEBUG __x => field_3(D)
    # DEBUG __y => D#675
    # DEBUG this => D#203
    # DEBUG __lhs => field_3(D)
    # DEBUG __rhs => D#675
    # DEBUG this => field_3(D)
    # DEBUG __str => D#675
    # DEBUG D#689 => MEM[(long unsigned int *)field_3(D) + 8B]
    # DEBUG D#2 => field_3(D)
    # DEBUG this => D#2
    # DEBUG __size => D#689
    # VUSE <.MEM_32>
    _43 = MEM[(long unsigned int *)__y_55 + 40B];
    # DEBUG D#2 => D#675
    # DEBUG this => D#2
    # DEBUG __osize => _43
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_53 = MIN_EXPR <pretmp_33, _43>;
    # DEBUG __len => D#672
    # DEBUG this => D#675
    # VUSE <.MEM_32>
    _46 = MEM[(char * *)__y_55 + 32B];
    # DEBUG D#3 => D#675
    # DEBUG this => D#3
    # DEBUG D#688 => MEM[(char * *)field_3(D)]
    # DEBUG D#3 => field_3(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#688
    # DEBUG __s2 => _46
    # DEBUG __n => D#672
    # VUSE <.MEM_32>
    __r_48 = __builtin_memcmp (pretmp_85, _46, __len_53);
    # DEBUG __r => NULL
    if (__r_48 == 0)
      goto <bb 16>;
    else
      goto <bb 19>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_23 bb_17 })
  {
    <bb 16>:
    # DEBUG __n1 => D#689
    # DEBUG __n2 => _43
    _49 = pretmp_33 - _43;
    __d_50 = (const difference_type) _49;
    # DEBUG __d => __d_50
    if (__d_50 > 2147483647)
      goto <bb 23>;
    else
      goto <bb 17>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_4 bb_18 })
  {
    <bb 17>:
    if (__d_50 < -2147483648)
      goto <bb 4>;
    else
      goto <bb 18>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    __r_51 = (int) _49;

  }
  bb_19 (preds = {bb_15 bb_18 }, succs = {bb_4 bb_23 })
  {
    <bb 19>:
    # __r_52 = PHI <__r_48(15), __r_51(18)>
    # DEBUG __r => __r_52
    # DEBUG D#686 => {CLOBBER}
    # DEBUG __size => D#686
    # DEBUG D#687 => {CLOBBER}
    # DEBUG __osize => D#687
    if (__r_52 < 0)
      goto <bb 4>;
    else
      goto <bb 23>;

  }
  bb_20 (preds = {bb_4 }, succs = {bb_21 bb_22 })
  {
  <L4>:
    # DEBUG this => &D.35969
    # DEBUG this => &D.35969
    # DEBUG this => &D.35969
    # VUSE <.MEM_10>
    _5 = MEM[(char * *)&D.35969];
    # DEBUG D#3 => &D.35969
    # DEBUG this => D#3
    # DEBUG this => &D.35969
    if (&D.35969.D.11539._M_local_buf != _5)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # DEBUG D#186 => D.35969.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.35969
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.35969
    # DEBUG this => D#3
    # DEBUG this => &D.35969
    # DEBUG D#183 => &D.35969._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _5
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _5
    # DEBUG this => D#177
    # DEBUG D.50226 => D#178
    # .MEM_14 = VDEF <.MEM_10>
    operator delete (_5);

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {})
  {
    <bb 22>:
    # .MEM_11 = PHI <.MEM_10(20), .MEM_14(21)>
    # DEBUG D#187 => &D.35969._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_12 = VDEF <.MEM_11>
    D.35969 ={v} {CLOBBER};
    resx 3

  }
  bb_23 (preds = {bb_19 bb_16 }, succs = {bb_27 })
  {
    <bb 23>:

  }
  bb_27 (preds = {bb_23 }, succs = {bb_1 })
  {
    <bb 27>:
    # DEBUG __r => NULL
    # DEBUG D#224 => {CLOBBER}
    # DEBUG __j$_M_node => D#224
    # DEBUG match$_M_node => __y_55
    # DEBUG D#343 => &this_2(D)->_int_map
    # DEBUG this => D#343
    # DEBUG D#75 => &D#343->_M_t
    # DEBUG this => D#75
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &match
    # DEBUG __x => &D.35968
    # DEBUG D#224 => {CLOBBER}
    # DEBUG __j$_M_node => D#224
    # DEBUG match$_M_node => __y_55
    # DEBUG D#343 => &this_2(D)->_int_map
    # DEBUG this => D#343
    # DEBUG D#75 => &D#343->_M_t
    # DEBUG this => D#75
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &match
    # DEBUG __x => &D.35968
    # DEBUG this => &match
    # DEBUG this => __y_55
    # DEBUG D#344 => &__y_55->_M_value_field
    # DEBUG __r => D#344
    # VUSE <.MEM_32>
    _7 = MEM[(const struct pair *)__y_55 + 32B].second;
    # DEBUG D#345 => {CLOBBER}
    # DEBUG match$_M_node => D#345
    # VUSE <.MEM_32>
    return _7;

  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_26 bb_25 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # __y_30 = PHI <__y_24(26), __y_25(25)>
      # __y_29 = PHI <__y_88(26), __y_28(25)>
      # DEBUG __y => __y_29
      # DEBUG __x => __y_30
      if (__y_30 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_3 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # __y_88 = PHI <__y_20(3), __y_30(6)>
      # __y_28 = PHI <__y_19(3), __y_29(6)>
      # .MEM_32 = PHI <.MEM_1(D)(3), .MEM_32(6)>
      # DEBUG __y => __y_28
      # DEBUG __x => __y_88
      # DEBUG __x => __y_88
      # DEBUG __x => __y_88
      # DEBUG this => __y_88
      # DEBUG D#215 => &__y_88->_M_value_field
      # DEBUG __r => D#215
      # DEBUG __x => D#215
      # DEBUG this => D#151
      # DEBUG D#674 => &MEM[(const struct pair &)__y_88 + 32].first
      # DEBUG D#221 => &D#222->_M_impl._M_key_compare
      # DEBUG D#203 => D#221
      # DEBUG __x => D#674
      # DEBUG __y => field_3(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#674
      # DEBUG __rhs => field_3(D)
      # DEBUG this => D#674
      # DEBUG __str => field_3(D)
      # VUSE <.MEM_32>
      _13 = MEM[(long unsigned int *)__y_88 + 40B];
      # DEBUG D#2 => D#674
      # DEBUG this => D#2
      # DEBUG __size => _13
      # DEBUG D#691 => MEM[(long unsigned int *)field_3(D) + 8B]
      # DEBUG D#2 => field_3(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#691
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_83 = MIN_EXPR <_13, pretmp_33>;
      # DEBUG __len => D#671
      # DEBUG this => field_3(D)
      # DEBUG D#690 => MEM[(char * *)field_3(D)]
      # DEBUG D#3 => field_3(D)
      # DEBUG this => D#3
      # VUSE <.MEM_32>
      _35 = MEM[(char * *)__y_88 + 32B];
      # DEBUG D#3 => D#674
      # DEBUG this => D#3
      # DEBUG __s1 => _35
      # DEBUG __s2 => D#690
      # DEBUG __n => D#671
      # VUSE <.MEM_32>
      __r_36 = __builtin_memcmp (_35, pretmp_85, __len_83);
      # DEBUG __r => NULL
      if (__r_36 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => _13
      # DEBUG __n2 => D#691
      _37 = _13 - pretmp_33;
      __d_38 = (const difference_type) _37;
      # DEBUG __d => __d_38
      if (__d_38 > 2147483647)
        goto <bb 12>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_13 bb_10 })
    {
      <bb 9>:
      if (__d_38 < -2147483648)
        goto <bb 13>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_39 = (int) _37;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_40 = PHI <__r_36(7), __r_39(10)>
      # DEBUG __r => __r_40
      # DEBUG D#680 => {CLOBBER}
      # DEBUG __size => D#680
      # DEBUG D#681 => {CLOBBER}
      # DEBUG __osize => D#681
      if (__r_40 >= 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_8 }, succs = {bb_26 })
    {
      <bb 12>:

    }
    bb_26 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 26>:
      # DEBUG __r => NULL
      # DEBUG __y => __y_88
      # VUSE <.MEM_32>
      __y_24 = MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B];
      # DEBUG D#157 => __y_88
      # DEBUG __x => D#157
      # DEBUG __x => NULL
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_9 }, succs = {bb_25 })
    {
      <bb 13>:

    }
    bb_25 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 25>:
      # DEBUG __r => NULL
      # VUSE <.MEM_32>
      __y_25 = MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B];
      # DEBUG D#158 => __y_88
      # DEBUG __x => D#158
      # DEBUG __x => NULL
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

int Configuration::GetInt(const string&) const (const struct ConfigurationD.32032 * const thisD.35964, const struct stringD.2845 & fieldD.35962)
Eh tree:
   3 cleanup land:{2,<L4>}
{
  const struct _Rb_tree_node_baseD.27676 * SR.1198D.56261;
  const struct _Rb_tree_node_baseD.27676 * SR.1197D.56260;
  const size_typeD.11502 __sizeD.56246;
  const size_typeD.11502 __osizeD.56247;
  const size_typeD.11502 __lenD.56248;
  intD.9 __rD.56249;
  const difference_typeD.11503 __dD.56252;
  intD.9 D.56258;
  const size_typeD.11502 __sizeD.56231;
  const size_typeD.11502 __osizeD.56232;
  const size_typeD.11502 __lenD.56233;
  intD.9 __rD.56234;
  const difference_typeD.11503 __dD.56237;
  intD.9 D.56243;
  struct const_iteratorD.33643 D.56228;
  const struct _Rb_tree_nodeD.33341 * __yD.56218;
  const struct _Rb_tree_node_baseD.27676 * SR.822D.50237;
  struct const_iteratorD.33915 D.50213;
  struct basic_stringD.2844 D.35969;
  charD.10 * const _5;
  intD.9 _7;
  const size_typeD.11502 _13;
  const size_typeD.11502 pretmp_33;
  charD.10 * const _35;
  long unsigned intD.14 _37;
  const size_typeD.11502 _43;
  charD.10 * const _46;
  long unsigned intD.14 _49;
  charD.10 * const pretmp_85;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50214 => &matchD.35966
  # DEBUG match$_M_nodeD.50233 => 0B
  # DEBUG D#342ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50210 => D#342ptD.0
  # DEBUG __xD.50211 => field_3(D)
  # DEBUG D#673ptD.0 => &MEM[(const struct mapD.33119 *)this_2(D) + 88B]._M_tD.33338
  # DEBUG thisD.56204 => D#673ptD.0
  # DEBUG __kD.56205 => field_3(D)
  # DEBUG thisD.56215 => D#673ptD.0
  # PT = nonlocal 
  __y_19 = &MEM[(const struct _Rb_treeD.33337 *)this_2(D) + 88B]._M_implD.33415._M_headerD.33570;
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  __y_20 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_2(D) + 104B];
  # DEBUG D#74ptD.0 => D#673ptD.0
  # DEBUG thisD.49125 => D#74ptD.0
  # DEBUG D#223ptD.0 => D#673ptD.0
  # DEBUG __xD.56219 => NULL
  # DEBUG __yD.56218 => NULL
  # DEBUG __kD.56217 => field_3(D)
  # DEBUG __yD.56218 => __y_19
  # DEBUG __xD.56219 => __y_20
  if (__y_20 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1(D)>
  pretmp_33 = MEM[(long unsigned intD.14 *)field_3(D) + 8B];
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  pretmp_85 = MEM[(charD.10 * *)field_3(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_1(D)(2), .MEM_32(24), .MEM_32(17), .MEM_32(19)>
  # DEBUG thisD.49139 => D#673ptD.0
  # DEBUG thisD.49141 => NULL
  # DEBUG __xD.49140 => __y_19
  # DEBUG D#224ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49143 => D#224ptD.0
  # DEBUG match$_M_nodeD.50233 => __y_19
  # DEBUG D#343ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50206 => D#343ptD.0
  # DEBUG D#75ptD.0 => &D#343ptD.0->_M_tD.33338
  # DEBUG thisD.50207 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => __y_19
  # DEBUG thisD.50203 => &matchD.35966
  # DEBUG __xD.50204 => &D.35968
  # DEBUG D#224ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49143 => D#224ptD.0
  # DEBUG match$_M_nodeD.50233 => __y_19
  # DEBUG D#343ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50206 => D#343ptD.0
  # DEBUG D#75ptD.0 => &D#343ptD.0->_M_tD.33338
  # DEBUG thisD.50207 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => __y_19
  # DEBUG thisD.50203 => &matchD.35966
  # DEBUG __xD.50204 => &D.35968
  # .MEM_9 = VDEF <.MEM_90>
  # USE = nonlocal null { D.35969 } (escaped)
  # CLB = nonlocal null { D.35969 } (escaped)
  D.35969 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown integer field: ", field_3(D)); [return slot optimization]
  [LP 2] # .MEM_10 = VDEF <.MEM_9>
  # USE = nonlocal null { D.35969 } (escaped)
  # CLB = nonlocal null { D.35969 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_2(D), &D.35969, 0);
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_30 = PHI <__y_24(26), __y_25(25)>
  # PT = nonlocal escaped 
  # __y_29 = PHI <__y_88(26), __y_28(25)>
  # DEBUG __yD.56218 => __y_29
  # DEBUG __xD.56219 => __y_30
  if (__y_30 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_88 = PHI <__y_20(3), __y_30(6)>
  # PT = nonlocal escaped 
  # __y_28 = PHI <__y_19(3), __y_29(6)>
  # .MEM_32 = PHI <.MEM_1(D)(3), .MEM_32(6)>
  # DEBUG __yD.56218 => __y_28
  # DEBUG __xD.56219 => __y_88
  # DEBUG __xD.56220 => __y_88
  # DEBUG __xD.48933 => __y_88
  # DEBUG thisD.48934 => __y_88
  # DEBUG D#215ptD.0 => &__y_88->_M_value_fieldD.38961
  # DEBUG __rD.47655 => D#215ptD.0
  # DEBUG __xD.56222 => D#215ptD.0
  # DEBUG thisD.56221 => D#151ptD.0
  # DEBUG D#674ptD.0 => &MEM[(const struct pairD.33117 &)__y_88 + 32].firstD.35721
  # DEBUG D#221ptD.0 => &D#222ptD.0->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#221ptD.0
  # DEBUG __xD.56225 => D#674ptD.0
  # DEBUG __yD.56224 => field_3(D)
  # DEBUG thisD.56223 => D#203ptD.0
  # DEBUG __lhsD.56227 => D#674ptD.0
  # DEBUG __rhsD.56226 => field_3(D)
  # DEBUG thisD.56229 => D#674ptD.0
  # DEBUG __strD.56230 => field_3(D)
  # VUSE <.MEM_32>
  _13 = MEM[(long unsigned intD.14 *)__y_88 + 40B];
  # DEBUG D#2ptD.0 => D#674ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56231 => _13
  # DEBUG D#691ptD.0 => MEM[(long unsigned intD.14 *)field_3(D) + 8B]
  # DEBUG D#2ptD.0 => field_3(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56232 => D#691ptD.0
  # DEBUG __aD.56239 => &__sizeD.56231
  # DEBUG __bD.56238 => &__osizeD.56232
  __len_83 = MIN_EXPR <_13, pretmp_33>;
  # DEBUG __lenD.56233 => D#671ptD.0
  # DEBUG thisD.48671 => field_3(D)
  # DEBUG D#690ptD.0 => MEM[(charD.10 * *)field_3(D)]
  # DEBUG D#3ptD.0 => field_3(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _35 = MEM[(charD.10 * *)__y_88 + 32B];
  # DEBUG D#3ptD.0 => D#674ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56242 => _35
  # DEBUG __s2D.56241 => D#690ptD.0
  # DEBUG __nD.56240 => D#671ptD.0
  # VUSE <.MEM_32>
  # USE = nonlocal escaped 
  __r_36 = memcmpD.989 (_35, pretmp_85, __len_83);
  # DEBUG __rD.56234 => NULL
  if (__r_36 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56236 => _13
  # DEBUG __n2D.56235 => D#691ptD.0
  # RANGE [0, 18446744073709551615]
  _37 = _13 - pretmp_33;
  __d_38 = (const difference_typeD.11503) _37;
  # DEBUG __dD.56237 => __d_38
  if (__d_38 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_38 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_39 = (intD.9) _37;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_40 = PHI <__r_36(7), __r_39(10)>
  # DEBUG __rD.56234 => __r_40
  # DEBUG D#680ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56231 => D#680ptD.0
  # DEBUG D#681ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56232 => D#681ptD.0
  if (__r_40 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 26, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       26 [100.0%]  (FALLTHRU)

;;   basic block 26, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.56234 => NULL
  # DEBUG __yD.56218 => __y_88
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __y_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_88 + 16B];
  # DEBUG D#157ptD.0 => __y_88
  # DEBUG __xD.49084 => D#157ptD.0
  # DEBUG __xD.56219 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 26, next block 25, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU)

;;   basic block 25, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.56234 => NULL
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __y_25 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_88 + 24B];
  # DEBUG D#158ptD.0 => __y_88
  # DEBUG __xD.49083 => D#158ptD.0
  # DEBUG __xD.56219 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 24, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_55 = PHI <__y_29(5)>
;;    succ:       24 [100.0%]  (FALLTHRU)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.49082 => NULL
  # DEBUG __xD.49081 => __y_55
  # DEBUG __j$_M_nodeD.49143 => __y_55
  # DEBUG thisD.49105 => D#673ptD.0
  # DEBUG thisD.49107 => NULL
  # DEBUG __xD.49106 => __y_19
  # DEBUG thisD.49102 => &__jD.56206
  # DEBUG __xD.49103 => NULL
  if (__y_19 == __y_55)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 24, next block 16, flags: (NEW, REACHABLE)
;;    pred:       24 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.56207 => __y_55
  # DEBUG __xD.48187 => __y_55
  # DEBUG thisD.48188 => __y_55
  # DEBUG D#152ptD.0 => &__y_55->_M_value_fieldD.38961
  # DEBUG __rD.47655 => D#152ptD.0
  # DEBUG __xD.56209 => D#152ptD.0
  # DEBUG thisD.56208 => D#151ptD.0
  # DEBUG D#675ptD.0 => &MEM[(const struct pairD.33117 &)__y_55 + 32].firstD.35721
  # DEBUG D#225ptD.0 => &MEM[(const struct _Rb_treeD.33337 *)D#673ptD.0]._M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#225ptD.0
  # DEBUG __xD.56212 => field_3(D)
  # DEBUG __yD.56211 => D#675ptD.0
  # DEBUG thisD.56210 => D#203ptD.0
  # DEBUG __lhsD.56214 => field_3(D)
  # DEBUG __rhsD.56213 => D#675ptD.0
  # DEBUG thisD.56244 => field_3(D)
  # DEBUG __strD.56245 => D#675ptD.0
  # DEBUG D#689ptD.0 => MEM[(long unsigned intD.14 *)field_3(D) + 8B]
  # DEBUG D#2ptD.0 => field_3(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56246 => D#689ptD.0
  # VUSE <.MEM_32>
  _43 = MEM[(long unsigned intD.14 *)__y_55 + 40B];
  # DEBUG D#2ptD.0 => D#675ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56247 => _43
  # DEBUG __aD.56254 => &__sizeD.56246
  # DEBUG __bD.56253 => &__osizeD.56247
  __len_53 = MIN_EXPR <pretmp_33, _43>;
  # DEBUG __lenD.56248 => D#672ptD.0
  # DEBUG thisD.48671 => D#675ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _46 = MEM[(charD.10 * *)__y_55 + 32B];
  # DEBUG D#3ptD.0 => D#675ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#688ptD.0 => MEM[(charD.10 * *)field_3(D)]
  # DEBUG D#3ptD.0 => field_3(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56257 => D#688ptD.0
  # DEBUG __s2D.56256 => _46
  # DEBUG __nD.56255 => D#672ptD.0
  # VUSE <.MEM_32>
  # USE = nonlocal escaped 
  __r_48 = memcmpD.989 (pretmp_85, _46, __len_53);
  # DEBUG __rD.56249 => NULL
  if (__r_48 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56251 => D#689ptD.0
  # DEBUG __n2D.56250 => _43
  # RANGE [0, 18446744073709551615]
  _49 = pretmp_33 - _43;
  __d_50 = (const difference_typeD.11503) _49;
  # DEBUG __dD.56252 => __d_50
  if (__d_50 > 2147483647)
    goto <bb 23>;
  else
    goto <bb 17>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_50 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_51 = (intD.9) _49;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_52 = PHI <__r_48(15), __r_51(18)>
  # DEBUG __rD.56249 => __r_52
  # DEBUG D#686ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56246 => D#686ptD.0
  # DEBUG D#687ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56247 => D#687ptD.0
  if (__r_52 < 0)
    goto <bb 4>;
  else
    goto <bb 23>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L4>: [LP 2]
  # DEBUG thisD.50218 => &D.35969
  # DEBUG thisD.50219 => &D.35969
  # DEBUG thisD.50228 => &D.35969
  # VUSE <.MEM_10>
  # PT = nonlocal escaped 
  _5 = MEM[(charD.10 * *)&D.35969];
  # DEBUG D#3ptD.0 => &D.35969
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50229 => &D.35969
  if (&D.35969.D.11539._M_local_bufD.11541 != _5)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35969.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.50221 => &D.35969
  # DEBUG __sizeD.50220 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35969
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35969
  # DEBUG D#183ptD.0 => &D.35969._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.50224 => _5
  # DEBUG __aD.50222 => D#181ptD.0
  # DEBUG __nD.50223 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.50227 => _5
  # DEBUG thisD.50225 => D#177ptD.0
  # DEBUG D.50226 => D#178ptD.0
  # .MEM_14 = VDEF <.MEM_10>
  # USE = nonlocal null { D.35969 } (escaped)
  # CLB = nonlocal null { D.35969 } (escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_10(20), .MEM_14(21)>
  # DEBUG D#187ptD.0 => &D.35969._M_dataplusD.11519
  # DEBUG thisD.50230 => D#187ptD.0
  # DEBUG thisD.50231 => D#187ptD.0
  # DEBUG thisD.50232 => D#187ptD.0
  # .MEM_12 = VDEF <.MEM_11>
  D.35969 ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 22, next block 27, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       27 [100.0%]  (FALLTHRU)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 23, next block 1, flags: (NEW)
;;    pred:       23 [100.0%]  (FALLTHRU)
  # DEBUG __rD.56249 => NULL
  # DEBUG D#224ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49143 => D#224ptD.0
  # DEBUG match$_M_nodeD.50233 => __y_55
  # DEBUG D#343ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50206 => D#343ptD.0
  # DEBUG D#75ptD.0 => &D#343ptD.0->_M_tD.33338
  # DEBUG thisD.50207 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => __y_19
  # DEBUG thisD.50203 => &matchD.35966
  # DEBUG __xD.50204 => &D.35968
  # DEBUG D#224ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49143 => D#224ptD.0
  # DEBUG match$_M_nodeD.50233 => __y_55
  # DEBUG D#343ptD.0 => &this_2(D)->_int_mapD.34183
  # DEBUG thisD.50206 => D#343ptD.0
  # DEBUG D#75ptD.0 => &D#343ptD.0->_M_tD.33338
  # DEBUG thisD.50207 => D#75ptD.0
  # DEBUG thisD.47630 => NULL
  # DEBUG __xD.47629 => __y_19
  # DEBUG thisD.50203 => &matchD.35966
  # DEBUG __xD.50204 => &D.35968
  # DEBUG thisD.50215 => &matchD.35966
  # DEBUG thisD.50216 => __y_55
  # DEBUG D#344ptD.0 => &__y_55->_M_value_fieldD.38961
  # DEBUG __rD.47655 => D#344ptD.0
  # VUSE <.MEM_32>
  _7 = MEM[(const struct pairD.33117 *)__y_55 + 32B].secondD.35722;
  # DEBUG D#345ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.50233 => D#345ptD.0
  # VUSE <.MEM_32>
  return _7;
;;    succ:       EXIT [100.0%] 

}



;; Function double Configuration::GetFloat(const string&) const (_ZNK13Configuration8GetFloatERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1735, decl_uid=35276, cgraph_uid=421, symbol_order=423)


Pass statistics:
----------------

double Configuration::GetFloat(const string&) const (const struct ConfigurationD.32032 * const thisD.35972, const struct stringD.2845 & fieldD.35970)
Eh tree:
   3 cleanup land:{2,<L4>}
{
  const struct _Rb_tree_node_baseD.27676 * SR.1202D.56329;
  const struct _Rb_tree_node_baseD.27676 * SR.1201D.56328;
  const size_typeD.11502 __sizeD.56314;
  const size_typeD.11502 __osizeD.56315;
  const size_typeD.11502 __lenD.56316;
  intD.9 __rD.56317;
  const difference_typeD.11503 __dD.56320;
  intD.9 D.56326;
  const size_typeD.11502 __sizeD.56299;
  const size_typeD.11502 __osizeD.56300;
  const size_typeD.11502 __lenD.56301;
  intD.9 __rD.56302;
  const difference_typeD.11503 __dD.56305;
  intD.9 D.56311;
  struct const_iteratorD.34710 D.56296;
  const struct _Rb_tree_nodeD.34408 * __yD.56286;
  const struct _Rb_tree_node_baseD.27676 * SR.828D.50273;
  struct const_iteratorD.34982 D.50249;
  struct basic_stringD.2844 D.35977;
  charD.10 * const _5;
  doubleD.39 _7;
  const size_typeD.11502 _13;
  const size_typeD.11502 pretmp_33;
  charD.10 * const _35;
  long unsigned intD.14 _37;
  const size_typeD.11502 _43;
  charD.10 * const _46;
  long unsigned intD.14 _49;
  charD.10 * const pretmp_85;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50250 => &matchD.35974
  # DEBUG match$_M_nodeD.50269 => 0B
  # DEBUG D#347ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50246 => D#347ptD.0
  # DEBUG __xD.50247 => field_3(D)
  # DEBUG D#698ptD.0 => &MEM[(const struct mapD.34186 *)this_2(D) + 136B]._M_tD.34405
  # DEBUG thisD.56272 => D#698ptD.0
  # DEBUG __kD.56273 => field_3(D)
  # DEBUG thisD.56283 => D#698ptD.0
  # PT = nonlocal 
  __y_19 = &MEM[(const struct _Rb_treeD.34404 *)this_2(D) + 136B]._M_implD.34482._M_headerD.34637;
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  __y_20 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_2(D) + 152B];
  # DEBUG D#78ptD.0 => D#698ptD.0
  # DEBUG thisD.49350 => D#78ptD.0
  # DEBUG D#234ptD.0 => D#698ptD.0
  # DEBUG __xD.56287 => NULL
  # DEBUG __yD.56286 => NULL
  # DEBUG __kD.56285 => field_3(D)
  # DEBUG __yD.56286 => __y_19
  # DEBUG __xD.56287 => __y_20
  if (__y_20 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1(D)>
  pretmp_33 = MEM[(long unsigned intD.14 *)field_3(D) + 8B];
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  pretmp_85 = MEM[(charD.10 * *)field_3(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_1(D)(2), .MEM_32(14), .MEM_32(17), .MEM_32(19)>
  # DEBUG thisD.49364 => D#698ptD.0
  # DEBUG thisD.49366 => NULL
  # DEBUG __xD.49365 => __y_19
  # DEBUG D#235ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49368 => D#235ptD.0
  # DEBUG match$_M_nodeD.50269 => __y_19
  # DEBUG D#348ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50242 => D#348ptD.0
  # DEBUG D#79ptD.0 => &D#348ptD.0->_M_tD.34405
  # DEBUG thisD.50243 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => __y_19
  # DEBUG thisD.50239 => &matchD.35974
  # DEBUG __xD.50240 => &D.35976
  # DEBUG D#235ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49368 => D#235ptD.0
  # DEBUG match$_M_nodeD.50269 => __y_19
  # DEBUG D#348ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50242 => D#348ptD.0
  # DEBUG D#79ptD.0 => &D#348ptD.0->_M_tD.34405
  # DEBUG thisD.50243 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => __y_19
  # DEBUG thisD.50239 => &matchD.35974
  # DEBUG __xD.50240 => &D.35976
  # .MEM_9 = VDEF <.MEM_90>
  # USE = nonlocal null { D.35977 } (escaped)
  # CLB = nonlocal null { D.35977 } (escaped)
  D.35977 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown double field: ", field_3(D)); [return slot optimization]
  [LP 2] # .MEM_10 = VDEF <.MEM_9>
  # USE = nonlocal null { D.35977 } (escaped)
  # CLB = nonlocal null { D.35977 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_2(D), &D.35977, 0);
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_30 = PHI <__y_24(12), __y_25(13)>
  # PT = nonlocal escaped 
  # __y_29 = PHI <__y_88(12), __y_28(13)>
  # DEBUG __yD.56286 => __y_29
  # DEBUG __xD.56287 => __y_30
  if (__y_30 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_88 = PHI <__y_20(3), __y_30(6)>
  # PT = nonlocal escaped 
  # __y_28 = PHI <__y_19(3), __y_29(6)>
  # .MEM_32 = PHI <.MEM_1(D)(3), .MEM_32(6)>
  # DEBUG __yD.56286 => __y_28
  # DEBUG __xD.56287 => __y_88
  # DEBUG __xD.56288 => __y_88
  # DEBUG __xD.49158 => __y_88
  # DEBUG thisD.49159 => __y_88
  # DEBUG D#226ptD.0 => &__y_88->_M_value_fieldD.38976
  # DEBUG __rD.47702 => D#226ptD.0
  # DEBUG __xD.56290 => D#226ptD.0
  # DEBUG thisD.56289 => D#153ptD.0
  # DEBUG D#699ptD.0 => &MEM[(const struct pairD.34184 &)__y_88 + 32].firstD.35901
  # DEBUG D#232ptD.0 => &D#233ptD.0->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#232ptD.0
  # DEBUG __xD.56293 => D#699ptD.0
  # DEBUG __yD.56292 => field_3(D)
  # DEBUG thisD.56291 => D#203ptD.0
  # DEBUG __lhsD.56295 => D#699ptD.0
  # DEBUG __rhsD.56294 => field_3(D)
  # DEBUG thisD.56297 => D#699ptD.0
  # DEBUG __strD.56298 => field_3(D)
  # VUSE <.MEM_32>
  _13 = MEM[(long unsigned intD.14 *)__y_88 + 40B];
  # DEBUG D#2ptD.0 => D#699ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56299 => _13
  # DEBUG D#716ptD.0 => MEM[(long unsigned intD.14 *)field_3(D) + 8B]
  # DEBUG D#2ptD.0 => field_3(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56300 => D#716ptD.0
  # DEBUG __aD.56307 => &__sizeD.56299
  # DEBUG __bD.56306 => &__osizeD.56300
  __len_83 = MIN_EXPR <_13, pretmp_33>;
  # DEBUG __lenD.56301 => D#696ptD.0
  # DEBUG thisD.48671 => field_3(D)
  # DEBUG D#715ptD.0 => MEM[(charD.10 * *)field_3(D)]
  # DEBUG D#3ptD.0 => field_3(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _35 = MEM[(charD.10 * *)__y_88 + 32B];
  # DEBUG D#3ptD.0 => D#699ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56310 => _35
  # DEBUG __s2D.56309 => D#715ptD.0
  # DEBUG __nD.56308 => D#696ptD.0
  # VUSE <.MEM_32>
  # USE = nonlocal escaped 
  __r_36 = memcmpD.989 (_35, pretmp_85, __len_83);
  # DEBUG __rD.56302 => NULL
  if (__r_36 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56304 => _13
  # DEBUG __n2D.56303 => D#716ptD.0
  # RANGE [0, 18446744073709551615]
  _37 = _13 - pretmp_33;
  __d_38 = (const difference_typeD.11503) _37;
  # DEBUG __dD.56305 => __d_38
  if (__d_38 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_38 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_39 = (intD.9) _37;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_40 = PHI <__r_36(7), __r_39(10)>
  # DEBUG __rD.56302 => __r_40
  # DEBUG D#705ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56299 => D#705ptD.0
  # DEBUG D#706ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56300 => D#706ptD.0
  if (__r_40 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56302 => NULL
  # DEBUG __yD.56286 => __y_88
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __y_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_88 + 16B];
  # DEBUG D#159ptD.0 => __y_88
  # DEBUG __xD.49309 => D#159ptD.0
  # DEBUG __xD.56287 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56302 => NULL
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __y_25 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_88 + 24B];
  # DEBUG D#160ptD.0 => __y_88
  # DEBUG __xD.49308 => D#160ptD.0
  # DEBUG __xD.56287 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_55 = PHI <__y_29(5)>
  # DEBUG thisD.49307 => NULL
  # DEBUG __xD.49306 => __y_55
  # DEBUG __j$_M_nodeD.49368 => __y_55
  # DEBUG thisD.49330 => D#698ptD.0
  # DEBUG thisD.49332 => NULL
  # DEBUG __xD.49331 => __y_19
  # DEBUG thisD.49327 => &__jD.56274
  # DEBUG __xD.49328 => NULL
  if (__y_19 == __y_55)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.56275 => __y_55
  # DEBUG __xD.48212 => __y_55
  # DEBUG thisD.48213 => __y_55
  # DEBUG D#154ptD.0 => &__y_55->_M_value_fieldD.38976
  # DEBUG __rD.47702 => D#154ptD.0
  # DEBUG __xD.56277 => D#154ptD.0
  # DEBUG thisD.56276 => D#153ptD.0
  # DEBUG D#700ptD.0 => &MEM[(const struct pairD.34184 &)__y_55 + 32].firstD.35901
  # DEBUG D#236ptD.0 => &MEM[(const struct _Rb_treeD.34404 *)D#698ptD.0]._M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#236ptD.0
  # DEBUG __xD.56280 => field_3(D)
  # DEBUG __yD.56279 => D#700ptD.0
  # DEBUG thisD.56278 => D#203ptD.0
  # DEBUG __lhsD.56282 => field_3(D)
  # DEBUG __rhsD.56281 => D#700ptD.0
  # DEBUG thisD.56312 => field_3(D)
  # DEBUG __strD.56313 => D#700ptD.0
  # DEBUG D#714ptD.0 => MEM[(long unsigned intD.14 *)field_3(D) + 8B]
  # DEBUG D#2ptD.0 => field_3(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56314 => D#714ptD.0
  # VUSE <.MEM_32>
  _43 = MEM[(long unsigned intD.14 *)__y_55 + 40B];
  # DEBUG D#2ptD.0 => D#700ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56315 => _43
  # DEBUG __aD.56322 => &__sizeD.56314
  # DEBUG __bD.56321 => &__osizeD.56315
  __len_53 = MIN_EXPR <pretmp_33, _43>;
  # DEBUG __lenD.56316 => D#697ptD.0
  # DEBUG thisD.48671 => D#700ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _46 = MEM[(charD.10 * *)__y_55 + 32B];
  # DEBUG D#3ptD.0 => D#700ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#713ptD.0 => MEM[(charD.10 * *)field_3(D)]
  # DEBUG D#3ptD.0 => field_3(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56325 => D#713ptD.0
  # DEBUG __s2D.56324 => _46
  # DEBUG __nD.56323 => D#697ptD.0
  # VUSE <.MEM_32>
  # USE = nonlocal escaped 
  __r_48 = memcmpD.989 (pretmp_85, _46, __len_53);
  # DEBUG __rD.56317 => NULL
  if (__r_48 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56319 => D#714ptD.0
  # DEBUG __n2D.56318 => _43
  # RANGE [0, 18446744073709551615]
  _49 = pretmp_33 - _43;
  __d_50 = (const difference_typeD.11503) _49;
  # DEBUG __dD.56320 => __d_50
  if (__d_50 > 2147483647)
    goto <bb 23>;
  else
    goto <bb 17>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_50 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_51 = (intD.9) _49;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_52 = PHI <__r_48(15), __r_51(18)>
  # DEBUG __rD.56317 => __r_52
  # DEBUG D#711ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56314 => D#711ptD.0
  # DEBUG D#712ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56315 => D#712ptD.0
  if (__r_52 < 0)
    goto <bb 4>;
  else
    goto <bb 23>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L4>: [LP 2]
  # DEBUG thisD.50254 => &D.35977
  # DEBUG thisD.50255 => &D.35977
  # DEBUG thisD.50264 => &D.35977
  # VUSE <.MEM_10>
  # PT = nonlocal escaped 
  _5 = MEM[(charD.10 * *)&D.35977];
  # DEBUG D#3ptD.0 => &D.35977
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50265 => &D.35977
  if (&D.35977.D.11539._M_local_bufD.11541 != _5)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35977.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.50257 => &D.35977
  # DEBUG __sizeD.50256 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35977
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35977
  # DEBUG D#183ptD.0 => &D.35977._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.50260 => _5
  # DEBUG __aD.50258 => D#181ptD.0
  # DEBUG __nD.50259 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.50263 => _5
  # DEBUG thisD.50261 => D#177ptD.0
  # DEBUG D.50262 => D#178ptD.0
  # .MEM_14 = VDEF <.MEM_10>
  # USE = nonlocal null { D.35977 } (escaped)
  # CLB = nonlocal null { D.35977 } (escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_10(20), .MEM_14(21)>
  # DEBUG D#187ptD.0 => &D.35977._M_dataplusD.11519
  # DEBUG thisD.50266 => D#187ptD.0
  # DEBUG thisD.50267 => D#187ptD.0
  # DEBUG thisD.50268 => D#187ptD.0
  # .MEM_12 = VDEF <.MEM_11>
  D.35977 ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 22, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56317 => NULL
  # DEBUG D#235ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49368 => D#235ptD.0
  # DEBUG match$_M_nodeD.50269 => __y_55
  # DEBUG D#348ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50242 => D#348ptD.0
  # DEBUG D#79ptD.0 => &D#348ptD.0->_M_tD.34405
  # DEBUG thisD.50243 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => __y_19
  # DEBUG thisD.50239 => &matchD.35974
  # DEBUG __xD.50240 => &D.35976
  # DEBUG D#235ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49368 => D#235ptD.0
  # DEBUG match$_M_nodeD.50269 => __y_55
  # DEBUG D#348ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50242 => D#348ptD.0
  # DEBUG D#79ptD.0 => &D#348ptD.0->_M_tD.34405
  # DEBUG thisD.50243 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => __y_19
  # DEBUG thisD.50239 => &matchD.35974
  # DEBUG __xD.50240 => &D.35976
  # DEBUG thisD.50251 => &matchD.35974
  # DEBUG thisD.50252 => __y_55
  # DEBUG D#349ptD.0 => &__y_55->_M_value_fieldD.38976
  # DEBUG __rD.47702 => D#349ptD.0
  # VUSE <.MEM_32>
  _7 = MEM[(const struct pairD.34184 *)__y_55 + 32B].secondD.35902;
  # DEBUG D#350ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.50269 => D#350ptD.0
  # VUSE <.MEM_32>
  return _7;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B]
Creating dr for MEM[(long unsigned int *)field_3(D) + 8B]
analyze_innermost: success.
	base_address: field_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)field_3(D) + 8B]
Creating dr for MEM[(char * *)field_3(D)]
analyze_innermost: success.
	base_address: field_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)field_3(D)]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(long unsigned int *)__y_88 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_88 + 40B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(char * *)__y_88 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_88 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B]
Applying pattern match.pd:397, generic-match.c:4039
Creating dr for MEM[(long unsigned int *)__y_55 + 40B]
analyze_innermost: success.
	base_address: __y_55
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__y_55 + 40B]
Creating dr for MEM[(char * *)__y_55 + 32B]
analyze_innermost: success.
	base_address: __y_55
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__y_55 + 32B]
Creating dr for MEM[(const struct pair *)__y_55 + 32B].second
analyze_innermost: success.
	base_address: __y_55
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(const struct pair *)__y_55 + 32B]
	Access function 0: 256
Creating dr for MEM[(char * *)&D.35977]
analyze_innermost: success.
	base_address: &D.35977
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.35977]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:31)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:28, LOOPS:1, CONDITIONS:12, STMTS:254)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG this => &match
    # DEBUG match$_M_node => 0B
    # DEBUG D#347 => &this_2(D)->_float_map
    # DEBUG this => D#347
    # DEBUG __x => field_3(D)
    # DEBUG D#698 => &MEM[(const struct map *)this_2(D) + 136B]._M_t
    # DEBUG this => D#698
    # DEBUG __k => field_3(D)
    # DEBUG this => D#698
    __y_19 = &MEM[(const struct _Rb_tree *)this_2(D) + 136B]._M_impl._M_header;
    # VUSE <.MEM_1(D)>
    __y_20 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 152B];
    # DEBUG D#78 => D#698
    # DEBUG this => D#78
    # DEBUG D#234 => D#698
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_3(D)
    # DEBUG __y => __y_19
    # DEBUG __x => __y_20
    if (__y_20 == 0B)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 3>:
    # VUSE <.MEM_1(D)>
    pretmp_33 = MEM[(long unsigned int *)field_3(D) + 8B];
    # VUSE <.MEM_1(D)>
    pretmp_85 = MEM[(char * *)field_3(D)];
    goto <bb 7>;

  }
  bb_4 (preds = {bb_2 bb_24 bb_17 bb_19 }, succs = {bb_20 })
  {
    <bb 4>:
    # .MEM_90 = PHI <.MEM_1(D)(2), .MEM_32(24), .MEM_32(17), .MEM_32(19)>
    # DEBUG this => D#698
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG D#235 => {CLOBBER}
    # DEBUG __j$_M_node => D#235
    # DEBUG match$_M_node => __y_19
    # DEBUG D#348 => &this_2(D)->_float_map
    # DEBUG this => D#348
    # DEBUG D#79 => &D#348->_M_t
    # DEBUG this => D#79
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &match
    # DEBUG __x => &D.35976
    # DEBUG D#235 => {CLOBBER}
    # DEBUG __j$_M_node => D#235
    # DEBUG match$_M_node => __y_19
    # DEBUG D#348 => &this_2(D)->_float_map
    # DEBUG this => D#348
    # DEBUG D#79 => &D#348->_M_t
    # DEBUG this => D#79
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &match
    # DEBUG __x => &D.35976
    # .MEM_9 = VDEF <.MEM_90>
    D.35977 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown double field: ", field_3(D)); [return slot optimization]
    # .MEM_10 = VDEF <.MEM_9>
    Configuration::ParseError (this_2(D), &D.35977, 0);

  }
  bb_14 (preds = {bb_5 }, succs = {bb_24 })
  {
    <bb 14>:
    # __y_55 = PHI <__y_29(5)>

  }
  bb_24 (preds = {bb_14 }, succs = {bb_4 bb_15 })
  {
    <bb 24>:
    # DEBUG this => NULL
    # DEBUG __x => __y_55
    # DEBUG __j$_M_node => __y_55
    # DEBUG this => D#698
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &__j
    # DEBUG __x => NULL
    if (__y_19 == __y_55)
      goto <bb 4>;
    else
      goto <bb 15>;

  }
  bb_15 (preds = {bb_24 }, succs = {bb_16 bb_19 })
  {
    <bb 15>:
    # DEBUG __x => __y_55
    # DEBUG __x => __y_55
    # DEBUG this => __y_55
    # DEBUG D#154 => &__y_55->_M_value_field
    # DEBUG __r => D#154
    # DEBUG __x => D#154
    # DEBUG this => D#153
    # DEBUG D#700 => &MEM[(const struct pair &)__y_55 + 32].first
    # DEBUG D#236 => &MEM[(const struct _Rb_tree *)D#698]._M_impl._M_key_compare
    # DEBUG D#203 => D#236
    # DEBUG __x => field_3(D)
    # DEBUG __y => D#700
    # DEBUG this => D#203
    # DEBUG __lhs => field_3(D)
    # DEBUG __rhs => D#700
    # DEBUG this => field_3(D)
    # DEBUG __str => D#700
    # DEBUG D#714 => MEM[(long unsigned int *)field_3(D) + 8B]
    # DEBUG D#2 => field_3(D)
    # DEBUG this => D#2
    # DEBUG __size => D#714
    # VUSE <.MEM_32>
    _43 = MEM[(long unsigned int *)__y_55 + 40B];
    # DEBUG D#2 => D#700
    # DEBUG this => D#2
    # DEBUG __osize => _43
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_53 = MIN_EXPR <pretmp_33, _43>;
    # DEBUG __len => D#697
    # DEBUG this => D#700
    # VUSE <.MEM_32>
    _46 = MEM[(char * *)__y_55 + 32B];
    # DEBUG D#3 => D#700
    # DEBUG this => D#3
    # DEBUG D#713 => MEM[(char * *)field_3(D)]
    # DEBUG D#3 => field_3(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#713
    # DEBUG __s2 => _46
    # DEBUG __n => D#697
    # VUSE <.MEM_32>
    __r_48 = __builtin_memcmp (pretmp_85, _46, __len_53);
    # DEBUG __r => NULL
    if (__r_48 == 0)
      goto <bb 16>;
    else
      goto <bb 19>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_23 bb_17 })
  {
    <bb 16>:
    # DEBUG __n1 => D#714
    # DEBUG __n2 => _43
    _49 = pretmp_33 - _43;
    __d_50 = (const difference_type) _49;
    # DEBUG __d => __d_50
    if (__d_50 > 2147483647)
      goto <bb 23>;
    else
      goto <bb 17>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_4 bb_18 })
  {
    <bb 17>:
    if (__d_50 < -2147483648)
      goto <bb 4>;
    else
      goto <bb 18>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    __r_51 = (int) _49;

  }
  bb_19 (preds = {bb_15 bb_18 }, succs = {bb_4 bb_23 })
  {
    <bb 19>:
    # __r_52 = PHI <__r_48(15), __r_51(18)>
    # DEBUG __r => __r_52
    # DEBUG D#711 => {CLOBBER}
    # DEBUG __size => D#711
    # DEBUG D#712 => {CLOBBER}
    # DEBUG __osize => D#712
    if (__r_52 < 0)
      goto <bb 4>;
    else
      goto <bb 23>;

  }
  bb_20 (preds = {bb_4 }, succs = {bb_21 bb_22 })
  {
  <L4>:
    # DEBUG this => &D.35977
    # DEBUG this => &D.35977
    # DEBUG this => &D.35977
    # VUSE <.MEM_10>
    _5 = MEM[(char * *)&D.35977];
    # DEBUG D#3 => &D.35977
    # DEBUG this => D#3
    # DEBUG this => &D.35977
    if (&D.35977.D.11539._M_local_buf != _5)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # DEBUG D#186 => D.35977.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.35977
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.35977
    # DEBUG this => D#3
    # DEBUG this => &D.35977
    # DEBUG D#183 => &D.35977._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _5
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _5
    # DEBUG this => D#177
    # DEBUG D.50262 => D#178
    # .MEM_14 = VDEF <.MEM_10>
    operator delete (_5);

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {})
  {
    <bb 22>:
    # .MEM_11 = PHI <.MEM_10(20), .MEM_14(21)>
    # DEBUG D#187 => &D.35977._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_12 = VDEF <.MEM_11>
    D.35977 ={v} {CLOBBER};
    resx 3

  }
  bb_23 (preds = {bb_19 bb_16 }, succs = {bb_27 })
  {
    <bb 23>:

  }
  bb_27 (preds = {bb_23 }, succs = {bb_1 })
  {
    <bb 27>:
    # DEBUG __r => NULL
    # DEBUG D#235 => {CLOBBER}
    # DEBUG __j$_M_node => D#235
    # DEBUG match$_M_node => __y_55
    # DEBUG D#348 => &this_2(D)->_float_map
    # DEBUG this => D#348
    # DEBUG D#79 => &D#348->_M_t
    # DEBUG this => D#79
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &match
    # DEBUG __x => &D.35976
    # DEBUG D#235 => {CLOBBER}
    # DEBUG __j$_M_node => D#235
    # DEBUG match$_M_node => __y_55
    # DEBUG D#348 => &this_2(D)->_float_map
    # DEBUG this => D#348
    # DEBUG D#79 => &D#348->_M_t
    # DEBUG this => D#79
    # DEBUG this => NULL
    # DEBUG __x => __y_19
    # DEBUG this => &match
    # DEBUG __x => &D.35976
    # DEBUG this => &match
    # DEBUG this => __y_55
    # DEBUG D#349 => &__y_55->_M_value_field
    # DEBUG __r => D#349
    # VUSE <.MEM_32>
    _7 = MEM[(const struct pair *)__y_55 + 32B].second;
    # DEBUG D#350 => {CLOBBER}
    # DEBUG match$_M_node => D#350
    # VUSE <.MEM_32>
    return _7;

  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_26 bb_25 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # __y_30 = PHI <__y_24(26), __y_25(25)>
      # __y_29 = PHI <__y_88(26), __y_28(25)>
      # DEBUG __y => __y_29
      # DEBUG __x => __y_30
      if (__y_30 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_3 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # __y_88 = PHI <__y_20(3), __y_30(6)>
      # __y_28 = PHI <__y_19(3), __y_29(6)>
      # .MEM_32 = PHI <.MEM_1(D)(3), .MEM_32(6)>
      # DEBUG __y => __y_28
      # DEBUG __x => __y_88
      # DEBUG __x => __y_88
      # DEBUG __x => __y_88
      # DEBUG this => __y_88
      # DEBUG D#226 => &__y_88->_M_value_field
      # DEBUG __r => D#226
      # DEBUG __x => D#226
      # DEBUG this => D#153
      # DEBUG D#699 => &MEM[(const struct pair &)__y_88 + 32].first
      # DEBUG D#232 => &D#233->_M_impl._M_key_compare
      # DEBUG D#203 => D#232
      # DEBUG __x => D#699
      # DEBUG __y => field_3(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#699
      # DEBUG __rhs => field_3(D)
      # DEBUG this => D#699
      # DEBUG __str => field_3(D)
      # VUSE <.MEM_32>
      _13 = MEM[(long unsigned int *)__y_88 + 40B];
      # DEBUG D#2 => D#699
      # DEBUG this => D#2
      # DEBUG __size => _13
      # DEBUG D#716 => MEM[(long unsigned int *)field_3(D) + 8B]
      # DEBUG D#2 => field_3(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#716
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_83 = MIN_EXPR <_13, pretmp_33>;
      # DEBUG __len => D#696
      # DEBUG this => field_3(D)
      # DEBUG D#715 => MEM[(char * *)field_3(D)]
      # DEBUG D#3 => field_3(D)
      # DEBUG this => D#3
      # VUSE <.MEM_32>
      _35 = MEM[(char * *)__y_88 + 32B];
      # DEBUG D#3 => D#699
      # DEBUG this => D#3
      # DEBUG __s1 => _35
      # DEBUG __s2 => D#715
      # DEBUG __n => D#696
      # VUSE <.MEM_32>
      __r_36 = __builtin_memcmp (_35, pretmp_85, __len_83);
      # DEBUG __r => NULL
      if (__r_36 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => _13
      # DEBUG __n2 => D#716
      _37 = _13 - pretmp_33;
      __d_38 = (const difference_type) _37;
      # DEBUG __d => __d_38
      if (__d_38 > 2147483647)
        goto <bb 12>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_13 bb_10 })
    {
      <bb 9>:
      if (__d_38 < -2147483648)
        goto <bb 13>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_39 = (int) _37;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_40 = PHI <__r_36(7), __r_39(10)>
      # DEBUG __r => __r_40
      # DEBUG D#705 => {CLOBBER}
      # DEBUG __size => D#705
      # DEBUG D#706 => {CLOBBER}
      # DEBUG __osize => D#706
      if (__r_40 >= 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_8 }, succs = {bb_26 })
    {
      <bb 12>:

    }
    bb_26 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 26>:
      # DEBUG __r => NULL
      # DEBUG __y => __y_88
      # VUSE <.MEM_32>
      __y_24 = MEM[(struct _Rb_tree_node_base * *)__y_88 + 16B];
      # DEBUG D#159 => __y_88
      # DEBUG __x => D#159
      # DEBUG __x => NULL
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_9 }, succs = {bb_25 })
    {
      <bb 13>:

    }
    bb_25 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 25>:
      # DEBUG __r => NULL
      # VUSE <.MEM_32>
      __y_25 = MEM[(struct _Rb_tree_node_base * *)__y_88 + 24B];
      # DEBUG D#160 => __y_88
      # DEBUG __x => D#160
      # DEBUG __x => NULL
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

double Configuration::GetFloat(const string&) const (const struct ConfigurationD.32032 * const thisD.35972, const struct stringD.2845 & fieldD.35970)
Eh tree:
   3 cleanup land:{2,<L4>}
{
  const struct _Rb_tree_node_baseD.27676 * SR.1202D.56329;
  const struct _Rb_tree_node_baseD.27676 * SR.1201D.56328;
  const size_typeD.11502 __sizeD.56314;
  const size_typeD.11502 __osizeD.56315;
  const size_typeD.11502 __lenD.56316;
  intD.9 __rD.56317;
  const difference_typeD.11503 __dD.56320;
  intD.9 D.56326;
  const size_typeD.11502 __sizeD.56299;
  const size_typeD.11502 __osizeD.56300;
  const size_typeD.11502 __lenD.56301;
  intD.9 __rD.56302;
  const difference_typeD.11503 __dD.56305;
  intD.9 D.56311;
  struct const_iteratorD.34710 D.56296;
  const struct _Rb_tree_nodeD.34408 * __yD.56286;
  const struct _Rb_tree_node_baseD.27676 * SR.828D.50273;
  struct const_iteratorD.34982 D.50249;
  struct basic_stringD.2844 D.35977;
  charD.10 * const _5;
  doubleD.39 _7;
  const size_typeD.11502 _13;
  const size_typeD.11502 pretmp_33;
  charD.10 * const _35;
  long unsigned intD.14 _37;
  const size_typeD.11502 _43;
  charD.10 * const _46;
  long unsigned intD.14 _49;
  charD.10 * const pretmp_85;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50250 => &matchD.35974
  # DEBUG match$_M_nodeD.50269 => 0B
  # DEBUG D#347ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50246 => D#347ptD.0
  # DEBUG __xD.50247 => field_3(D)
  # DEBUG D#698ptD.0 => &MEM[(const struct mapD.34186 *)this_2(D) + 136B]._M_tD.34405
  # DEBUG thisD.56272 => D#698ptD.0
  # DEBUG __kD.56273 => field_3(D)
  # DEBUG thisD.56283 => D#698ptD.0
  # PT = nonlocal 
  __y_19 = &MEM[(const struct _Rb_treeD.34404 *)this_2(D) + 136B]._M_implD.34482._M_headerD.34637;
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  __y_20 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_2(D) + 152B];
  # DEBUG D#78ptD.0 => D#698ptD.0
  # DEBUG thisD.49350 => D#78ptD.0
  # DEBUG D#234ptD.0 => D#698ptD.0
  # DEBUG __xD.56287 => NULL
  # DEBUG __yD.56286 => NULL
  # DEBUG __kD.56285 => field_3(D)
  # DEBUG __yD.56286 => __y_19
  # DEBUG __xD.56287 => __y_20
  if (__y_20 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1(D)>
  pretmp_33 = MEM[(long unsigned intD.14 *)field_3(D) + 8B];
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  pretmp_85 = MEM[(charD.10 * *)field_3(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_1(D)(2), .MEM_32(24), .MEM_32(17), .MEM_32(19)>
  # DEBUG thisD.49364 => D#698ptD.0
  # DEBUG thisD.49366 => NULL
  # DEBUG __xD.49365 => __y_19
  # DEBUG D#235ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49368 => D#235ptD.0
  # DEBUG match$_M_nodeD.50269 => __y_19
  # DEBUG D#348ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50242 => D#348ptD.0
  # DEBUG D#79ptD.0 => &D#348ptD.0->_M_tD.34405
  # DEBUG thisD.50243 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => __y_19
  # DEBUG thisD.50239 => &matchD.35974
  # DEBUG __xD.50240 => &D.35976
  # DEBUG D#235ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49368 => D#235ptD.0
  # DEBUG match$_M_nodeD.50269 => __y_19
  # DEBUG D#348ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50242 => D#348ptD.0
  # DEBUG D#79ptD.0 => &D#348ptD.0->_M_tD.34405
  # DEBUG thisD.50243 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => __y_19
  # DEBUG thisD.50239 => &matchD.35974
  # DEBUG __xD.50240 => &D.35976
  # .MEM_9 = VDEF <.MEM_90>
  # USE = nonlocal null { D.35977 } (escaped)
  # CLB = nonlocal null { D.35977 } (escaped)
  D.35977 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown double field: ", field_3(D)); [return slot optimization]
  [LP 2] # .MEM_10 = VDEF <.MEM_9>
  # USE = nonlocal null { D.35977 } (escaped)
  # CLB = nonlocal null { D.35977 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_2(D), &D.35977, 0);
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_30 = PHI <__y_24(26), __y_25(25)>
  # PT = nonlocal escaped 
  # __y_29 = PHI <__y_88(26), __y_28(25)>
  # DEBUG __yD.56286 => __y_29
  # DEBUG __xD.56287 => __y_30
  if (__y_30 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_88 = PHI <__y_20(3), __y_30(6)>
  # PT = nonlocal escaped 
  # __y_28 = PHI <__y_19(3), __y_29(6)>
  # .MEM_32 = PHI <.MEM_1(D)(3), .MEM_32(6)>
  # DEBUG __yD.56286 => __y_28
  # DEBUG __xD.56287 => __y_88
  # DEBUG __xD.56288 => __y_88
  # DEBUG __xD.49158 => __y_88
  # DEBUG thisD.49159 => __y_88
  # DEBUG D#226ptD.0 => &__y_88->_M_value_fieldD.38976
  # DEBUG __rD.47702 => D#226ptD.0
  # DEBUG __xD.56290 => D#226ptD.0
  # DEBUG thisD.56289 => D#153ptD.0
  # DEBUG D#699ptD.0 => &MEM[(const struct pairD.34184 &)__y_88 + 32].firstD.35901
  # DEBUG D#232ptD.0 => &D#233ptD.0->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#232ptD.0
  # DEBUG __xD.56293 => D#699ptD.0
  # DEBUG __yD.56292 => field_3(D)
  # DEBUG thisD.56291 => D#203ptD.0
  # DEBUG __lhsD.56295 => D#699ptD.0
  # DEBUG __rhsD.56294 => field_3(D)
  # DEBUG thisD.56297 => D#699ptD.0
  # DEBUG __strD.56298 => field_3(D)
  # VUSE <.MEM_32>
  _13 = MEM[(long unsigned intD.14 *)__y_88 + 40B];
  # DEBUG D#2ptD.0 => D#699ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56299 => _13
  # DEBUG D#716ptD.0 => MEM[(long unsigned intD.14 *)field_3(D) + 8B]
  # DEBUG D#2ptD.0 => field_3(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56300 => D#716ptD.0
  # DEBUG __aD.56307 => &__sizeD.56299
  # DEBUG __bD.56306 => &__osizeD.56300
  __len_83 = MIN_EXPR <_13, pretmp_33>;
  # DEBUG __lenD.56301 => D#696ptD.0
  # DEBUG thisD.48671 => field_3(D)
  # DEBUG D#715ptD.0 => MEM[(charD.10 * *)field_3(D)]
  # DEBUG D#3ptD.0 => field_3(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _35 = MEM[(charD.10 * *)__y_88 + 32B];
  # DEBUG D#3ptD.0 => D#699ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56310 => _35
  # DEBUG __s2D.56309 => D#715ptD.0
  # DEBUG __nD.56308 => D#696ptD.0
  # VUSE <.MEM_32>
  # USE = nonlocal escaped 
  __r_36 = memcmpD.989 (_35, pretmp_85, __len_83);
  # DEBUG __rD.56302 => NULL
  if (__r_36 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56304 => _13
  # DEBUG __n2D.56303 => D#716ptD.0
  # RANGE [0, 18446744073709551615]
  _37 = _13 - pretmp_33;
  __d_38 = (const difference_typeD.11503) _37;
  # DEBUG __dD.56305 => __d_38
  if (__d_38 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_38 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_39 = (intD.9) _37;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_40 = PHI <__r_36(7), __r_39(10)>
  # DEBUG __rD.56302 => __r_40
  # DEBUG D#705ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56299 => D#705ptD.0
  # DEBUG D#706ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56300 => D#706ptD.0
  if (__r_40 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 26, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       26 [100.0%]  (FALLTHRU)

;;   basic block 26, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.56302 => NULL
  # DEBUG __yD.56286 => __y_88
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __y_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_88 + 16B];
  # DEBUG D#159ptD.0 => __y_88
  # DEBUG __xD.49309 => D#159ptD.0
  # DEBUG __xD.56287 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 26, next block 25, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU)

;;   basic block 25, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.56302 => NULL
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __y_25 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_88 + 24B];
  # DEBUG D#160ptD.0 => __y_88
  # DEBUG __xD.49308 => D#160ptD.0
  # DEBUG __xD.56287 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 24, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_55 = PHI <__y_29(5)>
;;    succ:       24 [100.0%]  (FALLTHRU)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.49307 => NULL
  # DEBUG __xD.49306 => __y_55
  # DEBUG __j$_M_nodeD.49368 => __y_55
  # DEBUG thisD.49330 => D#698ptD.0
  # DEBUG thisD.49332 => NULL
  # DEBUG __xD.49331 => __y_19
  # DEBUG thisD.49327 => &__jD.56274
  # DEBUG __xD.49328 => NULL
  if (__y_19 == __y_55)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 24, next block 16, flags: (NEW, REACHABLE)
;;    pred:       24 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.56275 => __y_55
  # DEBUG __xD.48212 => __y_55
  # DEBUG thisD.48213 => __y_55
  # DEBUG D#154ptD.0 => &__y_55->_M_value_fieldD.38976
  # DEBUG __rD.47702 => D#154ptD.0
  # DEBUG __xD.56277 => D#154ptD.0
  # DEBUG thisD.56276 => D#153ptD.0
  # DEBUG D#700ptD.0 => &MEM[(const struct pairD.34184 &)__y_55 + 32].firstD.35901
  # DEBUG D#236ptD.0 => &MEM[(const struct _Rb_treeD.34404 *)D#698ptD.0]._M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#236ptD.0
  # DEBUG __xD.56280 => field_3(D)
  # DEBUG __yD.56279 => D#700ptD.0
  # DEBUG thisD.56278 => D#203ptD.0
  # DEBUG __lhsD.56282 => field_3(D)
  # DEBUG __rhsD.56281 => D#700ptD.0
  # DEBUG thisD.56312 => field_3(D)
  # DEBUG __strD.56313 => D#700ptD.0
  # DEBUG D#714ptD.0 => MEM[(long unsigned intD.14 *)field_3(D) + 8B]
  # DEBUG D#2ptD.0 => field_3(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56314 => D#714ptD.0
  # VUSE <.MEM_32>
  _43 = MEM[(long unsigned intD.14 *)__y_55 + 40B];
  # DEBUG D#2ptD.0 => D#700ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56315 => _43
  # DEBUG __aD.56322 => &__sizeD.56314
  # DEBUG __bD.56321 => &__osizeD.56315
  __len_53 = MIN_EXPR <pretmp_33, _43>;
  # DEBUG __lenD.56316 => D#697ptD.0
  # DEBUG thisD.48671 => D#700ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _46 = MEM[(charD.10 * *)__y_55 + 32B];
  # DEBUG D#3ptD.0 => D#700ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#713ptD.0 => MEM[(charD.10 * *)field_3(D)]
  # DEBUG D#3ptD.0 => field_3(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56325 => D#713ptD.0
  # DEBUG __s2D.56324 => _46
  # DEBUG __nD.56323 => D#697ptD.0
  # VUSE <.MEM_32>
  # USE = nonlocal escaped 
  __r_48 = memcmpD.989 (pretmp_85, _46, __len_53);
  # DEBUG __rD.56317 => NULL
  if (__r_48 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56319 => D#714ptD.0
  # DEBUG __n2D.56318 => _43
  # RANGE [0, 18446744073709551615]
  _49 = pretmp_33 - _43;
  __d_50 = (const difference_typeD.11503) _49;
  # DEBUG __dD.56320 => __d_50
  if (__d_50 > 2147483647)
    goto <bb 23>;
  else
    goto <bb 17>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_50 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_51 = (intD.9) _49;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_52 = PHI <__r_48(15), __r_51(18)>
  # DEBUG __rD.56317 => __r_52
  # DEBUG D#711ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56314 => D#711ptD.0
  # DEBUG D#712ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56315 => D#712ptD.0
  if (__r_52 < 0)
    goto <bb 4>;
  else
    goto <bb 23>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L4>: [LP 2]
  # DEBUG thisD.50254 => &D.35977
  # DEBUG thisD.50255 => &D.35977
  # DEBUG thisD.50264 => &D.35977
  # VUSE <.MEM_10>
  # PT = nonlocal escaped 
  _5 = MEM[(charD.10 * *)&D.35977];
  # DEBUG D#3ptD.0 => &D.35977
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50265 => &D.35977
  if (&D.35977.D.11539._M_local_bufD.11541 != _5)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35977.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.50257 => &D.35977
  # DEBUG __sizeD.50256 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35977
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35977
  # DEBUG D#183ptD.0 => &D.35977._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.50260 => _5
  # DEBUG __aD.50258 => D#181ptD.0
  # DEBUG __nD.50259 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.50263 => _5
  # DEBUG thisD.50261 => D#177ptD.0
  # DEBUG D.50262 => D#178ptD.0
  # .MEM_14 = VDEF <.MEM_10>
  # USE = nonlocal null { D.35977 } (escaped)
  # CLB = nonlocal null { D.35977 } (escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_10(20), .MEM_14(21)>
  # DEBUG D#187ptD.0 => &D.35977._M_dataplusD.11519
  # DEBUG thisD.50266 => D#187ptD.0
  # DEBUG thisD.50267 => D#187ptD.0
  # DEBUG thisD.50268 => D#187ptD.0
  # .MEM_12 = VDEF <.MEM_11>
  D.35977 ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 22, next block 27, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       27 [100.0%]  (FALLTHRU)

;;   basic block 27, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 23, next block 1, flags: (NEW)
;;    pred:       23 [100.0%]  (FALLTHRU)
  # DEBUG __rD.56317 => NULL
  # DEBUG D#235ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49368 => D#235ptD.0
  # DEBUG match$_M_nodeD.50269 => __y_55
  # DEBUG D#348ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50242 => D#348ptD.0
  # DEBUG D#79ptD.0 => &D#348ptD.0->_M_tD.34405
  # DEBUG thisD.50243 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => __y_19
  # DEBUG thisD.50239 => &matchD.35974
  # DEBUG __xD.50240 => &D.35976
  # DEBUG D#235ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49368 => D#235ptD.0
  # DEBUG match$_M_nodeD.50269 => __y_55
  # DEBUG D#348ptD.0 => &this_2(D)->_float_mapD.35250
  # DEBUG thisD.50242 => D#348ptD.0
  # DEBUG D#79ptD.0 => &D#348ptD.0->_M_tD.34405
  # DEBUG thisD.50243 => D#79ptD.0
  # DEBUG thisD.47677 => NULL
  # DEBUG __xD.47676 => __y_19
  # DEBUG thisD.50239 => &matchD.35974
  # DEBUG __xD.50240 => &D.35976
  # DEBUG thisD.50251 => &matchD.35974
  # DEBUG thisD.50252 => __y_55
  # DEBUG D#349ptD.0 => &__y_55->_M_value_fieldD.38976
  # DEBUG __rD.47702 => D#349ptD.0
  # VUSE <.MEM_32>
  _7 = MEM[(const struct pairD.34184 *)__y_55 + 32B].secondD.35902;
  # DEBUG D#350ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.50269 => D#350ptD.0
  # VUSE <.MEM_32>
  return _7;
;;    succ:       EXIT [100.0%] 

}



;; Function std::__cxx11::string Configuration::GetStr(const string&) const (_ZNK13Configuration6GetStrERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1733, decl_uid=35270, cgraph_uid=419, symbol_order=421)


Pass statistics:
----------------

std::__cxx11::string Configuration::GetStr(const string&) const (const struct ConfigurationD.32032 * const thisD.35955, const struct stringD.2845 & fieldD.35953)
Eh tree:
   3 cleanup land:{2,<L4>}
{
  const struct _Rb_tree_node_baseD.27676 * SR.1206D.56425;
  const struct _Rb_tree_node_baseD.27676 * SR.1205D.56424;
  size_typeD.11502 __dnewD.56397;
  const size_typeD.11502 __sizeD.56381;
  const size_typeD.11502 __osizeD.56382;
  const size_typeD.11502 __lenD.56383;
  intD.9 __rD.56384;
  const difference_typeD.11503 __dD.56387;
  intD.9 D.56393;
  const size_typeD.11502 __sizeD.56366;
  const size_typeD.11502 __osizeD.56367;
  const size_typeD.11502 __lenD.56368;
  intD.9 __rD.56369;
  const difference_typeD.11503 __dD.56372;
  intD.9 D.56378;
  struct const_iteratorD.32576 D.56363;
  const struct _Rb_tree_nodeD.32262 * __yD.56353;
  const struct _Rb_tree_node_baseD.27676 * SR.926D.50958;
  struct const_iteratorD.32848 D.50919;
  struct basic_stringD.2844 D.35961;
  charD.10 * _2;
  charD.10 * const _5;
  const size_typeD.11502 _7;
  charD.10 * _15;
  charD.10 * const _16;
  const size_typeD.11502 _17;
  const size_typeD.11502 pretmp_27;
  charD.10 * const pretmp_38;
  charD.10 * const _41;
  long unsigned intD.14 _43;
  const size_typeD.11502 _49;
  charD.10 * const _52;
  long unsigned intD.14 _55;
  boolD.2757 _59;
  charD.10 * _65;
  long unsigned intD.14 __dnew.111_66;
  const char_typeD.6439 _68;
  charD.10 * _71;
  charD.10 * const prephitmp_73;
  charD.10 * const pretmp_86;
  size_typeD.11502 prephitmp_87;
  size_typeD.11502 pretmp_88;
  boolD.2757 _103;
  boolD.2757 _126;
  charD.10 * const _127;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50920 => &matchD.35957
  # DEBUG match$_M_nodeD.50954 => 0B
  # DEBUG D#384ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50916 => D#384ptD.0
  # DEBUG __xD.50917 => field_4(D)
  # DEBUG D#723ptD.0 => &MEM[(const struct mapD.32040 *)this_3(D) + 40B]._M_tD.32259
  # DEBUG thisD.56339 => D#723ptD.0
  # DEBUG __kD.56340 => field_4(D)
  # DEBUG thisD.56350 => D#723ptD.0
  # PT = nonlocal 
  __y_25 = &MEM[(const struct _Rb_treeD.32258 *)this_3(D) + 40B]._M_implD.32337._M_headerD.32503;
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  __y_26 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_3(D) + 56B];
  # DEBUG D#70ptD.0 => D#723ptD.0
  # DEBUG thisD.48900 => D#70ptD.0
  # DEBUG D#212ptD.0 => D#723ptD.0
  # DEBUG __xD.56354 => NULL
  # DEBUG __yD.56353 => NULL
  # DEBUG __kD.56352 => field_4(D)
  # DEBUG __yD.56353 => __y_25
  # DEBUG __xD.56354 => __y_26
  if (__y_26 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1(D)>
  pretmp_27 = MEM[(long unsigned intD.14 *)field_4(D) + 8B];
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  pretmp_38 = MEM[(charD.10 * *)field_4(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_128 = PHI <.MEM_1(D)(2), .MEM_6(14), .MEM_6(17), .MEM_6(19)>
  # DEBUG thisD.48914 => D#723ptD.0
  # DEBUG thisD.48916 => NULL
  # DEBUG __xD.48915 => __y_25
  # DEBUG D#213ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48918 => D#213ptD.0
  # DEBUG match$_M_nodeD.50954 => __y_25
  # DEBUG D#385ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50912 => D#385ptD.0
  # DEBUG D#71ptD.0 => &D#385ptD.0->_M_tD.32259
  # DEBUG thisD.50913 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => __y_25
  # DEBUG thisD.50909 => &matchD.35957
  # DEBUG __xD.50910 => &D.35959
  # DEBUG D#213ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48918 => D#213ptD.0
  # DEBUG match$_M_nodeD.50954 => __y_25
  # DEBUG D#385ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50912 => D#385ptD.0
  # DEBUG D#71ptD.0 => &D#385ptD.0->_M_tD.32259
  # DEBUG thisD.50913 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => __y_25
  # DEBUG thisD.50909 => &matchD.35957
  # DEBUG __xD.50910 => &D.35959
  # .MEM_11 = VDEF <.MEM_128>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  D.35961 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown string field: ", field_4(D)); [return slot optimization]
  [LP 2] # .MEM_12 = VDEF <.MEM_11>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_3(D), &D.35961, 0);
;;    succ:       25 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_36 = PHI <__y_30(12), __y_31(13)>
  # PT = nonlocal escaped 
  # __y_35 = PHI <__y_74(12), __y_50(13)>
  # DEBUG __yD.56353 => __y_35
  # DEBUG __xD.56354 => __y_36
  if (__y_36 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_6 = PHI <.MEM_1(D)(3), .MEM_6(6)>
  # PT = nonlocal escaped 
  # __y_74 = PHI <__y_26(3), __y_36(6)>
  # PT = nonlocal escaped 
  # __y_50 = PHI <__y_25(3), __y_35(6)>
  # DEBUG __yD.56353 => __y_50
  # DEBUG __xD.56354 => __y_74
  # DEBUG __xD.56355 => __y_74
  # DEBUG __xD.48708 => __y_74
  # DEBUG thisD.48709 => __y_74
  # DEBUG D#204ptD.0 => &__y_74->_M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.56357 => D#204ptD.0
  # DEBUG thisD.56356 => D#149ptD.0
  # DEBUG D#724ptD.0 => &MEM[(const struct pairD.32038 &)__y_74 + 32].firstD.35538
  # DEBUG D#210ptD.0 => &D#211ptD.0->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#210ptD.0
  # DEBUG __xD.56360 => D#724ptD.0
  # DEBUG __yD.56359 => field_4(D)
  # DEBUG thisD.56358 => D#203ptD.0
  # DEBUG __lhsD.56362 => D#724ptD.0
  # DEBUG __rhsD.56361 => field_4(D)
  # DEBUG thisD.56364 => D#724ptD.0
  # DEBUG __strD.56365 => field_4(D)
  # VUSE <.MEM_6>
  _17 = MEM[(long unsigned intD.14 *)__y_74 + 40B];
  # DEBUG D#2ptD.0 => D#724ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56366 => _17
  # DEBUG D#742ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56367 => D#742ptD.0
  # DEBUG __aD.56374 => &__sizeD.56366
  # DEBUG __bD.56373 => &__osizeD.56367
  __len_64 = MIN_EXPR <_17, pretmp_27>;
  # DEBUG __lenD.56368 => D#721ptD.0
  # DEBUG thisD.48671 => field_4(D)
  # DEBUG D#741ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _41 = MEM[(charD.10 * *)__y_74 + 32B];
  # DEBUG D#3ptD.0 => D#724ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56377 => _41
  # DEBUG __s2D.56376 => D#741ptD.0
  # DEBUG __nD.56375 => D#721ptD.0
  # VUSE <.MEM_6>
  # USE = nonlocal escaped 
  __r_42 = memcmpD.989 (_41, pretmp_38, __len_64);
  # DEBUG __rD.56369 => NULL
  if (__r_42 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56371 => _17
  # DEBUG __n2D.56370 => D#742ptD.0
  # RANGE [0, 18446744073709551615]
  _43 = _17 - pretmp_27;
  __d_44 = (const difference_typeD.11503) _43;
  # DEBUG __dD.56372 => __d_44
  if (__d_44 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_44 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_45 = (intD.9) _43;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_46 = PHI <__r_42(7), __r_45(10)>
  # DEBUG __rD.56369 => __r_46
  # DEBUG D#730ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56366 => D#730ptD.0
  # DEBUG D#731ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56367 => D#731ptD.0
  if (__r_46 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56369 => NULL
  # DEBUG __yD.56353 => __y_74
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  __y_30 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_74 + 16B];
  # DEBUG D#155ptD.0 => __y_74
  # DEBUG __xD.48859 => D#155ptD.0
  # DEBUG __xD.56354 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56369 => NULL
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  __y_31 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_74 + 24B];
  # DEBUG D#156ptD.0 => __y_74
  # DEBUG __xD.48858 => D#156ptD.0
  # DEBUG __xD.56354 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_72 = PHI <__y_35(5)>
  # DEBUG thisD.48857 => NULL
  # DEBUG __xD.48856 => __y_72
  # DEBUG __j$_M_nodeD.48918 => __y_72
  # DEBUG thisD.48880 => D#723ptD.0
  # DEBUG thisD.48882 => NULL
  # DEBUG __xD.48881 => __y_25
  # DEBUG thisD.48877 => &__jD.56341
  # DEBUG __xD.48878 => NULL
  if (__y_25 == __y_72)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.56342 => __y_72
  # DEBUG __xD.48170 => __y_72
  # DEBUG thisD.48171 => __y_72
  # DEBUG D#150ptD.0 => &__y_72->_M_value_fieldD.38939
  # DEBUG __rD.47608 => D#150ptD.0
  # DEBUG __xD.56344 => D#150ptD.0
  # DEBUG thisD.56343 => D#149ptD.0
  # DEBUG D#725ptD.0 => &MEM[(const struct pairD.32038 &)__y_72 + 32].firstD.35538
  # DEBUG D#214ptD.0 => &MEM[(const struct _Rb_treeD.32258 *)D#723ptD.0]._M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#214ptD.0
  # DEBUG __xD.56347 => field_4(D)
  # DEBUG __yD.56346 => D#725ptD.0
  # DEBUG thisD.56345 => D#203ptD.0
  # DEBUG __lhsD.56349 => field_4(D)
  # DEBUG __rhsD.56348 => D#725ptD.0
  # DEBUG thisD.56379 => field_4(D)
  # DEBUG __strD.56380 => D#725ptD.0
  # DEBUG D#740ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56381 => D#740ptD.0
  # VUSE <.MEM_6>
  _49 = MEM[(long unsigned intD.14 *)__y_72 + 40B];
  # DEBUG D#2ptD.0 => D#725ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56382 => _49
  # DEBUG __aD.56389 => &__sizeD.56381
  # DEBUG __bD.56388 => &__osizeD.56382
  __len_100 = MIN_EXPR <pretmp_27, _49>;
  # DEBUG __lenD.56383 => D#722ptD.0
  # DEBUG thisD.48671 => D#725ptD.0
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _52 = MEM[(charD.10 * *)__y_72 + 32B];
  # DEBUG D#3ptD.0 => D#725ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#739ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56392 => D#739ptD.0
  # DEBUG __s2D.56391 => _52
  # DEBUG __nD.56390 => D#722ptD.0
  # VUSE <.MEM_6>
  # USE = nonlocal escaped 
  __r_54 = memcmpD.989 (pretmp_38, _52, __len_100);
  # DEBUG __rD.56384 => NULL
  if (__r_54 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56386 => D#740ptD.0
  # DEBUG __n2D.56385 => _49
  # RANGE [0, 18446744073709551615]
  _55 = pretmp_27 - _49;
  __d_56 = (const difference_typeD.11503) _55;
  # DEBUG __dD.56387 => __d_56
  if (__d_56 > 2147483647)
    goto <bb 30>;
  else
    goto <bb 17>;
;;    succ:       30 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_56 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_57 = (intD.9) _55;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_58 = PHI <__r_54(15), __r_57(18)>
  # DEBUG __rD.56384 => __r_58
  # DEBUG D#736ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56381 => D#736ptD.0
  # DEBUG D#737ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56382 => D#737ptD.0
  if (__r_58 < 0)
    goto <bb 4>;
  else
    goto <bb 30>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       29 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_90 = VDEF <.MEM_89>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  _65 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_9(D), &__dnewD.56397, 0);
  # DEBUG D#6ptD.0 => _9(D)
  # DEBUG __pD.56416 => _65
  # DEBUG thisD.56415 => D#6ptD.0
  # .MEM_91 = VDEF <.MEM_90>
  MEM[(charD.10 * *)_9(D)] = _65;
  # VUSE <.MEM_91>
  __dnew.111_66 = __dnewD.56397;
  # DEBUG D#7ptD.0 => _9(D)
  # DEBUG __capacityD.56418 => __dnew.111_66
  # DEBUG thisD.56417 => D#7ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(size_typeD.11502 *)_9(D) + 16B] = __dnew.111_66;
  # DEBUG D#3ptD.0 => _9(D)
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56400 => _65
  # DEBUG __k1D.56399 => _5
  # DEBUG __k2D.56398 => _15
  # DEBUG __dD.56403 => _65
  # DEBUG __sD.56402 => _5
  # DEBUG __nD.56401 => _7
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 638, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       29 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => _9(D)
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56400 => _2
  # DEBUG __k1D.56399 => _5
  # DEBUG __k2D.56398 => _15
  # DEBUG __dD.56403 => _2
  # DEBUG __sD.56402 => _5
  # DEBUG __nD.56401 => _7
  if (_7 == 1)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_89>
  _68 = MEM[(const char_typeD.6439 &)_5];
  # DEBUG D#13ptD.0 => _5
  # DEBUG __c1D.56408 => _2
  # DEBUG __c2D.56407 => D#13ptD.0
  # .MEM_93 = VDEF <.MEM_89>
  MEM[(char_typeD.6439 &)_2] = _68;
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 559, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _127 = PHI <_2(21), _65(20)>
  # .MEM_124 = PHI <.MEM_89(21), .MEM_92(20)>
  # DEBUG D#3ptD.0 => _9(D)
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56400 => _127
  # DEBUG __k1D.56399 => _5
  # DEBUG __k2D.56398 => _15
  # DEBUG __dD.56403 => _127
  # DEBUG __sD.56402 => _5
  # DEBUG __nD.56401 => _7
  # DEBUG __s1D.56406 => _127
  # DEBUG __s2D.56405 => _5
  # DEBUG __nD.56404 => _7
  # .MEM_94 = VDEF <.MEM_124>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  memcpyD.992 (_127, _5, _7);
  # VUSE <.MEM_94>
  pretmp_88 = __dnewD.56397;
  # VUSE <.MEM_94>
  pretmp_86 = MEM[(charD.10 * *)_9(D)];
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_93(22), .MEM_94(23)>
  # prephitmp_87 = PHI <_7(22), pretmp_88(23)>
  # PT = nonlocal escaped 
  # prephitmp_73 = PHI <_2(22), pretmp_86(23)>
  # DEBUG D#738ptD.0 => __dnewD.56397
  # DEBUG thisD.56410 => _9(D)
  # DEBUG __nD.56409 => D#738ptD.0
  # DEBUG D#5ptD.0 => _9(D)
  # DEBUG __lengthD.56412 => D#738ptD.0
  # DEBUG thisD.56411 => D#5ptD.0
  # .MEM_95 = VDEF <.MEM_75>
  MEM[(size_typeD.11502 *)_9(D) + 8B] = prephitmp_87;
  # DEBUG D#3ptD.0 => _9(D)
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped 
  _71 = prephitmp_73 + prephitmp_87;
  # DEBUG __c1D.56414 => _71
  # DEBUG __c2D.56413 => D#13ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  MEM[(char_typeD.6439 &)_71] = 0;
  # .MEM_97 = VDEF <.MEM_96>
  __dnewD.56397 ={v} {CLOBBER};
  # DEBUG D#388ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.50954 => D#388ptD.0
  # VUSE <.MEM_97>
  return _9(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L4>: [LP 2]
  # DEBUG thisD.50939 => &D.35961
  # DEBUG thisD.50940 => &D.35961
  # DEBUG thisD.50949 => &D.35961
  # VUSE <.MEM_12>
  # PT = nonlocal escaped 
  _16 = MEM[(charD.10 * *)&D.35961];
  # DEBUG D#3ptD.0 => &D.35961
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50950 => &D.35961
  if (&D.35961.D.11539._M_local_bufD.11541 != _16)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35961.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.50942 => &D.35961
  # DEBUG __sizeD.50941 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35961
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35961
  # DEBUG D#183ptD.0 => &D.35961._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.50945 => _16
  # DEBUG __aD.50943 => D#181ptD.0
  # DEBUG __nD.50944 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.50948 => _16
  # DEBUG thisD.50946 => D#177ptD.0
  # DEBUG D.50947 => D#178ptD.0
  # .MEM_20 = VDEF <.MEM_12>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_12(25), .MEM_20(26)>
  # DEBUG D#187ptD.0 => &D.35961._M_dataplusD.11519
  # DEBUG thisD.50951 => D#187ptD.0
  # DEBUG thisD.50952 => D#187ptD.0
  # DEBUG thisD.50953 => D#187ptD.0
  # .MEM_14 = VDEF <.MEM_13>
  D.35961 ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 28, loop depth 0, count 0, freq 115, maybe hot
;;   Invalid sum of incoming frequencies 765, should be 115
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       30 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_98 = VDEF <.MEM_18>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 29, loop depth 0, count 0, freq 899, maybe hot
;;   Invalid sum of incoming frequencies 135, should be 899
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       30 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56420 => _5
  # DEBUG __lastD.56419 => _15
  # DEBUG D#393ptD.0 => &__firstD.56420
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56422 => _5
  # DEBUG __lastD.56421 => _15
  # .MEM_89 = VDEF <.MEM_18>
  __dnewD.56397 = _7;
  if (_7 > 15)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 29, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56384 => NULL
  # DEBUG D#213ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48918 => D#213ptD.0
  # DEBUG match$_M_nodeD.50954 => __y_72
  # DEBUG D#385ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50912 => D#385ptD.0
  # DEBUG D#71ptD.0 => &D#385ptD.0->_M_tD.32259
  # DEBUG thisD.50913 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => __y_25
  # DEBUG thisD.50909 => &matchD.35957
  # DEBUG __xD.50910 => &D.35959
  # DEBUG D#213ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48918 => D#213ptD.0
  # DEBUG match$_M_nodeD.50954 => __y_72
  # DEBUG D#385ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50912 => D#385ptD.0
  # DEBUG D#71ptD.0 => &D#385ptD.0->_M_tD.32259
  # DEBUG thisD.50913 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => __y_25
  # DEBUG thisD.50909 => &matchD.35957
  # DEBUG __xD.50910 => &D.35959
  # DEBUG thisD.50936 => &matchD.35957
  # DEBUG thisD.50937 => __y_72
  # DEBUG D#386ptD.0 => &__y_72->_M_value_fieldD.38939
  # DEBUG __rD.47608 => D#386ptD.0
  # DEBUG D#387ptD.0 => &MEM[(const struct pairD.32038 *)__y_72 + 32B].secondD.35539
  # DEBUG thisD.50921 => _9(D)
  # DEBUG __strD.50922 => D#387ptD.0
  # DEBUG thisD.50825 => D#387ptD.0
  # DEBUG D#380ptD.0 => &D#387ptD.0->_M_dataplusD.11519
  # DEBUG thisD.50924 => _9(D)
  # PT = nonlocal 
  _2 = &MEM[(struct basic_stringD.2844 *)_9(D)].D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)_9(D)]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.50927 => D#381ptD.0
  # DEBUG __datD.50926 => _2
  # DEBUG __aD.50925 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_18 = VDEF <.MEM_6>
  MEM[(struct _Alloc_hiderD.11518 *)_9(D)]._M_pD.11525 = _2;
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _5 = MEM[(charD.10 * *)__y_72 + 64B];
  # DEBUG D#3ptD.0 => D#387ptD.0
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_18>
  _7 = MEM[(long unsigned intD.14 *)__y_72 + 72B];
  # DEBUG D#1ptD.0 => D#387ptD.0
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _15 = _5 + _7;
  # DEBUG D#3ptD.0 => D#387ptD.0
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.50930 => _9(D)
  # DEBUG __begD.50929 => _5
  # DEBUG __endD.50928 => _15
  # DEBUG thisD.50934 => _9(D)
  # DEBUG __begD.50933 => _5
  # DEBUG __endD.50932 => _15
  # DEBUG thisD.56394 => _9(D)
  # DEBUG __begD.56395 => _5
  # DEBUG __endD.56396 => _15
  # DEBUG __ptrD.51229 => _5
  # RANGE [0, 1]
  _59 = _15 != 0B;
  # RANGE [0, 1]
  _126 = _5 == 0B;
  # RANGE [0, 1]
  _103 = _59 & _126;
  if (_103 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [15.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_3(D) + 56B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_3(D) + 56B]
Creating dr for MEM[(long unsigned int *)field_4(D) + 8B]
analyze_innermost: success.
	base_address: field_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)field_4(D) + 8B]
Creating dr for MEM[(char * *)field_4(D)]
analyze_innermost: success.
	base_address: field_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)field_4(D)]
Creating dr for MEM[(long unsigned int *)__y_74 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_74 + 40B]
Creating dr for MEM[(long unsigned int *)__y_74 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_74 + 40B]
Creating dr for MEM[(char * *)__y_74 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_74 + 32B]
Creating dr for MEM[(char * *)__y_74 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_74 + 32B]
Creating dr for MEM[(long unsigned int *)__y_74 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_74 + 40B]
Creating dr for MEM[(long unsigned int *)__y_74 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_74 + 40B]
Creating dr for MEM[(char * *)__y_74 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_74 + 32B]
Creating dr for MEM[(char * *)__y_74 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_74 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B]
Creating dr for MEM[(long unsigned int *)__y_74 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_74 + 40B]
Creating dr for MEM[(long unsigned int *)__y_74 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_74 + 40B]
Creating dr for MEM[(char * *)__y_74 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_74 + 32B]
Creating dr for MEM[(char * *)__y_74 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_74 + 32B]
Creating dr for MEM[(long unsigned int *)__y_74 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_74 + 40B]
Creating dr for MEM[(long unsigned int *)__y_74 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__y_74 + 40B]
Creating dr for MEM[(char * *)__y_74 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_74 + 32B]
Creating dr for MEM[(char * *)__y_74 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__y_74 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B]
Applying pattern match.pd:397, generic-match.c:4039
Creating dr for MEM[(long unsigned int *)__y_72 + 40B]
analyze_innermost: success.
	base_address: __y_72
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__y_72 + 40B]
Creating dr for MEM[(char * *)__y_72 + 32B]
analyze_innermost: success.
	base_address: __y_72
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__y_72 + 32B]
Creating dr for MEM[(struct _Alloc_hider *)_9(D)]._M_p
analyze_innermost: success.
	base_address: _9(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)_9(D)]
	Access function 0: 0
Creating dr for MEM[(char * *)__y_72 + 64B]
analyze_innermost: success.
	base_address: __y_72
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__y_72 + 64B]
Creating dr for MEM[(long unsigned int *)__y_72 + 72B]
analyze_innermost: success.
	base_address: __y_72
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__y_72 + 72B]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(const char_type &)_5]
analyze_innermost: success.
	base_address: _5
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)_5]
Creating dr for MEM[(char_type &)_2]
analyze_innermost: success.
	base_address: _9(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_2]
Creating dr for MEM[(size_type *)_9(D) + 8B]
analyze_innermost: success.
	base_address: _9(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)_9(D) + 8B]
Creating dr for MEM[(char_type &)_71]
analyze_innermost: success.
	base_address: prephitmp_73 + prephitmp_87
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_71]
Creating dr for MEM[(char * *)&D.35961]
analyze_innermost: success.
	base_address: &D.35961
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.35961]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:34, LOOPS:1, CONDITIONS:15, STMTS:367)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG this => &match
    # DEBUG match$_M_node => 0B
    # DEBUG D#384 => &this_3(D)->_str_map
    # DEBUG this => D#384
    # DEBUG __x => field_4(D)
    # DEBUG D#723 => &MEM[(const struct map *)this_3(D) + 40B]._M_t
    # DEBUG this => D#723
    # DEBUG __k => field_4(D)
    # DEBUG this => D#723
    __y_25 = &MEM[(const struct _Rb_tree *)this_3(D) + 40B]._M_impl._M_header;
    # VUSE <.MEM_1(D)>
    __y_26 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 56B];
    # DEBUG D#70 => D#723
    # DEBUG this => D#70
    # DEBUG D#212 => D#723
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_4(D)
    # DEBUG __y => __y_25
    # DEBUG __x => __y_26
    if (__y_26 == 0B)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 3>:
    # VUSE <.MEM_1(D)>
    pretmp_27 = MEM[(long unsigned int *)field_4(D) + 8B];
    # VUSE <.MEM_1(D)>
    pretmp_38 = MEM[(char * *)field_4(D)];
    goto <bb 7>;

  }
  bb_4 (preds = {bb_2 bb_31 bb_17 bb_19 }, succs = {bb_25 })
  {
    <bb 4>:
    # .MEM_128 = PHI <.MEM_1(D)(2), .MEM_6(31), .MEM_6(17), .MEM_6(19)>
    # DEBUG this => D#723
    # DEBUG this => NULL
    # DEBUG __x => __y_25
    # DEBUG D#213 => {CLOBBER}
    # DEBUG __j$_M_node => D#213
    # DEBUG match$_M_node => __y_25
    # DEBUG D#385 => &this_3(D)->_str_map
    # DEBUG this => D#385
    # DEBUG D#71 => &D#385->_M_t
    # DEBUG this => D#71
    # DEBUG this => NULL
    # DEBUG __x => __y_25
    # DEBUG this => &match
    # DEBUG __x => &D.35959
    # DEBUG D#213 => {CLOBBER}
    # DEBUG __j$_M_node => D#213
    # DEBUG match$_M_node => __y_25
    # DEBUG D#385 => &this_3(D)->_str_map
    # DEBUG this => D#385
    # DEBUG D#71 => &D#385->_M_t
    # DEBUG this => D#71
    # DEBUG this => NULL
    # DEBUG __x => __y_25
    # DEBUG this => &match
    # DEBUG __x => &D.35959
    # .MEM_11 = VDEF <.MEM_128>
    D.35961 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown string field: ", field_4(D)); [return slot optimization]
    # .MEM_12 = VDEF <.MEM_11>
    Configuration::ParseError (this_3(D), &D.35961, 0);

  }
  bb_14 (preds = {bb_5 }, succs = {bb_31 })
  {
    <bb 14>:
    # __y_72 = PHI <__y_35(5)>

  }
  bb_31 (preds = {bb_14 }, succs = {bb_4 bb_15 })
  {
    <bb 31>:
    # DEBUG this => NULL
    # DEBUG __x => __y_72
    # DEBUG __j$_M_node => __y_72
    # DEBUG this => D#723
    # DEBUG this => NULL
    # DEBUG __x => __y_25
    # DEBUG this => &__j
    # DEBUG __x => NULL
    if (__y_25 == __y_72)
      goto <bb 4>;
    else
      goto <bb 15>;

  }
  bb_15 (preds = {bb_31 }, succs = {bb_16 bb_19 })
  {
    <bb 15>:
    # DEBUG __x => __y_72
    # DEBUG __x => __y_72
    # DEBUG this => __y_72
    # DEBUG D#150 => &__y_72->_M_value_field
    # DEBUG __r => D#150
    # DEBUG __x => D#150
    # DEBUG this => D#149
    # DEBUG D#725 => &MEM[(const struct pair &)__y_72 + 32].first
    # DEBUG D#214 => &MEM[(const struct _Rb_tree *)D#723]._M_impl._M_key_compare
    # DEBUG D#203 => D#214
    # DEBUG __x => field_4(D)
    # DEBUG __y => D#725
    # DEBUG this => D#203
    # DEBUG __lhs => field_4(D)
    # DEBUG __rhs => D#725
    # DEBUG this => field_4(D)
    # DEBUG __str => D#725
    # DEBUG D#740 => MEM[(long unsigned int *)field_4(D) + 8B]
    # DEBUG D#2 => field_4(D)
    # DEBUG this => D#2
    # DEBUG __size => D#740
    # VUSE <.MEM_6>
    _49 = MEM[(long unsigned int *)__y_72 + 40B];
    # DEBUG D#2 => D#725
    # DEBUG this => D#2
    # DEBUG __osize => _49
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_100 = MIN_EXPR <pretmp_27, _49>;
    # DEBUG __len => D#722
    # DEBUG this => D#725
    # VUSE <.MEM_6>
    _52 = MEM[(char * *)__y_72 + 32B];
    # DEBUG D#3 => D#725
    # DEBUG this => D#3
    # DEBUG D#739 => MEM[(char * *)field_4(D)]
    # DEBUG D#3 => field_4(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#739
    # DEBUG __s2 => _52
    # DEBUG __n => D#722
    # VUSE <.MEM_6>
    __r_54 = __builtin_memcmp (pretmp_38, _52, __len_100);
    # DEBUG __r => NULL
    if (__r_54 == 0)
      goto <bb 16>;
    else
      goto <bb 19>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_30 bb_17 })
  {
    <bb 16>:
    # DEBUG __n1 => D#740
    # DEBUG __n2 => _49
    _55 = pretmp_27 - _49;
    __d_56 = (const difference_type) _55;
    # DEBUG __d => __d_56
    if (__d_56 > 2147483647)
      goto <bb 30>;
    else
      goto <bb 17>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_4 bb_18 })
  {
    <bb 17>:
    if (__d_56 < -2147483648)
      goto <bb 4>;
    else
      goto <bb 18>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    __r_57 = (int) _55;

  }
  bb_19 (preds = {bb_15 bb_18 }, succs = {bb_4 bb_30 })
  {
    <bb 19>:
    # __r_58 = PHI <__r_54(15), __r_57(18)>
    # DEBUG __r => __r_58
    # DEBUG D#736 => {CLOBBER}
    # DEBUG __size => D#736
    # DEBUG D#737 => {CLOBBER}
    # DEBUG __osize => D#737
    if (__r_58 < 0)
      goto <bb 4>;
    else
      goto <bb 30>;

  }
  bb_20 (preds = {bb_29 }, succs = {bb_23 })
  {
    <bb 20>:
    # .MEM_90 = VDEF <.MEM_89>
    _65 = std::__cxx11::basic_string<char>::_M_create (_9(D), &__dnew, 0);
    # DEBUG D#6 => _9(D)
    # DEBUG __p => _65
    # DEBUG this => D#6
    # .MEM_91 = VDEF <.MEM_90>
    MEM[(char * *)_9(D)] = _65;
    # VUSE <.MEM_91>
    __dnew.111_66 = __dnew;
    # DEBUG D#7 => _9(D)
    # DEBUG __capacity => __dnew.111_66
    # DEBUG this => D#7
    # .MEM_92 = VDEF <.MEM_91>
    MEM[(size_type *)_9(D) + 16B] = __dnew.111_66;
    # DEBUG D#3 => _9(D)
    # DEBUG this => D#3
    # DEBUG __p => _65
    # DEBUG __k1 => _5
    # DEBUG __k2 => _15
    # DEBUG __d => _65
    # DEBUG __s => _5
    # DEBUG __n => _7
    goto <bb 23>;

  }
  bb_21 (preds = {bb_29 }, succs = {bb_22 bb_23 })
  {
    <bb 21>:
    # DEBUG D#3 => _9(D)
    # DEBUG this => D#3
    # DEBUG __p => _2
    # DEBUG __k1 => _5
    # DEBUG __k2 => _15
    # DEBUG __d => _2
    # DEBUG __s => _5
    # DEBUG __n => _7
    if (_7 == 1)
      goto <bb 22>;
    else
      goto <bb 23>;

  }
  bb_22 (preds = {bb_21 }, succs = {bb_24 })
  {
    <bb 22>:
    # VUSE <.MEM_89>
    _68 = MEM[(const char_type &)_5];
    # DEBUG D#13 => _5
    # DEBUG __c1 => _2
    # DEBUG __c2 => D#13
    # .MEM_93 = VDEF <.MEM_89>
    MEM[(char_type &)_2] = _68;
    goto <bb 24>;

  }
  bb_23 (preds = {bb_21 bb_20 }, succs = {bb_24 })
  {
    <bb 23>:
    # _127 = PHI <_2(21), _65(20)>
    # .MEM_124 = PHI <.MEM_89(21), .MEM_92(20)>
    # DEBUG D#3 => _9(D)
    # DEBUG this => D#3
    # DEBUG __p => _127
    # DEBUG __k1 => _5
    # DEBUG __k2 => _15
    # DEBUG __d => _127
    # DEBUG __s => _5
    # DEBUG __n => _7
    # DEBUG __s1 => _127
    # DEBUG __s2 => _5
    # DEBUG __n => _7
    # .MEM_94 = VDEF <.MEM_124>
    __builtin_memcpy (_127, _5, _7);
    # VUSE <.MEM_94>
    pretmp_88 = __dnew;
    # VUSE <.MEM_94>
    pretmp_86 = MEM[(char * *)_9(D)];

  }
  bb_24 (preds = {bb_22 bb_23 }, succs = {bb_1 })
  {
    <bb 24>:
    # .MEM_75 = PHI <.MEM_93(22), .MEM_94(23)>
    # prephitmp_87 = PHI <_7(22), pretmp_88(23)>
    # prephitmp_73 = PHI <_2(22), pretmp_86(23)>
    # DEBUG D#738 => __dnew
    # DEBUG this => _9(D)
    # DEBUG __n => D#738
    # DEBUG D#5 => _9(D)
    # DEBUG __length => D#738
    # DEBUG this => D#5
    # .MEM_95 = VDEF <.MEM_75>
    MEM[(size_type *)_9(D) + 8B] = prephitmp_87;
    # DEBUG D#3 => _9(D)
    # DEBUG this => D#3
    _71 = prephitmp_73 + prephitmp_87;
    # DEBUG __c1 => _71
    # DEBUG __c2 => D#13
    # .MEM_96 = VDEF <.MEM_95>
    MEM[(char_type &)_71] = 0;
    # .MEM_97 = VDEF <.MEM_96>
    __dnew ={v} {CLOBBER};
    # DEBUG D#388 => {CLOBBER}
    # DEBUG match$_M_node => D#388
    # VUSE <.MEM_97>
    return _9(D);

  }
  bb_25 (preds = {bb_4 }, succs = {bb_26 bb_27 })
  {
  <L4>:
    # DEBUG this => &D.35961
    # DEBUG this => &D.35961
    # DEBUG this => &D.35961
    # VUSE <.MEM_12>
    _16 = MEM[(char * *)&D.35961];
    # DEBUG D#3 => &D.35961
    # DEBUG this => D#3
    # DEBUG this => &D.35961
    if (&D.35961.D.11539._M_local_buf != _16)
      goto <bb 26>;
    else
      goto <bb 27>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    # DEBUG D#186 => D.35961.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.35961
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.35961
    # DEBUG this => D#3
    # DEBUG this => &D.35961
    # DEBUG D#183 => &D.35961._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _16
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _16
    # DEBUG this => D#177
    # DEBUG D.50947 => D#178
    # .MEM_20 = VDEF <.MEM_12>
    operator delete (_16);

  }
  bb_27 (preds = {bb_25 bb_26 }, succs = {})
  {
    <bb 27>:
    # .MEM_13 = PHI <.MEM_12(25), .MEM_20(26)>
    # DEBUG D#187 => &D.35961._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_14 = VDEF <.MEM_13>
    D.35961 ={v} {CLOBBER};
    resx 3

  }
  bb_28 (preds = {bb_30 }, succs = {})
  {
    <bb 28>:
    # .MEM_98 = VDEF <.MEM_18>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_29 (preds = {bb_30 }, succs = {bb_20 bb_21 })
  {
    <bb 29>:
    # DEBUG __first => _5
    # DEBUG __last => _15
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => _5
    # DEBUG __last => _15
    # .MEM_89 = VDEF <.MEM_18>
    __dnew = _7;
    if (_7 > 15)
      goto <bb 20>;
    else
      goto <bb 21>;

  }
  bb_30 (preds = {bb_19 bb_16 }, succs = {bb_28 bb_29 })
  {
    <bb 30>:
    # DEBUG __r => NULL
    # DEBUG D#213 => {CLOBBER}
    # DEBUG __j$_M_node => D#213
    # DEBUG match$_M_node => __y_72
    # DEBUG D#385 => &this_3(D)->_str_map
    # DEBUG this => D#385
    # DEBUG D#71 => &D#385->_M_t
    # DEBUG this => D#71
    # DEBUG this => NULL
    # DEBUG __x => __y_25
    # DEBUG this => &match
    # DEBUG __x => &D.35959
    # DEBUG D#213 => {CLOBBER}
    # DEBUG __j$_M_node => D#213
    # DEBUG match$_M_node => __y_72
    # DEBUG D#385 => &this_3(D)->_str_map
    # DEBUG this => D#385
    # DEBUG D#71 => &D#385->_M_t
    # DEBUG this => D#71
    # DEBUG this => NULL
    # DEBUG __x => __y_25
    # DEBUG this => &match
    # DEBUG __x => &D.35959
    # DEBUG this => &match
    # DEBUG this => __y_72
    # DEBUG D#386 => &__y_72->_M_value_field
    # DEBUG __r => D#386
    # DEBUG D#387 => &MEM[(const struct pair *)__y_72 + 32B].second
    # DEBUG this => _9(D)
    # DEBUG __str => D#387
    # DEBUG this => D#387
    # DEBUG D#380 => &D#387->_M_dataplus
    # DEBUG this => _9(D)
    _2 = &MEM[(struct basic_string *)_9(D)].D.11539._M_local_buf;
    # DEBUG D#381 => &MEM[(struct basic_string *)_9(D)]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => _2
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_18 = VDEF <.MEM_6>
    MEM[(struct _Alloc_hider *)_9(D)]._M_p = _2;
    # VUSE <.MEM_18>
    _5 = MEM[(char * *)__y_72 + 64B];
    # DEBUG D#3 => D#387
    # DEBUG this => D#3
    # VUSE <.MEM_18>
    _7 = MEM[(long unsigned int *)__y_72 + 72B];
    # DEBUG D#1 => D#387
    # DEBUG this => D#1
    _15 = _5 + _7;
    # DEBUG D#3 => D#387
    # DEBUG this => D#3
    # DEBUG this => _9(D)
    # DEBUG __beg => _5
    # DEBUG __end => _15
    # DEBUG this => _9(D)
    # DEBUG __beg => _5
    # DEBUG __end => _15
    # DEBUG this => _9(D)
    # DEBUG __beg => _5
    # DEBUG __end => _15
    # DEBUG __ptr => _5
    _59 = _15 != 0B;
    _126 = _5 == 0B;
    _103 = _59 & _126;
    if (_103 != 0)
      goto <bb 28>;
    else
      goto <bb 29>;

  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_33 bb_32 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # __y_36 = PHI <__y_30(33), __y_31(32)>
      # __y_35 = PHI <__y_74(33), __y_50(32)>
      # DEBUG __y => __y_35
      # DEBUG __x => __y_36
      if (__y_36 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_3 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # .MEM_6 = PHI <.MEM_1(D)(3), .MEM_6(6)>
      # __y_74 = PHI <__y_26(3), __y_36(6)>
      # __y_50 = PHI <__y_25(3), __y_35(6)>
      # DEBUG __y => __y_50
      # DEBUG __x => __y_74
      # DEBUG __x => __y_74
      # DEBUG __x => __y_74
      # DEBUG this => __y_74
      # DEBUG D#204 => &__y_74->_M_value_field
      # DEBUG __r => D#204
      # DEBUG __x => D#204
      # DEBUG this => D#149
      # DEBUG D#724 => &MEM[(const struct pair &)__y_74 + 32].first
      # DEBUG D#210 => &D#211->_M_impl._M_key_compare
      # DEBUG D#203 => D#210
      # DEBUG __x => D#724
      # DEBUG __y => field_4(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#724
      # DEBUG __rhs => field_4(D)
      # DEBUG this => D#724
      # DEBUG __str => field_4(D)
      # VUSE <.MEM_6>
      _17 = MEM[(long unsigned int *)__y_74 + 40B];
      # DEBUG D#2 => D#724
      # DEBUG this => D#2
      # DEBUG __size => _17
      # DEBUG D#742 => MEM[(long unsigned int *)field_4(D) + 8B]
      # DEBUG D#2 => field_4(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#742
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_64 = MIN_EXPR <_17, pretmp_27>;
      # DEBUG __len => D#721
      # DEBUG this => field_4(D)
      # DEBUG D#741 => MEM[(char * *)field_4(D)]
      # DEBUG D#3 => field_4(D)
      # DEBUG this => D#3
      # VUSE <.MEM_6>
      _41 = MEM[(char * *)__y_74 + 32B];
      # DEBUG D#3 => D#724
      # DEBUG this => D#3
      # DEBUG __s1 => _41
      # DEBUG __s2 => D#741
      # DEBUG __n => D#721
      # VUSE <.MEM_6>
      __r_42 = __builtin_memcmp (_41, pretmp_38, __len_64);
      # DEBUG __r => NULL
      if (__r_42 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => _17
      # DEBUG __n2 => D#742
      _43 = _17 - pretmp_27;
      __d_44 = (const difference_type) _43;
      # DEBUG __d => __d_44
      if (__d_44 > 2147483647)
        goto <bb 12>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_13 bb_10 })
    {
      <bb 9>:
      if (__d_44 < -2147483648)
        goto <bb 13>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_45 = (int) _43;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_46 = PHI <__r_42(7), __r_45(10)>
      # DEBUG __r => __r_46
      # DEBUG D#730 => {CLOBBER}
      # DEBUG __size => D#730
      # DEBUG D#731 => {CLOBBER}
      # DEBUG __osize => D#731
      if (__r_46 >= 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_8 }, succs = {bb_33 })
    {
      <bb 12>:

    }
    bb_33 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 33>:
      # DEBUG __r => NULL
      # DEBUG __y => __y_74
      # VUSE <.MEM_6>
      __y_30 = MEM[(struct _Rb_tree_node_base * *)__y_74 + 16B];
      # DEBUG D#155 => __y_74
      # DEBUG __x => D#155
      # DEBUG __x => NULL
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_9 }, succs = {bb_32 })
    {
      <bb 13>:

    }
    bb_32 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 32>:
      # DEBUG __r => NULL
      # VUSE <.MEM_6>
      __y_31 = MEM[(struct _Rb_tree_node_base * *)__y_74 + 24B];
      # DEBUG D#156 => __y_74
      # DEBUG __x => D#156
      # DEBUG __x => NULL
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

std::__cxx11::string Configuration::GetStr(const string&) const (const struct ConfigurationD.32032 * const thisD.35955, const struct stringD.2845 & fieldD.35953)
Eh tree:
   3 cleanup land:{2,<L4>}
{
  const struct _Rb_tree_node_baseD.27676 * SR.1206D.56425;
  const struct _Rb_tree_node_baseD.27676 * SR.1205D.56424;
  size_typeD.11502 __dnewD.56397;
  const size_typeD.11502 __sizeD.56381;
  const size_typeD.11502 __osizeD.56382;
  const size_typeD.11502 __lenD.56383;
  intD.9 __rD.56384;
  const difference_typeD.11503 __dD.56387;
  intD.9 D.56393;
  const size_typeD.11502 __sizeD.56366;
  const size_typeD.11502 __osizeD.56367;
  const size_typeD.11502 __lenD.56368;
  intD.9 __rD.56369;
  const difference_typeD.11503 __dD.56372;
  intD.9 D.56378;
  struct const_iteratorD.32576 D.56363;
  const struct _Rb_tree_nodeD.32262 * __yD.56353;
  const struct _Rb_tree_node_baseD.27676 * SR.926D.50958;
  struct const_iteratorD.32848 D.50919;
  struct basic_stringD.2844 D.35961;
  charD.10 * _2;
  charD.10 * const _5;
  const size_typeD.11502 _7;
  charD.10 * _15;
  charD.10 * const _16;
  const size_typeD.11502 _17;
  const size_typeD.11502 pretmp_27;
  charD.10 * const pretmp_38;
  charD.10 * const _41;
  long unsigned intD.14 _43;
  const size_typeD.11502 _49;
  charD.10 * const _52;
  long unsigned intD.14 _55;
  boolD.2757 _59;
  charD.10 * _65;
  long unsigned intD.14 __dnew.111_66;
  const char_typeD.6439 _68;
  charD.10 * _71;
  charD.10 * const prephitmp_73;
  charD.10 * const pretmp_86;
  size_typeD.11502 prephitmp_87;
  size_typeD.11502 pretmp_88;
  boolD.2757 _103;
  boolD.2757 _126;
  charD.10 * const _127;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50920 => &matchD.35957
  # DEBUG match$_M_nodeD.50954 => 0B
  # DEBUG D#384ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50916 => D#384ptD.0
  # DEBUG __xD.50917 => field_4(D)
  # DEBUG D#723ptD.0 => &MEM[(const struct mapD.32040 *)this_3(D) + 40B]._M_tD.32259
  # DEBUG thisD.56339 => D#723ptD.0
  # DEBUG __kD.56340 => field_4(D)
  # DEBUG thisD.56350 => D#723ptD.0
  # PT = nonlocal 
  __y_25 = &MEM[(const struct _Rb_treeD.32258 *)this_3(D) + 40B]._M_implD.32337._M_headerD.32503;
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  __y_26 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_3(D) + 56B];
  # DEBUG D#70ptD.0 => D#723ptD.0
  # DEBUG thisD.48900 => D#70ptD.0
  # DEBUG D#212ptD.0 => D#723ptD.0
  # DEBUG __xD.56354 => NULL
  # DEBUG __yD.56353 => NULL
  # DEBUG __kD.56352 => field_4(D)
  # DEBUG __yD.56353 => __y_25
  # DEBUG __xD.56354 => __y_26
  if (__y_26 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1(D)>
  pretmp_27 = MEM[(long unsigned intD.14 *)field_4(D) + 8B];
  # VUSE <.MEM_1(D)>
  # PT = nonlocal escaped 
  pretmp_38 = MEM[(charD.10 * *)field_4(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_128 = PHI <.MEM_1(D)(2), .MEM_6(31), .MEM_6(17), .MEM_6(19)>
  # DEBUG thisD.48914 => D#723ptD.0
  # DEBUG thisD.48916 => NULL
  # DEBUG __xD.48915 => __y_25
  # DEBUG D#213ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48918 => D#213ptD.0
  # DEBUG match$_M_nodeD.50954 => __y_25
  # DEBUG D#385ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50912 => D#385ptD.0
  # DEBUG D#71ptD.0 => &D#385ptD.0->_M_tD.32259
  # DEBUG thisD.50913 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => __y_25
  # DEBUG thisD.50909 => &matchD.35957
  # DEBUG __xD.50910 => &D.35959
  # DEBUG D#213ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48918 => D#213ptD.0
  # DEBUG match$_M_nodeD.50954 => __y_25
  # DEBUG D#385ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50912 => D#385ptD.0
  # DEBUG D#71ptD.0 => &D#385ptD.0->_M_tD.32259
  # DEBUG thisD.50913 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => __y_25
  # DEBUG thisD.50909 => &matchD.35957
  # DEBUG __xD.50910 => &D.35959
  # .MEM_11 = VDEF <.MEM_128>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  D.35961 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown string field: ", field_4(D)); [return slot optimization]
  [LP 2] # .MEM_12 = VDEF <.MEM_11>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_3(D), &D.35961, 0);
;;    succ:       25 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_36 = PHI <__y_30(33), __y_31(32)>
  # PT = nonlocal escaped 
  # __y_35 = PHI <__y_74(33), __y_50(32)>
  # DEBUG __yD.56353 => __y_35
  # DEBUG __xD.56354 => __y_36
  if (__y_36 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_6 = PHI <.MEM_1(D)(3), .MEM_6(6)>
  # PT = nonlocal escaped 
  # __y_74 = PHI <__y_26(3), __y_36(6)>
  # PT = nonlocal escaped 
  # __y_50 = PHI <__y_25(3), __y_35(6)>
  # DEBUG __yD.56353 => __y_50
  # DEBUG __xD.56354 => __y_74
  # DEBUG __xD.56355 => __y_74
  # DEBUG __xD.48708 => __y_74
  # DEBUG thisD.48709 => __y_74
  # DEBUG D#204ptD.0 => &__y_74->_M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.56357 => D#204ptD.0
  # DEBUG thisD.56356 => D#149ptD.0
  # DEBUG D#724ptD.0 => &MEM[(const struct pairD.32038 &)__y_74 + 32].firstD.35538
  # DEBUG D#210ptD.0 => &D#211ptD.0->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#210ptD.0
  # DEBUG __xD.56360 => D#724ptD.0
  # DEBUG __yD.56359 => field_4(D)
  # DEBUG thisD.56358 => D#203ptD.0
  # DEBUG __lhsD.56362 => D#724ptD.0
  # DEBUG __rhsD.56361 => field_4(D)
  # DEBUG thisD.56364 => D#724ptD.0
  # DEBUG __strD.56365 => field_4(D)
  # VUSE <.MEM_6>
  _17 = MEM[(long unsigned intD.14 *)__y_74 + 40B];
  # DEBUG D#2ptD.0 => D#724ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56366 => _17
  # DEBUG D#742ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56367 => D#742ptD.0
  # DEBUG __aD.56374 => &__sizeD.56366
  # DEBUG __bD.56373 => &__osizeD.56367
  __len_64 = MIN_EXPR <_17, pretmp_27>;
  # DEBUG __lenD.56368 => D#721ptD.0
  # DEBUG thisD.48671 => field_4(D)
  # DEBUG D#741ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _41 = MEM[(charD.10 * *)__y_74 + 32B];
  # DEBUG D#3ptD.0 => D#724ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56377 => _41
  # DEBUG __s2D.56376 => D#741ptD.0
  # DEBUG __nD.56375 => D#721ptD.0
  # VUSE <.MEM_6>
  # USE = nonlocal escaped 
  __r_42 = memcmpD.989 (_41, pretmp_38, __len_64);
  # DEBUG __rD.56369 => NULL
  if (__r_42 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56371 => _17
  # DEBUG __n2D.56370 => D#742ptD.0
  # RANGE [0, 18446744073709551615]
  _43 = _17 - pretmp_27;
  __d_44 = (const difference_typeD.11503) _43;
  # DEBUG __dD.56372 => __d_44
  if (__d_44 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_44 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_45 = (intD.9) _43;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_46 = PHI <__r_42(7), __r_45(10)>
  # DEBUG __rD.56369 => __r_46
  # DEBUG D#730ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56366 => D#730ptD.0
  # DEBUG D#731ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56367 => D#731ptD.0
  if (__r_46 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 33, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       33 [100.0%]  (FALLTHRU)

;;   basic block 33, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.56369 => NULL
  # DEBUG __yD.56353 => __y_74
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  __y_30 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_74 + 16B];
  # DEBUG D#155ptD.0 => __y_74
  # DEBUG __xD.48859 => D#155ptD.0
  # DEBUG __xD.56354 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 33, next block 32, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       32 [100.0%]  (FALLTHRU)

;;   basic block 32, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.56369 => NULL
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  __y_31 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__y_74 + 24B];
  # DEBUG D#156ptD.0 => __y_74
  # DEBUG __xD.48858 => D#156ptD.0
  # DEBUG __xD.56354 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 32, next block 31, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_72 = PHI <__y_35(5)>
;;    succ:       31 [100.0%]  (FALLTHRU)

;;   basic block 31, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.48857 => NULL
  # DEBUG __xD.48856 => __y_72
  # DEBUG __j$_M_nodeD.48918 => __y_72
  # DEBUG thisD.48880 => D#723ptD.0
  # DEBUG thisD.48882 => NULL
  # DEBUG __xD.48881 => __y_25
  # DEBUG thisD.48877 => &__jD.56341
  # DEBUG __xD.48878 => NULL
  if (__y_25 == __y_72)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 31, next block 16, flags: (NEW, REACHABLE)
;;    pred:       31 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.56342 => __y_72
  # DEBUG __xD.48170 => __y_72
  # DEBUG thisD.48171 => __y_72
  # DEBUG D#150ptD.0 => &__y_72->_M_value_fieldD.38939
  # DEBUG __rD.47608 => D#150ptD.0
  # DEBUG __xD.56344 => D#150ptD.0
  # DEBUG thisD.56343 => D#149ptD.0
  # DEBUG D#725ptD.0 => &MEM[(const struct pairD.32038 &)__y_72 + 32].firstD.35538
  # DEBUG D#214ptD.0 => &MEM[(const struct _Rb_treeD.32258 *)D#723ptD.0]._M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#214ptD.0
  # DEBUG __xD.56347 => field_4(D)
  # DEBUG __yD.56346 => D#725ptD.0
  # DEBUG thisD.56345 => D#203ptD.0
  # DEBUG __lhsD.56349 => field_4(D)
  # DEBUG __rhsD.56348 => D#725ptD.0
  # DEBUG thisD.56379 => field_4(D)
  # DEBUG __strD.56380 => D#725ptD.0
  # DEBUG D#740ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.56381 => D#740ptD.0
  # VUSE <.MEM_6>
  _49 = MEM[(long unsigned intD.14 *)__y_72 + 40B];
  # DEBUG D#2ptD.0 => D#725ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.56382 => _49
  # DEBUG __aD.56389 => &__sizeD.56381
  # DEBUG __bD.56388 => &__osizeD.56382
  __len_100 = MIN_EXPR <pretmp_27, _49>;
  # DEBUG __lenD.56383 => D#722ptD.0
  # DEBUG thisD.48671 => D#725ptD.0
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _52 = MEM[(charD.10 * *)__y_72 + 32B];
  # DEBUG D#3ptD.0 => D#725ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#739ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.56392 => D#739ptD.0
  # DEBUG __s2D.56391 => _52
  # DEBUG __nD.56390 => D#722ptD.0
  # VUSE <.MEM_6>
  # USE = nonlocal escaped 
  __r_54 = memcmpD.989 (pretmp_38, _52, __len_100);
  # DEBUG __rD.56384 => NULL
  if (__r_54 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.56386 => D#740ptD.0
  # DEBUG __n2D.56385 => _49
  # RANGE [0, 18446744073709551615]
  _55 = pretmp_27 - _49;
  __d_56 = (const difference_typeD.11503) _55;
  # DEBUG __dD.56387 => __d_56
  if (__d_56 > 2147483647)
    goto <bb 30>;
  else
    goto <bb 17>;
;;    succ:       30 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_56 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_57 = (intD.9) _55;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_58 = PHI <__r_54(15), __r_57(18)>
  # DEBUG __rD.56384 => __r_58
  # DEBUG D#736ptD.0 => {CLOBBER}
  # DEBUG __sizeD.56381 => D#736ptD.0
  # DEBUG D#737ptD.0 => {CLOBBER}
  # DEBUG __osizeD.56382 => D#737ptD.0
  if (__r_58 < 0)
    goto <bb 4>;
  else
    goto <bb 30>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       29 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_90 = VDEF <.MEM_89>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  _65 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_9(D), &__dnewD.56397, 0);
  # DEBUG D#6ptD.0 => _9(D)
  # DEBUG __pD.56416 => _65
  # DEBUG thisD.56415 => D#6ptD.0
  # .MEM_91 = VDEF <.MEM_90>
  MEM[(charD.10 * *)_9(D)] = _65;
  # VUSE <.MEM_91>
  __dnew.111_66 = __dnewD.56397;
  # DEBUG D#7ptD.0 => _9(D)
  # DEBUG __capacityD.56418 => __dnew.111_66
  # DEBUG thisD.56417 => D#7ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(size_typeD.11502 *)_9(D) + 16B] = __dnew.111_66;
  # DEBUG D#3ptD.0 => _9(D)
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56400 => _65
  # DEBUG __k1D.56399 => _5
  # DEBUG __k2D.56398 => _15
  # DEBUG __dD.56403 => _65
  # DEBUG __sD.56402 => _5
  # DEBUG __nD.56401 => _7
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 638, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       29 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => _9(D)
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56400 => _2
  # DEBUG __k1D.56399 => _5
  # DEBUG __k2D.56398 => _15
  # DEBUG __dD.56403 => _2
  # DEBUG __sD.56402 => _5
  # DEBUG __nD.56401 => _7
  if (_7 == 1)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_89>
  _68 = MEM[(const char_typeD.6439 &)_5];
  # DEBUG D#13ptD.0 => _5
  # DEBUG __c1D.56408 => _2
  # DEBUG __c2D.56407 => D#13ptD.0
  # .MEM_93 = VDEF <.MEM_89>
  MEM[(char_typeD.6439 &)_2] = _68;
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 559, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _127 = PHI <_2(21), _65(20)>
  # .MEM_124 = PHI <.MEM_89(21), .MEM_92(20)>
  # DEBUG D#3ptD.0 => _9(D)
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56400 => _127
  # DEBUG __k1D.56399 => _5
  # DEBUG __k2D.56398 => _15
  # DEBUG __dD.56403 => _127
  # DEBUG __sD.56402 => _5
  # DEBUG __nD.56401 => _7
  # DEBUG __s1D.56406 => _127
  # DEBUG __s2D.56405 => _5
  # DEBUG __nD.56404 => _7
  # .MEM_94 = VDEF <.MEM_124>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  memcpyD.992 (_127, _5, _7);
  # VUSE <.MEM_94>
  pretmp_88 = __dnewD.56397;
  # VUSE <.MEM_94>
  pretmp_86 = MEM[(charD.10 * *)_9(D)];
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_93(22), .MEM_94(23)>
  # prephitmp_87 = PHI <_7(22), pretmp_88(23)>
  # PT = nonlocal escaped 
  # prephitmp_73 = PHI <_2(22), pretmp_86(23)>
  # DEBUG D#738ptD.0 => __dnewD.56397
  # DEBUG thisD.56410 => _9(D)
  # DEBUG __nD.56409 => D#738ptD.0
  # DEBUG D#5ptD.0 => _9(D)
  # DEBUG __lengthD.56412 => D#738ptD.0
  # DEBUG thisD.56411 => D#5ptD.0
  # .MEM_95 = VDEF <.MEM_75>
  MEM[(size_typeD.11502 *)_9(D) + 8B] = prephitmp_87;
  # DEBUG D#3ptD.0 => _9(D)
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped 
  _71 = prephitmp_73 + prephitmp_87;
  # DEBUG __c1D.56414 => _71
  # DEBUG __c2D.56413 => D#13ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  MEM[(char_typeD.6439 &)_71] = 0;
  # .MEM_97 = VDEF <.MEM_96>
  __dnewD.56397 ={v} {CLOBBER};
  # DEBUG D#388ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.50954 => D#388ptD.0
  # VUSE <.MEM_97>
  return _9(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L4>: [LP 2]
  # DEBUG thisD.50939 => &D.35961
  # DEBUG thisD.50940 => &D.35961
  # DEBUG thisD.50949 => &D.35961
  # VUSE <.MEM_12>
  # PT = nonlocal escaped 
  _16 = MEM[(charD.10 * *)&D.35961];
  # DEBUG D#3ptD.0 => &D.35961
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50950 => &D.35961
  if (&D.35961.D.11539._M_local_bufD.11541 != _16)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35961.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.50942 => &D.35961
  # DEBUG __sizeD.50941 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35961
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35961
  # DEBUG D#183ptD.0 => &D.35961._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.50945 => _16
  # DEBUG __aD.50943 => D#181ptD.0
  # DEBUG __nD.50944 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.50948 => _16
  # DEBUG thisD.50946 => D#177ptD.0
  # DEBUG D.50947 => D#178ptD.0
  # .MEM_20 = VDEF <.MEM_12>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_12(25), .MEM_20(26)>
  # DEBUG D#187ptD.0 => &D.35961._M_dataplusD.11519
  # DEBUG thisD.50951 => D#187ptD.0
  # DEBUG thisD.50952 => D#187ptD.0
  # DEBUG thisD.50953 => D#187ptD.0
  # .MEM_14 = VDEF <.MEM_13>
  D.35961 ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 28, loop depth 0, count 0, freq 115, maybe hot
;;   Invalid sum of incoming frequencies 765, should be 115
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       30 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_98 = VDEF <.MEM_18>
  # USE = nonlocal null { D.35961 D.56397 } (escaped)
  # CLB = nonlocal null { D.35961 D.56397 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 29, loop depth 0, count 0, freq 899, maybe hot
;;   Invalid sum of incoming frequencies 135, should be 899
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       30 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56420 => _5
  # DEBUG __lastD.56419 => _15
  # DEBUG D#393ptD.0 => &__firstD.56420
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56422 => _5
  # DEBUG __lastD.56421 => _15
  # .MEM_89 = VDEF <.MEM_18>
  __dnewD.56397 = _7;
  if (_7 > 15)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 29, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.56384 => NULL
  # DEBUG D#213ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48918 => D#213ptD.0
  # DEBUG match$_M_nodeD.50954 => __y_72
  # DEBUG D#385ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50912 => D#385ptD.0
  # DEBUG D#71ptD.0 => &D#385ptD.0->_M_tD.32259
  # DEBUG thisD.50913 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => __y_25
  # DEBUG thisD.50909 => &matchD.35957
  # DEBUG __xD.50910 => &D.35959
  # DEBUG D#213ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48918 => D#213ptD.0
  # DEBUG match$_M_nodeD.50954 => __y_72
  # DEBUG D#385ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.50912 => D#385ptD.0
  # DEBUG D#71ptD.0 => &D#385ptD.0->_M_tD.32259
  # DEBUG thisD.50913 => D#71ptD.0
  # DEBUG thisD.47583 => NULL
  # DEBUG __xD.47582 => __y_25
  # DEBUG thisD.50909 => &matchD.35957
  # DEBUG __xD.50910 => &D.35959
  # DEBUG thisD.50936 => &matchD.35957
  # DEBUG thisD.50937 => __y_72
  # DEBUG D#386ptD.0 => &__y_72->_M_value_fieldD.38939
  # DEBUG __rD.47608 => D#386ptD.0
  # DEBUG D#387ptD.0 => &MEM[(const struct pairD.32038 *)__y_72 + 32B].secondD.35539
  # DEBUG thisD.50921 => _9(D)
  # DEBUG __strD.50922 => D#387ptD.0
  # DEBUG thisD.50825 => D#387ptD.0
  # DEBUG D#380ptD.0 => &D#387ptD.0->_M_dataplusD.11519
  # DEBUG thisD.50924 => _9(D)
  # PT = nonlocal 
  _2 = &MEM[(struct basic_stringD.2844 *)_9(D)].D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)_9(D)]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.50927 => D#381ptD.0
  # DEBUG __datD.50926 => _2
  # DEBUG __aD.50925 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_18 = VDEF <.MEM_6>
  MEM[(struct _Alloc_hiderD.11518 *)_9(D)]._M_pD.11525 = _2;
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _5 = MEM[(charD.10 * *)__y_72 + 64B];
  # DEBUG D#3ptD.0 => D#387ptD.0
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_18>
  _7 = MEM[(long unsigned intD.14 *)__y_72 + 72B];
  # DEBUG D#1ptD.0 => D#387ptD.0
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _15 = _5 + _7;
  # DEBUG D#3ptD.0 => D#387ptD.0
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.50930 => _9(D)
  # DEBUG __begD.50929 => _5
  # DEBUG __endD.50928 => _15
  # DEBUG thisD.50934 => _9(D)
  # DEBUG __begD.50933 => _5
  # DEBUG __endD.50932 => _15
  # DEBUG thisD.56394 => _9(D)
  # DEBUG __begD.56395 => _5
  # DEBUG __endD.56396 => _15
  # DEBUG __ptrD.51229 => _5
  # RANGE [0, 1]
  _59 = _15 != 0B;
  # RANGE [0, 1]
  _126 = _5 == 0B;
  # RANGE [0, 1]
  _103 = _59 & _126;
  if (_103 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [15.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*] (_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_, funcdef_no=2101, decl_uid=36651, cgraph_uid=787, symbol_order=789)


Pass statistics:
----------------


Global statistics (BBS:130, LOOPS:7, CONDITIONS:54, STMTS:1273)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*] (struct vectorD.35279 * const thisD.36652, struct iteratorD.36291 __positionD.36653, const struct basic_stringD.2844 & __xD.36654)
Eh tree:
   8 must_not_throw
   7 cleanup land:{4,<L10>}
   6 try land:{12,<L21>},{10,<L18>},{9,<L17>},{3,<L24>} catch:{}
     14 try land:{14,<L23>},{8,<L26>} catch:{}
     13 cleanup land:{7,<L16>}
     12 must_not_throw
     11 try land:{13,<L22>},{6,<L25>} catch:{}
     10 cleanup land:{5,<L13>}
     9 must_not_throw
   2 cleanup land:{11,<L19>},{2,<L20>}
{
  size_typeD.11502 __dnewD.56671;
  struct basic_stringD.2844 * D.56664;
  struct basic_stringD.2844 * __firstD.56623;
  struct basic_stringD.2844 * __resultD.56625;
  size_typeD.11502 __dnewD.56597;
  struct basic_stringD.2844 * D.56590;
  struct basic_stringD.2844 * __firstD.56549;
  struct basic_stringD.2844 * __resultD.56551;
  size_typeD.11502 __dnewD.56523;
  const long unsigned intD.14 D.56519;
  const size_typeD.36299 __lenD.56513;
  size_typeD.36299 D.56518;
  size_typeD.36299 __nD.56511;
  struct basic_stringD.2844 * D.56509;
  size_typeD.11502 __dnewD.56475;
  size_typeD.11502 __dnewD.56446;
  struct basic_stringD.2844 * const __positionD.52013;
  struct basic_stringD.2844 * __firstD.51917;
  difference_typeD.39621 __nD.51811;
  struct basic_stringD.2844 * __lastD.51796;
  struct basic_stringD.2844 * __resultD.51797;
  struct basic_stringD.2844 * __new_finishD.40500;
  struct basic_stringD.2844 __x_copyD.40484;
  struct basic_stringD.2844 * _8;
  struct basic_stringD.2844 * _9;
  size_typeD.11502 pretmp_10;
  struct basic_stringD.2844 * _12;
  long intD.12 __last.176_15;
  struct basic_stringD.2844 * _16;
  long intD.12 _19;
  long intD.12 __first.177_20;
  charD.10 * _21;
  charD.10 * const _23;
  boolD.2757 _25;
  charD.10 * _27;
  struct basic_stringD.2844 * const _29;
  boolD.2757 _30;
  long unsigned intD.14 _31;
  struct basic_stringD.2844 * _32;
  const size_typeD.11502 _33;
  charD.10 * const _34;
  charD.10 * _37;
  struct basic_stringD.2844 * _38;
  const size_typeD.11502 _39;
  charD.10 * const _40;
  struct basic_stringD.2844 * prephitmp_44;
  struct basic_stringD.2844 * _48;
  voidD.45 * _50;
  charD.10 * _53;
  charD.10 * const _64;
  charD.10 * const _65;
  const size_typeD.11502 _66;
  charD.10 * _67;
  size_typeD.11502 pretmp_69;
  boolD.2757 _71;
  charD.10 * const _73;
  const charD.10 * _74;
  charD.10 * const _76;
  charD.10 * const _78;
  const charD.10 * _79;
  struct basic_stringD.2844 * pretmp_100;
  struct basic_stringD.2844 * prephitmp_101;
  long unsigned intD.14 prephitmp_104;
  charD.10[16] * pretmp_106;
  charD.10[16] * pretmp_107;
  size_typeD.11502 prephitmp_109;
  charD.10[16] * prephitmp_113;
  struct basic_stringD.2844 * pretmp_114;
  struct basic_stringD.2844 * prephitmp_115;
  long unsigned intD.14 prephitmp_133;
  charD.10 * _134;
  long unsigned intD.14 __dnew.111_135;
  const char_typeD.6439 _137;
  charD.10 * _140;
  charD.10 * const prephitmp_141;
  long intD.12 _144;
  charD.10 * _145;
  long unsigned intD.14 __dnew.111_146;
  const char_typeD.6439 _148;
  charD.10 * _151;
  struct basic_stringD.2844 * _152;
  boolD.2757 _154;
  long intD.12 _155;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  voidD.45 * _160;
  boolD.2757 _161;
  size_typeD.11502 prephitmp_162;
  boolD.2757 _163;
  charD.10 * _170;
  long unsigned intD.14 __dnew.111_171;
  const char_typeD.6439 _173;
  charD.10 * _176;
  charD.10 * const pretmp_177;
  charD.10 * _178;
  charD.10 * const _179;
  const size_typeD.11502 _180;
  charD.10 * _181;
  voidD.45 * _184;
  charD.10 * const pretmp_185;
  charD.10 * const _186;
  const charD.10 * _187;
  charD.10 * _193;
  long unsigned intD.14 __dnew.111_194;
  const char_typeD.6439 _196;
  charD.10 * _199;
  size_typeD.11502 pretmp_200;
  charD.10 * _202;
  charD.10 * const _203;
  const size_typeD.11502 _204;
  charD.10 * _205;
  voidD.45 * _208;
  charD.10 * const pretmp_209;
  charD.10 * const _210;
  const charD.10 * _211;
  charD.10 * _217;
  long unsigned intD.14 __dnew.111_218;
  const char_typeD.6439 _220;
  charD.10 * _223;
  charD.10 * const prephitmp_226;
  size_typeD.11502 pretmp_229;
  voidD.45 * _232;
  charD.10 * const prephitmp_236;
  size_typeD.11502 prephitmp_239;
  struct basic_stringD.2844 * pretmp_243;
  charD.10 * const _270;
  long intD.12 _271;
  charD.10 * const _322;
  size_typeD.11502 prephitmp_346;
  charD.10 * const prephitmp_358;
  boolD.2757 _362;
  charD.10 * const prephitmp_364;
  long unsigned intD.14 pretmp_367;
  charD.10 * const _378;
  charD.10 * const _384;
  charD.10 * const _385;
  size_typeD.11502 pretmp_389;
  boolD.2757 _393;
  boolD.2757 _394;
  long intD.12 _395;
  boolD.2757 _396;
  boolD.2757 _397;
  charD.10 * const pretmp_398;
  boolD.2757 _399;
  boolD.2757 _400;
  boolD.2757 _401;
  long intD.12 _402;
  charD.10 * const pretmp_403;
  size_typeD.11502 prephitmp_405;
  long intD.12 _406;
  long intD.12 _407;
  boolD.2757 _408;

;;   basic block 2, loop depth 0, count 0, freq 483, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_6(D)>
  # PT = nonlocal 
  __position_28 = MEM[(struct __normal_iteratorD.36292 *)&__positionD.36653];
  # DEBUG __positionD.52013 => __position_28
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _8 = this_7(D)->D.36723._M_implD.36214._M_finishD.36217;
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _9 = this_7(D)->D.36723._M_implD.36214._M_end_of_storageD.36218;
  if (_8 != _9)
    goto <bb 3>;
  else
    goto <bb 25>;
;;    succ:       3 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#420ptD.0 => _8 + 18446744073709551584
  # DEBUG D#433ptD.0 => &this_7(D)->D.36723._M_implD.36214
  # DEBUG D#392ptD.0 => D#433ptD.0
  # DEBUG __pD.51760 => _8
  # DEBUG __argD.51761 => D#420ptD.0
  # DEBUG __aD.51762 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#390ptD.0 => D#391ptD.0
  # DEBUG __pD.51765 => _8
  # DEBUG __valD.51764 => D#420ptD.0
  # DEBUG thisD.51763 => D#390ptD.0
  # DEBUG D#14ptD.0 => 32
  # DEBUG __pD.51034 => _8
  # DEBUG D.51035 => D#14ptD.0
  if (_8 != 0B)
    goto <bb 4>;
  else
    goto <bb 10>;
;;    succ:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.51767 => _8
  # DEBUG __strD.51766 => D#420ptD.0
  # DEBUG thisD.50825 => D#420ptD.0
  # DEBUG D#380ptD.0 => &D#420ptD.0->_M_dataplusD.11519
  # DEBUG thisD.51768 => _8
  # PT = nonlocal escaped 
  _53 = &_8->D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &_8->_M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.51771 => D#381ptD.0
  # DEBUG __datD.51770 => _53
  # DEBUG __aD.51769 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_92 = VDEF <.MEM_6(D)>
  MEM[(struct _Alloc_hiderD.11518 *)_8]._M_pD.11525 = _53;
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _40 = MEM[(charD.10 * *)_8 + -32B];
  # DEBUG D#3ptD.0 => D#420ptD.0
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_92>
  _39 = MEM[(long unsigned intD.14 *)_8 + -24B];
  # DEBUG D#1ptD.0 => D#420ptD.0
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _37 = _40 + _39;
  # DEBUG D#3ptD.0 => D#420ptD.0
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.51774 => _8
  # DEBUG __begD.51773 => _40
  # DEBUG __endD.51772 => _37
  # DEBUG thisD.51778 => _8
  # DEBUG __begD.51777 => _40
  # DEBUG __endD.51776 => _37
  # DEBUG thisD.56443 => _8
  # DEBUG __begD.56444 => _40
  # DEBUG __endD.56445 => _37
  # DEBUG __ptrD.51229 => _40
  # RANGE [0, 1]
  _163 = _37 != 0B;
  # RANGE [0, 1]
  _362 = _40 == 0B;
  # RANGE [0, 1]
  _401 = _163 & _362;
  if (_401 != 0)
    goto <bb 115>;
  else
    goto <bb 116>;
;;    succ:       115 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                116 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 91, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       116 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_246 = VDEF <.MEM_245>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _134 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_8, &__dnewD.56446, 0);
  # DEBUG D#6ptD.0 => _8
  # DEBUG __pD.56465 => _134
  # DEBUG thisD.56464 => D#6ptD.0
  # .MEM_247 = VDEF <.MEM_246>
  MEM[(charD.10 * *)_8] = _134;
  # VUSE <.MEM_247>
  __dnew.111_135 = __dnewD.56446;
  # DEBUG D#7ptD.0 => _8
  # DEBUG __capacityD.56467 => __dnew.111_135
  # DEBUG thisD.56466 => D#7ptD.0
  # .MEM_248 = VDEF <.MEM_247>
  MEM[(size_typeD.11502 *)_8 + 16B] = __dnew.111_135;
  # DEBUG D#3ptD.0 => _8
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56449 => _134
  # DEBUG __k1D.56448 => _40
  # DEBUG __k2D.56447 => _37
  # DEBUG __dD.56452 => _134
  # DEBUG __sD.56451 => _40
  # DEBUG __nD.56450 => _39
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 223, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       116 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => _8
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56449 => _53
  # DEBUG __k1D.56448 => _40
  # DEBUG __k2D.56447 => _37
  # DEBUG __dD.56452 => _53
  # DEBUG __sD.56451 => _40
  # DEBUG __nD.56450 => _39
  if (_39 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 119, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_245>
  _137 = MEM[(const char_typeD.6439 &)_40];
  # DEBUG D#13ptD.0 => _40
  # DEBUG __c1D.56457 => _53
  # DEBUG __c2D.56456 => D#13ptD.0
  # .MEM_249 = VDEF <.MEM_245>
  MEM[(char_typeD.6439 &)_53] = _137;
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 195, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _270 = PHI <_53(6), _134(5)>
  # .MEM_386 = PHI <.MEM_245(6), .MEM_248(5)>
  # DEBUG D#3ptD.0 => _8
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56449 => _270
  # DEBUG __k1D.56448 => _40
  # DEBUG __k2D.56447 => _37
  # DEBUG __dD.56452 => _270
  # DEBUG __sD.56451 => _40
  # DEBUG __nD.56450 => _39
  # DEBUG __s1D.56455 => _270
  # DEBUG __s2D.56454 => _40
  # DEBUG __nD.56453 => _39
  # .MEM_250 = VDEF <.MEM_386>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  memcpyD.992 (_270, _40, _39);
  # VUSE <.MEM_250>
  pretmp_69 = __dnewD.56446;
  # VUSE <.MEM_250>
  pretmp_403 = MEM[(charD.10 * *)_8];
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_225 = PHI <.MEM_249(7), .MEM_250(8)>
  # prephitmp_346 = PHI <_39(7), pretmp_69(8)>
  # PT = nonlocal escaped 
  # prephitmp_358 = PHI <_53(7), pretmp_403(8)>
  # DEBUG D#756ptD.0 => __dnewD.56446
  # DEBUG thisD.56459 => _8
  # DEBUG __nD.56458 => D#756ptD.0
  # DEBUG D#5ptD.0 => _8
  # DEBUG __lengthD.56461 => D#756ptD.0
  # DEBUG thisD.56460 => D#5ptD.0
  # .MEM_251 = VDEF <.MEM_225>
  MEM[(size_typeD.11502 *)_8 + 8B] = prephitmp_346;
  # DEBUG D#3ptD.0 => _8
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped 
  _140 = prephitmp_358 + prephitmp_346;
  # DEBUG __c1D.56463 => _140
  # DEBUG __c2D.56462 => D#13ptD.0
  # .MEM_252 = VDEF <.MEM_251>
  MEM[(char_typeD.6439 &)_140] = 0;
  # .MEM_253 = VDEF <.MEM_252>
  __dnewD.56446 ={v} {CLOBBER};
  # VUSE <.MEM_253>
  pretmp_243 = this_7(D)->D.36723._M_implD.36214._M_finishD.36217;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_54 = PHI <.MEM_253(9), .MEM_6(D)(3)>
  # PT = nonlocal escaped 
  # prephitmp_44 = PHI <pretmp_243(9), _8(3)>
  # PT = nonlocal escaped 
  _12 = prephitmp_44 + 32;
  # .MEM_13 = VDEF <.MEM_54>
  this_7(D)->D.36723._M_implD.36214._M_finishD.36217 = _12;
  # DEBUG thisD.51780 => &__x_copyD.40484
  # DEBUG __strD.51781 => __x_14(D)
  # DEBUG thisD.50825 => __x_14(D)
  # DEBUG D#380ptD.0 => &__x_14(D)->_M_dataplusD.11519
  # DEBUG thisD.51783 => &__x_copyD.40484
  # DEBUG D#381ptD.0 => &__x_copyD.40484._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.51786 => D#381ptD.0
  # DEBUG __datD.51785 => &__x_copyD.40484.D.11539._M_local_bufD.11541
  # DEBUG __aD.51784 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_94 = VDEF <.MEM_13>
  MEM[(struct _Alloc_hiderD.11518 *)&__x_copyD.40484]._M_pD.11525 = &__x_copyD.40484.D.11539._M_local_bufD.11541;
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _34 = MEM[(charD.10 * *)__x_14(D)];
  # DEBUG D#3ptD.0 => __x_14(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_94>
  _33 = MEM[(long unsigned intD.14 *)__x_14(D) + 8B];
  # DEBUG D#1ptD.0 => __x_14(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _27 = _34 + _33;
  # DEBUG D#3ptD.0 => __x_14(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.51789 => &__x_copyD.40484
  # DEBUG __begD.51788 => _34
  # DEBUG __endD.51787 => _27
  # DEBUG thisD.51793 => &__x_copyD.40484
  # DEBUG __begD.51792 => _34
  # DEBUG __endD.51791 => _27
  # DEBUG thisD.56472 => &__x_copyD.40484
  # DEBUG __begD.56473 => _34
  # DEBUG __endD.56474 => _27
  # DEBUG __ptrD.51229 => _34
  # RANGE [0, 1]
  _408 = _27 != 0B;
  # RANGE [0, 1]
  _161 = _34 == 0B;
  # RANGE [0, 1]
  _154 = _161 & _408;
  if (_154 != 0)
    goto <bb 115>;
  else
    goto <bb 117>;
;;    succ:       115 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                117 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 131, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       117 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_256 = VDEF <.MEM_255>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _145 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&__x_copyD.40484, &__dnewD.56475, 0);
  # DEBUG D#6ptD.0 => &__x_copyD.40484
  # DEBUG __pD.56494 => _145
  # DEBUG thisD.56493 => D#6ptD.0
  # .MEM_257 = VDEF <.MEM_256>
  MEM[(charD.10 * *)&__x_copyD.40484] = _145;
  # VUSE <.MEM_257>
  __dnew.111_146 = __dnewD.56475;
  # DEBUG D#7ptD.0 => &__x_copyD.40484
  # DEBUG __capacityD.56496 => __dnew.111_146
  # DEBUG thisD.56495 => D#7ptD.0
  # .MEM_258 = VDEF <.MEM_257>
  MEM[(size_typeD.11502 *)&__x_copyD.40484 + 16B] = __dnew.111_146;
  # DEBUG D#3ptD.0 => &__x_copyD.40484
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56478 => _145
  # DEBUG __k1D.56477 => _34
  # DEBUG __k2D.56476 => _27
  # DEBUG __dD.56481 => _145
  # DEBUG __sD.56480 => _34
  # DEBUG __nD.56479 => _33
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 319, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       117 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &__x_copyD.40484
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56478 => &__x_copyD.40484.D.11539._M_local_bufD.11541
  # DEBUG __k1D.56477 => _34
  # DEBUG __k2D.56476 => _27
  # DEBUG __dD.56481 => &__x_copyD.40484.D.11539._M_local_bufD.11541
  # DEBUG __sD.56480 => _34
  # DEBUG __nD.56479 => _33
  if (_33 == 1)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [53.4%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [46.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 170, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [53.4%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_255>
  _148 = MEM[(const char_typeD.6439 &)_34];
  # DEBUG D#13ptD.0 => _34
  # DEBUG __c1D.56486 => &__x_copyD.40484.D.11539._M_local_bufD.11541
  # DEBUG __c2D.56485 => D#13ptD.0
  # .MEM_259 = VDEF <.MEM_255>
  MEM[(char_typeD.6439 &)&__x_copyD.40484 + 16] = _148;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 280, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [46.6%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.40484 } (escaped)
  # _322 = PHI <&__x_copyD.40484.D.11539._M_local_bufD.11541(12), _145(11)>
  # .MEM_388 = PHI <.MEM_255(12), .MEM_258(11)>
  # DEBUG D#3ptD.0 => &__x_copyD.40484
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56478 => _322
  # DEBUG __k1D.56477 => _34
  # DEBUG __k2D.56476 => _27
  # DEBUG __dD.56481 => _322
  # DEBUG __sD.56480 => _34
  # DEBUG __nD.56479 => _33
  # DEBUG __s1D.56484 => _322
  # DEBUG __s2D.56483 => _34
  # DEBUG __nD.56482 => _33
  # .MEM_260 = VDEF <.MEM_388>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  memcpyD.992 (_322, _34, _33);
  # VUSE <.MEM_260>
  pretmp_10 = __dnewD.56475;
  # VUSE <.MEM_260>
  pretmp_398 = MEM[(charD.10 * *)&__x_copyD.40484];
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_227 = PHI <.MEM_259(13), .MEM_260(14)>
  # prephitmp_405 = PHI <_33(13), pretmp_10(14)>
  # PT = nonlocal escaped null { D.40484 } (escaped)
  # prephitmp_226 = PHI <&__x_copyD.40484.D.11539._M_local_bufD.11541(13), pretmp_398(14)>
  # DEBUG D#755ptD.0 => __dnewD.56475
  # DEBUG thisD.56488 => &__x_copyD.40484
  # DEBUG __nD.56487 => D#755ptD.0
  # DEBUG D#5ptD.0 => &__x_copyD.40484
  # DEBUG __lengthD.56490 => D#755ptD.0
  # DEBUG thisD.56489 => D#5ptD.0
  # .MEM_261 = VDEF <.MEM_227>
  MEM[(size_typeD.11502 *)&__x_copyD.40484 + 8B] = prephitmp_405;
  # DEBUG D#3ptD.0 => &__x_copyD.40484
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.40484 } (escaped)
  _151 = prephitmp_226 + prephitmp_405;
  # DEBUG __c1D.56492 => _151
  # DEBUG __c2D.56491 => D#13ptD.0
  # .MEM_262 = VDEF <.MEM_261>
  MEM[(char_typeD.6439 &)_151] = 0;
  # .MEM_263 = VDEF <.MEM_262>
  __dnewD.56475 ={v} {CLOBBER};
  # VUSE <.MEM_263>
  # PT = nonlocal escaped 
  _16 = this_7(D)->D.36723._M_implD.36214._M_finishD.36217;
  # PT = nonlocal escaped 
  __result_17 = _16 + 18446744073709551584;
  # PT = nonlocal escaped 
  __last_18 = _16 + 18446744073709551552;
  # DEBUG thisD.51817 => &__positionD.36653
  # DEBUG __firstD.51795 => __position_28
  # DEBUG __lastD.51796 => __last_18
  # DEBUG __resultD.51797 => __result_17
  # DEBUG __itD.51554 => __last_18
  # DEBUG __itD.49726 => __last_18
  # DEBUG __itD.51552 => __position_28
  # DEBUG __itD.49726 => __position_28
  # DEBUG __firstD.51800 => __position_28
  # DEBUG __lastD.51799 => __last_18
  # DEBUG __resultD.51798 => __result_17
  # DEBUG __itD.51530 => __result_17
  # DEBUG __itD.49729 => __result_17
  # DEBUG __itD.51528 => __last_18
  # DEBUG __itD.49729 => __last_18
  # DEBUG __itD.51526 => __position_28
  # DEBUG __itD.49729 => __position_28
  # DEBUG __firstD.51803 => NULL
  # DEBUG __lastD.51802 => NULL
  # DEBUG __resultD.51801 => NULL
  # DEBUG __simpleD.51807 => 0
  # DEBUG __firstD.51810 => NULL
  # DEBUG __lastD.51809 => NULL
  # DEBUG __resultD.51808 => NULL
  __last.176_15 = (long intD.12) __last_18;
  __first.177_20 = (long intD.12) __position_28;
  _19 = __last.176_15 - __first.177_20;
  # RANGE [-288230376151711744, 288230376151711743]
  __n_57 = _19 /[ex] 32;
  # DEBUG __nD.51811 => __n_57
  # DEBUG __nD.51811 => __n_57
  # DEBUG __resultD.51808 => __result_17
  # DEBUG __lastD.51809 => __last_18
  if (__n_57 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_392 = PHI <.MEM_263(15), .MEM_96(19)>
  # DEBUG thisD.51824 => &__positionD.36653
  # DEBUG thisD.51819 => NULL
  # DEBUG __strD.51820 => &__x_copyD.40484
  # DEBUG thisD.51822 => NULL
  # DEBUG __strD.51821 => &__x_copyD.40484
  [LP 2] # .MEM_97 = VDEF <.MEM_392>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (__position_28, &__x_copyD.40484);
  goto <bb 22>;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-288230376151711744, 288230376151711743]
  # __n_131 = PHI <__n_57(17), __n_63(20)>
  # PT = nonlocal escaped 
  # __last_132 = PHI <__last_18(17), __last_60(20)>
  # PT = nonlocal escaped 
  # __result_166 = PHI <__result_17(17), __result_62(20)>
  # .MEM_167 = PHI <.MEM_263(17), .MEM_96(20)>
  # DEBUG __nD.51811 => __n_131
  # DEBUG __resultD.51808 => __result_166
  # DEBUG __lastD.51809 => __last_132
  # PT = nonlocal escaped 
  __last_60 = __last_132 + 18446744073709551584;
  # DEBUG __lastD.51809 => __last_60
  # PT = nonlocal escaped 
  __result_62 = __result_166 + 18446744073709551584;
  # DEBUG __resultD.51808 => __result_62
  # DEBUG thisD.51813 => __result_62
  # DEBUG __strD.51812 => __last_60
  # DEBUG thisD.51815 => __result_62
  # DEBUG __strD.51814 => __last_60
  [LP 11] # .MEM_96 = VDEF <.MEM_167>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (__result_62, __last_60);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                94 (EH,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 288230376151711742] NONZERO 288230376151711743
  __n_63 = __n_131 + -1;
  # DEBUG __nD.51811 => __n_63
  # DEBUG __nD.51811 => __n_63
  # DEBUG __resultD.51808 => __result_62
  # DEBUG __lastD.51809 => __last_60
  if (__n_63 <= 0)
    goto <bb 16>;
  else
    goto <bb 20>;
;;    succ:       16 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L20>: [LP 2]
  goto <bb 95> (<L3>);
;;    succ:       95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.51826 => &__x_copyD.40484
  # DEBUG thisD.51827 => &__x_copyD.40484
  # DEBUG thisD.51836 => &__x_copyD.40484
  # VUSE <.MEM_97>
  # PT = nonlocal escaped null { D.40484 } (escaped)
  _64 = MEM[(charD.10 * *)&__x_copyD.40484];
  # DEBUG D#3ptD.0 => &__x_copyD.40484
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51837 => &__x_copyD.40484
  if (&__x_copyD.40484.D.11539._M_local_bufD.11541 != _64)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 353, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => __x_copyD.40484.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51829 => &__x_copyD.40484
  # DEBUG __sizeD.51828 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &__x_copyD.40484
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &__x_copyD.40484
  # DEBUG D#183ptD.0 => &__x_copyD.40484._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51832 => _64
  # DEBUG __aD.51830 => D#181ptD.0
  # DEBUG __nD.51831 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51835 => _64
  # DEBUG thisD.51833 => D#177ptD.0
  # DEBUG D.51834 => D#178ptD.0
  # .MEM_98 = VDEF <.MEM_97>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (_64);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_82 = PHI <.MEM_97(22), .MEM_98(23)>
  # DEBUG D#187ptD.0 => &__x_copyD.40484._M_dataplusD.11519
  # DEBUG thisD.51838 => D#187ptD.0
  # DEBUG thisD.51839 => D#187ptD.0
  # DEBUG thisD.51840 => D#187ptD.0
  # .MEM_22 = VDEF <.MEM_82>
  __x_copyD.40484 ={v} {CLOBBER};
  goto <bb 93>;
;;    succ:       93 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       2 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56510 => this_7(D)
  # DEBUG __nD.56511 => 1
  # DEBUG __nD.56511 => 1
  # DEBUG __sD.56512 => "vector::_M_insert_aux"
  # DEBUG D#408ptD.0 => this_7(D)
  # DEBUG thisD.51590 => D#408ptD.0
  # DEBUG D#407ptD.0 => D#408ptD.0
  # DEBUG D#406ptD.0 => &D#407ptD.0->D.36723
  # DEBUG thisD.51580 => D#406ptD.0
  # DEBUG __aD.51572 => D#405ptD.0
  # DEBUG D#404ptD.0 => D#405ptD.0
  # DEBUG D#403ptD.0 => D#404ptD.0
  # DEBUG thisD.51563 => D#403ptD.0
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _29 = MEM[(struct basic_stringD.2844 * *)this_7(D)];
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG thisD.56516 => D#38ptD.0
  # DEBUG thisD.56517 => D#38ptD.0
  _155 = (long intD.12) _8;
  _156 = (long intD.12) _29;
  _157 = _155 - _156;
  # RANGE [-288230376151711744, 288230376151711743]
  _158 = _157 /[ex] 32;
  # RANGE ~[288230376151711744, 18158513697557839871]
  _159 = (const long unsigned intD.14) _158;
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG thisD.51608 => D#38ptD.0
  # DEBUG thisD.51607 => D#38ptD.0
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG thisD.51603 => D#38ptD.0
  # DEBUG thisD.51602 => D#38ptD.0
  # DEBUG __aD.56515 => &D.56519
  # DEBUG __bD.56514 => &__nD.56511
  if (_159 == 0)
    goto <bb 119>;
  else
    goto <bb 26>;
;;    succ:       119 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __len_164 = _159 + _159;
  # DEBUG __lenD.56513 => __len_164
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG thisD.51595 => D#38ptD.0
  # DEBUG thisD.51594 => D#38ptD.0
  if (_159 > __len_164)
    goto <bb 118>;
  else
    goto <bb 27>;
;;    succ:       118 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.56513 => __len_164
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG thisD.51595 => D#38ptD.0
  # DEBUG thisD.51594 => D#38ptD.0
  # DEBUG D#408ptD.0 => this_7(D)
  # DEBUG thisD.51610 => D#408ptD.0
  # DEBUG D#407ptD.0 => D#408ptD.0
  # DEBUG D#406ptD.0 => &D#407ptD.0->D.36723
  # DEBUG thisD.51580 => D#406ptD.0
  # DEBUG __aD.51572 => D#405ptD.0
  # DEBUG D#404ptD.0 => D#405ptD.0
  # DEBUG D#403ptD.0 => D#404ptD.0
  # DEBUG thisD.51563 => D#403ptD.0
  if (__len_164 > 576460752303423487)
    goto <bb 118>;
  else
    goto <bb 119>;
;;    succ:       118 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                119 (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 27, next block 29, flags: (NEW)
;;    pred:       119 [20.0%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_367 = __len_59 * 32;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 29, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       118 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _271 = PHI <_407(118), _402(28)>
  # RANGE [32, 18446744073709551584] NONZERO 18446744073709551584
  # prephitmp_133 = PHI <18446744073709551584(118), pretmp_367(28)>
  # DEBUG __lenD.40490 => NULL
  # DEBUG thisD.51864 => this_7(D)
  # DEBUG D#131ptD.0 => &this_7(D)->D.36723._M_implD.36214._M_startD.36216
  # DEBUG thisD.51866 => NULL
  # DEBUG __iD.51865 => D#131ptD.0
  # DEBUG __lhsD.51861 => &__positionD.36653
  # DEBUG __rhsD.51862 => &D.40492
  # DEBUG thisD.48012 => &__positionD.36653
  # DEBUG thisD.48010 => &D.40492
  # DEBUG D#436ptD.0 => _271 /[ex] 32
  # DEBUG __elems_beforeD.40491 => (const size_typeD.36299) D#436ptD.0
  # DEBUG D#435ptD.0 => &this_7(D)->D.36723
  # DEBUG D#416ptD.0 => D#435ptD.0
  # DEBUG __nD.56501 => NULL
  # DEBUG thisD.56502 => D#416ptD.0
  # DEBUG D#415ptD.0 => D#416ptD.0
  # DEBUG D#414ptD.0 => &D#415ptD.0->_M_implD.36214
  # DEBUG D#413ptD.0 => D#414ptD.0
  # DEBUG __nD.56505 => NULL
  # DEBUG __aD.56504 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#412ptD.0
  # DEBUG D#411ptD.0 => 0B
  # DEBUG __nD.56508 => NULL
  # DEBUG thisD.56506 => D#410ptD.0
  # DEBUG D.56507 => D#411ptD.0
  # DEBUG D#409ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => D#409ptD.0
  # DEBUG thisD.51615 => D#403ptD.0
  # .MEM_269 = VDEF <.MEM_6(D)>
  # PT = { D.56709 } (escaped heap)
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _152 = _ZnwmD.2764 (prephitmp_133);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       119 [80.0%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_153 = PHI <0B(119), _152(29)>
  # .MEM_228 = PHI <.MEM_6(D)(119), .MEM_269(29)>
  # _144 = PHI <_402(119), _271(29)>
  # prephitmp_104 = PHI <0(119), prephitmp_133(29)>
  # DEBUG __new_startD.40499 => NULL
  # DEBUG __new_finishD.40500 => NULL
  # RANGE [0, 18446744073709551615]
  _31 = (long unsigned intD.14) _144;
  # PT = null { D.56709 } (escaped heap)
  _32 = __new_finish_153 + _31;
  # DEBUG D#434ptD.0 => &this_7(D)->D.36723._M_implD.36214
  # DEBUG D#392ptD.0 => D#434ptD.0
  # DEBUG __pD.51841 => _32
  # DEBUG __argD.51842 => __x_14(D)
  # DEBUG __aD.51843 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#390ptD.0 => D#391ptD.0
  # DEBUG __pD.51846 => _32
  # DEBUG __valD.51845 => __x_14(D)
  # DEBUG thisD.51844 => D#390ptD.0
  # DEBUG D#14ptD.0 => 32
  # DEBUG __pD.51034 => _32
  # DEBUG D.51035 => D#14ptD.0
  if (_32 != 0B)
    goto <bb 31>;
  else
    goto <bb 38>;
;;    succ:       31 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.51848 => _32
  # DEBUG __strD.51847 => __x_14(D)
  # DEBUG thisD.50825 => __x_14(D)
  # DEBUG D#380ptD.0 => &__x_14(D)->_M_dataplusD.11519
  # DEBUG thisD.51849 => _32
  # PT = null { D.56709 } (escaped heap)
  _21 = &_32->D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &_32->_M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.51852 => D#381ptD.0
  # DEBUG __datD.51851 => _21
  # DEBUG __aD.51850 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_108 = VDEF <.MEM_228>
  MEM[(struct _Alloc_hiderD.11518 *)_32]._M_pD.11525 = _21;
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _65 = MEM[(charD.10 * *)__x_14(D)];
  # DEBUG D#3ptD.0 => __x_14(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_108>
  _66 = MEM[(long unsigned intD.14 *)__x_14(D) + 8B];
  # DEBUG D#1ptD.0 => __x_14(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _67 = _65 + _66;
  # DEBUG D#3ptD.0 => __x_14(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.51855 => _32
  # DEBUG __begD.51854 => _65
  # DEBUG __endD.51853 => _67
  # DEBUG thisD.51859 => _32
  # DEBUG __begD.51858 => _65
  # DEBUG __endD.51857 => _67
  # DEBUG thisD.56520 => _32
  # DEBUG __begD.56521 => _65
  # DEBUG __endD.56522 => _67
  # DEBUG __ptrD.51229 => _65
  # RANGE [0, 1]
  _71 = _67 != 0B;
  # RANGE [0, 1]
  _30 = _65 == 0B;
  # RANGE [0, 1]
  _25 = _30 & _71;
  if (_25 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;
;;    succ:       120 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                121 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       121 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 12] # .MEM_273 = VDEF <.MEM_272>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _170 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_32, &__dnewD.56523, 0);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                98 (EH,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => _32
  # DEBUG __pD.56542 => _170
  # DEBUG thisD.56541 => D#6ptD.0
  # .MEM_274 = VDEF <.MEM_273>
  MEM[(charD.10 * *)_32] = _170;
  # VUSE <.MEM_274>
  __dnew.111_171 = __dnewD.56523;
  # DEBUG D#7ptD.0 => _32
  # DEBUG __capacityD.56544 => __dnew.111_171
  # DEBUG thisD.56543 => D#7ptD.0
  # .MEM_275 = VDEF <.MEM_274>
  MEM[(size_typeD.11502 *)_32 + 16B] = __dnew.111_171;
  # DEBUG D#3ptD.0 => _32
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56526 => _170
  # DEBUG __k1D.56525 => _65
  # DEBUG __k2D.56524 => _67
  # DEBUG __dD.56529 => _170
  # DEBUG __sD.56528 => _65
  # DEBUG __nD.56527 => _66
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       121 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => _32
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56526 => _21
  # DEBUG __k1D.56525 => _65
  # DEBUG __k2D.56524 => _67
  # DEBUG __dD.56529 => _21
  # DEBUG __sD.56528 => _65
  # DEBUG __nD.56527 => _66
  if (_66 == 1)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [53.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [47.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 10, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [53.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_272>
  _173 = MEM[(const char_typeD.6439 &)_65];
  # DEBUG D#13ptD.0 => _65
  # DEBUG __c1D.56534 => _21
  # DEBUG __c2D.56533 => D#13ptD.0
  # .MEM_276 = VDEF <.MEM_272>
  MEM[(char_typeD.6439 &)_21] = _173;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 17, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [47.0%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  # _384 = PHI <_21(34), _170(33)>
  # .MEM_381 = PHI <.MEM_272(34), .MEM_275(33)>
  # DEBUG D#3ptD.0 => _32
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56526 => _384
  # DEBUG __k1D.56525 => _65
  # DEBUG __k2D.56524 => _67
  # DEBUG __dD.56529 => _384
  # DEBUG __sD.56528 => _65
  # DEBUG __nD.56527 => _66
  # DEBUG __s1D.56532 => _384
  # DEBUG __s2D.56531 => _65
  # DEBUG __nD.56530 => _66
  # .MEM_277 = VDEF <.MEM_381>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  memcpyD.992 (_384, _65, _66);
  # VUSE <.MEM_277>
  pretmp_200 = __dnewD.56523;
  # VUSE <.MEM_277>
  pretmp_209 = MEM[(charD.10 * *)_32];
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_230 = PHI <.MEM_276(35), .MEM_277(36)>
  # prephitmp_239 = PHI <_66(35), pretmp_200(36)>
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  # prephitmp_364 = PHI <_21(35), pretmp_209(36)>
  # DEBUG D#754ptD.0 => __dnewD.56523
  # DEBUG thisD.56536 => _32
  # DEBUG __nD.56535 => D#754ptD.0
  # DEBUG D#5ptD.0 => _32
  # DEBUG __lengthD.56538 => D#754ptD.0
  # DEBUG thisD.56537 => D#5ptD.0
  # .MEM_278 = VDEF <.MEM_230>
  MEM[(size_typeD.11502 *)_32 + 8B] = prephitmp_239;
  # DEBUG D#3ptD.0 => _32
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  _176 = prephitmp_364 + prephitmp_239;
  # DEBUG __c1D.56540 => _176
  # DEBUG __c2D.56539 => D#13ptD.0
  # .MEM_279 = VDEF <.MEM_278>
  MEM[(char_typeD.6439 &)_176] = 0;
  # .MEM_280 = VDEF <.MEM_279>
  __dnewD.56523 ={v} {CLOBBER};
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_83 = PHI <.MEM_280(37), .MEM_228(30)>
  # DEBUG __new_finishD.40500 => 0B
  # DEBUG D#421ptD.0 => &this_7(D)->D.36723
  # DEBUG thisD.51886 => D#421ptD.0
  # DEBUG thisD.51884 => &__positionD.36653
  # VUSE <.MEM_83>
  # PT = nonlocal escaped 
  __first_35 = this_7(D)->D.36723._M_implD.36214._M_startD.36216;
  # DEBUG __firstD.51869 => __first_35
  # DEBUG __lastD.51870 => __position_28
  # DEBUG __resultD.51871 => NULL
  # DEBUG __allocD.51872 => D#419ptD.0
  # DEBUG D#418ptD.0 => D#419ptD.0
  # DEBUG D#417ptD.0 => D#418ptD.0
  # DEBUG __firstD.51876 => __first_35
  # DEBUG __lastD.51875 => __position_28
  # DEBUG __resultD.51874 => NULL
  # DEBUG D.51873 => D#417ptD.0
  # DEBUG __firstD.51879 => __first_35
  # DEBUG __lastD.51878 => __position_28
  # DEBUG __resultD.51877 => NULL
  # DEBUG __assignableD.51882 => 1
  # DEBUG __firstD.56549 => __first_35
  # DEBUG __lastD.56550 => __position_28
  # DEBUG __resultD.56551 => __new_finish_153
  # DEBUG __curD.56552 => __new_finish_153
  # DEBUG __curD.56552 => __new_finish_153
  # DEBUG __firstD.56549 => __first_35
  if (__position_28 == __first_35)
    goto <bb 51>;
  else
    goto <bb 39>;
;;    succ:       51 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 31, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 682, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_213 = PHI <__first_35(39), __first_182(50)>
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_214 = PHI <__new_finish_153(39), __new_finish_183(50)>
  # .MEM_70 = PHI <.MEM_83(39), .MEM_234(50)>
  # DEBUG __curD.56552 => __new_finish_214
  # DEBUG __firstD.56549 => __first_213
  # DEBUG __rD.51681 => __new_finish_214
  # DEBUG __pD.56575 => NULL
  # DEBUG __valueD.56574 => __first_213
  # DEBUG D#14ptD.0 => 32
  # DEBUG __pD.51120 => NULL
  # DEBUG D.51121 => D#14ptD.0
  if (__new_finish_214 != 0B)
    goto <bb 41>;
  else
    goto <bb 48>;
;;    succ:       41 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 682, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.56577 => NULL
  # DEBUG __strD.56576 => __first_213
  # DEBUG thisD.50825 => __first_213
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)__first_213]._M_dataplusD.11519
  # DEBUG thisD.56578 => NULL
  # PT = null { D.56709 } (escaped heap)
  _178 = &__new_finish_214->D.11539._M_local_bufD.11541;
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.56581 => D#381ptD.0
  # DEBUG __datD.56580 => _178
  # DEBUG __aD.56579 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_282 = VDEF <.MEM_70>
  MEM[(struct _Alloc_hiderD.11518 *)__new_finish_214]._M_pD.11525 = _178;
  # VUSE <.MEM_282>
  # PT = nonlocal escaped 
  _179 = MEM[(charD.10 * *)__first_213];
  # DEBUG D#3ptD.0 => __first_213
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_282>
  _180 = MEM[(long unsigned intD.14 *)__first_213 + 8B];
  # DEBUG D#1ptD.0 => __first_213
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _181 = _179 + _180;
  # DEBUG D#3ptD.0 => __first_213
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.56584 => NULL
  # DEBUG __begD.56583 => _179
  # DEBUG __endD.56582 => _181
  # DEBUG thisD.56588 => NULL
  # DEBUG __begD.56587 => _179
  # DEBUG __endD.56586 => _181
  # DEBUG thisD.56594 => __new_finish_214
  # DEBUG __begD.56595 => _179
  # DEBUG __endD.56596 => _181
  # DEBUG __ptrD.51229 => _179
  # RANGE [0, 1]
  _393 = _181 != 0B;
  # RANGE [0, 1]
  _396 = _179 == 0B;
  # RANGE [0, 1]
  _394 = _393 & _396;
  if (_394 != 0)
    goto <bb 122>;
  else
    goto <bb 124>;
;;    succ:       122 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                124 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 198, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       124 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 13] # .MEM_284 = VDEF <.MEM_283>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _193 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (__new_finish_214, &__dnewD.56597, 0);
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 (EH,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 198, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => __new_finish_214
  # DEBUG __pD.56616 => _193
  # DEBUG thisD.56615 => D#6ptD.0
  # .MEM_285 = VDEF <.MEM_284>
  MEM[(charD.10 * *)__new_finish_214] = _193;
  # VUSE <.MEM_285>
  __dnew.111_194 = __dnewD.56597;
  # DEBUG D#7ptD.0 => __new_finish_214
  # DEBUG __capacityD.56618 => __dnew.111_194
  # DEBUG thisD.56617 => D#7ptD.0
  # .MEM_286 = VDEF <.MEM_285>
  MEM[(size_typeD.11502 *)__new_finish_214 + 16B] = __dnew.111_194;
  # DEBUG D#3ptD.0 => __new_finish_214
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56600 => _193
  # DEBUG __k1D.56599 => _179
  # DEBUG __k2D.56598 => _181
  # DEBUG __dD.56603 => _193
  # DEBUG __sD.56602 => _179
  # DEBUG __nD.56601 => _180
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 484, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       124 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => __new_finish_214
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56600 => _178
  # DEBUG __k1D.56599 => _179
  # DEBUG __k2D.56598 => _181
  # DEBUG __dD.56603 => _178
  # DEBUG __sD.56602 => _179
  # DEBUG __nD.56601 => _180
  if (_180 == 1)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 258, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_283>
  _196 = MEM[(const char_typeD.6439 &)_179];
  # DEBUG D#13ptD.0 => _179
  # DEBUG __c1D.56608 => _178
  # DEBUG __c2D.56607 => D#13ptD.0
  # .MEM_287 = VDEF <.MEM_283>
  MEM[(char_typeD.6439 &)_178] = _196;
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 424, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  # _378 = PHI <_178(44), _193(43)>
  # .MEM_387 = PHI <.MEM_283(44), .MEM_286(43)>
  # DEBUG D#3ptD.0 => __new_finish_214
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56600 => _378
  # DEBUG __k1D.56599 => _179
  # DEBUG __k2D.56598 => _181
  # DEBUG __dD.56603 => _378
  # DEBUG __sD.56602 => _179
  # DEBUG __nD.56601 => _180
  # DEBUG __s1D.56606 => _378
  # DEBUG __s2D.56605 => _179
  # DEBUG __nD.56604 => _180
  # .MEM_288 = VDEF <.MEM_387>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  memcpyD.992 (_378, _179, _180);
  # VUSE <.MEM_288>
  pretmp_229 = __dnewD.56597;
  # VUSE <.MEM_288>
  pretmp_185 = MEM[(charD.10 * *)__new_finish_214];
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 682, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_233 = PHI <.MEM_287(45), .MEM_288(46)>
  # prephitmp_162 = PHI <_180(45), pretmp_229(46)>
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  # prephitmp_236 = PHI <_178(45), pretmp_185(46)>
  # DEBUG D#753ptD.0 => __dnewD.56597
  # DEBUG thisD.56610 => __new_finish_214
  # DEBUG __nD.56609 => D#753ptD.0
  # DEBUG D#5ptD.0 => __new_finish_214
  # DEBUG __lengthD.56612 => D#753ptD.0
  # DEBUG thisD.56611 => D#5ptD.0
  # .MEM_289 = VDEF <.MEM_233>
  MEM[(size_typeD.11502 *)__new_finish_214 + 8B] = prephitmp_162;
  # DEBUG D#3ptD.0 => __new_finish_214
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  _199 = prephitmp_236 + prephitmp_162;
  # DEBUG __c1D.56614 => _199
  # DEBUG __c2D.56613 => D#13ptD.0
  # .MEM_290 = VDEF <.MEM_289>
  MEM[(char_typeD.6439 &)_199] = 0;
  # .MEM_291 = VDEF <.MEM_290>
  __dnewD.56597 ={v} {CLOBBER};
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 682, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       40 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_234 = PHI <.MEM_70(40), .MEM_291(47)>
  # PT = nonlocal escaped 
  __first_182 = __first_213 + 32;
  # DEBUG __firstD.56549 => __first_182
  # PT = null { D.56709 } (escaped heap)
  __new_finish_183 = __new_finish_214 + 32;
  # DEBUG __curD.56552 => __new_finish_183
  # DEBUG __curD.56552 => __new_finish_183
  # DEBUG __firstD.56549 => __first_182
  if (__position_28 == __first_182)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 31, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       48 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_142 = PHI <__new_finish_183(48)>
  goto <bb 51>;
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 651, maybe hot
;;    prev block 49, next block 51, flags: (NEW)
;;    pred:       48 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_215 = PHI <__new_finish_142(49), __new_finish_153(38)>
  # .MEM_68 = PHI <.MEM_234(49), .MEM_83(38)>
  # DEBUG __new_finishD.40500 => NULL
  # PT = null { D.56709 } (escaped heap)
  __new_finish_36 = __new_finish_215 + 32;
  # DEBUG __new_finishD.40500 => __new_finish_36
  # DEBUG D#422ptD.0 => &this_7(D)->D.36723
  # DEBUG thisD.51905 => D#422ptD.0
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _38 = this_7(D)->D.36723._M_implD.36214._M_finishD.36217;
  # DEBUG thisD.51903 => &__positionD.36653
  # DEBUG __firstD.51888 => __position_28
  # DEBUG __lastD.51889 => _38
  # DEBUG __resultD.51890 => __new_finish_36
  # DEBUG __allocD.51891 => D#419ptD.0
  # DEBUG D#418ptD.0 => D#419ptD.0
  # DEBUG D#417ptD.0 => D#418ptD.0
  # DEBUG __firstD.51895 => __position_28
  # DEBUG __lastD.51894 => _38
  # DEBUG __resultD.51893 => __new_finish_36
  # DEBUG D.51892 => D#417ptD.0
  # DEBUG __firstD.51898 => __position_28
  # DEBUG __lastD.51897 => _38
  # DEBUG __resultD.51896 => __new_finish_36
  # DEBUG __assignableD.51901 => 1
  # DEBUG __firstD.56623 => __position_28
  # DEBUG __lastD.56624 => _38
  # DEBUG __resultD.56625 => __new_finish_36
  # DEBUG __curD.56626 => __new_finish_36
  # DEBUG __firstD.56623 => __position_28
  if (__position_28 == _38)
    goto <bb 73>;
  else
    goto <bb 61>;
;;    succ:       73 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       42 (EH,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_125 = PHI <__new_finish_214(42)>
<L22>: [LP 13]
;;    succ:       53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                123 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_235 = PHI <.MEM_284(52), .MEM_292(123)>
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_120 = PHI <__new_finish_125(52), __new_finish_124(123)>
<L11>:
  # VUSE <.MEM_235>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _184 = __builtin_eh_pointerD.2738 (11);
  # .MEM_293 = VDEF <.MEM_235>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_begin_catchD.14644 (_184);
  # DEBUG __firstD.56554 => __new_finish_153
  # DEBUG __lastD.56553 => __new_finish_120
  # DEBUG __firstD.56557 => __new_finish_153
  # DEBUG __lastD.56556 => __new_finish_120
  # DEBUG __firstD.56557 => __new_finish_153
  if (__new_finish_153 == __new_finish_120)
    goto <bb 54>;
  else
    goto <bb 55>;
;;    succ:       54 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       53 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_391 = PHI <.MEM_293(53), .MEM_298(58)>
  [LP 5] # .MEM_299 = VDEF <.MEM_391>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_rethrowD.40506 ();
;;    succ:       60 (EH,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_165 = PHI <__new_finish_153(55), __new_finish_188(59)>
  # .MEM_24 = PHI <.MEM_293(55), .MEM_298(59)>
  # DEBUG __firstD.56557 => __new_finish_165
  # DEBUG __rD.49471 => __new_finish_165
  # DEBUG __pointerD.56558 => NULL
  # DEBUG thisD.56559 => NULL
  # DEBUG thisD.56560 => NULL
  # DEBUG thisD.56569 => NULL
  # VUSE <.MEM_24>
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  _186 = MEM[(charD.10 * *)__new_finish_165];
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.56570 => NULL
  # PT = null { D.56709 } (escaped heap)
  _187 = &MEM[(const struct basic_stringD.2844 *)__new_finish_165].D.11539._M_local_bufD.11541;
  if (_186 != _187)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.56562 => NULL
  # DEBUG __sizeD.56561 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => NULL
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.56565 => _186
  # DEBUG __aD.56563 => D#181ptD.0
  # DEBUG __nD.56564 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.56568 => _186
  # DEBUG thisD.56566 => D#177ptD.0
  # DEBUG D.56567 => D#178ptD.0
  # .MEM_294 = VDEF <.MEM_24>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (_186);
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_237 = PHI <.MEM_24(56), .MEM_294(57)>
  # DEBUG thisD.56571 => D#187ptD.0
  # DEBUG thisD.56572 => D#187ptD.0
  # DEBUG thisD.56573 => D#187ptD.0
  # .MEM_298 = VDEF <.MEM_237>
  MEM[(struct  &)__new_finish_165] ={v} {CLOBBER};
  # PT = null { D.56709 } (escaped heap)
  __new_finish_188 = __new_finish_165 + 32;
  # DEBUG __firstD.56557 => __new_finish_188
  # DEBUG __firstD.56557 => __new_finish_188
  if (__new_finish_188 == __new_finish_120)
    goto <bb 54>;
  else
    goto <bb 59>;
;;    succ:       54 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 59, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 56>;
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       54 (EH,EXECUTABLE)
<L13>: [LP 5]
  [MNT 9] # .MEM_300 = VDEF <.MEM_299>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_end_catchD.14643 ();
  [LP 9] resx 10
;;    succ:       128 (EH,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 31, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       51 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 1, count 0, freq 676, maybe hot
;;    prev block 61, next block 63, flags: (NEW)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_129 = PHI <__position_28(61), __position_206(71)>
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_111 = PHI <__new_finish_36(61), __new_finish_207(71)>
  # .MEM_379 = PHI <.MEM_68(61), .MEM_241(71)>
  # DEBUG __curD.56626 => __new_finish_111
  # DEBUG __firstD.56623 => __position_129
  # DEBUG __rD.51681 => __new_finish_111
  # DEBUG __pD.56649 => NULL
  # DEBUG __valueD.56648 => __position_129
  # DEBUG D#14ptD.0 => 32
  # DEBUG __pD.51120 => NULL
  # DEBUG D.51121 => D#14ptD.0
  if (__new_finish_111 != 0B)
    goto <bb 63>;
  else
    goto <bb 70>;
;;    succ:       63 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 1, count 0, freq 676, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       62 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.56651 => NULL
  # DEBUG __strD.56650 => __position_129
  # DEBUG thisD.50825 => __position_129
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)__position_129]._M_dataplusD.11519
  # DEBUG thisD.56652 => NULL
  # PT = null { D.56709 } (escaped heap)
  _202 = &__new_finish_111->D.11539._M_local_bufD.11541;
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.56655 => D#381ptD.0
  # DEBUG __datD.56654 => _202
  # DEBUG __aD.56653 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_302 = VDEF <.MEM_379>
  MEM[(struct _Alloc_hiderD.11518 *)__new_finish_111]._M_pD.11525 = _202;
  # VUSE <.MEM_302>
  # PT = nonlocal escaped 
  _203 = MEM[(charD.10 * *)__position_129];
  # DEBUG D#3ptD.0 => __position_129
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_302>
  _204 = MEM[(long unsigned intD.14 *)__position_129 + 8B];
  # DEBUG D#1ptD.0 => __position_129
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _205 = _203 + _204;
  # DEBUG D#3ptD.0 => __position_129
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.56658 => NULL
  # DEBUG __begD.56657 => _203
  # DEBUG __endD.56656 => _205
  # DEBUG thisD.56662 => NULL
  # DEBUG __begD.56661 => _203
  # DEBUG __endD.56660 => _205
  # DEBUG thisD.56668 => __new_finish_111
  # DEBUG __begD.56669 => _203
  # DEBUG __endD.56670 => _205
  # DEBUG __ptrD.51229 => _203
  # RANGE [0, 1]
  _400 = _205 != 0B;
  # RANGE [0, 1]
  _399 = _203 == 0B;
  # RANGE [0, 1]
  _397 = _399 & _400;
  if (_397 != 0)
    goto <bb 125>;
  else
    goto <bb 127>;
;;    succ:       125 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                127 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 64, loop depth 1, count 0, freq 196, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       127 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 14] # .MEM_304 = VDEF <.MEM_303>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _217 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (__new_finish_111, &__dnewD.56671, 0);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 (EH,EXECUTABLE)

;;   basic block 65, loop depth 1, count 0, freq 196, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => __new_finish_111
  # DEBUG __pD.56690 => _217
  # DEBUG thisD.56689 => D#6ptD.0
  # .MEM_305 = VDEF <.MEM_304>
  MEM[(charD.10 * *)__new_finish_111] = _217;
  # VUSE <.MEM_305>
  __dnew.111_218 = __dnewD.56671;
  # DEBUG D#7ptD.0 => __new_finish_111
  # DEBUG __capacityD.56692 => __dnew.111_218
  # DEBUG thisD.56691 => D#7ptD.0
  # .MEM_306 = VDEF <.MEM_305>
  MEM[(size_typeD.11502 *)__new_finish_111 + 16B] = __dnew.111_218;
  # DEBUG D#3ptD.0 => __new_finish_111
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56674 => _217
  # DEBUG __k1D.56673 => _203
  # DEBUG __k2D.56672 => _205
  # DEBUG __dD.56677 => _217
  # DEBUG __sD.56676 => _203
  # DEBUG __nD.56675 => _204
  goto <bb 68>;
;;    succ:       68 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 1, count 0, freq 480, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       127 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => __new_finish_111
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56674 => _202
  # DEBUG __k1D.56673 => _203
  # DEBUG __k2D.56672 => _205
  # DEBUG __dD.56677 => _202
  # DEBUG __sD.56676 => _203
  # DEBUG __nD.56675 => _204
  if (_204 == 1)
    goto <bb 67>;
  else
    goto <bb 68>;
;;    succ:       67 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                68 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 67, loop depth 1, count 0, freq 256, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       66 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_303>
  _220 = MEM[(const char_typeD.6439 &)_203];
  # DEBUG D#13ptD.0 => _203
  # DEBUG __c1D.56682 => _202
  # DEBUG __c2D.56681 => D#13ptD.0
  # .MEM_307 = VDEF <.MEM_303>
  MEM[(char_typeD.6439 &)_202] = _220;
  goto <bb 69>;
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 68, loop depth 1, count 0, freq 420, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       66 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  # _385 = PHI <_202(66), _217(65)>
  # .MEM_380 = PHI <.MEM_303(66), .MEM_306(65)>
  # DEBUG D#3ptD.0 => __new_finish_111
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56674 => _385
  # DEBUG __k1D.56673 => _203
  # DEBUG __k2D.56672 => _205
  # DEBUG __dD.56677 => _385
  # DEBUG __sD.56676 => _203
  # DEBUG __nD.56675 => _204
  # DEBUG __s1D.56680 => _385
  # DEBUG __s2D.56679 => _203
  # DEBUG __nD.56678 => _204
  # .MEM_308 = VDEF <.MEM_380>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  memcpyD.992 (_385, _203, _204);
  # VUSE <.MEM_308>
  pretmp_389 = __dnewD.56671;
  # VUSE <.MEM_308>
  pretmp_177 = MEM[(charD.10 * *)__new_finish_111];
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 1, count 0, freq 676, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       67 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_240 = PHI <.MEM_307(67), .MEM_308(68)>
  # prephitmp_109 = PHI <_204(67), pretmp_389(68)>
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  # prephitmp_141 = PHI <_202(67), pretmp_177(68)>
  # DEBUG D#752ptD.0 => __dnewD.56671
  # DEBUG thisD.56684 => __new_finish_111
  # DEBUG __nD.56683 => D#752ptD.0
  # DEBUG D#5ptD.0 => __new_finish_111
  # DEBUG __lengthD.56686 => D#752ptD.0
  # DEBUG thisD.56685 => D#5ptD.0
  # .MEM_309 = VDEF <.MEM_240>
  MEM[(size_typeD.11502 *)__new_finish_111 + 8B] = prephitmp_109;
  # DEBUG D#3ptD.0 => __new_finish_111
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  _223 = prephitmp_141 + prephitmp_109;
  # DEBUG __c1D.56688 => _223
  # DEBUG __c2D.56687 => D#13ptD.0
  # .MEM_310 = VDEF <.MEM_309>
  MEM[(char_typeD.6439 &)_223] = 0;
  # .MEM_311 = VDEF <.MEM_310>
  __dnewD.56671 ={v} {CLOBBER};
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 1, count 0, freq 676, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       62 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_241 = PHI <.MEM_379(62), .MEM_311(69)>
  # PT = nonlocal 
  __position_206 = __position_129 + 32;
  # DEBUG __firstD.56623 => __position_206
  # PT = null { D.56709 } (escaped heap)
  __new_finish_207 = __new_finish_111 + 32;
  # DEBUG __curD.56626 => __new_finish_207
  # DEBUG __curD.56626 => __new_finish_207
  # DEBUG __firstD.56623 => __position_206
  if (_38 == __position_206)
    goto <bb 72>;
  else
    goto <bb 71>;
;;    succ:       72 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 71, loop depth 1, count 0, freq 646, maybe hot
;;    prev block 70, next block 72, flags: (NEW)
;;    pred:       70 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 62>;
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 30, maybe hot
;;    prev block 71, next block 73, flags: (NEW)
;;    pred:       70 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_126 = PHI <__new_finish_207(70)>
  # VUSE <.MEM_241>
  pretmp_114 = this_7(D)->D.36723._M_implD.36214._M_finishD.36217;
;;    succ:       73 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       72 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_110 = PHI <__new_finish_126(72), __new_finish_36(51)>
  # .MEM_366 = PHI <.MEM_241(72), .MEM_68(51)>
  # PT = nonlocal escaped 
  # prephitmp_115 = PHI <pretmp_114(72), _38(51)>
  # DEBUG __new_finishD.40500 => NULL
  # DEBUG D#423ptD.0 => &this_7(D)->D.36723
  # DEBUG thisD.51941 => D#423ptD.0
  # DEBUG D#751ptD.0 => this_7(D)->D.36723._M_implD.36214._M_finishD.36217
  # VUSE <.MEM_366>
  # PT = nonlocal escaped 
  __first_42 = this_7(D)->D.36723._M_implD.36214._M_startD.36216;
  # DEBUG __firstD.51917 => __first_42
  # DEBUG __lastD.51918 => D#751ptD.0
  # DEBUG __firstD.51924 => __first_42
  if (__first_42 == prephitmp_115)
    goto <bb 90>;
  else
    goto <bb 84>;
;;    succ:       90 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                84 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       64 (EH,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_224 = PHI <__new_finish_111(64)>
<L23>: [LP 14]
;;    succ:       75 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                126 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_242 = PHI <.MEM_304(74), .MEM_312(126)>
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_121 = PHI <__new_finish_224(74), __new_finish_201(126)>
<L14>:
  # VUSE <.MEM_242>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _208 = __builtin_eh_pointerD.2738 (14);
  # .MEM_313 = VDEF <.MEM_242>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_begin_catchD.14644 (_208);
  # DEBUG __firstD.56628 => __new_finish_36
  # DEBUG __lastD.56627 => __new_finish_121
  # DEBUG __firstD.56631 => __new_finish_36
  # DEBUG __lastD.56630 => __new_finish_121
  # DEBUG __firstD.56631 => __new_finish_36
  if (__new_finish_36 == __new_finish_121)
    goto <bb 76>;
  else
    goto <bb 77>;
;;    succ:       76 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       75 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_382 = PHI <.MEM_313(75), .MEM_318(80)>
  [LP 7] # .MEM_319 = VDEF <.MEM_382>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_rethrowD.40506 ();
;;    succ:       82 (EH,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       75 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       78 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 78, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 77, next block 79, flags: (NEW)
;;    pred:       77 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                81 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_93 = PHI <__new_finish_36(77), __new_finish_212(81)>
  # .MEM_357 = PHI <.MEM_313(77), .MEM_318(81)>
  # DEBUG __firstD.56631 => __new_finish_93
  # DEBUG __rD.49471 => __new_finish_93
  # DEBUG __pointerD.56632 => NULL
  # DEBUG thisD.56633 => NULL
  # DEBUG thisD.56634 => NULL
  # DEBUG thisD.56643 => NULL
  # VUSE <.MEM_357>
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  _210 = MEM[(charD.10 * *)__new_finish_93];
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.56644 => NULL
  # PT = null { D.56709 } (escaped heap)
  _211 = &MEM[(const struct basic_stringD.2844 *)__new_finish_93].D.11539._M_local_bufD.11541;
  if (_210 != _211)
    goto <bb 79>;
  else
    goto <bb 80>;
;;    succ:       79 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 79, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       78 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.56636 => NULL
  # DEBUG __sizeD.56635 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => NULL
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.56639 => _210
  # DEBUG __aD.56637 => D#181ptD.0
  # DEBUG __nD.56638 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.56642 => _210
  # DEBUG thisD.56640 => D#177ptD.0
  # DEBUG D.56641 => D#178ptD.0
  # .MEM_314 = VDEF <.MEM_357>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (_210);
;;    succ:       80 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 80, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 79, next block 81, flags: (NEW, REACHABLE)
;;    pred:       78 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                79 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_244 = PHI <.MEM_357(78), .MEM_314(79)>
  # DEBUG thisD.56645 => D#187ptD.0
  # DEBUG thisD.56646 => D#187ptD.0
  # DEBUG thisD.56647 => D#187ptD.0
  # .MEM_318 = VDEF <.MEM_244>
  MEM[(struct  &)__new_finish_93] ={v} {CLOBBER};
  # PT = null { D.56709 } (escaped heap)
  __new_finish_212 = __new_finish_93 + 32;
  # DEBUG __firstD.56631 => __new_finish_212
  # DEBUG __firstD.56631 => __new_finish_212
  if (__new_finish_121 == __new_finish_212)
    goto <bb 76>;
  else
    goto <bb 81>;
;;    succ:       76 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                81 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 81, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 80, next block 82, flags: (NEW)
;;    pred:       80 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 78>;
;;    succ:       78 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 81, next block 83, flags: (NEW, REACHABLE)
;;    pred:       76 (EH,EXECUTABLE)
<L16>: [LP 7]
  [MNT 12] # .MEM_320 = VDEF <.MEM_319>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_end_catchD.14643 ();
  [LP 3] resx 13
;;    succ:       83 (EH,EXECUTABLE)

;;   basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 82, next block 84, flags: (NEW)
;;    pred:       82 (EH,EXECUTABLE)
<L24>: [LP 3]
  goto <bb 99> (<L5>);
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 84, loop depth 0, count 0, freq 29, maybe hot
;;    prev block 83, next block 85, flags: (NEW, REACHABLE)
;;    pred:       73 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 85, loop depth 1, count 0, freq 322, maybe hot
;;    prev block 84, next block 86, flags: (NEW)
;;    pred:       84 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_143 = PHI <__first_42(84), __first_75(88)>
  # .MEM_189 = PHI <.MEM_366(84), .MEM_116(88)>
  # DEBUG __firstD.51924 => __first_143
  # DEBUG __rD.49471 => __first_143
  # DEBUG __pointerD.51925 => NULL
  # DEBUG thisD.51926 => NULL
  # DEBUG thisD.51927 => NULL
  # DEBUG thisD.51936 => NULL
  # VUSE <.MEM_189>
  # PT = nonlocal escaped 
  _73 = MEM[(charD.10 * *)__first_143];
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51937 => NULL
  # PT = nonlocal escaped 
  _74 = &MEM[(const struct basic_stringD.2844 *)__first_143].D.11539._M_local_bufD.11541;
  if (_73 != _74)
    goto <bb 86>;
  else
    goto <bb 87>;
;;    succ:       86 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                87 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 86, loop depth 1, count 0, freq 225, maybe hot
;;    prev block 85, next block 87, flags: (NEW, REACHABLE)
;;    pred:       85 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51929 => NULL
  # DEBUG __sizeD.51928 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => NULL
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51932 => _73
  # DEBUG __aD.51930 => D#181ptD.0
  # DEBUG __nD.51931 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51935 => _73
  # DEBUG thisD.51933 => D#177ptD.0
  # DEBUG D.51934 => D#178ptD.0
  # .MEM_112 = VDEF <.MEM_189>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (_73);
;;    succ:       87 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 87, loop depth 1, count 0, freq 322, maybe hot
;;    prev block 86, next block 88, flags: (NEW, REACHABLE)
;;    pred:       85 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                86 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_85 = PHI <.MEM_189(85), .MEM_112(86)>
  # DEBUG thisD.51938 => D#187ptD.0
  # DEBUG thisD.51939 => D#187ptD.0
  # DEBUG thisD.51940 => D#187ptD.0
  # .MEM_116 = VDEF <.MEM_85>
  MEM[(struct  &)__first_143] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_75 = __first_143 + 32;
  # DEBUG __firstD.51924 => __first_75
  # DEBUG __firstD.51924 => __first_75
  if (__first_75 == prephitmp_115)
    goto <bb 89>;
  else
    goto <bb 88>;
;;    succ:       89 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                88 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 88, loop depth 1, count 0, freq 293, maybe hot
;;    prev block 87, next block 89, flags: (NEW)
;;    pred:       87 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 85>;
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 89, loop depth 0, count 0, freq 29, maybe hot
;;    prev block 88, next block 90, flags: (NEW)
;;    pred:       87 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_116>
  pretmp_100 = this_7(D)->D.36723._M_implD.36214._M_startD.36216;
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 90, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 89, next block 91, flags: (NEW, REACHABLE)
;;    pred:       89 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                73 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_190 = PHI <.MEM_116(89), .MEM_366(73)>
  # PT = nonlocal escaped 
  # prephitmp_101 = PHI <pretmp_100(89), __first_42(73)>
  # DEBUG D#430ptD.0 => this_7(D)->D.36723._M_implD.36214._M_end_of_storageD.36218
  # DEBUG D#429ptD.0 => (long intD.12) D#430ptD.0
  # DEBUG D#750ptD.0 => this_7(D)->D.36723._M_implD.36214._M_startD.36216
  # DEBUG D#428ptD.0 => (long intD.12) D#750ptD.0
  # DEBUG D#427ptD.0 => D#429ptD.0 - D#428ptD.0
  # DEBUG D#426ptD.0 => D#427ptD.0 /[ex] 32
  # DEBUG D#425ptD.0 => &this_7(D)->D.36723
  # DEBUG D#246ptD.0 => D#425ptD.0
  # DEBUG D#247ptD.0 => (long unsigned intD.14) D#426ptD.0
  # DEBUG __pD.51907 => D#750ptD.0
  # DEBUG thisD.51909 => D#246ptD.0
  # DEBUG __nD.51908 => D#247ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  if (prephitmp_101 != 0B)
    goto <bb 91>;
  else
    goto <bb 92>;
;;    succ:       91 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                92 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 91, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       90 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#243ptD.0 => &D#244ptD.0->_M_implD.36214
  # DEBUG D#241ptD.0 => D#243ptD.0
  # DEBUG D#242ptD.0 => D#245ptD.0
  # DEBUG __pD.51913 => D#750ptD.0
  # DEBUG __aD.51911 => D#241ptD.0
  # DEBUG __nD.51912 => D#242ptD.0
  # DEBUG D#240ptD.0 => D#242ptD.0
  # DEBUG D#239ptD.0 => D#241ptD.0
  # DEBUG D#237ptD.0 => D#239ptD.0
  # DEBUG D#238ptD.0 => D#240ptD.0
  # DEBUG __pD.51916 => D#750ptD.0
  # DEBUG thisD.51914 => D#237ptD.0
  # DEBUG D.51915 => D#238ptD.0
  # .MEM_117 = VDEF <.MEM_190>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (prephitmp_101);
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 92, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       91 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_86 = PHI <.MEM_117(91), .MEM_190(90)>
  # .MEM_45 = VDEF <.MEM_86>
  this_7(D)->D.36723._M_implD.36214._M_startD.36216 = __new_finish_153;
  # .MEM_46 = VDEF <.MEM_45>
  this_7(D)->D.36723._M_implD.36214._M_finishD.36217 = __new_finish_110;
  # PT = null { D.56709 } (escaped heap)
  _48 = __new_finish_153 + prephitmp_104;
  # .MEM_49 = VDEF <.MEM_46>
  this_7(D)->D.36723._M_implD.36214._M_end_of_storageD.36218 = _48;
;;    succ:       93 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 93, loop depth 0, count 0, freq 482, maybe hot
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                92 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_22(24), .MEM_49(92)>
  # VUSE <.MEM_2>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 93, next block 95, flags: (NEW)
;;    pred:       18 (EH,EXECUTABLE)
<L19>: [LP 11]
;;    succ:       95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 94, next block 96, flags: (NEW, REACHABLE)
;;    pred:       94 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_96(94), .MEM_97(21)>
<L3>:
  # DEBUG thisD.51943 => &__x_copyD.40484
  # DEBUG thisD.51944 => &__x_copyD.40484
  # DEBUG thisD.51953 => &__x_copyD.40484
  # VUSE <.MEM_3>
  # PT = nonlocal escaped null { D.40484 } (escaped)
  _76 = MEM[(charD.10 * *)&__x_copyD.40484];
  # DEBUG D#3ptD.0 => &__x_copyD.40484
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51954 => &__x_copyD.40484
  if (&__x_copyD.40484.D.11539._M_local_bufD.11541 != _76)
    goto <bb 96>;
  else
    goto <bb 97>;
;;    succ:       96 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                97 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       95 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => __x_copyD.40484.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51946 => &__x_copyD.40484
  # DEBUG __sizeD.51945 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &__x_copyD.40484
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &__x_copyD.40484
  # DEBUG D#183ptD.0 => &__x_copyD.40484._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51949 => _76
  # DEBUG __aD.51947 => D#181ptD.0
  # DEBUG __nD.51948 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51952 => _76
  # DEBUG thisD.51950 => D#177ptD.0
  # DEBUG D.51951 => D#178ptD.0
  # .MEM_103 = VDEF <.MEM_3>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (_76);
;;    succ:       97 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       95 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                96 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_3(95), .MEM_103(96)>
  # DEBUG D#187ptD.0 => &__x_copyD.40484._M_dataplusD.11519
  # DEBUG thisD.51955 => D#187ptD.0
  # DEBUG thisD.51956 => D#187ptD.0
  # DEBUG thisD.51957 => D#187ptD.0
  resx 2
;;    succ:      

;;   basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 97, next block 99, flags: (NEW)
;;    pred:       32 (EH,EXECUTABLE)
<L21>: [LP 12]
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       98 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_1 = PHI <__new_finish_153(98), __new_finish_36(83)>
  # .MEM_4 = PHI <.MEM_273(98), .MEM_320(83)>
<L5>:
  # DEBUG __new_finishD.40500 => __new_finish_1
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _50 = __builtin_eh_pointerD.2738 (6);
  # .MEM_51 = VDEF <.MEM_4>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_begin_catchD.14644 (_50);
  if (__new_finish_1 == 0B)
    goto <bb 102>;
  else
    goto <bb 100>;
;;    succ:       102 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                100 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 99, next block 101, flags: (NEW, REACHABLE)
;;    pred:       99 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.51984 => __new_finish_153
  if (__new_finish_1 == __new_finish_153)
    goto <bb 101>;
  else
    goto <bb 106>;
;;    succ:       101 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                106 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 100, next block 102, flags: (NEW)
;;    pred:       100 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                109 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                129 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_365 = PHI <.MEM_51(100), .MEM_127(109), .MEM_81(129)>
  goto <bb 111>;
;;    succ:       111 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 101, next block 103, flags: (NEW)
;;    pred:       99 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_106 = &_32->D.11539._M_local_bufD.11541;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       102 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                128 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                129 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_51(102), .MEM_231(128), .MEM_81(129)>
  # PT = null { D.56709 } (escaped heap)
  # prephitmp_113 = PHI <pretmp_106(102), pretmp_107(128), _21(129)>
  # DEBUG __new_finishD.40500 => 0B
  # DEBUG D#431ptD.0 => &this_7(D)->D.36723._M_implD.36214
  # DEBUG D#194ptD.0 => D#431ptD.0
  # DEBUG __pD.51958 => _32
  # DEBUG __aD.51959 => D#194ptD.0
  # DEBUG D#193ptD.0 => D#194ptD.0
  # DEBUG D#192ptD.0 => D#193ptD.0
  # DEBUG __pD.51961 => _32
  # DEBUG thisD.51960 => D#192ptD.0
  # DEBUG thisD.51962 => _32
  # DEBUG thisD.51963 => _32
  # DEBUG thisD.51972 => _32
  # VUSE <.MEM_58>
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  _23 = MEM[(charD.10 * *)_32];
  # DEBUG D#3ptD.0 => _32
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51973 => _32
  if (_23 != prephitmp_113)
    goto <bb 104>;
  else
    goto <bb 105>;
;;    succ:       104 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                105 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 103, next block 105, flags: (NEW, REACHABLE)
;;    pred:       103 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => _32->D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51965 => _32
  # DEBUG __sizeD.51964 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => _32
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => _32
  # DEBUG D#183ptD.0 => &_32->_M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51968 => _23
  # DEBUG __aD.51966 => D#181ptD.0
  # DEBUG __nD.51967 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51971 => _23
  # DEBUG thisD.51969 => D#177ptD.0
  # DEBUG D.51970 => D#178ptD.0
  # .MEM_118 = VDEF <.MEM_58>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (_23);
;;    succ:       105 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 104, next block 106, flags: (NEW, REACHABLE)
;;    pred:       103 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                104 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_88 = PHI <.MEM_58(103), .MEM_118(104)>
  # DEBUG D#187ptD.0 => &_32->_M_dataplusD.11519
  # DEBUG thisD.51974 => D#187ptD.0
  # DEBUG thisD.51975 => D#187ptD.0
  # DEBUG thisD.51976 => D#187ptD.0
  # .MEM_122 = VDEF <.MEM_88>
  MEM[(struct  &)_32] ={v} {CLOBBER};
  goto <bb 111>;
;;    succ:       111 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 105, next block 107, flags: (NEW, REACHABLE)
;;    pred:       100 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       107 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 107, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 106, next block 108, flags: (NEW)
;;    pred:       106 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                110 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_130 = PHI <__new_finish_153(106), __new_finish_80(110)>
  # .MEM_191 = PHI <.MEM_51(106), .MEM_127(110)>
  # DEBUG __firstD.51984 => __new_finish_130
  # DEBUG __rD.49471 => __new_finish_130
  # DEBUG __pointerD.51985 => NULL
  # DEBUG thisD.51986 => NULL
  # DEBUG thisD.51987 => NULL
  # DEBUG thisD.51996 => NULL
  # VUSE <.MEM_191>
  # PT = nonlocal escaped null { D.56709 } (escaped heap)
  _78 = MEM[(charD.10 * *)__new_finish_130];
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.51997 => NULL
  # PT = null { D.56709 } (escaped heap)
  _79 = &MEM[(const struct basic_stringD.2844 *)__new_finish_130].D.11539._M_local_bufD.11541;
  if (_78 != _79)
    goto <bb 108>;
  else
    goto <bb 109>;
;;    succ:       108 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                109 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 108, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       107 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.51989 => NULL
  # DEBUG __sizeD.51988 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => NULL
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.51992 => _78
  # DEBUG __aD.51990 => D#181ptD.0
  # DEBUG __nD.51991 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.51995 => _78
  # DEBUG thisD.51993 => D#177ptD.0
  # DEBUG D.51994 => D#178ptD.0
  # .MEM_123 = VDEF <.MEM_191>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (_78);
;;    succ:       109 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 109, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       107 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                108 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_191(107), .MEM_123(108)>
  # DEBUG thisD.51998 => D#187ptD.0
  # DEBUG thisD.51999 => D#187ptD.0
  # DEBUG thisD.52000 => D#187ptD.0
  # .MEM_127 = VDEF <.MEM_90>
  MEM[(struct  &)__new_finish_130] ={v} {CLOBBER};
  # PT = null { D.56709 } (escaped heap)
  __new_finish_80 = __new_finish_130 + 32;
  # DEBUG __firstD.51984 => __new_finish_80
  # DEBUG __firstD.51984 => __new_finish_80
  if (__new_finish_1 == __new_finish_80)
    goto <bb 101>;
  else
    goto <bb 110>;
;;    succ:       101 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                110 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 110, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 109, next block 111, flags: (NEW)
;;    pred:       109 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 107>;
;;    succ:       107 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 110, next block 112, flags: (NEW, REACHABLE)
;;    pred:       105 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                101 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_122(105), .MEM_365(101)>
  # DEBUG D#432ptD.0 => &this_7(D)->D.36723
  # DEBUG D#246ptD.0 => D#432ptD.0
  # DEBUG __pD.52003 => NULL
  # DEBUG thisD.52005 => D#246ptD.0
  # DEBUG __nD.52004 => D#247ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  if (__new_finish_153 != 0B)
    goto <bb 112>;
  else
    goto <bb 113>;
;;    succ:       112 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                113 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 111, next block 113, flags: (NEW, REACHABLE)
;;    pred:       111 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#243ptD.0 => &D#244ptD.0->_M_implD.36214
  # DEBUG D#241ptD.0 => D#243ptD.0
  # DEBUG D#242ptD.0 => D#245ptD.0
  # DEBUG __pD.52009 => NULL
  # DEBUG __aD.52007 => D#241ptD.0
  # DEBUG __nD.52008 => D#242ptD.0
  # DEBUG D#240ptD.0 => D#242ptD.0
  # DEBUG D#239ptD.0 => D#241ptD.0
  # DEBUG D#237ptD.0 => D#239ptD.0
  # DEBUG D#238ptD.0 => D#240ptD.0
  # DEBUG __pD.52012 => NULL
  # DEBUG thisD.52010 => D#237ptD.0
  # DEBUG D.52011 => D#238ptD.0
  # .MEM_128 = VDEF <.MEM_5>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZdlPvD.2766 (__new_finish_153);
;;    succ:       113 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       112 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                111 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_128(112), .MEM_5(111)>
  [LP 4] # .MEM_55 = VDEF <.MEM_91>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_rethrowD.40506 ();
;;    succ:       114 (EH,EXECUTABLE)

;;   basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 113, next block 115, flags: (NEW, REACHABLE)
;;    pred:       113 (EH,EXECUTABLE)
<L10>: [LP 4]
  [MNT 8] # .MEM_56 = VDEF <.MEM_55>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_end_catchD.14643 ();
  resx 7
;;    succ:      

;;   basic block 115, loop depth 0, count 0, freq 98, maybe hot
;;   Invalid sum of incoming frequencies 650, should be 98
;;    prev block 114, next block 116, flags: (NEW, REACHABLE)
;;    pred:       4 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_404 = PHI <.MEM_92(4), .MEM_94(10)>
  # .MEM_254 = VDEF <.MEM_404>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 116, loop depth 0, count 0, freq 314, maybe hot
;;   Invalid sum of incoming frequencies 47, should be 314
;;    prev block 115, next block 117, flags: (NEW, REACHABLE)
;;    pred:       4 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56469 => _40
  # DEBUG __lastD.56468 => _37
  # DEBUG D#393ptD.0 => &__firstD.56469
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56471 => _40
  # DEBUG __lastD.56470 => _37
  # .MEM_245 = VDEF <.MEM_92>
  __dnewD.56446 = _39;
  if (_39 > 15)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 117, loop depth 0, count 0, freq 450, maybe hot
;;   Invalid sum of incoming frequencies 68, should be 450
;;    prev block 116, next block 118, flags: (NEW, REACHABLE)
;;    pred:       10 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56498 => _34
  # DEBUG __lastD.56497 => _27
  # DEBUG D#393ptD.0 => &__firstD.56498
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56500 => _34
  # DEBUG __lastD.56499 => _27
  # .MEM_255 = VDEF <.MEM_94>
  __dnewD.56475 = _33;
  if (_33 > 15)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 118, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.40490 => NULL
  # DEBUG thisD.51864 => this_7(D)
  # DEBUG D#131ptD.0 => &this_7(D)->D.36723._M_implD.36214._M_startD.36216
  # DEBUG thisD.51866 => NULL
  # DEBUG __iD.51865 => D#131ptD.0
  # DEBUG __lhsD.51861 => &__positionD.36653
  # DEBUG __rhsD.51862 => &D.40492
  # DEBUG thisD.48012 => &__positionD.36653
  _406 = (long intD.12) __position_28;
  # DEBUG thisD.48010 => &D.40492
  _407 = _406 - _156;
  # DEBUG D#436ptD.0 => _407 /[ex] 32
  # DEBUG __elems_beforeD.40491 => (const size_typeD.36299) D#436ptD.0
  # DEBUG D#435ptD.0 => &this_7(D)->D.36723
  # DEBUG D#416ptD.0 => D#435ptD.0
  # DEBUG __nD.56501 => NULL
  # DEBUG thisD.56502 => D#416ptD.0
  # DEBUG D#415ptD.0 => D#416ptD.0
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 119, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 118, next block 120, flags: (NEW, REACHABLE)
;;    pred:       27 (FALSE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # __len_59 = PHI <__len_164(27), 1(25)>
  # DEBUG __lenD.56513 => __len_59
  # DEBUG D#38ptD.0 => this_7(D)
  # DEBUG thisD.51595 => D#38ptD.0
  # DEBUG thisD.51594 => D#38ptD.0
  # DEBUG D#408ptD.0 => this_7(D)
  # DEBUG thisD.51610 => D#408ptD.0
  # DEBUG D#407ptD.0 => D#408ptD.0
  # DEBUG D#406ptD.0 => &D#407ptD.0->D.36723
  # DEBUG thisD.51580 => D#406ptD.0
  # DEBUG __aD.51572 => D#405ptD.0
  # DEBUG D#404ptD.0 => D#405ptD.0
  # DEBUG D#403ptD.0 => D#404ptD.0
  # DEBUG thisD.51563 => D#403ptD.0
  # DEBUG __lenD.40490 => NULL
  # DEBUG thisD.51864 => this_7(D)
  # DEBUG D#131ptD.0 => &this_7(D)->D.36723._M_implD.36214._M_startD.36216
  # DEBUG thisD.51866 => NULL
  # DEBUG __iD.51865 => D#131ptD.0
  # DEBUG __lhsD.51861 => &__positionD.36653
  # DEBUG __rhsD.51862 => &D.40492
  # DEBUG thisD.48012 => &__positionD.36653
  _395 = (long intD.12) __position_28;
  # DEBUG thisD.48010 => &D.40492
  _402 = _395 - _156;
  # DEBUG D#436ptD.0 => _402 /[ex] 32
  # DEBUG __elems_beforeD.40491 => (const size_typeD.36299) D#436ptD.0
  # DEBUG D#435ptD.0 => &this_7(D)->D.36723
  # DEBUG D#416ptD.0 => D#435ptD.0
  # DEBUG __nD.56501 => NULL
  # DEBUG thisD.56502 => D#416ptD.0
  # DEBUG D#415ptD.0 => D#416ptD.0
  if (__len_59 != 0)
    goto <bb 28>;
  else
    goto <bb 30>;
;;    succ:       28 [20.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [80.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 120, loop depth 0, count 0, freq 3, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 119, next block 121, flags: (NEW, REACHABLE)
;;    pred:       31 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 10] # .MEM_281 = VDEF <.MEM_108>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       129 (EH,EXECUTABLE)

;;   basic block 121, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 120, next block 122, flags: (NEW, REACHABLE)
;;    pred:       31 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56546 => _65
  # DEBUG __lastD.56545 => _67
  # DEBUG D#393ptD.0 => &__firstD.56546
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56548 => _65
  # DEBUG __lastD.56547 => _67
  # .MEM_272 = VDEF <.MEM_108>
  __dnewD.56523 = _66;
  if (_66 > 15)
    goto <bb 32>;
  else
    goto <bb 34>;
;;    succ:       32 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 122, loop depth 0, count 0, freq 87, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 580, should be 87
;;    prev block 121, next block 123, flags: (NEW, REACHABLE)
;;    pred:       41 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_124 = PHI <__new_finish_214(41)>
  [LP 6] # .MEM_292 = VDEF <.MEM_282>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       123 (EH,EXECUTABLE)

;;   basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 122, next block 124, flags: (NEW)
;;    pred:       122 (EH,EXECUTABLE)
<L25>: [LP 6]
  goto <bb 53> (<L11>);
;;    succ:       53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 124, loop depth 1, count 0, freq 682, maybe hot
;;   Invalid sum of incoming frequencies 102, should be 682
;;    prev block 123, next block 125, flags: (NEW, REACHABLE)
;;    pred:       41 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56620 => _179
  # DEBUG __lastD.56619 => _181
  # DEBUG D#393ptD.0 => &__firstD.56620
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56622 => _179
  # DEBUG __lastD.56621 => _181
  # .MEM_283 = VDEF <.MEM_282>
  __dnewD.56597 = _180;
  if (_180 > 15)
    goto <bb 42>;
  else
    goto <bb 44>;
;;    succ:       42 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 125, loop depth 0, count 0, freq 86, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 575, should be 86
;;    prev block 124, next block 126, flags: (NEW, REACHABLE)
;;    pred:       63 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.56709 } (escaped heap)
  # __new_finish_201 = PHI <__new_finish_111(63)>
  [LP 8] # .MEM_312 = VDEF <.MEM_302>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       126 (EH,EXECUTABLE)

;;   basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 125, next block 127, flags: (NEW)
;;    pred:       125 (EH,EXECUTABLE)
<L26>: [LP 8]
  goto <bb 75> (<L14>);
;;    succ:       75 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 127, loop depth 1, count 0, freq 676, maybe hot
;;   Invalid sum of incoming frequencies 101, should be 676
;;    prev block 126, next block 128, flags: (NEW, REACHABLE)
;;    pred:       63 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56694 => _203
  # DEBUG __lastD.56693 => _205
  # DEBUG D#393ptD.0 => &__firstD.56694
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56696 => _203
  # DEBUG __lastD.56695 => _205
  # .MEM_303 = VDEF <.MEM_302>
  __dnewD.56671 = _204;
  if (_204 > 15)
    goto <bb 64>;
  else
    goto <bb 66>;
;;    succ:       64 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 127, next block 129, flags: (NEW, REACHABLE)
;;    pred:       60 (EH,EXECUTABLE)
<L17>: [LP 9]
  # DEBUG __new_finishD.40500 => 0B
  # VUSE <.MEM_300>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _232 = __builtin_eh_pointerD.2738 (6);
  # .MEM_231 = VDEF <.MEM_300>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_begin_catchD.14644 (_232);
  pretmp_107 = &_32->D.11539._M_local_bufD.11541;
  goto <bb 103>;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 128, next block 1, flags: (NEW, REACHABLE)
;;    pred:       120 (EH,EXECUTABLE)
<L18>: [LP 10]
  # DEBUG __new_finishD.40500 => __new_finish_153
  # VUSE <.MEM_281>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _160 = __builtin_eh_pointerD.2738 (6);
  # .MEM_81 = VDEF <.MEM_281>
  # USE = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  # CLB = nonlocal null { D.40484 D.56446 D.56475 D.56523 D.56597 D.56671 D.56709 } (escaped)
  __cxa_begin_catchD.14644 (_160);
  if (__new_finish_153 == 0B)
    goto <bb 103>;
  else
    goto <bb 101>;
;;    succ:       103 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                101 [85.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function std::vector<std::__cxx11::basic_string<char> > tokenize_str(const string&) (_Z12tokenize_strRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1752, decl_uid=35337, cgraph_uid=438, symbol_order=440)


Pass statistics:
----------------

std::vector<std::__cxx11::basic_string<char> > tokenize_str(const string&) (const struct stringD.2845 & dataD.38526)
Eh tree:
   1 cleanup land:{10,<L35>},{7,<L32>},{6,<L31>},{5,<L30>},{4,<L29>},{1,<L36>}
     3 cleanup land:{9,<L34>},{8,<L33>},{3,<L37>}
{
  struct basic_stringD.2844 * __firstD.56971;
  size_typeD.11502 __dnewD.56942;
  struct __normal_iteratorD.36292 D.56938;
  size_typeD.11502 __dnewD.56890;
  const charD.10 * __startD.56871;
  size_typeD.11502 __dnewD.56828;
  struct __normal_iteratorD.36292 D.56824;
  struct stringD.2845 tokenD.38535;
  static const charD.10 _ZZ12tokenize_strRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38537[75] = "std::vector<std::__cxx11::basic_string<char> > tokenize_str(const string&)";
  size_tD.5382 currD.38534;
  intD.9 nestedD.38533;
  charD.10 * const _14;
  charD.10 _17;
  charD.10 * const _19;
  charD.10 _22;
  const size_typeD.11502 _24;
  long unsigned intD.14 _26;
  charD.10 * const pretmp_27;
  charD.10 * const _29;
  size_typeD.11502 _37;
  const charD.10 & _38;
  charD.10 * const _39;
  size_tD.5382 pretmp_46;
  size_tD.5382 pretmp_47;
  size_tD.5382 prephitmp_48;
  size_typeD.11502 pretmp_49;
  struct basic_stringD.2844 * pretmp_52;
  struct basic_stringD.2844 * prephitmp_53;
  size_tD.5382 pretmp_54;
  charD.10 * const _57;
  boolD.2757 _58;
  charD.10 * const _60;
  const size_typeD.11502 _74;
  long unsigned intD.14 _78;
  size_typeD.11502 pretmp_79;
  const charD.10 * _80;
  charD.10 * const prephitmp_82;
  charD.10 * _86;
  long unsigned intD.14 __dnew.111_87;
  const char_typeD.6439 _89;
  const size_typeD.11502 _91;
  charD.10 * _92;
  struct basic_stringD.2844 * _93;
  struct basic_stringD.2844 * _94;
  charD.10 * _95;
  charD.10 * const _96;
  const size_typeD.11502 _97;
  charD.10 * _98;
  struct basic_stringD.2844 * _100;
  charD.10 * _105;
  long unsigned intD.14 __dnew.111_106;
  const char_typeD.6439 _108;
  charD.10 * _111;
  struct basic_stringD.2844 * _112;
  charD.10 * const pretmp_114;
  charD.10 * const _115;
  const charD.10 * _116;
  size_typeD.11502 prephitmp_120;
  struct basic_stringD.2844 * prephitmp_123;
  charD.10 * const prephitmp_128;
  size_typeD.11502 prephitmp_130;
  boolD.2757 _133;
  struct basic_stringD.2844 * pretmp_141;
  boolD.2757 _144;
  boolD.2757 _179;
  boolD.2757 _181;
  boolD.2757 _186;
  boolD.2757 _191;
  boolD.2757 _192;
  boolD.2757 _193;
  size_typeD.11502 iftmp.174_194;

;;   basic block 2, loop depth 0, count 0, freq 759, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.52046 => values_13(D)
  # DEBUG D#294ptD.0 => &values_13(D)->D.36723
  # DEBUG thisD.52047 => D#294ptD.0
  # DEBUG D#293ptD.0 => &D#294ptD.0->_M_implD.36214
  # DEBUG thisD.52048 => D#293ptD.0
  # DEBUG thisD.49718 => D#293ptD.0
  # DEBUG thisD.49716 => D#293ptD.0
  # .MEM_41 = VDEF <.MEM_12(D)>
  MEM[(struct _Vector_implD.36191 *)values_13(D)]._M_startD.36216 = 0B;
  # .MEM_42 = VDEF <.MEM_41>
  MEM[(struct _Vector_implD.36191 *)values_13(D)]._M_finishD.36217 = 0B;
  # .MEM_43 = VDEF <.MEM_42>
  MEM[(struct _Vector_implD.36191 *)values_13(D)]._M_end_of_storageD.36218 = 0B;
  # DEBUG thisD.52044 => data_15(D)
  # VUSE <.MEM_43>
  _24 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46865 => D#2ptD.0
  if (_24 == 0)
    goto <bb 42>;
  else
    goto <bb 3>;
;;    succ:       42 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 463, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52049 => data_15(D)
  # DEBUG __posD.52050 => 0
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_43>
  _17 = MEM[(const charD.10 &)_14];
  if (_17 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [51.2%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [48.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [48.8%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 16, maybe hot
;;   Invalid sum of incoming frequencies 237, should be 16
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [51.2%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.56802 => values_13(D)
  # DEBUG __xD.56803 => data_15(D)
  # DEBUG thisD.52038 => values_13(D)
  # DEBUG D#130ptD.0 => &values_13(D)->D.36723._M_implD.36214._M_finishD.36217
  # DEBUG thisD.52040 => NULL
  # DEBUG __iD.52039 => D#130ptD.0
  # .MEM_131 = VDEF <.MEM_43>
  MEM[(struct __normal_iteratorD.36292 *)&D.56824] = 0B;
  [LP 4] # .MEM_132 = VDEF <.MEM_131>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_D.36651 (values_13(D), D.56824, data_15(D));
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 (EH,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_1 = PHI <1(4), curr_2(39)>
  # nested_3 = PHI <0(4), nested_4(39)>
  # RANGE [1, 18446744073709551615]
  # curr_5 = PHI <1(4), prephitmp_48(39)>
  # .MEM_7 = PHI <.MEM_43(4), .MEM_9(39)>
  # DEBUG currD.38534 => curr_5
  # DEBUG nestedD.38533 => nested_3
  # DEBUG startD.38532 => curr_1
  # DEBUG thisD.52052 => data_15(D)
  # DEBUG __sD.52053 => "{,}"
  # DEBUG __posD.52054 => curr_5
  # DEBUG __sD.52055 => "{,}"
  [LP 5] # .MEM_44 = VDEF <.MEM_7>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _37 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmmD.12156 (data_15(D), "{,}", curr_5, 3);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L30>: [LP 5]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG currD.38534 => _37
  if (_37 != 18446744073709551615)
    goto <bb 9>;
  else
    goto <bb 40>;
;;    succ:       9 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 9775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.52057 => data_15(D)
  # DEBUG __posD.52058 => _37
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _19 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # PT = nonlocal escaped 
  _38 = _19 + _37;
  # VUSE <.MEM_44>
  _22 = *_38;
  if (_22 == 123)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 2737, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_23 = nested_3 + 1;
  # DEBUG nestedD.38533 => nested_23
  pretmp_54 = _37 + 1;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 1971, maybe hot
;;   Invalid sum of incoming frequencies 7038, should be 1971
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52060 => data_15(D)
  # DEBUG __posD.52061 => _37
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # RANGE [0, 1]
  _181 = nested_3 != 0;
  # RANGE [0, 1]
  _186 = _22 == 125;
  # RANGE [0, 1]
  _179 = _181 & _186;
  if (_179 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;
;;    succ:       59 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 1759, maybe hot
;;   Invalid sum of incoming frequencies 3027, should be 1759
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       60 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  if (curr_1 < _37)
    goto <bb 13>;
  else
    goto <bb 38>;
;;    succ:       13 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _26 = _37 - curr_1;
  # DEBUG thisD.56854 => data_15(D)
  # DEBUG __posD.56855 => curr_1
  # DEBUG __nD.56856 => _26
  # DEBUG thisD.56859 => data_15(D)
  # DEBUG __posD.56858 => curr_1
  # DEBUG __sD.56857 => "basic_string::substr"
  # VUSE <.MEM_44>
  _74 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  if (curr_1 > _74)
    goto <bb 14>;
  else
    goto <bb 16>;
;;    succ:       14 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_88 = PHI <curr_1(13)>
  # _91 = PHI <_74(13)>
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46997 => D#2ptD.0
  [LP 6] # .MEM_171 = VDEF <.MEM_44>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZSt24__throw_out_of_range_fmtPKczD.2864 ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_88, _91);
;;    succ:       15 (EH,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 (EH,EXECUTABLE)
<L31>: [LP 6]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56860 => &tokenD.38535
  # DEBUG __strD.56861 => data_15(D)
  # DEBUG __posD.56862 => curr_1
  # DEBUG __nD.56863 => _26
  # DEBUG thisD.56865 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.56866 => &tokenD.38535
  # DEBUG D#401ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG thisD.56869 => D#401ptD.0
  # DEBUG __datD.56868 => &tokenD.38535.D.11539._M_local_bufD.11541
  # DEBUG __aD.56867 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#401ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_145 = VDEF <.MEM_44>
  MEM[(struct _Alloc_hiderD.11518 *)&tokenD.38535]._M_pD.11525 = &tokenD.38535.D.11539._M_local_bufD.11541;
  # DEBUG thisD.56870 => NULL
  # DEBUG thisD.51465 => NULL
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.51462 => D#3ptD.0
  # DEBUG thisD.56886 => data_15(D)
  # DEBUG __posD.56885 => curr_1
  # DEBUG __sD.56884 => "basic_string::basic_string"
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  # PT = nonlocal escaped 
  __start_77 = _19 + curr_1;
  # DEBUG __startD.56871 => __start_77
  # DEBUG thisD.56874 => data_15(D)
  # DEBUG __posD.56873 => curr_1
  # DEBUG __offD.56872 => _26
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46904 => D#2ptD.0
  # RANGE [0, 18446744073709551615]
  _78 = _74 - curr_1;
  # DEBUG __testoffD.56875 => _78 > _26
  # RANGE [0, 18446744073709551615]
  iftmp.174_194 = MIN_EXPR <_26, _78>;
  # PT = nonlocal escaped 
  _80 = __start_77 + iftmp.174_194;
  # DEBUG thisD.56878 => &tokenD.38535
  # DEBUG __begD.56877 => __start_77
  # DEBUG __endD.56876 => _80
  # DEBUG thisD.56882 => &tokenD.38535
  # DEBUG __begD.56881 => __start_77
  # DEBUG __endD.56880 => _80
  # DEBUG thisD.56887 => &tokenD.38535
  # DEBUG __begD.56888 => __start_77
  # DEBUG __endD.56889 => _80
  # DEBUG __ptrD.51229 => __start_77
  # RANGE [0, 1]
  _144 = _80 != 0B;
  # RANGE [0, 1]
  _58 = __start_77 == 0B;
  # RANGE [0, 1]
  _133 = _58 & _144;
  if (_133 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;
;;    succ:       63 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       62 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 7] # .MEM_147 = VDEF <.MEM_146>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _86 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&tokenD.38535, &__dnewD.56890, 0);
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 (EH,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 (EH,EXECUTABLE)
<L32>: [LP 7]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &tokenD.38535
  # DEBUG __pD.56909 => _86
  # DEBUG thisD.56908 => D#6ptD.0
  # .MEM_148 = VDEF <.MEM_147>
  MEM[(charD.10 * *)&tokenD.38535] = _86;
  # VUSE <.MEM_148>
  __dnew.111_87 = __dnewD.56890;
  # DEBUG D#7ptD.0 => &tokenD.38535
  # DEBUG __capacityD.56911 => __dnew.111_87
  # DEBUG thisD.56910 => D#7ptD.0
  # .MEM_149 = VDEF <.MEM_148>
  MEM[(size_typeD.11502 *)&tokenD.38535 + 16B] = __dnew.111_87;
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56893 => _86
  # DEBUG __k1D.56892 => __start_77
  # DEBUG __k2D.56891 => _80
  # DEBUG __dD.56896 => _86
  # DEBUG __sD.56895 => __start_77
  # DEBUG __nD.56894 => iftmp.174_194
  goto <bb 22>;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 362, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       62 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56893 => &tokenD.38535.D.11539._M_local_bufD.11541
  # DEBUG __k1D.56892 => __start_77
  # DEBUG __k2D.56891 => _80
  # DEBUG __dD.56896 => &tokenD.38535.D.11539._M_local_bufD.11541
  # DEBUG __sD.56895 => __start_77
  # DEBUG __nD.56894 => iftmp.174_194
  if (iftmp.174_194 == 1)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 193, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_146>
  _89 = MEM[(const char_typeD.6439 &)__start_77];
  # DEBUG D#13ptD.0 => __start_77
  # DEBUG __c1D.56901 => &tokenD.38535.D.11539._M_local_bufD.11541
  # DEBUG __c2D.56900 => D#13ptD.0
  # .MEM_150 = VDEF <.MEM_146>
  MEM[(char_typeD.6439 &)&tokenD.38535 + 16] = _89;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 317, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38535 } (escaped)
  # _60 = PHI <&tokenD.38535.D.11539._M_local_bufD.11541(20), _86(19)>
  # .MEM_170 = PHI <.MEM_146(20), .MEM_149(19)>
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56893 => _60
  # DEBUG __k1D.56892 => __start_77
  # DEBUG __k2D.56891 => _80
  # DEBUG __dD.56896 => _60
  # DEBUG __sD.56895 => __start_77
  # DEBUG __nD.56894 => iftmp.174_194
  # DEBUG __s1D.56899 => _60
  # DEBUG __s2D.56898 => __start_77
  # DEBUG __nD.56897 => iftmp.174_194
  # .MEM_151 = VDEF <.MEM_170>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  memcpyD.992 (_60, __start_77, iftmp.174_194);
  # VUSE <.MEM_151>
  pretmp_49 = __dnewD.56890;
  # VUSE <.MEM_151>
  pretmp_114 = MEM[(charD.10 * *)&tokenD.38535];
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_122 = PHI <.MEM_150(21), .MEM_151(22)>
  # prephitmp_130 = PHI <iftmp.174_194(21), pretmp_49(22)>
  # PT = nonlocal escaped null { D.38535 } (escaped)
  # prephitmp_128 = PHI <&tokenD.38535.D.11539._M_local_bufD.11541(21), pretmp_114(22)>
  # DEBUG D#780ptD.0 => __dnewD.56890
  # DEBUG thisD.56903 => &tokenD.38535
  # DEBUG __nD.56902 => D#780ptD.0
  # DEBUG D#5ptD.0 => &tokenD.38535
  # DEBUG __lengthD.56905 => D#780ptD.0
  # DEBUG thisD.56904 => D#5ptD.0
  # .MEM_152 = VDEF <.MEM_122>
  MEM[(size_typeD.11502 *)&tokenD.38535 + 8B] = prephitmp_130;
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _92 = prephitmp_128 + prephitmp_130;
  # DEBUG __c1D.56907 => _92
  # DEBUG __c2D.56906 => D#13ptD.0
  # .MEM_153 = VDEF <.MEM_152>
  MEM[(char_typeD.6439 &)_92] = 0;
  # .MEM_154 = VDEF <.MEM_153>
  __dnewD.56890 ={v} {CLOBBER};
  # DEBUG thisD.56916 => values_13(D)
  # DEBUG __xD.56917 => &tokenD.38535
  # VUSE <.MEM_154>
  # PT = nonlocal escaped 
  _93 = values_13(D)->D.36723._M_implD.36214._M_finishD.36217;
  # VUSE <.MEM_154>
  # PT = nonlocal escaped 
  _94 = values_13(D)->D.36723._M_implD.36214._M_end_of_storageD.36218;
  if (_93 != _94)
    goto <bb 24>;
  else
    goto <bb 33>;
;;    succ:       24 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#437ptD.0 => &values_13(D)->D.36723._M_implD.36214
  # DEBUG D#392ptD.0 => D#437ptD.0
  # DEBUG __pD.56920 => _93
  # DEBUG __argD.56919 => &tokenD.38535
  # DEBUG __aD.56918 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#390ptD.0 => D#391ptD.0
  # DEBUG __pD.56923 => _93
  # DEBUG __valD.56922 => &tokenD.38535
  # DEBUG thisD.56921 => D#390ptD.0
  # DEBUG D#14ptD.0 => 32
  # DEBUG __pD.51034 => _93
  # DEBUG D.51035 => D#14ptD.0
  if (_93 != 0B)
    goto <bb 25>;
  else
    goto <bb 32>;
;;    succ:       25 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 372, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.56925 => _93
  # DEBUG __strD.56924 => &tokenD.38535
  # DEBUG thisD.50825 => &tokenD.38535
  # DEBUG D#380ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG thisD.56926 => _93
  # PT = nonlocal escaped 
  _95 = &_93->D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &_93->_M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.56929 => D#381ptD.0
  # DEBUG __datD.56928 => _95
  # DEBUG __aD.56927 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_157 = VDEF <.MEM_154>
  MEM[(struct _Alloc_hiderD.11518 *)_93]._M_pD.11525 = _95;
  # VUSE <.MEM_157>
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _96 = MEM[(charD.10 * *)&tokenD.38535];
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_157>
  _97 = MEM[(long unsigned intD.14 *)&tokenD.38535 + 8B];
  # DEBUG D#1ptD.0 => &tokenD.38535
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _98 = _96 + _97;
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.56932 => _93
  # DEBUG __begD.56931 => _96
  # DEBUG __endD.56930 => _98
  # DEBUG thisD.56936 => _93
  # DEBUG __begD.56935 => _96
  # DEBUG __endD.56934 => _98
  # DEBUG thisD.56939 => _93
  # DEBUG __begD.56940 => _96
  # DEBUG __endD.56941 => _98
  # DEBUG __ptrD.51229 => _96
  # RANGE [0, 1]
  _192 = _98 != 0B;
  # RANGE [0, 1]
  _191 = _96 == 0B;
  # RANGE [0, 1]
  _193 = _191 & _192;
  if (_193 != 0)
    goto <bb 65>;
  else
    goto <bb 67>;
;;    succ:       65 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 108, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       67 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 8] # .MEM_159 = VDEF <.MEM_158>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _105 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_93, &__dnewD.56942, 0);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 (EH,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 108, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => _93
  # DEBUG __pD.56961 => _105
  # DEBUG thisD.56960 => D#6ptD.0
  # .MEM_160 = VDEF <.MEM_159>
  MEM[(charD.10 * *)_93] = _105;
  # VUSE <.MEM_160>
  __dnew.111_106 = __dnewD.56942;
  # DEBUG D#7ptD.0 => _93
  # DEBUG __capacityD.56963 => __dnew.111_106
  # DEBUG thisD.56962 => D#7ptD.0
  # .MEM_161 = VDEF <.MEM_160>
  MEM[(size_typeD.11502 *)_93 + 16B] = __dnew.111_106;
  # DEBUG D#3ptD.0 => _93
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56945 => _105
  # DEBUG __k1D.56944 => _96
  # DEBUG __k2D.56943 => _98
  # DEBUG __dD.56948 => _105
  # DEBUG __sD.56947 => _96
  # DEBUG __nD.56946 => _97
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 264, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       67 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => _93
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56945 => _95
  # DEBUG __k1D.56944 => _96
  # DEBUG __k2D.56943 => _98
  # DEBUG __dD.56948 => _95
  # DEBUG __sD.56947 => _96
  # DEBUG __nD.56946 => _97
  if (_97 == 1)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 141, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_158>
  _108 = MEM[(const char_typeD.6439 &)_96];
  # DEBUG D#13ptD.0 => _96
  # DEBUG __c1D.56953 => _95
  # DEBUG __c2D.56952 => D#13ptD.0
  # .MEM_162 = VDEF <.MEM_158>
  MEM[(char_typeD.6439 &)_95] = _108;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 231, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _57 = PHI <_95(28), _105(27)>
  # .MEM_188 = PHI <.MEM_158(28), .MEM_161(27)>
  # DEBUG D#3ptD.0 => _93
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56945 => _57
  # DEBUG __k1D.56944 => _96
  # DEBUG __k2D.56943 => _98
  # DEBUG __dD.56948 => _57
  # DEBUG __sD.56947 => _96
  # DEBUG __nD.56946 => _97
  # DEBUG __s1D.56951 => _57
  # DEBUG __s2D.56950 => _96
  # DEBUG __nD.56949 => _97
  # .MEM_163 = VDEF <.MEM_188>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  memcpyD.992 (_57, _96, _97);
  # VUSE <.MEM_163>
  pretmp_79 = __dnewD.56942;
  # VUSE <.MEM_163>
  pretmp_27 = MEM[(charD.10 * *)_93];
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 372, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_124 = PHI <.MEM_162(29), .MEM_163(30)>
  # prephitmp_120 = PHI <_97(29), pretmp_79(30)>
  # PT = nonlocal escaped 
  # prephitmp_82 = PHI <_95(29), pretmp_27(30)>
  # DEBUG D#779ptD.0 => __dnewD.56942
  # DEBUG thisD.56955 => _93
  # DEBUG __nD.56954 => D#779ptD.0
  # DEBUG D#5ptD.0 => _93
  # DEBUG __lengthD.56957 => D#779ptD.0
  # DEBUG thisD.56956 => D#5ptD.0
  # .MEM_164 = VDEF <.MEM_124>
  MEM[(size_typeD.11502 *)_93 + 8B] = prephitmp_120;
  # DEBUG D#3ptD.0 => _93
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped 
  _111 = prephitmp_82 + prephitmp_120;
  # DEBUG __c1D.56959 => _111
  # DEBUG __c2D.56958 => D#13ptD.0
  # .MEM_165 = VDEF <.MEM_164>
  MEM[(char_typeD.6439 &)_111] = 0;
  # .MEM_166 = VDEF <.MEM_165>
  __dnewD.56942 ={v} {CLOBBER};
  # VUSE <.MEM_166>
  pretmp_141 = values_13(D)->D.36723._M_implD.36214._M_finishD.36217;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       24 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_125 = PHI <.MEM_154(24), .MEM_166(31)>
  # PT = nonlocal escaped 
  # prephitmp_123 = PHI <_93(24), pretmp_141(31)>
  # PT = nonlocal escaped 
  _100 = prephitmp_123 + 32;
  # .MEM_168 = VDEF <.MEM_125>
  values_13(D)->D.36723._M_implD.36214._M_finishD.36217 = _100;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 34, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       23 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52038 => values_13(D)
  # DEBUG D#130ptD.0 => &values_13(D)->D.36723._M_implD.36214._M_finishD.36217
  # DEBUG thisD.52040 => NULL
  # DEBUG __iD.52039 => D#130ptD.0
  # .MEM_155 = VDEF <.MEM_154>
  MEM[(struct __normal_iteratorD.36292 *)&D.56938] = _93;
  [LP 9] # .MEM_156 = VDEF <.MEM_155>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_D.36651 (values_13(D), D.56938, &tokenD.38535);
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 (EH,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       33 (EH,EXECUTABLE)
<L34>: [LP 9]
  goto <bb 44> (<L26>);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 509, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_126 = PHI <.MEM_156(33), .MEM_168(32)>
  # DEBUG thisD.52063 => &tokenD.38535
  # DEBUG thisD.52064 => &tokenD.38535
  # DEBUG thisD.52073 => &tokenD.38535
  # VUSE <.MEM_126>
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _39 = MEM[(charD.10 * *)&tokenD.38535];
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.52074 => &tokenD.38535
  if (&tokenD.38535.D.11539._M_local_bufD.11541 != _39)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 356, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38535.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.52066 => &tokenD.38535
  # DEBUG __sizeD.52065 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38535
  # DEBUG D#183ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.52069 => _39
  # DEBUG __aD.52067 => D#181ptD.0
  # DEBUG __nD.52068 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.52072 => _39
  # DEBUG thisD.52070 => D#177ptD.0
  # DEBUG D.52071 => D#178ptD.0
  # .MEM_45 = VDEF <.MEM_126>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZdlPvD.2766 (_39);
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 509, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_126(35), .MEM_45(36)>
  # DEBUG D#187ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG thisD.52075 => D#187ptD.0
  # DEBUG thisD.52076 => D#187ptD.0
  # DEBUG thisD.52077 => D#187ptD.0
  # .MEM_30 = VDEF <.MEM_31>
  tokenD.38535 ={v} {CLOBBER};
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       12 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_44(12), .MEM_30(37)>
  # RANGE [1, 18446744073709551615]
  curr_33 = _37 + 1;
  # DEBUG startD.38532 => curr_33
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 9774, maybe hot
;;   Invalid sum of incoming frequencies 11042, should be 9774
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_2 = PHI <curr_1(10), curr_1(59), curr_1(61), curr_33(38)>
  # nested_4 = PHI <nested_23(10), nested_25(59), nested_3(61), 0(38)>
  # .MEM_9 = PHI <.MEM_44(10), .MEM_44(59), .MEM_44(61), .MEM_8(38)>
  # RANGE [1, 18446744073709551615]
  # prephitmp_48 = PHI <pretmp_54(10), pretmp_46(59), pretmp_47(61), curr_33(38)>
  # DEBUG nestedD.38533 => nested_4
  # DEBUG startD.38532 => curr_2
  # DEBUG currD.38534 => _37 + 1
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       8 [2.2%]  (FALSE_VALUE,EXECUTABLE)
  # nested_90 = PHI <nested_3(8)>
  if (nested_90 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_35 = VDEF <.MEM_44>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  __assert_failD.14402 ("!nested", "config_utils.cpp", 362, &_ZZ12tokenize_strRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38537);
;;    succ:      

;;   basic block 42, loop depth 0, count 0, freq 758, maybe hot
;;   Invalid sum of incoming frequencies 537, should be 758
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_187 = PHI <.MEM_43(2), .MEM_132(5), .MEM_44(40)>
  # VUSE <.MEM_187>
  return values_13(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       26 (EH,EXECUTABLE)
<L33>: [LP 8]
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_127 = PHI <.MEM_156(34), .MEM_159(43), .MEM_167(66)>
<L26>:
  # DEBUG thisD.52078 => &tokenD.38535
  # DEBUG thisD.52079 => &tokenD.38535
  # DEBUG thisD.52088 => &tokenD.38535
  # VUSE <.MEM_127>
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _29 = MEM[(charD.10 * *)&tokenD.38535];
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.52089 => &tokenD.38535
  if (&tokenD.38535.D.11539._M_local_bufD.11541 != _29)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38535.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.52081 => &tokenD.38535
  # DEBUG __sizeD.52080 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38535
  # DEBUG D#183ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.52084 => _29
  # DEBUG __aD.52082 => D#181ptD.0
  # DEBUG __nD.52083 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.52087 => _29
  # DEBUG thisD.52085 => D#177ptD.0
  # DEBUG D.52086 => D#178ptD.0
  # .MEM_50 = VDEF <.MEM_127>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZdlPvD.2766 (_29);
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_127(44), .MEM_50(45)>
  # DEBUG D#187ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG thisD.52090 => D#187ptD.0
  # DEBUG thisD.52091 => D#187ptD.0
  # DEBUG thisD.52092 => D#187ptD.0
  [LP 10] resx 3
;;    succ:       47 (EH,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       46 (EH,EXECUTABLE)
<L35>: [LP 10]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L29>: [LP 4]
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_40(47), .MEM_44(7), .MEM_132(48), .MEM_147(18), .MEM_169(64), .MEM_171(15)>
<L28>:
  # .MEM_32 = VDEF <.MEM_11>
  tokenD.38535 ={v} {CLOBBER};
  # DEBUG thisD.56968 => values_13(D)
  # DEBUG D#255ptD.0 => &values_13(D)->D.36723
  # DEBUG thisD.49581 => D#255ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _112 = values_13(D)->D.36723._M_implD.36214._M_finishD.36217;
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __first_113 = values_13(D)->D.36723._M_implD.36214._M_startD.36216;
  # DEBUG __firstD.56971 => __first_113
  # DEBUG __lastD.56970 => _112
  # DEBUG __firstD.56976 => __first_113
  if (_112 == __first_113)
    goto <bb 56>;
  else
    goto <bb 50>;
;;    succ:       56 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW)
;;    pred:       49 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_121 = PHI <__first_113(50), __first_117(54)>
  # .MEM_62 = PHI <.MEM_32(50), .MEM_176(54)>
  # DEBUG __firstD.56976 => __first_121
  # DEBUG __rD.49471 => __first_121
  # DEBUG __pointerD.56977 => NULL
  # DEBUG thisD.56978 => NULL
  # DEBUG thisD.56979 => NULL
  # DEBUG thisD.56988 => NULL
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _115 = MEM[(charD.10 * *)__first_121];
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.56989 => NULL
  # PT = nonlocal escaped 
  _116 = &MEM[(const struct basic_stringD.2844 *)__first_121].D.11539._M_local_bufD.11541;
  if (_115 != _116)
    goto <bb 52>;
  else
    goto <bb 53>;
;;    succ:       52 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.56981 => NULL
  # DEBUG __sizeD.56980 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => NULL
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.56984 => _115
  # DEBUG __aD.56982 => D#181ptD.0
  # DEBUG __nD.56983 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.56987 => _115
  # DEBUG thisD.56985 => D#177ptD.0
  # DEBUG D.56986 => D#178ptD.0
  # .MEM_172 = VDEF <.MEM_62>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZdlPvD.2766 (_115);
;;    succ:       53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       51 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_62(51), .MEM_172(52)>
  # DEBUG thisD.56990 => D#187ptD.0
  # DEBUG thisD.56991 => D#187ptD.0
  # DEBUG thisD.56992 => D#187ptD.0
  # .MEM_176 = VDEF <.MEM_129>
  MEM[(struct  &)__first_121] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_117 = __first_121 + 32;
  # DEBUG __firstD.56976 => __first_117
  # DEBUG __firstD.56976 => __first_117
  if (_112 == __first_117)
    goto <bb 55>;
  else
    goto <bb 54>;
;;    succ:       55 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 51>;
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 54, next block 56, flags: (NEW)
;;    pred:       53 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_176>
  pretmp_52 = MEM[(struct _Vector_baseD.35981 *)values_13(D)]._M_implD.36214._M_startD.36216;
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_176(55), .MEM_32(49)>
  # PT = nonlocal escaped 
  # prephitmp_53 = PHI <pretmp_52(55), __first_113(49)>
  # DEBUG D#256ptD.0 => &values_13(D)->D.36723
  # DEBUG thisD.56993 => D#256ptD.0
  # DEBUG D#253ptD.0 => D#256ptD.0->_M_implD.36214._M_end_of_storageD.36218
  # DEBUG D#252ptD.0 => (long intD.12) D#253ptD.0
  # DEBUG D#778ptD.0 => MEM[(struct _Vector_baseD.35981 *)values_13(D)]._M_implD.36214._M_startD.36216
  # DEBUG D#251ptD.0 => (long intD.12) D#778ptD.0
  # DEBUG D#250ptD.0 => D#252ptD.0 - D#251ptD.0
  # DEBUG D#249ptD.0 => D#250ptD.0 /[ex] 32
  # DEBUG D#246ptD.0 => D#256ptD.0
  # DEBUG D#247ptD.0 => (long unsigned intD.14) D#249ptD.0
  # DEBUG __pD.56996 => D#778ptD.0
  # DEBUG thisD.56994 => D#246ptD.0
  # DEBUG __nD.56995 => D#247ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  if (prephitmp_53 != 0B)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#243ptD.0 => &D#244ptD.0->_M_implD.36214
  # DEBUG D#241ptD.0 => D#243ptD.0
  # DEBUG D#242ptD.0 => D#245ptD.0
  # DEBUG __pD.57000 => D#778ptD.0
  # DEBUG __aD.56998 => D#241ptD.0
  # DEBUG __nD.56999 => D#242ptD.0
  # DEBUG D#240ptD.0 => D#242ptD.0
  # DEBUG D#239ptD.0 => D#241ptD.0
  # DEBUG D#237ptD.0 => D#239ptD.0
  # DEBUG D#238ptD.0 => D#240ptD.0
  # DEBUG __pD.57003 => D#778ptD.0
  # DEBUG thisD.57001 => D#237ptD.0
  # DEBUG D.57002 => D#238ptD.0
  # .MEM_177 = VDEF <.MEM_61>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_53);
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#248ptD.0 => &D#256ptD.0->_M_implD.36214
  # DEBUG thisD.57004 => D#248ptD.0
  # DEBUG thisD.57005 => D#248ptD.0
  # DEBUG thisD.57006 => D#248ptD.0
  resx 1
;;    succ:      

;;   basic block 59, loop depth 1, count 0, freq 3519, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 3519
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_25 = nested_3 + -1;
  # DEBUG nestedD.38533 => nested_25
  pretmp_46 = _37 + 1;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 1, count 0, freq 6053, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 6053
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       11 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (nested_3 == 0)
    goto <bb 12>;
  else
    goto <bb 61>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 61, loop depth 1, count 0, freq 3027, maybe hot
;;    prev block 60, next block 62, flags: (NEW)
;;    pred:       60 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_47 = _37 + 1;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 1, count 0, freq 510, maybe hot
;;   Invalid sum of incoming frequencies 77, should be 510
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       16 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56913 => __start_77
  # DEBUG __lastD.56912 => _80
  # DEBUG D#393ptD.0 => &__firstD.56913
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56915 => __start_77
  # DEBUG __lastD.56914 => _80
  # .MEM_146 = VDEF <.MEM_145>
  __dnewD.56890 = iftmp.174_194;
  if (iftmp.174_194 > 15)
    goto <bb 17>;
  else
    goto <bb 20>;
;;    succ:       17 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 65, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 434, should be 65
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       16 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_169 = VDEF <.MEM_145>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       64 (EH,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       63 (EH,EXECUTABLE)
<L36>: [LP 1]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 48, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 316, should be 48
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 3] # .MEM_167 = VDEF <.MEM_157>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       66 (EH,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 65, next block 67, flags: (NEW)
;;    pred:       65 (EH,EXECUTABLE)
<L37>: [LP 3]
  goto <bb 44> (<L26>);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 1, count 0, freq 372, maybe hot
;;   Invalid sum of incoming frequencies 56, should be 372
;;    prev block 66, next block 1, flags: (NEW, REACHABLE)
;;    pred:       25 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56965 => _96
  # DEBUG __lastD.56964 => _98
  # DEBUG D#393ptD.0 => &__firstD.56965
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56967 => _96
  # DEBUG __lastD.56966 => _98
  # .MEM_158 = VDEF <.MEM_157>
  __dnewD.56942 = _97;
  if (_97 > 15)
    goto <bb 26>;
  else
    goto <bb 28>;
;;    succ:       26 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [71.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_start
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 128
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for MEM[(const char &)_14]
analyze_innermost: success.
	base_address: _14
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char &)_14]
Creating dr for MEM[(struct __normal_iterator *)&D.56824]
analyze_innermost: success.
	base_address: &D.56824
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.56824]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for *_38
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_38
Creating dr for *_38
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_38
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(struct _Alloc_hider *)&token]._M_p
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&token]
	Access function 0: 0
Creating dr for MEM[(struct _Alloc_hider *)&token]._M_p
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&token]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)&token + 16B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 16B]
Creating dr for MEM[(size_type *)&token + 16B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 16B]
Creating dr for MEM[(const char_type &)__start_77]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char_type &)__start_77]
Creating dr for MEM[(const char_type &)__start_77]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char_type &)__start_77]
Creating dr for MEM[(char_type &)&token + 16]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&token + 16]
Creating dr for MEM[(char_type &)&token + 16]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&token + 16]
Creating dr for MEM[(size_type *)&token + 8B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 8B]
Creating dr for MEM[(size_type *)&token + 8B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 8B]
Creating dr for MEM[(char_type &)_92]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_92]
Creating dr for MEM[(char_type &)_92]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_92]
Creating dr for MEM[(struct _Alloc_hider *)_93]._M_p
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Alloc_hider *)_93]
	Access function 0: 0
Creating dr for MEM[(struct _Alloc_hider *)_93]._M_p
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Alloc_hider *)_93]
	Access function 0: 0
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for MEM[(long unsigned int *)&token + 8B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&token + 8B]
Creating dr for MEM[(long unsigned int *)&token + 8B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&token + 8B]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)_93]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_93]
Creating dr for MEM[(char * *)_93]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_93]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)_93 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(size_type *)_93 + 16B]
Creating dr for MEM[(size_type *)_93 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(size_type *)_93 + 16B]
Creating dr for MEM[(const char_type &)_96]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char_type &)_96]
Creating dr for MEM[(const char_type &)_96]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char_type &)_96]
Creating dr for MEM[(char_type &)_95]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_95]
Creating dr for MEM[(char_type &)_95]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_95]
Creating dr for MEM[(size_type *)_93 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(size_type *)_93 + 8B]
Creating dr for MEM[(size_type *)_93 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(size_type *)_93 + 8B]
Creating dr for MEM[(char_type &)_111]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_111]
Creating dr for MEM[(char_type &)_111]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_111]
Creating dr for values_13(D)->D.36723._M_impl._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *values_13(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for values_13(D)->D.36723._M_impl._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *values_13(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct __normal_iterator *)&D.56938]
analyze_innermost: success.
	base_address: &D.56938
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.56938]
Creating dr for MEM[(struct __normal_iterator *)&D.56938]
analyze_innermost: success.
	base_address: &D.56938
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.56938]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for MEM[(char * *)__first_121]
analyze_innermost: success.
	base_address: __first_113
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 256
	base_object: MEM[(char * *)__first_113]
	Access function 0: {0B, +, 32}_2
Creating dr for MEM[(char * *)__first_121]
analyze_innermost: success.
	base_address: __first_113
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 256
	base_object: MEM[(char * *)__first_113]
	Access function 0: {0B, +, 32}_2
Creating dr for MEM[(char * *)__first_121]
analyze_innermost: success.
	base_address: __first_113
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 256
	base_object: MEM[(char * *)__first_113]
	Access function 0: {0B, +, 32}_2
Creating dr for MEM[(char * *)__first_121]
analyze_innermost: success.
	base_address: __first_113
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 256
	base_object: MEM[(char * *)__first_113]
	Access function 0: {0B, +, 32}_2
Analyzing # of iterations of loop 2
  exit condition [__first_113 + 32, + , 32](no_overflow) != _112
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551583
Applying pattern match.pd:114, generic-match.c:6953
  result:
    under assumptions ((unsigned long) _112 - (unsigned long) (__first_113 + 32) & 31) == 0
    # of iterations ((unsigned long) _112 - (unsigned long) (__first_113 + 32)) /[ex] 32 & 576460752303423487, bounded by 576460752303423487
Creating dr for MEM[(char * *)__first_121]
analyze_innermost: success.
	base_address: __first_113
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 256
	base_object: MEM[(char * *)__first_113]
	Access function 0: {0B, +, 32}_2
Creating dr for MEM[(char * *)__first_121]
analyze_innermost: success.
	base_address: __first_113
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 256
	base_object: MEM[(char * *)__first_113]
	Access function 0: {0B, +, 32}_2
Creating dr for MEM[(char * *)__first_121]
analyze_innermost: success.
	base_address: __first_113
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 256
	base_object: MEM[(char * *)__first_113]
	Access function 0: {0B, +, 32}_2
Creating dr for MEM[(char * *)__first_121]
analyze_innermost: success.
	base_address: __first_113
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 256
	base_object: MEM[(char * *)__first_113]
	Access function 0: {0B, +, 32}_2
Analyzing # of iterations of loop 2
  exit condition [__first_113 + 32, + , 32](no_overflow) != _112
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551583
Applying pattern match.pd:114, generic-match.c:6953
  result:
    under assumptions ((unsigned long) _112 - (unsigned long) (__first_113 + 32) & 31) == 0
    # of iterations ((unsigned long) _112 - (unsigned long) (__first_113 + 32)) /[ex] 32 & 576460752303423487, bounded by 576460752303423487
Creating dr for MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)values_13(D)]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:73, LOOPS:2, CONDITIONS:28, STMTS:518)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_42 bb_3 })
  {
    <bb 2>:
    # DEBUG this => values_13(D)
    # DEBUG D#294 => &values_13(D)->D.36723
    # DEBUG this => D#294
    # DEBUG D#293 => &D#294->_M_impl
    # DEBUG this => D#293
    # DEBUG this => D#293
    # DEBUG this => D#293
    # .MEM_41 = VDEF <.MEM_12(D)>
    MEM[(struct _Vector_impl *)values_13(D)]._M_start = 0B;
    # .MEM_42 = VDEF <.MEM_41>
    MEM[(struct _Vector_impl *)values_13(D)]._M_finish = 0B;
    # .MEM_43 = VDEF <.MEM_42>
    MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage = 0B;
    # DEBUG this => data_15(D)
    # VUSE <.MEM_43>
    _24 = MEM[(long unsigned int *)data_15(D) + 8B];
    # DEBUG D#2 => data_15(D)
    # DEBUG this => D#2
    if (_24 == 0)
      goto <bb 42>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # DEBUG this => data_15(D)
    # DEBUG __pos => 0
    # VUSE <.MEM_43>
    _14 = MEM[(char * *)data_15(D)];
    # DEBUG D#3 => data_15(D)
    # DEBUG this => D#3
    # VUSE <.MEM_43>
    _17 = MEM[(const char &)_14];
    if (_17 != 123)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_6 })
  {
    <bb 4>:
    goto <bb 6>;

  }
  bb_5 (preds = {bb_3 }, succs = {bb_42 bb_48 })
  {
    <bb 5>:
    # DEBUG this => values_13(D)
    # DEBUG __x => data_15(D)
    # DEBUG this => values_13(D)
    # DEBUG D#130 => &values_13(D)->D.36723._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#130
    # .MEM_131 = VDEF <.MEM_43>
    MEM[(struct __normal_iterator *)&D.56824] = 0B;
    # .MEM_132 = VDEF <.MEM_131>
    std::vector<std::__cxx11::basic_string<char> >::_M_insert_aux (values_13(D), D.56824, data_15(D));
    goto <bb 42>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_49 })
  {
  <L30>:
    goto <bb 49> (<L28>);

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # curr_88 = PHI <curr_1(13)>
    # _91 = PHI <_74(13)>
    # DEBUG D#2 => data_15(D)
    # DEBUG this => D#2
    # .MEM_171 = VDEF <.MEM_44>
    std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_88, _91);

  }
  bb_15 (preds = {bb_14 }, succs = {bb_49 })
  {
  <L31>:
    goto <bb 49> (<L28>);

  }
  bb_18 (preds = {bb_17 }, succs = {bb_49 })
  {
  <L32>:
    goto <bb 49> (<L28>);

  }
  bb_34 (preds = {bb_33 }, succs = {bb_44 })
  {
  <L34>:
    goto <bb 44> (<L26>);

  }
  bb_40 (preds = {bb_8 }, succs = {bb_41 bb_42 })
  {
    <bb 40>:
    # nested_90 = PHI <nested_3(8)>
    if (nested_90 != 0)
      goto <bb 41>;
    else
      goto <bb 42>;

  }
  bb_41 (preds = {bb_40 }, succs = {})
  {
    <bb 41>:
    # .MEM_35 = VDEF <.MEM_44>
    __assert_fail ("!nested", "config_utils.cpp", 362, &__PRETTY_FUNCTION__);

  }
  bb_42 (preds = {bb_2 bb_5 bb_40 }, succs = {bb_72 })
  {
    <bb 42>:
    # .MEM_187 = PHI <.MEM_43(2), .MEM_132(5), .MEM_44(40)>

  }
  bb_72 (preds = {bb_42 }, succs = {bb_1 })
  {
    <bb 72>:
    # VUSE <.MEM_187>
    return values_13(D);

  }
  bb_43 (preds = {bb_26 }, succs = {bb_44 })
  {
  <L33>:

  }
  bb_44 (preds = {bb_34 bb_43 bb_66 }, succs = {bb_45 bb_46 })
  {
    # .MEM_127 = PHI <.MEM_156(34), .MEM_159(43), .MEM_167(66)>
  <L26>:
    # DEBUG this => &token
    # DEBUG this => &token
    # DEBUG this => &token
    # VUSE <.MEM_127>
    _29 = MEM[(char * *)&token];
    # DEBUG D#3 => &token
    # DEBUG this => D#3
    # DEBUG this => &token
    if (&token.D.11539._M_local_buf != _29)
      goto <bb 45>;
    else
      goto <bb 46>;

  }
  bb_45 (preds = {bb_44 }, succs = {bb_46 })
  {
    <bb 45>:
    # DEBUG D#186 => token.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &token
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &token
    # DEBUG this => D#3
    # DEBUG this => &token
    # DEBUG D#183 => &token._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _29
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _29
    # DEBUG this => D#177
    # DEBUG D.52086 => D#178
    # .MEM_50 = VDEF <.MEM_127>
    operator delete (_29);

  }
  bb_46 (preds = {bb_44 bb_45 }, succs = {bb_47 })
  {
    <bb 46>:
    # .MEM_40 = PHI <.MEM_127(44), .MEM_50(45)>
    # DEBUG D#187 => &token._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    resx 3

  }
  bb_47 (preds = {bb_46 }, succs = {bb_49 })
  {
  <L35>:
    goto <bb 49> (<L28>);

  }
  bb_48 (preds = {bb_5 }, succs = {bb_49 })
  {
  <L29>:

  }
  bb_49 (preds = {bb_47 bb_7 bb_48 bb_18 bb_64 bb_15 }, succs = {bb_56 bb_50 })
  {
    # .MEM_11 = PHI <.MEM_40(47), .MEM_44(7), .MEM_132(48), .MEM_147(18), .MEM_169(64), .MEM_171(15)>
  <L28>:
    # .MEM_32 = VDEF <.MEM_11>
    token ={v} {CLOBBER};
    # DEBUG this => values_13(D)
    # DEBUG D#255 => &values_13(D)->D.36723
    # DEBUG this => D#255
    # VUSE <.MEM_32>
    _112 = values_13(D)->D.36723._M_impl._M_finish;
    # VUSE <.MEM_32>
    __first_113 = values_13(D)->D.36723._M_impl._M_start;
    # DEBUG __first => __first_113
    # DEBUG __last => _112
    # DEBUG __first => __first_113
    if (_112 == __first_113)
      goto <bb 56>;
    else
      goto <bb 50>;

  }
  bb_50 (preds = {bb_49 }, succs = {bb_51 })
  {
    <bb 50>:

  }
  bb_55 (preds = {bb_53 }, succs = {bb_68 })
  {
    <bb 55>:

  }
  bb_68 (preds = {bb_55 }, succs = {bb_56 })
  {
    <bb 68>:
    # VUSE <.MEM_176>
    pretmp_52 = MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start;

  }
  bb_56 (preds = {bb_68 bb_49 }, succs = {bb_57 bb_58 })
  {
    <bb 56>:
    # .MEM_61 = PHI <.MEM_176(68), .MEM_32(49)>
    # prephitmp_53 = PHI <pretmp_52(68), __first_113(49)>
    # DEBUG D#256 => &values_13(D)->D.36723
    # DEBUG this => D#256
    # DEBUG D#253 => D#256->_M_impl._M_end_of_storage
    # DEBUG D#252 => (long int) D#253
    # DEBUG D#778 => MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start
    # DEBUG D#251 => (long int) D#778
    # DEBUG D#250 => D#252 - D#251
    # DEBUG D#249 => D#250 /[ex] 32
    # DEBUG D#246 => D#256
    # DEBUG D#247 => (long unsigned int) D#249
    # DEBUG __p => D#778
    # DEBUG this => D#246
    # DEBUG __n => D#247
    # DEBUG D#245 => D#247
    # DEBUG D#244 => D#246
    if (prephitmp_53 != 0B)
      goto <bb 57>;
    else
      goto <bb 58>;

  }
  bb_57 (preds = {bb_56 }, succs = {bb_58 })
  {
    <bb 57>:
    # DEBUG D#243 => &D#244->_M_impl
    # DEBUG D#241 => D#243
    # DEBUG D#242 => D#245
    # DEBUG __p => D#778
    # DEBUG __a => D#241
    # DEBUG __n => D#242
    # DEBUG D#240 => D#242
    # DEBUG D#239 => D#241
    # DEBUG D#237 => D#239
    # DEBUG D#238 => D#240
    # DEBUG __p => D#778
    # DEBUG this => D#237
    # DEBUG D.57002 => D#238
    # .MEM_177 = VDEF <.MEM_61>
    operator delete (prephitmp_53);

  }
  bb_58 (preds = {bb_56 bb_57 }, succs = {})
  {
    <bb 58>:
    # DEBUG D#248 => &D#256->_M_impl
    # DEBUG this => D#248
    # DEBUG this => D#248
    # DEBUG this => D#248
    resx 1

  }
  bb_63 (preds = {bb_16 }, succs = {bb_64 })
  {
    <bb 63>:
    # .MEM_169 = VDEF <.MEM_145>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_64 (preds = {bb_63 }, succs = {bb_49 })
  {
  <L36>:
    goto <bb 49> (<L28>);

  }
  bb_65 (preds = {bb_25 }, succs = {bb_66 })
  {
    <bb 65>:
    # .MEM_167 = VDEF <.MEM_157>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_66 (preds = {bb_65 }, succs = {bb_44 })
  {
  <L37>:
    goto <bb 44> (<L26>);

  }
  loop_2 (header = 51, latch = 54, niter = )
  {
    bb_51 (preds = {bb_50 bb_54 }, succs = {bb_52 bb_53 })
    {
      <bb 51>:
      # __first_121 = PHI <__first_113(50), __first_117(54)>
      # .MEM_62 = PHI <.MEM_32(50), .MEM_176(54)>
      # DEBUG __first => __first_121
      # DEBUG __r => __first_121
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => NULL
      # DEBUG this => NULL
      # VUSE <.MEM_62>
      _115 = MEM[(char * *)__first_121];
      # DEBUG this => D#3
      # DEBUG this => NULL
      _116 = &MEM[(const struct basic_string *)__first_121].D.11539._M_local_buf;
      if (_115 != _116)
        goto <bb 52>;
      else
        goto <bb 53>;

    }
    bb_52 (preds = {bb_51 }, succs = {bb_53 })
    {
      <bb 52>:
      # DEBUG D#185 => D#186
      # DEBUG this => NULL
      # DEBUG __size => D#185
      # DEBUG D#184 => D#185
      # DEBUG this => D#3
      # DEBUG this => NULL
      # DEBUG D#181 => D#183
      # DEBUG D#182 => D#184 + 1
      # DEBUG __p => _115
      # DEBUG __a => D#181
      # DEBUG __n => D#182
      # DEBUG D#180 => D#182
      # DEBUG D#179 => D#181
      # DEBUG D#177 => D#179
      # DEBUG D#178 => D#180
      # DEBUG __p => _115
      # DEBUG this => D#177
      # DEBUG D.56986 => D#178
      # .MEM_172 = VDEF <.MEM_62>
      operator delete (_115);

    }
    bb_53 (preds = {bb_51 bb_52 }, succs = {bb_55 bb_54 })
    {
      <bb 53>:
      # .MEM_129 = PHI <.MEM_62(51), .MEM_172(52)>
      # DEBUG this => D#187
      # DEBUG this => D#187
      # DEBUG this => D#187
      # .MEM_176 = VDEF <.MEM_129>
      MEM[(struct  &)__first_121] ={v} {CLOBBER};
      __first_117 = __first_121 + 32;
      # DEBUG __first => __first_117
      # DEBUG __first => __first_117
      if (_112 == __first_117)
        goto <bb 55>;
      else
        goto <bb 54>;

    }
    bb_54 (preds = {bb_53 }, succs = {bb_51 })
    {
      <bb 54>:
      goto <bb 51>;

    }
  }
  loop_1 (header = 6, latch = 71, niter = )
  {
    bb_6 (preds = {bb_4 bb_71 }, succs = {bb_8 bb_7 })
    {
      <bb 6>:
      # curr_1 = PHI <1(4), curr_2(71)>
      # nested_3 = PHI <0(4), nested_4(71)>
      # curr_5 = PHI <1(4), prephitmp_48(71)>
      # .MEM_7 = PHI <.MEM_43(4), .MEM_9(71)>
      # DEBUG curr => curr_5
      # DEBUG nested => nested_3
      # DEBUG start => curr_1
      # DEBUG this => data_15(D)
      # DEBUG __s => "{,}"
      # DEBUG __pos => curr_5
      # DEBUG __s => "{,}"
      # .MEM_44 = VDEF <.MEM_7>
      _37 = std::__cxx11::basic_string<char>::find_first_of (data_15(D), "{,}", curr_5, 3);
      goto <bb 8>;

    }
    bb_8 (preds = {bb_6 }, succs = {bb_9 bb_40 })
    {
      <bb 8>:
      # DEBUG curr => _37
      if (_37 != 18446744073709551615)
        goto <bb 9>;
      else
        goto <bb 40>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_10 bb_11 })
    {
      <bb 9>:
      # DEBUG this => data_15(D)
      # DEBUG __pos => _37
      # VUSE <.MEM_44>
      _19 = MEM[(char * *)data_15(D)];
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      _38 = _19 + _37;
      # VUSE <.MEM_44>
      _22 = *_38;
      if (_22 == 123)
        goto <bb 10>;
      else
        goto <bb 11>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_39 })
    {
      <bb 10>:
      nested_23 = nested_3 + 1;
      # DEBUG nested => nested_23
      pretmp_54 = _37 + 1;
      goto <bb 39>;

    }
    bb_11 (preds = {bb_9 }, succs = {bb_59 bb_60 })
    {
      <bb 11>:
      # DEBUG this => data_15(D)
      # DEBUG __pos => _37
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      _181 = nested_3 != 0;
      _186 = _22 == 125;
      _179 = _181 & _186;
      if (_179 != 0)
        goto <bb 59>;
      else
        goto <bb 60>;

    }
    bb_12 (preds = {bb_60 }, succs = {bb_13 bb_38 })
    {
      <bb 12>:
      if (curr_1 < _37)
        goto <bb 13>;
      else
        goto <bb 38>;

    }
    bb_13 (preds = {bb_12 }, succs = {bb_14 bb_16 })
    {
      <bb 13>:
      _26 = _37 - curr_1;
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __n => _26
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __s => "basic_string::substr"
      # VUSE <.MEM_44>
      _74 = MEM[(long unsigned int *)data_15(D) + 8B];
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      if (curr_1 > _74)
        goto <bb 14>;
      else
        goto <bb 16>;

    }
    bb_16 (preds = {bb_13 }, succs = {bb_63 bb_62 })
    {
      <bb 16>:
      # DEBUG this => &token
      # DEBUG __str => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __n => _26
      # DEBUG this => D#42
      # DEBUG D#41 => D#42
      # DEBUG this => D#41
      # DEBUG this => &token
      # DEBUG D#401 => &token._M_dataplus
      # DEBUG this => D#401
      # DEBUG __dat => &token.D.11539._M_local_buf
      # DEBUG __a => D#147
      # DEBUG D#146 => D#147
      # DEBUG D#144 => D#401
      # DEBUG D#145 => D#146
      # DEBUG this => D#144
      # DEBUG __a => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG this => D#142
      # DEBUG D.48110 => D#143
      # .MEM_145 = VDEF <.MEM_44>
      MEM[(struct _Alloc_hider *)&token]._M_p = &token.D.11539._M_local_buf;
      # DEBUG this => NULL
      # DEBUG this => NULL
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __s => "basic_string::basic_string"
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      __start_77 = _19 + curr_1;
      # DEBUG __start => __start_77
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __off => _26
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      _78 = _74 - curr_1;
      # DEBUG __testoff => _78 > _26
      iftmp.174_194 = MIN_EXPR <_26, _78>;
      _80 = __start_77 + iftmp.174_194;
      # DEBUG this => &token
      # DEBUG __beg => __start_77
      # DEBUG __end => _80
      # DEBUG this => &token
      # DEBUG __beg => __start_77
      # DEBUG __end => _80
      # DEBUG this => &token
      # DEBUG __beg => __start_77
      # DEBUG __end => _80
      # DEBUG __ptr => __start_77
      _144 = _80 != 0B;
      _58 = __start_77 == 0B;
      _133 = _58 & _144;
      if (_133 != 0)
        goto <bb 63>;
      else
        goto <bb 62>;

    }
    bb_17 (preds = {bb_62 }, succs = {bb_19 bb_18 })
    {
      <bb 17>:
      # .MEM_147 = VDEF <.MEM_146>
      _86 = std::__cxx11::basic_string<char>::_M_create (&token, &__dnew, 0);
      goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_22 })
    {
      <bb 19>:
      # DEBUG D#6 => &token
      # DEBUG __p => _86
      # DEBUG this => D#6
      # .MEM_148 = VDEF <.MEM_147>
      MEM[(char * *)&token] = _86;
      # VUSE <.MEM_148>
      __dnew.111_87 = __dnew;
      # DEBUG D#7 => &token
      # DEBUG __capacity => __dnew.111_87
      # DEBUG this => D#7
      # .MEM_149 = VDEF <.MEM_148>
      MEM[(size_type *)&token + 16B] = __dnew.111_87;
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => _86
      # DEBUG __k1 => __start_77
      # DEBUG __k2 => _80
      # DEBUG __d => _86
      # DEBUG __s => __start_77
      # DEBUG __n => iftmp.174_194
      goto <bb 22>;

    }
    bb_20 (preds = {bb_62 }, succs = {bb_21 bb_22 })
    {
      <bb 20>:
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => &token.D.11539._M_local_buf
      # DEBUG __k1 => __start_77
      # DEBUG __k2 => _80
      # DEBUG __d => &token.D.11539._M_local_buf
      # DEBUG __s => __start_77
      # DEBUG __n => iftmp.174_194
      if (iftmp.174_194 == 1)
        goto <bb 21>;
      else
        goto <bb 22>;

    }
    bb_21 (preds = {bb_20 }, succs = {bb_23 })
    {
      <bb 21>:
      # VUSE <.MEM_146>
      _89 = MEM[(const char_type &)__start_77];
      # DEBUG D#13 => __start_77
      # DEBUG __c1 => &token.D.11539._M_local_buf
      # DEBUG __c2 => D#13
      # .MEM_150 = VDEF <.MEM_146>
      MEM[(char_type &)&token + 16] = _89;
      goto <bb 23>;

    }
    bb_22 (preds = {bb_20 bb_19 }, succs = {bb_23 })
    {
      <bb 22>:
      # _60 = PHI <&token.D.11539._M_local_buf(20), _86(19)>
      # .MEM_170 = PHI <.MEM_146(20), .MEM_149(19)>
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => _60
      # DEBUG __k1 => __start_77
      # DEBUG __k2 => _80
      # DEBUG __d => _60
      # DEBUG __s => __start_77
      # DEBUG __n => iftmp.174_194
      # DEBUG __s1 => _60
      # DEBUG __s2 => __start_77
      # DEBUG __n => iftmp.174_194
      # .MEM_151 = VDEF <.MEM_170>
      __builtin_memcpy (_60, __start_77, iftmp.174_194);
      # VUSE <.MEM_151>
      pretmp_49 = __dnew;
      # VUSE <.MEM_151>
      pretmp_114 = MEM[(char * *)&token];

    }
    bb_23 (preds = {bb_21 bb_22 }, succs = {bb_24 bb_33 })
    {
      <bb 23>:
      # .MEM_122 = PHI <.MEM_150(21), .MEM_151(22)>
      # prephitmp_130 = PHI <iftmp.174_194(21), pretmp_49(22)>
      # prephitmp_128 = PHI <&token.D.11539._M_local_buf(21), pretmp_114(22)>
      # DEBUG D#780 => __dnew
      # DEBUG this => &token
      # DEBUG __n => D#780
      # DEBUG D#5 => &token
      # DEBUG __length => D#780
      # DEBUG this => D#5
      # .MEM_152 = VDEF <.MEM_122>
      MEM[(size_type *)&token + 8B] = prephitmp_130;
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      _92 = prephitmp_128 + prephitmp_130;
      # DEBUG __c1 => _92
      # DEBUG __c2 => D#13
      # .MEM_153 = VDEF <.MEM_152>
      MEM[(char_type &)_92] = 0;
      # .MEM_154 = VDEF <.MEM_153>
      __dnew ={v} {CLOBBER};
      # DEBUG this => values_13(D)
      # DEBUG __x => &token
      # VUSE <.MEM_154>
      _93 = values_13(D)->D.36723._M_impl._M_finish;
      # VUSE <.MEM_154>
      _94 = values_13(D)->D.36723._M_impl._M_end_of_storage;
      if (_93 != _94)
        goto <bb 24>;
      else
        goto <bb 33>;

    }
    bb_24 (preds = {bb_23 }, succs = {bb_25 bb_32 })
    {
      <bb 24>:
      # DEBUG D#437 => &values_13(D)->D.36723._M_impl
      # DEBUG D#392 => D#437
      # DEBUG __p => _93
      # DEBUG __arg => &token
      # DEBUG __a => D#392
      # DEBUG D#391 => D#392
      # DEBUG D#390 => D#391
      # DEBUG __p => _93
      # DEBUG __val => &token
      # DEBUG this => D#390
      # DEBUG D#14 => 32
      # DEBUG __p => _93
      # DEBUG D.51035 => D#14
      if (_93 != 0B)
        goto <bb 25>;
      else
        goto <bb 32>;

    }
    bb_25 (preds = {bb_24 }, succs = {bb_65 bb_67 })
    {
      <bb 25>:
      # DEBUG this => _93
      # DEBUG __str => &token
      # DEBUG this => &token
      # DEBUG D#380 => &token._M_dataplus
      # DEBUG this => _93
      _95 = &_93->D.11539._M_local_buf;
      # DEBUG D#381 => &_93->_M_dataplus
      # DEBUG D#147 => D#380
      # DEBUG this => D#381
      # DEBUG __dat => _95
      # DEBUG __a => D#147
      # DEBUG D#146 => D#147
      # DEBUG D#144 => D#381
      # DEBUG D#145 => D#146
      # DEBUG this => D#144
      # DEBUG __a => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG this => D#142
      # DEBUG D.48110 => D#143
      # .MEM_157 = VDEF <.MEM_154>
      MEM[(struct _Alloc_hider *)_93]._M_p = _95;
      # VUSE <.MEM_157>
      _96 = MEM[(char * *)&token];
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # VUSE <.MEM_157>
      _97 = MEM[(long unsigned int *)&token + 8B];
      # DEBUG D#1 => &token
      # DEBUG this => D#1
      _98 = _96 + _97;
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG this => _93
      # DEBUG __beg => _96
      # DEBUG __end => _98
      # DEBUG this => _93
      # DEBUG __beg => _96
      # DEBUG __end => _98
      # DEBUG this => _93
      # DEBUG __beg => _96
      # DEBUG __end => _98
      # DEBUG __ptr => _96
      _192 = _98 != 0B;
      _191 = _96 == 0B;
      _193 = _191 & _192;
      if (_193 != 0)
        goto <bb 65>;
      else
        goto <bb 67>;

    }
    bb_26 (preds = {bb_67 }, succs = {bb_27 bb_43 })
    {
      <bb 26>:
      # .MEM_159 = VDEF <.MEM_158>
      _105 = std::__cxx11::basic_string<char>::_M_create (_93, &__dnew, 0);

    }
    bb_27 (preds = {bb_26 }, succs = {bb_30 })
    {
      <bb 27>:
      # DEBUG D#6 => _93
      # DEBUG __p => _105
      # DEBUG this => D#6
      # .MEM_160 = VDEF <.MEM_159>
      MEM[(char * *)_93] = _105;
      # VUSE <.MEM_160>
      __dnew.111_106 = __dnew;
      # DEBUG D#7 => _93
      # DEBUG __capacity => __dnew.111_106
      # DEBUG this => D#7
      # .MEM_161 = VDEF <.MEM_160>
      MEM[(size_type *)_93 + 16B] = __dnew.111_106;
      # DEBUG D#3 => _93
      # DEBUG this => D#3
      # DEBUG __p => _105
      # DEBUG __k1 => _96
      # DEBUG __k2 => _98
      # DEBUG __d => _105
      # DEBUG __s => _96
      # DEBUG __n => _97
      goto <bb 30>;

    }
    bb_28 (preds = {bb_67 }, succs = {bb_29 bb_30 })
    {
      <bb 28>:
      # DEBUG D#3 => _93
      # DEBUG this => D#3
      # DEBUG __p => _95
      # DEBUG __k1 => _96
      # DEBUG __k2 => _98
      # DEBUG __d => _95
      # DEBUG __s => _96
      # DEBUG __n => _97
      if (_97 == 1)
        goto <bb 29>;
      else
        goto <bb 30>;

    }
    bb_29 (preds = {bb_28 }, succs = {bb_31 })
    {
      <bb 29>:
      # VUSE <.MEM_158>
      _108 = MEM[(const char_type &)_96];
      # DEBUG D#13 => _96
      # DEBUG __c1 => _95
      # DEBUG __c2 => D#13
      # .MEM_162 = VDEF <.MEM_158>
      MEM[(char_type &)_95] = _108;
      goto <bb 31>;

    }
    bb_30 (preds = {bb_28 bb_27 }, succs = {bb_31 })
    {
      <bb 30>:
      # _57 = PHI <_95(28), _105(27)>
      # .MEM_188 = PHI <.MEM_158(28), .MEM_161(27)>
      # DEBUG D#3 => _93
      # DEBUG this => D#3
      # DEBUG __p => _57
      # DEBUG __k1 => _96
      # DEBUG __k2 => _98
      # DEBUG __d => _57
      # DEBUG __s => _96
      # DEBUG __n => _97
      # DEBUG __s1 => _57
      # DEBUG __s2 => _96
      # DEBUG __n => _97
      # .MEM_163 = VDEF <.MEM_188>
      __builtin_memcpy (_57, _96, _97);
      # VUSE <.MEM_163>
      pretmp_79 = __dnew;
      # VUSE <.MEM_163>
      pretmp_27 = MEM[(char * *)_93];

    }
    bb_31 (preds = {bb_29 bb_30 }, succs = {bb_32 })
    {
      <bb 31>:
      # .MEM_124 = PHI <.MEM_162(29), .MEM_163(30)>
      # prephitmp_120 = PHI <_97(29), pretmp_79(30)>
      # prephitmp_82 = PHI <_95(29), pretmp_27(30)>
      # DEBUG D#779 => __dnew
      # DEBUG this => _93
      # DEBUG __n => D#779
      # DEBUG D#5 => _93
      # DEBUG __length => D#779
      # DEBUG this => D#5
      # .MEM_164 = VDEF <.MEM_124>
      MEM[(size_type *)_93 + 8B] = prephitmp_120;
      # DEBUG D#3 => _93
      # DEBUG this => D#3
      _111 = prephitmp_82 + prephitmp_120;
      # DEBUG __c1 => _111
      # DEBUG __c2 => D#13
      # .MEM_165 = VDEF <.MEM_164>
      MEM[(char_type &)_111] = 0;
      # .MEM_166 = VDEF <.MEM_165>
      __dnew ={v} {CLOBBER};
      # VUSE <.MEM_166>
      pretmp_141 = values_13(D)->D.36723._M_impl._M_finish;

    }
    bb_32 (preds = {bb_24 bb_31 }, succs = {bb_69 })
    {
      <bb 32>:
      # .MEM_125 = PHI <.MEM_154(24), .MEM_166(31)>
      # prephitmp_123 = PHI <_93(24), pretmp_141(31)>

    }
    bb_69 (preds = {bb_32 }, succs = {bb_35 })
    {
      <bb 69>:
      _100 = prephitmp_123 + 32;
      # .MEM_168 = VDEF <.MEM_125>
      values_13(D)->D.36723._M_impl._M_finish = _100;
      goto <bb 35>;

    }
    bb_33 (preds = {bb_23 }, succs = {bb_35 bb_34 })
    {
      <bb 33>:
      # DEBUG this => values_13(D)
      # DEBUG D#130 => &values_13(D)->D.36723._M_impl._M_finish
      # DEBUG this => NULL
      # DEBUG __i => D#130
      # .MEM_155 = VDEF <.MEM_154>
      MEM[(struct __normal_iterator *)&D.56938] = _93;
      # .MEM_156 = VDEF <.MEM_155>
      std::vector<std::__cxx11::basic_string<char> >::_M_insert_aux (values_13(D), D.56938, &token);
      goto <bb 35>;

    }
    bb_35 (preds = {bb_33 bb_69 }, succs = {bb_36 bb_37 })
    {
      <bb 35>:
      # .MEM_126 = PHI <.MEM_156(33), .MEM_168(69)>
      # DEBUG this => &token
      # DEBUG this => &token
      # DEBUG this => &token
      # VUSE <.MEM_126>
      _39 = MEM[(char * *)&token];
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG this => &token
      if (&token.D.11539._M_local_buf != _39)
        goto <bb 36>;
      else
        goto <bb 37>;

    }
    bb_36 (preds = {bb_35 }, succs = {bb_37 })
    {
      <bb 36>:
      # DEBUG D#186 => token.D.11539._M_allocated_capacity
      # DEBUG D#185 => D#186
      # DEBUG this => &token
      # DEBUG __size => D#185
      # DEBUG D#184 => D#185
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG this => &token
      # DEBUG D#183 => &token._M_dataplus
      # DEBUG D#181 => D#183
      # DEBUG D#182 => D#184 + 1
      # DEBUG __p => _39
      # DEBUG __a => D#181
      # DEBUG __n => D#182
      # DEBUG D#180 => D#182
      # DEBUG D#179 => D#181
      # DEBUG D#177 => D#179
      # DEBUG D#178 => D#180
      # DEBUG __p => _39
      # DEBUG this => D#177
      # DEBUG D.52071 => D#178
      # .MEM_45 = VDEF <.MEM_126>
      operator delete (_39);

    }
    bb_37 (preds = {bb_35 bb_36 }, succs = {bb_38 })
    {
      <bb 37>:
      # .MEM_31 = PHI <.MEM_126(35), .MEM_45(36)>
      # DEBUG D#187 => &token._M_dataplus
      # DEBUG this => D#187
      # DEBUG this => D#187
      # DEBUG this => D#187
      # .MEM_30 = VDEF <.MEM_31>
      token ={v} {CLOBBER};

    }
    bb_38 (preds = {bb_12 bb_37 }, succs = {bb_70 })
    {
      <bb 38>:
      # .MEM_8 = PHI <.MEM_44(12), .MEM_30(37)>

    }
    bb_70 (preds = {bb_38 }, succs = {bb_39 })
    {
      <bb 70>:
      curr_33 = _37 + 1;
      # DEBUG start => curr_33

    }
    bb_39 (preds = {bb_10 bb_59 bb_61 bb_70 }, succs = {bb_71 })
    {
      <bb 39>:
      # curr_2 = PHI <curr_1(10), curr_1(59), curr_1(61), curr_33(70)>
      # nested_4 = PHI <nested_23(10), nested_25(59), nested_3(61), 0(70)>
      # .MEM_9 = PHI <.MEM_44(10), .MEM_44(59), .MEM_44(61), .MEM_8(70)>
      # prephitmp_48 = PHI <pretmp_54(10), pretmp_46(59), pretmp_47(61), curr_33(70)>

    }
    bb_71 (preds = {bb_39 }, succs = {bb_6 })
    {
      <bb 71>:
      # DEBUG nested => nested_4
      # DEBUG start => curr_2
      # DEBUG curr => _37 + 1
      goto <bb 6>;

    }
    bb_59 (preds = {bb_11 }, succs = {bb_39 })
    {
      <bb 59>:
      nested_25 = nested_3 + -1;
      # DEBUG nested => nested_25
      pretmp_46 = _37 + 1;
      goto <bb 39>;

    }
    bb_60 (preds = {bb_11 }, succs = {bb_12 bb_61 })
    {
      <bb 60>:
      if (nested_3 == 0)
        goto <bb 12>;
      else
        goto <bb 61>;

    }
    bb_61 (preds = {bb_60 }, succs = {bb_39 })
    {
      <bb 61>:
      pretmp_47 = _37 + 1;
      goto <bb 39>;

    }
    bb_62 (preds = {bb_16 }, succs = {bb_17 bb_20 })
    {
      <bb 62>:
      # DEBUG __first => __start_77
      # DEBUG __last => _80
      # DEBUG D#393 => &__first
      # DEBUG D.51158 => D#393
      # DEBUG __first => __start_77
      # DEBUG __last => _80
      # .MEM_146 = VDEF <.MEM_145>
      __dnew = iftmp.174_194;
      if (iftmp.174_194 > 15)
        goto <bb 17>;
      else
        goto <bb 20>;

    }
    bb_67 (preds = {bb_25 }, succs = {bb_26 bb_28 })
    {
      <bb 67>:
      # DEBUG __first => _96
      # DEBUG __last => _98
      # DEBUG D#393 => &__first
      # DEBUG D.51158 => D#393
      # DEBUG __first => _96
      # DEBUG __last => _98
      # .MEM_158 = VDEF <.MEM_157>
      __dnew = _97;
      if (_97 > 15)
        goto <bb 26>;
      else
        goto <bb 28>;

    }
  }
}

Pass statistics:
----------------

std::vector<std::__cxx11::basic_string<char> > tokenize_str(const string&) (const struct stringD.2845 & dataD.38526)
Eh tree:
   1 cleanup land:{10,<L35>},{7,<L32>},{6,<L31>},{5,<L30>},{4,<L29>},{1,<L36>}
     3 cleanup land:{9,<L34>},{8,<L33>},{3,<L37>}
{
  struct basic_stringD.2844 * __firstD.56971;
  size_typeD.11502 __dnewD.56942;
  struct __normal_iteratorD.36292 D.56938;
  size_typeD.11502 __dnewD.56890;
  const charD.10 * __startD.56871;
  size_typeD.11502 __dnewD.56828;
  struct __normal_iteratorD.36292 D.56824;
  struct stringD.2845 tokenD.38535;
  static const charD.10 _ZZ12tokenize_strRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38537[75] = "std::vector<std::__cxx11::basic_string<char> > tokenize_str(const string&)";
  size_tD.5382 currD.38534;
  intD.9 nestedD.38533;
  charD.10 * const _14;
  charD.10 _17;
  charD.10 * const _19;
  charD.10 _22;
  const size_typeD.11502 _24;
  long unsigned intD.14 _26;
  charD.10 * const pretmp_27;
  charD.10 * const _29;
  size_typeD.11502 _37;
  const charD.10 & _38;
  charD.10 * const _39;
  size_tD.5382 pretmp_46;
  size_tD.5382 pretmp_47;
  size_tD.5382 prephitmp_48;
  size_typeD.11502 pretmp_49;
  struct basic_stringD.2844 * pretmp_52;
  struct basic_stringD.2844 * prephitmp_53;
  size_tD.5382 pretmp_54;
  charD.10 * const _57;
  boolD.2757 _58;
  charD.10 * const _60;
  const size_typeD.11502 _74;
  long unsigned intD.14 _78;
  size_typeD.11502 pretmp_79;
  const charD.10 * _80;
  charD.10 * const prephitmp_82;
  charD.10 * _86;
  long unsigned intD.14 __dnew.111_87;
  const char_typeD.6439 _89;
  const size_typeD.11502 _91;
  charD.10 * _92;
  struct basic_stringD.2844 * _93;
  struct basic_stringD.2844 * _94;
  charD.10 * _95;
  charD.10 * const _96;
  const size_typeD.11502 _97;
  charD.10 * _98;
  struct basic_stringD.2844 * _100;
  charD.10 * _105;
  long unsigned intD.14 __dnew.111_106;
  const char_typeD.6439 _108;
  charD.10 * _111;
  struct basic_stringD.2844 * _112;
  charD.10 * const pretmp_114;
  charD.10 * const _115;
  const charD.10 * _116;
  size_typeD.11502 prephitmp_120;
  struct basic_stringD.2844 * prephitmp_123;
  charD.10 * const prephitmp_128;
  size_typeD.11502 prephitmp_130;
  boolD.2757 _133;
  struct basic_stringD.2844 * pretmp_141;
  boolD.2757 _144;
  boolD.2757 _179;
  boolD.2757 _181;
  boolD.2757 _186;
  boolD.2757 _191;
  boolD.2757 _192;
  boolD.2757 _193;
  size_typeD.11502 iftmp.174_194;

;;   basic block 2, loop depth 0, count 0, freq 759, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.52046 => values_13(D)
  # DEBUG D#294ptD.0 => &values_13(D)->D.36723
  # DEBUG thisD.52047 => D#294ptD.0
  # DEBUG D#293ptD.0 => &D#294ptD.0->_M_implD.36214
  # DEBUG thisD.52048 => D#293ptD.0
  # DEBUG thisD.49718 => D#293ptD.0
  # DEBUG thisD.49716 => D#293ptD.0
  # .MEM_41 = VDEF <.MEM_12(D)>
  MEM[(struct _Vector_implD.36191 *)values_13(D)]._M_startD.36216 = 0B;
  # .MEM_42 = VDEF <.MEM_41>
  MEM[(struct _Vector_implD.36191 *)values_13(D)]._M_finishD.36217 = 0B;
  # .MEM_43 = VDEF <.MEM_42>
  MEM[(struct _Vector_implD.36191 *)values_13(D)]._M_end_of_storageD.36218 = 0B;
  # DEBUG thisD.52044 => data_15(D)
  # VUSE <.MEM_43>
  _24 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46865 => D#2ptD.0
  if (_24 == 0)
    goto <bb 42>;
  else
    goto <bb 3>;
;;    succ:       42 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 463, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52049 => data_15(D)
  # DEBUG __posD.52050 => 0
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_43>
  _17 = MEM[(const charD.10 &)_14];
  if (_17 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [51.2%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [48.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [48.8%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 16, maybe hot
;;   Invalid sum of incoming frequencies 237, should be 16
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [51.2%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.56802 => values_13(D)
  # DEBUG __xD.56803 => data_15(D)
  # DEBUG thisD.52038 => values_13(D)
  # DEBUG D#130ptD.0 => &values_13(D)->D.36723._M_implD.36214._M_finishD.36217
  # DEBUG thisD.52040 => NULL
  # DEBUG __iD.52039 => D#130ptD.0
  # .MEM_131 = VDEF <.MEM_43>
  MEM[(struct __normal_iteratorD.36292 *)&D.56824] = 0B;
  [LP 4] # .MEM_132 = VDEF <.MEM_131>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_D.36651 (values_13(D), D.56824, data_15(D));
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 (EH,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_1 = PHI <1(4), curr_2(71)>
  # nested_3 = PHI <0(4), nested_4(71)>
  # RANGE [1, 18446744073709551615]
  # curr_5 = PHI <1(4), prephitmp_48(71)>
  # .MEM_7 = PHI <.MEM_43(4), .MEM_9(71)>
  # DEBUG currD.38534 => curr_5
  # DEBUG nestedD.38533 => nested_3
  # DEBUG startD.38532 => curr_1
  # DEBUG thisD.52052 => data_15(D)
  # DEBUG __sD.52053 => "{,}"
  # DEBUG __posD.52054 => curr_5
  # DEBUG __sD.52055 => "{,}"
  [LP 5] # .MEM_44 = VDEF <.MEM_7>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _37 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmmD.12156 (data_15(D), "{,}", curr_5, 3);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L30>: [LP 5]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG currD.38534 => _37
  if (_37 != 18446744073709551615)
    goto <bb 9>;
  else
    goto <bb 40>;
;;    succ:       9 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 9775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.52057 => data_15(D)
  # DEBUG __posD.52058 => _37
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _19 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # PT = nonlocal escaped 
  _38 = _19 + _37;
  # VUSE <.MEM_44>
  _22 = *_38;
  if (_22 == 123)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 2737, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_23 = nested_3 + 1;
  # DEBUG nestedD.38533 => nested_23
  pretmp_54 = _37 + 1;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 1971, maybe hot
;;   Invalid sum of incoming frequencies 7038, should be 1971
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52060 => data_15(D)
  # DEBUG __posD.52061 => _37
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # RANGE [0, 1]
  _181 = nested_3 != 0;
  # RANGE [0, 1]
  _186 = _22 == 125;
  # RANGE [0, 1]
  _179 = _181 & _186;
  if (_179 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;
;;    succ:       59 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 1759, maybe hot
;;   Invalid sum of incoming frequencies 3027, should be 1759
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       60 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  if (curr_1 < _37)
    goto <bb 13>;
  else
    goto <bb 38>;
;;    succ:       13 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _26 = _37 - curr_1;
  # DEBUG thisD.56854 => data_15(D)
  # DEBUG __posD.56855 => curr_1
  # DEBUG __nD.56856 => _26
  # DEBUG thisD.56859 => data_15(D)
  # DEBUG __posD.56858 => curr_1
  # DEBUG __sD.56857 => "basic_string::substr"
  # VUSE <.MEM_44>
  _74 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  if (curr_1 > _74)
    goto <bb 14>;
  else
    goto <bb 16>;
;;    succ:       14 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_88 = PHI <curr_1(13)>
  # _91 = PHI <_74(13)>
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46997 => D#2ptD.0
  [LP 6] # .MEM_171 = VDEF <.MEM_44>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZSt24__throw_out_of_range_fmtPKczD.2864 ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_88, _91);
;;    succ:       15 (EH,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 (EH,EXECUTABLE)
<L31>: [LP 6]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.56860 => &tokenD.38535
  # DEBUG __strD.56861 => data_15(D)
  # DEBUG __posD.56862 => curr_1
  # DEBUG __nD.56863 => _26
  # DEBUG thisD.56865 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.56866 => &tokenD.38535
  # DEBUG D#401ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG thisD.56869 => D#401ptD.0
  # DEBUG __datD.56868 => &tokenD.38535.D.11539._M_local_bufD.11541
  # DEBUG __aD.56867 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#401ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_145 = VDEF <.MEM_44>
  MEM[(struct _Alloc_hiderD.11518 *)&tokenD.38535]._M_pD.11525 = &tokenD.38535.D.11539._M_local_bufD.11541;
  # DEBUG thisD.56870 => NULL
  # DEBUG thisD.51465 => NULL
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.51462 => D#3ptD.0
  # DEBUG thisD.56886 => data_15(D)
  # DEBUG __posD.56885 => curr_1
  # DEBUG __sD.56884 => "basic_string::basic_string"
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  # PT = nonlocal escaped 
  __start_77 = _19 + curr_1;
  # DEBUG __startD.56871 => __start_77
  # DEBUG thisD.56874 => data_15(D)
  # DEBUG __posD.56873 => curr_1
  # DEBUG __offD.56872 => _26
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46904 => D#2ptD.0
  # RANGE [0, 18446744073709551615]
  _78 = _74 - curr_1;
  # DEBUG __testoffD.56875 => _78 > _26
  # RANGE [0, 18446744073709551615]
  iftmp.174_194 = MIN_EXPR <_26, _78>;
  # PT = nonlocal escaped 
  _80 = __start_77 + iftmp.174_194;
  # DEBUG thisD.56878 => &tokenD.38535
  # DEBUG __begD.56877 => __start_77
  # DEBUG __endD.56876 => _80
  # DEBUG thisD.56882 => &tokenD.38535
  # DEBUG __begD.56881 => __start_77
  # DEBUG __endD.56880 => _80
  # DEBUG thisD.56887 => &tokenD.38535
  # DEBUG __begD.56888 => __start_77
  # DEBUG __endD.56889 => _80
  # DEBUG __ptrD.51229 => __start_77
  # RANGE [0, 1]
  _144 = _80 != 0B;
  # RANGE [0, 1]
  _58 = __start_77 == 0B;
  # RANGE [0, 1]
  _133 = _58 & _144;
  if (_133 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;
;;    succ:       63 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       62 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 7] # .MEM_147 = VDEF <.MEM_146>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _86 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&tokenD.38535, &__dnewD.56890, 0);
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 (EH,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 (EH,EXECUTABLE)
<L32>: [LP 7]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &tokenD.38535
  # DEBUG __pD.56909 => _86
  # DEBUG thisD.56908 => D#6ptD.0
  # .MEM_148 = VDEF <.MEM_147>
  MEM[(charD.10 * *)&tokenD.38535] = _86;
  # VUSE <.MEM_148>
  __dnew.111_87 = __dnewD.56890;
  # DEBUG D#7ptD.0 => &tokenD.38535
  # DEBUG __capacityD.56911 => __dnew.111_87
  # DEBUG thisD.56910 => D#7ptD.0
  # .MEM_149 = VDEF <.MEM_148>
  MEM[(size_typeD.11502 *)&tokenD.38535 + 16B] = __dnew.111_87;
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56893 => _86
  # DEBUG __k1D.56892 => __start_77
  # DEBUG __k2D.56891 => _80
  # DEBUG __dD.56896 => _86
  # DEBUG __sD.56895 => __start_77
  # DEBUG __nD.56894 => iftmp.174_194
  goto <bb 22>;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 362, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       62 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56893 => &tokenD.38535.D.11539._M_local_bufD.11541
  # DEBUG __k1D.56892 => __start_77
  # DEBUG __k2D.56891 => _80
  # DEBUG __dD.56896 => &tokenD.38535.D.11539._M_local_bufD.11541
  # DEBUG __sD.56895 => __start_77
  # DEBUG __nD.56894 => iftmp.174_194
  if (iftmp.174_194 == 1)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 193, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_146>
  _89 = MEM[(const char_typeD.6439 &)__start_77];
  # DEBUG D#13ptD.0 => __start_77
  # DEBUG __c1D.56901 => &tokenD.38535.D.11539._M_local_bufD.11541
  # DEBUG __c2D.56900 => D#13ptD.0
  # .MEM_150 = VDEF <.MEM_146>
  MEM[(char_typeD.6439 &)&tokenD.38535 + 16] = _89;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 317, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38535 } (escaped)
  # _60 = PHI <&tokenD.38535.D.11539._M_local_bufD.11541(20), _86(19)>
  # .MEM_170 = PHI <.MEM_146(20), .MEM_149(19)>
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56893 => _60
  # DEBUG __k1D.56892 => __start_77
  # DEBUG __k2D.56891 => _80
  # DEBUG __dD.56896 => _60
  # DEBUG __sD.56895 => __start_77
  # DEBUG __nD.56894 => iftmp.174_194
  # DEBUG __s1D.56899 => _60
  # DEBUG __s2D.56898 => __start_77
  # DEBUG __nD.56897 => iftmp.174_194
  # .MEM_151 = VDEF <.MEM_170>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  memcpyD.992 (_60, __start_77, iftmp.174_194);
  # VUSE <.MEM_151>
  pretmp_49 = __dnewD.56890;
  # VUSE <.MEM_151>
  pretmp_114 = MEM[(charD.10 * *)&tokenD.38535];
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_122 = PHI <.MEM_150(21), .MEM_151(22)>
  # prephitmp_130 = PHI <iftmp.174_194(21), pretmp_49(22)>
  # PT = nonlocal escaped null { D.38535 } (escaped)
  # prephitmp_128 = PHI <&tokenD.38535.D.11539._M_local_bufD.11541(21), pretmp_114(22)>
  # DEBUG D#780ptD.0 => __dnewD.56890
  # DEBUG thisD.56903 => &tokenD.38535
  # DEBUG __nD.56902 => D#780ptD.0
  # DEBUG D#5ptD.0 => &tokenD.38535
  # DEBUG __lengthD.56905 => D#780ptD.0
  # DEBUG thisD.56904 => D#5ptD.0
  # .MEM_152 = VDEF <.MEM_122>
  MEM[(size_typeD.11502 *)&tokenD.38535 + 8B] = prephitmp_130;
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _92 = prephitmp_128 + prephitmp_130;
  # DEBUG __c1D.56907 => _92
  # DEBUG __c2D.56906 => D#13ptD.0
  # .MEM_153 = VDEF <.MEM_152>
  MEM[(char_typeD.6439 &)_92] = 0;
  # .MEM_154 = VDEF <.MEM_153>
  __dnewD.56890 ={v} {CLOBBER};
  # DEBUG thisD.56916 => values_13(D)
  # DEBUG __xD.56917 => &tokenD.38535
  # VUSE <.MEM_154>
  # PT = nonlocal escaped 
  _93 = values_13(D)->D.36723._M_implD.36214._M_finishD.36217;
  # VUSE <.MEM_154>
  # PT = nonlocal escaped 
  _94 = values_13(D)->D.36723._M_implD.36214._M_end_of_storageD.36218;
  if (_93 != _94)
    goto <bb 24>;
  else
    goto <bb 33>;
;;    succ:       24 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#437ptD.0 => &values_13(D)->D.36723._M_implD.36214
  # DEBUG D#392ptD.0 => D#437ptD.0
  # DEBUG __pD.56920 => _93
  # DEBUG __argD.56919 => &tokenD.38535
  # DEBUG __aD.56918 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#390ptD.0 => D#391ptD.0
  # DEBUG __pD.56923 => _93
  # DEBUG __valD.56922 => &tokenD.38535
  # DEBUG thisD.56921 => D#390ptD.0
  # DEBUG D#14ptD.0 => 32
  # DEBUG __pD.51034 => _93
  # DEBUG D.51035 => D#14ptD.0
  if (_93 != 0B)
    goto <bb 25>;
  else
    goto <bb 32>;
;;    succ:       25 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 372, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.56925 => _93
  # DEBUG __strD.56924 => &tokenD.38535
  # DEBUG thisD.50825 => &tokenD.38535
  # DEBUG D#380ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG thisD.56926 => _93
  # PT = nonlocal escaped 
  _95 = &_93->D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &_93->_M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.56929 => D#381ptD.0
  # DEBUG __datD.56928 => _95
  # DEBUG __aD.56927 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_157 = VDEF <.MEM_154>
  MEM[(struct _Alloc_hiderD.11518 *)_93]._M_pD.11525 = _95;
  # VUSE <.MEM_157>
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _96 = MEM[(charD.10 * *)&tokenD.38535];
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_157>
  _97 = MEM[(long unsigned intD.14 *)&tokenD.38535 + 8B];
  # DEBUG D#1ptD.0 => &tokenD.38535
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _98 = _96 + _97;
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.56932 => _93
  # DEBUG __begD.56931 => _96
  # DEBUG __endD.56930 => _98
  # DEBUG thisD.56936 => _93
  # DEBUG __begD.56935 => _96
  # DEBUG __endD.56934 => _98
  # DEBUG thisD.56939 => _93
  # DEBUG __begD.56940 => _96
  # DEBUG __endD.56941 => _98
  # DEBUG __ptrD.51229 => _96
  # RANGE [0, 1]
  _192 = _98 != 0B;
  # RANGE [0, 1]
  _191 = _96 == 0B;
  # RANGE [0, 1]
  _193 = _191 & _192;
  if (_193 != 0)
    goto <bb 65>;
  else
    goto <bb 67>;
;;    succ:       65 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 108, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       67 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 8] # .MEM_159 = VDEF <.MEM_158>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _105 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_93, &__dnewD.56942, 0);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 (EH,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 108, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => _93
  # DEBUG __pD.56961 => _105
  # DEBUG thisD.56960 => D#6ptD.0
  # .MEM_160 = VDEF <.MEM_159>
  MEM[(charD.10 * *)_93] = _105;
  # VUSE <.MEM_160>
  __dnew.111_106 = __dnewD.56942;
  # DEBUG D#7ptD.0 => _93
  # DEBUG __capacityD.56963 => __dnew.111_106
  # DEBUG thisD.56962 => D#7ptD.0
  # .MEM_161 = VDEF <.MEM_160>
  MEM[(size_typeD.11502 *)_93 + 16B] = __dnew.111_106;
  # DEBUG D#3ptD.0 => _93
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56945 => _105
  # DEBUG __k1D.56944 => _96
  # DEBUG __k2D.56943 => _98
  # DEBUG __dD.56948 => _105
  # DEBUG __sD.56947 => _96
  # DEBUG __nD.56946 => _97
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 264, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       67 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => _93
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56945 => _95
  # DEBUG __k1D.56944 => _96
  # DEBUG __k2D.56943 => _98
  # DEBUG __dD.56948 => _95
  # DEBUG __sD.56947 => _96
  # DEBUG __nD.56946 => _97
  if (_97 == 1)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 141, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_158>
  _108 = MEM[(const char_typeD.6439 &)_96];
  # DEBUG D#13ptD.0 => _96
  # DEBUG __c1D.56953 => _95
  # DEBUG __c2D.56952 => D#13ptD.0
  # .MEM_162 = VDEF <.MEM_158>
  MEM[(char_typeD.6439 &)_95] = _108;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 231, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _57 = PHI <_95(28), _105(27)>
  # .MEM_188 = PHI <.MEM_158(28), .MEM_161(27)>
  # DEBUG D#3ptD.0 => _93
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.56945 => _57
  # DEBUG __k1D.56944 => _96
  # DEBUG __k2D.56943 => _98
  # DEBUG __dD.56948 => _57
  # DEBUG __sD.56947 => _96
  # DEBUG __nD.56946 => _97
  # DEBUG __s1D.56951 => _57
  # DEBUG __s2D.56950 => _96
  # DEBUG __nD.56949 => _97
  # .MEM_163 = VDEF <.MEM_188>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  memcpyD.992 (_57, _96, _97);
  # VUSE <.MEM_163>
  pretmp_79 = __dnewD.56942;
  # VUSE <.MEM_163>
  pretmp_27 = MEM[(charD.10 * *)_93];
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 372, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_124 = PHI <.MEM_162(29), .MEM_163(30)>
  # prephitmp_120 = PHI <_97(29), pretmp_79(30)>
  # PT = nonlocal escaped 
  # prephitmp_82 = PHI <_95(29), pretmp_27(30)>
  # DEBUG D#779ptD.0 => __dnewD.56942
  # DEBUG thisD.56955 => _93
  # DEBUG __nD.56954 => D#779ptD.0
  # DEBUG D#5ptD.0 => _93
  # DEBUG __lengthD.56957 => D#779ptD.0
  # DEBUG thisD.56956 => D#5ptD.0
  # .MEM_164 = VDEF <.MEM_124>
  MEM[(size_typeD.11502 *)_93 + 8B] = prephitmp_120;
  # DEBUG D#3ptD.0 => _93
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped 
  _111 = prephitmp_82 + prephitmp_120;
  # DEBUG __c1D.56959 => _111
  # DEBUG __c2D.56958 => D#13ptD.0
  # .MEM_165 = VDEF <.MEM_164>
  MEM[(char_typeD.6439 &)_111] = 0;
  # .MEM_166 = VDEF <.MEM_165>
  __dnewD.56942 ={v} {CLOBBER};
  # VUSE <.MEM_166>
  pretmp_141 = values_13(D)->D.36723._M_implD.36214._M_finishD.36217;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 31, next block 69, flags: (NEW, REACHABLE)
;;    pred:       24 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_125 = PHI <.MEM_154(24), .MEM_166(31)>
  # PT = nonlocal escaped 
  # prephitmp_123 = PHI <_93(24), pretmp_141(31)>
;;    succ:       69 [100.0%]  (FALLTHRU)

;;   basic block 69, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 32, next block 33, flags: (NEW)
;;    pred:       32 [100.0%]  (FALLTHRU)
  # PT = nonlocal escaped 
  _100 = prephitmp_123 + 32;
  # .MEM_168 = VDEF <.MEM_125>
  values_13(D)->D.36723._M_implD.36214._M_finishD.36217 = _100;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 34, maybe hot
;;    prev block 69, next block 34, flags: (NEW, REACHABLE)
;;    pred:       23 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52038 => values_13(D)
  # DEBUG D#130ptD.0 => &values_13(D)->D.36723._M_implD.36214._M_finishD.36217
  # DEBUG thisD.52040 => NULL
  # DEBUG __iD.52039 => D#130ptD.0
  # .MEM_155 = VDEF <.MEM_154>
  MEM[(struct __normal_iteratorD.36292 *)&D.56938] = _93;
  [LP 9] # .MEM_156 = VDEF <.MEM_155>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_D.36651 (values_13(D), D.56938, &tokenD.38535);
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 (EH,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       33 (EH,EXECUTABLE)
<L34>: [LP 9]
  goto <bb 44> (<L26>);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 509, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_126 = PHI <.MEM_156(33), .MEM_168(69)>
  # DEBUG thisD.52063 => &tokenD.38535
  # DEBUG thisD.52064 => &tokenD.38535
  # DEBUG thisD.52073 => &tokenD.38535
  # VUSE <.MEM_126>
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _39 = MEM[(charD.10 * *)&tokenD.38535];
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.52074 => &tokenD.38535
  if (&tokenD.38535.D.11539._M_local_bufD.11541 != _39)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 356, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38535.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.52066 => &tokenD.38535
  # DEBUG __sizeD.52065 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38535
  # DEBUG D#183ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.52069 => _39
  # DEBUG __aD.52067 => D#181ptD.0
  # DEBUG __nD.52068 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.52072 => _39
  # DEBUG thisD.52070 => D#177ptD.0
  # DEBUG D.52071 => D#178ptD.0
  # .MEM_45 = VDEF <.MEM_126>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZdlPvD.2766 (_39);
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 509, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_126(35), .MEM_45(36)>
  # DEBUG D#187ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG thisD.52075 => D#187ptD.0
  # DEBUG thisD.52076 => D#187ptD.0
  # DEBUG thisD.52077 => D#187ptD.0
  # .MEM_30 = VDEF <.MEM_31>
  tokenD.38535 ={v} {CLOBBER};
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 37, next block 70, flags: (NEW, REACHABLE)
;;    pred:       12 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_44(12), .MEM_30(37)>
;;    succ:       70 [100.0%]  (FALLTHRU)

;;   basic block 70, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 38, next block 39, flags: (NEW)
;;    pred:       38 [100.0%]  (FALLTHRU)
  # RANGE [1, 18446744073709551615]
  curr_33 = _37 + 1;
  # DEBUG startD.38532 => curr_33
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 9774, maybe hot
;;   Invalid sum of incoming frequencies 11042, should be 9774
;;    prev block 70, next block 71, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_2 = PHI <curr_1(10), curr_1(59), curr_1(61), curr_33(70)>
  # nested_4 = PHI <nested_23(10), nested_25(59), nested_3(61), 0(70)>
  # .MEM_9 = PHI <.MEM_44(10), .MEM_44(59), .MEM_44(61), .MEM_8(70)>
  # RANGE [1, 18446744073709551615]
  # prephitmp_48 = PHI <pretmp_54(10), pretmp_46(59), pretmp_47(61), curr_33(70)>
;;    succ:       71 [100.0%]  (FALLTHRU)

;;   basic block 71, loop depth 1, count 0, freq 9774, maybe hot
;;    prev block 39, next block 40, flags: (NEW)
;;    pred:       39 [100.0%]  (FALLTHRU)
  # DEBUG nestedD.38533 => nested_4
  # DEBUG startD.38532 => curr_2
  # DEBUG currD.38534 => _37 + 1
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 71, next block 41, flags: (NEW, REACHABLE)
;;    pred:       8 [2.2%]  (FALSE_VALUE,EXECUTABLE)
  # nested_90 = PHI <nested_3(8)>
  if (nested_90 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_35 = VDEF <.MEM_44>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  __assert_failD.14402 ("!nested", "config_utils.cpp", 362, &_ZZ12tokenize_strRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38537);
;;    succ:      

;;   basic block 42, loop depth 0, count 0, freq 758, maybe hot
;;   Invalid sum of incoming frequencies 537, should be 758
;;    prev block 41, next block 72, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_187 = PHI <.MEM_43(2), .MEM_132(5), .MEM_44(40)>
;;    succ:       72 [100.0%]  (FALLTHRU)

;;   basic block 72, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 42, next block 43, flags: (NEW)
;;    pred:       42 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_187>
  return values_13(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 72, next block 44, flags: (NEW)
;;    pred:       26 (EH,EXECUTABLE)
<L33>: [LP 8]
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_127 = PHI <.MEM_156(34), .MEM_159(43), .MEM_167(66)>
<L26>:
  # DEBUG thisD.52078 => &tokenD.38535
  # DEBUG thisD.52079 => &tokenD.38535
  # DEBUG thisD.52088 => &tokenD.38535
  # VUSE <.MEM_127>
  # PT = nonlocal escaped null { D.38535 } (escaped)
  _29 = MEM[(charD.10 * *)&tokenD.38535];
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.52089 => &tokenD.38535
  if (&tokenD.38535.D.11539._M_local_bufD.11541 != _29)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38535.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.52081 => &tokenD.38535
  # DEBUG __sizeD.52080 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38535
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38535
  # DEBUG D#183ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.52084 => _29
  # DEBUG __aD.52082 => D#181ptD.0
  # DEBUG __nD.52083 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.52087 => _29
  # DEBUG thisD.52085 => D#177ptD.0
  # DEBUG D.52086 => D#178ptD.0
  # .MEM_50 = VDEF <.MEM_127>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZdlPvD.2766 (_29);
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_127(44), .MEM_50(45)>
  # DEBUG D#187ptD.0 => &tokenD.38535._M_dataplusD.11519
  # DEBUG thisD.52090 => D#187ptD.0
  # DEBUG thisD.52091 => D#187ptD.0
  # DEBUG thisD.52092 => D#187ptD.0
  [LP 10] resx 3
;;    succ:       47 (EH,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       46 (EH,EXECUTABLE)
<L35>: [LP 10]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L29>: [LP 4]
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_40(47), .MEM_44(7), .MEM_132(48), .MEM_147(18), .MEM_169(64), .MEM_171(15)>
<L28>:
  # .MEM_32 = VDEF <.MEM_11>
  tokenD.38535 ={v} {CLOBBER};
  # DEBUG thisD.56968 => values_13(D)
  # DEBUG D#255ptD.0 => &values_13(D)->D.36723
  # DEBUG thisD.49581 => D#255ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _112 = values_13(D)->D.36723._M_implD.36214._M_finishD.36217;
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __first_113 = values_13(D)->D.36723._M_implD.36214._M_startD.36216;
  # DEBUG __firstD.56971 => __first_113
  # DEBUG __lastD.56970 => _112
  # DEBUG __firstD.56976 => __first_113
  if (_112 == __first_113)
    goto <bb 56>;
  else
    goto <bb 50>;
;;    succ:       56 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW)
;;    pred:       49 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_121 = PHI <__first_113(50), __first_117(54)>
  # .MEM_62 = PHI <.MEM_32(50), .MEM_176(54)>
  # DEBUG __firstD.56976 => __first_121
  # DEBUG __rD.49471 => __first_121
  # DEBUG __pointerD.56977 => NULL
  # DEBUG thisD.56978 => NULL
  # DEBUG thisD.56979 => NULL
  # DEBUG thisD.56988 => NULL
  # VUSE <.MEM_62>
  # PT = nonlocal escaped 
  _115 = MEM[(charD.10 * *)__first_121];
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.56989 => NULL
  # PT = nonlocal escaped 
  _116 = &MEM[(const struct basic_stringD.2844 *)__first_121].D.11539._M_local_bufD.11541;
  if (_115 != _116)
    goto <bb 52>;
  else
    goto <bb 53>;
;;    succ:       52 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.56981 => NULL
  # DEBUG __sizeD.56980 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => NULL
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.56984 => _115
  # DEBUG __aD.56982 => D#181ptD.0
  # DEBUG __nD.56983 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.56987 => _115
  # DEBUG thisD.56985 => D#177ptD.0
  # DEBUG D.56986 => D#178ptD.0
  # .MEM_172 = VDEF <.MEM_62>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZdlPvD.2766 (_115);
;;    succ:       53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       51 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_62(51), .MEM_172(52)>
  # DEBUG thisD.56990 => D#187ptD.0
  # DEBUG thisD.56991 => D#187ptD.0
  # DEBUG thisD.56992 => D#187ptD.0
  # .MEM_176 = VDEF <.MEM_129>
  MEM[(struct  &)__first_121] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_117 = __first_121 + 32;
  # DEBUG __firstD.56976 => __first_117
  # DEBUG __firstD.56976 => __first_117
  if (_112 == __first_117)
    goto <bb 55>;
  else
    goto <bb 54>;
;;    succ:       55 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 51>;
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 54, next block 68, flags: (NEW)
;;    pred:       53 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       68 [100.0%]  (FALLTHRU)

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 56, flags: (NEW)
;;    pred:       55 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_176>
  pretmp_52 = MEM[(struct _Vector_baseD.35981 *)values_13(D)]._M_implD.36214._M_startD.36216;
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 57, flags: (NEW, REACHABLE)
;;    pred:       68 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_176(68), .MEM_32(49)>
  # PT = nonlocal escaped 
  # prephitmp_53 = PHI <pretmp_52(68), __first_113(49)>
  # DEBUG D#256ptD.0 => &values_13(D)->D.36723
  # DEBUG thisD.56993 => D#256ptD.0
  # DEBUG D#253ptD.0 => D#256ptD.0->_M_implD.36214._M_end_of_storageD.36218
  # DEBUG D#252ptD.0 => (long intD.12) D#253ptD.0
  # DEBUG D#778ptD.0 => MEM[(struct _Vector_baseD.35981 *)values_13(D)]._M_implD.36214._M_startD.36216
  # DEBUG D#251ptD.0 => (long intD.12) D#778ptD.0
  # DEBUG D#250ptD.0 => D#252ptD.0 - D#251ptD.0
  # DEBUG D#249ptD.0 => D#250ptD.0 /[ex] 32
  # DEBUG D#246ptD.0 => D#256ptD.0
  # DEBUG D#247ptD.0 => (long unsigned intD.14) D#249ptD.0
  # DEBUG __pD.56996 => D#778ptD.0
  # DEBUG thisD.56994 => D#246ptD.0
  # DEBUG __nD.56995 => D#247ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  if (prephitmp_53 != 0B)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#243ptD.0 => &D#244ptD.0->_M_implD.36214
  # DEBUG D#241ptD.0 => D#243ptD.0
  # DEBUG D#242ptD.0 => D#245ptD.0
  # DEBUG __pD.57000 => D#778ptD.0
  # DEBUG __aD.56998 => D#241ptD.0
  # DEBUG __nD.56999 => D#242ptD.0
  # DEBUG D#240ptD.0 => D#242ptD.0
  # DEBUG D#239ptD.0 => D#241ptD.0
  # DEBUG D#237ptD.0 => D#239ptD.0
  # DEBUG D#238ptD.0 => D#240ptD.0
  # DEBUG __pD.57003 => D#778ptD.0
  # DEBUG thisD.57001 => D#237ptD.0
  # DEBUG D.57002 => D#238ptD.0
  # .MEM_177 = VDEF <.MEM_61>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_53);
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#248ptD.0 => &D#256ptD.0->_M_implD.36214
  # DEBUG thisD.57004 => D#248ptD.0
  # DEBUG thisD.57005 => D#248ptD.0
  # DEBUG thisD.57006 => D#248ptD.0
  resx 1
;;    succ:      

;;   basic block 59, loop depth 1, count 0, freq 3519, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 3519
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_25 = nested_3 + -1;
  # DEBUG nestedD.38533 => nested_25
  pretmp_46 = _37 + 1;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 1, count 0, freq 6053, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 6053
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       11 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (nested_3 == 0)
    goto <bb 12>;
  else
    goto <bb 61>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 61, loop depth 1, count 0, freq 3027, maybe hot
;;    prev block 60, next block 62, flags: (NEW)
;;    pred:       60 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_47 = _37 + 1;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 1, count 0, freq 510, maybe hot
;;   Invalid sum of incoming frequencies 77, should be 510
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       16 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56913 => __start_77
  # DEBUG __lastD.56912 => _80
  # DEBUG D#393ptD.0 => &__firstD.56913
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56915 => __start_77
  # DEBUG __lastD.56914 => _80
  # .MEM_146 = VDEF <.MEM_145>
  __dnewD.56890 = iftmp.174_194;
  if (iftmp.174_194 > 15)
    goto <bb 17>;
  else
    goto <bb 20>;
;;    succ:       17 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 65, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 434, should be 65
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       16 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_169 = VDEF <.MEM_145>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       64 (EH,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       63 (EH,EXECUTABLE)
<L36>: [LP 1]
  goto <bb 49> (<L28>);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 48, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 316, should be 48
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 3] # .MEM_167 = VDEF <.MEM_157>
  # USE = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38535 D.38537 D.56890 D.56942 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       66 (EH,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 65, next block 67, flags: (NEW)
;;    pred:       65 (EH,EXECUTABLE)
<L37>: [LP 3]
  goto <bb 44> (<L26>);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 1, count 0, freq 372, maybe hot
;;   Invalid sum of incoming frequencies 56, should be 372
;;    prev block 66, next block 1, flags: (NEW, REACHABLE)
;;    pred:       25 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.56965 => _96
  # DEBUG __lastD.56964 => _98
  # DEBUG D#393ptD.0 => &__firstD.56965
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.56967 => _96
  # DEBUG __lastD.56966 => _98
  # .MEM_158 = VDEF <.MEM_157>
  __dnewD.56942 = _97;
  if (_97 > 15)
    goto <bb 26>;
  else
    goto <bb 28>;
;;    succ:       26 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [71.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function std::vector<int> tokenize_int(const string&) (_Z12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1753, decl_uid=35339, cgraph_uid=439, symbol_order=441)


Pass statistics:
----------------

std::vector<int> tokenize_int(const string&) (const struct stringD.2845 & dataD.38541)
Eh tree:
   1 cleanup land:{10,<L35>},{9,<L34>},{8,<L33>},{7,<L32>},{6,<L31>},{1,<L36>}
     5 cleanup land:{4,<L28>}
{
  struct __normal_iteratorD.37043 D.57191;
  size_typeD.11502 __dnewD.57157;
  const charD.10 * __startD.57138;
  struct __normal_iteratorD.37043 D.57120;
  struct stringD.2845 tokenD.38551;
  static const charD.10 _ZZ12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38554[45] = "std::vector<int> tokenize_int(const string&)";
  size_tD.5382 currD.38550;
  intD.9 nestedD.38549;
  const value_typeD.37037 D.38553;
  const value_typeD.37037 D.38546;
  charD.10 * const _14;
  const size_typeD.11502 _16;
  charD.10 _18;
  intD.9 _19;
  boolD.2757 _20;
  const size_typeD.11502 _22;
  charD.10 * const _25;
  long intD.12 _26;
  charD.10 _27;
  intD.9 _29;
  long unsigned intD.14 _31;
  long intD.12 _33;
  charD.10 * const _37;
  intD.9 * _40;
  size_typeD.11502 _47;
  const charD.10 & _48;
  charD.10 * const _49;
  charD.10 * const _50;
  charD.10 * const prephitmp_52;
  size_tD.5382 prephitmp_60;
  size_typeD.11502 pretmp_61;
  size_typeD.11502 prephitmp_62;
  charD.10 * const pretmp_63;
  size_tD.5382 pretmp_66;
  size_tD.5382 pretmp_67;
  size_tD.5382 pretmp_68;
  intD.9 * _70;
  intD.9 * _71;
  intD.9 * _73;
  boolD.2757 _75;
  long unsigned intD.14 _77;
  const size_typeD.11502 _78;
  const charD.10 * _79;
  boolD.2757 _84;
  charD.10 * _85;
  long unsigned intD.14 __dnew.111_86;
  const char_typeD.6439 _88;
  charD.10 * _91;
  intD.9 * _92;
  intD.9 * _93;
  charD.10 * const _94;
  intD.9 * _95;
  size_typeD.11502 iftmp.174_142;
  boolD.2757 _146;
  boolD.2757 _162;
  boolD.2757 _165;

;;   basic block 2, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.53473 => values_13(D)
  # DEBUG D#296ptD.0 => &values_13(D)->D.37474
  # DEBUG thisD.53474 => D#296ptD.0
  # DEBUG D#295ptD.0 => &D#296ptD.0->_M_implD.36965
  # DEBUG thisD.53475 => D#295ptD.0
  # DEBUG thisD.49735 => D#295ptD.0
  # DEBUG thisD.49733 => D#295ptD.0
  # .MEM_53 = VDEF <.MEM_12(D)>
  MEM[(struct _Vector_implD.36942 *)values_13(D)]._M_startD.36967 = 0B;
  # .MEM_54 = VDEF <.MEM_53>
  MEM[(struct _Vector_implD.36942 *)values_13(D)]._M_finishD.36968 = 0B;
  # .MEM_55 = VDEF <.MEM_54>
  MEM[(struct _Vector_implD.36942 *)values_13(D)]._M_end_of_storageD.36969 = 0B;
  # DEBUG thisD.53471 => data_15(D)
  # VUSE <.MEM_55>
  _16 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46865 => D#2ptD.0
  if (_16 == 0)
    goto <bb 40>;
  else
    goto <bb 3>;
;;    succ:       40 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 463, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53476 => data_15(D)
  # DEBUG __posD.53477 => 0
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_55>
  _18 = MEM[(const charD.10 &)_14];
  if (_18 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [51.2%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [48.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [48.8%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [51.2%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53479 => data_15(D)
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __nptrD.53467 => _14
  # .MEM_56 = VDEF <.MEM_55>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _33 = strtolD.13341 (_14, 0B, 10);
  _29 = (intD.9) _33;
  # .MEM_21 = VDEF <.MEM_56>
  D.38546 = _29;
  # DEBUG thisD.57112 => values_13(D)
  # DEBUG __xD.57113 => &D.38546
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  _70 = values_13(D)->D.37474._M_implD.36965._M_finishD.36968;
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  _71 = values_13(D)->D.37474._M_implD.36965._M_end_of_storageD.36969;
  if (_70 != _71)
    goto <bb 6>;
  else
    goto <bb 9>;
;;    succ:       6 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#526ptD.0 => &values_13(D)->D.37474._M_implD.36965
  # DEBUG D#134ptD.0 => D#526ptD.0
  # DEBUG __pD.57116 => _70
  # DEBUG __argD.57115 => &D.38546
  # DEBUG __aD.57114 => D#134ptD.0
  # DEBUG D#133ptD.0 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#133ptD.0
  # DEBUG __pD.57119 => _70
  # DEBUG __valD.57118 => &D.38546
  # DEBUG thisD.57117 => D#132ptD.0
  # DEBUG D#14ptD.0 => 4
  # DEBUG __pD.48024 => _70
  # DEBUG D.48025 => D#14ptD.0
  if (_70 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_103 = VDEF <.MEM_21>
  *_70 = _29;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_21(6), .MEM_103(7)>
  # PT = nonlocal escaped 
  _73 = _70 + 4;
  # .MEM_104 = VDEF <.MEM_35>
  values_13(D)->D.37474._M_implD.36965._M_finishD.36968 = _73;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       5 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53461 => values_13(D)
  # DEBUG D#135ptD.0 => &values_13(D)->D.37474._M_implD.36965._M_finishD.36968
  # DEBUG thisD.53463 => NULL
  # DEBUG __iD.53462 => D#135ptD.0
  # .MEM_101 = VDEF <.MEM_21>
  MEM[(struct __normal_iteratorD.37043 *)&D.57120] = _70;
  [LP 6] # .MEM_102 = VDEF <.MEM_101>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKiD.37402 (values_13(D), D.57120, &D.38546);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 (EH,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_96 = PHI <.MEM_102(9), .MEM_104(8)>
  # .MEM_23 = VDEF <.MEM_96>
  D.38546 ={v} {CLOBBER};
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_1 = PHI <1(4), curr_2(37)>
  # nested_3 = PHI <0(4), nested_4(37)>
  # RANGE [1, 18446744073709551615]
  # curr_5 = PHI <1(4), prephitmp_60(37)>
  # .MEM_7 = PHI <.MEM_55(4), .MEM_9(37)>
  # DEBUG currD.38550 => curr_5
  # DEBUG nestedD.38549 => nested_3
  # DEBUG startD.38548 => curr_1
  # DEBUG thisD.53481 => data_15(D)
  # DEBUG __sD.53482 => "{,}"
  # DEBUG __posD.53483 => curr_5
  # DEBUG __sD.53484 => "{,}"
  [LP 7] # .MEM_57 = VDEF <.MEM_7>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _47 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmmD.12156 (data_15(D), "{,}", curr_5, 3);
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 (EH,EXECUTABLE)
<L32>: [LP 7]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG currD.38550 => _47
  if (_47 != 18446744073709551615)
    goto <bb 14>;
  else
    goto <bb 38>;
;;    succ:       14 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9775, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53486 => data_15(D)
  # DEBUG __posD.53487 => _47
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _25 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # PT = nonlocal escaped 
  _48 = _25 + _47;
  # VUSE <.MEM_57>
  _27 = *_48;
  if (_27 == 123)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 2737, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_28 = nested_3 + 1;
  # DEBUG nestedD.38549 => nested_28
  pretmp_66 = _47 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 1971, maybe hot
;;   Invalid sum of incoming frequencies 7038, should be 1971
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53489 => data_15(D)
  # DEBUG __posD.53490 => _47
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # RANGE [0, 1]
  _162 = nested_3 != 0;
  # RANGE [0, 1]
  _165 = _27 == 125;
  # RANGE [0, 1]
  _146 = _162 & _165;
  if (_146 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 1759, maybe hot
;;   Invalid sum of incoming frequencies 3027, should be 1759
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       51 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  if (curr_1 < _47)
    goto <bb 18>;
  else
    goto <bb 36>;
;;    succ:       18 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _31 = _47 - curr_1;
  # DEBUG thisD.57121 => data_15(D)
  # DEBUG __posD.57122 => curr_1
  # DEBUG __nD.57123 => _31
  # DEBUG thisD.57126 => data_15(D)
  # DEBUG __posD.57125 => curr_1
  # DEBUG __sD.57124 => "basic_string::substr"
  # VUSE <.MEM_57>
  _22 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  if (curr_1 > _22)
    goto <bb 19>;
  else
    goto <bb 21>;
;;    succ:       19 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_43 = PHI <curr_1(18)>
  # _78 = PHI <_22(18)>
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46997 => D#2ptD.0
  [LP 8] # .MEM_121 = VDEF <.MEM_57>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZSt24__throw_out_of_range_fmtPKczD.2864 ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_43, _78);
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L33>: [LP 8]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.57127 => &tokenD.38551
  # DEBUG __strD.57128 => data_15(D)
  # DEBUG __posD.57129 => curr_1
  # DEBUG __nD.57130 => _31
  # DEBUG thisD.57132 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.57133 => &tokenD.38551
  # DEBUG D#401ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG thisD.57136 => D#401ptD.0
  # DEBUG __datD.57135 => &tokenD.38551.D.11539._M_local_bufD.11541
  # DEBUG __aD.57134 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#401ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_105 = VDEF <.MEM_57>
  MEM[(struct _Alloc_hiderD.11518 *)&tokenD.38551]._M_pD.11525 = &tokenD.38551.D.11539._M_local_bufD.11541;
  # DEBUG thisD.57137 => NULL
  # DEBUG thisD.51465 => NULL
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.51462 => D#3ptD.0
  # DEBUG thisD.57153 => data_15(D)
  # DEBUG __posD.57152 => curr_1
  # DEBUG __sD.57151 => "basic_string::basic_string"
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  # PT = nonlocal escaped 
  __start_76 = _25 + curr_1;
  # DEBUG __startD.57138 => __start_76
  # DEBUG thisD.57141 => data_15(D)
  # DEBUG __posD.57140 => curr_1
  # DEBUG __offD.57139 => _31
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46904 => D#2ptD.0
  # RANGE [0, 18446744073709551615]
  _77 = _22 - curr_1;
  # DEBUG __testoffD.57142 => _77 > _31
  # RANGE [0, 18446744073709551615]
  iftmp.174_142 = MIN_EXPR <_31, _77>;
  # PT = nonlocal escaped 
  _79 = __start_76 + iftmp.174_142;
  # DEBUG thisD.57145 => &tokenD.38551
  # DEBUG __begD.57144 => __start_76
  # DEBUG __endD.57143 => _79
  # DEBUG thisD.57149 => &tokenD.38551
  # DEBUG __begD.57148 => __start_76
  # DEBUG __endD.57147 => _79
  # DEBUG thisD.57154 => &tokenD.38551
  # DEBUG __begD.57155 => __start_76
  # DEBUG __endD.57156 => _79
  # DEBUG __ptrD.51229 => __start_76
  # RANGE [0, 1]
  _20 = _79 != 0B;
  # RANGE [0, 1]
  _84 = __start_76 == 0B;
  # RANGE [0, 1]
  _75 = _20 & _84;
  if (_75 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;
;;    succ:       53 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       55 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 9] # .MEM_107 = VDEF <.MEM_106>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _85 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&tokenD.38551, &__dnewD.57157, 0);
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 (EH,EXECUTABLE)
<L34>: [LP 9]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &tokenD.38551
  # DEBUG __pD.57176 => _85
  # DEBUG thisD.57175 => D#6ptD.0
  # .MEM_108 = VDEF <.MEM_107>
  MEM[(charD.10 * *)&tokenD.38551] = _85;
  # VUSE <.MEM_108>
  __dnew.111_86 = __dnewD.57157;
  # DEBUG D#7ptD.0 => &tokenD.38551
  # DEBUG __capacityD.57178 => __dnew.111_86
  # DEBUG thisD.57177 => D#7ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  MEM[(size_typeD.11502 *)&tokenD.38551 + 16B] = __dnew.111_86;
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57160 => _85
  # DEBUG __k1D.57159 => __start_76
  # DEBUG __k2D.57158 => _79
  # DEBUG __dD.57163 => _85
  # DEBUG __sD.57162 => __start_76
  # DEBUG __nD.57161 => iftmp.174_142
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 362, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       55 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57160 => &tokenD.38551.D.11539._M_local_bufD.11541
  # DEBUG __k1D.57159 => __start_76
  # DEBUG __k2D.57158 => _79
  # DEBUG __dD.57163 => &tokenD.38551.D.11539._M_local_bufD.11541
  # DEBUG __sD.57162 => __start_76
  # DEBUG __nD.57161 => iftmp.174_142
  if (iftmp.174_142 == 1)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 193, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_106>
  _88 = MEM[(const char_typeD.6439 &)__start_76];
  # DEBUG D#13ptD.0 => __start_76
  # DEBUG __c1D.57168 => &tokenD.38551.D.11539._M_local_bufD.11541
  # DEBUG __c2D.57167 => D#13ptD.0
  # .MEM_110 = VDEF <.MEM_106>
  MEM[(char_typeD.6439 &)&tokenD.38551 + 16] = _88;
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 317, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38551 } (escaped)
  # _94 = PHI <&tokenD.38551.D.11539._M_local_bufD.11541(25), _85(24)>
  # .MEM_74 = PHI <.MEM_106(25), .MEM_109(24)>
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57160 => _94
  # DEBUG __k1D.57159 => __start_76
  # DEBUG __k2D.57158 => _79
  # DEBUG __dD.57163 => _94
  # DEBUG __sD.57162 => __start_76
  # DEBUG __nD.57161 => iftmp.174_142
  # DEBUG __s1D.57166 => _94
  # DEBUG __s2D.57165 => __start_76
  # DEBUG __nD.57164 => iftmp.174_142
  # .MEM_111 = VDEF <.MEM_74>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  memcpyD.992 (_94, __start_76, iftmp.174_142);
  # VUSE <.MEM_111>
  pretmp_61 = __dnewD.57157;
  # VUSE <.MEM_111>
  pretmp_63 = MEM[(charD.10 * *)&tokenD.38551];
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_110(26), .MEM_111(27)>
  # prephitmp_62 = PHI <iftmp.174_142(26), pretmp_61(27)>
  # PT = nonlocal escaped null { D.38551 } (escaped)
  # prephitmp_52 = PHI <&tokenD.38551.D.11539._M_local_bufD.11541(26), pretmp_63(27)>
  # DEBUG D#794ptD.0 => __dnewD.57157
  # DEBUG thisD.57170 => &tokenD.38551
  # DEBUG __nD.57169 => D#794ptD.0
  # DEBUG D#5ptD.0 => &tokenD.38551
  # DEBUG __lengthD.57172 => D#794ptD.0
  # DEBUG thisD.57171 => D#5ptD.0
  # .MEM_112 = VDEF <.MEM_98>
  MEM[(size_typeD.11502 *)&tokenD.38551 + 8B] = prephitmp_62;
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38551 } (escaped)
  _91 = prephitmp_52 + prephitmp_62;
  # DEBUG __c1D.57174 => _91
  # DEBUG __c2D.57173 => D#13ptD.0
  # .MEM_113 = VDEF <.MEM_112>
  MEM[(char_typeD.6439 &)_91] = 0;
  # .MEM_114 = VDEF <.MEM_113>
  __dnewD.57157 ={v} {CLOBBER};
  # DEBUG thisD.53492 => &tokenD.38551
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null { D.38551 } (escaped)
  _49 = MEM[(charD.10 * *)&tokenD.38551];
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __nptrD.53469 => _49
  # .MEM_58 = VDEF <.MEM_114>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _26 = strtolD.13341 (_49, 0B, 10);
  _19 = (intD.9) _26;
  # .MEM_34 = VDEF <.MEM_58>
  D.38553 = _19;
  # DEBUG thisD.57183 => values_13(D)
  # DEBUG __xD.57184 => &D.38553
  # VUSE <.MEM_34>
  # PT = nonlocal escaped 
  _92 = values_13(D)->D.37474._M_implD.36965._M_finishD.36968;
  # VUSE <.MEM_34>
  # PT = nonlocal escaped 
  _93 = values_13(D)->D.37474._M_implD.36965._M_end_of_storageD.36969;
  if (_92 != _93)
    goto <bb 29>;
  else
    goto <bb 32>;
;;    succ:       29 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#526ptD.0 => &values_13(D)->D.37474._M_implD.36965
  # DEBUG D#134ptD.0 => D#526ptD.0
  # DEBUG __pD.57187 => _92
  # DEBUG __argD.57186 => &D.38553
  # DEBUG __aD.57185 => D#134ptD.0
  # DEBUG D#133ptD.0 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#133ptD.0
  # DEBUG __pD.57190 => _92
  # DEBUG __valD.57189 => &D.38553
  # DEBUG thisD.57188 => D#132ptD.0
  # DEBUG D#14ptD.0 => 4
  # DEBUG __pD.48024 => _92
  # DEBUG D.48025 => D#14ptD.0
  if (_92 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 427, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_117 = VDEF <.MEM_34>
  *_92 = _19;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_34(29), .MEM_117(30)>
  # PT = nonlocal escaped 
  _95 = _92 + 4;
  # .MEM_118 = VDEF <.MEM_99>
  values_13(D)->D.37474._M_implD.36965._M_finishD.36968 = _95;
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 34, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       28 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53461 => values_13(D)
  # DEBUG D#135ptD.0 => &values_13(D)->D.37474._M_implD.36965._M_finishD.36968
  # DEBUG thisD.53463 => NULL
  # DEBUG __iD.53462 => D#135ptD.0
  # .MEM_115 = VDEF <.MEM_34>
  MEM[(struct __normal_iteratorD.37043 *)&D.57191] = _92;
  [LP 4] # .MEM_116 = VDEF <.MEM_115>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKiD.37402 (values_13(D), D.57191, &D.38553);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 (EH,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_116(32), .MEM_118(31)>
  # .MEM_36 = VDEF <.MEM_100>
  D.38553 ={v} {CLOBBER};
  # DEBUG thisD.53494 => &tokenD.38551
  # DEBUG thisD.53495 => &tokenD.38551
  # DEBUG thisD.53504 => &tokenD.38551
  # VUSE <.MEM_36>
  # PT = nonlocal escaped null { D.38551 } (escaped)
  _50 = MEM[(charD.10 * *)&tokenD.38551];
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.53505 => &tokenD.38551
  if (&tokenD.38551.D.11539._M_local_bufD.11541 != _50)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 356, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38551.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.53497 => &tokenD.38551
  # DEBUG __sizeD.53496 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38551
  # DEBUG D#183ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.53500 => _50
  # DEBUG __aD.53498 => D#181ptD.0
  # DEBUG __nD.53499 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.53503 => _50
  # DEBUG thisD.53501 => D#177ptD.0
  # DEBUG D.53502 => D#178ptD.0
  # .MEM_59 = VDEF <.MEM_36>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZdlPvD.2766 (_50);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_45 = PHI <.MEM_36(33), .MEM_59(34)>
  # DEBUG D#187ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG thisD.53506 => D#187ptD.0
  # DEBUG thisD.53507 => D#187ptD.0
  # DEBUG thisD.53508 => D#187ptD.0
  # .MEM_38 = VDEF <.MEM_45>
  tokenD.38551 ={v} {CLOBBER};
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       17 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_57(17), .MEM_38(35)>
  # RANGE [1, 18446744073709551615]
  curr_42 = _47 + 1;
  # DEBUG startD.38548 => curr_42
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 9774, maybe hot
;;   Invalid sum of incoming frequencies 11042, should be 9774
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_2 = PHI <curr_1(15), curr_1(50), curr_1(52), curr_42(36)>
  # nested_4 = PHI <nested_28(15), nested_30(50), nested_3(52), 0(36)>
  # .MEM_9 = PHI <.MEM_57(15), .MEM_57(50), .MEM_57(52), .MEM_8(36)>
  # RANGE [1, 18446744073709551615]
  # prephitmp_60 = PHI <pretmp_66(15), pretmp_67(50), pretmp_68(52), curr_42(36)>
  # DEBUG nestedD.38549 => nested_4
  # DEBUG startD.38548 => curr_2
  # DEBUG currD.38550 => _47 + 1
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       13 [2.2%]  (FALSE_VALUE,EXECUTABLE)
  # nested_141 = PHI <nested_3(13)>
  if (nested_141 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_44 = VDEF <.MEM_57>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  __assert_failD.14402 ("!nested", "config_utils.cpp", 403, &_ZZ12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38554);
;;    succ:      

;;   basic block 40, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_163 = PHI <.MEM_55(2), .MEM_57(38)>
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_10 = PHI <.MEM_163(40), .MEM_23(10)>
  # VUSE <.MEM_10>
  return values_13(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       32 (EH,EXECUTABLE)
<L28>: [LP 4]
  # .MEM_39 = VDEF <.MEM_116>
  D.38553 ={v} {CLOBBER};
  # DEBUG thisD.53509 => &tokenD.38551
  # DEBUG thisD.53510 => &tokenD.38551
  # DEBUG thisD.53519 => &tokenD.38551
  # VUSE <.MEM_39>
  # PT = nonlocal escaped null { D.38551 } (escaped)
  _37 = MEM[(charD.10 * *)&tokenD.38551];
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.53520 => &tokenD.38551
  if (&tokenD.38551.D.11539._M_local_bufD.11541 != _37)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38551.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.53512 => &tokenD.38551
  # DEBUG __sizeD.53511 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38551
  # DEBUG D#183ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.53515 => _37
  # DEBUG __aD.53513 => D#181ptD.0
  # DEBUG __nD.53514 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.53518 => _37
  # DEBUG thisD.53516 => D#177ptD.0
  # DEBUG D.53517 => D#178ptD.0
  # .MEM_64 = VDEF <.MEM_39>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZdlPvD.2766 (_37);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_51 = PHI <.MEM_39(42), .MEM_64(43)>
  # DEBUG D#187ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG thisD.53521 => D#187ptD.0
  # DEBUG thisD.53522 => D#187ptD.0
  # DEBUG thisD.53523 => D#187ptD.0
  [LP 10] resx 5
;;    succ:       45 (EH,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 (EH,EXECUTABLE)
<L35>: [LP 10]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       9 (EH,EXECUTABLE)
<L31>: [LP 6]
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_51(45), .MEM_107(23), .MEM_57(12), .MEM_102(46), .MEM_121(20), .MEM_119(54)>
<L30>:
  # .MEM_41 = VDEF <.MEM_11>
  tokenD.38551 ={v} {CLOBBER};
  # .MEM_24 = VDEF <.MEM_41>
  D.38546 ={v} {CLOBBER};
  # DEBUG thisD.53524 => values_13(D)
  # DEBUG D#271ptD.0 => &values_13(D)->D.37474
  # DEBUG thisD.49646 => D#271ptD.0
  # DEBUG D#274ptD.0 => values_13(D)->D.37474._M_implD.36965._M_finishD.36968
  # DEBUG D#273ptD.0 => values_13(D)->D.37474._M_implD.36965._M_startD.36967
  # DEBUG __firstD.49643 => D#273ptD.0
  # DEBUG __lastD.49644 => D#274ptD.0
  # DEBUG D.49645 => NULL
  # DEBUG D#165ptD.0 => D#273ptD.0
  # DEBUG D#166ptD.0 => D#274ptD.0
  # DEBUG __firstD.48298 => D#165ptD.0
  # DEBUG __lastD.48297 => D#166ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0
  # DEBUG D#161ptD.0 => D#163ptD.0
  # DEBUG D#162ptD.0 => D#164ptD.0
  # DEBUG D.48287 => D#161ptD.0
  # DEBUG D.48286 => D#162ptD.0
  # DEBUG D#272ptD.0 => &values_13(D)->D.37474
  # DEBUG thisD.53525 => D#272ptD.0
  # DEBUG D#270ptD.0 => D#272ptD.0->_M_implD.36965._M_end_of_storageD.36969
  # DEBUG D#269ptD.0 => (long intD.12) D#270ptD.0
  # VUSE <.MEM_24>
  # PT = nonlocal escaped 
  _40 = MEM[(struct _Vector_baseD.36732 *)values_13(D)]._M_implD.36965._M_startD.36967;
  # DEBUG D#268ptD.0 => (long intD.12) _40
  # DEBUG D#267ptD.0 => D#269ptD.0 - D#268ptD.0
  # DEBUG D#266ptD.0 => D#267ptD.0 /[ex] 4
  # DEBUG D#265ptD.0 => (long unsigned intD.14) D#266ptD.0
  # DEBUG thisD.53528 => D#272ptD.0
  # DEBUG __pD.53527 => _40
  # DEBUG __nD.53526 => D#265ptD.0
  if (_40 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#263ptD.0 => &D#272ptD.0->_M_implD.36965
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#265ptD.0
  # DEBUG __pD.53532 => _40
  # DEBUG __aD.53530 => D#261ptD.0
  # DEBUG __nD.53531 => D#262ptD.0
  # DEBUG D#260ptD.0 => D#262ptD.0
  # DEBUG D#259ptD.0 => D#261ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0
  # DEBUG D#258ptD.0 => D#260ptD.0
  # DEBUG __pD.53535 => _40
  # DEBUG thisD.53533 => D#257ptD.0
  # DEBUG D.53534 => D#258ptD.0
  # .MEM_69 = VDEF <.MEM_24>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       47 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#264ptD.0 => &D#272ptD.0->_M_implD.36965
  # DEBUG thisD.53536 => D#264ptD.0
  # DEBUG thisD.53537 => D#264ptD.0
  # DEBUG thisD.53538 => D#264ptD.0
  resx 1
;;    succ:      

;;   basic block 50, loop depth 1, count 0, freq 3519, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 3519
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_30 = nested_3 + -1;
  # DEBUG nestedD.38549 => nested_30
  pretmp_67 = _47 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 6053, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 6053
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (nested_3 == 0)
    goto <bb 17>;
  else
    goto <bb 52>;
;;    succ:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 3027, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_68 = _47 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 65, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 434, should be 65
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       21 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_119 = VDEF <.MEM_105>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       54 (EH,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 (EH,EXECUTABLE)
<L36>: [LP 1]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 510, maybe hot
;;   Invalid sum of incoming frequencies 77, should be 510
;;    prev block 54, next block 1, flags: (NEW, REACHABLE)
;;    pred:       21 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.57180 => __start_76
  # DEBUG __lastD.57179 => _79
  # DEBUG D#393ptD.0 => &__firstD.57180
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.57182 => __start_76
  # DEBUG __lastD.57181 => _79
  # .MEM_106 = VDEF <.MEM_105>
  __dnewD.57157 = iftmp.174_142;
  if (iftmp.174_142 > 15)
    goto <bb 22>;
  else
    goto <bb 25>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [71.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_start
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 128
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for MEM[(const char &)_14]
analyze_innermost: success.
	base_address: _14
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char &)_14]
Creating dr for *_70
analyze_innermost: success.
	base_address: _70
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_70
Creating dr for values_13(D)->D.37474._M_impl._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *values_13(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct __normal_iterator *)&D.57120]
analyze_innermost: success.
	base_address: &D.57120
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.57120]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for *_48
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_48
Creating dr for *_48
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_48
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(struct _Alloc_hider *)&token]._M_p
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&token]
	Access function 0: 0
Creating dr for MEM[(struct _Alloc_hider *)&token]._M_p
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&token]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)&token + 16B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 16B]
Creating dr for MEM[(size_type *)&token + 16B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 16B]
Creating dr for MEM[(const char_type &)__start_76]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char_type &)__start_76]
Creating dr for MEM[(const char_type &)__start_76]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char_type &)__start_76]
Creating dr for MEM[(char_type &)&token + 16]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&token + 16]
Creating dr for MEM[(char_type &)&token + 16]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&token + 16]
Creating dr for MEM[(size_type *)&token + 8B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 8B]
Creating dr for MEM[(size_type *)&token + 8B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 8B]
Creating dr for MEM[(char_type &)_91]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_91]
Creating dr for MEM[(char_type &)_91]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_91]
Creating dr for *_92
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_92
Creating dr for *_92
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_92
Creating dr for values_13(D)->D.37474._M_impl._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *values_13(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for values_13(D)->D.37474._M_impl._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *values_13(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct __normal_iterator *)&D.57191]
analyze_innermost: success.
	base_address: &D.57191
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.57191]
Creating dr for MEM[(struct __normal_iterator *)&D.57191]
analyze_innermost: success.
	base_address: &D.57191
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.57191]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:62, LOOPS:1, CONDITIONS:23, STMTS:408)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_40 bb_3 })
  {
    <bb 2>:
    # DEBUG this => values_13(D)
    # DEBUG D#296 => &values_13(D)->D.37474
    # DEBUG this => D#296
    # DEBUG D#295 => &D#296->_M_impl
    # DEBUG this => D#295
    # DEBUG this => D#295
    # DEBUG this => D#295
    # .MEM_53 = VDEF <.MEM_12(D)>
    MEM[(struct _Vector_impl *)values_13(D)]._M_start = 0B;
    # .MEM_54 = VDEF <.MEM_53>
    MEM[(struct _Vector_impl *)values_13(D)]._M_finish = 0B;
    # .MEM_55 = VDEF <.MEM_54>
    MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage = 0B;
    # DEBUG this => data_15(D)
    # VUSE <.MEM_55>
    _16 = MEM[(long unsigned int *)data_15(D) + 8B];
    # DEBUG D#2 => data_15(D)
    # DEBUG this => D#2
    if (_16 == 0)
      goto <bb 40>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # DEBUG this => data_15(D)
    # DEBUG __pos => 0
    # VUSE <.MEM_55>
    _14 = MEM[(char * *)data_15(D)];
    # DEBUG D#3 => data_15(D)
    # DEBUG this => D#3
    # VUSE <.MEM_55>
    _18 = MEM[(const char &)_14];
    if (_18 != 123)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_11 })
  {
    <bb 4>:
    goto <bb 11>;

  }
  bb_5 (preds = {bb_3 }, succs = {bb_6 bb_9 })
  {
    <bb 5>:
    # DEBUG this => data_15(D)
    # DEBUG D#3 => data_15(D)
    # DEBUG this => D#3
    # DEBUG __nptr => _14
    # .MEM_56 = VDEF <.MEM_55>
    _33 = strtol (_14, 0B, 10);
    _29 = (int) _33;
    # .MEM_21 = VDEF <.MEM_56>
    D.38546 = _29;
    # DEBUG this => values_13(D)
    # DEBUG __x => &D.38546
    # VUSE <.MEM_21>
    _70 = values_13(D)->D.37474._M_impl._M_finish;
    # VUSE <.MEM_21>
    _71 = values_13(D)->D.37474._M_impl._M_end_of_storage;
    if (_70 != _71)
      goto <bb 6>;
    else
      goto <bb 9>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#526 => &values_13(D)->D.37474._M_impl
    # DEBUG D#134 => D#526
    # DEBUG __p => _70
    # DEBUG __arg => &D.38546
    # DEBUG __a => D#134
    # DEBUG D#133 => D#134
    # DEBUG D#132 => D#133
    # DEBUG __p => _70
    # DEBUG __val => &D.38546
    # DEBUG this => D#132
    # DEBUG D#14 => 4
    # DEBUG __p => _70
    # DEBUG D.48025 => D#14
    if (_70 != 0B)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    # .MEM_103 = VDEF <.MEM_21>
    *_70 = _29;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_56 })
  {
    <bb 8>:
    # .MEM_35 = PHI <.MEM_21(6), .MEM_103(7)>

  }
  bb_56 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 56>:
    _73 = _70 + 4;
    # .MEM_104 = VDEF <.MEM_35>
    values_13(D)->D.37474._M_impl._M_finish = _73;
    goto <bb 10>;

  }
  bb_9 (preds = {bb_5 }, succs = {bb_10 bb_46 })
  {
    <bb 9>:
    # DEBUG this => values_13(D)
    # DEBUG D#135 => &values_13(D)->D.37474._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#135
    # .MEM_101 = VDEF <.MEM_21>
    MEM[(struct __normal_iterator *)&D.57120] = _70;
    # .MEM_102 = VDEF <.MEM_101>
    std::vector<int>::_M_insert_aux (values_13(D), D.57120, &D.38546);

  }
  bb_10 (preds = {bb_9 bb_56 }, succs = {bb_41 })
  {
    <bb 10>:
    # .MEM_96 = PHI <.MEM_102(9), .MEM_104(56)>
    # .MEM_23 = VDEF <.MEM_96>
    D.38546 ={v} {CLOBBER};
    goto <bb 41>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_47 })
  {
  <L32>:
    goto <bb 47> (<L30>);

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # curr_43 = PHI <curr_1(18)>
    # _78 = PHI <_22(18)>
    # DEBUG D#2 => data_15(D)
    # DEBUG this => D#2
    # .MEM_121 = VDEF <.MEM_57>
    std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_43, _78);

  }
  bb_20 (preds = {bb_19 }, succs = {bb_47 })
  {
  <L33>:
    goto <bb 47> (<L30>);

  }
  bb_23 (preds = {bb_22 }, succs = {bb_47 })
  {
  <L34>:
    goto <bb 47> (<L30>);

  }
  bb_38 (preds = {bb_13 }, succs = {bb_39 bb_40 })
  {
    <bb 38>:
    # nested_141 = PHI <nested_3(13)>
    if (nested_141 != 0)
      goto <bb 39>;
    else
      goto <bb 40>;

  }
  bb_39 (preds = {bb_38 }, succs = {})
  {
    <bb 39>:
    # .MEM_44 = VDEF <.MEM_57>
    __assert_fail ("!nested", "config_utils.cpp", 403, &__PRETTY_FUNCTION__);

  }
  bb_40 (preds = {bb_2 bb_38 }, succs = {bb_61 })
  {
    <bb 40>:
    # .MEM_163 = PHI <.MEM_55(2), .MEM_57(38)>

  }
  bb_61 (preds = {bb_40 }, succs = {bb_41 })
  {
    <bb 61>:

  }
  bb_41 (preds = {bb_61 bb_10 }, succs = {bb_60 })
  {
    <bb 41>:
    # .MEM_10 = PHI <.MEM_163(61), .MEM_23(10)>

  }
  bb_60 (preds = {bb_41 }, succs = {bb_1 })
  {
    <bb 60>:
    # VUSE <.MEM_10>
    return values_13(D);

  }
  bb_42 (preds = {bb_32 }, succs = {bb_43 bb_44 })
  {
  <L28>:
    # .MEM_39 = VDEF <.MEM_116>
    D.38553 ={v} {CLOBBER};
    # DEBUG this => &token
    # DEBUG this => &token
    # DEBUG this => &token
    # VUSE <.MEM_39>
    _37 = MEM[(char * *)&token];
    # DEBUG D#3 => &token
    # DEBUG this => D#3
    # DEBUG this => &token
    if (&token.D.11539._M_local_buf != _37)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#186 => token.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &token
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &token
    # DEBUG this => D#3
    # DEBUG this => &token
    # DEBUG D#183 => &token._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _37
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _37
    # DEBUG this => D#177
    # DEBUG D.53517 => D#178
    # .MEM_64 = VDEF <.MEM_39>
    operator delete (_37);

  }
  bb_44 (preds = {bb_42 bb_43 }, succs = {bb_45 })
  {
    <bb 44>:
    # .MEM_51 = PHI <.MEM_39(42), .MEM_64(43)>
    # DEBUG D#187 => &token._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    resx 5

  }
  bb_45 (preds = {bb_44 }, succs = {bb_47 })
  {
  <L35>:
    goto <bb 47> (<L30>);

  }
  bb_46 (preds = {bb_9 }, succs = {bb_47 })
  {
  <L31>:

  }
  bb_47 (preds = {bb_45 bb_23 bb_12 bb_46 bb_20 bb_54 }, succs = {bb_48 bb_49 })
  {
    # .MEM_11 = PHI <.MEM_51(45), .MEM_107(23), .MEM_57(12), .MEM_102(46), .MEM_121(20), .MEM_119(54)>
  <L30>:
    # .MEM_41 = VDEF <.MEM_11>
    token ={v} {CLOBBER};
    # .MEM_24 = VDEF <.MEM_41>
    D.38546 ={v} {CLOBBER};
    # DEBUG this => values_13(D)
    # DEBUG D#271 => &values_13(D)->D.37474
    # DEBUG this => D#271
    # DEBUG D#274 => values_13(D)->D.37474._M_impl._M_finish
    # DEBUG D#273 => values_13(D)->D.37474._M_impl._M_start
    # DEBUG __first => D#273
    # DEBUG __last => D#274
    # DEBUG D.49645 => NULL
    # DEBUG D#165 => D#273
    # DEBUG D#166 => D#274
    # DEBUG __first => D#165
    # DEBUG __last => D#166
    # DEBUG D#164 => D#166
    # DEBUG D#163 => D#165
    # DEBUG D#161 => D#163
    # DEBUG D#162 => D#164
    # DEBUG D.48287 => D#161
    # DEBUG D.48286 => D#162
    # DEBUG D#272 => &values_13(D)->D.37474
    # DEBUG this => D#272
    # DEBUG D#270 => D#272->_M_impl._M_end_of_storage
    # DEBUG D#269 => (long int) D#270
    # VUSE <.MEM_24>
    _40 = MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start;
    # DEBUG D#268 => (long int) _40
    # DEBUG D#267 => D#269 - D#268
    # DEBUG D#266 => D#267 /[ex] 4
    # DEBUG D#265 => (long unsigned int) D#266
    # DEBUG this => D#272
    # DEBUG __p => _40
    # DEBUG __n => D#265
    if (_40 != 0B)
      goto <bb 48>;
    else
      goto <bb 49>;

  }
  bb_48 (preds = {bb_47 }, succs = {bb_49 })
  {
    <bb 48>:
    # DEBUG D#263 => &D#272->_M_impl
    # DEBUG D#261 => D#263
    # DEBUG D#262 => D#265
    # DEBUG __p => _40
    # DEBUG __a => D#261
    # DEBUG __n => D#262
    # DEBUG D#260 => D#262
    # DEBUG D#259 => D#261
    # DEBUG D#257 => D#259
    # DEBUG D#258 => D#260
    # DEBUG __p => _40
    # DEBUG this => D#257
    # DEBUG D.53534 => D#258
    # .MEM_69 = VDEF <.MEM_24>
    operator delete (_40);

  }
  bb_49 (preds = {bb_47 bb_48 }, succs = {})
  {
    <bb 49>:
    # DEBUG D#264 => &D#272->_M_impl
    # DEBUG this => D#264
    # DEBUG this => D#264
    # DEBUG this => D#264
    resx 1

  }
  bb_53 (preds = {bb_21 }, succs = {bb_54 })
  {
    <bb 53>:
    # .MEM_119 = VDEF <.MEM_105>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_54 (preds = {bb_53 }, succs = {bb_47 })
  {
  <L36>:
    goto <bb 47> (<L30>);

  }
  loop_1 (header = 11, latch = 59, niter = )
  {
    bb_11 (preds = {bb_4 bb_59 }, succs = {bb_13 bb_12 })
    {
      <bb 11>:
      # curr_1 = PHI <1(4), curr_2(59)>
      # nested_3 = PHI <0(4), nested_4(59)>
      # curr_5 = PHI <1(4), prephitmp_60(59)>
      # .MEM_7 = PHI <.MEM_55(4), .MEM_9(59)>
      # DEBUG curr => curr_5
      # DEBUG nested => nested_3
      # DEBUG start => curr_1
      # DEBUG this => data_15(D)
      # DEBUG __s => "{,}"
      # DEBUG __pos => curr_5
      # DEBUG __s => "{,}"
      # .MEM_57 = VDEF <.MEM_7>
      _47 = std::__cxx11::basic_string<char>::find_first_of (data_15(D), "{,}", curr_5, 3);
      goto <bb 13>;

    }
    bb_13 (preds = {bb_11 }, succs = {bb_14 bb_38 })
    {
      <bb 13>:
      # DEBUG curr => _47
      if (_47 != 18446744073709551615)
        goto <bb 14>;
      else
        goto <bb 38>;

    }
    bb_14 (preds = {bb_13 }, succs = {bb_15 bb_16 })
    {
      <bb 14>:
      # DEBUG this => data_15(D)
      # DEBUG __pos => _47
      # VUSE <.MEM_57>
      _25 = MEM[(char * *)data_15(D)];
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      _48 = _25 + _47;
      # VUSE <.MEM_57>
      _27 = *_48;
      if (_27 == 123)
        goto <bb 15>;
      else
        goto <bb 16>;

    }
    bb_15 (preds = {bb_14 }, succs = {bb_37 })
    {
      <bb 15>:
      nested_28 = nested_3 + 1;
      # DEBUG nested => nested_28
      pretmp_66 = _47 + 1;
      goto <bb 37>;

    }
    bb_16 (preds = {bb_14 }, succs = {bb_50 bb_51 })
    {
      <bb 16>:
      # DEBUG this => data_15(D)
      # DEBUG __pos => _47
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      _162 = nested_3 != 0;
      _165 = _27 == 125;
      _146 = _162 & _165;
      if (_146 != 0)
        goto <bb 50>;
      else
        goto <bb 51>;

    }
    bb_17 (preds = {bb_51 }, succs = {bb_18 bb_36 })
    {
      <bb 17>:
      if (curr_1 < _47)
        goto <bb 18>;
      else
        goto <bb 36>;

    }
    bb_18 (preds = {bb_17 }, succs = {bb_19 bb_21 })
    {
      <bb 18>:
      _31 = _47 - curr_1;
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __n => _31
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __s => "basic_string::substr"
      # VUSE <.MEM_57>
      _22 = MEM[(long unsigned int *)data_15(D) + 8B];
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      if (curr_1 > _22)
        goto <bb 19>;
      else
        goto <bb 21>;

    }
    bb_21 (preds = {bb_18 }, succs = {bb_53 bb_55 })
    {
      <bb 21>:
      # DEBUG this => &token
      # DEBUG __str => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __n => _31
      # DEBUG this => D#42
      # DEBUG D#41 => D#42
      # DEBUG this => D#41
      # DEBUG this => &token
      # DEBUG D#401 => &token._M_dataplus
      # DEBUG this => D#401
      # DEBUG __dat => &token.D.11539._M_local_buf
      # DEBUG __a => D#147
      # DEBUG D#146 => D#147
      # DEBUG D#144 => D#401
      # DEBUG D#145 => D#146
      # DEBUG this => D#144
      # DEBUG __a => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG this => D#142
      # DEBUG D.48110 => D#143
      # .MEM_105 = VDEF <.MEM_57>
      MEM[(struct _Alloc_hider *)&token]._M_p = &token.D.11539._M_local_buf;
      # DEBUG this => NULL
      # DEBUG this => NULL
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __s => "basic_string::basic_string"
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      __start_76 = _25 + curr_1;
      # DEBUG __start => __start_76
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __off => _31
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      _77 = _22 - curr_1;
      # DEBUG __testoff => _77 > _31
      iftmp.174_142 = MIN_EXPR <_31, _77>;
      _79 = __start_76 + iftmp.174_142;
      # DEBUG this => &token
      # DEBUG __beg => __start_76
      # DEBUG __end => _79
      # DEBUG this => &token
      # DEBUG __beg => __start_76
      # DEBUG __end => _79
      # DEBUG this => &token
      # DEBUG __beg => __start_76
      # DEBUG __end => _79
      # DEBUG __ptr => __start_76
      _20 = _79 != 0B;
      _84 = __start_76 == 0B;
      _75 = _20 & _84;
      if (_75 != 0)
        goto <bb 53>;
      else
        goto <bb 55>;

    }
    bb_22 (preds = {bb_55 }, succs = {bb_24 bb_23 })
    {
      <bb 22>:
      # .MEM_107 = VDEF <.MEM_106>
      _85 = std::__cxx11::basic_string<char>::_M_create (&token, &__dnew, 0);
      goto <bb 24>;

    }
    bb_24 (preds = {bb_22 }, succs = {bb_27 })
    {
      <bb 24>:
      # DEBUG D#6 => &token
      # DEBUG __p => _85
      # DEBUG this => D#6
      # .MEM_108 = VDEF <.MEM_107>
      MEM[(char * *)&token] = _85;
      # VUSE <.MEM_108>
      __dnew.111_86 = __dnew;
      # DEBUG D#7 => &token
      # DEBUG __capacity => __dnew.111_86
      # DEBUG this => D#7
      # .MEM_109 = VDEF <.MEM_108>
      MEM[(size_type *)&token + 16B] = __dnew.111_86;
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => _85
      # DEBUG __k1 => __start_76
      # DEBUG __k2 => _79
      # DEBUG __d => _85
      # DEBUG __s => __start_76
      # DEBUG __n => iftmp.174_142
      goto <bb 27>;

    }
    bb_25 (preds = {bb_55 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => &token.D.11539._M_local_buf
      # DEBUG __k1 => __start_76
      # DEBUG __k2 => _79
      # DEBUG __d => &token.D.11539._M_local_buf
      # DEBUG __s => __start_76
      # DEBUG __n => iftmp.174_142
      if (iftmp.174_142 == 1)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_26 (preds = {bb_25 }, succs = {bb_28 })
    {
      <bb 26>:
      # VUSE <.MEM_106>
      _88 = MEM[(const char_type &)__start_76];
      # DEBUG D#13 => __start_76
      # DEBUG __c1 => &token.D.11539._M_local_buf
      # DEBUG __c2 => D#13
      # .MEM_110 = VDEF <.MEM_106>
      MEM[(char_type &)&token + 16] = _88;
      goto <bb 28>;

    }
    bb_27 (preds = {bb_25 bb_24 }, succs = {bb_28 })
    {
      <bb 27>:
      # _94 = PHI <&token.D.11539._M_local_buf(25), _85(24)>
      # .MEM_74 = PHI <.MEM_106(25), .MEM_109(24)>
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => _94
      # DEBUG __k1 => __start_76
      # DEBUG __k2 => _79
      # DEBUG __d => _94
      # DEBUG __s => __start_76
      # DEBUG __n => iftmp.174_142
      # DEBUG __s1 => _94
      # DEBUG __s2 => __start_76
      # DEBUG __n => iftmp.174_142
      # .MEM_111 = VDEF <.MEM_74>
      __builtin_memcpy (_94, __start_76, iftmp.174_142);
      # VUSE <.MEM_111>
      pretmp_61 = __dnew;
      # VUSE <.MEM_111>
      pretmp_63 = MEM[(char * *)&token];

    }
    bb_28 (preds = {bb_26 bb_27 }, succs = {bb_29 bb_32 })
    {
      <bb 28>:
      # .MEM_98 = PHI <.MEM_110(26), .MEM_111(27)>
      # prephitmp_62 = PHI <iftmp.174_142(26), pretmp_61(27)>
      # prephitmp_52 = PHI <&token.D.11539._M_local_buf(26), pretmp_63(27)>
      # DEBUG D#794 => __dnew
      # DEBUG this => &token
      # DEBUG __n => D#794
      # DEBUG D#5 => &token
      # DEBUG __length => D#794
      # DEBUG this => D#5
      # .MEM_112 = VDEF <.MEM_98>
      MEM[(size_type *)&token + 8B] = prephitmp_62;
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      _91 = prephitmp_52 + prephitmp_62;
      # DEBUG __c1 => _91
      # DEBUG __c2 => D#13
      # .MEM_113 = VDEF <.MEM_112>
      MEM[(char_type &)_91] = 0;
      # .MEM_114 = VDEF <.MEM_113>
      __dnew ={v} {CLOBBER};
      # DEBUG this => &token
      # VUSE <.MEM_114>
      _49 = MEM[(char * *)&token];
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __nptr => _49
      # .MEM_58 = VDEF <.MEM_114>
      _26 = strtol (_49, 0B, 10);
      _19 = (int) _26;
      # .MEM_34 = VDEF <.MEM_58>
      D.38553 = _19;
      # DEBUG this => values_13(D)
      # DEBUG __x => &D.38553
      # VUSE <.MEM_34>
      _92 = values_13(D)->D.37474._M_impl._M_finish;
      # VUSE <.MEM_34>
      _93 = values_13(D)->D.37474._M_impl._M_end_of_storage;
      if (_92 != _93)
        goto <bb 29>;
      else
        goto <bb 32>;

    }
    bb_29 (preds = {bb_28 }, succs = {bb_30 bb_31 })
    {
      <bb 29>:
      # DEBUG D#526 => &values_13(D)->D.37474._M_impl
      # DEBUG D#134 => D#526
      # DEBUG __p => _92
      # DEBUG __arg => &D.38553
      # DEBUG __a => D#134
      # DEBUG D#133 => D#134
      # DEBUG D#132 => D#133
      # DEBUG __p => _92
      # DEBUG __val => &D.38553
      # DEBUG this => D#132
      # DEBUG D#14 => 4
      # DEBUG __p => _92
      # DEBUG D.48025 => D#14
      if (_92 != 0B)
        goto <bb 30>;
      else
        goto <bb 31>;

    }
    bb_30 (preds = {bb_29 }, succs = {bb_31 })
    {
      <bb 30>:
      # .MEM_117 = VDEF <.MEM_34>
      *_92 = _19;

    }
    bb_31 (preds = {bb_29 bb_30 }, succs = {bb_57 })
    {
      <bb 31>:
      # .MEM_99 = PHI <.MEM_34(29), .MEM_117(30)>

    }
    bb_57 (preds = {bb_31 }, succs = {bb_33 })
    {
      <bb 57>:
      _95 = _92 + 4;
      # .MEM_118 = VDEF <.MEM_99>
      values_13(D)->D.37474._M_impl._M_finish = _95;
      goto <bb 33>;

    }
    bb_32 (preds = {bb_28 }, succs = {bb_33 bb_42 })
    {
      <bb 32>:
      # DEBUG this => values_13(D)
      # DEBUG D#135 => &values_13(D)->D.37474._M_impl._M_finish
      # DEBUG this => NULL
      # DEBUG __i => D#135
      # .MEM_115 = VDEF <.MEM_34>
      MEM[(struct __normal_iterator *)&D.57191] = _92;
      # .MEM_116 = VDEF <.MEM_115>
      std::vector<int>::_M_insert_aux (values_13(D), D.57191, &D.38553);

    }
    bb_33 (preds = {bb_32 bb_57 }, succs = {bb_34 bb_35 })
    {
      <bb 33>:
      # .MEM_100 = PHI <.MEM_116(32), .MEM_118(57)>
      # .MEM_36 = VDEF <.MEM_100>
      D.38553 ={v} {CLOBBER};
      # DEBUG this => &token
      # DEBUG this => &token
      # DEBUG this => &token
      # VUSE <.MEM_36>
      _50 = MEM[(char * *)&token];
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG this => &token
      if (&token.D.11539._M_local_buf != _50)
        goto <bb 34>;
      else
        goto <bb 35>;

    }
    bb_34 (preds = {bb_33 }, succs = {bb_35 })
    {
      <bb 34>:
      # DEBUG D#186 => token.D.11539._M_allocated_capacity
      # DEBUG D#185 => D#186
      # DEBUG this => &token
      # DEBUG __size => D#185
      # DEBUG D#184 => D#185
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG this => &token
      # DEBUG D#183 => &token._M_dataplus
      # DEBUG D#181 => D#183
      # DEBUG D#182 => D#184 + 1
      # DEBUG __p => _50
      # DEBUG __a => D#181
      # DEBUG __n => D#182
      # DEBUG D#180 => D#182
      # DEBUG D#179 => D#181
      # DEBUG D#177 => D#179
      # DEBUG D#178 => D#180
      # DEBUG __p => _50
      # DEBUG this => D#177
      # DEBUG D.53502 => D#178
      # .MEM_59 = VDEF <.MEM_36>
      operator delete (_50);

    }
    bb_35 (preds = {bb_33 bb_34 }, succs = {bb_36 })
    {
      <bb 35>:
      # .MEM_45 = PHI <.MEM_36(33), .MEM_59(34)>
      # DEBUG D#187 => &token._M_dataplus
      # DEBUG this => D#187
      # DEBUG this => D#187
      # DEBUG this => D#187
      # .MEM_38 = VDEF <.MEM_45>
      token ={v} {CLOBBER};

    }
    bb_36 (preds = {bb_17 bb_35 }, succs = {bb_58 })
    {
      <bb 36>:
      # .MEM_8 = PHI <.MEM_57(17), .MEM_38(35)>

    }
    bb_58 (preds = {bb_36 }, succs = {bb_37 })
    {
      <bb 58>:
      curr_42 = _47 + 1;
      # DEBUG start => curr_42

    }
    bb_37 (preds = {bb_15 bb_50 bb_52 bb_58 }, succs = {bb_59 })
    {
      <bb 37>:
      # curr_2 = PHI <curr_1(15), curr_1(50), curr_1(52), curr_42(58)>
      # nested_4 = PHI <nested_28(15), nested_30(50), nested_3(52), 0(58)>
      # .MEM_9 = PHI <.MEM_57(15), .MEM_57(50), .MEM_57(52), .MEM_8(58)>
      # prephitmp_60 = PHI <pretmp_66(15), pretmp_67(50), pretmp_68(52), curr_42(58)>

    }
    bb_59 (preds = {bb_37 }, succs = {bb_11 })
    {
      <bb 59>:
      # DEBUG nested => nested_4
      # DEBUG start => curr_2
      # DEBUG curr => _47 + 1
      goto <bb 11>;

    }
    bb_50 (preds = {bb_16 }, succs = {bb_37 })
    {
      <bb 50>:
      nested_30 = nested_3 + -1;
      # DEBUG nested => nested_30
      pretmp_67 = _47 + 1;
      goto <bb 37>;

    }
    bb_51 (preds = {bb_16 }, succs = {bb_17 bb_52 })
    {
      <bb 51>:
      if (nested_3 == 0)
        goto <bb 17>;
      else
        goto <bb 52>;

    }
    bb_52 (preds = {bb_51 }, succs = {bb_37 })
    {
      <bb 52>:
      pretmp_68 = _47 + 1;
      goto <bb 37>;

    }
    bb_55 (preds = {bb_21 }, succs = {bb_22 bb_25 })
    {
      <bb 55>:
      # DEBUG __first => __start_76
      # DEBUG __last => _79
      # DEBUG D#393 => &__first
      # DEBUG D.51158 => D#393
      # DEBUG __first => __start_76
      # DEBUG __last => _79
      # .MEM_106 = VDEF <.MEM_105>
      __dnew = iftmp.174_142;
      if (iftmp.174_142 > 15)
        goto <bb 22>;
      else
        goto <bb 25>;

    }
  }
}

Pass statistics:
----------------

std::vector<int> tokenize_int(const string&) (const struct stringD.2845 & dataD.38541)
Eh tree:
   1 cleanup land:{10,<L35>},{9,<L34>},{8,<L33>},{7,<L32>},{6,<L31>},{1,<L36>}
     5 cleanup land:{4,<L28>}
{
  struct __normal_iteratorD.37043 D.57191;
  size_typeD.11502 __dnewD.57157;
  const charD.10 * __startD.57138;
  struct __normal_iteratorD.37043 D.57120;
  struct stringD.2845 tokenD.38551;
  static const charD.10 _ZZ12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38554[45] = "std::vector<int> tokenize_int(const string&)";
  size_tD.5382 currD.38550;
  intD.9 nestedD.38549;
  const value_typeD.37037 D.38553;
  const value_typeD.37037 D.38546;
  charD.10 * const _14;
  const size_typeD.11502 _16;
  charD.10 _18;
  intD.9 _19;
  boolD.2757 _20;
  const size_typeD.11502 _22;
  charD.10 * const _25;
  long intD.12 _26;
  charD.10 _27;
  intD.9 _29;
  long unsigned intD.14 _31;
  long intD.12 _33;
  charD.10 * const _37;
  intD.9 * _40;
  size_typeD.11502 _47;
  const charD.10 & _48;
  charD.10 * const _49;
  charD.10 * const _50;
  charD.10 * const prephitmp_52;
  size_tD.5382 prephitmp_60;
  size_typeD.11502 pretmp_61;
  size_typeD.11502 prephitmp_62;
  charD.10 * const pretmp_63;
  size_tD.5382 pretmp_66;
  size_tD.5382 pretmp_67;
  size_tD.5382 pretmp_68;
  intD.9 * _70;
  intD.9 * _71;
  intD.9 * _73;
  boolD.2757 _75;
  long unsigned intD.14 _77;
  const size_typeD.11502 _78;
  const charD.10 * _79;
  boolD.2757 _84;
  charD.10 * _85;
  long unsigned intD.14 __dnew.111_86;
  const char_typeD.6439 _88;
  charD.10 * _91;
  intD.9 * _92;
  intD.9 * _93;
  charD.10 * const _94;
  intD.9 * _95;
  size_typeD.11502 iftmp.174_142;
  boolD.2757 _146;
  boolD.2757 _162;
  boolD.2757 _165;

;;   basic block 2, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.53473 => values_13(D)
  # DEBUG D#296ptD.0 => &values_13(D)->D.37474
  # DEBUG thisD.53474 => D#296ptD.0
  # DEBUG D#295ptD.0 => &D#296ptD.0->_M_implD.36965
  # DEBUG thisD.53475 => D#295ptD.0
  # DEBUG thisD.49735 => D#295ptD.0
  # DEBUG thisD.49733 => D#295ptD.0
  # .MEM_53 = VDEF <.MEM_12(D)>
  MEM[(struct _Vector_implD.36942 *)values_13(D)]._M_startD.36967 = 0B;
  # .MEM_54 = VDEF <.MEM_53>
  MEM[(struct _Vector_implD.36942 *)values_13(D)]._M_finishD.36968 = 0B;
  # .MEM_55 = VDEF <.MEM_54>
  MEM[(struct _Vector_implD.36942 *)values_13(D)]._M_end_of_storageD.36969 = 0B;
  # DEBUG thisD.53471 => data_15(D)
  # VUSE <.MEM_55>
  _16 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46865 => D#2ptD.0
  if (_16 == 0)
    goto <bb 40>;
  else
    goto <bb 3>;
;;    succ:       40 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 463, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53476 => data_15(D)
  # DEBUG __posD.53477 => 0
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_55>
  _18 = MEM[(const charD.10 &)_14];
  if (_18 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [51.2%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [48.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [48.8%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [51.2%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53479 => data_15(D)
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __nptrD.53467 => _14
  # .MEM_56 = VDEF <.MEM_55>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _33 = strtolD.13341 (_14, 0B, 10);
  _29 = (intD.9) _33;
  # .MEM_21 = VDEF <.MEM_56>
  D.38546 = _29;
  # DEBUG thisD.57112 => values_13(D)
  # DEBUG __xD.57113 => &D.38546
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  _70 = values_13(D)->D.37474._M_implD.36965._M_finishD.36968;
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  _71 = values_13(D)->D.37474._M_implD.36965._M_end_of_storageD.36969;
  if (_70 != _71)
    goto <bb 6>;
  else
    goto <bb 9>;
;;    succ:       6 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#526ptD.0 => &values_13(D)->D.37474._M_implD.36965
  # DEBUG D#134ptD.0 => D#526ptD.0
  # DEBUG __pD.57116 => _70
  # DEBUG __argD.57115 => &D.38546
  # DEBUG __aD.57114 => D#134ptD.0
  # DEBUG D#133ptD.0 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#133ptD.0
  # DEBUG __pD.57119 => _70
  # DEBUG __valD.57118 => &D.38546
  # DEBUG thisD.57117 => D#132ptD.0
  # DEBUG D#14ptD.0 => 4
  # DEBUG __pD.48024 => _70
  # DEBUG D.48025 => D#14ptD.0
  if (_70 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_103 = VDEF <.MEM_21>
  *_70 = _29;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 7, next block 56, flags: (NEW, REACHABLE)
;;    pred:       6 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_21(6), .MEM_103(7)>
;;    succ:       56 [100.0%]  (FALLTHRU)

;;   basic block 56, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  # PT = nonlocal escaped 
  _73 = _70 + 4;
  # .MEM_104 = VDEF <.MEM_35>
  values_13(D)->D.37474._M_implD.36965._M_finishD.36968 = _73;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 56, next block 10, flags: (NEW, REACHABLE)
;;    pred:       5 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53461 => values_13(D)
  # DEBUG D#135ptD.0 => &values_13(D)->D.37474._M_implD.36965._M_finishD.36968
  # DEBUG thisD.53463 => NULL
  # DEBUG __iD.53462 => D#135ptD.0
  # .MEM_101 = VDEF <.MEM_21>
  MEM[(struct __normal_iteratorD.37043 *)&D.57120] = _70;
  [LP 6] # .MEM_102 = VDEF <.MEM_101>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKiD.37402 (values_13(D), D.57120, &D.38546);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 (EH,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_96 = PHI <.MEM_102(9), .MEM_104(56)>
  # .MEM_23 = VDEF <.MEM_96>
  D.38546 ={v} {CLOBBER};
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_1 = PHI <1(4), curr_2(59)>
  # nested_3 = PHI <0(4), nested_4(59)>
  # RANGE [1, 18446744073709551615]
  # curr_5 = PHI <1(4), prephitmp_60(59)>
  # .MEM_7 = PHI <.MEM_55(4), .MEM_9(59)>
  # DEBUG currD.38550 => curr_5
  # DEBUG nestedD.38549 => nested_3
  # DEBUG startD.38548 => curr_1
  # DEBUG thisD.53481 => data_15(D)
  # DEBUG __sD.53482 => "{,}"
  # DEBUG __posD.53483 => curr_5
  # DEBUG __sD.53484 => "{,}"
  [LP 7] # .MEM_57 = VDEF <.MEM_7>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _47 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmmD.12156 (data_15(D), "{,}", curr_5, 3);
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 (EH,EXECUTABLE)
<L32>: [LP 7]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG currD.38550 => _47
  if (_47 != 18446744073709551615)
    goto <bb 14>;
  else
    goto <bb 38>;
;;    succ:       14 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9775, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53486 => data_15(D)
  # DEBUG __posD.53487 => _47
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _25 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # PT = nonlocal escaped 
  _48 = _25 + _47;
  # VUSE <.MEM_57>
  _27 = *_48;
  if (_27 == 123)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 2737, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_28 = nested_3 + 1;
  # DEBUG nestedD.38549 => nested_28
  pretmp_66 = _47 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 1971, maybe hot
;;   Invalid sum of incoming frequencies 7038, should be 1971
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53489 => data_15(D)
  # DEBUG __posD.53490 => _47
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # RANGE [0, 1]
  _162 = nested_3 != 0;
  # RANGE [0, 1]
  _165 = _27 == 125;
  # RANGE [0, 1]
  _146 = _162 & _165;
  if (_146 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 1759, maybe hot
;;   Invalid sum of incoming frequencies 3027, should be 1759
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       51 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  if (curr_1 < _47)
    goto <bb 18>;
  else
    goto <bb 36>;
;;    succ:       18 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _31 = _47 - curr_1;
  # DEBUG thisD.57121 => data_15(D)
  # DEBUG __posD.57122 => curr_1
  # DEBUG __nD.57123 => _31
  # DEBUG thisD.57126 => data_15(D)
  # DEBUG __posD.57125 => curr_1
  # DEBUG __sD.57124 => "basic_string::substr"
  # VUSE <.MEM_57>
  _22 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  if (curr_1 > _22)
    goto <bb 19>;
  else
    goto <bb 21>;
;;    succ:       19 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_43 = PHI <curr_1(18)>
  # _78 = PHI <_22(18)>
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46997 => D#2ptD.0
  [LP 8] # .MEM_121 = VDEF <.MEM_57>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZSt24__throw_out_of_range_fmtPKczD.2864 ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_43, _78);
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L33>: [LP 8]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.57127 => &tokenD.38551
  # DEBUG __strD.57128 => data_15(D)
  # DEBUG __posD.57129 => curr_1
  # DEBUG __nD.57130 => _31
  # DEBUG thisD.57132 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.57133 => &tokenD.38551
  # DEBUG D#401ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG thisD.57136 => D#401ptD.0
  # DEBUG __datD.57135 => &tokenD.38551.D.11539._M_local_bufD.11541
  # DEBUG __aD.57134 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#401ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_105 = VDEF <.MEM_57>
  MEM[(struct _Alloc_hiderD.11518 *)&tokenD.38551]._M_pD.11525 = &tokenD.38551.D.11539._M_local_bufD.11541;
  # DEBUG thisD.57137 => NULL
  # DEBUG thisD.51465 => NULL
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.51462 => D#3ptD.0
  # DEBUG thisD.57153 => data_15(D)
  # DEBUG __posD.57152 => curr_1
  # DEBUG __sD.57151 => "basic_string::basic_string"
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  # PT = nonlocal escaped 
  __start_76 = _25 + curr_1;
  # DEBUG __startD.57138 => __start_76
  # DEBUG thisD.57141 => data_15(D)
  # DEBUG __posD.57140 => curr_1
  # DEBUG __offD.57139 => _31
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46904 => D#2ptD.0
  # RANGE [0, 18446744073709551615]
  _77 = _22 - curr_1;
  # DEBUG __testoffD.57142 => _77 > _31
  # RANGE [0, 18446744073709551615]
  iftmp.174_142 = MIN_EXPR <_31, _77>;
  # PT = nonlocal escaped 
  _79 = __start_76 + iftmp.174_142;
  # DEBUG thisD.57145 => &tokenD.38551
  # DEBUG __begD.57144 => __start_76
  # DEBUG __endD.57143 => _79
  # DEBUG thisD.57149 => &tokenD.38551
  # DEBUG __begD.57148 => __start_76
  # DEBUG __endD.57147 => _79
  # DEBUG thisD.57154 => &tokenD.38551
  # DEBUG __begD.57155 => __start_76
  # DEBUG __endD.57156 => _79
  # DEBUG __ptrD.51229 => __start_76
  # RANGE [0, 1]
  _20 = _79 != 0B;
  # RANGE [0, 1]
  _84 = __start_76 == 0B;
  # RANGE [0, 1]
  _75 = _20 & _84;
  if (_75 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;
;;    succ:       53 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       55 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 9] # .MEM_107 = VDEF <.MEM_106>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _85 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&tokenD.38551, &__dnewD.57157, 0);
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 (EH,EXECUTABLE)
<L34>: [LP 9]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &tokenD.38551
  # DEBUG __pD.57176 => _85
  # DEBUG thisD.57175 => D#6ptD.0
  # .MEM_108 = VDEF <.MEM_107>
  MEM[(charD.10 * *)&tokenD.38551] = _85;
  # VUSE <.MEM_108>
  __dnew.111_86 = __dnewD.57157;
  # DEBUG D#7ptD.0 => &tokenD.38551
  # DEBUG __capacityD.57178 => __dnew.111_86
  # DEBUG thisD.57177 => D#7ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  MEM[(size_typeD.11502 *)&tokenD.38551 + 16B] = __dnew.111_86;
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57160 => _85
  # DEBUG __k1D.57159 => __start_76
  # DEBUG __k2D.57158 => _79
  # DEBUG __dD.57163 => _85
  # DEBUG __sD.57162 => __start_76
  # DEBUG __nD.57161 => iftmp.174_142
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 362, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       55 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57160 => &tokenD.38551.D.11539._M_local_bufD.11541
  # DEBUG __k1D.57159 => __start_76
  # DEBUG __k2D.57158 => _79
  # DEBUG __dD.57163 => &tokenD.38551.D.11539._M_local_bufD.11541
  # DEBUG __sD.57162 => __start_76
  # DEBUG __nD.57161 => iftmp.174_142
  if (iftmp.174_142 == 1)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 193, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_106>
  _88 = MEM[(const char_typeD.6439 &)__start_76];
  # DEBUG D#13ptD.0 => __start_76
  # DEBUG __c1D.57168 => &tokenD.38551.D.11539._M_local_bufD.11541
  # DEBUG __c2D.57167 => D#13ptD.0
  # .MEM_110 = VDEF <.MEM_106>
  MEM[(char_typeD.6439 &)&tokenD.38551 + 16] = _88;
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 317, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38551 } (escaped)
  # _94 = PHI <&tokenD.38551.D.11539._M_local_bufD.11541(25), _85(24)>
  # .MEM_74 = PHI <.MEM_106(25), .MEM_109(24)>
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57160 => _94
  # DEBUG __k1D.57159 => __start_76
  # DEBUG __k2D.57158 => _79
  # DEBUG __dD.57163 => _94
  # DEBUG __sD.57162 => __start_76
  # DEBUG __nD.57161 => iftmp.174_142
  # DEBUG __s1D.57166 => _94
  # DEBUG __s2D.57165 => __start_76
  # DEBUG __nD.57164 => iftmp.174_142
  # .MEM_111 = VDEF <.MEM_74>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  memcpyD.992 (_94, __start_76, iftmp.174_142);
  # VUSE <.MEM_111>
  pretmp_61 = __dnewD.57157;
  # VUSE <.MEM_111>
  pretmp_63 = MEM[(charD.10 * *)&tokenD.38551];
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_110(26), .MEM_111(27)>
  # prephitmp_62 = PHI <iftmp.174_142(26), pretmp_61(27)>
  # PT = nonlocal escaped null { D.38551 } (escaped)
  # prephitmp_52 = PHI <&tokenD.38551.D.11539._M_local_bufD.11541(26), pretmp_63(27)>
  # DEBUG D#794ptD.0 => __dnewD.57157
  # DEBUG thisD.57170 => &tokenD.38551
  # DEBUG __nD.57169 => D#794ptD.0
  # DEBUG D#5ptD.0 => &tokenD.38551
  # DEBUG __lengthD.57172 => D#794ptD.0
  # DEBUG thisD.57171 => D#5ptD.0
  # .MEM_112 = VDEF <.MEM_98>
  MEM[(size_typeD.11502 *)&tokenD.38551 + 8B] = prephitmp_62;
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38551 } (escaped)
  _91 = prephitmp_52 + prephitmp_62;
  # DEBUG __c1D.57174 => _91
  # DEBUG __c2D.57173 => D#13ptD.0
  # .MEM_113 = VDEF <.MEM_112>
  MEM[(char_typeD.6439 &)_91] = 0;
  # .MEM_114 = VDEF <.MEM_113>
  __dnewD.57157 ={v} {CLOBBER};
  # DEBUG thisD.53492 => &tokenD.38551
  # VUSE <.MEM_114>
  # PT = nonlocal escaped null { D.38551 } (escaped)
  _49 = MEM[(charD.10 * *)&tokenD.38551];
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __nptrD.53469 => _49
  # .MEM_58 = VDEF <.MEM_114>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _26 = strtolD.13341 (_49, 0B, 10);
  _19 = (intD.9) _26;
  # .MEM_34 = VDEF <.MEM_58>
  D.38553 = _19;
  # DEBUG thisD.57183 => values_13(D)
  # DEBUG __xD.57184 => &D.38553
  # VUSE <.MEM_34>
  # PT = nonlocal escaped 
  _92 = values_13(D)->D.37474._M_implD.36965._M_finishD.36968;
  # VUSE <.MEM_34>
  # PT = nonlocal escaped 
  _93 = values_13(D)->D.37474._M_implD.36965._M_end_of_storageD.36969;
  if (_92 != _93)
    goto <bb 29>;
  else
    goto <bb 32>;
;;    succ:       29 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#526ptD.0 => &values_13(D)->D.37474._M_implD.36965
  # DEBUG D#134ptD.0 => D#526ptD.0
  # DEBUG __pD.57187 => _92
  # DEBUG __argD.57186 => &D.38553
  # DEBUG __aD.57185 => D#134ptD.0
  # DEBUG D#133ptD.0 => D#134ptD.0
  # DEBUG D#132ptD.0 => D#133ptD.0
  # DEBUG __pD.57190 => _92
  # DEBUG __valD.57189 => &D.38553
  # DEBUG thisD.57188 => D#132ptD.0
  # DEBUG D#14ptD.0 => 4
  # DEBUG __pD.48024 => _92
  # DEBUG D.48025 => D#14ptD.0
  if (_92 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 427, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_117 = VDEF <.MEM_34>
  *_92 = _19;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 30, next block 57, flags: (NEW, REACHABLE)
;;    pred:       29 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_34(29), .MEM_117(30)>
;;    succ:       57 [100.0%]  (FALLTHRU)

;;   basic block 57, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 31, next block 32, flags: (NEW)
;;    pred:       31 [100.0%]  (FALLTHRU)
  # PT = nonlocal escaped 
  _95 = _92 + 4;
  # .MEM_118 = VDEF <.MEM_99>
  values_13(D)->D.37474._M_implD.36965._M_finishD.36968 = _95;
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 34, maybe hot
;;    prev block 57, next block 33, flags: (NEW, REACHABLE)
;;    pred:       28 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53461 => values_13(D)
  # DEBUG D#135ptD.0 => &values_13(D)->D.37474._M_implD.36965._M_finishD.36968
  # DEBUG thisD.53463 => NULL
  # DEBUG __iD.53462 => D#135ptD.0
  # .MEM_115 = VDEF <.MEM_34>
  MEM[(struct __normal_iteratorD.37043 *)&D.57191] = _92;
  [LP 4] # .MEM_116 = VDEF <.MEM_115>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKiD.37402 (values_13(D), D.57191, &D.38553);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 (EH,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_116(32), .MEM_118(57)>
  # .MEM_36 = VDEF <.MEM_100>
  D.38553 ={v} {CLOBBER};
  # DEBUG thisD.53494 => &tokenD.38551
  # DEBUG thisD.53495 => &tokenD.38551
  # DEBUG thisD.53504 => &tokenD.38551
  # VUSE <.MEM_36>
  # PT = nonlocal escaped null { D.38551 } (escaped)
  _50 = MEM[(charD.10 * *)&tokenD.38551];
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.53505 => &tokenD.38551
  if (&tokenD.38551.D.11539._M_local_bufD.11541 != _50)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 356, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38551.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.53497 => &tokenD.38551
  # DEBUG __sizeD.53496 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38551
  # DEBUG D#183ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.53500 => _50
  # DEBUG __aD.53498 => D#181ptD.0
  # DEBUG __nD.53499 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.53503 => _50
  # DEBUG thisD.53501 => D#177ptD.0
  # DEBUG D.53502 => D#178ptD.0
  # .MEM_59 = VDEF <.MEM_36>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZdlPvD.2766 (_50);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_45 = PHI <.MEM_36(33), .MEM_59(34)>
  # DEBUG D#187ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG thisD.53506 => D#187ptD.0
  # DEBUG thisD.53507 => D#187ptD.0
  # DEBUG thisD.53508 => D#187ptD.0
  # .MEM_38 = VDEF <.MEM_45>
  tokenD.38551 ={v} {CLOBBER};
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 35, next block 58, flags: (NEW, REACHABLE)
;;    pred:       17 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_57(17), .MEM_38(35)>
;;    succ:       58 [100.0%]  (FALLTHRU)

;;   basic block 58, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # RANGE [1, 18446744073709551615]
  curr_42 = _47 + 1;
  # DEBUG startD.38548 => curr_42
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 9774, maybe hot
;;   Invalid sum of incoming frequencies 11042, should be 9774
;;    prev block 58, next block 59, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_2 = PHI <curr_1(15), curr_1(50), curr_1(52), curr_42(58)>
  # nested_4 = PHI <nested_28(15), nested_30(50), nested_3(52), 0(58)>
  # .MEM_9 = PHI <.MEM_57(15), .MEM_57(50), .MEM_57(52), .MEM_8(58)>
  # RANGE [1, 18446744073709551615]
  # prephitmp_60 = PHI <pretmp_66(15), pretmp_67(50), pretmp_68(52), curr_42(58)>
;;    succ:       59 [100.0%]  (FALLTHRU)

;;   basic block 59, loop depth 1, count 0, freq 9774, maybe hot
;;    prev block 37, next block 38, flags: (NEW)
;;    pred:       37 [100.0%]  (FALLTHRU)
  # DEBUG nestedD.38549 => nested_4
  # DEBUG startD.38548 => curr_2
  # DEBUG currD.38550 => _47 + 1
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 59, next block 39, flags: (NEW, REACHABLE)
;;    pred:       13 [2.2%]  (FALSE_VALUE,EXECUTABLE)
  # nested_141 = PHI <nested_3(13)>
  if (nested_141 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_44 = VDEF <.MEM_57>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  __assert_failD.14402 ("!nested", "config_utils.cpp", 403, &_ZZ12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38554);
;;    succ:      

;;   basic block 40, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 39, next block 61, flags: (NEW)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_163 = PHI <.MEM_55(2), .MEM_57(38)>
;;    succ:       61 [100.0%]  (FALLTHRU)

;;   basic block 61, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 40, next block 41, flags: (NEW)
;;    pred:       40 [100.0%]  (FALLTHRU)
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 61, next block 60, flags: (NEW, REACHABLE)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_10 = PHI <.MEM_163(61), .MEM_23(10)>
;;    succ:       60 [100.0%]  (FALLTHRU)

;;   basic block 60, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 41, next block 42, flags: (NEW)
;;    pred:       41 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_10>
  return values_13(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 60, next block 43, flags: (NEW, REACHABLE)
;;    pred:       32 (EH,EXECUTABLE)
<L28>: [LP 4]
  # .MEM_39 = VDEF <.MEM_116>
  D.38553 ={v} {CLOBBER};
  # DEBUG thisD.53509 => &tokenD.38551
  # DEBUG thisD.53510 => &tokenD.38551
  # DEBUG thisD.53519 => &tokenD.38551
  # VUSE <.MEM_39>
  # PT = nonlocal escaped null { D.38551 } (escaped)
  _37 = MEM[(charD.10 * *)&tokenD.38551];
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.53520 => &tokenD.38551
  if (&tokenD.38551.D.11539._M_local_bufD.11541 != _37)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38551.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.53512 => &tokenD.38551
  # DEBUG __sizeD.53511 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38551
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38551
  # DEBUG D#183ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.53515 => _37
  # DEBUG __aD.53513 => D#181ptD.0
  # DEBUG __nD.53514 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.53518 => _37
  # DEBUG thisD.53516 => D#177ptD.0
  # DEBUG D.53517 => D#178ptD.0
  # .MEM_64 = VDEF <.MEM_39>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZdlPvD.2766 (_37);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_51 = PHI <.MEM_39(42), .MEM_64(43)>
  # DEBUG D#187ptD.0 => &tokenD.38551._M_dataplusD.11519
  # DEBUG thisD.53521 => D#187ptD.0
  # DEBUG thisD.53522 => D#187ptD.0
  # DEBUG thisD.53523 => D#187ptD.0
  [LP 10] resx 5
;;    succ:       45 (EH,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 (EH,EXECUTABLE)
<L35>: [LP 10]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       9 (EH,EXECUTABLE)
<L31>: [LP 6]
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_51(45), .MEM_107(23), .MEM_57(12), .MEM_102(46), .MEM_121(20), .MEM_119(54)>
<L30>:
  # .MEM_41 = VDEF <.MEM_11>
  tokenD.38551 ={v} {CLOBBER};
  # .MEM_24 = VDEF <.MEM_41>
  D.38546 ={v} {CLOBBER};
  # DEBUG thisD.53524 => values_13(D)
  # DEBUG D#271ptD.0 => &values_13(D)->D.37474
  # DEBUG thisD.49646 => D#271ptD.0
  # DEBUG D#274ptD.0 => values_13(D)->D.37474._M_implD.36965._M_finishD.36968
  # DEBUG D#273ptD.0 => values_13(D)->D.37474._M_implD.36965._M_startD.36967
  # DEBUG __firstD.49643 => D#273ptD.0
  # DEBUG __lastD.49644 => D#274ptD.0
  # DEBUG D.49645 => NULL
  # DEBUG D#165ptD.0 => D#273ptD.0
  # DEBUG D#166ptD.0 => D#274ptD.0
  # DEBUG __firstD.48298 => D#165ptD.0
  # DEBUG __lastD.48297 => D#166ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0
  # DEBUG D#161ptD.0 => D#163ptD.0
  # DEBUG D#162ptD.0 => D#164ptD.0
  # DEBUG D.48287 => D#161ptD.0
  # DEBUG D.48286 => D#162ptD.0
  # DEBUG D#272ptD.0 => &values_13(D)->D.37474
  # DEBUG thisD.53525 => D#272ptD.0
  # DEBUG D#270ptD.0 => D#272ptD.0->_M_implD.36965._M_end_of_storageD.36969
  # DEBUG D#269ptD.0 => (long intD.12) D#270ptD.0
  # VUSE <.MEM_24>
  # PT = nonlocal escaped 
  _40 = MEM[(struct _Vector_baseD.36732 *)values_13(D)]._M_implD.36965._M_startD.36967;
  # DEBUG D#268ptD.0 => (long intD.12) _40
  # DEBUG D#267ptD.0 => D#269ptD.0 - D#268ptD.0
  # DEBUG D#266ptD.0 => D#267ptD.0 /[ex] 4
  # DEBUG D#265ptD.0 => (long unsigned intD.14) D#266ptD.0
  # DEBUG thisD.53528 => D#272ptD.0
  # DEBUG __pD.53527 => _40
  # DEBUG __nD.53526 => D#265ptD.0
  if (_40 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#263ptD.0 => &D#272ptD.0->_M_implD.36965
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#265ptD.0
  # DEBUG __pD.53532 => _40
  # DEBUG __aD.53530 => D#261ptD.0
  # DEBUG __nD.53531 => D#262ptD.0
  # DEBUG D#260ptD.0 => D#262ptD.0
  # DEBUG D#259ptD.0 => D#261ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0
  # DEBUG D#258ptD.0 => D#260ptD.0
  # DEBUG __pD.53535 => _40
  # DEBUG thisD.53533 => D#257ptD.0
  # DEBUG D.53534 => D#258ptD.0
  # .MEM_69 = VDEF <.MEM_24>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       47 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#264ptD.0 => &D#272ptD.0->_M_implD.36965
  # DEBUG thisD.53536 => D#264ptD.0
  # DEBUG thisD.53537 => D#264ptD.0
  # DEBUG thisD.53538 => D#264ptD.0
  resx 1
;;    succ:      

;;   basic block 50, loop depth 1, count 0, freq 3519, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 3519
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_30 = nested_3 + -1;
  # DEBUG nestedD.38549 => nested_30
  pretmp_67 = _47 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 6053, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 6053
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (nested_3 == 0)
    goto <bb 17>;
  else
    goto <bb 52>;
;;    succ:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 3027, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_68 = _47 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 65, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 434, should be 65
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       21 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_119 = VDEF <.MEM_105>
  # USE = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38546 D.38551 D.38553 D.38554 D.57157 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       54 (EH,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 (EH,EXECUTABLE)
<L36>: [LP 1]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 510, maybe hot
;;   Invalid sum of incoming frequencies 77, should be 510
;;    prev block 54, next block 1, flags: (NEW, REACHABLE)
;;    pred:       21 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.57180 => __start_76
  # DEBUG __lastD.57179 => _79
  # DEBUG D#393ptD.0 => &__firstD.57180
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.57182 => __start_76
  # DEBUG __lastD.57181 => _79
  # .MEM_106 = VDEF <.MEM_105>
  __dnewD.57157 = iftmp.174_142;
  if (iftmp.174_142 > 15)
    goto <bb 22>;
  else
    goto <bb 25>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [71.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function std::vector<double> tokenize_float(const string&) (_Z14tokenize_floatRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1754, decl_uid=35341, cgraph_uid=440, symbol_order=442)


Pass statistics:
----------------

std::vector<double> tokenize_float(const string&) (const struct stringD.2845 & dataD.38558)
Eh tree:
   1 cleanup land:{10,<L35>},{9,<L34>},{8,<L33>},{7,<L32>},{6,<L31>},{1,<L36>}
     5 cleanup land:{4,<L28>}
{
  struct __normal_iteratorD.37794 D.57360;
  size_typeD.11502 __dnewD.57326;
  const charD.10 * __startD.57307;
  struct __normal_iteratorD.37794 D.57289;
  struct stringD.2845 tokenD.38568;
  static const charD.10 _ZZ14tokenize_floatRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38571[50] = "std::vector<double> tokenize_float(const string&)";
  size_tD.5382 currD.38567;
  intD.9 nestedD.38566;
  const value_typeD.37788 D.38570;
  const value_typeD.37788 D.38563;
  charD.10 * const _14;
  charD.10 _18;
  boolD.2757 _19;
  const size_typeD.11502 _21;
  charD.10 * const _24;
  const size_typeD.11502 _25;
  charD.10 _26;
  doubleD.39 _28;
  long unsigned intD.14 _30;
  doubleD.39 _32;
  charD.10 * const _36;
  doubleD.39 * _39;
  size_typeD.11502 _45;
  const charD.10 & _46;
  charD.10 * const _47;
  charD.10 * const _48;
  charD.10 * const prephitmp_50;
  size_tD.5382 prephitmp_58;
  size_typeD.11502 pretmp_59;
  size_typeD.11502 prephitmp_60;
  charD.10 * const pretmp_61;
  size_tD.5382 pretmp_64;
  size_tD.5382 pretmp_65;
  size_tD.5382 pretmp_66;
  doubleD.39 * _68;
  doubleD.39 * _69;
  doubleD.39 * _71;
  boolD.2757 _73;
  long unsigned intD.14 _75;
  const size_typeD.11502 _76;
  const charD.10 * _77;
  boolD.2757 _82;
  charD.10 * _83;
  long unsigned intD.14 __dnew.111_84;
  const char_typeD.6439 _86;
  charD.10 * _89;
  doubleD.39 * _90;
  doubleD.39 * _91;
  charD.10 * const _92;
  doubleD.39 * _93;
  size_typeD.11502 iftmp.174_140;
  boolD.2757 _144;
  boolD.2757 _160;
  boolD.2757 _163;

;;   basic block 2, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.53931 => values_13(D)
  # DEBUG D#298ptD.0 => &values_13(D)->D.38225
  # DEBUG thisD.53932 => D#298ptD.0
  # DEBUG D#297ptD.0 => &D#298ptD.0->_M_implD.37716
  # DEBUG thisD.53933 => D#297ptD.0
  # DEBUG thisD.49752 => D#297ptD.0
  # DEBUG thisD.49750 => D#297ptD.0
  # .MEM_51 = VDEF <.MEM_12(D)>
  MEM[(struct _Vector_implD.37693 *)values_13(D)]._M_startD.37718 = 0B;
  # .MEM_52 = VDEF <.MEM_51>
  MEM[(struct _Vector_implD.37693 *)values_13(D)]._M_finishD.37719 = 0B;
  # .MEM_53 = VDEF <.MEM_52>
  MEM[(struct _Vector_implD.37693 *)values_13(D)]._M_end_of_storageD.37720 = 0B;
  # DEBUG thisD.53929 => data_15(D)
  # VUSE <.MEM_53>
  _25 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46865 => D#2ptD.0
  if (_25 == 0)
    goto <bb 40>;
  else
    goto <bb 3>;
;;    succ:       40 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 463, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53934 => data_15(D)
  # DEBUG __posD.53935 => 0
  # VUSE <.MEM_53>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_53>
  _18 = MEM[(const charD.10 &)_14];
  if (_18 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [51.2%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [48.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [48.8%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [51.2%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53937 => data_15(D)
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __nptrD.53925 => _14
  # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _32 = strtodD.13331 (_14, 0B);
  # .MEM_20 = VDEF <.MEM_54>
  D.38563 = _32;
  # DEBUG thisD.57281 => values_13(D)
  # DEBUG __xD.57282 => &D.38563
  # VUSE <.MEM_20>
  # PT = nonlocal escaped 
  _68 = values_13(D)->D.38225._M_implD.37716._M_finishD.37719;
  # VUSE <.MEM_20>
  # PT = nonlocal escaped 
  _69 = values_13(D)->D.38225._M_implD.37716._M_end_of_storageD.37720;
  if (_68 != _69)
    goto <bb 6>;
  else
    goto <bb 9>;
;;    succ:       6 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#547ptD.0 => &values_13(D)->D.38225._M_implD.37716
  # DEBUG D#139ptD.0 => D#547ptD.0
  # DEBUG __pD.57285 => _68
  # DEBUG __argD.57284 => &D.38563
  # DEBUG __aD.57283 => D#139ptD.0
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0
  # DEBUG __pD.57288 => _68
  # DEBUG __valD.57287 => &D.38563
  # DEBUG thisD.57286 => D#137ptD.0
  # DEBUG D#14ptD.0 => 8
  # DEBUG __pD.48066 => _68
  # DEBUG D.48067 => D#14ptD.0
  if (_68 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_101 = VDEF <.MEM_20>
  *_68 = _32;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_20(6), .MEM_101(7)>
  # PT = nonlocal escaped 
  _71 = _68 + 8;
  # .MEM_102 = VDEF <.MEM_34>
  values_13(D)->D.38225._M_implD.37716._M_finishD.37719 = _71;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       5 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53919 => values_13(D)
  # DEBUG D#140ptD.0 => &values_13(D)->D.38225._M_implD.37716._M_finishD.37719
  # DEBUG thisD.53921 => NULL
  # DEBUG __iD.53920 => D#140ptD.0
  # .MEM_99 = VDEF <.MEM_20>
  MEM[(struct __normal_iteratorD.37794 *)&D.57289] = _68;
  [LP 6] # .MEM_100 = VDEF <.MEM_99>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZNSt6vectorIdSaIdEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPdS1_EERKdD.38153 (values_13(D), D.57289, &D.38563);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 (EH,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_94 = PHI <.MEM_100(9), .MEM_102(8)>
  # .MEM_22 = VDEF <.MEM_94>
  D.38563 ={v} {CLOBBER};
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_1 = PHI <1(4), curr_2(37)>
  # nested_3 = PHI <0(4), nested_4(37)>
  # RANGE [1, 18446744073709551615]
  # curr_5 = PHI <1(4), prephitmp_58(37)>
  # .MEM_7 = PHI <.MEM_53(4), .MEM_9(37)>
  # DEBUG currD.38567 => curr_5
  # DEBUG nestedD.38566 => nested_3
  # DEBUG startD.38565 => curr_1
  # DEBUG thisD.53939 => data_15(D)
  # DEBUG __sD.53940 => "{,}"
  # DEBUG __posD.53941 => curr_5
  # DEBUG __sD.53942 => "{,}"
  [LP 7] # .MEM_55 = VDEF <.MEM_7>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _45 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmmD.12156 (data_15(D), "{,}", curr_5, 3);
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 (EH,EXECUTABLE)
<L32>: [LP 7]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG currD.38567 => _45
  if (_45 != 18446744073709551615)
    goto <bb 14>;
  else
    goto <bb 38>;
;;    succ:       14 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9775, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53944 => data_15(D)
  # DEBUG __posD.53945 => _45
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _24 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # PT = nonlocal escaped 
  _46 = _24 + _45;
  # VUSE <.MEM_55>
  _26 = *_46;
  if (_26 == 123)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 2737, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_27 = nested_3 + 1;
  # DEBUG nestedD.38566 => nested_27
  pretmp_64 = _45 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 1971, maybe hot
;;   Invalid sum of incoming frequencies 7038, should be 1971
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53947 => data_15(D)
  # DEBUG __posD.53948 => _45
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # RANGE [0, 1]
  _160 = nested_3 != 0;
  # RANGE [0, 1]
  _163 = _26 == 125;
  # RANGE [0, 1]
  _144 = _160 & _163;
  if (_144 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 1759, maybe hot
;;   Invalid sum of incoming frequencies 3027, should be 1759
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       51 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  if (curr_1 < _45)
    goto <bb 18>;
  else
    goto <bb 36>;
;;    succ:       18 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _30 = _45 - curr_1;
  # DEBUG thisD.57290 => data_15(D)
  # DEBUG __posD.57291 => curr_1
  # DEBUG __nD.57292 => _30
  # DEBUG thisD.57295 => data_15(D)
  # DEBUG __posD.57294 => curr_1
  # DEBUG __sD.57293 => "basic_string::substr"
  # VUSE <.MEM_55>
  _21 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  if (curr_1 > _21)
    goto <bb 19>;
  else
    goto <bb 21>;
;;    succ:       19 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_42 = PHI <curr_1(18)>
  # _76 = PHI <_21(18)>
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46997 => D#2ptD.0
  [LP 8] # .MEM_119 = VDEF <.MEM_55>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZSt24__throw_out_of_range_fmtPKczD.2864 ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_42, _76);
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L33>: [LP 8]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.57296 => &tokenD.38568
  # DEBUG __strD.57297 => data_15(D)
  # DEBUG __posD.57298 => curr_1
  # DEBUG __nD.57299 => _30
  # DEBUG thisD.57301 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.57302 => &tokenD.38568
  # DEBUG D#401ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG thisD.57305 => D#401ptD.0
  # DEBUG __datD.57304 => &tokenD.38568.D.11539._M_local_bufD.11541
  # DEBUG __aD.57303 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#401ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_103 = VDEF <.MEM_55>
  MEM[(struct _Alloc_hiderD.11518 *)&tokenD.38568]._M_pD.11525 = &tokenD.38568.D.11539._M_local_bufD.11541;
  # DEBUG thisD.57306 => NULL
  # DEBUG thisD.51465 => NULL
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.51462 => D#3ptD.0
  # DEBUG thisD.57322 => data_15(D)
  # DEBUG __posD.57321 => curr_1
  # DEBUG __sD.57320 => "basic_string::basic_string"
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  # PT = nonlocal escaped 
  __start_74 = _24 + curr_1;
  # DEBUG __startD.57307 => __start_74
  # DEBUG thisD.57310 => data_15(D)
  # DEBUG __posD.57309 => curr_1
  # DEBUG __offD.57308 => _30
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46904 => D#2ptD.0
  # RANGE [0, 18446744073709551615]
  _75 = _21 - curr_1;
  # DEBUG __testoffD.57311 => _75 > _30
  # RANGE [0, 18446744073709551615]
  iftmp.174_140 = MIN_EXPR <_30, _75>;
  # PT = nonlocal escaped 
  _77 = __start_74 + iftmp.174_140;
  # DEBUG thisD.57314 => &tokenD.38568
  # DEBUG __begD.57313 => __start_74
  # DEBUG __endD.57312 => _77
  # DEBUG thisD.57318 => &tokenD.38568
  # DEBUG __begD.57317 => __start_74
  # DEBUG __endD.57316 => _77
  # DEBUG thisD.57323 => &tokenD.38568
  # DEBUG __begD.57324 => __start_74
  # DEBUG __endD.57325 => _77
  # DEBUG __ptrD.51229 => __start_74
  # RANGE [0, 1]
  _19 = _77 != 0B;
  # RANGE [0, 1]
  _82 = __start_74 == 0B;
  # RANGE [0, 1]
  _73 = _19 & _82;
  if (_73 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;
;;    succ:       53 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       55 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 9] # .MEM_105 = VDEF <.MEM_104>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _83 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&tokenD.38568, &__dnewD.57326, 0);
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 (EH,EXECUTABLE)
<L34>: [LP 9]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &tokenD.38568
  # DEBUG __pD.57345 => _83
  # DEBUG thisD.57344 => D#6ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  MEM[(charD.10 * *)&tokenD.38568] = _83;
  # VUSE <.MEM_106>
  __dnew.111_84 = __dnewD.57326;
  # DEBUG D#7ptD.0 => &tokenD.38568
  # DEBUG __capacityD.57347 => __dnew.111_84
  # DEBUG thisD.57346 => D#7ptD.0
  # .MEM_107 = VDEF <.MEM_106>
  MEM[(size_typeD.11502 *)&tokenD.38568 + 16B] = __dnew.111_84;
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57329 => _83
  # DEBUG __k1D.57328 => __start_74
  # DEBUG __k2D.57327 => _77
  # DEBUG __dD.57332 => _83
  # DEBUG __sD.57331 => __start_74
  # DEBUG __nD.57330 => iftmp.174_140
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 362, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       55 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57329 => &tokenD.38568.D.11539._M_local_bufD.11541
  # DEBUG __k1D.57328 => __start_74
  # DEBUG __k2D.57327 => _77
  # DEBUG __dD.57332 => &tokenD.38568.D.11539._M_local_bufD.11541
  # DEBUG __sD.57331 => __start_74
  # DEBUG __nD.57330 => iftmp.174_140
  if (iftmp.174_140 == 1)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 193, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_104>
  _86 = MEM[(const char_typeD.6439 &)__start_74];
  # DEBUG D#13ptD.0 => __start_74
  # DEBUG __c1D.57337 => &tokenD.38568.D.11539._M_local_bufD.11541
  # DEBUG __c2D.57336 => D#13ptD.0
  # .MEM_108 = VDEF <.MEM_104>
  MEM[(char_typeD.6439 &)&tokenD.38568 + 16] = _86;
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 317, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38568 } (escaped)
  # _92 = PHI <&tokenD.38568.D.11539._M_local_bufD.11541(25), _83(24)>
  # .MEM_72 = PHI <.MEM_104(25), .MEM_107(24)>
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57329 => _92
  # DEBUG __k1D.57328 => __start_74
  # DEBUG __k2D.57327 => _77
  # DEBUG __dD.57332 => _92
  # DEBUG __sD.57331 => __start_74
  # DEBUG __nD.57330 => iftmp.174_140
  # DEBUG __s1D.57335 => _92
  # DEBUG __s2D.57334 => __start_74
  # DEBUG __nD.57333 => iftmp.174_140
  # .MEM_109 = VDEF <.MEM_72>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  memcpyD.992 (_92, __start_74, iftmp.174_140);
  # VUSE <.MEM_109>
  pretmp_59 = __dnewD.57326;
  # VUSE <.MEM_109>
  pretmp_61 = MEM[(charD.10 * *)&tokenD.38568];
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_96 = PHI <.MEM_108(26), .MEM_109(27)>
  # prephitmp_60 = PHI <iftmp.174_140(26), pretmp_59(27)>
  # PT = nonlocal escaped null { D.38568 } (escaped)
  # prephitmp_50 = PHI <&tokenD.38568.D.11539._M_local_bufD.11541(26), pretmp_61(27)>
  # DEBUG D#804ptD.0 => __dnewD.57326
  # DEBUG thisD.57339 => &tokenD.38568
  # DEBUG __nD.57338 => D#804ptD.0
  # DEBUG D#5ptD.0 => &tokenD.38568
  # DEBUG __lengthD.57341 => D#804ptD.0
  # DEBUG thisD.57340 => D#5ptD.0
  # .MEM_110 = VDEF <.MEM_96>
  MEM[(size_typeD.11502 *)&tokenD.38568 + 8B] = prephitmp_60;
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38568 } (escaped)
  _89 = prephitmp_50 + prephitmp_60;
  # DEBUG __c1D.57343 => _89
  # DEBUG __c2D.57342 => D#13ptD.0
  # .MEM_111 = VDEF <.MEM_110>
  MEM[(char_typeD.6439 &)_89] = 0;
  # .MEM_112 = VDEF <.MEM_111>
  __dnewD.57326 ={v} {CLOBBER};
  # DEBUG thisD.53950 => &tokenD.38568
  # VUSE <.MEM_112>
  # PT = nonlocal escaped null { D.38568 } (escaped)
  _47 = MEM[(charD.10 * *)&tokenD.38568];
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __nptrD.53927 => _47
  # .MEM_56 = VDEF <.MEM_112>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _28 = strtodD.13331 (_47, 0B);
  # .MEM_33 = VDEF <.MEM_56>
  D.38570 = _28;
  # DEBUG thisD.57352 => values_13(D)
  # DEBUG __xD.57353 => &D.38570
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _90 = values_13(D)->D.38225._M_implD.37716._M_finishD.37719;
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _91 = values_13(D)->D.38225._M_implD.37716._M_end_of_storageD.37720;
  if (_90 != _91)
    goto <bb 29>;
  else
    goto <bb 32>;
;;    succ:       29 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#547ptD.0 => &values_13(D)->D.38225._M_implD.37716
  # DEBUG D#139ptD.0 => D#547ptD.0
  # DEBUG __pD.57356 => _90
  # DEBUG __argD.57355 => &D.38570
  # DEBUG __aD.57354 => D#139ptD.0
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0
  # DEBUG __pD.57359 => _90
  # DEBUG __valD.57358 => &D.38570
  # DEBUG thisD.57357 => D#137ptD.0
  # DEBUG D#14ptD.0 => 8
  # DEBUG __pD.48066 => _90
  # DEBUG D.48067 => D#14ptD.0
  if (_90 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 427, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_115 = VDEF <.MEM_33>
  *_90 = _28;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_33(29), .MEM_115(30)>
  # PT = nonlocal escaped 
  _93 = _90 + 8;
  # .MEM_116 = VDEF <.MEM_97>
  values_13(D)->D.38225._M_implD.37716._M_finishD.37719 = _93;
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 34, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       28 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53919 => values_13(D)
  # DEBUG D#140ptD.0 => &values_13(D)->D.38225._M_implD.37716._M_finishD.37719
  # DEBUG thisD.53921 => NULL
  # DEBUG __iD.53920 => D#140ptD.0
  # .MEM_113 = VDEF <.MEM_33>
  MEM[(struct __normal_iteratorD.37794 *)&D.57360] = _90;
  [LP 4] # .MEM_114 = VDEF <.MEM_113>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZNSt6vectorIdSaIdEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPdS1_EERKdD.38153 (values_13(D), D.57360, &D.38570);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 (EH,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_114(32), .MEM_116(31)>
  # .MEM_35 = VDEF <.MEM_98>
  D.38570 ={v} {CLOBBER};
  # DEBUG thisD.53952 => &tokenD.38568
  # DEBUG thisD.53953 => &tokenD.38568
  # DEBUG thisD.53962 => &tokenD.38568
  # VUSE <.MEM_35>
  # PT = nonlocal escaped null { D.38568 } (escaped)
  _48 = MEM[(charD.10 * *)&tokenD.38568];
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.53963 => &tokenD.38568
  if (&tokenD.38568.D.11539._M_local_bufD.11541 != _48)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 356, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38568.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.53955 => &tokenD.38568
  # DEBUG __sizeD.53954 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38568
  # DEBUG D#183ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.53958 => _48
  # DEBUG __aD.53956 => D#181ptD.0
  # DEBUG __nD.53957 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.53961 => _48
  # DEBUG thisD.53959 => D#177ptD.0
  # DEBUG D.53960 => D#178ptD.0
  # .MEM_57 = VDEF <.MEM_35>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZdlPvD.2766 (_48);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_35(33), .MEM_57(34)>
  # DEBUG D#187ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG thisD.53964 => D#187ptD.0
  # DEBUG thisD.53965 => D#187ptD.0
  # DEBUG thisD.53966 => D#187ptD.0
  # .MEM_37 = VDEF <.MEM_44>
  tokenD.38568 ={v} {CLOBBER};
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       17 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_55(17), .MEM_37(35)>
  # RANGE [1, 18446744073709551615]
  curr_41 = _45 + 1;
  # DEBUG startD.38565 => curr_41
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 9774, maybe hot
;;   Invalid sum of incoming frequencies 11042, should be 9774
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_2 = PHI <curr_1(15), curr_1(50), curr_1(52), curr_41(36)>
  # nested_4 = PHI <nested_27(15), nested_29(50), nested_3(52), 0(36)>
  # .MEM_9 = PHI <.MEM_55(15), .MEM_55(50), .MEM_55(52), .MEM_8(36)>
  # RANGE [1, 18446744073709551615]
  # prephitmp_58 = PHI <pretmp_64(15), pretmp_65(50), pretmp_66(52), curr_41(36)>
  # DEBUG nestedD.38566 => nested_4
  # DEBUG startD.38565 => curr_2
  # DEBUG currD.38567 => _45 + 1
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       13 [2.2%]  (FALSE_VALUE,EXECUTABLE)
  # nested_139 = PHI <nested_3(13)>
  if (nested_139 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_43 = VDEF <.MEM_55>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  __assert_failD.14402 ("!nested", "config_utils.cpp", 444, &_ZZ14tokenize_floatRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38571);
;;    succ:      

;;   basic block 40, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_161 = PHI <.MEM_53(2), .MEM_55(38)>
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_10 = PHI <.MEM_161(40), .MEM_22(10)>
  # VUSE <.MEM_10>
  return values_13(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       32 (EH,EXECUTABLE)
<L28>: [LP 4]
  # .MEM_38 = VDEF <.MEM_114>
  D.38570 ={v} {CLOBBER};
  # DEBUG thisD.53967 => &tokenD.38568
  # DEBUG thisD.53968 => &tokenD.38568
  # DEBUG thisD.53977 => &tokenD.38568
  # VUSE <.MEM_38>
  # PT = nonlocal escaped null { D.38568 } (escaped)
  _36 = MEM[(charD.10 * *)&tokenD.38568];
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.53978 => &tokenD.38568
  if (&tokenD.38568.D.11539._M_local_bufD.11541 != _36)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38568.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.53970 => &tokenD.38568
  # DEBUG __sizeD.53969 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38568
  # DEBUG D#183ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.53973 => _36
  # DEBUG __aD.53971 => D#181ptD.0
  # DEBUG __nD.53972 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.53976 => _36
  # DEBUG thisD.53974 => D#177ptD.0
  # DEBUG D.53975 => D#178ptD.0
  # .MEM_62 = VDEF <.MEM_38>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZdlPvD.2766 (_36);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_38(42), .MEM_62(43)>
  # DEBUG D#187ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG thisD.53979 => D#187ptD.0
  # DEBUG thisD.53980 => D#187ptD.0
  # DEBUG thisD.53981 => D#187ptD.0
  [LP 10] resx 5
;;    succ:       45 (EH,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 (EH,EXECUTABLE)
<L35>: [LP 10]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       9 (EH,EXECUTABLE)
<L31>: [LP 6]
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_49(45), .MEM_105(23), .MEM_55(12), .MEM_100(46), .MEM_119(20), .MEM_117(54)>
<L30>:
  # .MEM_40 = VDEF <.MEM_11>
  tokenD.38568 ={v} {CLOBBER};
  # .MEM_23 = VDEF <.MEM_40>
  D.38563 ={v} {CLOBBER};
  # DEBUG thisD.53982 => values_13(D)
  # DEBUG D#289ptD.0 => &values_13(D)->D.38225
  # DEBUG thisD.49711 => D#289ptD.0
  # DEBUG D#292ptD.0 => values_13(D)->D.38225._M_implD.37716._M_finishD.37719
  # DEBUG D#291ptD.0 => values_13(D)->D.38225._M_implD.37716._M_startD.37718
  # DEBUG __firstD.49708 => D#291ptD.0
  # DEBUG __lastD.49709 => D#292ptD.0
  # DEBUG D.49710 => NULL
  # DEBUG D#171ptD.0 => D#291ptD.0
  # DEBUG D#172ptD.0 => D#292ptD.0
  # DEBUG __firstD.48327 => D#171ptD.0
  # DEBUG __lastD.48326 => D#172ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0
  # DEBUG D#167ptD.0 => D#169ptD.0
  # DEBUG D#168ptD.0 => D#170ptD.0
  # DEBUG D.48316 => D#167ptD.0
  # DEBUG D.48315 => D#168ptD.0
  # DEBUG D#290ptD.0 => &values_13(D)->D.38225
  # DEBUG thisD.53983 => D#290ptD.0
  # DEBUG D#288ptD.0 => D#290ptD.0->_M_implD.37716._M_end_of_storageD.37720
  # DEBUG D#287ptD.0 => (long intD.12) D#288ptD.0
  # VUSE <.MEM_23>
  # PT = nonlocal escaped 
  _39 = MEM[(struct _Vector_baseD.37483 *)values_13(D)]._M_implD.37716._M_startD.37718;
  # DEBUG D#286ptD.0 => (long intD.12) _39
  # DEBUG D#285ptD.0 => D#287ptD.0 - D#286ptD.0
  # DEBUG D#284ptD.0 => D#285ptD.0 /[ex] 8
  # DEBUG D#283ptD.0 => (long unsigned intD.14) D#284ptD.0
  # DEBUG thisD.53986 => D#290ptD.0
  # DEBUG __pD.53985 => _39
  # DEBUG __nD.53984 => D#283ptD.0
  if (_39 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#281ptD.0 => &D#290ptD.0->_M_implD.37716
  # DEBUG D#279ptD.0 => D#281ptD.0
  # DEBUG D#280ptD.0 => D#283ptD.0
  # DEBUG __pD.53990 => _39
  # DEBUG __aD.53988 => D#279ptD.0
  # DEBUG __nD.53989 => D#280ptD.0
  # DEBUG D#278ptD.0 => D#280ptD.0
  # DEBUG D#277ptD.0 => D#279ptD.0
  # DEBUG D#275ptD.0 => D#277ptD.0
  # DEBUG D#276ptD.0 => D#278ptD.0
  # DEBUG __pD.53993 => _39
  # DEBUG thisD.53991 => D#275ptD.0
  # DEBUG D.53992 => D#276ptD.0
  # .MEM_67 = VDEF <.MEM_23>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZdlPvD.2766 (_39);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       47 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#282ptD.0 => &D#290ptD.0->_M_implD.37716
  # DEBUG thisD.53994 => D#282ptD.0
  # DEBUG thisD.53995 => D#282ptD.0
  # DEBUG thisD.53996 => D#282ptD.0
  resx 1
;;    succ:      

;;   basic block 50, loop depth 1, count 0, freq 3519, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 3519
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_29 = nested_3 + -1;
  # DEBUG nestedD.38566 => nested_29
  pretmp_65 = _45 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 6053, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 6053
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (nested_3 == 0)
    goto <bb 17>;
  else
    goto <bb 52>;
;;    succ:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 3027, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_66 = _45 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 65, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 434, should be 65
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       21 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_117 = VDEF <.MEM_103>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       54 (EH,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 (EH,EXECUTABLE)
<L36>: [LP 1]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 510, maybe hot
;;   Invalid sum of incoming frequencies 77, should be 510
;;    prev block 54, next block 1, flags: (NEW, REACHABLE)
;;    pred:       21 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.57349 => __start_74
  # DEBUG __lastD.57348 => _77
  # DEBUG D#393ptD.0 => &__firstD.57349
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.57351 => __start_74
  # DEBUG __lastD.57350 => _77
  # .MEM_104 = VDEF <.MEM_103>
  __dnewD.57326 = iftmp.174_140;
  if (iftmp.174_140 > 15)
    goto <bb 22>;
  else
    goto <bb 25>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [71.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_start
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)values_13(D)]
	Access function 0: 128
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for MEM[(const char &)_14]
analyze_innermost: success.
	base_address: _14
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char &)_14]
Creating dr for *_68
analyze_innermost: success.
	base_address: _68
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_68
Creating dr for values_13(D)->D.38225._M_impl._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *values_13(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct __normal_iterator *)&D.57289]
analyze_innermost: success.
	base_address: &D.57289
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.57289]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for MEM[(char * *)data_15(D)]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)data_15(D)]
Creating dr for *_46
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_46
Creating dr for *_46
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_46
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(long unsigned int *)data_15(D) + 8B]
analyze_innermost: success.
	base_address: data_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)data_15(D) + 8B]
Creating dr for MEM[(struct _Alloc_hider *)&token]._M_p
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&token]
	Access function 0: 0
Creating dr for MEM[(struct _Alloc_hider *)&token]._M_p
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&token]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for MEM[(char * *)&token]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&token]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)&token + 16B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 16B]
Creating dr for MEM[(size_type *)&token + 16B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 16B]
Creating dr for MEM[(const char_type &)__start_74]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char_type &)__start_74]
Creating dr for MEM[(const char_type &)__start_74]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const char_type &)__start_74]
Creating dr for MEM[(char_type &)&token + 16]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&token + 16]
Creating dr for MEM[(char_type &)&token + 16]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&token + 16]
Creating dr for MEM[(size_type *)&token + 8B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 8B]
Creating dr for MEM[(size_type *)&token + 8B]
analyze_innermost: success.
	base_address: &token
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&token + 8B]
Creating dr for MEM[(char_type &)_89]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_89]
Creating dr for MEM[(char_type &)_89]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char_type &)_89]
Creating dr for *_90
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_90
Creating dr for *_90
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_90
Creating dr for values_13(D)->D.38225._M_impl._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *values_13(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for values_13(D)->D.38225._M_impl._M_finish
analyze_innermost: success.
	base_address: values_13(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *values_13(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct __normal_iterator *)&D.57360]
analyze_innermost: success.
	base_address: &D.57360
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.57360]
Creating dr for MEM[(struct __normal_iterator *)&D.57360]
analyze_innermost: success.
	base_address: &D.57360
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&D.57360]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:62, LOOPS:1, CONDITIONS:23, STMTS:406)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_40 bb_3 })
  {
    <bb 2>:
    # DEBUG this => values_13(D)
    # DEBUG D#298 => &values_13(D)->D.38225
    # DEBUG this => D#298
    # DEBUG D#297 => &D#298->_M_impl
    # DEBUG this => D#297
    # DEBUG this => D#297
    # DEBUG this => D#297
    # .MEM_51 = VDEF <.MEM_12(D)>
    MEM[(struct _Vector_impl *)values_13(D)]._M_start = 0B;
    # .MEM_52 = VDEF <.MEM_51>
    MEM[(struct _Vector_impl *)values_13(D)]._M_finish = 0B;
    # .MEM_53 = VDEF <.MEM_52>
    MEM[(struct _Vector_impl *)values_13(D)]._M_end_of_storage = 0B;
    # DEBUG this => data_15(D)
    # VUSE <.MEM_53>
    _25 = MEM[(long unsigned int *)data_15(D) + 8B];
    # DEBUG D#2 => data_15(D)
    # DEBUG this => D#2
    if (_25 == 0)
      goto <bb 40>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # DEBUG this => data_15(D)
    # DEBUG __pos => 0
    # VUSE <.MEM_53>
    _14 = MEM[(char * *)data_15(D)];
    # DEBUG D#3 => data_15(D)
    # DEBUG this => D#3
    # VUSE <.MEM_53>
    _18 = MEM[(const char &)_14];
    if (_18 != 123)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_11 })
  {
    <bb 4>:
    goto <bb 11>;

  }
  bb_5 (preds = {bb_3 }, succs = {bb_6 bb_9 })
  {
    <bb 5>:
    # DEBUG this => data_15(D)
    # DEBUG D#3 => data_15(D)
    # DEBUG this => D#3
    # DEBUG __nptr => _14
    # .MEM_54 = VDEF <.MEM_53>
    _32 = strtod (_14, 0B);
    # .MEM_20 = VDEF <.MEM_54>
    D.38563 = _32;
    # DEBUG this => values_13(D)
    # DEBUG __x => &D.38563
    # VUSE <.MEM_20>
    _68 = values_13(D)->D.38225._M_impl._M_finish;
    # VUSE <.MEM_20>
    _69 = values_13(D)->D.38225._M_impl._M_end_of_storage;
    if (_68 != _69)
      goto <bb 6>;
    else
      goto <bb 9>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#547 => &values_13(D)->D.38225._M_impl
    # DEBUG D#139 => D#547
    # DEBUG __p => _68
    # DEBUG __arg => &D.38563
    # DEBUG __a => D#139
    # DEBUG D#138 => D#139
    # DEBUG D#137 => D#138
    # DEBUG __p => _68
    # DEBUG __val => &D.38563
    # DEBUG this => D#137
    # DEBUG D#14 => 8
    # DEBUG __p => _68
    # DEBUG D.48067 => D#14
    if (_68 != 0B)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    # .MEM_101 = VDEF <.MEM_20>
    *_68 = _32;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_56 })
  {
    <bb 8>:
    # .MEM_34 = PHI <.MEM_20(6), .MEM_101(7)>

  }
  bb_56 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 56>:
    _71 = _68 + 8;
    # .MEM_102 = VDEF <.MEM_34>
    values_13(D)->D.38225._M_impl._M_finish = _71;
    goto <bb 10>;

  }
  bb_9 (preds = {bb_5 }, succs = {bb_10 bb_46 })
  {
    <bb 9>:
    # DEBUG this => values_13(D)
    # DEBUG D#140 => &values_13(D)->D.38225._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#140
    # .MEM_99 = VDEF <.MEM_20>
    MEM[(struct __normal_iterator *)&D.57289] = _68;
    # .MEM_100 = VDEF <.MEM_99>
    std::vector<double>::_M_insert_aux (values_13(D), D.57289, &D.38563);

  }
  bb_10 (preds = {bb_9 bb_56 }, succs = {bb_41 })
  {
    <bb 10>:
    # .MEM_94 = PHI <.MEM_100(9), .MEM_102(56)>
    # .MEM_22 = VDEF <.MEM_94>
    D.38563 ={v} {CLOBBER};
    goto <bb 41>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_47 })
  {
  <L32>:
    goto <bb 47> (<L30>);

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # curr_42 = PHI <curr_1(18)>
    # _76 = PHI <_21(18)>
    # DEBUG D#2 => data_15(D)
    # DEBUG this => D#2
    # .MEM_119 = VDEF <.MEM_55>
    std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_42, _76);

  }
  bb_20 (preds = {bb_19 }, succs = {bb_47 })
  {
  <L33>:
    goto <bb 47> (<L30>);

  }
  bb_23 (preds = {bb_22 }, succs = {bb_47 })
  {
  <L34>:
    goto <bb 47> (<L30>);

  }
  bb_38 (preds = {bb_13 }, succs = {bb_39 bb_40 })
  {
    <bb 38>:
    # nested_139 = PHI <nested_3(13)>
    if (nested_139 != 0)
      goto <bb 39>;
    else
      goto <bb 40>;

  }
  bb_39 (preds = {bb_38 }, succs = {})
  {
    <bb 39>:
    # .MEM_43 = VDEF <.MEM_55>
    __assert_fail ("!nested", "config_utils.cpp", 444, &__PRETTY_FUNCTION__);

  }
  bb_40 (preds = {bb_2 bb_38 }, succs = {bb_61 })
  {
    <bb 40>:
    # .MEM_161 = PHI <.MEM_53(2), .MEM_55(38)>

  }
  bb_61 (preds = {bb_40 }, succs = {bb_41 })
  {
    <bb 61>:

  }
  bb_41 (preds = {bb_61 bb_10 }, succs = {bb_60 })
  {
    <bb 41>:
    # .MEM_10 = PHI <.MEM_161(61), .MEM_22(10)>

  }
  bb_60 (preds = {bb_41 }, succs = {bb_1 })
  {
    <bb 60>:
    # VUSE <.MEM_10>
    return values_13(D);

  }
  bb_42 (preds = {bb_32 }, succs = {bb_43 bb_44 })
  {
  <L28>:
    # .MEM_38 = VDEF <.MEM_114>
    D.38570 ={v} {CLOBBER};
    # DEBUG this => &token
    # DEBUG this => &token
    # DEBUG this => &token
    # VUSE <.MEM_38>
    _36 = MEM[(char * *)&token];
    # DEBUG D#3 => &token
    # DEBUG this => D#3
    # DEBUG this => &token
    if (&token.D.11539._M_local_buf != _36)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#186 => token.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &token
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &token
    # DEBUG this => D#3
    # DEBUG this => &token
    # DEBUG D#183 => &token._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _36
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _36
    # DEBUG this => D#177
    # DEBUG D.53975 => D#178
    # .MEM_62 = VDEF <.MEM_38>
    operator delete (_36);

  }
  bb_44 (preds = {bb_42 bb_43 }, succs = {bb_45 })
  {
    <bb 44>:
    # .MEM_49 = PHI <.MEM_38(42), .MEM_62(43)>
    # DEBUG D#187 => &token._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    resx 5

  }
  bb_45 (preds = {bb_44 }, succs = {bb_47 })
  {
  <L35>:
    goto <bb 47> (<L30>);

  }
  bb_46 (preds = {bb_9 }, succs = {bb_47 })
  {
  <L31>:

  }
  bb_47 (preds = {bb_45 bb_23 bb_12 bb_46 bb_20 bb_54 }, succs = {bb_48 bb_49 })
  {
    # .MEM_11 = PHI <.MEM_49(45), .MEM_105(23), .MEM_55(12), .MEM_100(46), .MEM_119(20), .MEM_117(54)>
  <L30>:
    # .MEM_40 = VDEF <.MEM_11>
    token ={v} {CLOBBER};
    # .MEM_23 = VDEF <.MEM_40>
    D.38563 ={v} {CLOBBER};
    # DEBUG this => values_13(D)
    # DEBUG D#289 => &values_13(D)->D.38225
    # DEBUG this => D#289
    # DEBUG D#292 => values_13(D)->D.38225._M_impl._M_finish
    # DEBUG D#291 => values_13(D)->D.38225._M_impl._M_start
    # DEBUG __first => D#291
    # DEBUG __last => D#292
    # DEBUG D.49710 => NULL
    # DEBUG D#171 => D#291
    # DEBUG D#172 => D#292
    # DEBUG __first => D#171
    # DEBUG __last => D#172
    # DEBUG D#170 => D#172
    # DEBUG D#169 => D#171
    # DEBUG D#167 => D#169
    # DEBUG D#168 => D#170
    # DEBUG D.48316 => D#167
    # DEBUG D.48315 => D#168
    # DEBUG D#290 => &values_13(D)->D.38225
    # DEBUG this => D#290
    # DEBUG D#288 => D#290->_M_impl._M_end_of_storage
    # DEBUG D#287 => (long int) D#288
    # VUSE <.MEM_23>
    _39 = MEM[(struct _Vector_base *)values_13(D)]._M_impl._M_start;
    # DEBUG D#286 => (long int) _39
    # DEBUG D#285 => D#287 - D#286
    # DEBUG D#284 => D#285 /[ex] 8
    # DEBUG D#283 => (long unsigned int) D#284
    # DEBUG this => D#290
    # DEBUG __p => _39
    # DEBUG __n => D#283
    if (_39 != 0B)
      goto <bb 48>;
    else
      goto <bb 49>;

  }
  bb_48 (preds = {bb_47 }, succs = {bb_49 })
  {
    <bb 48>:
    # DEBUG D#281 => &D#290->_M_impl
    # DEBUG D#279 => D#281
    # DEBUG D#280 => D#283
    # DEBUG __p => _39
    # DEBUG __a => D#279
    # DEBUG __n => D#280
    # DEBUG D#278 => D#280
    # DEBUG D#277 => D#279
    # DEBUG D#275 => D#277
    # DEBUG D#276 => D#278
    # DEBUG __p => _39
    # DEBUG this => D#275
    # DEBUG D.53992 => D#276
    # .MEM_67 = VDEF <.MEM_23>
    operator delete (_39);

  }
  bb_49 (preds = {bb_47 bb_48 }, succs = {})
  {
    <bb 49>:
    # DEBUG D#282 => &D#290->_M_impl
    # DEBUG this => D#282
    # DEBUG this => D#282
    # DEBUG this => D#282
    resx 1

  }
  bb_53 (preds = {bb_21 }, succs = {bb_54 })
  {
    <bb 53>:
    # .MEM_117 = VDEF <.MEM_103>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_54 (preds = {bb_53 }, succs = {bb_47 })
  {
  <L36>:
    goto <bb 47> (<L30>);

  }
  loop_1 (header = 11, latch = 59, niter = )
  {
    bb_11 (preds = {bb_4 bb_59 }, succs = {bb_13 bb_12 })
    {
      <bb 11>:
      # curr_1 = PHI <1(4), curr_2(59)>
      # nested_3 = PHI <0(4), nested_4(59)>
      # curr_5 = PHI <1(4), prephitmp_58(59)>
      # .MEM_7 = PHI <.MEM_53(4), .MEM_9(59)>
      # DEBUG curr => curr_5
      # DEBUG nested => nested_3
      # DEBUG start => curr_1
      # DEBUG this => data_15(D)
      # DEBUG __s => "{,}"
      # DEBUG __pos => curr_5
      # DEBUG __s => "{,}"
      # .MEM_55 = VDEF <.MEM_7>
      _45 = std::__cxx11::basic_string<char>::find_first_of (data_15(D), "{,}", curr_5, 3);
      goto <bb 13>;

    }
    bb_13 (preds = {bb_11 }, succs = {bb_14 bb_38 })
    {
      <bb 13>:
      # DEBUG curr => _45
      if (_45 != 18446744073709551615)
        goto <bb 14>;
      else
        goto <bb 38>;

    }
    bb_14 (preds = {bb_13 }, succs = {bb_15 bb_16 })
    {
      <bb 14>:
      # DEBUG this => data_15(D)
      # DEBUG __pos => _45
      # VUSE <.MEM_55>
      _24 = MEM[(char * *)data_15(D)];
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      _46 = _24 + _45;
      # VUSE <.MEM_55>
      _26 = *_46;
      if (_26 == 123)
        goto <bb 15>;
      else
        goto <bb 16>;

    }
    bb_15 (preds = {bb_14 }, succs = {bb_37 })
    {
      <bb 15>:
      nested_27 = nested_3 + 1;
      # DEBUG nested => nested_27
      pretmp_64 = _45 + 1;
      goto <bb 37>;

    }
    bb_16 (preds = {bb_14 }, succs = {bb_50 bb_51 })
    {
      <bb 16>:
      # DEBUG this => data_15(D)
      # DEBUG __pos => _45
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      _160 = nested_3 != 0;
      _163 = _26 == 125;
      _144 = _160 & _163;
      if (_144 != 0)
        goto <bb 50>;
      else
        goto <bb 51>;

    }
    bb_17 (preds = {bb_51 }, succs = {bb_18 bb_36 })
    {
      <bb 17>:
      if (curr_1 < _45)
        goto <bb 18>;
      else
        goto <bb 36>;

    }
    bb_18 (preds = {bb_17 }, succs = {bb_19 bb_21 })
    {
      <bb 18>:
      _30 = _45 - curr_1;
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __n => _30
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __s => "basic_string::substr"
      # VUSE <.MEM_55>
      _21 = MEM[(long unsigned int *)data_15(D) + 8B];
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      if (curr_1 > _21)
        goto <bb 19>;
      else
        goto <bb 21>;

    }
    bb_21 (preds = {bb_18 }, succs = {bb_53 bb_55 })
    {
      <bb 21>:
      # DEBUG this => &token
      # DEBUG __str => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __n => _30
      # DEBUG this => D#42
      # DEBUG D#41 => D#42
      # DEBUG this => D#41
      # DEBUG this => &token
      # DEBUG D#401 => &token._M_dataplus
      # DEBUG this => D#401
      # DEBUG __dat => &token.D.11539._M_local_buf
      # DEBUG __a => D#147
      # DEBUG D#146 => D#147
      # DEBUG D#144 => D#401
      # DEBUG D#145 => D#146
      # DEBUG this => D#144
      # DEBUG __a => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG this => D#142
      # DEBUG D.48110 => D#143
      # .MEM_103 = VDEF <.MEM_55>
      MEM[(struct _Alloc_hider *)&token]._M_p = &token.D.11539._M_local_buf;
      # DEBUG this => NULL
      # DEBUG this => NULL
      # DEBUG D#3 => data_15(D)
      # DEBUG this => D#3
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __s => "basic_string::basic_string"
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      __start_74 = _24 + curr_1;
      # DEBUG __start => __start_74
      # DEBUG this => data_15(D)
      # DEBUG __pos => curr_1
      # DEBUG __off => _30
      # DEBUG D#2 => data_15(D)
      # DEBUG this => D#2
      _75 = _21 - curr_1;
      # DEBUG __testoff => _75 > _30
      iftmp.174_140 = MIN_EXPR <_30, _75>;
      _77 = __start_74 + iftmp.174_140;
      # DEBUG this => &token
      # DEBUG __beg => __start_74
      # DEBUG __end => _77
      # DEBUG this => &token
      # DEBUG __beg => __start_74
      # DEBUG __end => _77
      # DEBUG this => &token
      # DEBUG __beg => __start_74
      # DEBUG __end => _77
      # DEBUG __ptr => __start_74
      _19 = _77 != 0B;
      _82 = __start_74 == 0B;
      _73 = _19 & _82;
      if (_73 != 0)
        goto <bb 53>;
      else
        goto <bb 55>;

    }
    bb_22 (preds = {bb_55 }, succs = {bb_24 bb_23 })
    {
      <bb 22>:
      # .MEM_105 = VDEF <.MEM_104>
      _83 = std::__cxx11::basic_string<char>::_M_create (&token, &__dnew, 0);
      goto <bb 24>;

    }
    bb_24 (preds = {bb_22 }, succs = {bb_27 })
    {
      <bb 24>:
      # DEBUG D#6 => &token
      # DEBUG __p => _83
      # DEBUG this => D#6
      # .MEM_106 = VDEF <.MEM_105>
      MEM[(char * *)&token] = _83;
      # VUSE <.MEM_106>
      __dnew.111_84 = __dnew;
      # DEBUG D#7 => &token
      # DEBUG __capacity => __dnew.111_84
      # DEBUG this => D#7
      # .MEM_107 = VDEF <.MEM_106>
      MEM[(size_type *)&token + 16B] = __dnew.111_84;
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => _83
      # DEBUG __k1 => __start_74
      # DEBUG __k2 => _77
      # DEBUG __d => _83
      # DEBUG __s => __start_74
      # DEBUG __n => iftmp.174_140
      goto <bb 27>;

    }
    bb_25 (preds = {bb_55 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => &token.D.11539._M_local_buf
      # DEBUG __k1 => __start_74
      # DEBUG __k2 => _77
      # DEBUG __d => &token.D.11539._M_local_buf
      # DEBUG __s => __start_74
      # DEBUG __n => iftmp.174_140
      if (iftmp.174_140 == 1)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_26 (preds = {bb_25 }, succs = {bb_28 })
    {
      <bb 26>:
      # VUSE <.MEM_104>
      _86 = MEM[(const char_type &)__start_74];
      # DEBUG D#13 => __start_74
      # DEBUG __c1 => &token.D.11539._M_local_buf
      # DEBUG __c2 => D#13
      # .MEM_108 = VDEF <.MEM_104>
      MEM[(char_type &)&token + 16] = _86;
      goto <bb 28>;

    }
    bb_27 (preds = {bb_25 bb_24 }, succs = {bb_28 })
    {
      <bb 27>:
      # _92 = PHI <&token.D.11539._M_local_buf(25), _83(24)>
      # .MEM_72 = PHI <.MEM_104(25), .MEM_107(24)>
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __p => _92
      # DEBUG __k1 => __start_74
      # DEBUG __k2 => _77
      # DEBUG __d => _92
      # DEBUG __s => __start_74
      # DEBUG __n => iftmp.174_140
      # DEBUG __s1 => _92
      # DEBUG __s2 => __start_74
      # DEBUG __n => iftmp.174_140
      # .MEM_109 = VDEF <.MEM_72>
      __builtin_memcpy (_92, __start_74, iftmp.174_140);
      # VUSE <.MEM_109>
      pretmp_59 = __dnew;
      # VUSE <.MEM_109>
      pretmp_61 = MEM[(char * *)&token];

    }
    bb_28 (preds = {bb_26 bb_27 }, succs = {bb_29 bb_32 })
    {
      <bb 28>:
      # .MEM_96 = PHI <.MEM_108(26), .MEM_109(27)>
      # prephitmp_60 = PHI <iftmp.174_140(26), pretmp_59(27)>
      # prephitmp_50 = PHI <&token.D.11539._M_local_buf(26), pretmp_61(27)>
      # DEBUG D#804 => __dnew
      # DEBUG this => &token
      # DEBUG __n => D#804
      # DEBUG D#5 => &token
      # DEBUG __length => D#804
      # DEBUG this => D#5
      # .MEM_110 = VDEF <.MEM_96>
      MEM[(size_type *)&token + 8B] = prephitmp_60;
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      _89 = prephitmp_50 + prephitmp_60;
      # DEBUG __c1 => _89
      # DEBUG __c2 => D#13
      # .MEM_111 = VDEF <.MEM_110>
      MEM[(char_type &)_89] = 0;
      # .MEM_112 = VDEF <.MEM_111>
      __dnew ={v} {CLOBBER};
      # DEBUG this => &token
      # VUSE <.MEM_112>
      _47 = MEM[(char * *)&token];
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG __nptr => _47
      # .MEM_56 = VDEF <.MEM_112>
      _28 = strtod (_47, 0B);
      # .MEM_33 = VDEF <.MEM_56>
      D.38570 = _28;
      # DEBUG this => values_13(D)
      # DEBUG __x => &D.38570
      # VUSE <.MEM_33>
      _90 = values_13(D)->D.38225._M_impl._M_finish;
      # VUSE <.MEM_33>
      _91 = values_13(D)->D.38225._M_impl._M_end_of_storage;
      if (_90 != _91)
        goto <bb 29>;
      else
        goto <bb 32>;

    }
    bb_29 (preds = {bb_28 }, succs = {bb_30 bb_31 })
    {
      <bb 29>:
      # DEBUG D#547 => &values_13(D)->D.38225._M_impl
      # DEBUG D#139 => D#547
      # DEBUG __p => _90
      # DEBUG __arg => &D.38570
      # DEBUG __a => D#139
      # DEBUG D#138 => D#139
      # DEBUG D#137 => D#138
      # DEBUG __p => _90
      # DEBUG __val => &D.38570
      # DEBUG this => D#137
      # DEBUG D#14 => 8
      # DEBUG __p => _90
      # DEBUG D.48067 => D#14
      if (_90 != 0B)
        goto <bb 30>;
      else
        goto <bb 31>;

    }
    bb_30 (preds = {bb_29 }, succs = {bb_31 })
    {
      <bb 30>:
      # .MEM_115 = VDEF <.MEM_33>
      *_90 = _28;

    }
    bb_31 (preds = {bb_29 bb_30 }, succs = {bb_57 })
    {
      <bb 31>:
      # .MEM_97 = PHI <.MEM_33(29), .MEM_115(30)>

    }
    bb_57 (preds = {bb_31 }, succs = {bb_33 })
    {
      <bb 57>:
      _93 = _90 + 8;
      # .MEM_116 = VDEF <.MEM_97>
      values_13(D)->D.38225._M_impl._M_finish = _93;
      goto <bb 33>;

    }
    bb_32 (preds = {bb_28 }, succs = {bb_33 bb_42 })
    {
      <bb 32>:
      # DEBUG this => values_13(D)
      # DEBUG D#140 => &values_13(D)->D.38225._M_impl._M_finish
      # DEBUG this => NULL
      # DEBUG __i => D#140
      # .MEM_113 = VDEF <.MEM_33>
      MEM[(struct __normal_iterator *)&D.57360] = _90;
      # .MEM_114 = VDEF <.MEM_113>
      std::vector<double>::_M_insert_aux (values_13(D), D.57360, &D.38570);

    }
    bb_33 (preds = {bb_32 bb_57 }, succs = {bb_34 bb_35 })
    {
      <bb 33>:
      # .MEM_98 = PHI <.MEM_114(32), .MEM_116(57)>
      # .MEM_35 = VDEF <.MEM_98>
      D.38570 ={v} {CLOBBER};
      # DEBUG this => &token
      # DEBUG this => &token
      # DEBUG this => &token
      # VUSE <.MEM_35>
      _48 = MEM[(char * *)&token];
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG this => &token
      if (&token.D.11539._M_local_buf != _48)
        goto <bb 34>;
      else
        goto <bb 35>;

    }
    bb_34 (preds = {bb_33 }, succs = {bb_35 })
    {
      <bb 34>:
      # DEBUG D#186 => token.D.11539._M_allocated_capacity
      # DEBUG D#185 => D#186
      # DEBUG this => &token
      # DEBUG __size => D#185
      # DEBUG D#184 => D#185
      # DEBUG D#3 => &token
      # DEBUG this => D#3
      # DEBUG this => &token
      # DEBUG D#183 => &token._M_dataplus
      # DEBUG D#181 => D#183
      # DEBUG D#182 => D#184 + 1
      # DEBUG __p => _48
      # DEBUG __a => D#181
      # DEBUG __n => D#182
      # DEBUG D#180 => D#182
      # DEBUG D#179 => D#181
      # DEBUG D#177 => D#179
      # DEBUG D#178 => D#180
      # DEBUG __p => _48
      # DEBUG this => D#177
      # DEBUG D.53960 => D#178
      # .MEM_57 = VDEF <.MEM_35>
      operator delete (_48);

    }
    bb_35 (preds = {bb_33 bb_34 }, succs = {bb_36 })
    {
      <bb 35>:
      # .MEM_44 = PHI <.MEM_35(33), .MEM_57(34)>
      # DEBUG D#187 => &token._M_dataplus
      # DEBUG this => D#187
      # DEBUG this => D#187
      # DEBUG this => D#187
      # .MEM_37 = VDEF <.MEM_44>
      token ={v} {CLOBBER};

    }
    bb_36 (preds = {bb_17 bb_35 }, succs = {bb_58 })
    {
      <bb 36>:
      # .MEM_8 = PHI <.MEM_55(17), .MEM_37(35)>

    }
    bb_58 (preds = {bb_36 }, succs = {bb_37 })
    {
      <bb 58>:
      curr_41 = _45 + 1;
      # DEBUG start => curr_41

    }
    bb_37 (preds = {bb_15 bb_50 bb_52 bb_58 }, succs = {bb_59 })
    {
      <bb 37>:
      # curr_2 = PHI <curr_1(15), curr_1(50), curr_1(52), curr_41(58)>
      # nested_4 = PHI <nested_27(15), nested_29(50), nested_3(52), 0(58)>
      # .MEM_9 = PHI <.MEM_55(15), .MEM_55(50), .MEM_55(52), .MEM_8(58)>
      # prephitmp_58 = PHI <pretmp_64(15), pretmp_65(50), pretmp_66(52), curr_41(58)>

    }
    bb_59 (preds = {bb_37 }, succs = {bb_11 })
    {
      <bb 59>:
      # DEBUG nested => nested_4
      # DEBUG start => curr_2
      # DEBUG curr => _45 + 1
      goto <bb 11>;

    }
    bb_50 (preds = {bb_16 }, succs = {bb_37 })
    {
      <bb 50>:
      nested_29 = nested_3 + -1;
      # DEBUG nested => nested_29
      pretmp_65 = _45 + 1;
      goto <bb 37>;

    }
    bb_51 (preds = {bb_16 }, succs = {bb_17 bb_52 })
    {
      <bb 51>:
      if (nested_3 == 0)
        goto <bb 17>;
      else
        goto <bb 52>;

    }
    bb_52 (preds = {bb_51 }, succs = {bb_37 })
    {
      <bb 52>:
      pretmp_66 = _45 + 1;
      goto <bb 37>;

    }
    bb_55 (preds = {bb_21 }, succs = {bb_22 bb_25 })
    {
      <bb 55>:
      # DEBUG __first => __start_74
      # DEBUG __last => _77
      # DEBUG D#393 => &__first
      # DEBUG D.51158 => D#393
      # DEBUG __first => __start_74
      # DEBUG __last => _77
      # .MEM_104 = VDEF <.MEM_103>
      __dnew = iftmp.174_140;
      if (iftmp.174_140 > 15)
        goto <bb 22>;
      else
        goto <bb 25>;

    }
  }
}

Pass statistics:
----------------

std::vector<double> tokenize_float(const string&) (const struct stringD.2845 & dataD.38558)
Eh tree:
   1 cleanup land:{10,<L35>},{9,<L34>},{8,<L33>},{7,<L32>},{6,<L31>},{1,<L36>}
     5 cleanup land:{4,<L28>}
{
  struct __normal_iteratorD.37794 D.57360;
  size_typeD.11502 __dnewD.57326;
  const charD.10 * __startD.57307;
  struct __normal_iteratorD.37794 D.57289;
  struct stringD.2845 tokenD.38568;
  static const charD.10 _ZZ14tokenize_floatRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38571[50] = "std::vector<double> tokenize_float(const string&)";
  size_tD.5382 currD.38567;
  intD.9 nestedD.38566;
  const value_typeD.37788 D.38570;
  const value_typeD.37788 D.38563;
  charD.10 * const _14;
  charD.10 _18;
  boolD.2757 _19;
  const size_typeD.11502 _21;
  charD.10 * const _24;
  const size_typeD.11502 _25;
  charD.10 _26;
  doubleD.39 _28;
  long unsigned intD.14 _30;
  doubleD.39 _32;
  charD.10 * const _36;
  doubleD.39 * _39;
  size_typeD.11502 _45;
  const charD.10 & _46;
  charD.10 * const _47;
  charD.10 * const _48;
  charD.10 * const prephitmp_50;
  size_tD.5382 prephitmp_58;
  size_typeD.11502 pretmp_59;
  size_typeD.11502 prephitmp_60;
  charD.10 * const pretmp_61;
  size_tD.5382 pretmp_64;
  size_tD.5382 pretmp_65;
  size_tD.5382 pretmp_66;
  doubleD.39 * _68;
  doubleD.39 * _69;
  doubleD.39 * _71;
  boolD.2757 _73;
  long unsigned intD.14 _75;
  const size_typeD.11502 _76;
  const charD.10 * _77;
  boolD.2757 _82;
  charD.10 * _83;
  long unsigned intD.14 __dnew.111_84;
  const char_typeD.6439 _86;
  charD.10 * _89;
  doubleD.39 * _90;
  doubleD.39 * _91;
  charD.10 * const _92;
  doubleD.39 * _93;
  size_typeD.11502 iftmp.174_140;
  boolD.2757 _144;
  boolD.2757 _160;
  boolD.2757 _163;

;;   basic block 2, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.53931 => values_13(D)
  # DEBUG D#298ptD.0 => &values_13(D)->D.38225
  # DEBUG thisD.53932 => D#298ptD.0
  # DEBUG D#297ptD.0 => &D#298ptD.0->_M_implD.37716
  # DEBUG thisD.53933 => D#297ptD.0
  # DEBUG thisD.49752 => D#297ptD.0
  # DEBUG thisD.49750 => D#297ptD.0
  # .MEM_51 = VDEF <.MEM_12(D)>
  MEM[(struct _Vector_implD.37693 *)values_13(D)]._M_startD.37718 = 0B;
  # .MEM_52 = VDEF <.MEM_51>
  MEM[(struct _Vector_implD.37693 *)values_13(D)]._M_finishD.37719 = 0B;
  # .MEM_53 = VDEF <.MEM_52>
  MEM[(struct _Vector_implD.37693 *)values_13(D)]._M_end_of_storageD.37720 = 0B;
  # DEBUG thisD.53929 => data_15(D)
  # VUSE <.MEM_53>
  _25 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46865 => D#2ptD.0
  if (_25 == 0)
    goto <bb 40>;
  else
    goto <bb 3>;
;;    succ:       40 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 463, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53934 => data_15(D)
  # DEBUG __posD.53935 => 0
  # VUSE <.MEM_53>
  # PT = nonlocal escaped 
  _14 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # VUSE <.MEM_53>
  _18 = MEM[(const charD.10 &)_14];
  if (_18 != 123)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [51.2%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [48.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [48.8%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [51.2%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53937 => data_15(D)
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __nptrD.53925 => _14
  # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _32 = strtodD.13331 (_14, 0B);
  # .MEM_20 = VDEF <.MEM_54>
  D.38563 = _32;
  # DEBUG thisD.57281 => values_13(D)
  # DEBUG __xD.57282 => &D.38563
  # VUSE <.MEM_20>
  # PT = nonlocal escaped 
  _68 = values_13(D)->D.38225._M_implD.37716._M_finishD.37719;
  # VUSE <.MEM_20>
  # PT = nonlocal escaped 
  _69 = values_13(D)->D.38225._M_implD.37716._M_end_of_storageD.37720;
  if (_68 != _69)
    goto <bb 6>;
  else
    goto <bb 9>;
;;    succ:       6 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#547ptD.0 => &values_13(D)->D.38225._M_implD.37716
  # DEBUG D#139ptD.0 => D#547ptD.0
  # DEBUG __pD.57285 => _68
  # DEBUG __argD.57284 => &D.38563
  # DEBUG __aD.57283 => D#139ptD.0
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0
  # DEBUG __pD.57288 => _68
  # DEBUG __valD.57287 => &D.38563
  # DEBUG thisD.57286 => D#137ptD.0
  # DEBUG D#14ptD.0 => 8
  # DEBUG __pD.48066 => _68
  # DEBUG D.48067 => D#14ptD.0
  if (_68 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_101 = VDEF <.MEM_20>
  *_68 = _32;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 7, next block 56, flags: (NEW, REACHABLE)
;;    pred:       6 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_20(6), .MEM_101(7)>
;;    succ:       56 [100.0%]  (FALLTHRU)

;;   basic block 56, loop depth 0, count 0, freq 221, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  # PT = nonlocal escaped 
  _71 = _68 + 8;
  # .MEM_102 = VDEF <.MEM_34>
  values_13(D)->D.38225._M_implD.37716._M_finishD.37719 = _71;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 56, next block 10, flags: (NEW, REACHABLE)
;;    pred:       5 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53919 => values_13(D)
  # DEBUG D#140ptD.0 => &values_13(D)->D.38225._M_implD.37716._M_finishD.37719
  # DEBUG thisD.53921 => NULL
  # DEBUG __iD.53920 => D#140ptD.0
  # .MEM_99 = VDEF <.MEM_20>
  MEM[(struct __normal_iteratorD.37794 *)&D.57289] = _68;
  [LP 6] # .MEM_100 = VDEF <.MEM_99>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZNSt6vectorIdSaIdEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPdS1_EERKdD.38153 (values_13(D), D.57289, &D.38563);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 (EH,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_94 = PHI <.MEM_100(9), .MEM_102(56)>
  # .MEM_22 = VDEF <.MEM_94>
  D.38563 ={v} {CLOBBER};
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_1 = PHI <1(4), curr_2(59)>
  # nested_3 = PHI <0(4), nested_4(59)>
  # RANGE [1, 18446744073709551615]
  # curr_5 = PHI <1(4), prephitmp_58(59)>
  # .MEM_7 = PHI <.MEM_53(4), .MEM_9(59)>
  # DEBUG currD.38567 => curr_5
  # DEBUG nestedD.38566 => nested_3
  # DEBUG startD.38565 => curr_1
  # DEBUG thisD.53939 => data_15(D)
  # DEBUG __sD.53940 => "{,}"
  # DEBUG __posD.53941 => curr_5
  # DEBUG __sD.53942 => "{,}"
  [LP 7] # .MEM_55 = VDEF <.MEM_7>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _45 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmmD.12156 (data_15(D), "{,}", curr_5, 3);
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 (EH,EXECUTABLE)
<L32>: [LP 7]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG currD.38567 => _45
  if (_45 != 18446744073709551615)
    goto <bb 14>;
  else
    goto <bb 38>;
;;    succ:       14 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9775, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53944 => data_15(D)
  # DEBUG __posD.53945 => _45
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _24 = MEM[(charD.10 * *)data_15(D)];
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # PT = nonlocal escaped 
  _46 = _24 + _45;
  # VUSE <.MEM_55>
  _26 = *_46;
  if (_26 == 123)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 2737, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_27 = nested_3 + 1;
  # DEBUG nestedD.38566 => nested_27
  pretmp_64 = _45 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 1971, maybe hot
;;   Invalid sum of incoming frequencies 7038, should be 1971
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53947 => data_15(D)
  # DEBUG __posD.53948 => _45
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.46881 => D#3ptD.0
  # RANGE [0, 1]
  _160 = nested_3 != 0;
  # RANGE [0, 1]
  _163 = _26 == 125;
  # RANGE [0, 1]
  _144 = _160 & _163;
  if (_144 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 1759, maybe hot
;;   Invalid sum of incoming frequencies 3027, should be 1759
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       51 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  if (curr_1 < _45)
    goto <bb 18>;
  else
    goto <bb 36>;
;;    succ:       18 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _30 = _45 - curr_1;
  # DEBUG thisD.57290 => data_15(D)
  # DEBUG __posD.57291 => curr_1
  # DEBUG __nD.57292 => _30
  # DEBUG thisD.57295 => data_15(D)
  # DEBUG __posD.57294 => curr_1
  # DEBUG __sD.57293 => "basic_string::substr"
  # VUSE <.MEM_55>
  _21 = MEM[(long unsigned intD.14 *)data_15(D) + 8B];
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  if (curr_1 > _21)
    goto <bb 19>;
  else
    goto <bb 21>;
;;    succ:       19 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_42 = PHI <curr_1(18)>
  # _76 = PHI <_21(18)>
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46997 => D#2ptD.0
  [LP 8] # .MEM_119 = VDEF <.MEM_55>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZSt24__throw_out_of_range_fmtPKczD.2864 ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", curr_42, _76);
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L33>: [LP 8]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.57296 => &tokenD.38568
  # DEBUG __strD.57297 => data_15(D)
  # DEBUG __posD.57298 => curr_1
  # DEBUG __nD.57299 => _30
  # DEBUG thisD.57301 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.57302 => &tokenD.38568
  # DEBUG D#401ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG thisD.57305 => D#401ptD.0
  # DEBUG __datD.57304 => &tokenD.38568.D.11539._M_local_bufD.11541
  # DEBUG __aD.57303 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#401ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_103 = VDEF <.MEM_55>
  MEM[(struct _Alloc_hiderD.11518 *)&tokenD.38568]._M_pD.11525 = &tokenD.38568.D.11539._M_local_bufD.11541;
  # DEBUG thisD.57306 => NULL
  # DEBUG thisD.51465 => NULL
  # DEBUG D#3ptD.0 => data_15(D)
  # DEBUG thisD.51462 => D#3ptD.0
  # DEBUG thisD.57322 => data_15(D)
  # DEBUG __posD.57321 => curr_1
  # DEBUG __sD.57320 => "basic_string::basic_string"
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46994 => D#2ptD.0
  # PT = nonlocal escaped 
  __start_74 = _24 + curr_1;
  # DEBUG __startD.57307 => __start_74
  # DEBUG thisD.57310 => data_15(D)
  # DEBUG __posD.57309 => curr_1
  # DEBUG __offD.57308 => _30
  # DEBUG D#2ptD.0 => data_15(D)
  # DEBUG thisD.46904 => D#2ptD.0
  # RANGE [0, 18446744073709551615]
  _75 = _21 - curr_1;
  # DEBUG __testoffD.57311 => _75 > _30
  # RANGE [0, 18446744073709551615]
  iftmp.174_140 = MIN_EXPR <_30, _75>;
  # PT = nonlocal escaped 
  _77 = __start_74 + iftmp.174_140;
  # DEBUG thisD.57314 => &tokenD.38568
  # DEBUG __begD.57313 => __start_74
  # DEBUG __endD.57312 => _77
  # DEBUG thisD.57318 => &tokenD.38568
  # DEBUG __begD.57317 => __start_74
  # DEBUG __endD.57316 => _77
  # DEBUG thisD.57323 => &tokenD.38568
  # DEBUG __begD.57324 => __start_74
  # DEBUG __endD.57325 => _77
  # DEBUG __ptrD.51229 => __start_74
  # RANGE [0, 1]
  _19 = _77 != 0B;
  # RANGE [0, 1]
  _82 = __start_74 == 0B;
  # RANGE [0, 1]
  _73 = _19 & _82;
  if (_73 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;
;;    succ:       53 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       55 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 9] # .MEM_105 = VDEF <.MEM_104>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _83 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&tokenD.38568, &__dnewD.57326, 0);
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 (EH,EXECUTABLE)
<L34>: [LP 9]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 148, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &tokenD.38568
  # DEBUG __pD.57345 => _83
  # DEBUG thisD.57344 => D#6ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  MEM[(charD.10 * *)&tokenD.38568] = _83;
  # VUSE <.MEM_106>
  __dnew.111_84 = __dnewD.57326;
  # DEBUG D#7ptD.0 => &tokenD.38568
  # DEBUG __capacityD.57347 => __dnew.111_84
  # DEBUG thisD.57346 => D#7ptD.0
  # .MEM_107 = VDEF <.MEM_106>
  MEM[(size_typeD.11502 *)&tokenD.38568 + 16B] = __dnew.111_84;
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57329 => _83
  # DEBUG __k1D.57328 => __start_74
  # DEBUG __k2D.57327 => _77
  # DEBUG __dD.57332 => _83
  # DEBUG __sD.57331 => __start_74
  # DEBUG __nD.57330 => iftmp.174_140
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 362, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       55 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57329 => &tokenD.38568.D.11539._M_local_bufD.11541
  # DEBUG __k1D.57328 => __start_74
  # DEBUG __k2D.57327 => _77
  # DEBUG __dD.57332 => &tokenD.38568.D.11539._M_local_bufD.11541
  # DEBUG __sD.57331 => __start_74
  # DEBUG __nD.57330 => iftmp.174_140
  if (iftmp.174_140 == 1)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 193, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_104>
  _86 = MEM[(const char_typeD.6439 &)__start_74];
  # DEBUG D#13ptD.0 => __start_74
  # DEBUG __c1D.57337 => &tokenD.38568.D.11539._M_local_bufD.11541
  # DEBUG __c2D.57336 => D#13ptD.0
  # .MEM_108 = VDEF <.MEM_104>
  MEM[(char_typeD.6439 &)&tokenD.38568 + 16] = _86;
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 317, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.38568 } (escaped)
  # _92 = PHI <&tokenD.38568.D.11539._M_local_bufD.11541(25), _83(24)>
  # .MEM_72 = PHI <.MEM_104(25), .MEM_107(24)>
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.57329 => _92
  # DEBUG __k1D.57328 => __start_74
  # DEBUG __k2D.57327 => _77
  # DEBUG __dD.57332 => _92
  # DEBUG __sD.57331 => __start_74
  # DEBUG __nD.57330 => iftmp.174_140
  # DEBUG __s1D.57335 => _92
  # DEBUG __s2D.57334 => __start_74
  # DEBUG __nD.57333 => iftmp.174_140
  # .MEM_109 = VDEF <.MEM_72>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  memcpyD.992 (_92, __start_74, iftmp.174_140);
  # VUSE <.MEM_109>
  pretmp_59 = __dnewD.57326;
  # VUSE <.MEM_109>
  pretmp_61 = MEM[(charD.10 * *)&tokenD.38568];
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_96 = PHI <.MEM_108(26), .MEM_109(27)>
  # prephitmp_60 = PHI <iftmp.174_140(26), pretmp_59(27)>
  # PT = nonlocal escaped null { D.38568 } (escaped)
  # prephitmp_50 = PHI <&tokenD.38568.D.11539._M_local_bufD.11541(26), pretmp_61(27)>
  # DEBUG D#804ptD.0 => __dnewD.57326
  # DEBUG thisD.57339 => &tokenD.38568
  # DEBUG __nD.57338 => D#804ptD.0
  # DEBUG D#5ptD.0 => &tokenD.38568
  # DEBUG __lengthD.57341 => D#804ptD.0
  # DEBUG thisD.57340 => D#5ptD.0
  # .MEM_110 = VDEF <.MEM_96>
  MEM[(size_typeD.11502 *)&tokenD.38568 + 8B] = prephitmp_60;
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.38568 } (escaped)
  _89 = prephitmp_50 + prephitmp_60;
  # DEBUG __c1D.57343 => _89
  # DEBUG __c2D.57342 => D#13ptD.0
  # .MEM_111 = VDEF <.MEM_110>
  MEM[(char_typeD.6439 &)_89] = 0;
  # .MEM_112 = VDEF <.MEM_111>
  __dnewD.57326 ={v} {CLOBBER};
  # DEBUG thisD.53950 => &tokenD.38568
  # VUSE <.MEM_112>
  # PT = nonlocal escaped null { D.38568 } (escaped)
  _47 = MEM[(charD.10 * *)&tokenD.38568];
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.46877 => D#3ptD.0
  # DEBUG __nptrD.53927 => _47
  # .MEM_56 = VDEF <.MEM_112>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _28 = strtodD.13331 (_47, 0B);
  # .MEM_33 = VDEF <.MEM_56>
  D.38570 = _28;
  # DEBUG thisD.57352 => values_13(D)
  # DEBUG __xD.57353 => &D.38570
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _90 = values_13(D)->D.38225._M_implD.37716._M_finishD.37719;
  # VUSE <.MEM_33>
  # PT = nonlocal escaped 
  _91 = values_13(D)->D.38225._M_implD.37716._M_end_of_storageD.37720;
  if (_90 != _91)
    goto <bb 29>;
  else
    goto <bb 32>;
;;    succ:       29 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#547ptD.0 => &values_13(D)->D.38225._M_implD.37716
  # DEBUG D#139ptD.0 => D#547ptD.0
  # DEBUG __pD.57356 => _90
  # DEBUG __argD.57355 => &D.38570
  # DEBUG __aD.57354 => D#139ptD.0
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0
  # DEBUG __pD.57359 => _90
  # DEBUG __valD.57358 => &D.38570
  # DEBUG thisD.57357 => D#137ptD.0
  # DEBUG D#14ptD.0 => 8
  # DEBUG __pD.48066 => _90
  # DEBUG D.48067 => D#14ptD.0
  if (_90 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 427, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_115 = VDEF <.MEM_33>
  *_90 = _28;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 30, next block 57, flags: (NEW, REACHABLE)
;;    pred:       29 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_33(29), .MEM_115(30)>
;;    succ:       57 [100.0%]  (FALLTHRU)

;;   basic block 57, loop depth 1, count 0, freq 475, maybe hot
;;    prev block 31, next block 32, flags: (NEW)
;;    pred:       31 [100.0%]  (FALLTHRU)
  # PT = nonlocal escaped 
  _93 = _90 + 8;
  # .MEM_116 = VDEF <.MEM_97>
  values_13(D)->D.38225._M_implD.37716._M_finishD.37719 = _93;
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 34, maybe hot
;;    prev block 57, next block 33, flags: (NEW, REACHABLE)
;;    pred:       28 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53919 => values_13(D)
  # DEBUG D#140ptD.0 => &values_13(D)->D.38225._M_implD.37716._M_finishD.37719
  # DEBUG thisD.53921 => NULL
  # DEBUG __iD.53920 => D#140ptD.0
  # .MEM_113 = VDEF <.MEM_33>
  MEM[(struct __normal_iteratorD.37794 *)&D.57360] = _90;
  [LP 4] # .MEM_114 = VDEF <.MEM_113>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZNSt6vectorIdSaIdEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPdS1_EERKdD.38153 (values_13(D), D.57360, &D.38570);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 (EH,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_114(32), .MEM_116(57)>
  # .MEM_35 = VDEF <.MEM_98>
  D.38570 ={v} {CLOBBER};
  # DEBUG thisD.53952 => &tokenD.38568
  # DEBUG thisD.53953 => &tokenD.38568
  # DEBUG thisD.53962 => &tokenD.38568
  # VUSE <.MEM_35>
  # PT = nonlocal escaped null { D.38568 } (escaped)
  _48 = MEM[(charD.10 * *)&tokenD.38568];
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.53963 => &tokenD.38568
  if (&tokenD.38568.D.11539._M_local_bufD.11541 != _48)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 356, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38568.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.53955 => &tokenD.38568
  # DEBUG __sizeD.53954 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38568
  # DEBUG D#183ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.53958 => _48
  # DEBUG __aD.53956 => D#181ptD.0
  # DEBUG __nD.53957 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.53961 => _48
  # DEBUG thisD.53959 => D#177ptD.0
  # DEBUG D.53960 => D#178ptD.0
  # .MEM_57 = VDEF <.MEM_35>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZdlPvD.2766 (_48);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 510, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_35(33), .MEM_57(34)>
  # DEBUG D#187ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG thisD.53964 => D#187ptD.0
  # DEBUG thisD.53965 => D#187ptD.0
  # DEBUG thisD.53966 => D#187ptD.0
  # .MEM_37 = VDEF <.MEM_44>
  tokenD.38568 ={v} {CLOBBER};
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 35, next block 58, flags: (NEW, REACHABLE)
;;    pred:       17 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_55(17), .MEM_37(35)>
;;    succ:       58 [100.0%]  (FALLTHRU)

;;   basic block 58, loop depth 1, count 0, freq 1759, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # RANGE [1, 18446744073709551615]
  curr_41 = _45 + 1;
  # DEBUG startD.38565 => curr_41
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 9774, maybe hot
;;   Invalid sum of incoming frequencies 11042, should be 9774
;;    prev block 58, next block 59, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  # curr_2 = PHI <curr_1(15), curr_1(50), curr_1(52), curr_41(58)>
  # nested_4 = PHI <nested_27(15), nested_29(50), nested_3(52), 0(58)>
  # .MEM_9 = PHI <.MEM_55(15), .MEM_55(50), .MEM_55(52), .MEM_8(58)>
  # RANGE [1, 18446744073709551615]
  # prephitmp_58 = PHI <pretmp_64(15), pretmp_65(50), pretmp_66(52), curr_41(58)>
;;    succ:       59 [100.0%]  (FALLTHRU)

;;   basic block 59, loop depth 1, count 0, freq 9774, maybe hot
;;    prev block 37, next block 38, flags: (NEW)
;;    pred:       37 [100.0%]  (FALLTHRU)
  # DEBUG nestedD.38566 => nested_4
  # DEBUG startD.38565 => curr_2
  # DEBUG currD.38567 => _45 + 1
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 59, next block 39, flags: (NEW, REACHABLE)
;;    pred:       13 [2.2%]  (FALSE_VALUE,EXECUTABLE)
  # nested_139 = PHI <nested_3(13)>
  if (nested_139 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_43 = VDEF <.MEM_55>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  __assert_failD.14402 ("!nested", "config_utils.cpp", 444, &_ZZ14tokenize_floatRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.38571);
;;    succ:      

;;   basic block 40, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 39, next block 61, flags: (NEW)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_161 = PHI <.MEM_53(2), .MEM_55(38)>
;;    succ:       61 [100.0%]  (FALLTHRU)

;;   basic block 61, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 40, next block 41, flags: (NEW)
;;    pred:       40 [100.0%]  (FALLTHRU)
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 61, next block 60, flags: (NEW, REACHABLE)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_10 = PHI <.MEM_161(61), .MEM_22(10)>
;;    succ:       60 [100.0%]  (FALLTHRU)

;;   basic block 60, loop depth 0, count 0, freq 758, maybe hot
;;    prev block 41, next block 42, flags: (NEW)
;;    pred:       41 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_10>
  return values_13(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 60, next block 43, flags: (NEW, REACHABLE)
;;    pred:       32 (EH,EXECUTABLE)
<L28>: [LP 4]
  # .MEM_38 = VDEF <.MEM_114>
  D.38570 ={v} {CLOBBER};
  # DEBUG thisD.53967 => &tokenD.38568
  # DEBUG thisD.53968 => &tokenD.38568
  # DEBUG thisD.53977 => &tokenD.38568
  # VUSE <.MEM_38>
  # PT = nonlocal escaped null { D.38568 } (escaped)
  _36 = MEM[(charD.10 * *)&tokenD.38568];
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.53978 => &tokenD.38568
  if (&tokenD.38568.D.11539._M_local_bufD.11541 != _36)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => tokenD.38568.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.53970 => &tokenD.38568
  # DEBUG __sizeD.53969 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &tokenD.38568
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &tokenD.38568
  # DEBUG D#183ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.53973 => _36
  # DEBUG __aD.53971 => D#181ptD.0
  # DEBUG __nD.53972 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.53976 => _36
  # DEBUG thisD.53974 => D#177ptD.0
  # DEBUG D.53975 => D#178ptD.0
  # .MEM_62 = VDEF <.MEM_38>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZdlPvD.2766 (_36);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_38(42), .MEM_62(43)>
  # DEBUG D#187ptD.0 => &tokenD.38568._M_dataplusD.11519
  # DEBUG thisD.53979 => D#187ptD.0
  # DEBUG thisD.53980 => D#187ptD.0
  # DEBUG thisD.53981 => D#187ptD.0
  [LP 10] resx 5
;;    succ:       45 (EH,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 (EH,EXECUTABLE)
<L35>: [LP 10]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       9 (EH,EXECUTABLE)
<L31>: [LP 6]
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_49(45), .MEM_105(23), .MEM_55(12), .MEM_100(46), .MEM_119(20), .MEM_117(54)>
<L30>:
  # .MEM_40 = VDEF <.MEM_11>
  tokenD.38568 ={v} {CLOBBER};
  # .MEM_23 = VDEF <.MEM_40>
  D.38563 ={v} {CLOBBER};
  # DEBUG thisD.53982 => values_13(D)
  # DEBUG D#289ptD.0 => &values_13(D)->D.38225
  # DEBUG thisD.49711 => D#289ptD.0
  # DEBUG D#292ptD.0 => values_13(D)->D.38225._M_implD.37716._M_finishD.37719
  # DEBUG D#291ptD.0 => values_13(D)->D.38225._M_implD.37716._M_startD.37718
  # DEBUG __firstD.49708 => D#291ptD.0
  # DEBUG __lastD.49709 => D#292ptD.0
  # DEBUG D.49710 => NULL
  # DEBUG D#171ptD.0 => D#291ptD.0
  # DEBUG D#172ptD.0 => D#292ptD.0
  # DEBUG __firstD.48327 => D#171ptD.0
  # DEBUG __lastD.48326 => D#172ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0
  # DEBUG D#167ptD.0 => D#169ptD.0
  # DEBUG D#168ptD.0 => D#170ptD.0
  # DEBUG D.48316 => D#167ptD.0
  # DEBUG D.48315 => D#168ptD.0
  # DEBUG D#290ptD.0 => &values_13(D)->D.38225
  # DEBUG thisD.53983 => D#290ptD.0
  # DEBUG D#288ptD.0 => D#290ptD.0->_M_implD.37716._M_end_of_storageD.37720
  # DEBUG D#287ptD.0 => (long intD.12) D#288ptD.0
  # VUSE <.MEM_23>
  # PT = nonlocal escaped 
  _39 = MEM[(struct _Vector_baseD.37483 *)values_13(D)]._M_implD.37716._M_startD.37718;
  # DEBUG D#286ptD.0 => (long intD.12) _39
  # DEBUG D#285ptD.0 => D#287ptD.0 - D#286ptD.0
  # DEBUG D#284ptD.0 => D#285ptD.0 /[ex] 8
  # DEBUG D#283ptD.0 => (long unsigned intD.14) D#284ptD.0
  # DEBUG thisD.53986 => D#290ptD.0
  # DEBUG __pD.53985 => _39
  # DEBUG __nD.53984 => D#283ptD.0
  if (_39 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#281ptD.0 => &D#290ptD.0->_M_implD.37716
  # DEBUG D#279ptD.0 => D#281ptD.0
  # DEBUG D#280ptD.0 => D#283ptD.0
  # DEBUG __pD.53990 => _39
  # DEBUG __aD.53988 => D#279ptD.0
  # DEBUG __nD.53989 => D#280ptD.0
  # DEBUG D#278ptD.0 => D#280ptD.0
  # DEBUG D#277ptD.0 => D#279ptD.0
  # DEBUG D#275ptD.0 => D#277ptD.0
  # DEBUG D#276ptD.0 => D#278ptD.0
  # DEBUG __pD.53993 => _39
  # DEBUG thisD.53991 => D#275ptD.0
  # DEBUG D.53992 => D#276ptD.0
  # .MEM_67 = VDEF <.MEM_23>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZdlPvD.2766 (_39);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       47 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#282ptD.0 => &D#290ptD.0->_M_implD.37716
  # DEBUG thisD.53994 => D#282ptD.0
  # DEBUG thisD.53995 => D#282ptD.0
  # DEBUG thisD.53996 => D#282ptD.0
  resx 1
;;    succ:      

;;   basic block 50, loop depth 1, count 0, freq 3519, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 3519
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  nested_29 = nested_3 + -1;
  # DEBUG nestedD.38566 => nested_29
  pretmp_65 = _45 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 6053, maybe hot
;;   Invalid sum of incoming frequencies 986, should be 6053
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (nested_3 == 0)
    goto <bb 17>;
  else
    goto <bb 52>;
;;    succ:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 3027, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_66 = _45 + 1;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 65, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 434, should be 65
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       21 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_117 = VDEF <.MEM_103>
  # USE = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  # CLB = nonlocal null { D.38563 D.38568 D.38570 D.38571 D.57326 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       54 (EH,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 (EH,EXECUTABLE)
<L36>: [LP 1]
  goto <bb 47> (<L30>);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 510, maybe hot
;;   Invalid sum of incoming frequencies 77, should be 510
;;    prev block 54, next block 1, flags: (NEW, REACHABLE)
;;    pred:       21 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.57349 => __start_74
  # DEBUG __lastD.57348 => _77
  # DEBUG D#393ptD.0 => &__firstD.57349
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.57351 => __start_74
  # DEBUG __lastD.57350 => _77
  # .MEM_104 = VDEF <.MEM_103>
  __dnewD.57326 = iftmp.174_140;
  if (iftmp.174_140 > 15)
    goto <bb 22>;
  else
    goto <bb 25>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [71.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, funcdef_no=2554, decl_uid=32582, cgraph_uid=1240, symbol_order=1242)


Pass statistics:
----------------

std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_treeD.32258 * const thisD.32583, const struct key_typeD.32284 & __kD.32584)
{
  const size_typeD.11502 __sizeD.57414;
  const size_typeD.11502 __osizeD.57415;
  const size_typeD.11502 __lenD.57416;
  intD.9 __rD.57417;
  const difference_typeD.11503 __dD.57420;
  intD.9 D.57426;
  const size_typeD.11502 __sizeD.57399;
  const size_typeD.11502 __osizeD.57400;
  const size_typeD.11502 __lenD.57401;
  intD.9 __rD.57402;
  const difference_typeD.11503 __dD.57405;
  intD.9 D.57411;
  struct _Rb_tree_node_baseD.27676 * const __j$_M_nodeD.49985;
  boolD.2757 __compD.42436;
  struct _Rb_tree_node_baseD.27676 * const D.42440;
  struct _Rb_tree_node_baseD.27676 * const D.42441;
  struct pairD.28129 D.43295;
  const size_typeD.11502 pretmp_1;
  charD.10 * const prephitmp_13;
  struct _Rb_tree_nodeD.32262 * _17;
  struct _Rb_tree_node_baseD.27676 * _21;
  struct _Rb_tree_node_baseD.27676 * _22;
  struct _Rb_tree_node_baseD.27676 * _23;
  struct _Rb_tree_node_baseD.27676 * _24;
  const size_typeD.11502 _34;
  charD.10 * const _37;
  long unsigned intD.14 _40;
  charD.10 * const pretmp_44;
  long unsigned intD.14 _52;
  const size_typeD.11502 prephitmp_61;
  charD.10 * const pretmp_64;
  charD.10 * const prephitmp_65;
  const size_typeD.11502 pretmp_67;
  const size_typeD.11502 pretmp_76;
  const size_typeD.11502 prephitmp_77;
  const size_typeD.11502 prephitmp_78;
  const size_typeD.11502 pretmp_79;
  charD.10 * const pretmp_80;
  charD.10 * const _83;
  const size_typeD.11502 _84;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _21 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 16B];
  # DEBUG D#35ptD.0 => this_9(D)
  # DEBUG thisD.49937 => D#35ptD.0
  # DEBUG __xD.42434 => NULL
  # DEBUG thisD.49934 => this_9(D)
  # DEBUG D#831ptD.0 => &this_9(D)->_M_implD.32337._M_headerD.32503
  # DEBUG __yD.42435 => NULL
  # DEBUG __compD.42436 => 1
  # DEBUG __compD.42436 => 1
  # DEBUG __yD.42435 => D#831ptD.0
  # DEBUG __xD.42434 => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _17 = &this_9(D)->_M_implD.32337._M_headerD.32503;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  pretmp_1 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  pretmp_44 = MEM[(charD.10 * *)__k_12(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _6 = PHI <_22(13), _23(12)>
  # RANGE [0, 1]
  # __comp_56 = PHI <0(13), 1(12)>
  # DEBUG __compD.42436 => __comp_56
  # DEBUG __yD.42435 => _10
  # DEBUG __xD.42434 => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _10 = PHI <_21(4), _6(6)>
  # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
  # DEBUG __compD.42436 => 1
  # DEBUG __xD.42434 => _10
  # DEBUG __yD.42435 => _10
  # DEBUG __xD.49945 => _10
  # DEBUG __xD.48708 => _10
  # DEBUG thisD.48709 => _10
  # DEBUG D#204ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)_10]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.49947 => D#204ptD.0
  # DEBUG thisD.49946 => D#149ptD.0
  # DEBUG D#811ptD.0 => &MEM[(const struct pairD.32038 &)_10 + 32].firstD.35538
  # DEBUG D#326ptD.0 => &this_9(D)->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#326ptD.0
  # DEBUG __xD.49939 => __k_12(D)
  # DEBUG __yD.49940 => D#811ptD.0
  # DEBUG thisD.49941 => D#203ptD.0
  # DEBUG __lhsD.49943 => __k_12(D)
  # DEBUG __rhsD.49942 => D#811ptD.0
  # DEBUG thisD.57397 => __k_12(D)
  # DEBUG __strD.57398 => D#811ptD.0
  # DEBUG D#830ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57399 => D#830ptD.0
  # VUSE <.MEM_47>
  _34 = MEM[(long unsigned intD.14 *)_10 + 40B];
  # DEBUG D#2ptD.0 => D#811ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57400 => _34
  # DEBUG __aD.57407 => &__sizeD.57399
  # DEBUG __bD.57406 => &__osizeD.57400
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __lenD.57401 => D#809ptD.0
  # DEBUG thisD.48671 => D#811ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _37 = MEM[(charD.10 * *)_10 + 32B];
  # DEBUG D#3ptD.0 => D#811ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#829ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57410 => D#829ptD.0
  # DEBUG __s2D.57409 => _37
  # DEBUG __nD.57408 => D#809ptD.0
  # VUSE <.MEM_47>
  # USE = nonlocal escaped 
  __r_39 = memcmpD.989 (pretmp_44, _37, __len_87);
  # DEBUG __rD.57402 => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57404 => D#830ptD.0
  # DEBUG __n2D.57403 => _34
  # RANGE [0, 18446744073709551615]
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_typeD.11503) _40;
  # DEBUG __dD.57405 => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_42 = (intD.9) _40;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __rD.57402 => __r_43
  # DEBUG D#817ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57399 => D#817ptD.0
  # DEBUG D#818ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57400 => D#818ptD.0
  # DEBUG __compD.42436 => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57402 => NULL
  # DEBUG __compD.42436 => 1
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 16B];
  # DEBUG D#44ptD.0 => _10
  # DEBUG __xD.49950 => D#44ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57402 => NULL
  # DEBUG __compD.42436 => 0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 24B];
  # DEBUG D#43ptD.0 => _10
  # DEBUG __xD.49953 => D#43ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # PT = nonlocal escaped 
  # _83 = PHI <_37(5)>
  # RANGE [0, 1]
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>
  # DEBUG thisD.49955 => &__jD.42437
  # DEBUG __xD.49956 => _85
  # DEBUG __j$_M_nodeD.49985 => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [55.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_47(14), .MEM_8(D)(3)>
  # PT = nonlocal escaped 
  # _57 = PHI <_85(14), _17(3)>
  # DEBUG thisD.49955 => &__jD.42437
  # DEBUG __xD.49956 => _57
  # DEBUG __j$_M_nodeD.49985 => _57
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 24B];
  # DEBUG D#54ptD.0 => this_9(D)
  # DEBUG thisD.49961 => D#54ptD.0
  # DEBUG thisD.47453 => NULL
  # DEBUG __xD.47452 => _24
  # DEBUG thisD.49957 => &__jD.42437
  # DEBUG __xD.49958 => &D.42439
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 46, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.49964 => &D.42442
  # DEBUG __aD.49965 => &D.42440
  # DEBUG __bD.49966 => &D.42441
  # .MEM_31 = VDEF <.MEM_59>
  MEM[(struct pairD.28129 *)&D.43295] = 0B;
  # .MEM_29 = VDEF <.MEM_31>
  MEM[(struct pairD.28129 *)&D.43295 + 8B] = _57;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 404, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.49967 => &__jD.42437
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  __j$_M_node_25 = _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_baseD.27725 (_57);
  # DEBUG __j$_M_nodeD.49985 => __j$_M_node_25
  # VUSE <.MEM_59>
  pretmp_67 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_59>
  pretmp_80 = MEM[(charD.10 * *)__k_12(D)];
  # VUSE <.MEM_59>
  pretmp_79 = MEM[(long unsigned intD.14 *)__j$_M_node_25 + 40B];
  # VUSE <.MEM_59>
  pretmp_64 = MEM[(charD.10 * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 854, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       14 [55.0%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_20 = PHI <_85(14), __j$_M_node_25(17)>
  # .MEM_58 = PHI <.MEM_47(14), .MEM_59(17)>
  # PT = nonlocal escaped 
  # _5 = PHI <_85(14), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(14), pretmp_67(17)>
  # PT = nonlocal escaped 
  # prephitmp_13 = PHI <pretmp_44(14), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(14), pretmp_79(17)>
  # PT = nonlocal escaped 
  # prephitmp_65 = PHI <_83(14), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(14), pretmp_76(17)>
  # DEBUG __j$_M_nodeD.49985 => __j$_M_node_20
  # DEBUG __xD.49975 => __j$_M_node_20
  # DEBUG __xD.48170 => __j$_M_node_20
  # DEBUG thisD.48171 => __j$_M_node_20
  # DEBUG D#150ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__j$_M_node_20]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#150ptD.0
  # DEBUG __xD.49977 => D#150ptD.0
  # DEBUG thisD.49976 => D#149ptD.0
  # DEBUG D#812ptD.0 => &MEM[(const struct pairD.32038 &)__j$_M_node_20 + 32].firstD.35538
  # DEBUG D#325ptD.0 => &this_9(D)->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#325ptD.0
  # DEBUG __xD.49969 => D#812ptD.0
  # DEBUG __yD.49970 => __k_12(D)
  # DEBUG thisD.49971 => D#203ptD.0
  # DEBUG __lhsD.49973 => D#812ptD.0
  # DEBUG __rhsD.49972 => __k_12(D)
  # DEBUG thisD.57412 => D#812ptD.0
  # DEBUG __strD.57413 => __k_12(D)
  # DEBUG D#828ptD.0 => MEM[(long unsigned intD.14 *)__j$_M_node_20 + 40B]
  # DEBUG D#2ptD.0 => D#812ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57414 => D#828ptD.0
  # DEBUG D#827ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57415 => D#827ptD.0
  # DEBUG __aD.57422 => &__sizeD.57414
  # DEBUG __bD.57421 => &__osizeD.57415
  # DEBUG __lenD.57416 => D#810ptD.0
  # DEBUG thisD.48671 => __k_12(D)
  # DEBUG D#826ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#825ptD.0 => MEM[(charD.10 * *)__j$_M_node_20 + 32B]
  # DEBUG D#3ptD.0 => D#812ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57425 => D#825ptD.0
  # DEBUG __s2D.57424 => D#826ptD.0
  # DEBUG __nD.57423 => D#810ptD.0
  # VUSE <.MEM_58>
  # USE = nonlocal escaped 
  __r_51 = memcmpD.989 (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __rD.57417 => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57419 => D#828ptD.0
  # DEBUG __n2D.57418 => D#827ptD.0
  # RANGE [0, 18446744073709551615]
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_typeD.11503) _52;
  # DEBUG __dD.57420 => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;
;;    succ:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 130, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_54 = (intD.9) _52;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 462, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __rD.57417 => __r_55
  # DEBUG D#823ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57414 => D#823ptD.0
  # DEBUG D#824ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57415 => D#824ptD.0
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57417 => NULL
  # DEBUG thisD.49979 => &D.42445
  # DEBUG __aD.49980 => &D.42443
  # DEBUG __bD.49981 => &D.42444
  # .MEM_28 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.43295] = 0B;
  # .MEM_27 = VDEF <.MEM_28>
  MEM[(struct pairD.28129 *)&D.43295 + 8B] = _5;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57417 => NULL
  # DEBUG thisD.49982 => &D.42447
  # DEBUG __aD.49983 => &__jD.42437._M_nodeD.35517
  # DEBUG __bD.49984 => &D.42446
  # .MEM_11 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.43295] = __j$_M_node_20;
  # .MEM_30 = VDEF <.MEM_11>
  MEM[(struct pairD.28129 *)&D.43295 + 8B] = 0B;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 1, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_29(16), .MEM_27(23), .MEM_30(24)>
  # DEBUG D#324ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49985 => D#324ptD.0
  # VUSE <.MEM_7>
  return D.43295;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B]
Creating dr for MEM[(long unsigned int *)__k_12(D) + 8B]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__k_12(D) + 8B]
Creating dr for MEM[(char * *)__k_12(D)]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__k_12(D)]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct pair *)&D.43295]
analyze_innermost: success.
	base_address: &D.43295
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43295]
Creating dr for MEM[(struct pair *)&D.43295 + 8B]
analyze_innermost: success.
	base_address: &D.43295
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43295 + 8B]
Creating dr for MEM[(struct pair *)&D.43295]
analyze_innermost: success.
	base_address: &D.43295
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43295]
Creating dr for MEM[(struct pair *)&D.43295 + 8B]
analyze_innermost: success.
	base_address: &D.43295
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43295 + 8B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B]
Creating dr for MEM[(struct pair *)&D.43295]
analyze_innermost: success.
	base_address: &D.43295
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43295]
Creating dr for MEM[(struct pair *)&D.43295 + 8B]
analyze_innermost: success.
	base_address: &D.43295
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43295 + 8B]
Creating dr for MEM[(long unsigned int *)__k_12(D) + 8B]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__k_12(D) + 8B]
Creating dr for MEM[(char * *)__k_12(D)]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__k_12(D)]
Creating dr for MEM[(long unsigned int *)__j$_M_node_25 + 40B]
analyze_innermost: success.
	base_address: __j$_M_node_25
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__j$_M_node_25 + 40B]
Creating dr for MEM[(char * *)__j$_M_node_25 + 32B]
analyze_innermost: success.
	base_address: __j$_M_node_25
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__j$_M_node_25 + 32B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:8)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:32, LOOPS:1, CONDITIONS:12, STMTS:188)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # VUSE <.MEM_8(D)>
    _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
    # DEBUG D#35 => this_9(D)
    # DEBUG this => D#35
    # DEBUG __x => NULL
    # DEBUG this => this_9(D)
    # DEBUG D#831 => &this_9(D)->_M_impl._M_header
    # DEBUG __y => NULL
    # DEBUG __comp => 1
    # DEBUG __comp => 1
    # DEBUG __y => D#831
    # DEBUG __x => _21
    if (_21 == 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_15 })
  {
    <bb 3>:
    _17 = &this_9(D)->_M_impl._M_header;
    goto <bb 15>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 4>:
    # VUSE <.MEM_8(D)>
    pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
    # VUSE <.MEM_8(D)>
    pretmp_44 = MEM[(char * *)__k_12(D)];
    goto <bb 7>;

  }
  bb_14 (preds = {bb_5 }, succs = {bb_26 })
  {
    <bb 14>:
    # _85 = PHI <_10(5)>
    # _84 = PHI <_34(5)>
    # _83 = PHI <_37(5)>
    # __comp_82 = PHI <__comp_56(5)>
    # __len_81 = PHI <__len_87(5)>

  }
  bb_26 (preds = {bb_14 }, succs = {bb_15 bb_18 })
  {
    <bb 26>:
    # DEBUG this => &__j
    # DEBUG __x => _85
    # DEBUG __j$_M_node => _85
    if (__comp_82 != 0)
      goto <bb 15>;
    else
      goto <bb 18>;

  }
  bb_15 (preds = {bb_26 bb_3 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_59 = PHI <.MEM_47(26), .MEM_8(D)(3)>
    # _57 = PHI <_85(26), _17(3)>
    # DEBUG this => &__j
    # DEBUG __x => _57
    # DEBUG __j$_M_node => _57
    # VUSE <.MEM_59>
    _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
    # DEBUG D#54 => this_9(D)
    # DEBUG this => D#54
    # DEBUG this => NULL
    # DEBUG __x => _24
    # DEBUG this => &__j
    # DEBUG __x => &D.42439
    if (_24 == _57)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_25 })
  {
    <bb 16>:
    # DEBUG this => &D.42442
    # DEBUG __a => &D.42440
    # DEBUG __b => &D.42441
    # .MEM_31 = VDEF <.MEM_59>
    MEM[(struct pair *)&D.43295] = 0B;
    # .MEM_29 = VDEF <.MEM_31>
    MEM[(struct pair *)&D.43295 + 8B] = _57;
    goto <bb 25>;

  }
  bb_17 (preds = {bb_15 }, succs = {bb_18 })
  {
    <bb 17>:
    # DEBUG this => &__j
    # VUSE <.MEM_59>
    __j$_M_node_25 = std::_Rb_tree_decrement (_57);
    # DEBUG __j$_M_node => __j$_M_node_25
    # VUSE <.MEM_59>
    pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
    # VUSE <.MEM_59>
    pretmp_80 = MEM[(char * *)__k_12(D)];
    # VUSE <.MEM_59>
    pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
    # VUSE <.MEM_59>
    pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
    pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  }
  bb_18 (preds = {bb_26 bb_17 }, succs = {bb_19 bb_22 })
  {
    <bb 18>:
    # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
    # .MEM_58 = PHI <.MEM_47(26), .MEM_59(17)>
    # _5 = PHI <_85(26), _57(17)>
    # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
    # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
    # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
    # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
    # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
    # DEBUG __j$_M_node => __j$_M_node_20
    # DEBUG __x => __j$_M_node_20
    # DEBUG __x => __j$_M_node_20
    # DEBUG this => __j$_M_node_20
    # DEBUG D#150 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
    # DEBUG __r => D#150
    # DEBUG __x => D#150
    # DEBUG this => D#149
    # DEBUG D#812 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
    # DEBUG D#325 => &this_9(D)->_M_impl._M_key_compare
    # DEBUG D#203 => D#325
    # DEBUG __x => D#812
    # DEBUG __y => __k_12(D)
    # DEBUG this => D#203
    # DEBUG __lhs => D#812
    # DEBUG __rhs => __k_12(D)
    # DEBUG this => D#812
    # DEBUG __str => __k_12(D)
    # DEBUG D#828 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
    # DEBUG D#2 => D#812
    # DEBUG this => D#2
    # DEBUG __size => D#828
    # DEBUG D#827 => MEM[(long unsigned int *)__k_12(D) + 8B]
    # DEBUG D#2 => __k_12(D)
    # DEBUG this => D#2
    # DEBUG __osize => D#827
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    # DEBUG __len => D#810
    # DEBUG this => __k_12(D)
    # DEBUG D#826 => MEM[(char * *)__k_12(D)]
    # DEBUG D#3 => __k_12(D)
    # DEBUG this => D#3
    # DEBUG D#825 => MEM[(char * *)__j$_M_node_20 + 32B]
    # DEBUG D#3 => D#812
    # DEBUG this => D#3
    # DEBUG __s1 => D#825
    # DEBUG __s2 => D#826
    # DEBUG __n => D#810
    # VUSE <.MEM_58>
    __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
    # DEBUG __r => NULL
    if (__r_51 == 0)
      goto <bb 19>;
    else
      goto <bb 22>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_24 bb_20 })
  {
    <bb 19>:
    # DEBUG __n1 => D#828
    # DEBUG __n2 => D#827
    _52 = prephitmp_78 - prephitmp_61;
    __d_53 = (const difference_type) _52;
    # DEBUG __d => __d_53
    if (__d_53 > 2147483647)
      goto <bb 24>;
    else
      goto <bb 20>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_23 bb_21 })
  {
    <bb 20>:
    if (__d_53 < -2147483648)
      goto <bb 23>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    __r_54 = (int) _52;

  }
  bb_22 (preds = {bb_18 bb_21 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # __r_55 = PHI <__r_51(18), __r_54(21)>
    # DEBUG __r => __r_55
    # DEBUG D#823 => {CLOBBER}
    # DEBUG __size => D#823
    # DEBUG D#824 => {CLOBBER}
    # DEBUG __osize => D#824
    if (__r_55 < 0)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 bb_20 }, succs = {bb_31 })
  {
    <bb 23>:

  }
  bb_31 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 31>:
    # DEBUG __r => NULL
    # DEBUG this => &D.42445
    # DEBUG __a => &D.42443
    # DEBUG __b => &D.42444
    # .MEM_28 = VDEF <.MEM_58>
    MEM[(struct pair *)&D.43295] = 0B;
    # .MEM_27 = VDEF <.MEM_28>
    MEM[(struct pair *)&D.43295 + 8B] = _5;
    goto <bb 25>;

  }
  bb_24 (preds = {bb_22 bb_19 }, succs = {bb_30 })
  {
    <bb 24>:

  }
  bb_30 (preds = {bb_24 }, succs = {bb_25 })
  {
    <bb 30>:
    # DEBUG __r => NULL
    # DEBUG this => &D.42447
    # DEBUG __a => &__j._M_node
    # DEBUG __b => &D.42446
    # .MEM_11 = VDEF <.MEM_58>
    MEM[(struct pair *)&D.43295] = __j$_M_node_20;
    # .MEM_30 = VDEF <.MEM_11>
    MEM[(struct pair *)&D.43295 + 8B] = 0B;

  }
  bb_25 (preds = {bb_16 bb_31 bb_30 }, succs = {bb_29 })
  {
    <bb 25>:
    # .MEM_7 = PHI <.MEM_29(16), .MEM_27(31), .MEM_30(30)>

  }
  bb_29 (preds = {bb_25 }, succs = {bb_1 })
  {
    <bb 29>:
    # DEBUG D#324 => {CLOBBER}
    # DEBUG __j$_M_node => D#324
    # VUSE <.MEM_7>
    return D.43295;

  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_27 bb_28 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # _6 = PHI <_22(27), _23(28)>
      # __comp_56 = PHI <0(27), 1(28)>
      # DEBUG __comp => __comp_56
      # DEBUG __y => _10
      # DEBUG __x => _6
      if (_6 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_4 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # _10 = PHI <_21(4), _6(6)>
      # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
      # DEBUG __comp => 1
      # DEBUG __x => _10
      # DEBUG __y => _10
      # DEBUG __x => _10
      # DEBUG __x => _10
      # DEBUG this => _10
      # DEBUG D#204 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
      # DEBUG __r => D#204
      # DEBUG __x => D#204
      # DEBUG this => D#149
      # DEBUG D#811 => &MEM[(const struct pair &)_10 + 32].first
      # DEBUG D#326 => &this_9(D)->_M_impl._M_key_compare
      # DEBUG D#203 => D#326
      # DEBUG __x => __k_12(D)
      # DEBUG __y => D#811
      # DEBUG this => D#203
      # DEBUG __lhs => __k_12(D)
      # DEBUG __rhs => D#811
      # DEBUG this => __k_12(D)
      # DEBUG __str => D#811
      # DEBUG D#830 => MEM[(long unsigned int *)__k_12(D) + 8B]
      # DEBUG D#2 => __k_12(D)
      # DEBUG this => D#2
      # DEBUG __size => D#830
      # VUSE <.MEM_47>
      _34 = MEM[(long unsigned int *)_10 + 40B];
      # DEBUG D#2 => D#811
      # DEBUG this => D#2
      # DEBUG __osize => _34
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_87 = MIN_EXPR <pretmp_1, _34>;
      # DEBUG __len => D#809
      # DEBUG this => D#811
      # VUSE <.MEM_47>
      _37 = MEM[(char * *)_10 + 32B];
      # DEBUG D#3 => D#811
      # DEBUG this => D#3
      # DEBUG D#829 => MEM[(char * *)__k_12(D)]
      # DEBUG D#3 => __k_12(D)
      # DEBUG this => D#3
      # DEBUG __s1 => D#829
      # DEBUG __s2 => _37
      # DEBUG __n => D#809
      # VUSE <.MEM_47>
      __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
      # DEBUG __r => NULL
      if (__r_39 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_13 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => D#830
      # DEBUG __n2 => _34
      _40 = pretmp_1 - _34;
      __d_41 = (const difference_type) _40;
      # DEBUG __d => __d_41
      if (__d_41 > 2147483647)
        goto <bb 13>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_12 bb_10 })
    {
      <bb 9>:
      if (__d_41 < -2147483648)
        goto <bb 12>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_42 = (int) _40;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_43 = PHI <__r_39(7), __r_42(10)>
      # DEBUG __r => __r_43
      # DEBUG D#817 => {CLOBBER}
      # DEBUG __size => D#817
      # DEBUG D#818 => {CLOBBER}
      # DEBUG __osize => D#818
      # DEBUG __comp => __r_43 < 0
      if (__r_43 < 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_9 }, succs = {bb_28 })
    {
      <bb 12>:

    }
    bb_28 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 28>:
      # DEBUG __r => NULL
      # DEBUG __comp => 1
      # VUSE <.MEM_47>
      _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
      # DEBUG D#44 => _10
      # DEBUG __x => D#44
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_8 }, succs = {bb_27 })
    {
      <bb 13>:

    }
    bb_27 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 27>:
      # DEBUG __r => NULL
      # DEBUG __comp => 0
      # VUSE <.MEM_47>
      _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
      # DEBUG D#43 => _10
      # DEBUG __x => D#43
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_treeD.32258 * const thisD.32583, const struct key_typeD.32284 & __kD.32584)
{
  const size_typeD.11502 __sizeD.57414;
  const size_typeD.11502 __osizeD.57415;
  const size_typeD.11502 __lenD.57416;
  intD.9 __rD.57417;
  const difference_typeD.11503 __dD.57420;
  intD.9 D.57426;
  const size_typeD.11502 __sizeD.57399;
  const size_typeD.11502 __osizeD.57400;
  const size_typeD.11502 __lenD.57401;
  intD.9 __rD.57402;
  const difference_typeD.11503 __dD.57405;
  intD.9 D.57411;
  struct _Rb_tree_node_baseD.27676 * const __j$_M_nodeD.49985;
  boolD.2757 __compD.42436;
  struct _Rb_tree_node_baseD.27676 * const D.42440;
  struct _Rb_tree_node_baseD.27676 * const D.42441;
  struct pairD.28129 D.43295;
  const size_typeD.11502 pretmp_1;
  charD.10 * const prephitmp_13;
  struct _Rb_tree_nodeD.32262 * _17;
  struct _Rb_tree_node_baseD.27676 * _21;
  struct _Rb_tree_node_baseD.27676 * _22;
  struct _Rb_tree_node_baseD.27676 * _23;
  struct _Rb_tree_node_baseD.27676 * _24;
  const size_typeD.11502 _34;
  charD.10 * const _37;
  long unsigned intD.14 _40;
  charD.10 * const pretmp_44;
  long unsigned intD.14 _52;
  const size_typeD.11502 prephitmp_61;
  charD.10 * const pretmp_64;
  charD.10 * const prephitmp_65;
  const size_typeD.11502 pretmp_67;
  const size_typeD.11502 pretmp_76;
  const size_typeD.11502 prephitmp_77;
  const size_typeD.11502 prephitmp_78;
  const size_typeD.11502 pretmp_79;
  charD.10 * const pretmp_80;
  charD.10 * const _83;
  const size_typeD.11502 _84;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _21 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 16B];
  # DEBUG D#35ptD.0 => this_9(D)
  # DEBUG thisD.49937 => D#35ptD.0
  # DEBUG __xD.42434 => NULL
  # DEBUG thisD.49934 => this_9(D)
  # DEBUG D#831ptD.0 => &this_9(D)->_M_implD.32337._M_headerD.32503
  # DEBUG __yD.42435 => NULL
  # DEBUG __compD.42436 => 1
  # DEBUG __compD.42436 => 1
  # DEBUG __yD.42435 => D#831ptD.0
  # DEBUG __xD.42434 => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _17 = &this_9(D)->_M_implD.32337._M_headerD.32503;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  pretmp_1 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  pretmp_44 = MEM[(charD.10 * *)__k_12(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _6 = PHI <_22(27), _23(28)>
  # RANGE [0, 1]
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __compD.42436 => __comp_56
  # DEBUG __yD.42435 => _10
  # DEBUG __xD.42434 => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _10 = PHI <_21(4), _6(6)>
  # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
  # DEBUG __compD.42436 => 1
  # DEBUG __xD.42434 => _10
  # DEBUG __yD.42435 => _10
  # DEBUG __xD.49945 => _10
  # DEBUG __xD.48708 => _10
  # DEBUG thisD.48709 => _10
  # DEBUG D#204ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)_10]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.49947 => D#204ptD.0
  # DEBUG thisD.49946 => D#149ptD.0
  # DEBUG D#811ptD.0 => &MEM[(const struct pairD.32038 &)_10 + 32].firstD.35538
  # DEBUG D#326ptD.0 => &this_9(D)->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#326ptD.0
  # DEBUG __xD.49939 => __k_12(D)
  # DEBUG __yD.49940 => D#811ptD.0
  # DEBUG thisD.49941 => D#203ptD.0
  # DEBUG __lhsD.49943 => __k_12(D)
  # DEBUG __rhsD.49942 => D#811ptD.0
  # DEBUG thisD.57397 => __k_12(D)
  # DEBUG __strD.57398 => D#811ptD.0
  # DEBUG D#830ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57399 => D#830ptD.0
  # VUSE <.MEM_47>
  _34 = MEM[(long unsigned intD.14 *)_10 + 40B];
  # DEBUG D#2ptD.0 => D#811ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57400 => _34
  # DEBUG __aD.57407 => &__sizeD.57399
  # DEBUG __bD.57406 => &__osizeD.57400
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __lenD.57401 => D#809ptD.0
  # DEBUG thisD.48671 => D#811ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _37 = MEM[(charD.10 * *)_10 + 32B];
  # DEBUG D#3ptD.0 => D#811ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#829ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57410 => D#829ptD.0
  # DEBUG __s2D.57409 => _37
  # DEBUG __nD.57408 => D#809ptD.0
  # VUSE <.MEM_47>
  # USE = nonlocal escaped 
  __r_39 = memcmpD.989 (pretmp_44, _37, __len_87);
  # DEBUG __rD.57402 => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57404 => D#830ptD.0
  # DEBUG __n2D.57403 => _34
  # RANGE [0, 18446744073709551615]
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_typeD.11503) _40;
  # DEBUG __dD.57405 => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_42 = (intD.9) _40;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __rD.57402 => __r_43
  # DEBUG D#817ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57399 => D#817ptD.0
  # DEBUG D#818ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57400 => D#818ptD.0
  # DEBUG __compD.42436 => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 11, next block 28, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       28 [100.0%]  (FALLTHRU)

;;   basic block 28, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.57402 => NULL
  # DEBUG __compD.42436 => 1
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 16B];
  # DEBUG D#44ptD.0 => _10
  # DEBUG __xD.49950 => D#44ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 28, next block 27, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       27 [100.0%]  (FALLTHRU)

;;   basic block 27, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.57402 => NULL
  # DEBUG __compD.42436 => 0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 24B];
  # DEBUG D#43ptD.0 => _10
  # DEBUG __xD.49953 => D#43ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 27, next block 26, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # PT = nonlocal escaped 
  # _83 = PHI <_37(5)>
  # RANGE [0, 1]
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>
;;    succ:       26 [100.0%]  (FALLTHRU)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.49955 => &__jD.42437
  # DEBUG __xD.49956 => _85
  # DEBUG __j$_M_nodeD.49985 => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [55.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 26, next block 16, flags: (NEW, REACHABLE)
;;    pred:       26 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_47(26), .MEM_8(D)(3)>
  # PT = nonlocal escaped 
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG thisD.49955 => &__jD.42437
  # DEBUG __xD.49956 => _57
  # DEBUG __j$_M_nodeD.49985 => _57
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 24B];
  # DEBUG D#54ptD.0 => this_9(D)
  # DEBUG thisD.49961 => D#54ptD.0
  # DEBUG thisD.47453 => NULL
  # DEBUG __xD.47452 => _24
  # DEBUG thisD.49957 => &__jD.42437
  # DEBUG __xD.49958 => &D.42439
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 46, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.49964 => &D.42442
  # DEBUG __aD.49965 => &D.42440
  # DEBUG __bD.49966 => &D.42441
  # .MEM_31 = VDEF <.MEM_59>
  MEM[(struct pairD.28129 *)&D.43295] = 0B;
  # .MEM_29 = VDEF <.MEM_31>
  MEM[(struct pairD.28129 *)&D.43295 + 8B] = _57;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 404, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.49967 => &__jD.42437
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  __j$_M_node_25 = _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_baseD.27725 (_57);
  # DEBUG __j$_M_nodeD.49985 => __j$_M_node_25
  # VUSE <.MEM_59>
  pretmp_67 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_59>
  pretmp_80 = MEM[(charD.10 * *)__k_12(D)];
  # VUSE <.MEM_59>
  pretmp_79 = MEM[(long unsigned intD.14 *)__j$_M_node_25 + 40B];
  # VUSE <.MEM_59>
  pretmp_64 = MEM[(charD.10 * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 854, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       26 [55.0%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # .MEM_58 = PHI <.MEM_47(26), .MEM_59(17)>
  # PT = nonlocal escaped 
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # PT = nonlocal escaped 
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # PT = nonlocal escaped 
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_nodeD.49985 => __j$_M_node_20
  # DEBUG __xD.49975 => __j$_M_node_20
  # DEBUG __xD.48170 => __j$_M_node_20
  # DEBUG thisD.48171 => __j$_M_node_20
  # DEBUG D#150ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__j$_M_node_20]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#150ptD.0
  # DEBUG __xD.49977 => D#150ptD.0
  # DEBUG thisD.49976 => D#149ptD.0
  # DEBUG D#812ptD.0 => &MEM[(const struct pairD.32038 &)__j$_M_node_20 + 32].firstD.35538
  # DEBUG D#325ptD.0 => &this_9(D)->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#325ptD.0
  # DEBUG __xD.49969 => D#812ptD.0
  # DEBUG __yD.49970 => __k_12(D)
  # DEBUG thisD.49971 => D#203ptD.0
  # DEBUG __lhsD.49973 => D#812ptD.0
  # DEBUG __rhsD.49972 => __k_12(D)
  # DEBUG thisD.57412 => D#812ptD.0
  # DEBUG __strD.57413 => __k_12(D)
  # DEBUG D#828ptD.0 => MEM[(long unsigned intD.14 *)__j$_M_node_20 + 40B]
  # DEBUG D#2ptD.0 => D#812ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57414 => D#828ptD.0
  # DEBUG D#827ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57415 => D#827ptD.0
  # DEBUG __aD.57422 => &__sizeD.57414
  # DEBUG __bD.57421 => &__osizeD.57415
  # DEBUG __lenD.57416 => D#810ptD.0
  # DEBUG thisD.48671 => __k_12(D)
  # DEBUG D#826ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#825ptD.0 => MEM[(charD.10 * *)__j$_M_node_20 + 32B]
  # DEBUG D#3ptD.0 => D#812ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57425 => D#825ptD.0
  # DEBUG __s2D.57424 => D#826ptD.0
  # DEBUG __nD.57423 => D#810ptD.0
  # VUSE <.MEM_58>
  # USE = nonlocal escaped 
  __r_51 = memcmpD.989 (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __rD.57417 => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57419 => D#828ptD.0
  # DEBUG __n2D.57418 => D#827ptD.0
  # RANGE [0, 18446744073709551615]
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_typeD.11503) _52;
  # DEBUG __dD.57420 => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;
;;    succ:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 130, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_54 = (intD.9) _52;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 462, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __rD.57417 => __r_55
  # DEBUG D#823ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57414 => D#823ptD.0
  # DEBUG D#824ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57415 => D#824ptD.0
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 22, next block 31, flags: (NEW, REACHABLE)
;;    pred:       22 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       31 [100.0%]  (FALLTHRU)

;;   basic block 31, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 23, next block 24, flags: (NEW)
;;    pred:       23 [100.0%]  (FALLTHRU)
  # DEBUG __rD.57417 => NULL
  # DEBUG thisD.49979 => &D.42445
  # DEBUG __aD.49980 => &D.42443
  # DEBUG __bD.49981 => &D.42444
  # .MEM_28 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.43295] = 0B;
  # .MEM_27 = VDEF <.MEM_28>
  MEM[(struct pairD.28129 *)&D.43295 + 8B] = _5;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 31, next block 30, flags: (NEW, REACHABLE)
;;    pred:       22 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 24, next block 25, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU)
  # DEBUG __rD.57417 => NULL
  # DEBUG thisD.49982 => &D.42447
  # DEBUG __aD.49983 => &__jD.42437._M_nodeD.35517
  # DEBUG __bD.49984 => &D.42446
  # .MEM_11 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.43295] = __j$_M_node_20;
  # .MEM_30 = VDEF <.MEM_11>
  MEM[(struct pairD.28129 *)&D.43295 + 8B] = 0B;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 30, next block 29, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_29(16), .MEM_27(31), .MEM_30(30)>
;;    succ:       29 [100.0%]  (FALLTHRU)

;;   basic block 29, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 25, next block 1, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU)
  # DEBUG D#324ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49985 => D#324ptD.0
  # VUSE <.MEM_7>
  return D.43295;
;;    succ:       EXIT [100.0%] 

}



;; Function void Configuration::Assign(const string&, const string&) (_ZN13Configuration6AssignERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_, funcdef_no=1730, decl_uid=35259, cgraph_uid=416, symbol_order=418)


Pass statistics:
----------------

void Configuration::Assign(const string&, const string&) (struct ConfigurationD.32032 * const thisD.35413, const struct stringD.2845 & fieldD.35410, const struct stringD.2845 & valueD.35411)
Eh tree:
   9 cleanup land:{9,<L11>},{8,<L10>},{6,<L8>},{3,<L12>}
     11 cleanup land:{7,<L9>},{5,<L13>}
     10 cleanup land:{4,<L5>}
   6 cleanup land:{2,<L3>}
{
  struct _Rb_tree_node_baseD.27676 * SR.1300D.58096;
  struct _Rb_tree_node_baseD.27676 * SR.1299D.58095;
  size_typeD.11502 __dnewD.58037;
  size_typeD.11502 __dnewD.58008;
  const size_typeD.11502 __sizeD.57947;
  const size_typeD.11502 __osizeD.57948;
  const size_typeD.11502 __lenD.57949;
  intD.9 __rD.57950;
  const difference_typeD.11503 __dD.57953;
  intD.9 D.57959;
  const size_typeD.11502 __sizeD.57932;
  const size_typeD.11502 __osizeD.57933;
  const size_typeD.11502 __lenD.57934;
  intD.9 __rD.57935;
  const difference_typeD.11503 __dD.57938;
  intD.9 D.57944;
  struct iteratorD.32574 D.57929;
  struct _Rb_tree_nodeD.32262 * __yD.57919;
  struct value_typeD.32044 D.57911;
  struct mapped_typeD.32043 D.57910;
  struct iteratorD.32847 D.57909;
  struct iteratorD.32574 D.57908;
  struct const_iteratorD.32576 __posD.57881;
  struct _Rb_tree_node_baseD.27676 * const __i$_M_nodeD.57907;
  struct _Rb_tree_node_baseD.27676 * SR.1072D.57906;
  struct _Rb_tree_node_baseD.27676 * SR.1075D.57905;
  struct mapped_typeD.32043 & D.57904;
  const size_typeD.11502 __sizeD.57831;
  const size_typeD.11502 __osizeD.57832;
  const size_typeD.11502 __lenD.57833;
  intD.9 __rD.57834;
  const difference_typeD.11503 __dD.57837;
  intD.9 D.57843;
  const size_typeD.11502 __sizeD.57816;
  const size_typeD.11502 __osizeD.57817;
  const size_typeD.11502 __lenD.57818;
  intD.9 __rD.57819;
  const difference_typeD.11503 __dD.57822;
  intD.9 D.57828;
  struct iteratorD.32574 D.57813;
  struct _Rb_tree_nodeD.32262 * __yD.57803;
  struct _Rb_tree_node_baseD.27676 * SR.1085D.54398;
  struct iteratorD.32847 D.54369;
  struct basic_stringD.2844 D.35592;
  const size_typeD.11502 _5;
  charD.10 * const _12;
  charD.10 * const prephitmp_30;
  charD.10 * const _39;
  long unsigned intD.14 _41;
  const size_typeD.11502 _47;
  charD.10 * const prephitmp_49;
  charD.10 * const _50;
  long unsigned intD.14 _53;
  struct _Rep_typeD.32256 * _58;
  charD.10 * const _65;
  struct mapped_typeD.32043 & _67;
  charD.10 * const _68;
  size_typeD.11502 pretmp_70;
  charD.10 * const pretmp_75;
  const size_typeD.11502 _78;
  charD.10 * const pretmp_81;
  charD.10 * const _83;
  long unsigned intD.14 _85;
  boolD.2757 _89;
  const size_typeD.11502 _91;
  size_typeD.11502 prephitmp_93;
  charD.10 * const _94;
  long unsigned intD.14 _97;
  boolD.2757 _101;
  charD.10 * _106;
  charD.10 * const _109;
  const size_typeD.11502 _110;
  charD.10 * _111;
  charD.10 * const _112;
  charD.10 * _118;
  long unsigned intD.14 __dnew.111_119;
  const char_typeD.6439 _121;
  charD.10 * _124;
  charD.10 * _130;
  long unsigned intD.14 __dnew.111_131;
  const char_typeD.6439 _133;
  charD.10 * _136;
  charD.10 * const _137;
  charD.10 * const _139;
  size_typeD.11502 prephitmp_144;
  size_typeD.11502 pretmp_158;
  const size_typeD.11502 pretmp_237;
  charD.10 * const pretmp_239;
  boolD.2757 _260;
  boolD.2757 _261;
  boolD.2757 _262;
  boolD.2757 _268;
  charD.10 * const _269;
  charD.10 * const _270;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54370 => &matchD.35415
  # DEBUG match$_M_nodeD.54391 => 0B
  # DEBUG D#575ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54366 => D#575ptD.0
  # DEBUG __xD.54367 => field_4(D)
  # DEBUG D#899ptD.0 => &MEM[(struct mapD.32040 *)this_3(D) + 40B]._M_tD.32259
  # DEBUG thisD.57789 => D#899ptD.0
  # DEBUG __kD.57790 => field_4(D)
  # DEBUG thisD.57800 => D#899ptD.0
  # PT = nonlocal 
  __i$_M_node_23 = &MEM[(struct _Rb_treeD.32258 *)this_3(D) + 40B]._M_implD.32337._M_headerD.32503;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __i$_M_node_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_3(D) + 56B];
  # DEBUG D#35ptD.0 => D#899ptD.0
  # DEBUG thisD.48803 => D#35ptD.0
  # DEBUG D#207ptD.0 => D#899ptD.0
  # DEBUG __xD.57804 => NULL
  # DEBUG __yD.57803 => NULL
  # DEBUG __kD.57802 => field_4(D)
  # DEBUG __yD.57803 => __i$_M_node_23
  # DEBUG __xD.57804 => __i$_M_node_24
  if (__i$_M_node_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_237 = MEM[(long unsigned intD.14 *)field_4(D) + 8B];
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  pretmp_239 = MEM[(charD.10 * *)field_4(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_290 = PHI <.MEM_2(D)(2), .MEM_59(14), .MEM_59(17), .MEM_59(19)>
  # DEBUG thisD.48817 => D#899ptD.0
  # DEBUG thisD.48819 => NULL
  # DEBUG __xD.48818 => __i$_M_node_23
  # DEBUG D#208ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48821 => D#208ptD.0
  # DEBUG thisD.54364 => &match.37D.35533
  # DEBUG __itD.54365 => &D.35529
  # DEBUG match$_M_nodeD.54391 => __i$_M_node_23
  # DEBUG D#576ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54360 => D#576ptD.0
  # DEBUG D#53ptD.0 => &D#576ptD.0->_M_tD.32259
  # DEBUG thisD.54361 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54358 => &D.35588
  # DEBUG __itD.54359 => &D.35534
  # DEBUG thisD.54355 => &matchD.35415
  # DEBUG __xD.54356 => &D.35588
  # DEBUG D#208ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48821 => D#208ptD.0
  # DEBUG thisD.54364 => &match.37D.35533
  # DEBUG __itD.54365 => &D.35529
  # DEBUG match$_M_nodeD.54391 => __i$_M_node_23
  # DEBUG D#576ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54360 => D#576ptD.0
  # DEBUG D#53ptD.0 => &D#576ptD.0->_M_tD.32259
  # DEBUG thisD.54361 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54358 => &D.35588
  # DEBUG __itD.54359 => &D.35534
  # DEBUG thisD.54355 => &matchD.35415
  # DEBUG __xD.54356 => &D.35588
  # .MEM_13 = VDEF <.MEM_290>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  D.35592 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown string field: ", field_4(D)); [return slot optimization]
  [LP 2] # .MEM_14 = VDEF <.MEM_13>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_3(D), &D.35592, 0);
;;    succ:       68 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_57 = PHI <__i$_M_node_28(12), __i$_M_node_29(13)>
  # PT = nonlocal escaped 
  # __i$_M_node_77 = PHI <__i$_M_node_279(12), __i$_M_node_275(13)>
  # DEBUG __yD.57803 => __i$_M_node_77
  # DEBUG __xD.57804 => __i$_M_node_57
  if (__i$_M_node_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_279 = PHI <__i$_M_node_24(3), __i$_M_node_57(6)>
  # PT = nonlocal escaped 
  # __i$_M_node_275 = PHI <__i$_M_node_23(3), __i$_M_node_77(6)>
  # .MEM_59 = PHI <.MEM_2(D)(3), .MEM_59(6)>
  # DEBUG __yD.57803 => __i$_M_node_275
  # DEBUG __xD.57804 => __i$_M_node_279
  # DEBUG __xD.57805 => __i$_M_node_279
  # DEBUG __xD.48708 => __i$_M_node_279
  # DEBUG thisD.48709 => __i$_M_node_279
  # DEBUG D#204ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__i$_M_node_279]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.57807 => D#204ptD.0
  # DEBUG thisD.57806 => D#149ptD.0
  # DEBUG D#900ptD.0 => &MEM[(const struct pairD.32038 &)__i$_M_node_279 + 32].firstD.35538
  # DEBUG D#205ptD.0 => &D#206ptD.0->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#205ptD.0
  # DEBUG __xD.57810 => D#900ptD.0
  # DEBUG __yD.57809 => field_4(D)
  # DEBUG thisD.57808 => D#203ptD.0
  # DEBUG __lhsD.57812 => D#900ptD.0
  # DEBUG __rhsD.57811 => field_4(D)
  # DEBUG thisD.57814 => D#900ptD.0
  # DEBUG __strD.57815 => field_4(D)
  # VUSE <.MEM_59>
  _5 = MEM[(long unsigned intD.14 *)__i$_M_node_279 + 40B];
  # DEBUG D#2ptD.0 => D#900ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57816 => _5
  # DEBUG D#940ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57817 => D#940ptD.0
  # DEBUG __aD.57824 => &__sizeD.57816
  # DEBUG __bD.57823 => &__osizeD.57817
  __len_265 = MIN_EXPR <_5, pretmp_237>;
  # DEBUG __lenD.57818 => D#895ptD.0
  # DEBUG thisD.48671 => field_4(D)
  # DEBUG D#939ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _39 = MEM[(charD.10 * *)__i$_M_node_279 + 32B];
  # DEBUG D#3ptD.0 => D#900ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57827 => _39
  # DEBUG __s2D.57826 => D#939ptD.0
  # DEBUG __nD.57825 => D#895ptD.0
  # VUSE <.MEM_59>
  # USE = nonlocal escaped 
  __r_40 = memcmpD.989 (_39, pretmp_239, __len_265);
  # DEBUG __rD.57819 => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57821 => _5
  # DEBUG __n2D.57820 => D#940ptD.0
  # RANGE [0, 18446744073709551615]
  _41 = _5 - pretmp_237;
  __d_42 = (const difference_typeD.11503) _41;
  # DEBUG __dD.57822 => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_43 = (intD.9) _41;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __rD.57819 => __r_44
  # DEBUG D#909ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57816 => D#909ptD.0
  # DEBUG D#910ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57817 => D#910ptD.0
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57819 => NULL
  # DEBUG __yD.57803 => __i$_M_node_279
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  __i$_M_node_28 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_279 + 16B];
  # DEBUG D#44ptD.0 => __i$_M_node_279
  # DEBUG __xD.48741 => D#44ptD.0
  # DEBUG __xD.57804 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57819 => NULL
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  __i$_M_node_29 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_279 + 24B];
  # DEBUG D#43ptD.0 => __i$_M_node_279
  # DEBUG __xD.48740 => D#43ptD.0
  # DEBUG __xD.57804 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_277 = PHI <__i$_M_node_77(5)>
  # DEBUG thisD.48739 => NULL
  # DEBUG __xD.48738 => __i$_M_node_277
  # DEBUG __j$_M_nodeD.48821 => __i$_M_node_277
  # DEBUG thisD.48783 => D#899ptD.0
  # DEBUG thisD.48785 => NULL
  # DEBUG __xD.48784 => __i$_M_node_23
  # DEBUG thisD.48780 => &__jD.57791
  # DEBUG __xD.48781 => NULL
  if (__i$_M_node_23 == __i$_M_node_277)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.57792 => __i$_M_node_277
  # DEBUG __xD.48170 => __i$_M_node_277
  # DEBUG thisD.48171 => __i$_M_node_277
  # DEBUG D#150ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__i$_M_node_277]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#150ptD.0
  # DEBUG __xD.57794 => D#150ptD.0
  # DEBUG thisD.57793 => D#149ptD.0
  # DEBUG D#901ptD.0 => &MEM[(const struct pairD.32038 &)__i$_M_node_277 + 32].firstD.35538
  # DEBUG D#209ptD.0 => &MEM[(struct _Rb_treeD.32258 *)D#899ptD.0]._M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#209ptD.0
  # DEBUG __xD.57797 => field_4(D)
  # DEBUG __yD.57796 => D#901ptD.0
  # DEBUG thisD.57795 => D#203ptD.0
  # DEBUG __lhsD.57799 => field_4(D)
  # DEBUG __rhsD.57798 => D#901ptD.0
  # DEBUG thisD.57829 => field_4(D)
  # DEBUG __strD.57830 => D#901ptD.0
  # DEBUG D#938ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57831 => D#938ptD.0
  # VUSE <.MEM_59>
  _47 = MEM[(long unsigned intD.14 *)__i$_M_node_277 + 40B];
  # DEBUG D#2ptD.0 => D#901ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57832 => _47
  # DEBUG __aD.57839 => &__sizeD.57831
  # DEBUG __bD.57838 => &__osizeD.57832
  __len_267 = MIN_EXPR <_47, pretmp_237>;
  # DEBUG __lenD.57833 => D#896ptD.0
  # DEBUG thisD.48671 => D#901ptD.0
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _50 = MEM[(charD.10 * *)__i$_M_node_277 + 32B];
  # DEBUG D#3ptD.0 => D#901ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#937ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57842 => D#937ptD.0
  # DEBUG __s2D.57841 => _50
  # DEBUG __nD.57840 => D#896ptD.0
  # VUSE <.MEM_59>
  # USE = nonlocal escaped 
  __r_52 = memcmpD.989 (pretmp_239, _50, __len_267);
  # DEBUG __rD.57834 => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57836 => D#938ptD.0
  # DEBUG __n2D.57835 => _47
  # RANGE [0, 18446744073709551615]
  _53 = pretmp_237 - _47;
  __d_54 = (const difference_typeD.11503) _53;
  # DEBUG __dD.57837 => __d_54
  if (__d_54 > 2147483647)
    goto <bb 78>;
  else
    goto <bb 17>;
;;    succ:       78 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_55 = (intD.9) _53;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __rD.57834 => __r_56
  # DEBUG D#915ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57831 => D#915ptD.0
  # DEBUG D#916ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57832 => D#916ptD.0
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 78>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                78 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_34 = PHI <__i$_M_node_73(28), __i$_M_node_74(29)>
  # PT = nonlocal escaped 
  # __i$_M_node_33 = PHI <__i$_M_node_288(28), __i$_M_node_284(29)>
  # DEBUG __yD.57919 => __i$_M_node_33
  # DEBUG __xD.57920 => __i$_M_node_34
  if (__i$_M_node_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;
;;    succ:       30 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 8277, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       78 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_288 = PHI <__i$_M_node_24(22), __i$_M_node_34(21)>
  # PT = nonlocal escaped 
  # __i$_M_node_284 = PHI <__i$_M_node_23(22), __i$_M_node_33(21)>
  # .MEM_146 = PHI <.MEM_59(22), .MEM_146(21)>
  # DEBUG __yD.57919 => __i$_M_node_284
  # DEBUG __xD.57920 => __i$_M_node_288
  # DEBUG __xD.57921 => __i$_M_node_288
  # DEBUG __xD.48708 => __i$_M_node_288
  # DEBUG thisD.48709 => __i$_M_node_288
  # DEBUG D#204ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__i$_M_node_288]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.57923 => D#204ptD.0
  # DEBUG thisD.57922 => D#149ptD.0
  # DEBUG D#903ptD.0 => &MEM[(const struct pairD.32038 &)__i$_M_node_288 + 32].firstD.35538
  # DEBUG D#205ptD.0 => &D#206ptD.0->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#205ptD.0
  # DEBUG __xD.57926 => D#903ptD.0
  # DEBUG __yD.57925 => field_4(D)
  # DEBUG thisD.57924 => D#203ptD.0
  # DEBUG __lhsD.57928 => D#903ptD.0
  # DEBUG __rhsD.57927 => field_4(D)
  # DEBUG thisD.57930 => D#903ptD.0
  # DEBUG __strD.57931 => field_4(D)
  # VUSE <.MEM_146>
  _78 = MEM[(long unsigned intD.14 *)__i$_M_node_288 + 40B];
  # DEBUG D#2ptD.0 => D#903ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57932 => _78
  # DEBUG D#936ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57933 => D#936ptD.0
  # DEBUG __aD.57940 => &__sizeD.57932
  # DEBUG __bD.57939 => &__osizeD.57933
  __len_263 = MIN_EXPR <_78, pretmp_237>;
  # DEBUG __lenD.57934 => D#897ptD.0
  # DEBUG thisD.48671 => field_4(D)
  # DEBUG D#935ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  _83 = MEM[(charD.10 * *)__i$_M_node_288 + 32B];
  # DEBUG D#3ptD.0 => D#903ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57943 => _83
  # DEBUG __s2D.57942 => D#935ptD.0
  # DEBUG __nD.57941 => D#897ptD.0
  # VUSE <.MEM_146>
  # USE = nonlocal escaped 
  __r_84 = memcmpD.989 (_83, pretmp_239, __len_263);
  # DEBUG __rD.57935 => NULL
  if (__r_84 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 5549, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57937 => _78
  # DEBUG __n2D.57936 => D#936ptD.0
  # RANGE [0, 18446744073709551615]
  _85 = _78 - pretmp_237;
  __d_86 = (const difference_typeD.11503) _85;
  # DEBUG __dD.57938 => __d_86
  if (__d_86 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;
;;    succ:       28 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 2774, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_86 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;
;;    succ:       29 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 1387, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_87 = (intD.9) _85;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 4934, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       23 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_88 = PHI <__r_84(23), __r_87(26)>
  # DEBUG __rD.57935 => __r_88
  # DEBUG D#921ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57932 => D#921ptD.0
  # DEBUG D#922ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57933 => D#922ptD.0
  if (__r_88 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57935 => NULL
  # DEBUG __yD.57919 => __i$_M_node_288
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  __i$_M_node_73 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_288 + 16B];
  # DEBUG D#44ptD.0 => __i$_M_node_288
  # DEBUG __xD.48741 => D#44ptD.0
  # DEBUG __xD.57920 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57935 => NULL
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  __i$_M_node_74 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_288 + 24B];
  # DEBUG D#43ptD.0 => __i$_M_node_288
  # DEBUG __xD.48740 => D#43ptD.0
  # DEBUG __xD.57920 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_281 = PHI <__i$_M_node_33(20)>
  # DEBUG thisD.48739 => NULL
  # DEBUG __xD.48738 => __i$_M_node_281
  # DEBUG __i$_M_nodeD.57907 => __i$_M_node_281
  # DEBUG thisD.57902 => D#902ptD.0
  # DEBUG D#53ptD.0 => &D#902ptD.0->_M_tD.32259
  # DEBUG thisD.57903 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54259 => &__iD.57846
  # DEBUG __xD.54260 => NULL
  if (__i$_M_node_23 == __i$_M_node_281)
    goto <bb 71>;
  else
    goto <bb 31>;
;;    succ:       71 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 765, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.54279 => &__iD.57846
  # DEBUG thisD.54280 => __i$_M_node_281
  # DEBUG D#571ptD.0 => &MEM[(struct _Rb_tree_nodeD.32262 *)__i$_M_node_281]._M_value_fieldD.38939
  # DEBUG __rD.48150 => D#571ptD.0
  # DEBUG D#904ptD.0 => &MEM[(struct pairD.32038 &)__i$_M_node_281 + 32].firstD.35538
  # DEBUG D#52ptD.0 => D#902ptD.0
  # DEBUG thisD.54276 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#52ptD.0
  # DEBUG D#50ptD.0 => &D#51ptD.0->_M_tD.32259
  # DEBUG D#49ptD.0 => D#50ptD.0
  # DEBUG thisD.47421 => D#49ptD.0
  # DEBUG __xD.57897 => field_4(D)
  # DEBUG __yD.57896 => D#904ptD.0
  # DEBUG thisD.57895 => D#203ptD.0
  # DEBUG __lhsD.57899 => field_4(D)
  # DEBUG __rhsD.57898 => D#904ptD.0
  # DEBUG thisD.57945 => field_4(D)
  # DEBUG __strD.57946 => D#904ptD.0
  # DEBUG D#934ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57947 => D#934ptD.0
  # VUSE <.MEM_146>
  _91 = MEM[(long unsigned intD.14 *)__i$_M_node_281 + 40B];
  # DEBUG D#2ptD.0 => D#904ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57948 => _91
  # DEBUG __aD.57955 => &__sizeD.57947
  # DEBUG __bD.57954 => &__osizeD.57948
  __len_264 = MIN_EXPR <_91, pretmp_237>;
  # DEBUG __lenD.57949 => D#898ptD.0
  # DEBUG thisD.48671 => D#904ptD.0
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  _94 = MEM[(charD.10 * *)__i$_M_node_281 + 32B];
  # DEBUG D#3ptD.0 => D#904ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#933ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57958 => D#933ptD.0
  # DEBUG __s2D.57957 => _94
  # DEBUG __nD.57956 => D#898ptD.0
  # VUSE <.MEM_146>
  # USE = nonlocal escaped 
  __r_96 = memcmpD.989 (pretmp_239, _94, __len_264);
  # DEBUG __rD.57950 => NULL
  if (__r_96 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 466, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57952 => D#934ptD.0
  # DEBUG __n2D.57951 => _91
  # RANGE [0, 18446744073709551615]
  _97 = pretmp_237 - _91;
  __d_98 = (const difference_typeD.11503) _97;
  # DEBUG __dD.57953 => __d_98
  if (__d_98 > 2147483647)
    goto <bb 61>;
  else
    goto <bb 33>;
;;    succ:       61 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 233, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_98 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;
;;    succ:       36 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_99 = (intD.9) _97;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 415, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       31 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_100 = PHI <__r_96(31), __r_99(34)>
  # DEBUG __rD.57950 => __r_100
  # DEBUG D#927ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57947 => D#927ptD.0
  # DEBUG D#928ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57948 => D#928ptD.0
  if (__r_100 < 0)
    goto <bb 71>;
  else
    goto <bb 61>;
;;    succ:       71 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_247 = PHI <.MEM_146(33), .MEM_266(71)>
  # PT = nonlocal escaped 
  # __i$_M_node_25 = PHI <__i$_M_node_281(33), __i$_M_node_271(71)>
  # DEBUG thisD.57884 => &D.57910
  # DEBUG thisD.54283 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.57885 => &D.57910
  # DEBUG D#148ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG thisD.57888 => D#148ptD.0
  # DEBUG __datD.57887 => &D.57910.D.11539._M_local_bufD.11541
  # DEBUG __aD.57886 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#148ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_183 = VDEF <.MEM_247>
  MEM[(struct _Alloc_hiderD.11518 *)&D.57910]._M_pD.11525 = &D.57910.D.11539._M_local_bufD.11541;
  # DEBUG thisD.54288 => NULL
  # DEBUG thisD.48138 => NULL
  # DEBUG thisD.57890 => &D.57910
  # DEBUG __nD.57889 => 0
  # DEBUG D#5ptD.0 => &D.57910
  # DEBUG __lengthD.57892 => 0
  # DEBUG thisD.57891 => D#5ptD.0
  # .MEM_184 = VDEF <.MEM_183>
  MEM[(size_typeD.11502 *)&D.57910 + 8B] = 0;
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.47013 => D#3ptD.0
  # DEBUG __c1D.57894 => &D.57910.D.11539._M_local_bufD.11541
  # DEBUG __c2D.57893 => D#13ptD.0
  # .MEM_185 = VDEF <.MEM_184>
  MEM[(char_typeD.6439 &)&D.57910 + 16] = 0;
  # DEBUG thisD.57960 => &D.57911
  # DEBUG __aD.57961 => field_4(D)
  # DEBUG __bD.57962 => &D.57910
  # DEBUG thisD.57977 => &D.57911.firstD.35538
  # DEBUG __strD.57976 => field_4(D)
  # DEBUG thisD.50825 => field_4(D)
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)field_4(D)]._M_dataplusD.11519
  # DEBUG thisD.57978 => &D.57911.firstD.35538
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.57911]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.57981 => D#381ptD.0
  # DEBUG __datD.57980 => &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541
  # DEBUG __aD.57979 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_186 = VDEF <.MEM_185>
  MEM[(struct _Alloc_hiderD.11518 *)&D.57911]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541;
  # DEBUG D#932ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # DEBUG D#931ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#1ptD.0 => field_4(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _106 = pretmp_239 + pretmp_237;
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.57984 => &D.57911.firstD.35538
  # DEBUG __begD.57983 => D#932ptD.0
  # DEBUG __endD.57982 => _106
  # DEBUG thisD.57988 => &D.57911.firstD.35538
  # DEBUG __begD.57987 => D#932ptD.0
  # DEBUG __endD.57986 => _106
  # DEBUG thisD.58005 => &D.57911.firstD.35538
  # DEBUG __begD.58006 => D#932ptD.0
  # DEBUG __endD.58007 => _106
  # DEBUG __ptrD.51229 => D#932ptD.0
  # RANGE [0, 1]
  _89 = _106 != 0B;
  # RANGE [0, 1]
  _101 = pretmp_239 == 0B;
  # RANGE [0, 1]
  _268 = _89 & _101;
  if (_268 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;
;;    succ:       73 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       72 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 6] # .MEM_188 = VDEF <.MEM_187>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _118 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.57911.firstD.35538, &__dnewD.58008, 0);
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.57911.firstD.35538
  # DEBUG __pD.58027 => _118
  # DEBUG thisD.58026 => D#6ptD.0
  # .MEM_189 = VDEF <.MEM_188>
  MEM[(charD.10 * *)&D.57911] = _118;
  # VUSE <.MEM_189>
  __dnew.111_119 = __dnewD.58008;
  # DEBUG D#7ptD.0 => &D.57911.firstD.35538
  # DEBUG __capacityD.58029 => __dnew.111_119
  # DEBUG thisD.58028 => D#7ptD.0
  # .MEM_190 = VDEF <.MEM_189>
  MEM[(size_typeD.11502 *)&D.57911 + 16B] = __dnew.111_119;
  # DEBUG D#3ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58011 => _118
  # DEBUG __k1D.58010 => D#932ptD.0
  # DEBUG __k2D.58009 => _106
  # DEBUG __dD.58014 => _118
  # DEBUG __sD.58013 => D#932ptD.0
  # DEBUG __nD.58012 => D#931ptD.0
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       72 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58011 => &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58010 => D#932ptD.0
  # DEBUG __k2D.58009 => _106
  # DEBUG __dD.58014 => &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541
  # DEBUG __sD.58013 => D#932ptD.0
  # DEBUG __nD.58012 => D#931ptD.0
  if (pretmp_237 == 1)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_187>
  _121 = MEM[(const char_typeD.6439 &)pretmp_239];
  # DEBUG D#13ptD.0 => D#932ptD.0
  # DEBUG __c1D.58019 => &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58018 => D#13ptD.0
  # .MEM_191 = VDEF <.MEM_187>
  MEM[(char_typeD.6439 &)&D.57911 + 16] = _121;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  # _270 = PHI <&MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541(39), _118(38)>
  # .MEM_254 = PHI <.MEM_187(39), .MEM_190(38)>
  # DEBUG D#3ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58011 => _270
  # DEBUG __k1D.58010 => D#932ptD.0
  # DEBUG __k2D.58009 => _106
  # DEBUG __dD.58014 => _270
  # DEBUG __sD.58013 => D#932ptD.0
  # DEBUG __nD.58012 => D#931ptD.0
  # DEBUG __s1D.58017 => _270
  # DEBUG __s2D.58016 => D#932ptD.0
  # DEBUG __nD.58015 => D#931ptD.0
  # .MEM_192 = VDEF <.MEM_254>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  memcpyD.992 (_270, pretmp_239, pretmp_237);
  # VUSE <.MEM_192>
  pretmp_158 = __dnewD.58008;
  # VUSE <.MEM_192>
  pretmp_75 = MEM[(charD.10 * *)&D.57911];
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_147 = PHI <.MEM_191(40), .MEM_192(41)>
  # prephitmp_144 = PHI <pretmp_237(40), pretmp_158(41)>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  # prephitmp_49 = PHI <&MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541(40), pretmp_75(41)>
  # DEBUG D#930ptD.0 => __dnewD.58008
  # DEBUG thisD.58021 => &D.57911.firstD.35538
  # DEBUG __nD.58020 => D#930ptD.0
  # DEBUG D#5ptD.0 => &D.57911.firstD.35538
  # DEBUG __lengthD.58023 => D#930ptD.0
  # DEBUG thisD.58022 => D#5ptD.0
  # .MEM_193 = VDEF <.MEM_147>
  MEM[(size_typeD.11502 *)&D.57911 + 8B] = prephitmp_144;
  # DEBUG D#3ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _124 = prephitmp_49 + prephitmp_144;
  # DEBUG __c1D.58025 => _124
  # DEBUG __c2D.58024 => D#13ptD.0
  # .MEM_194 = VDEF <.MEM_193>
  MEM[(char_typeD.6439 &)_124] = 0;
  # .MEM_195 = VDEF <.MEM_194>
  __dnewD.58008 ={v} {CLOBBER};
  # DEBUG thisD.57991 => &D.57911.secondD.35539
  # DEBUG __strD.57990 => &D.57910
  # DEBUG thisD.50825 => &D.57910
  # DEBUG D#380ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG thisD.57992 => &D.57911.secondD.35539
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.57995 => D#381ptD.0
  # DEBUG __datD.57994 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __aD.57993 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_196 = VDEF <.MEM_195>
  MEM[(struct _Alloc_hiderD.11518 *)&D.57911 + 32B]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541;
  # VUSE <.MEM_196>
  # PT = nonlocal escaped null { D.57910 } (escaped)
  _109 = MEM[(charD.10 * *)&D.57910];
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_196>
  _110 = MEM[(long unsigned intD.14 *)&D.57910 + 8B];
  # DEBUG D#1ptD.0 => &D.57910
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.57910 } (escaped)
  _111 = _109 + _110;
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.57998 => &D.57911.secondD.35539
  # DEBUG __begD.57997 => _109
  # DEBUG __endD.57996 => _111
  # DEBUG thisD.58002 => &D.57911.secondD.35539
  # DEBUG __begD.58001 => _109
  # DEBUG __endD.58000 => _111
  # DEBUG thisD.58034 => &D.57911.secondD.35539
  # DEBUG __begD.58035 => _109
  # DEBUG __endD.58036 => _111
  # DEBUG __ptrD.51229 => _109
  # RANGE [0, 1]
  _260 = _111 != 0B;
  # RANGE [0, 1]
  _262 = _109 == 0B;
  # RANGE [0, 1]
  _261 = _260 & _262;
  if (_261 != 0)
    goto <bb 75>;
  else
    goto <bb 77>;
;;    succ:       75 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       77 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 7] # .MEM_198 = VDEF <.MEM_197>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _130 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.57911.secondD.35539, &__dnewD.58037, 0);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 (EH,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.57911.secondD.35539
  # DEBUG __pD.58056 => _130
  # DEBUG thisD.58055 => D#6ptD.0
  # .MEM_199 = VDEF <.MEM_198>
  MEM[(charD.10 * *)&D.57911 + 32B] = _130;
  # VUSE <.MEM_199>
  __dnew.111_131 = __dnewD.58037;
  # DEBUG D#7ptD.0 => &D.57911.secondD.35539
  # DEBUG __capacityD.58058 => __dnew.111_131
  # DEBUG thisD.58057 => D#7ptD.0
  # .MEM_200 = VDEF <.MEM_199>
  MEM[(size_typeD.11502 *)&D.57911 + 48B] = __dnew.111_131;
  # DEBUG D#3ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58040 => _130
  # DEBUG __k1D.58039 => _109
  # DEBUG __k2D.58038 => _111
  # DEBUG __dD.58043 => _130
  # DEBUG __sD.58042 => _109
  # DEBUG __nD.58041 => _110
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 248, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       77 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58040 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58039 => _109
  # DEBUG __k2D.58038 => _111
  # DEBUG __dD.58043 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __sD.58042 => _109
  # DEBUG __nD.58041 => _110
  if (_110 == 1)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [53.4%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [46.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [53.4%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_197>
  _133 = MEM[(const char_typeD.6439 &)_109];
  # DEBUG D#13ptD.0 => _109
  # DEBUG __c1D.58048 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58047 => D#13ptD.0
  # .MEM_201 = VDEF <.MEM_197>
  MEM[(char_typeD.6439 &)&D.57911 + 48] = _133;
  goto <bb 48>;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [46.6%]  (FALSE_VALUE,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  # _269 = PHI <&MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541(45), _130(44)>
  # .MEM_256 = PHI <.MEM_197(45), .MEM_200(44)>
  # DEBUG D#3ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58040 => _269
  # DEBUG __k1D.58039 => _109
  # DEBUG __k2D.58038 => _111
  # DEBUG __dD.58043 => _269
  # DEBUG __sD.58042 => _109
  # DEBUG __nD.58041 => _110
  # DEBUG __s1D.58046 => _269
  # DEBUG __s2D.58045 => _109
  # DEBUG __nD.58044 => _110
  # .MEM_202 = VDEF <.MEM_256>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  memcpyD.992 (_269, _109, _110);
  # VUSE <.MEM_202>
  pretmp_70 = __dnewD.58037;
  # VUSE <.MEM_202>
  pretmp_81 = MEM[(charD.10 * *)&D.57911 + 32B];
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_149 = PHI <.MEM_201(46), .MEM_202(47)>
  # prephitmp_93 = PHI <_110(46), pretmp_70(47)>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  # prephitmp_30 = PHI <&MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541(46), pretmp_81(47)>
  # DEBUG D#929ptD.0 => __dnewD.58037
  # DEBUG thisD.58050 => &D.57911.secondD.35539
  # DEBUG __nD.58049 => D#929ptD.0
  # DEBUG D#5ptD.0 => &D.57911.secondD.35539
  # DEBUG __lengthD.58052 => D#929ptD.0
  # DEBUG thisD.58051 => D#5ptD.0
  # .MEM_203 = VDEF <.MEM_149>
  MEM[(size_typeD.11502 *)&D.57911 + 40B] = prephitmp_93;
  # DEBUG D#3ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _136 = prephitmp_30 + prephitmp_93;
  # DEBUG __c1D.58054 => _136
  # DEBUG __c2D.58053 => D#13ptD.0
  # .MEM_204 = VDEF <.MEM_203>
  MEM[(char_typeD.6439 &)_136] = 0;
  # .MEM_205 = VDEF <.MEM_204>
  __dnewD.58037 ={v} {CLOBBER};
  # DEBUG thisD.57879 => D#902ptD.0
  # DEBUG __position$_M_nodeD.54345 => __i$_M_node_25
  # DEBUG __xD.57877 => &D.57911
  # DEBUG thisD.54299 => NULL
  # DEBUG __itD.54298 => &__positionD.57878
  # DEBUG thisD.57882 => D#941ptD.0
  # .MEM_206 = VDEF <.MEM_205>
  MEM[(struct _Rb_tree_const_iteratorD.32577 *)&__posD.57881] = __i$_M_node_25;
  # DEBUG __xD.57880 => &D.57911
  # DEBUG thisD.54253 => &__anD.57883
  # DEBUG __tD.54252 => D#941ptD.0
  # DEBUG __an$_M_tD.54246 => D#941ptD.0
  # DEBUG D#570ptD.0 => &__anD.57883
  # PT = nonlocal 
  _58 = &MEM[(struct mapD.32040 *)this_3(D) + 40B]._M_tD.32259;
  [LP 4] # .MEM_207 = VDEF <.MEM_206>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  D.57908 = _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.157.constprop.180D.55287 (_58, __posD.57881, &D.57911);
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                62 (EH,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       43 (EH,EXECUTABLE)
<L9>: [LP 7]
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                76 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_150 = PHI <.MEM_198(49), .MEM_228(76)>
<L7>:
  # DEBUG D#383ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.57963 => D#383ptD.0
  # DEBUG thisD.57964 => D#383ptD.0
  # DEBUG thisD.50871 => D#383ptD.0
  # VUSE <.MEM_150>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _112 = MEM[(charD.10 * *)&D.57911];
  # DEBUG D#3ptD.0 => D#383ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50872 => D#383ptD.0
  if (&MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541 != _112)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#383ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.57966 => D#383ptD.0
  # DEBUG __sizeD.57965 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#383ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#383ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#383ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.57969 => _112
  # DEBUG __aD.57967 => D#181ptD.0
  # DEBUG __nD.57968 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.57972 => _112
  # DEBUG thisD.57970 => D#177ptD.0
  # DEBUG D.57971 => D#178ptD.0
  # .MEM_229 = VDEF <.MEM_150>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_112);
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_151 = PHI <.MEM_150(50), .MEM_229(51)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#383ptD.0]._M_dataplusD.11519
  # DEBUG thisD.57973 => D#187ptD.0
  # DEBUG thisD.57974 => D#187ptD.0
  # DEBUG thisD.57975 => D#187ptD.0
  # .MEM_233 = VDEF <.MEM_151>
  MEM[(struct  &)&D.57911] ={v} {CLOBBER};
  [LP 8] resx 11
;;    succ:       53 (EH,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       52 (EH,EXECUTABLE)
<L10>: [LP 8]
  goto <bb 65> (<L6>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_207>
  # PT = nonlocal escaped 
  __i$_M_node_64 = MEM[(struct _Rb_tree_iteratorD.32575 *)&D.57908];
  # DEBUG __i$_M_nodeD.57907 => __i$_M_node_64
  # DEBUG thisD.58063 => &D.57911
  # DEBUG D#190ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.58064 => D#190ptD.0
  # DEBUG thisD.58065 => D#190ptD.0
  # DEBUG thisD.58074 => D#190ptD.0
  # VUSE <.MEM_207>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _137 = MEM[(charD.10 * *)&D.57911 + 32B];
  # DEBUG D#3ptD.0 => D#190ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58075 => D#190ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541 != _137)
    goto <bb 55>;
  else
    goto <bb 56>;
;;    succ:       55 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       54 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D#190ptD.0->D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58067 => D#190ptD.0
  # DEBUG __sizeD.58066 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#190ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#190ptD.0
  # DEBUG D#183ptD.0 => &D#190ptD.0->_M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58070 => _137
  # DEBUG __aD.58068 => D#181ptD.0
  # DEBUG __nD.58069 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58073 => _137
  # DEBUG thisD.58071 => D#177ptD.0
  # DEBUG D.58072 => D#178ptD.0
  # .MEM_208 = VDEF <.MEM_207>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_137);
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       54 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                55 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_152 = PHI <.MEM_207(54), .MEM_208(55)>
  # DEBUG D#187ptD.0 => &D#190ptD.0->_M_dataplusD.11519
  # DEBUG thisD.58076 => D#187ptD.0
  # DEBUG thisD.58077 => D#187ptD.0
  # DEBUG thisD.58078 => D#187ptD.0
  # .MEM_212 = VDEF <.MEM_152>
  MEM[(struct  &)&D.57911 + 32] ={v} {CLOBBER};
  # DEBUG D#189ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.58079 => D#189ptD.0
  # DEBUG thisD.58080 => D#189ptD.0
  # DEBUG thisD.58089 => D#189ptD.0
  # VUSE <.MEM_212>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _139 = MEM[(charD.10 * *)&D.57911];
  # DEBUG D#3ptD.0 => D#189ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58090 => D#189ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541 != _139)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 275, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#189ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58082 => D#189ptD.0
  # DEBUG __sizeD.58081 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#189ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#189ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#189ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58085 => _139
  # DEBUG __aD.58083 => D#181ptD.0
  # DEBUG __nD.58084 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58088 => _139
  # DEBUG thisD.58086 => D#177ptD.0
  # DEBUG D.58087 => D#178ptD.0
  # .MEM_213 = VDEF <.MEM_212>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_139);
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_153 = PHI <.MEM_212(56), .MEM_213(57)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#189ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58091 => D#187ptD.0
  # DEBUG thisD.58092 => D#187ptD.0
  # DEBUG thisD.58093 => D#187ptD.0
  # .MEM_219 = VDEF <.MEM_153>
  D.57911 ={v} {CLOBBER};
  # DEBUG thisD.57862 => &D.57910
  # DEBUG thisD.57863 => &D.57910
  # DEBUG thisD.57872 => &D.57910
  # VUSE <.MEM_219>
  # PT = nonlocal escaped null { D.57910 } (escaped)
  _65 = MEM[(charD.10 * *)&D.57910];
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.57873 => &D.57910
  if (&D.57910.D.11539._M_local_bufD.11541 != _65)
    goto <bb 59>;
  else
    goto <bb 60>;
;;    succ:       59 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       58 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.57910.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.57865 => &D.57910
  # DEBUG __sizeD.57864 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.57910
  # DEBUG D#183ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.57868 => _65
  # DEBUG __aD.57866 => D#181ptD.0
  # DEBUG __nD.57867 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.57871 => _65
  # DEBUG thisD.57869 => D#177ptD.0
  # DEBUG D.57870 => D#178ptD.0
  # .MEM_220 = VDEF <.MEM_219>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_65);
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       58 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_219(58), .MEM_220(59)>
  # DEBUG D#187ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG thisD.57874 => D#187ptD.0
  # DEBUG thisD.57875 => D#187ptD.0
  # DEBUG thisD.57876 => D#187ptD.0
  # .MEM_225 = VDEF <.MEM_154>
  D.57910 ={v} {CLOBBER};
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [78.3%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_66 = PHI <__i$_M_node_281(32), __i$_M_node_64(60), __i$_M_node_281(35)>
  # .MEM_155 = PHI <.MEM_146(32), .MEM_225(60), .MEM_146(35)>
  # DEBUG __i$_M_nodeD.57907 => __i$_M_node_66
  # DEBUG thisD.54322 => &__iD.57846
  # DEBUG thisD.54323 => __i$_M_node_66
  # DEBUG D#572ptD.0 => &MEM[(struct _Rb_tree_nodeD.32262 *)__i$_M_node_66]._M_value_fieldD.38939
  # DEBUG __rD.48150 => D#572ptD.0
  # PT = nonlocal escaped 
  _67 = &MEM[(struct pairD.32038 &)__i$_M_node_66 + 32].secondD.35539;
  # DEBUG D#574ptD.0 => {CLOBBER}
  # DEBUG __i$_M_nodeD.57907 => D#574ptD.0
  # DEBUG thisD.54371 => NULL
  # DEBUG __strD.54372 => value_11(D)
  # DEBUG thisD.54374 => NULL
  # DEBUG __strD.54373 => value_11(D)
  # .MEM_17 = VDEF <.MEM_155>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (_67, value_11(D));
  # DEBUG D#577ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.54391 => D#577ptD.0
  # VUSE <.MEM_17>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       48 (EH,EXECUTABLE)
<L5>: [LP 4]
  # .MEM_226 = VDEF <.MEM_207>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED1EvD.38800 (&D.57911);
  # .MEM_227 = VDEF <.MEM_226>
  D.57911 ={v} {CLOBBER};
  [LP 9] resx 10
;;    succ:       63 (EH,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 62, next block 64, flags: (NEW)
;;    pred:       62 (EH,EXECUTABLE)
<L11>: [LP 9]
  goto <bb 65> (<L6>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       37 (EH,EXECUTABLE)
<L8>: [LP 6]
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_156 = PHI <.MEM_233(53), .MEM_227(63), .MEM_188(64), .MEM_234(74)>
<L6>:
  # DEBUG thisD.57847 => &D.57910
  # DEBUG thisD.57848 => &D.57910
  # DEBUG thisD.57857 => &D.57910
  # VUSE <.MEM_156>
  # PT = nonlocal escaped null { D.57910 } (escaped)
  _68 = MEM[(charD.10 * *)&D.57910];
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.57858 => &D.57910
  if (&D.57910.D.11539._M_local_bufD.11541 != _68)
    goto <bb 66>;
  else
    goto <bb 67>;
;;    succ:       66 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.57910.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.57850 => &D.57910
  # DEBUG __sizeD.57849 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.57910
  # DEBUG D#183ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.57853 => _68
  # DEBUG __aD.57851 => D#181ptD.0
  # DEBUG __nD.57852 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.57856 => _68
  # DEBUG thisD.57854 => D#177ptD.0
  # DEBUG D.57855 => D#178ptD.0
  # .MEM_235 = VDEF <.MEM_156>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_157 = PHI <.MEM_156(65), .MEM_235(66)>
  # DEBUG D#187ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG thisD.57859 => D#187ptD.0
  # DEBUG thisD.57860 => D#187ptD.0
  # DEBUG thisD.57861 => D#187ptD.0
  # .MEM_240 = VDEF <.MEM_157>
  D.57910 ={v} {CLOBBER};
  resx 9
;;    succ:      

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L3>: [LP 2]
  # DEBUG thisD.54376 => &D.35592
  # DEBUG thisD.54377 => &D.35592
  # DEBUG thisD.54386 => &D.35592
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  _12 = MEM[(charD.10 * *)&D.35592];
  # DEBUG D#3ptD.0 => &D.35592
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.54387 => &D.35592
  if (&D.35592.D.11539._M_local_bufD.11541 != _12)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35592.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.54379 => &D.35592
  # DEBUG __sizeD.54378 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35592
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35592
  # DEBUG D#183ptD.0 => &D.35592._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.54382 => _12
  # DEBUG __aD.54380 => D#181ptD.0
  # DEBUG __nD.54381 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.54385 => _12
  # DEBUG thisD.54383 => D#177ptD.0
  # DEBUG D.54384 => D#178ptD.0
  # .MEM_18 = VDEF <.MEM_14>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_12);
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       68 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
  # DEBUG D#187ptD.0 => &D.35592._M_dataplusD.11519
  # DEBUG thisD.54388 => D#187ptD.0
  # DEBUG thisD.54389 => D#187ptD.0
  # DEBUG thisD.54390 => D#187ptD.0
  # .MEM_15 = VDEF <.MEM_1>
  D.35592 ={v} {CLOBBER};
  resx 6
;;    succ:      

;;   basic block 71, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       35 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                78 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_266 = PHI <.MEM_146(35), .MEM_146(30), .MEM_59(78)>
  # PT = nonlocal escaped 
  # __i$_M_node_271 = PHI <__i$_M_node_281(35), __i$_M_node_281(30), __i$_M_node_23(78)>
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       36 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58031 => D#932ptD.0
  # DEBUG __lastD.58030 => _106
  # DEBUG D#393ptD.0 => &__firstD.58031
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58033 => D#932ptD.0
  # DEBUG __lastD.58032 => _106
  # .MEM_187 = VDEF <.MEM_186>
  __dnewD.58008 = pretmp_237;
  if (pretmp_237 > 15)
    goto <bb 37>;
  else
    goto <bb 39>;
;;    succ:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       36 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 3] # .MEM_234 = VDEF <.MEM_186>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       74 (EH,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 (EH,EXECUTABLE)
<L12>: [LP 3]
  goto <bb 65> (<L6>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       42 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 5] # .MEM_228 = VDEF <.MEM_196>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       76 (EH,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 75, next block 77, flags: (NEW)
;;    pred:       75 (EH,EXECUTABLE)
<L13>: [LP 5]
  goto <bb 50> (<L7>);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 350, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 350
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       42 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58060 => _109
  # DEBUG __lastD.58059 => _111
  # DEBUG D#393ptD.0 => &__firstD.58060
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58062 => _109
  # DEBUG __lastD.58061 => _111
  # .MEM_197 = VDEF <.MEM_196>
  __dnewD.58037 = _110;
  if (_110 > 15)
    goto <bb 43>;
  else
    goto <bb 45>;
;;    succ:       43 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 78, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 77, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57834 => NULL
  # DEBUG D#208ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48821 => D#208ptD.0
  # DEBUG thisD.54364 => &match.37D.35533
  # DEBUG __itD.54365 => &D.35529
  # DEBUG match$_M_nodeD.54391 => __i$_M_node_277
  # DEBUG D#576ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54360 => D#576ptD.0
  # DEBUG D#53ptD.0 => &D#576ptD.0->_M_tD.32259
  # DEBUG thisD.54361 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54358 => &D.35588
  # DEBUG __itD.54359 => &D.35534
  # DEBUG thisD.54355 => &matchD.35415
  # DEBUG __xD.54356 => &D.35588
  # DEBUG D#208ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48821 => D#208ptD.0
  # DEBUG thisD.54364 => &match.37D.35533
  # DEBUG __itD.54365 => &D.35529
  # DEBUG match$_M_nodeD.54391 => __i$_M_node_277
  # DEBUG D#576ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54360 => D#576ptD.0
  # DEBUG D#53ptD.0 => &D#576ptD.0->_M_tD.32259
  # DEBUG thisD.54361 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54358 => &D.35588
  # DEBUG __itD.54359 => &D.35534
  # DEBUG thisD.54355 => &matchD.35415
  # DEBUG __xD.54356 => &D.35588
  # DEBUG D#902ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.57844 => D#902ptD.0
  # DEBUG __kD.57845 => field_4(D)
  # DEBUG thisD.57901 => D#902ptD.0
  # DEBUG __xD.57900 => field_4(D)
  # DEBUG D#941ptD.0 => &MEM[(struct mapD.32040 *)this_3(D) + 40B]._M_tD.32259
  # DEBUG thisD.57914 => D#941ptD.0
  # DEBUG __kD.57915 => field_4(D)
  # DEBUG thisD.57916 => D#941ptD.0
  # DEBUG D#35ptD.0 => D#941ptD.0
  # DEBUG thisD.48773 => D#35ptD.0
  # DEBUG D#207ptD.0 => D#941ptD.0
  # DEBUG __xD.57920 => NULL
  # DEBUG __yD.57919 => NULL
  # DEBUG __kD.57918 => field_4(D)
  # DEBUG __yD.57919 => __i$_M_node_23
  # DEBUG __xD.57920 => __i$_M_node_24
  if (__i$_M_node_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;
;;    succ:       71 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_3(D) + 56B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_3(D) + 56B]
Creating dr for MEM[(long unsigned int *)field_4(D) + 8B]
analyze_innermost: success.
	base_address: field_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)field_4(D) + 8B]
Creating dr for MEM[(char * *)field_4(D)]
analyze_innermost: success.
	base_address: field_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)field_4(D)]
Creating dr for MEM[(long unsigned int *)__i$_M_node_279 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_279 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_279 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_279 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_279 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_279 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_279 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_279 + 32B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_279 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_279 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_279 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_279 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_279 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_279 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_279 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_279 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_279 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_279 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_279 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_279 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_279 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_279 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_279 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_279 + 32B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_279 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_279 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_279 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_279 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_279 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_279 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_279 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_279 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B]
Applying pattern match.pd:397, generic-match.c:4039
Creating dr for MEM[(long unsigned int *)__i$_M_node_277 + 40B]
analyze_innermost: success.
	base_address: __i$_M_node_277
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__i$_M_node_277 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_277 + 32B]
analyze_innermost: success.
	base_address: __i$_M_node_277
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__i$_M_node_277 + 32B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_288 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_288 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_288 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_288 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_288 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_288 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_288 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_288 + 32B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_288 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_288 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_288 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_288 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_288 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_288 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_288 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_288 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_288 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_288 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_288 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_288 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_288 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_288 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_288 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_288 + 32B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_288 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_288 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_288 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_288 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_288 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_288 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_288 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_288 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_281 + 40B]
analyze_innermost: success.
	base_address: __i$_M_node_281
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__i$_M_node_281 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_281 + 32B]
analyze_innermost: success.
	base_address: __i$_M_node_281
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__i$_M_node_281 + 32B]
Creating dr for MEM[(struct _Alloc_hider *)&D.57910]._M_p
analyze_innermost: success.
	base_address: &D.57910
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.57910]
	Access function 0: 0
Creating dr for MEM[(size_type *)&D.57910 + 8B]
analyze_innermost: success.
	base_address: &D.57910
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.57910 + 8B]
Creating dr for MEM[(char_type &)&D.57910 + 16]
analyze_innermost: success.
	base_address: &D.57910
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&D.57910 + 16]
Creating dr for MEM[(struct _Alloc_hider *)&D.57911]._M_p
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.57911]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.57911]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.57911]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)&D.57911 + 16B]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.57911 + 16B]
Creating dr for MEM[(const char_type &)pretmp_239]
analyze_innermost: success.
	base_address: pretmp_239
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)pretmp_239]
Creating dr for MEM[(char_type &)&D.57911 + 16]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&D.57911 + 16]
Creating dr for MEM[(size_type *)&D.57911 + 8B]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.57911 + 8B]
Creating dr for MEM[(char_type &)_124]
analyze_innermost: success.
	base_address: prephitmp_49 + prephitmp_144
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_124]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.57911 + 32B]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.57911 + 32B]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)&D.57911 + 48B]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.57911 + 48B]
Creating dr for MEM[(const char_type &)_109]
analyze_innermost: success.
	base_address: _109
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)_109]
Creating dr for MEM[(char_type &)&D.57911 + 48]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&D.57911 + 48]
Creating dr for MEM[(size_type *)&D.57911 + 40B]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.57911 + 40B]
Creating dr for MEM[(char_type &)_136]
analyze_innermost: success.
	base_address: prephitmp_30 + prephitmp_93
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_136]
Creating dr for MEM[(struct _Rb_tree_iterator *)&D.57908]
analyze_innermost: success.
	base_address: &D.57908
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_iterator *)&D.57908]
Creating dr for MEM[(char * *)&D.57911 + 32B]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.57911 + 32B]
Creating dr for MEM[(char * *)&D.57911]
analyze_innermost: success.
	base_address: &D.57911
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.57911]
Creating dr for MEM[(char * *)&D.57910]
analyze_innermost: success.
	base_address: &D.57910
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.57910]
Creating dr for MEM[(char * *)&D.35592]
analyze_innermost: success.
	base_address: &D.35592
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.35592]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:86, LOOPS:2, CONDITIONS:37, STMTS:904)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG this => &match
    # DEBUG match$_M_node => 0B
    # DEBUG D#575 => &this_3(D)->_str_map
    # DEBUG this => D#575
    # DEBUG __x => field_4(D)
    # DEBUG D#899 => &MEM[(struct map *)this_3(D) + 40B]._M_t
    # DEBUG this => D#899
    # DEBUG __k => field_4(D)
    # DEBUG this => D#899
    __i$_M_node_23 = &MEM[(struct _Rb_tree *)this_3(D) + 40B]._M_impl._M_header;
    # VUSE <.MEM_2(D)>
    __i$_M_node_24 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 56B];
    # DEBUG D#35 => D#899
    # DEBUG this => D#35
    # DEBUG D#207 => D#899
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_4(D)
    # DEBUG __y => __i$_M_node_23
    # DEBUG __x => __i$_M_node_24
    if (__i$_M_node_24 == 0B)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 3>:
    # VUSE <.MEM_2(D)>
    pretmp_237 = MEM[(long unsigned int *)field_4(D) + 8B];
    # VUSE <.MEM_2(D)>
    pretmp_239 = MEM[(char * *)field_4(D)];
    goto <bb 7>;

  }
  bb_4 (preds = {bb_2 bb_80 bb_17 bb_19 }, succs = {bb_68 })
  {
    <bb 4>:
    # .MEM_290 = PHI <.MEM_2(D)(2), .MEM_59(80), .MEM_59(17), .MEM_59(19)>
    # DEBUG this => D#899
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_23
    # DEBUG D#208 => {CLOBBER}
    # DEBUG __j$_M_node => D#208
    # DEBUG this => &match.37
    # DEBUG __it => &D.35529
    # DEBUG match$_M_node => __i$_M_node_23
    # DEBUG D#576 => &this_3(D)->_str_map
    # DEBUG this => D#576
    # DEBUG D#53 => &D#576->_M_t
    # DEBUG this => D#53
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_23
    # DEBUG this => &D.35588
    # DEBUG __it => &D.35534
    # DEBUG this => &match
    # DEBUG __x => &D.35588
    # DEBUG D#208 => {CLOBBER}
    # DEBUG __j$_M_node => D#208
    # DEBUG this => &match.37
    # DEBUG __it => &D.35529
    # DEBUG match$_M_node => __i$_M_node_23
    # DEBUG D#576 => &this_3(D)->_str_map
    # DEBUG this => D#576
    # DEBUG D#53 => &D#576->_M_t
    # DEBUG this => D#53
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_23
    # DEBUG this => &D.35588
    # DEBUG __it => &D.35534
    # DEBUG this => &match
    # DEBUG __x => &D.35588
    # .MEM_13 = VDEF <.MEM_290>
    D.35592 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown string field: ", field_4(D)); [return slot optimization]
    # .MEM_14 = VDEF <.MEM_13>
    Configuration::ParseError (this_3(D), &D.35592, 0);

  }
  bb_14 (preds = {bb_5 }, succs = {bb_80 })
  {
    <bb 14>:
    # __i$_M_node_277 = PHI <__i$_M_node_77(5)>

  }
  bb_80 (preds = {bb_14 }, succs = {bb_4 bb_15 })
  {
    <bb 80>:
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_277
    # DEBUG __j$_M_node => __i$_M_node_277
    # DEBUG this => D#899
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_23
    # DEBUG this => &__j
    # DEBUG __x => NULL
    if (__i$_M_node_23 == __i$_M_node_277)
      goto <bb 4>;
    else
      goto <bb 15>;

  }
  bb_15 (preds = {bb_80 }, succs = {bb_16 bb_19 })
  {
    <bb 15>:
    # DEBUG __x => __i$_M_node_277
    # DEBUG __x => __i$_M_node_277
    # DEBUG this => __i$_M_node_277
    # DEBUG D#150 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_277]._M_value_field
    # DEBUG __r => D#150
    # DEBUG __x => D#150
    # DEBUG this => D#149
    # DEBUG D#901 => &MEM[(const struct pair &)__i$_M_node_277 + 32].first
    # DEBUG D#209 => &MEM[(struct _Rb_tree *)D#899]._M_impl._M_key_compare
    # DEBUG D#203 => D#209
    # DEBUG __x => field_4(D)
    # DEBUG __y => D#901
    # DEBUG this => D#203
    # DEBUG __lhs => field_4(D)
    # DEBUG __rhs => D#901
    # DEBUG this => field_4(D)
    # DEBUG __str => D#901
    # DEBUG D#938 => MEM[(long unsigned int *)field_4(D) + 8B]
    # DEBUG D#2 => field_4(D)
    # DEBUG this => D#2
    # DEBUG __size => D#938
    # VUSE <.MEM_59>
    _47 = MEM[(long unsigned int *)__i$_M_node_277 + 40B];
    # DEBUG D#2 => D#901
    # DEBUG this => D#2
    # DEBUG __osize => _47
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_267 = MIN_EXPR <_47, pretmp_237>;
    # DEBUG __len => D#896
    # DEBUG this => D#901
    # VUSE <.MEM_59>
    _50 = MEM[(char * *)__i$_M_node_277 + 32B];
    # DEBUG D#3 => D#901
    # DEBUG this => D#3
    # DEBUG D#937 => MEM[(char * *)field_4(D)]
    # DEBUG D#3 => field_4(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#937
    # DEBUG __s2 => _50
    # DEBUG __n => D#896
    # VUSE <.MEM_59>
    __r_52 = __builtin_memcmp (pretmp_239, _50, __len_267);
    # DEBUG __r => NULL
    if (__r_52 == 0)
      goto <bb 16>;
    else
      goto <bb 19>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_78 bb_17 })
  {
    <bb 16>:
    # DEBUG __n1 => D#938
    # DEBUG __n2 => _47
    _53 = pretmp_237 - _47;
    __d_54 = (const difference_type) _53;
    # DEBUG __d => __d_54
    if (__d_54 > 2147483647)
      goto <bb 78>;
    else
      goto <bb 17>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_4 bb_18 })
  {
    <bb 17>:
    if (__d_54 < -2147483648)
      goto <bb 4>;
    else
      goto <bb 18>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    __r_55 = (int) _53;

  }
  bb_19 (preds = {bb_15 bb_18 }, succs = {bb_4 bb_78 })
  {
    <bb 19>:
    # __r_56 = PHI <__r_52(15), __r_55(18)>
    # DEBUG __r => __r_56
    # DEBUG D#915 => {CLOBBER}
    # DEBUG __size => D#915
    # DEBUG D#916 => {CLOBBER}
    # DEBUG __osize => D#916
    if (__r_56 < 0)
      goto <bb 4>;
    else
      goto <bb 78>;

  }
  bb_22 (preds = {bb_78 }, succs = {bb_23 })
  {
    <bb 22>:

  }
  bb_30 (preds = {bb_20 }, succs = {bb_79 })
  {
    <bb 30>:
    # __i$_M_node_281 = PHI <__i$_M_node_33(20)>

  }
  bb_79 (preds = {bb_30 }, succs = {bb_71 bb_31 })
  {
    <bb 79>:
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_281
    # DEBUG __i$_M_node => __i$_M_node_281
    # DEBUG this => D#902
    # DEBUG D#53 => &D#902->_M_t
    # DEBUG this => D#53
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_23
    # DEBUG this => &__i
    # DEBUG __x => NULL
    if (__i$_M_node_23 == __i$_M_node_281)
      goto <bb 71>;
    else
      goto <bb 31>;

  }
  bb_31 (preds = {bb_79 }, succs = {bb_32 bb_35 })
  {
    <bb 31>:
    # DEBUG this => &__i
    # DEBUG this => __i$_M_node_281
    # DEBUG D#571 => &MEM[(struct _Rb_tree_node *)__i$_M_node_281]._M_value_field
    # DEBUG __r => D#571
    # DEBUG D#904 => &MEM[(struct pair &)__i$_M_node_281 + 32].first
    # DEBUG D#52 => D#902
    # DEBUG this => D#52
    # DEBUG D#51 => D#52
    # DEBUG D#50 => &D#51->_M_t
    # DEBUG D#49 => D#50
    # DEBUG this => D#49
    # DEBUG __x => field_4(D)
    # DEBUG __y => D#904
    # DEBUG this => D#203
    # DEBUG __lhs => field_4(D)
    # DEBUG __rhs => D#904
    # DEBUG this => field_4(D)
    # DEBUG __str => D#904
    # DEBUG D#934 => MEM[(long unsigned int *)field_4(D) + 8B]
    # DEBUG D#2 => field_4(D)
    # DEBUG this => D#2
    # DEBUG __size => D#934
    # VUSE <.MEM_146>
    _91 = MEM[(long unsigned int *)__i$_M_node_281 + 40B];
    # DEBUG D#2 => D#904
    # DEBUG this => D#2
    # DEBUG __osize => _91
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_264 = MIN_EXPR <_91, pretmp_237>;
    # DEBUG __len => D#898
    # DEBUG this => D#904
    # VUSE <.MEM_146>
    _94 = MEM[(char * *)__i$_M_node_281 + 32B];
    # DEBUG D#3 => D#904
    # DEBUG this => D#3
    # DEBUG D#933 => MEM[(char * *)field_4(D)]
    # DEBUG D#3 => field_4(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#933
    # DEBUG __s2 => _94
    # DEBUG __n => D#898
    # VUSE <.MEM_146>
    __r_96 = __builtin_memcmp (pretmp_239, _94, __len_264);
    # DEBUG __r => NULL
    if (__r_96 == 0)
      goto <bb 32>;
    else
      goto <bb 35>;

  }
  bb_32 (preds = {bb_31 }, succs = {bb_61 bb_33 })
  {
    <bb 32>:
    # DEBUG __n1 => D#934
    # DEBUG __n2 => _91
    _97 = pretmp_237 - _91;
    __d_98 = (const difference_type) _97;
    # DEBUG __d => __d_98
    if (__d_98 > 2147483647)
      goto <bb 61>;
    else
      goto <bb 33>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_36 bb_34 })
  {
    <bb 33>:
    if (__d_98 < -2147483648)
      goto <bb 36>;
    else
      goto <bb 34>;

  }
  bb_34 (preds = {bb_33 }, succs = {bb_35 })
  {
    <bb 34>:
    __r_99 = (int) _97;

  }
  bb_35 (preds = {bb_31 bb_34 }, succs = {bb_71 bb_61 })
  {
    <bb 35>:
    # __r_100 = PHI <__r_96(31), __r_99(34)>
    # DEBUG __r => __r_100
    # DEBUG D#927 => {CLOBBER}
    # DEBUG __size => D#927
    # DEBUG D#928 => {CLOBBER}
    # DEBUG __osize => D#928
    if (__r_100 < 0)
      goto <bb 71>;
    else
      goto <bb 61>;

  }
  bb_36 (preds = {bb_33 bb_85 }, succs = {bb_73 bb_72 })
  {
    <bb 36>:
    # .MEM_247 = PHI <.MEM_146(33), .MEM_266(85)>
    # __i$_M_node_25 = PHI <__i$_M_node_281(33), __i$_M_node_271(85)>
    # DEBUG this => &D.57910
    # DEBUG this => D#42
    # DEBUG D#41 => D#42
    # DEBUG this => D#41
    # DEBUG this => &D.57910
    # DEBUG D#148 => &D.57910._M_dataplus
    # DEBUG this => D#148
    # DEBUG __dat => &D.57910.D.11539._M_local_buf
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#148
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_183 = VDEF <.MEM_247>
    MEM[(struct _Alloc_hider *)&D.57910]._M_p = &D.57910.D.11539._M_local_buf;
    # DEBUG this => NULL
    # DEBUG this => NULL
    # DEBUG this => &D.57910
    # DEBUG __n => 0
    # DEBUG D#5 => &D.57910
    # DEBUG __length => 0
    # DEBUG this => D#5
    # .MEM_184 = VDEF <.MEM_183>
    MEM[(size_type *)&D.57910 + 8B] = 0;
    # DEBUG D#3 => &D.57910
    # DEBUG this => D#3
    # DEBUG __c1 => &D.57910.D.11539._M_local_buf
    # DEBUG __c2 => D#13
    # .MEM_185 = VDEF <.MEM_184>
    MEM[(char_type &)&D.57910 + 16] = 0;
    # DEBUG this => &D.57911
    # DEBUG __a => field_4(D)
    # DEBUG __b => &D.57910
    # DEBUG this => &D.57911.first
    # DEBUG __str => field_4(D)
    # DEBUG this => field_4(D)
    # DEBUG D#380 => &MEM[(const struct basic_string *)field_4(D)]._M_dataplus
    # DEBUG this => &D.57911.first
    # DEBUG D#381 => &MEM[(struct basic_string *)&D.57911]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_186 = VDEF <.MEM_185>
    MEM[(struct _Alloc_hider *)&D.57911]._M_p = &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf;
    # DEBUG D#932 => MEM[(char * *)field_4(D)]
    # DEBUG D#3 => field_4(D)
    # DEBUG this => D#3
    # DEBUG D#931 => MEM[(long unsigned int *)field_4(D) + 8B]
    # DEBUG D#1 => field_4(D)
    # DEBUG this => D#1
    _106 = pretmp_239 + pretmp_237;
    # DEBUG D#3 => field_4(D)
    # DEBUG this => D#3
    # DEBUG this => &D.57911.first
    # DEBUG __beg => D#932
    # DEBUG __end => _106
    # DEBUG this => &D.57911.first
    # DEBUG __beg => D#932
    # DEBUG __end => _106
    # DEBUG this => &D.57911.first
    # DEBUG __beg => D#932
    # DEBUG __end => _106
    # DEBUG __ptr => D#932
    _89 = _106 != 0B;
    _101 = pretmp_239 == 0B;
    _268 = _89 & _101;
    if (_268 != 0)
      goto <bb 73>;
    else
      goto <bb 72>;

  }
  bb_37 (preds = {bb_72 }, succs = {bb_38 bb_64 })
  {
    <bb 37>:
    # .MEM_188 = VDEF <.MEM_187>
    _118 = std::__cxx11::basic_string<char>::_M_create (&D.57911.first, &__dnew, 0);

  }
  bb_38 (preds = {bb_37 }, succs = {bb_41 })
  {
    <bb 38>:
    # DEBUG D#6 => &D.57911.first
    # DEBUG __p => _118
    # DEBUG this => D#6
    # .MEM_189 = VDEF <.MEM_188>
    MEM[(char * *)&D.57911] = _118;
    # VUSE <.MEM_189>
    __dnew.111_119 = __dnew;
    # DEBUG D#7 => &D.57911.first
    # DEBUG __capacity => __dnew.111_119
    # DEBUG this => D#7
    # .MEM_190 = VDEF <.MEM_189>
    MEM[(size_type *)&D.57911 + 16B] = __dnew.111_119;
    # DEBUG D#3 => &D.57911.first
    # DEBUG this => D#3
    # DEBUG __p => _118
    # DEBUG __k1 => D#932
    # DEBUG __k2 => _106
    # DEBUG __d => _118
    # DEBUG __s => D#932
    # DEBUG __n => D#931
    goto <bb 41>;

  }
  bb_39 (preds = {bb_72 }, succs = {bb_40 bb_41 })
  {
    <bb 39>:
    # DEBUG D#3 => &D.57911.first
    # DEBUG this => D#3
    # DEBUG __p => &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf
    # DEBUG __k1 => D#932
    # DEBUG __k2 => _106
    # DEBUG __d => &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf
    # DEBUG __s => D#932
    # DEBUG __n => D#931
    if (pretmp_237 == 1)
      goto <bb 40>;
    else
      goto <bb 41>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    # VUSE <.MEM_187>
    _121 = MEM[(const char_type &)pretmp_239];
    # DEBUG D#13 => D#932
    # DEBUG __c1 => &MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf
    # DEBUG __c2 => D#13
    # .MEM_191 = VDEF <.MEM_187>
    MEM[(char_type &)&D.57911 + 16] = _121;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 bb_38 }, succs = {bb_42 })
  {
    <bb 41>:
    # _270 = PHI <&MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf(39), _118(38)>
    # .MEM_254 = PHI <.MEM_187(39), .MEM_190(38)>
    # DEBUG D#3 => &D.57911.first
    # DEBUG this => D#3
    # DEBUG __p => _270
    # DEBUG __k1 => D#932
    # DEBUG __k2 => _106
    # DEBUG __d => _270
    # DEBUG __s => D#932
    # DEBUG __n => D#931
    # DEBUG __s1 => _270
    # DEBUG __s2 => D#932
    # DEBUG __n => D#931
    # .MEM_192 = VDEF <.MEM_254>
    __builtin_memcpy (_270, pretmp_239, pretmp_237);
    # VUSE <.MEM_192>
    pretmp_158 = __dnew;
    # VUSE <.MEM_192>
    pretmp_75 = MEM[(char * *)&D.57911];

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_75 bb_77 })
  {
    <bb 42>:
    # .MEM_147 = PHI <.MEM_191(40), .MEM_192(41)>
    # prephitmp_144 = PHI <pretmp_237(40), pretmp_158(41)>
    # prephitmp_49 = PHI <&MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf(40), pretmp_75(41)>
    # DEBUG D#930 => __dnew
    # DEBUG this => &D.57911.first
    # DEBUG __n => D#930
    # DEBUG D#5 => &D.57911.first
    # DEBUG __length => D#930
    # DEBUG this => D#5
    # .MEM_193 = VDEF <.MEM_147>
    MEM[(size_type *)&D.57911 + 8B] = prephitmp_144;
    # DEBUG D#3 => &D.57911.first
    # DEBUG this => D#3
    _124 = prephitmp_49 + prephitmp_144;
    # DEBUG __c1 => _124
    # DEBUG __c2 => D#13
    # .MEM_194 = VDEF <.MEM_193>
    MEM[(char_type &)_124] = 0;
    # .MEM_195 = VDEF <.MEM_194>
    __dnew ={v} {CLOBBER};
    # DEBUG this => &D.57911.second
    # DEBUG __str => &D.57910
    # DEBUG this => &D.57910
    # DEBUG D#380 => &D.57910._M_dataplus
    # DEBUG this => &D.57911.second
    # DEBUG D#381 => &MEM[(struct basic_string *)&D.57911 + 32B]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_196 = VDEF <.MEM_195>
    MEM[(struct _Alloc_hider *)&D.57911 + 32B]._M_p = &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf;
    # VUSE <.MEM_196>
    _109 = MEM[(char * *)&D.57910];
    # DEBUG D#3 => &D.57910
    # DEBUG this => D#3
    # VUSE <.MEM_196>
    _110 = MEM[(long unsigned int *)&D.57910 + 8B];
    # DEBUG D#1 => &D.57910
    # DEBUG this => D#1
    _111 = _109 + _110;
    # DEBUG D#3 => &D.57910
    # DEBUG this => D#3
    # DEBUG this => &D.57911.second
    # DEBUG __beg => _109
    # DEBUG __end => _111
    # DEBUG this => &D.57911.second
    # DEBUG __beg => _109
    # DEBUG __end => _111
    # DEBUG this => &D.57911.second
    # DEBUG __beg => _109
    # DEBUG __end => _111
    # DEBUG __ptr => _109
    _260 = _111 != 0B;
    _262 = _109 == 0B;
    _261 = _260 & _262;
    if (_261 != 0)
      goto <bb 75>;
    else
      goto <bb 77>;

  }
  bb_43 (preds = {bb_77 }, succs = {bb_44 bb_49 })
  {
    <bb 43>:
    # .MEM_198 = VDEF <.MEM_197>
    _130 = std::__cxx11::basic_string<char>::_M_create (&D.57911.second, &__dnew, 0);

  }
  bb_44 (preds = {bb_43 }, succs = {bb_47 })
  {
    <bb 44>:
    # DEBUG D#6 => &D.57911.second
    # DEBUG __p => _130
    # DEBUG this => D#6
    # .MEM_199 = VDEF <.MEM_198>
    MEM[(char * *)&D.57911 + 32B] = _130;
    # VUSE <.MEM_199>
    __dnew.111_131 = __dnew;
    # DEBUG D#7 => &D.57911.second
    # DEBUG __capacity => __dnew.111_131
    # DEBUG this => D#7
    # .MEM_200 = VDEF <.MEM_199>
    MEM[(size_type *)&D.57911 + 48B] = __dnew.111_131;
    # DEBUG D#3 => &D.57911.second
    # DEBUG this => D#3
    # DEBUG __p => _130
    # DEBUG __k1 => _109
    # DEBUG __k2 => _111
    # DEBUG __d => _130
    # DEBUG __s => _109
    # DEBUG __n => _110
    goto <bb 47>;

  }
  bb_45 (preds = {bb_77 }, succs = {bb_46 bb_47 })
  {
    <bb 45>:
    # DEBUG D#3 => &D.57911.second
    # DEBUG this => D#3
    # DEBUG __p => &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf
    # DEBUG __k1 => _109
    # DEBUG __k2 => _111
    # DEBUG __d => &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf
    # DEBUG __s => _109
    # DEBUG __n => _110
    if (_110 == 1)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_46 (preds = {bb_45 }, succs = {bb_48 })
  {
    <bb 46>:
    # VUSE <.MEM_197>
    _133 = MEM[(const char_type &)_109];
    # DEBUG D#13 => _109
    # DEBUG __c1 => &MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf
    # DEBUG __c2 => D#13
    # .MEM_201 = VDEF <.MEM_197>
    MEM[(char_type &)&D.57911 + 48] = _133;
    goto <bb 48>;

  }
  bb_47 (preds = {bb_45 bb_44 }, succs = {bb_48 })
  {
    <bb 47>:
    # _269 = PHI <&MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf(45), _130(44)>
    # .MEM_256 = PHI <.MEM_197(45), .MEM_200(44)>
    # DEBUG D#3 => &D.57911.second
    # DEBUG this => D#3
    # DEBUG __p => _269
    # DEBUG __k1 => _109
    # DEBUG __k2 => _111
    # DEBUG __d => _269
    # DEBUG __s => _109
    # DEBUG __n => _110
    # DEBUG __s1 => _269
    # DEBUG __s2 => _109
    # DEBUG __n => _110
    # .MEM_202 = VDEF <.MEM_256>
    __builtin_memcpy (_269, _109, _110);
    # VUSE <.MEM_202>
    pretmp_70 = __dnew;
    # VUSE <.MEM_202>
    pretmp_81 = MEM[(char * *)&D.57911 + 32B];

  }
  bb_48 (preds = {bb_46 bb_47 }, succs = {bb_54 bb_62 })
  {
    <bb 48>:
    # .MEM_149 = PHI <.MEM_201(46), .MEM_202(47)>
    # prephitmp_93 = PHI <_110(46), pretmp_70(47)>
    # prephitmp_30 = PHI <&MEM[(struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf(46), pretmp_81(47)>
    # DEBUG D#929 => __dnew
    # DEBUG this => &D.57911.second
    # DEBUG __n => D#929
    # DEBUG D#5 => &D.57911.second
    # DEBUG __length => D#929
    # DEBUG this => D#5
    # .MEM_203 = VDEF <.MEM_149>
    MEM[(size_type *)&D.57911 + 40B] = prephitmp_93;
    # DEBUG D#3 => &D.57911.second
    # DEBUG this => D#3
    _136 = prephitmp_30 + prephitmp_93;
    # DEBUG __c1 => _136
    # DEBUG __c2 => D#13
    # .MEM_204 = VDEF <.MEM_203>
    MEM[(char_type &)_136] = 0;
    # .MEM_205 = VDEF <.MEM_204>
    __dnew ={v} {CLOBBER};
    # DEBUG this => D#902
    # DEBUG __position$_M_node => __i$_M_node_25
    # DEBUG __x => &D.57911
    # DEBUG this => NULL
    # DEBUG __it => &__position
    # DEBUG this => D#941
    # .MEM_206 = VDEF <.MEM_205>
    MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_25;
    # DEBUG __x => &D.57911
    # DEBUG this => &__an
    # DEBUG __t => D#941
    # DEBUG __an$_M_t => D#941
    # DEBUG D#570 => &__an
    _58 = &MEM[(struct map *)this_3(D) + 40B]._M_t;
    # .MEM_207 = VDEF <.MEM_206>
    D.57908 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.157.constprop (_58, __pos, &D.57911);
    goto <bb 54>;

  }
  bb_49 (preds = {bb_43 }, succs = {bb_50 })
  {
  <L9>:

  }
  bb_50 (preds = {bb_49 bb_76 }, succs = {bb_51 bb_52 })
  {
    # .MEM_150 = PHI <.MEM_198(49), .MEM_228(76)>
  <L7>:
    # DEBUG D#383 => &D.57911.first
    # DEBUG this => D#383
    # DEBUG this => D#383
    # DEBUG this => D#383
    # VUSE <.MEM_150>
    _112 = MEM[(char * *)&D.57911];
    # DEBUG D#3 => D#383
    # DEBUG this => D#3
    # DEBUG this => D#383
    if (&MEM[(struct basic_string *)&D.57911].D.11539._M_local_buf != _112)
      goto <bb 51>;
    else
      goto <bb 52>;

  }
  bb_51 (preds = {bb_50 }, succs = {bb_52 })
  {
    <bb 51>:
    # DEBUG D#186 => MEM[(struct basic_string *)D#383].D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#383
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#383
    # DEBUG this => D#3
    # DEBUG this => D#383
    # DEBUG D#183 => &MEM[(struct basic_string *)D#383]._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _112
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _112
    # DEBUG this => D#177
    # DEBUG D.57971 => D#178
    # .MEM_229 = VDEF <.MEM_150>
    operator delete (_112);

  }
  bb_52 (preds = {bb_50 bb_51 }, succs = {bb_53 })
  {
    <bb 52>:
    # .MEM_151 = PHI <.MEM_150(50), .MEM_229(51)>
    # DEBUG D#187 => &MEM[(struct basic_string *)D#383]._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_233 = VDEF <.MEM_151>
    MEM[(struct  &)&D.57911] ={v} {CLOBBER};
    resx 11

  }
  bb_53 (preds = {bb_52 }, succs = {bb_65 })
  {
  <L10>:
    goto <bb 65> (<L6>);

  }
  bb_54 (preds = {bb_48 }, succs = {bb_55 bb_56 })
  {
    <bb 54>:
    # VUSE <.MEM_207>
    __i$_M_node_64 = MEM[(struct _Rb_tree_iterator *)&D.57908];
    # DEBUG __i$_M_node => __i$_M_node_64
    # DEBUG this => &D.57911
    # DEBUG D#190 => &D.57911.second
    # DEBUG this => D#190
    # DEBUG this => D#190
    # DEBUG this => D#190
    # VUSE <.MEM_207>
    _137 = MEM[(char * *)&D.57911 + 32B];
    # DEBUG D#3 => D#190
    # DEBUG this => D#3
    # DEBUG this => D#190
    if (&MEM[(const struct basic_string *)&D.57911 + 32B].D.11539._M_local_buf != _137)
      goto <bb 55>;
    else
      goto <bb 56>;

  }
  bb_55 (preds = {bb_54 }, succs = {bb_56 })
  {
    <bb 55>:
    # DEBUG D#186 => D#190->D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#190
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#190
    # DEBUG this => D#3
    # DEBUG this => D#190
    # DEBUG D#183 => &D#190->_M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _137
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _137
    # DEBUG this => D#177
    # DEBUG D.58072 => D#178
    # .MEM_208 = VDEF <.MEM_207>
    operator delete (_137);

  }
  bb_56 (preds = {bb_54 bb_55 }, succs = {bb_57 bb_58 })
  {
    <bb 56>:
    # .MEM_152 = PHI <.MEM_207(54), .MEM_208(55)>
    # DEBUG D#187 => &D#190->_M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_212 = VDEF <.MEM_152>
    MEM[(struct  &)&D.57911 + 32] ={v} {CLOBBER};
    # DEBUG D#189 => &D.57911.first
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # VUSE <.MEM_212>
    _139 = MEM[(char * *)&D.57911];
    # DEBUG D#3 => D#189
    # DEBUG this => D#3
    # DEBUG this => D#189
    if (&MEM[(const struct basic_string *)&D.57911].D.11539._M_local_buf != _139)
      goto <bb 57>;
    else
      goto <bb 58>;

  }
  bb_57 (preds = {bb_56 }, succs = {bb_58 })
  {
    <bb 57>:
    # DEBUG D#186 => MEM[(struct basic_string *)D#189].D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#189
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#189
    # DEBUG this => D#3
    # DEBUG this => D#189
    # DEBUG D#183 => &MEM[(struct basic_string *)D#189]._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _139
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _139
    # DEBUG this => D#177
    # DEBUG D.58087 => D#178
    # .MEM_213 = VDEF <.MEM_212>
    operator delete (_139);

  }
  bb_58 (preds = {bb_56 bb_57 }, succs = {bb_59 bb_60 })
  {
    <bb 58>:
    # .MEM_153 = PHI <.MEM_212(56), .MEM_213(57)>
    # DEBUG D#187 => &MEM[(struct basic_string *)D#189]._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_219 = VDEF <.MEM_153>
    D.57911 ={v} {CLOBBER};
    # DEBUG this => &D.57910
    # DEBUG this => &D.57910
    # DEBUG this => &D.57910
    # VUSE <.MEM_219>
    _65 = MEM[(char * *)&D.57910];
    # DEBUG D#3 => &D.57910
    # DEBUG this => D#3
    # DEBUG this => &D.57910
    if (&D.57910.D.11539._M_local_buf != _65)
      goto <bb 59>;
    else
      goto <bb 60>;

  }
  bb_59 (preds = {bb_58 }, succs = {bb_60 })
  {
    <bb 59>:
    # DEBUG D#186 => D.57910.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.57910
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.57910
    # DEBUG this => D#3
    # DEBUG this => &D.57910
    # DEBUG D#183 => &D.57910._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _65
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _65
    # DEBUG this => D#177
    # DEBUG D.57870 => D#178
    # .MEM_220 = VDEF <.MEM_219>
    operator delete (_65);

  }
  bb_60 (preds = {bb_58 bb_59 }, succs = {bb_61 })
  {
    <bb 60>:
    # .MEM_154 = PHI <.MEM_219(58), .MEM_220(59)>
    # DEBUG D#187 => &D.57910._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_225 = VDEF <.MEM_154>
    D.57910 ={v} {CLOBBER};

  }
  bb_61 (preds = {bb_32 bb_60 bb_35 }, succs = {bb_1 })
  {
    <bb 61>:
    # __i$_M_node_66 = PHI <__i$_M_node_281(32), __i$_M_node_64(60), __i$_M_node_281(35)>
    # .MEM_155 = PHI <.MEM_146(32), .MEM_225(60), .MEM_146(35)>
    # DEBUG __i$_M_node => __i$_M_node_66
    # DEBUG this => &__i
    # DEBUG this => __i$_M_node_66
    # DEBUG D#572 => &MEM[(struct _Rb_tree_node *)__i$_M_node_66]._M_value_field
    # DEBUG __r => D#572
    _67 = &MEM[(struct pair &)__i$_M_node_66 + 32].second;
    # DEBUG D#574 => {CLOBBER}
    # DEBUG __i$_M_node => D#574
    # DEBUG this => NULL
    # DEBUG __str => value_11(D)
    # DEBUG this => NULL
    # DEBUG __str => value_11(D)
    # .MEM_17 = VDEF <.MEM_155>
    std::__cxx11::basic_string<char>::_M_assign (_67, value_11(D));
    # DEBUG D#577 => {CLOBBER}
    # DEBUG match$_M_node => D#577
    # VUSE <.MEM_17>
    return;

  }
  bb_62 (preds = {bb_48 }, succs = {bb_63 })
  {
  <L5>:
    # .MEM_226 = VDEF <.MEM_207>
    std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::~pair (&D.57911);
    # .MEM_227 = VDEF <.MEM_226>
    D.57911 ={v} {CLOBBER};
    resx 10

  }
  bb_63 (preds = {bb_62 }, succs = {bb_65 })
  {
  <L11>:
    goto <bb 65> (<L6>);

  }
  bb_64 (preds = {bb_37 }, succs = {bb_65 })
  {
  <L8>:

  }
  bb_65 (preds = {bb_53 bb_63 bb_64 bb_74 }, succs = {bb_66 bb_67 })
  {
    # .MEM_156 = PHI <.MEM_233(53), .MEM_227(63), .MEM_188(64), .MEM_234(74)>
  <L6>:
    # DEBUG this => &D.57910
    # DEBUG this => &D.57910
    # DEBUG this => &D.57910
    # VUSE <.MEM_156>
    _68 = MEM[(char * *)&D.57910];
    # DEBUG D#3 => &D.57910
    # DEBUG this => D#3
    # DEBUG this => &D.57910
    if (&D.57910.D.11539._M_local_buf != _68)
      goto <bb 66>;
    else
      goto <bb 67>;

  }
  bb_66 (preds = {bb_65 }, succs = {bb_67 })
  {
    <bb 66>:
    # DEBUG D#186 => D.57910.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.57910
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.57910
    # DEBUG this => D#3
    # DEBUG this => &D.57910
    # DEBUG D#183 => &D.57910._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _68
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _68
    # DEBUG this => D#177
    # DEBUG D.57855 => D#178
    # .MEM_235 = VDEF <.MEM_156>
    operator delete (_68);

  }
  bb_67 (preds = {bb_65 bb_66 }, succs = {})
  {
    <bb 67>:
    # .MEM_157 = PHI <.MEM_156(65), .MEM_235(66)>
    # DEBUG D#187 => &D.57910._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_240 = VDEF <.MEM_157>
    D.57910 ={v} {CLOBBER};
    resx 9

  }
  bb_68 (preds = {bb_4 }, succs = {bb_69 bb_70 })
  {
  <L3>:
    # DEBUG this => &D.35592
    # DEBUG this => &D.35592
    # DEBUG this => &D.35592
    # VUSE <.MEM_14>
    _12 = MEM[(char * *)&D.35592];
    # DEBUG D#3 => &D.35592
    # DEBUG this => D#3
    # DEBUG this => &D.35592
    if (&D.35592.D.11539._M_local_buf != _12)
      goto <bb 69>;
    else
      goto <bb 70>;

  }
  bb_69 (preds = {bb_68 }, succs = {bb_70 })
  {
    <bb 69>:
    # DEBUG D#186 => D.35592.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.35592
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.35592
    # DEBUG this => D#3
    # DEBUG this => &D.35592
    # DEBUG D#183 => &D.35592._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _12
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _12
    # DEBUG this => D#177
    # DEBUG D.54384 => D#178
    # .MEM_18 = VDEF <.MEM_14>
    operator delete (_12);

  }
  bb_70 (preds = {bb_68 bb_69 }, succs = {})
  {
    <bb 70>:
    # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
    # DEBUG D#187 => &D.35592._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_15 = VDEF <.MEM_1>
    D.35592 ={v} {CLOBBER};
    resx 6

  }
  bb_71 (preds = {bb_35 bb_79 bb_78 }, succs = {bb_85 })
  {
    <bb 71>:
    # .MEM_266 = PHI <.MEM_146(35), .MEM_146(79), .MEM_59(78)>
    # __i$_M_node_271 = PHI <__i$_M_node_281(35), __i$_M_node_281(79), __i$_M_node_23(78)>

  }
  bb_85 (preds = {bb_71 }, succs = {bb_36 })
  {
    <bb 85>:
    goto <bb 36>;

  }
  bb_72 (preds = {bb_36 }, succs = {bb_37 bb_39 })
  {
    <bb 72>:
    # DEBUG __first => D#932
    # DEBUG __last => _106
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => D#932
    # DEBUG __last => _106
    # .MEM_187 = VDEF <.MEM_186>
    __dnew = pretmp_237;
    if (pretmp_237 > 15)
      goto <bb 37>;
    else
      goto <bb 39>;

  }
  bb_73 (preds = {bb_36 }, succs = {bb_74 })
  {
    <bb 73>:
    # .MEM_234 = VDEF <.MEM_186>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_74 (preds = {bb_73 }, succs = {bb_65 })
  {
  <L12>:
    goto <bb 65> (<L6>);

  }
  bb_75 (preds = {bb_42 }, succs = {bb_76 })
  {
    <bb 75>:
    # .MEM_228 = VDEF <.MEM_196>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_76 (preds = {bb_75 }, succs = {bb_50 })
  {
  <L13>:
    goto <bb 50> (<L7>);

  }
  bb_77 (preds = {bb_42 }, succs = {bb_43 bb_45 })
  {
    <bb 77>:
    # DEBUG __first => _109
    # DEBUG __last => _111
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => _109
    # DEBUG __last => _111
    # .MEM_197 = VDEF <.MEM_196>
    __dnew = _110;
    if (_110 > 15)
      goto <bb 43>;
    else
      goto <bb 45>;

  }
  bb_78 (preds = {bb_19 bb_16 }, succs = {bb_71 bb_22 })
  {
    <bb 78>:
    # DEBUG __r => NULL
    # DEBUG D#208 => {CLOBBER}
    # DEBUG __j$_M_node => D#208
    # DEBUG this => &match.37
    # DEBUG __it => &D.35529
    # DEBUG match$_M_node => __i$_M_node_277
    # DEBUG D#576 => &this_3(D)->_str_map
    # DEBUG this => D#576
    # DEBUG D#53 => &D#576->_M_t
    # DEBUG this => D#53
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_23
    # DEBUG this => &D.35588
    # DEBUG __it => &D.35534
    # DEBUG this => &match
    # DEBUG __x => &D.35588
    # DEBUG D#208 => {CLOBBER}
    # DEBUG __j$_M_node => D#208
    # DEBUG this => &match.37
    # DEBUG __it => &D.35529
    # DEBUG match$_M_node => __i$_M_node_277
    # DEBUG D#576 => &this_3(D)->_str_map
    # DEBUG this => D#576
    # DEBUG D#53 => &D#576->_M_t
    # DEBUG this => D#53
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_23
    # DEBUG this => &D.35588
    # DEBUG __it => &D.35534
    # DEBUG this => &match
    # DEBUG __x => &D.35588
    # DEBUG D#902 => &this_3(D)->_str_map
    # DEBUG this => D#902
    # DEBUG __k => field_4(D)
    # DEBUG this => D#902
    # DEBUG __x => field_4(D)
    # DEBUG D#941 => &MEM[(struct map *)this_3(D) + 40B]._M_t
    # DEBUG this => D#941
    # DEBUG __k => field_4(D)
    # DEBUG this => D#941
    # DEBUG D#35 => D#941
    # DEBUG this => D#35
    # DEBUG D#207 => D#941
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_4(D)
    # DEBUG __y => __i$_M_node_23
    # DEBUG __x => __i$_M_node_24
    if (__i$_M_node_24 == 0B)
      goto <bb 71>;
    else
      goto <bb 22>;

  }
  loop_2 (header = 23, latch = 21, niter = )
  {
    bb_20 (preds = {bb_84 bb_83 }, succs = {bb_30 bb_21 })
    {
      <bb 20>:
      # __i$_M_node_34 = PHI <__i$_M_node_73(84), __i$_M_node_74(83)>
      # __i$_M_node_33 = PHI <__i$_M_node_288(84), __i$_M_node_284(83)>
      # DEBUG __y => __i$_M_node_33
      # DEBUG __x => __i$_M_node_34
      if (__i$_M_node_34 == 0B)
        goto <bb 30>;
      else
        goto <bb 21>;

    }
    bb_21 (preds = {bb_20 }, succs = {bb_23 })
    {
      <bb 21>:
      goto <bb 23>;

    }
    bb_23 (preds = {bb_22 bb_21 }, succs = {bb_24 bb_27 })
    {
      <bb 23>:
      # __i$_M_node_288 = PHI <__i$_M_node_24(22), __i$_M_node_34(21)>
      # __i$_M_node_284 = PHI <__i$_M_node_23(22), __i$_M_node_33(21)>
      # .MEM_146 = PHI <.MEM_59(22), .MEM_146(21)>
      # DEBUG __y => __i$_M_node_284
      # DEBUG __x => __i$_M_node_288
      # DEBUG __x => __i$_M_node_288
      # DEBUG __x => __i$_M_node_288
      # DEBUG this => __i$_M_node_288
      # DEBUG D#204 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_288]._M_value_field
      # DEBUG __r => D#204
      # DEBUG __x => D#204
      # DEBUG this => D#149
      # DEBUG D#903 => &MEM[(const struct pair &)__i$_M_node_288 + 32].first
      # DEBUG D#205 => &D#206->_M_impl._M_key_compare
      # DEBUG D#203 => D#205
      # DEBUG __x => D#903
      # DEBUG __y => field_4(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#903
      # DEBUG __rhs => field_4(D)
      # DEBUG this => D#903
      # DEBUG __str => field_4(D)
      # VUSE <.MEM_146>
      _78 = MEM[(long unsigned int *)__i$_M_node_288 + 40B];
      # DEBUG D#2 => D#903
      # DEBUG this => D#2
      # DEBUG __size => _78
      # DEBUG D#936 => MEM[(long unsigned int *)field_4(D) + 8B]
      # DEBUG D#2 => field_4(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#936
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_263 = MIN_EXPR <_78, pretmp_237>;
      # DEBUG __len => D#897
      # DEBUG this => field_4(D)
      # DEBUG D#935 => MEM[(char * *)field_4(D)]
      # DEBUG D#3 => field_4(D)
      # DEBUG this => D#3
      # VUSE <.MEM_146>
      _83 = MEM[(char * *)__i$_M_node_288 + 32B];
      # DEBUG D#3 => D#903
      # DEBUG this => D#3
      # DEBUG __s1 => _83
      # DEBUG __s2 => D#935
      # DEBUG __n => D#897
      # VUSE <.MEM_146>
      __r_84 = __builtin_memcmp (_83, pretmp_239, __len_263);
      # DEBUG __r => NULL
      if (__r_84 == 0)
        goto <bb 24>;
      else
        goto <bb 27>;

    }
    bb_24 (preds = {bb_23 }, succs = {bb_28 bb_25 })
    {
      <bb 24>:
      # DEBUG __n1 => _78
      # DEBUG __n2 => D#936
      _85 = _78 - pretmp_237;
      __d_86 = (const difference_type) _85;
      # DEBUG __d => __d_86
      if (__d_86 > 2147483647)
        goto <bb 28>;
      else
        goto <bb 25>;

    }
    bb_25 (preds = {bb_24 }, succs = {bb_29 bb_26 })
    {
      <bb 25>:
      if (__d_86 < -2147483648)
        goto <bb 29>;
      else
        goto <bb 26>;

    }
    bb_26 (preds = {bb_25 }, succs = {bb_27 })
    {
      <bb 26>:
      __r_87 = (int) _85;

    }
    bb_27 (preds = {bb_23 bb_26 }, succs = {bb_28 bb_29 })
    {
      <bb 27>:
      # __r_88 = PHI <__r_84(23), __r_87(26)>
      # DEBUG __r => __r_88
      # DEBUG D#921 => {CLOBBER}
      # DEBUG __size => D#921
      # DEBUG D#922 => {CLOBBER}
      # DEBUG __osize => D#922
      if (__r_88 >= 0)
        goto <bb 28>;
      else
        goto <bb 29>;

    }
    bb_28 (preds = {bb_27 bb_24 }, succs = {bb_84 })
    {
      <bb 28>:

    }
    bb_84 (preds = {bb_28 }, succs = {bb_20 })
    {
      <bb 84>:
      # DEBUG __r => NULL
      # DEBUG __y => __i$_M_node_288
      # VUSE <.MEM_146>
      __i$_M_node_73 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 16B];
      # DEBUG D#44 => __i$_M_node_288
      # DEBUG __x => D#44
      # DEBUG __x => NULL
      goto <bb 20>;

    }
    bb_29 (preds = {bb_27 bb_25 }, succs = {bb_83 })
    {
      <bb 29>:

    }
    bb_83 (preds = {bb_29 }, succs = {bb_20 })
    {
      <bb 83>:
      # DEBUG __r => NULL
      # VUSE <.MEM_146>
      __i$_M_node_74 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_288 + 24B];
      # DEBUG D#43 => __i$_M_node_288
      # DEBUG __x => D#43
      # DEBUG __x => NULL
      goto <bb 20>;

    }
  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_82 bb_81 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # __i$_M_node_57 = PHI <__i$_M_node_28(82), __i$_M_node_29(81)>
      # __i$_M_node_77 = PHI <__i$_M_node_279(82), __i$_M_node_275(81)>
      # DEBUG __y => __i$_M_node_77
      # DEBUG __x => __i$_M_node_57
      if (__i$_M_node_57 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_3 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # __i$_M_node_279 = PHI <__i$_M_node_24(3), __i$_M_node_57(6)>
      # __i$_M_node_275 = PHI <__i$_M_node_23(3), __i$_M_node_77(6)>
      # .MEM_59 = PHI <.MEM_2(D)(3), .MEM_59(6)>
      # DEBUG __y => __i$_M_node_275
      # DEBUG __x => __i$_M_node_279
      # DEBUG __x => __i$_M_node_279
      # DEBUG __x => __i$_M_node_279
      # DEBUG this => __i$_M_node_279
      # DEBUG D#204 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_279]._M_value_field
      # DEBUG __r => D#204
      # DEBUG __x => D#204
      # DEBUG this => D#149
      # DEBUG D#900 => &MEM[(const struct pair &)__i$_M_node_279 + 32].first
      # DEBUG D#205 => &D#206->_M_impl._M_key_compare
      # DEBUG D#203 => D#205
      # DEBUG __x => D#900
      # DEBUG __y => field_4(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#900
      # DEBUG __rhs => field_4(D)
      # DEBUG this => D#900
      # DEBUG __str => field_4(D)
      # VUSE <.MEM_59>
      _5 = MEM[(long unsigned int *)__i$_M_node_279 + 40B];
      # DEBUG D#2 => D#900
      # DEBUG this => D#2
      # DEBUG __size => _5
      # DEBUG D#940 => MEM[(long unsigned int *)field_4(D) + 8B]
      # DEBUG D#2 => field_4(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#940
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_265 = MIN_EXPR <_5, pretmp_237>;
      # DEBUG __len => D#895
      # DEBUG this => field_4(D)
      # DEBUG D#939 => MEM[(char * *)field_4(D)]
      # DEBUG D#3 => field_4(D)
      # DEBUG this => D#3
      # VUSE <.MEM_59>
      _39 = MEM[(char * *)__i$_M_node_279 + 32B];
      # DEBUG D#3 => D#900
      # DEBUG this => D#3
      # DEBUG __s1 => _39
      # DEBUG __s2 => D#939
      # DEBUG __n => D#895
      # VUSE <.MEM_59>
      __r_40 = __builtin_memcmp (_39, pretmp_239, __len_265);
      # DEBUG __r => NULL
      if (__r_40 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => _5
      # DEBUG __n2 => D#940
      _41 = _5 - pretmp_237;
      __d_42 = (const difference_type) _41;
      # DEBUG __d => __d_42
      if (__d_42 > 2147483647)
        goto <bb 12>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_13 bb_10 })
    {
      <bb 9>:
      if (__d_42 < -2147483648)
        goto <bb 13>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_43 = (int) _41;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_44 = PHI <__r_40(7), __r_43(10)>
      # DEBUG __r => __r_44
      # DEBUG D#909 => {CLOBBER}
      # DEBUG __size => D#909
      # DEBUG D#910 => {CLOBBER}
      # DEBUG __osize => D#910
      if (__r_44 >= 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_8 }, succs = {bb_82 })
    {
      <bb 12>:

    }
    bb_82 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 82>:
      # DEBUG __r => NULL
      # DEBUG __y => __i$_M_node_279
      # VUSE <.MEM_59>
      __i$_M_node_28 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 16B];
      # DEBUG D#44 => __i$_M_node_279
      # DEBUG __x => D#44
      # DEBUG __x => NULL
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_9 }, succs = {bb_81 })
    {
      <bb 13>:

    }
    bb_81 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 81>:
      # DEBUG __r => NULL
      # VUSE <.MEM_59>
      __i$_M_node_29 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_279 + 24B];
      # DEBUG D#43 => __i$_M_node_279
      # DEBUG __x => D#43
      # DEBUG __x => NULL
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

void Configuration::Assign(const string&, const string&) (struct ConfigurationD.32032 * const thisD.35413, const struct stringD.2845 & fieldD.35410, const struct stringD.2845 & valueD.35411)
Eh tree:
   9 cleanup land:{9,<L11>},{8,<L10>},{6,<L8>},{3,<L12>}
     11 cleanup land:{7,<L9>},{5,<L13>}
     10 cleanup land:{4,<L5>}
   6 cleanup land:{2,<L3>}
{
  struct _Rb_tree_node_baseD.27676 * SR.1300D.58096;
  struct _Rb_tree_node_baseD.27676 * SR.1299D.58095;
  size_typeD.11502 __dnewD.58037;
  size_typeD.11502 __dnewD.58008;
  const size_typeD.11502 __sizeD.57947;
  const size_typeD.11502 __osizeD.57948;
  const size_typeD.11502 __lenD.57949;
  intD.9 __rD.57950;
  const difference_typeD.11503 __dD.57953;
  intD.9 D.57959;
  const size_typeD.11502 __sizeD.57932;
  const size_typeD.11502 __osizeD.57933;
  const size_typeD.11502 __lenD.57934;
  intD.9 __rD.57935;
  const difference_typeD.11503 __dD.57938;
  intD.9 D.57944;
  struct iteratorD.32574 D.57929;
  struct _Rb_tree_nodeD.32262 * __yD.57919;
  struct value_typeD.32044 D.57911;
  struct mapped_typeD.32043 D.57910;
  struct iteratorD.32847 D.57909;
  struct iteratorD.32574 D.57908;
  struct const_iteratorD.32576 __posD.57881;
  struct _Rb_tree_node_baseD.27676 * const __i$_M_nodeD.57907;
  struct _Rb_tree_node_baseD.27676 * SR.1072D.57906;
  struct _Rb_tree_node_baseD.27676 * SR.1075D.57905;
  struct mapped_typeD.32043 & D.57904;
  const size_typeD.11502 __sizeD.57831;
  const size_typeD.11502 __osizeD.57832;
  const size_typeD.11502 __lenD.57833;
  intD.9 __rD.57834;
  const difference_typeD.11503 __dD.57837;
  intD.9 D.57843;
  const size_typeD.11502 __sizeD.57816;
  const size_typeD.11502 __osizeD.57817;
  const size_typeD.11502 __lenD.57818;
  intD.9 __rD.57819;
  const difference_typeD.11503 __dD.57822;
  intD.9 D.57828;
  struct iteratorD.32574 D.57813;
  struct _Rb_tree_nodeD.32262 * __yD.57803;
  struct _Rb_tree_node_baseD.27676 * SR.1085D.54398;
  struct iteratorD.32847 D.54369;
  struct basic_stringD.2844 D.35592;
  const size_typeD.11502 _5;
  charD.10 * const _12;
  charD.10 * const prephitmp_30;
  charD.10 * const _39;
  long unsigned intD.14 _41;
  const size_typeD.11502 _47;
  charD.10 * const prephitmp_49;
  charD.10 * const _50;
  long unsigned intD.14 _53;
  struct _Rep_typeD.32256 * _58;
  charD.10 * const _65;
  struct mapped_typeD.32043 & _67;
  charD.10 * const _68;
  size_typeD.11502 pretmp_70;
  charD.10 * const pretmp_75;
  const size_typeD.11502 _78;
  charD.10 * const pretmp_81;
  charD.10 * const _83;
  long unsigned intD.14 _85;
  boolD.2757 _89;
  const size_typeD.11502 _91;
  size_typeD.11502 prephitmp_93;
  charD.10 * const _94;
  long unsigned intD.14 _97;
  boolD.2757 _101;
  charD.10 * _106;
  charD.10 * const _109;
  const size_typeD.11502 _110;
  charD.10 * _111;
  charD.10 * const _112;
  charD.10 * _118;
  long unsigned intD.14 __dnew.111_119;
  const char_typeD.6439 _121;
  charD.10 * _124;
  charD.10 * _130;
  long unsigned intD.14 __dnew.111_131;
  const char_typeD.6439 _133;
  charD.10 * _136;
  charD.10 * const _137;
  charD.10 * const _139;
  size_typeD.11502 prephitmp_144;
  size_typeD.11502 pretmp_158;
  const size_typeD.11502 pretmp_237;
  charD.10 * const pretmp_239;
  boolD.2757 _260;
  boolD.2757 _261;
  boolD.2757 _262;
  boolD.2757 _268;
  charD.10 * const _269;
  charD.10 * const _270;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54370 => &matchD.35415
  # DEBUG match$_M_nodeD.54391 => 0B
  # DEBUG D#575ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54366 => D#575ptD.0
  # DEBUG __xD.54367 => field_4(D)
  # DEBUG D#899ptD.0 => &MEM[(struct mapD.32040 *)this_3(D) + 40B]._M_tD.32259
  # DEBUG thisD.57789 => D#899ptD.0
  # DEBUG __kD.57790 => field_4(D)
  # DEBUG thisD.57800 => D#899ptD.0
  # PT = nonlocal 
  __i$_M_node_23 = &MEM[(struct _Rb_treeD.32258 *)this_3(D) + 40B]._M_implD.32337._M_headerD.32503;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __i$_M_node_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_3(D) + 56B];
  # DEBUG D#35ptD.0 => D#899ptD.0
  # DEBUG thisD.48803 => D#35ptD.0
  # DEBUG D#207ptD.0 => D#899ptD.0
  # DEBUG __xD.57804 => NULL
  # DEBUG __yD.57803 => NULL
  # DEBUG __kD.57802 => field_4(D)
  # DEBUG __yD.57803 => __i$_M_node_23
  # DEBUG __xD.57804 => __i$_M_node_24
  if (__i$_M_node_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_237 = MEM[(long unsigned intD.14 *)field_4(D) + 8B];
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  pretmp_239 = MEM[(charD.10 * *)field_4(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_290 = PHI <.MEM_2(D)(2), .MEM_59(80), .MEM_59(17), .MEM_59(19)>
  # DEBUG thisD.48817 => D#899ptD.0
  # DEBUG thisD.48819 => NULL
  # DEBUG __xD.48818 => __i$_M_node_23
  # DEBUG D#208ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48821 => D#208ptD.0
  # DEBUG thisD.54364 => &match.37D.35533
  # DEBUG __itD.54365 => &D.35529
  # DEBUG match$_M_nodeD.54391 => __i$_M_node_23
  # DEBUG D#576ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54360 => D#576ptD.0
  # DEBUG D#53ptD.0 => &D#576ptD.0->_M_tD.32259
  # DEBUG thisD.54361 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54358 => &D.35588
  # DEBUG __itD.54359 => &D.35534
  # DEBUG thisD.54355 => &matchD.35415
  # DEBUG __xD.54356 => &D.35588
  # DEBUG D#208ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48821 => D#208ptD.0
  # DEBUG thisD.54364 => &match.37D.35533
  # DEBUG __itD.54365 => &D.35529
  # DEBUG match$_M_nodeD.54391 => __i$_M_node_23
  # DEBUG D#576ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54360 => D#576ptD.0
  # DEBUG D#53ptD.0 => &D#576ptD.0->_M_tD.32259
  # DEBUG thisD.54361 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54358 => &D.35588
  # DEBUG __itD.54359 => &D.35534
  # DEBUG thisD.54355 => &matchD.35415
  # DEBUG __xD.54356 => &D.35588
  # .MEM_13 = VDEF <.MEM_290>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  D.35592 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown string field: ", field_4(D)); [return slot optimization]
  [LP 2] # .MEM_14 = VDEF <.MEM_13>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_3(D), &D.35592, 0);
;;    succ:       68 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       82 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                81 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_57 = PHI <__i$_M_node_28(82), __i$_M_node_29(81)>
  # PT = nonlocal escaped 
  # __i$_M_node_77 = PHI <__i$_M_node_279(82), __i$_M_node_275(81)>
  # DEBUG __yD.57803 => __i$_M_node_77
  # DEBUG __xD.57804 => __i$_M_node_57
  if (__i$_M_node_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_279 = PHI <__i$_M_node_24(3), __i$_M_node_57(6)>
  # PT = nonlocal escaped 
  # __i$_M_node_275 = PHI <__i$_M_node_23(3), __i$_M_node_77(6)>
  # .MEM_59 = PHI <.MEM_2(D)(3), .MEM_59(6)>
  # DEBUG __yD.57803 => __i$_M_node_275
  # DEBUG __xD.57804 => __i$_M_node_279
  # DEBUG __xD.57805 => __i$_M_node_279
  # DEBUG __xD.48708 => __i$_M_node_279
  # DEBUG thisD.48709 => __i$_M_node_279
  # DEBUG D#204ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__i$_M_node_279]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.57807 => D#204ptD.0
  # DEBUG thisD.57806 => D#149ptD.0
  # DEBUG D#900ptD.0 => &MEM[(const struct pairD.32038 &)__i$_M_node_279 + 32].firstD.35538
  # DEBUG D#205ptD.0 => &D#206ptD.0->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#205ptD.0
  # DEBUG __xD.57810 => D#900ptD.0
  # DEBUG __yD.57809 => field_4(D)
  # DEBUG thisD.57808 => D#203ptD.0
  # DEBUG __lhsD.57812 => D#900ptD.0
  # DEBUG __rhsD.57811 => field_4(D)
  # DEBUG thisD.57814 => D#900ptD.0
  # DEBUG __strD.57815 => field_4(D)
  # VUSE <.MEM_59>
  _5 = MEM[(long unsigned intD.14 *)__i$_M_node_279 + 40B];
  # DEBUG D#2ptD.0 => D#900ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57816 => _5
  # DEBUG D#940ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57817 => D#940ptD.0
  # DEBUG __aD.57824 => &__sizeD.57816
  # DEBUG __bD.57823 => &__osizeD.57817
  __len_265 = MIN_EXPR <_5, pretmp_237>;
  # DEBUG __lenD.57818 => D#895ptD.0
  # DEBUG thisD.48671 => field_4(D)
  # DEBUG D#939ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _39 = MEM[(charD.10 * *)__i$_M_node_279 + 32B];
  # DEBUG D#3ptD.0 => D#900ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57827 => _39
  # DEBUG __s2D.57826 => D#939ptD.0
  # DEBUG __nD.57825 => D#895ptD.0
  # VUSE <.MEM_59>
  # USE = nonlocal escaped 
  __r_40 = memcmpD.989 (_39, pretmp_239, __len_265);
  # DEBUG __rD.57819 => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57821 => _5
  # DEBUG __n2D.57820 => D#940ptD.0
  # RANGE [0, 18446744073709551615]
  _41 = _5 - pretmp_237;
  __d_42 = (const difference_typeD.11503) _41;
  # DEBUG __dD.57822 => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_43 = (intD.9) _41;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __rD.57819 => __r_44
  # DEBUG D#909ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57816 => D#909ptD.0
  # DEBUG D#910ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57817 => D#910ptD.0
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 82, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       82 [100.0%]  (FALLTHRU)

;;   basic block 82, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.57819 => NULL
  # DEBUG __yD.57803 => __i$_M_node_279
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  __i$_M_node_28 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_279 + 16B];
  # DEBUG D#44ptD.0 => __i$_M_node_279
  # DEBUG __xD.48741 => D#44ptD.0
  # DEBUG __xD.57804 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 82, next block 81, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       81 [100.0%]  (FALLTHRU)

;;   basic block 81, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.57819 => NULL
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  __i$_M_node_29 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_279 + 24B];
  # DEBUG D#43ptD.0 => __i$_M_node_279
  # DEBUG __xD.48740 => D#43ptD.0
  # DEBUG __xD.57804 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 81, next block 80, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_277 = PHI <__i$_M_node_77(5)>
;;    succ:       80 [100.0%]  (FALLTHRU)

;;   basic block 80, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.48739 => NULL
  # DEBUG __xD.48738 => __i$_M_node_277
  # DEBUG __j$_M_nodeD.48821 => __i$_M_node_277
  # DEBUG thisD.48783 => D#899ptD.0
  # DEBUG thisD.48785 => NULL
  # DEBUG __xD.48784 => __i$_M_node_23
  # DEBUG thisD.48780 => &__jD.57791
  # DEBUG __xD.48781 => NULL
  if (__i$_M_node_23 == __i$_M_node_277)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 80, next block 16, flags: (NEW, REACHABLE)
;;    pred:       80 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.57792 => __i$_M_node_277
  # DEBUG __xD.48170 => __i$_M_node_277
  # DEBUG thisD.48171 => __i$_M_node_277
  # DEBUG D#150ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__i$_M_node_277]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#150ptD.0
  # DEBUG __xD.57794 => D#150ptD.0
  # DEBUG thisD.57793 => D#149ptD.0
  # DEBUG D#901ptD.0 => &MEM[(const struct pairD.32038 &)__i$_M_node_277 + 32].firstD.35538
  # DEBUG D#209ptD.0 => &MEM[(struct _Rb_treeD.32258 *)D#899ptD.0]._M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#209ptD.0
  # DEBUG __xD.57797 => field_4(D)
  # DEBUG __yD.57796 => D#901ptD.0
  # DEBUG thisD.57795 => D#203ptD.0
  # DEBUG __lhsD.57799 => field_4(D)
  # DEBUG __rhsD.57798 => D#901ptD.0
  # DEBUG thisD.57829 => field_4(D)
  # DEBUG __strD.57830 => D#901ptD.0
  # DEBUG D#938ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57831 => D#938ptD.0
  # VUSE <.MEM_59>
  _47 = MEM[(long unsigned intD.14 *)__i$_M_node_277 + 40B];
  # DEBUG D#2ptD.0 => D#901ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57832 => _47
  # DEBUG __aD.57839 => &__sizeD.57831
  # DEBUG __bD.57838 => &__osizeD.57832
  __len_267 = MIN_EXPR <_47, pretmp_237>;
  # DEBUG __lenD.57833 => D#896ptD.0
  # DEBUG thisD.48671 => D#901ptD.0
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _50 = MEM[(charD.10 * *)__i$_M_node_277 + 32B];
  # DEBUG D#3ptD.0 => D#901ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#937ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57842 => D#937ptD.0
  # DEBUG __s2D.57841 => _50
  # DEBUG __nD.57840 => D#896ptD.0
  # VUSE <.MEM_59>
  # USE = nonlocal escaped 
  __r_52 = memcmpD.989 (pretmp_239, _50, __len_267);
  # DEBUG __rD.57834 => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57836 => D#938ptD.0
  # DEBUG __n2D.57835 => _47
  # RANGE [0, 18446744073709551615]
  _53 = pretmp_237 - _47;
  __d_54 = (const difference_typeD.11503) _53;
  # DEBUG __dD.57837 => __d_54
  if (__d_54 > 2147483647)
    goto <bb 78>;
  else
    goto <bb 17>;
;;    succ:       78 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_55 = (intD.9) _53;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __rD.57834 => __r_56
  # DEBUG D#915ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57831 => D#915ptD.0
  # DEBUG D#916ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57832 => D#916ptD.0
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 78>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                78 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       84 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_34 = PHI <__i$_M_node_73(84), __i$_M_node_74(83)>
  # PT = nonlocal escaped 
  # __i$_M_node_33 = PHI <__i$_M_node_288(84), __i$_M_node_284(83)>
  # DEBUG __yD.57919 => __i$_M_node_33
  # DEBUG __xD.57920 => __i$_M_node_34
  if (__i$_M_node_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;
;;    succ:       30 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 8277, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       78 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_288 = PHI <__i$_M_node_24(22), __i$_M_node_34(21)>
  # PT = nonlocal escaped 
  # __i$_M_node_284 = PHI <__i$_M_node_23(22), __i$_M_node_33(21)>
  # .MEM_146 = PHI <.MEM_59(22), .MEM_146(21)>
  # DEBUG __yD.57919 => __i$_M_node_284
  # DEBUG __xD.57920 => __i$_M_node_288
  # DEBUG __xD.57921 => __i$_M_node_288
  # DEBUG __xD.48708 => __i$_M_node_288
  # DEBUG thisD.48709 => __i$_M_node_288
  # DEBUG D#204ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__i$_M_node_288]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.57923 => D#204ptD.0
  # DEBUG thisD.57922 => D#149ptD.0
  # DEBUG D#903ptD.0 => &MEM[(const struct pairD.32038 &)__i$_M_node_288 + 32].firstD.35538
  # DEBUG D#205ptD.0 => &D#206ptD.0->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#205ptD.0
  # DEBUG __xD.57926 => D#903ptD.0
  # DEBUG __yD.57925 => field_4(D)
  # DEBUG thisD.57924 => D#203ptD.0
  # DEBUG __lhsD.57928 => D#903ptD.0
  # DEBUG __rhsD.57927 => field_4(D)
  # DEBUG thisD.57930 => D#903ptD.0
  # DEBUG __strD.57931 => field_4(D)
  # VUSE <.MEM_146>
  _78 = MEM[(long unsigned intD.14 *)__i$_M_node_288 + 40B];
  # DEBUG D#2ptD.0 => D#903ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57932 => _78
  # DEBUG D#936ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57933 => D#936ptD.0
  # DEBUG __aD.57940 => &__sizeD.57932
  # DEBUG __bD.57939 => &__osizeD.57933
  __len_263 = MIN_EXPR <_78, pretmp_237>;
  # DEBUG __lenD.57934 => D#897ptD.0
  # DEBUG thisD.48671 => field_4(D)
  # DEBUG D#935ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  _83 = MEM[(charD.10 * *)__i$_M_node_288 + 32B];
  # DEBUG D#3ptD.0 => D#903ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57943 => _83
  # DEBUG __s2D.57942 => D#935ptD.0
  # DEBUG __nD.57941 => D#897ptD.0
  # VUSE <.MEM_146>
  # USE = nonlocal escaped 
  __r_84 = memcmpD.989 (_83, pretmp_239, __len_263);
  # DEBUG __rD.57935 => NULL
  if (__r_84 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 5549, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57937 => _78
  # DEBUG __n2D.57936 => D#936ptD.0
  # RANGE [0, 18446744073709551615]
  _85 = _78 - pretmp_237;
  __d_86 = (const difference_typeD.11503) _85;
  # DEBUG __dD.57938 => __d_86
  if (__d_86 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;
;;    succ:       28 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 2774, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_86 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;
;;    succ:       29 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 1387, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_87 = (intD.9) _85;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 4934, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       23 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_88 = PHI <__r_84(23), __r_87(26)>
  # DEBUG __rD.57935 => __r_88
  # DEBUG D#921ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57932 => D#921ptD.0
  # DEBUG D#922ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57933 => D#922ptD.0
  if (__r_88 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 27, next block 84, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       84 [100.0%]  (FALLTHRU)

;;   basic block 84, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 28, next block 29, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU)
  # DEBUG __rD.57935 => NULL
  # DEBUG __yD.57919 => __i$_M_node_288
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  __i$_M_node_73 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_288 + 16B];
  # DEBUG D#44ptD.0 => __i$_M_node_288
  # DEBUG __xD.48741 => D#44ptD.0
  # DEBUG __xD.57920 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 84, next block 83, flags: (NEW, REACHABLE)
;;    pred:       27 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       83 [100.0%]  (FALLTHRU)

;;   basic block 83, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 29, next block 30, flags: (NEW)
;;    pred:       29 [100.0%]  (FALLTHRU)
  # DEBUG __rD.57935 => NULL
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  __i$_M_node_74 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_288 + 24B];
  # DEBUG D#43ptD.0 => __i$_M_node_288
  # DEBUG __xD.48740 => D#43ptD.0
  # DEBUG __xD.57920 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 83, next block 79, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_281 = PHI <__i$_M_node_33(20)>
;;    succ:       79 [100.0%]  (FALLTHRU)

;;   basic block 79, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 30, next block 31, flags: (NEW)
;;    pred:       30 [100.0%]  (FALLTHRU)
  # DEBUG thisD.48739 => NULL
  # DEBUG __xD.48738 => __i$_M_node_281
  # DEBUG __i$_M_nodeD.57907 => __i$_M_node_281
  # DEBUG thisD.57902 => D#902ptD.0
  # DEBUG D#53ptD.0 => &D#902ptD.0->_M_tD.32259
  # DEBUG thisD.57903 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54259 => &__iD.57846
  # DEBUG __xD.54260 => NULL
  if (__i$_M_node_23 == __i$_M_node_281)
    goto <bb 71>;
  else
    goto <bb 31>;
;;    succ:       71 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 765, maybe hot
;;    prev block 79, next block 32, flags: (NEW, REACHABLE)
;;    pred:       79 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.54279 => &__iD.57846
  # DEBUG thisD.54280 => __i$_M_node_281
  # DEBUG D#571ptD.0 => &MEM[(struct _Rb_tree_nodeD.32262 *)__i$_M_node_281]._M_value_fieldD.38939
  # DEBUG __rD.48150 => D#571ptD.0
  # DEBUG D#904ptD.0 => &MEM[(struct pairD.32038 &)__i$_M_node_281 + 32].firstD.35538
  # DEBUG D#52ptD.0 => D#902ptD.0
  # DEBUG thisD.54276 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#52ptD.0
  # DEBUG D#50ptD.0 => &D#51ptD.0->_M_tD.32259
  # DEBUG D#49ptD.0 => D#50ptD.0
  # DEBUG thisD.47421 => D#49ptD.0
  # DEBUG __xD.57897 => field_4(D)
  # DEBUG __yD.57896 => D#904ptD.0
  # DEBUG thisD.57895 => D#203ptD.0
  # DEBUG __lhsD.57899 => field_4(D)
  # DEBUG __rhsD.57898 => D#904ptD.0
  # DEBUG thisD.57945 => field_4(D)
  # DEBUG __strD.57946 => D#904ptD.0
  # DEBUG D#934ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.57947 => D#934ptD.0
  # VUSE <.MEM_146>
  _91 = MEM[(long unsigned intD.14 *)__i$_M_node_281 + 40B];
  # DEBUG D#2ptD.0 => D#904ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.57948 => _91
  # DEBUG __aD.57955 => &__sizeD.57947
  # DEBUG __bD.57954 => &__osizeD.57948
  __len_264 = MIN_EXPR <_91, pretmp_237>;
  # DEBUG __lenD.57949 => D#898ptD.0
  # DEBUG thisD.48671 => D#904ptD.0
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  _94 = MEM[(charD.10 * *)__i$_M_node_281 + 32B];
  # DEBUG D#3ptD.0 => D#904ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#933ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.57958 => D#933ptD.0
  # DEBUG __s2D.57957 => _94
  # DEBUG __nD.57956 => D#898ptD.0
  # VUSE <.MEM_146>
  # USE = nonlocal escaped 
  __r_96 = memcmpD.989 (pretmp_239, _94, __len_264);
  # DEBUG __rD.57950 => NULL
  if (__r_96 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 466, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.57952 => D#934ptD.0
  # DEBUG __n2D.57951 => _91
  # RANGE [0, 18446744073709551615]
  _97 = pretmp_237 - _91;
  __d_98 = (const difference_typeD.11503) _97;
  # DEBUG __dD.57953 => __d_98
  if (__d_98 > 2147483647)
    goto <bb 61>;
  else
    goto <bb 33>;
;;    succ:       61 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 233, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_98 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;
;;    succ:       36 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_99 = (intD.9) _97;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 415, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       31 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_100 = PHI <__r_96(31), __r_99(34)>
  # DEBUG __rD.57950 => __r_100
  # DEBUG D#927ptD.0 => {CLOBBER}
  # DEBUG __sizeD.57947 => D#927ptD.0
  # DEBUG D#928ptD.0 => {CLOBBER}
  # DEBUG __osizeD.57948 => D#928ptD.0
  if (__r_100 < 0)
    goto <bb 71>;
  else
    goto <bb 61>;
;;    succ:       71 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                85 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_247 = PHI <.MEM_146(33), .MEM_266(85)>
  # PT = nonlocal escaped 
  # __i$_M_node_25 = PHI <__i$_M_node_281(33), __i$_M_node_271(85)>
  # DEBUG thisD.57884 => &D.57910
  # DEBUG thisD.54283 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.57885 => &D.57910
  # DEBUG D#148ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG thisD.57888 => D#148ptD.0
  # DEBUG __datD.57887 => &D.57910.D.11539._M_local_bufD.11541
  # DEBUG __aD.57886 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#148ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_183 = VDEF <.MEM_247>
  MEM[(struct _Alloc_hiderD.11518 *)&D.57910]._M_pD.11525 = &D.57910.D.11539._M_local_bufD.11541;
  # DEBUG thisD.54288 => NULL
  # DEBUG thisD.48138 => NULL
  # DEBUG thisD.57890 => &D.57910
  # DEBUG __nD.57889 => 0
  # DEBUG D#5ptD.0 => &D.57910
  # DEBUG __lengthD.57892 => 0
  # DEBUG thisD.57891 => D#5ptD.0
  # .MEM_184 = VDEF <.MEM_183>
  MEM[(size_typeD.11502 *)&D.57910 + 8B] = 0;
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.47013 => D#3ptD.0
  # DEBUG __c1D.57894 => &D.57910.D.11539._M_local_bufD.11541
  # DEBUG __c2D.57893 => D#13ptD.0
  # .MEM_185 = VDEF <.MEM_184>
  MEM[(char_typeD.6439 &)&D.57910 + 16] = 0;
  # DEBUG thisD.57960 => &D.57911
  # DEBUG __aD.57961 => field_4(D)
  # DEBUG __bD.57962 => &D.57910
  # DEBUG thisD.57977 => &D.57911.firstD.35538
  # DEBUG __strD.57976 => field_4(D)
  # DEBUG thisD.50825 => field_4(D)
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)field_4(D)]._M_dataplusD.11519
  # DEBUG thisD.57978 => &D.57911.firstD.35538
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.57911]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.57981 => D#381ptD.0
  # DEBUG __datD.57980 => &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541
  # DEBUG __aD.57979 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_186 = VDEF <.MEM_185>
  MEM[(struct _Alloc_hiderD.11518 *)&D.57911]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541;
  # DEBUG D#932ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # DEBUG D#931ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#1ptD.0 => field_4(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _106 = pretmp_239 + pretmp_237;
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.57984 => &D.57911.firstD.35538
  # DEBUG __begD.57983 => D#932ptD.0
  # DEBUG __endD.57982 => _106
  # DEBUG thisD.57988 => &D.57911.firstD.35538
  # DEBUG __begD.57987 => D#932ptD.0
  # DEBUG __endD.57986 => _106
  # DEBUG thisD.58005 => &D.57911.firstD.35538
  # DEBUG __begD.58006 => D#932ptD.0
  # DEBUG __endD.58007 => _106
  # DEBUG __ptrD.51229 => D#932ptD.0
  # RANGE [0, 1]
  _89 = _106 != 0B;
  # RANGE [0, 1]
  _101 = pretmp_239 == 0B;
  # RANGE [0, 1]
  _268 = _89 & _101;
  if (_268 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;
;;    succ:       73 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       72 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 6] # .MEM_188 = VDEF <.MEM_187>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _118 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.57911.firstD.35538, &__dnewD.58008, 0);
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.57911.firstD.35538
  # DEBUG __pD.58027 => _118
  # DEBUG thisD.58026 => D#6ptD.0
  # .MEM_189 = VDEF <.MEM_188>
  MEM[(charD.10 * *)&D.57911] = _118;
  # VUSE <.MEM_189>
  __dnew.111_119 = __dnewD.58008;
  # DEBUG D#7ptD.0 => &D.57911.firstD.35538
  # DEBUG __capacityD.58029 => __dnew.111_119
  # DEBUG thisD.58028 => D#7ptD.0
  # .MEM_190 = VDEF <.MEM_189>
  MEM[(size_typeD.11502 *)&D.57911 + 16B] = __dnew.111_119;
  # DEBUG D#3ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58011 => _118
  # DEBUG __k1D.58010 => D#932ptD.0
  # DEBUG __k2D.58009 => _106
  # DEBUG __dD.58014 => _118
  # DEBUG __sD.58013 => D#932ptD.0
  # DEBUG __nD.58012 => D#931ptD.0
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       72 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58011 => &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58010 => D#932ptD.0
  # DEBUG __k2D.58009 => _106
  # DEBUG __dD.58014 => &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541
  # DEBUG __sD.58013 => D#932ptD.0
  # DEBUG __nD.58012 => D#931ptD.0
  if (pretmp_237 == 1)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_187>
  _121 = MEM[(const char_typeD.6439 &)pretmp_239];
  # DEBUG D#13ptD.0 => D#932ptD.0
  # DEBUG __c1D.58019 => &MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58018 => D#13ptD.0
  # .MEM_191 = VDEF <.MEM_187>
  MEM[(char_typeD.6439 &)&D.57911 + 16] = _121;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  # _270 = PHI <&MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541(39), _118(38)>
  # .MEM_254 = PHI <.MEM_187(39), .MEM_190(38)>
  # DEBUG D#3ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58011 => _270
  # DEBUG __k1D.58010 => D#932ptD.0
  # DEBUG __k2D.58009 => _106
  # DEBUG __dD.58014 => _270
  # DEBUG __sD.58013 => D#932ptD.0
  # DEBUG __nD.58012 => D#931ptD.0
  # DEBUG __s1D.58017 => _270
  # DEBUG __s2D.58016 => D#932ptD.0
  # DEBUG __nD.58015 => D#931ptD.0
  # .MEM_192 = VDEF <.MEM_254>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  memcpyD.992 (_270, pretmp_239, pretmp_237);
  # VUSE <.MEM_192>
  pretmp_158 = __dnewD.58008;
  # VUSE <.MEM_192>
  pretmp_75 = MEM[(charD.10 * *)&D.57911];
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_147 = PHI <.MEM_191(40), .MEM_192(41)>
  # prephitmp_144 = PHI <pretmp_237(40), pretmp_158(41)>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  # prephitmp_49 = PHI <&MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541(40), pretmp_75(41)>
  # DEBUG D#930ptD.0 => __dnewD.58008
  # DEBUG thisD.58021 => &D.57911.firstD.35538
  # DEBUG __nD.58020 => D#930ptD.0
  # DEBUG D#5ptD.0 => &D.57911.firstD.35538
  # DEBUG __lengthD.58023 => D#930ptD.0
  # DEBUG thisD.58022 => D#5ptD.0
  # .MEM_193 = VDEF <.MEM_147>
  MEM[(size_typeD.11502 *)&D.57911 + 8B] = prephitmp_144;
  # DEBUG D#3ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _124 = prephitmp_49 + prephitmp_144;
  # DEBUG __c1D.58025 => _124
  # DEBUG __c2D.58024 => D#13ptD.0
  # .MEM_194 = VDEF <.MEM_193>
  MEM[(char_typeD.6439 &)_124] = 0;
  # .MEM_195 = VDEF <.MEM_194>
  __dnewD.58008 ={v} {CLOBBER};
  # DEBUG thisD.57991 => &D.57911.secondD.35539
  # DEBUG __strD.57990 => &D.57910
  # DEBUG thisD.50825 => &D.57910
  # DEBUG D#380ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG thisD.57992 => &D.57911.secondD.35539
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.57995 => D#381ptD.0
  # DEBUG __datD.57994 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __aD.57993 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_196 = VDEF <.MEM_195>
  MEM[(struct _Alloc_hiderD.11518 *)&D.57911 + 32B]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541;
  # VUSE <.MEM_196>
  # PT = nonlocal escaped null { D.57910 } (escaped)
  _109 = MEM[(charD.10 * *)&D.57910];
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_196>
  _110 = MEM[(long unsigned intD.14 *)&D.57910 + 8B];
  # DEBUG D#1ptD.0 => &D.57910
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.57910 } (escaped)
  _111 = _109 + _110;
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.57998 => &D.57911.secondD.35539
  # DEBUG __begD.57997 => _109
  # DEBUG __endD.57996 => _111
  # DEBUG thisD.58002 => &D.57911.secondD.35539
  # DEBUG __begD.58001 => _109
  # DEBUG __endD.58000 => _111
  # DEBUG thisD.58034 => &D.57911.secondD.35539
  # DEBUG __begD.58035 => _109
  # DEBUG __endD.58036 => _111
  # DEBUG __ptrD.51229 => _109
  # RANGE [0, 1]
  _260 = _111 != 0B;
  # RANGE [0, 1]
  _262 = _109 == 0B;
  # RANGE [0, 1]
  _261 = _260 & _262;
  if (_261 != 0)
    goto <bb 75>;
  else
    goto <bb 77>;
;;    succ:       75 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       77 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 7] # .MEM_198 = VDEF <.MEM_197>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _130 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.57911.secondD.35539, &__dnewD.58037, 0);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 (EH,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.57911.secondD.35539
  # DEBUG __pD.58056 => _130
  # DEBUG thisD.58055 => D#6ptD.0
  # .MEM_199 = VDEF <.MEM_198>
  MEM[(charD.10 * *)&D.57911 + 32B] = _130;
  # VUSE <.MEM_199>
  __dnew.111_131 = __dnewD.58037;
  # DEBUG D#7ptD.0 => &D.57911.secondD.35539
  # DEBUG __capacityD.58058 => __dnew.111_131
  # DEBUG thisD.58057 => D#7ptD.0
  # .MEM_200 = VDEF <.MEM_199>
  MEM[(size_typeD.11502 *)&D.57911 + 48B] = __dnew.111_131;
  # DEBUG D#3ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58040 => _130
  # DEBUG __k1D.58039 => _109
  # DEBUG __k2D.58038 => _111
  # DEBUG __dD.58043 => _130
  # DEBUG __sD.58042 => _109
  # DEBUG __nD.58041 => _110
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 248, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       77 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58040 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58039 => _109
  # DEBUG __k2D.58038 => _111
  # DEBUG __dD.58043 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __sD.58042 => _109
  # DEBUG __nD.58041 => _110
  if (_110 == 1)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [53.4%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [46.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [53.4%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_197>
  _133 = MEM[(const char_typeD.6439 &)_109];
  # DEBUG D#13ptD.0 => _109
  # DEBUG __c1D.58048 => &MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58047 => D#13ptD.0
  # .MEM_201 = VDEF <.MEM_197>
  MEM[(char_typeD.6439 &)&D.57911 + 48] = _133;
  goto <bb 48>;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [46.6%]  (FALSE_VALUE,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  # _269 = PHI <&MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541(45), _130(44)>
  # .MEM_256 = PHI <.MEM_197(45), .MEM_200(44)>
  # DEBUG D#3ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58040 => _269
  # DEBUG __k1D.58039 => _109
  # DEBUG __k2D.58038 => _111
  # DEBUG __dD.58043 => _269
  # DEBUG __sD.58042 => _109
  # DEBUG __nD.58041 => _110
  # DEBUG __s1D.58046 => _269
  # DEBUG __s2D.58045 => _109
  # DEBUG __nD.58044 => _110
  # .MEM_202 = VDEF <.MEM_256>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  memcpyD.992 (_269, _109, _110);
  # VUSE <.MEM_202>
  pretmp_70 = __dnewD.58037;
  # VUSE <.MEM_202>
  pretmp_81 = MEM[(charD.10 * *)&D.57911 + 32B];
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_149 = PHI <.MEM_201(46), .MEM_202(47)>
  # prephitmp_93 = PHI <_110(46), pretmp_70(47)>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  # prephitmp_30 = PHI <&MEM[(struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541(46), pretmp_81(47)>
  # DEBUG D#929ptD.0 => __dnewD.58037
  # DEBUG thisD.58050 => &D.57911.secondD.35539
  # DEBUG __nD.58049 => D#929ptD.0
  # DEBUG D#5ptD.0 => &D.57911.secondD.35539
  # DEBUG __lengthD.58052 => D#929ptD.0
  # DEBUG thisD.58051 => D#5ptD.0
  # .MEM_203 = VDEF <.MEM_149>
  MEM[(size_typeD.11502 *)&D.57911 + 40B] = prephitmp_93;
  # DEBUG D#3ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _136 = prephitmp_30 + prephitmp_93;
  # DEBUG __c1D.58054 => _136
  # DEBUG __c2D.58053 => D#13ptD.0
  # .MEM_204 = VDEF <.MEM_203>
  MEM[(char_typeD.6439 &)_136] = 0;
  # .MEM_205 = VDEF <.MEM_204>
  __dnewD.58037 ={v} {CLOBBER};
  # DEBUG thisD.57879 => D#902ptD.0
  # DEBUG __position$_M_nodeD.54345 => __i$_M_node_25
  # DEBUG __xD.57877 => &D.57911
  # DEBUG thisD.54299 => NULL
  # DEBUG __itD.54298 => &__positionD.57878
  # DEBUG thisD.57882 => D#941ptD.0
  # .MEM_206 = VDEF <.MEM_205>
  MEM[(struct _Rb_tree_const_iteratorD.32577 *)&__posD.57881] = __i$_M_node_25;
  # DEBUG __xD.57880 => &D.57911
  # DEBUG thisD.54253 => &__anD.57883
  # DEBUG __tD.54252 => D#941ptD.0
  # DEBUG __an$_M_tD.54246 => D#941ptD.0
  # DEBUG D#570ptD.0 => &__anD.57883
  # PT = nonlocal 
  _58 = &MEM[(struct mapD.32040 *)this_3(D) + 40B]._M_tD.32259;
  [LP 4] # .MEM_207 = VDEF <.MEM_206>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  D.57908 = _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.157.constprop.180D.55287 (_58, __posD.57881, &D.57911);
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                62 (EH,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       43 (EH,EXECUTABLE)
<L9>: [LP 7]
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                76 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_150 = PHI <.MEM_198(49), .MEM_228(76)>
<L7>:
  # DEBUG D#383ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.57963 => D#383ptD.0
  # DEBUG thisD.57964 => D#383ptD.0
  # DEBUG thisD.50871 => D#383ptD.0
  # VUSE <.MEM_150>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _112 = MEM[(charD.10 * *)&D.57911];
  # DEBUG D#3ptD.0 => D#383ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50872 => D#383ptD.0
  if (&MEM[(struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541 != _112)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#383ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.57966 => D#383ptD.0
  # DEBUG __sizeD.57965 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#383ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#383ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#383ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.57969 => _112
  # DEBUG __aD.57967 => D#181ptD.0
  # DEBUG __nD.57968 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.57972 => _112
  # DEBUG thisD.57970 => D#177ptD.0
  # DEBUG D.57971 => D#178ptD.0
  # .MEM_229 = VDEF <.MEM_150>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_112);
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_151 = PHI <.MEM_150(50), .MEM_229(51)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#383ptD.0]._M_dataplusD.11519
  # DEBUG thisD.57973 => D#187ptD.0
  # DEBUG thisD.57974 => D#187ptD.0
  # DEBUG thisD.57975 => D#187ptD.0
  # .MEM_233 = VDEF <.MEM_151>
  MEM[(struct  &)&D.57911] ={v} {CLOBBER};
  [LP 8] resx 11
;;    succ:       53 (EH,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       52 (EH,EXECUTABLE)
<L10>: [LP 8]
  goto <bb 65> (<L6>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_207>
  # PT = nonlocal escaped 
  __i$_M_node_64 = MEM[(struct _Rb_tree_iteratorD.32575 *)&D.57908];
  # DEBUG __i$_M_nodeD.57907 => __i$_M_node_64
  # DEBUG thisD.58063 => &D.57911
  # DEBUG D#190ptD.0 => &D.57911.secondD.35539
  # DEBUG thisD.58064 => D#190ptD.0
  # DEBUG thisD.58065 => D#190ptD.0
  # DEBUG thisD.58074 => D#190ptD.0
  # VUSE <.MEM_207>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _137 = MEM[(charD.10 * *)&D.57911 + 32B];
  # DEBUG D#3ptD.0 => D#190ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58075 => D#190ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.57911 + 32B].D.11539._M_local_bufD.11541 != _137)
    goto <bb 55>;
  else
    goto <bb 56>;
;;    succ:       55 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       54 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D#190ptD.0->D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58067 => D#190ptD.0
  # DEBUG __sizeD.58066 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#190ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#190ptD.0
  # DEBUG D#183ptD.0 => &D#190ptD.0->_M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58070 => _137
  # DEBUG __aD.58068 => D#181ptD.0
  # DEBUG __nD.58069 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58073 => _137
  # DEBUG thisD.58071 => D#177ptD.0
  # DEBUG D.58072 => D#178ptD.0
  # .MEM_208 = VDEF <.MEM_207>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_137);
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       54 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                55 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_152 = PHI <.MEM_207(54), .MEM_208(55)>
  # DEBUG D#187ptD.0 => &D#190ptD.0->_M_dataplusD.11519
  # DEBUG thisD.58076 => D#187ptD.0
  # DEBUG thisD.58077 => D#187ptD.0
  # DEBUG thisD.58078 => D#187ptD.0
  # .MEM_212 = VDEF <.MEM_152>
  MEM[(struct  &)&D.57911 + 32] ={v} {CLOBBER};
  # DEBUG D#189ptD.0 => &D.57911.firstD.35538
  # DEBUG thisD.58079 => D#189ptD.0
  # DEBUG thisD.58080 => D#189ptD.0
  # DEBUG thisD.58089 => D#189ptD.0
  # VUSE <.MEM_212>
  # PT = nonlocal escaped null { D.57910 D.57911 } (escaped)
  _139 = MEM[(charD.10 * *)&D.57911];
  # DEBUG D#3ptD.0 => D#189ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58090 => D#189ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.57911].D.11539._M_local_bufD.11541 != _139)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 275, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#189ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58082 => D#189ptD.0
  # DEBUG __sizeD.58081 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#189ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#189ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#189ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58085 => _139
  # DEBUG __aD.58083 => D#181ptD.0
  # DEBUG __nD.58084 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58088 => _139
  # DEBUG thisD.58086 => D#177ptD.0
  # DEBUG D.58087 => D#178ptD.0
  # .MEM_213 = VDEF <.MEM_212>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_139);
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_153 = PHI <.MEM_212(56), .MEM_213(57)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#189ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58091 => D#187ptD.0
  # DEBUG thisD.58092 => D#187ptD.0
  # DEBUG thisD.58093 => D#187ptD.0
  # .MEM_219 = VDEF <.MEM_153>
  D.57911 ={v} {CLOBBER};
  # DEBUG thisD.57862 => &D.57910
  # DEBUG thisD.57863 => &D.57910
  # DEBUG thisD.57872 => &D.57910
  # VUSE <.MEM_219>
  # PT = nonlocal escaped null { D.57910 } (escaped)
  _65 = MEM[(charD.10 * *)&D.57910];
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.57873 => &D.57910
  if (&D.57910.D.11539._M_local_bufD.11541 != _65)
    goto <bb 59>;
  else
    goto <bb 60>;
;;    succ:       59 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       58 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.57910.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.57865 => &D.57910
  # DEBUG __sizeD.57864 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.57910
  # DEBUG D#183ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.57868 => _65
  # DEBUG __aD.57866 => D#181ptD.0
  # DEBUG __nD.57867 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.57871 => _65
  # DEBUG thisD.57869 => D#177ptD.0
  # DEBUG D.57870 => D#178ptD.0
  # .MEM_220 = VDEF <.MEM_219>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_65);
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       58 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_219(58), .MEM_220(59)>
  # DEBUG D#187ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG thisD.57874 => D#187ptD.0
  # DEBUG thisD.57875 => D#187ptD.0
  # DEBUG thisD.57876 => D#187ptD.0
  # .MEM_225 = VDEF <.MEM_154>
  D.57910 ={v} {CLOBBER};
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [78.3%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_66 = PHI <__i$_M_node_281(32), __i$_M_node_64(60), __i$_M_node_281(35)>
  # .MEM_155 = PHI <.MEM_146(32), .MEM_225(60), .MEM_146(35)>
  # DEBUG __i$_M_nodeD.57907 => __i$_M_node_66
  # DEBUG thisD.54322 => &__iD.57846
  # DEBUG thisD.54323 => __i$_M_node_66
  # DEBUG D#572ptD.0 => &MEM[(struct _Rb_tree_nodeD.32262 *)__i$_M_node_66]._M_value_fieldD.38939
  # DEBUG __rD.48150 => D#572ptD.0
  # PT = nonlocal escaped 
  _67 = &MEM[(struct pairD.32038 &)__i$_M_node_66 + 32].secondD.35539;
  # DEBUG D#574ptD.0 => {CLOBBER}
  # DEBUG __i$_M_nodeD.57907 => D#574ptD.0
  # DEBUG thisD.54371 => NULL
  # DEBUG __strD.54372 => value_11(D)
  # DEBUG thisD.54374 => NULL
  # DEBUG __strD.54373 => value_11(D)
  # .MEM_17 = VDEF <.MEM_155>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (_67, value_11(D));
  # DEBUG D#577ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.54391 => D#577ptD.0
  # VUSE <.MEM_17>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       48 (EH,EXECUTABLE)
<L5>: [LP 4]
  # .MEM_226 = VDEF <.MEM_207>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED1EvD.38800 (&D.57911);
  # .MEM_227 = VDEF <.MEM_226>
  D.57911 ={v} {CLOBBER};
  [LP 9] resx 10
;;    succ:       63 (EH,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 62, next block 64, flags: (NEW)
;;    pred:       62 (EH,EXECUTABLE)
<L11>: [LP 9]
  goto <bb 65> (<L6>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       37 (EH,EXECUTABLE)
<L8>: [LP 6]
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_156 = PHI <.MEM_233(53), .MEM_227(63), .MEM_188(64), .MEM_234(74)>
<L6>:
  # DEBUG thisD.57847 => &D.57910
  # DEBUG thisD.57848 => &D.57910
  # DEBUG thisD.57857 => &D.57910
  # VUSE <.MEM_156>
  # PT = nonlocal escaped null { D.57910 } (escaped)
  _68 = MEM[(charD.10 * *)&D.57910];
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.57858 => &D.57910
  if (&D.57910.D.11539._M_local_bufD.11541 != _68)
    goto <bb 66>;
  else
    goto <bb 67>;
;;    succ:       66 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.57910.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.57850 => &D.57910
  # DEBUG __sizeD.57849 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.57910
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.57910
  # DEBUG D#183ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.57853 => _68
  # DEBUG __aD.57851 => D#181ptD.0
  # DEBUG __nD.57852 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.57856 => _68
  # DEBUG thisD.57854 => D#177ptD.0
  # DEBUG D.57855 => D#178ptD.0
  # .MEM_235 = VDEF <.MEM_156>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_157 = PHI <.MEM_156(65), .MEM_235(66)>
  # DEBUG D#187ptD.0 => &D.57910._M_dataplusD.11519
  # DEBUG thisD.57859 => D#187ptD.0
  # DEBUG thisD.57860 => D#187ptD.0
  # DEBUG thisD.57861 => D#187ptD.0
  # .MEM_240 = VDEF <.MEM_157>
  D.57910 ={v} {CLOBBER};
  resx 9
;;    succ:      

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L3>: [LP 2]
  # DEBUG thisD.54376 => &D.35592
  # DEBUG thisD.54377 => &D.35592
  # DEBUG thisD.54386 => &D.35592
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  _12 = MEM[(charD.10 * *)&D.35592];
  # DEBUG D#3ptD.0 => &D.35592
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.54387 => &D.35592
  if (&D.35592.D.11539._M_local_bufD.11541 != _12)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35592.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.54379 => &D.35592
  # DEBUG __sizeD.54378 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35592
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35592
  # DEBUG D#183ptD.0 => &D.35592._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.54382 => _12
  # DEBUG __aD.54380 => D#181ptD.0
  # DEBUG __nD.54381 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.54385 => _12
  # DEBUG thisD.54383 => D#177ptD.0
  # DEBUG D.54384 => D#178ptD.0
  # .MEM_18 = VDEF <.MEM_14>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZdlPvD.2766 (_12);
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       68 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
  # DEBUG D#187ptD.0 => &D.35592._M_dataplusD.11519
  # DEBUG thisD.54388 => D#187ptD.0
  # DEBUG thisD.54389 => D#187ptD.0
  # DEBUG thisD.54390 => D#187ptD.0
  # .MEM_15 = VDEF <.MEM_1>
  D.35592 ={v} {CLOBBER};
  resx 6
;;    succ:      

;;   basic block 71, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 70, next block 85, flags: (NEW, REACHABLE)
;;    pred:       35 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                79 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                78 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_266 = PHI <.MEM_146(35), .MEM_146(79), .MEM_59(78)>
  # PT = nonlocal escaped 
  # __i$_M_node_271 = PHI <__i$_M_node_281(35), __i$_M_node_281(79), __i$_M_node_23(78)>
;;    succ:       85 [100.0%]  (FALLTHRU)

;;   basic block 85, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 71, next block 72, flags: (NEW)
;;    pred:       71 [100.0%]  (FALLTHRU)
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 85, next block 73, flags: (NEW, REACHABLE)
;;    pred:       36 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58031 => D#932ptD.0
  # DEBUG __lastD.58030 => _106
  # DEBUG D#393ptD.0 => &__firstD.58031
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58033 => D#932ptD.0
  # DEBUG __lastD.58032 => _106
  # .MEM_187 = VDEF <.MEM_186>
  __dnewD.58008 = pretmp_237;
  if (pretmp_237 > 15)
    goto <bb 37>;
  else
    goto <bb 39>;
;;    succ:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       36 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 3] # .MEM_234 = VDEF <.MEM_186>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       74 (EH,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 (EH,EXECUTABLE)
<L12>: [LP 3]
  goto <bb 65> (<L6>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       42 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 5] # .MEM_228 = VDEF <.MEM_196>
  # USE = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  # CLB = nonlocal null { D.35592 D.57910 D.57911 D.58008 D.58037 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       76 (EH,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 75, next block 77, flags: (NEW)
;;    pred:       75 (EH,EXECUTABLE)
<L13>: [LP 5]
  goto <bb 50> (<L7>);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 350, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 350
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       42 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58060 => _109
  # DEBUG __lastD.58059 => _111
  # DEBUG D#393ptD.0 => &__firstD.58060
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58062 => _109
  # DEBUG __lastD.58061 => _111
  # .MEM_197 = VDEF <.MEM_196>
  __dnewD.58037 = _110;
  if (_110 > 15)
    goto <bb 43>;
  else
    goto <bb 45>;
;;    succ:       43 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 78, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 77, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.57834 => NULL
  # DEBUG D#208ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48821 => D#208ptD.0
  # DEBUG thisD.54364 => &match.37D.35533
  # DEBUG __itD.54365 => &D.35529
  # DEBUG match$_M_nodeD.54391 => __i$_M_node_277
  # DEBUG D#576ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54360 => D#576ptD.0
  # DEBUG D#53ptD.0 => &D#576ptD.0->_M_tD.32259
  # DEBUG thisD.54361 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54358 => &D.35588
  # DEBUG __itD.54359 => &D.35534
  # DEBUG thisD.54355 => &matchD.35415
  # DEBUG __xD.54356 => &D.35588
  # DEBUG D#208ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.48821 => D#208ptD.0
  # DEBUG thisD.54364 => &match.37D.35533
  # DEBUG __itD.54365 => &D.35529
  # DEBUG match$_M_nodeD.54391 => __i$_M_node_277
  # DEBUG D#576ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.54360 => D#576ptD.0
  # DEBUG D#53ptD.0 => &D#576ptD.0->_M_tD.32259
  # DEBUG thisD.54361 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_23
  # DEBUG thisD.54358 => &D.35588
  # DEBUG __itD.54359 => &D.35534
  # DEBUG thisD.54355 => &matchD.35415
  # DEBUG __xD.54356 => &D.35588
  # DEBUG D#902ptD.0 => &this_3(D)->_str_mapD.33116
  # DEBUG thisD.57844 => D#902ptD.0
  # DEBUG __kD.57845 => field_4(D)
  # DEBUG thisD.57901 => D#902ptD.0
  # DEBUG __xD.57900 => field_4(D)
  # DEBUG D#941ptD.0 => &MEM[(struct mapD.32040 *)this_3(D) + 40B]._M_tD.32259
  # DEBUG thisD.57914 => D#941ptD.0
  # DEBUG __kD.57915 => field_4(D)
  # DEBUG thisD.57916 => D#941ptD.0
  # DEBUG D#35ptD.0 => D#941ptD.0
  # DEBUG thisD.48773 => D#35ptD.0
  # DEBUG D#207ptD.0 => D#941ptD.0
  # DEBUG __xD.57920 => NULL
  # DEBUG __yD.57919 => NULL
  # DEBUG __kD.57918 => field_4(D)
  # DEBUG __yD.57919 => __i$_M_node_23
  # DEBUG __xD.57920 => __i$_M_node_24
  if (__i$_M_node_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;
;;    succ:       71 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function void Configuration::AddStrField(const string&, const string&) (_ZN13Configuration11AddStrFieldERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_, funcdef_no=1729, decl_uid=35255, cgraph_uid=415, symbol_order=417)


Pass statistics:
----------------

void Configuration::AddStrField(const string&, const string&) (struct ConfigurationD.32032 * const thisD.35408, const struct stringD.2845 & fieldD.35405, const struct stringD.2845 & valueD.35406)
Eh tree:
   1 cleanup land:{7,<L6>},{6,<L5>},{4,<L3>},{1,<L7>}
     3 cleanup land:{5,<L4>},{3,<L8>}
     2 cleanup land:{2,<L0>}
{
  size_typeD.11502 __dnewD.58427;
  size_typeD.11502 __dnewD.58398;
  const size_typeD.11502 __sizeD.58337;
  const size_typeD.11502 __osizeD.58338;
  const size_typeD.11502 __lenD.58339;
  intD.9 __rD.58340;
  const difference_typeD.11503 __dD.58343;
  intD.9 D.58349;
  const size_typeD.11502 __sizeD.58322;
  const size_typeD.11502 __osizeD.58323;
  const size_typeD.11502 __lenD.58324;
  intD.9 __rD.58325;
  const difference_typeD.11503 __dD.58328;
  intD.9 D.58334;
  struct iteratorD.32574 D.58319;
  struct _Rb_tree_nodeD.32262 * __yD.58309;
  struct value_typeD.32044 D.58301;
  struct mapped_typeD.32043 D.58300;
  struct iteratorD.32847 D.58299;
  struct iteratorD.32574 D.58298;
  struct const_iteratorD.32576 __posD.58271;
  struct _Rb_tree_node_baseD.27676 * const __i$_M_nodeD.58297;
  struct _Rb_tree_node_baseD.27676 * SR.1072D.58296;
  struct _Rb_tree_node_baseD.27676 * SR.1075D.58295;
  struct mapped_typeD.32043 & D.58294;
  struct _Rep_typeD.32256 * _9;
  charD.10 * const _16;
  struct mapped_typeD.32043 & _18;
  charD.10 * const _19;
  const size_typeD.11502 _29;
  charD.10 * const _34;
  long unsigned intD.14 _36;
  const size_typeD.11502 _42;
  charD.10 * const _45;
  long unsigned intD.14 _48;
  boolD.2757 _52;
  charD.10 * _57;
  charD.10 * const _60;
  const size_typeD.11502 _61;
  charD.10 * _62;
  charD.10 * const _63;
  charD.10 * _69;
  long unsigned intD.14 __dnew.111_70;
  const char_typeD.6439 _72;
  charD.10 * _75;
  charD.10 * _81;
  long unsigned intD.14 __dnew.111_82;
  const char_typeD.6439 _84;
  charD.10 * _87;
  charD.10 * const _88;
  charD.10 * const _90;
  charD.10 * const pretmp_108;
  charD.10 * const prephitmp_144;
  const size_typeD.11502 prephitmp_145;
  charD.10 * const prephitmp_146;
  size_typeD.11502 pretmp_149;
  size_typeD.11502 prephitmp_150;
  charD.10 * const pretmp_151;
  charD.10 * const prephitmp_152;
  size_typeD.11502 pretmp_153;
  size_typeD.11502 prephitmp_156;
  charD.10 * const pretmp_157;
  charD.10 * const prephitmp_158;
  const size_typeD.11502 pretmp_159;
  const size_typeD.11502 pretmp_172;
  const size_typeD.11502 prephitmp_173;
  charD.10 * const pretmp_174;
  charD.10 * const _180;
  charD.10 * const _182;
  boolD.2757 _186;
  boolD.2757 _187;
  boolD.2757 _188;
  boolD.2757 _189;
  boolD.2757 _194;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#959ptD.0 => &this_1(D)->_str_mapD.33116
  # DEBUG thisD.58234 => D#959ptD.0
  # DEBUG __kD.58235 => field_4(D)
  # DEBUG thisD.58291 => D#959ptD.0
  # DEBUG __xD.58290 => field_4(D)
  # DEBUG D#982ptD.0 => &MEM[(struct mapD.32040 *)this_1(D) + 40B]._M_tD.32259
  # DEBUG thisD.58304 => D#982ptD.0
  # DEBUG __kD.58305 => field_4(D)
  # DEBUG thisD.58306 => D#982ptD.0
  # PT = nonlocal 
  __i$_M_node_5 = &MEM[(struct _Rb_treeD.32258 *)this_1(D) + 40B]._M_implD.32337._M_headerD.32503;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __i$_M_node_20 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_1(D) + 56B];
  # DEBUG D#35ptD.0 => D#982ptD.0
  # DEBUG thisD.48773 => D#35ptD.0
  # DEBUG D#207ptD.0 => D#982ptD.0
  # DEBUG __xD.58310 => NULL
  # DEBUG __yD.58309 => NULL
  # DEBUG __kD.58308 => field_4(D)
  # DEBUG __yD.58309 => __i$_M_node_5
  # DEBUG __xD.58310 => __i$_M_node_20
  if (__i$_M_node_20 == 0B)
    goto <bb 51>;
  else
    goto <bb 3>;
;;    succ:       51 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  pretmp_159 = MEM[(long unsigned intD.14 *)field_4(D) + 8B];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  pretmp_108 = MEM[(charD.10 * *)field_4(D)];
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_28 = PHI <__i$_M_node_24(11), __i$_M_node_25(12)>
  # PT = nonlocal escaped 
  # __i$_M_node_27 = PHI <__i$_M_node_197(11), __i$_M_node_196(12)>
  # DEBUG __yD.58309 => __i$_M_node_27
  # DEBUG __xD.58310 => __i$_M_node_28
  if (__i$_M_node_28 == 0B)
    goto <bb 13>;
  else
    goto <bb 5>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_197 = PHI <__i$_M_node_20(3), __i$_M_node_28(5)>
  # PT = nonlocal escaped 
  # __i$_M_node_196 = PHI <__i$_M_node_5(3), __i$_M_node_27(5)>
  # .MEM_205 = PHI <.MEM_3(D)(3), .MEM_205(5)>
  # DEBUG __yD.58309 => __i$_M_node_196
  # DEBUG __xD.58310 => __i$_M_node_197
  # DEBUG __xD.58311 => __i$_M_node_197
  # DEBUG __xD.48708 => __i$_M_node_197
  # DEBUG thisD.48709 => __i$_M_node_197
  # DEBUG D#204ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__i$_M_node_197]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.58313 => D#204ptD.0
  # DEBUG thisD.58312 => D#149ptD.0
  # DEBUG D#960ptD.0 => &MEM[(const struct pairD.32038 &)__i$_M_node_197 + 32].firstD.35538
  # DEBUG D#205ptD.0 => &D#206ptD.0->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#205ptD.0
  # DEBUG __xD.58316 => D#960ptD.0
  # DEBUG __yD.58315 => field_4(D)
  # DEBUG thisD.58314 => D#203ptD.0
  # DEBUG __lhsD.58318 => D#960ptD.0
  # DEBUG __rhsD.58317 => field_4(D)
  # DEBUG thisD.58320 => D#960ptD.0
  # DEBUG __strD.58321 => field_4(D)
  # VUSE <.MEM_205>
  _29 = MEM[(long unsigned intD.14 *)__i$_M_node_197 + 40B];
  # DEBUG D#2ptD.0 => D#960ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58322 => _29
  # DEBUG D#981ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58323 => D#981ptD.0
  # DEBUG __aD.58330 => &__sizeD.58322
  # DEBUG __bD.58329 => &__osizeD.58323
  __len_190 = MIN_EXPR <_29, pretmp_159>;
  # DEBUG __lenD.58324 => D#957ptD.0
  # DEBUG thisD.48671 => field_4(D)
  # DEBUG D#980ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_205>
  # PT = nonlocal escaped 
  _34 = MEM[(charD.10 * *)__i$_M_node_197 + 32B];
  # DEBUG D#3ptD.0 => D#960ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58333 => _34
  # DEBUG __s2D.58332 => D#980ptD.0
  # DEBUG __nD.58331 => D#957ptD.0
  # VUSE <.MEM_205>
  # USE = nonlocal escaped 
  __r_35 = memcmpD.989 (_34, pretmp_108, __len_190);
  # DEBUG __rD.58325 => NULL
  if (__r_35 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58327 => _29
  # DEBUG __n2D.58326 => D#981ptD.0
  # RANGE [0, 18446744073709551615]
  _36 = _29 - pretmp_159;
  __d_37 = (const difference_typeD.11503) _36;
  # DEBUG __dD.58328 => __d_37
  if (__d_37 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_37 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_38 = (intD.9) _36;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       6 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_39 = PHI <__r_35(6), __r_38(9)>
  # DEBUG __rD.58325 => __r_39
  # DEBUG D#966ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58322 => D#966ptD.0
  # DEBUG D#967ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58323 => D#967ptD.0
  if (__r_39 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58325 => NULL
  # DEBUG __yD.58309 => __i$_M_node_197
  # VUSE <.MEM_205>
  # PT = nonlocal escaped 
  __i$_M_node_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_197 + 16B];
  # DEBUG D#44ptD.0 => __i$_M_node_197
  # DEBUG __xD.48741 => D#44ptD.0
  # DEBUG __xD.58310 => NULL
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58325 => NULL
  # VUSE <.MEM_205>
  # PT = nonlocal escaped 
  __i$_M_node_25 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_197 + 24B];
  # DEBUG D#43ptD.0 => __i$_M_node_197
  # DEBUG __xD.48740 => D#43ptD.0
  # DEBUG __xD.58310 => NULL
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_204 = PHI <__i$_M_node_27(4)>
  # DEBUG thisD.48739 => NULL
  # DEBUG __xD.48738 => __i$_M_node_204
  # DEBUG __i$_M_nodeD.58297 => __i$_M_node_204
  # DEBUG thisD.58292 => D#959ptD.0
  # DEBUG D#53ptD.0 => &D#959ptD.0->_M_tD.32259
  # DEBUG thisD.58293 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_5
  # DEBUG thisD.54259 => &__iD.58236
  # DEBUG __xD.54260 => NULL
  if (__i$_M_node_5 == __i$_M_node_204)
    goto <bb 52>;
  else
    goto <bb 14>;
;;    succ:       52 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 765, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.54279 => &__iD.58236
  # DEBUG thisD.54280 => __i$_M_node_204
  # DEBUG D#571ptD.0 => &MEM[(struct _Rb_tree_nodeD.32262 *)__i$_M_node_204]._M_value_fieldD.38939
  # DEBUG __rD.48150 => D#571ptD.0
  # DEBUG D#961ptD.0 => &MEM[(struct pairD.32038 &)__i$_M_node_204 + 32].firstD.35538
  # DEBUG D#52ptD.0 => D#959ptD.0
  # DEBUG thisD.54276 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#52ptD.0
  # DEBUG D#50ptD.0 => &D#51ptD.0->_M_tD.32259
  # DEBUG D#49ptD.0 => D#50ptD.0
  # DEBUG thisD.47421 => D#49ptD.0
  # DEBUG __xD.58287 => field_4(D)
  # DEBUG __yD.58286 => D#961ptD.0
  # DEBUG thisD.58285 => D#203ptD.0
  # DEBUG __lhsD.58289 => field_4(D)
  # DEBUG __rhsD.58288 => D#961ptD.0
  # DEBUG thisD.58335 => field_4(D)
  # DEBUG __strD.58336 => D#961ptD.0
  # DEBUG D#979ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58337 => D#979ptD.0
  # VUSE <.MEM_205>
  _42 = MEM[(long unsigned intD.14 *)__i$_M_node_204 + 40B];
  # DEBUG D#2ptD.0 => D#961ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58338 => _42
  # DEBUG __aD.58345 => &__sizeD.58337
  # DEBUG __bD.58344 => &__osizeD.58338
  __len_192 = MIN_EXPR <_42, pretmp_159>;
  # DEBUG __lenD.58339 => D#958ptD.0
  # DEBUG thisD.48671 => D#961ptD.0
  # VUSE <.MEM_205>
  # PT = nonlocal escaped 
  _45 = MEM[(charD.10 * *)__i$_M_node_204 + 32B];
  # DEBUG D#3ptD.0 => D#961ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#978ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58348 => D#978ptD.0
  # DEBUG __s2D.58347 => _45
  # DEBUG __nD.58346 => D#958ptD.0
  # VUSE <.MEM_205>
  # USE = nonlocal escaped 
  __r_47 = memcmpD.989 (pretmp_108, _45, __len_192);
  # DEBUG __rD.58340 => NULL
  if (__r_47 == 0)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 467, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58342 => D#979ptD.0
  # DEBUG __n2D.58341 => _42
  # RANGE [0, 18446744073709551615]
  _48 = pretmp_159 - _42;
  __d_49 = (const difference_typeD.11503) _48;
  # DEBUG __dD.58343 => __d_49
  if (__d_49 > 2147483647)
    goto <bb 44>;
  else
    goto <bb 16>;
;;    succ:       44 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 233, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_49 < -2147483648)
    goto <bb 19>;
  else
    goto <bb 17>;
;;    succ:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_50 = (intD.9) _48;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 414, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       14 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_51 = PHI <__r_47(14), __r_50(17)>
  # DEBUG __rD.58340 => __r_51
  # DEBUG D#972ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58337 => D#972ptD.0
  # DEBUG D#973ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58338 => D#973ptD.0
  if (__r_51 < 0)
    goto <bb 52>;
  else
    goto <bb 44>;
;;    succ:       52 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_181 = PHI <.MEM_205(16), .MEM_191(52)>
  # PT = nonlocal escaped 
  # __i$_M_node_26 = PHI <__i$_M_node_204(16), __i$_M_node_21(52)>
  # prephitmp_145 = PHI <pretmp_159(16), prephitmp_173(52)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <pretmp_108(16), prephitmp_144(52)>
  # DEBUG thisD.58274 => &D.58300
  # DEBUG thisD.54283 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.58275 => &D.58300
  # DEBUG D#148ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG thisD.58278 => D#148ptD.0
  # DEBUG __datD.58277 => &D.58300.D.11539._M_local_bufD.11541
  # DEBUG __aD.58276 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#148ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_118 = VDEF <.MEM_181>
  MEM[(struct _Alloc_hiderD.11518 *)&D.58300]._M_pD.11525 = &D.58300.D.11539._M_local_bufD.11541;
  # DEBUG thisD.54288 => NULL
  # DEBUG thisD.48138 => NULL
  # DEBUG thisD.58280 => &D.58300
  # DEBUG __nD.58279 => 0
  # DEBUG D#5ptD.0 => &D.58300
  # DEBUG __lengthD.58282 => 0
  # DEBUG thisD.58281 => D#5ptD.0
  # .MEM_119 = VDEF <.MEM_118>
  MEM[(size_typeD.11502 *)&D.58300 + 8B] = 0;
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.47013 => D#3ptD.0
  # DEBUG __c1D.58284 => &D.58300.D.11539._M_local_bufD.11541
  # DEBUG __c2D.58283 => D#13ptD.0
  # .MEM_120 = VDEF <.MEM_119>
  MEM[(char_typeD.6439 &)&D.58300 + 16] = 0;
  # DEBUG thisD.58350 => &D.58301
  # DEBUG __aD.58351 => field_4(D)
  # DEBUG __bD.58352 => &D.58300
  # DEBUG thisD.58367 => &D.58301.firstD.35538
  # DEBUG __strD.58366 => field_4(D)
  # DEBUG thisD.50825 => field_4(D)
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)field_4(D)]._M_dataplusD.11519
  # DEBUG thisD.58368 => &D.58301.firstD.35538
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.58301]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.58371 => D#381ptD.0
  # DEBUG __datD.58370 => &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541
  # DEBUG __aD.58369 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_121 = VDEF <.MEM_120>
  MEM[(struct _Alloc_hiderD.11518 *)&D.58301]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541;
  # DEBUG D#977ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # DEBUG D#976ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#1ptD.0 => field_4(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _57 = prephitmp_146 + prephitmp_145;
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.58374 => &D.58301.firstD.35538
  # DEBUG __begD.58373 => D#977ptD.0
  # DEBUG __endD.58372 => _57
  # DEBUG thisD.58378 => &D.58301.firstD.35538
  # DEBUG __begD.58377 => D#977ptD.0
  # DEBUG __endD.58376 => _57
  # DEBUG thisD.58395 => &D.58301.firstD.35538
  # DEBUG __begD.58396 => D#977ptD.0
  # DEBUG __endD.58397 => _57
  # DEBUG __ptrD.51229 => D#977ptD.0
  # RANGE [0, 1]
  _52 = _57 != 0B;
  # RANGE [0, 1]
  _189 = prephitmp_146 == 0B;
  # RANGE [0, 1]
  _188 = _52 & _189;
  if (_188 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;
;;    succ:       53 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       55 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 4] # .MEM_123 = VDEF <.MEM_122>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _69 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.58301.firstD.35538, &__dnewD.58398, 0);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 (EH,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.58301.firstD.35538
  # DEBUG __pD.58417 => _69
  # DEBUG thisD.58416 => D#6ptD.0
  # .MEM_124 = VDEF <.MEM_123>
  MEM[(charD.10 * *)&D.58301] = _69;
  # VUSE <.MEM_124>
  __dnew.111_70 = __dnewD.58398;
  # DEBUG D#7ptD.0 => &D.58301.firstD.35538
  # DEBUG __capacityD.58419 => __dnew.111_70
  # DEBUG thisD.58418 => D#7ptD.0
  # .MEM_125 = VDEF <.MEM_124>
  MEM[(size_typeD.11502 *)&D.58301 + 16B] = __dnew.111_70;
  # DEBUG D#3ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58401 => _69
  # DEBUG __k1D.58400 => D#977ptD.0
  # DEBUG __k2D.58399 => _57
  # DEBUG __dD.58404 => _69
  # DEBUG __sD.58403 => D#977ptD.0
  # DEBUG __nD.58402 => D#976ptD.0
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       55 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58401 => &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58400 => D#977ptD.0
  # DEBUG __k2D.58399 => _57
  # DEBUG __dD.58404 => &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541
  # DEBUG __sD.58403 => D#977ptD.0
  # DEBUG __nD.58402 => D#976ptD.0
  if (prephitmp_145 == 1)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_122>
  _72 = MEM[(const char_typeD.6439 &)prephitmp_146];
  # DEBUG D#13ptD.0 => D#977ptD.0
  # DEBUG __c1D.58409 => &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58408 => D#13ptD.0
  # .MEM_126 = VDEF <.MEM_122>
  MEM[(char_typeD.6439 &)&D.58301 + 16] = _72;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  # _180 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541(22), _69(21)>
  # .MEM_178 = PHI <.MEM_122(22), .MEM_125(21)>
  # DEBUG D#3ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58401 => _180
  # DEBUG __k1D.58400 => D#977ptD.0
  # DEBUG __k2D.58399 => _57
  # DEBUG __dD.58404 => _180
  # DEBUG __sD.58403 => D#977ptD.0
  # DEBUG __nD.58402 => D#976ptD.0
  # DEBUG __s1D.58407 => _180
  # DEBUG __s2D.58406 => D#977ptD.0
  # DEBUG __nD.58405 => D#976ptD.0
  # .MEM_127 = VDEF <.MEM_178>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  memcpyD.992 (_180, prephitmp_146, prephitmp_145);
  # VUSE <.MEM_127>
  pretmp_149 = __dnewD.58398;
  # VUSE <.MEM_127>
  pretmp_151 = MEM[(charD.10 * *)&D.58301];
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_95 = PHI <.MEM_126(23), .MEM_127(24)>
  # prephitmp_150 = PHI <prephitmp_145(23), pretmp_149(24)>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  # prephitmp_152 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541(23), pretmp_151(24)>
  # DEBUG D#975ptD.0 => __dnewD.58398
  # DEBUG thisD.58411 => &D.58301.firstD.35538
  # DEBUG __nD.58410 => D#975ptD.0
  # DEBUG D#5ptD.0 => &D.58301.firstD.35538
  # DEBUG __lengthD.58413 => D#975ptD.0
  # DEBUG thisD.58412 => D#5ptD.0
  # .MEM_128 = VDEF <.MEM_95>
  MEM[(size_typeD.11502 *)&D.58301 + 8B] = prephitmp_150;
  # DEBUG D#3ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _75 = prephitmp_152 + prephitmp_150;
  # DEBUG __c1D.58415 => _75
  # DEBUG __c2D.58414 => D#13ptD.0
  # .MEM_129 = VDEF <.MEM_128>
  MEM[(char_typeD.6439 &)_75] = 0;
  # .MEM_130 = VDEF <.MEM_129>
  __dnewD.58398 ={v} {CLOBBER};
  # DEBUG thisD.58381 => &D.58301.secondD.35539
  # DEBUG __strD.58380 => &D.58300
  # DEBUG thisD.50825 => &D.58300
  # DEBUG D#380ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG thisD.58382 => &D.58301.secondD.35539
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.58385 => D#381ptD.0
  # DEBUG __datD.58384 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __aD.58383 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_131 = VDEF <.MEM_130>
  MEM[(struct _Alloc_hiderD.11518 *)&D.58301 + 32B]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541;
  # VUSE <.MEM_131>
  # PT = nonlocal escaped null { D.58300 } (escaped)
  _60 = MEM[(charD.10 * *)&D.58300];
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_131>
  _61 = MEM[(long unsigned intD.14 *)&D.58300 + 8B];
  # DEBUG D#1ptD.0 => &D.58300
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.58300 } (escaped)
  _62 = _60 + _61;
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.58388 => &D.58301.secondD.35539
  # DEBUG __begD.58387 => _60
  # DEBUG __endD.58386 => _62
  # DEBUG thisD.58392 => &D.58301.secondD.35539
  # DEBUG __begD.58391 => _60
  # DEBUG __endD.58390 => _62
  # DEBUG thisD.58424 => &D.58301.secondD.35539
  # DEBUG __begD.58425 => _60
  # DEBUG __endD.58426 => _62
  # DEBUG __ptrD.51229 => _60
  # RANGE [0, 1]
  _186 = _62 != 0B;
  # RANGE [0, 1]
  _187 = _60 == 0B;
  # RANGE [0, 1]
  _194 = _186 & _187;
  if (_194 != 0)
    goto <bb 57>;
  else
    goto <bb 56>;
;;    succ:       57 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       56 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 5] # .MEM_133 = VDEF <.MEM_132>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _81 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.58301.secondD.35539, &__dnewD.58427, 0);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 (EH,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.58301.secondD.35539
  # DEBUG __pD.58446 => _81
  # DEBUG thisD.58445 => D#6ptD.0
  # .MEM_134 = VDEF <.MEM_133>
  MEM[(charD.10 * *)&D.58301 + 32B] = _81;
  # VUSE <.MEM_134>
  __dnew.111_82 = __dnewD.58427;
  # DEBUG D#7ptD.0 => &D.58301.secondD.35539
  # DEBUG __capacityD.58448 => __dnew.111_82
  # DEBUG thisD.58447 => D#7ptD.0
  # .MEM_135 = VDEF <.MEM_134>
  MEM[(size_typeD.11502 *)&D.58301 + 48B] = __dnew.111_82;
  # DEBUG D#3ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58430 => _81
  # DEBUG __k1D.58429 => _60
  # DEBUG __k2D.58428 => _62
  # DEBUG __dD.58433 => _81
  # DEBUG __sD.58432 => _60
  # DEBUG __nD.58431 => _61
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       56 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58430 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58429 => _60
  # DEBUG __k2D.58428 => _62
  # DEBUG __dD.58433 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __sD.58432 => _60
  # DEBUG __nD.58431 => _61
  if (_61 == 1)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_132>
  _84 = MEM[(const char_typeD.6439 &)_60];
  # DEBUG D#13ptD.0 => _60
  # DEBUG __c1D.58438 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58437 => D#13ptD.0
  # .MEM_136 = VDEF <.MEM_132>
  MEM[(char_typeD.6439 &)&D.58301 + 48] = _84;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  # _182 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541(28), _81(27)>
  # .MEM_179 = PHI <.MEM_132(28), .MEM_135(27)>
  # DEBUG D#3ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58430 => _182
  # DEBUG __k1D.58429 => _60
  # DEBUG __k2D.58428 => _62
  # DEBUG __dD.58433 => _182
  # DEBUG __sD.58432 => _60
  # DEBUG __nD.58431 => _61
  # DEBUG __s1D.58436 => _182
  # DEBUG __s2D.58435 => _60
  # DEBUG __nD.58434 => _61
  # .MEM_137 = VDEF <.MEM_179>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  memcpyD.992 (_182, _60, _61);
  # VUSE <.MEM_137>
  pretmp_153 = __dnewD.58427;
  # VUSE <.MEM_137>
  pretmp_157 = MEM[(charD.10 * *)&D.58301 + 32B];
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_136(29), .MEM_137(30)>
  # prephitmp_156 = PHI <_61(29), pretmp_153(30)>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  # prephitmp_158 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541(29), pretmp_157(30)>
  # DEBUG D#974ptD.0 => __dnewD.58427
  # DEBUG thisD.58440 => &D.58301.secondD.35539
  # DEBUG __nD.58439 => D#974ptD.0
  # DEBUG D#5ptD.0 => &D.58301.secondD.35539
  # DEBUG __lengthD.58442 => D#974ptD.0
  # DEBUG thisD.58441 => D#5ptD.0
  # .MEM_138 = VDEF <.MEM_97>
  MEM[(size_typeD.11502 *)&D.58301 + 40B] = prephitmp_156;
  # DEBUG D#3ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _87 = prephitmp_158 + prephitmp_156;
  # DEBUG __c1D.58444 => _87
  # DEBUG __c2D.58443 => D#13ptD.0
  # .MEM_139 = VDEF <.MEM_138>
  MEM[(char_typeD.6439 &)_87] = 0;
  # .MEM_140 = VDEF <.MEM_139>
  __dnewD.58427 ={v} {CLOBBER};
  # DEBUG thisD.58269 => D#959ptD.0
  # DEBUG __position$_M_nodeD.54345 => __i$_M_node_26
  # DEBUG __xD.58267 => &D.58301
  # DEBUG thisD.54299 => NULL
  # DEBUG __itD.54298 => &__positionD.58268
  # DEBUG thisD.58272 => D#982ptD.0
  # .MEM_141 = VDEF <.MEM_140>
  MEM[(struct _Rb_tree_const_iteratorD.32577 *)&__posD.58271] = __i$_M_node_26;
  # DEBUG __xD.58270 => &D.58301
  # DEBUG thisD.54253 => &__anD.58273
  # DEBUG __tD.54252 => D#982ptD.0
  # DEBUG __an$_M_tD.54246 => D#982ptD.0
  # DEBUG D#570ptD.0 => &__anD.58273
  # PT = nonlocal 
  _9 = &MEM[(struct mapD.32040 *)this_1(D) + 40B]._M_tD.32259;
  [LP 2] # .MEM_142 = VDEF <.MEM_141>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  D.58298 = _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.157.constprop.180D.55287 (_9, __posD.58271, &D.58301);
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 (EH,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       26 (EH,EXECUTABLE)
<L4>: [LP 5]
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_133(32), .MEM_163(58)>
<L2>:
  # DEBUG D#383ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.58353 => D#383ptD.0
  # DEBUG thisD.58354 => D#383ptD.0
  # DEBUG thisD.50871 => D#383ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _63 = MEM[(charD.10 * *)&D.58301];
  # DEBUG D#3ptD.0 => D#383ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50872 => D#383ptD.0
  if (&MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541 != _63)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#383ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58356 => D#383ptD.0
  # DEBUG __sizeD.58355 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#383ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#383ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#383ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58359 => _63
  # DEBUG __aD.58357 => D#181ptD.0
  # DEBUG __nD.58358 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58362 => _63
  # DEBUG thisD.58360 => D#177ptD.0
  # DEBUG D.58361 => D#178ptD.0
  # .MEM_164 = VDEF <.MEM_98>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_63);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_98(33), .MEM_164(34)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#383ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58363 => D#187ptD.0
  # DEBUG thisD.58364 => D#187ptD.0
  # DEBUG thisD.58365 => D#187ptD.0
  # .MEM_168 = VDEF <.MEM_99>
  MEM[(struct  &)&D.58301] ={v} {CLOBBER};
  [LP 6] resx 3
;;    succ:       36 (EH,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       35 (EH,EXECUTABLE)
<L5>: [LP 6]
  goto <bb 48> (<L1>);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_142>
  # PT = nonlocal escaped 
  __i$_M_node_15 = MEM[(struct _Rb_tree_iteratorD.32575 *)&D.58298];
  # DEBUG __i$_M_nodeD.58297 => __i$_M_node_15
  # DEBUG thisD.58453 => &D.58301
  # DEBUG D#190ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.58454 => D#190ptD.0
  # DEBUG thisD.58455 => D#190ptD.0
  # DEBUG thisD.58464 => D#190ptD.0
  # VUSE <.MEM_142>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _88 = MEM[(charD.10 * *)&D.58301 + 32B];
  # DEBUG D#3ptD.0 => D#190ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58465 => D#190ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541 != _88)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D#190ptD.0->D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58457 => D#190ptD.0
  # DEBUG __sizeD.58456 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#190ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#190ptD.0
  # DEBUG D#183ptD.0 => &D#190ptD.0->_M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58460 => _88
  # DEBUG __aD.58458 => D#181ptD.0
  # DEBUG __nD.58459 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58463 => _88
  # DEBUG thisD.58461 => D#177ptD.0
  # DEBUG D.58462 => D#178ptD.0
  # .MEM_143 = VDEF <.MEM_142>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_88);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_142(37), .MEM_143(38)>
  # DEBUG D#187ptD.0 => &D#190ptD.0->_M_dataplusD.11519
  # DEBUG thisD.58466 => D#187ptD.0
  # DEBUG thisD.58467 => D#187ptD.0
  # DEBUG thisD.58468 => D#187ptD.0
  # .MEM_147 = VDEF <.MEM_100>
  MEM[(struct  &)&D.58301 + 32] ={v} {CLOBBER};
  # DEBUG D#189ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.58469 => D#189ptD.0
  # DEBUG thisD.58470 => D#189ptD.0
  # DEBUG thisD.58479 => D#189ptD.0
  # VUSE <.MEM_147>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _90 = MEM[(charD.10 * *)&D.58301];
  # DEBUG D#3ptD.0 => D#189ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58480 => D#189ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541 != _90)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 275, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#189ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58472 => D#189ptD.0
  # DEBUG __sizeD.58471 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#189ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#189ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#189ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58475 => _90
  # DEBUG __aD.58473 => D#181ptD.0
  # DEBUG __nD.58474 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58478 => _90
  # DEBUG thisD.58476 => D#177ptD.0
  # DEBUG D.58477 => D#178ptD.0
  # .MEM_148 = VDEF <.MEM_147>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_90);
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_101 = PHI <.MEM_147(39), .MEM_148(40)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#189ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58481 => D#187ptD.0
  # DEBUG thisD.58482 => D#187ptD.0
  # DEBUG thisD.58483 => D#187ptD.0
  # .MEM_154 = VDEF <.MEM_101>
  D.58301 ={v} {CLOBBER};
  # DEBUG thisD.58252 => &D.58300
  # DEBUG thisD.58253 => &D.58300
  # DEBUG thisD.58262 => &D.58300
  # VUSE <.MEM_154>
  # PT = nonlocal escaped null { D.58300 } (escaped)
  _16 = MEM[(charD.10 * *)&D.58300];
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58263 => &D.58300
  if (&D.58300.D.11539._M_local_bufD.11541 != _16)
    goto <bb 42>;
  else
    goto <bb 43>;
;;    succ:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.58300.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58255 => &D.58300
  # DEBUG __sizeD.58254 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.58300
  # DEBUG D#183ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58258 => _16
  # DEBUG __aD.58256 => D#181ptD.0
  # DEBUG __nD.58257 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58261 => _16
  # DEBUG thisD.58259 => D#177ptD.0
  # DEBUG D.58260 => D#178ptD.0
  # .MEM_155 = VDEF <.MEM_154>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       41 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_102 = PHI <.MEM_154(41), .MEM_155(42)>
  # DEBUG D#187ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG thisD.58264 => D#187ptD.0
  # DEBUG thisD.58265 => D#187ptD.0
  # DEBUG thisD.58266 => D#187ptD.0
  # .MEM_160 = VDEF <.MEM_102>
  D.58300 ={v} {CLOBBER};
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       15 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [78.3%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_17 = PHI <__i$_M_node_204(15), __i$_M_node_15(43), __i$_M_node_204(18)>
  # .MEM_103 = PHI <.MEM_205(15), .MEM_160(43), .MEM_205(18)>
  # DEBUG __i$_M_nodeD.58297 => __i$_M_node_17
  # DEBUG thisD.54322 => &__iD.58236
  # DEBUG thisD.54323 => __i$_M_node_17
  # DEBUG D#572ptD.0 => &MEM[(struct _Rb_tree_nodeD.32262 *)__i$_M_node_17]._M_value_fieldD.38939
  # DEBUG __rD.48150 => D#572ptD.0
  # PT = nonlocal escaped 
  _18 = &MEM[(struct pairD.32038 &)__i$_M_node_17 + 32].secondD.35539;
  # DEBUG D#574ptD.0 => {CLOBBER}
  # DEBUG __i$_M_nodeD.58297 => D#574ptD.0
  # DEBUG thisD.54349 => NULL
  # DEBUG __strD.54350 => value_7(D)
  # DEBUG thisD.54352 => NULL
  # DEBUG __strD.54351 => value_7(D)
  # .MEM_8 = VDEF <.MEM_103>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (_18, value_7(D));
  # VUSE <.MEM_8>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       31 (EH,EXECUTABLE)
<L0>: [LP 2]
  # .MEM_161 = VDEF <.MEM_142>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED1EvD.38800 (&D.58301);
  # .MEM_162 = VDEF <.MEM_161>
  D.58301 ={v} {CLOBBER};
  [LP 7] resx 2
;;    succ:       46 (EH,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       45 (EH,EXECUTABLE)
<L6>: [LP 7]
  goto <bb 48> (<L1>);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       20 (EH,EXECUTABLE)
<L3>: [LP 4]
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_104 = PHI <.MEM_168(36), .MEM_162(46), .MEM_123(47), .MEM_169(54)>
<L1>:
  # DEBUG thisD.58237 => &D.58300
  # DEBUG thisD.58238 => &D.58300
  # DEBUG thisD.58247 => &D.58300
  # VUSE <.MEM_104>
  # PT = nonlocal escaped null { D.58300 } (escaped)
  _19 = MEM[(charD.10 * *)&D.58300];
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58248 => &D.58300
  if (&D.58300.D.11539._M_local_bufD.11541 != _19)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.58300.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58240 => &D.58300
  # DEBUG __sizeD.58239 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.58300
  # DEBUG D#183ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58243 => _19
  # DEBUG __aD.58241 => D#181ptD.0
  # DEBUG __nD.58242 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58246 => _19
  # DEBUG thisD.58244 => D#177ptD.0
  # DEBUG D.58245 => D#178ptD.0
  # .MEM_170 = VDEF <.MEM_104>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_105 = PHI <.MEM_104(48), .MEM_170(49)>
  # DEBUG D#187ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG thisD.58249 => D#187ptD.0
  # DEBUG thisD.58250 => D#187ptD.0
  # DEBUG thisD.58251 => D#187ptD.0
  # .MEM_175 = VDEF <.MEM_105>
  D.58300 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 51, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  pretmp_172 = MEM[(long unsigned intD.14 *)field_4(D) + 8B];
  # VUSE <.MEM_3(D)>
  pretmp_174 = MEM[(charD.10 * *)field_4(D)];
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       18 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_191 = PHI <.MEM_205(18), .MEM_205(13), .MEM_3(D)(51)>
  # PT = nonlocal escaped 
  # __i$_M_node_21 = PHI <__i$_M_node_204(18), __i$_M_node_204(13), __i$_M_node_5(51)>
  # prephitmp_173 = PHI <pretmp_159(18), pretmp_159(13), pretmp_172(51)>
  # prephitmp_144 = PHI <pretmp_108(18), pretmp_108(13), pretmp_174(51)>
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       19 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_169 = VDEF <.MEM_121>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       54 (EH,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 (EH,EXECUTABLE)
<L7>: [LP 1]
  goto <bb 48> (<L1>);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       19 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58421 => D#977ptD.0
  # DEBUG __lastD.58420 => _57
  # DEBUG D#393ptD.0 => &__firstD.58421
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58423 => D#977ptD.0
  # DEBUG __lastD.58422 => _57
  # .MEM_122 = VDEF <.MEM_121>
  __dnewD.58398 = prephitmp_145;
  if (prephitmp_145 > 15)
    goto <bb 20>;
  else
    goto <bb 22>;
;;    succ:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       25 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58450 => _60
  # DEBUG __lastD.58449 => _62
  # DEBUG D#393ptD.0 => &__firstD.58450
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58452 => _60
  # DEBUG __lastD.58451 => _62
  # .MEM_132 = VDEF <.MEM_131>
  __dnewD.58427 = _61;
  if (_61 > 15)
    goto <bb 26>;
  else
    goto <bb 28>;
;;    succ:       26 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 3] # .MEM_163 = VDEF <.MEM_131>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 1, flags: (NEW)
;;    pred:       57 (EH,EXECUTABLE)
<L8>: [LP 3]
  goto <bb 33> (<L2>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_1(D) + 56B]
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_1(D) + 56B]
Creating dr for MEM[(long unsigned int *)field_4(D) + 8B]
analyze_innermost: success.
	base_address: field_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)field_4(D) + 8B]
Creating dr for MEM[(char * *)field_4(D)]
analyze_innermost: success.
	base_address: field_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)field_4(D)]
Creating dr for MEM[(long unsigned int *)field_4(D) + 8B]
analyze_innermost: success.
	base_address: field_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)field_4(D) + 8B]
Creating dr for MEM[(char * *)field_4(D)]
analyze_innermost: success.
	base_address: field_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)field_4(D)]
Creating dr for MEM[(long unsigned int *)__i$_M_node_197 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_197 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_197 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_197 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_197 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_197 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_197 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_197 + 32B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_197 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_197 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_197 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_197 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_197 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_197 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_197 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_197 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_197 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_197 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_197 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_197 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_197 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_197 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_197 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_197 + 32B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_197 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_197 + 40B]
Creating dr for MEM[(long unsigned int *)__i$_M_node_197 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__i$_M_node_197 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_197 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_197 + 32B]
Creating dr for MEM[(char * *)__i$_M_node_197 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__i$_M_node_197 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B]
Applying pattern match.pd:397, generic-match.c:4039
Creating dr for MEM[(long unsigned int *)__i$_M_node_204 + 40B]
analyze_innermost: success.
	base_address: __i$_M_node_204
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__i$_M_node_204 + 40B]
Creating dr for MEM[(char * *)__i$_M_node_204 + 32B]
analyze_innermost: success.
	base_address: __i$_M_node_204
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__i$_M_node_204 + 32B]
Creating dr for MEM[(struct _Alloc_hider *)&D.58300]._M_p
analyze_innermost: success.
	base_address: &D.58300
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.58300]
	Access function 0: 0
Creating dr for MEM[(size_type *)&D.58300 + 8B]
analyze_innermost: success.
	base_address: &D.58300
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.58300 + 8B]
Creating dr for MEM[(char_type &)&D.58300 + 16]
analyze_innermost: success.
	base_address: &D.58300
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&D.58300 + 16]
Creating dr for MEM[(struct _Alloc_hider *)&D.58301]._M_p
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.58301]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.58301]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58301]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)&D.58301 + 16B]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.58301 + 16B]
Creating dr for MEM[(const char_type &)prephitmp_146]
analyze_innermost: success.
	base_address: prephitmp_146
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)prephitmp_146]
Creating dr for MEM[(char_type &)&D.58301 + 16]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&D.58301 + 16]
Creating dr for MEM[(size_type *)&D.58301 + 8B]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.58301 + 8B]
Creating dr for MEM[(char_type &)_75]
analyze_innermost: success.
	base_address: prephitmp_152 + prephitmp_150
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_75]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.58301 + 32B]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58301 + 32B]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)&D.58301 + 48B]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.58301 + 48B]
Creating dr for MEM[(const char_type &)_60]
analyze_innermost: success.
	base_address: _60
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)_60]
Creating dr for MEM[(char_type &)&D.58301 + 48]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&D.58301 + 48]
Creating dr for MEM[(size_type *)&D.58301 + 40B]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.58301 + 40B]
Creating dr for MEM[(char_type &)_87]
analyze_innermost: success.
	base_address: prephitmp_158 + prephitmp_156
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_87]
Creating dr for MEM[(struct _Rb_tree_iterator *)&D.58298]
analyze_innermost: success.
	base_address: &D.58298
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_iterator *)&D.58298]
Creating dr for MEM[(char * *)&D.58301 + 32B]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58301 + 32B]
Creating dr for MEM[(char * *)&D.58301]
analyze_innermost: success.
	base_address: &D.58301
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58301]
Creating dr for MEM[(char * *)&D.58300]
analyze_innermost: success.
	base_address: &D.58300
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58300]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:63, LOOPS:1, CONDITIONS:25, STMTS:646)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_51 bb_3 })
  {
    <bb 2>:
    # DEBUG D#959 => &this_1(D)->_str_map
    # DEBUG this => D#959
    # DEBUG __k => field_4(D)
    # DEBUG this => D#959
    # DEBUG __x => field_4(D)
    # DEBUG D#982 => &MEM[(struct map *)this_1(D) + 40B]._M_t
    # DEBUG this => D#982
    # DEBUG __k => field_4(D)
    # DEBUG this => D#982
    __i$_M_node_5 = &MEM[(struct _Rb_tree *)this_1(D) + 40B]._M_impl._M_header;
    # VUSE <.MEM_3(D)>
    __i$_M_node_20 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 56B];
    # DEBUG D#35 => D#982
    # DEBUG this => D#35
    # DEBUG D#207 => D#982
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_4(D)
    # DEBUG __y => __i$_M_node_5
    # DEBUG __x => __i$_M_node_20
    if (__i$_M_node_20 == 0B)
      goto <bb 51>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_6 })
  {
    <bb 3>:
    # VUSE <.MEM_3(D)>
    pretmp_159 = MEM[(long unsigned int *)field_4(D) + 8B];
    # VUSE <.MEM_3(D)>
    pretmp_108 = MEM[(char * *)field_4(D)];
    goto <bb 6>;

  }
  bb_13 (preds = {bb_4 }, succs = {bb_59 })
  {
    <bb 13>:
    # __i$_M_node_204 = PHI <__i$_M_node_27(4)>

  }
  bb_59 (preds = {bb_13 }, succs = {bb_52 bb_14 })
  {
    <bb 59>:
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_204
    # DEBUG __i$_M_node => __i$_M_node_204
    # DEBUG this => D#959
    # DEBUG D#53 => &D#959->_M_t
    # DEBUG this => D#53
    # DEBUG this => NULL
    # DEBUG __x => __i$_M_node_5
    # DEBUG this => &__i
    # DEBUG __x => NULL
    if (__i$_M_node_5 == __i$_M_node_204)
      goto <bb 52>;
    else
      goto <bb 14>;

  }
  bb_14 (preds = {bb_59 }, succs = {bb_15 bb_18 })
  {
    <bb 14>:
    # DEBUG this => &__i
    # DEBUG this => __i$_M_node_204
    # DEBUG D#571 => &MEM[(struct _Rb_tree_node *)__i$_M_node_204]._M_value_field
    # DEBUG __r => D#571
    # DEBUG D#961 => &MEM[(struct pair &)__i$_M_node_204 + 32].first
    # DEBUG D#52 => D#959
    # DEBUG this => D#52
    # DEBUG D#51 => D#52
    # DEBUG D#50 => &D#51->_M_t
    # DEBUG D#49 => D#50
    # DEBUG this => D#49
    # DEBUG __x => field_4(D)
    # DEBUG __y => D#961
    # DEBUG this => D#203
    # DEBUG __lhs => field_4(D)
    # DEBUG __rhs => D#961
    # DEBUG this => field_4(D)
    # DEBUG __str => D#961
    # DEBUG D#979 => MEM[(long unsigned int *)field_4(D) + 8B]
    # DEBUG D#2 => field_4(D)
    # DEBUG this => D#2
    # DEBUG __size => D#979
    # VUSE <.MEM_205>
    _42 = MEM[(long unsigned int *)__i$_M_node_204 + 40B];
    # DEBUG D#2 => D#961
    # DEBUG this => D#2
    # DEBUG __osize => _42
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_192 = MIN_EXPR <_42, pretmp_159>;
    # DEBUG __len => D#958
    # DEBUG this => D#961
    # VUSE <.MEM_205>
    _45 = MEM[(char * *)__i$_M_node_204 + 32B];
    # DEBUG D#3 => D#961
    # DEBUG this => D#3
    # DEBUG D#978 => MEM[(char * *)field_4(D)]
    # DEBUG D#3 => field_4(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#978
    # DEBUG __s2 => _45
    # DEBUG __n => D#958
    # VUSE <.MEM_205>
    __r_47 = __builtin_memcmp (pretmp_108, _45, __len_192);
    # DEBUG __r => NULL
    if (__r_47 == 0)
      goto <bb 15>;
    else
      goto <bb 18>;

  }
  bb_15 (preds = {bb_14 }, succs = {bb_44 bb_16 })
  {
    <bb 15>:
    # DEBUG __n1 => D#979
    # DEBUG __n2 => _42
    _48 = pretmp_159 - _42;
    __d_49 = (const difference_type) _48;
    # DEBUG __d => __d_49
    if (__d_49 > 2147483647)
      goto <bb 44>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_19 bb_17 })
  {
    <bb 16>:
    if (__d_49 < -2147483648)
      goto <bb 19>;
    else
      goto <bb 17>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_18 })
  {
    <bb 17>:
    __r_50 = (int) _48;

  }
  bb_18 (preds = {bb_14 bb_17 }, succs = {bb_52 bb_44 })
  {
    <bb 18>:
    # __r_51 = PHI <__r_47(14), __r_50(17)>
    # DEBUG __r => __r_51
    # DEBUG D#972 => {CLOBBER}
    # DEBUG __size => D#972
    # DEBUG D#973 => {CLOBBER}
    # DEBUG __osize => D#973
    if (__r_51 < 0)
      goto <bb 52>;
    else
      goto <bb 44>;

  }
  bb_19 (preds = {bb_16 bb_62 }, succs = {bb_53 bb_55 })
  {
    <bb 19>:
    # .MEM_181 = PHI <.MEM_205(16), .MEM_191(62)>
    # __i$_M_node_26 = PHI <__i$_M_node_204(16), __i$_M_node_21(62)>
    # prephitmp_145 = PHI <pretmp_159(16), prephitmp_173(62)>
    # prephitmp_146 = PHI <pretmp_108(16), prephitmp_144(62)>
    # DEBUG this => &D.58300
    # DEBUG this => D#42
    # DEBUG D#41 => D#42
    # DEBUG this => D#41
    # DEBUG this => &D.58300
    # DEBUG D#148 => &D.58300._M_dataplus
    # DEBUG this => D#148
    # DEBUG __dat => &D.58300.D.11539._M_local_buf
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#148
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_118 = VDEF <.MEM_181>
    MEM[(struct _Alloc_hider *)&D.58300]._M_p = &D.58300.D.11539._M_local_buf;
    # DEBUG this => NULL
    # DEBUG this => NULL
    # DEBUG this => &D.58300
    # DEBUG __n => 0
    # DEBUG D#5 => &D.58300
    # DEBUG __length => 0
    # DEBUG this => D#5
    # .MEM_119 = VDEF <.MEM_118>
    MEM[(size_type *)&D.58300 + 8B] = 0;
    # DEBUG D#3 => &D.58300
    # DEBUG this => D#3
    # DEBUG __c1 => &D.58300.D.11539._M_local_buf
    # DEBUG __c2 => D#13
    # .MEM_120 = VDEF <.MEM_119>
    MEM[(char_type &)&D.58300 + 16] = 0;
    # DEBUG this => &D.58301
    # DEBUG __a => field_4(D)
    # DEBUG __b => &D.58300
    # DEBUG this => &D.58301.first
    # DEBUG __str => field_4(D)
    # DEBUG this => field_4(D)
    # DEBUG D#380 => &MEM[(const struct basic_string *)field_4(D)]._M_dataplus
    # DEBUG this => &D.58301.first
    # DEBUG D#381 => &MEM[(struct basic_string *)&D.58301]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_121 = VDEF <.MEM_120>
    MEM[(struct _Alloc_hider *)&D.58301]._M_p = &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf;
    # DEBUG D#977 => MEM[(char * *)field_4(D)]
    # DEBUG D#3 => field_4(D)
    # DEBUG this => D#3
    # DEBUG D#976 => MEM[(long unsigned int *)field_4(D) + 8B]
    # DEBUG D#1 => field_4(D)
    # DEBUG this => D#1
    _57 = prephitmp_146 + prephitmp_145;
    # DEBUG D#3 => field_4(D)
    # DEBUG this => D#3
    # DEBUG this => &D.58301.first
    # DEBUG __beg => D#977
    # DEBUG __end => _57
    # DEBUG this => &D.58301.first
    # DEBUG __beg => D#977
    # DEBUG __end => _57
    # DEBUG this => &D.58301.first
    # DEBUG __beg => D#977
    # DEBUG __end => _57
    # DEBUG __ptr => D#977
    _52 = _57 != 0B;
    _189 = prephitmp_146 == 0B;
    _188 = _52 & _189;
    if (_188 != 0)
      goto <bb 53>;
    else
      goto <bb 55>;

  }
  bb_20 (preds = {bb_55 }, succs = {bb_21 bb_47 })
  {
    <bb 20>:
    # .MEM_123 = VDEF <.MEM_122>
    _69 = std::__cxx11::basic_string<char>::_M_create (&D.58301.first, &__dnew, 0);

  }
  bb_21 (preds = {bb_20 }, succs = {bb_24 })
  {
    <bb 21>:
    # DEBUG D#6 => &D.58301.first
    # DEBUG __p => _69
    # DEBUG this => D#6
    # .MEM_124 = VDEF <.MEM_123>
    MEM[(char * *)&D.58301] = _69;
    # VUSE <.MEM_124>
    __dnew.111_70 = __dnew;
    # DEBUG D#7 => &D.58301.first
    # DEBUG __capacity => __dnew.111_70
    # DEBUG this => D#7
    # .MEM_125 = VDEF <.MEM_124>
    MEM[(size_type *)&D.58301 + 16B] = __dnew.111_70;
    # DEBUG D#3 => &D.58301.first
    # DEBUG this => D#3
    # DEBUG __p => _69
    # DEBUG __k1 => D#977
    # DEBUG __k2 => _57
    # DEBUG __d => _69
    # DEBUG __s => D#977
    # DEBUG __n => D#976
    goto <bb 24>;

  }
  bb_22 (preds = {bb_55 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # DEBUG D#3 => &D.58301.first
    # DEBUG this => D#3
    # DEBUG __p => &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf
    # DEBUG __k1 => D#977
    # DEBUG __k2 => _57
    # DEBUG __d => &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf
    # DEBUG __s => D#977
    # DEBUG __n => D#976
    if (prephitmp_145 == 1)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 }, succs = {bb_25 })
  {
    <bb 23>:
    # VUSE <.MEM_122>
    _72 = MEM[(const char_type &)prephitmp_146];
    # DEBUG D#13 => D#977
    # DEBUG __c1 => &MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf
    # DEBUG __c2 => D#13
    # .MEM_126 = VDEF <.MEM_122>
    MEM[(char_type &)&D.58301 + 16] = _72;
    goto <bb 25>;

  }
  bb_24 (preds = {bb_22 bb_21 }, succs = {bb_25 })
  {
    <bb 24>:
    # _180 = PHI <&MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf(22), _69(21)>
    # .MEM_178 = PHI <.MEM_122(22), .MEM_125(21)>
    # DEBUG D#3 => &D.58301.first
    # DEBUG this => D#3
    # DEBUG __p => _180
    # DEBUG __k1 => D#977
    # DEBUG __k2 => _57
    # DEBUG __d => _180
    # DEBUG __s => D#977
    # DEBUG __n => D#976
    # DEBUG __s1 => _180
    # DEBUG __s2 => D#977
    # DEBUG __n => D#976
    # .MEM_127 = VDEF <.MEM_178>
    __builtin_memcpy (_180, prephitmp_146, prephitmp_145);
    # VUSE <.MEM_127>
    pretmp_149 = __dnew;
    # VUSE <.MEM_127>
    pretmp_151 = MEM[(char * *)&D.58301];

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_57 bb_56 })
  {
    <bb 25>:
    # .MEM_95 = PHI <.MEM_126(23), .MEM_127(24)>
    # prephitmp_150 = PHI <prephitmp_145(23), pretmp_149(24)>
    # prephitmp_152 = PHI <&MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf(23), pretmp_151(24)>
    # DEBUG D#975 => __dnew
    # DEBUG this => &D.58301.first
    # DEBUG __n => D#975
    # DEBUG D#5 => &D.58301.first
    # DEBUG __length => D#975
    # DEBUG this => D#5
    # .MEM_128 = VDEF <.MEM_95>
    MEM[(size_type *)&D.58301 + 8B] = prephitmp_150;
    # DEBUG D#3 => &D.58301.first
    # DEBUG this => D#3
    _75 = prephitmp_152 + prephitmp_150;
    # DEBUG __c1 => _75
    # DEBUG __c2 => D#13
    # .MEM_129 = VDEF <.MEM_128>
    MEM[(char_type &)_75] = 0;
    # .MEM_130 = VDEF <.MEM_129>
    __dnew ={v} {CLOBBER};
    # DEBUG this => &D.58301.second
    # DEBUG __str => &D.58300
    # DEBUG this => &D.58300
    # DEBUG D#380 => &D.58300._M_dataplus
    # DEBUG this => &D.58301.second
    # DEBUG D#381 => &MEM[(struct basic_string *)&D.58301 + 32B]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_131 = VDEF <.MEM_130>
    MEM[(struct _Alloc_hider *)&D.58301 + 32B]._M_p = &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf;
    # VUSE <.MEM_131>
    _60 = MEM[(char * *)&D.58300];
    # DEBUG D#3 => &D.58300
    # DEBUG this => D#3
    # VUSE <.MEM_131>
    _61 = MEM[(long unsigned int *)&D.58300 + 8B];
    # DEBUG D#1 => &D.58300
    # DEBUG this => D#1
    _62 = _60 + _61;
    # DEBUG D#3 => &D.58300
    # DEBUG this => D#3
    # DEBUG this => &D.58301.second
    # DEBUG __beg => _60
    # DEBUG __end => _62
    # DEBUG this => &D.58301.second
    # DEBUG __beg => _60
    # DEBUG __end => _62
    # DEBUG this => &D.58301.second
    # DEBUG __beg => _60
    # DEBUG __end => _62
    # DEBUG __ptr => _60
    _186 = _62 != 0B;
    _187 = _60 == 0B;
    _194 = _186 & _187;
    if (_194 != 0)
      goto <bb 57>;
    else
      goto <bb 56>;

  }
  bb_26 (preds = {bb_56 }, succs = {bb_27 bb_32 })
  {
    <bb 26>:
    # .MEM_133 = VDEF <.MEM_132>
    _81 = std::__cxx11::basic_string<char>::_M_create (&D.58301.second, &__dnew, 0);

  }
  bb_27 (preds = {bb_26 }, succs = {bb_30 })
  {
    <bb 27>:
    # DEBUG D#6 => &D.58301.second
    # DEBUG __p => _81
    # DEBUG this => D#6
    # .MEM_134 = VDEF <.MEM_133>
    MEM[(char * *)&D.58301 + 32B] = _81;
    # VUSE <.MEM_134>
    __dnew.111_82 = __dnew;
    # DEBUG D#7 => &D.58301.second
    # DEBUG __capacity => __dnew.111_82
    # DEBUG this => D#7
    # .MEM_135 = VDEF <.MEM_134>
    MEM[(size_type *)&D.58301 + 48B] = __dnew.111_82;
    # DEBUG D#3 => &D.58301.second
    # DEBUG this => D#3
    # DEBUG __p => _81
    # DEBUG __k1 => _60
    # DEBUG __k2 => _62
    # DEBUG __d => _81
    # DEBUG __s => _60
    # DEBUG __n => _61
    goto <bb 30>;

  }
  bb_28 (preds = {bb_56 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG D#3 => &D.58301.second
    # DEBUG this => D#3
    # DEBUG __p => &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf
    # DEBUG __k1 => _60
    # DEBUG __k2 => _62
    # DEBUG __d => &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf
    # DEBUG __s => _60
    # DEBUG __n => _61
    if (_61 == 1)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_31 })
  {
    <bb 29>:
    # VUSE <.MEM_132>
    _84 = MEM[(const char_type &)_60];
    # DEBUG D#13 => _60
    # DEBUG __c1 => &MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf
    # DEBUG __c2 => D#13
    # .MEM_136 = VDEF <.MEM_132>
    MEM[(char_type &)&D.58301 + 48] = _84;
    goto <bb 31>;

  }
  bb_30 (preds = {bb_28 bb_27 }, succs = {bb_31 })
  {
    <bb 30>:
    # _182 = PHI <&MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf(28), _81(27)>
    # .MEM_179 = PHI <.MEM_132(28), .MEM_135(27)>
    # DEBUG D#3 => &D.58301.second
    # DEBUG this => D#3
    # DEBUG __p => _182
    # DEBUG __k1 => _60
    # DEBUG __k2 => _62
    # DEBUG __d => _182
    # DEBUG __s => _60
    # DEBUG __n => _61
    # DEBUG __s1 => _182
    # DEBUG __s2 => _60
    # DEBUG __n => _61
    # .MEM_137 = VDEF <.MEM_179>
    __builtin_memcpy (_182, _60, _61);
    # VUSE <.MEM_137>
    pretmp_153 = __dnew;
    # VUSE <.MEM_137>
    pretmp_157 = MEM[(char * *)&D.58301 + 32B];

  }
  bb_31 (preds = {bb_29 bb_30 }, succs = {bb_37 bb_45 })
  {
    <bb 31>:
    # .MEM_97 = PHI <.MEM_136(29), .MEM_137(30)>
    # prephitmp_156 = PHI <_61(29), pretmp_153(30)>
    # prephitmp_158 = PHI <&MEM[(struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf(29), pretmp_157(30)>
    # DEBUG D#974 => __dnew
    # DEBUG this => &D.58301.second
    # DEBUG __n => D#974
    # DEBUG D#5 => &D.58301.second
    # DEBUG __length => D#974
    # DEBUG this => D#5
    # .MEM_138 = VDEF <.MEM_97>
    MEM[(size_type *)&D.58301 + 40B] = prephitmp_156;
    # DEBUG D#3 => &D.58301.second
    # DEBUG this => D#3
    _87 = prephitmp_158 + prephitmp_156;
    # DEBUG __c1 => _87
    # DEBUG __c2 => D#13
    # .MEM_139 = VDEF <.MEM_138>
    MEM[(char_type &)_87] = 0;
    # .MEM_140 = VDEF <.MEM_139>
    __dnew ={v} {CLOBBER};
    # DEBUG this => D#959
    # DEBUG __position$_M_node => __i$_M_node_26
    # DEBUG __x => &D.58301
    # DEBUG this => NULL
    # DEBUG __it => &__position
    # DEBUG this => D#982
    # .MEM_141 = VDEF <.MEM_140>
    MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_26;
    # DEBUG __x => &D.58301
    # DEBUG this => &__an
    # DEBUG __t => D#982
    # DEBUG __an$_M_t => D#982
    # DEBUG D#570 => &__an
    _9 = &MEM[(struct map *)this_1(D) + 40B]._M_t;
    # .MEM_142 = VDEF <.MEM_141>
    D.58298 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.157.constprop (_9, __pos, &D.58301);
    goto <bb 37>;

  }
  bb_32 (preds = {bb_26 }, succs = {bb_33 })
  {
  <L4>:

  }
  bb_33 (preds = {bb_32 bb_58 }, succs = {bb_34 bb_35 })
  {
    # .MEM_98 = PHI <.MEM_133(32), .MEM_163(58)>
  <L2>:
    # DEBUG D#383 => &D.58301.first
    # DEBUG this => D#383
    # DEBUG this => D#383
    # DEBUG this => D#383
    # VUSE <.MEM_98>
    _63 = MEM[(char * *)&D.58301];
    # DEBUG D#3 => D#383
    # DEBUG this => D#3
    # DEBUG this => D#383
    if (&MEM[(struct basic_string *)&D.58301].D.11539._M_local_buf != _63)
      goto <bb 34>;
    else
      goto <bb 35>;

  }
  bb_34 (preds = {bb_33 }, succs = {bb_35 })
  {
    <bb 34>:
    # DEBUG D#186 => MEM[(struct basic_string *)D#383].D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#383
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#383
    # DEBUG this => D#3
    # DEBUG this => D#383
    # DEBUG D#183 => &MEM[(struct basic_string *)D#383]._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _63
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _63
    # DEBUG this => D#177
    # DEBUG D.58361 => D#178
    # .MEM_164 = VDEF <.MEM_98>
    operator delete (_63);

  }
  bb_35 (preds = {bb_33 bb_34 }, succs = {bb_36 })
  {
    <bb 35>:
    # .MEM_99 = PHI <.MEM_98(33), .MEM_164(34)>
    # DEBUG D#187 => &MEM[(struct basic_string *)D#383]._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_168 = VDEF <.MEM_99>
    MEM[(struct  &)&D.58301] ={v} {CLOBBER};
    resx 3

  }
  bb_36 (preds = {bb_35 }, succs = {bb_48 })
  {
  <L5>:
    goto <bb 48> (<L1>);

  }
  bb_37 (preds = {bb_31 }, succs = {bb_38 bb_39 })
  {
    <bb 37>:
    # VUSE <.MEM_142>
    __i$_M_node_15 = MEM[(struct _Rb_tree_iterator *)&D.58298];
    # DEBUG __i$_M_node => __i$_M_node_15
    # DEBUG this => &D.58301
    # DEBUG D#190 => &D.58301.second
    # DEBUG this => D#190
    # DEBUG this => D#190
    # DEBUG this => D#190
    # VUSE <.MEM_142>
    _88 = MEM[(char * *)&D.58301 + 32B];
    # DEBUG D#3 => D#190
    # DEBUG this => D#3
    # DEBUG this => D#190
    if (&MEM[(const struct basic_string *)&D.58301 + 32B].D.11539._M_local_buf != _88)
      goto <bb 38>;
    else
      goto <bb 39>;

  }
  bb_38 (preds = {bb_37 }, succs = {bb_39 })
  {
    <bb 38>:
    # DEBUG D#186 => D#190->D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#190
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#190
    # DEBUG this => D#3
    # DEBUG this => D#190
    # DEBUG D#183 => &D#190->_M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _88
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _88
    # DEBUG this => D#177
    # DEBUG D.58462 => D#178
    # .MEM_143 = VDEF <.MEM_142>
    operator delete (_88);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_40 bb_41 })
  {
    <bb 39>:
    # .MEM_100 = PHI <.MEM_142(37), .MEM_143(38)>
    # DEBUG D#187 => &D#190->_M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_147 = VDEF <.MEM_100>
    MEM[(struct  &)&D.58301 + 32] ={v} {CLOBBER};
    # DEBUG D#189 => &D.58301.first
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # VUSE <.MEM_147>
    _90 = MEM[(char * *)&D.58301];
    # DEBUG D#3 => D#189
    # DEBUG this => D#3
    # DEBUG this => D#189
    if (&MEM[(const struct basic_string *)&D.58301].D.11539._M_local_buf != _90)
      goto <bb 40>;
    else
      goto <bb 41>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_41 })
  {
    <bb 40>:
    # DEBUG D#186 => MEM[(struct basic_string *)D#189].D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#189
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#189
    # DEBUG this => D#3
    # DEBUG this => D#189
    # DEBUG D#183 => &MEM[(struct basic_string *)D#189]._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _90
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _90
    # DEBUG this => D#177
    # DEBUG D.58477 => D#178
    # .MEM_148 = VDEF <.MEM_147>
    operator delete (_90);

  }
  bb_41 (preds = {bb_39 bb_40 }, succs = {bb_42 bb_43 })
  {
    <bb 41>:
    # .MEM_101 = PHI <.MEM_147(39), .MEM_148(40)>
    # DEBUG D#187 => &MEM[(struct basic_string *)D#189]._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_154 = VDEF <.MEM_101>
    D.58301 ={v} {CLOBBER};
    # DEBUG this => &D.58300
    # DEBUG this => &D.58300
    # DEBUG this => &D.58300
    # VUSE <.MEM_154>
    _16 = MEM[(char * *)&D.58300];
    # DEBUG D#3 => &D.58300
    # DEBUG this => D#3
    # DEBUG this => &D.58300
    if (&D.58300.D.11539._M_local_buf != _16)
      goto <bb 42>;
    else
      goto <bb 43>;

  }
  bb_42 (preds = {bb_41 }, succs = {bb_43 })
  {
    <bb 42>:
    # DEBUG D#186 => D.58300.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.58300
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.58300
    # DEBUG this => D#3
    # DEBUG this => &D.58300
    # DEBUG D#183 => &D.58300._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _16
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _16
    # DEBUG this => D#177
    # DEBUG D.58260 => D#178
    # .MEM_155 = VDEF <.MEM_154>
    operator delete (_16);

  }
  bb_43 (preds = {bb_41 bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # .MEM_102 = PHI <.MEM_154(41), .MEM_155(42)>
    # DEBUG D#187 => &D.58300._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_160 = VDEF <.MEM_102>
    D.58300 ={v} {CLOBBER};

  }
  bb_44 (preds = {bb_15 bb_43 bb_18 }, succs = {bb_1 })
  {
    <bb 44>:
    # __i$_M_node_17 = PHI <__i$_M_node_204(15), __i$_M_node_15(43), __i$_M_node_204(18)>
    # .MEM_103 = PHI <.MEM_205(15), .MEM_160(43), .MEM_205(18)>
    # DEBUG __i$_M_node => __i$_M_node_17
    # DEBUG this => &__i
    # DEBUG this => __i$_M_node_17
    # DEBUG D#572 => &MEM[(struct _Rb_tree_node *)__i$_M_node_17]._M_value_field
    # DEBUG __r => D#572
    _18 = &MEM[(struct pair &)__i$_M_node_17 + 32].second;
    # DEBUG D#574 => {CLOBBER}
    # DEBUG __i$_M_node => D#574
    # DEBUG this => NULL
    # DEBUG __str => value_7(D)
    # DEBUG this => NULL
    # DEBUG __str => value_7(D)
    # .MEM_8 = VDEF <.MEM_103>
    std::__cxx11::basic_string<char>::_M_assign (_18, value_7(D));
    # VUSE <.MEM_8>
    return;

  }
  bb_45 (preds = {bb_31 }, succs = {bb_46 })
  {
  <L0>:
    # .MEM_161 = VDEF <.MEM_142>
    std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::~pair (&D.58301);
    # .MEM_162 = VDEF <.MEM_161>
    D.58301 ={v} {CLOBBER};
    resx 2

  }
  bb_46 (preds = {bb_45 }, succs = {bb_48 })
  {
  <L6>:
    goto <bb 48> (<L1>);

  }
  bb_47 (preds = {bb_20 }, succs = {bb_48 })
  {
  <L3>:

  }
  bb_48 (preds = {bb_36 bb_46 bb_47 bb_54 }, succs = {bb_49 bb_50 })
  {
    # .MEM_104 = PHI <.MEM_168(36), .MEM_162(46), .MEM_123(47), .MEM_169(54)>
  <L1>:
    # DEBUG this => &D.58300
    # DEBUG this => &D.58300
    # DEBUG this => &D.58300
    # VUSE <.MEM_104>
    _19 = MEM[(char * *)&D.58300];
    # DEBUG D#3 => &D.58300
    # DEBUG this => D#3
    # DEBUG this => &D.58300
    if (&D.58300.D.11539._M_local_buf != _19)
      goto <bb 49>;
    else
      goto <bb 50>;

  }
  bb_49 (preds = {bb_48 }, succs = {bb_50 })
  {
    <bb 49>:
    # DEBUG D#186 => D.58300.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.58300
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.58300
    # DEBUG this => D#3
    # DEBUG this => &D.58300
    # DEBUG D#183 => &D.58300._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _19
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _19
    # DEBUG this => D#177
    # DEBUG D.58245 => D#178
    # .MEM_170 = VDEF <.MEM_104>
    operator delete (_19);

  }
  bb_50 (preds = {bb_48 bb_49 }, succs = {})
  {
    <bb 50>:
    # .MEM_105 = PHI <.MEM_104(48), .MEM_170(49)>
    # DEBUG D#187 => &D.58300._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_175 = VDEF <.MEM_105>
    D.58300 ={v} {CLOBBER};
    resx 1

  }
  bb_51 (preds = {bb_2 }, succs = {bb_52 })
  {
    <bb 51>:
    # VUSE <.MEM_3(D)>
    pretmp_172 = MEM[(long unsigned int *)field_4(D) + 8B];
    # VUSE <.MEM_3(D)>
    pretmp_174 = MEM[(char * *)field_4(D)];

  }
  bb_52 (preds = {bb_18 bb_59 bb_51 }, succs = {bb_62 })
  {
    <bb 52>:
    # .MEM_191 = PHI <.MEM_205(18), .MEM_205(59), .MEM_3(D)(51)>
    # __i$_M_node_21 = PHI <__i$_M_node_204(18), __i$_M_node_204(59), __i$_M_node_5(51)>
    # prephitmp_173 = PHI <pretmp_159(18), pretmp_159(59), pretmp_172(51)>
    # prephitmp_144 = PHI <pretmp_108(18), pretmp_108(59), pretmp_174(51)>

  }
  bb_62 (preds = {bb_52 }, succs = {bb_19 })
  {
    <bb 62>:
    goto <bb 19>;

  }
  bb_53 (preds = {bb_19 }, succs = {bb_54 })
  {
    <bb 53>:
    # .MEM_169 = VDEF <.MEM_121>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_54 (preds = {bb_53 }, succs = {bb_48 })
  {
  <L7>:
    goto <bb 48> (<L1>);

  }
  bb_55 (preds = {bb_19 }, succs = {bb_20 bb_22 })
  {
    <bb 55>:
    # DEBUG __first => D#977
    # DEBUG __last => _57
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => D#977
    # DEBUG __last => _57
    # .MEM_122 = VDEF <.MEM_121>
    __dnew = prephitmp_145;
    if (prephitmp_145 > 15)
      goto <bb 20>;
    else
      goto <bb 22>;

  }
  bb_56 (preds = {bb_25 }, succs = {bb_26 bb_28 })
  {
    <bb 56>:
    # DEBUG __first => _60
    # DEBUG __last => _62
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => _60
    # DEBUG __last => _62
    # .MEM_132 = VDEF <.MEM_131>
    __dnew = _61;
    if (_61 > 15)
      goto <bb 26>;
    else
      goto <bb 28>;

  }
  bb_57 (preds = {bb_25 }, succs = {bb_58 })
  {
    <bb 57>:
    # .MEM_163 = VDEF <.MEM_131>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_58 (preds = {bb_57 }, succs = {bb_33 })
  {
  <L8>:
    goto <bb 33> (<L2>);

  }
  loop_1 (header = 6, latch = 5, niter = )
  {
    bb_4 (preds = {bb_61 bb_60 }, succs = {bb_13 bb_5 })
    {
      <bb 4>:
      # __i$_M_node_28 = PHI <__i$_M_node_24(61), __i$_M_node_25(60)>
      # __i$_M_node_27 = PHI <__i$_M_node_197(61), __i$_M_node_196(60)>
      # DEBUG __y => __i$_M_node_27
      # DEBUG __x => __i$_M_node_28
      if (__i$_M_node_28 == 0B)
        goto <bb 13>;
      else
        goto <bb 5>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_6 })
    {
      <bb 5>:

    }
    bb_6 (preds = {bb_3 bb_5 }, succs = {bb_7 bb_10 })
    {
      <bb 6>:
      # __i$_M_node_197 = PHI <__i$_M_node_20(3), __i$_M_node_28(5)>
      # __i$_M_node_196 = PHI <__i$_M_node_5(3), __i$_M_node_27(5)>
      # .MEM_205 = PHI <.MEM_3(D)(3), .MEM_205(5)>
      # DEBUG __y => __i$_M_node_196
      # DEBUG __x => __i$_M_node_197
      # DEBUG __x => __i$_M_node_197
      # DEBUG __x => __i$_M_node_197
      # DEBUG this => __i$_M_node_197
      # DEBUG D#204 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_197]._M_value_field
      # DEBUG __r => D#204
      # DEBUG __x => D#204
      # DEBUG this => D#149
      # DEBUG D#960 => &MEM[(const struct pair &)__i$_M_node_197 + 32].first
      # DEBUG D#205 => &D#206->_M_impl._M_key_compare
      # DEBUG D#203 => D#205
      # DEBUG __x => D#960
      # DEBUG __y => field_4(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#960
      # DEBUG __rhs => field_4(D)
      # DEBUG this => D#960
      # DEBUG __str => field_4(D)
      # VUSE <.MEM_205>
      _29 = MEM[(long unsigned int *)__i$_M_node_197 + 40B];
      # DEBUG D#2 => D#960
      # DEBUG this => D#2
      # DEBUG __size => _29
      # DEBUG D#981 => MEM[(long unsigned int *)field_4(D) + 8B]
      # DEBUG D#2 => field_4(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#981
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_190 = MIN_EXPR <_29, pretmp_159>;
      # DEBUG __len => D#957
      # DEBUG this => field_4(D)
      # DEBUG D#980 => MEM[(char * *)field_4(D)]
      # DEBUG D#3 => field_4(D)
      # DEBUG this => D#3
      # VUSE <.MEM_205>
      _34 = MEM[(char * *)__i$_M_node_197 + 32B];
      # DEBUG D#3 => D#960
      # DEBUG this => D#3
      # DEBUG __s1 => _34
      # DEBUG __s2 => D#980
      # DEBUG __n => D#957
      # VUSE <.MEM_205>
      __r_35 = __builtin_memcmp (_34, pretmp_108, __len_190);
      # DEBUG __r => NULL
      if (__r_35 == 0)
        goto <bb 7>;
      else
        goto <bb 10>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_11 bb_8 })
    {
      <bb 7>:
      # DEBUG __n1 => _29
      # DEBUG __n2 => D#981
      _36 = _29 - pretmp_159;
      __d_37 = (const difference_type) _36;
      # DEBUG __d => __d_37
      if (__d_37 > 2147483647)
        goto <bb 11>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 bb_9 })
    {
      <bb 8>:
      if (__d_37 < -2147483648)
        goto <bb 12>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_10 })
    {
      <bb 9>:
      __r_38 = (int) _36;

    }
    bb_10 (preds = {bb_6 bb_9 }, succs = {bb_11 bb_12 })
    {
      <bb 10>:
      # __r_39 = PHI <__r_35(6), __r_38(9)>
      # DEBUG __r => __r_39
      # DEBUG D#966 => {CLOBBER}
      # DEBUG __size => D#966
      # DEBUG D#967 => {CLOBBER}
      # DEBUG __osize => D#967
      if (__r_39 >= 0)
        goto <bb 11>;
      else
        goto <bb 12>;

    }
    bb_11 (preds = {bb_10 bb_7 }, succs = {bb_61 })
    {
      <bb 11>:

    }
    bb_61 (preds = {bb_11 }, succs = {bb_4 })
    {
      <bb 61>:
      # DEBUG __r => NULL
      # DEBUG __y => __i$_M_node_197
      # VUSE <.MEM_205>
      __i$_M_node_24 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 16B];
      # DEBUG D#44 => __i$_M_node_197
      # DEBUG __x => D#44
      # DEBUG __x => NULL
      goto <bb 4>;

    }
    bb_12 (preds = {bb_10 bb_8 }, succs = {bb_60 })
    {
      <bb 12>:

    }
    bb_60 (preds = {bb_12 }, succs = {bb_4 })
    {
      <bb 60>:
      # DEBUG __r => NULL
      # VUSE <.MEM_205>
      __i$_M_node_25 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_197 + 24B];
      # DEBUG D#43 => __i$_M_node_197
      # DEBUG __x => D#43
      # DEBUG __x => NULL
      goto <bb 4>;

    }
  }
}

Pass statistics:
----------------

void Configuration::AddStrField(const string&, const string&) (struct ConfigurationD.32032 * const thisD.35408, const struct stringD.2845 & fieldD.35405, const struct stringD.2845 & valueD.35406)
Eh tree:
   1 cleanup land:{7,<L6>},{6,<L5>},{4,<L3>},{1,<L7>}
     3 cleanup land:{5,<L4>},{3,<L8>}
     2 cleanup land:{2,<L0>}
{
  size_typeD.11502 __dnewD.58427;
  size_typeD.11502 __dnewD.58398;
  const size_typeD.11502 __sizeD.58337;
  const size_typeD.11502 __osizeD.58338;
  const size_typeD.11502 __lenD.58339;
  intD.9 __rD.58340;
  const difference_typeD.11503 __dD.58343;
  intD.9 D.58349;
  const size_typeD.11502 __sizeD.58322;
  const size_typeD.11502 __osizeD.58323;
  const size_typeD.11502 __lenD.58324;
  intD.9 __rD.58325;
  const difference_typeD.11503 __dD.58328;
  intD.9 D.58334;
  struct iteratorD.32574 D.58319;
  struct _Rb_tree_nodeD.32262 * __yD.58309;
  struct value_typeD.32044 D.58301;
  struct mapped_typeD.32043 D.58300;
  struct iteratorD.32847 D.58299;
  struct iteratorD.32574 D.58298;
  struct const_iteratorD.32576 __posD.58271;
  struct _Rb_tree_node_baseD.27676 * const __i$_M_nodeD.58297;
  struct _Rb_tree_node_baseD.27676 * SR.1072D.58296;
  struct _Rb_tree_node_baseD.27676 * SR.1075D.58295;
  struct mapped_typeD.32043 & D.58294;
  struct _Rep_typeD.32256 * _9;
  charD.10 * const _16;
  struct mapped_typeD.32043 & _18;
  charD.10 * const _19;
  const size_typeD.11502 _29;
  charD.10 * const _34;
  long unsigned intD.14 _36;
  const size_typeD.11502 _42;
  charD.10 * const _45;
  long unsigned intD.14 _48;
  boolD.2757 _52;
  charD.10 * _57;
  charD.10 * const _60;
  const size_typeD.11502 _61;
  charD.10 * _62;
  charD.10 * const _63;
  charD.10 * _69;
  long unsigned intD.14 __dnew.111_70;
  const char_typeD.6439 _72;
  charD.10 * _75;
  charD.10 * _81;
  long unsigned intD.14 __dnew.111_82;
  const char_typeD.6439 _84;
  charD.10 * _87;
  charD.10 * const _88;
  charD.10 * const _90;
  charD.10 * const pretmp_108;
  charD.10 * const prephitmp_144;
  const size_typeD.11502 prephitmp_145;
  charD.10 * const prephitmp_146;
  size_typeD.11502 pretmp_149;
  size_typeD.11502 prephitmp_150;
  charD.10 * const pretmp_151;
  charD.10 * const prephitmp_152;
  size_typeD.11502 pretmp_153;
  size_typeD.11502 prephitmp_156;
  charD.10 * const pretmp_157;
  charD.10 * const prephitmp_158;
  const size_typeD.11502 pretmp_159;
  const size_typeD.11502 pretmp_172;
  const size_typeD.11502 prephitmp_173;
  charD.10 * const pretmp_174;
  charD.10 * const _180;
  charD.10 * const _182;
  boolD.2757 _186;
  boolD.2757 _187;
  boolD.2757 _188;
  boolD.2757 _189;
  boolD.2757 _194;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#959ptD.0 => &this_1(D)->_str_mapD.33116
  # DEBUG thisD.58234 => D#959ptD.0
  # DEBUG __kD.58235 => field_4(D)
  # DEBUG thisD.58291 => D#959ptD.0
  # DEBUG __xD.58290 => field_4(D)
  # DEBUG D#982ptD.0 => &MEM[(struct mapD.32040 *)this_1(D) + 40B]._M_tD.32259
  # DEBUG thisD.58304 => D#982ptD.0
  # DEBUG __kD.58305 => field_4(D)
  # DEBUG thisD.58306 => D#982ptD.0
  # PT = nonlocal 
  __i$_M_node_5 = &MEM[(struct _Rb_treeD.32258 *)this_1(D) + 40B]._M_implD.32337._M_headerD.32503;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __i$_M_node_20 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_1(D) + 56B];
  # DEBUG D#35ptD.0 => D#982ptD.0
  # DEBUG thisD.48773 => D#35ptD.0
  # DEBUG D#207ptD.0 => D#982ptD.0
  # DEBUG __xD.58310 => NULL
  # DEBUG __yD.58309 => NULL
  # DEBUG __kD.58308 => field_4(D)
  # DEBUG __yD.58309 => __i$_M_node_5
  # DEBUG __xD.58310 => __i$_M_node_20
  if (__i$_M_node_20 == 0B)
    goto <bb 51>;
  else
    goto <bb 3>;
;;    succ:       51 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  pretmp_159 = MEM[(long unsigned intD.14 *)field_4(D) + 8B];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  pretmp_108 = MEM[(charD.10 * *)field_4(D)];
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_28 = PHI <__i$_M_node_24(61), __i$_M_node_25(60)>
  # PT = nonlocal escaped 
  # __i$_M_node_27 = PHI <__i$_M_node_197(61), __i$_M_node_196(60)>
  # DEBUG __yD.58309 => __i$_M_node_27
  # DEBUG __xD.58310 => __i$_M_node_28
  if (__i$_M_node_28 == 0B)
    goto <bb 13>;
  else
    goto <bb 5>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_197 = PHI <__i$_M_node_20(3), __i$_M_node_28(5)>
  # PT = nonlocal escaped 
  # __i$_M_node_196 = PHI <__i$_M_node_5(3), __i$_M_node_27(5)>
  # .MEM_205 = PHI <.MEM_3(D)(3), .MEM_205(5)>
  # DEBUG __yD.58309 => __i$_M_node_196
  # DEBUG __xD.58310 => __i$_M_node_197
  # DEBUG __xD.58311 => __i$_M_node_197
  # DEBUG __xD.48708 => __i$_M_node_197
  # DEBUG thisD.48709 => __i$_M_node_197
  # DEBUG D#204ptD.0 => &MEM[(const struct _Rb_tree_nodeD.32262 *)__i$_M_node_197]._M_value_fieldD.38939
  # DEBUG __rD.47608 => D#204ptD.0
  # DEBUG __xD.58313 => D#204ptD.0
  # DEBUG thisD.58312 => D#149ptD.0
  # DEBUG D#960ptD.0 => &MEM[(const struct pairD.32038 &)__i$_M_node_197 + 32].firstD.35538
  # DEBUG D#205ptD.0 => &D#206ptD.0->_M_implD.32337._M_key_compareD.32502
  # DEBUG D#203ptD.0 => D#205ptD.0
  # DEBUG __xD.58316 => D#960ptD.0
  # DEBUG __yD.58315 => field_4(D)
  # DEBUG thisD.58314 => D#203ptD.0
  # DEBUG __lhsD.58318 => D#960ptD.0
  # DEBUG __rhsD.58317 => field_4(D)
  # DEBUG thisD.58320 => D#960ptD.0
  # DEBUG __strD.58321 => field_4(D)
  # VUSE <.MEM_205>
  _29 = MEM[(long unsigned intD.14 *)__i$_M_node_197 + 40B];
  # DEBUG D#2ptD.0 => D#960ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58322 => _29
  # DEBUG D#981ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58323 => D#981ptD.0
  # DEBUG __aD.58330 => &__sizeD.58322
  # DEBUG __bD.58329 => &__osizeD.58323
  __len_190 = MIN_EXPR <_29, pretmp_159>;
  # DEBUG __lenD.58324 => D#957ptD.0
  # DEBUG thisD.48671 => field_4(D)
  # DEBUG D#980ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_205>
  # PT = nonlocal escaped 
  _34 = MEM[(charD.10 * *)__i$_M_node_197 + 32B];
  # DEBUG D#3ptD.0 => D#960ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58333 => _34
  # DEBUG __s2D.58332 => D#980ptD.0
  # DEBUG __nD.58331 => D#957ptD.0
  # VUSE <.MEM_205>
  # USE = nonlocal escaped 
  __r_35 = memcmpD.989 (_34, pretmp_108, __len_190);
  # DEBUG __rD.58325 => NULL
  if (__r_35 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58327 => _29
  # DEBUG __n2D.58326 => D#981ptD.0
  # RANGE [0, 18446744073709551615]
  _36 = _29 - pretmp_159;
  __d_37 = (const difference_typeD.11503) _36;
  # DEBUG __dD.58328 => __d_37
  if (__d_37 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_37 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_38 = (intD.9) _36;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       6 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_39 = PHI <__r_35(6), __r_38(9)>
  # DEBUG __rD.58325 => __r_39
  # DEBUG D#966ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58322 => D#966ptD.0
  # DEBUG D#967ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58323 => D#967ptD.0
  if (__r_39 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 10, next block 61, flags: (NEW, REACHABLE)
;;    pred:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       61 [100.0%]  (FALLTHRU)

;;   basic block 61, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 12, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58325 => NULL
  # DEBUG __yD.58309 => __i$_M_node_197
  # VUSE <.MEM_205>
  # PT = nonlocal escaped 
  __i$_M_node_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_197 + 16B];
  # DEBUG D#44ptD.0 => __i$_M_node_197
  # DEBUG __xD.48741 => D#44ptD.0
  # DEBUG __xD.58310 => NULL
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 61, next block 60, flags: (NEW, REACHABLE)
;;    pred:       10 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       60 [100.0%]  (FALLTHRU)

;;   basic block 60, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58325 => NULL
  # VUSE <.MEM_205>
  # PT = nonlocal escaped 
  __i$_M_node_25 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__i$_M_node_197 + 24B];
  # DEBUG D#43ptD.0 => __i$_M_node_197
  # DEBUG __xD.48740 => D#43ptD.0
  # DEBUG __xD.58310 => NULL
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 60, next block 59, flags: (NEW, REACHABLE)
;;    pred:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_204 = PHI <__i$_M_node_27(4)>
;;    succ:       59 [100.0%]  (FALLTHRU)

;;   basic block 59, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG thisD.48739 => NULL
  # DEBUG __xD.48738 => __i$_M_node_204
  # DEBUG __i$_M_nodeD.58297 => __i$_M_node_204
  # DEBUG thisD.58292 => D#959ptD.0
  # DEBUG D#53ptD.0 => &D#959ptD.0->_M_tD.32259
  # DEBUG thisD.58293 => D#53ptD.0
  # DEBUG thisD.47441 => NULL
  # DEBUG __xD.47440 => __i$_M_node_5
  # DEBUG thisD.54259 => &__iD.58236
  # DEBUG __xD.54260 => NULL
  if (__i$_M_node_5 == __i$_M_node_204)
    goto <bb 52>;
  else
    goto <bb 14>;
;;    succ:       52 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 765, maybe hot
;;    prev block 59, next block 15, flags: (NEW, REACHABLE)
;;    pred:       59 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.54279 => &__iD.58236
  # DEBUG thisD.54280 => __i$_M_node_204
  # DEBUG D#571ptD.0 => &MEM[(struct _Rb_tree_nodeD.32262 *)__i$_M_node_204]._M_value_fieldD.38939
  # DEBUG __rD.48150 => D#571ptD.0
  # DEBUG D#961ptD.0 => &MEM[(struct pairD.32038 &)__i$_M_node_204 + 32].firstD.35538
  # DEBUG D#52ptD.0 => D#959ptD.0
  # DEBUG thisD.54276 => D#52ptD.0
  # DEBUG D#51ptD.0 => D#52ptD.0
  # DEBUG D#50ptD.0 => &D#51ptD.0->_M_tD.32259
  # DEBUG D#49ptD.0 => D#50ptD.0
  # DEBUG thisD.47421 => D#49ptD.0
  # DEBUG __xD.58287 => field_4(D)
  # DEBUG __yD.58286 => D#961ptD.0
  # DEBUG thisD.58285 => D#203ptD.0
  # DEBUG __lhsD.58289 => field_4(D)
  # DEBUG __rhsD.58288 => D#961ptD.0
  # DEBUG thisD.58335 => field_4(D)
  # DEBUG __strD.58336 => D#961ptD.0
  # DEBUG D#979ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#2ptD.0 => field_4(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58337 => D#979ptD.0
  # VUSE <.MEM_205>
  _42 = MEM[(long unsigned intD.14 *)__i$_M_node_204 + 40B];
  # DEBUG D#2ptD.0 => D#961ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58338 => _42
  # DEBUG __aD.58345 => &__sizeD.58337
  # DEBUG __bD.58344 => &__osizeD.58338
  __len_192 = MIN_EXPR <_42, pretmp_159>;
  # DEBUG __lenD.58339 => D#958ptD.0
  # DEBUG thisD.48671 => D#961ptD.0
  # VUSE <.MEM_205>
  # PT = nonlocal escaped 
  _45 = MEM[(charD.10 * *)__i$_M_node_204 + 32B];
  # DEBUG D#3ptD.0 => D#961ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#978ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58348 => D#978ptD.0
  # DEBUG __s2D.58347 => _45
  # DEBUG __nD.58346 => D#958ptD.0
  # VUSE <.MEM_205>
  # USE = nonlocal escaped 
  __r_47 = memcmpD.989 (pretmp_108, _45, __len_192);
  # DEBUG __rD.58340 => NULL
  if (__r_47 == 0)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 467, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58342 => D#979ptD.0
  # DEBUG __n2D.58341 => _42
  # RANGE [0, 18446744073709551615]
  _48 = pretmp_159 - _42;
  __d_49 = (const difference_typeD.11503) _48;
  # DEBUG __dD.58343 => __d_49
  if (__d_49 > 2147483647)
    goto <bb 44>;
  else
    goto <bb 16>;
;;    succ:       44 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 233, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_49 < -2147483648)
    goto <bb 19>;
  else
    goto <bb 17>;
;;    succ:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_50 = (intD.9) _48;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 414, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       14 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_51 = PHI <__r_47(14), __r_50(17)>
  # DEBUG __rD.58340 => __r_51
  # DEBUG D#972ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58337 => D#972ptD.0
  # DEBUG D#973ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58338 => D#973ptD.0
  if (__r_51 < 0)
    goto <bb 52>;
  else
    goto <bb 44>;
;;    succ:       52 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_181 = PHI <.MEM_205(16), .MEM_191(62)>
  # PT = nonlocal escaped 
  # __i$_M_node_26 = PHI <__i$_M_node_204(16), __i$_M_node_21(62)>
  # prephitmp_145 = PHI <pretmp_159(16), prephitmp_173(62)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <pretmp_108(16), prephitmp_144(62)>
  # DEBUG thisD.58274 => &D.58300
  # DEBUG thisD.54283 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#42ptD.0
  # DEBUG thisD.47347 => D#41ptD.0
  # DEBUG thisD.58275 => &D.58300
  # DEBUG D#148ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG thisD.58278 => D#148ptD.0
  # DEBUG __datD.58277 => &D.58300.D.11539._M_local_bufD.11541
  # DEBUG __aD.58276 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#148ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_118 = VDEF <.MEM_181>
  MEM[(struct _Alloc_hiderD.11518 *)&D.58300]._M_pD.11525 = &D.58300.D.11539._M_local_bufD.11541;
  # DEBUG thisD.54288 => NULL
  # DEBUG thisD.48138 => NULL
  # DEBUG thisD.58280 => &D.58300
  # DEBUG __nD.58279 => 0
  # DEBUG D#5ptD.0 => &D.58300
  # DEBUG __lengthD.58282 => 0
  # DEBUG thisD.58281 => D#5ptD.0
  # .MEM_119 = VDEF <.MEM_118>
  MEM[(size_typeD.11502 *)&D.58300 + 8B] = 0;
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.47013 => D#3ptD.0
  # DEBUG __c1D.58284 => &D.58300.D.11539._M_local_bufD.11541
  # DEBUG __c2D.58283 => D#13ptD.0
  # .MEM_120 = VDEF <.MEM_119>
  MEM[(char_typeD.6439 &)&D.58300 + 16] = 0;
  # DEBUG thisD.58350 => &D.58301
  # DEBUG __aD.58351 => field_4(D)
  # DEBUG __bD.58352 => &D.58300
  # DEBUG thisD.58367 => &D.58301.firstD.35538
  # DEBUG __strD.58366 => field_4(D)
  # DEBUG thisD.50825 => field_4(D)
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)field_4(D)]._M_dataplusD.11519
  # DEBUG thisD.58368 => &D.58301.firstD.35538
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.58301]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.58371 => D#381ptD.0
  # DEBUG __datD.58370 => &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541
  # DEBUG __aD.58369 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_121 = VDEF <.MEM_120>
  MEM[(struct _Alloc_hiderD.11518 *)&D.58301]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541;
  # DEBUG D#977ptD.0 => MEM[(charD.10 * *)field_4(D)]
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # DEBUG D#976ptD.0 => MEM[(long unsigned intD.14 *)field_4(D) + 8B]
  # DEBUG D#1ptD.0 => field_4(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _57 = prephitmp_146 + prephitmp_145;
  # DEBUG D#3ptD.0 => field_4(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.58374 => &D.58301.firstD.35538
  # DEBUG __begD.58373 => D#977ptD.0
  # DEBUG __endD.58372 => _57
  # DEBUG thisD.58378 => &D.58301.firstD.35538
  # DEBUG __begD.58377 => D#977ptD.0
  # DEBUG __endD.58376 => _57
  # DEBUG thisD.58395 => &D.58301.firstD.35538
  # DEBUG __begD.58396 => D#977ptD.0
  # DEBUG __endD.58397 => _57
  # DEBUG __ptrD.51229 => D#977ptD.0
  # RANGE [0, 1]
  _52 = _57 != 0B;
  # RANGE [0, 1]
  _189 = prephitmp_146 == 0B;
  # RANGE [0, 1]
  _188 = _52 & _189;
  if (_188 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;
;;    succ:       53 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       55 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 4] # .MEM_123 = VDEF <.MEM_122>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _69 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.58301.firstD.35538, &__dnewD.58398, 0);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 (EH,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.58301.firstD.35538
  # DEBUG __pD.58417 => _69
  # DEBUG thisD.58416 => D#6ptD.0
  # .MEM_124 = VDEF <.MEM_123>
  MEM[(charD.10 * *)&D.58301] = _69;
  # VUSE <.MEM_124>
  __dnew.111_70 = __dnewD.58398;
  # DEBUG D#7ptD.0 => &D.58301.firstD.35538
  # DEBUG __capacityD.58419 => __dnew.111_70
  # DEBUG thisD.58418 => D#7ptD.0
  # .MEM_125 = VDEF <.MEM_124>
  MEM[(size_typeD.11502 *)&D.58301 + 16B] = __dnew.111_70;
  # DEBUG D#3ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58401 => _69
  # DEBUG __k1D.58400 => D#977ptD.0
  # DEBUG __k2D.58399 => _57
  # DEBUG __dD.58404 => _69
  # DEBUG __sD.58403 => D#977ptD.0
  # DEBUG __nD.58402 => D#976ptD.0
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       55 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58401 => &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58400 => D#977ptD.0
  # DEBUG __k2D.58399 => _57
  # DEBUG __dD.58404 => &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541
  # DEBUG __sD.58403 => D#977ptD.0
  # DEBUG __nD.58402 => D#976ptD.0
  if (prephitmp_145 == 1)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_122>
  _72 = MEM[(const char_typeD.6439 &)prephitmp_146];
  # DEBUG D#13ptD.0 => D#977ptD.0
  # DEBUG __c1D.58409 => &MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58408 => D#13ptD.0
  # .MEM_126 = VDEF <.MEM_122>
  MEM[(char_typeD.6439 &)&D.58301 + 16] = _72;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  # _180 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541(22), _69(21)>
  # .MEM_178 = PHI <.MEM_122(22), .MEM_125(21)>
  # DEBUG D#3ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58401 => _180
  # DEBUG __k1D.58400 => D#977ptD.0
  # DEBUG __k2D.58399 => _57
  # DEBUG __dD.58404 => _180
  # DEBUG __sD.58403 => D#977ptD.0
  # DEBUG __nD.58402 => D#976ptD.0
  # DEBUG __s1D.58407 => _180
  # DEBUG __s2D.58406 => D#977ptD.0
  # DEBUG __nD.58405 => D#976ptD.0
  # .MEM_127 = VDEF <.MEM_178>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  memcpyD.992 (_180, prephitmp_146, prephitmp_145);
  # VUSE <.MEM_127>
  pretmp_149 = __dnewD.58398;
  # VUSE <.MEM_127>
  pretmp_151 = MEM[(charD.10 * *)&D.58301];
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_95 = PHI <.MEM_126(23), .MEM_127(24)>
  # prephitmp_150 = PHI <prephitmp_145(23), pretmp_149(24)>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  # prephitmp_152 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541(23), pretmp_151(24)>
  # DEBUG D#975ptD.0 => __dnewD.58398
  # DEBUG thisD.58411 => &D.58301.firstD.35538
  # DEBUG __nD.58410 => D#975ptD.0
  # DEBUG D#5ptD.0 => &D.58301.firstD.35538
  # DEBUG __lengthD.58413 => D#975ptD.0
  # DEBUG thisD.58412 => D#5ptD.0
  # .MEM_128 = VDEF <.MEM_95>
  MEM[(size_typeD.11502 *)&D.58301 + 8B] = prephitmp_150;
  # DEBUG D#3ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _75 = prephitmp_152 + prephitmp_150;
  # DEBUG __c1D.58415 => _75
  # DEBUG __c2D.58414 => D#13ptD.0
  # .MEM_129 = VDEF <.MEM_128>
  MEM[(char_typeD.6439 &)_75] = 0;
  # .MEM_130 = VDEF <.MEM_129>
  __dnewD.58398 ={v} {CLOBBER};
  # DEBUG thisD.58381 => &D.58301.secondD.35539
  # DEBUG __strD.58380 => &D.58300
  # DEBUG thisD.50825 => &D.58300
  # DEBUG D#380ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG thisD.58382 => &D.58301.secondD.35539
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.58385 => D#381ptD.0
  # DEBUG __datD.58384 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __aD.58383 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_131 = VDEF <.MEM_130>
  MEM[(struct _Alloc_hiderD.11518 *)&D.58301 + 32B]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541;
  # VUSE <.MEM_131>
  # PT = nonlocal escaped null { D.58300 } (escaped)
  _60 = MEM[(charD.10 * *)&D.58300];
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_131>
  _61 = MEM[(long unsigned intD.14 *)&D.58300 + 8B];
  # DEBUG D#1ptD.0 => &D.58300
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.58300 } (escaped)
  _62 = _60 + _61;
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.58388 => &D.58301.secondD.35539
  # DEBUG __begD.58387 => _60
  # DEBUG __endD.58386 => _62
  # DEBUG thisD.58392 => &D.58301.secondD.35539
  # DEBUG __begD.58391 => _60
  # DEBUG __endD.58390 => _62
  # DEBUG thisD.58424 => &D.58301.secondD.35539
  # DEBUG __begD.58425 => _60
  # DEBUG __endD.58426 => _62
  # DEBUG __ptrD.51229 => _60
  # RANGE [0, 1]
  _186 = _62 != 0B;
  # RANGE [0, 1]
  _187 = _60 == 0B;
  # RANGE [0, 1]
  _194 = _186 & _187;
  if (_194 != 0)
    goto <bb 57>;
  else
    goto <bb 56>;
;;    succ:       57 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       56 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 5] # .MEM_133 = VDEF <.MEM_132>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _81 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.58301.secondD.35539, &__dnewD.58427, 0);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 (EH,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.58301.secondD.35539
  # DEBUG __pD.58446 => _81
  # DEBUG thisD.58445 => D#6ptD.0
  # .MEM_134 = VDEF <.MEM_133>
  MEM[(charD.10 * *)&D.58301 + 32B] = _81;
  # VUSE <.MEM_134>
  __dnew.111_82 = __dnewD.58427;
  # DEBUG D#7ptD.0 => &D.58301.secondD.35539
  # DEBUG __capacityD.58448 => __dnew.111_82
  # DEBUG thisD.58447 => D#7ptD.0
  # .MEM_135 = VDEF <.MEM_134>
  MEM[(size_typeD.11502 *)&D.58301 + 48B] = __dnew.111_82;
  # DEBUG D#3ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58430 => _81
  # DEBUG __k1D.58429 => _60
  # DEBUG __k2D.58428 => _62
  # DEBUG __dD.58433 => _81
  # DEBUG __sD.58432 => _60
  # DEBUG __nD.58431 => _61
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       56 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58430 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58429 => _60
  # DEBUG __k2D.58428 => _62
  # DEBUG __dD.58433 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __sD.58432 => _60
  # DEBUG __nD.58431 => _61
  if (_61 == 1)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_132>
  _84 = MEM[(const char_typeD.6439 &)_60];
  # DEBUG D#13ptD.0 => _60
  # DEBUG __c1D.58438 => &MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58437 => D#13ptD.0
  # .MEM_136 = VDEF <.MEM_132>
  MEM[(char_typeD.6439 &)&D.58301 + 48] = _84;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  # _182 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541(28), _81(27)>
  # .MEM_179 = PHI <.MEM_132(28), .MEM_135(27)>
  # DEBUG D#3ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58430 => _182
  # DEBUG __k1D.58429 => _60
  # DEBUG __k2D.58428 => _62
  # DEBUG __dD.58433 => _182
  # DEBUG __sD.58432 => _60
  # DEBUG __nD.58431 => _61
  # DEBUG __s1D.58436 => _182
  # DEBUG __s2D.58435 => _60
  # DEBUG __nD.58434 => _61
  # .MEM_137 = VDEF <.MEM_179>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  memcpyD.992 (_182, _60, _61);
  # VUSE <.MEM_137>
  pretmp_153 = __dnewD.58427;
  # VUSE <.MEM_137>
  pretmp_157 = MEM[(charD.10 * *)&D.58301 + 32B];
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_136(29), .MEM_137(30)>
  # prephitmp_156 = PHI <_61(29), pretmp_153(30)>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  # prephitmp_158 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541(29), pretmp_157(30)>
  # DEBUG D#974ptD.0 => __dnewD.58427
  # DEBUG thisD.58440 => &D.58301.secondD.35539
  # DEBUG __nD.58439 => D#974ptD.0
  # DEBUG D#5ptD.0 => &D.58301.secondD.35539
  # DEBUG __lengthD.58442 => D#974ptD.0
  # DEBUG thisD.58441 => D#5ptD.0
  # .MEM_138 = VDEF <.MEM_97>
  MEM[(size_typeD.11502 *)&D.58301 + 40B] = prephitmp_156;
  # DEBUG D#3ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _87 = prephitmp_158 + prephitmp_156;
  # DEBUG __c1D.58444 => _87
  # DEBUG __c2D.58443 => D#13ptD.0
  # .MEM_139 = VDEF <.MEM_138>
  MEM[(char_typeD.6439 &)_87] = 0;
  # .MEM_140 = VDEF <.MEM_139>
  __dnewD.58427 ={v} {CLOBBER};
  # DEBUG thisD.58269 => D#959ptD.0
  # DEBUG __position$_M_nodeD.54345 => __i$_M_node_26
  # DEBUG __xD.58267 => &D.58301
  # DEBUG thisD.54299 => NULL
  # DEBUG __itD.54298 => &__positionD.58268
  # DEBUG thisD.58272 => D#982ptD.0
  # .MEM_141 = VDEF <.MEM_140>
  MEM[(struct _Rb_tree_const_iteratorD.32577 *)&__posD.58271] = __i$_M_node_26;
  # DEBUG __xD.58270 => &D.58301
  # DEBUG thisD.54253 => &__anD.58273
  # DEBUG __tD.54252 => D#982ptD.0
  # DEBUG __an$_M_tD.54246 => D#982ptD.0
  # DEBUG D#570ptD.0 => &__anD.58273
  # PT = nonlocal 
  _9 = &MEM[(struct mapD.32040 *)this_1(D) + 40B]._M_tD.32259;
  [LP 2] # .MEM_142 = VDEF <.MEM_141>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  D.58298 = _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_insert_unique_INSE_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_ERKS8_RT_.isra.157.constprop.180D.55287 (_9, __posD.58271, &D.58301);
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 (EH,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       26 (EH,EXECUTABLE)
<L4>: [LP 5]
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_133(32), .MEM_163(58)>
<L2>:
  # DEBUG D#383ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.58353 => D#383ptD.0
  # DEBUG thisD.58354 => D#383ptD.0
  # DEBUG thisD.50871 => D#383ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _63 = MEM[(charD.10 * *)&D.58301];
  # DEBUG D#3ptD.0 => D#383ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.50872 => D#383ptD.0
  if (&MEM[(struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541 != _63)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#383ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58356 => D#383ptD.0
  # DEBUG __sizeD.58355 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#383ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#383ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#383ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58359 => _63
  # DEBUG __aD.58357 => D#181ptD.0
  # DEBUG __nD.58358 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58362 => _63
  # DEBUG thisD.58360 => D#177ptD.0
  # DEBUG D.58361 => D#178ptD.0
  # .MEM_164 = VDEF <.MEM_98>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_63);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_98(33), .MEM_164(34)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#383ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58363 => D#187ptD.0
  # DEBUG thisD.58364 => D#187ptD.0
  # DEBUG thisD.58365 => D#187ptD.0
  # .MEM_168 = VDEF <.MEM_99>
  MEM[(struct  &)&D.58301] ={v} {CLOBBER};
  [LP 6] resx 3
;;    succ:       36 (EH,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       35 (EH,EXECUTABLE)
<L5>: [LP 6]
  goto <bb 48> (<L1>);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_142>
  # PT = nonlocal escaped 
  __i$_M_node_15 = MEM[(struct _Rb_tree_iteratorD.32575 *)&D.58298];
  # DEBUG __i$_M_nodeD.58297 => __i$_M_node_15
  # DEBUG thisD.58453 => &D.58301
  # DEBUG D#190ptD.0 => &D.58301.secondD.35539
  # DEBUG thisD.58454 => D#190ptD.0
  # DEBUG thisD.58455 => D#190ptD.0
  # DEBUG thisD.58464 => D#190ptD.0
  # VUSE <.MEM_142>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _88 = MEM[(charD.10 * *)&D.58301 + 32B];
  # DEBUG D#3ptD.0 => D#190ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58465 => D#190ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.58301 + 32B].D.11539._M_local_bufD.11541 != _88)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D#190ptD.0->D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58457 => D#190ptD.0
  # DEBUG __sizeD.58456 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#190ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#190ptD.0
  # DEBUG D#183ptD.0 => &D#190ptD.0->_M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58460 => _88
  # DEBUG __aD.58458 => D#181ptD.0
  # DEBUG __nD.58459 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58463 => _88
  # DEBUG thisD.58461 => D#177ptD.0
  # DEBUG D.58462 => D#178ptD.0
  # .MEM_143 = VDEF <.MEM_142>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_88);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_142(37), .MEM_143(38)>
  # DEBUG D#187ptD.0 => &D#190ptD.0->_M_dataplusD.11519
  # DEBUG thisD.58466 => D#187ptD.0
  # DEBUG thisD.58467 => D#187ptD.0
  # DEBUG thisD.58468 => D#187ptD.0
  # .MEM_147 = VDEF <.MEM_100>
  MEM[(struct  &)&D.58301 + 32] ={v} {CLOBBER};
  # DEBUG D#189ptD.0 => &D.58301.firstD.35538
  # DEBUG thisD.58469 => D#189ptD.0
  # DEBUG thisD.58470 => D#189ptD.0
  # DEBUG thisD.58479 => D#189ptD.0
  # VUSE <.MEM_147>
  # PT = nonlocal escaped null { D.58300 D.58301 } (escaped)
  _90 = MEM[(charD.10 * *)&D.58301];
  # DEBUG D#3ptD.0 => D#189ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58480 => D#189ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.58301].D.11539._M_local_bufD.11541 != _90)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 275, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#189ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58472 => D#189ptD.0
  # DEBUG __sizeD.58471 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#189ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#189ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#189ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58475 => _90
  # DEBUG __aD.58473 => D#181ptD.0
  # DEBUG __nD.58474 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58478 => _90
  # DEBUG thisD.58476 => D#177ptD.0
  # DEBUG D.58477 => D#178ptD.0
  # .MEM_148 = VDEF <.MEM_147>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_90);
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_101 = PHI <.MEM_147(39), .MEM_148(40)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#189ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58481 => D#187ptD.0
  # DEBUG thisD.58482 => D#187ptD.0
  # DEBUG thisD.58483 => D#187ptD.0
  # .MEM_154 = VDEF <.MEM_101>
  D.58301 ={v} {CLOBBER};
  # DEBUG thisD.58252 => &D.58300
  # DEBUG thisD.58253 => &D.58300
  # DEBUG thisD.58262 => &D.58300
  # VUSE <.MEM_154>
  # PT = nonlocal escaped null { D.58300 } (escaped)
  _16 = MEM[(charD.10 * *)&D.58300];
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58263 => &D.58300
  if (&D.58300.D.11539._M_local_bufD.11541 != _16)
    goto <bb 42>;
  else
    goto <bb 43>;
;;    succ:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.58300.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58255 => &D.58300
  # DEBUG __sizeD.58254 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.58300
  # DEBUG D#183ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58258 => _16
  # DEBUG __aD.58256 => D#181ptD.0
  # DEBUG __nD.58257 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58261 => _16
  # DEBUG thisD.58259 => D#177ptD.0
  # DEBUG D.58260 => D#178ptD.0
  # .MEM_155 = VDEF <.MEM_154>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       41 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_102 = PHI <.MEM_154(41), .MEM_155(42)>
  # DEBUG D#187ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG thisD.58264 => D#187ptD.0
  # DEBUG thisD.58265 => D#187ptD.0
  # DEBUG thisD.58266 => D#187ptD.0
  # .MEM_160 = VDEF <.MEM_102>
  D.58300 ={v} {CLOBBER};
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       15 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [78.3%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __i$_M_node_17 = PHI <__i$_M_node_204(15), __i$_M_node_15(43), __i$_M_node_204(18)>
  # .MEM_103 = PHI <.MEM_205(15), .MEM_160(43), .MEM_205(18)>
  # DEBUG __i$_M_nodeD.58297 => __i$_M_node_17
  # DEBUG thisD.54322 => &__iD.58236
  # DEBUG thisD.54323 => __i$_M_node_17
  # DEBUG D#572ptD.0 => &MEM[(struct _Rb_tree_nodeD.32262 *)__i$_M_node_17]._M_value_fieldD.38939
  # DEBUG __rD.48150 => D#572ptD.0
  # PT = nonlocal escaped 
  _18 = &MEM[(struct pairD.32038 &)__i$_M_node_17 + 32].secondD.35539;
  # DEBUG D#574ptD.0 => {CLOBBER}
  # DEBUG __i$_M_nodeD.58297 => D#574ptD.0
  # DEBUG thisD.54349 => NULL
  # DEBUG __strD.54350 => value_7(D)
  # DEBUG thisD.54352 => NULL
  # DEBUG __strD.54351 => value_7(D)
  # .MEM_8 = VDEF <.MEM_103>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (_18, value_7(D));
  # VUSE <.MEM_8>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       31 (EH,EXECUTABLE)
<L0>: [LP 2]
  # .MEM_161 = VDEF <.MEM_142>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED1EvD.38800 (&D.58301);
  # .MEM_162 = VDEF <.MEM_161>
  D.58301 ={v} {CLOBBER};
  [LP 7] resx 2
;;    succ:       46 (EH,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       45 (EH,EXECUTABLE)
<L6>: [LP 7]
  goto <bb 48> (<L1>);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       20 (EH,EXECUTABLE)
<L3>: [LP 4]
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_104 = PHI <.MEM_168(36), .MEM_162(46), .MEM_123(47), .MEM_169(54)>
<L1>:
  # DEBUG thisD.58237 => &D.58300
  # DEBUG thisD.58238 => &D.58300
  # DEBUG thisD.58247 => &D.58300
  # VUSE <.MEM_104>
  # PT = nonlocal escaped null { D.58300 } (escaped)
  _19 = MEM[(charD.10 * *)&D.58300];
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58248 => &D.58300
  if (&D.58300.D.11539._M_local_bufD.11541 != _19)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.58300.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58240 => &D.58300
  # DEBUG __sizeD.58239 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.58300
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.58300
  # DEBUG D#183ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58243 => _19
  # DEBUG __aD.58241 => D#181ptD.0
  # DEBUG __nD.58242 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58246 => _19
  # DEBUG thisD.58244 => D#177ptD.0
  # DEBUG D.58245 => D#178ptD.0
  # .MEM_170 = VDEF <.MEM_104>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_105 = PHI <.MEM_104(48), .MEM_170(49)>
  # DEBUG D#187ptD.0 => &D.58300._M_dataplusD.11519
  # DEBUG thisD.58249 => D#187ptD.0
  # DEBUG thisD.58250 => D#187ptD.0
  # DEBUG thisD.58251 => D#187ptD.0
  # .MEM_175 = VDEF <.MEM_105>
  D.58300 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 51, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  pretmp_172 = MEM[(long unsigned intD.14 *)field_4(D) + 8B];
  # VUSE <.MEM_3(D)>
  pretmp_174 = MEM[(charD.10 * *)field_4(D)];
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 51, next block 62, flags: (NEW, REACHABLE)
;;    pred:       18 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_191 = PHI <.MEM_205(18), .MEM_205(59), .MEM_3(D)(51)>
  # PT = nonlocal escaped 
  # __i$_M_node_21 = PHI <__i$_M_node_204(18), __i$_M_node_204(59), __i$_M_node_5(51)>
  # prephitmp_173 = PHI <pretmp_159(18), pretmp_159(59), pretmp_172(51)>
  # prephitmp_144 = PHI <pretmp_108(18), pretmp_108(59), pretmp_174(51)>
;;    succ:       62 [100.0%]  (FALLTHRU)

;;   basic block 62, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 52, next block 53, flags: (NEW)
;;    pred:       52 [100.0%]  (FALLTHRU)
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 62, next block 54, flags: (NEW, REACHABLE)
;;    pred:       19 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_169 = VDEF <.MEM_121>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       54 (EH,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 (EH,EXECUTABLE)
<L7>: [LP 1]
  goto <bb 48> (<L1>);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       19 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58421 => D#977ptD.0
  # DEBUG __lastD.58420 => _57
  # DEBUG D#393ptD.0 => &__firstD.58421
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58423 => D#977ptD.0
  # DEBUG __lastD.58422 => _57
  # .MEM_122 = VDEF <.MEM_121>
  __dnewD.58398 = prephitmp_145;
  if (prephitmp_145 > 15)
    goto <bb 20>;
  else
    goto <bb 22>;
;;    succ:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       25 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58450 => _60
  # DEBUG __lastD.58449 => _62
  # DEBUG D#393ptD.0 => &__firstD.58450
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58452 => _60
  # DEBUG __lastD.58451 => _62
  # .MEM_132 = VDEF <.MEM_131>
  __dnewD.58427 = _61;
  if (_61 > 15)
    goto <bb 26>;
  else
    goto <bb 28>;
;;    succ:       26 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 3] # .MEM_163 = VDEF <.MEM_131>
  # USE = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  # CLB = nonlocal null { D.58300 D.58301 D.58398 D.58427 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 1, flags: (NEW)
;;    pred:       57 (EH,EXECUTABLE)
<L8>: [LP 3]
  goto <bb 33> (<L2>);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, funcdef_no=2563, decl_uid=33649, cgraph_uid=1249, symbol_order=1251)


Pass statistics:
----------------

std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_treeD.33337 * const thisD.33650, const struct key_typeD.33363 & __kD.33651)
{
  const size_typeD.11502 __sizeD.58526;
  const size_typeD.11502 __osizeD.58527;
  const size_typeD.11502 __lenD.58528;
  intD.9 __rD.58529;
  const difference_typeD.11503 __dD.58532;
  intD.9 D.58538;
  const size_typeD.11502 __sizeD.58511;
  const size_typeD.11502 __osizeD.58512;
  const size_typeD.11502 __lenD.58513;
  intD.9 __rD.58514;
  const difference_typeD.11503 __dD.58517;
  intD.9 D.58523;
  struct _Rb_tree_node_baseD.27676 * const __j$_M_nodeD.50340;
  boolD.2757 __compD.42463;
  struct _Rb_tree_node_baseD.27676 * const D.42467;
  struct _Rb_tree_node_baseD.27676 * const D.42468;
  struct pairD.28129 D.43767;
  const size_typeD.11502 pretmp_1;
  charD.10 * const prephitmp_13;
  struct _Rb_tree_nodeD.33341 * _17;
  struct _Rb_tree_node_baseD.27676 * _21;
  struct _Rb_tree_node_baseD.27676 * _22;
  struct _Rb_tree_node_baseD.27676 * _23;
  struct _Rb_tree_node_baseD.27676 * _24;
  const size_typeD.11502 _34;
  charD.10 * const _37;
  long unsigned intD.14 _40;
  charD.10 * const pretmp_44;
  long unsigned intD.14 _52;
  const size_typeD.11502 prephitmp_61;
  charD.10 * const pretmp_64;
  charD.10 * const prephitmp_65;
  const size_typeD.11502 pretmp_67;
  const size_typeD.11502 pretmp_76;
  const size_typeD.11502 prephitmp_77;
  const size_typeD.11502 prephitmp_78;
  const size_typeD.11502 pretmp_79;
  charD.10 * const pretmp_80;
  charD.10 * const _83;
  const size_typeD.11502 _84;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _21 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 16B];
  # DEBUG D#36ptD.0 => this_9(D)
  # DEBUG thisD.50292 => D#36ptD.0
  # DEBUG __xD.42461 => NULL
  # DEBUG thisD.50289 => this_9(D)
  # DEBUG D#1010ptD.0 => &this_9(D)->_M_implD.33415._M_headerD.33570
  # DEBUG __yD.42462 => NULL
  # DEBUG __compD.42463 => 1
  # DEBUG __compD.42463 => 1
  # DEBUG __yD.42462 => D#1010ptD.0
  # DEBUG __xD.42461 => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _17 = &this_9(D)->_M_implD.33415._M_headerD.33570;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  pretmp_1 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  pretmp_44 = MEM[(charD.10 * *)__k_12(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _6 = PHI <_22(13), _23(12)>
  # RANGE [0, 1]
  # __comp_56 = PHI <0(13), 1(12)>
  # DEBUG __compD.42463 => __comp_56
  # DEBUG __yD.42462 => _10
  # DEBUG __xD.42461 => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _10 = PHI <_21(4), _6(6)>
  # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
  # DEBUG __compD.42463 => 1
  # DEBUG __xD.42461 => _10
  # DEBUG __yD.42462 => _10
  # DEBUG __xD.50300 => _10
  # DEBUG __xD.48933 => _10
  # DEBUG thisD.48934 => _10
  # DEBUG D#215ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)_10]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#215ptD.0
  # DEBUG __xD.50302 => D#215ptD.0
  # DEBUG thisD.50301 => D#151ptD.0
  # DEBUG D#990ptD.0 => &MEM[(const struct pairD.33117 &)_10 + 32].firstD.35721
  # DEBUG D#355ptD.0 => &this_9(D)->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#355ptD.0
  # DEBUG __xD.50294 => __k_12(D)
  # DEBUG __yD.50295 => D#990ptD.0
  # DEBUG thisD.50296 => D#203ptD.0
  # DEBUG __lhsD.50298 => __k_12(D)
  # DEBUG __rhsD.50297 => D#990ptD.0
  # DEBUG thisD.58509 => __k_12(D)
  # DEBUG __strD.58510 => D#990ptD.0
  # DEBUG D#1009ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58511 => D#1009ptD.0
  # VUSE <.MEM_47>
  _34 = MEM[(long unsigned intD.14 *)_10 + 40B];
  # DEBUG D#2ptD.0 => D#990ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58512 => _34
  # DEBUG __aD.58519 => &__sizeD.58511
  # DEBUG __bD.58518 => &__osizeD.58512
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __lenD.58513 => D#988ptD.0
  # DEBUG thisD.48671 => D#990ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _37 = MEM[(charD.10 * *)_10 + 32B];
  # DEBUG D#3ptD.0 => D#990ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1008ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58522 => D#1008ptD.0
  # DEBUG __s2D.58521 => _37
  # DEBUG __nD.58520 => D#988ptD.0
  # VUSE <.MEM_47>
  # USE = nonlocal escaped 
  __r_39 = memcmpD.989 (pretmp_44, _37, __len_87);
  # DEBUG __rD.58514 => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58516 => D#1009ptD.0
  # DEBUG __n2D.58515 => _34
  # RANGE [0, 18446744073709551615]
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_typeD.11503) _40;
  # DEBUG __dD.58517 => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_42 = (intD.9) _40;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __rD.58514 => __r_43
  # DEBUG D#996ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58511 => D#996ptD.0
  # DEBUG D#997ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58512 => D#997ptD.0
  # DEBUG __compD.42463 => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58514 => NULL
  # DEBUG __compD.42463 => 1
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 16B];
  # DEBUG D#46ptD.0 => _10
  # DEBUG __xD.50305 => D#46ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58514 => NULL
  # DEBUG __compD.42463 => 0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 24B];
  # DEBUG D#45ptD.0 => _10
  # DEBUG __xD.50308 => D#45ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # PT = nonlocal escaped 
  # _83 = PHI <_37(5)>
  # RANGE [0, 1]
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>
  # DEBUG thisD.50310 => &__jD.42464
  # DEBUG __xD.50311 => _85
  # DEBUG __j$_M_nodeD.50340 => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [55.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_47(14), .MEM_8(D)(3)>
  # PT = nonlocal escaped 
  # _57 = PHI <_85(14), _17(3)>
  # DEBUG thisD.50310 => &__jD.42464
  # DEBUG __xD.50311 => _57
  # DEBUG __j$_M_nodeD.50340 => _57
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 24B];
  # DEBUG D#57ptD.0 => this_9(D)
  # DEBUG thisD.50316 => D#57ptD.0
  # DEBUG thisD.47485 => NULL
  # DEBUG __xD.47484 => _24
  # DEBUG thisD.50312 => &__jD.42464
  # DEBUG __xD.50313 => &D.42466
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 46, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.50319 => &D.42469
  # DEBUG __aD.50320 => &D.42467
  # DEBUG __bD.50321 => &D.42468
  # .MEM_31 = VDEF <.MEM_59>
  MEM[(struct pairD.28129 *)&D.43767] = 0B;
  # .MEM_29 = VDEF <.MEM_31>
  MEM[(struct pairD.28129 *)&D.43767 + 8B] = _57;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 404, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.50322 => &__jD.42464
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  __j$_M_node_25 = _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_baseD.27725 (_57);
  # DEBUG __j$_M_nodeD.50340 => __j$_M_node_25
  # VUSE <.MEM_59>
  pretmp_67 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_59>
  pretmp_80 = MEM[(charD.10 * *)__k_12(D)];
  # VUSE <.MEM_59>
  pretmp_79 = MEM[(long unsigned intD.14 *)__j$_M_node_25 + 40B];
  # VUSE <.MEM_59>
  pretmp_64 = MEM[(charD.10 * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 854, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       14 [55.0%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_20 = PHI <_85(14), __j$_M_node_25(17)>
  # .MEM_58 = PHI <.MEM_47(14), .MEM_59(17)>
  # PT = nonlocal escaped 
  # _5 = PHI <_85(14), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(14), pretmp_67(17)>
  # PT = nonlocal escaped 
  # prephitmp_13 = PHI <pretmp_44(14), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(14), pretmp_79(17)>
  # PT = nonlocal escaped 
  # prephitmp_65 = PHI <_83(14), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(14), pretmp_76(17)>
  # DEBUG __j$_M_nodeD.50340 => __j$_M_node_20
  # DEBUG __xD.50330 => __j$_M_node_20
  # DEBUG __xD.48187 => __j$_M_node_20
  # DEBUG thisD.48188 => __j$_M_node_20
  # DEBUG D#152ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__j$_M_node_20]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#152ptD.0
  # DEBUG __xD.50332 => D#152ptD.0
  # DEBUG thisD.50331 => D#151ptD.0
  # DEBUG D#991ptD.0 => &MEM[(const struct pairD.33117 &)__j$_M_node_20 + 32].firstD.35721
  # DEBUG D#354ptD.0 => &this_9(D)->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#354ptD.0
  # DEBUG __xD.50324 => D#991ptD.0
  # DEBUG __yD.50325 => __k_12(D)
  # DEBUG thisD.50326 => D#203ptD.0
  # DEBUG __lhsD.50328 => D#991ptD.0
  # DEBUG __rhsD.50327 => __k_12(D)
  # DEBUG thisD.58524 => D#991ptD.0
  # DEBUG __strD.58525 => __k_12(D)
  # DEBUG D#1007ptD.0 => MEM[(long unsigned intD.14 *)__j$_M_node_20 + 40B]
  # DEBUG D#2ptD.0 => D#991ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58526 => D#1007ptD.0
  # DEBUG D#1006ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58527 => D#1006ptD.0
  # DEBUG __aD.58534 => &__sizeD.58526
  # DEBUG __bD.58533 => &__osizeD.58527
  # DEBUG __lenD.58528 => D#989ptD.0
  # DEBUG thisD.48671 => __k_12(D)
  # DEBUG D#1005ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1004ptD.0 => MEM[(charD.10 * *)__j$_M_node_20 + 32B]
  # DEBUG D#3ptD.0 => D#991ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58537 => D#1004ptD.0
  # DEBUG __s2D.58536 => D#1005ptD.0
  # DEBUG __nD.58535 => D#989ptD.0
  # VUSE <.MEM_58>
  # USE = nonlocal escaped 
  __r_51 = memcmpD.989 (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __rD.58529 => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58531 => D#1007ptD.0
  # DEBUG __n2D.58530 => D#1006ptD.0
  # RANGE [0, 18446744073709551615]
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_typeD.11503) _52;
  # DEBUG __dD.58532 => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;
;;    succ:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 130, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_54 = (intD.9) _52;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 462, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __rD.58529 => __r_55
  # DEBUG D#1002ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58526 => D#1002ptD.0
  # DEBUG D#1003ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58527 => D#1003ptD.0
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58529 => NULL
  # DEBUG thisD.50334 => &D.42472
  # DEBUG __aD.50335 => &D.42470
  # DEBUG __bD.50336 => &D.42471
  # .MEM_28 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.43767] = 0B;
  # .MEM_27 = VDEF <.MEM_28>
  MEM[(struct pairD.28129 *)&D.43767 + 8B] = _5;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58529 => NULL
  # DEBUG thisD.50337 => &D.42474
  # DEBUG __aD.50338 => &__jD.42464._M_nodeD.35700
  # DEBUG __bD.50339 => &D.42473
  # .MEM_11 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.43767] = __j$_M_node_20;
  # .MEM_30 = VDEF <.MEM_11>
  MEM[(struct pairD.28129 *)&D.43767 + 8B] = 0B;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 1, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_29(16), .MEM_27(23), .MEM_30(24)>
  # DEBUG D#353ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.50340 => D#353ptD.0
  # VUSE <.MEM_7>
  return D.43767;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B]
Creating dr for MEM[(long unsigned int *)__k_12(D) + 8B]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__k_12(D) + 8B]
Creating dr for MEM[(char * *)__k_12(D)]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__k_12(D)]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct pair *)&D.43767]
analyze_innermost: success.
	base_address: &D.43767
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43767]
Creating dr for MEM[(struct pair *)&D.43767 + 8B]
analyze_innermost: success.
	base_address: &D.43767
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43767 + 8B]
Creating dr for MEM[(struct pair *)&D.43767]
analyze_innermost: success.
	base_address: &D.43767
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43767]
Creating dr for MEM[(struct pair *)&D.43767 + 8B]
analyze_innermost: success.
	base_address: &D.43767
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43767 + 8B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B]
Creating dr for MEM[(struct pair *)&D.43767]
analyze_innermost: success.
	base_address: &D.43767
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43767]
Creating dr for MEM[(struct pair *)&D.43767 + 8B]
analyze_innermost: success.
	base_address: &D.43767
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.43767 + 8B]
Creating dr for MEM[(long unsigned int *)__k_12(D) + 8B]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__k_12(D) + 8B]
Creating dr for MEM[(char * *)__k_12(D)]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__k_12(D)]
Creating dr for MEM[(long unsigned int *)__j$_M_node_25 + 40B]
analyze_innermost: success.
	base_address: __j$_M_node_25
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__j$_M_node_25 + 40B]
Creating dr for MEM[(char * *)__j$_M_node_25 + 32B]
analyze_innermost: success.
	base_address: __j$_M_node_25
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__j$_M_node_25 + 32B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:8)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:32, LOOPS:1, CONDITIONS:12, STMTS:188)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # VUSE <.MEM_8(D)>
    _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
    # DEBUG D#36 => this_9(D)
    # DEBUG this => D#36
    # DEBUG __x => NULL
    # DEBUG this => this_9(D)
    # DEBUG D#1010 => &this_9(D)->_M_impl._M_header
    # DEBUG __y => NULL
    # DEBUG __comp => 1
    # DEBUG __comp => 1
    # DEBUG __y => D#1010
    # DEBUG __x => _21
    if (_21 == 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_15 })
  {
    <bb 3>:
    _17 = &this_9(D)->_M_impl._M_header;
    goto <bb 15>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 4>:
    # VUSE <.MEM_8(D)>
    pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
    # VUSE <.MEM_8(D)>
    pretmp_44 = MEM[(char * *)__k_12(D)];
    goto <bb 7>;

  }
  bb_14 (preds = {bb_5 }, succs = {bb_26 })
  {
    <bb 14>:
    # _85 = PHI <_10(5)>
    # _84 = PHI <_34(5)>
    # _83 = PHI <_37(5)>
    # __comp_82 = PHI <__comp_56(5)>
    # __len_81 = PHI <__len_87(5)>

  }
  bb_26 (preds = {bb_14 }, succs = {bb_15 bb_18 })
  {
    <bb 26>:
    # DEBUG this => &__j
    # DEBUG __x => _85
    # DEBUG __j$_M_node => _85
    if (__comp_82 != 0)
      goto <bb 15>;
    else
      goto <bb 18>;

  }
  bb_15 (preds = {bb_26 bb_3 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_59 = PHI <.MEM_47(26), .MEM_8(D)(3)>
    # _57 = PHI <_85(26), _17(3)>
    # DEBUG this => &__j
    # DEBUG __x => _57
    # DEBUG __j$_M_node => _57
    # VUSE <.MEM_59>
    _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
    # DEBUG D#57 => this_9(D)
    # DEBUG this => D#57
    # DEBUG this => NULL
    # DEBUG __x => _24
    # DEBUG this => &__j
    # DEBUG __x => &D.42466
    if (_24 == _57)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_25 })
  {
    <bb 16>:
    # DEBUG this => &D.42469
    # DEBUG __a => &D.42467
    # DEBUG __b => &D.42468
    # .MEM_31 = VDEF <.MEM_59>
    MEM[(struct pair *)&D.43767] = 0B;
    # .MEM_29 = VDEF <.MEM_31>
    MEM[(struct pair *)&D.43767 + 8B] = _57;
    goto <bb 25>;

  }
  bb_17 (preds = {bb_15 }, succs = {bb_18 })
  {
    <bb 17>:
    # DEBUG this => &__j
    # VUSE <.MEM_59>
    __j$_M_node_25 = std::_Rb_tree_decrement (_57);
    # DEBUG __j$_M_node => __j$_M_node_25
    # VUSE <.MEM_59>
    pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
    # VUSE <.MEM_59>
    pretmp_80 = MEM[(char * *)__k_12(D)];
    # VUSE <.MEM_59>
    pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
    # VUSE <.MEM_59>
    pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
    pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  }
  bb_18 (preds = {bb_26 bb_17 }, succs = {bb_19 bb_22 })
  {
    <bb 18>:
    # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
    # .MEM_58 = PHI <.MEM_47(26), .MEM_59(17)>
    # _5 = PHI <_85(26), _57(17)>
    # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
    # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
    # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
    # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
    # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
    # DEBUG __j$_M_node => __j$_M_node_20
    # DEBUG __x => __j$_M_node_20
    # DEBUG __x => __j$_M_node_20
    # DEBUG this => __j$_M_node_20
    # DEBUG D#152 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
    # DEBUG __r => D#152
    # DEBUG __x => D#152
    # DEBUG this => D#151
    # DEBUG D#991 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
    # DEBUG D#354 => &this_9(D)->_M_impl._M_key_compare
    # DEBUG D#203 => D#354
    # DEBUG __x => D#991
    # DEBUG __y => __k_12(D)
    # DEBUG this => D#203
    # DEBUG __lhs => D#991
    # DEBUG __rhs => __k_12(D)
    # DEBUG this => D#991
    # DEBUG __str => __k_12(D)
    # DEBUG D#1007 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
    # DEBUG D#2 => D#991
    # DEBUG this => D#2
    # DEBUG __size => D#1007
    # DEBUG D#1006 => MEM[(long unsigned int *)__k_12(D) + 8B]
    # DEBUG D#2 => __k_12(D)
    # DEBUG this => D#2
    # DEBUG __osize => D#1006
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    # DEBUG __len => D#989
    # DEBUG this => __k_12(D)
    # DEBUG D#1005 => MEM[(char * *)__k_12(D)]
    # DEBUG D#3 => __k_12(D)
    # DEBUG this => D#3
    # DEBUG D#1004 => MEM[(char * *)__j$_M_node_20 + 32B]
    # DEBUG D#3 => D#991
    # DEBUG this => D#3
    # DEBUG __s1 => D#1004
    # DEBUG __s2 => D#1005
    # DEBUG __n => D#989
    # VUSE <.MEM_58>
    __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
    # DEBUG __r => NULL
    if (__r_51 == 0)
      goto <bb 19>;
    else
      goto <bb 22>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_24 bb_20 })
  {
    <bb 19>:
    # DEBUG __n1 => D#1007
    # DEBUG __n2 => D#1006
    _52 = prephitmp_78 - prephitmp_61;
    __d_53 = (const difference_type) _52;
    # DEBUG __d => __d_53
    if (__d_53 > 2147483647)
      goto <bb 24>;
    else
      goto <bb 20>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_23 bb_21 })
  {
    <bb 20>:
    if (__d_53 < -2147483648)
      goto <bb 23>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    __r_54 = (int) _52;

  }
  bb_22 (preds = {bb_18 bb_21 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # __r_55 = PHI <__r_51(18), __r_54(21)>
    # DEBUG __r => __r_55
    # DEBUG D#1002 => {CLOBBER}
    # DEBUG __size => D#1002
    # DEBUG D#1003 => {CLOBBER}
    # DEBUG __osize => D#1003
    if (__r_55 < 0)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 bb_20 }, succs = {bb_31 })
  {
    <bb 23>:

  }
  bb_31 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 31>:
    # DEBUG __r => NULL
    # DEBUG this => &D.42472
    # DEBUG __a => &D.42470
    # DEBUG __b => &D.42471
    # .MEM_28 = VDEF <.MEM_58>
    MEM[(struct pair *)&D.43767] = 0B;
    # .MEM_27 = VDEF <.MEM_28>
    MEM[(struct pair *)&D.43767 + 8B] = _5;
    goto <bb 25>;

  }
  bb_24 (preds = {bb_22 bb_19 }, succs = {bb_30 })
  {
    <bb 24>:

  }
  bb_30 (preds = {bb_24 }, succs = {bb_25 })
  {
    <bb 30>:
    # DEBUG __r => NULL
    # DEBUG this => &D.42474
    # DEBUG __a => &__j._M_node
    # DEBUG __b => &D.42473
    # .MEM_11 = VDEF <.MEM_58>
    MEM[(struct pair *)&D.43767] = __j$_M_node_20;
    # .MEM_30 = VDEF <.MEM_11>
    MEM[(struct pair *)&D.43767 + 8B] = 0B;

  }
  bb_25 (preds = {bb_16 bb_31 bb_30 }, succs = {bb_29 })
  {
    <bb 25>:
    # .MEM_7 = PHI <.MEM_29(16), .MEM_27(31), .MEM_30(30)>

  }
  bb_29 (preds = {bb_25 }, succs = {bb_1 })
  {
    <bb 29>:
    # DEBUG D#353 => {CLOBBER}
    # DEBUG __j$_M_node => D#353
    # VUSE <.MEM_7>
    return D.43767;

  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_27 bb_28 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # _6 = PHI <_22(27), _23(28)>
      # __comp_56 = PHI <0(27), 1(28)>
      # DEBUG __comp => __comp_56
      # DEBUG __y => _10
      # DEBUG __x => _6
      if (_6 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_4 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # _10 = PHI <_21(4), _6(6)>
      # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
      # DEBUG __comp => 1
      # DEBUG __x => _10
      # DEBUG __y => _10
      # DEBUG __x => _10
      # DEBUG __x => _10
      # DEBUG this => _10
      # DEBUG D#215 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
      # DEBUG __r => D#215
      # DEBUG __x => D#215
      # DEBUG this => D#151
      # DEBUG D#990 => &MEM[(const struct pair &)_10 + 32].first
      # DEBUG D#355 => &this_9(D)->_M_impl._M_key_compare
      # DEBUG D#203 => D#355
      # DEBUG __x => __k_12(D)
      # DEBUG __y => D#990
      # DEBUG this => D#203
      # DEBUG __lhs => __k_12(D)
      # DEBUG __rhs => D#990
      # DEBUG this => __k_12(D)
      # DEBUG __str => D#990
      # DEBUG D#1009 => MEM[(long unsigned int *)__k_12(D) + 8B]
      # DEBUG D#2 => __k_12(D)
      # DEBUG this => D#2
      # DEBUG __size => D#1009
      # VUSE <.MEM_47>
      _34 = MEM[(long unsigned int *)_10 + 40B];
      # DEBUG D#2 => D#990
      # DEBUG this => D#2
      # DEBUG __osize => _34
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_87 = MIN_EXPR <pretmp_1, _34>;
      # DEBUG __len => D#988
      # DEBUG this => D#990
      # VUSE <.MEM_47>
      _37 = MEM[(char * *)_10 + 32B];
      # DEBUG D#3 => D#990
      # DEBUG this => D#3
      # DEBUG D#1008 => MEM[(char * *)__k_12(D)]
      # DEBUG D#3 => __k_12(D)
      # DEBUG this => D#3
      # DEBUG __s1 => D#1008
      # DEBUG __s2 => _37
      # DEBUG __n => D#988
      # VUSE <.MEM_47>
      __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
      # DEBUG __r => NULL
      if (__r_39 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_13 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => D#1009
      # DEBUG __n2 => _34
      _40 = pretmp_1 - _34;
      __d_41 = (const difference_type) _40;
      # DEBUG __d => __d_41
      if (__d_41 > 2147483647)
        goto <bb 13>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_12 bb_10 })
    {
      <bb 9>:
      if (__d_41 < -2147483648)
        goto <bb 12>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_42 = (int) _40;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_43 = PHI <__r_39(7), __r_42(10)>
      # DEBUG __r => __r_43
      # DEBUG D#996 => {CLOBBER}
      # DEBUG __size => D#996
      # DEBUG D#997 => {CLOBBER}
      # DEBUG __osize => D#997
      # DEBUG __comp => __r_43 < 0
      if (__r_43 < 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_9 }, succs = {bb_28 })
    {
      <bb 12>:

    }
    bb_28 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 28>:
      # DEBUG __r => NULL
      # DEBUG __comp => 1
      # VUSE <.MEM_47>
      _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
      # DEBUG D#46 => _10
      # DEBUG __x => D#46
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_8 }, succs = {bb_27 })
    {
      <bb 13>:

    }
    bb_27 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 27>:
      # DEBUG __r => NULL
      # DEBUG __comp => 0
      # VUSE <.MEM_47>
      _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
      # DEBUG D#45 => _10
      # DEBUG __x => D#45
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, int>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_treeD.33337 * const thisD.33650, const struct key_typeD.33363 & __kD.33651)
{
  const size_typeD.11502 __sizeD.58526;
  const size_typeD.11502 __osizeD.58527;
  const size_typeD.11502 __lenD.58528;
  intD.9 __rD.58529;
  const difference_typeD.11503 __dD.58532;
  intD.9 D.58538;
  const size_typeD.11502 __sizeD.58511;
  const size_typeD.11502 __osizeD.58512;
  const size_typeD.11502 __lenD.58513;
  intD.9 __rD.58514;
  const difference_typeD.11503 __dD.58517;
  intD.9 D.58523;
  struct _Rb_tree_node_baseD.27676 * const __j$_M_nodeD.50340;
  boolD.2757 __compD.42463;
  struct _Rb_tree_node_baseD.27676 * const D.42467;
  struct _Rb_tree_node_baseD.27676 * const D.42468;
  struct pairD.28129 D.43767;
  const size_typeD.11502 pretmp_1;
  charD.10 * const prephitmp_13;
  struct _Rb_tree_nodeD.33341 * _17;
  struct _Rb_tree_node_baseD.27676 * _21;
  struct _Rb_tree_node_baseD.27676 * _22;
  struct _Rb_tree_node_baseD.27676 * _23;
  struct _Rb_tree_node_baseD.27676 * _24;
  const size_typeD.11502 _34;
  charD.10 * const _37;
  long unsigned intD.14 _40;
  charD.10 * const pretmp_44;
  long unsigned intD.14 _52;
  const size_typeD.11502 prephitmp_61;
  charD.10 * const pretmp_64;
  charD.10 * const prephitmp_65;
  const size_typeD.11502 pretmp_67;
  const size_typeD.11502 pretmp_76;
  const size_typeD.11502 prephitmp_77;
  const size_typeD.11502 prephitmp_78;
  const size_typeD.11502 pretmp_79;
  charD.10 * const pretmp_80;
  charD.10 * const _83;
  const size_typeD.11502 _84;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _21 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 16B];
  # DEBUG D#36ptD.0 => this_9(D)
  # DEBUG thisD.50292 => D#36ptD.0
  # DEBUG __xD.42461 => NULL
  # DEBUG thisD.50289 => this_9(D)
  # DEBUG D#1010ptD.0 => &this_9(D)->_M_implD.33415._M_headerD.33570
  # DEBUG __yD.42462 => NULL
  # DEBUG __compD.42463 => 1
  # DEBUG __compD.42463 => 1
  # DEBUG __yD.42462 => D#1010ptD.0
  # DEBUG __xD.42461 => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _17 = &this_9(D)->_M_implD.33415._M_headerD.33570;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  pretmp_1 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  pretmp_44 = MEM[(charD.10 * *)__k_12(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _6 = PHI <_22(27), _23(28)>
  # RANGE [0, 1]
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __compD.42463 => __comp_56
  # DEBUG __yD.42462 => _10
  # DEBUG __xD.42461 => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _10 = PHI <_21(4), _6(6)>
  # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
  # DEBUG __compD.42463 => 1
  # DEBUG __xD.42461 => _10
  # DEBUG __yD.42462 => _10
  # DEBUG __xD.50300 => _10
  # DEBUG __xD.48933 => _10
  # DEBUG thisD.48934 => _10
  # DEBUG D#215ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)_10]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#215ptD.0
  # DEBUG __xD.50302 => D#215ptD.0
  # DEBUG thisD.50301 => D#151ptD.0
  # DEBUG D#990ptD.0 => &MEM[(const struct pairD.33117 &)_10 + 32].firstD.35721
  # DEBUG D#355ptD.0 => &this_9(D)->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#355ptD.0
  # DEBUG __xD.50294 => __k_12(D)
  # DEBUG __yD.50295 => D#990ptD.0
  # DEBUG thisD.50296 => D#203ptD.0
  # DEBUG __lhsD.50298 => __k_12(D)
  # DEBUG __rhsD.50297 => D#990ptD.0
  # DEBUG thisD.58509 => __k_12(D)
  # DEBUG __strD.58510 => D#990ptD.0
  # DEBUG D#1009ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58511 => D#1009ptD.0
  # VUSE <.MEM_47>
  _34 = MEM[(long unsigned intD.14 *)_10 + 40B];
  # DEBUG D#2ptD.0 => D#990ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58512 => _34
  # DEBUG __aD.58519 => &__sizeD.58511
  # DEBUG __bD.58518 => &__osizeD.58512
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __lenD.58513 => D#988ptD.0
  # DEBUG thisD.48671 => D#990ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _37 = MEM[(charD.10 * *)_10 + 32B];
  # DEBUG D#3ptD.0 => D#990ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1008ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58522 => D#1008ptD.0
  # DEBUG __s2D.58521 => _37
  # DEBUG __nD.58520 => D#988ptD.0
  # VUSE <.MEM_47>
  # USE = nonlocal escaped 
  __r_39 = memcmpD.989 (pretmp_44, _37, __len_87);
  # DEBUG __rD.58514 => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58516 => D#1009ptD.0
  # DEBUG __n2D.58515 => _34
  # RANGE [0, 18446744073709551615]
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_typeD.11503) _40;
  # DEBUG __dD.58517 => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_42 = (intD.9) _40;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __rD.58514 => __r_43
  # DEBUG D#996ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58511 => D#996ptD.0
  # DEBUG D#997ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58512 => D#997ptD.0
  # DEBUG __compD.42463 => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 11, next block 28, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       28 [100.0%]  (FALLTHRU)

;;   basic block 28, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58514 => NULL
  # DEBUG __compD.42463 => 1
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 16B];
  # DEBUG D#46ptD.0 => _10
  # DEBUG __xD.50305 => D#46ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 28, next block 27, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       27 [100.0%]  (FALLTHRU)

;;   basic block 27, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58514 => NULL
  # DEBUG __compD.42463 => 0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 24B];
  # DEBUG D#45ptD.0 => _10
  # DEBUG __xD.50308 => D#45ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 27, next block 26, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # PT = nonlocal escaped 
  # _83 = PHI <_37(5)>
  # RANGE [0, 1]
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>
;;    succ:       26 [100.0%]  (FALLTHRU)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.50310 => &__jD.42464
  # DEBUG __xD.50311 => _85
  # DEBUG __j$_M_nodeD.50340 => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [55.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 26, next block 16, flags: (NEW, REACHABLE)
;;    pred:       26 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_47(26), .MEM_8(D)(3)>
  # PT = nonlocal escaped 
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG thisD.50310 => &__jD.42464
  # DEBUG __xD.50311 => _57
  # DEBUG __j$_M_nodeD.50340 => _57
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 24B];
  # DEBUG D#57ptD.0 => this_9(D)
  # DEBUG thisD.50316 => D#57ptD.0
  # DEBUG thisD.47485 => NULL
  # DEBUG __xD.47484 => _24
  # DEBUG thisD.50312 => &__jD.42464
  # DEBUG __xD.50313 => &D.42466
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 46, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.50319 => &D.42469
  # DEBUG __aD.50320 => &D.42467
  # DEBUG __bD.50321 => &D.42468
  # .MEM_31 = VDEF <.MEM_59>
  MEM[(struct pairD.28129 *)&D.43767] = 0B;
  # .MEM_29 = VDEF <.MEM_31>
  MEM[(struct pairD.28129 *)&D.43767 + 8B] = _57;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 404, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.50322 => &__jD.42464
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  __j$_M_node_25 = _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_baseD.27725 (_57);
  # DEBUG __j$_M_nodeD.50340 => __j$_M_node_25
  # VUSE <.MEM_59>
  pretmp_67 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_59>
  pretmp_80 = MEM[(charD.10 * *)__k_12(D)];
  # VUSE <.MEM_59>
  pretmp_79 = MEM[(long unsigned intD.14 *)__j$_M_node_25 + 40B];
  # VUSE <.MEM_59>
  pretmp_64 = MEM[(charD.10 * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 854, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       26 [55.0%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # .MEM_58 = PHI <.MEM_47(26), .MEM_59(17)>
  # PT = nonlocal escaped 
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # PT = nonlocal escaped 
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # PT = nonlocal escaped 
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_nodeD.50340 => __j$_M_node_20
  # DEBUG __xD.50330 => __j$_M_node_20
  # DEBUG __xD.48187 => __j$_M_node_20
  # DEBUG thisD.48188 => __j$_M_node_20
  # DEBUG D#152ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__j$_M_node_20]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#152ptD.0
  # DEBUG __xD.50332 => D#152ptD.0
  # DEBUG thisD.50331 => D#151ptD.0
  # DEBUG D#991ptD.0 => &MEM[(const struct pairD.33117 &)__j$_M_node_20 + 32].firstD.35721
  # DEBUG D#354ptD.0 => &this_9(D)->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#354ptD.0
  # DEBUG __xD.50324 => D#991ptD.0
  # DEBUG __yD.50325 => __k_12(D)
  # DEBUG thisD.50326 => D#203ptD.0
  # DEBUG __lhsD.50328 => D#991ptD.0
  # DEBUG __rhsD.50327 => __k_12(D)
  # DEBUG thisD.58524 => D#991ptD.0
  # DEBUG __strD.58525 => __k_12(D)
  # DEBUG D#1007ptD.0 => MEM[(long unsigned intD.14 *)__j$_M_node_20 + 40B]
  # DEBUG D#2ptD.0 => D#991ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58526 => D#1007ptD.0
  # DEBUG D#1006ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58527 => D#1006ptD.0
  # DEBUG __aD.58534 => &__sizeD.58526
  # DEBUG __bD.58533 => &__osizeD.58527
  # DEBUG __lenD.58528 => D#989ptD.0
  # DEBUG thisD.48671 => __k_12(D)
  # DEBUG D#1005ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1004ptD.0 => MEM[(charD.10 * *)__j$_M_node_20 + 32B]
  # DEBUG D#3ptD.0 => D#991ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58537 => D#1004ptD.0
  # DEBUG __s2D.58536 => D#1005ptD.0
  # DEBUG __nD.58535 => D#989ptD.0
  # VUSE <.MEM_58>
  # USE = nonlocal escaped 
  __r_51 = memcmpD.989 (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __rD.58529 => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58531 => D#1007ptD.0
  # DEBUG __n2D.58530 => D#1006ptD.0
  # RANGE [0, 18446744073709551615]
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_typeD.11503) _52;
  # DEBUG __dD.58532 => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;
;;    succ:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 130, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_54 = (intD.9) _52;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 462, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __rD.58529 => __r_55
  # DEBUG D#1002ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58526 => D#1002ptD.0
  # DEBUG D#1003ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58527 => D#1003ptD.0
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 22, next block 31, flags: (NEW, REACHABLE)
;;    pred:       22 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       31 [100.0%]  (FALLTHRU)

;;   basic block 31, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 23, next block 24, flags: (NEW)
;;    pred:       23 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58529 => NULL
  # DEBUG thisD.50334 => &D.42472
  # DEBUG __aD.50335 => &D.42470
  # DEBUG __bD.50336 => &D.42471
  # .MEM_28 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.43767] = 0B;
  # .MEM_27 = VDEF <.MEM_28>
  MEM[(struct pairD.28129 *)&D.43767 + 8B] = _5;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 31, next block 30, flags: (NEW, REACHABLE)
;;    pred:       22 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 24, next block 25, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58529 => NULL
  # DEBUG thisD.50337 => &D.42474
  # DEBUG __aD.50338 => &__jD.42464._M_nodeD.35700
  # DEBUG __bD.50339 => &D.42473
  # .MEM_11 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.43767] = __j$_M_node_20;
  # .MEM_30 = VDEF <.MEM_11>
  MEM[(struct pairD.28129 *)&D.43767 + 8B] = 0B;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 30, next block 29, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_29(16), .MEM_27(31), .MEM_30(30)>
;;    succ:       29 [100.0%]  (FALLTHRU)

;;   basic block 29, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 25, next block 1, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU)
  # DEBUG D#353ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.50340 => D#353ptD.0
  # VUSE <.MEM_7>
  return D.43767;
;;    succ:       EXIT [100.0%] 

}



;; Function void Configuration::Assign(const string&, int) (_ZN13Configuration6AssignERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi, funcdef_no=1731, decl_uid=35263, cgraph_uid=417, symbol_order=419)


Pass statistics:
----------------

void Configuration::Assign(const string&, int) (struct ConfigurationD.32032 * const thisD.35596, const struct stringD.2845 & fieldD.35593, intD.9 valueD.35594)
Eh tree:
   9 cleanup land:{6,<L9>},{3,<L11>}
     12 must_not_throw
     11 cleanup land:{5,<L8>}
     10 try land:{7,<L10>},{4,<L12>} catch:{}
   6 cleanup land:{2,<L3>}
{
  struct _Rb_tree_node_baseD.27676 * SR.1316D.58962;
  struct _Rb_tree_node_baseD.27676 * SR.1315D.58961;
  struct _Rb_tree_node_baseD.27676 * SR.1314D.58960;
  const struct _Rb_tree_node_baseD.27676 * __posD.58959;
  struct _Rb_tree_node_baseD.27676 * SR.1312D.58958;
  struct _Rb_tree_node_baseD.27676 * SR.1311D.58957;
  size_typeD.11502 __dnewD.58929;
  const size_typeD.11502 __sizeD.58879;
  const size_typeD.11502 __osizeD.58880;
  const size_typeD.11502 __lenD.58881;
  intD.9 __rD.58882;
  const difference_typeD.11503 __dD.58885;
  intD.9 D.58891;
  boolD.2757 __insert_leftD.58852;
  struct iteratorD.33641 D.58876;
  size_typeD.11502 __dnewD.58821;
  struct iteratorD.33641 D.58817;
  struct pairD.28129 __resD.58812;
  struct _Rb_tree_node_baseD.27676 * __res$firstD.58816;
  struct _Rb_tree_node_baseD.27676 * __res$secondD.58815;
  struct const_iteratorD.33643 __positionD.58809;
  const size_typeD.11502 __sizeD.58795;
  const size_typeD.11502 __osizeD.58796;
  const size_typeD.11502 __lenD.58797;
  intD.9 __rD.58798;
  const difference_typeD.11503 __dD.58801;
  intD.9 D.58807;
  const size_typeD.11502 __sizeD.58780;
  const size_typeD.11502 __osizeD.58781;
  const size_typeD.11502 __lenD.58782;
  intD.9 __rD.58783;
  const difference_typeD.11503 __dD.58786;
  intD.9 D.58792;
  struct iteratorD.33641 D.58777;
  struct _Rb_tree_nodeD.33341 * __yD.58767;
  struct value_typeD.33123 D.58760;
  struct iteratorD.33914 D.58759;
  struct iteratorD.33641 D.58758;
  struct const_iteratorD.33643 __posD.58725;
  struct _Rb_tree_node_baseD.27676 * const __i$_M_nodeD.58757;
  struct _Rb_tree_node_baseD.27676 * SR.1107D.58756;
  struct _Rb_tree_node_baseD.27676 * SR.1110D.58755;
  mapped_typeD.33122 & D.58754;
  const size_typeD.11502 __sizeD.58673;
  const size_typeD.11502 __osizeD.58674;
  const size_typeD.11502 __lenD.58675;
  intD.9 __rD.58676;
  const difference_typeD.11503 __dD.58679;
  intD.9 D.58685;
  const size_typeD.11502 __sizeD.58658;
  const size_typeD.11502 __osizeD.58659;
  const size_typeD.11502 __lenD.58660;
  intD.9 __rD.58661;
  const difference_typeD.11503 __dD.58664;
  intD.9 D.58670;
  struct iteratorD.33641 D.58655;
  struct _Rb_tree_nodeD.33341 * __yD.58645;
  struct _Rb_tree_node_baseD.27676 * SR.1119D.54836;
  struct iteratorD.33914 D.54812;
  struct basic_stringD.2844 D.35772;
  charD.10 * const _3;
  const size_typeD.11502 _17;
  const size_typeD.11502 pretmp_19;
  charD.10 * const pretmp_21;
  boolD.2757 _27;
  charD.10 * const _39;
  long unsigned intD.14 _41;
  const size_typeD.11502 _47;
  charD.10 * const _50;
  long unsigned intD.14 _53;
  struct _Rep_typeD.33335 * _58;
  charD.10 * _66;
  charD.10 * const _68;
  charD.10 * const _71;
  size_typeD.11502 prephitmp_73;
  charD.10 * const pretmp_78;
  const size_typeD.11502 _81;
  charD.10 * const _86;
  long unsigned intD.14 _88;
  boolD.2757 _92;
  const size_typeD.11502 _94;
  charD.10 * const prephitmp_96;
  charD.10 * const _97;
  long unsigned intD.14 _100;
  boolD.2757 _104;
  charD.10 * _113;
  long unsigned intD.14 __dnew.111_114;
  const char_typeD.6439 _116;
  charD.10 * _119;
  struct _Rb_tree_nodeD.33341 * _124;
  intD.9 _127;
  long unsigned intD.14 _128;
  long unsigned intD.14 _129;
  const size_typeD.11502 _130;
  const size_typeD.11502 _131;
  charD.10 * const _134;
  charD.10 * const _135;
  long unsigned intD.14 _137;
  struct pairD.33117 * _142;
  charD.10 * _144;
  charD.10 * const _145;
  const size_typeD.11502 _146;
  charD.10 * _147;
  intD.9 _148;
  voidD.45 * _149;
  charD.10 * _155;
  long unsigned intD.14 __dnew.111_156;
  const char_typeD.6439 _158;
  charD.10 * _161;
  charD.10 * const pretmp_165;
  size_typeD.11502 pretmp_169;
  charD.10 * const _173;
  charD.10 * const prephitmp_179;
  size_typeD.11502 prephitmp_180;
  size_typeD.11502 pretmp_181;
  boolD.2757 _264;
  boolD.2757 _268;
  boolD.2757 _269;
  boolD.2757 _272;
  charD.10 * const _292;
  boolD.2757 _294;
  boolD.2757 _296;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54813 => &matchD.35598
  # DEBUG match$_M_nodeD.54829 => 0B
  # DEBUG D#606ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54809 => D#606ptD.0
  # DEBUG __xD.54810 => field_5(D)
  # DEBUG D#1059ptD.0 => &MEM[(struct mapD.33119 *)this_4(D) + 88B]._M_tD.33338
  # DEBUG thisD.58631 => D#1059ptD.0
  # DEBUG __kD.58632 => field_5(D)
  # DEBUG thisD.58642 => D#1059ptD.0
  # PT = nonlocal 
  __pos_23 = &MEM[(struct _Rb_treeD.33337 *)this_4(D) + 88B]._M_implD.33415._M_headerD.33570;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __pos_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_4(D) + 104B];
  # DEBUG D#36ptD.0 => D#1059ptD.0
  # DEBUG thisD.49007 => D#36ptD.0
  # DEBUG D#218ptD.0 => D#1059ptD.0
  # DEBUG __xD.58646 => NULL
  # DEBUG __yD.58645 => NULL
  # DEBUG __kD.58644 => field_5(D)
  # DEBUG __yD.58645 => __pos_23
  # DEBUG __xD.58646 => __pos_24
  if (__pos_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_19 = MEM[(long unsigned intD.14 *)field_5(D) + 8B];
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  pretmp_21 = MEM[(charD.10 * *)field_5(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_320 = PHI <.MEM_2(D)(2), .MEM_132(14), .MEM_132(17), .MEM_132(19)>
  # DEBUG thisD.49021 => D#1059ptD.0
  # DEBUG thisD.49023 => NULL
  # DEBUG __xD.49022 => __pos_23
  # DEBUG D#219ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49025 => D#219ptD.0
  # DEBUG thisD.54807 => &match.41D.35716
  # DEBUG __itD.54808 => &D.35712
  # DEBUG match$_M_nodeD.54829 => __pos_23
  # DEBUG D#607ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54803 => D#607ptD.0
  # DEBUG D#56ptD.0 => &D#607ptD.0->_M_tD.33338
  # DEBUG thisD.54804 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54801 => &D.35771
  # DEBUG __itD.54802 => &D.35717
  # DEBUG thisD.54798 => &matchD.35598
  # DEBUG __xD.54799 => &D.35771
  # DEBUG D#219ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49025 => D#219ptD.0
  # DEBUG thisD.54807 => &match.41D.35716
  # DEBUG __itD.54808 => &D.35712
  # DEBUG match$_M_nodeD.54829 => __pos_23
  # DEBUG D#607ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54803 => D#607ptD.0
  # DEBUG D#56ptD.0 => &D#607ptD.0->_M_tD.33338
  # DEBUG thisD.54804 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54801 => &D.35771
  # DEBUG __itD.54802 => &D.35717
  # DEBUG thisD.54798 => &matchD.35598
  # DEBUG __xD.54799 => &D.35771
  # .MEM_13 = VDEF <.MEM_320>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  D.35772 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown integer field: ", field_5(D)); [return slot optimization]
  [LP 2] # .MEM_14 = VDEF <.MEM_13>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_4(D), &D.35772, 0);
;;    succ:       68 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_57 = PHI <__pos_28(12), __pos_29(13)>
  # PT = nonlocal escaped 
  # __pos_80 = PHI <__pos_318(12), __pos_322(13)>
  # DEBUG __yD.58645 => __pos_80
  # DEBUG __xD.58646 => __pos_57
  if (__pos_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_318 = PHI <__pos_24(3), __pos_57(6)>
  # PT = nonlocal escaped 
  # __pos_322 = PHI <__pos_23(3), __pos_80(6)>
  # .MEM_132 = PHI <.MEM_2(D)(3), .MEM_132(6)>
  # DEBUG __yD.58645 => __pos_322
  # DEBUG __xD.58646 => __pos_318
  # DEBUG __xD.58647 => __pos_318
  # DEBUG __xD.48933 => __pos_318
  # DEBUG thisD.48934 => __pos_318
  # DEBUG D#215ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__pos_318]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#215ptD.0
  # DEBUG __xD.58649 => D#215ptD.0
  # DEBUG thisD.58648 => D#151ptD.0
  # DEBUG D#1060ptD.0 => &MEM[(const struct pairD.33117 &)__pos_318 + 32].firstD.35721
  # DEBUG D#216ptD.0 => &D#217ptD.0->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#216ptD.0
  # DEBUG __xD.58652 => D#1060ptD.0
  # DEBUG __yD.58651 => field_5(D)
  # DEBUG thisD.58650 => D#203ptD.0
  # DEBUG __lhsD.58654 => D#1060ptD.0
  # DEBUG __rhsD.58653 => field_5(D)
  # DEBUG thisD.58656 => D#1060ptD.0
  # DEBUG __strD.58657 => field_5(D)
  # VUSE <.MEM_132>
  _17 = MEM[(long unsigned intD.14 *)__pos_318 + 40B];
  # DEBUG D#2ptD.0 => D#1060ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58658 => _17
  # DEBUG D#1107ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58659 => D#1107ptD.0
  # DEBUG __aD.58666 => &__sizeD.58658
  # DEBUG __bD.58665 => &__osizeD.58659
  __len_309 = MIN_EXPR <_17, pretmp_19>;
  # DEBUG __lenD.58660 => D#1054ptD.0
  # DEBUG thisD.48671 => field_5(D)
  # DEBUG D#1106ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _39 = MEM[(charD.10 * *)__pos_318 + 32B];
  # DEBUG D#3ptD.0 => D#1060ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58669 => _39
  # DEBUG __s2D.58668 => D#1106ptD.0
  # DEBUG __nD.58667 => D#1054ptD.0
  # VUSE <.MEM_132>
  # USE = nonlocal escaped 
  __r_40 = memcmpD.989 (_39, pretmp_21, __len_309);
  # DEBUG __rD.58661 => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58663 => _17
  # DEBUG __n2D.58662 => D#1107ptD.0
  # RANGE [0, 18446744073709551615]
  _41 = _17 - pretmp_19;
  __d_42 = (const difference_typeD.11503) _41;
  # DEBUG __dD.58664 => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_43 = (intD.9) _41;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __rD.58661 => __r_44
  # DEBUG D#1070ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58658 => D#1070ptD.0
  # DEBUG D#1071ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58659 => D#1071ptD.0
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58661 => NULL
  # DEBUG __yD.58645 => __pos_318
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __pos_28 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_318 + 16B];
  # DEBUG D#46ptD.0 => __pos_318
  # DEBUG __xD.48966 => D#46ptD.0
  # DEBUG __xD.58646 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58661 => NULL
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __pos_29 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_318 + 24B];
  # DEBUG D#45ptD.0 => __pos_318
  # DEBUG __xD.48965 => D#45ptD.0
  # DEBUG __xD.58646 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_312 = PHI <__pos_80(5)>
  # DEBUG thisD.48964 => NULL
  # DEBUG __xD.48963 => __pos_312
  # DEBUG __j$_M_nodeD.49025 => __pos_312
  # DEBUG thisD.48987 => D#1059ptD.0
  # DEBUG thisD.48989 => NULL
  # DEBUG __xD.48988 => __pos_23
  # DEBUG thisD.48984 => &__jD.58633
  # DEBUG __xD.48985 => NULL
  if (__pos_23 == __pos_312)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.58634 => __pos_312
  # DEBUG __xD.48187 => __pos_312
  # DEBUG thisD.48188 => __pos_312
  # DEBUG D#152ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__pos_312]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#152ptD.0
  # DEBUG __xD.58636 => D#152ptD.0
  # DEBUG thisD.58635 => D#151ptD.0
  # DEBUG D#1061ptD.0 => &MEM[(const struct pairD.33117 &)__pos_312 + 32].firstD.35721
  # DEBUG D#220ptD.0 => &MEM[(struct _Rb_treeD.33337 *)D#1059ptD.0]._M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#220ptD.0
  # DEBUG __xD.58639 => field_5(D)
  # DEBUG __yD.58638 => D#1061ptD.0
  # DEBUG thisD.58637 => D#203ptD.0
  # DEBUG __lhsD.58641 => field_5(D)
  # DEBUG __rhsD.58640 => D#1061ptD.0
  # DEBUG thisD.58671 => field_5(D)
  # DEBUG __strD.58672 => D#1061ptD.0
  # DEBUG D#1105ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58673 => D#1105ptD.0
  # VUSE <.MEM_132>
  _47 = MEM[(long unsigned intD.14 *)__pos_312 + 40B];
  # DEBUG D#2ptD.0 => D#1061ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58674 => _47
  # DEBUG __aD.58681 => &__sizeD.58673
  # DEBUG __bD.58680 => &__osizeD.58674
  __len_305 = MIN_EXPR <pretmp_19, _47>;
  # DEBUG __lenD.58675 => D#1055ptD.0
  # DEBUG thisD.48671 => D#1061ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _50 = MEM[(charD.10 * *)__pos_312 + 32B];
  # DEBUG D#3ptD.0 => D#1061ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1104ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58684 => D#1104ptD.0
  # DEBUG __s2D.58683 => _50
  # DEBUG __nD.58682 => D#1055ptD.0
  # VUSE <.MEM_132>
  # USE = nonlocal escaped 
  __r_52 = memcmpD.989 (pretmp_21, _50, __len_305);
  # DEBUG __rD.58676 => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58678 => D#1105ptD.0
  # DEBUG __n2D.58677 => _47
  # RANGE [0, 18446744073709551615]
  _53 = pretmp_19 - _47;
  __d_54 = (const difference_typeD.11503) _53;
  # DEBUG __dD.58679 => __d_54
  if (__d_54 > 2147483647)
    goto <bb 77>;
  else
    goto <bb 17>;
;;    succ:       77 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_55 = (intD.9) _53;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __rD.58676 => __r_56
  # DEBUG D#1076ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58673 => D#1076ptD.0
  # DEBUG D#1077ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58674 => D#1077ptD.0
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 77>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_34 = PHI <__pos_76(28), __pos_77(29)>
  # PT = nonlocal escaped 
  # __pos_33 = PHI <__pos_319(28), __pos_141(29)>
  # DEBUG __yD.58767 => __pos_33
  # DEBUG __xD.58768 => __pos_34
  if (__pos_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;
;;    succ:       30 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 8277, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       77 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_319 = PHI <__pos_24(22), __pos_34(21)>
  # PT = nonlocal escaped 
  # __pos_141 = PHI <__pos_23(22), __pos_33(21)>
  # .MEM_95 = PHI <.MEM_132(22), .MEM_95(21)>
  # DEBUG __yD.58767 => __pos_141
  # DEBUG __xD.58768 => __pos_319
  # DEBUG __xD.58769 => __pos_319
  # DEBUG __xD.48933 => __pos_319
  # DEBUG thisD.48934 => __pos_319
  # DEBUG D#215ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__pos_319]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#215ptD.0
  # DEBUG __xD.58771 => D#215ptD.0
  # DEBUG thisD.58770 => D#151ptD.0
  # DEBUG D#1063ptD.0 => &MEM[(const struct pairD.33117 &)__pos_319 + 32].firstD.35721
  # DEBUG D#216ptD.0 => &D#217ptD.0->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#216ptD.0
  # DEBUG __xD.58774 => D#1063ptD.0
  # DEBUG __yD.58773 => field_5(D)
  # DEBUG thisD.58772 => D#203ptD.0
  # DEBUG __lhsD.58776 => D#1063ptD.0
  # DEBUG __rhsD.58775 => field_5(D)
  # DEBUG thisD.58778 => D#1063ptD.0
  # DEBUG __strD.58779 => field_5(D)
  # VUSE <.MEM_95>
  _81 = MEM[(long unsigned intD.14 *)__pos_319 + 40B];
  # DEBUG D#2ptD.0 => D#1063ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58780 => _81
  # DEBUG D#1103ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58781 => D#1103ptD.0
  # DEBUG __aD.58788 => &__sizeD.58780
  # DEBUG __bD.58787 => &__osizeD.58781
  __len_302 = MIN_EXPR <pretmp_19, _81>;
  # DEBUG __lenD.58782 => D#1056ptD.0
  # DEBUG thisD.48671 => field_5(D)
  # DEBUG D#1102ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _86 = MEM[(charD.10 * *)__pos_319 + 32B];
  # DEBUG D#3ptD.0 => D#1063ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58791 => _86
  # DEBUG __s2D.58790 => D#1102ptD.0
  # DEBUG __nD.58789 => D#1056ptD.0
  # VUSE <.MEM_95>
  # USE = nonlocal escaped 
  __r_87 = memcmpD.989 (_86, pretmp_21, __len_302);
  # DEBUG __rD.58783 => NULL
  if (__r_87 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 5549, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58785 => _81
  # DEBUG __n2D.58784 => D#1103ptD.0
  # RANGE [0, 18446744073709551615]
  _88 = _81 - pretmp_19;
  __d_89 = (const difference_typeD.11503) _88;
  # DEBUG __dD.58786 => __d_89
  if (__d_89 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;
;;    succ:       28 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 2774, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_89 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;
;;    succ:       29 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 1387, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_90 = (intD.9) _88;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 4934, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       23 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_91 = PHI <__r_87(23), __r_90(26)>
  # DEBUG __rD.58783 => __r_91
  # DEBUG D#1082ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58780 => D#1082ptD.0
  # DEBUG D#1083ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58781 => D#1083ptD.0
  if (__r_91 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58783 => NULL
  # DEBUG __yD.58767 => __pos_319
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  __pos_76 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_319 + 16B];
  # DEBUG D#46ptD.0 => __pos_319
  # DEBUG __xD.48966 => D#46ptD.0
  # DEBUG __xD.58768 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58783 => NULL
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  __pos_77 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_319 + 24B];
  # DEBUG D#45ptD.0 => __pos_319
  # DEBUG __xD.48965 => D#45ptD.0
  # DEBUG __xD.58768 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_313 = PHI <__pos_33(20)>
  # DEBUG thisD.48964 => NULL
  # DEBUG __xD.48963 => __pos_313
  # DEBUG __i$_M_nodeD.58757 => __pos_313
  # DEBUG thisD.58752 => D#1062ptD.0
  # DEBUG D#56ptD.0 => &D#1062ptD.0->_M_tD.33338
  # DEBUG thisD.58753 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54702 => &__iD.58688
  # DEBUG __xD.54703 => NULL
  if (__pos_23 == __pos_313)
    goto <bb 71>;
  else
    goto <bb 31>;
;;    succ:       71 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 765, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.54722 => &__iD.58688
  # DEBUG thisD.54723 => __pos_313
  # DEBUG D#602ptD.0 => &MEM[(struct _Rb_tree_nodeD.33341 *)__pos_313]._M_value_fieldD.38961
  # DEBUG __rD.48192 => D#602ptD.0
  # DEBUG D#1064ptD.0 => &MEM[(struct pairD.33117 &)__pos_313 + 32].firstD.35721
  # DEBUG D#62ptD.0 => D#1062ptD.0
  # DEBUG thisD.54719 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#62ptD.0
  # DEBUG D#60ptD.0 => &D#61ptD.0->_M_tD.33338
  # DEBUG D#59ptD.0 => D#60ptD.0
  # DEBUG thisD.47504 => D#59ptD.0
  # DEBUG __xD.58747 => field_5(D)
  # DEBUG __yD.58746 => D#1064ptD.0
  # DEBUG thisD.58745 => D#203ptD.0
  # DEBUG __lhsD.58749 => field_5(D)
  # DEBUG __rhsD.58748 => D#1064ptD.0
  # DEBUG thisD.58793 => field_5(D)
  # DEBUG __strD.58794 => D#1064ptD.0
  # DEBUG D#1101ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58795 => D#1101ptD.0
  # VUSE <.MEM_95>
  _94 = MEM[(long unsigned intD.14 *)__pos_313 + 40B];
  # DEBUG D#2ptD.0 => D#1064ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58796 => _94
  # DEBUG __aD.58803 => &__sizeD.58795
  # DEBUG __bD.58802 => &__osizeD.58796
  __len_301 = MIN_EXPR <pretmp_19, _94>;
  # DEBUG __lenD.58797 => D#1057ptD.0
  # DEBUG thisD.48671 => D#1064ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _97 = MEM[(charD.10 * *)__pos_313 + 32B];
  # DEBUG D#3ptD.0 => D#1064ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1100ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58806 => D#1100ptD.0
  # DEBUG __s2D.58805 => _97
  # DEBUG __nD.58804 => D#1057ptD.0
  # VUSE <.MEM_95>
  # USE = nonlocal escaped 
  __r_99 = memcmpD.989 (pretmp_21, _97, __len_301);
  # DEBUG __rD.58798 => NULL
  if (__r_99 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 466, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58800 => D#1101ptD.0
  # DEBUG __n2D.58799 => _94
  # RANGE [0, 18446744073709551615]
  _100 = pretmp_19 - _94;
  __d_101 = (const difference_typeD.11503) _100;
  # DEBUG __dD.58801 => __d_101
  if (__d_101 > 2147483647)
    goto <bb 63>;
  else
    goto <bb 33>;
;;    succ:       63 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 233, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_101 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;
;;    succ:       36 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_102 = (intD.9) _100;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 415, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       31 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_103 = PHI <__r_99(31), __r_102(34)>
  # DEBUG __rD.58798 => __r_103
  # DEBUG D#1088ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58795 => D#1088ptD.0
  # DEBUG D#1089ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58796 => D#1089ptD.0
  if (__r_103 < 0)
    goto <bb 71>;
  else
    goto <bb 63>;
;;    succ:       71 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_293 = PHI <.MEM_95(33), .MEM_60(71)>
  # PT = nonlocal escaped 
  # __pos_133 = PHI <__pos_313(33), __pos_162(71)>
  # DEBUG thisD.58730 => &D.58760
  # DEBUG __aD.58729 => field_5(D)
  # DEBUG __bD.58728 => NULL
  # DEBUG thisD.58732 => &D.58760.firstD.35721
  # DEBUG __strD.58731 => field_5(D)
  # DEBUG thisD.50825 => field_5(D)
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)field_5(D)]._M_dataplusD.11519
  # DEBUG thisD.58733 => &D.58760.firstD.35721
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.58760]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.58736 => D#381ptD.0
  # DEBUG __datD.58735 => &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541
  # DEBUG __aD.58734 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_204 = VDEF <.MEM_293>
  MEM[(struct _Alloc_hiderD.11518 *)&D.58760]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541;
  # DEBUG D#1099ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # DEBUG D#1098ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#1ptD.0 => field_5(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _66 = pretmp_21 + pretmp_19;
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.58739 => &D.58760.firstD.35721
  # DEBUG __begD.58738 => D#1099ptD.0
  # DEBUG __endD.58737 => _66
  # DEBUG thisD.58743 => &D.58760.firstD.35721
  # DEBUG __begD.58742 => D#1099ptD.0
  # DEBUG __endD.58741 => _66
  # DEBUG thisD.58818 => &D.58760.firstD.35721
  # DEBUG __begD.58819 => D#1099ptD.0
  # DEBUG __endD.58820 => _66
  # DEBUG __ptrD.51229 => D#1099ptD.0
  # RANGE [0, 1]
  _92 = _66 != 0B;
  # RANGE [0, 1]
  _104 = pretmp_21 == 0B;
  # RANGE [0, 1]
  _296 = _92 & _104;
  if (_296 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;
;;    succ:       73 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       72 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_206 = VDEF <.MEM_205>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _113 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.58760.firstD.35721, &__dnewD.58821, 0);
  # DEBUG D#6ptD.0 => &D.58760.firstD.35721
  # DEBUG __pD.58840 => _113
  # DEBUG thisD.58839 => D#6ptD.0
  # .MEM_207 = VDEF <.MEM_206>
  MEM[(charD.10 * *)&D.58760] = _113;
  # VUSE <.MEM_207>
  __dnew.111_114 = __dnewD.58821;
  # DEBUG D#7ptD.0 => &D.58760.firstD.35721
  # DEBUG __capacityD.58842 => __dnew.111_114
  # DEBUG thisD.58841 => D#7ptD.0
  # .MEM_208 = VDEF <.MEM_207>
  MEM[(size_typeD.11502 *)&D.58760 + 16B] = __dnew.111_114;
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58824 => _113
  # DEBUG __k1D.58823 => D#1099ptD.0
  # DEBUG __k2D.58822 => _66
  # DEBUG __dD.58827 => _113
  # DEBUG __sD.58826 => D#1099ptD.0
  # DEBUG __nD.58825 => D#1098ptD.0
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       72 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58824 => &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58823 => D#1099ptD.0
  # DEBUG __k2D.58822 => _66
  # DEBUG __dD.58827 => &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541
  # DEBUG __sD.58826 => D#1099ptD.0
  # DEBUG __nD.58825 => D#1098ptD.0
  if (pretmp_19 == 1)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_205>
  _116 = MEM[(const char_typeD.6439 &)pretmp_21];
  # DEBUG D#13ptD.0 => D#1099ptD.0
  # DEBUG __c1D.58832 => &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58831 => D#13ptD.0
  # .MEM_209 = VDEF <.MEM_205>
  MEM[(char_typeD.6439 &)&D.58760 + 16] = _116;
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.58760 } (escaped)
  # _173 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541(38), _113(37)>
  # .MEM_290 = PHI <.MEM_205(38), .MEM_208(37)>
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58824 => _173
  # DEBUG __k1D.58823 => D#1099ptD.0
  # DEBUG __k2D.58822 => _66
  # DEBUG __dD.58827 => _173
  # DEBUG __sD.58826 => D#1099ptD.0
  # DEBUG __nD.58825 => D#1098ptD.0
  # DEBUG __s1D.58830 => _173
  # DEBUG __s2D.58829 => D#1099ptD.0
  # DEBUG __nD.58828 => D#1098ptD.0
  # .MEM_210 = VDEF <.MEM_290>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  memcpyD.992 (_173, pretmp_21, pretmp_19);
  # VUSE <.MEM_210>
  pretmp_181 = __dnewD.58821;
  # VUSE <.MEM_210>
  pretmp_165 = MEM[(charD.10 * *)&D.58760];
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_168 = PHI <.MEM_209(39), .MEM_210(40)>
  # prephitmp_180 = PHI <pretmp_19(39), pretmp_181(40)>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  # prephitmp_179 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541(39), pretmp_165(40)>
  # DEBUG D#1097ptD.0 => __dnewD.58821
  # DEBUG thisD.58834 => &D.58760.firstD.35721
  # DEBUG __nD.58833 => D#1097ptD.0
  # DEBUG D#5ptD.0 => &D.58760.firstD.35721
  # DEBUG __lengthD.58836 => D#1097ptD.0
  # DEBUG thisD.58835 => D#5ptD.0
  # .MEM_211 = VDEF <.MEM_168>
  MEM[(size_typeD.11502 *)&D.58760 + 8B] = prephitmp_180;
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _119 = prephitmp_179 + prephitmp_180;
  # DEBUG __c1D.58838 => _119
  # DEBUG __c2D.58837 => D#13ptD.0
  # .MEM_212 = VDEF <.MEM_211>
  MEM[(char_typeD.6439 &)_119] = 0;
  # .MEM_213 = VDEF <.MEM_212>
  __dnewD.58821 ={v} {CLOBBER};
  # .MEM_214 = VDEF <.MEM_213>
  D.58760.secondD.35722 = 0;
  # DEBUG thisD.58723 => D#1062ptD.0
  # DEBUG __position$_M_nodeD.54794 => __pos_133
  # DEBUG __xD.58721 => &D.58760
  # DEBUG thisD.54746 => NULL
  # DEBUG __itD.54745 => &__positionD.58722
  # DEBUG thisD.58726 => D#1108ptD.0
  # DEBUG __posD.58959 => __pos_133
  # DEBUG __xD.58724 => &D.58760
  # DEBUG thisD.54696 => &__anD.58727
  # DEBUG __tD.54695 => D#1108ptD.0
  # DEBUG __an$_M_tD.54689 => D#1108ptD.0
  # DEBUG D#601ptD.0 => &__anD.58727
  # DEBUG thisD.58808 => D#1108ptD.0
  # .MEM_216 = VDEF <.MEM_214>
  MEM[(struct _Rb_tree_const_iteratorD.33644 *)&__positionD.58809] = __pos_133;
  # DEBUG __vD.58810 => &D.58760
  # DEBUG __node_genD.58811 => D#601ptD.0
  # DEBUG D#600ptD.0 => D#601ptD.0
  # DEBUG __xD.58814 => &D.58760
  # DEBUG thisD.58813 => D#151ptD.0
  # PT = nonlocal 
  _58 = &MEM[(struct mapD.33119 *)this_4(D) + 88B]._M_tD.33338;
  # .MEM_217 = VDEF <.MEM_216>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  __resD.58812 = _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_D.33655 (_58, __positionD.58809, &D.58760.firstD.35721);
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  __res$first_106 = MEM[(struct pairD.28129 *)&__resD.58812];
  # DEBUG __res$firstD.58816 => __res$first_106
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  __res$second_107 = MEM[(struct pairD.28129 *)&__resD.58812 + 8B];
  # DEBUG __res$secondD.58815 => __res$second_107
  if (__res$second_107 != 0B)
    goto <bb 42>;
  else
    goto <bb 60>;
;;    succ:       42 [59.7%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [40.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of incoming frequencies 209, should be 45
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [59.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#595ptD.0 => D#600ptD.0
  # DEBUG thisD.58847 => D#1108ptD.0
  # DEBUG __xD.58848 => __res$first_106
  # DEBUG __pD.58849 => __res$second_107
  # DEBUG __vD.58850 => &D.58760
  # DEBUG __node_genD.58851 => D#595ptD.0
  # DEBUG D#594ptD.0 => D#595ptD.0
  # DEBUG thisD.58875 => D#1108ptD.0
  _294 = __pos_23 == __res$second_107;
  # RANGE [0, 1]
  _27 = __res$first_106 != 0B;
  _264 = _27 | _294;
  if (_264 != 0)
    goto <bb 48>;
  else
    goto <bb 43>;
;;    succ:       48 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 41, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.58865 => __res$second_107
  # DEBUG __xD.48187 => __res$second_107
  # DEBUG thisD.48188 => __res$second_107
  # DEBUG D#152ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__res$second_107]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#152ptD.0
  # DEBUG __xD.58867 => D#152ptD.0
  # DEBUG thisD.58866 => D#151ptD.0
  # DEBUG D#1065ptD.0 => &MEM[(const struct pairD.33117 &)__res$second_107 + 32].firstD.35721
  # DEBUG __xD.58869 => &D.58760
  # DEBUG thisD.58868 => D#151ptD.0
  # DEBUG D#593ptD.0 => &MEM[(struct _Rb_treeD.33337 *)D#1108ptD.0]._M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#593ptD.0
  # DEBUG __xD.58872 => NULL
  # DEBUG __yD.58871 => D#1065ptD.0
  # DEBUG thisD.58870 => D#203ptD.0
  # DEBUG __lhsD.58874 => NULL
  # DEBUG __rhsD.58873 => D#1065ptD.0
  # DEBUG thisD.58877 => &D.58760.firstD.35721
  # DEBUG __strD.58878 => D#1065ptD.0
  # VUSE <.MEM_217>
  _130 = MEM[(long unsigned intD.14 *)&D.58760 + 8B];
  # DEBUG D#2ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58879 => _130
  # VUSE <.MEM_217>
  _131 = MEM[(long unsigned intD.14 *)__res$second_107 + 40B];
  # DEBUG D#2ptD.0 => D#1065ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58880 => _131
  # DEBUG __aD.58887 => &__sizeD.58879
  # DEBUG __bD.58886 => &__osizeD.58880
  __len_59 = MIN_EXPR <_130, _131>;
  # DEBUG __lenD.58881 => D#1058ptD.0
  # DEBUG thisD.48671 => D#1065ptD.0
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  _134 = MEM[(charD.10 * *)__res$second_107 + 32B];
  # DEBUG D#3ptD.0 => D#1065ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_217>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _135 = MEM[(charD.10 * *)&D.58760];
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58890 => _135
  # DEBUG __s2D.58889 => _134
  # DEBUG __nD.58888 => D#1058ptD.0
  # VUSE <.MEM_217>
  # USE = nonlocal escaped null { D.58760 } (escaped)
  __r_136 = memcmpD.989 (_135, _134, __len_59);
  # DEBUG __rD.58882 => NULL
  if (__r_136 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 25, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58884 => _130
  # DEBUG __n2D.58883 => _131
  # RANGE [0, 18446744073709551615]
  _137 = _130 - _131;
  __d_138 = (const difference_typeD.11503) _137;
  # DEBUG __dD.58885 => __d_138
  if (__d_138 > 2147483647)
    goto <bb 48>;
  else
    goto <bb 45>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_138 < -2147483648)
    goto <bb 48>;
  else
    goto <bb 46>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_139 = (intD.9) _137;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       43 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_140 = PHI <__r_136(43), __r_139(46)>
  # DEBUG __rD.58882 => __r_140
  # DEBUG D#1094ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58879 => D#1094ptD.0
  # DEBUG D#1095ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58880 => D#1095ptD.0
  __insert_left_300 = __r_140 < 0;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 209, maybe hot
;;   Invalid sum of incoming frequencies 46, should be 209
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       44 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # __insert_left_126 = PHI <0(44), 1(45), __insert_left_300(47), 1(42)>
  # DEBUG __insert_leftD.58852 => __insert_left_126
  # DEBUG D#592ptD.0 => D#594ptD.0
  # DEBUG __argD.58855 => &D.58760
  # DEBUG thisD.58854 => D#592ptD.0
  # DEBUG D#591ptD.0 => D#592ptD.0
  # DEBUG D#590ptD.0 => D#591ptD.0->_M_tD.40747
  # DEBUG D#589ptD.0 => D#590ptD.0
  # DEBUG __xD.58857 => &D.58760
  # DEBUG thisD.58856 => D#589ptD.0
  # DEBUG D#588ptD.0 => D#589ptD.0
  # DEBUG D#587ptD.0 => D#589ptD.0
  # DEBUG D#586ptD.0 => D#587ptD.0
  # DEBUG thisD.58859 => D#586ptD.0
  # DEBUG D#585ptD.0 => D#586ptD.0
  # DEBUG thisD.54520 => D#585ptD.0
  # DEBUG __nD.58861 => 1
  # DEBUG __aD.58860 => D#584ptD.0
  # DEBUG D#583ptD.0 => D#584ptD.0
  # DEBUG D#581ptD.0 => D#583ptD.0
  # DEBUG D#582ptD.0 => 0B
  # DEBUG __nD.58864 => 1
  # DEBUG thisD.58862 => D#581ptD.0
  # DEBUG D.58863 => D#582ptD.0
  # DEBUG D#580ptD.0 => D#581ptD.0
  # DEBUG D#579ptD.0 => D#580ptD.0
  # DEBUG thisD.54478 => D#579ptD.0
  [LP 6] # .MEM_223 = VDEF <.MEM_217>
  # PT = { D.58967 } (escaped heap)
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _124 = _ZnwmD.2764 (72);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 (EH,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 209, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __tmpD.58858 => _124
  # DEBUG D#500ptD.0 => D#588ptD.0
  # DEBUG __nodeD.58892 => _124
  # DEBUG __xD.58893 => &D.58760
  # DEBUG thisD.58894 => D#500ptD.0
  # DEBUG D#499ptD.0 => D#500ptD.0
  # DEBUG D#498ptD.0 => D#500ptD.0
  # DEBUG thisD.58903 => _124
  # DEBUG D#1109ptD.0 => &_124->_M_value_fieldD.38961
  # DEBUG __rD.48192 => D#1109ptD.0
  # DEBUG D#475ptD.0 => D#498ptD.0
  # DEBUG thisD.52915 => D#475ptD.0
  # DEBUG D#474ptD.0 => D#475ptD.0
  # DEBUG thisD.52546 => D#474ptD.0
  # DEBUG thisD.52538 => NULL
  # DEBUG D.52539 => NULL
  # DEBUG thisD.52536 => NULL
  # DEBUG __pD.58906 => D#1109ptD.0
  # DEBUG __valD.58905 => &D.58760
  # DEBUG thisD.58904 => D#497ptD.0
  # DEBUG D#14ptD.0 => 40
  # DEBUG __pD.52849 => D#1109ptD.0
  # DEBUG D.52850 => D#14ptD.0
  # DEBUG thisD.58908 => D#1109ptD.0
  # DEBUG D.58907 => &D.58760
  # DEBUG D#496ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.58910 => D#1109ptD.0
  # DEBUG __strD.58909 => D#496ptD.0
  # DEBUG thisD.50825 => D#496ptD.0
  # DEBUG D#380ptD.0 => &D#496ptD.0->_M_dataplusD.11519
  # DEBUG thisD.58911 => D#1109ptD.0
  # PT = { D.58967 } (escaped heap)
  _144 = &MEM[(struct basic_stringD.2844 *)_124 + 32B].D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)D#1109ptD.0]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.58914 => D#381ptD.0
  # DEBUG __datD.58913 => _144
  # DEBUG __aD.58912 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_224 = VDEF <.MEM_223>
  MEM[(struct _Alloc_hiderD.11518 *)_124 + 32B]._M_pD.11525 = _144;
  # VUSE <.MEM_224>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _145 = MEM[(charD.10 * *)&D.58760];
  # DEBUG D#3ptD.0 => D#496ptD.0
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_224>
  _146 = MEM[(long unsigned intD.14 *)&D.58760 + 8B];
  # DEBUG D#1ptD.0 => D#496ptD.0
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _147 = _145 + _146;
  # DEBUG D#3ptD.0 => D#496ptD.0
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.58917 => D#1109ptD.0
  # DEBUG __begD.58916 => _145
  # DEBUG __endD.58915 => _147
  # DEBUG thisD.58921 => D#1109ptD.0
  # DEBUG __begD.58920 => _145
  # DEBUG __endD.58919 => _147
  # DEBUG thisD.58926 => D#1109ptD.0
  # DEBUG __begD.58927 => _145
  # DEBUG __endD.58928 => _147
  # DEBUG __ptrD.51229 => _145
  # RANGE [0, 1]
  _272 = _147 != 0B;
  # RANGE [0, 1]
  _269 = _145 == 0B;
  # RANGE [0, 1]
  _268 = _269 & _272;
  if (_268 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;
;;    succ:       74 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                76 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 48, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       76 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.58967 } (escaped heap)
  _142 = &_124->_M_value_fieldD.38961;
  [LP 7] # .MEM_226 = VDEF <.MEM_225>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _155 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_142, &__dnewD.58929, 0);
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 (EH,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 48, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => D#1109ptD.0
  # DEBUG __pD.58948 => _155
  # DEBUG thisD.58947 => D#6ptD.0
  # .MEM_227 = VDEF <.MEM_226>
  MEM[(charD.10 * *)_124 + 32B] = _155;
  # VUSE <.MEM_227>
  __dnew.111_156 = __dnewD.58929;
  # DEBUG D#7ptD.0 => D#1109ptD.0
  # DEBUG __capacityD.58950 => __dnew.111_156
  # DEBUG thisD.58949 => D#7ptD.0
  # .MEM_228 = VDEF <.MEM_227>
  MEM[(size_typeD.11502 *)_124 + 48B] = __dnew.111_156;
  # DEBUG D#3ptD.0 => D#1109ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58932 => _155
  # DEBUG __k1D.58931 => _145
  # DEBUG __k2D.58930 => _147
  # DEBUG __dD.58935 => _155
  # DEBUG __sD.58934 => _145
  # DEBUG __nD.58933 => _146
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 116, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       76 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => D#1109ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58932 => _144
  # DEBUG __k1D.58931 => _145
  # DEBUG __k2D.58930 => _147
  # DEBUG __dD.58935 => _144
  # DEBUG __sD.58934 => _145
  # DEBUG __nD.58933 => _146
  if (_146 == 1)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [53.5%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [46.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [53.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_225>
  _158 = MEM[(const char_typeD.6439 &)_145];
  # DEBUG D#13ptD.0 => _145
  # DEBUG __c1D.58940 => _144
  # DEBUG __c2D.58939 => D#13ptD.0
  # .MEM_229 = VDEF <.MEM_225>
  MEM[(char_typeD.6439 &)_144] = _158;
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [46.5%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.58760 D.58967 } (escaped heap)
  # _292 = PHI <_144(52), _155(51)>
  # .MEM_288 = PHI <.MEM_225(52), .MEM_228(51)>
  # DEBUG D#3ptD.0 => D#1109ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58932 => _292
  # DEBUG __k1D.58931 => _145
  # DEBUG __k2D.58930 => _147
  # DEBUG __dD.58935 => _292
  # DEBUG __sD.58934 => _145
  # DEBUG __nD.58933 => _146
  # DEBUG __s1D.58938 => _292
  # DEBUG __s2D.58937 => _145
  # DEBUG __nD.58936 => _146
  # .MEM_230 = VDEF <.MEM_288>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  memcpyD.992 (_292, _145, _146);
  # VUSE <.MEM_230>
  pretmp_169 = __dnewD.58929;
  # VUSE <.MEM_230>
  pretmp_78 = MEM[(charD.10 * *)_124 + 32B];
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 209, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_171 = PHI <.MEM_229(53), .MEM_230(54)>
  # prephitmp_73 = PHI <_146(53), pretmp_169(54)>
  # PT = nonlocal escaped null { D.58760 D.58967 } (escaped heap)
  # prephitmp_96 = PHI <_144(53), pretmp_78(54)>
  # DEBUG D#1096ptD.0 => __dnewD.58929
  # DEBUG thisD.58942 => D#1109ptD.0
  # DEBUG __nD.58941 => D#1096ptD.0
  # DEBUG D#5ptD.0 => D#1109ptD.0
  # DEBUG __lengthD.58944 => D#1096ptD.0
  # DEBUG thisD.58943 => D#5ptD.0
  # .MEM_231 = VDEF <.MEM_171>
  MEM[(size_typeD.11502 *)_124 + 40B] = prephitmp_73;
  # DEBUG D#3ptD.0 => D#1109ptD.0
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.58760 D.58967 } (escaped heap)
  _161 = prephitmp_96 + prephitmp_73;
  # DEBUG __c1D.58946 => _161
  # DEBUG __c2D.58945 => D#13ptD.0
  # .MEM_232 = VDEF <.MEM_231>
  MEM[(char_typeD.6439 &)_161] = 0;
  # .MEM_233 = VDEF <.MEM_232>
  __dnewD.58929 ={v} {CLOBBER};
  # VUSE <.MEM_233>
  _148 = D.58760.secondD.35722;
  # .MEM_234 = VDEF <.MEM_233>
  MEM[(struct pairD.33117 *)_124 + 32B].secondD.35722 = _148;
  # DEBUG thisD.52945 => NULL
  # DEBUG thisD.52919 => NULL
  # DEBUG __zD.58853 => _124
  # RANGE [0, 1] NONZERO 1
  _127 = (intD.9) __insert_left_126;
  # .MEM_240 = VDEF <.MEM_234>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_D.27902 (_127, _124, __res$second_107, __pos_23);
  # VUSE <.MEM_240>
  _128 = MEM[(struct _Rb_treeD.33337 *)this_4(D) + 88B]._M_implD.33415._M_node_countD.33571;
  # RANGE [0, 18446744073709551615]
  _129 = _128 + 1;
  # .MEM_241 = VDEF <.MEM_240>
  MEM[(struct _Rb_treeD.33337 *)this_4(D) + 88B]._M_implD.33415._M_node_countD.33571 = _129;
  # DEBUG thisD.54634 => NULL
  # DEBUG __xD.54633 => _124
  goto <bb 60>;
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       50 (EH,EXECUTABLE)
<L10>: [LP 7]
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_226(56), .MEM_235(75)>
<L6>:
  # VUSE <.MEM_172>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _149 = __builtin_eh_pointerD.2738 (10);
  # .MEM_236 = VDEF <.MEM_172>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  __cxa_begin_catchD.14644 (_149);
  # DEBUG D#314ptD.0 => D#499ptD.0
  # DEBUG __pD.58896 => _124
  # DEBUG thisD.58895 => D#314ptD.0
  # DEBUG D#313ptD.0 => D#314ptD.0
  # DEBUG thisD.49858 => D#313ptD.0
  # DEBUG D#312ptD.0 => 1
  # DEBUG __pD.58899 => _124
  # DEBUG __aD.58897 => D#311ptD.0
  # DEBUG __nD.58898 => D#312ptD.0
  # DEBUG D#310ptD.0 => D#312ptD.0
  # DEBUG D#309ptD.0 => D#311ptD.0
  # DEBUG D#307ptD.0 => D#309ptD.0
  # DEBUG D#308ptD.0 => D#310ptD.0
  # DEBUG __pD.58902 => _124
  # DEBUG thisD.58900 => D#307ptD.0
  # DEBUG D.58901 => D#308ptD.0
  # .MEM_237 = VDEF <.MEM_236>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZdlPvD.2766 (_124);
  [LP 5] # .MEM_238 = VDEF <.MEM_237>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  __cxa_rethrowD.40506 ();
;;    succ:       58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 (EH,EXECUTABLE)
<L8>: [LP 5]
  [MNT 12] # .MEM_239 = VDEF <.MEM_238>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  __cxa_end_catchD.14643 ();
  [LP 3] resx 11
;;    succ:       59 (EH,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 (EH,EXECUTABLE)
<L11>: [LP 3]
  goto <bb 65> (<L5>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [40.3%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_174 = PHI <.MEM_241(55), .MEM_217(41)>
  # PT = nonlocal escaped { D.58967 } (escaped heap)
  # SR.1315_252 = PHI <_124(55), __res$first_106(41)>
  # DEBUG D#598ptD.0 => {CLOBBER}
  # DEBUG __res$firstD.58816 => D#598ptD.0
  # DEBUG D#599ptD.0 => {CLOBBER}
  # DEBUG __res$secondD.58815 => D#599ptD.0
  # DEBUG __i$_M_nodeD.58757 => SR.1315_252
  # DEBUG thisD.58705 => &D.58760
  # DEBUG D#188ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.58706 => D#188ptD.0
  # DEBUG thisD.58707 => D#188ptD.0
  # DEBUG thisD.58716 => D#188ptD.0
  # VUSE <.MEM_174>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _68 = MEM[(charD.10 * *)&D.58760];
  # DEBUG D#3ptD.0 => D#188ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58717 => D#188ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541 != _68)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       60 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#188ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58709 => D#188ptD.0
  # DEBUG __sizeD.58708 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#188ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#188ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#188ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58712 => _68
  # DEBUG __aD.58710 => D#181ptD.0
  # DEBUG __nD.58711 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58715 => _68
  # DEBUG thisD.58713 => D#177ptD.0
  # DEBUG D.58714 => D#178ptD.0
  # .MEM_253 = VDEF <.MEM_174>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       60 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_175 = PHI <.MEM_174(60), .MEM_253(61)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#188ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58718 => D#187ptD.0
  # DEBUG thisD.58719 => D#187ptD.0
  # DEBUG thisD.58720 => D#187ptD.0
  # .MEM_259 = VDEF <.MEM_175>
  D.58760 ={v} {CLOBBER};
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [78.3%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped { D.58967 } (escaped heap)
  # __pos_69 = PHI <__pos_313(32), SR.1315_252(62), __pos_313(35)>
  # .MEM_176 = PHI <.MEM_95(32), .MEM_259(62), .MEM_95(35)>
  # DEBUG __i$_M_nodeD.58757 => __pos_69
  # DEBUG thisD.54770 => &__iD.58688
  # DEBUG thisD.54771 => __pos_69
  # DEBUG D#603ptD.0 => &MEM[(struct _Rb_tree_nodeD.33341 *)__pos_69]._M_value_fieldD.38961
  # DEBUG __rD.48192 => D#603ptD.0
  # DEBUG D#605ptD.0 => {CLOBBER}
  # DEBUG __i$_M_nodeD.58757 => D#605ptD.0
  # .MEM_12 = VDEF <.MEM_176>
  MEM[(mapped_typeD.33122 &)__pos_69 + 64] = value_11(D);
  # DEBUG D#608ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.54829 => D#608ptD.0
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       48 (EH,EXECUTABLE)
<L9>: [LP 6]
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_177 = PHI <.MEM_239(59), .MEM_223(64)>
<L5>:
  # DEBUG thisD.58689 => &D.58760
  # DEBUG D#188ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.58690 => D#188ptD.0
  # DEBUG thisD.58691 => D#188ptD.0
  # DEBUG thisD.58700 => D#188ptD.0
  # VUSE <.MEM_177>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _71 = MEM[(charD.10 * *)&D.58760];
  # DEBUG D#3ptD.0 => D#188ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58701 => D#188ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541 != _71)
    goto <bb 66>;
  else
    goto <bb 67>;
;;    succ:       66 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#188ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58693 => D#188ptD.0
  # DEBUG __sizeD.58692 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#188ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#188ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#188ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58696 => _71
  # DEBUG __aD.58694 => D#181ptD.0
  # DEBUG __nD.58695 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58699 => _71
  # DEBUG thisD.58697 => D#177ptD.0
  # DEBUG D.58698 => D#178ptD.0
  # .MEM_244 = VDEF <.MEM_177>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZdlPvD.2766 (_71);
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_178 = PHI <.MEM_177(65), .MEM_244(66)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#188ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58702 => D#187ptD.0
  # DEBUG thisD.58703 => D#187ptD.0
  # DEBUG thisD.58704 => D#187ptD.0
  # .MEM_250 = VDEF <.MEM_178>
  D.58760 ={v} {CLOBBER};
  resx 9
;;    succ:      

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L3>: [LP 2]
  # DEBUG thisD.54814 => &D.35772
  # DEBUG thisD.54815 => &D.35772
  # DEBUG thisD.54824 => &D.35772
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  _3 = MEM[(charD.10 * *)&D.35772];
  # DEBUG D#3ptD.0 => &D.35772
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.54825 => &D.35772
  if (&D.35772.D.11539._M_local_bufD.11541 != _3)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35772.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.54817 => &D.35772
  # DEBUG __sizeD.54816 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35772
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35772
  # DEBUG D#183ptD.0 => &D.35772._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.54820 => _3
  # DEBUG __aD.54818 => D#181ptD.0
  # DEBUG __nD.54819 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.54823 => _3
  # DEBUG thisD.54821 => D#177ptD.0
  # DEBUG D.54822 => D#178ptD.0
  # .MEM_18 = VDEF <.MEM_14>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZdlPvD.2766 (_3);
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       68 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
  # DEBUG D#187ptD.0 => &D.35772._M_dataplusD.11519
  # DEBUG thisD.54826 => D#187ptD.0
  # DEBUG thisD.54827 => D#187ptD.0
  # DEBUG thisD.54828 => D#187ptD.0
  # .MEM_15 = VDEF <.MEM_1>
  D.35772 ={v} {CLOBBER};
  resx 6
;;    succ:      

;;   basic block 71, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       35 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_95(35), .MEM_95(30), .MEM_132(77)>
  # PT = nonlocal escaped 
  # __pos_162 = PHI <__pos_313(35), __pos_313(30), __pos_23(77)>
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       36 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58844 => D#1099ptD.0
  # DEBUG __lastD.58843 => _66
  # DEBUG D#393ptD.0 => &__firstD.58844
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58846 => D#1099ptD.0
  # DEBUG __lastD.58845 => _66
  # .MEM_205 = VDEF <.MEM_204>
  __dnewD.58821 = pretmp_19;
  if (pretmp_19 > 15)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       36 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_260 = VDEF <.MEM_204>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 74, loop depth 0, count 0, freq 21, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 178, should be 21
;;    prev block 73, next block 75, flags: (NEW, REACHABLE)
;;    pred:       49 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 4] # .MEM_235 = VDEF <.MEM_224>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       75 (EH,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW)
;;    pred:       74 (EH,EXECUTABLE)
<L12>: [LP 4]
  goto <bb 57> (<L6>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 164, maybe hot
;;   Invalid sum of incoming frequencies 31, should be 164
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       49 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58952 => _145
  # DEBUG __lastD.58951 => _147
  # DEBUG D#393ptD.0 => &__firstD.58952
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58954 => _145
  # DEBUG __lastD.58953 => _147
  # .MEM_225 = VDEF <.MEM_224>
  __dnewD.58929 = _146;
  if (_146 > 15)
    goto <bb 50>;
  else
    goto <bb 52>;
;;    succ:       50 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 76, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58676 => NULL
  # DEBUG D#219ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49025 => D#219ptD.0
  # DEBUG thisD.54807 => &match.41D.35716
  # DEBUG __itD.54808 => &D.35712
  # DEBUG match$_M_nodeD.54829 => __pos_312
  # DEBUG D#607ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54803 => D#607ptD.0
  # DEBUG D#56ptD.0 => &D#607ptD.0->_M_tD.33338
  # DEBUG thisD.54804 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54801 => &D.35771
  # DEBUG __itD.54802 => &D.35717
  # DEBUG thisD.54798 => &matchD.35598
  # DEBUG __xD.54799 => &D.35771
  # DEBUG D#219ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49025 => D#219ptD.0
  # DEBUG thisD.54807 => &match.41D.35716
  # DEBUG __itD.54808 => &D.35712
  # DEBUG match$_M_nodeD.54829 => __pos_312
  # DEBUG D#607ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54803 => D#607ptD.0
  # DEBUG D#56ptD.0 => &D#607ptD.0->_M_tD.33338
  # DEBUG thisD.54804 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54801 => &D.35771
  # DEBUG __itD.54802 => &D.35717
  # DEBUG thisD.54798 => &matchD.35598
  # DEBUG __xD.54799 => &D.35771
  # DEBUG D#1062ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.58686 => D#1062ptD.0
  # DEBUG __kD.58687 => field_5(D)
  # DEBUG thisD.58751 => D#1062ptD.0
  # DEBUG __xD.58750 => field_5(D)
  # DEBUG D#1108ptD.0 => &MEM[(struct mapD.33119 *)this_4(D) + 88B]._M_tD.33338
  # DEBUG thisD.58762 => D#1108ptD.0
  # DEBUG __kD.58763 => field_5(D)
  # DEBUG thisD.58764 => D#1108ptD.0
  # DEBUG D#36ptD.0 => D#1108ptD.0
  # DEBUG thisD.49048 => D#36ptD.0
  # DEBUG D#218ptD.0 => D#1108ptD.0
  # DEBUG __xD.58768 => NULL
  # DEBUG __yD.58767 => NULL
  # DEBUG __kD.58766 => field_5(D)
  # DEBUG __yD.58767 => __pos_23
  # DEBUG __xD.58768 => __pos_24
  if (__pos_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;
;;    succ:       71 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_4(D) + 104B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 104
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_4(D) + 104B]
Creating dr for MEM[(long unsigned int *)field_5(D) + 8B]
analyze_innermost: success.
	base_address: field_5(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)field_5(D) + 8B]
Creating dr for MEM[(char * *)field_5(D)]
analyze_innermost: success.
	base_address: field_5(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)field_5(D)]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
Applying pattern match.pd:397, generic-match.c:4039
Creating dr for MEM[(long unsigned int *)__pos_312 + 40B]
analyze_innermost: success.
	base_address: __pos_312
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__pos_312 + 40B]
Creating dr for MEM[(char * *)__pos_312 + 32B]
analyze_innermost: success.
	base_address: __pos_312
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__pos_312 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
Creating dr for MEM[(long unsigned int *)__pos_313 + 40B]
analyze_innermost: success.
	base_address: __pos_313
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__pos_313 + 40B]
Creating dr for MEM[(char * *)__pos_313 + 32B]
analyze_innermost: success.
	base_address: __pos_313
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__pos_313 + 32B]
Creating dr for MEM[(mapped_type &)__pos_69 + 64]
analyze_innermost: success.
	base_address: __pos_69
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(mapped_type &)__pos_69 + 64]
Creating dr for MEM[(struct _Alloc_hider *)&D.58760]._M_p
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.58760]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(const char_type &)pretmp_21]
analyze_innermost: success.
	base_address: pretmp_21
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)pretmp_21]
Creating dr for MEM[(char_type &)&D.58760 + 16]
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&D.58760 + 16]
Creating dr for MEM[(size_type *)&D.58760 + 8B]
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.58760 + 8B]
Creating dr for MEM[(char_type &)_119]
analyze_innermost: success.
	base_address: prephitmp_179 + prephitmp_180
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_119]
Creating dr for MEM[(long unsigned int *)&D.58760 + 8B]
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&D.58760 + 8B]
Creating dr for MEM[(long unsigned int *)__res$second_107 + 40B]
analyze_innermost: success.
	base_address: __res$second_107
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__res$second_107 + 40B]
Creating dr for MEM[(char * *)__res$second_107 + 32B]
analyze_innermost: success.
	base_address: __res$second_107
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__res$second_107 + 32B]
Creating dr for MEM[(char * *)&D.58760]
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58760]
Creating dr for MEM[(struct _Alloc_hider *)_124 + 32B]._M_p
analyze_innermost: success.
	base_address: _124
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)_124 + 32B]
	Access function 0: 0
Creating dr for MEM[(char * *)&D.58760]
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58760]
Creating dr for MEM[(long unsigned int *)&D.58760 + 8B]
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&D.58760 + 8B]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)_124 + 32B]
analyze_innermost: success.
	base_address: _124
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)_124 + 32B]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)_124 + 48B]
analyze_innermost: success.
	base_address: _124
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)_124 + 48B]
Creating dr for MEM[(const char_type &)_145]
analyze_innermost: success.
	base_address: _145
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)_145]
Creating dr for MEM[(char_type &)_144]
analyze_innermost: success.
Applying pattern match.pd:397, generic-match.c:4039
	base_address: &MEM[(struct basic_string *)_124 + 32B]
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_144]
Creating dr for MEM[(size_type *)_124 + 40B]
analyze_innermost: success.
	base_address: _124
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)_124 + 40B]
Creating dr for MEM[(char_type &)_161]
analyze_innermost: success.
	base_address: prephitmp_96 + prephitmp_73
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_161]
Creating dr for MEM[(char * *)&D.58760]
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58760]
Creating dr for MEM[(char * *)&D.58760]
analyze_innermost: success.
	base_address: &D.58760
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.58760]
Creating dr for MEM[(char * *)&D.35772]
analyze_innermost: success.
	base_address: &D.35772
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.35772]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:11)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:87, LOOPS:2, CONDITIONS:38, STMTS:931)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG this => &match
    # DEBUG match$_M_node => 0B
    # DEBUG D#606 => &this_4(D)->_int_map
    # DEBUG this => D#606
    # DEBUG __x => field_5(D)
    # DEBUG D#1059 => &MEM[(struct map *)this_4(D) + 88B]._M_t
    # DEBUG this => D#1059
    # DEBUG __k => field_5(D)
    # DEBUG this => D#1059
    __pos_23 = &MEM[(struct _Rb_tree *)this_4(D) + 88B]._M_impl._M_header;
    # VUSE <.MEM_2(D)>
    __pos_24 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 104B];
    # DEBUG D#36 => D#1059
    # DEBUG this => D#36
    # DEBUG D#218 => D#1059
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_5(D)
    # DEBUG __y => __pos_23
    # DEBUG __x => __pos_24
    if (__pos_24 == 0B)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 3>:
    # VUSE <.MEM_2(D)>
    pretmp_19 = MEM[(long unsigned int *)field_5(D) + 8B];
    # VUSE <.MEM_2(D)>
    pretmp_21 = MEM[(char * *)field_5(D)];
    goto <bb 7>;

  }
  bb_4 (preds = {bb_2 bb_79 bb_17 bb_19 }, succs = {bb_68 })
  {
    <bb 4>:
    # .MEM_320 = PHI <.MEM_2(D)(2), .MEM_132(79), .MEM_132(17), .MEM_132(19)>
    # DEBUG this => D#1059
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG D#219 => {CLOBBER}
    # DEBUG __j$_M_node => D#219
    # DEBUG this => &match.41
    # DEBUG __it => &D.35712
    # DEBUG match$_M_node => __pos_23
    # DEBUG D#607 => &this_4(D)->_int_map
    # DEBUG this => D#607
    # DEBUG D#56 => &D#607->_M_t
    # DEBUG this => D#56
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &D.35771
    # DEBUG __it => &D.35717
    # DEBUG this => &match
    # DEBUG __x => &D.35771
    # DEBUG D#219 => {CLOBBER}
    # DEBUG __j$_M_node => D#219
    # DEBUG this => &match.41
    # DEBUG __it => &D.35712
    # DEBUG match$_M_node => __pos_23
    # DEBUG D#607 => &this_4(D)->_int_map
    # DEBUG this => D#607
    # DEBUG D#56 => &D#607->_M_t
    # DEBUG this => D#56
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &D.35771
    # DEBUG __it => &D.35717
    # DEBUG this => &match
    # DEBUG __x => &D.35771
    # .MEM_13 = VDEF <.MEM_320>
    D.35772 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown integer field: ", field_5(D)); [return slot optimization]
    # .MEM_14 = VDEF <.MEM_13>
    Configuration::ParseError (this_4(D), &D.35772, 0);

  }
  bb_14 (preds = {bb_5 }, succs = {bb_79 })
  {
    <bb 14>:
    # __pos_312 = PHI <__pos_80(5)>

  }
  bb_79 (preds = {bb_14 }, succs = {bb_4 bb_15 })
  {
    <bb 79>:
    # DEBUG this => NULL
    # DEBUG __x => __pos_312
    # DEBUG __j$_M_node => __pos_312
    # DEBUG this => D#1059
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &__j
    # DEBUG __x => NULL
    if (__pos_23 == __pos_312)
      goto <bb 4>;
    else
      goto <bb 15>;

  }
  bb_15 (preds = {bb_79 }, succs = {bb_16 bb_19 })
  {
    <bb 15>:
    # DEBUG __x => __pos_312
    # DEBUG __x => __pos_312
    # DEBUG this => __pos_312
    # DEBUG D#152 => &MEM[(const struct _Rb_tree_node *)__pos_312]._M_value_field
    # DEBUG __r => D#152
    # DEBUG __x => D#152
    # DEBUG this => D#151
    # DEBUG D#1061 => &MEM[(const struct pair &)__pos_312 + 32].first
    # DEBUG D#220 => &MEM[(struct _Rb_tree *)D#1059]._M_impl._M_key_compare
    # DEBUG D#203 => D#220
    # DEBUG __x => field_5(D)
    # DEBUG __y => D#1061
    # DEBUG this => D#203
    # DEBUG __lhs => field_5(D)
    # DEBUG __rhs => D#1061
    # DEBUG this => field_5(D)
    # DEBUG __str => D#1061
    # DEBUG D#1105 => MEM[(long unsigned int *)field_5(D) + 8B]
    # DEBUG D#2 => field_5(D)
    # DEBUG this => D#2
    # DEBUG __size => D#1105
    # VUSE <.MEM_132>
    _47 = MEM[(long unsigned int *)__pos_312 + 40B];
    # DEBUG D#2 => D#1061
    # DEBUG this => D#2
    # DEBUG __osize => _47
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_305 = MIN_EXPR <pretmp_19, _47>;
    # DEBUG __len => D#1055
    # DEBUG this => D#1061
    # VUSE <.MEM_132>
    _50 = MEM[(char * *)__pos_312 + 32B];
    # DEBUG D#3 => D#1061
    # DEBUG this => D#3
    # DEBUG D#1104 => MEM[(char * *)field_5(D)]
    # DEBUG D#3 => field_5(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#1104
    # DEBUG __s2 => _50
    # DEBUG __n => D#1055
    # VUSE <.MEM_132>
    __r_52 = __builtin_memcmp (pretmp_21, _50, __len_305);
    # DEBUG __r => NULL
    if (__r_52 == 0)
      goto <bb 16>;
    else
      goto <bb 19>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_77 bb_17 })
  {
    <bb 16>:
    # DEBUG __n1 => D#1105
    # DEBUG __n2 => _47
    _53 = pretmp_19 - _47;
    __d_54 = (const difference_type) _53;
    # DEBUG __d => __d_54
    if (__d_54 > 2147483647)
      goto <bb 77>;
    else
      goto <bb 17>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_4 bb_18 })
  {
    <bb 17>:
    if (__d_54 < -2147483648)
      goto <bb 4>;
    else
      goto <bb 18>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    __r_55 = (int) _53;

  }
  bb_19 (preds = {bb_15 bb_18 }, succs = {bb_4 bb_77 })
  {
    <bb 19>:
    # __r_56 = PHI <__r_52(15), __r_55(18)>
    # DEBUG __r => __r_56
    # DEBUG D#1076 => {CLOBBER}
    # DEBUG __size => D#1076
    # DEBUG D#1077 => {CLOBBER}
    # DEBUG __osize => D#1077
    if (__r_56 < 0)
      goto <bb 4>;
    else
      goto <bb 77>;

  }
  bb_22 (preds = {bb_77 }, succs = {bb_23 })
  {
    <bb 22>:

  }
  bb_30 (preds = {bb_20 }, succs = {bb_78 })
  {
    <bb 30>:
    # __pos_313 = PHI <__pos_33(20)>

  }
  bb_78 (preds = {bb_30 }, succs = {bb_71 bb_31 })
  {
    <bb 78>:
    # DEBUG this => NULL
    # DEBUG __x => __pos_313
    # DEBUG __i$_M_node => __pos_313
    # DEBUG this => D#1062
    # DEBUG D#56 => &D#1062->_M_t
    # DEBUG this => D#56
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &__i
    # DEBUG __x => NULL
    if (__pos_23 == __pos_313)
      goto <bb 71>;
    else
      goto <bb 31>;

  }
  bb_31 (preds = {bb_78 }, succs = {bb_32 bb_35 })
  {
    <bb 31>:
    # DEBUG this => &__i
    # DEBUG this => __pos_313
    # DEBUG D#602 => &MEM[(struct _Rb_tree_node *)__pos_313]._M_value_field
    # DEBUG __r => D#602
    # DEBUG D#1064 => &MEM[(struct pair &)__pos_313 + 32].first
    # DEBUG D#62 => D#1062
    # DEBUG this => D#62
    # DEBUG D#61 => D#62
    # DEBUG D#60 => &D#61->_M_t
    # DEBUG D#59 => D#60
    # DEBUG this => D#59
    # DEBUG __x => field_5(D)
    # DEBUG __y => D#1064
    # DEBUG this => D#203
    # DEBUG __lhs => field_5(D)
    # DEBUG __rhs => D#1064
    # DEBUG this => field_5(D)
    # DEBUG __str => D#1064
    # DEBUG D#1101 => MEM[(long unsigned int *)field_5(D) + 8B]
    # DEBUG D#2 => field_5(D)
    # DEBUG this => D#2
    # DEBUG __size => D#1101
    # VUSE <.MEM_95>
    _94 = MEM[(long unsigned int *)__pos_313 + 40B];
    # DEBUG D#2 => D#1064
    # DEBUG this => D#2
    # DEBUG __osize => _94
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_301 = MIN_EXPR <pretmp_19, _94>;
    # DEBUG __len => D#1057
    # DEBUG this => D#1064
    # VUSE <.MEM_95>
    _97 = MEM[(char * *)__pos_313 + 32B];
    # DEBUG D#3 => D#1064
    # DEBUG this => D#3
    # DEBUG D#1100 => MEM[(char * *)field_5(D)]
    # DEBUG D#3 => field_5(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#1100
    # DEBUG __s2 => _97
    # DEBUG __n => D#1057
    # VUSE <.MEM_95>
    __r_99 = __builtin_memcmp (pretmp_21, _97, __len_301);
    # DEBUG __r => NULL
    if (__r_99 == 0)
      goto <bb 32>;
    else
      goto <bb 35>;

  }
  bb_32 (preds = {bb_31 }, succs = {bb_63 bb_33 })
  {
    <bb 32>:
    # DEBUG __n1 => D#1101
    # DEBUG __n2 => _94
    _100 = pretmp_19 - _94;
    __d_101 = (const difference_type) _100;
    # DEBUG __d => __d_101
    if (__d_101 > 2147483647)
      goto <bb 63>;
    else
      goto <bb 33>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_36 bb_34 })
  {
    <bb 33>:
    if (__d_101 < -2147483648)
      goto <bb 36>;
    else
      goto <bb 34>;

  }
  bb_34 (preds = {bb_33 }, succs = {bb_35 })
  {
    <bb 34>:
    __r_102 = (int) _100;

  }
  bb_35 (preds = {bb_31 bb_34 }, succs = {bb_71 bb_63 })
  {
    <bb 35>:
    # __r_103 = PHI <__r_99(31), __r_102(34)>
    # DEBUG __r => __r_103
    # DEBUG D#1088 => {CLOBBER}
    # DEBUG __size => D#1088
    # DEBUG D#1089 => {CLOBBER}
    # DEBUG __osize => D#1089
    if (__r_103 < 0)
      goto <bb 71>;
    else
      goto <bb 63>;

  }
  bb_36 (preds = {bb_33 bb_84 }, succs = {bb_73 bb_72 })
  {
    <bb 36>:
    # .MEM_293 = PHI <.MEM_95(33), .MEM_60(84)>
    # __pos_133 = PHI <__pos_313(33), __pos_162(84)>
    # DEBUG this => &D.58760
    # DEBUG __a => field_5(D)
    # DEBUG __b => NULL
    # DEBUG this => &D.58760.first
    # DEBUG __str => field_5(D)
    # DEBUG this => field_5(D)
    # DEBUG D#380 => &MEM[(const struct basic_string *)field_5(D)]._M_dataplus
    # DEBUG this => &D.58760.first
    # DEBUG D#381 => &MEM[(struct basic_string *)&D.58760]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_204 = VDEF <.MEM_293>
    MEM[(struct _Alloc_hider *)&D.58760]._M_p = &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf;
    # DEBUG D#1099 => MEM[(char * *)field_5(D)]
    # DEBUG D#3 => field_5(D)
    # DEBUG this => D#3
    # DEBUG D#1098 => MEM[(long unsigned int *)field_5(D) + 8B]
    # DEBUG D#1 => field_5(D)
    # DEBUG this => D#1
    _66 = pretmp_21 + pretmp_19;
    # DEBUG D#3 => field_5(D)
    # DEBUG this => D#3
    # DEBUG this => &D.58760.first
    # DEBUG __beg => D#1099
    # DEBUG __end => _66
    # DEBUG this => &D.58760.first
    # DEBUG __beg => D#1099
    # DEBUG __end => _66
    # DEBUG this => &D.58760.first
    # DEBUG __beg => D#1099
    # DEBUG __end => _66
    # DEBUG __ptr => D#1099
    _92 = _66 != 0B;
    _104 = pretmp_21 == 0B;
    _296 = _92 & _104;
    if (_296 != 0)
      goto <bb 73>;
    else
      goto <bb 72>;

  }
  bb_37 (preds = {bb_72 }, succs = {bb_40 })
  {
    <bb 37>:
    # .MEM_206 = VDEF <.MEM_205>
    _113 = std::__cxx11::basic_string<char>::_M_create (&D.58760.first, &__dnew, 0);
    # DEBUG D#6 => &D.58760.first
    # DEBUG __p => _113
    # DEBUG this => D#6
    # .MEM_207 = VDEF <.MEM_206>
    MEM[(char * *)&D.58760] = _113;
    # VUSE <.MEM_207>
    __dnew.111_114 = __dnew;
    # DEBUG D#7 => &D.58760.first
    # DEBUG __capacity => __dnew.111_114
    # DEBUG this => D#7
    # .MEM_208 = VDEF <.MEM_207>
    MEM[(size_type *)&D.58760 + 16B] = __dnew.111_114;
    # DEBUG D#3 => &D.58760.first
    # DEBUG this => D#3
    # DEBUG __p => _113
    # DEBUG __k1 => D#1099
    # DEBUG __k2 => _66
    # DEBUG __d => _113
    # DEBUG __s => D#1099
    # DEBUG __n => D#1098
    goto <bb 40>;

  }
  bb_38 (preds = {bb_72 }, succs = {bb_39 bb_40 })
  {
    <bb 38>:
    # DEBUG D#3 => &D.58760.first
    # DEBUG this => D#3
    # DEBUG __p => &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf
    # DEBUG __k1 => D#1099
    # DEBUG __k2 => _66
    # DEBUG __d => &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf
    # DEBUG __s => D#1099
    # DEBUG __n => D#1098
    if (pretmp_19 == 1)
      goto <bb 39>;
    else
      goto <bb 40>;

  }
  bb_39 (preds = {bb_38 }, succs = {bb_41 })
  {
    <bb 39>:
    # VUSE <.MEM_205>
    _116 = MEM[(const char_type &)pretmp_21];
    # DEBUG D#13 => D#1099
    # DEBUG __c1 => &MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf
    # DEBUG __c2 => D#13
    # .MEM_209 = VDEF <.MEM_205>
    MEM[(char_type &)&D.58760 + 16] = _116;
    goto <bb 41>;

  }
  bb_40 (preds = {bb_38 bb_37 }, succs = {bb_41 })
  {
    <bb 40>:
    # _173 = PHI <&MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf(38), _113(37)>
    # .MEM_290 = PHI <.MEM_205(38), .MEM_208(37)>
    # DEBUG D#3 => &D.58760.first
    # DEBUG this => D#3
    # DEBUG __p => _173
    # DEBUG __k1 => D#1099
    # DEBUG __k2 => _66
    # DEBUG __d => _173
    # DEBUG __s => D#1099
    # DEBUG __n => D#1098
    # DEBUG __s1 => _173
    # DEBUG __s2 => D#1099
    # DEBUG __n => D#1098
    # .MEM_210 = VDEF <.MEM_290>
    __builtin_memcpy (_173, pretmp_21, pretmp_19);
    # VUSE <.MEM_210>
    pretmp_181 = __dnew;
    # VUSE <.MEM_210>
    pretmp_165 = MEM[(char * *)&D.58760];

  }
  bb_41 (preds = {bb_39 bb_40 }, succs = {bb_42 bb_60 })
  {
    <bb 41>:
    # .MEM_168 = PHI <.MEM_209(39), .MEM_210(40)>
    # prephitmp_180 = PHI <pretmp_19(39), pretmp_181(40)>
    # prephitmp_179 = PHI <&MEM[(struct basic_string *)&D.58760].D.11539._M_local_buf(39), pretmp_165(40)>
    # DEBUG D#1097 => __dnew
    # DEBUG this => &D.58760.first
    # DEBUG __n => D#1097
    # DEBUG D#5 => &D.58760.first
    # DEBUG __length => D#1097
    # DEBUG this => D#5
    # .MEM_211 = VDEF <.MEM_168>
    MEM[(size_type *)&D.58760 + 8B] = prephitmp_180;
    # DEBUG D#3 => &D.58760.first
    # DEBUG this => D#3
    _119 = prephitmp_179 + prephitmp_180;
    # DEBUG __c1 => _119
    # DEBUG __c2 => D#13
    # .MEM_212 = VDEF <.MEM_211>
    MEM[(char_type &)_119] = 0;
    # .MEM_213 = VDEF <.MEM_212>
    __dnew ={v} {CLOBBER};
    # .MEM_214 = VDEF <.MEM_213>
    D.58760.second = 0;
    # DEBUG this => D#1062
    # DEBUG __position$_M_node => __pos_133
    # DEBUG __x => &D.58760
    # DEBUG this => NULL
    # DEBUG __it => &__position
    # DEBUG this => D#1108
    # DEBUG __pos => __pos_133
    # DEBUG __x => &D.58760
    # DEBUG this => &__an
    # DEBUG __t => D#1108
    # DEBUG __an$_M_t => D#1108
    # DEBUG D#601 => &__an
    # DEBUG this => D#1108
    # .MEM_216 = VDEF <.MEM_214>
    MEM[(struct _Rb_tree_const_iterator *)&__position] = __pos_133;
    # DEBUG __v => &D.58760
    # DEBUG __node_gen => D#601
    # DEBUG D#600 => D#601
    # DEBUG __x => &D.58760
    # DEBUG this => D#151
    _58 = &MEM[(struct map *)this_4(D) + 88B]._M_t;
    # .MEM_217 = VDEF <.MEM_216>
    __res = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::_M_get_insert_hint_unique_pos (_58, __position, &D.58760.first);
    # VUSE <.MEM_217>
    __res$first_106 = MEM[(struct pair *)&__res];
    # DEBUG __res$first => __res$first_106
    # VUSE <.MEM_217>
    __res$second_107 = MEM[(struct pair *)&__res + 8B];
    # DEBUG __res$second => __res$second_107
    if (__res$second_107 != 0B)
      goto <bb 42>;
    else
      goto <bb 60>;

  }
  bb_42 (preds = {bb_41 }, succs = {bb_48 bb_43 })
  {
    <bb 42>:
    # DEBUG D#595 => D#600
    # DEBUG this => D#1108
    # DEBUG __x => __res$first_106
    # DEBUG __p => __res$second_107
    # DEBUG __v => &D.58760
    # DEBUG __node_gen => D#595
    # DEBUG D#594 => D#595
    # DEBUG this => D#1108
    _294 = __pos_23 == __res$second_107;
    _27 = __res$first_106 != 0B;
    _264 = _27 | _294;
    if (_264 != 0)
      goto <bb 48>;
    else
      goto <bb 43>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 bb_47 })
  {
    <bb 43>:
    # DEBUG __x => __res$second_107
    # DEBUG __x => __res$second_107
    # DEBUG this => __res$second_107
    # DEBUG D#152 => &MEM[(const struct _Rb_tree_node *)__res$second_107]._M_value_field
    # DEBUG __r => D#152
    # DEBUG __x => D#152
    # DEBUG this => D#151
    # DEBUG D#1065 => &MEM[(const struct pair &)__res$second_107 + 32].first
    # DEBUG __x => &D.58760
    # DEBUG this => D#151
    # DEBUG D#593 => &MEM[(struct _Rb_tree *)D#1108]._M_impl._M_key_compare
    # DEBUG D#203 => D#593
    # DEBUG __x => NULL
    # DEBUG __y => D#1065
    # DEBUG this => D#203
    # DEBUG __lhs => NULL
    # DEBUG __rhs => D#1065
    # DEBUG this => &D.58760.first
    # DEBUG __str => D#1065
    # VUSE <.MEM_217>
    _130 = MEM[(long unsigned int *)&D.58760 + 8B];
    # DEBUG D#2 => &D.58760.first
    # DEBUG this => D#2
    # DEBUG __size => _130
    # VUSE <.MEM_217>
    _131 = MEM[(long unsigned int *)__res$second_107 + 40B];
    # DEBUG D#2 => D#1065
    # DEBUG this => D#2
    # DEBUG __osize => _131
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_59 = MIN_EXPR <_130, _131>;
    # DEBUG __len => D#1058
    # DEBUG this => D#1065
    # VUSE <.MEM_217>
    _134 = MEM[(char * *)__res$second_107 + 32B];
    # DEBUG D#3 => D#1065
    # DEBUG this => D#3
    # VUSE <.MEM_217>
    _135 = MEM[(char * *)&D.58760];
    # DEBUG D#3 => &D.58760.first
    # DEBUG this => D#3
    # DEBUG __s1 => _135
    # DEBUG __s2 => _134
    # DEBUG __n => D#1058
    # VUSE <.MEM_217>
    __r_136 = __builtin_memcmp (_135, _134, __len_59);
    # DEBUG __r => NULL
    if (__r_136 == 0)
      goto <bb 44>;
    else
      goto <bb 47>;

  }
  bb_44 (preds = {bb_43 }, succs = {bb_48 bb_45 })
  {
    <bb 44>:
    # DEBUG __n1 => _130
    # DEBUG __n2 => _131
    _137 = _130 - _131;
    __d_138 = (const difference_type) _137;
    # DEBUG __d => __d_138
    if (__d_138 > 2147483647)
      goto <bb 48>;
    else
      goto <bb 45>;

  }
  bb_45 (preds = {bb_44 }, succs = {bb_48 bb_46 })
  {
    <bb 45>:
    if (__d_138 < -2147483648)
      goto <bb 48>;
    else
      goto <bb 46>;

  }
  bb_46 (preds = {bb_45 }, succs = {bb_47 })
  {
    <bb 46>:
    __r_139 = (int) _137;

  }
  bb_47 (preds = {bb_43 bb_46 }, succs = {bb_86 })
  {
    <bb 47>:
    # __r_140 = PHI <__r_136(43), __r_139(46)>

  }
  bb_86 (preds = {bb_47 }, succs = {bb_48 })
  {
    <bb 86>:
    # DEBUG __r => __r_140
    # DEBUG D#1094 => {CLOBBER}
    # DEBUG __size => D#1094
    # DEBUG D#1095 => {CLOBBER}
    # DEBUG __osize => D#1095
    __insert_left_300 = __r_140 < 0;

  }
  bb_48 (preds = {bb_44 bb_45 bb_86 bb_42 }, succs = {bb_49 bb_64 })
  {
    <bb 48>:
    # __insert_left_126 = PHI <0(44), 1(45), __insert_left_300(86), 1(42)>
    # DEBUG __insert_left => __insert_left_126
    # DEBUG D#592 => D#594
    # DEBUG __arg => &D.58760
    # DEBUG this => D#592
    # DEBUG D#591 => D#592
    # DEBUG D#590 => D#591->_M_t
    # DEBUG D#589 => D#590
    # DEBUG __x => &D.58760
    # DEBUG this => D#589
    # DEBUG D#588 => D#589
    # DEBUG D#587 => D#589
    # DEBUG D#586 => D#587
    # DEBUG this => D#586
    # DEBUG D#585 => D#586
    # DEBUG this => D#585
    # DEBUG __n => 1
    # DEBUG __a => D#584
    # DEBUG D#583 => D#584
    # DEBUG D#581 => D#583
    # DEBUG D#582 => 0B
    # DEBUG __n => 1
    # DEBUG this => D#581
    # DEBUG D.58863 => D#582
    # DEBUG D#580 => D#581
    # DEBUG D#579 => D#580
    # DEBUG this => D#579
    # .MEM_223 = VDEF <.MEM_217>
    _124 = operator new (72);

  }
  bb_49 (preds = {bb_48 }, succs = {bb_74 bb_76 })
  {
    <bb 49>:
    # DEBUG __tmp => _124
    # DEBUG D#500 => D#588
    # DEBUG __node => _124
    # DEBUG __x => &D.58760
    # DEBUG this => D#500
    # DEBUG D#499 => D#500
    # DEBUG D#498 => D#500
    # DEBUG this => _124
    # DEBUG D#1109 => &_124->_M_value_field
    # DEBUG __r => D#1109
    # DEBUG D#475 => D#498
    # DEBUG this => D#475
    # DEBUG D#474 => D#475
    # DEBUG this => D#474
    # DEBUG this => NULL
    # DEBUG D.52539 => NULL
    # DEBUG this => NULL
    # DEBUG __p => D#1109
    # DEBUG __val => &D.58760
    # DEBUG this => D#497
    # DEBUG D#14 => 40
    # DEBUG __p => D#1109
    # DEBUG D.52850 => D#14
    # DEBUG this => D#1109
    # DEBUG D.58907 => &D.58760
    # DEBUG D#496 => &D.58760.first
    # DEBUG this => D#1109
    # DEBUG __str => D#496
    # DEBUG this => D#496
    # DEBUG D#380 => &D#496->_M_dataplus
    # DEBUG this => D#1109
    _144 = &MEM[(struct basic_string *)_124 + 32B].D.11539._M_local_buf;
    # DEBUG D#381 => &MEM[(struct basic_string *)D#1109]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => _144
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_224 = VDEF <.MEM_223>
    MEM[(struct _Alloc_hider *)_124 + 32B]._M_p = _144;
    # VUSE <.MEM_224>
    _145 = MEM[(char * *)&D.58760];
    # DEBUG D#3 => D#496
    # DEBUG this => D#3
    # VUSE <.MEM_224>
    _146 = MEM[(long unsigned int *)&D.58760 + 8B];
    # DEBUG D#1 => D#496
    # DEBUG this => D#1
    _147 = _145 + _146;
    # DEBUG D#3 => D#496
    # DEBUG this => D#3
    # DEBUG this => D#1109
    # DEBUG __beg => _145
    # DEBUG __end => _147
    # DEBUG this => D#1109
    # DEBUG __beg => _145
    # DEBUG __end => _147
    # DEBUG this => D#1109
    # DEBUG __beg => _145
    # DEBUG __end => _147
    # DEBUG __ptr => _145
    _272 = _147 != 0B;
    _269 = _145 == 0B;
    _268 = _269 & _272;
    if (_268 != 0)
      goto <bb 74>;
    else
      goto <bb 76>;

  }
  bb_50 (preds = {bb_76 }, succs = {bb_51 bb_56 })
  {
    <bb 50>:
    _142 = &_124->_M_value_field;
    # .MEM_226 = VDEF <.MEM_225>
    _155 = std::__cxx11::basic_string<char>::_M_create (_142, &__dnew, 0);

  }
  bb_51 (preds = {bb_50 }, succs = {bb_54 })
  {
    <bb 51>:
    # DEBUG D#6 => D#1109
    # DEBUG __p => _155
    # DEBUG this => D#6
    # .MEM_227 = VDEF <.MEM_226>
    MEM[(char * *)_124 + 32B] = _155;
    # VUSE <.MEM_227>
    __dnew.111_156 = __dnew;
    # DEBUG D#7 => D#1109
    # DEBUG __capacity => __dnew.111_156
    # DEBUG this => D#7
    # .MEM_228 = VDEF <.MEM_227>
    MEM[(size_type *)_124 + 48B] = __dnew.111_156;
    # DEBUG D#3 => D#1109
    # DEBUG this => D#3
    # DEBUG __p => _155
    # DEBUG __k1 => _145
    # DEBUG __k2 => _147
    # DEBUG __d => _155
    # DEBUG __s => _145
    # DEBUG __n => _146
    goto <bb 54>;

  }
  bb_52 (preds = {bb_76 }, succs = {bb_53 bb_54 })
  {
    <bb 52>:
    # DEBUG D#3 => D#1109
    # DEBUG this => D#3
    # DEBUG __p => _144
    # DEBUG __k1 => _145
    # DEBUG __k2 => _147
    # DEBUG __d => _144
    # DEBUG __s => _145
    # DEBUG __n => _146
    if (_146 == 1)
      goto <bb 53>;
    else
      goto <bb 54>;

  }
  bb_53 (preds = {bb_52 }, succs = {bb_55 })
  {
    <bb 53>:
    # VUSE <.MEM_225>
    _158 = MEM[(const char_type &)_145];
    # DEBUG D#13 => _145
    # DEBUG __c1 => _144
    # DEBUG __c2 => D#13
    # .MEM_229 = VDEF <.MEM_225>
    MEM[(char_type &)_144] = _158;
    goto <bb 55>;

  }
  bb_54 (preds = {bb_52 bb_51 }, succs = {bb_55 })
  {
    <bb 54>:
    # _292 = PHI <_144(52), _155(51)>
    # .MEM_288 = PHI <.MEM_225(52), .MEM_228(51)>
    # DEBUG D#3 => D#1109
    # DEBUG this => D#3
    # DEBUG __p => _292
    # DEBUG __k1 => _145
    # DEBUG __k2 => _147
    # DEBUG __d => _292
    # DEBUG __s => _145
    # DEBUG __n => _146
    # DEBUG __s1 => _292
    # DEBUG __s2 => _145
    # DEBUG __n => _146
    # .MEM_230 = VDEF <.MEM_288>
    __builtin_memcpy (_292, _145, _146);
    # VUSE <.MEM_230>
    pretmp_169 = __dnew;
    # VUSE <.MEM_230>
    pretmp_78 = MEM[(char * *)_124 + 32B];

  }
  bb_55 (preds = {bb_53 bb_54 }, succs = {bb_60 })
  {
    <bb 55>:
    # .MEM_171 = PHI <.MEM_229(53), .MEM_230(54)>
    # prephitmp_73 = PHI <_146(53), pretmp_169(54)>
    # prephitmp_96 = PHI <_144(53), pretmp_78(54)>
    # DEBUG D#1096 => __dnew
    # DEBUG this => D#1109
    # DEBUG __n => D#1096
    # DEBUG D#5 => D#1109
    # DEBUG __length => D#1096
    # DEBUG this => D#5
    # .MEM_231 = VDEF <.MEM_171>
    MEM[(size_type *)_124 + 40B] = prephitmp_73;
    # DEBUG D#3 => D#1109
    # DEBUG this => D#3
    _161 = prephitmp_96 + prephitmp_73;
    # DEBUG __c1 => _161
    # DEBUG __c2 => D#13
    # .MEM_232 = VDEF <.MEM_231>
    MEM[(char_type &)_161] = 0;
    # .MEM_233 = VDEF <.MEM_232>
    __dnew ={v} {CLOBBER};
    # VUSE <.MEM_233>
    _148 = D.58760.second;
    # .MEM_234 = VDEF <.MEM_233>
    MEM[(struct pair *)_124 + 32B].second = _148;
    # DEBUG this => NULL
    # DEBUG this => NULL
    # DEBUG __z => _124
    _127 = (int) __insert_left_126;
    # .MEM_240 = VDEF <.MEM_234>
    std::_Rb_tree_insert_and_rebalance (_127, _124, __res$second_107, __pos_23);
    # VUSE <.MEM_240>
    _128 = MEM[(struct _Rb_tree *)this_4(D) + 88B]._M_impl._M_node_count;
    _129 = _128 + 1;
    # .MEM_241 = VDEF <.MEM_240>
    MEM[(struct _Rb_tree *)this_4(D) + 88B]._M_impl._M_node_count = _129;
    # DEBUG this => NULL
    # DEBUG __x => _124
    goto <bb 60>;

  }
  bb_56 (preds = {bb_50 }, succs = {bb_57 })
  {
  <L10>:

  }
  bb_57 (preds = {bb_56 bb_75 }, succs = {bb_58 })
  {
    # .MEM_172 = PHI <.MEM_226(56), .MEM_235(75)>
  <L6>:
    # VUSE <.MEM_172>
    _149 = __builtin_eh_pointer (10);
    # .MEM_236 = VDEF <.MEM_172>
    __cxa_begin_catch (_149);
    # DEBUG D#314 => D#499
    # DEBUG __p => _124
    # DEBUG this => D#314
    # DEBUG D#313 => D#314
    # DEBUG this => D#313
    # DEBUG D#312 => 1
    # DEBUG __p => _124
    # DEBUG __a => D#311
    # DEBUG __n => D#312
    # DEBUG D#310 => D#312
    # DEBUG D#309 => D#311
    # DEBUG D#307 => D#309
    # DEBUG D#308 => D#310
    # DEBUG __p => _124
    # DEBUG this => D#307
    # DEBUG D.58901 => D#308
    # .MEM_237 = VDEF <.MEM_236>
    operator delete (_124);
    # .MEM_238 = VDEF <.MEM_237>
    __cxa_rethrow ();

  }
  bb_58 (preds = {bb_57 }, succs = {bb_59 })
  {
  <L8>:
    # .MEM_239 = VDEF <.MEM_238>
    __cxa_end_catch ();
    resx 11

  }
  bb_59 (preds = {bb_58 }, succs = {bb_65 })
  {
  <L11>:
    goto <bb 65> (<L5>);

  }
  bb_60 (preds = {bb_55 bb_41 }, succs = {bb_61 bb_62 })
  {
    <bb 60>:
    # .MEM_174 = PHI <.MEM_241(55), .MEM_217(41)>
    # SR.1315_252 = PHI <_124(55), __res$first_106(41)>
    # DEBUG D#598 => {CLOBBER}
    # DEBUG __res$first => D#598
    # DEBUG D#599 => {CLOBBER}
    # DEBUG __res$second => D#599
    # DEBUG __i$_M_node => SR.1315_252
    # DEBUG this => &D.58760
    # DEBUG D#188 => &D.58760.first
    # DEBUG this => D#188
    # DEBUG this => D#188
    # DEBUG this => D#188
    # VUSE <.MEM_174>
    _68 = MEM[(char * *)&D.58760];
    # DEBUG D#3 => D#188
    # DEBUG this => D#3
    # DEBUG this => D#188
    if (&MEM[(const struct basic_string *)&D.58760].D.11539._M_local_buf != _68)
      goto <bb 61>;
    else
      goto <bb 62>;

  }
  bb_61 (preds = {bb_60 }, succs = {bb_62 })
  {
    <bb 61>:
    # DEBUG D#186 => MEM[(struct basic_string *)D#188].D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#188
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#188
    # DEBUG this => D#3
    # DEBUG this => D#188
    # DEBUG D#183 => &MEM[(struct basic_string *)D#188]._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _68
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _68
    # DEBUG this => D#177
    # DEBUG D.58714 => D#178
    # .MEM_253 = VDEF <.MEM_174>
    operator delete (_68);

  }
  bb_62 (preds = {bb_60 bb_61 }, succs = {bb_63 })
  {
    <bb 62>:
    # .MEM_175 = PHI <.MEM_174(60), .MEM_253(61)>
    # DEBUG D#187 => &MEM[(struct basic_string *)D#188]._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_259 = VDEF <.MEM_175>
    D.58760 ={v} {CLOBBER};

  }
  bb_63 (preds = {bb_32 bb_62 bb_35 }, succs = {bb_85 })
  {
    <bb 63>:
    # __pos_69 = PHI <__pos_313(32), SR.1315_252(62), __pos_313(35)>
    # .MEM_176 = PHI <.MEM_95(32), .MEM_259(62), .MEM_95(35)>

  }
  bb_85 (preds = {bb_63 }, succs = {bb_1 })
  {
    <bb 85>:
    # DEBUG __i$_M_node => __pos_69
    # DEBUG this => &__i
    # DEBUG this => __pos_69
    # DEBUG D#603 => &MEM[(struct _Rb_tree_node *)__pos_69]._M_value_field
    # DEBUG __r => D#603
    # DEBUG D#605 => {CLOBBER}
    # DEBUG __i$_M_node => D#605
    # .MEM_12 = VDEF <.MEM_176>
    MEM[(mapped_type &)__pos_69 + 64] = value_11(D);
    # DEBUG D#608 => {CLOBBER}
    # DEBUG match$_M_node => D#608
    # VUSE <.MEM_12>
    return;

  }
  bb_64 (preds = {bb_48 }, succs = {bb_65 })
  {
  <L9>:

  }
  bb_65 (preds = {bb_59 bb_64 }, succs = {bb_66 bb_67 })
  {
    # .MEM_177 = PHI <.MEM_239(59), .MEM_223(64)>
  <L5>:
    # DEBUG this => &D.58760
    # DEBUG D#188 => &D.58760.first
    # DEBUG this => D#188
    # DEBUG this => D#188
    # DEBUG this => D#188
    # VUSE <.MEM_177>
    _71 = MEM[(char * *)&D.58760];
    # DEBUG D#3 => D#188
    # DEBUG this => D#3
    # DEBUG this => D#188
    if (&MEM[(const struct basic_string *)&D.58760].D.11539._M_local_buf != _71)
      goto <bb 66>;
    else
      goto <bb 67>;

  }
  bb_66 (preds = {bb_65 }, succs = {bb_67 })
  {
    <bb 66>:
    # DEBUG D#186 => MEM[(struct basic_string *)D#188].D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#188
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#188
    # DEBUG this => D#3
    # DEBUG this => D#188
    # DEBUG D#183 => &MEM[(struct basic_string *)D#188]._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _71
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _71
    # DEBUG this => D#177
    # DEBUG D.58698 => D#178
    # .MEM_244 = VDEF <.MEM_177>
    operator delete (_71);

  }
  bb_67 (preds = {bb_65 bb_66 }, succs = {})
  {
    <bb 67>:
    # .MEM_178 = PHI <.MEM_177(65), .MEM_244(66)>
    # DEBUG D#187 => &MEM[(struct basic_string *)D#188]._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_250 = VDEF <.MEM_178>
    D.58760 ={v} {CLOBBER};
    resx 9

  }
  bb_68 (preds = {bb_4 }, succs = {bb_69 bb_70 })
  {
  <L3>:
    # DEBUG this => &D.35772
    # DEBUG this => &D.35772
    # DEBUG this => &D.35772
    # VUSE <.MEM_14>
    _3 = MEM[(char * *)&D.35772];
    # DEBUG D#3 => &D.35772
    # DEBUG this => D#3
    # DEBUG this => &D.35772
    if (&D.35772.D.11539._M_local_buf != _3)
      goto <bb 69>;
    else
      goto <bb 70>;

  }
  bb_69 (preds = {bb_68 }, succs = {bb_70 })
  {
    <bb 69>:
    # DEBUG D#186 => D.35772.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.35772
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.35772
    # DEBUG this => D#3
    # DEBUG this => &D.35772
    # DEBUG D#183 => &D.35772._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _3
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _3
    # DEBUG this => D#177
    # DEBUG D.54822 => D#178
    # .MEM_18 = VDEF <.MEM_14>
    operator delete (_3);

  }
  bb_70 (preds = {bb_68 bb_69 }, succs = {})
  {
    <bb 70>:
    # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
    # DEBUG D#187 => &D.35772._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_15 = VDEF <.MEM_1>
    D.35772 ={v} {CLOBBER};
    resx 6

  }
  bb_71 (preds = {bb_35 bb_78 bb_77 }, succs = {bb_84 })
  {
    <bb 71>:
    # .MEM_60 = PHI <.MEM_95(35), .MEM_95(78), .MEM_132(77)>
    # __pos_162 = PHI <__pos_313(35), __pos_313(78), __pos_23(77)>

  }
  bb_84 (preds = {bb_71 }, succs = {bb_36 })
  {
    <bb 84>:
    goto <bb 36>;

  }
  bb_72 (preds = {bb_36 }, succs = {bb_37 bb_38 })
  {
    <bb 72>:
    # DEBUG __first => D#1099
    # DEBUG __last => _66
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => D#1099
    # DEBUG __last => _66
    # .MEM_205 = VDEF <.MEM_204>
    __dnew = pretmp_19;
    if (pretmp_19 > 15)
      goto <bb 37>;
    else
      goto <bb 38>;

  }
  bb_73 (preds = {bb_36 }, succs = {})
  {
    <bb 73>:
    # .MEM_260 = VDEF <.MEM_204>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_74 (preds = {bb_49 }, succs = {bb_75 })
  {
    <bb 74>:
    # .MEM_235 = VDEF <.MEM_224>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_75 (preds = {bb_74 }, succs = {bb_57 })
  {
  <L12>:
    goto <bb 57> (<L6>);

  }
  bb_76 (preds = {bb_49 }, succs = {bb_50 bb_52 })
  {
    <bb 76>:
    # DEBUG __first => _145
    # DEBUG __last => _147
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => _145
    # DEBUG __last => _147
    # .MEM_225 = VDEF <.MEM_224>
    __dnew = _146;
    if (_146 > 15)
      goto <bb 50>;
    else
      goto <bb 52>;

  }
  bb_77 (preds = {bb_19 bb_16 }, succs = {bb_71 bb_22 })
  {
    <bb 77>:
    # DEBUG __r => NULL
    # DEBUG D#219 => {CLOBBER}
    # DEBUG __j$_M_node => D#219
    # DEBUG this => &match.41
    # DEBUG __it => &D.35712
    # DEBUG match$_M_node => __pos_312
    # DEBUG D#607 => &this_4(D)->_int_map
    # DEBUG this => D#607
    # DEBUG D#56 => &D#607->_M_t
    # DEBUG this => D#56
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &D.35771
    # DEBUG __it => &D.35717
    # DEBUG this => &match
    # DEBUG __x => &D.35771
    # DEBUG D#219 => {CLOBBER}
    # DEBUG __j$_M_node => D#219
    # DEBUG this => &match.41
    # DEBUG __it => &D.35712
    # DEBUG match$_M_node => __pos_312
    # DEBUG D#607 => &this_4(D)->_int_map
    # DEBUG this => D#607
    # DEBUG D#56 => &D#607->_M_t
    # DEBUG this => D#56
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &D.35771
    # DEBUG __it => &D.35717
    # DEBUG this => &match
    # DEBUG __x => &D.35771
    # DEBUG D#1062 => &this_4(D)->_int_map
    # DEBUG this => D#1062
    # DEBUG __k => field_5(D)
    # DEBUG this => D#1062
    # DEBUG __x => field_5(D)
    # DEBUG D#1108 => &MEM[(struct map *)this_4(D) + 88B]._M_t
    # DEBUG this => D#1108
    # DEBUG __k => field_5(D)
    # DEBUG this => D#1108
    # DEBUG D#36 => D#1108
    # DEBUG this => D#36
    # DEBUG D#218 => D#1108
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_5(D)
    # DEBUG __y => __pos_23
    # DEBUG __x => __pos_24
    if (__pos_24 == 0B)
      goto <bb 71>;
    else
      goto <bb 22>;

  }
  loop_2 (header = 23, latch = 21, niter = )
  {
    bb_20 (preds = {bb_83 bb_82 }, succs = {bb_30 bb_21 })
    {
      <bb 20>:
      # __pos_34 = PHI <__pos_76(83), __pos_77(82)>
      # __pos_33 = PHI <__pos_319(83), __pos_141(82)>
      # DEBUG __y => __pos_33
      # DEBUG __x => __pos_34
      if (__pos_34 == 0B)
        goto <bb 30>;
      else
        goto <bb 21>;

    }
    bb_21 (preds = {bb_20 }, succs = {bb_23 })
    {
      <bb 21>:
      goto <bb 23>;

    }
    bb_23 (preds = {bb_22 bb_21 }, succs = {bb_24 bb_27 })
    {
      <bb 23>:
      # __pos_319 = PHI <__pos_24(22), __pos_34(21)>
      # __pos_141 = PHI <__pos_23(22), __pos_33(21)>
      # .MEM_95 = PHI <.MEM_132(22), .MEM_95(21)>
      # DEBUG __y => __pos_141
      # DEBUG __x => __pos_319
      # DEBUG __x => __pos_319
      # DEBUG __x => __pos_319
      # DEBUG this => __pos_319
      # DEBUG D#215 => &MEM[(const struct _Rb_tree_node *)__pos_319]._M_value_field
      # DEBUG __r => D#215
      # DEBUG __x => D#215
      # DEBUG this => D#151
      # DEBUG D#1063 => &MEM[(const struct pair &)__pos_319 + 32].first
      # DEBUG D#216 => &D#217->_M_impl._M_key_compare
      # DEBUG D#203 => D#216
      # DEBUG __x => D#1063
      # DEBUG __y => field_5(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#1063
      # DEBUG __rhs => field_5(D)
      # DEBUG this => D#1063
      # DEBUG __str => field_5(D)
      # VUSE <.MEM_95>
      _81 = MEM[(long unsigned int *)__pos_319 + 40B];
      # DEBUG D#2 => D#1063
      # DEBUG this => D#2
      # DEBUG __size => _81
      # DEBUG D#1103 => MEM[(long unsigned int *)field_5(D) + 8B]
      # DEBUG D#2 => field_5(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#1103
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_302 = MIN_EXPR <pretmp_19, _81>;
      # DEBUG __len => D#1056
      # DEBUG this => field_5(D)
      # DEBUG D#1102 => MEM[(char * *)field_5(D)]
      # DEBUG D#3 => field_5(D)
      # DEBUG this => D#3
      # VUSE <.MEM_95>
      _86 = MEM[(char * *)__pos_319 + 32B];
      # DEBUG D#3 => D#1063
      # DEBUG this => D#3
      # DEBUG __s1 => _86
      # DEBUG __s2 => D#1102
      # DEBUG __n => D#1056
      # VUSE <.MEM_95>
      __r_87 = __builtin_memcmp (_86, pretmp_21, __len_302);
      # DEBUG __r => NULL
      if (__r_87 == 0)
        goto <bb 24>;
      else
        goto <bb 27>;

    }
    bb_24 (preds = {bb_23 }, succs = {bb_28 bb_25 })
    {
      <bb 24>:
      # DEBUG __n1 => _81
      # DEBUG __n2 => D#1103
      _88 = _81 - pretmp_19;
      __d_89 = (const difference_type) _88;
      # DEBUG __d => __d_89
      if (__d_89 > 2147483647)
        goto <bb 28>;
      else
        goto <bb 25>;

    }
    bb_25 (preds = {bb_24 }, succs = {bb_29 bb_26 })
    {
      <bb 25>:
      if (__d_89 < -2147483648)
        goto <bb 29>;
      else
        goto <bb 26>;

    }
    bb_26 (preds = {bb_25 }, succs = {bb_27 })
    {
      <bb 26>:
      __r_90 = (int) _88;

    }
    bb_27 (preds = {bb_23 bb_26 }, succs = {bb_28 bb_29 })
    {
      <bb 27>:
      # __r_91 = PHI <__r_87(23), __r_90(26)>
      # DEBUG __r => __r_91
      # DEBUG D#1082 => {CLOBBER}
      # DEBUG __size => D#1082
      # DEBUG D#1083 => {CLOBBER}
      # DEBUG __osize => D#1083
      if (__r_91 >= 0)
        goto <bb 28>;
      else
        goto <bb 29>;

    }
    bb_28 (preds = {bb_27 bb_24 }, succs = {bb_83 })
    {
      <bb 28>:

    }
    bb_83 (preds = {bb_28 }, succs = {bb_20 })
    {
      <bb 83>:
      # DEBUG __r => NULL
      # DEBUG __y => __pos_319
      # VUSE <.MEM_95>
      __pos_76 = MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B];
      # DEBUG D#46 => __pos_319
      # DEBUG __x => D#46
      # DEBUG __x => NULL
      goto <bb 20>;

    }
    bb_29 (preds = {bb_27 bb_25 }, succs = {bb_82 })
    {
      <bb 29>:

    }
    bb_82 (preds = {bb_29 }, succs = {bb_20 })
    {
      <bb 82>:
      # DEBUG __r => NULL
      # VUSE <.MEM_95>
      __pos_77 = MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B];
      # DEBUG D#45 => __pos_319
      # DEBUG __x => D#45
      # DEBUG __x => NULL
      goto <bb 20>;

    }
  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_81 bb_80 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # __pos_57 = PHI <__pos_28(81), __pos_29(80)>
      # __pos_80 = PHI <__pos_318(81), __pos_322(80)>
      # DEBUG __y => __pos_80
      # DEBUG __x => __pos_57
      if (__pos_57 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_3 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # __pos_318 = PHI <__pos_24(3), __pos_57(6)>
      # __pos_322 = PHI <__pos_23(3), __pos_80(6)>
      # .MEM_132 = PHI <.MEM_2(D)(3), .MEM_132(6)>
      # DEBUG __y => __pos_322
      # DEBUG __x => __pos_318
      # DEBUG __x => __pos_318
      # DEBUG __x => __pos_318
      # DEBUG this => __pos_318
      # DEBUG D#215 => &MEM[(const struct _Rb_tree_node *)__pos_318]._M_value_field
      # DEBUG __r => D#215
      # DEBUG __x => D#215
      # DEBUG this => D#151
      # DEBUG D#1060 => &MEM[(const struct pair &)__pos_318 + 32].first
      # DEBUG D#216 => &D#217->_M_impl._M_key_compare
      # DEBUG D#203 => D#216
      # DEBUG __x => D#1060
      # DEBUG __y => field_5(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#1060
      # DEBUG __rhs => field_5(D)
      # DEBUG this => D#1060
      # DEBUG __str => field_5(D)
      # VUSE <.MEM_132>
      _17 = MEM[(long unsigned int *)__pos_318 + 40B];
      # DEBUG D#2 => D#1060
      # DEBUG this => D#2
      # DEBUG __size => _17
      # DEBUG D#1107 => MEM[(long unsigned int *)field_5(D) + 8B]
      # DEBUG D#2 => field_5(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#1107
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_309 = MIN_EXPR <_17, pretmp_19>;
      # DEBUG __len => D#1054
      # DEBUG this => field_5(D)
      # DEBUG D#1106 => MEM[(char * *)field_5(D)]
      # DEBUG D#3 => field_5(D)
      # DEBUG this => D#3
      # VUSE <.MEM_132>
      _39 = MEM[(char * *)__pos_318 + 32B];
      # DEBUG D#3 => D#1060
      # DEBUG this => D#3
      # DEBUG __s1 => _39
      # DEBUG __s2 => D#1106
      # DEBUG __n => D#1054
      # VUSE <.MEM_132>
      __r_40 = __builtin_memcmp (_39, pretmp_21, __len_309);
      # DEBUG __r => NULL
      if (__r_40 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => _17
      # DEBUG __n2 => D#1107
      _41 = _17 - pretmp_19;
      __d_42 = (const difference_type) _41;
      # DEBUG __d => __d_42
      if (__d_42 > 2147483647)
        goto <bb 12>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_13 bb_10 })
    {
      <bb 9>:
      if (__d_42 < -2147483648)
        goto <bb 13>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_43 = (int) _41;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_44 = PHI <__r_40(7), __r_43(10)>
      # DEBUG __r => __r_44
      # DEBUG D#1070 => {CLOBBER}
      # DEBUG __size => D#1070
      # DEBUG D#1071 => {CLOBBER}
      # DEBUG __osize => D#1071
      if (__r_44 >= 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_8 }, succs = {bb_81 })
    {
      <bb 12>:

    }
    bb_81 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 81>:
      # DEBUG __r => NULL
      # DEBUG __y => __pos_318
      # VUSE <.MEM_132>
      __pos_28 = MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B];
      # DEBUG D#46 => __pos_318
      # DEBUG __x => D#46
      # DEBUG __x => NULL
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_9 }, succs = {bb_80 })
    {
      <bb 13>:

    }
    bb_80 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 80>:
      # DEBUG __r => NULL
      # VUSE <.MEM_132>
      __pos_29 = MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B];
      # DEBUG D#45 => __pos_318
      # DEBUG __x => D#45
      # DEBUG __x => NULL
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

void Configuration::Assign(const string&, int) (struct ConfigurationD.32032 * const thisD.35596, const struct stringD.2845 & fieldD.35593, intD.9 valueD.35594)
Eh tree:
   9 cleanup land:{6,<L9>},{3,<L11>}
     12 must_not_throw
     11 cleanup land:{5,<L8>}
     10 try land:{7,<L10>},{4,<L12>} catch:{}
   6 cleanup land:{2,<L3>}
{
  struct _Rb_tree_node_baseD.27676 * SR.1316D.58962;
  struct _Rb_tree_node_baseD.27676 * SR.1315D.58961;
  struct _Rb_tree_node_baseD.27676 * SR.1314D.58960;
  const struct _Rb_tree_node_baseD.27676 * __posD.58959;
  struct _Rb_tree_node_baseD.27676 * SR.1312D.58958;
  struct _Rb_tree_node_baseD.27676 * SR.1311D.58957;
  size_typeD.11502 __dnewD.58929;
  const size_typeD.11502 __sizeD.58879;
  const size_typeD.11502 __osizeD.58880;
  const size_typeD.11502 __lenD.58881;
  intD.9 __rD.58882;
  const difference_typeD.11503 __dD.58885;
  intD.9 D.58891;
  boolD.2757 __insert_leftD.58852;
  struct iteratorD.33641 D.58876;
  size_typeD.11502 __dnewD.58821;
  struct iteratorD.33641 D.58817;
  struct pairD.28129 __resD.58812;
  struct _Rb_tree_node_baseD.27676 * __res$firstD.58816;
  struct _Rb_tree_node_baseD.27676 * __res$secondD.58815;
  struct const_iteratorD.33643 __positionD.58809;
  const size_typeD.11502 __sizeD.58795;
  const size_typeD.11502 __osizeD.58796;
  const size_typeD.11502 __lenD.58797;
  intD.9 __rD.58798;
  const difference_typeD.11503 __dD.58801;
  intD.9 D.58807;
  const size_typeD.11502 __sizeD.58780;
  const size_typeD.11502 __osizeD.58781;
  const size_typeD.11502 __lenD.58782;
  intD.9 __rD.58783;
  const difference_typeD.11503 __dD.58786;
  intD.9 D.58792;
  struct iteratorD.33641 D.58777;
  struct _Rb_tree_nodeD.33341 * __yD.58767;
  struct value_typeD.33123 D.58760;
  struct iteratorD.33914 D.58759;
  struct iteratorD.33641 D.58758;
  struct const_iteratorD.33643 __posD.58725;
  struct _Rb_tree_node_baseD.27676 * const __i$_M_nodeD.58757;
  struct _Rb_tree_node_baseD.27676 * SR.1107D.58756;
  struct _Rb_tree_node_baseD.27676 * SR.1110D.58755;
  mapped_typeD.33122 & D.58754;
  const size_typeD.11502 __sizeD.58673;
  const size_typeD.11502 __osizeD.58674;
  const size_typeD.11502 __lenD.58675;
  intD.9 __rD.58676;
  const difference_typeD.11503 __dD.58679;
  intD.9 D.58685;
  const size_typeD.11502 __sizeD.58658;
  const size_typeD.11502 __osizeD.58659;
  const size_typeD.11502 __lenD.58660;
  intD.9 __rD.58661;
  const difference_typeD.11503 __dD.58664;
  intD.9 D.58670;
  struct iteratorD.33641 D.58655;
  struct _Rb_tree_nodeD.33341 * __yD.58645;
  struct _Rb_tree_node_baseD.27676 * SR.1119D.54836;
  struct iteratorD.33914 D.54812;
  struct basic_stringD.2844 D.35772;
  charD.10 * const _3;
  const size_typeD.11502 _17;
  const size_typeD.11502 pretmp_19;
  charD.10 * const pretmp_21;
  boolD.2757 _27;
  charD.10 * const _39;
  long unsigned intD.14 _41;
  const size_typeD.11502 _47;
  charD.10 * const _50;
  long unsigned intD.14 _53;
  struct _Rep_typeD.33335 * _58;
  charD.10 * _66;
  charD.10 * const _68;
  charD.10 * const _71;
  size_typeD.11502 prephitmp_73;
  charD.10 * const pretmp_78;
  const size_typeD.11502 _81;
  charD.10 * const _86;
  long unsigned intD.14 _88;
  boolD.2757 _92;
  const size_typeD.11502 _94;
  charD.10 * const prephitmp_96;
  charD.10 * const _97;
  long unsigned intD.14 _100;
  boolD.2757 _104;
  charD.10 * _113;
  long unsigned intD.14 __dnew.111_114;
  const char_typeD.6439 _116;
  charD.10 * _119;
  struct _Rb_tree_nodeD.33341 * _124;
  intD.9 _127;
  long unsigned intD.14 _128;
  long unsigned intD.14 _129;
  const size_typeD.11502 _130;
  const size_typeD.11502 _131;
  charD.10 * const _134;
  charD.10 * const _135;
  long unsigned intD.14 _137;
  struct pairD.33117 * _142;
  charD.10 * _144;
  charD.10 * const _145;
  const size_typeD.11502 _146;
  charD.10 * _147;
  intD.9 _148;
  voidD.45 * _149;
  charD.10 * _155;
  long unsigned intD.14 __dnew.111_156;
  const char_typeD.6439 _158;
  charD.10 * _161;
  charD.10 * const pretmp_165;
  size_typeD.11502 pretmp_169;
  charD.10 * const _173;
  charD.10 * const prephitmp_179;
  size_typeD.11502 prephitmp_180;
  size_typeD.11502 pretmp_181;
  boolD.2757 _264;
  boolD.2757 _268;
  boolD.2757 _269;
  boolD.2757 _272;
  charD.10 * const _292;
  boolD.2757 _294;
  boolD.2757 _296;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54813 => &matchD.35598
  # DEBUG match$_M_nodeD.54829 => 0B
  # DEBUG D#606ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54809 => D#606ptD.0
  # DEBUG __xD.54810 => field_5(D)
  # DEBUG D#1059ptD.0 => &MEM[(struct mapD.33119 *)this_4(D) + 88B]._M_tD.33338
  # DEBUG thisD.58631 => D#1059ptD.0
  # DEBUG __kD.58632 => field_5(D)
  # DEBUG thisD.58642 => D#1059ptD.0
  # PT = nonlocal 
  __pos_23 = &MEM[(struct _Rb_treeD.33337 *)this_4(D) + 88B]._M_implD.33415._M_headerD.33570;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __pos_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_4(D) + 104B];
  # DEBUG D#36ptD.0 => D#1059ptD.0
  # DEBUG thisD.49007 => D#36ptD.0
  # DEBUG D#218ptD.0 => D#1059ptD.0
  # DEBUG __xD.58646 => NULL
  # DEBUG __yD.58645 => NULL
  # DEBUG __kD.58644 => field_5(D)
  # DEBUG __yD.58645 => __pos_23
  # DEBUG __xD.58646 => __pos_24
  if (__pos_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_19 = MEM[(long unsigned intD.14 *)field_5(D) + 8B];
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  pretmp_21 = MEM[(charD.10 * *)field_5(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                79 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_320 = PHI <.MEM_2(D)(2), .MEM_132(79), .MEM_132(17), .MEM_132(19)>
  # DEBUG thisD.49021 => D#1059ptD.0
  # DEBUG thisD.49023 => NULL
  # DEBUG __xD.49022 => __pos_23
  # DEBUG D#219ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49025 => D#219ptD.0
  # DEBUG thisD.54807 => &match.41D.35716
  # DEBUG __itD.54808 => &D.35712
  # DEBUG match$_M_nodeD.54829 => __pos_23
  # DEBUG D#607ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54803 => D#607ptD.0
  # DEBUG D#56ptD.0 => &D#607ptD.0->_M_tD.33338
  # DEBUG thisD.54804 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54801 => &D.35771
  # DEBUG __itD.54802 => &D.35717
  # DEBUG thisD.54798 => &matchD.35598
  # DEBUG __xD.54799 => &D.35771
  # DEBUG D#219ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49025 => D#219ptD.0
  # DEBUG thisD.54807 => &match.41D.35716
  # DEBUG __itD.54808 => &D.35712
  # DEBUG match$_M_nodeD.54829 => __pos_23
  # DEBUG D#607ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54803 => D#607ptD.0
  # DEBUG D#56ptD.0 => &D#607ptD.0->_M_tD.33338
  # DEBUG thisD.54804 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54801 => &D.35771
  # DEBUG __itD.54802 => &D.35717
  # DEBUG thisD.54798 => &matchD.35598
  # DEBUG __xD.54799 => &D.35771
  # .MEM_13 = VDEF <.MEM_320>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  D.35772 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown integer field: ", field_5(D)); [return slot optimization]
  [LP 2] # .MEM_14 = VDEF <.MEM_13>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_4(D), &D.35772, 0);
;;    succ:       68 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                80 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_57 = PHI <__pos_28(81), __pos_29(80)>
  # PT = nonlocal escaped 
  # __pos_80 = PHI <__pos_318(81), __pos_322(80)>
  # DEBUG __yD.58645 => __pos_80
  # DEBUG __xD.58646 => __pos_57
  if (__pos_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_318 = PHI <__pos_24(3), __pos_57(6)>
  # PT = nonlocal escaped 
  # __pos_322 = PHI <__pos_23(3), __pos_80(6)>
  # .MEM_132 = PHI <.MEM_2(D)(3), .MEM_132(6)>
  # DEBUG __yD.58645 => __pos_322
  # DEBUG __xD.58646 => __pos_318
  # DEBUG __xD.58647 => __pos_318
  # DEBUG __xD.48933 => __pos_318
  # DEBUG thisD.48934 => __pos_318
  # DEBUG D#215ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__pos_318]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#215ptD.0
  # DEBUG __xD.58649 => D#215ptD.0
  # DEBUG thisD.58648 => D#151ptD.0
  # DEBUG D#1060ptD.0 => &MEM[(const struct pairD.33117 &)__pos_318 + 32].firstD.35721
  # DEBUG D#216ptD.0 => &D#217ptD.0->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#216ptD.0
  # DEBUG __xD.58652 => D#1060ptD.0
  # DEBUG __yD.58651 => field_5(D)
  # DEBUG thisD.58650 => D#203ptD.0
  # DEBUG __lhsD.58654 => D#1060ptD.0
  # DEBUG __rhsD.58653 => field_5(D)
  # DEBUG thisD.58656 => D#1060ptD.0
  # DEBUG __strD.58657 => field_5(D)
  # VUSE <.MEM_132>
  _17 = MEM[(long unsigned intD.14 *)__pos_318 + 40B];
  # DEBUG D#2ptD.0 => D#1060ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58658 => _17
  # DEBUG D#1107ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58659 => D#1107ptD.0
  # DEBUG __aD.58666 => &__sizeD.58658
  # DEBUG __bD.58665 => &__osizeD.58659
  __len_309 = MIN_EXPR <_17, pretmp_19>;
  # DEBUG __lenD.58660 => D#1054ptD.0
  # DEBUG thisD.48671 => field_5(D)
  # DEBUG D#1106ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _39 = MEM[(charD.10 * *)__pos_318 + 32B];
  # DEBUG D#3ptD.0 => D#1060ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58669 => _39
  # DEBUG __s2D.58668 => D#1106ptD.0
  # DEBUG __nD.58667 => D#1054ptD.0
  # VUSE <.MEM_132>
  # USE = nonlocal escaped 
  __r_40 = memcmpD.989 (_39, pretmp_21, __len_309);
  # DEBUG __rD.58661 => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58663 => _17
  # DEBUG __n2D.58662 => D#1107ptD.0
  # RANGE [0, 18446744073709551615]
  _41 = _17 - pretmp_19;
  __d_42 = (const difference_typeD.11503) _41;
  # DEBUG __dD.58664 => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_43 = (intD.9) _41;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __rD.58661 => __r_44
  # DEBUG D#1070ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58658 => D#1070ptD.0
  # DEBUG D#1071ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58659 => D#1071ptD.0
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 81, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       81 [100.0%]  (FALLTHRU)

;;   basic block 81, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58661 => NULL
  # DEBUG __yD.58645 => __pos_318
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __pos_28 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_318 + 16B];
  # DEBUG D#46ptD.0 => __pos_318
  # DEBUG __xD.48966 => D#46ptD.0
  # DEBUG __xD.58646 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 81, next block 80, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       80 [100.0%]  (FALLTHRU)

;;   basic block 80, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58661 => NULL
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __pos_29 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_318 + 24B];
  # DEBUG D#45ptD.0 => __pos_318
  # DEBUG __xD.48965 => D#45ptD.0
  # DEBUG __xD.58646 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 80, next block 79, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_312 = PHI <__pos_80(5)>
;;    succ:       79 [100.0%]  (FALLTHRU)

;;   basic block 79, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.48964 => NULL
  # DEBUG __xD.48963 => __pos_312
  # DEBUG __j$_M_nodeD.49025 => __pos_312
  # DEBUG thisD.48987 => D#1059ptD.0
  # DEBUG thisD.48989 => NULL
  # DEBUG __xD.48988 => __pos_23
  # DEBUG thisD.48984 => &__jD.58633
  # DEBUG __xD.48985 => NULL
  if (__pos_23 == __pos_312)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 79, next block 16, flags: (NEW, REACHABLE)
;;    pred:       79 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.58634 => __pos_312
  # DEBUG __xD.48187 => __pos_312
  # DEBUG thisD.48188 => __pos_312
  # DEBUG D#152ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__pos_312]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#152ptD.0
  # DEBUG __xD.58636 => D#152ptD.0
  # DEBUG thisD.58635 => D#151ptD.0
  # DEBUG D#1061ptD.0 => &MEM[(const struct pairD.33117 &)__pos_312 + 32].firstD.35721
  # DEBUG D#220ptD.0 => &MEM[(struct _Rb_treeD.33337 *)D#1059ptD.0]._M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#220ptD.0
  # DEBUG __xD.58639 => field_5(D)
  # DEBUG __yD.58638 => D#1061ptD.0
  # DEBUG thisD.58637 => D#203ptD.0
  # DEBUG __lhsD.58641 => field_5(D)
  # DEBUG __rhsD.58640 => D#1061ptD.0
  # DEBUG thisD.58671 => field_5(D)
  # DEBUG __strD.58672 => D#1061ptD.0
  # DEBUG D#1105ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58673 => D#1105ptD.0
  # VUSE <.MEM_132>
  _47 = MEM[(long unsigned intD.14 *)__pos_312 + 40B];
  # DEBUG D#2ptD.0 => D#1061ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58674 => _47
  # DEBUG __aD.58681 => &__sizeD.58673
  # DEBUG __bD.58680 => &__osizeD.58674
  __len_305 = MIN_EXPR <pretmp_19, _47>;
  # DEBUG __lenD.58675 => D#1055ptD.0
  # DEBUG thisD.48671 => D#1061ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _50 = MEM[(charD.10 * *)__pos_312 + 32B];
  # DEBUG D#3ptD.0 => D#1061ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1104ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58684 => D#1104ptD.0
  # DEBUG __s2D.58683 => _50
  # DEBUG __nD.58682 => D#1055ptD.0
  # VUSE <.MEM_132>
  # USE = nonlocal escaped 
  __r_52 = memcmpD.989 (pretmp_21, _50, __len_305);
  # DEBUG __rD.58676 => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58678 => D#1105ptD.0
  # DEBUG __n2D.58677 => _47
  # RANGE [0, 18446744073709551615]
  _53 = pretmp_19 - _47;
  __d_54 = (const difference_typeD.11503) _53;
  # DEBUG __dD.58679 => __d_54
  if (__d_54 > 2147483647)
    goto <bb 77>;
  else
    goto <bb 17>;
;;    succ:       77 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_55 = (intD.9) _53;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __rD.58676 => __r_56
  # DEBUG D#1076ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58673 => D#1076ptD.0
  # DEBUG D#1077ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58674 => D#1077ptD.0
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 77>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       83 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                82 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_34 = PHI <__pos_76(83), __pos_77(82)>
  # PT = nonlocal escaped 
  # __pos_33 = PHI <__pos_319(83), __pos_141(82)>
  # DEBUG __yD.58767 => __pos_33
  # DEBUG __xD.58768 => __pos_34
  if (__pos_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;
;;    succ:       30 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 8277, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       77 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_319 = PHI <__pos_24(22), __pos_34(21)>
  # PT = nonlocal escaped 
  # __pos_141 = PHI <__pos_23(22), __pos_33(21)>
  # .MEM_95 = PHI <.MEM_132(22), .MEM_95(21)>
  # DEBUG __yD.58767 => __pos_141
  # DEBUG __xD.58768 => __pos_319
  # DEBUG __xD.58769 => __pos_319
  # DEBUG __xD.48933 => __pos_319
  # DEBUG thisD.48934 => __pos_319
  # DEBUG D#215ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__pos_319]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#215ptD.0
  # DEBUG __xD.58771 => D#215ptD.0
  # DEBUG thisD.58770 => D#151ptD.0
  # DEBUG D#1063ptD.0 => &MEM[(const struct pairD.33117 &)__pos_319 + 32].firstD.35721
  # DEBUG D#216ptD.0 => &D#217ptD.0->_M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#216ptD.0
  # DEBUG __xD.58774 => D#1063ptD.0
  # DEBUG __yD.58773 => field_5(D)
  # DEBUG thisD.58772 => D#203ptD.0
  # DEBUG __lhsD.58776 => D#1063ptD.0
  # DEBUG __rhsD.58775 => field_5(D)
  # DEBUG thisD.58778 => D#1063ptD.0
  # DEBUG __strD.58779 => field_5(D)
  # VUSE <.MEM_95>
  _81 = MEM[(long unsigned intD.14 *)__pos_319 + 40B];
  # DEBUG D#2ptD.0 => D#1063ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58780 => _81
  # DEBUG D#1103ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58781 => D#1103ptD.0
  # DEBUG __aD.58788 => &__sizeD.58780
  # DEBUG __bD.58787 => &__osizeD.58781
  __len_302 = MIN_EXPR <pretmp_19, _81>;
  # DEBUG __lenD.58782 => D#1056ptD.0
  # DEBUG thisD.48671 => field_5(D)
  # DEBUG D#1102ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _86 = MEM[(charD.10 * *)__pos_319 + 32B];
  # DEBUG D#3ptD.0 => D#1063ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58791 => _86
  # DEBUG __s2D.58790 => D#1102ptD.0
  # DEBUG __nD.58789 => D#1056ptD.0
  # VUSE <.MEM_95>
  # USE = nonlocal escaped 
  __r_87 = memcmpD.989 (_86, pretmp_21, __len_302);
  # DEBUG __rD.58783 => NULL
  if (__r_87 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 5549, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58785 => _81
  # DEBUG __n2D.58784 => D#1103ptD.0
  # RANGE [0, 18446744073709551615]
  _88 = _81 - pretmp_19;
  __d_89 = (const difference_typeD.11503) _88;
  # DEBUG __dD.58786 => __d_89
  if (__d_89 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;
;;    succ:       28 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 2774, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_89 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;
;;    succ:       29 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 1387, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_90 = (intD.9) _88;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 4934, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       23 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_91 = PHI <__r_87(23), __r_90(26)>
  # DEBUG __rD.58783 => __r_91
  # DEBUG D#1082ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58780 => D#1082ptD.0
  # DEBUG D#1083ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58781 => D#1083ptD.0
  if (__r_91 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 27, next block 83, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       83 [100.0%]  (FALLTHRU)

;;   basic block 83, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 28, next block 29, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58783 => NULL
  # DEBUG __yD.58767 => __pos_319
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  __pos_76 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_319 + 16B];
  # DEBUG D#46ptD.0 => __pos_319
  # DEBUG __xD.48966 => D#46ptD.0
  # DEBUG __xD.58768 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 83, next block 82, flags: (NEW, REACHABLE)
;;    pred:       27 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       82 [100.0%]  (FALLTHRU)

;;   basic block 82, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 29, next block 30, flags: (NEW)
;;    pred:       29 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58783 => NULL
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  __pos_77 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_319 + 24B];
  # DEBUG D#45ptD.0 => __pos_319
  # DEBUG __xD.48965 => D#45ptD.0
  # DEBUG __xD.58768 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 82, next block 78, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_313 = PHI <__pos_33(20)>
;;    succ:       78 [100.0%]  (FALLTHRU)

;;   basic block 78, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 30, next block 31, flags: (NEW)
;;    pred:       30 [100.0%]  (FALLTHRU)
  # DEBUG thisD.48964 => NULL
  # DEBUG __xD.48963 => __pos_313
  # DEBUG __i$_M_nodeD.58757 => __pos_313
  # DEBUG thisD.58752 => D#1062ptD.0
  # DEBUG D#56ptD.0 => &D#1062ptD.0->_M_tD.33338
  # DEBUG thisD.58753 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54702 => &__iD.58688
  # DEBUG __xD.54703 => NULL
  if (__pos_23 == __pos_313)
    goto <bb 71>;
  else
    goto <bb 31>;
;;    succ:       71 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 765, maybe hot
;;    prev block 78, next block 32, flags: (NEW, REACHABLE)
;;    pred:       78 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.54722 => &__iD.58688
  # DEBUG thisD.54723 => __pos_313
  # DEBUG D#602ptD.0 => &MEM[(struct _Rb_tree_nodeD.33341 *)__pos_313]._M_value_fieldD.38961
  # DEBUG __rD.48192 => D#602ptD.0
  # DEBUG D#1064ptD.0 => &MEM[(struct pairD.33117 &)__pos_313 + 32].firstD.35721
  # DEBUG D#62ptD.0 => D#1062ptD.0
  # DEBUG thisD.54719 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#62ptD.0
  # DEBUG D#60ptD.0 => &D#61ptD.0->_M_tD.33338
  # DEBUG D#59ptD.0 => D#60ptD.0
  # DEBUG thisD.47504 => D#59ptD.0
  # DEBUG __xD.58747 => field_5(D)
  # DEBUG __yD.58746 => D#1064ptD.0
  # DEBUG thisD.58745 => D#203ptD.0
  # DEBUG __lhsD.58749 => field_5(D)
  # DEBUG __rhsD.58748 => D#1064ptD.0
  # DEBUG thisD.58793 => field_5(D)
  # DEBUG __strD.58794 => D#1064ptD.0
  # DEBUG D#1101ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58795 => D#1101ptD.0
  # VUSE <.MEM_95>
  _94 = MEM[(long unsigned intD.14 *)__pos_313 + 40B];
  # DEBUG D#2ptD.0 => D#1064ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58796 => _94
  # DEBUG __aD.58803 => &__sizeD.58795
  # DEBUG __bD.58802 => &__osizeD.58796
  __len_301 = MIN_EXPR <pretmp_19, _94>;
  # DEBUG __lenD.58797 => D#1057ptD.0
  # DEBUG thisD.48671 => D#1064ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _97 = MEM[(charD.10 * *)__pos_313 + 32B];
  # DEBUG D#3ptD.0 => D#1064ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1100ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58806 => D#1100ptD.0
  # DEBUG __s2D.58805 => _97
  # DEBUG __nD.58804 => D#1057ptD.0
  # VUSE <.MEM_95>
  # USE = nonlocal escaped 
  __r_99 = memcmpD.989 (pretmp_21, _97, __len_301);
  # DEBUG __rD.58798 => NULL
  if (__r_99 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 466, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58800 => D#1101ptD.0
  # DEBUG __n2D.58799 => _94
  # RANGE [0, 18446744073709551615]
  _100 = pretmp_19 - _94;
  __d_101 = (const difference_typeD.11503) _100;
  # DEBUG __dD.58801 => __d_101
  if (__d_101 > 2147483647)
    goto <bb 63>;
  else
    goto <bb 33>;
;;    succ:       63 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 233, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_101 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;
;;    succ:       36 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_102 = (intD.9) _100;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 415, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       31 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_103 = PHI <__r_99(31), __r_102(34)>
  # DEBUG __rD.58798 => __r_103
  # DEBUG D#1088ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58795 => D#1088ptD.0
  # DEBUG D#1089ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58796 => D#1089ptD.0
  if (__r_103 < 0)
    goto <bb 71>;
  else
    goto <bb 63>;
;;    succ:       71 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                84 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_293 = PHI <.MEM_95(33), .MEM_60(84)>
  # PT = nonlocal escaped 
  # __pos_133 = PHI <__pos_313(33), __pos_162(84)>
  # DEBUG thisD.58730 => &D.58760
  # DEBUG __aD.58729 => field_5(D)
  # DEBUG __bD.58728 => NULL
  # DEBUG thisD.58732 => &D.58760.firstD.35721
  # DEBUG __strD.58731 => field_5(D)
  # DEBUG thisD.50825 => field_5(D)
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)field_5(D)]._M_dataplusD.11519
  # DEBUG thisD.58733 => &D.58760.firstD.35721
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.58760]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.58736 => D#381ptD.0
  # DEBUG __datD.58735 => &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541
  # DEBUG __aD.58734 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_204 = VDEF <.MEM_293>
  MEM[(struct _Alloc_hiderD.11518 *)&D.58760]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541;
  # DEBUG D#1099ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # DEBUG D#1098ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#1ptD.0 => field_5(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _66 = pretmp_21 + pretmp_19;
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.58739 => &D.58760.firstD.35721
  # DEBUG __begD.58738 => D#1099ptD.0
  # DEBUG __endD.58737 => _66
  # DEBUG thisD.58743 => &D.58760.firstD.35721
  # DEBUG __begD.58742 => D#1099ptD.0
  # DEBUG __endD.58741 => _66
  # DEBUG thisD.58818 => &D.58760.firstD.35721
  # DEBUG __begD.58819 => D#1099ptD.0
  # DEBUG __endD.58820 => _66
  # DEBUG __ptrD.51229 => D#1099ptD.0
  # RANGE [0, 1]
  _92 = _66 != 0B;
  # RANGE [0, 1]
  _104 = pretmp_21 == 0B;
  # RANGE [0, 1]
  _296 = _92 & _104;
  if (_296 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;
;;    succ:       73 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       72 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_206 = VDEF <.MEM_205>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _113 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.58760.firstD.35721, &__dnewD.58821, 0);
  # DEBUG D#6ptD.0 => &D.58760.firstD.35721
  # DEBUG __pD.58840 => _113
  # DEBUG thisD.58839 => D#6ptD.0
  # .MEM_207 = VDEF <.MEM_206>
  MEM[(charD.10 * *)&D.58760] = _113;
  # VUSE <.MEM_207>
  __dnew.111_114 = __dnewD.58821;
  # DEBUG D#7ptD.0 => &D.58760.firstD.35721
  # DEBUG __capacityD.58842 => __dnew.111_114
  # DEBUG thisD.58841 => D#7ptD.0
  # .MEM_208 = VDEF <.MEM_207>
  MEM[(size_typeD.11502 *)&D.58760 + 16B] = __dnew.111_114;
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58824 => _113
  # DEBUG __k1D.58823 => D#1099ptD.0
  # DEBUG __k2D.58822 => _66
  # DEBUG __dD.58827 => _113
  # DEBUG __sD.58826 => D#1099ptD.0
  # DEBUG __nD.58825 => D#1098ptD.0
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       72 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58824 => &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541
  # DEBUG __k1D.58823 => D#1099ptD.0
  # DEBUG __k2D.58822 => _66
  # DEBUG __dD.58827 => &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541
  # DEBUG __sD.58826 => D#1099ptD.0
  # DEBUG __nD.58825 => D#1098ptD.0
  if (pretmp_19 == 1)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_205>
  _116 = MEM[(const char_typeD.6439 &)pretmp_21];
  # DEBUG D#13ptD.0 => D#1099ptD.0
  # DEBUG __c1D.58832 => &MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541
  # DEBUG __c2D.58831 => D#13ptD.0
  # .MEM_209 = VDEF <.MEM_205>
  MEM[(char_typeD.6439 &)&D.58760 + 16] = _116;
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.58760 } (escaped)
  # _173 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541(38), _113(37)>
  # .MEM_290 = PHI <.MEM_205(38), .MEM_208(37)>
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58824 => _173
  # DEBUG __k1D.58823 => D#1099ptD.0
  # DEBUG __k2D.58822 => _66
  # DEBUG __dD.58827 => _173
  # DEBUG __sD.58826 => D#1099ptD.0
  # DEBUG __nD.58825 => D#1098ptD.0
  # DEBUG __s1D.58830 => _173
  # DEBUG __s2D.58829 => D#1099ptD.0
  # DEBUG __nD.58828 => D#1098ptD.0
  # .MEM_210 = VDEF <.MEM_290>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  memcpyD.992 (_173, pretmp_21, pretmp_19);
  # VUSE <.MEM_210>
  pretmp_181 = __dnewD.58821;
  # VUSE <.MEM_210>
  pretmp_165 = MEM[(charD.10 * *)&D.58760];
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_168 = PHI <.MEM_209(39), .MEM_210(40)>
  # prephitmp_180 = PHI <pretmp_19(39), pretmp_181(40)>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  # prephitmp_179 = PHI <&MEM[(struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541(39), pretmp_165(40)>
  # DEBUG D#1097ptD.0 => __dnewD.58821
  # DEBUG thisD.58834 => &D.58760.firstD.35721
  # DEBUG __nD.58833 => D#1097ptD.0
  # DEBUG D#5ptD.0 => &D.58760.firstD.35721
  # DEBUG __lengthD.58836 => D#1097ptD.0
  # DEBUG thisD.58835 => D#5ptD.0
  # .MEM_211 = VDEF <.MEM_168>
  MEM[(size_typeD.11502 *)&D.58760 + 8B] = prephitmp_180;
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _119 = prephitmp_179 + prephitmp_180;
  # DEBUG __c1D.58838 => _119
  # DEBUG __c2D.58837 => D#13ptD.0
  # .MEM_212 = VDEF <.MEM_211>
  MEM[(char_typeD.6439 &)_119] = 0;
  # .MEM_213 = VDEF <.MEM_212>
  __dnewD.58821 ={v} {CLOBBER};
  # .MEM_214 = VDEF <.MEM_213>
  D.58760.secondD.35722 = 0;
  # DEBUG thisD.58723 => D#1062ptD.0
  # DEBUG __position$_M_nodeD.54794 => __pos_133
  # DEBUG __xD.58721 => &D.58760
  # DEBUG thisD.54746 => NULL
  # DEBUG __itD.54745 => &__positionD.58722
  # DEBUG thisD.58726 => D#1108ptD.0
  # DEBUG __posD.58959 => __pos_133
  # DEBUG __xD.58724 => &D.58760
  # DEBUG thisD.54696 => &__anD.58727
  # DEBUG __tD.54695 => D#1108ptD.0
  # DEBUG __an$_M_tD.54689 => D#1108ptD.0
  # DEBUG D#601ptD.0 => &__anD.58727
  # DEBUG thisD.58808 => D#1108ptD.0
  # .MEM_216 = VDEF <.MEM_214>
  MEM[(struct _Rb_tree_const_iteratorD.33644 *)&__positionD.58809] = __pos_133;
  # DEBUG __vD.58810 => &D.58760
  # DEBUG __node_genD.58811 => D#601ptD.0
  # DEBUG D#600ptD.0 => D#601ptD.0
  # DEBUG __xD.58814 => &D.58760
  # DEBUG thisD.58813 => D#151ptD.0
  # PT = nonlocal 
  _58 = &MEM[(struct mapD.33119 *)this_4(D) + 88B]._M_tD.33338;
  # .MEM_217 = VDEF <.MEM_216>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  __resD.58812 = _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_D.33655 (_58, __positionD.58809, &D.58760.firstD.35721);
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  __res$first_106 = MEM[(struct pairD.28129 *)&__resD.58812];
  # DEBUG __res$firstD.58816 => __res$first_106
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  __res$second_107 = MEM[(struct pairD.28129 *)&__resD.58812 + 8B];
  # DEBUG __res$secondD.58815 => __res$second_107
  if (__res$second_107 != 0B)
    goto <bb 42>;
  else
    goto <bb 60>;
;;    succ:       42 [59.7%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [40.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of incoming frequencies 209, should be 45
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [59.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#595ptD.0 => D#600ptD.0
  # DEBUG thisD.58847 => D#1108ptD.0
  # DEBUG __xD.58848 => __res$first_106
  # DEBUG __pD.58849 => __res$second_107
  # DEBUG __vD.58850 => &D.58760
  # DEBUG __node_genD.58851 => D#595ptD.0
  # DEBUG D#594ptD.0 => D#595ptD.0
  # DEBUG thisD.58875 => D#1108ptD.0
  _294 = __pos_23 == __res$second_107;
  # RANGE [0, 1]
  _27 = __res$first_106 != 0B;
  _264 = _27 | _294;
  if (_264 != 0)
    goto <bb 48>;
  else
    goto <bb 43>;
;;    succ:       48 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 41, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.58865 => __res$second_107
  # DEBUG __xD.48187 => __res$second_107
  # DEBUG thisD.48188 => __res$second_107
  # DEBUG D#152ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33341 *)__res$second_107]._M_value_fieldD.38961
  # DEBUG __rD.47655 => D#152ptD.0
  # DEBUG __xD.58867 => D#152ptD.0
  # DEBUG thisD.58866 => D#151ptD.0
  # DEBUG D#1065ptD.0 => &MEM[(const struct pairD.33117 &)__res$second_107 + 32].firstD.35721
  # DEBUG __xD.58869 => &D.58760
  # DEBUG thisD.58868 => D#151ptD.0
  # DEBUG D#593ptD.0 => &MEM[(struct _Rb_treeD.33337 *)D#1108ptD.0]._M_implD.33415._M_key_compareD.33569
  # DEBUG D#203ptD.0 => D#593ptD.0
  # DEBUG __xD.58872 => NULL
  # DEBUG __yD.58871 => D#1065ptD.0
  # DEBUG thisD.58870 => D#203ptD.0
  # DEBUG __lhsD.58874 => NULL
  # DEBUG __rhsD.58873 => D#1065ptD.0
  # DEBUG thisD.58877 => &D.58760.firstD.35721
  # DEBUG __strD.58878 => D#1065ptD.0
  # VUSE <.MEM_217>
  _130 = MEM[(long unsigned intD.14 *)&D.58760 + 8B];
  # DEBUG D#2ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.58879 => _130
  # VUSE <.MEM_217>
  _131 = MEM[(long unsigned intD.14 *)__res$second_107 + 40B];
  # DEBUG D#2ptD.0 => D#1065ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.58880 => _131
  # DEBUG __aD.58887 => &__sizeD.58879
  # DEBUG __bD.58886 => &__osizeD.58880
  __len_59 = MIN_EXPR <_130, _131>;
  # DEBUG __lenD.58881 => D#1058ptD.0
  # DEBUG thisD.48671 => D#1065ptD.0
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  _134 = MEM[(charD.10 * *)__res$second_107 + 32B];
  # DEBUG D#3ptD.0 => D#1065ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_217>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _135 = MEM[(charD.10 * *)&D.58760];
  # DEBUG D#3ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.58890 => _135
  # DEBUG __s2D.58889 => _134
  # DEBUG __nD.58888 => D#1058ptD.0
  # VUSE <.MEM_217>
  # USE = nonlocal escaped null { D.58760 } (escaped)
  __r_136 = memcmpD.989 (_135, _134, __len_59);
  # DEBUG __rD.58882 => NULL
  if (__r_136 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 25, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.58884 => _130
  # DEBUG __n2D.58883 => _131
  # RANGE [0, 18446744073709551615]
  _137 = _130 - _131;
  __d_138 = (const difference_typeD.11503) _137;
  # DEBUG __dD.58885 => __d_138
  if (__d_138 > 2147483647)
    goto <bb 48>;
  else
    goto <bb 45>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_138 < -2147483648)
    goto <bb 48>;
  else
    goto <bb 46>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_139 = (intD.9) _137;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 46, next block 86, flags: (NEW, REACHABLE)
;;    pred:       43 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_140 = PHI <__r_136(43), __r_139(46)>
;;    succ:       86 [100.0%]  (FALLTHRU)

;;   basic block 86, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 47, next block 48, flags: (NEW)
;;    pred:       47 [100.0%]  (FALLTHRU)
  # DEBUG __rD.58882 => __r_140
  # DEBUG D#1094ptD.0 => {CLOBBER}
  # DEBUG __sizeD.58879 => D#1094ptD.0
  # DEBUG D#1095ptD.0 => {CLOBBER}
  # DEBUG __osizeD.58880 => D#1095ptD.0
  __insert_left_300 = __r_140 < 0;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 209, maybe hot
;;   Invalid sum of incoming frequencies 46, should be 209
;;    prev block 86, next block 49, flags: (NEW, REACHABLE)
;;    pred:       44 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                86 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # __insert_left_126 = PHI <0(44), 1(45), __insert_left_300(86), 1(42)>
  # DEBUG __insert_leftD.58852 => __insert_left_126
  # DEBUG D#592ptD.0 => D#594ptD.0
  # DEBUG __argD.58855 => &D.58760
  # DEBUG thisD.58854 => D#592ptD.0
  # DEBUG D#591ptD.0 => D#592ptD.0
  # DEBUG D#590ptD.0 => D#591ptD.0->_M_tD.40747
  # DEBUG D#589ptD.0 => D#590ptD.0
  # DEBUG __xD.58857 => &D.58760
  # DEBUG thisD.58856 => D#589ptD.0
  # DEBUG D#588ptD.0 => D#589ptD.0
  # DEBUG D#587ptD.0 => D#589ptD.0
  # DEBUG D#586ptD.0 => D#587ptD.0
  # DEBUG thisD.58859 => D#586ptD.0
  # DEBUG D#585ptD.0 => D#586ptD.0
  # DEBUG thisD.54520 => D#585ptD.0
  # DEBUG __nD.58861 => 1
  # DEBUG __aD.58860 => D#584ptD.0
  # DEBUG D#583ptD.0 => D#584ptD.0
  # DEBUG D#581ptD.0 => D#583ptD.0
  # DEBUG D#582ptD.0 => 0B
  # DEBUG __nD.58864 => 1
  # DEBUG thisD.58862 => D#581ptD.0
  # DEBUG D.58863 => D#582ptD.0
  # DEBUG D#580ptD.0 => D#581ptD.0
  # DEBUG D#579ptD.0 => D#580ptD.0
  # DEBUG thisD.54478 => D#579ptD.0
  [LP 6] # .MEM_223 = VDEF <.MEM_217>
  # PT = { D.58967 } (escaped heap)
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _124 = _ZnwmD.2764 (72);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 (EH,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 209, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __tmpD.58858 => _124
  # DEBUG D#500ptD.0 => D#588ptD.0
  # DEBUG __nodeD.58892 => _124
  # DEBUG __xD.58893 => &D.58760
  # DEBUG thisD.58894 => D#500ptD.0
  # DEBUG D#499ptD.0 => D#500ptD.0
  # DEBUG D#498ptD.0 => D#500ptD.0
  # DEBUG thisD.58903 => _124
  # DEBUG D#1109ptD.0 => &_124->_M_value_fieldD.38961
  # DEBUG __rD.48192 => D#1109ptD.0
  # DEBUG D#475ptD.0 => D#498ptD.0
  # DEBUG thisD.52915 => D#475ptD.0
  # DEBUG D#474ptD.0 => D#475ptD.0
  # DEBUG thisD.52546 => D#474ptD.0
  # DEBUG thisD.52538 => NULL
  # DEBUG D.52539 => NULL
  # DEBUG thisD.52536 => NULL
  # DEBUG __pD.58906 => D#1109ptD.0
  # DEBUG __valD.58905 => &D.58760
  # DEBUG thisD.58904 => D#497ptD.0
  # DEBUG D#14ptD.0 => 40
  # DEBUG __pD.52849 => D#1109ptD.0
  # DEBUG D.52850 => D#14ptD.0
  # DEBUG thisD.58908 => D#1109ptD.0
  # DEBUG D.58907 => &D.58760
  # DEBUG D#496ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.58910 => D#1109ptD.0
  # DEBUG __strD.58909 => D#496ptD.0
  # DEBUG thisD.50825 => D#496ptD.0
  # DEBUG D#380ptD.0 => &D#496ptD.0->_M_dataplusD.11519
  # DEBUG thisD.58911 => D#1109ptD.0
  # PT = { D.58967 } (escaped heap)
  _144 = &MEM[(struct basic_stringD.2844 *)_124 + 32B].D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)D#1109ptD.0]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.58914 => D#381ptD.0
  # DEBUG __datD.58913 => _144
  # DEBUG __aD.58912 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_224 = VDEF <.MEM_223>
  MEM[(struct _Alloc_hiderD.11518 *)_124 + 32B]._M_pD.11525 = _144;
  # VUSE <.MEM_224>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _145 = MEM[(charD.10 * *)&D.58760];
  # DEBUG D#3ptD.0 => D#496ptD.0
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_224>
  _146 = MEM[(long unsigned intD.14 *)&D.58760 + 8B];
  # DEBUG D#1ptD.0 => D#496ptD.0
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _147 = _145 + _146;
  # DEBUG D#3ptD.0 => D#496ptD.0
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.58917 => D#1109ptD.0
  # DEBUG __begD.58916 => _145
  # DEBUG __endD.58915 => _147
  # DEBUG thisD.58921 => D#1109ptD.0
  # DEBUG __begD.58920 => _145
  # DEBUG __endD.58919 => _147
  # DEBUG thisD.58926 => D#1109ptD.0
  # DEBUG __begD.58927 => _145
  # DEBUG __endD.58928 => _147
  # DEBUG __ptrD.51229 => _145
  # RANGE [0, 1]
  _272 = _147 != 0B;
  # RANGE [0, 1]
  _269 = _145 == 0B;
  # RANGE [0, 1]
  _268 = _269 & _272;
  if (_268 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;
;;    succ:       74 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                76 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 48, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       76 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.58967 } (escaped heap)
  _142 = &_124->_M_value_fieldD.38961;
  [LP 7] # .MEM_226 = VDEF <.MEM_225>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _155 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_142, &__dnewD.58929, 0);
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 (EH,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 48, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => D#1109ptD.0
  # DEBUG __pD.58948 => _155
  # DEBUG thisD.58947 => D#6ptD.0
  # .MEM_227 = VDEF <.MEM_226>
  MEM[(charD.10 * *)_124 + 32B] = _155;
  # VUSE <.MEM_227>
  __dnew.111_156 = __dnewD.58929;
  # DEBUG D#7ptD.0 => D#1109ptD.0
  # DEBUG __capacityD.58950 => __dnew.111_156
  # DEBUG thisD.58949 => D#7ptD.0
  # .MEM_228 = VDEF <.MEM_227>
  MEM[(size_typeD.11502 *)_124 + 48B] = __dnew.111_156;
  # DEBUG D#3ptD.0 => D#1109ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58932 => _155
  # DEBUG __k1D.58931 => _145
  # DEBUG __k2D.58930 => _147
  # DEBUG __dD.58935 => _155
  # DEBUG __sD.58934 => _145
  # DEBUG __nD.58933 => _146
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 116, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       76 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => D#1109ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58932 => _144
  # DEBUG __k1D.58931 => _145
  # DEBUG __k2D.58930 => _147
  # DEBUG __dD.58935 => _144
  # DEBUG __sD.58934 => _145
  # DEBUG __nD.58933 => _146
  if (_146 == 1)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [53.5%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [46.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [53.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_225>
  _158 = MEM[(const char_typeD.6439 &)_145];
  # DEBUG D#13ptD.0 => _145
  # DEBUG __c1D.58940 => _144
  # DEBUG __c2D.58939 => D#13ptD.0
  # .MEM_229 = VDEF <.MEM_225>
  MEM[(char_typeD.6439 &)_144] = _158;
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [46.5%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.58760 D.58967 } (escaped heap)
  # _292 = PHI <_144(52), _155(51)>
  # .MEM_288 = PHI <.MEM_225(52), .MEM_228(51)>
  # DEBUG D#3ptD.0 => D#1109ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.58932 => _292
  # DEBUG __k1D.58931 => _145
  # DEBUG __k2D.58930 => _147
  # DEBUG __dD.58935 => _292
  # DEBUG __sD.58934 => _145
  # DEBUG __nD.58933 => _146
  # DEBUG __s1D.58938 => _292
  # DEBUG __s2D.58937 => _145
  # DEBUG __nD.58936 => _146
  # .MEM_230 = VDEF <.MEM_288>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  memcpyD.992 (_292, _145, _146);
  # VUSE <.MEM_230>
  pretmp_169 = __dnewD.58929;
  # VUSE <.MEM_230>
  pretmp_78 = MEM[(charD.10 * *)_124 + 32B];
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 209, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_171 = PHI <.MEM_229(53), .MEM_230(54)>
  # prephitmp_73 = PHI <_146(53), pretmp_169(54)>
  # PT = nonlocal escaped null { D.58760 D.58967 } (escaped heap)
  # prephitmp_96 = PHI <_144(53), pretmp_78(54)>
  # DEBUG D#1096ptD.0 => __dnewD.58929
  # DEBUG thisD.58942 => D#1109ptD.0
  # DEBUG __nD.58941 => D#1096ptD.0
  # DEBUG D#5ptD.0 => D#1109ptD.0
  # DEBUG __lengthD.58944 => D#1096ptD.0
  # DEBUG thisD.58943 => D#5ptD.0
  # .MEM_231 = VDEF <.MEM_171>
  MEM[(size_typeD.11502 *)_124 + 40B] = prephitmp_73;
  # DEBUG D#3ptD.0 => D#1109ptD.0
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.58760 D.58967 } (escaped heap)
  _161 = prephitmp_96 + prephitmp_73;
  # DEBUG __c1D.58946 => _161
  # DEBUG __c2D.58945 => D#13ptD.0
  # .MEM_232 = VDEF <.MEM_231>
  MEM[(char_typeD.6439 &)_161] = 0;
  # .MEM_233 = VDEF <.MEM_232>
  __dnewD.58929 ={v} {CLOBBER};
  # VUSE <.MEM_233>
  _148 = D.58760.secondD.35722;
  # .MEM_234 = VDEF <.MEM_233>
  MEM[(struct pairD.33117 *)_124 + 32B].secondD.35722 = _148;
  # DEBUG thisD.52945 => NULL
  # DEBUG thisD.52919 => NULL
  # DEBUG __zD.58853 => _124
  # RANGE [0, 1] NONZERO 1
  _127 = (intD.9) __insert_left_126;
  # .MEM_240 = VDEF <.MEM_234>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_D.27902 (_127, _124, __res$second_107, __pos_23);
  # VUSE <.MEM_240>
  _128 = MEM[(struct _Rb_treeD.33337 *)this_4(D) + 88B]._M_implD.33415._M_node_countD.33571;
  # RANGE [0, 18446744073709551615]
  _129 = _128 + 1;
  # .MEM_241 = VDEF <.MEM_240>
  MEM[(struct _Rb_treeD.33337 *)this_4(D) + 88B]._M_implD.33415._M_node_countD.33571 = _129;
  # DEBUG thisD.54634 => NULL
  # DEBUG __xD.54633 => _124
  goto <bb 60>;
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       50 (EH,EXECUTABLE)
<L10>: [LP 7]
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_226(56), .MEM_235(75)>
<L6>:
  # VUSE <.MEM_172>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _149 = __builtin_eh_pointerD.2738 (10);
  # .MEM_236 = VDEF <.MEM_172>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  __cxa_begin_catchD.14644 (_149);
  # DEBUG D#314ptD.0 => D#499ptD.0
  # DEBUG __pD.58896 => _124
  # DEBUG thisD.58895 => D#314ptD.0
  # DEBUG D#313ptD.0 => D#314ptD.0
  # DEBUG thisD.49858 => D#313ptD.0
  # DEBUG D#312ptD.0 => 1
  # DEBUG __pD.58899 => _124
  # DEBUG __aD.58897 => D#311ptD.0
  # DEBUG __nD.58898 => D#312ptD.0
  # DEBUG D#310ptD.0 => D#312ptD.0
  # DEBUG D#309ptD.0 => D#311ptD.0
  # DEBUG D#307ptD.0 => D#309ptD.0
  # DEBUG D#308ptD.0 => D#310ptD.0
  # DEBUG __pD.58902 => _124
  # DEBUG thisD.58900 => D#307ptD.0
  # DEBUG D.58901 => D#308ptD.0
  # .MEM_237 = VDEF <.MEM_236>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZdlPvD.2766 (_124);
  [LP 5] # .MEM_238 = VDEF <.MEM_237>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  __cxa_rethrowD.40506 ();
;;    succ:       58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 (EH,EXECUTABLE)
<L8>: [LP 5]
  [MNT 12] # .MEM_239 = VDEF <.MEM_238>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  __cxa_end_catchD.14643 ();
  [LP 3] resx 11
;;    succ:       59 (EH,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 (EH,EXECUTABLE)
<L11>: [LP 3]
  goto <bb 65> (<L5>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [40.3%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_174 = PHI <.MEM_241(55), .MEM_217(41)>
  # PT = nonlocal escaped { D.58967 } (escaped heap)
  # SR.1315_252 = PHI <_124(55), __res$first_106(41)>
  # DEBUG D#598ptD.0 => {CLOBBER}
  # DEBUG __res$firstD.58816 => D#598ptD.0
  # DEBUG D#599ptD.0 => {CLOBBER}
  # DEBUG __res$secondD.58815 => D#599ptD.0
  # DEBUG __i$_M_nodeD.58757 => SR.1315_252
  # DEBUG thisD.58705 => &D.58760
  # DEBUG D#188ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.58706 => D#188ptD.0
  # DEBUG thisD.58707 => D#188ptD.0
  # DEBUG thisD.58716 => D#188ptD.0
  # VUSE <.MEM_174>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _68 = MEM[(charD.10 * *)&D.58760];
  # DEBUG D#3ptD.0 => D#188ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58717 => D#188ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541 != _68)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       60 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#188ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58709 => D#188ptD.0
  # DEBUG __sizeD.58708 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#188ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#188ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#188ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58712 => _68
  # DEBUG __aD.58710 => D#181ptD.0
  # DEBUG __nD.58711 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58715 => _68
  # DEBUG thisD.58713 => D#177ptD.0
  # DEBUG D.58714 => D#178ptD.0
  # .MEM_253 = VDEF <.MEM_174>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       60 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_175 = PHI <.MEM_174(60), .MEM_253(61)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#188ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58718 => D#187ptD.0
  # DEBUG thisD.58719 => D#187ptD.0
  # DEBUG thisD.58720 => D#187ptD.0
  # .MEM_259 = VDEF <.MEM_175>
  D.58760 ={v} {CLOBBER};
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 62, next block 85, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [78.3%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped { D.58967 } (escaped heap)
  # __pos_69 = PHI <__pos_313(32), SR.1315_252(62), __pos_313(35)>
  # .MEM_176 = PHI <.MEM_95(32), .MEM_259(62), .MEM_95(35)>
;;    succ:       85 [100.0%]  (FALLTHRU)

;;   basic block 85, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 63, next block 64, flags: (NEW)
;;    pred:       63 [100.0%]  (FALLTHRU)
  # DEBUG __i$_M_nodeD.58757 => __pos_69
  # DEBUG thisD.54770 => &__iD.58688
  # DEBUG thisD.54771 => __pos_69
  # DEBUG D#603ptD.0 => &MEM[(struct _Rb_tree_nodeD.33341 *)__pos_69]._M_value_fieldD.38961
  # DEBUG __rD.48192 => D#603ptD.0
  # DEBUG D#605ptD.0 => {CLOBBER}
  # DEBUG __i$_M_nodeD.58757 => D#605ptD.0
  # .MEM_12 = VDEF <.MEM_176>
  MEM[(mapped_typeD.33122 &)__pos_69 + 64] = value_11(D);
  # DEBUG D#608ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.54829 => D#608ptD.0
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 85, next block 65, flags: (NEW)
;;    pred:       48 (EH,EXECUTABLE)
<L9>: [LP 6]
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_177 = PHI <.MEM_239(59), .MEM_223(64)>
<L5>:
  # DEBUG thisD.58689 => &D.58760
  # DEBUG D#188ptD.0 => &D.58760.firstD.35721
  # DEBUG thisD.58690 => D#188ptD.0
  # DEBUG thisD.58691 => D#188ptD.0
  # DEBUG thisD.58700 => D#188ptD.0
  # VUSE <.MEM_177>
  # PT = nonlocal escaped null { D.58760 } (escaped)
  _71 = MEM[(charD.10 * *)&D.58760];
  # DEBUG D#3ptD.0 => D#188ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.58701 => D#188ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.58760].D.11539._M_local_bufD.11541 != _71)
    goto <bb 66>;
  else
    goto <bb 67>;
;;    succ:       66 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#188ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.58693 => D#188ptD.0
  # DEBUG __sizeD.58692 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#188ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#188ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#188ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.58696 => _71
  # DEBUG __aD.58694 => D#181ptD.0
  # DEBUG __nD.58695 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.58699 => _71
  # DEBUG thisD.58697 => D#177ptD.0
  # DEBUG D.58698 => D#178ptD.0
  # .MEM_244 = VDEF <.MEM_177>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZdlPvD.2766 (_71);
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_178 = PHI <.MEM_177(65), .MEM_244(66)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#188ptD.0]._M_dataplusD.11519
  # DEBUG thisD.58702 => D#187ptD.0
  # DEBUG thisD.58703 => D#187ptD.0
  # DEBUG thisD.58704 => D#187ptD.0
  # .MEM_250 = VDEF <.MEM_178>
  D.58760 ={v} {CLOBBER};
  resx 9
;;    succ:      

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L3>: [LP 2]
  # DEBUG thisD.54814 => &D.35772
  # DEBUG thisD.54815 => &D.35772
  # DEBUG thisD.54824 => &D.35772
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  _3 = MEM[(charD.10 * *)&D.35772];
  # DEBUG D#3ptD.0 => &D.35772
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.54825 => &D.35772
  if (&D.35772.D.11539._M_local_bufD.11541 != _3)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35772.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.54817 => &D.35772
  # DEBUG __sizeD.54816 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35772
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35772
  # DEBUG D#183ptD.0 => &D.35772._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.54820 => _3
  # DEBUG __aD.54818 => D#181ptD.0
  # DEBUG __nD.54819 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.54823 => _3
  # DEBUG thisD.54821 => D#177ptD.0
  # DEBUG D.54822 => D#178ptD.0
  # .MEM_18 = VDEF <.MEM_14>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZdlPvD.2766 (_3);
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       68 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
  # DEBUG D#187ptD.0 => &D.35772._M_dataplusD.11519
  # DEBUG thisD.54826 => D#187ptD.0
  # DEBUG thisD.54827 => D#187ptD.0
  # DEBUG thisD.54828 => D#187ptD.0
  # .MEM_15 = VDEF <.MEM_1>
  D.35772 ={v} {CLOBBER};
  resx 6
;;    succ:      

;;   basic block 71, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 70, next block 84, flags: (NEW, REACHABLE)
;;    pred:       35 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                78 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_95(35), .MEM_95(78), .MEM_132(77)>
  # PT = nonlocal escaped 
  # __pos_162 = PHI <__pos_313(35), __pos_313(78), __pos_23(77)>
;;    succ:       84 [100.0%]  (FALLTHRU)

;;   basic block 84, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 71, next block 72, flags: (NEW)
;;    pred:       71 [100.0%]  (FALLTHRU)
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 84, next block 73, flags: (NEW, REACHABLE)
;;    pred:       36 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58844 => D#1099ptD.0
  # DEBUG __lastD.58843 => _66
  # DEBUG D#393ptD.0 => &__firstD.58844
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58846 => D#1099ptD.0
  # DEBUG __lastD.58845 => _66
  # .MEM_205 = VDEF <.MEM_204>
  __dnewD.58821 = pretmp_19;
  if (pretmp_19 > 15)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       36 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_260 = VDEF <.MEM_204>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 74, loop depth 0, count 0, freq 21, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 178, should be 21
;;    prev block 73, next block 75, flags: (NEW, REACHABLE)
;;    pred:       49 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 4] # .MEM_235 = VDEF <.MEM_224>
  # USE = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  # CLB = nonlocal null { D.35772 D.58760 D.58821 D.58929 D.58967 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       75 (EH,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW)
;;    pred:       74 (EH,EXECUTABLE)
<L12>: [LP 4]
  goto <bb 57> (<L6>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 164, maybe hot
;;   Invalid sum of incoming frequencies 31, should be 164
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       49 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.58952 => _145
  # DEBUG __lastD.58951 => _147
  # DEBUG D#393ptD.0 => &__firstD.58952
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.58954 => _145
  # DEBUG __lastD.58953 => _147
  # .MEM_225 = VDEF <.MEM_224>
  __dnewD.58929 = _146;
  if (_146 > 15)
    goto <bb 50>;
  else
    goto <bb 52>;
;;    succ:       50 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 76, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.58676 => NULL
  # DEBUG D#219ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49025 => D#219ptD.0
  # DEBUG thisD.54807 => &match.41D.35716
  # DEBUG __itD.54808 => &D.35712
  # DEBUG match$_M_nodeD.54829 => __pos_312
  # DEBUG D#607ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54803 => D#607ptD.0
  # DEBUG D#56ptD.0 => &D#607ptD.0->_M_tD.33338
  # DEBUG thisD.54804 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54801 => &D.35771
  # DEBUG __itD.54802 => &D.35717
  # DEBUG thisD.54798 => &matchD.35598
  # DEBUG __xD.54799 => &D.35771
  # DEBUG D#219ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49025 => D#219ptD.0
  # DEBUG thisD.54807 => &match.41D.35716
  # DEBUG __itD.54808 => &D.35712
  # DEBUG match$_M_nodeD.54829 => __pos_312
  # DEBUG D#607ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.54803 => D#607ptD.0
  # DEBUG D#56ptD.0 => &D#607ptD.0->_M_tD.33338
  # DEBUG thisD.54804 => D#56ptD.0
  # DEBUG thisD.47473 => NULL
  # DEBUG __xD.47472 => __pos_23
  # DEBUG thisD.54801 => &D.35771
  # DEBUG __itD.54802 => &D.35717
  # DEBUG thisD.54798 => &matchD.35598
  # DEBUG __xD.54799 => &D.35771
  # DEBUG D#1062ptD.0 => &this_4(D)->_int_mapD.34183
  # DEBUG thisD.58686 => D#1062ptD.0
  # DEBUG __kD.58687 => field_5(D)
  # DEBUG thisD.58751 => D#1062ptD.0
  # DEBUG __xD.58750 => field_5(D)
  # DEBUG D#1108ptD.0 => &MEM[(struct mapD.33119 *)this_4(D) + 88B]._M_tD.33338
  # DEBUG thisD.58762 => D#1108ptD.0
  # DEBUG __kD.58763 => field_5(D)
  # DEBUG thisD.58764 => D#1108ptD.0
  # DEBUG D#36ptD.0 => D#1108ptD.0
  # DEBUG thisD.49048 => D#36ptD.0
  # DEBUG D#218ptD.0 => D#1108ptD.0
  # DEBUG __xD.58768 => NULL
  # DEBUG __yD.58767 => NULL
  # DEBUG __kD.58766 => field_5(D)
  # DEBUG __yD.58767 => __pos_23
  # DEBUG __xD.58768 => __pos_24
  if (__pos_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;
;;    succ:       71 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_, funcdef_no=2571, decl_uid=34716, cgraph_uid=1257, symbol_order=1259)


Pass statistics:
----------------

std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_treeD.34404 * const thisD.34717, const struct key_typeD.34430 & __kD.34718)
{
  const size_typeD.11502 __sizeD.59068;
  const size_typeD.11502 __osizeD.59069;
  const size_typeD.11502 __lenD.59070;
  intD.9 __rD.59071;
  const difference_typeD.11503 __dD.59074;
  intD.9 D.59080;
  const size_typeD.11502 __sizeD.59053;
  const size_typeD.11502 __osizeD.59054;
  const size_typeD.11502 __lenD.59055;
  intD.9 __rD.59056;
  const difference_typeD.11503 __dD.59059;
  intD.9 D.59065;
  struct _Rb_tree_node_baseD.27676 * const __j$_M_nodeD.50547;
  boolD.2757 __compD.42489;
  struct _Rb_tree_node_baseD.27676 * const D.42493;
  struct _Rb_tree_node_baseD.27676 * const D.42494;
  struct pairD.28129 D.44154;
  const size_typeD.11502 pretmp_1;
  charD.10 * const prephitmp_13;
  struct _Rb_tree_nodeD.34408 * _17;
  struct _Rb_tree_node_baseD.27676 * _21;
  struct _Rb_tree_node_baseD.27676 * _22;
  struct _Rb_tree_node_baseD.27676 * _23;
  struct _Rb_tree_node_baseD.27676 * _24;
  const size_typeD.11502 _34;
  charD.10 * const _37;
  long unsigned intD.14 _40;
  charD.10 * const pretmp_44;
  long unsigned intD.14 _52;
  const size_typeD.11502 prephitmp_61;
  charD.10 * const pretmp_64;
  charD.10 * const prephitmp_65;
  const size_typeD.11502 pretmp_67;
  const size_typeD.11502 pretmp_76;
  const size_typeD.11502 prephitmp_77;
  const size_typeD.11502 prephitmp_78;
  const size_typeD.11502 pretmp_79;
  charD.10 * const pretmp_80;
  charD.10 * const _83;
  const size_typeD.11502 _84;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _21 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 16B];
  # DEBUG D#37ptD.0 => this_9(D)
  # DEBUG thisD.50499 => D#37ptD.0
  # DEBUG __xD.42487 => NULL
  # DEBUG thisD.50496 => this_9(D)
  # DEBUG D#1145ptD.0 => &this_9(D)->_M_implD.34482._M_headerD.34637
  # DEBUG __yD.42488 => NULL
  # DEBUG __compD.42489 => 1
  # DEBUG __compD.42489 => 1
  # DEBUG __yD.42488 => D#1145ptD.0
  # DEBUG __xD.42487 => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _17 = &this_9(D)->_M_implD.34482._M_headerD.34637;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  pretmp_1 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  pretmp_44 = MEM[(charD.10 * *)__k_12(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _6 = PHI <_22(13), _23(12)>
  # RANGE [0, 1]
  # __comp_56 = PHI <0(13), 1(12)>
  # DEBUG __compD.42489 => __comp_56
  # DEBUG __yD.42488 => _10
  # DEBUG __xD.42487 => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _10 = PHI <_21(4), _6(6)>
  # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
  # DEBUG __compD.42489 => 1
  # DEBUG __xD.42487 => _10
  # DEBUG __yD.42488 => _10
  # DEBUG __xD.50507 => _10
  # DEBUG __xD.49158 => _10
  # DEBUG thisD.49159 => _10
  # DEBUG D#226ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)_10]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#226ptD.0
  # DEBUG __xD.50509 => D#226ptD.0
  # DEBUG thisD.50508 => D#153ptD.0
  # DEBUG D#1125ptD.0 => &MEM[(const struct pairD.34184 &)_10 + 32].firstD.35901
  # DEBUG D#367ptD.0 => &this_9(D)->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#367ptD.0
  # DEBUG __xD.50501 => __k_12(D)
  # DEBUG __yD.50502 => D#1125ptD.0
  # DEBUG thisD.50503 => D#203ptD.0
  # DEBUG __lhsD.50505 => __k_12(D)
  # DEBUG __rhsD.50504 => D#1125ptD.0
  # DEBUG thisD.59051 => __k_12(D)
  # DEBUG __strD.59052 => D#1125ptD.0
  # DEBUG D#1144ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59053 => D#1144ptD.0
  # VUSE <.MEM_47>
  _34 = MEM[(long unsigned intD.14 *)_10 + 40B];
  # DEBUG D#2ptD.0 => D#1125ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59054 => _34
  # DEBUG __aD.59061 => &__sizeD.59053
  # DEBUG __bD.59060 => &__osizeD.59054
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __lenD.59055 => D#1123ptD.0
  # DEBUG thisD.48671 => D#1125ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _37 = MEM[(charD.10 * *)_10 + 32B];
  # DEBUG D#3ptD.0 => D#1125ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1143ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59064 => D#1143ptD.0
  # DEBUG __s2D.59063 => _37
  # DEBUG __nD.59062 => D#1123ptD.0
  # VUSE <.MEM_47>
  # USE = nonlocal escaped 
  __r_39 = memcmpD.989 (pretmp_44, _37, __len_87);
  # DEBUG __rD.59056 => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59058 => D#1144ptD.0
  # DEBUG __n2D.59057 => _34
  # RANGE [0, 18446744073709551615]
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_typeD.11503) _40;
  # DEBUG __dD.59059 => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_42 = (intD.9) _40;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __rD.59056 => __r_43
  # DEBUG D#1131ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59053 => D#1131ptD.0
  # DEBUG D#1132ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59054 => D#1132ptD.0
  # DEBUG __compD.42489 => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59056 => NULL
  # DEBUG __compD.42489 => 1
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 16B];
  # DEBUG D#48ptD.0 => _10
  # DEBUG __xD.50512 => D#48ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59056 => NULL
  # DEBUG __compD.42489 => 0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 24B];
  # DEBUG D#47ptD.0 => _10
  # DEBUG __xD.50515 => D#47ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # PT = nonlocal escaped 
  # _83 = PHI <_37(5)>
  # RANGE [0, 1]
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>
  # DEBUG thisD.50517 => &__jD.42490
  # DEBUG __xD.50518 => _85
  # DEBUG __j$_M_nodeD.50547 => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [55.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_47(14), .MEM_8(D)(3)>
  # PT = nonlocal escaped 
  # _57 = PHI <_85(14), _17(3)>
  # DEBUG thisD.50517 => &__jD.42490
  # DEBUG __xD.50518 => _57
  # DEBUG __j$_M_nodeD.50547 => _57
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 24B];
  # DEBUG D#64ptD.0 => this_9(D)
  # DEBUG thisD.50523 => D#64ptD.0
  # DEBUG thisD.47536 => NULL
  # DEBUG __xD.47535 => _24
  # DEBUG thisD.50519 => &__jD.42490
  # DEBUG __xD.50520 => &D.42492
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 46, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.50526 => &D.42495
  # DEBUG __aD.50527 => &D.42493
  # DEBUG __bD.50528 => &D.42494
  # .MEM_31 = VDEF <.MEM_59>
  MEM[(struct pairD.28129 *)&D.44154] = 0B;
  # .MEM_29 = VDEF <.MEM_31>
  MEM[(struct pairD.28129 *)&D.44154 + 8B] = _57;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 404, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.50529 => &__jD.42490
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  __j$_M_node_25 = _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_baseD.27725 (_57);
  # DEBUG __j$_M_nodeD.50547 => __j$_M_node_25
  # VUSE <.MEM_59>
  pretmp_67 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_59>
  pretmp_80 = MEM[(charD.10 * *)__k_12(D)];
  # VUSE <.MEM_59>
  pretmp_79 = MEM[(long unsigned intD.14 *)__j$_M_node_25 + 40B];
  # VUSE <.MEM_59>
  pretmp_64 = MEM[(charD.10 * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 854, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       14 [55.0%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_20 = PHI <_85(14), __j$_M_node_25(17)>
  # .MEM_58 = PHI <.MEM_47(14), .MEM_59(17)>
  # PT = nonlocal escaped 
  # _5 = PHI <_85(14), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(14), pretmp_67(17)>
  # PT = nonlocal escaped 
  # prephitmp_13 = PHI <pretmp_44(14), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(14), pretmp_79(17)>
  # PT = nonlocal escaped 
  # prephitmp_65 = PHI <_83(14), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(14), pretmp_76(17)>
  # DEBUG __j$_M_nodeD.50547 => __j$_M_node_20
  # DEBUG __xD.50537 => __j$_M_node_20
  # DEBUG __xD.48212 => __j$_M_node_20
  # DEBUG thisD.48213 => __j$_M_node_20
  # DEBUG D#154ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__j$_M_node_20]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#154ptD.0
  # DEBUG __xD.50539 => D#154ptD.0
  # DEBUG thisD.50538 => D#153ptD.0
  # DEBUG D#1126ptD.0 => &MEM[(const struct pairD.34184 &)__j$_M_node_20 + 32].firstD.35901
  # DEBUG D#366ptD.0 => &this_9(D)->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#366ptD.0
  # DEBUG __xD.50531 => D#1126ptD.0
  # DEBUG __yD.50532 => __k_12(D)
  # DEBUG thisD.50533 => D#203ptD.0
  # DEBUG __lhsD.50535 => D#1126ptD.0
  # DEBUG __rhsD.50534 => __k_12(D)
  # DEBUG thisD.59066 => D#1126ptD.0
  # DEBUG __strD.59067 => __k_12(D)
  # DEBUG D#1142ptD.0 => MEM[(long unsigned intD.14 *)__j$_M_node_20 + 40B]
  # DEBUG D#2ptD.0 => D#1126ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59068 => D#1142ptD.0
  # DEBUG D#1141ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59069 => D#1141ptD.0
  # DEBUG __aD.59076 => &__sizeD.59068
  # DEBUG __bD.59075 => &__osizeD.59069
  # DEBUG __lenD.59070 => D#1124ptD.0
  # DEBUG thisD.48671 => __k_12(D)
  # DEBUG D#1140ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1139ptD.0 => MEM[(charD.10 * *)__j$_M_node_20 + 32B]
  # DEBUG D#3ptD.0 => D#1126ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59079 => D#1139ptD.0
  # DEBUG __s2D.59078 => D#1140ptD.0
  # DEBUG __nD.59077 => D#1124ptD.0
  # VUSE <.MEM_58>
  # USE = nonlocal escaped 
  __r_51 = memcmpD.989 (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __rD.59071 => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59073 => D#1142ptD.0
  # DEBUG __n2D.59072 => D#1141ptD.0
  # RANGE [0, 18446744073709551615]
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_typeD.11503) _52;
  # DEBUG __dD.59074 => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;
;;    succ:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 130, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_54 = (intD.9) _52;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 462, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __rD.59071 => __r_55
  # DEBUG D#1137ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59068 => D#1137ptD.0
  # DEBUG D#1138ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59069 => D#1138ptD.0
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59071 => NULL
  # DEBUG thisD.50541 => &D.42498
  # DEBUG __aD.50542 => &D.42496
  # DEBUG __bD.50543 => &D.42497
  # .MEM_28 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.44154] = 0B;
  # .MEM_27 = VDEF <.MEM_28>
  MEM[(struct pairD.28129 *)&D.44154 + 8B] = _5;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59071 => NULL
  # DEBUG thisD.50544 => &D.42500
  # DEBUG __aD.50545 => &__jD.42490._M_nodeD.35880
  # DEBUG __bD.50546 => &D.42499
  # .MEM_11 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.44154] = __j$_M_node_20;
  # .MEM_30 = VDEF <.MEM_11>
  MEM[(struct pairD.28129 *)&D.44154 + 8B] = 0B;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 1, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_29(16), .MEM_27(23), .MEM_30(24)>
  # DEBUG D#365ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.50547 => D#365ptD.0
  # VUSE <.MEM_7>
  return D.44154;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B]
Creating dr for MEM[(long unsigned int *)__k_12(D) + 8B]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__k_12(D) + 8B]
Creating dr for MEM[(char * *)__k_12(D)]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__k_12(D)]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(long unsigned int *)_10 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)_10 + 40B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(char * *)_10 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)_10 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)_10 + 16B]
Creating dr for MEM[(struct pair *)&D.44154]
analyze_innermost: success.
	base_address: &D.44154
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.44154]
Creating dr for MEM[(struct pair *)&D.44154 + 8B]
analyze_innermost: success.
	base_address: &D.44154
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.44154 + 8B]
Creating dr for MEM[(struct pair *)&D.44154]
analyze_innermost: success.
	base_address: &D.44154
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.44154]
Creating dr for MEM[(struct pair *)&D.44154 + 8B]
analyze_innermost: success.
	base_address: &D.44154
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.44154 + 8B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B]
Creating dr for MEM[(struct pair *)&D.44154]
analyze_innermost: success.
	base_address: &D.44154
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.44154]
Creating dr for MEM[(struct pair *)&D.44154 + 8B]
analyze_innermost: success.
	base_address: &D.44154
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct pair *)&D.44154 + 8B]
Creating dr for MEM[(long unsigned int *)__k_12(D) + 8B]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__k_12(D) + 8B]
Creating dr for MEM[(char * *)__k_12(D)]
analyze_innermost: success.
	base_address: __k_12(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__k_12(D)]
Creating dr for MEM[(long unsigned int *)__j$_M_node_25 + 40B]
analyze_innermost: success.
	base_address: __j$_M_node_25
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__j$_M_node_25 + 40B]
Creating dr for MEM[(char * *)__j$_M_node_25 + 32B]
analyze_innermost: success.
	base_address: __j$_M_node_25
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__j$_M_node_25 + 32B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:8)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:32, LOOPS:1, CONDITIONS:12, STMTS:188)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # VUSE <.MEM_8(D)>
    _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
    # DEBUG D#37 => this_9(D)
    # DEBUG this => D#37
    # DEBUG __x => NULL
    # DEBUG this => this_9(D)
    # DEBUG D#1145 => &this_9(D)->_M_impl._M_header
    # DEBUG __y => NULL
    # DEBUG __comp => 1
    # DEBUG __comp => 1
    # DEBUG __y => D#1145
    # DEBUG __x => _21
    if (_21 == 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_15 })
  {
    <bb 3>:
    _17 = &this_9(D)->_M_impl._M_header;
    goto <bb 15>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 4>:
    # VUSE <.MEM_8(D)>
    pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
    # VUSE <.MEM_8(D)>
    pretmp_44 = MEM[(char * *)__k_12(D)];
    goto <bb 7>;

  }
  bb_14 (preds = {bb_5 }, succs = {bb_26 })
  {
    <bb 14>:
    # _85 = PHI <_10(5)>
    # _84 = PHI <_34(5)>
    # _83 = PHI <_37(5)>
    # __comp_82 = PHI <__comp_56(5)>
    # __len_81 = PHI <__len_87(5)>

  }
  bb_26 (preds = {bb_14 }, succs = {bb_15 bb_18 })
  {
    <bb 26>:
    # DEBUG this => &__j
    # DEBUG __x => _85
    # DEBUG __j$_M_node => _85
    if (__comp_82 != 0)
      goto <bb 15>;
    else
      goto <bb 18>;

  }
  bb_15 (preds = {bb_26 bb_3 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_59 = PHI <.MEM_47(26), .MEM_8(D)(3)>
    # _57 = PHI <_85(26), _17(3)>
    # DEBUG this => &__j
    # DEBUG __x => _57
    # DEBUG __j$_M_node => _57
    # VUSE <.MEM_59>
    _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
    # DEBUG D#64 => this_9(D)
    # DEBUG this => D#64
    # DEBUG this => NULL
    # DEBUG __x => _24
    # DEBUG this => &__j
    # DEBUG __x => &D.42492
    if (_24 == _57)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_25 })
  {
    <bb 16>:
    # DEBUG this => &D.42495
    # DEBUG __a => &D.42493
    # DEBUG __b => &D.42494
    # .MEM_31 = VDEF <.MEM_59>
    MEM[(struct pair *)&D.44154] = 0B;
    # .MEM_29 = VDEF <.MEM_31>
    MEM[(struct pair *)&D.44154 + 8B] = _57;
    goto <bb 25>;

  }
  bb_17 (preds = {bb_15 }, succs = {bb_18 })
  {
    <bb 17>:
    # DEBUG this => &__j
    # VUSE <.MEM_59>
    __j$_M_node_25 = std::_Rb_tree_decrement (_57);
    # DEBUG __j$_M_node => __j$_M_node_25
    # VUSE <.MEM_59>
    pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
    # VUSE <.MEM_59>
    pretmp_80 = MEM[(char * *)__k_12(D)];
    # VUSE <.MEM_59>
    pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
    # VUSE <.MEM_59>
    pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
    pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  }
  bb_18 (preds = {bb_26 bb_17 }, succs = {bb_19 bb_22 })
  {
    <bb 18>:
    # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
    # .MEM_58 = PHI <.MEM_47(26), .MEM_59(17)>
    # _5 = PHI <_85(26), _57(17)>
    # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
    # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
    # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
    # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
    # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
    # DEBUG __j$_M_node => __j$_M_node_20
    # DEBUG __x => __j$_M_node_20
    # DEBUG __x => __j$_M_node_20
    # DEBUG this => __j$_M_node_20
    # DEBUG D#154 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
    # DEBUG __r => D#154
    # DEBUG __x => D#154
    # DEBUG this => D#153
    # DEBUG D#1126 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
    # DEBUG D#366 => &this_9(D)->_M_impl._M_key_compare
    # DEBUG D#203 => D#366
    # DEBUG __x => D#1126
    # DEBUG __y => __k_12(D)
    # DEBUG this => D#203
    # DEBUG __lhs => D#1126
    # DEBUG __rhs => __k_12(D)
    # DEBUG this => D#1126
    # DEBUG __str => __k_12(D)
    # DEBUG D#1142 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
    # DEBUG D#2 => D#1126
    # DEBUG this => D#2
    # DEBUG __size => D#1142
    # DEBUG D#1141 => MEM[(long unsigned int *)__k_12(D) + 8B]
    # DEBUG D#2 => __k_12(D)
    # DEBUG this => D#2
    # DEBUG __osize => D#1141
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    # DEBUG __len => D#1124
    # DEBUG this => __k_12(D)
    # DEBUG D#1140 => MEM[(char * *)__k_12(D)]
    # DEBUG D#3 => __k_12(D)
    # DEBUG this => D#3
    # DEBUG D#1139 => MEM[(char * *)__j$_M_node_20 + 32B]
    # DEBUG D#3 => D#1126
    # DEBUG this => D#3
    # DEBUG __s1 => D#1139
    # DEBUG __s2 => D#1140
    # DEBUG __n => D#1124
    # VUSE <.MEM_58>
    __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
    # DEBUG __r => NULL
    if (__r_51 == 0)
      goto <bb 19>;
    else
      goto <bb 22>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_24 bb_20 })
  {
    <bb 19>:
    # DEBUG __n1 => D#1142
    # DEBUG __n2 => D#1141
    _52 = prephitmp_78 - prephitmp_61;
    __d_53 = (const difference_type) _52;
    # DEBUG __d => __d_53
    if (__d_53 > 2147483647)
      goto <bb 24>;
    else
      goto <bb 20>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_23 bb_21 })
  {
    <bb 20>:
    if (__d_53 < -2147483648)
      goto <bb 23>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    __r_54 = (int) _52;

  }
  bb_22 (preds = {bb_18 bb_21 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # __r_55 = PHI <__r_51(18), __r_54(21)>
    # DEBUG __r => __r_55
    # DEBUG D#1137 => {CLOBBER}
    # DEBUG __size => D#1137
    # DEBUG D#1138 => {CLOBBER}
    # DEBUG __osize => D#1138
    if (__r_55 < 0)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 bb_20 }, succs = {bb_31 })
  {
    <bb 23>:

  }
  bb_31 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 31>:
    # DEBUG __r => NULL
    # DEBUG this => &D.42498
    # DEBUG __a => &D.42496
    # DEBUG __b => &D.42497
    # .MEM_28 = VDEF <.MEM_58>
    MEM[(struct pair *)&D.44154] = 0B;
    # .MEM_27 = VDEF <.MEM_28>
    MEM[(struct pair *)&D.44154 + 8B] = _5;
    goto <bb 25>;

  }
  bb_24 (preds = {bb_22 bb_19 }, succs = {bb_30 })
  {
    <bb 24>:

  }
  bb_30 (preds = {bb_24 }, succs = {bb_25 })
  {
    <bb 30>:
    # DEBUG __r => NULL
    # DEBUG this => &D.42500
    # DEBUG __a => &__j._M_node
    # DEBUG __b => &D.42499
    # .MEM_11 = VDEF <.MEM_58>
    MEM[(struct pair *)&D.44154] = __j$_M_node_20;
    # .MEM_30 = VDEF <.MEM_11>
    MEM[(struct pair *)&D.44154 + 8B] = 0B;

  }
  bb_25 (preds = {bb_16 bb_31 bb_30 }, succs = {bb_29 })
  {
    <bb 25>:
    # .MEM_7 = PHI <.MEM_29(16), .MEM_27(31), .MEM_30(30)>

  }
  bb_29 (preds = {bb_25 }, succs = {bb_1 })
  {
    <bb 29>:
    # DEBUG D#365 => {CLOBBER}
    # DEBUG __j$_M_node => D#365
    # VUSE <.MEM_7>
    return D.44154;

  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_27 bb_28 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # _6 = PHI <_22(27), _23(28)>
      # __comp_56 = PHI <0(27), 1(28)>
      # DEBUG __comp => __comp_56
      # DEBUG __y => _10
      # DEBUG __x => _6
      if (_6 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_4 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # _10 = PHI <_21(4), _6(6)>
      # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
      # DEBUG __comp => 1
      # DEBUG __x => _10
      # DEBUG __y => _10
      # DEBUG __x => _10
      # DEBUG __x => _10
      # DEBUG this => _10
      # DEBUG D#226 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
      # DEBUG __r => D#226
      # DEBUG __x => D#226
      # DEBUG this => D#153
      # DEBUG D#1125 => &MEM[(const struct pair &)_10 + 32].first
      # DEBUG D#367 => &this_9(D)->_M_impl._M_key_compare
      # DEBUG D#203 => D#367
      # DEBUG __x => __k_12(D)
      # DEBUG __y => D#1125
      # DEBUG this => D#203
      # DEBUG __lhs => __k_12(D)
      # DEBUG __rhs => D#1125
      # DEBUG this => __k_12(D)
      # DEBUG __str => D#1125
      # DEBUG D#1144 => MEM[(long unsigned int *)__k_12(D) + 8B]
      # DEBUG D#2 => __k_12(D)
      # DEBUG this => D#2
      # DEBUG __size => D#1144
      # VUSE <.MEM_47>
      _34 = MEM[(long unsigned int *)_10 + 40B];
      # DEBUG D#2 => D#1125
      # DEBUG this => D#2
      # DEBUG __osize => _34
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_87 = MIN_EXPR <pretmp_1, _34>;
      # DEBUG __len => D#1123
      # DEBUG this => D#1125
      # VUSE <.MEM_47>
      _37 = MEM[(char * *)_10 + 32B];
      # DEBUG D#3 => D#1125
      # DEBUG this => D#3
      # DEBUG D#1143 => MEM[(char * *)__k_12(D)]
      # DEBUG D#3 => __k_12(D)
      # DEBUG this => D#3
      # DEBUG __s1 => D#1143
      # DEBUG __s2 => _37
      # DEBUG __n => D#1123
      # VUSE <.MEM_47>
      __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
      # DEBUG __r => NULL
      if (__r_39 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_13 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => D#1144
      # DEBUG __n2 => _34
      _40 = pretmp_1 - _34;
      __d_41 = (const difference_type) _40;
      # DEBUG __d => __d_41
      if (__d_41 > 2147483647)
        goto <bb 13>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_12 bb_10 })
    {
      <bb 9>:
      if (__d_41 < -2147483648)
        goto <bb 12>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_42 = (int) _40;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_43 = PHI <__r_39(7), __r_42(10)>
      # DEBUG __r => __r_43
      # DEBUG D#1131 => {CLOBBER}
      # DEBUG __size => D#1131
      # DEBUG D#1132 => {CLOBBER}
      # DEBUG __osize => D#1132
      # DEBUG __comp => __r_43 < 0
      if (__r_43 < 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_9 }, succs = {bb_28 })
    {
      <bb 12>:

    }
    bb_28 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 28>:
      # DEBUG __r => NULL
      # DEBUG __comp => 1
      # VUSE <.MEM_47>
      _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
      # DEBUG D#48 => _10
      # DEBUG __x => D#48
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_8 }, succs = {bb_27 })
    {
      <bb 13>:

    }
    bb_27 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 27>:
      # DEBUG __r => NULL
      # DEBUG __comp => 0
      # VUSE <.MEM_47>
      _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
      # DEBUG D#47 => _10
      # DEBUG __x => D#47
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, double>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_treeD.34404 * const thisD.34717, const struct key_typeD.34430 & __kD.34718)
{
  const size_typeD.11502 __sizeD.59068;
  const size_typeD.11502 __osizeD.59069;
  const size_typeD.11502 __lenD.59070;
  intD.9 __rD.59071;
  const difference_typeD.11503 __dD.59074;
  intD.9 D.59080;
  const size_typeD.11502 __sizeD.59053;
  const size_typeD.11502 __osizeD.59054;
  const size_typeD.11502 __lenD.59055;
  intD.9 __rD.59056;
  const difference_typeD.11503 __dD.59059;
  intD.9 D.59065;
  struct _Rb_tree_node_baseD.27676 * const __j$_M_nodeD.50547;
  boolD.2757 __compD.42489;
  struct _Rb_tree_node_baseD.27676 * const D.42493;
  struct _Rb_tree_node_baseD.27676 * const D.42494;
  struct pairD.28129 D.44154;
  const size_typeD.11502 pretmp_1;
  charD.10 * const prephitmp_13;
  struct _Rb_tree_nodeD.34408 * _17;
  struct _Rb_tree_node_baseD.27676 * _21;
  struct _Rb_tree_node_baseD.27676 * _22;
  struct _Rb_tree_node_baseD.27676 * _23;
  struct _Rb_tree_node_baseD.27676 * _24;
  const size_typeD.11502 _34;
  charD.10 * const _37;
  long unsigned intD.14 _40;
  charD.10 * const pretmp_44;
  long unsigned intD.14 _52;
  const size_typeD.11502 prephitmp_61;
  charD.10 * const pretmp_64;
  charD.10 * const prephitmp_65;
  const size_typeD.11502 pretmp_67;
  const size_typeD.11502 pretmp_76;
  const size_typeD.11502 prephitmp_77;
  const size_typeD.11502 prephitmp_78;
  const size_typeD.11502 pretmp_79;
  charD.10 * const pretmp_80;
  charD.10 * const _83;
  const size_typeD.11502 _84;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _21 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 16B];
  # DEBUG D#37ptD.0 => this_9(D)
  # DEBUG thisD.50499 => D#37ptD.0
  # DEBUG __xD.42487 => NULL
  # DEBUG thisD.50496 => this_9(D)
  # DEBUG D#1145ptD.0 => &this_9(D)->_M_implD.34482._M_headerD.34637
  # DEBUG __yD.42488 => NULL
  # DEBUG __compD.42489 => 1
  # DEBUG __compD.42489 => 1
  # DEBUG __yD.42488 => D#1145ptD.0
  # DEBUG __xD.42487 => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _17 = &this_9(D)->_M_implD.34482._M_headerD.34637;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  pretmp_1 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  pretmp_44 = MEM[(charD.10 * *)__k_12(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _6 = PHI <_22(27), _23(28)>
  # RANGE [0, 1]
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __compD.42489 => __comp_56
  # DEBUG __yD.42488 => _10
  # DEBUG __xD.42487 => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _10 = PHI <_21(4), _6(6)>
  # .MEM_47 = PHI <.MEM_8(D)(4), .MEM_47(6)>
  # DEBUG __compD.42489 => 1
  # DEBUG __xD.42487 => _10
  # DEBUG __yD.42488 => _10
  # DEBUG __xD.50507 => _10
  # DEBUG __xD.49158 => _10
  # DEBUG thisD.49159 => _10
  # DEBUG D#226ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)_10]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#226ptD.0
  # DEBUG __xD.50509 => D#226ptD.0
  # DEBUG thisD.50508 => D#153ptD.0
  # DEBUG D#1125ptD.0 => &MEM[(const struct pairD.34184 &)_10 + 32].firstD.35901
  # DEBUG D#367ptD.0 => &this_9(D)->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#367ptD.0
  # DEBUG __xD.50501 => __k_12(D)
  # DEBUG __yD.50502 => D#1125ptD.0
  # DEBUG thisD.50503 => D#203ptD.0
  # DEBUG __lhsD.50505 => __k_12(D)
  # DEBUG __rhsD.50504 => D#1125ptD.0
  # DEBUG thisD.59051 => __k_12(D)
  # DEBUG __strD.59052 => D#1125ptD.0
  # DEBUG D#1144ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59053 => D#1144ptD.0
  # VUSE <.MEM_47>
  _34 = MEM[(long unsigned intD.14 *)_10 + 40B];
  # DEBUG D#2ptD.0 => D#1125ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59054 => _34
  # DEBUG __aD.59061 => &__sizeD.59053
  # DEBUG __bD.59060 => &__osizeD.59054
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __lenD.59055 => D#1123ptD.0
  # DEBUG thisD.48671 => D#1125ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _37 = MEM[(charD.10 * *)_10 + 32B];
  # DEBUG D#3ptD.0 => D#1125ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1143ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59064 => D#1143ptD.0
  # DEBUG __s2D.59063 => _37
  # DEBUG __nD.59062 => D#1123ptD.0
  # VUSE <.MEM_47>
  # USE = nonlocal escaped 
  __r_39 = memcmpD.989 (pretmp_44, _37, __len_87);
  # DEBUG __rD.59056 => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59058 => D#1144ptD.0
  # DEBUG __n2D.59057 => _34
  # RANGE [0, 18446744073709551615]
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_typeD.11503) _40;
  # DEBUG __dD.59059 => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_42 = (intD.9) _40;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __rD.59056 => __r_43
  # DEBUG D#1131ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59053 => D#1131ptD.0
  # DEBUG D#1132ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59054 => D#1132ptD.0
  # DEBUG __compD.42489 => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 11, next block 28, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       28 [100.0%]  (FALLTHRU)

;;   basic block 28, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59056 => NULL
  # DEBUG __compD.42489 => 1
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 16B];
  # DEBUG D#48ptD.0 => _10
  # DEBUG __xD.50512 => D#48ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 28, next block 27, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       27 [100.0%]  (FALLTHRU)

;;   basic block 27, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59056 => NULL
  # DEBUG __compD.42489 => 0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Rb_tree_node_baseD.27676 * *)_10 + 24B];
  # DEBUG D#47ptD.0 => _10
  # DEBUG __xD.50515 => D#47ptD.0
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 27, next block 26, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # PT = nonlocal escaped 
  # _83 = PHI <_37(5)>
  # RANGE [0, 1]
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>
;;    succ:       26 [100.0%]  (FALLTHRU)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.50517 => &__jD.42490
  # DEBUG __xD.50518 => _85
  # DEBUG __j$_M_nodeD.50547 => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;
;;    succ:       15 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [55.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 26, next block 16, flags: (NEW, REACHABLE)
;;    pred:       26 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_47(26), .MEM_8(D)(3)>
  # PT = nonlocal escaped 
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG thisD.50517 => &__jD.42490
  # DEBUG __xD.50518 => _57
  # DEBUG __j$_M_nodeD.50547 => _57
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_9(D) + 24B];
  # DEBUG D#64ptD.0 => this_9(D)
  # DEBUG thisD.50523 => D#64ptD.0
  # DEBUG thisD.47536 => NULL
  # DEBUG __xD.47535 => _24
  # DEBUG thisD.50519 => &__jD.42490
  # DEBUG __xD.50520 => &D.42492
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 46, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.50526 => &D.42495
  # DEBUG __aD.50527 => &D.42493
  # DEBUG __bD.50528 => &D.42494
  # .MEM_31 = VDEF <.MEM_59>
  MEM[(struct pairD.28129 *)&D.44154] = 0B;
  # .MEM_29 = VDEF <.MEM_31>
  MEM[(struct pairD.28129 *)&D.44154 + 8B] = _57;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 404, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.50529 => &__jD.42490
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  __j$_M_node_25 = _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_baseD.27725 (_57);
  # DEBUG __j$_M_nodeD.50547 => __j$_M_node_25
  # VUSE <.MEM_59>
  pretmp_67 = MEM[(long unsigned intD.14 *)__k_12(D) + 8B];
  # VUSE <.MEM_59>
  pretmp_80 = MEM[(charD.10 * *)__k_12(D)];
  # VUSE <.MEM_59>
  pretmp_79 = MEM[(long unsigned intD.14 *)__j$_M_node_25 + 40B];
  # VUSE <.MEM_59>
  pretmp_64 = MEM[(charD.10 * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 854, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       26 [55.0%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # .MEM_58 = PHI <.MEM_47(26), .MEM_59(17)>
  # PT = nonlocal escaped 
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # PT = nonlocal escaped 
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # PT = nonlocal escaped 
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_nodeD.50547 => __j$_M_node_20
  # DEBUG __xD.50537 => __j$_M_node_20
  # DEBUG __xD.48212 => __j$_M_node_20
  # DEBUG thisD.48213 => __j$_M_node_20
  # DEBUG D#154ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__j$_M_node_20]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#154ptD.0
  # DEBUG __xD.50539 => D#154ptD.0
  # DEBUG thisD.50538 => D#153ptD.0
  # DEBUG D#1126ptD.0 => &MEM[(const struct pairD.34184 &)__j$_M_node_20 + 32].firstD.35901
  # DEBUG D#366ptD.0 => &this_9(D)->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#366ptD.0
  # DEBUG __xD.50531 => D#1126ptD.0
  # DEBUG __yD.50532 => __k_12(D)
  # DEBUG thisD.50533 => D#203ptD.0
  # DEBUG __lhsD.50535 => D#1126ptD.0
  # DEBUG __rhsD.50534 => __k_12(D)
  # DEBUG thisD.59066 => D#1126ptD.0
  # DEBUG __strD.59067 => __k_12(D)
  # DEBUG D#1142ptD.0 => MEM[(long unsigned intD.14 *)__j$_M_node_20 + 40B]
  # DEBUG D#2ptD.0 => D#1126ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59068 => D#1142ptD.0
  # DEBUG D#1141ptD.0 => MEM[(long unsigned intD.14 *)__k_12(D) + 8B]
  # DEBUG D#2ptD.0 => __k_12(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59069 => D#1141ptD.0
  # DEBUG __aD.59076 => &__sizeD.59068
  # DEBUG __bD.59075 => &__osizeD.59069
  # DEBUG __lenD.59070 => D#1124ptD.0
  # DEBUG thisD.48671 => __k_12(D)
  # DEBUG D#1140ptD.0 => MEM[(charD.10 * *)__k_12(D)]
  # DEBUG D#3ptD.0 => __k_12(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1139ptD.0 => MEM[(charD.10 * *)__j$_M_node_20 + 32B]
  # DEBUG D#3ptD.0 => D#1126ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59079 => D#1139ptD.0
  # DEBUG __s2D.59078 => D#1140ptD.0
  # DEBUG __nD.59077 => D#1124ptD.0
  # VUSE <.MEM_58>
  # USE = nonlocal escaped 
  __r_51 = memcmpD.989 (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __rD.59071 => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 521, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59073 => D#1142ptD.0
  # DEBUG __n2D.59072 => D#1141ptD.0
  # RANGE [0, 18446744073709551615]
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_typeD.11503) _52;
  # DEBUG __dD.59074 => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;
;;    succ:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 130, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_54 = (intD.9) _52;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 462, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __rD.59071 => __r_55
  # DEBUG D#1137ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59068 => D#1137ptD.0
  # DEBUG D#1138ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59069 => D#1138ptD.0
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 22, next block 31, flags: (NEW, REACHABLE)
;;    pred:       22 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       31 [100.0%]  (FALLTHRU)

;;   basic block 31, loop depth 0, count 0, freq 163, maybe hot
;;    prev block 23, next block 24, flags: (NEW)
;;    pred:       23 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59071 => NULL
  # DEBUG thisD.50541 => &D.42498
  # DEBUG __aD.50542 => &D.42496
  # DEBUG __bD.50543 => &D.42497
  # .MEM_28 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.44154] = 0B;
  # .MEM_27 = VDEF <.MEM_28>
  MEM[(struct pairD.28129 *)&D.44154 + 8B] = _5;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 31, next block 30, flags: (NEW, REACHABLE)
;;    pred:       22 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 691, maybe hot
;;    prev block 24, next block 25, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59071 => NULL
  # DEBUG thisD.50544 => &D.42500
  # DEBUG __aD.50545 => &__jD.42490._M_nodeD.35880
  # DEBUG __bD.50546 => &D.42499
  # .MEM_11 = VDEF <.MEM_58>
  MEM[(struct pairD.28129 *)&D.44154] = __j$_M_node_20;
  # .MEM_30 = VDEF <.MEM_11>
  MEM[(struct pairD.28129 *)&D.44154 + 8B] = 0B;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 30, next block 29, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_29(16), .MEM_27(31), .MEM_30(30)>
;;    succ:       29 [100.0%]  (FALLTHRU)

;;   basic block 29, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 25, next block 1, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU)
  # DEBUG D#365ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.50547 => D#365ptD.0
  # VUSE <.MEM_7>
  return D.44154;
;;    succ:       EXIT [100.0%] 

}



;; Function void Configuration::Assign(const string&, double) (_ZN13Configuration6AssignERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEd, funcdef_no=1732, decl_uid=35267, cgraph_uid=418, symbol_order=420)


Pass statistics:
----------------

void Configuration::Assign(const string&, double) (struct ConfigurationD.32032 * const thisD.35776, const struct stringD.2845 & fieldD.35773, doubleD.39 valueD.35774)
Eh tree:
   9 cleanup land:{6,<L9>},{3,<L11>}
     12 must_not_throw
     11 cleanup land:{5,<L8>}
     10 try land:{7,<L10>},{4,<L12>} catch:{}
   6 cleanup land:{2,<L3>}
{
  struct _Rb_tree_node_baseD.27676 * SR.1330D.59504;
  struct _Rb_tree_node_baseD.27676 * SR.1329D.59503;
  struct _Rb_tree_node_baseD.27676 * SR.1328D.59502;
  const struct _Rb_tree_node_baseD.27676 * __posD.59501;
  struct _Rb_tree_node_baseD.27676 * SR.1326D.59500;
  struct _Rb_tree_node_baseD.27676 * SR.1325D.59499;
  size_typeD.11502 __dnewD.59471;
  const size_typeD.11502 __sizeD.59421;
  const size_typeD.11502 __osizeD.59422;
  const size_typeD.11502 __lenD.59423;
  intD.9 __rD.59424;
  const difference_typeD.11503 __dD.59427;
  intD.9 D.59433;
  boolD.2757 __insert_leftD.59394;
  struct iteratorD.34708 D.59418;
  size_typeD.11502 __dnewD.59363;
  struct iteratorD.34708 D.59359;
  struct pairD.28129 __resD.59354;
  struct _Rb_tree_node_baseD.27676 * __res$firstD.59358;
  struct _Rb_tree_node_baseD.27676 * __res$secondD.59357;
  struct const_iteratorD.34710 __positionD.59351;
  const size_typeD.11502 __sizeD.59337;
  const size_typeD.11502 __osizeD.59338;
  const size_typeD.11502 __lenD.59339;
  intD.9 __rD.59340;
  const difference_typeD.11503 __dD.59343;
  intD.9 D.59349;
  const size_typeD.11502 __sizeD.59322;
  const size_typeD.11502 __osizeD.59323;
  const size_typeD.11502 __lenD.59324;
  intD.9 __rD.59325;
  const difference_typeD.11503 __dD.59328;
  intD.9 D.59334;
  struct iteratorD.34708 D.59319;
  struct _Rb_tree_nodeD.34408 * __yD.59309;
  struct value_typeD.34190 D.59302;
  struct iteratorD.34981 D.59301;
  struct iteratorD.34708 D.59300;
  struct const_iteratorD.34710 __posD.59267;
  struct _Rb_tree_node_baseD.27676 * const __i$_M_nodeD.59299;
  struct _Rb_tree_node_baseD.27676 * SR.1141D.59298;
  struct _Rb_tree_node_baseD.27676 * SR.1144D.59297;
  mapped_typeD.34189 & D.59296;
  const size_typeD.11502 __sizeD.59215;
  const size_typeD.11502 __osizeD.59216;
  const size_typeD.11502 __lenD.59217;
  intD.9 __rD.59218;
  const difference_typeD.11503 __dD.59221;
  intD.9 D.59227;
  const size_typeD.11502 __sizeD.59200;
  const size_typeD.11502 __osizeD.59201;
  const size_typeD.11502 __lenD.59202;
  intD.9 __rD.59203;
  const difference_typeD.11503 __dD.59206;
  intD.9 D.59212;
  struct iteratorD.34708 D.59197;
  struct _Rb_tree_nodeD.34408 * __yD.59187;
  struct _Rb_tree_node_baseD.27676 * SR.1153D.55239;
  struct iteratorD.34981 D.55215;
  struct basic_stringD.2844 D.35952;
  charD.10 * const _3;
  const size_typeD.11502 _17;
  const size_typeD.11502 pretmp_19;
  charD.10 * const pretmp_21;
  boolD.2757 _27;
  charD.10 * const _39;
  long unsigned intD.14 _41;
  const size_typeD.11502 _47;
  charD.10 * const _50;
  long unsigned intD.14 _53;
  struct _Rep_typeD.34402 * _58;
  charD.10 * _66;
  charD.10 * const _68;
  charD.10 * const _71;
  size_typeD.11502 prephitmp_73;
  charD.10 * const pretmp_78;
  const size_typeD.11502 _81;
  charD.10 * const _86;
  long unsigned intD.14 _88;
  boolD.2757 _92;
  const size_typeD.11502 _94;
  charD.10 * const prephitmp_96;
  charD.10 * const _97;
  long unsigned intD.14 _100;
  boolD.2757 _104;
  charD.10 * _113;
  long unsigned intD.14 __dnew.111_114;
  const char_typeD.6439 _116;
  charD.10 * _119;
  struct _Rb_tree_nodeD.34408 * _124;
  intD.9 _127;
  long unsigned intD.14 _128;
  long unsigned intD.14 _129;
  const size_typeD.11502 _130;
  const size_typeD.11502 _131;
  charD.10 * const _134;
  charD.10 * const _135;
  long unsigned intD.14 _137;
  struct pairD.34184 * _142;
  charD.10 * _144;
  charD.10 * const _145;
  const size_typeD.11502 _146;
  charD.10 * _147;
  doubleD.39 _148;
  voidD.45 * _149;
  charD.10 * _155;
  long unsigned intD.14 __dnew.111_156;
  const char_typeD.6439 _158;
  charD.10 * _161;
  charD.10 * const pretmp_165;
  size_typeD.11502 pretmp_169;
  charD.10 * const _173;
  charD.10 * const prephitmp_179;
  size_typeD.11502 prephitmp_180;
  size_typeD.11502 pretmp_181;
  boolD.2757 _264;
  boolD.2757 _268;
  boolD.2757 _269;
  boolD.2757 _272;
  charD.10 * const _292;
  boolD.2757 _294;
  boolD.2757 _296;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.55216 => &matchD.35778
  # DEBUG match$_M_nodeD.55232 => 0B
  # DEBUG D#637ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55212 => D#637ptD.0
  # DEBUG __xD.55213 => field_5(D)
  # DEBUG D#1194ptD.0 => &MEM[(struct mapD.34186 *)this_4(D) + 136B]._M_tD.34405
  # DEBUG thisD.59173 => D#1194ptD.0
  # DEBUG __kD.59174 => field_5(D)
  # DEBUG thisD.59184 => D#1194ptD.0
  # PT = nonlocal 
  __pos_23 = &MEM[(struct _Rb_treeD.34404 *)this_4(D) + 136B]._M_implD.34482._M_headerD.34637;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __pos_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_4(D) + 152B];
  # DEBUG D#37ptD.0 => D#1194ptD.0
  # DEBUG thisD.49232 => D#37ptD.0
  # DEBUG D#229ptD.0 => D#1194ptD.0
  # DEBUG __xD.59188 => NULL
  # DEBUG __yD.59187 => NULL
  # DEBUG __kD.59186 => field_5(D)
  # DEBUG __yD.59187 => __pos_23
  # DEBUG __xD.59188 => __pos_24
  if (__pos_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_19 = MEM[(long unsigned intD.14 *)field_5(D) + 8B];
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  pretmp_21 = MEM[(charD.10 * *)field_5(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_320 = PHI <.MEM_2(D)(2), .MEM_132(14), .MEM_132(17), .MEM_132(19)>
  # DEBUG thisD.49246 => D#1194ptD.0
  # DEBUG thisD.49248 => NULL
  # DEBUG __xD.49247 => __pos_23
  # DEBUG D#230ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49250 => D#230ptD.0
  # DEBUG thisD.55210 => &match.67D.35896
  # DEBUG __itD.55211 => &D.35892
  # DEBUG match$_M_nodeD.55232 => __pos_23
  # DEBUG D#638ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55206 => D#638ptD.0
  # DEBUG D#63ptD.0 => &D#638ptD.0->_M_tD.34405
  # DEBUG thisD.55207 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55204 => &D.35951
  # DEBUG __itD.55205 => &D.35897
  # DEBUG thisD.55201 => &matchD.35778
  # DEBUG __xD.55202 => &D.35951
  # DEBUG D#230ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49250 => D#230ptD.0
  # DEBUG thisD.55210 => &match.67D.35896
  # DEBUG __itD.55211 => &D.35892
  # DEBUG match$_M_nodeD.55232 => __pos_23
  # DEBUG D#638ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55206 => D#638ptD.0
  # DEBUG D#63ptD.0 => &D#638ptD.0->_M_tD.34405
  # DEBUG thisD.55207 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55204 => &D.35951
  # DEBUG __itD.55205 => &D.35897
  # DEBUG thisD.55201 => &matchD.35778
  # DEBUG __xD.55202 => &D.35951
  # .MEM_13 = VDEF <.MEM_320>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  D.35952 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown double field: ", field_5(D)); [return slot optimization]
  [LP 2] # .MEM_14 = VDEF <.MEM_13>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_4(D), &D.35952, 0);
;;    succ:       68 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_57 = PHI <__pos_28(12), __pos_29(13)>
  # PT = nonlocal escaped 
  # __pos_80 = PHI <__pos_318(12), __pos_322(13)>
  # DEBUG __yD.59187 => __pos_80
  # DEBUG __xD.59188 => __pos_57
  if (__pos_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_318 = PHI <__pos_24(3), __pos_57(6)>
  # PT = nonlocal escaped 
  # __pos_322 = PHI <__pos_23(3), __pos_80(6)>
  # .MEM_132 = PHI <.MEM_2(D)(3), .MEM_132(6)>
  # DEBUG __yD.59187 => __pos_322
  # DEBUG __xD.59188 => __pos_318
  # DEBUG __xD.59189 => __pos_318
  # DEBUG __xD.49158 => __pos_318
  # DEBUG thisD.49159 => __pos_318
  # DEBUG D#226ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__pos_318]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#226ptD.0
  # DEBUG __xD.59191 => D#226ptD.0
  # DEBUG thisD.59190 => D#153ptD.0
  # DEBUG D#1195ptD.0 => &MEM[(const struct pairD.34184 &)__pos_318 + 32].firstD.35901
  # DEBUG D#227ptD.0 => &D#228ptD.0->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#227ptD.0
  # DEBUG __xD.59194 => D#1195ptD.0
  # DEBUG __yD.59193 => field_5(D)
  # DEBUG thisD.59192 => D#203ptD.0
  # DEBUG __lhsD.59196 => D#1195ptD.0
  # DEBUG __rhsD.59195 => field_5(D)
  # DEBUG thisD.59198 => D#1195ptD.0
  # DEBUG __strD.59199 => field_5(D)
  # VUSE <.MEM_132>
  _17 = MEM[(long unsigned intD.14 *)__pos_318 + 40B];
  # DEBUG D#2ptD.0 => D#1195ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59200 => _17
  # DEBUG D#1242ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59201 => D#1242ptD.0
  # DEBUG __aD.59208 => &__sizeD.59200
  # DEBUG __bD.59207 => &__osizeD.59201
  __len_309 = MIN_EXPR <_17, pretmp_19>;
  # DEBUG __lenD.59202 => D#1189ptD.0
  # DEBUG thisD.48671 => field_5(D)
  # DEBUG D#1241ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _39 = MEM[(charD.10 * *)__pos_318 + 32B];
  # DEBUG D#3ptD.0 => D#1195ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59211 => _39
  # DEBUG __s2D.59210 => D#1241ptD.0
  # DEBUG __nD.59209 => D#1189ptD.0
  # VUSE <.MEM_132>
  # USE = nonlocal escaped 
  __r_40 = memcmpD.989 (_39, pretmp_21, __len_309);
  # DEBUG __rD.59203 => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59205 => _17
  # DEBUG __n2D.59204 => D#1242ptD.0
  # RANGE [0, 18446744073709551615]
  _41 = _17 - pretmp_19;
  __d_42 = (const difference_typeD.11503) _41;
  # DEBUG __dD.59206 => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_43 = (intD.9) _41;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __rD.59203 => __r_44
  # DEBUG D#1205ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59200 => D#1205ptD.0
  # DEBUG D#1206ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59201 => D#1206ptD.0
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59203 => NULL
  # DEBUG __yD.59187 => __pos_318
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __pos_28 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_318 + 16B];
  # DEBUG D#48ptD.0 => __pos_318
  # DEBUG __xD.49191 => D#48ptD.0
  # DEBUG __xD.59188 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59203 => NULL
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __pos_29 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_318 + 24B];
  # DEBUG D#47ptD.0 => __pos_318
  # DEBUG __xD.49190 => D#47ptD.0
  # DEBUG __xD.59188 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_312 = PHI <__pos_80(5)>
  # DEBUG thisD.49189 => NULL
  # DEBUG __xD.49188 => __pos_312
  # DEBUG __j$_M_nodeD.49250 => __pos_312
  # DEBUG thisD.49212 => D#1194ptD.0
  # DEBUG thisD.49214 => NULL
  # DEBUG __xD.49213 => __pos_23
  # DEBUG thisD.49209 => &__jD.59175
  # DEBUG __xD.49210 => NULL
  if (__pos_23 == __pos_312)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.59176 => __pos_312
  # DEBUG __xD.48212 => __pos_312
  # DEBUG thisD.48213 => __pos_312
  # DEBUG D#154ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__pos_312]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#154ptD.0
  # DEBUG __xD.59178 => D#154ptD.0
  # DEBUG thisD.59177 => D#153ptD.0
  # DEBUG D#1196ptD.0 => &MEM[(const struct pairD.34184 &)__pos_312 + 32].firstD.35901
  # DEBUG D#231ptD.0 => &MEM[(struct _Rb_treeD.34404 *)D#1194ptD.0]._M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#231ptD.0
  # DEBUG __xD.59181 => field_5(D)
  # DEBUG __yD.59180 => D#1196ptD.0
  # DEBUG thisD.59179 => D#203ptD.0
  # DEBUG __lhsD.59183 => field_5(D)
  # DEBUG __rhsD.59182 => D#1196ptD.0
  # DEBUG thisD.59213 => field_5(D)
  # DEBUG __strD.59214 => D#1196ptD.0
  # DEBUG D#1240ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59215 => D#1240ptD.0
  # VUSE <.MEM_132>
  _47 = MEM[(long unsigned intD.14 *)__pos_312 + 40B];
  # DEBUG D#2ptD.0 => D#1196ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59216 => _47
  # DEBUG __aD.59223 => &__sizeD.59215
  # DEBUG __bD.59222 => &__osizeD.59216
  __len_305 = MIN_EXPR <pretmp_19, _47>;
  # DEBUG __lenD.59217 => D#1190ptD.0
  # DEBUG thisD.48671 => D#1196ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _50 = MEM[(charD.10 * *)__pos_312 + 32B];
  # DEBUG D#3ptD.0 => D#1196ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1239ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59226 => D#1239ptD.0
  # DEBUG __s2D.59225 => _50
  # DEBUG __nD.59224 => D#1190ptD.0
  # VUSE <.MEM_132>
  # USE = nonlocal escaped 
  __r_52 = memcmpD.989 (pretmp_21, _50, __len_305);
  # DEBUG __rD.59218 => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59220 => D#1240ptD.0
  # DEBUG __n2D.59219 => _47
  # RANGE [0, 18446744073709551615]
  _53 = pretmp_19 - _47;
  __d_54 = (const difference_typeD.11503) _53;
  # DEBUG __dD.59221 => __d_54
  if (__d_54 > 2147483647)
    goto <bb 77>;
  else
    goto <bb 17>;
;;    succ:       77 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_55 = (intD.9) _53;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __rD.59218 => __r_56
  # DEBUG D#1211ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59215 => D#1211ptD.0
  # DEBUG D#1212ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59216 => D#1212ptD.0
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 77>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_34 = PHI <__pos_76(28), __pos_77(29)>
  # PT = nonlocal escaped 
  # __pos_33 = PHI <__pos_319(28), __pos_141(29)>
  # DEBUG __yD.59309 => __pos_33
  # DEBUG __xD.59310 => __pos_34
  if (__pos_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;
;;    succ:       30 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 8277, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       77 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_319 = PHI <__pos_24(22), __pos_34(21)>
  # PT = nonlocal escaped 
  # __pos_141 = PHI <__pos_23(22), __pos_33(21)>
  # .MEM_95 = PHI <.MEM_132(22), .MEM_95(21)>
  # DEBUG __yD.59309 => __pos_141
  # DEBUG __xD.59310 => __pos_319
  # DEBUG __xD.59311 => __pos_319
  # DEBUG __xD.49158 => __pos_319
  # DEBUG thisD.49159 => __pos_319
  # DEBUG D#226ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__pos_319]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#226ptD.0
  # DEBUG __xD.59313 => D#226ptD.0
  # DEBUG thisD.59312 => D#153ptD.0
  # DEBUG D#1198ptD.0 => &MEM[(const struct pairD.34184 &)__pos_319 + 32].firstD.35901
  # DEBUG D#227ptD.0 => &D#228ptD.0->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#227ptD.0
  # DEBUG __xD.59316 => D#1198ptD.0
  # DEBUG __yD.59315 => field_5(D)
  # DEBUG thisD.59314 => D#203ptD.0
  # DEBUG __lhsD.59318 => D#1198ptD.0
  # DEBUG __rhsD.59317 => field_5(D)
  # DEBUG thisD.59320 => D#1198ptD.0
  # DEBUG __strD.59321 => field_5(D)
  # VUSE <.MEM_95>
  _81 = MEM[(long unsigned intD.14 *)__pos_319 + 40B];
  # DEBUG D#2ptD.0 => D#1198ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59322 => _81
  # DEBUG D#1238ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59323 => D#1238ptD.0
  # DEBUG __aD.59330 => &__sizeD.59322
  # DEBUG __bD.59329 => &__osizeD.59323
  __len_302 = MIN_EXPR <pretmp_19, _81>;
  # DEBUG __lenD.59324 => D#1191ptD.0
  # DEBUG thisD.48671 => field_5(D)
  # DEBUG D#1237ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _86 = MEM[(charD.10 * *)__pos_319 + 32B];
  # DEBUG D#3ptD.0 => D#1198ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59333 => _86
  # DEBUG __s2D.59332 => D#1237ptD.0
  # DEBUG __nD.59331 => D#1191ptD.0
  # VUSE <.MEM_95>
  # USE = nonlocal escaped 
  __r_87 = memcmpD.989 (_86, pretmp_21, __len_302);
  # DEBUG __rD.59325 => NULL
  if (__r_87 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 5549, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59327 => _81
  # DEBUG __n2D.59326 => D#1238ptD.0
  # RANGE [0, 18446744073709551615]
  _88 = _81 - pretmp_19;
  __d_89 = (const difference_typeD.11503) _88;
  # DEBUG __dD.59328 => __d_89
  if (__d_89 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;
;;    succ:       28 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 2774, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_89 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;
;;    succ:       29 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 1387, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_90 = (intD.9) _88;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 4934, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       23 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_91 = PHI <__r_87(23), __r_90(26)>
  # DEBUG __rD.59325 => __r_91
  # DEBUG D#1217ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59322 => D#1217ptD.0
  # DEBUG D#1218ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59323 => D#1218ptD.0
  if (__r_91 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59325 => NULL
  # DEBUG __yD.59309 => __pos_319
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  __pos_76 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_319 + 16B];
  # DEBUG D#48ptD.0 => __pos_319
  # DEBUG __xD.49191 => D#48ptD.0
  # DEBUG __xD.59310 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59325 => NULL
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  __pos_77 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_319 + 24B];
  # DEBUG D#47ptD.0 => __pos_319
  # DEBUG __xD.49190 => D#47ptD.0
  # DEBUG __xD.59310 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_313 = PHI <__pos_33(20)>
  # DEBUG thisD.49189 => NULL
  # DEBUG __xD.49188 => __pos_313
  # DEBUG __i$_M_nodeD.59299 => __pos_313
  # DEBUG thisD.59294 => D#1197ptD.0
  # DEBUG D#63ptD.0 => &D#1197ptD.0->_M_tD.34405
  # DEBUG thisD.59295 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55105 => &__iD.59230
  # DEBUG __xD.55106 => NULL
  if (__pos_23 == __pos_313)
    goto <bb 71>;
  else
    goto <bb 31>;
;;    succ:       71 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 765, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55125 => &__iD.59230
  # DEBUG thisD.55126 => __pos_313
  # DEBUG D#633ptD.0 => &MEM[(struct _Rb_tree_nodeD.34408 *)__pos_313]._M_value_fieldD.38976
  # DEBUG __rD.48217 => D#633ptD.0
  # DEBUG D#1199ptD.0 => &MEM[(struct pairD.34184 &)__pos_313 + 32].firstD.35901
  # DEBUG D#69ptD.0 => D#1197ptD.0
  # DEBUG thisD.55122 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#69ptD.0
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_tD.34405
  # DEBUG D#66ptD.0 => D#67ptD.0
  # DEBUG thisD.47555 => D#66ptD.0
  # DEBUG __xD.59289 => field_5(D)
  # DEBUG __yD.59288 => D#1199ptD.0
  # DEBUG thisD.59287 => D#203ptD.0
  # DEBUG __lhsD.59291 => field_5(D)
  # DEBUG __rhsD.59290 => D#1199ptD.0
  # DEBUG thisD.59335 => field_5(D)
  # DEBUG __strD.59336 => D#1199ptD.0
  # DEBUG D#1236ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59337 => D#1236ptD.0
  # VUSE <.MEM_95>
  _94 = MEM[(long unsigned intD.14 *)__pos_313 + 40B];
  # DEBUG D#2ptD.0 => D#1199ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59338 => _94
  # DEBUG __aD.59345 => &__sizeD.59337
  # DEBUG __bD.59344 => &__osizeD.59338
  __len_301 = MIN_EXPR <pretmp_19, _94>;
  # DEBUG __lenD.59339 => D#1192ptD.0
  # DEBUG thisD.48671 => D#1199ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _97 = MEM[(charD.10 * *)__pos_313 + 32B];
  # DEBUG D#3ptD.0 => D#1199ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1235ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59348 => D#1235ptD.0
  # DEBUG __s2D.59347 => _97
  # DEBUG __nD.59346 => D#1192ptD.0
  # VUSE <.MEM_95>
  # USE = nonlocal escaped 
  __r_99 = memcmpD.989 (pretmp_21, _97, __len_301);
  # DEBUG __rD.59340 => NULL
  if (__r_99 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 466, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59342 => D#1236ptD.0
  # DEBUG __n2D.59341 => _94
  # RANGE [0, 18446744073709551615]
  _100 = pretmp_19 - _94;
  __d_101 = (const difference_typeD.11503) _100;
  # DEBUG __dD.59343 => __d_101
  if (__d_101 > 2147483647)
    goto <bb 63>;
  else
    goto <bb 33>;
;;    succ:       63 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 233, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_101 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;
;;    succ:       36 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_102 = (intD.9) _100;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 415, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       31 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_103 = PHI <__r_99(31), __r_102(34)>
  # DEBUG __rD.59340 => __r_103
  # DEBUG D#1223ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59337 => D#1223ptD.0
  # DEBUG D#1224ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59338 => D#1224ptD.0
  if (__r_103 < 0)
    goto <bb 71>;
  else
    goto <bb 63>;
;;    succ:       71 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_293 = PHI <.MEM_95(33), .MEM_60(71)>
  # PT = nonlocal escaped 
  # __pos_133 = PHI <__pos_313(33), __pos_162(71)>
  # DEBUG thisD.59272 => &D.59302
  # DEBUG __aD.59271 => field_5(D)
  # DEBUG __bD.59270 => NULL
  # DEBUG thisD.59274 => &D.59302.firstD.35901
  # DEBUG __strD.59273 => field_5(D)
  # DEBUG thisD.50825 => field_5(D)
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)field_5(D)]._M_dataplusD.11519
  # DEBUG thisD.59275 => &D.59302.firstD.35901
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.59302]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.59278 => D#381ptD.0
  # DEBUG __datD.59277 => &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541
  # DEBUG __aD.59276 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_204 = VDEF <.MEM_293>
  MEM[(struct _Alloc_hiderD.11518 *)&D.59302]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541;
  # DEBUG D#1234ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # DEBUG D#1233ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#1ptD.0 => field_5(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _66 = pretmp_21 + pretmp_19;
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.59281 => &D.59302.firstD.35901
  # DEBUG __begD.59280 => D#1234ptD.0
  # DEBUG __endD.59279 => _66
  # DEBUG thisD.59285 => &D.59302.firstD.35901
  # DEBUG __begD.59284 => D#1234ptD.0
  # DEBUG __endD.59283 => _66
  # DEBUG thisD.59360 => &D.59302.firstD.35901
  # DEBUG __begD.59361 => D#1234ptD.0
  # DEBUG __endD.59362 => _66
  # DEBUG __ptrD.51229 => D#1234ptD.0
  # RANGE [0, 1]
  _92 = _66 != 0B;
  # RANGE [0, 1]
  _104 = pretmp_21 == 0B;
  # RANGE [0, 1]
  _296 = _92 & _104;
  if (_296 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;
;;    succ:       73 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       72 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_206 = VDEF <.MEM_205>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _113 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.59302.firstD.35901, &__dnewD.59363, 0);
  # DEBUG D#6ptD.0 => &D.59302.firstD.35901
  # DEBUG __pD.59382 => _113
  # DEBUG thisD.59381 => D#6ptD.0
  # .MEM_207 = VDEF <.MEM_206>
  MEM[(charD.10 * *)&D.59302] = _113;
  # VUSE <.MEM_207>
  __dnew.111_114 = __dnewD.59363;
  # DEBUG D#7ptD.0 => &D.59302.firstD.35901
  # DEBUG __capacityD.59384 => __dnew.111_114
  # DEBUG thisD.59383 => D#7ptD.0
  # .MEM_208 = VDEF <.MEM_207>
  MEM[(size_typeD.11502 *)&D.59302 + 16B] = __dnew.111_114;
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59366 => _113
  # DEBUG __k1D.59365 => D#1234ptD.0
  # DEBUG __k2D.59364 => _66
  # DEBUG __dD.59369 => _113
  # DEBUG __sD.59368 => D#1234ptD.0
  # DEBUG __nD.59367 => D#1233ptD.0
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       72 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59366 => &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541
  # DEBUG __k1D.59365 => D#1234ptD.0
  # DEBUG __k2D.59364 => _66
  # DEBUG __dD.59369 => &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541
  # DEBUG __sD.59368 => D#1234ptD.0
  # DEBUG __nD.59367 => D#1233ptD.0
  if (pretmp_19 == 1)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_205>
  _116 = MEM[(const char_typeD.6439 &)pretmp_21];
  # DEBUG D#13ptD.0 => D#1234ptD.0
  # DEBUG __c1D.59374 => &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541
  # DEBUG __c2D.59373 => D#13ptD.0
  # .MEM_209 = VDEF <.MEM_205>
  MEM[(char_typeD.6439 &)&D.59302 + 16] = _116;
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.59302 } (escaped)
  # _173 = PHI <&MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541(38), _113(37)>
  # .MEM_290 = PHI <.MEM_205(38), .MEM_208(37)>
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59366 => _173
  # DEBUG __k1D.59365 => D#1234ptD.0
  # DEBUG __k2D.59364 => _66
  # DEBUG __dD.59369 => _173
  # DEBUG __sD.59368 => D#1234ptD.0
  # DEBUG __nD.59367 => D#1233ptD.0
  # DEBUG __s1D.59372 => _173
  # DEBUG __s2D.59371 => D#1234ptD.0
  # DEBUG __nD.59370 => D#1233ptD.0
  # .MEM_210 = VDEF <.MEM_290>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  memcpyD.992 (_173, pretmp_21, pretmp_19);
  # VUSE <.MEM_210>
  pretmp_181 = __dnewD.59363;
  # VUSE <.MEM_210>
  pretmp_165 = MEM[(charD.10 * *)&D.59302];
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_168 = PHI <.MEM_209(39), .MEM_210(40)>
  # prephitmp_180 = PHI <pretmp_19(39), pretmp_181(40)>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  # prephitmp_179 = PHI <&MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541(39), pretmp_165(40)>
  # DEBUG D#1232ptD.0 => __dnewD.59363
  # DEBUG thisD.59376 => &D.59302.firstD.35901
  # DEBUG __nD.59375 => D#1232ptD.0
  # DEBUG D#5ptD.0 => &D.59302.firstD.35901
  # DEBUG __lengthD.59378 => D#1232ptD.0
  # DEBUG thisD.59377 => D#5ptD.0
  # .MEM_211 = VDEF <.MEM_168>
  MEM[(size_typeD.11502 *)&D.59302 + 8B] = prephitmp_180;
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _119 = prephitmp_179 + prephitmp_180;
  # DEBUG __c1D.59380 => _119
  # DEBUG __c2D.59379 => D#13ptD.0
  # .MEM_212 = VDEF <.MEM_211>
  MEM[(char_typeD.6439 &)_119] = 0;
  # .MEM_213 = VDEF <.MEM_212>
  __dnewD.59363 ={v} {CLOBBER};
  # .MEM_214 = VDEF <.MEM_213>
  D.59302.secondD.35902 = 0.0;
  # DEBUG thisD.59265 => D#1197ptD.0
  # DEBUG __position$_M_nodeD.55197 => __pos_133
  # DEBUG __xD.59263 => &D.59302
  # DEBUG thisD.55149 => NULL
  # DEBUG __itD.55148 => &__positionD.59264
  # DEBUG thisD.59268 => D#1243ptD.0
  # DEBUG __posD.59501 => __pos_133
  # DEBUG __xD.59266 => &D.59302
  # DEBUG thisD.55099 => &__anD.59269
  # DEBUG __tD.55098 => D#1243ptD.0
  # DEBUG __an$_M_tD.55092 => D#1243ptD.0
  # DEBUG D#632ptD.0 => &__anD.59269
  # DEBUG thisD.59350 => D#1243ptD.0
  # .MEM_216 = VDEF <.MEM_214>
  MEM[(struct _Rb_tree_const_iteratorD.34711 *)&__positionD.59351] = __pos_133;
  # DEBUG __vD.59352 => &D.59302
  # DEBUG __node_genD.59353 => D#632ptD.0
  # DEBUG D#631ptD.0 => D#632ptD.0
  # DEBUG __xD.59356 => &D.59302
  # DEBUG thisD.59355 => D#153ptD.0
  # PT = nonlocal 
  _58 = &MEM[(struct mapD.34186 *)this_4(D) + 136B]._M_tD.34405;
  # .MEM_217 = VDEF <.MEM_216>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  __resD.59354 = _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_D.34722 (_58, __positionD.59351, &D.59302.firstD.35901);
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  __res$first_106 = MEM[(struct pairD.28129 *)&__resD.59354];
  # DEBUG __res$firstD.59358 => __res$first_106
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  __res$second_107 = MEM[(struct pairD.28129 *)&__resD.59354 + 8B];
  # DEBUG __res$secondD.59357 => __res$second_107
  if (__res$second_107 != 0B)
    goto <bb 42>;
  else
    goto <bb 60>;
;;    succ:       42 [59.7%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [40.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of incoming frequencies 209, should be 45
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [59.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#626ptD.0 => D#631ptD.0
  # DEBUG thisD.59389 => D#1243ptD.0
  # DEBUG __xD.59390 => __res$first_106
  # DEBUG __pD.59391 => __res$second_107
  # DEBUG __vD.59392 => &D.59302
  # DEBUG __node_genD.59393 => D#626ptD.0
  # DEBUG D#625ptD.0 => D#626ptD.0
  # DEBUG thisD.59417 => D#1243ptD.0
  _294 = __pos_23 == __res$second_107;
  # RANGE [0, 1]
  _27 = __res$first_106 != 0B;
  _264 = _27 | _294;
  if (_264 != 0)
    goto <bb 48>;
  else
    goto <bb 43>;
;;    succ:       48 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 41, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.59407 => __res$second_107
  # DEBUG __xD.48212 => __res$second_107
  # DEBUG thisD.48213 => __res$second_107
  # DEBUG D#154ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__res$second_107]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#154ptD.0
  # DEBUG __xD.59409 => D#154ptD.0
  # DEBUG thisD.59408 => D#153ptD.0
  # DEBUG D#1200ptD.0 => &MEM[(const struct pairD.34184 &)__res$second_107 + 32].firstD.35901
  # DEBUG __xD.59411 => &D.59302
  # DEBUG thisD.59410 => D#153ptD.0
  # DEBUG D#624ptD.0 => &MEM[(struct _Rb_treeD.34404 *)D#1243ptD.0]._M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#624ptD.0
  # DEBUG __xD.59414 => NULL
  # DEBUG __yD.59413 => D#1200ptD.0
  # DEBUG thisD.59412 => D#203ptD.0
  # DEBUG __lhsD.59416 => NULL
  # DEBUG __rhsD.59415 => D#1200ptD.0
  # DEBUG thisD.59419 => &D.59302.firstD.35901
  # DEBUG __strD.59420 => D#1200ptD.0
  # VUSE <.MEM_217>
  _130 = MEM[(long unsigned intD.14 *)&D.59302 + 8B];
  # DEBUG D#2ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59421 => _130
  # VUSE <.MEM_217>
  _131 = MEM[(long unsigned intD.14 *)__res$second_107 + 40B];
  # DEBUG D#2ptD.0 => D#1200ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59422 => _131
  # DEBUG __aD.59429 => &__sizeD.59421
  # DEBUG __bD.59428 => &__osizeD.59422
  __len_59 = MIN_EXPR <_130, _131>;
  # DEBUG __lenD.59423 => D#1193ptD.0
  # DEBUG thisD.48671 => D#1200ptD.0
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  _134 = MEM[(charD.10 * *)__res$second_107 + 32B];
  # DEBUG D#3ptD.0 => D#1200ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_217>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _135 = MEM[(charD.10 * *)&D.59302];
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59432 => _135
  # DEBUG __s2D.59431 => _134
  # DEBUG __nD.59430 => D#1193ptD.0
  # VUSE <.MEM_217>
  # USE = nonlocal escaped null { D.59302 } (escaped)
  __r_136 = memcmpD.989 (_135, _134, __len_59);
  # DEBUG __rD.59424 => NULL
  if (__r_136 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 25, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59426 => _130
  # DEBUG __n2D.59425 => _131
  # RANGE [0, 18446744073709551615]
  _137 = _130 - _131;
  __d_138 = (const difference_typeD.11503) _137;
  # DEBUG __dD.59427 => __d_138
  if (__d_138 > 2147483647)
    goto <bb 48>;
  else
    goto <bb 45>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_138 < -2147483648)
    goto <bb 48>;
  else
    goto <bb 46>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_139 = (intD.9) _137;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       43 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_140 = PHI <__r_136(43), __r_139(46)>
  # DEBUG __rD.59424 => __r_140
  # DEBUG D#1229ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59421 => D#1229ptD.0
  # DEBUG D#1230ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59422 => D#1230ptD.0
  __insert_left_300 = __r_140 < 0;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 209, maybe hot
;;   Invalid sum of incoming frequencies 46, should be 209
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       44 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # __insert_left_126 = PHI <0(44), 1(45), __insert_left_300(47), 1(42)>
  # DEBUG __insert_leftD.59394 => __insert_left_126
  # DEBUG D#623ptD.0 => D#625ptD.0
  # DEBUG __argD.59397 => &D.59302
  # DEBUG thisD.59396 => D#623ptD.0
  # DEBUG D#622ptD.0 => D#623ptD.0
  # DEBUG D#621ptD.0 => D#622ptD.0->_M_tD.40815
  # DEBUG D#620ptD.0 => D#621ptD.0
  # DEBUG __xD.59399 => &D.59302
  # DEBUG thisD.59398 => D#620ptD.0
  # DEBUG D#619ptD.0 => D#620ptD.0
  # DEBUG D#618ptD.0 => D#620ptD.0
  # DEBUG D#617ptD.0 => D#618ptD.0
  # DEBUG thisD.59401 => D#617ptD.0
  # DEBUG D#616ptD.0 => D#617ptD.0
  # DEBUG thisD.54923 => D#616ptD.0
  # DEBUG __nD.59403 => 1
  # DEBUG __aD.59402 => D#615ptD.0
  # DEBUG D#614ptD.0 => D#615ptD.0
  # DEBUG D#612ptD.0 => D#614ptD.0
  # DEBUG D#613ptD.0 => 0B
  # DEBUG __nD.59406 => 1
  # DEBUG thisD.59404 => D#612ptD.0
  # DEBUG D.59405 => D#613ptD.0
  # DEBUG D#611ptD.0 => D#612ptD.0
  # DEBUG D#610ptD.0 => D#611ptD.0
  # DEBUG thisD.54881 => D#610ptD.0
  [LP 6] # .MEM_223 = VDEF <.MEM_217>
  # PT = { D.59509 } (escaped heap)
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _124 = _ZnwmD.2764 (72);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 (EH,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 209, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __tmpD.59400 => _124
  # DEBUG D#505ptD.0 => D#619ptD.0
  # DEBUG __nodeD.59434 => _124
  # DEBUG __xD.59435 => &D.59302
  # DEBUG thisD.59436 => D#505ptD.0
  # DEBUG D#504ptD.0 => D#505ptD.0
  # DEBUG D#503ptD.0 => D#505ptD.0
  # DEBUG thisD.59445 => _124
  # DEBUG D#1244ptD.0 => &_124->_M_value_fieldD.38976
  # DEBUG __rD.48217 => D#1244ptD.0
  # DEBUG D#488ptD.0 => D#503ptD.0
  # DEBUG thisD.53055 => D#488ptD.0
  # DEBUG D#487ptD.0 => D#488ptD.0
  # DEBUG thisD.52721 => D#487ptD.0
  # DEBUG thisD.52713 => NULL
  # DEBUG D.52714 => NULL
  # DEBUG thisD.52711 => NULL
  # DEBUG __pD.59448 => D#1244ptD.0
  # DEBUG __valD.59447 => &D.59302
  # DEBUG thisD.59446 => D#502ptD.0
  # DEBUG D#14ptD.0 => 40
  # DEBUG __pD.52989 => D#1244ptD.0
  # DEBUG D.52990 => D#14ptD.0
  # DEBUG thisD.59450 => D#1244ptD.0
  # DEBUG D.59449 => &D.59302
  # DEBUG D#501ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.59452 => D#1244ptD.0
  # DEBUG __strD.59451 => D#501ptD.0
  # DEBUG thisD.50825 => D#501ptD.0
  # DEBUG D#380ptD.0 => &D#501ptD.0->_M_dataplusD.11519
  # DEBUG thisD.59453 => D#1244ptD.0
  # PT = { D.59509 } (escaped heap)
  _144 = &MEM[(struct basic_stringD.2844 *)_124 + 32B].D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)D#1244ptD.0]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.59456 => D#381ptD.0
  # DEBUG __datD.59455 => _144
  # DEBUG __aD.59454 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_224 = VDEF <.MEM_223>
  MEM[(struct _Alloc_hiderD.11518 *)_124 + 32B]._M_pD.11525 = _144;
  # VUSE <.MEM_224>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _145 = MEM[(charD.10 * *)&D.59302];
  # DEBUG D#3ptD.0 => D#501ptD.0
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_224>
  _146 = MEM[(long unsigned intD.14 *)&D.59302 + 8B];
  # DEBUG D#1ptD.0 => D#501ptD.0
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _147 = _145 + _146;
  # DEBUG D#3ptD.0 => D#501ptD.0
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.59459 => D#1244ptD.0
  # DEBUG __begD.59458 => _145
  # DEBUG __endD.59457 => _147
  # DEBUG thisD.59463 => D#1244ptD.0
  # DEBUG __begD.59462 => _145
  # DEBUG __endD.59461 => _147
  # DEBUG thisD.59468 => D#1244ptD.0
  # DEBUG __begD.59469 => _145
  # DEBUG __endD.59470 => _147
  # DEBUG __ptrD.51229 => _145
  # RANGE [0, 1]
  _272 = _147 != 0B;
  # RANGE [0, 1]
  _269 = _145 == 0B;
  # RANGE [0, 1]
  _268 = _269 & _272;
  if (_268 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;
;;    succ:       74 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                76 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 48, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       76 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.59509 } (escaped heap)
  _142 = &_124->_M_value_fieldD.38976;
  [LP 7] # .MEM_226 = VDEF <.MEM_225>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _155 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_142, &__dnewD.59471, 0);
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 (EH,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 48, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => D#1244ptD.0
  # DEBUG __pD.59490 => _155
  # DEBUG thisD.59489 => D#6ptD.0
  # .MEM_227 = VDEF <.MEM_226>
  MEM[(charD.10 * *)_124 + 32B] = _155;
  # VUSE <.MEM_227>
  __dnew.111_156 = __dnewD.59471;
  # DEBUG D#7ptD.0 => D#1244ptD.0
  # DEBUG __capacityD.59492 => __dnew.111_156
  # DEBUG thisD.59491 => D#7ptD.0
  # .MEM_228 = VDEF <.MEM_227>
  MEM[(size_typeD.11502 *)_124 + 48B] = __dnew.111_156;
  # DEBUG D#3ptD.0 => D#1244ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59474 => _155
  # DEBUG __k1D.59473 => _145
  # DEBUG __k2D.59472 => _147
  # DEBUG __dD.59477 => _155
  # DEBUG __sD.59476 => _145
  # DEBUG __nD.59475 => _146
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 116, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       76 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => D#1244ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59474 => _144
  # DEBUG __k1D.59473 => _145
  # DEBUG __k2D.59472 => _147
  # DEBUG __dD.59477 => _144
  # DEBUG __sD.59476 => _145
  # DEBUG __nD.59475 => _146
  if (_146 == 1)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [53.5%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [46.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [53.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_225>
  _158 = MEM[(const char_typeD.6439 &)_145];
  # DEBUG D#13ptD.0 => _145
  # DEBUG __c1D.59482 => _144
  # DEBUG __c2D.59481 => D#13ptD.0
  # .MEM_229 = VDEF <.MEM_225>
  MEM[(char_typeD.6439 &)_144] = _158;
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [46.5%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.59302 D.59509 } (escaped heap)
  # _292 = PHI <_144(52), _155(51)>
  # .MEM_288 = PHI <.MEM_225(52), .MEM_228(51)>
  # DEBUG D#3ptD.0 => D#1244ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59474 => _292
  # DEBUG __k1D.59473 => _145
  # DEBUG __k2D.59472 => _147
  # DEBUG __dD.59477 => _292
  # DEBUG __sD.59476 => _145
  # DEBUG __nD.59475 => _146
  # DEBUG __s1D.59480 => _292
  # DEBUG __s2D.59479 => _145
  # DEBUG __nD.59478 => _146
  # .MEM_230 = VDEF <.MEM_288>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  memcpyD.992 (_292, _145, _146);
  # VUSE <.MEM_230>
  pretmp_169 = __dnewD.59471;
  # VUSE <.MEM_230>
  pretmp_78 = MEM[(charD.10 * *)_124 + 32B];
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 209, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_171 = PHI <.MEM_229(53), .MEM_230(54)>
  # prephitmp_73 = PHI <_146(53), pretmp_169(54)>
  # PT = nonlocal escaped null { D.59302 D.59509 } (escaped heap)
  # prephitmp_96 = PHI <_144(53), pretmp_78(54)>
  # DEBUG D#1231ptD.0 => __dnewD.59471
  # DEBUG thisD.59484 => D#1244ptD.0
  # DEBUG __nD.59483 => D#1231ptD.0
  # DEBUG D#5ptD.0 => D#1244ptD.0
  # DEBUG __lengthD.59486 => D#1231ptD.0
  # DEBUG thisD.59485 => D#5ptD.0
  # .MEM_231 = VDEF <.MEM_171>
  MEM[(size_typeD.11502 *)_124 + 40B] = prephitmp_73;
  # DEBUG D#3ptD.0 => D#1244ptD.0
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.59302 D.59509 } (escaped heap)
  _161 = prephitmp_96 + prephitmp_73;
  # DEBUG __c1D.59488 => _161
  # DEBUG __c2D.59487 => D#13ptD.0
  # .MEM_232 = VDEF <.MEM_231>
  MEM[(char_typeD.6439 &)_161] = 0;
  # .MEM_233 = VDEF <.MEM_232>
  __dnewD.59471 ={v} {CLOBBER};
  # VUSE <.MEM_233>
  _148 = D.59302.secondD.35902;
  # .MEM_234 = VDEF <.MEM_233>
  MEM[(struct pairD.34184 *)_124 + 32B].secondD.35902 = _148;
  # DEBUG thisD.53085 => NULL
  # DEBUG thisD.53059 => NULL
  # DEBUG __zD.59395 => _124
  # RANGE [0, 1] NONZERO 1
  _127 = (intD.9) __insert_left_126;
  # .MEM_240 = VDEF <.MEM_234>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_D.27902 (_127, _124, __res$second_107, __pos_23);
  # VUSE <.MEM_240>
  _128 = MEM[(struct _Rb_treeD.34404 *)this_4(D) + 136B]._M_implD.34482._M_node_countD.34638;
  # RANGE [0, 18446744073709551615]
  _129 = _128 + 1;
  # .MEM_241 = VDEF <.MEM_240>
  MEM[(struct _Rb_treeD.34404 *)this_4(D) + 136B]._M_implD.34482._M_node_countD.34638 = _129;
  # DEBUG thisD.55037 => NULL
  # DEBUG __xD.55036 => _124
  goto <bb 60>;
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       50 (EH,EXECUTABLE)
<L10>: [LP 7]
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_226(56), .MEM_235(75)>
<L6>:
  # VUSE <.MEM_172>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _149 = __builtin_eh_pointerD.2738 (10);
  # .MEM_236 = VDEF <.MEM_172>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  __cxa_begin_catchD.14644 (_149);
  # DEBUG D#322ptD.0 => D#504ptD.0
  # DEBUG __pD.59438 => _124
  # DEBUG thisD.59437 => D#322ptD.0
  # DEBUG D#321ptD.0 => D#322ptD.0
  # DEBUG thisD.49909 => D#321ptD.0
  # DEBUG D#320ptD.0 => 1
  # DEBUG __pD.59441 => _124
  # DEBUG __aD.59439 => D#319ptD.0
  # DEBUG __nD.59440 => D#320ptD.0
  # DEBUG D#318ptD.0 => D#320ptD.0
  # DEBUG D#317ptD.0 => D#319ptD.0
  # DEBUG D#315ptD.0 => D#317ptD.0
  # DEBUG D#316ptD.0 => D#318ptD.0
  # DEBUG __pD.59444 => _124
  # DEBUG thisD.59442 => D#315ptD.0
  # DEBUG D.59443 => D#316ptD.0
  # .MEM_237 = VDEF <.MEM_236>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZdlPvD.2766 (_124);
  [LP 5] # .MEM_238 = VDEF <.MEM_237>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  __cxa_rethrowD.40506 ();
;;    succ:       58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 (EH,EXECUTABLE)
<L8>: [LP 5]
  [MNT 12] # .MEM_239 = VDEF <.MEM_238>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  __cxa_end_catchD.14643 ();
  [LP 3] resx 11
;;    succ:       59 (EH,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 (EH,EXECUTABLE)
<L11>: [LP 3]
  goto <bb 65> (<L5>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [40.3%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_174 = PHI <.MEM_241(55), .MEM_217(41)>
  # PT = nonlocal escaped { D.59509 } (escaped heap)
  # SR.1329_252 = PHI <_124(55), __res$first_106(41)>
  # DEBUG D#629ptD.0 => {CLOBBER}
  # DEBUG __res$firstD.59358 => D#629ptD.0
  # DEBUG D#630ptD.0 => {CLOBBER}
  # DEBUG __res$secondD.59357 => D#630ptD.0
  # DEBUG __i$_M_nodeD.59299 => SR.1329_252
  # DEBUG thisD.59247 => &D.59302
  # DEBUG D#191ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.59248 => D#191ptD.0
  # DEBUG thisD.59249 => D#191ptD.0
  # DEBUG thisD.59258 => D#191ptD.0
  # VUSE <.MEM_174>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _68 = MEM[(charD.10 * *)&D.59302];
  # DEBUG D#3ptD.0 => D#191ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.59259 => D#191ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541 != _68)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       60 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#191ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.59251 => D#191ptD.0
  # DEBUG __sizeD.59250 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#191ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#191ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.59254 => _68
  # DEBUG __aD.59252 => D#181ptD.0
  # DEBUG __nD.59253 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.59257 => _68
  # DEBUG thisD.59255 => D#177ptD.0
  # DEBUG D.59256 => D#178ptD.0
  # .MEM_253 = VDEF <.MEM_174>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       60 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_175 = PHI <.MEM_174(60), .MEM_253(61)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG thisD.59260 => D#187ptD.0
  # DEBUG thisD.59261 => D#187ptD.0
  # DEBUG thisD.59262 => D#187ptD.0
  # .MEM_259 = VDEF <.MEM_175>
  D.59302 ={v} {CLOBBER};
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [78.3%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped { D.59509 } (escaped heap)
  # __pos_69 = PHI <__pos_313(32), SR.1329_252(62), __pos_313(35)>
  # .MEM_176 = PHI <.MEM_95(32), .MEM_259(62), .MEM_95(35)>
  # DEBUG __i$_M_nodeD.59299 => __pos_69
  # DEBUG thisD.55173 => &__iD.59230
  # DEBUG thisD.55174 => __pos_69
  # DEBUG D#634ptD.0 => &MEM[(struct _Rb_tree_nodeD.34408 *)__pos_69]._M_value_fieldD.38976
  # DEBUG __rD.48217 => D#634ptD.0
  # DEBUG D#636ptD.0 => {CLOBBER}
  # DEBUG __i$_M_nodeD.59299 => D#636ptD.0
  # .MEM_12 = VDEF <.MEM_176>
  MEM[(mapped_typeD.34189 &)__pos_69 + 64] = value_11(D);
  # DEBUG D#639ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.55232 => D#639ptD.0
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       48 (EH,EXECUTABLE)
<L9>: [LP 6]
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_177 = PHI <.MEM_239(59), .MEM_223(64)>
<L5>:
  # DEBUG thisD.59231 => &D.59302
  # DEBUG D#191ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.59232 => D#191ptD.0
  # DEBUG thisD.59233 => D#191ptD.0
  # DEBUG thisD.59242 => D#191ptD.0
  # VUSE <.MEM_177>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _71 = MEM[(charD.10 * *)&D.59302];
  # DEBUG D#3ptD.0 => D#191ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.59243 => D#191ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541 != _71)
    goto <bb 66>;
  else
    goto <bb 67>;
;;    succ:       66 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#191ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.59235 => D#191ptD.0
  # DEBUG __sizeD.59234 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#191ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#191ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.59238 => _71
  # DEBUG __aD.59236 => D#181ptD.0
  # DEBUG __nD.59237 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.59241 => _71
  # DEBUG thisD.59239 => D#177ptD.0
  # DEBUG D.59240 => D#178ptD.0
  # .MEM_244 = VDEF <.MEM_177>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZdlPvD.2766 (_71);
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_178 = PHI <.MEM_177(65), .MEM_244(66)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG thisD.59244 => D#187ptD.0
  # DEBUG thisD.59245 => D#187ptD.0
  # DEBUG thisD.59246 => D#187ptD.0
  # .MEM_250 = VDEF <.MEM_178>
  D.59302 ={v} {CLOBBER};
  resx 9
;;    succ:      

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L3>: [LP 2]
  # DEBUG thisD.55217 => &D.35952
  # DEBUG thisD.55218 => &D.35952
  # DEBUG thisD.55227 => &D.35952
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  _3 = MEM[(charD.10 * *)&D.35952];
  # DEBUG D#3ptD.0 => &D.35952
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.55228 => &D.35952
  if (&D.35952.D.11539._M_local_bufD.11541 != _3)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35952.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.55220 => &D.35952
  # DEBUG __sizeD.55219 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35952
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35952
  # DEBUG D#183ptD.0 => &D.35952._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.55223 => _3
  # DEBUG __aD.55221 => D#181ptD.0
  # DEBUG __nD.55222 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.55226 => _3
  # DEBUG thisD.55224 => D#177ptD.0
  # DEBUG D.55225 => D#178ptD.0
  # .MEM_18 = VDEF <.MEM_14>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZdlPvD.2766 (_3);
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       68 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
  # DEBUG D#187ptD.0 => &D.35952._M_dataplusD.11519
  # DEBUG thisD.55229 => D#187ptD.0
  # DEBUG thisD.55230 => D#187ptD.0
  # DEBUG thisD.55231 => D#187ptD.0
  # .MEM_15 = VDEF <.MEM_1>
  D.35952 ={v} {CLOBBER};
  resx 6
;;    succ:      

;;   basic block 71, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       35 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_95(35), .MEM_95(30), .MEM_132(77)>
  # PT = nonlocal escaped 
  # __pos_162 = PHI <__pos_313(35), __pos_313(30), __pos_23(77)>
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       36 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.59386 => D#1234ptD.0
  # DEBUG __lastD.59385 => _66
  # DEBUG D#393ptD.0 => &__firstD.59386
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.59388 => D#1234ptD.0
  # DEBUG __lastD.59387 => _66
  # .MEM_205 = VDEF <.MEM_204>
  __dnewD.59363 = pretmp_19;
  if (pretmp_19 > 15)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       36 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_260 = VDEF <.MEM_204>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 74, loop depth 0, count 0, freq 21, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 178, should be 21
;;    prev block 73, next block 75, flags: (NEW, REACHABLE)
;;    pred:       49 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 4] # .MEM_235 = VDEF <.MEM_224>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       75 (EH,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW)
;;    pred:       74 (EH,EXECUTABLE)
<L12>: [LP 4]
  goto <bb 57> (<L6>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 164, maybe hot
;;   Invalid sum of incoming frequencies 31, should be 164
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       49 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.59494 => _145
  # DEBUG __lastD.59493 => _147
  # DEBUG D#393ptD.0 => &__firstD.59494
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.59496 => _145
  # DEBUG __lastD.59495 => _147
  # .MEM_225 = VDEF <.MEM_224>
  __dnewD.59471 = _146;
  if (_146 > 15)
    goto <bb 50>;
  else
    goto <bb 52>;
;;    succ:       50 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 76, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59218 => NULL
  # DEBUG D#230ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49250 => D#230ptD.0
  # DEBUG thisD.55210 => &match.67D.35896
  # DEBUG __itD.55211 => &D.35892
  # DEBUG match$_M_nodeD.55232 => __pos_312
  # DEBUG D#638ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55206 => D#638ptD.0
  # DEBUG D#63ptD.0 => &D#638ptD.0->_M_tD.34405
  # DEBUG thisD.55207 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55204 => &D.35951
  # DEBUG __itD.55205 => &D.35897
  # DEBUG thisD.55201 => &matchD.35778
  # DEBUG __xD.55202 => &D.35951
  # DEBUG D#230ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49250 => D#230ptD.0
  # DEBUG thisD.55210 => &match.67D.35896
  # DEBUG __itD.55211 => &D.35892
  # DEBUG match$_M_nodeD.55232 => __pos_312
  # DEBUG D#638ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55206 => D#638ptD.0
  # DEBUG D#63ptD.0 => &D#638ptD.0->_M_tD.34405
  # DEBUG thisD.55207 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55204 => &D.35951
  # DEBUG __itD.55205 => &D.35897
  # DEBUG thisD.55201 => &matchD.35778
  # DEBUG __xD.55202 => &D.35951
  # DEBUG D#1197ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.59228 => D#1197ptD.0
  # DEBUG __kD.59229 => field_5(D)
  # DEBUG thisD.59293 => D#1197ptD.0
  # DEBUG __xD.59292 => field_5(D)
  # DEBUG D#1243ptD.0 => &MEM[(struct mapD.34186 *)this_4(D) + 136B]._M_tD.34405
  # DEBUG thisD.59304 => D#1243ptD.0
  # DEBUG __kD.59305 => field_5(D)
  # DEBUG thisD.59306 => D#1243ptD.0
  # DEBUG D#37ptD.0 => D#1243ptD.0
  # DEBUG thisD.49273 => D#37ptD.0
  # DEBUG D#229ptD.0 => D#1243ptD.0
  # DEBUG __xD.59310 => NULL
  # DEBUG __yD.59309 => NULL
  # DEBUG __kD.59308 => field_5(D)
  # DEBUG __yD.59309 => __pos_23
  # DEBUG __xD.59310 => __pos_24
  if (__pos_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;
;;    succ:       71 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Rb_tree_node_base * *)this_4(D) + 152B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_4(D) + 152B]
Creating dr for MEM[(long unsigned int *)field_5(D) + 8B]
analyze_innermost: success.
	base_address: field_5(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)field_5(D) + 8B]
Creating dr for MEM[(char * *)field_5(D)]
analyze_innermost: success.
	base_address: field_5(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)field_5(D)]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_318 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_318 + 40B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(char * *)__pos_318 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_318 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B]
Applying pattern match.pd:397, generic-match.c:4039
Creating dr for MEM[(long unsigned int *)__pos_312 + 40B]
analyze_innermost: success.
	base_address: __pos_312
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__pos_312 + 40B]
Creating dr for MEM[(char * *)__pos_312 + 32B]
analyze_innermost: success.
	base_address: __pos_312
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__pos_312 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(long unsigned int *)__pos_319 + 40B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long unsigned int *)__pos_319 + 40B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(char * *)__pos_319 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(char * *)__pos_319 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B]
Creating dr for MEM[(long unsigned int *)__pos_313 + 40B]
analyze_innermost: success.
	base_address: __pos_313
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__pos_313 + 40B]
Creating dr for MEM[(char * *)__pos_313 + 32B]
analyze_innermost: success.
	base_address: __pos_313
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__pos_313 + 32B]
Creating dr for MEM[(mapped_type &)__pos_69 + 64]
analyze_innermost: success.
	base_address: __pos_69
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(mapped_type &)__pos_69 + 64]
Creating dr for MEM[(struct _Alloc_hider *)&D.59302]._M_p
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.59302]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(const char_type &)pretmp_21]
analyze_innermost: success.
	base_address: pretmp_21
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)pretmp_21]
Creating dr for MEM[(char_type &)&D.59302 + 16]
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)&D.59302 + 16]
Creating dr for MEM[(size_type *)&D.59302 + 8B]
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)&D.59302 + 8B]
Creating dr for MEM[(char_type &)_119]
analyze_innermost: success.
	base_address: prephitmp_179 + prephitmp_180
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_119]
Creating dr for MEM[(long unsigned int *)&D.59302 + 8B]
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&D.59302 + 8B]
Creating dr for MEM[(long unsigned int *)__res$second_107 + 40B]
analyze_innermost: success.
	base_address: __res$second_107
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)__res$second_107 + 40B]
Creating dr for MEM[(char * *)__res$second_107 + 32B]
analyze_innermost: success.
	base_address: __res$second_107
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)__res$second_107 + 32B]
Creating dr for MEM[(char * *)&D.59302]
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.59302]
Creating dr for MEM[(struct _Alloc_hider *)_124 + 32B]._M_p
analyze_innermost: success.
	base_address: _124
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)_124 + 32B]
	Access function 0: 0
Creating dr for MEM[(char * *)&D.59302]
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.59302]
Creating dr for MEM[(long unsigned int *)&D.59302 + 8B]
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&D.59302 + 8B]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)_124 + 32B]
analyze_innermost: success.
	base_address: _124
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)_124 + 32B]
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(size_type *)_124 + 48B]
analyze_innermost: success.
	base_address: _124
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)_124 + 48B]
Creating dr for MEM[(const char_type &)_145]
analyze_innermost: success.
	base_address: _145
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const char_type &)_145]
Creating dr for MEM[(char_type &)_144]
analyze_innermost: success.
Applying pattern match.pd:397, generic-match.c:4039
	base_address: &MEM[(struct basic_string *)_124 + 32B]
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_144]
Creating dr for MEM[(size_type *)_124 + 40B]
analyze_innermost: success.
	base_address: _124
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(size_type *)_124 + 40B]
Creating dr for MEM[(char_type &)_161]
analyze_innermost: success.
	base_address: prephitmp_96 + prephitmp_73
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char_type &)_161]
Creating dr for MEM[(char * *)&D.59302]
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.59302]
Creating dr for MEM[(char * *)&D.59302]
analyze_innermost: success.
	base_address: &D.59302
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.59302]
Creating dr for MEM[(char * *)&D.35952]
analyze_innermost: success.
	base_address: &D.35952
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.35952]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:11)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:87, LOOPS:2, CONDITIONS:38, STMTS:931)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG this => &match
    # DEBUG match$_M_node => 0B
    # DEBUG D#637 => &this_4(D)->_float_map
    # DEBUG this => D#637
    # DEBUG __x => field_5(D)
    # DEBUG D#1194 => &MEM[(struct map *)this_4(D) + 136B]._M_t
    # DEBUG this => D#1194
    # DEBUG __k => field_5(D)
    # DEBUG this => D#1194
    __pos_23 = &MEM[(struct _Rb_tree *)this_4(D) + 136B]._M_impl._M_header;
    # VUSE <.MEM_2(D)>
    __pos_24 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 152B];
    # DEBUG D#37 => D#1194
    # DEBUG this => D#37
    # DEBUG D#229 => D#1194
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_5(D)
    # DEBUG __y => __pos_23
    # DEBUG __x => __pos_24
    if (__pos_24 == 0B)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_7 })
  {
    <bb 3>:
    # VUSE <.MEM_2(D)>
    pretmp_19 = MEM[(long unsigned int *)field_5(D) + 8B];
    # VUSE <.MEM_2(D)>
    pretmp_21 = MEM[(char * *)field_5(D)];
    goto <bb 7>;

  }
  bb_4 (preds = {bb_2 bb_79 bb_17 bb_19 }, succs = {bb_68 })
  {
    <bb 4>:
    # .MEM_320 = PHI <.MEM_2(D)(2), .MEM_132(79), .MEM_132(17), .MEM_132(19)>
    # DEBUG this => D#1194
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG D#230 => {CLOBBER}
    # DEBUG __j$_M_node => D#230
    # DEBUG this => &match.67
    # DEBUG __it => &D.35892
    # DEBUG match$_M_node => __pos_23
    # DEBUG D#638 => &this_4(D)->_float_map
    # DEBUG this => D#638
    # DEBUG D#63 => &D#638->_M_t
    # DEBUG this => D#63
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &D.35951
    # DEBUG __it => &D.35897
    # DEBUG this => &match
    # DEBUG __x => &D.35951
    # DEBUG D#230 => {CLOBBER}
    # DEBUG __j$_M_node => D#230
    # DEBUG this => &match.67
    # DEBUG __it => &D.35892
    # DEBUG match$_M_node => __pos_23
    # DEBUG D#638 => &this_4(D)->_float_map
    # DEBUG this => D#638
    # DEBUG D#63 => &D#638->_M_t
    # DEBUG this => D#63
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &D.35951
    # DEBUG __it => &D.35897
    # DEBUG this => &match
    # DEBUG __x => &D.35951
    # .MEM_13 = VDEF <.MEM_320>
    D.35952 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown double field: ", field_5(D)); [return slot optimization]
    # .MEM_14 = VDEF <.MEM_13>
    Configuration::ParseError (this_4(D), &D.35952, 0);

  }
  bb_14 (preds = {bb_5 }, succs = {bb_79 })
  {
    <bb 14>:
    # __pos_312 = PHI <__pos_80(5)>

  }
  bb_79 (preds = {bb_14 }, succs = {bb_4 bb_15 })
  {
    <bb 79>:
    # DEBUG this => NULL
    # DEBUG __x => __pos_312
    # DEBUG __j$_M_node => __pos_312
    # DEBUG this => D#1194
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &__j
    # DEBUG __x => NULL
    if (__pos_23 == __pos_312)
      goto <bb 4>;
    else
      goto <bb 15>;

  }
  bb_15 (preds = {bb_79 }, succs = {bb_16 bb_19 })
  {
    <bb 15>:
    # DEBUG __x => __pos_312
    # DEBUG __x => __pos_312
    # DEBUG this => __pos_312
    # DEBUG D#154 => &MEM[(const struct _Rb_tree_node *)__pos_312]._M_value_field
    # DEBUG __r => D#154
    # DEBUG __x => D#154
    # DEBUG this => D#153
    # DEBUG D#1196 => &MEM[(const struct pair &)__pos_312 + 32].first
    # DEBUG D#231 => &MEM[(struct _Rb_tree *)D#1194]._M_impl._M_key_compare
    # DEBUG D#203 => D#231
    # DEBUG __x => field_5(D)
    # DEBUG __y => D#1196
    # DEBUG this => D#203
    # DEBUG __lhs => field_5(D)
    # DEBUG __rhs => D#1196
    # DEBUG this => field_5(D)
    # DEBUG __str => D#1196
    # DEBUG D#1240 => MEM[(long unsigned int *)field_5(D) + 8B]
    # DEBUG D#2 => field_5(D)
    # DEBUG this => D#2
    # DEBUG __size => D#1240
    # VUSE <.MEM_132>
    _47 = MEM[(long unsigned int *)__pos_312 + 40B];
    # DEBUG D#2 => D#1196
    # DEBUG this => D#2
    # DEBUG __osize => _47
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_305 = MIN_EXPR <pretmp_19, _47>;
    # DEBUG __len => D#1190
    # DEBUG this => D#1196
    # VUSE <.MEM_132>
    _50 = MEM[(char * *)__pos_312 + 32B];
    # DEBUG D#3 => D#1196
    # DEBUG this => D#3
    # DEBUG D#1239 => MEM[(char * *)field_5(D)]
    # DEBUG D#3 => field_5(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#1239
    # DEBUG __s2 => _50
    # DEBUG __n => D#1190
    # VUSE <.MEM_132>
    __r_52 = __builtin_memcmp (pretmp_21, _50, __len_305);
    # DEBUG __r => NULL
    if (__r_52 == 0)
      goto <bb 16>;
    else
      goto <bb 19>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_77 bb_17 })
  {
    <bb 16>:
    # DEBUG __n1 => D#1240
    # DEBUG __n2 => _47
    _53 = pretmp_19 - _47;
    __d_54 = (const difference_type) _53;
    # DEBUG __d => __d_54
    if (__d_54 > 2147483647)
      goto <bb 77>;
    else
      goto <bb 17>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_4 bb_18 })
  {
    <bb 17>:
    if (__d_54 < -2147483648)
      goto <bb 4>;
    else
      goto <bb 18>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    __r_55 = (int) _53;

  }
  bb_19 (preds = {bb_15 bb_18 }, succs = {bb_4 bb_77 })
  {
    <bb 19>:
    # __r_56 = PHI <__r_52(15), __r_55(18)>
    # DEBUG __r => __r_56
    # DEBUG D#1211 => {CLOBBER}
    # DEBUG __size => D#1211
    # DEBUG D#1212 => {CLOBBER}
    # DEBUG __osize => D#1212
    if (__r_56 < 0)
      goto <bb 4>;
    else
      goto <bb 77>;

  }
  bb_22 (preds = {bb_77 }, succs = {bb_23 })
  {
    <bb 22>:

  }
  bb_30 (preds = {bb_20 }, succs = {bb_78 })
  {
    <bb 30>:
    # __pos_313 = PHI <__pos_33(20)>

  }
  bb_78 (preds = {bb_30 }, succs = {bb_71 bb_31 })
  {
    <bb 78>:
    # DEBUG this => NULL
    # DEBUG __x => __pos_313
    # DEBUG __i$_M_node => __pos_313
    # DEBUG this => D#1197
    # DEBUG D#63 => &D#1197->_M_t
    # DEBUG this => D#63
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &__i
    # DEBUG __x => NULL
    if (__pos_23 == __pos_313)
      goto <bb 71>;
    else
      goto <bb 31>;

  }
  bb_31 (preds = {bb_78 }, succs = {bb_32 bb_35 })
  {
    <bb 31>:
    # DEBUG this => &__i
    # DEBUG this => __pos_313
    # DEBUG D#633 => &MEM[(struct _Rb_tree_node *)__pos_313]._M_value_field
    # DEBUG __r => D#633
    # DEBUG D#1199 => &MEM[(struct pair &)__pos_313 + 32].first
    # DEBUG D#69 => D#1197
    # DEBUG this => D#69
    # DEBUG D#68 => D#69
    # DEBUG D#67 => &D#68->_M_t
    # DEBUG D#66 => D#67
    # DEBUG this => D#66
    # DEBUG __x => field_5(D)
    # DEBUG __y => D#1199
    # DEBUG this => D#203
    # DEBUG __lhs => field_5(D)
    # DEBUG __rhs => D#1199
    # DEBUG this => field_5(D)
    # DEBUG __str => D#1199
    # DEBUG D#1236 => MEM[(long unsigned int *)field_5(D) + 8B]
    # DEBUG D#2 => field_5(D)
    # DEBUG this => D#2
    # DEBUG __size => D#1236
    # VUSE <.MEM_95>
    _94 = MEM[(long unsigned int *)__pos_313 + 40B];
    # DEBUG D#2 => D#1199
    # DEBUG this => D#2
    # DEBUG __osize => _94
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_301 = MIN_EXPR <pretmp_19, _94>;
    # DEBUG __len => D#1192
    # DEBUG this => D#1199
    # VUSE <.MEM_95>
    _97 = MEM[(char * *)__pos_313 + 32B];
    # DEBUG D#3 => D#1199
    # DEBUG this => D#3
    # DEBUG D#1235 => MEM[(char * *)field_5(D)]
    # DEBUG D#3 => field_5(D)
    # DEBUG this => D#3
    # DEBUG __s1 => D#1235
    # DEBUG __s2 => _97
    # DEBUG __n => D#1192
    # VUSE <.MEM_95>
    __r_99 = __builtin_memcmp (pretmp_21, _97, __len_301);
    # DEBUG __r => NULL
    if (__r_99 == 0)
      goto <bb 32>;
    else
      goto <bb 35>;

  }
  bb_32 (preds = {bb_31 }, succs = {bb_63 bb_33 })
  {
    <bb 32>:
    # DEBUG __n1 => D#1236
    # DEBUG __n2 => _94
    _100 = pretmp_19 - _94;
    __d_101 = (const difference_type) _100;
    # DEBUG __d => __d_101
    if (__d_101 > 2147483647)
      goto <bb 63>;
    else
      goto <bb 33>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_36 bb_34 })
  {
    <bb 33>:
    if (__d_101 < -2147483648)
      goto <bb 36>;
    else
      goto <bb 34>;

  }
  bb_34 (preds = {bb_33 }, succs = {bb_35 })
  {
    <bb 34>:
    __r_102 = (int) _100;

  }
  bb_35 (preds = {bb_31 bb_34 }, succs = {bb_71 bb_63 })
  {
    <bb 35>:
    # __r_103 = PHI <__r_99(31), __r_102(34)>
    # DEBUG __r => __r_103
    # DEBUG D#1223 => {CLOBBER}
    # DEBUG __size => D#1223
    # DEBUG D#1224 => {CLOBBER}
    # DEBUG __osize => D#1224
    if (__r_103 < 0)
      goto <bb 71>;
    else
      goto <bb 63>;

  }
  bb_36 (preds = {bb_33 bb_84 }, succs = {bb_73 bb_72 })
  {
    <bb 36>:
    # .MEM_293 = PHI <.MEM_95(33), .MEM_60(84)>
    # __pos_133 = PHI <__pos_313(33), __pos_162(84)>
    # DEBUG this => &D.59302
    # DEBUG __a => field_5(D)
    # DEBUG __b => NULL
    # DEBUG this => &D.59302.first
    # DEBUG __str => field_5(D)
    # DEBUG this => field_5(D)
    # DEBUG D#380 => &MEM[(const struct basic_string *)field_5(D)]._M_dataplus
    # DEBUG this => &D.59302.first
    # DEBUG D#381 => &MEM[(struct basic_string *)&D.59302]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_204 = VDEF <.MEM_293>
    MEM[(struct _Alloc_hider *)&D.59302]._M_p = &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf;
    # DEBUG D#1234 => MEM[(char * *)field_5(D)]
    # DEBUG D#3 => field_5(D)
    # DEBUG this => D#3
    # DEBUG D#1233 => MEM[(long unsigned int *)field_5(D) + 8B]
    # DEBUG D#1 => field_5(D)
    # DEBUG this => D#1
    _66 = pretmp_21 + pretmp_19;
    # DEBUG D#3 => field_5(D)
    # DEBUG this => D#3
    # DEBUG this => &D.59302.first
    # DEBUG __beg => D#1234
    # DEBUG __end => _66
    # DEBUG this => &D.59302.first
    # DEBUG __beg => D#1234
    # DEBUG __end => _66
    # DEBUG this => &D.59302.first
    # DEBUG __beg => D#1234
    # DEBUG __end => _66
    # DEBUG __ptr => D#1234
    _92 = _66 != 0B;
    _104 = pretmp_21 == 0B;
    _296 = _92 & _104;
    if (_296 != 0)
      goto <bb 73>;
    else
      goto <bb 72>;

  }
  bb_37 (preds = {bb_72 }, succs = {bb_40 })
  {
    <bb 37>:
    # .MEM_206 = VDEF <.MEM_205>
    _113 = std::__cxx11::basic_string<char>::_M_create (&D.59302.first, &__dnew, 0);
    # DEBUG D#6 => &D.59302.first
    # DEBUG __p => _113
    # DEBUG this => D#6
    # .MEM_207 = VDEF <.MEM_206>
    MEM[(char * *)&D.59302] = _113;
    # VUSE <.MEM_207>
    __dnew.111_114 = __dnew;
    # DEBUG D#7 => &D.59302.first
    # DEBUG __capacity => __dnew.111_114
    # DEBUG this => D#7
    # .MEM_208 = VDEF <.MEM_207>
    MEM[(size_type *)&D.59302 + 16B] = __dnew.111_114;
    # DEBUG D#3 => &D.59302.first
    # DEBUG this => D#3
    # DEBUG __p => _113
    # DEBUG __k1 => D#1234
    # DEBUG __k2 => _66
    # DEBUG __d => _113
    # DEBUG __s => D#1234
    # DEBUG __n => D#1233
    goto <bb 40>;

  }
  bb_38 (preds = {bb_72 }, succs = {bb_39 bb_40 })
  {
    <bb 38>:
    # DEBUG D#3 => &D.59302.first
    # DEBUG this => D#3
    # DEBUG __p => &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf
    # DEBUG __k1 => D#1234
    # DEBUG __k2 => _66
    # DEBUG __d => &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf
    # DEBUG __s => D#1234
    # DEBUG __n => D#1233
    if (pretmp_19 == 1)
      goto <bb 39>;
    else
      goto <bb 40>;

  }
  bb_39 (preds = {bb_38 }, succs = {bb_41 })
  {
    <bb 39>:
    # VUSE <.MEM_205>
    _116 = MEM[(const char_type &)pretmp_21];
    # DEBUG D#13 => D#1234
    # DEBUG __c1 => &MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf
    # DEBUG __c2 => D#13
    # .MEM_209 = VDEF <.MEM_205>
    MEM[(char_type &)&D.59302 + 16] = _116;
    goto <bb 41>;

  }
  bb_40 (preds = {bb_38 bb_37 }, succs = {bb_41 })
  {
    <bb 40>:
    # _173 = PHI <&MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf(38), _113(37)>
    # .MEM_290 = PHI <.MEM_205(38), .MEM_208(37)>
    # DEBUG D#3 => &D.59302.first
    # DEBUG this => D#3
    # DEBUG __p => _173
    # DEBUG __k1 => D#1234
    # DEBUG __k2 => _66
    # DEBUG __d => _173
    # DEBUG __s => D#1234
    # DEBUG __n => D#1233
    # DEBUG __s1 => _173
    # DEBUG __s2 => D#1234
    # DEBUG __n => D#1233
    # .MEM_210 = VDEF <.MEM_290>
    __builtin_memcpy (_173, pretmp_21, pretmp_19);
    # VUSE <.MEM_210>
    pretmp_181 = __dnew;
    # VUSE <.MEM_210>
    pretmp_165 = MEM[(char * *)&D.59302];

  }
  bb_41 (preds = {bb_39 bb_40 }, succs = {bb_42 bb_60 })
  {
    <bb 41>:
    # .MEM_168 = PHI <.MEM_209(39), .MEM_210(40)>
    # prephitmp_180 = PHI <pretmp_19(39), pretmp_181(40)>
    # prephitmp_179 = PHI <&MEM[(struct basic_string *)&D.59302].D.11539._M_local_buf(39), pretmp_165(40)>
    # DEBUG D#1232 => __dnew
    # DEBUG this => &D.59302.first
    # DEBUG __n => D#1232
    # DEBUG D#5 => &D.59302.first
    # DEBUG __length => D#1232
    # DEBUG this => D#5
    # .MEM_211 = VDEF <.MEM_168>
    MEM[(size_type *)&D.59302 + 8B] = prephitmp_180;
    # DEBUG D#3 => &D.59302.first
    # DEBUG this => D#3
    _119 = prephitmp_179 + prephitmp_180;
    # DEBUG __c1 => _119
    # DEBUG __c2 => D#13
    # .MEM_212 = VDEF <.MEM_211>
    MEM[(char_type &)_119] = 0;
    # .MEM_213 = VDEF <.MEM_212>
    __dnew ={v} {CLOBBER};
    # .MEM_214 = VDEF <.MEM_213>
    D.59302.second = 0.0;
    # DEBUG this => D#1197
    # DEBUG __position$_M_node => __pos_133
    # DEBUG __x => &D.59302
    # DEBUG this => NULL
    # DEBUG __it => &__position
    # DEBUG this => D#1243
    # DEBUG __pos => __pos_133
    # DEBUG __x => &D.59302
    # DEBUG this => &__an
    # DEBUG __t => D#1243
    # DEBUG __an$_M_t => D#1243
    # DEBUG D#632 => &__an
    # DEBUG this => D#1243
    # .MEM_216 = VDEF <.MEM_214>
    MEM[(struct _Rb_tree_const_iterator *)&__position] = __pos_133;
    # DEBUG __v => &D.59302
    # DEBUG __node_gen => D#632
    # DEBUG D#631 => D#632
    # DEBUG __x => &D.59302
    # DEBUG this => D#153
    _58 = &MEM[(struct map *)this_4(D) + 136B]._M_t;
    # .MEM_217 = VDEF <.MEM_216>
    __res = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, double>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, double> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, double> > >::_M_get_insert_hint_unique_pos (_58, __position, &D.59302.first);
    # VUSE <.MEM_217>
    __res$first_106 = MEM[(struct pair *)&__res];
    # DEBUG __res$first => __res$first_106
    # VUSE <.MEM_217>
    __res$second_107 = MEM[(struct pair *)&__res + 8B];
    # DEBUG __res$second => __res$second_107
    if (__res$second_107 != 0B)
      goto <bb 42>;
    else
      goto <bb 60>;

  }
  bb_42 (preds = {bb_41 }, succs = {bb_48 bb_43 })
  {
    <bb 42>:
    # DEBUG D#626 => D#631
    # DEBUG this => D#1243
    # DEBUG __x => __res$first_106
    # DEBUG __p => __res$second_107
    # DEBUG __v => &D.59302
    # DEBUG __node_gen => D#626
    # DEBUG D#625 => D#626
    # DEBUG this => D#1243
    _294 = __pos_23 == __res$second_107;
    _27 = __res$first_106 != 0B;
    _264 = _27 | _294;
    if (_264 != 0)
      goto <bb 48>;
    else
      goto <bb 43>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 bb_47 })
  {
    <bb 43>:
    # DEBUG __x => __res$second_107
    # DEBUG __x => __res$second_107
    # DEBUG this => __res$second_107
    # DEBUG D#154 => &MEM[(const struct _Rb_tree_node *)__res$second_107]._M_value_field
    # DEBUG __r => D#154
    # DEBUG __x => D#154
    # DEBUG this => D#153
    # DEBUG D#1200 => &MEM[(const struct pair &)__res$second_107 + 32].first
    # DEBUG __x => &D.59302
    # DEBUG this => D#153
    # DEBUG D#624 => &MEM[(struct _Rb_tree *)D#1243]._M_impl._M_key_compare
    # DEBUG D#203 => D#624
    # DEBUG __x => NULL
    # DEBUG __y => D#1200
    # DEBUG this => D#203
    # DEBUG __lhs => NULL
    # DEBUG __rhs => D#1200
    # DEBUG this => &D.59302.first
    # DEBUG __str => D#1200
    # VUSE <.MEM_217>
    _130 = MEM[(long unsigned int *)&D.59302 + 8B];
    # DEBUG D#2 => &D.59302.first
    # DEBUG this => D#2
    # DEBUG __size => _130
    # VUSE <.MEM_217>
    _131 = MEM[(long unsigned int *)__res$second_107 + 40B];
    # DEBUG D#2 => D#1200
    # DEBUG this => D#2
    # DEBUG __osize => _131
    # DEBUG __a => &__size
    # DEBUG __b => &__osize
    __len_59 = MIN_EXPR <_130, _131>;
    # DEBUG __len => D#1193
    # DEBUG this => D#1200
    # VUSE <.MEM_217>
    _134 = MEM[(char * *)__res$second_107 + 32B];
    # DEBUG D#3 => D#1200
    # DEBUG this => D#3
    # VUSE <.MEM_217>
    _135 = MEM[(char * *)&D.59302];
    # DEBUG D#3 => &D.59302.first
    # DEBUG this => D#3
    # DEBUG __s1 => _135
    # DEBUG __s2 => _134
    # DEBUG __n => D#1193
    # VUSE <.MEM_217>
    __r_136 = __builtin_memcmp (_135, _134, __len_59);
    # DEBUG __r => NULL
    if (__r_136 == 0)
      goto <bb 44>;
    else
      goto <bb 47>;

  }
  bb_44 (preds = {bb_43 }, succs = {bb_48 bb_45 })
  {
    <bb 44>:
    # DEBUG __n1 => _130
    # DEBUG __n2 => _131
    _137 = _130 - _131;
    __d_138 = (const difference_type) _137;
    # DEBUG __d => __d_138
    if (__d_138 > 2147483647)
      goto <bb 48>;
    else
      goto <bb 45>;

  }
  bb_45 (preds = {bb_44 }, succs = {bb_48 bb_46 })
  {
    <bb 45>:
    if (__d_138 < -2147483648)
      goto <bb 48>;
    else
      goto <bb 46>;

  }
  bb_46 (preds = {bb_45 }, succs = {bb_47 })
  {
    <bb 46>:
    __r_139 = (int) _137;

  }
  bb_47 (preds = {bb_43 bb_46 }, succs = {bb_86 })
  {
    <bb 47>:
    # __r_140 = PHI <__r_136(43), __r_139(46)>

  }
  bb_86 (preds = {bb_47 }, succs = {bb_48 })
  {
    <bb 86>:
    # DEBUG __r => __r_140
    # DEBUG D#1229 => {CLOBBER}
    # DEBUG __size => D#1229
    # DEBUG D#1230 => {CLOBBER}
    # DEBUG __osize => D#1230
    __insert_left_300 = __r_140 < 0;

  }
  bb_48 (preds = {bb_44 bb_45 bb_86 bb_42 }, succs = {bb_49 bb_64 })
  {
    <bb 48>:
    # __insert_left_126 = PHI <0(44), 1(45), __insert_left_300(86), 1(42)>
    # DEBUG __insert_left => __insert_left_126
    # DEBUG D#623 => D#625
    # DEBUG __arg => &D.59302
    # DEBUG this => D#623
    # DEBUG D#622 => D#623
    # DEBUG D#621 => D#622->_M_t
    # DEBUG D#620 => D#621
    # DEBUG __x => &D.59302
    # DEBUG this => D#620
    # DEBUG D#619 => D#620
    # DEBUG D#618 => D#620
    # DEBUG D#617 => D#618
    # DEBUG this => D#617
    # DEBUG D#616 => D#617
    # DEBUG this => D#616
    # DEBUG __n => 1
    # DEBUG __a => D#615
    # DEBUG D#614 => D#615
    # DEBUG D#612 => D#614
    # DEBUG D#613 => 0B
    # DEBUG __n => 1
    # DEBUG this => D#612
    # DEBUG D.59405 => D#613
    # DEBUG D#611 => D#612
    # DEBUG D#610 => D#611
    # DEBUG this => D#610
    # .MEM_223 = VDEF <.MEM_217>
    _124 = operator new (72);

  }
  bb_49 (preds = {bb_48 }, succs = {bb_74 bb_76 })
  {
    <bb 49>:
    # DEBUG __tmp => _124
    # DEBUG D#505 => D#619
    # DEBUG __node => _124
    # DEBUG __x => &D.59302
    # DEBUG this => D#505
    # DEBUG D#504 => D#505
    # DEBUG D#503 => D#505
    # DEBUG this => _124
    # DEBUG D#1244 => &_124->_M_value_field
    # DEBUG __r => D#1244
    # DEBUG D#488 => D#503
    # DEBUG this => D#488
    # DEBUG D#487 => D#488
    # DEBUG this => D#487
    # DEBUG this => NULL
    # DEBUG D.52714 => NULL
    # DEBUG this => NULL
    # DEBUG __p => D#1244
    # DEBUG __val => &D.59302
    # DEBUG this => D#502
    # DEBUG D#14 => 40
    # DEBUG __p => D#1244
    # DEBUG D.52990 => D#14
    # DEBUG this => D#1244
    # DEBUG D.59449 => &D.59302
    # DEBUG D#501 => &D.59302.first
    # DEBUG this => D#1244
    # DEBUG __str => D#501
    # DEBUG this => D#501
    # DEBUG D#380 => &D#501->_M_dataplus
    # DEBUG this => D#1244
    _144 = &MEM[(struct basic_string *)_124 + 32B].D.11539._M_local_buf;
    # DEBUG D#381 => &MEM[(struct basic_string *)D#1244]._M_dataplus
    # DEBUG D#147 => D#380
    # DEBUG this => D#381
    # DEBUG __dat => _144
    # DEBUG __a => D#147
    # DEBUG D#146 => D#147
    # DEBUG D#144 => D#381
    # DEBUG D#145 => D#146
    # DEBUG this => D#144
    # DEBUG __a => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG this => D#142
    # DEBUG D.48110 => D#143
    # .MEM_224 = VDEF <.MEM_223>
    MEM[(struct _Alloc_hider *)_124 + 32B]._M_p = _144;
    # VUSE <.MEM_224>
    _145 = MEM[(char * *)&D.59302];
    # DEBUG D#3 => D#501
    # DEBUG this => D#3
    # VUSE <.MEM_224>
    _146 = MEM[(long unsigned int *)&D.59302 + 8B];
    # DEBUG D#1 => D#501
    # DEBUG this => D#1
    _147 = _145 + _146;
    # DEBUG D#3 => D#501
    # DEBUG this => D#3
    # DEBUG this => D#1244
    # DEBUG __beg => _145
    # DEBUG __end => _147
    # DEBUG this => D#1244
    # DEBUG __beg => _145
    # DEBUG __end => _147
    # DEBUG this => D#1244
    # DEBUG __beg => _145
    # DEBUG __end => _147
    # DEBUG __ptr => _145
    _272 = _147 != 0B;
    _269 = _145 == 0B;
    _268 = _269 & _272;
    if (_268 != 0)
      goto <bb 74>;
    else
      goto <bb 76>;

  }
  bb_50 (preds = {bb_76 }, succs = {bb_51 bb_56 })
  {
    <bb 50>:
    _142 = &_124->_M_value_field;
    # .MEM_226 = VDEF <.MEM_225>
    _155 = std::__cxx11::basic_string<char>::_M_create (_142, &__dnew, 0);

  }
  bb_51 (preds = {bb_50 }, succs = {bb_54 })
  {
    <bb 51>:
    # DEBUG D#6 => D#1244
    # DEBUG __p => _155
    # DEBUG this => D#6
    # .MEM_227 = VDEF <.MEM_226>
    MEM[(char * *)_124 + 32B] = _155;
    # VUSE <.MEM_227>
    __dnew.111_156 = __dnew;
    # DEBUG D#7 => D#1244
    # DEBUG __capacity => __dnew.111_156
    # DEBUG this => D#7
    # .MEM_228 = VDEF <.MEM_227>
    MEM[(size_type *)_124 + 48B] = __dnew.111_156;
    # DEBUG D#3 => D#1244
    # DEBUG this => D#3
    # DEBUG __p => _155
    # DEBUG __k1 => _145
    # DEBUG __k2 => _147
    # DEBUG __d => _155
    # DEBUG __s => _145
    # DEBUG __n => _146
    goto <bb 54>;

  }
  bb_52 (preds = {bb_76 }, succs = {bb_53 bb_54 })
  {
    <bb 52>:
    # DEBUG D#3 => D#1244
    # DEBUG this => D#3
    # DEBUG __p => _144
    # DEBUG __k1 => _145
    # DEBUG __k2 => _147
    # DEBUG __d => _144
    # DEBUG __s => _145
    # DEBUG __n => _146
    if (_146 == 1)
      goto <bb 53>;
    else
      goto <bb 54>;

  }
  bb_53 (preds = {bb_52 }, succs = {bb_55 })
  {
    <bb 53>:
    # VUSE <.MEM_225>
    _158 = MEM[(const char_type &)_145];
    # DEBUG D#13 => _145
    # DEBUG __c1 => _144
    # DEBUG __c2 => D#13
    # .MEM_229 = VDEF <.MEM_225>
    MEM[(char_type &)_144] = _158;
    goto <bb 55>;

  }
  bb_54 (preds = {bb_52 bb_51 }, succs = {bb_55 })
  {
    <bb 54>:
    # _292 = PHI <_144(52), _155(51)>
    # .MEM_288 = PHI <.MEM_225(52), .MEM_228(51)>
    # DEBUG D#3 => D#1244
    # DEBUG this => D#3
    # DEBUG __p => _292
    # DEBUG __k1 => _145
    # DEBUG __k2 => _147
    # DEBUG __d => _292
    # DEBUG __s => _145
    # DEBUG __n => _146
    # DEBUG __s1 => _292
    # DEBUG __s2 => _145
    # DEBUG __n => _146
    # .MEM_230 = VDEF <.MEM_288>
    __builtin_memcpy (_292, _145, _146);
    # VUSE <.MEM_230>
    pretmp_169 = __dnew;
    # VUSE <.MEM_230>
    pretmp_78 = MEM[(char * *)_124 + 32B];

  }
  bb_55 (preds = {bb_53 bb_54 }, succs = {bb_60 })
  {
    <bb 55>:
    # .MEM_171 = PHI <.MEM_229(53), .MEM_230(54)>
    # prephitmp_73 = PHI <_146(53), pretmp_169(54)>
    # prephitmp_96 = PHI <_144(53), pretmp_78(54)>
    # DEBUG D#1231 => __dnew
    # DEBUG this => D#1244
    # DEBUG __n => D#1231
    # DEBUG D#5 => D#1244
    # DEBUG __length => D#1231
    # DEBUG this => D#5
    # .MEM_231 = VDEF <.MEM_171>
    MEM[(size_type *)_124 + 40B] = prephitmp_73;
    # DEBUG D#3 => D#1244
    # DEBUG this => D#3
    _161 = prephitmp_96 + prephitmp_73;
    # DEBUG __c1 => _161
    # DEBUG __c2 => D#13
    # .MEM_232 = VDEF <.MEM_231>
    MEM[(char_type &)_161] = 0;
    # .MEM_233 = VDEF <.MEM_232>
    __dnew ={v} {CLOBBER};
    # VUSE <.MEM_233>
    _148 = D.59302.second;
    # .MEM_234 = VDEF <.MEM_233>
    MEM[(struct pair *)_124 + 32B].second = _148;
    # DEBUG this => NULL
    # DEBUG this => NULL
    # DEBUG __z => _124
    _127 = (int) __insert_left_126;
    # .MEM_240 = VDEF <.MEM_234>
    std::_Rb_tree_insert_and_rebalance (_127, _124, __res$second_107, __pos_23);
    # VUSE <.MEM_240>
    _128 = MEM[(struct _Rb_tree *)this_4(D) + 136B]._M_impl._M_node_count;
    _129 = _128 + 1;
    # .MEM_241 = VDEF <.MEM_240>
    MEM[(struct _Rb_tree *)this_4(D) + 136B]._M_impl._M_node_count = _129;
    # DEBUG this => NULL
    # DEBUG __x => _124
    goto <bb 60>;

  }
  bb_56 (preds = {bb_50 }, succs = {bb_57 })
  {
  <L10>:

  }
  bb_57 (preds = {bb_56 bb_75 }, succs = {bb_58 })
  {
    # .MEM_172 = PHI <.MEM_226(56), .MEM_235(75)>
  <L6>:
    # VUSE <.MEM_172>
    _149 = __builtin_eh_pointer (10);
    # .MEM_236 = VDEF <.MEM_172>
    __cxa_begin_catch (_149);
    # DEBUG D#322 => D#504
    # DEBUG __p => _124
    # DEBUG this => D#322
    # DEBUG D#321 => D#322
    # DEBUG this => D#321
    # DEBUG D#320 => 1
    # DEBUG __p => _124
    # DEBUG __a => D#319
    # DEBUG __n => D#320
    # DEBUG D#318 => D#320
    # DEBUG D#317 => D#319
    # DEBUG D#315 => D#317
    # DEBUG D#316 => D#318
    # DEBUG __p => _124
    # DEBUG this => D#315
    # DEBUG D.59443 => D#316
    # .MEM_237 = VDEF <.MEM_236>
    operator delete (_124);
    # .MEM_238 = VDEF <.MEM_237>
    __cxa_rethrow ();

  }
  bb_58 (preds = {bb_57 }, succs = {bb_59 })
  {
  <L8>:
    # .MEM_239 = VDEF <.MEM_238>
    __cxa_end_catch ();
    resx 11

  }
  bb_59 (preds = {bb_58 }, succs = {bb_65 })
  {
  <L11>:
    goto <bb 65> (<L5>);

  }
  bb_60 (preds = {bb_55 bb_41 }, succs = {bb_61 bb_62 })
  {
    <bb 60>:
    # .MEM_174 = PHI <.MEM_241(55), .MEM_217(41)>
    # SR.1329_252 = PHI <_124(55), __res$first_106(41)>
    # DEBUG D#629 => {CLOBBER}
    # DEBUG __res$first => D#629
    # DEBUG D#630 => {CLOBBER}
    # DEBUG __res$second => D#630
    # DEBUG __i$_M_node => SR.1329_252
    # DEBUG this => &D.59302
    # DEBUG D#191 => &D.59302.first
    # DEBUG this => D#191
    # DEBUG this => D#191
    # DEBUG this => D#191
    # VUSE <.MEM_174>
    _68 = MEM[(char * *)&D.59302];
    # DEBUG D#3 => D#191
    # DEBUG this => D#3
    # DEBUG this => D#191
    if (&MEM[(const struct basic_string *)&D.59302].D.11539._M_local_buf != _68)
      goto <bb 61>;
    else
      goto <bb 62>;

  }
  bb_61 (preds = {bb_60 }, succs = {bb_62 })
  {
    <bb 61>:
    # DEBUG D#186 => MEM[(struct basic_string *)D#191].D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#191
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#191
    # DEBUG this => D#3
    # DEBUG this => D#191
    # DEBUG D#183 => &MEM[(struct basic_string *)D#191]._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _68
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _68
    # DEBUG this => D#177
    # DEBUG D.59256 => D#178
    # .MEM_253 = VDEF <.MEM_174>
    operator delete (_68);

  }
  bb_62 (preds = {bb_60 bb_61 }, succs = {bb_63 })
  {
    <bb 62>:
    # .MEM_175 = PHI <.MEM_174(60), .MEM_253(61)>
    # DEBUG D#187 => &MEM[(struct basic_string *)D#191]._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_259 = VDEF <.MEM_175>
    D.59302 ={v} {CLOBBER};

  }
  bb_63 (preds = {bb_32 bb_62 bb_35 }, succs = {bb_85 })
  {
    <bb 63>:
    # __pos_69 = PHI <__pos_313(32), SR.1329_252(62), __pos_313(35)>
    # .MEM_176 = PHI <.MEM_95(32), .MEM_259(62), .MEM_95(35)>

  }
  bb_85 (preds = {bb_63 }, succs = {bb_1 })
  {
    <bb 85>:
    # DEBUG __i$_M_node => __pos_69
    # DEBUG this => &__i
    # DEBUG this => __pos_69
    # DEBUG D#634 => &MEM[(struct _Rb_tree_node *)__pos_69]._M_value_field
    # DEBUG __r => D#634
    # DEBUG D#636 => {CLOBBER}
    # DEBUG __i$_M_node => D#636
    # .MEM_12 = VDEF <.MEM_176>
    MEM[(mapped_type &)__pos_69 + 64] = value_11(D);
    # DEBUG D#639 => {CLOBBER}
    # DEBUG match$_M_node => D#639
    # VUSE <.MEM_12>
    return;

  }
  bb_64 (preds = {bb_48 }, succs = {bb_65 })
  {
  <L9>:

  }
  bb_65 (preds = {bb_59 bb_64 }, succs = {bb_66 bb_67 })
  {
    # .MEM_177 = PHI <.MEM_239(59), .MEM_223(64)>
  <L5>:
    # DEBUG this => &D.59302
    # DEBUG D#191 => &D.59302.first
    # DEBUG this => D#191
    # DEBUG this => D#191
    # DEBUG this => D#191
    # VUSE <.MEM_177>
    _71 = MEM[(char * *)&D.59302];
    # DEBUG D#3 => D#191
    # DEBUG this => D#3
    # DEBUG this => D#191
    if (&MEM[(const struct basic_string *)&D.59302].D.11539._M_local_buf != _71)
      goto <bb 66>;
    else
      goto <bb 67>;

  }
  bb_66 (preds = {bb_65 }, succs = {bb_67 })
  {
    <bb 66>:
    # DEBUG D#186 => MEM[(struct basic_string *)D#191].D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => D#191
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => D#191
    # DEBUG this => D#3
    # DEBUG this => D#191
    # DEBUG D#183 => &MEM[(struct basic_string *)D#191]._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _71
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _71
    # DEBUG this => D#177
    # DEBUG D.59240 => D#178
    # .MEM_244 = VDEF <.MEM_177>
    operator delete (_71);

  }
  bb_67 (preds = {bb_65 bb_66 }, succs = {})
  {
    <bb 67>:
    # .MEM_178 = PHI <.MEM_177(65), .MEM_244(66)>
    # DEBUG D#187 => &MEM[(struct basic_string *)D#191]._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_250 = VDEF <.MEM_178>
    D.59302 ={v} {CLOBBER};
    resx 9

  }
  bb_68 (preds = {bb_4 }, succs = {bb_69 bb_70 })
  {
  <L3>:
    # DEBUG this => &D.35952
    # DEBUG this => &D.35952
    # DEBUG this => &D.35952
    # VUSE <.MEM_14>
    _3 = MEM[(char * *)&D.35952];
    # DEBUG D#3 => &D.35952
    # DEBUG this => D#3
    # DEBUG this => &D.35952
    if (&D.35952.D.11539._M_local_buf != _3)
      goto <bb 69>;
    else
      goto <bb 70>;

  }
  bb_69 (preds = {bb_68 }, succs = {bb_70 })
  {
    <bb 69>:
    # DEBUG D#186 => D.35952.D.11539._M_allocated_capacity
    # DEBUG D#185 => D#186
    # DEBUG this => &D.35952
    # DEBUG __size => D#185
    # DEBUG D#184 => D#185
    # DEBUG D#3 => &D.35952
    # DEBUG this => D#3
    # DEBUG this => &D.35952
    # DEBUG D#183 => &D.35952._M_dataplus
    # DEBUG D#181 => D#183
    # DEBUG D#182 => D#184 + 1
    # DEBUG __p => _3
    # DEBUG __a => D#181
    # DEBUG __n => D#182
    # DEBUG D#180 => D#182
    # DEBUG D#179 => D#181
    # DEBUG D#177 => D#179
    # DEBUG D#178 => D#180
    # DEBUG __p => _3
    # DEBUG this => D#177
    # DEBUG D.55225 => D#178
    # .MEM_18 = VDEF <.MEM_14>
    operator delete (_3);

  }
  bb_70 (preds = {bb_68 bb_69 }, succs = {})
  {
    <bb 70>:
    # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
    # DEBUG D#187 => &D.35952._M_dataplus
    # DEBUG this => D#187
    # DEBUG this => D#187
    # DEBUG this => D#187
    # .MEM_15 = VDEF <.MEM_1>
    D.35952 ={v} {CLOBBER};
    resx 6

  }
  bb_71 (preds = {bb_35 bb_78 bb_77 }, succs = {bb_84 })
  {
    <bb 71>:
    # .MEM_60 = PHI <.MEM_95(35), .MEM_95(78), .MEM_132(77)>
    # __pos_162 = PHI <__pos_313(35), __pos_313(78), __pos_23(77)>

  }
  bb_84 (preds = {bb_71 }, succs = {bb_36 })
  {
    <bb 84>:
    goto <bb 36>;

  }
  bb_72 (preds = {bb_36 }, succs = {bb_37 bb_38 })
  {
    <bb 72>:
    # DEBUG __first => D#1234
    # DEBUG __last => _66
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => D#1234
    # DEBUG __last => _66
    # .MEM_205 = VDEF <.MEM_204>
    __dnew = pretmp_19;
    if (pretmp_19 > 15)
      goto <bb 37>;
    else
      goto <bb 38>;

  }
  bb_73 (preds = {bb_36 }, succs = {})
  {
    <bb 73>:
    # .MEM_260 = VDEF <.MEM_204>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_74 (preds = {bb_49 }, succs = {bb_75 })
  {
    <bb 74>:
    # .MEM_235 = VDEF <.MEM_224>
    std::__throw_logic_error ("basic_string::_M_construct null not valid");

  }
  bb_75 (preds = {bb_74 }, succs = {bb_57 })
  {
  <L12>:
    goto <bb 57> (<L6>);

  }
  bb_76 (preds = {bb_49 }, succs = {bb_50 bb_52 })
  {
    <bb 76>:
    # DEBUG __first => _145
    # DEBUG __last => _147
    # DEBUG D#393 => &__first
    # DEBUG D.51158 => D#393
    # DEBUG __first => _145
    # DEBUG __last => _147
    # .MEM_225 = VDEF <.MEM_224>
    __dnew = _146;
    if (_146 > 15)
      goto <bb 50>;
    else
      goto <bb 52>;

  }
  bb_77 (preds = {bb_19 bb_16 }, succs = {bb_71 bb_22 })
  {
    <bb 77>:
    # DEBUG __r => NULL
    # DEBUG D#230 => {CLOBBER}
    # DEBUG __j$_M_node => D#230
    # DEBUG this => &match.67
    # DEBUG __it => &D.35892
    # DEBUG match$_M_node => __pos_312
    # DEBUG D#638 => &this_4(D)->_float_map
    # DEBUG this => D#638
    # DEBUG D#63 => &D#638->_M_t
    # DEBUG this => D#63
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &D.35951
    # DEBUG __it => &D.35897
    # DEBUG this => &match
    # DEBUG __x => &D.35951
    # DEBUG D#230 => {CLOBBER}
    # DEBUG __j$_M_node => D#230
    # DEBUG this => &match.67
    # DEBUG __it => &D.35892
    # DEBUG match$_M_node => __pos_312
    # DEBUG D#638 => &this_4(D)->_float_map
    # DEBUG this => D#638
    # DEBUG D#63 => &D#638->_M_t
    # DEBUG this => D#63
    # DEBUG this => NULL
    # DEBUG __x => __pos_23
    # DEBUG this => &D.35951
    # DEBUG __it => &D.35897
    # DEBUG this => &match
    # DEBUG __x => &D.35951
    # DEBUG D#1197 => &this_4(D)->_float_map
    # DEBUG this => D#1197
    # DEBUG __k => field_5(D)
    # DEBUG this => D#1197
    # DEBUG __x => field_5(D)
    # DEBUG D#1243 => &MEM[(struct map *)this_4(D) + 136B]._M_t
    # DEBUG this => D#1243
    # DEBUG __k => field_5(D)
    # DEBUG this => D#1243
    # DEBUG D#37 => D#1243
    # DEBUG this => D#37
    # DEBUG D#229 => D#1243
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __k => field_5(D)
    # DEBUG __y => __pos_23
    # DEBUG __x => __pos_24
    if (__pos_24 == 0B)
      goto <bb 71>;
    else
      goto <bb 22>;

  }
  loop_2 (header = 23, latch = 21, niter = )
  {
    bb_20 (preds = {bb_83 bb_82 }, succs = {bb_30 bb_21 })
    {
      <bb 20>:
      # __pos_34 = PHI <__pos_76(83), __pos_77(82)>
      # __pos_33 = PHI <__pos_319(83), __pos_141(82)>
      # DEBUG __y => __pos_33
      # DEBUG __x => __pos_34
      if (__pos_34 == 0B)
        goto <bb 30>;
      else
        goto <bb 21>;

    }
    bb_21 (preds = {bb_20 }, succs = {bb_23 })
    {
      <bb 21>:
      goto <bb 23>;

    }
    bb_23 (preds = {bb_22 bb_21 }, succs = {bb_24 bb_27 })
    {
      <bb 23>:
      # __pos_319 = PHI <__pos_24(22), __pos_34(21)>
      # __pos_141 = PHI <__pos_23(22), __pos_33(21)>
      # .MEM_95 = PHI <.MEM_132(22), .MEM_95(21)>
      # DEBUG __y => __pos_141
      # DEBUG __x => __pos_319
      # DEBUG __x => __pos_319
      # DEBUG __x => __pos_319
      # DEBUG this => __pos_319
      # DEBUG D#226 => &MEM[(const struct _Rb_tree_node *)__pos_319]._M_value_field
      # DEBUG __r => D#226
      # DEBUG __x => D#226
      # DEBUG this => D#153
      # DEBUG D#1198 => &MEM[(const struct pair &)__pos_319 + 32].first
      # DEBUG D#227 => &D#228->_M_impl._M_key_compare
      # DEBUG D#203 => D#227
      # DEBUG __x => D#1198
      # DEBUG __y => field_5(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#1198
      # DEBUG __rhs => field_5(D)
      # DEBUG this => D#1198
      # DEBUG __str => field_5(D)
      # VUSE <.MEM_95>
      _81 = MEM[(long unsigned int *)__pos_319 + 40B];
      # DEBUG D#2 => D#1198
      # DEBUG this => D#2
      # DEBUG __size => _81
      # DEBUG D#1238 => MEM[(long unsigned int *)field_5(D) + 8B]
      # DEBUG D#2 => field_5(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#1238
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_302 = MIN_EXPR <pretmp_19, _81>;
      # DEBUG __len => D#1191
      # DEBUG this => field_5(D)
      # DEBUG D#1237 => MEM[(char * *)field_5(D)]
      # DEBUG D#3 => field_5(D)
      # DEBUG this => D#3
      # VUSE <.MEM_95>
      _86 = MEM[(char * *)__pos_319 + 32B];
      # DEBUG D#3 => D#1198
      # DEBUG this => D#3
      # DEBUG __s1 => _86
      # DEBUG __s2 => D#1237
      # DEBUG __n => D#1191
      # VUSE <.MEM_95>
      __r_87 = __builtin_memcmp (_86, pretmp_21, __len_302);
      # DEBUG __r => NULL
      if (__r_87 == 0)
        goto <bb 24>;
      else
        goto <bb 27>;

    }
    bb_24 (preds = {bb_23 }, succs = {bb_28 bb_25 })
    {
      <bb 24>:
      # DEBUG __n1 => _81
      # DEBUG __n2 => D#1238
      _88 = _81 - pretmp_19;
      __d_89 = (const difference_type) _88;
      # DEBUG __d => __d_89
      if (__d_89 > 2147483647)
        goto <bb 28>;
      else
        goto <bb 25>;

    }
    bb_25 (preds = {bb_24 }, succs = {bb_29 bb_26 })
    {
      <bb 25>:
      if (__d_89 < -2147483648)
        goto <bb 29>;
      else
        goto <bb 26>;

    }
    bb_26 (preds = {bb_25 }, succs = {bb_27 })
    {
      <bb 26>:
      __r_90 = (int) _88;

    }
    bb_27 (preds = {bb_23 bb_26 }, succs = {bb_28 bb_29 })
    {
      <bb 27>:
      # __r_91 = PHI <__r_87(23), __r_90(26)>
      # DEBUG __r => __r_91
      # DEBUG D#1217 => {CLOBBER}
      # DEBUG __size => D#1217
      # DEBUG D#1218 => {CLOBBER}
      # DEBUG __osize => D#1218
      if (__r_91 >= 0)
        goto <bb 28>;
      else
        goto <bb 29>;

    }
    bb_28 (preds = {bb_27 bb_24 }, succs = {bb_83 })
    {
      <bb 28>:

    }
    bb_83 (preds = {bb_28 }, succs = {bb_20 })
    {
      <bb 83>:
      # DEBUG __r => NULL
      # DEBUG __y => __pos_319
      # VUSE <.MEM_95>
      __pos_76 = MEM[(struct _Rb_tree_node_base * *)__pos_319 + 16B];
      # DEBUG D#48 => __pos_319
      # DEBUG __x => D#48
      # DEBUG __x => NULL
      goto <bb 20>;

    }
    bb_29 (preds = {bb_27 bb_25 }, succs = {bb_82 })
    {
      <bb 29>:

    }
    bb_82 (preds = {bb_29 }, succs = {bb_20 })
    {
      <bb 82>:
      # DEBUG __r => NULL
      # VUSE <.MEM_95>
      __pos_77 = MEM[(struct _Rb_tree_node_base * *)__pos_319 + 24B];
      # DEBUG D#47 => __pos_319
      # DEBUG __x => D#47
      # DEBUG __x => NULL
      goto <bb 20>;

    }
  }
  loop_1 (header = 7, latch = 6, niter = )
  {
    bb_5 (preds = {bb_81 bb_80 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # __pos_57 = PHI <__pos_28(81), __pos_29(80)>
      # __pos_80 = PHI <__pos_318(81), __pos_322(80)>
      # DEBUG __y => __pos_80
      # DEBUG __x => __pos_57
      if (__pos_57 == 0B)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_7 (preds = {bb_3 bb_6 }, succs = {bb_8 bb_11 })
    {
      <bb 7>:
      # __pos_318 = PHI <__pos_24(3), __pos_57(6)>
      # __pos_322 = PHI <__pos_23(3), __pos_80(6)>
      # .MEM_132 = PHI <.MEM_2(D)(3), .MEM_132(6)>
      # DEBUG __y => __pos_322
      # DEBUG __x => __pos_318
      # DEBUG __x => __pos_318
      # DEBUG __x => __pos_318
      # DEBUG this => __pos_318
      # DEBUG D#226 => &MEM[(const struct _Rb_tree_node *)__pos_318]._M_value_field
      # DEBUG __r => D#226
      # DEBUG __x => D#226
      # DEBUG this => D#153
      # DEBUG D#1195 => &MEM[(const struct pair &)__pos_318 + 32].first
      # DEBUG D#227 => &D#228->_M_impl._M_key_compare
      # DEBUG D#203 => D#227
      # DEBUG __x => D#1195
      # DEBUG __y => field_5(D)
      # DEBUG this => D#203
      # DEBUG __lhs => D#1195
      # DEBUG __rhs => field_5(D)
      # DEBUG this => D#1195
      # DEBUG __str => field_5(D)
      # VUSE <.MEM_132>
      _17 = MEM[(long unsigned int *)__pos_318 + 40B];
      # DEBUG D#2 => D#1195
      # DEBUG this => D#2
      # DEBUG __size => _17
      # DEBUG D#1242 => MEM[(long unsigned int *)field_5(D) + 8B]
      # DEBUG D#2 => field_5(D)
      # DEBUG this => D#2
      # DEBUG __osize => D#1242
      # DEBUG __a => &__size
      # DEBUG __b => &__osize
      __len_309 = MIN_EXPR <_17, pretmp_19>;
      # DEBUG __len => D#1189
      # DEBUG this => field_5(D)
      # DEBUG D#1241 => MEM[(char * *)field_5(D)]
      # DEBUG D#3 => field_5(D)
      # DEBUG this => D#3
      # VUSE <.MEM_132>
      _39 = MEM[(char * *)__pos_318 + 32B];
      # DEBUG D#3 => D#1195
      # DEBUG this => D#3
      # DEBUG __s1 => _39
      # DEBUG __s2 => D#1241
      # DEBUG __n => D#1189
      # VUSE <.MEM_132>
      __r_40 = __builtin_memcmp (_39, pretmp_21, __len_309);
      # DEBUG __r => NULL
      if (__r_40 == 0)
        goto <bb 8>;
      else
        goto <bb 11>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 bb_9 })
    {
      <bb 8>:
      # DEBUG __n1 => _17
      # DEBUG __n2 => D#1242
      _41 = _17 - pretmp_19;
      __d_42 = (const difference_type) _41;
      # DEBUG __d => __d_42
      if (__d_42 > 2147483647)
        goto <bb 12>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_13 bb_10 })
    {
      <bb 9>:
      if (__d_42 < -2147483648)
        goto <bb 13>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      __r_43 = (int) _41;

    }
    bb_11 (preds = {bb_7 bb_10 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # __r_44 = PHI <__r_40(7), __r_43(10)>
      # DEBUG __r => __r_44
      # DEBUG D#1205 => {CLOBBER}
      # DEBUG __size => D#1205
      # DEBUG D#1206 => {CLOBBER}
      # DEBUG __osize => D#1206
      if (__r_44 >= 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_8 }, succs = {bb_81 })
    {
      <bb 12>:

    }
    bb_81 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 81>:
      # DEBUG __r => NULL
      # DEBUG __y => __pos_318
      # VUSE <.MEM_132>
      __pos_28 = MEM[(struct _Rb_tree_node_base * *)__pos_318 + 16B];
      # DEBUG D#48 => __pos_318
      # DEBUG __x => D#48
      # DEBUG __x => NULL
      goto <bb 5>;

    }
    bb_13 (preds = {bb_11 bb_9 }, succs = {bb_80 })
    {
      <bb 13>:

    }
    bb_80 (preds = {bb_13 }, succs = {bb_5 })
    {
      <bb 80>:
      # DEBUG __r => NULL
      # VUSE <.MEM_132>
      __pos_29 = MEM[(struct _Rb_tree_node_base * *)__pos_318 + 24B];
      # DEBUG D#47 => __pos_318
      # DEBUG __x => D#47
      # DEBUG __x => NULL
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

void Configuration::Assign(const string&, double) (struct ConfigurationD.32032 * const thisD.35776, const struct stringD.2845 & fieldD.35773, doubleD.39 valueD.35774)
Eh tree:
   9 cleanup land:{6,<L9>},{3,<L11>}
     12 must_not_throw
     11 cleanup land:{5,<L8>}
     10 try land:{7,<L10>},{4,<L12>} catch:{}
   6 cleanup land:{2,<L3>}
{
  struct _Rb_tree_node_baseD.27676 * SR.1330D.59504;
  struct _Rb_tree_node_baseD.27676 * SR.1329D.59503;
  struct _Rb_tree_node_baseD.27676 * SR.1328D.59502;
  const struct _Rb_tree_node_baseD.27676 * __posD.59501;
  struct _Rb_tree_node_baseD.27676 * SR.1326D.59500;
  struct _Rb_tree_node_baseD.27676 * SR.1325D.59499;
  size_typeD.11502 __dnewD.59471;
  const size_typeD.11502 __sizeD.59421;
  const size_typeD.11502 __osizeD.59422;
  const size_typeD.11502 __lenD.59423;
  intD.9 __rD.59424;
  const difference_typeD.11503 __dD.59427;
  intD.9 D.59433;
  boolD.2757 __insert_leftD.59394;
  struct iteratorD.34708 D.59418;
  size_typeD.11502 __dnewD.59363;
  struct iteratorD.34708 D.59359;
  struct pairD.28129 __resD.59354;
  struct _Rb_tree_node_baseD.27676 * __res$firstD.59358;
  struct _Rb_tree_node_baseD.27676 * __res$secondD.59357;
  struct const_iteratorD.34710 __positionD.59351;
  const size_typeD.11502 __sizeD.59337;
  const size_typeD.11502 __osizeD.59338;
  const size_typeD.11502 __lenD.59339;
  intD.9 __rD.59340;
  const difference_typeD.11503 __dD.59343;
  intD.9 D.59349;
  const size_typeD.11502 __sizeD.59322;
  const size_typeD.11502 __osizeD.59323;
  const size_typeD.11502 __lenD.59324;
  intD.9 __rD.59325;
  const difference_typeD.11503 __dD.59328;
  intD.9 D.59334;
  struct iteratorD.34708 D.59319;
  struct _Rb_tree_nodeD.34408 * __yD.59309;
  struct value_typeD.34190 D.59302;
  struct iteratorD.34981 D.59301;
  struct iteratorD.34708 D.59300;
  struct const_iteratorD.34710 __posD.59267;
  struct _Rb_tree_node_baseD.27676 * const __i$_M_nodeD.59299;
  struct _Rb_tree_node_baseD.27676 * SR.1141D.59298;
  struct _Rb_tree_node_baseD.27676 * SR.1144D.59297;
  mapped_typeD.34189 & D.59296;
  const size_typeD.11502 __sizeD.59215;
  const size_typeD.11502 __osizeD.59216;
  const size_typeD.11502 __lenD.59217;
  intD.9 __rD.59218;
  const difference_typeD.11503 __dD.59221;
  intD.9 D.59227;
  const size_typeD.11502 __sizeD.59200;
  const size_typeD.11502 __osizeD.59201;
  const size_typeD.11502 __lenD.59202;
  intD.9 __rD.59203;
  const difference_typeD.11503 __dD.59206;
  intD.9 D.59212;
  struct iteratorD.34708 D.59197;
  struct _Rb_tree_nodeD.34408 * __yD.59187;
  struct _Rb_tree_node_baseD.27676 * SR.1153D.55239;
  struct iteratorD.34981 D.55215;
  struct basic_stringD.2844 D.35952;
  charD.10 * const _3;
  const size_typeD.11502 _17;
  const size_typeD.11502 pretmp_19;
  charD.10 * const pretmp_21;
  boolD.2757 _27;
  charD.10 * const _39;
  long unsigned intD.14 _41;
  const size_typeD.11502 _47;
  charD.10 * const _50;
  long unsigned intD.14 _53;
  struct _Rep_typeD.34402 * _58;
  charD.10 * _66;
  charD.10 * const _68;
  charD.10 * const _71;
  size_typeD.11502 prephitmp_73;
  charD.10 * const pretmp_78;
  const size_typeD.11502 _81;
  charD.10 * const _86;
  long unsigned intD.14 _88;
  boolD.2757 _92;
  const size_typeD.11502 _94;
  charD.10 * const prephitmp_96;
  charD.10 * const _97;
  long unsigned intD.14 _100;
  boolD.2757 _104;
  charD.10 * _113;
  long unsigned intD.14 __dnew.111_114;
  const char_typeD.6439 _116;
  charD.10 * _119;
  struct _Rb_tree_nodeD.34408 * _124;
  intD.9 _127;
  long unsigned intD.14 _128;
  long unsigned intD.14 _129;
  const size_typeD.11502 _130;
  const size_typeD.11502 _131;
  charD.10 * const _134;
  charD.10 * const _135;
  long unsigned intD.14 _137;
  struct pairD.34184 * _142;
  charD.10 * _144;
  charD.10 * const _145;
  const size_typeD.11502 _146;
  charD.10 * _147;
  doubleD.39 _148;
  voidD.45 * _149;
  charD.10 * _155;
  long unsigned intD.14 __dnew.111_156;
  const char_typeD.6439 _158;
  charD.10 * _161;
  charD.10 * const pretmp_165;
  size_typeD.11502 pretmp_169;
  charD.10 * const _173;
  charD.10 * const prephitmp_179;
  size_typeD.11502 prephitmp_180;
  size_typeD.11502 pretmp_181;
  boolD.2757 _264;
  boolD.2757 _268;
  boolD.2757 _269;
  boolD.2757 _272;
  charD.10 * const _292;
  boolD.2757 _294;
  boolD.2757 _296;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.55216 => &matchD.35778
  # DEBUG match$_M_nodeD.55232 => 0B
  # DEBUG D#637ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55212 => D#637ptD.0
  # DEBUG __xD.55213 => field_5(D)
  # DEBUG D#1194ptD.0 => &MEM[(struct mapD.34186 *)this_4(D) + 136B]._M_tD.34405
  # DEBUG thisD.59173 => D#1194ptD.0
  # DEBUG __kD.59174 => field_5(D)
  # DEBUG thisD.59184 => D#1194ptD.0
  # PT = nonlocal 
  __pos_23 = &MEM[(struct _Rb_treeD.34404 *)this_4(D) + 136B]._M_implD.34482._M_headerD.34637;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __pos_24 = MEM[(struct _Rb_tree_node_baseD.27676 * *)this_4(D) + 152B];
  # DEBUG D#37ptD.0 => D#1194ptD.0
  # DEBUG thisD.49232 => D#37ptD.0
  # DEBUG D#229ptD.0 => D#1194ptD.0
  # DEBUG __xD.59188 => NULL
  # DEBUG __yD.59187 => NULL
  # DEBUG __kD.59186 => field_5(D)
  # DEBUG __yD.59187 => __pos_23
  # DEBUG __xD.59188 => __pos_24
  if (__pos_24 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_19 = MEM[(long unsigned intD.14 *)field_5(D) + 8B];
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  pretmp_21 = MEM[(charD.10 * *)field_5(D)];
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 246, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                79 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [7.1%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_320 = PHI <.MEM_2(D)(2), .MEM_132(79), .MEM_132(17), .MEM_132(19)>
  # DEBUG thisD.49246 => D#1194ptD.0
  # DEBUG thisD.49248 => NULL
  # DEBUG __xD.49247 => __pos_23
  # DEBUG D#230ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49250 => D#230ptD.0
  # DEBUG thisD.55210 => &match.67D.35896
  # DEBUG __itD.55211 => &D.35892
  # DEBUG match$_M_nodeD.55232 => __pos_23
  # DEBUG D#638ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55206 => D#638ptD.0
  # DEBUG D#63ptD.0 => &D#638ptD.0->_M_tD.34405
  # DEBUG thisD.55207 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55204 => &D.35951
  # DEBUG __itD.55205 => &D.35897
  # DEBUG thisD.55201 => &matchD.35778
  # DEBUG __xD.55202 => &D.35951
  # DEBUG D#230ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49250 => D#230ptD.0
  # DEBUG thisD.55210 => &match.67D.35896
  # DEBUG __itD.55211 => &D.35892
  # DEBUG match$_M_nodeD.55232 => __pos_23
  # DEBUG D#638ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55206 => D#638ptD.0
  # DEBUG D#63ptD.0 => &D#638ptD.0->_M_tD.34405
  # DEBUG thisD.55207 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55204 => &D.35951
  # DEBUG __itD.55205 => &D.35897
  # DEBUG thisD.55201 => &matchD.35778
  # DEBUG __xD.55202 => &D.35951
  # .MEM_13 = VDEF <.MEM_320>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  D.35952 = _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_D.35589 ("Unknown double field: ", field_5(D)); [return slot optimization]
  [LP 2] # .MEM_14 = VDEF <.MEM_13>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZNK13Configuration10ParseErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjD.35305 (this_4(D), &D.35952, 0);
;;    succ:       68 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                80 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_57 = PHI <__pos_28(81), __pos_29(80)>
  # PT = nonlocal escaped 
  # __pos_80 = PHI <__pos_318(81), __pos_322(80)>
  # DEBUG __yD.59187 => __pos_80
  # DEBUG __xD.59188 => __pos_57
  if (__pos_57 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_318 = PHI <__pos_24(3), __pos_57(6)>
  # PT = nonlocal escaped 
  # __pos_322 = PHI <__pos_23(3), __pos_80(6)>
  # .MEM_132 = PHI <.MEM_2(D)(3), .MEM_132(6)>
  # DEBUG __yD.59187 => __pos_322
  # DEBUG __xD.59188 => __pos_318
  # DEBUG __xD.59189 => __pos_318
  # DEBUG __xD.49158 => __pos_318
  # DEBUG thisD.49159 => __pos_318
  # DEBUG D#226ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__pos_318]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#226ptD.0
  # DEBUG __xD.59191 => D#226ptD.0
  # DEBUG thisD.59190 => D#153ptD.0
  # DEBUG D#1195ptD.0 => &MEM[(const struct pairD.34184 &)__pos_318 + 32].firstD.35901
  # DEBUG D#227ptD.0 => &D#228ptD.0->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#227ptD.0
  # DEBUG __xD.59194 => D#1195ptD.0
  # DEBUG __yD.59193 => field_5(D)
  # DEBUG thisD.59192 => D#203ptD.0
  # DEBUG __lhsD.59196 => D#1195ptD.0
  # DEBUG __rhsD.59195 => field_5(D)
  # DEBUG thisD.59198 => D#1195ptD.0
  # DEBUG __strD.59199 => field_5(D)
  # VUSE <.MEM_132>
  _17 = MEM[(long unsigned intD.14 *)__pos_318 + 40B];
  # DEBUG D#2ptD.0 => D#1195ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59200 => _17
  # DEBUG D#1242ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59201 => D#1242ptD.0
  # DEBUG __aD.59208 => &__sizeD.59200
  # DEBUG __bD.59207 => &__osizeD.59201
  __len_309 = MIN_EXPR <_17, pretmp_19>;
  # DEBUG __lenD.59202 => D#1189ptD.0
  # DEBUG thisD.48671 => field_5(D)
  # DEBUG D#1241ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _39 = MEM[(charD.10 * *)__pos_318 + 32B];
  # DEBUG D#3ptD.0 => D#1195ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59211 => _39
  # DEBUG __s2D.59210 => D#1241ptD.0
  # DEBUG __nD.59209 => D#1189ptD.0
  # VUSE <.MEM_132>
  # USE = nonlocal escaped 
  __r_40 = memcmpD.989 (_39, pretmp_21, __len_309);
  # DEBUG __rD.59203 => NULL
  if (__r_40 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59205 => _17
  # DEBUG __n2D.59204 => D#1242ptD.0
  # RANGE [0, 18446744073709551615]
  _41 = _17 - pretmp_19;
  __d_42 = (const difference_typeD.11503) _41;
  # DEBUG __dD.59206 => __d_42
  if (__d_42 > 2147483647)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 2775, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_42 < -2147483648)
    goto <bb 13>;
  else
    goto <bb 10>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1388, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_43 = (intD.9) _41;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4936, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_44 = PHI <__r_40(7), __r_43(10)>
  # DEBUG __rD.59203 => __r_44
  # DEBUG D#1205ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59200 => D#1205ptD.0
  # DEBUG D#1206ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59201 => D#1206ptD.0
  if (__r_44 >= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 11, next block 81, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       81 [100.0%]  (FALLTHRU)

;;   basic block 81, loop depth 1, count 0, freq 6643, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59203 => NULL
  # DEBUG __yD.59187 => __pos_318
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __pos_28 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_318 + 16B];
  # DEBUG D#48ptD.0 => __pos_318
  # DEBUG __xD.49191 => D#48ptD.0
  # DEBUG __xD.59188 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 81, next block 80, flags: (NEW, REACHABLE)
;;    pred:       11 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       80 [100.0%]  (FALLTHRU)

;;   basic block 80, loop depth 1, count 0, freq 2457, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59203 => NULL
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __pos_29 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_318 + 24B];
  # DEBUG D#47ptD.0 => __pos_318
  # DEBUG __xD.49190 => D#47ptD.0
  # DEBUG __xD.59188 => NULL
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 80, next block 79, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_312 = PHI <__pos_80(5)>
;;    succ:       79 [100.0%]  (FALLTHRU)

;;   basic block 79, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG thisD.49189 => NULL
  # DEBUG __xD.49188 => __pos_312
  # DEBUG __j$_M_nodeD.49250 => __pos_312
  # DEBUG thisD.49212 => D#1194ptD.0
  # DEBUG thisD.49214 => NULL
  # DEBUG __xD.49213 => __pos_23
  # DEBUG thisD.49209 => &__jD.59175
  # DEBUG __xD.49210 => NULL
  if (__pos_23 == __pos_312)
    goto <bb 4>;
  else
    goto <bb 15>;
;;    succ:       4 [1.2%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [98.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 809, maybe hot
;;    prev block 79, next block 16, flags: (NEW, REACHABLE)
;;    pred:       79 [98.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.59176 => __pos_312
  # DEBUG __xD.48212 => __pos_312
  # DEBUG thisD.48213 => __pos_312
  # DEBUG D#154ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__pos_312]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#154ptD.0
  # DEBUG __xD.59178 => D#154ptD.0
  # DEBUG thisD.59177 => D#153ptD.0
  # DEBUG D#1196ptD.0 => &MEM[(const struct pairD.34184 &)__pos_312 + 32].firstD.35901
  # DEBUG D#231ptD.0 => &MEM[(struct _Rb_treeD.34404 *)D#1194ptD.0]._M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#231ptD.0
  # DEBUG __xD.59181 => field_5(D)
  # DEBUG __yD.59180 => D#1196ptD.0
  # DEBUG thisD.59179 => D#203ptD.0
  # DEBUG __lhsD.59183 => field_5(D)
  # DEBUG __rhsD.59182 => D#1196ptD.0
  # DEBUG thisD.59213 => field_5(D)
  # DEBUG __strD.59214 => D#1196ptD.0
  # DEBUG D#1240ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59215 => D#1240ptD.0
  # VUSE <.MEM_132>
  _47 = MEM[(long unsigned intD.14 *)__pos_312 + 40B];
  # DEBUG D#2ptD.0 => D#1196ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59216 => _47
  # DEBUG __aD.59223 => &__sizeD.59215
  # DEBUG __bD.59222 => &__osizeD.59216
  __len_305 = MIN_EXPR <pretmp_19, _47>;
  # DEBUG __lenD.59217 => D#1190ptD.0
  # DEBUG thisD.48671 => D#1196ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _50 = MEM[(charD.10 * *)__pos_312 + 32B];
  # DEBUG D#3ptD.0 => D#1196ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1239ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59226 => D#1239ptD.0
  # DEBUG __s2D.59225 => _50
  # DEBUG __nD.59224 => D#1190ptD.0
  # VUSE <.MEM_132>
  # USE = nonlocal escaped 
  __r_52 = memcmpD.989 (pretmp_21, _50, __len_305);
  # DEBUG __rD.59218 => NULL
  if (__r_52 == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 493, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59220 => D#1240ptD.0
  # DEBUG __n2D.59219 => _47
  # RANGE [0, 18446744073709551615]
  _53 = pretmp_19 - _47;
  __d_54 = (const difference_typeD.11503) _53;
  # DEBUG __dD.59221 => __d_54
  if (__d_54 > 2147483647)
    goto <bb 77>;
  else
    goto <bb 17>;
;;    succ:       77 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 247, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_54 < -2147483648)
    goto <bb 4>;
  else
    goto <bb 18>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 123, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_55 = (intD.9) _53;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 438, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_56 = PHI <__r_52(15), __r_55(18)>
  # DEBUG __rD.59218 => __r_56
  # DEBUG D#1211ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59215 => D#1211ptD.0
  # DEBUG D#1212ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59216 => D#1212ptD.0
  if (__r_56 < 0)
    goto <bb 4>;
  else
    goto <bb 77>;
;;    succ:       4 [7.1%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [92.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       83 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                82 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_34 = PHI <__pos_76(83), __pos_77(82)>
  # PT = nonlocal escaped 
  # __pos_33 = PHI <__pos_319(83), __pos_141(82)>
  # DEBUG __yD.59309 => __pos_33
  # DEBUG __xD.59310 => __pos_34
  if (__pos_34 == 0B)
    goto <bb 30>;
  else
    goto <bb 21>;
;;    succ:       30 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 8277, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       77 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_319 = PHI <__pos_24(22), __pos_34(21)>
  # PT = nonlocal escaped 
  # __pos_141 = PHI <__pos_23(22), __pos_33(21)>
  # .MEM_95 = PHI <.MEM_132(22), .MEM_95(21)>
  # DEBUG __yD.59309 => __pos_141
  # DEBUG __xD.59310 => __pos_319
  # DEBUG __xD.59311 => __pos_319
  # DEBUG __xD.49158 => __pos_319
  # DEBUG thisD.49159 => __pos_319
  # DEBUG D#226ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__pos_319]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#226ptD.0
  # DEBUG __xD.59313 => D#226ptD.0
  # DEBUG thisD.59312 => D#153ptD.0
  # DEBUG D#1198ptD.0 => &MEM[(const struct pairD.34184 &)__pos_319 + 32].firstD.35901
  # DEBUG D#227ptD.0 => &D#228ptD.0->_M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#227ptD.0
  # DEBUG __xD.59316 => D#1198ptD.0
  # DEBUG __yD.59315 => field_5(D)
  # DEBUG thisD.59314 => D#203ptD.0
  # DEBUG __lhsD.59318 => D#1198ptD.0
  # DEBUG __rhsD.59317 => field_5(D)
  # DEBUG thisD.59320 => D#1198ptD.0
  # DEBUG __strD.59321 => field_5(D)
  # VUSE <.MEM_95>
  _81 = MEM[(long unsigned intD.14 *)__pos_319 + 40B];
  # DEBUG D#2ptD.0 => D#1198ptD.0
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59322 => _81
  # DEBUG D#1238ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59323 => D#1238ptD.0
  # DEBUG __aD.59330 => &__sizeD.59322
  # DEBUG __bD.59329 => &__osizeD.59323
  __len_302 = MIN_EXPR <pretmp_19, _81>;
  # DEBUG __lenD.59324 => D#1191ptD.0
  # DEBUG thisD.48671 => field_5(D)
  # DEBUG D#1237ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _86 = MEM[(charD.10 * *)__pos_319 + 32B];
  # DEBUG D#3ptD.0 => D#1198ptD.0
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59333 => _86
  # DEBUG __s2D.59332 => D#1237ptD.0
  # DEBUG __nD.59331 => D#1191ptD.0
  # VUSE <.MEM_95>
  # USE = nonlocal escaped 
  __r_87 = memcmpD.989 (_86, pretmp_21, __len_302);
  # DEBUG __rD.59325 => NULL
  if (__r_87 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;
;;    succ:       24 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 5549, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59327 => _81
  # DEBUG __n2D.59326 => D#1238ptD.0
  # RANGE [0, 18446744073709551615]
  _88 = _81 - pretmp_19;
  __d_89 = (const difference_typeD.11503) _88;
  # DEBUG __dD.59328 => __d_89
  if (__d_89 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 25>;
;;    succ:       28 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 2774, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_89 < -2147483648)
    goto <bb 29>;
  else
    goto <bb 26>;
;;    succ:       29 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 1387, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_90 = (intD.9) _88;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 4934, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       23 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_91 = PHI <__r_87(23), __r_90(26)>
  # DEBUG __rD.59325 => __r_91
  # DEBUG D#1217ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59322 => D#1217ptD.0
  # DEBUG D#1218ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59323 => D#1218ptD.0
  if (__r_91 >= 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [21.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 27, next block 83, flags: (NEW, REACHABLE)
;;    pred:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       83 [100.0%]  (FALLTHRU)

;;   basic block 83, loop depth 1, count 0, freq 6640, maybe hot
;;    prev block 28, next block 29, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59325 => NULL
  # DEBUG __yD.59309 => __pos_319
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  __pos_76 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_319 + 16B];
  # DEBUG D#48ptD.0 => __pos_319
  # DEBUG __xD.49191 => D#48ptD.0
  # DEBUG __xD.59310 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 83, next block 82, flags: (NEW, REACHABLE)
;;    pred:       27 [21.7%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       82 [100.0%]  (FALLTHRU)

;;   basic block 82, loop depth 1, count 0, freq 2456, maybe hot
;;    prev block 29, next block 30, flags: (NEW)
;;    pred:       29 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59325 => NULL
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  __pos_77 = MEM[(struct _Rb_tree_node_baseD.27676 * *)__pos_319 + 24B];
  # DEBUG D#47ptD.0 => __pos_319
  # DEBUG __xD.49190 => D#47ptD.0
  # DEBUG __xD.59310 => NULL
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 82, next block 78, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_313 = PHI <__pos_33(20)>
;;    succ:       78 [100.0%]  (FALLTHRU)

;;   basic block 78, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 30, next block 31, flags: (NEW)
;;    pred:       30 [100.0%]  (FALLTHRU)
  # DEBUG thisD.49189 => NULL
  # DEBUG __xD.49188 => __pos_313
  # DEBUG __i$_M_nodeD.59299 => __pos_313
  # DEBUG thisD.59294 => D#1197ptD.0
  # DEBUG D#63ptD.0 => &D#1197ptD.0->_M_tD.34405
  # DEBUG thisD.59295 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55105 => &__iD.59230
  # DEBUG __xD.55106 => NULL
  if (__pos_23 == __pos_313)
    goto <bb 71>;
  else
    goto <bb 31>;
;;    succ:       71 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 765, maybe hot
;;    prev block 78, next block 32, flags: (NEW, REACHABLE)
;;    pred:       78 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.55125 => &__iD.59230
  # DEBUG thisD.55126 => __pos_313
  # DEBUG D#633ptD.0 => &MEM[(struct _Rb_tree_nodeD.34408 *)__pos_313]._M_value_fieldD.38976
  # DEBUG __rD.48217 => D#633ptD.0
  # DEBUG D#1199ptD.0 => &MEM[(struct pairD.34184 &)__pos_313 + 32].firstD.35901
  # DEBUG D#69ptD.0 => D#1197ptD.0
  # DEBUG thisD.55122 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#69ptD.0
  # DEBUG D#67ptD.0 => &D#68ptD.0->_M_tD.34405
  # DEBUG D#66ptD.0 => D#67ptD.0
  # DEBUG thisD.47555 => D#66ptD.0
  # DEBUG __xD.59289 => field_5(D)
  # DEBUG __yD.59288 => D#1199ptD.0
  # DEBUG thisD.59287 => D#203ptD.0
  # DEBUG __lhsD.59291 => field_5(D)
  # DEBUG __rhsD.59290 => D#1199ptD.0
  # DEBUG thisD.59335 => field_5(D)
  # DEBUG __strD.59336 => D#1199ptD.0
  # DEBUG D#1236ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#2ptD.0 => field_5(D)
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59337 => D#1236ptD.0
  # VUSE <.MEM_95>
  _94 = MEM[(long unsigned intD.14 *)__pos_313 + 40B];
  # DEBUG D#2ptD.0 => D#1199ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59338 => _94
  # DEBUG __aD.59345 => &__sizeD.59337
  # DEBUG __bD.59344 => &__osizeD.59338
  __len_301 = MIN_EXPR <pretmp_19, _94>;
  # DEBUG __lenD.59339 => D#1192ptD.0
  # DEBUG thisD.48671 => D#1199ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _97 = MEM[(charD.10 * *)__pos_313 + 32B];
  # DEBUG D#3ptD.0 => D#1199ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # DEBUG D#1235ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59348 => D#1235ptD.0
  # DEBUG __s2D.59347 => _97
  # DEBUG __nD.59346 => D#1192ptD.0
  # VUSE <.MEM_95>
  # USE = nonlocal escaped 
  __r_99 = memcmpD.989 (pretmp_21, _97, __len_301);
  # DEBUG __rD.59340 => NULL
  if (__r_99 == 0)
    goto <bb 32>;
  else
    goto <bb 35>;
;;    succ:       32 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 466, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59342 => D#1236ptD.0
  # DEBUG __n2D.59341 => _94
  # RANGE [0, 18446744073709551615]
  _100 = pretmp_19 - _94;
  __d_101 = (const difference_typeD.11503) _100;
  # DEBUG __dD.59343 => __d_101
  if (__d_101 > 2147483647)
    goto <bb 63>;
  else
    goto <bb 33>;
;;    succ:       63 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 233, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_101 < -2147483648)
    goto <bb 36>;
  else
    goto <bb 34>;
;;    succ:       36 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_102 = (intD.9) _100;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 415, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       31 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_103 = PHI <__r_99(31), __r_102(34)>
  # DEBUG __rD.59340 => __r_103
  # DEBUG D#1223ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59337 => D#1223ptD.0
  # DEBUG D#1224ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59338 => D#1224ptD.0
  if (__r_103 < 0)
    goto <bb 71>;
  else
    goto <bb 63>;
;;    succ:       71 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [78.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                84 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_293 = PHI <.MEM_95(33), .MEM_60(84)>
  # PT = nonlocal escaped 
  # __pos_133 = PHI <__pos_313(33), __pos_162(84)>
  # DEBUG thisD.59272 => &D.59302
  # DEBUG __aD.59271 => field_5(D)
  # DEBUG __bD.59270 => NULL
  # DEBUG thisD.59274 => &D.59302.firstD.35901
  # DEBUG __strD.59273 => field_5(D)
  # DEBUG thisD.50825 => field_5(D)
  # DEBUG D#380ptD.0 => &MEM[(const struct basic_stringD.2844 *)field_5(D)]._M_dataplusD.11519
  # DEBUG thisD.59275 => &D.59302.firstD.35901
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)&D.59302]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.59278 => D#381ptD.0
  # DEBUG __datD.59277 => &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541
  # DEBUG __aD.59276 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_204 = VDEF <.MEM_293>
  MEM[(struct _Alloc_hiderD.11518 *)&D.59302]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541;
  # DEBUG D#1234ptD.0 => MEM[(charD.10 * *)field_5(D)]
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.50818 => D#3ptD.0
  # DEBUG D#1233ptD.0 => MEM[(long unsigned intD.14 *)field_5(D) + 8B]
  # DEBUG D#1ptD.0 => field_5(D)
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped 
  _66 = pretmp_21 + pretmp_19;
  # DEBUG D#3ptD.0 => field_5(D)
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.59281 => &D.59302.firstD.35901
  # DEBUG __begD.59280 => D#1234ptD.0
  # DEBUG __endD.59279 => _66
  # DEBUG thisD.59285 => &D.59302.firstD.35901
  # DEBUG __begD.59284 => D#1234ptD.0
  # DEBUG __endD.59283 => _66
  # DEBUG thisD.59360 => &D.59302.firstD.35901
  # DEBUG __begD.59361 => D#1234ptD.0
  # DEBUG __endD.59362 => _66
  # DEBUG __ptrD.51229 => D#1234ptD.0
  # RANGE [0, 1]
  _92 = _66 != 0B;
  # RANGE [0, 1]
  _104 = pretmp_21 == 0B;
  # RANGE [0, 1]
  _296 = _92 & _104;
  if (_296 != 0)
    goto <bb 73>;
  else
    goto <bb 72>;
;;    succ:       73 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       72 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_206 = VDEF <.MEM_205>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _113 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.59302.firstD.35901, &__dnewD.59363, 0);
  # DEBUG D#6ptD.0 => &D.59302.firstD.35901
  # DEBUG __pD.59382 => _113
  # DEBUG thisD.59381 => D#6ptD.0
  # .MEM_207 = VDEF <.MEM_206>
  MEM[(charD.10 * *)&D.59302] = _113;
  # VUSE <.MEM_207>
  __dnew.111_114 = __dnewD.59363;
  # DEBUG D#7ptD.0 => &D.59302.firstD.35901
  # DEBUG __capacityD.59384 => __dnew.111_114
  # DEBUG thisD.59383 => D#7ptD.0
  # .MEM_208 = VDEF <.MEM_207>
  MEM[(size_typeD.11502 *)&D.59302 + 16B] = __dnew.111_114;
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59366 => _113
  # DEBUG __k1D.59365 => D#1234ptD.0
  # DEBUG __k2D.59364 => _66
  # DEBUG __dD.59369 => _113
  # DEBUG __sD.59368 => D#1234ptD.0
  # DEBUG __nD.59367 => D#1233ptD.0
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 249, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       72 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59366 => &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541
  # DEBUG __k1D.59365 => D#1234ptD.0
  # DEBUG __k2D.59364 => _66
  # DEBUG __dD.59369 => &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541
  # DEBUG __sD.59368 => D#1234ptD.0
  # DEBUG __nD.59367 => D#1233ptD.0
  if (pretmp_19 == 1)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 133, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_205>
  _116 = MEM[(const char_typeD.6439 &)pretmp_21];
  # DEBUG D#13ptD.0 => D#1234ptD.0
  # DEBUG __c1D.59374 => &MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541
  # DEBUG __c2D.59373 => D#13ptD.0
  # .MEM_209 = VDEF <.MEM_205>
  MEM[(char_typeD.6439 &)&D.59302 + 16] = _116;
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 218, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.59302 } (escaped)
  # _173 = PHI <&MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541(38), _113(37)>
  # .MEM_290 = PHI <.MEM_205(38), .MEM_208(37)>
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59366 => _173
  # DEBUG __k1D.59365 => D#1234ptD.0
  # DEBUG __k2D.59364 => _66
  # DEBUG __dD.59369 => _173
  # DEBUG __sD.59368 => D#1234ptD.0
  # DEBUG __nD.59367 => D#1233ptD.0
  # DEBUG __s1D.59372 => _173
  # DEBUG __s2D.59371 => D#1234ptD.0
  # DEBUG __nD.59370 => D#1233ptD.0
  # .MEM_210 = VDEF <.MEM_290>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  memcpyD.992 (_173, pretmp_21, pretmp_19);
  # VUSE <.MEM_210>
  pretmp_181 = __dnewD.59363;
  # VUSE <.MEM_210>
  pretmp_165 = MEM[(charD.10 * *)&D.59302];
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_168 = PHI <.MEM_209(39), .MEM_210(40)>
  # prephitmp_180 = PHI <pretmp_19(39), pretmp_181(40)>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  # prephitmp_179 = PHI <&MEM[(struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541(39), pretmp_165(40)>
  # DEBUG D#1232ptD.0 => __dnewD.59363
  # DEBUG thisD.59376 => &D.59302.firstD.35901
  # DEBUG __nD.59375 => D#1232ptD.0
  # DEBUG D#5ptD.0 => &D.59302.firstD.35901
  # DEBUG __lengthD.59378 => D#1232ptD.0
  # DEBUG thisD.59377 => D#5ptD.0
  # .MEM_211 = VDEF <.MEM_168>
  MEM[(size_typeD.11502 *)&D.59302 + 8B] = prephitmp_180;
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _119 = prephitmp_179 + prephitmp_180;
  # DEBUG __c1D.59380 => _119
  # DEBUG __c2D.59379 => D#13ptD.0
  # .MEM_212 = VDEF <.MEM_211>
  MEM[(char_typeD.6439 &)_119] = 0;
  # .MEM_213 = VDEF <.MEM_212>
  __dnewD.59363 ={v} {CLOBBER};
  # .MEM_214 = VDEF <.MEM_213>
  D.59302.secondD.35902 = 0.0;
  # DEBUG thisD.59265 => D#1197ptD.0
  # DEBUG __position$_M_nodeD.55197 => __pos_133
  # DEBUG __xD.59263 => &D.59302
  # DEBUG thisD.55149 => NULL
  # DEBUG __itD.55148 => &__positionD.59264
  # DEBUG thisD.59268 => D#1243ptD.0
  # DEBUG __posD.59501 => __pos_133
  # DEBUG __xD.59266 => &D.59302
  # DEBUG thisD.55099 => &__anD.59269
  # DEBUG __tD.55098 => D#1243ptD.0
  # DEBUG __an$_M_tD.55092 => D#1243ptD.0
  # DEBUG D#632ptD.0 => &__anD.59269
  # DEBUG thisD.59350 => D#1243ptD.0
  # .MEM_216 = VDEF <.MEM_214>
  MEM[(struct _Rb_tree_const_iteratorD.34711 *)&__positionD.59351] = __pos_133;
  # DEBUG __vD.59352 => &D.59302
  # DEBUG __node_genD.59353 => D#632ptD.0
  # DEBUG D#631ptD.0 => D#632ptD.0
  # DEBUG __xD.59356 => &D.59302
  # DEBUG thisD.59355 => D#153ptD.0
  # PT = nonlocal 
  _58 = &MEM[(struct mapD.34186 *)this_4(D) + 136B]._M_tD.34405;
  # .MEM_217 = VDEF <.MEM_216>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  __resD.59354 = _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_D.34722 (_58, __positionD.59351, &D.59302.firstD.35901);
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  __res$first_106 = MEM[(struct pairD.28129 *)&__resD.59354];
  # DEBUG __res$firstD.59358 => __res$first_106
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  __res$second_107 = MEM[(struct pairD.28129 *)&__resD.59354 + 8B];
  # DEBUG __res$secondD.59357 => __res$second_107
  if (__res$second_107 != 0B)
    goto <bb 42>;
  else
    goto <bb 60>;
;;    succ:       42 [59.7%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [40.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of incoming frequencies 209, should be 45
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [59.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#626ptD.0 => D#631ptD.0
  # DEBUG thisD.59389 => D#1243ptD.0
  # DEBUG __xD.59390 => __res$first_106
  # DEBUG __pD.59391 => __res$second_107
  # DEBUG __vD.59392 => &D.59302
  # DEBUG __node_genD.59393 => D#626ptD.0
  # DEBUG D#625ptD.0 => D#626ptD.0
  # DEBUG thisD.59417 => D#1243ptD.0
  _294 = __pos_23 == __res$second_107;
  # RANGE [0, 1]
  _27 = __res$first_106 != 0B;
  _264 = _27 | _294;
  if (_264 != 0)
    goto <bb 48>;
  else
    goto <bb 43>;
;;    succ:       48 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 41, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.59407 => __res$second_107
  # DEBUG __xD.48212 => __res$second_107
  # DEBUG thisD.48213 => __res$second_107
  # DEBUG D#154ptD.0 => &MEM[(const struct _Rb_tree_nodeD.34408 *)__res$second_107]._M_value_fieldD.38976
  # DEBUG __rD.47702 => D#154ptD.0
  # DEBUG __xD.59409 => D#154ptD.0
  # DEBUG thisD.59408 => D#153ptD.0
  # DEBUG D#1200ptD.0 => &MEM[(const struct pairD.34184 &)__res$second_107 + 32].firstD.35901
  # DEBUG __xD.59411 => &D.59302
  # DEBUG thisD.59410 => D#153ptD.0
  # DEBUG D#624ptD.0 => &MEM[(struct _Rb_treeD.34404 *)D#1243ptD.0]._M_implD.34482._M_key_compareD.34636
  # DEBUG D#203ptD.0 => D#624ptD.0
  # DEBUG __xD.59414 => NULL
  # DEBUG __yD.59413 => D#1200ptD.0
  # DEBUG thisD.59412 => D#203ptD.0
  # DEBUG __lhsD.59416 => NULL
  # DEBUG __rhsD.59415 => D#1200ptD.0
  # DEBUG thisD.59419 => &D.59302.firstD.35901
  # DEBUG __strD.59420 => D#1200ptD.0
  # VUSE <.MEM_217>
  _130 = MEM[(long unsigned intD.14 *)&D.59302 + 8B];
  # DEBUG D#2ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.48680 => D#2ptD.0
  # DEBUG __sizeD.59421 => _130
  # VUSE <.MEM_217>
  _131 = MEM[(long unsigned intD.14 *)__res$second_107 + 40B];
  # DEBUG D#2ptD.0 => D#1200ptD.0
  # DEBUG thisD.48677 => D#2ptD.0
  # DEBUG __osizeD.59422 => _131
  # DEBUG __aD.59429 => &__sizeD.59421
  # DEBUG __bD.59428 => &__osizeD.59422
  __len_59 = MIN_EXPR <_130, _131>;
  # DEBUG __lenD.59423 => D#1193ptD.0
  # DEBUG thisD.48671 => D#1200ptD.0
  # VUSE <.MEM_217>
  # PT = nonlocal escaped 
  _134 = MEM[(charD.10 * *)__res$second_107 + 32B];
  # DEBUG D#3ptD.0 => D#1200ptD.0
  # DEBUG thisD.46885 => D#3ptD.0
  # VUSE <.MEM_217>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _135 = MEM[(charD.10 * *)&D.59302];
  # DEBUG D#3ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.48669 => D#3ptD.0
  # DEBUG __s1D.59432 => _135
  # DEBUG __s2D.59431 => _134
  # DEBUG __nD.59430 => D#1193ptD.0
  # VUSE <.MEM_217>
  # USE = nonlocal escaped null { D.59302 } (escaped)
  __r_136 = memcmpD.989 (_135, _134, __len_59);
  # DEBUG __rD.59424 => NULL
  if (__r_136 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;
;;    succ:       44 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 25, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __n1D.59426 => _130
  # DEBUG __n2D.59425 => _131
  # RANGE [0, 18446744073709551615]
  _137 = _130 - _131;
  __d_138 = (const difference_typeD.11503) _137;
  # DEBUG __dD.59427 => __d_138
  if (__d_138 > 2147483647)
    goto <bb 48>;
  else
    goto <bb 45>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__d_138 < -2147483648)
    goto <bb 48>;
  else
    goto <bb 46>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  __r_139 = (intD.9) _137;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 46, next block 86, flags: (NEW, REACHABLE)
;;    pred:       43 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __r_140 = PHI <__r_136(43), __r_139(46)>
;;    succ:       86 [100.0%]  (FALLTHRU)

;;   basic block 86, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 47, next block 48, flags: (NEW)
;;    pred:       47 [100.0%]  (FALLTHRU)
  # DEBUG __rD.59424 => __r_140
  # DEBUG D#1229ptD.0 => {CLOBBER}
  # DEBUG __sizeD.59421 => D#1229ptD.0
  # DEBUG D#1230ptD.0 => {CLOBBER}
  # DEBUG __osizeD.59422 => D#1230ptD.0
  __insert_left_300 = __r_140 < 0;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 209, maybe hot
;;   Invalid sum of incoming frequencies 46, should be 209
;;    prev block 86, next block 49, flags: (NEW, REACHABLE)
;;    pred:       44 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                86 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [10.1%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # __insert_left_126 = PHI <0(44), 1(45), __insert_left_300(86), 1(42)>
  # DEBUG __insert_leftD.59394 => __insert_left_126
  # DEBUG D#623ptD.0 => D#625ptD.0
  # DEBUG __argD.59397 => &D.59302
  # DEBUG thisD.59396 => D#623ptD.0
  # DEBUG D#622ptD.0 => D#623ptD.0
  # DEBUG D#621ptD.0 => D#622ptD.0->_M_tD.40815
  # DEBUG D#620ptD.0 => D#621ptD.0
  # DEBUG __xD.59399 => &D.59302
  # DEBUG thisD.59398 => D#620ptD.0
  # DEBUG D#619ptD.0 => D#620ptD.0
  # DEBUG D#618ptD.0 => D#620ptD.0
  # DEBUG D#617ptD.0 => D#618ptD.0
  # DEBUG thisD.59401 => D#617ptD.0
  # DEBUG D#616ptD.0 => D#617ptD.0
  # DEBUG thisD.54923 => D#616ptD.0
  # DEBUG __nD.59403 => 1
  # DEBUG __aD.59402 => D#615ptD.0
  # DEBUG D#614ptD.0 => D#615ptD.0
  # DEBUG D#612ptD.0 => D#614ptD.0
  # DEBUG D#613ptD.0 => 0B
  # DEBUG __nD.59406 => 1
  # DEBUG thisD.59404 => D#612ptD.0
  # DEBUG D.59405 => D#613ptD.0
  # DEBUG D#611ptD.0 => D#612ptD.0
  # DEBUG D#610ptD.0 => D#611ptD.0
  # DEBUG thisD.54881 => D#610ptD.0
  [LP 6] # .MEM_223 = VDEF <.MEM_217>
  # PT = { D.59509 } (escaped heap)
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _124 = _ZnwmD.2764 (72);
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 (EH,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 209, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __tmpD.59400 => _124
  # DEBUG D#505ptD.0 => D#619ptD.0
  # DEBUG __nodeD.59434 => _124
  # DEBUG __xD.59435 => &D.59302
  # DEBUG thisD.59436 => D#505ptD.0
  # DEBUG D#504ptD.0 => D#505ptD.0
  # DEBUG D#503ptD.0 => D#505ptD.0
  # DEBUG thisD.59445 => _124
  # DEBUG D#1244ptD.0 => &_124->_M_value_fieldD.38976
  # DEBUG __rD.48217 => D#1244ptD.0
  # DEBUG D#488ptD.0 => D#503ptD.0
  # DEBUG thisD.53055 => D#488ptD.0
  # DEBUG D#487ptD.0 => D#488ptD.0
  # DEBUG thisD.52721 => D#487ptD.0
  # DEBUG thisD.52713 => NULL
  # DEBUG D.52714 => NULL
  # DEBUG thisD.52711 => NULL
  # DEBUG __pD.59448 => D#1244ptD.0
  # DEBUG __valD.59447 => &D.59302
  # DEBUG thisD.59446 => D#502ptD.0
  # DEBUG D#14ptD.0 => 40
  # DEBUG __pD.52989 => D#1244ptD.0
  # DEBUG D.52990 => D#14ptD.0
  # DEBUG thisD.59450 => D#1244ptD.0
  # DEBUG D.59449 => &D.59302
  # DEBUG D#501ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.59452 => D#1244ptD.0
  # DEBUG __strD.59451 => D#501ptD.0
  # DEBUG thisD.50825 => D#501ptD.0
  # DEBUG D#380ptD.0 => &D#501ptD.0->_M_dataplusD.11519
  # DEBUG thisD.59453 => D#1244ptD.0
  # PT = { D.59509 } (escaped heap)
  _144 = &MEM[(struct basic_stringD.2844 *)_124 + 32B].D.11539._M_local_bufD.11541;
  # DEBUG D#381ptD.0 => &MEM[(struct basic_stringD.2844 *)D#1244ptD.0]._M_dataplusD.11519
  # DEBUG D#147ptD.0 => D#380ptD.0
  # DEBUG thisD.59456 => D#381ptD.0
  # DEBUG __datD.59455 => _144
  # DEBUG __aD.59454 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#147ptD.0
  # DEBUG D#144ptD.0 => D#381ptD.0
  # DEBUG D#145ptD.0 => D#146ptD.0
  # DEBUG thisD.48127 => D#144ptD.0
  # DEBUG __aD.48128 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG thisD.48109 => D#142ptD.0
  # DEBUG D.48110 => D#143ptD.0
  # .MEM_224 = VDEF <.MEM_223>
  MEM[(struct _Alloc_hiderD.11518 *)_124 + 32B]._M_pD.11525 = _144;
  # VUSE <.MEM_224>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _145 = MEM[(charD.10 * *)&D.59302];
  # DEBUG D#3ptD.0 => D#501ptD.0
  # DEBUG thisD.50818 => D#3ptD.0
  # VUSE <.MEM_224>
  _146 = MEM[(long unsigned intD.14 *)&D.59302 + 8B];
  # DEBUG D#1ptD.0 => D#501ptD.0
  # DEBUG thisD.50815 => D#1ptD.0
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _147 = _145 + _146;
  # DEBUG D#3ptD.0 => D#501ptD.0
  # DEBUG thisD.50812 => D#3ptD.0
  # DEBUG thisD.59459 => D#1244ptD.0
  # DEBUG __begD.59458 => _145
  # DEBUG __endD.59457 => _147
  # DEBUG thisD.59463 => D#1244ptD.0
  # DEBUG __begD.59462 => _145
  # DEBUG __endD.59461 => _147
  # DEBUG thisD.59468 => D#1244ptD.0
  # DEBUG __begD.59469 => _145
  # DEBUG __endD.59470 => _147
  # DEBUG __ptrD.51229 => _145
  # RANGE [0, 1]
  _272 = _147 != 0B;
  # RANGE [0, 1]
  _269 = _145 == 0B;
  # RANGE [0, 1]
  _268 = _269 & _272;
  if (_268 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;
;;    succ:       74 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                76 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 48, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       76 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.59509 } (escaped heap)
  _142 = &_124->_M_value_fieldD.38976;
  [LP 7] # .MEM_226 = VDEF <.MEM_225>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _155 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_142, &__dnewD.59471, 0);
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 (EH,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 48, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => D#1244ptD.0
  # DEBUG __pD.59490 => _155
  # DEBUG thisD.59489 => D#6ptD.0
  # .MEM_227 = VDEF <.MEM_226>
  MEM[(charD.10 * *)_124 + 32B] = _155;
  # VUSE <.MEM_227>
  __dnew.111_156 = __dnewD.59471;
  # DEBUG D#7ptD.0 => D#1244ptD.0
  # DEBUG __capacityD.59492 => __dnew.111_156
  # DEBUG thisD.59491 => D#7ptD.0
  # .MEM_228 = VDEF <.MEM_227>
  MEM[(size_typeD.11502 *)_124 + 48B] = __dnew.111_156;
  # DEBUG D#3ptD.0 => D#1244ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59474 => _155
  # DEBUG __k1D.59473 => _145
  # DEBUG __k2D.59472 => _147
  # DEBUG __dD.59477 => _155
  # DEBUG __sD.59476 => _145
  # DEBUG __nD.59475 => _146
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 116, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       76 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#3ptD.0 => D#1244ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59474 => _144
  # DEBUG __k1D.59473 => _145
  # DEBUG __k2D.59472 => _147
  # DEBUG __dD.59477 => _144
  # DEBUG __sD.59476 => _145
  # DEBUG __nD.59475 => _146
  if (_146 == 1)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [53.5%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [46.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [53.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_225>
  _158 = MEM[(const char_typeD.6439 &)_145];
  # DEBUG D#13ptD.0 => _145
  # DEBUG __c1D.59482 => _144
  # DEBUG __c2D.59481 => D#13ptD.0
  # .MEM_229 = VDEF <.MEM_225>
  MEM[(char_typeD.6439 &)_144] = _158;
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 102, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [46.5%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.59302 D.59509 } (escaped heap)
  # _292 = PHI <_144(52), _155(51)>
  # .MEM_288 = PHI <.MEM_225(52), .MEM_228(51)>
  # DEBUG D#3ptD.0 => D#1244ptD.0
  # DEBUG thisD.51203 => D#3ptD.0
  # DEBUG __pD.59474 => _292
  # DEBUG __k1D.59473 => _145
  # DEBUG __k2D.59472 => _147
  # DEBUG __dD.59477 => _292
  # DEBUG __sD.59476 => _145
  # DEBUG __nD.59475 => _146
  # DEBUG __s1D.59480 => _292
  # DEBUG __s2D.59479 => _145
  # DEBUG __nD.59478 => _146
  # .MEM_230 = VDEF <.MEM_288>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  memcpyD.992 (_292, _145, _146);
  # VUSE <.MEM_230>
  pretmp_169 = __dnewD.59471;
  # VUSE <.MEM_230>
  pretmp_78 = MEM[(charD.10 * *)_124 + 32B];
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 209, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_171 = PHI <.MEM_229(53), .MEM_230(54)>
  # prephitmp_73 = PHI <_146(53), pretmp_169(54)>
  # PT = nonlocal escaped null { D.59302 D.59509 } (escaped heap)
  # prephitmp_96 = PHI <_144(53), pretmp_78(54)>
  # DEBUG D#1231ptD.0 => __dnewD.59471
  # DEBUG thisD.59484 => D#1244ptD.0
  # DEBUG __nD.59483 => D#1231ptD.0
  # DEBUG D#5ptD.0 => D#1244ptD.0
  # DEBUG __lengthD.59486 => D#1231ptD.0
  # DEBUG thisD.59485 => D#5ptD.0
  # .MEM_231 = VDEF <.MEM_171>
  MEM[(size_typeD.11502 *)_124 + 40B] = prephitmp_73;
  # DEBUG D#3ptD.0 => D#1244ptD.0
  # DEBUG thisD.47013 => D#3ptD.0
  # PT = nonlocal escaped null { D.59302 D.59509 } (escaped heap)
  _161 = prephitmp_96 + prephitmp_73;
  # DEBUG __c1D.59488 => _161
  # DEBUG __c2D.59487 => D#13ptD.0
  # .MEM_232 = VDEF <.MEM_231>
  MEM[(char_typeD.6439 &)_161] = 0;
  # .MEM_233 = VDEF <.MEM_232>
  __dnewD.59471 ={v} {CLOBBER};
  # VUSE <.MEM_233>
  _148 = D.59302.secondD.35902;
  # .MEM_234 = VDEF <.MEM_233>
  MEM[(struct pairD.34184 *)_124 + 32B].secondD.35902 = _148;
  # DEBUG thisD.53085 => NULL
  # DEBUG thisD.53059 => NULL
  # DEBUG __zD.59395 => _124
  # RANGE [0, 1] NONZERO 1
  _127 = (intD.9) __insert_left_126;
  # .MEM_240 = VDEF <.MEM_234>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_D.27902 (_127, _124, __res$second_107, __pos_23);
  # VUSE <.MEM_240>
  _128 = MEM[(struct _Rb_treeD.34404 *)this_4(D) + 136B]._M_implD.34482._M_node_countD.34638;
  # RANGE [0, 18446744073709551615]
  _129 = _128 + 1;
  # .MEM_241 = VDEF <.MEM_240>
  MEM[(struct _Rb_treeD.34404 *)this_4(D) + 136B]._M_implD.34482._M_node_countD.34638 = _129;
  # DEBUG thisD.55037 => NULL
  # DEBUG __xD.55036 => _124
  goto <bb 60>;
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       50 (EH,EXECUTABLE)
<L10>: [LP 7]
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_226(56), .MEM_235(75)>
<L6>:
  # VUSE <.MEM_172>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _149 = __builtin_eh_pointerD.2738 (10);
  # .MEM_236 = VDEF <.MEM_172>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  __cxa_begin_catchD.14644 (_149);
  # DEBUG D#322ptD.0 => D#504ptD.0
  # DEBUG __pD.59438 => _124
  # DEBUG thisD.59437 => D#322ptD.0
  # DEBUG D#321ptD.0 => D#322ptD.0
  # DEBUG thisD.49909 => D#321ptD.0
  # DEBUG D#320ptD.0 => 1
  # DEBUG __pD.59441 => _124
  # DEBUG __aD.59439 => D#319ptD.0
  # DEBUG __nD.59440 => D#320ptD.0
  # DEBUG D#318ptD.0 => D#320ptD.0
  # DEBUG D#317ptD.0 => D#319ptD.0
  # DEBUG D#315ptD.0 => D#317ptD.0
  # DEBUG D#316ptD.0 => D#318ptD.0
  # DEBUG __pD.59444 => _124
  # DEBUG thisD.59442 => D#315ptD.0
  # DEBUG D.59443 => D#316ptD.0
  # .MEM_237 = VDEF <.MEM_236>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZdlPvD.2766 (_124);
  [LP 5] # .MEM_238 = VDEF <.MEM_237>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  __cxa_rethrowD.40506 ();
;;    succ:       58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 (EH,EXECUTABLE)
<L8>: [LP 5]
  [MNT 12] # .MEM_239 = VDEF <.MEM_238>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  __cxa_end_catchD.14643 ();
  [LP 3] resx 11
;;    succ:       59 (EH,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 (EH,EXECUTABLE)
<L11>: [LP 3]
  goto <bb 65> (<L5>);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [40.3%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_174 = PHI <.MEM_241(55), .MEM_217(41)>
  # PT = nonlocal escaped { D.59509 } (escaped heap)
  # SR.1329_252 = PHI <_124(55), __res$first_106(41)>
  # DEBUG D#629ptD.0 => {CLOBBER}
  # DEBUG __res$firstD.59358 => D#629ptD.0
  # DEBUG D#630ptD.0 => {CLOBBER}
  # DEBUG __res$secondD.59357 => D#630ptD.0
  # DEBUG __i$_M_nodeD.59299 => SR.1329_252
  # DEBUG thisD.59247 => &D.59302
  # DEBUG D#191ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.59248 => D#191ptD.0
  # DEBUG thisD.59249 => D#191ptD.0
  # DEBUG thisD.59258 => D#191ptD.0
  # VUSE <.MEM_174>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _68 = MEM[(charD.10 * *)&D.59302];
  # DEBUG D#3ptD.0 => D#191ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.59259 => D#191ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541 != _68)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       60 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#191ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.59251 => D#191ptD.0
  # DEBUG __sizeD.59250 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#191ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#191ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.59254 => _68
  # DEBUG __aD.59252 => D#181ptD.0
  # DEBUG __nD.59253 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.59257 => _68
  # DEBUG thisD.59255 => D#177ptD.0
  # DEBUG D.59256 => D#178ptD.0
  # .MEM_253 = VDEF <.MEM_174>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 350, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       60 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_175 = PHI <.MEM_174(60), .MEM_253(61)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG thisD.59260 => D#187ptD.0
  # DEBUG thisD.59261 => D#187ptD.0
  # DEBUG thisD.59262 => D#187ptD.0
  # .MEM_259 = VDEF <.MEM_175>
  D.59302 ={v} {CLOBBER};
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 62, next block 85, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [78.3%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped { D.59509 } (escaped heap)
  # __pos_69 = PHI <__pos_313(32), SR.1329_252(62), __pos_313(35)>
  # .MEM_176 = PHI <.MEM_95(32), .MEM_259(62), .MEM_95(35)>
;;    succ:       85 [100.0%]  (FALLTHRU)

;;   basic block 85, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 63, next block 64, flags: (NEW)
;;    pred:       63 [100.0%]  (FALLTHRU)
  # DEBUG __i$_M_nodeD.59299 => __pos_69
  # DEBUG thisD.55173 => &__iD.59230
  # DEBUG thisD.55174 => __pos_69
  # DEBUG D#634ptD.0 => &MEM[(struct _Rb_tree_nodeD.34408 *)__pos_69]._M_value_fieldD.38976
  # DEBUG __rD.48217 => D#634ptD.0
  # DEBUG D#636ptD.0 => {CLOBBER}
  # DEBUG __i$_M_nodeD.59299 => D#636ptD.0
  # .MEM_12 = VDEF <.MEM_176>
  MEM[(mapped_typeD.34189 &)__pos_69 + 64] = value_11(D);
  # DEBUG D#639ptD.0 => {CLOBBER}
  # DEBUG match$_M_nodeD.55232 => D#639ptD.0
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 85, next block 65, flags: (NEW)
;;    pred:       48 (EH,EXECUTABLE)
<L9>: [LP 6]
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_177 = PHI <.MEM_239(59), .MEM_223(64)>
<L5>:
  # DEBUG thisD.59231 => &D.59302
  # DEBUG D#191ptD.0 => &D.59302.firstD.35901
  # DEBUG thisD.59232 => D#191ptD.0
  # DEBUG thisD.59233 => D#191ptD.0
  # DEBUG thisD.59242 => D#191ptD.0
  # VUSE <.MEM_177>
  # PT = nonlocal escaped null { D.59302 } (escaped)
  _71 = MEM[(charD.10 * *)&D.59302];
  # DEBUG D#3ptD.0 => D#191ptD.0
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.59243 => D#191ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&D.59302].D.11539._M_local_bufD.11541 != _71)
    goto <bb 66>;
  else
    goto <bb 67>;
;;    succ:       66 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => MEM[(struct basic_stringD.2844 *)D#191ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.59235 => D#191ptD.0
  # DEBUG __sizeD.59234 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => D#191ptD.0
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => D#191ptD.0
  # DEBUG D#183ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.59238 => _71
  # DEBUG __aD.59236 => D#181ptD.0
  # DEBUG __nD.59237 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.59241 => _71
  # DEBUG thisD.59239 => D#177ptD.0
  # DEBUG D.59240 => D#178ptD.0
  # .MEM_244 = VDEF <.MEM_177>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZdlPvD.2766 (_71);
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_178 = PHI <.MEM_177(65), .MEM_244(66)>
  # DEBUG D#187ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG thisD.59244 => D#187ptD.0
  # DEBUG thisD.59245 => D#187ptD.0
  # DEBUG thisD.59246 => D#187ptD.0
  # .MEM_250 = VDEF <.MEM_178>
  D.59302 ={v} {CLOBBER};
  resx 9
;;    succ:      

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
<L3>: [LP 2]
  # DEBUG thisD.55217 => &D.35952
  # DEBUG thisD.55218 => &D.35952
  # DEBUG thisD.55227 => &D.35952
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  _3 = MEM[(charD.10 * *)&D.35952];
  # DEBUG D#3ptD.0 => &D.35952
  # DEBUG thisD.46914 => D#3ptD.0
  # DEBUG thisD.55228 => &D.35952
  if (&D.35952.D.11539._M_local_bufD.11541 != _3)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#186ptD.0 => D.35952.D.11539._M_allocated_capacityD.11542
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.55220 => &D.35952
  # DEBUG __sizeD.55219 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#185ptD.0
  # DEBUG D#3ptD.0 => &D.35952
  # DEBUG thisD.48393 => D#3ptD.0
  # DEBUG thisD.48394 => &D.35952
  # DEBUG D#183ptD.0 => &D.35952._M_dataplusD.11519
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0 + 1
  # DEBUG __pD.55223 => _3
  # DEBUG __aD.55221 => D#181ptD.0
  # DEBUG __nD.55222 => D#182ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG __pD.55226 => _3
  # DEBUG thisD.55224 => D#177ptD.0
  # DEBUG D.55225 => D#178ptD.0
  # .MEM_18 = VDEF <.MEM_14>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZdlPvD.2766 (_3);
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       68 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_14(68), .MEM_18(69)>
  # DEBUG D#187ptD.0 => &D.35952._M_dataplusD.11519
  # DEBUG thisD.55229 => D#187ptD.0
  # DEBUG thisD.55230 => D#187ptD.0
  # DEBUG thisD.55231 => D#187ptD.0
  # .MEM_15 = VDEF <.MEM_1>
  D.35952 ={v} {CLOBBER};
  resx 6
;;    succ:      

;;   basic block 71, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 70, next block 84, flags: (NEW, REACHABLE)
;;    pred:       35 [21.7%]  (TRUE_VALUE,EXECUTABLE)
;;                78 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_95(35), .MEM_95(78), .MEM_132(77)>
  # PT = nonlocal escaped 
  # __pos_162 = PHI <__pos_313(35), __pos_313(78), __pos_23(77)>
;;    succ:       84 [100.0%]  (FALLTHRU)

;;   basic block 84, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 71, next block 72, flags: (NEW)
;;    pred:       71 [100.0%]  (FALLTHRU)
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 351, maybe hot
;;   Invalid sum of incoming frequencies 53, should be 351
;;    prev block 84, next block 73, flags: (NEW, REACHABLE)
;;    pred:       36 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.59386 => D#1234ptD.0
  # DEBUG __lastD.59385 => _66
  # DEBUG D#393ptD.0 => &__firstD.59386
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.59388 => D#1234ptD.0
  # DEBUG __lastD.59387 => _66
  # .MEM_205 = VDEF <.MEM_204>
  __dnewD.59363 = pretmp_19;
  if (pretmp_19 > 15)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 45, maybe hot
;;   Invalid sum of incoming frequencies 298, should be 45
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       36 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_260 = VDEF <.MEM_204>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 74, loop depth 0, count 0, freq 21, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 178, should be 21
;;    prev block 73, next block 75, flags: (NEW, REACHABLE)
;;    pred:       49 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 4] # .MEM_235 = VDEF <.MEM_224>
  # USE = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  # CLB = nonlocal null { D.35952 D.59302 D.59363 D.59471 D.59509 } (escaped)
  _ZSt19__throw_logic_errorPKcD.2854 ("basic_string::_M_construct null not valid");
;;    succ:       75 (EH,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW)
;;    pred:       74 (EH,EXECUTABLE)
<L12>: [LP 4]
  goto <bb 57> (<L6>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 164, maybe hot
;;   Invalid sum of incoming frequencies 31, should be 164
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       49 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.59494 => _145
  # DEBUG __lastD.59493 => _147
  # DEBUG D#393ptD.0 => &__firstD.59494
  # DEBUG D.51158 => D#393ptD.0
  # DEBUG __firstD.59496 => _145
  # DEBUG __lastD.59495 => _147
  # .MEM_225 = VDEF <.MEM_224>
  __dnewD.59471 = _146;
  if (_146 > 15)
    goto <bb 50>;
  else
    goto <bb 52>;
;;    succ:       50 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 654, should be 900
;;    prev block 76, next block 1, flags: (NEW, REACHABLE)
;;    pred:       19 [92.9%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __rD.59218 => NULL
  # DEBUG D#230ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49250 => D#230ptD.0
  # DEBUG thisD.55210 => &match.67D.35896
  # DEBUG __itD.55211 => &D.35892
  # DEBUG match$_M_nodeD.55232 => __pos_312
  # DEBUG D#638ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55206 => D#638ptD.0
  # DEBUG D#63ptD.0 => &D#638ptD.0->_M_tD.34405
  # DEBUG thisD.55207 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55204 => &D.35951
  # DEBUG __itD.55205 => &D.35897
  # DEBUG thisD.55201 => &matchD.35778
  # DEBUG __xD.55202 => &D.35951
  # DEBUG D#230ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49250 => D#230ptD.0
  # DEBUG thisD.55210 => &match.67D.35896
  # DEBUG __itD.55211 => &D.35892
  # DEBUG match$_M_nodeD.55232 => __pos_312
  # DEBUG D#638ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.55206 => D#638ptD.0
  # DEBUG D#63ptD.0 => &D#638ptD.0->_M_tD.34405
  # DEBUG thisD.55207 => D#63ptD.0
  # DEBUG thisD.47524 => NULL
  # DEBUG __xD.47523 => __pos_23
  # DEBUG thisD.55204 => &D.35951
  # DEBUG __itD.55205 => &D.35897
  # DEBUG thisD.55201 => &matchD.35778
  # DEBUG __xD.55202 => &D.35951
  # DEBUG D#1197ptD.0 => &this_4(D)->_float_mapD.35250
  # DEBUG thisD.59228 => D#1197ptD.0
  # DEBUG __kD.59229 => field_5(D)
  # DEBUG thisD.59293 => D#1197ptD.0
  # DEBUG __xD.59292 => field_5(D)
  # DEBUG D#1243ptD.0 => &MEM[(struct mapD.34186 *)this_4(D) + 136B]._M_tD.34405
  # DEBUG thisD.59304 => D#1243ptD.0
  # DEBUG __kD.59305 => field_5(D)
  # DEBUG thisD.59306 => D#1243ptD.0
  # DEBUG D#37ptD.0 => D#1243ptD.0
  # DEBUG thisD.49273 => D#37ptD.0
  # DEBUG D#229ptD.0 => D#1243ptD.0
  # DEBUG __xD.59310 => NULL
  # DEBUG __yD.59309 => NULL
  # DEBUG __kD.59308 => field_5(D)
  # DEBUG __yD.59309 => __pos_23
  # DEBUG __xD.59310 => __pos_24
  if (__pos_24 == 0B)
    goto <bb 71>;
  else
    goto <bb 22>;
;;    succ:       71 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}


