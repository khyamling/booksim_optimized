
;; Function virtual int BitRevTrafficPattern::dest(int) (_ZN20BitRevTrafficPattern4destEi, funcdef_no=1772, decl_uid=34022, cgraph_uid=442, symbol_order=443)


Pass statistics:
----------------

virtual int BitRevTrafficPattern::dest(int) (struct BitRevTrafficPatternD.34016 * const thisD.37207, intD.9 sourceD.37205)
{
  intD.9 nD.37211;
  intD.9 resultD.37210;
  intD.9 _10;
  intD.9 _11;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  n_7 = this_6(D)->D.34042.D.33950.D.33923._nodesD.33855;
  if (source_4(D) >= n_7)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG nD.37211 => n_7
  # DEBUG resultD.37210 => 0
  # DEBUG sourceD.37205 => source_4(D)
  if (n_7 <= 1)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#16ptD.0 => this_6(D)
  # DEBUG D#17ptD.0 => source_4(D)
  # DEBUG D#18ptD.0 => D#17ptD.0
  # DEBUG sourceD.51748 => D#18ptD.0
  # DEBUG D#19ptD.0 => D#16ptD.0
  # DEBUG thisD.51749 => D#19ptD.0
  # .MEM_16 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.37209 } (nonlocal, escaped)
  # CLB = nonlocal null { D.37209 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 260, &_ZZN20BitRevTrafficPattern4destEiE19__PRETTY_FUNCTION__D.37209);
;;    succ:      

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # source_19 = PHI <source_4(D)(6), source_13(8)>
  # result_20 = PHI <0(6), result_12(8)>
  # n_23 = PHI <n_7(6), n_14(8)>
  # DEBUG nD.37211 => n_23
  # DEBUG resultD.37210 => result_20
  # DEBUG sourceD.37205 => source_19
  # RANGE [-2147483648, 2147483647] NONZERO 4294967294
  _10 = result_20 << 1;
  # RANGE [-1, 1]
  _11 = source_19 % 2;
  result_12 = _10 | _11;
  # DEBUG resultD.37210 => result_12
  # RANGE [-1073741824, 1073741823]
  source_13 = source_19 >> 1;
  # DEBUG sourceD.37205 => source_13
  # RANGE [1, 1073741823] NONZERO 1073741823
  n_14 = n_23 >> 1;
  # DEBUG nD.37211 => n_14
  # DEBUG nD.37211 => n_14
  # DEBUG resultD.37210 => result_12
  # DEBUG sourceD.37205 => source_13
  if (n_14 <= 1)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # result_21 = PHI <result_12(7)>
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 1, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # result_22 = PHI <result_21(9), 0(4)>
  # VUSE <.MEM_5(D)>
  return result_22;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_6(D)->D.34042.D.33950.D.33923._nodes
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:13, LOOPS:1, CONDITIONS:4, STMTS:30)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_5 bb_3 })
  {
    <bb 2>:
    if (source_4(D) < 0)
      goto <bb 5>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_5(D)>
    n_7 = this_6(D)->D.34042.D.33950.D.33923._nodes;
    if (source_4(D) >= n_7)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_10 bb_6 })
  {
    <bb 4>:
    # DEBUG n => n_7
    # DEBUG result => 0
    # DEBUG source => source_4(D)
    if (n_7 <= 1)
      goto <bb 10>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_3 bb_2 }, succs = {})
  {
    <bb 5>:
    # DEBUG D#16 => this_6(D)
    # DEBUG D#17 => source_4(D)
    # DEBUG D#18 => D#17
    # DEBUG source => D#18
    # DEBUG D#19 => D#16
    # DEBUG this => D#19
    # .MEM_16 = VDEF <.MEM_5(D)>
    __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 260, &__PRETTY_FUNCTION__);

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 })
  {
    <bb 6>:

  }
  bb_9 (preds = {bb_7 }, succs = {bb_11 })
  {
    <bb 9>:
    # result_21 = PHI <result_12(7)>

  }
  bb_11 (preds = {bb_9 }, succs = {bb_10 })
  {
    <bb 11>:

  }
  bb_10 (preds = {bb_11 bb_4 }, succs = {bb_12 })
  {
    <bb 10>:
    # result_22 = PHI <result_21(11), 0(4)>

  }
  bb_12 (preds = {bb_10 }, succs = {bb_1 })
  {
    <bb 12>:
    # VUSE <.MEM_5(D)>
    return result_22;

  }
  loop_1 (header = 7, latch = 8, niter = )
  {
    bb_7 (preds = {bb_6 bb_8 }, succs = {bb_9 bb_8 })
    {
      <bb 7>:
      # source_19 = PHI <source_4(D)(6), source_13(8)>
      # result_20 = PHI <0(6), result_12(8)>
      # n_23 = PHI <n_7(6), n_14(8)>
      # DEBUG n => n_23
      # DEBUG result => result_20
      # DEBUG source => source_19
      _10 = result_20 << 1;
      _11 = source_19 % 2;
      result_12 = _10 | _11;
      # DEBUG result => result_12
      source_13 = source_19 >> 1;
      # DEBUG source => source_13
      n_14 = n_23 >> 1;
      # DEBUG n => n_14
      # DEBUG n => n_14
      # DEBUG result => result_12
      # DEBUG source => source_13
      if (n_14 <= 1)
        goto <bb 9>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_7 })
    {
      <bb 8>:
      goto <bb 7>;

    }
  }
}

Pass statistics:
----------------

virtual int BitRevTrafficPattern::dest(int) (struct BitRevTrafficPatternD.34016 * const thisD.37207, intD.9 sourceD.37205)
{
  intD.9 nD.37211;
  intD.9 resultD.37210;
  intD.9 _10;
  intD.9 _11;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  n_7 = this_6(D)->D.34042.D.33950.D.33923._nodesD.33855;
  if (source_4(D) >= n_7)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG nD.37211 => n_7
  # DEBUG resultD.37210 => 0
  # DEBUG sourceD.37205 => source_4(D)
  if (n_7 <= 1)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#16ptD.0 => this_6(D)
  # DEBUG D#17ptD.0 => source_4(D)
  # DEBUG D#18ptD.0 => D#17ptD.0
  # DEBUG sourceD.51748 => D#18ptD.0
  # DEBUG D#19ptD.0 => D#16ptD.0
  # DEBUG thisD.51749 => D#19ptD.0
  # .MEM_16 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.37209 } (nonlocal, escaped)
  # CLB = nonlocal null { D.37209 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 260, &_ZZN20BitRevTrafficPattern4destEiE19__PRETTY_FUNCTION__D.37209);
;;    succ:      

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # source_19 = PHI <source_4(D)(6), source_13(8)>
  # result_20 = PHI <0(6), result_12(8)>
  # n_23 = PHI <n_7(6), n_14(8)>
  # DEBUG nD.37211 => n_23
  # DEBUG resultD.37210 => result_20
  # DEBUG sourceD.37205 => source_19
  # RANGE [-2147483648, 2147483647] NONZERO 4294967294
  _10 = result_20 << 1;
  # RANGE [-1, 1]
  _11 = source_19 % 2;
  result_12 = _10 | _11;
  # DEBUG resultD.37210 => result_12
  # RANGE [-1073741824, 1073741823]
  source_13 = source_19 >> 1;
  # DEBUG sourceD.37205 => source_13
  # RANGE [1, 1073741823] NONZERO 1073741823
  n_14 = n_23 >> 1;
  # DEBUG nD.37211 => n_14
  # DEBUG nD.37211 => n_14
  # DEBUG resultD.37210 => result_12
  # DEBUG sourceD.37205 => source_13
  if (n_14 <= 1)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 11, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # result_21 = PHI <result_12(7)>
;;    succ:       11 [100.0%]  (FALLTHRU)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 9, next block 10, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 12, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # result_22 = PHI <result_21(11), 0(4)>
;;    succ:       12 [100.0%]  (FALLTHRU)

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 1, flags: (NEW)
;;    pred:       10 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_5(D)>
  return result_22;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual int TornadoTrafficPattern::dest(int) (_ZN21TornadoTrafficPattern4destEi, funcdef_no=1787, decl_uid=34127, cgraph_uid=457, symbol_order=458)


Pass statistics:
----------------

virtual int TornadoTrafficPattern::dest(int) (struct TornadoTrafficPatternD.34118 * const thisD.37255, intD.9 sourceD.37253)
{
  intD.9 nD.37260;
  intD.9 resultD.37259;
  intD.9 offsetD.37258;
  intD.9 _7;
  intD.9 _9;
  intD.9 _13;
  intD.9 _20;
  intD.9 _21;
  intD.9 _22;
  intD.9 _31;
  intD.9 pretmp_35;
  intD.9 pretmp_37;
  intD.9 pretmp_39;
  intD.9 pretmp_40;
  intD.9 pretmp_41;
  intD.9 pretmp_42;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  _7 = this_6(D)->D.34153.D.34111.D.33923._nodesD.33855;
  if (source_4(D) >= _7)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG nD.37260 => 0
  # DEBUG resultD.37259 => 0
  # DEBUG offsetD.37258 => 1
  # VUSE <.MEM_5(D)>
  _31 = this_6(D)->D.34153._nD.34079;
  if (_31 <= 0)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#24ptD.0 => this_6(D)
  # DEBUG D#25ptD.0 => source_4(D)
  # DEBUG D#26ptD.0 => D#25ptD.0
  # DEBUG sourceD.51763 => D#26ptD.0
  # DEBUG D#27ptD.0 => D#24ptD.0
  # DEBUG thisD.51764 => D#27ptD.0
  # .MEM_26 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.37257 } (nonlocal, escaped)
  # CLB = nonlocal null { D.37257 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 297, &_ZZN21TornadoTrafficPattern4destEiE19__PRETTY_FUNCTION__D.37257);
;;    succ:      

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  pretmp_35 = this_6(D)->D.34153._xrD.34080;
  # VUSE <.MEM_5(D)>
  pretmp_37 = this_6(D)->D.34153._kD.34078;
  pretmp_39 = pretmp_35 * pretmp_37;
  pretmp_40 = pretmp_39 + 1;
  pretmp_41 = pretmp_40 / 2;
  pretmp_42 = pretmp_41 + -1;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # offset_30 = PHI <1(6), offset_24(9)>
  # result_32 = PHI <0(6), result_23(9)>
  # n_34 = PHI <0(6), n_25(9)>
  # DEBUG nD.37260 => n_34
  # DEBUG resultD.37259 => result_32
  # DEBUG offsetD.37258 => offset_30
  _9 = source_4(D) / offset_30;
  _13 = _9 % pretmp_39;
  _20 = _13 + pretmp_42;
  _21 = _20 % pretmp_39;
  _22 = _21 * offset_30;
  result_23 = _22 + result_32;
  # DEBUG resultD.37259 => result_23
  offset_24 = offset_30 * pretmp_39;
  # DEBUG offsetD.37258 => offset_24
  n_25 = n_34 + 1;
  # DEBUG nD.37260 => n_25
  # DEBUG nD.37260 => n_25
  # DEBUG resultD.37259 => result_23
  # DEBUG offsetD.37258 => offset_24
  if (n_25 >= _31)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # result_50 = PHI <result_23(7)>
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 1, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # result_33 = PHI <result_50(8), 0(4)>
  # VUSE <.MEM_5(D)>
  return result_33;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_6(D)->D.34153.D.34111.D.33923._nodes
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.34153._n
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 128
	Access function 1: 0
Creating dr for this_6(D)->D.34153._xr
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 20
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 160
	Access function 1: 0
Creating dr for this_6(D)->D.34153._k
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 96
	Access function 1: 0
Analyzing # of iterations of loop 1
  exit condition [1, + , 1](no_overflow) < _31
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _31 + 4294967295, bounded by 2147483646
Analyzing # of iterations of loop 1
  exit condition [1, + , 1](no_overflow) < _31
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _31 + 4294967295, bounded by 2147483646

Before limit_scops SCoP statistics (BBS:7, LOOPS:1, CONDITIONS:2, STMTS:30)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 1

SCoP statistics (BBS:3, LOOPS:1, CONDITIONS:1, STMTS:18)

SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Global statistics (BBS:12, LOOPS:1, CONDITIONS:4, STMTS:40)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
Creating dr for phi_out_of_ssa.786[0]
analyze_innermost: success.
	base_address: &phi_out_of_ssa.786
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: phi_out_of_ssa.786
	Access function 0: 0
Creating dr for phi_out_of_ssa.786[0]
analyze_innermost: success.
	base_address: &phi_out_of_ssa.786
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: phi_out_of_ssa.786
	Access function 0: 0
Creating dr for phi_out_of_ssa.787[0]
analyze_innermost: success.
	base_address: &phi_out_of_ssa.787
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: phi_out_of_ssa.787
	Access function 0: 0
Creating dr for phi_out_of_ssa.787[0]
analyze_innermost: success.
	base_address: &phi_out_of_ssa.787
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: phi_out_of_ssa.787
	Access function 0: 0
Creating dr for Close_Phi.788[0]
analyze_innermost: success.
	base_address: &Close_Phi.788
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: Close_Phi.788
	Access function 0: 0
Creating dr for Close_Phi.788[0]
analyze_innermost: success.
	base_address: &Close_Phi.788
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: Close_Phi.788
	Access function 0: 0

Updating SSA:
creating PHI node in block #7 for .MEM
creating PHI node in block #10 for .MEM
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Registering new PHI nodes in block #3
Updating SSA information for statement _7 = this_6(D)->D.34153.D.34111.D.33923._nodes;
Registering new PHI nodes in block #4
Updating SSA information for statement _31 = this_6(D)->D.34153._n;
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_35 = this_6(D)->D.34153._xr;
Updating SSA information for statement pretmp_37 = this_6(D)->D.34153._k;
Updating SSA information for statement phi_out_of_ssa.786[0] = 1;
Updating SSA information for statement phi_out_of_ssa.787[0] = 0;
Registering new PHI nodes in block #7
Updating SSA information for statement result_32 = phi_out_of_ssa.787[0];
Updating SSA information for statement offset_30 = phi_out_of_ssa.786[0];
Updating SSA information for statement Close_Phi.788[0] = result_23;
Updating SSA information for statement phi_out_of_ssa.787[0] = result_23;
Updating SSA information for statement phi_out_of_ssa.786[0] = offset_24;
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement result_50 = Close_Phi.788[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10
Updating SSA information for statement return result_33;
Registering new PHI nodes in block #5
Updating SSA information for statement __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 297, &__PRETTY_FUNCTION__);

DFA Statistics for virtual int TornadoTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             45        360b
DEF operands                             19        152b
VUSE operands                            14        112b
VDEF operands                             6         48b
PHI nodes                                 4        416b
PHI arguments                             8        384b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1472b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


Symbols to be put in SSA form
{ D.44423 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11


Creating dr for Cross_BB_scalar_dependence.789[0]
analyze_innermost: success.
	base_address: &Cross_BB_scalar_dependence.789
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: Cross_BB_scalar_dependence.789
	Access function 0: 0

Updating SSA:
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Registering new PHI nodes in block #3
Updating SSA information for statement _7 = this_6(D)->D.34153.D.34111.D.33923._nodes;
Registering new PHI nodes in block #4
Updating SSA information for statement _31 = this_6(D)->D.34153._n;
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_35 = this_6(D)->D.34153._xr;
Updating SSA information for statement pretmp_37 = this_6(D)->D.34153._k;
Updating SSA information for statement phi_out_of_ssa.786[0] = 1;
Updating SSA information for statement phi_out_of_ssa.787[0] = 0;
Registering new PHI nodes in block #7
Updating SSA information for statement result_32 = phi_out_of_ssa.787[0];
Updating SSA information for statement offset_30 = phi_out_of_ssa.786[0];
Updating SSA information for statement Close_Phi.788[0] = result_23;
Updating SSA information for statement phi_out_of_ssa.787[0] = result_23;
Updating SSA information for statement phi_out_of_ssa.786[0] = offset_24;
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement result_50 = Close_Phi.788[0];
Updating SSA information for statement Cross_BB_scalar_dependence.789[0] = result_50;
Registering new PHI nodes in block #12
Updating SSA information for statement result_36 = Cross_BB_scalar_dependence.789[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10
Updating SSA information for statement return result_33;
Registering new PHI nodes in block #5
Updating SSA information for statement __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 297, &__PRETTY_FUNCTION__);

DFA Statistics for virtual int TornadoTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             47        376b
DEF operands                             21        168b
VUSE operands                            16        128b
VDEF operands                             7         56b
PHI nodes                                 4        416b
PHI arguments                             8        384b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1528b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


Symbols to be put in SSA form
{ D.44423 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12



ISL AST generated by ISL: 
{
  for (int c1 = 0; c1 < P_31; c1 += 1)
    S_7(c1);
  S_8();
}


Removing basic block 17
basic block 17, loop depth 0
 pred:      
goto <bb 15>;
 succ:       15



Updating SSA:
Registering new PHI nodes in block #4
Registering new PHI nodes in block #6
Registering new PHI nodes in block #14
Registering new PHI nodes in block #16
Registering new PHI nodes in block #7
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement Cross_BB_scalar_dependence.789[0] = result_50;
Registering new PHI nodes in block #15
Registering new PHI nodes in block #13
Registering new PHI nodes in block #12
Updating SSA information for statement result_36 = Cross_BB_scalar_dependence.789[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10

DFA Statistics for virtual int TornadoTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             47        376b
DEF operands                             21        168b
VUSE operands                            16        128b
VDEF operands                             7         56b
PHI nodes                                 5        520b
PHI arguments                            10        480b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1728b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_10 -> { .MEM_38 }
Incremental SSA update started at block: 4
Number of blocks in CFG: 18
Number of blocks to update: 6 ( 33%)
Affected blocks: 8 10 11 12 15 16


Applying pattern match.pd:491, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
gimple_simplified to _55 = pretmp_42 + _54;
gimple_simplified to _57 = offset_52 * _56;
gimple_simplified to result_58 = result_51 + _57;
gimple_simplified to offset_61 = pretmp_39 * offset_52;

Updating SSA:
creating PHI node in block #19 for .MEM
creating PHI node in block #22 for .MEM
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Registering new PHI nodes in block #3
Updating SSA information for statement _7 = this_6(D)->D.34153.D.34111.D.33923._nodes;
Registering new PHI nodes in block #4
Updating SSA information for statement _31 = this_6(D)->D.34153._n;
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_35 = this_6(D)->D.34153._xr;
Updating SSA information for statement pretmp_37 = this_6(D)->D.34153._k;
Updating SSA information for statement phi_out_of_ssa.786[0] = 1;
Updating SSA information for statement phi_out_of_ssa.787[0] = 0;
Registering new PHI nodes in block #14
Registering new PHI nodes in block #18
Registering new PHI nodes in block #24
Registering new PHI nodes in block #22
Registering new PHI nodes in block #27
Updating SSA information for statement result_51 = phi_out_of_ssa.787[0];
Updating SSA information for statement offset_52 = phi_out_of_ssa.786[0];
Updating SSA information for statement _53 = source_4(D) / offset_52;
Updating SSA information for statement _54 = _53 % pretmp_39;
Updating SSA information for statement _55 = pretmp_42 + _54;
Updating SSA information for statement _56 = _55 % pretmp_39;
Updating SSA information for statement _57 = offset_52 * _56;
Updating SSA information for statement result_58 = result_51 + _57;
Updating SSA information for statement Close_Phi.788[0] = result_58;
Updating SSA information for statement phi_out_of_ssa.787[0] = result_58;
Updating SSA information for statement offset_61 = pretmp_39 * offset_52;
Updating SSA information for statement phi_out_of_ssa.786[0] = offset_61;
Registering new PHI nodes in block #25
Registering new PHI nodes in block #23
Registering new PHI nodes in block #26
Registering new PHI nodes in block #20
Registering new PHI nodes in block #21
Registering new PHI nodes in block #19
Registering new PHI nodes in block #16
Registering new PHI nodes in block #7
Updating SSA information for statement result_32 = phi_out_of_ssa.787[0];
Updating SSA information for statement offset_30 = phi_out_of_ssa.786[0];
Updating SSA information for statement # DEBUG result => result_32
Updating SSA information for statement # DEBUG offset => offset_30
Updating SSA information for statement _9 = source_4(D) / offset_30;
Updating SSA information for statement _13 = _9 % pretmp_39;
Updating SSA information for statement _20 = _13 + pretmp_42;
Updating SSA information for statement _21 = _20 % pretmp_39;
Updating SSA information for statement _22 = _21 * offset_30;
Updating SSA information for statement result_23 = _22 + result_32;
Updating SSA information for statement Close_Phi.788[0] = result_23;
Updating SSA information for statement phi_out_of_ssa.787[0] = result_23;
Updating SSA information for statement # DEBUG result => result_23
Updating SSA information for statement offset_24 = offset_30 * pretmp_39;
Updating SSA information for statement phi_out_of_ssa.786[0] = offset_24;
Updating SSA information for statement # DEBUG offset => offset_24
Updating SSA information for statement # DEBUG result => result_23
Updating SSA information for statement # DEBUG offset => offset_24
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement result_50 = Close_Phi.788[0];
Updating SSA information for statement Cross_BB_scalar_dependence.789[0] = result_50;
Registering new PHI nodes in block #15
Registering new PHI nodes in block #13
Registering new PHI nodes in block #12
Updating SSA information for statement result_36 = Cross_BB_scalar_dependence.789[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10
Updating SSA information for statement return result_33;
Registering new PHI nodes in block #5
Updating SSA information for statement __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 297, &__PRETTY_FUNCTION__);

DFA Statistics for virtual int TornadoTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             71        568b
DEF operands                             34        272b
VUSE operands                            21        168b
VDEF operands                            10         80b
PHI nodes                                 8        832b
PHI arguments                            16        768b
---------------------------------------------------------
Total memory used by DFA/SSA data                 2688b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

result_51 -> { result_32 }
offset_52 -> { offset_30 }
_53 -> { _9 }
_54 -> { _13 }
_55 -> { _20 }
_56 -> { _21 }
_57 -> { _22 }
result_58 -> { result_23 }
.MEM_59 -> { .MEM_45 }
.MEM_60 -> { .MEM_44 }
offset_61 -> { offset_24 }
.MEM_62 -> { .MEM_29 }

Symbols to be put in SSA form
{ D.44423 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 28
Number of blocks to update: 26 ( 93%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25 26 27



Updating SSA:
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Registering new PHI nodes in block #3
Updating SSA information for statement _7 = this_6(D)->D.34153.D.34111.D.33923._nodes;
Registering new PHI nodes in block #4
Updating SSA information for statement _31 = this_6(D)->D.34153._n;
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_35 = this_6(D)->D.34153._xr;
Updating SSA information for statement pretmp_37 = this_6(D)->D.34153._k;
Updating SSA information for statement phi_out_of_ssa.786[0] = 1;
Updating SSA information for statement phi_out_of_ssa.787[0] = 0;
Registering new PHI nodes in block #14
Registering new PHI nodes in block #18
Registering new PHI nodes in block #24
Registering new PHI nodes in block #22
Registering new PHI nodes in block #27
Updating SSA information for statement result_51 = phi_out_of_ssa.787[0];
Updating SSA information for statement offset_52 = phi_out_of_ssa.786[0];
Updating SSA information for statement Close_Phi.788[0] = result_58;
Updating SSA information for statement phi_out_of_ssa.787[0] = result_58;
Updating SSA information for statement phi_out_of_ssa.786[0] = offset_61;
Registering new PHI nodes in block #25
Registering new PHI nodes in block #23
Registering new PHI nodes in block #26
Registering new PHI nodes in block #20
Registering new PHI nodes in block #21
Registering new PHI nodes in block #19
Registering new PHI nodes in block #28
Updating SSA information for statement result_65 = Close_Phi.788[0];
Updating SSA information for statement Cross_BB_scalar_dependence.789[0] = result_65;
Registering new PHI nodes in block #16
Registering new PHI nodes in block #7
Updating SSA information for statement result_32 = phi_out_of_ssa.787[0];
Updating SSA information for statement offset_30 = phi_out_of_ssa.786[0];
Updating SSA information for statement Close_Phi.788[0] = result_23;
Updating SSA information for statement phi_out_of_ssa.787[0] = result_23;
Updating SSA information for statement phi_out_of_ssa.786[0] = offset_24;
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement result_50 = Close_Phi.788[0];
Updating SSA information for statement Cross_BB_scalar_dependence.789[0] = result_50;
Registering new PHI nodes in block #15
Registering new PHI nodes in block #13
Registering new PHI nodes in block #12
Updating SSA information for statement result_36 = Cross_BB_scalar_dependence.789[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10
Updating SSA information for statement return result_33;
Registering new PHI nodes in block #5
Updating SSA information for statement __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 297, &__PRETTY_FUNCTION__);

DFA Statistics for virtual int TornadoTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             72        576b
DEF operands                             35        280b
VUSE operands                            23        184b
VDEF operands                            11         88b
PHI nodes                                 8        832b
PHI arguments                            16        768b
---------------------------------------------------------
Total memory used by DFA/SSA data                 2728b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

result_65 -> { result_50 }
.MEM_66 -> { .MEM_38 }

Symbols to be put in SSA form
{ D.44423 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 29
Number of blocks to update: 27 ( 93%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25 26 27 28



0 loops carried no dependency.
Merging blocks 6 and 14
Removing basic block 11
basic block 11, loop depth 0
 pred:      
goto <bb 10>;
 succ:       10


Removing basic block 13
basic block 13, loop depth 0
 pred:      
goto <bb 12>;
 succ:       12


Merging blocks 15 and 12
Removing basic block 16
basic block 16, loop depth 0
 pred:      
 succ:       15


Merging blocks 19 and 28
Removing basic block 20
basic block 20, loop depth 0
 pred:      
 succ:       19


Removing basic block 21
basic block 21, loop depth 0
 pred:      
goto <bb 19>;
 succ:       19


Merging blocks 22 and 27
Removing basic block 26
basic block 26, loop depth 0
 pred:      
 succ:       19


Removing basic block 8
basic block 8, loop depth 0
 pred:       7
result_50 = Close_Phi.788[0];
Cross_BB_scalar_dependence.789[0] = result_50;
goto <bb 15>;
 succ:       15


Removing basic block 9
basic block 9, loop depth 1
 pred:       7
goto <bb 7>;
 succ:       7


Removing basic block 7
basic block 7, loop depth 1
 pred:       6
# n_34 = PHI <0(6)>
result_32 = phi_out_of_ssa.787[0];
offset_30 = phi_out_of_ssa.786[0];
# DEBUG n => n_34
# DEBUG result => result_32
# DEBUG offset => offset_30
_9 = source_4(D) / offset_30;
_13 = _9 % pretmp_39;
_20 = _13 + pretmp_42;
_21 = _20 % pretmp_39;
_22 = _21 * offset_30;
result_23 = _22 + result_32;
Close_Phi.788[0] = result_23;
phi_out_of_ssa.787[0] = result_23;
# DEBUG result => result_23
offset_24 = offset_30 * pretmp_39;
phi_out_of_ssa.786[0] = offset_24;
# DEBUG offset => offset_24
n_25 = n_34 + 1;
# DEBUG n => n_25
# DEBUG n => n_25
# DEBUG result => result_23
# DEBUG offset => offset_24
if (n_25 >= _31)
 succ:      


Merging blocks 6 and 18
Merging blocks 19 and 15
Merging blocks 22 and 25
fix_loop_structure: removing loop 1
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) _31 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if _31 <= 0
    # of iterations (unsigned long) ((signed long) _31 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) _31 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if _31 <= 0
    # of iterations (unsigned long) ((signed long) _31 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) _31 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if _31 <= 0
    # of iterations (unsigned long) ((signed long) _31 + -1), bounded by 9223372036854775806
Statement (exit)if (graphite_IV.790_18 < _17)
 is executed at most (unsigned long) ((signed long) _31 + -1) (bounded by 9223372036854775806) + 1 times in loop 2.
Induction variable (signed long) 1 + 1 * iteration does not wrap in statement graphite_IV.790_19 = graphite_IV.790_18 + 1;
 in loop 2.
Statement graphite_IV.790_19 = graphite_IV.790_18 + 1;
 is executed at most 9223372036854775806 (bounded by 9223372036854775806) + 1 times in loop 2.
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  opcode values positive (on trees) heuristics (ignored): 27.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
Predictions for bb 3
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  noreturn call heuristics: 0.0%
Predictions for bb 4
  DS theory heuristics: 19.1%
  first match heuristics (ignored): 27.0%
  combined heuristics: 19.1%
  opcode values positive (on trees) heuristics: 27.0%
  early return (on trees) heuristics: 39.0%
0 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics (ignored): 91.0%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  loop exit heuristics: 91.0%
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities
1 edges in bb 11 predicted to even probabilities
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_5 bb_3 })
  {
    <bb 2>:
    if (source_4(D) < 0)
      goto <bb 5>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_5(D)>
    _7 = this_6(D)->D.34153.D.34111.D.33923._nodes;
    if (source_4(D) >= _7)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_11 bb_6 })
  {
    <bb 4>:
    # DEBUG n => 0
    # DEBUG result => 0
    # DEBUG offset => 1
    # VUSE <.MEM_5(D)>
    _31 = this_6(D)->D.34153._n;
    if (_31 <= 0)
      goto <bb 11>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_3 bb_2 }, succs = {})
  {
    <bb 5>:
    # DEBUG D#24 => this_6(D)
    # DEBUG D#25 => source_4(D)
    # DEBUG D#26 => D#25
    # DEBUG source => D#26
    # DEBUG D#27 => D#24
    # DEBUG this => D#27
    # .MEM_26 = VDEF <.MEM_5(D)>
    __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 297, &__PRETTY_FUNCTION__);

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_10 })
  {
    <bb 6>:
    # VUSE <.MEM_5(D)>
    pretmp_35 = this_6(D)->D.34153._xr;
    # VUSE <.MEM_5(D)>
    pretmp_37 = this_6(D)->D.34153._k;
    pretmp_39 = pretmp_35 * pretmp_37;
    pretmp_40 = pretmp_39 + 1;
    pretmp_41 = pretmp_40 / 2;
    pretmp_42 = pretmp_41 + -1;
    # .MEM_47 = VDEF <.MEM_5(D)>
    phi_out_of_ssa.786[0] = 1;
    # .MEM_46 = VDEF <.MEM_47>
    phi_out_of_ssa.787[0] = 0;
    _11 = _31 > 0;
    if (_11 != 0)
      goto <bb 7>;
    else
      goto <bb 10>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _12 = (signed long) _31;
    _17 = _12 + -1;

  }
  bb_10 (preds = {bb_8 bb_6 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_63 = PHI <.MEM_62(8), .MEM_46(6)>
    # VUSE <.MEM_63>
    result_65 = Close_Phi.788[0];
    # .MEM_66 = VDEF <.MEM_63>
    Cross_BB_scalar_dependence.789[0] = result_65;
    # VUSE <.MEM_66>
    result_36 = Cross_BB_scalar_dependence.789[0];
    _43 = result_36;

  }
  bb_11 (preds = {bb_10 bb_4 }, succs = {bb_1 })
  {
    <bb 11>:
    # result_33 = PHI <_43(10), 0(4)>
    # .MEM_48 = PHI <.MEM_66(10), .MEM_5(D)(4)>
    # VUSE <.MEM_48>
    return result_33;

  }
  loop_2 (header = 8, latch = 9, niter = (unsigned long) ((signed long) _31 + -1), upper_bound = 9223372036854775806)
  {
    bb_8 (preds = {bb_7 bb_9 }, succs = {bb_9 bb_10 })
    {
      <bb 8>:
      # graphite_IV.790_18 = PHI <0(7), graphite_IV.790_19(9)>
      # .MEM_64 = PHI <.MEM_46(7), .MEM_62(9)>
      # VUSE <.MEM_64>
      result_51 = phi_out_of_ssa.787[0];
      # VUSE <.MEM_64>
      offset_52 = phi_out_of_ssa.786[0];
      # DEBUG n => NULL
      # DEBUG result => NULL
      # DEBUG offset => NULL
      _53 = source_4(D) / offset_52;
      _54 = _53 % pretmp_39;
      _55 = pretmp_42 + _54;
      _56 = _55 % pretmp_39;
      _57 = offset_52 * _56;
      result_58 = result_51 + _57;
      # .MEM_59 = VDEF <.MEM_64>
      Close_Phi.788[0] = result_58;
      # .MEM_60 = VDEF <.MEM_59>
      phi_out_of_ssa.787[0] = result_58;
      # DEBUG result => NULL
      offset_61 = pretmp_39 * offset_52;
      # .MEM_62 = VDEF <.MEM_60>
      phi_out_of_ssa.786[0] = offset_61;
      # DEBUG offset => NULL
      # DEBUG n => NULL
      # DEBUG n => NULL
      # DEBUG result => NULL
      # DEBUG offset => NULL
      graphite_IV.790_19 = graphite_IV.790_18 + 1;
      if (graphite_IV.790_18 < _17)
        goto <bb 9>;
      else
        goto <bb 10>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_8 })
    {
      <bb 9>:
      goto <bb 8>;

    }
  }
}

Pass statistics:
----------------

virtual int TornadoTrafficPattern::dest(int) (struct TornadoTrafficPatternD.34118 * const thisD.37255, intD.9 sourceD.37253)
{
  signed long graphite_IV.790D.51782;
  intD.9 Cross_BB_scalar_dependence.789D.51781[1];
  intD.9 D.51780;
  intD.9 D.51779;
  intD.9 D.51778;
  intD.9 D.51777;
  intD.9 D.51776;
  intD.9 D.51775;
  intD.9 D.51774;
  intD.9 D.51773;
  intD.9 D.51772;
  intD.9 D.51771;
  intD.9 Close_Phi.788D.51770[1];
  intD.9 phi_out_of_ssa.787D.51769[1];
  intD.9 phi_out_of_ssa.786D.51768[1];
  intD.9 nD.37260;
  intD.9 resultD.37259;
  intD.9 offsetD.37258;
  intD.9 _7;
  boolD.2757 _11;
  signed long _12;
  signed long _17;
  intD.9 _31;
  intD.9 pretmp_35;
  intD.9 pretmp_37;
  intD.9 pretmp_39;
  intD.9 pretmp_40;
  intD.9 pretmp_41;
  intD.9 pretmp_42;
  intD.9 _53;
  intD.9 _54;
  intD.9 _55;
  intD.9 _56;
  intD.9 _57;

;;   basic block 2, loop depth 0, count 0, freq 2227, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2226, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  _7 = this_6(D)->D.34153.D.34111.D.33923._nodesD.33855;
  if (source_4(D) >= _7)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2226, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG nD.37260 => 0
  # DEBUG resultD.37259 => 0
  # DEBUG offsetD.37258 => 1
  # VUSE <.MEM_5(D)>
  _31 = this_6(D)->D.34153._nD.34079;
  if (_31 <= 0)
    goto <bb 11>;
  else
    goto <bb 6>;
;;    succ:       11 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#24ptD.0 => this_6(D)
  # DEBUG D#25ptD.0 => source_4(D)
  # DEBUG D#26ptD.0 => D#25ptD.0
  # DEBUG sourceD.51763 => D#26ptD.0
  # DEBUG D#27ptD.0 => D#24ptD.0
  # DEBUG thisD.51764 => D#27ptD.0
  # .MEM_26 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.37257 } (nonlocal, escaped)
  # CLB = nonlocal null { D.37257 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 297, &_ZZN21TornadoTrafficPattern4destEiE19__PRETTY_FUNCTION__D.37257);
;;    succ:      

;;   basic block 6, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  pretmp_35 = this_6(D)->D.34153._xrD.34080;
  # VUSE <.MEM_5(D)>
  pretmp_37 = this_6(D)->D.34153._kD.34078;
  pretmp_39 = pretmp_35 * pretmp_37;
  pretmp_40 = pretmp_39 + 1;
  pretmp_41 = pretmp_40 / 2;
  pretmp_42 = pretmp_41 + -1;
  # .MEM_47 = VDEF <.MEM_5(D)>
  phi_out_of_ssa.786D.51768[0] = 1;
  # .MEM_46 = VDEF <.MEM_47>
  phi_out_of_ssa.787D.51769[0] = 0;
  _11 = _31 > 0;
  if (_11 != 0)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [50.0%]  (TRUE_VALUE)
;;                10 [50.0%]  (FALSE_VALUE)

;;   basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [50.0%]  (TRUE_VALUE)
  _12 = (signed long) _31;
  _17 = _12 + -1;
;;    succ:       8 [100.0%]  (FALLTHRU)

;;   basic block 8, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
;;                9 [100.0%]  (FALLTHRU,DFS_BACK)
  # graphite_IV.790_18 = PHI <0(7), graphite_IV.790_19(9)>
  # .MEM_64 = PHI <.MEM_46(7), .MEM_62(9)>
  # VUSE <.MEM_64>
  result_51 = phi_out_of_ssa.787D.51769[0];
  # VUSE <.MEM_64>
  offset_52 = phi_out_of_ssa.786D.51768[0];
  # DEBUG nD.37260 => NULL
  # DEBUG resultD.37259 => NULL
  # DEBUG offsetD.37258 => NULL
  _53 = source_4(D) / offset_52;
  _54 = _53 % pretmp_39;
  _55 = pretmp_42 + _54;
  _56 = _55 % pretmp_39;
  _57 = offset_52 * _56;
  result_58 = result_51 + _57;
  # .MEM_59 = VDEF <.MEM_64>
  Close_Phi.788D.51770[0] = result_58;
  # .MEM_60 = VDEF <.MEM_59>
  phi_out_of_ssa.787D.51769[0] = result_58;
  # DEBUG resultD.37259 => NULL
  offset_61 = pretmp_39 * offset_52;
  # .MEM_62 = VDEF <.MEM_60>
  phi_out_of_ssa.786D.51768[0] = offset_61;
  # DEBUG offsetD.37258 => NULL
  # DEBUG nD.37260 => NULL
  # DEBUG nD.37260 => NULL
  # DEBUG resultD.37259 => NULL
  # DEBUG offsetD.37258 => NULL
  graphite_IV.790_19 = graphite_IV.790_18 + 1;
  if (graphite_IV.790_18 < _17)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [91.0%]  (TRUE_VALUE)
;;                10 [9.0%]  (FALSE_VALUE,LOOP_EXIT)

;;   basic block 9, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [91.0%]  (TRUE_VALUE)
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,DFS_BACK)

;;   basic block 10, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       8 [9.0%]  (FALSE_VALUE,LOOP_EXIT)
;;                6 [50.0%]  (FALSE_VALUE)
  # .MEM_63 = PHI <.MEM_62(8), .MEM_46(6)>
  # VUSE <.MEM_63>
  result_65 = Close_Phi.788D.51770[0];
  # .MEM_66 = VDEF <.MEM_63>
  Cross_BB_scalar_dependence.789D.51781[0] = result_65;
  # VUSE <.MEM_66>
  result_36 = Cross_BB_scalar_dependence.789D.51781[0];
  _43 = result_36;
;;    succ:       11 [100.0%]  (FALLTHRU)

;;   basic block 11, loop depth 0, count 0, freq 2226, maybe hot
;;    prev block 10, next block 1, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU)
;;                4 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # result_33 = PHI <_43(10), 0(4)>
  # .MEM_48 = PHI <.MEM_66(10), .MEM_5(D)(4)>
  # VUSE <.MEM_48>
  return result_33;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual int NeighborTrafficPattern::dest(int) (_ZN22NeighborTrafficPattern4destEi, funcdef_no=1791, decl_uid=34166, cgraph_uid=461, symbol_order=462)


Pass statistics:
----------------

virtual int NeighborTrafficPattern::dest(int) (struct NeighborTrafficPatternD.34157 * const thisD.37274, intD.9 sourceD.37272)
{
  intD.9 nD.37279;
  intD.9 resultD.37278;
  intD.9 offsetD.37277;
  intD.9 _7;
  intD.9 _9;
  intD.9 _13;
  intD.9 _14;
  intD.9 _18;
  intD.9 _19;
  intD.9 _28;
  intD.9 pretmp_32;
  intD.9 pretmp_34;
  intD.9 pretmp_36;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  _7 = this_6(D)->D.34192.D.34111.D.33923._nodesD.33855;
  if (source_4(D) >= _7)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG nD.37279 => 0
  # DEBUG resultD.37278 => 0
  # DEBUG offsetD.37277 => 1
  # VUSE <.MEM_5(D)>
  _28 = this_6(D)->D.34192._nD.34079;
  if (_28 <= 0)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#28ptD.0 => this_6(D)
  # DEBUG D#29ptD.0 => source_4(D)
  # DEBUG D#30ptD.0 => D#29ptD.0
  # DEBUG sourceD.51800 => D#30ptD.0
  # DEBUG D#31ptD.0 => D#28ptD.0
  # DEBUG thisD.51801 => D#31ptD.0
  # .MEM_23 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.37276 } (nonlocal, escaped)
  # CLB = nonlocal null { D.37276 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 318, &_ZZN22NeighborTrafficPattern4destEiE19__PRETTY_FUNCTION__D.37276);
;;    succ:      

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  pretmp_32 = this_6(D)->D.34192._xrD.34080;
  # VUSE <.MEM_5(D)>
  pretmp_34 = this_6(D)->D.34192._kD.34078;
  pretmp_36 = pretmp_32 * pretmp_34;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # offset_27 = PHI <1(6), offset_21(9)>
  # result_29 = PHI <0(6), result_20(9)>
  # n_31 = PHI <0(6), n_22(9)>
  # DEBUG nD.37279 => n_31
  # DEBUG resultD.37278 => result_29
  # DEBUG offsetD.37277 => offset_27
  _9 = source_4(D) / offset_27;
  _13 = _9 % pretmp_36;
  _14 = _13 + 1;
  _18 = _14 % pretmp_36;
  _19 = _18 * offset_27;
  result_20 = _19 + result_29;
  # DEBUG resultD.37278 => result_20
  offset_21 = offset_27 * pretmp_36;
  # DEBUG offsetD.37277 => offset_21
  n_22 = n_31 + 1;
  # DEBUG nD.37279 => n_22
  # DEBUG nD.37279 => n_22
  # DEBUG resultD.37278 => result_20
  # DEBUG offsetD.37277 => offset_21
  if (n_22 >= _28)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # result_44 = PHI <result_20(7)>
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 1, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # result_30 = PHI <result_44(8), 0(4)>
  # VUSE <.MEM_5(D)>
  return result_30;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_6(D)->D.34192.D.34111.D.33923._nodes
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.34192._n
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 128
	Access function 1: 0
Creating dr for this_6(D)->D.34192._xr
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 20
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 160
	Access function 1: 0
Creating dr for this_6(D)->D.34192._k
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 96
	Access function 1: 0
Analyzing # of iterations of loop 1
  exit condition [1, + , 1](no_overflow) < _28
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _28 + 4294967295, bounded by 2147483646
Analyzing # of iterations of loop 1
  exit condition [1, + , 1](no_overflow) < _28
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _28 + 4294967295, bounded by 2147483646

Before limit_scops SCoP statistics (BBS:7, LOOPS:1, CONDITIONS:2, STMTS:27)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 1

SCoP statistics (BBS:3, LOOPS:1, CONDITIONS:1, STMTS:18)

SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Global statistics (BBS:12, LOOPS:1, CONDITIONS:4, STMTS:37)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
Creating dr for phi_out_of_ssa.803[0]
analyze_innermost: success.
	base_address: &phi_out_of_ssa.803
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: phi_out_of_ssa.803
	Access function 0: 0
Creating dr for phi_out_of_ssa.803[0]
analyze_innermost: success.
	base_address: &phi_out_of_ssa.803
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: phi_out_of_ssa.803
	Access function 0: 0
Creating dr for phi_out_of_ssa.804[0]
analyze_innermost: success.
	base_address: &phi_out_of_ssa.804
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: phi_out_of_ssa.804
	Access function 0: 0
Creating dr for phi_out_of_ssa.804[0]
analyze_innermost: success.
	base_address: &phi_out_of_ssa.804
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: phi_out_of_ssa.804
	Access function 0: 0
Creating dr for Close_Phi.805[0]
analyze_innermost: success.
	base_address: &Close_Phi.805
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: Close_Phi.805
	Access function 0: 0
Creating dr for Close_Phi.805[0]
analyze_innermost: success.
	base_address: &Close_Phi.805
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: Close_Phi.805
	Access function 0: 0

Updating SSA:
creating PHI node in block #7 for .MEM
creating PHI node in block #10 for .MEM
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Registering new PHI nodes in block #3
Updating SSA information for statement _7 = this_6(D)->D.34192.D.34111.D.33923._nodes;
Registering new PHI nodes in block #4
Updating SSA information for statement _28 = this_6(D)->D.34192._n;
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_32 = this_6(D)->D.34192._xr;
Updating SSA information for statement pretmp_34 = this_6(D)->D.34192._k;
Updating SSA information for statement phi_out_of_ssa.803[0] = 1;
Updating SSA information for statement phi_out_of_ssa.804[0] = 0;
Registering new PHI nodes in block #7
Updating SSA information for statement result_29 = phi_out_of_ssa.804[0];
Updating SSA information for statement offset_27 = phi_out_of_ssa.803[0];
Updating SSA information for statement Close_Phi.805[0] = result_20;
Updating SSA information for statement phi_out_of_ssa.804[0] = result_20;
Updating SSA information for statement phi_out_of_ssa.803[0] = offset_21;
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement result_44 = Close_Phi.805[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10
Updating SSA information for statement return result_30;
Registering new PHI nodes in block #5
Updating SSA information for statement __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 318, &__PRETTY_FUNCTION__);

DFA Statistics for virtual int NeighborTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             41        328b
DEF operands                             16        128b
VUSE operands                            14        112b
VDEF operands                             6         48b
PHI nodes                                 4        416b
PHI arguments                             8        384b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1416b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


Symbols to be put in SSA form
{ D.44424 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11


Creating dr for Cross_BB_scalar_dependence.806[0]
analyze_innermost: success.
	base_address: &Cross_BB_scalar_dependence.806
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: Cross_BB_scalar_dependence.806
	Access function 0: 0

Updating SSA:
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Registering new PHI nodes in block #3
Updating SSA information for statement _7 = this_6(D)->D.34192.D.34111.D.33923._nodes;
Registering new PHI nodes in block #4
Updating SSA information for statement _28 = this_6(D)->D.34192._n;
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_32 = this_6(D)->D.34192._xr;
Updating SSA information for statement pretmp_34 = this_6(D)->D.34192._k;
Updating SSA information for statement phi_out_of_ssa.803[0] = 1;
Updating SSA information for statement phi_out_of_ssa.804[0] = 0;
Registering new PHI nodes in block #7
Updating SSA information for statement result_29 = phi_out_of_ssa.804[0];
Updating SSA information for statement offset_27 = phi_out_of_ssa.803[0];
Updating SSA information for statement Close_Phi.805[0] = result_20;
Updating SSA information for statement phi_out_of_ssa.804[0] = result_20;
Updating SSA information for statement phi_out_of_ssa.803[0] = offset_21;
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement result_44 = Close_Phi.805[0];
Updating SSA information for statement Cross_BB_scalar_dependence.806[0] = result_44;
Registering new PHI nodes in block #12
Updating SSA information for statement result_33 = Cross_BB_scalar_dependence.806[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10
Updating SSA information for statement return result_30;
Registering new PHI nodes in block #5
Updating SSA information for statement __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 318, &__PRETTY_FUNCTION__);

DFA Statistics for virtual int NeighborTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             43        344b
DEF operands                             18        144b
VUSE operands                            16        128b
VDEF operands                             7         56b
PHI nodes                                 4        416b
PHI arguments                             8        384b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1472b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


Symbols to be put in SSA form
{ D.44424 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12



ISL AST generated by ISL: 
{
  for (int c1 = 0; c1 < P_28; c1 += 1)
    S_7(c1);
  S_8();
}


Removing basic block 17
basic block 17, loop depth 0
 pred:      
goto <bb 15>;
 succ:       15



Updating SSA:
Registering new PHI nodes in block #4
Registering new PHI nodes in block #6
Registering new PHI nodes in block #14
Registering new PHI nodes in block #16
Registering new PHI nodes in block #7
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement Cross_BB_scalar_dependence.806[0] = result_44;
Registering new PHI nodes in block #15
Registering new PHI nodes in block #13
Registering new PHI nodes in block #12
Updating SSA information for statement result_33 = Cross_BB_scalar_dependence.806[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10

DFA Statistics for virtual int NeighborTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             43        344b
DEF operands                             18        144b
VUSE operands                            16        128b
VDEF operands                             7         56b
PHI nodes                                 5        520b
PHI arguments                            10        480b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1672b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_10 -> { .MEM_35 }
Incremental SSA update started at block: 4
Number of blocks in CFG: 18
Number of blocks to update: 6 ( 33%)
Affected blocks: 8 10 11 12 15 16


Applying pattern match.pd:491, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
gimple_simplified to _54 = offset_49 * _53;
gimple_simplified to result_55 = result_48 + _54;
gimple_simplified to offset_58 = pretmp_36 * offset_49;

Updating SSA:
creating PHI node in block #19 for .MEM
creating PHI node in block #22 for .MEM
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Registering new PHI nodes in block #3
Updating SSA information for statement _7 = this_6(D)->D.34192.D.34111.D.33923._nodes;
Registering new PHI nodes in block #4
Updating SSA information for statement _28 = this_6(D)->D.34192._n;
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_32 = this_6(D)->D.34192._xr;
Updating SSA information for statement pretmp_34 = this_6(D)->D.34192._k;
Updating SSA information for statement phi_out_of_ssa.803[0] = 1;
Updating SSA information for statement phi_out_of_ssa.804[0] = 0;
Registering new PHI nodes in block #14
Registering new PHI nodes in block #18
Registering new PHI nodes in block #24
Registering new PHI nodes in block #22
Registering new PHI nodes in block #27
Updating SSA information for statement result_48 = phi_out_of_ssa.804[0];
Updating SSA information for statement offset_49 = phi_out_of_ssa.803[0];
Updating SSA information for statement _50 = source_4(D) / offset_49;
Updating SSA information for statement _51 = _50 % pretmp_36;
Updating SSA information for statement _52 = _51 + 1;
Updating SSA information for statement _53 = _52 % pretmp_36;
Updating SSA information for statement _54 = offset_49 * _53;
Updating SSA information for statement result_55 = result_48 + _54;
Updating SSA information for statement Close_Phi.805[0] = result_55;
Updating SSA information for statement phi_out_of_ssa.804[0] = result_55;
Updating SSA information for statement offset_58 = pretmp_36 * offset_49;
Updating SSA information for statement phi_out_of_ssa.803[0] = offset_58;
Registering new PHI nodes in block #25
Registering new PHI nodes in block #23
Registering new PHI nodes in block #26
Registering new PHI nodes in block #20
Registering new PHI nodes in block #21
Registering new PHI nodes in block #19
Registering new PHI nodes in block #16
Registering new PHI nodes in block #7
Updating SSA information for statement result_29 = phi_out_of_ssa.804[0];
Updating SSA information for statement offset_27 = phi_out_of_ssa.803[0];
Updating SSA information for statement # DEBUG result => result_29
Updating SSA information for statement # DEBUG offset => offset_27
Updating SSA information for statement _9 = source_4(D) / offset_27;
Updating SSA information for statement _13 = _9 % pretmp_36;
Updating SSA information for statement _14 = _13 + 1;
Updating SSA information for statement _18 = _14 % pretmp_36;
Updating SSA information for statement _19 = _18 * offset_27;
Updating SSA information for statement result_20 = _19 + result_29;
Updating SSA information for statement Close_Phi.805[0] = result_20;
Updating SSA information for statement phi_out_of_ssa.804[0] = result_20;
Updating SSA information for statement # DEBUG result => result_20
Updating SSA information for statement offset_21 = offset_27 * pretmp_36;
Updating SSA information for statement phi_out_of_ssa.803[0] = offset_21;
Updating SSA information for statement # DEBUG offset => offset_21
Updating SSA information for statement # DEBUG result => result_20
Updating SSA information for statement # DEBUG offset => offset_21
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement result_44 = Close_Phi.805[0];
Updating SSA information for statement Cross_BB_scalar_dependence.806[0] = result_44;
Registering new PHI nodes in block #15
Registering new PHI nodes in block #13
Registering new PHI nodes in block #12
Updating SSA information for statement result_33 = Cross_BB_scalar_dependence.806[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10
Updating SSA information for statement return result_30;
Registering new PHI nodes in block #5
Updating SSA information for statement __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 318, &__PRETTY_FUNCTION__);

DFA Statistics for virtual int NeighborTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             66        528b
DEF operands                             31        248b
VUSE operands                            21        168b
VDEF operands                            10         80b
PHI nodes                                 8        832b
PHI arguments                            16        768b
---------------------------------------------------------
Total memory used by DFA/SSA data                 2624b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

result_48 -> { result_29 }
offset_49 -> { offset_27 }
_50 -> { _9 }
_51 -> { _13 }
_52 -> { _14 }
_53 -> { _18 }
_54 -> { _19 }
result_55 -> { result_20 }
.MEM_56 -> { .MEM_39 }
.MEM_57 -> { .MEM_38 }
offset_58 -> { offset_21 }
.MEM_59 -> { .MEM_26 }

Symbols to be put in SSA form
{ D.44424 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 28
Number of blocks to update: 26 ( 93%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25 26 27



Updating SSA:
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Registering new PHI nodes in block #3
Updating SSA information for statement _7 = this_6(D)->D.34192.D.34111.D.33923._nodes;
Registering new PHI nodes in block #4
Updating SSA information for statement _28 = this_6(D)->D.34192._n;
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_32 = this_6(D)->D.34192._xr;
Updating SSA information for statement pretmp_34 = this_6(D)->D.34192._k;
Updating SSA information for statement phi_out_of_ssa.803[0] = 1;
Updating SSA information for statement phi_out_of_ssa.804[0] = 0;
Registering new PHI nodes in block #14
Registering new PHI nodes in block #18
Registering new PHI nodes in block #24
Registering new PHI nodes in block #22
Registering new PHI nodes in block #27
Updating SSA information for statement result_48 = phi_out_of_ssa.804[0];
Updating SSA information for statement offset_49 = phi_out_of_ssa.803[0];
Updating SSA information for statement Close_Phi.805[0] = result_55;
Updating SSA information for statement phi_out_of_ssa.804[0] = result_55;
Updating SSA information for statement phi_out_of_ssa.803[0] = offset_58;
Registering new PHI nodes in block #25
Registering new PHI nodes in block #23
Registering new PHI nodes in block #26
Registering new PHI nodes in block #20
Registering new PHI nodes in block #21
Registering new PHI nodes in block #19
Registering new PHI nodes in block #28
Updating SSA information for statement result_62 = Close_Phi.805[0];
Updating SSA information for statement Cross_BB_scalar_dependence.806[0] = result_62;
Registering new PHI nodes in block #16
Registering new PHI nodes in block #7
Updating SSA information for statement result_29 = phi_out_of_ssa.804[0];
Updating SSA information for statement offset_27 = phi_out_of_ssa.803[0];
Updating SSA information for statement Close_Phi.805[0] = result_20;
Updating SSA information for statement phi_out_of_ssa.804[0] = result_20;
Updating SSA information for statement phi_out_of_ssa.803[0] = offset_21;
Registering new PHI nodes in block #9
Registering new PHI nodes in block #8
Updating SSA information for statement result_44 = Close_Phi.805[0];
Updating SSA information for statement Cross_BB_scalar_dependence.806[0] = result_44;
Registering new PHI nodes in block #15
Registering new PHI nodes in block #13
Registering new PHI nodes in block #12
Updating SSA information for statement result_33 = Cross_BB_scalar_dependence.806[0];
Registering new PHI nodes in block #11
Registering new PHI nodes in block #10
Updating SSA information for statement return result_30;
Registering new PHI nodes in block #5
Updating SSA information for statement __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 318, &__PRETTY_FUNCTION__);

DFA Statistics for virtual int NeighborTrafficPattern::dest(int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             67        536b
DEF operands                             32        256b
VUSE operands                            23        184b
VDEF operands                            11         88b
PHI nodes                                 8        832b
PHI arguments                            16        768b
---------------------------------------------------------
Total memory used by DFA/SSA data                 2664b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

result_62 -> { result_44 }
.MEM_63 -> { .MEM_35 }

Symbols to be put in SSA form
{ D.44424 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 29
Number of blocks to update: 27 ( 93%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25 26 27 28



0 loops carried no dependency.
Merging blocks 6 and 14
Removing basic block 11
basic block 11, loop depth 0
 pred:      
goto <bb 10>;
 succ:       10


Removing basic block 13
basic block 13, loop depth 0
 pred:      
goto <bb 12>;
 succ:       12


Merging blocks 15 and 12
Removing basic block 16
basic block 16, loop depth 0
 pred:      
 succ:       15


Merging blocks 19 and 28
Removing basic block 20
basic block 20, loop depth 0
 pred:      
 succ:       19


Removing basic block 21
basic block 21, loop depth 0
 pred:      
goto <bb 19>;
 succ:       19


Merging blocks 22 and 27
Removing basic block 26
basic block 26, loop depth 0
 pred:      
 succ:       19


Removing basic block 8
basic block 8, loop depth 0
 pred:       7
result_44 = Close_Phi.805[0];
Cross_BB_scalar_dependence.806[0] = result_44;
goto <bb 15>;
 succ:       15


Removing basic block 9
basic block 9, loop depth 1
 pred:       7
goto <bb 7>;
 succ:       7


Removing basic block 7
basic block 7, loop depth 1
 pred:       6
# n_31 = PHI <0(6)>
result_29 = phi_out_of_ssa.804[0];
offset_27 = phi_out_of_ssa.803[0];
# DEBUG n => n_31
# DEBUG result => result_29
# DEBUG offset => offset_27
_9 = source_4(D) / offset_27;
_13 = _9 % pretmp_36;
_14 = _13 + 1;
_18 = _14 % pretmp_36;
_19 = _18 * offset_27;
result_20 = _19 + result_29;
Close_Phi.805[0] = result_20;
phi_out_of_ssa.804[0] = result_20;
# DEBUG result => result_20
offset_21 = offset_27 * pretmp_36;
phi_out_of_ssa.803[0] = offset_21;
# DEBUG offset => offset_21
n_22 = n_31 + 1;
# DEBUG n => n_22
# DEBUG n => n_22
# DEBUG result => result_20
# DEBUG offset => offset_21
if (n_22 >= _28)
 succ:      


Merging blocks 6 and 18
Merging blocks 19 and 15
Merging blocks 22 and 25
fix_loop_structure: removing loop 1
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) _28 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if _28 <= 0
    # of iterations (unsigned long) ((signed long) _28 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) _28 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if _28 <= 0
    # of iterations (unsigned long) ((signed long) _28 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) _28 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if _28 <= 0
    # of iterations (unsigned long) ((signed long) _28 + -1), bounded by 9223372036854775806
Statement (exit)if (graphite_IV.807_46 < _45)
 is executed at most (unsigned long) ((signed long) _28 + -1) (bounded by 9223372036854775806) + 1 times in loop 2.
Induction variable (signed long) 1 + 1 * iteration does not wrap in statement graphite_IV.807_47 = graphite_IV.807_46 + 1;
 in loop 2.
Statement graphite_IV.807_47 = graphite_IV.807_46 + 1;
 is executed at most 9223372036854775806 (bounded by 9223372036854775806) + 1 times in loop 2.
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  opcode values positive (on trees) heuristics (ignored): 27.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
Predictions for bb 3
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  noreturn call heuristics: 0.0%
Predictions for bb 4
  DS theory heuristics: 19.1%
  first match heuristics (ignored): 27.0%
  combined heuristics: 19.1%
  opcode values positive (on trees) heuristics: 27.0%
  early return (on trees) heuristics: 39.0%
0 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics (ignored): 91.0%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  loop exit heuristics: 91.0%
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities
1 edges in bb 11 predicted to even probabilities
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_5 bb_3 })
  {
    <bb 2>:
    if (source_4(D) < 0)
      goto <bb 5>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_5(D)>
    _7 = this_6(D)->D.34192.D.34111.D.33923._nodes;
    if (source_4(D) >= _7)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_11 bb_6 })
  {
    <bb 4>:
    # DEBUG n => 0
    # DEBUG result => 0
    # DEBUG offset => 1
    # VUSE <.MEM_5(D)>
    _28 = this_6(D)->D.34192._n;
    if (_28 <= 0)
      goto <bb 11>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_3 bb_2 }, succs = {})
  {
    <bb 5>:
    # DEBUG D#28 => this_6(D)
    # DEBUG D#29 => source_4(D)
    # DEBUG D#30 => D#29
    # DEBUG source => D#30
    # DEBUG D#31 => D#28
    # DEBUG this => D#31
    # .MEM_23 = VDEF <.MEM_5(D)>
    __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 318, &__PRETTY_FUNCTION__);

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_10 })
  {
    <bb 6>:
    # VUSE <.MEM_5(D)>
    pretmp_32 = this_6(D)->D.34192._xr;
    # VUSE <.MEM_5(D)>
    pretmp_34 = this_6(D)->D.34192._k;
    pretmp_36 = pretmp_32 * pretmp_34;
    # .MEM_41 = VDEF <.MEM_5(D)>
    phi_out_of_ssa.803[0] = 1;
    # .MEM_40 = VDEF <.MEM_41>
    phi_out_of_ssa.804[0] = 0;
    _11 = _28 > 0;
    if (_11 != 0)
      goto <bb 7>;
    else
      goto <bb 10>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _12 = (signed long) _28;
    _45 = _12 + -1;

  }
  bb_10 (preds = {bb_8 bb_6 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_60 = PHI <.MEM_59(8), .MEM_40(6)>
    # VUSE <.MEM_60>
    result_62 = Close_Phi.805[0];
    # .MEM_63 = VDEF <.MEM_60>
    Cross_BB_scalar_dependence.806[0] = result_62;
    # VUSE <.MEM_63>
    result_33 = Cross_BB_scalar_dependence.806[0];
    _37 = result_33;

  }
  bb_11 (preds = {bb_10 bb_4 }, succs = {bb_1 })
  {
    <bb 11>:
    # result_30 = PHI <_37(10), 0(4)>
    # .MEM_42 = PHI <.MEM_63(10), .MEM_5(D)(4)>
    # VUSE <.MEM_42>
    return result_30;

  }
  loop_2 (header = 8, latch = 9, niter = (unsigned long) ((signed long) _28 + -1), upper_bound = 9223372036854775806)
  {
    bb_8 (preds = {bb_7 bb_9 }, succs = {bb_9 bb_10 })
    {
      <bb 8>:
      # graphite_IV.807_46 = PHI <0(7), graphite_IV.807_47(9)>
      # .MEM_61 = PHI <.MEM_40(7), .MEM_59(9)>
      # VUSE <.MEM_61>
      result_48 = phi_out_of_ssa.804[0];
      # VUSE <.MEM_61>
      offset_49 = phi_out_of_ssa.803[0];
      # DEBUG n => NULL
      # DEBUG result => NULL
      # DEBUG offset => NULL
      _50 = source_4(D) / offset_49;
      _51 = _50 % pretmp_36;
      _52 = _51 + 1;
      _53 = _52 % pretmp_36;
      _54 = offset_49 * _53;
      result_55 = result_48 + _54;
      # .MEM_56 = VDEF <.MEM_61>
      Close_Phi.805[0] = result_55;
      # .MEM_57 = VDEF <.MEM_56>
      phi_out_of_ssa.804[0] = result_55;
      # DEBUG result => NULL
      offset_58 = pretmp_36 * offset_49;
      # .MEM_59 = VDEF <.MEM_57>
      phi_out_of_ssa.803[0] = offset_58;
      # DEBUG offset => NULL
      # DEBUG n => NULL
      # DEBUG n => NULL
      # DEBUG result => NULL
      # DEBUG offset => NULL
      graphite_IV.807_47 = graphite_IV.807_46 + 1;
      if (graphite_IV.807_46 < _45)
        goto <bb 9>;
      else
        goto <bb 10>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_8 })
    {
      <bb 9>:
      goto <bb 8>;

    }
  }
}

Pass statistics:
----------------

virtual int NeighborTrafficPattern::dest(int) (struct NeighborTrafficPatternD.34157 * const thisD.37274, intD.9 sourceD.37272)
{
  signed long graphite_IV.807D.51819;
  intD.9 Cross_BB_scalar_dependence.806D.51818[1];
  intD.9 D.51817;
  intD.9 D.51816;
  intD.9 D.51815;
  intD.9 D.51814;
  intD.9 D.51813;
  intD.9 D.51812;
  intD.9 D.51811;
  intD.9 D.51810;
  intD.9 D.51809;
  intD.9 D.51808;
  intD.9 Close_Phi.805D.51807[1];
  intD.9 phi_out_of_ssa.804D.51806[1];
  intD.9 phi_out_of_ssa.803D.51805[1];
  intD.9 nD.37279;
  intD.9 resultD.37278;
  intD.9 offsetD.37277;
  intD.9 _7;
  boolD.2757 _11;
  signed long _12;
  intD.9 _28;
  intD.9 pretmp_32;
  intD.9 pretmp_34;
  intD.9 pretmp_36;
  signed long _45;
  intD.9 _50;
  intD.9 _51;
  intD.9 _52;
  intD.9 _53;
  intD.9 _54;

;;   basic block 2, loop depth 0, count 0, freq 2227, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_4(D) < 0)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2226, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  _7 = this_6(D)->D.34192.D.34111.D.33923._nodesD.33855;
  if (source_4(D) >= _7)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2226, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG nD.37279 => 0
  # DEBUG resultD.37278 => 0
  # DEBUG offsetD.37277 => 1
  # VUSE <.MEM_5(D)>
  _28 = this_6(D)->D.34192._nD.34079;
  if (_28 <= 0)
    goto <bb 11>;
  else
    goto <bb 6>;
;;    succ:       11 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#28ptD.0 => this_6(D)
  # DEBUG D#29ptD.0 => source_4(D)
  # DEBUG D#30ptD.0 => D#29ptD.0
  # DEBUG sourceD.51800 => D#30ptD.0
  # DEBUG D#31ptD.0 => D#28ptD.0
  # DEBUG thisD.51801 => D#31ptD.0
  # .MEM_23 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.37276 } (nonlocal, escaped)
  # CLB = nonlocal null { D.37276 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 318, &_ZZN22NeighborTrafficPattern4destEiE19__PRETTY_FUNCTION__D.37276);
;;    succ:      

;;   basic block 6, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  pretmp_32 = this_6(D)->D.34192._xrD.34080;
  # VUSE <.MEM_5(D)>
  pretmp_34 = this_6(D)->D.34192._kD.34078;
  pretmp_36 = pretmp_32 * pretmp_34;
  # .MEM_41 = VDEF <.MEM_5(D)>
  phi_out_of_ssa.803D.51805[0] = 1;
  # .MEM_40 = VDEF <.MEM_41>
  phi_out_of_ssa.804D.51806[0] = 0;
  _11 = _28 > 0;
  if (_11 != 0)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [50.0%]  (TRUE_VALUE)
;;                10 [50.0%]  (FALSE_VALUE)

;;   basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [50.0%]  (TRUE_VALUE)
  _12 = (signed long) _28;
  _45 = _12 + -1;
;;    succ:       8 [100.0%]  (FALLTHRU)

;;   basic block 8, loop depth 1, count 0, freq 10000, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
;;                9 [100.0%]  (FALLTHRU,DFS_BACK)
  # graphite_IV.807_46 = PHI <0(7), graphite_IV.807_47(9)>
  # .MEM_61 = PHI <.MEM_40(7), .MEM_59(9)>
  # VUSE <.MEM_61>
  result_48 = phi_out_of_ssa.804D.51806[0];
  # VUSE <.MEM_61>
  offset_49 = phi_out_of_ssa.803D.51805[0];
  # DEBUG nD.37279 => NULL
  # DEBUG resultD.37278 => NULL
  # DEBUG offsetD.37277 => NULL
  _50 = source_4(D) / offset_49;
  _51 = _50 % pretmp_36;
  _52 = _51 + 1;
  _53 = _52 % pretmp_36;
  _54 = offset_49 * _53;
  result_55 = result_48 + _54;
  # .MEM_56 = VDEF <.MEM_61>
  Close_Phi.805D.51807[0] = result_55;
  # .MEM_57 = VDEF <.MEM_56>
  phi_out_of_ssa.804D.51806[0] = result_55;
  # DEBUG resultD.37278 => NULL
  offset_58 = pretmp_36 * offset_49;
  # .MEM_59 = VDEF <.MEM_57>
  phi_out_of_ssa.803D.51805[0] = offset_58;
  # DEBUG offsetD.37277 => NULL
  # DEBUG nD.37279 => NULL
  # DEBUG nD.37279 => NULL
  # DEBUG resultD.37278 => NULL
  # DEBUG offsetD.37277 => NULL
  graphite_IV.807_47 = graphite_IV.807_46 + 1;
  if (graphite_IV.807_46 < _45)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [91.0%]  (TRUE_VALUE)
;;                10 [9.0%]  (FALSE_VALUE,LOOP_EXIT)

;;   basic block 9, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [91.0%]  (TRUE_VALUE)
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,DFS_BACK)

;;   basic block 10, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       8 [9.0%]  (FALSE_VALUE,LOOP_EXIT)
;;                6 [50.0%]  (FALSE_VALUE)
  # .MEM_60 = PHI <.MEM_59(8), .MEM_40(6)>
  # VUSE <.MEM_60>
  result_62 = Close_Phi.805D.51807[0];
  # .MEM_63 = VDEF <.MEM_60>
  Cross_BB_scalar_dependence.806D.51818[0] = result_62;
  # VUSE <.MEM_63>
  result_33 = Cross_BB_scalar_dependence.806D.51818[0];
  _37 = result_33;
;;    succ:       11 [100.0%]  (FALLTHRU)

;;   basic block 11, loop depth 0, count 0, freq 2226, maybe hot
;;    prev block 10, next block 1, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU)
;;                4 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # result_30 = PHI <_37(10), 0(4)>
  # .MEM_42 = PHI <.MEM_63(10), .MEM_5(D)(4)>
  # VUSE <.MEM_42>
  return result_30;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual int UniformBackgroundTrafficPattern::dest(int) (_ZN31UniformBackgroundTrafficPattern4destEi, funcdef_no=1814, decl_uid=35882, cgraph_uid=484, symbol_order=485)


Pass statistics:
----------------

virtual int UniformBackgroundTrafficPattern::dest(int) (struct UniformBackgroundTrafficPatternD.35035 * const thisD.38964, intD.9 sourceD.38962)
{
  const struct _Rb_tree_nodeD.35053 * __yD.49117;
  intD.9 _5;
  intD.9 _6;
  intD.9 _7;
  long intD.12 _8;
  long intD.12 _11;
  long intD.12 _12;
  intD.9 _13;
  intD.9 _15;
  const intD.9 _16;
  const intD.9 _20;
  intD.9 prephitmp_22;
  intD.9 pretmp_27;
  intD.9 _33;
  const struct _Rb_tree_node_baseD.25994 * pretmp_36;

;;   basic block 2, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_2(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  _5 = this_4(D)->D.35913.D.35001._nodesD.33855;
  if (source_2(D) >= _5)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#434ptD.0 => this_4(D)
  # DEBUG D#435ptD.0 => source_2(D)
  # DEBUG D#436ptD.0 => D#435ptD.0
  # DEBUG sourceD.51914 => D#436ptD.0
  # DEBUG D#437ptD.0 => D#434ptD.0
  # DEBUG thisD.51915 => D#437ptD.0
  # .MEM_9 = VDEF <.MEM_3(D)>
  # USE = nonlocal { D.38966 } (nonlocal, escaped)
  # CLB = nonlocal { D.38966 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 404, &_ZZN31UniformBackgroundTrafficPattern4destEiE19__PRETTY_FUNCTION__D.38966);
;;    succ:      

;;   basic block 5, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  pretmp_36 = &MEM[(const struct _Rb_treeD.35049 *)this_4(D) + 16B]._M_implD.35127._M_headerD.35293;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_3(D)(5), .MEM_25(17)>
  # prephitmp_22 = PHI <_5(5), pretmp_27(17)>
  # DEBUG D#563ptD.0 => this_4(D)->D.35913.D.35001._nodesD.33855
  # DEBUG maxD.49107 => D#563ptD.0 + -1
  # .MEM_25 = VDEF <.MEM_1>
  # USE = nonlocal { D.38966 } (nonlocal, escaped)
  # CLB = nonlocal { D.38966 } (nonlocal, escaped)
  _8 = _Z8ran_nextvD.25964 ();
  # RANGE [-2147483648, 2147483647]
  _11 = (long intD.12) prephitmp_22;
  _12 = _8 % _11;
  _13 = (intD.9) _12;
  # DEBUG resultD.38967 => _13
  # DEBUG D#433ptD.0 => &this_4(D)->_excludedD.35876
  # DEBUG thisD.49109 => D#433ptD.0
  # DEBUG __xD.49110 => &resultD.38967
  # DEBUG D#429ptD.0 => &MEM[(const struct setD.35038 *)D#433ptD.0]._M_tD.35050
  # DEBUG thisD.49111 => D#429ptD.0
  # DEBUG D#562ptD.0 => &MEM[(const struct _Rb_treeD.35049 *)this_4(D) + 16B]._M_implD.35127._M_headerD.35293
  # DEBUG thisD.49097 => NULL
  # DEBUG __xD.49096 => D#562ptD.0
  # DEBUG D#430ptD.0 => &MEM[(const struct setD.35038 *)D#433ptD.0]._M_tD.35050
  # DEBUG thisD.49113 => D#430ptD.0
  # DEBUG __kD.49112 => &resultD.38967
  # DEBUG thisD.49088 => D#430ptD.0
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  __y_14 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_4(D) + 32B];
  # DEBUG D#132ptD.0 => D#430ptD.0
  # DEBUG thisD.49056 => D#132ptD.0
  # DEBUG D#420ptD.0 => D#430ptD.0
  # DEBUG __xD.49118 => NULL
  # DEBUG __yD.49117 => NULL
  # DEBUG __kD.49116 => &resultD.38967
  # DEBUG __yD.49117 => D#562ptD.0
  # DEBUG __xD.49118 => __y_14
  if (__y_14 == 0B)
    goto <bb 18>;
  else
    goto <bb 9>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_10 = PHI <__y_18(12), __y_17(11)>
  # PT = nonlocal escaped 
  # __y_23 = PHI <__y_38(12), __y_24(11)>
  # DEBUG __yD.49117 => __y_23
  # DEBUG __xD.49118 => __y_10
  if (__y_10 == 0B)
    goto <bb 13>;
  else
    goto <bb 8>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_24 = PHI <__y_14(9), __y_10(8)>
  # PT = nonlocal escaped 
  # __y_38 = PHI <pretmp_36(9), __y_23(8)>
  # DEBUG __yD.49117 => __y_38
  # DEBUG __xD.49118 => __y_24
  # DEBUG __xD.48954 => __y_24
  # DEBUG __xD.48955 => __y_24
  # DEBUG thisD.48956 => __y_24
  # DEBUG D#417ptD.0 => &__y_24->_M_value_fieldD.40564
  # DEBUG __rD.48911 => D#417ptD.0
  # DEBUG __xD.48917 => D#417ptD.0
  # DEBUG thisD.48918 => D#131ptD.0
  # DEBUG D#418ptD.0 => &D#419ptD.0->_M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#418ptD.0
  # VUSE <.MEM_25>
  _16 = MEM[(const intD.9 &)__y_24 + 32];
  # DEBUG D#134ptD.0 => D#417ptD.0
  # DEBUG D#135ptD.0 => &resultD.38967
  # DEBUG thisD.48957 => D#133ptD.0
  # DEBUG __xD.48958 => D#134ptD.0
  # DEBUG __yD.48959 => D#135ptD.0
  if (_13 <= _16)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 2, count 0, freq 4550, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __yD.49117 => __y_24
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  __y_17 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__y_24 + 16B];
  # DEBUG D#206ptD.0 => __y_24
  # DEBUG __xD.48953 => D#206ptD.0
  # DEBUG __xD.49118 => NULL
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 2, count 0, freq 4550, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  __y_18 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__y_24 + 24B];
  # DEBUG D#207ptD.0 => __y_24
  # DEBUG __xD.48952 => D#207ptD.0
  # DEBUG __xD.49118 => NULL
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_19 = PHI <__y_23(7)>
  # DEBUG thisD.48951 => NULL
  # DEBUG __xD.48950 => __y_19
  # DEBUG __j$_M_nodeD.49074 => __y_19
  # DEBUG thisD.49044 => D#430ptD.0
  # DEBUG thisD.49046 => NULL
  # DEBUG __xD.49045 => D#562ptD.0
  # DEBUG thisD.49041 => &__jD.49114
  # DEBUG __xD.49042 => NULL
  if (__y_19 == pretmp_36)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 54, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [6.6%]  (TRUE_VALUE,EXECUTABLE)
  # _7 = PHI <_13(13)>
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 765, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.49066 => __y_19
  # DEBUG __xD.49067 => __y_19
  # DEBUG thisD.49068 => __y_19
  # DEBUG D#426ptD.0 => &__y_19->_M_value_fieldD.40564
  # DEBUG __rD.48911 => D#426ptD.0
  # DEBUG __xD.48972 => D#426ptD.0
  # DEBUG thisD.48973 => D#131ptD.0
  # DEBUG D#428ptD.0 => &MEM[(const struct _Rb_treeD.35049 *)D#430ptD.0]._M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#428ptD.0
  # DEBUG D#134ptD.0 => &resultD.38967
  # VUSE <.MEM_25>
  _20 = MEM[(const intD.9 &)__y_19 + 32];
  # DEBUG D#135ptD.0 => D#426ptD.0
  # DEBUG thisD.49064 => D#133ptD.0
  # DEBUG __xD.49063 => D#134ptD.0
  # DEBUG __yD.49062 => D#135ptD.0
  # DEBUG D#427ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49074 => D#427ptD.0
  # DEBUG thisD.49082 => NULL
  # DEBUG __xD.49083 => NULL
  if (_13 < _20)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 (TRUE_VALUE,EXECUTABLE)
  # _15 = PHI <_13(15)>
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 765, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_25>
  pretmp_27 = this_4(D)->D.35913.D.35001._nodesD.33855;
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _6 = PHI <_13(6)>
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _33 = PHI <_7(14), _6(18), _15(16)>
  # DEBUG D#431ptD.0 => {CLOBBER}
  # DEBUG resultD.38967 => D#431ptD.0
  # VUSE <.MEM_25>
  return _33;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_4(D)->D.35913.D.35001._nodes
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(const int &)__y_24 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_24 + 32]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B]
Creating dr for MEM[(const int &)__y_19 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_19 + 32]
Creating dr for MEM[(const int &)__y_19 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__y_19 + 32]
Creating dr for this_4(D)->D.35913.D.35001._nodes
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.35913.D.35001._nodes
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:21, LOOPS:2, CONDITIONS:7, STMTS:103)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    if (source_2(D) < 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_5 })
  {
    <bb 3>:
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.35913.D.35001._nodes;
    if (source_2(D) >= _5)
      goto <bb 4>;
    else
      goto <bb 5>;

  }
  bb_4 (preds = {bb_3 bb_2 }, succs = {})
  {
    <bb 4>:
    # DEBUG D#434 => this_4(D)
    # DEBUG D#435 => source_2(D)
    # DEBUG D#436 => D#435
    # DEBUG source => D#436
    # DEBUG D#437 => D#434
    # DEBUG this => D#437
    # .MEM_9 = VDEF <.MEM_3(D)>
    __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 404, &__PRETTY_FUNCTION__);

  }
  bb_5 (preds = {bb_3 }, succs = {bb_6 })
  {
    <bb 5>:
    pretmp_36 = &MEM[(const struct _Rb_tree *)this_4(D) + 16B]._M_impl._M_header;

  }
  bb_14 (preds = {bb_20 }, succs = {bb_19 })
  {
    <bb 14>:
    # _7 = PHI <_13(20)>
    goto <bb 19>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_19 })
  {
    <bb 16>:
    # _15 = PHI <_13(15)>
    goto <bb 19>;

  }
  bb_18 (preds = {bb_6 }, succs = {bb_19 })
  {
    <bb 18>:
    # _6 = PHI <_13(6)>

  }
  bb_19 (preds = {bb_14 bb_18 bb_16 }, succs = {bb_1 })
  {
    <bb 19>:
    # _33 = PHI <_7(14), _6(18), _15(16)>
    # DEBUG D#431 => {CLOBBER}
    # DEBUG result => D#431
    # VUSE <.MEM_25>
    return _33;

  }
  loop_1 (header = 6, latch = 17, niter = )
  {
    bb_6 (preds = {bb_5 bb_17 }, succs = {bb_18 bb_9 })
    {
      <bb 6>:
      # .MEM_1 = PHI <.MEM_3(D)(5), .MEM_25(17)>
      # prephitmp_22 = PHI <_5(5), pretmp_27(17)>
      # DEBUG D#563 => this_4(D)->D.35913.D.35001._nodes
      # DEBUG max => D#563 + -1
      # .MEM_25 = VDEF <.MEM_1>
      _8 = ran_next ();
      _11 = (long int) prephitmp_22;
      _12 = _8 % _11;
      _13 = (int) _12;
      # DEBUG result => _13
      # DEBUG D#433 => &this_4(D)->_excluded
      # DEBUG this => D#433
      # DEBUG __x => &result
      # DEBUG D#429 => &MEM[(const struct set *)D#433]._M_t
      # DEBUG this => D#429
      # DEBUG D#562 => &MEM[(const struct _Rb_tree *)this_4(D) + 16B]._M_impl._M_header
      # DEBUG this => NULL
      # DEBUG __x => D#562
      # DEBUG D#430 => &MEM[(const struct set *)D#433]._M_t
      # DEBUG this => D#430
      # DEBUG __k => &result
      # DEBUG this => D#430
      # VUSE <.MEM_25>
      __y_14 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 32B];
      # DEBUG D#132 => D#430
      # DEBUG this => D#132
      # DEBUG D#420 => D#430
      # DEBUG __x => NULL
      # DEBUG __y => NULL
      # DEBUG __k => &result
      # DEBUG __y => D#562
      # DEBUG __x => __y_14
      if (__y_14 == 0B)
        goto <bb 18>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_6 }, succs = {bb_10 })
    {
      <bb 9>:

    }
    bb_13 (preds = {bb_7 }, succs = {bb_20 })
    {
      <bb 13>:
      # __y_19 = PHI <__y_23(7)>

    }
    bb_20 (preds = {bb_13 }, succs = {bb_14 bb_15 })
    {
      <bb 20>:
      # DEBUG this => NULL
      # DEBUG __x => __y_19
      # DEBUG __j$_M_node => __y_19
      # DEBUG this => D#430
      # DEBUG this => NULL
      # DEBUG __x => D#562
      # DEBUG this => &__j
      # DEBUG __x => NULL
      if (__y_19 == pretmp_36)
        goto <bb 14>;
      else
        goto <bb 15>;

    }
    bb_15 (preds = {bb_20 }, succs = {bb_16 bb_17 })
    {
      <bb 15>:
      # DEBUG __x => __y_19
      # DEBUG __x => __y_19
      # DEBUG this => __y_19
      # DEBUG D#426 => &__y_19->_M_value_field
      # DEBUG __r => D#426
      # DEBUG __x => D#426
      # DEBUG this => D#131
      # DEBUG D#428 => &MEM[(const struct _Rb_tree *)D#430]._M_impl._M_key_compare
      # DEBUG D#133 => D#428
      # DEBUG D#134 => &result
      # VUSE <.MEM_25>
      _20 = MEM[(const int &)__y_19 + 32];
      # DEBUG D#135 => D#426
      # DEBUG this => D#133
      # DEBUG __x => D#134
      # DEBUG __y => D#135
      # DEBUG D#427 => {CLOBBER}
      # DEBUG __j$_M_node => D#427
      # DEBUG this => NULL
      # DEBUG __x => NULL
      if (_13 < _20)
        goto <bb 16>;
      else
        goto <bb 17>;

    }
    bb_17 (preds = {bb_15 }, succs = {bb_6 })
    {
      <bb 17>:
      # VUSE <.MEM_25>
      pretmp_27 = this_4(D)->D.35913.D.35001._nodes;
      goto <bb 6>;

    }
    loop_2 (header = 10, latch = 8, niter = )
    {
      bb_7 (preds = {bb_12 bb_11 }, succs = {bb_13 bb_8 })
      {
        <bb 7>:
        # __y_10 = PHI <__y_18(12), __y_17(11)>
        # __y_23 = PHI <__y_38(12), __y_24(11)>
        # DEBUG __y => __y_23
        # DEBUG __x => __y_10
        if (__y_10 == 0B)
          goto <bb 13>;
        else
          goto <bb 8>;

      }
      bb_8 (preds = {bb_7 }, succs = {bb_10 })
      {
        <bb 8>:
        goto <bb 10>;

      }
      bb_10 (preds = {bb_9 bb_8 }, succs = {bb_11 bb_12 })
      {
        <bb 10>:
        # __y_24 = PHI <__y_14(9), __y_10(8)>
        # __y_38 = PHI <pretmp_36(9), __y_23(8)>
        # DEBUG __y => __y_38
        # DEBUG __x => __y_24
        # DEBUG __x => __y_24
        # DEBUG __x => __y_24
        # DEBUG this => __y_24
        # DEBUG D#417 => &__y_24->_M_value_field
        # DEBUG __r => D#417
        # DEBUG __x => D#417
        # DEBUG this => D#131
        # DEBUG D#418 => &D#419->_M_impl._M_key_compare
        # DEBUG D#133 => D#418
        # VUSE <.MEM_25>
        _16 = MEM[(const int &)__y_24 + 32];
        # DEBUG D#134 => D#417
        # DEBUG D#135 => &result
        # DEBUG this => D#133
        # DEBUG __x => D#134
        # DEBUG __y => D#135
        if (_13 <= _16)
          goto <bb 11>;
        else
          goto <bb 12>;

      }
      bb_11 (preds = {bb_10 }, succs = {bb_7 })
      {
        <bb 11>:
        # DEBUG __y => __y_24
        # VUSE <.MEM_25>
        __y_17 = MEM[(struct _Rb_tree_node_base * *)__y_24 + 16B];
        # DEBUG D#206 => __y_24
        # DEBUG __x => D#206
        # DEBUG __x => NULL
        goto <bb 7>;

      }
      bb_12 (preds = {bb_10 }, succs = {bb_7 })
      {
        <bb 12>:
        # VUSE <.MEM_25>
        __y_18 = MEM[(struct _Rb_tree_node_base * *)__y_24 + 24B];
        # DEBUG D#207 => __y_24
        # DEBUG __x => D#207
        # DEBUG __x => NULL
        goto <bb 7>;

      }
    }
  }
}

Pass statistics:
----------------

virtual int UniformBackgroundTrafficPattern::dest(int) (struct UniformBackgroundTrafficPatternD.35035 * const thisD.38964, intD.9 sourceD.38962)
{
  const struct _Rb_tree_nodeD.35053 * __yD.49117;
  intD.9 _5;
  intD.9 _6;
  intD.9 _7;
  long intD.12 _8;
  long intD.12 _11;
  long intD.12 _12;
  intD.9 _13;
  intD.9 _15;
  const intD.9 _16;
  const intD.9 _20;
  intD.9 prephitmp_22;
  intD.9 pretmp_27;
  intD.9 _33;
  const struct _Rb_tree_node_baseD.25994 * pretmp_36;

;;   basic block 2, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_2(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  _5 = this_4(D)->D.35913.D.35001._nodesD.33855;
  if (source_2(D) >= _5)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#434ptD.0 => this_4(D)
  # DEBUG D#435ptD.0 => source_2(D)
  # DEBUG D#436ptD.0 => D#435ptD.0
  # DEBUG sourceD.51914 => D#436ptD.0
  # DEBUG D#437ptD.0 => D#434ptD.0
  # DEBUG thisD.51915 => D#437ptD.0
  # .MEM_9 = VDEF <.MEM_3(D)>
  # USE = nonlocal { D.38966 } (nonlocal, escaped)
  # CLB = nonlocal { D.38966 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 404, &_ZZN31UniformBackgroundTrafficPattern4destEiE19__PRETTY_FUNCTION__D.38966);
;;    succ:      

;;   basic block 5, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  pretmp_36 = &MEM[(const struct _Rb_treeD.35049 *)this_4(D) + 16B]._M_implD.35127._M_headerD.35293;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_3(D)(5), .MEM_25(17)>
  # prephitmp_22 = PHI <_5(5), pretmp_27(17)>
  # DEBUG D#563ptD.0 => this_4(D)->D.35913.D.35001._nodesD.33855
  # DEBUG maxD.49107 => D#563ptD.0 + -1
  # .MEM_25 = VDEF <.MEM_1>
  # USE = nonlocal { D.38966 } (nonlocal, escaped)
  # CLB = nonlocal { D.38966 } (nonlocal, escaped)
  _8 = _Z8ran_nextvD.25964 ();
  # RANGE [-2147483648, 2147483647]
  _11 = (long intD.12) prephitmp_22;
  _12 = _8 % _11;
  _13 = (intD.9) _12;
  # DEBUG resultD.38967 => _13
  # DEBUG D#433ptD.0 => &this_4(D)->_excludedD.35876
  # DEBUG thisD.49109 => D#433ptD.0
  # DEBUG __xD.49110 => &resultD.38967
  # DEBUG D#429ptD.0 => &MEM[(const struct setD.35038 *)D#433ptD.0]._M_tD.35050
  # DEBUG thisD.49111 => D#429ptD.0
  # DEBUG D#562ptD.0 => &MEM[(const struct _Rb_treeD.35049 *)this_4(D) + 16B]._M_implD.35127._M_headerD.35293
  # DEBUG thisD.49097 => NULL
  # DEBUG __xD.49096 => D#562ptD.0
  # DEBUG D#430ptD.0 => &MEM[(const struct setD.35038 *)D#433ptD.0]._M_tD.35050
  # DEBUG thisD.49113 => D#430ptD.0
  # DEBUG __kD.49112 => &resultD.38967
  # DEBUG thisD.49088 => D#430ptD.0
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  __y_14 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_4(D) + 32B];
  # DEBUG D#132ptD.0 => D#430ptD.0
  # DEBUG thisD.49056 => D#132ptD.0
  # DEBUG D#420ptD.0 => D#430ptD.0
  # DEBUG __xD.49118 => NULL
  # DEBUG __yD.49117 => NULL
  # DEBUG __kD.49116 => &resultD.38967
  # DEBUG __yD.49117 => D#562ptD.0
  # DEBUG __xD.49118 => __y_14
  if (__y_14 == 0B)
    goto <bb 18>;
  else
    goto <bb 9>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_10 = PHI <__y_18(12), __y_17(11)>
  # PT = nonlocal escaped 
  # __y_23 = PHI <__y_38(12), __y_24(11)>
  # DEBUG __yD.49117 => __y_23
  # DEBUG __xD.49118 => __y_10
  if (__y_10 == 0B)
    goto <bb 13>;
  else
    goto <bb 8>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_24 = PHI <__y_14(9), __y_10(8)>
  # PT = nonlocal escaped 
  # __y_38 = PHI <pretmp_36(9), __y_23(8)>
  # DEBUG __yD.49117 => __y_38
  # DEBUG __xD.49118 => __y_24
  # DEBUG __xD.48954 => __y_24
  # DEBUG __xD.48955 => __y_24
  # DEBUG thisD.48956 => __y_24
  # DEBUG D#417ptD.0 => &__y_24->_M_value_fieldD.40564
  # DEBUG __rD.48911 => D#417ptD.0
  # DEBUG __xD.48917 => D#417ptD.0
  # DEBUG thisD.48918 => D#131ptD.0
  # DEBUG D#418ptD.0 => &D#419ptD.0->_M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#418ptD.0
  # VUSE <.MEM_25>
  _16 = MEM[(const intD.9 &)__y_24 + 32];
  # DEBUG D#134ptD.0 => D#417ptD.0
  # DEBUG D#135ptD.0 => &resultD.38967
  # DEBUG thisD.48957 => D#133ptD.0
  # DEBUG __xD.48958 => D#134ptD.0
  # DEBUG __yD.48959 => D#135ptD.0
  if (_13 <= _16)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 2, count 0, freq 4550, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __yD.49117 => __y_24
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  __y_17 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__y_24 + 16B];
  # DEBUG D#206ptD.0 => __y_24
  # DEBUG __xD.48953 => D#206ptD.0
  # DEBUG __xD.49118 => NULL
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 2, count 0, freq 4550, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  __y_18 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__y_24 + 24B];
  # DEBUG D#207ptD.0 => __y_24
  # DEBUG __xD.48952 => D#207ptD.0
  # DEBUG __xD.49118 => NULL
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 12, next block 20, flags: (NEW, REACHABLE)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __y_19 = PHI <__y_23(7)>
;;    succ:       20 [100.0%]  (FALLTHRU)

;;   basic block 20, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # DEBUG thisD.48951 => NULL
  # DEBUG __xD.48950 => __y_19
  # DEBUG __j$_M_nodeD.49074 => __y_19
  # DEBUG thisD.49044 => D#430ptD.0
  # DEBUG thisD.49046 => NULL
  # DEBUG __xD.49045 => D#562ptD.0
  # DEBUG thisD.49041 => &__jD.49114
  # DEBUG __xD.49042 => NULL
  if (__y_19 == pretmp_36)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [6.6%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [93.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 54, maybe hot
;;    prev block 20, next block 15, flags: (NEW)
;;    pred:       20 [6.6%]  (TRUE_VALUE,EXECUTABLE)
  # _7 = PHI <_13(20)>
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 765, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       20 [93.4%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.49066 => __y_19
  # DEBUG __xD.49067 => __y_19
  # DEBUG thisD.49068 => __y_19
  # DEBUG D#426ptD.0 => &__y_19->_M_value_fieldD.40564
  # DEBUG __rD.48911 => D#426ptD.0
  # DEBUG __xD.48972 => D#426ptD.0
  # DEBUG thisD.48973 => D#131ptD.0
  # DEBUG D#428ptD.0 => &MEM[(const struct _Rb_treeD.35049 *)D#430ptD.0]._M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#428ptD.0
  # DEBUG D#134ptD.0 => &resultD.38967
  # VUSE <.MEM_25>
  _20 = MEM[(const intD.9 &)__y_19 + 32];
  # DEBUG D#135ptD.0 => D#426ptD.0
  # DEBUG thisD.49064 => D#133ptD.0
  # DEBUG __xD.49063 => D#134ptD.0
  # DEBUG __yD.49062 => D#135ptD.0
  # DEBUG D#427ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.49074 => D#427ptD.0
  # DEBUG thisD.49082 => NULL
  # DEBUG __xD.49083 => NULL
  if (_13 < _20)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 (TRUE_VALUE,EXECUTABLE)
  # _15 = PHI <_13(15)>
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 765, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_25>
  pretmp_27 = this_4(D)->D.35913.D.35001._nodesD.33855;
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _6 = PHI <_13(6)>
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _33 = PHI <_7(14), _6(18), _15(16)>
  # DEBUG D#431ptD.0 => {CLOBBER}
  # DEBUG resultD.38967 => D#431ptD.0
  # VUSE <.MEM_25>
  return _33;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual int HotSpotTrafficPattern::dest(int) (_ZN21HotSpotTrafficPattern4destEi, funcdef_no=1838, decl_uid=36094, cgraph_uid=508, symbol_order=509)


Pass statistics:
----------------

virtual int HotSpotTrafficPattern::dest(int) (struct HotSpotTrafficPatternD.36083 * const thisD.39056, intD.9 sourceD.39054)
{
  intD.9 pctD.51936;
  size_tD.2853 iD.51955;
  const intD.9 limitD.51958;
  intD.9 D.51963;
  static const charD.10 _ZZN21HotSpotTrafficPattern4destEiE19__PRETTY_FUNCTION__D.39058[45] = "virtual int HotSpotTrafficPattern::dest(int)";
  intD.9 _1;
  intD.9 * const _2;
  intD.9 _6;
  intD.9 * const _7;
  long intD.12 _8;
  intD.9 _9;
  long intD.12 _11;
  long intD.12 _12;
  long intD.12 _13;
  intD.9 * const _15;
  intD.9 * const _16;
  intD.9 _18;
  long intD.12 _19;
  intD.9 _20;
  long intD.12 _21;
  long intD.12 _22;
  long unsigned intD.14 _34;
  intD.9 & _35;
  intD.9 & _38;
  intD.9 _39;
  intD.9 * _42;
  intD.9 _43;
  intD.9 _44;
  size_typeD.34516 _48;
  long intD.12 _49;
  long intD.12 _50;
  long intD.12 _51;
  long intD.12 _52;
  long unsigned intD.14 _53;
  intD.9 * _54;
  long unsigned intD.14 _56;
  long unsigned intD.14 _61;

;;   basic block 2, loop depth 0, count 0, freq 1416, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_3(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1416, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_4(D)>
  _6 = this_5(D)->D.36118._nodesD.33855;
  if (source_3(D) >= _6)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_14 = VDEF <.MEM_4(D)>
  # USE = nonlocal { D.39058 } (nonlocal, escaped)
  # CLB = nonlocal { D.39058 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 508, &_ZZN21HotSpotTrafficPattern4destEiE19__PRETTY_FUNCTION__D.39058);
;;    succ:      

;;   basic block 5, loop depth 0, count 0, freq 1415, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#120ptD.0 => &this_5(D)->_hotspotsD.36085
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _15 = MEM[(intD.9 * *)this_5(D) + 16B];
  # DEBUG D#99ptD.0 => D#120ptD.0
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _16 = MEM[(intD.9 * *)this_5(D) + 24B];
  # DEBUG D#99ptD.0 => D#120ptD.0
  # DEBUG thisD.45654 => D#99ptD.0
  # DEBUG thisD.45653 => D#99ptD.0
  _13 = (long intD.12) _16;
  _12 = (long intD.12) _15;
  _11 = _13 - _12;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _8 = _11 /[ex] 4;
  if (_8 == 1)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [37.8%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [62.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 536, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [37.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#121ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG D#100ptD.0 => D#121ptD.0
  # DEBUG __nD.45657 => 0
  # DEBUG thisD.45658 => D#100ptD.0
  # VUSE <.MEM_4(D)>
  _9 = *_15;
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 880, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [62.2%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#127ptD.0 => source_3(D)
  # DEBUG thisD.51935 => this_5(D)
  # DEBUG D#128ptD.0 => D#127ptD.0
  # DEBUG sourceD.51937 => D#128ptD.0
  # VUSE <.MEM_4(D)>
  _18 = this_5(D)->_max_valD.36087;
  # DEBUG maxD.51950 => _18
  # .MEM_17 = VDEF <.MEM_4(D)>
  # USE = nonlocal { D.39058 } (nonlocal, escaped)
  # CLB = nonlocal { D.39058 } (nonlocal, escaped)
  _19 = _Z8ran_nextvD.25964 ();
  _20 = _18 + 1;
  # RANGE [-2147483648, 2147483647]
  _21 = (long intD.12) _20;
  _22 = _19 % _21;
  pct_23 = (intD.9) _22;
  # DEBUG pctD.51936 => pct_23
  # DEBUG iD.51955 => 0
  # DEBUG iD.51955 => 0
  # DEBUG pctD.51936 => pct_23
  # DEBUG D#122ptD.0 => &this_5(D)->_hotspotsD.36085
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _7 = MEM[(intD.9 * *)this_5(D) + 16B];
  # DEBUG D#99ptD.0 => D#122ptD.0
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _2 = MEM[(intD.9 * *)this_5(D) + 24B];
  # DEBUG D#99ptD.0 => D#122ptD.0
  # DEBUG thisD.51956 => D#99ptD.0
  # DEBUG thisD.51957 => D#99ptD.0
  _52 = (long intD.12) _2;
  _51 = (long intD.12) _7;
  _50 = _52 - _51;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _49 = _50 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _48 = (size_typeD.34516) _49;
  # RANGE ~[2305843009213693951, 16140901064495857662]
  _53 = _48 + 18446744073709551615;
  if (_53 != 0)
    goto <bb 8>;
  else
    goto <bb 16>;
;;    succ:       8 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 840, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#123ptD.0 => &this_5(D)->_ratesD.36086
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _54 = MEM[(intD.9 * *)this_5(D) + 40B];
  # DEBUG D#100ptD.0 => D#123ptD.0
  # DEBUG __nD.51962 => 0
  # DEBUG thisD.51961 => D#100ptD.0
  # VUSE <.MEM_17>
  limit_57 = *_54;
  # DEBUG limitD.51958 => limit_57
  if (pct_23 < limit_57)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 8710, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       14 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#123ptD.0 => &this_5(D)->_ratesD.36086
  # DEBUG D#100ptD.0 => D#123ptD.0
  # DEBUG __nD.51962 => i_41
  # DEBUG thisD.51961 => D#100ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _34 = i_41 * 4;
  # PT = nonlocal escaped 
  _35 = _54 + _34;
  # VUSE <.MEM_17>
  limit_36 = *_35;
  # DEBUG limitD.51958 => limit_36
  if (limit_36 > pct_40)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 8318, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 392, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       9 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  # _56 = PHI <_34(9)>
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  # _61 = PHI <_56(11), 0(8)>
  # DEBUG D#124ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG D#100ptD.0 => D#124ptD.0
  # DEBUG __nD.51960 => 0
  # DEBUG thisD.51959 => D#100ptD.0
  # PT = nonlocal escaped 
  _38 = _7 + _61;
  # VUSE <.MEM_17>
  _39 = *_38;
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 802, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       8 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # i_60 = PHI <0(13), i_41(10)>
  # limit_62 = PHI <limit_57(13), limit_36(10)>
  # pct_63 = PHI <pct_23(13), pct_40(10)>
  # DEBUG iD.51955 => i_60
  # DEBUG pctD.51936 => pct_63
  # DEBUG D#122ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG D#99ptD.0 => D#122ptD.0
  # DEBUG thisD.51956 => D#99ptD.0
  # DEBUG thisD.51957 => D#99ptD.0
  # DEBUG D#123ptD.0 => &this_5(D)->_ratesD.36086
  # DEBUG D#100ptD.0 => D#123ptD.0
  # DEBUG __nD.51962 => i_60
  # DEBUG thisD.51961 => D#100ptD.0
  # DEBUG limitD.51958 => limit_62
  # RANGE [0, 2147483647] NONZERO 2147483647
  pct_40 = pct_63 - limit_62;
  # DEBUG pctD.51936 => pct_40
  # RANGE [0, 18446744073709551615]
  i_41 = i_60 + 1;
  # DEBUG iD.51955 => i_41
  # DEBUG iD.51955 => i_41
  # DEBUG pctD.51936 => pct_40
  # DEBUG D#122ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG D#99ptD.0 => D#122ptD.0
  # DEBUG D#99ptD.0 => D#122ptD.0
  # DEBUG thisD.51956 => D#99ptD.0
  # DEBUG thisD.51957 => D#99ptD.0
  if (i_41 < _53)
    goto <bb 9>;
  else
    goto <bb 15>;
;;    succ:       9 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 410, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # pct_55 = PHI <pct_40(14)>
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # pct_64 = PHI <pct_55(15), pct_23(7)>
  # DEBUG D#125ptD.0 => &this_5(D)->_ratesD.36086
  # DEBUG thisD.51944 => D#125ptD.0
  # DEBUG thisD.51945 => D#125ptD.0
  # DEBUG D#118ptD.0 => &D#125ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.51947 => NULL
  # DEBUG __iD.51946 => D#118ptD.0
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _42 = MEM[(intD.9 * const &)this_5(D) + 48];
  # DEBUG thisD.51949 => NULL
  # DEBUG __nD.51948 => 1
  # DEBUG thisD.45635 => NULL
  # DEBUG __iD.45634 => NULL
  # DEBUG thisD.45630 => NULL
  # VUSE <.MEM_17>
  _43 = MEM[(intD.9 &)_42 + 18446744073709551612];
  if (_43 <= pct_64)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_46 = VDEF <.MEM_17>
  # USE = nonlocal { D.39058 } (nonlocal, escaped)
  # CLB = nonlocal { D.39058 } (nonlocal, escaped)
  __assert_failD.29068 ("_rates.back() > pct", "traffic.cpp", 524, &_ZZN21HotSpotTrafficPattern4destEiE19__PRETTY_FUNCTION__D.39058);
;;    succ:      

;;   basic block 18, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#126ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG thisD.51938 => D#126ptD.0
  # DEBUG thisD.51939 => D#126ptD.0
  # DEBUG D#118ptD.0 => &D#126ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.51941 => NULL
  # DEBUG __iD.51940 => D#118ptD.0
  # DEBUG thisD.51943 => NULL
  # DEBUG __nD.51942 => 1
  # DEBUG thisD.45635 => NULL
  # DEBUG __iD.45634 => NULL
  # DEBUG thisD.45630 => NULL
  # VUSE <.MEM_17>
  _44 = MEM[(intD.9 &)_2 + 18446744073709551612];
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 1415, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _1 = PHI <_9(6), _44(18), _39(12)>
  # .MEM_10 = PHI <.MEM_4(D)(6), .MEM_17(18), .MEM_17(12)>
  # VUSE <.MEM_10>
  return _1;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_5(D)->D.36118._nodes
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_5(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for MEM[(int * *)this_5(D) + 16B]
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_5(D) + 16B]
Creating dr for MEM[(int * *)this_5(D) + 24B]
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_5(D) + 24B]
Creating dr for *_15
analyze_innermost: success.
	base_address: _15
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_15
Creating dr for this_5(D)->_max_val
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: *this_5(D)
	Access function 0: 512
Creating dr for MEM[(int * *)this_5(D) + 40B]
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_5(D) + 40B]
Creating dr for *_54
analyze_innermost: success.
	base_address: _54
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_54
Creating dr for *_35
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _54
	offset from base address: 0
	constant offset from base address: 4
	step: 4
	aligned to: 256
	base_object: *_54
	Access function 0: {4, +, 4}_2
Creating dr for *_35
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _54
	offset from base address: 0
	constant offset from base address: 4
	step: 4
	aligned to: 256
	base_object: *_54
	Access function 0: {4, +, 4}_2
Creating dr for *_38
analyze_innermost: success.
	base_address: _7 + _61
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_38
Creating dr for MEM[(int * const &)this_5(D) + 48]
analyze_innermost: success.
	base_address: this_5(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(int * const &)this_5(D) + 48]
Creating dr for MEM[(int &)_42 + 18446744073709551612]
analyze_innermost: success.
	base_address: _42
	offset from base address: 0
	constant offset from base address: -4(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(int &)_42 + 18446744073709551612]
Applying pattern match.pd:822, generic-match.c:7035
Creating dr for MEM[(int &)_2 + 18446744073709551612]
analyze_innermost: success.
	base_address: _2
	offset from base address: 0
	constant offset from base address: -4(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(int &)_2 + 18446744073709551612]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:12)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:22, LOOPS:1, CONDITIONS:8, STMTS:124)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    if (source_3(D) < 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_5 })
  {
    <bb 3>:
    # VUSE <.MEM_4(D)>
    _6 = this_5(D)->D.36118._nodes;
    if (source_3(D) >= _6)
      goto <bb 4>;
    else
      goto <bb 5>;

  }
  bb_4 (preds = {bb_3 bb_2 }, succs = {})
  {
    <bb 4>:
    # .MEM_14 = VDEF <.MEM_4(D)>
    __assert_fail ("(source >= 0) && (source < _nodes)", "traffic.cpp", 508, &__PRETTY_FUNCTION__);

  }
  bb_5 (preds = {bb_3 }, succs = {bb_6 bb_7 })
  {
    <bb 5>:
    # DEBUG D#120 => &this_5(D)->_hotspots
    # VUSE <.MEM_4(D)>
    _15 = MEM[(int * *)this_5(D) + 16B];
    # DEBUG D#99 => D#120
    # VUSE <.MEM_4(D)>
    _16 = MEM[(int * *)this_5(D) + 24B];
    # DEBUG D#99 => D#120
    # DEBUG this => D#99
    # DEBUG this => D#99
    _13 = (long int) _16;
    _12 = (long int) _15;
    _11 = _13 - _12;
    _8 = _11 /[ex] 4;
    if (_8 == 1)
      goto <bb 6>;
    else
      goto <bb 7>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_19 })
  {
    <bb 6>:
    # DEBUG D#121 => &this_5(D)->_hotspots
    # DEBUG D#100 => D#121
    # DEBUG __n => 0
    # DEBUG this => D#100
    # VUSE <.MEM_4(D)>
    _9 = *_15;
    goto <bb 19>;

  }
  bb_7 (preds = {bb_5 }, succs = {bb_8 bb_16 })
  {
    <bb 7>:
    # DEBUG D#127 => source_3(D)
    # DEBUG this => this_5(D)
    # DEBUG D#128 => D#127
    # DEBUG source => D#128
    # VUSE <.MEM_4(D)>
    _18 = this_5(D)->_max_val;
    # DEBUG max => _18
    # .MEM_17 = VDEF <.MEM_4(D)>
    _19 = ran_next ();
    _20 = _18 + 1;
    _21 = (long int) _20;
    _22 = _19 % _21;
    pct_23 = (int) _22;
    # DEBUG pct => pct_23
    # DEBUG i => 0
    # DEBUG i => 0
    # DEBUG pct => pct_23
    # DEBUG D#122 => &this_5(D)->_hotspots
    # VUSE <.MEM_17>
    _7 = MEM[(int * *)this_5(D) + 16B];
    # DEBUG D#99 => D#122
    # VUSE <.MEM_17>
    _2 = MEM[(int * *)this_5(D) + 24B];
    # DEBUG D#99 => D#122
    # DEBUG this => D#99
    # DEBUG this => D#99
    _52 = (long int) _2;
    _51 = (long int) _7;
    _50 = _52 - _51;
    _49 = _50 /[ex] 4;
    _48 = (size_type) _49;
    _53 = _48 + 18446744073709551615;
    if (_53 != 0)
      goto <bb 8>;
    else
      goto <bb 16>;

  }
  bb_8 (preds = {bb_7 }, succs = {bb_12 bb_13 })
  {
    <bb 8>:
    # DEBUG D#123 => &this_5(D)->_rates
    # VUSE <.MEM_17>
    _54 = MEM[(int * *)this_5(D) + 40B];
    # DEBUG D#100 => D#123
    # DEBUG __n => 0
    # DEBUG this => D#100
    # VUSE <.MEM_17>
    limit_57 = *_54;
    # DEBUG limit => limit_57
    if (pct_23 < limit_57)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_11 (preds = {bb_9 }, succs = {bb_12 })
  {
    <bb 11>:
    # _56 = PHI <_34(9)>

  }
  bb_12 (preds = {bb_11 bb_8 }, succs = {bb_20 })
  {
    <bb 12>:
    # _61 = PHI <_56(11), 0(8)>

  }
  bb_20 (preds = {bb_12 }, succs = {bb_19 })
  {
    <bb 20>:
    # DEBUG D#124 => &this_5(D)->_hotspots
    # DEBUG D#100 => D#124
    # DEBUG __n => 0
    # DEBUG this => D#100
    _38 = _7 + _61;
    # VUSE <.MEM_17>
    _39 = *_38;
    goto <bb 19>;

  }
  bb_13 (preds = {bb_8 }, succs = {bb_14 })
  {
    <bb 13>:

  }
  bb_15 (preds = {bb_14 }, succs = {bb_16 })
  {
    <bb 15>:
    # pct_55 = PHI <pct_40(14)>

  }
  bb_16 (preds = {bb_15 bb_7 }, succs = {bb_17 bb_18 })
  {
    <bb 16>:
    # pct_64 = PHI <pct_55(15), pct_23(7)>
    # DEBUG D#125 => &this_5(D)->_rates
    # DEBUG this => D#125
    # DEBUG this => D#125
    # DEBUG D#118 => &D#125->D.34940._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#118
    # VUSE <.MEM_17>
    _42 = MEM[(int * const &)this_5(D) + 48];
    # DEBUG this => NULL
    # DEBUG __n => 1
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG this => NULL
    # VUSE <.MEM_17>
    _43 = MEM[(int &)_42 + 18446744073709551612];
    if (_43 <= pct_64)
      goto <bb 17>;
    else
      goto <bb 18>;

  }
  bb_17 (preds = {bb_16 }, succs = {})
  {
    <bb 17>:
    # .MEM_46 = VDEF <.MEM_17>
    __assert_fail ("_rates.back() > pct", "traffic.cpp", 524, &__PRETTY_FUNCTION__);

  }
  bb_18 (preds = {bb_16 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#126 => &this_5(D)->_hotspots
    # DEBUG this => D#126
    # DEBUG this => D#126
    # DEBUG D#118 => &D#126->D.34940._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#118
    # DEBUG this => NULL
    # DEBUG __n => 1
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG this => NULL
    # VUSE <.MEM_17>
    _44 = MEM[(int &)_2 + 18446744073709551612];

  }
  bb_19 (preds = {bb_6 bb_18 bb_20 }, succs = {bb_21 })
  {
    <bb 19>:
    # _1 = PHI <_9(6), _44(18), _39(20)>
    # .MEM_10 = PHI <.MEM_4(D)(6), .MEM_17(18), .MEM_17(20)>

  }
  bb_21 (preds = {bb_19 }, succs = {bb_1 })
  {
    <bb 21>:
    # VUSE <.MEM_10>
    return _1;

  }
  loop_2 (header = 14, latch = 10, niter = scev_not_known, upper_bound = 4611686018427387903)
  {
    bb_9 (preds = {bb_14 }, succs = {bb_11 bb_10 })
    {
      <bb 9>:
      # DEBUG D#123 => &this_5(D)->_rates
      # DEBUG D#100 => D#123
      # DEBUG __n => i_41
      # DEBUG this => D#100
      _34 = i_41 * 4;
      _35 = _54 + _34;
      # VUSE <.MEM_17>
      limit_36 = *_35;
      # DEBUG limit => limit_36
      if (limit_36 > pct_40)
        goto <bb 11>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_14 })
    {
      <bb 10>:
      goto <bb 14>;

    }
    bb_14 (preds = {bb_13 bb_10 }, succs = {bb_9 bb_15 })
    {
      <bb 14>:
      # i_60 = PHI <0(13), i_41(10)>
      # limit_62 = PHI <limit_57(13), limit_36(10)>
      # pct_63 = PHI <pct_23(13), pct_40(10)>
      # DEBUG i => i_60
      # DEBUG pct => pct_63
      # DEBUG D#122 => &this_5(D)->_hotspots
      # DEBUG D#99 => D#122
      # DEBUG this => D#99
      # DEBUG this => D#99
      # DEBUG D#123 => &this_5(D)->_rates
      # DEBUG D#100 => D#123
      # DEBUG __n => i_60
      # DEBUG this => D#100
      # DEBUG limit => limit_62
      pct_40 = pct_63 - limit_62;
      # DEBUG pct => pct_40
      i_41 = i_60 + 1;
      # DEBUG i => i_41
      # DEBUG i => i_41
      # DEBUG pct => pct_40
      # DEBUG D#122 => &this_5(D)->_hotspots
      # DEBUG D#99 => D#122
      # DEBUG D#99 => D#122
      # DEBUG this => D#99
      # DEBUG this => D#99
      if (i_41 < _53)
        goto <bb 9>;
      else
        goto <bb 15>;

    }
  }
}

Pass statistics:
----------------

virtual int HotSpotTrafficPattern::dest(int) (struct HotSpotTrafficPatternD.36083 * const thisD.39056, intD.9 sourceD.39054)
{
  intD.9 pctD.51936;
  size_tD.2853 iD.51955;
  const intD.9 limitD.51958;
  intD.9 D.51963;
  static const charD.10 _ZZN21HotSpotTrafficPattern4destEiE19__PRETTY_FUNCTION__D.39058[45] = "virtual int HotSpotTrafficPattern::dest(int)";
  intD.9 _1;
  intD.9 * const _2;
  intD.9 _6;
  intD.9 * const _7;
  long intD.12 _8;
  intD.9 _9;
  long intD.12 _11;
  long intD.12 _12;
  long intD.12 _13;
  intD.9 * const _15;
  intD.9 * const _16;
  intD.9 _18;
  long intD.12 _19;
  intD.9 _20;
  long intD.12 _21;
  long intD.12 _22;
  long unsigned intD.14 _34;
  intD.9 & _35;
  intD.9 & _38;
  intD.9 _39;
  intD.9 * _42;
  intD.9 _43;
  intD.9 _44;
  size_typeD.34516 _48;
  long intD.12 _49;
  long intD.12 _50;
  long intD.12 _51;
  long intD.12 _52;
  long unsigned intD.14 _53;
  intD.9 * _54;
  long unsigned intD.14 _56;
  long unsigned intD.14 _61;

;;   basic block 2, loop depth 0, count 0, freq 1416, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (source_3(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1416, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_4(D)>
  _6 = this_5(D)->D.36118._nodesD.33855;
  if (source_3(D) >= _6)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_14 = VDEF <.MEM_4(D)>
  # USE = nonlocal { D.39058 } (nonlocal, escaped)
  # CLB = nonlocal { D.39058 } (nonlocal, escaped)
  __assert_failD.29068 ("(source >= 0) && (source < _nodes)", "traffic.cpp", 508, &_ZZN21HotSpotTrafficPattern4destEiE19__PRETTY_FUNCTION__D.39058);
;;    succ:      

;;   basic block 5, loop depth 0, count 0, freq 1415, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#120ptD.0 => &this_5(D)->_hotspotsD.36085
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _15 = MEM[(intD.9 * *)this_5(D) + 16B];
  # DEBUG D#99ptD.0 => D#120ptD.0
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _16 = MEM[(intD.9 * *)this_5(D) + 24B];
  # DEBUG D#99ptD.0 => D#120ptD.0
  # DEBUG thisD.45654 => D#99ptD.0
  # DEBUG thisD.45653 => D#99ptD.0
  _13 = (long intD.12) _16;
  _12 = (long intD.12) _15;
  _11 = _13 - _12;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _8 = _11 /[ex] 4;
  if (_8 == 1)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [37.8%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [62.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 536, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [37.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#121ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG D#100ptD.0 => D#121ptD.0
  # DEBUG __nD.45657 => 0
  # DEBUG thisD.45658 => D#100ptD.0
  # VUSE <.MEM_4(D)>
  _9 = *_15;
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 880, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [62.2%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#127ptD.0 => source_3(D)
  # DEBUG thisD.51935 => this_5(D)
  # DEBUG D#128ptD.0 => D#127ptD.0
  # DEBUG sourceD.51937 => D#128ptD.0
  # VUSE <.MEM_4(D)>
  _18 = this_5(D)->_max_valD.36087;
  # DEBUG maxD.51950 => _18
  # .MEM_17 = VDEF <.MEM_4(D)>
  # USE = nonlocal { D.39058 } (nonlocal, escaped)
  # CLB = nonlocal { D.39058 } (nonlocal, escaped)
  _19 = _Z8ran_nextvD.25964 ();
  _20 = _18 + 1;
  # RANGE [-2147483648, 2147483647]
  _21 = (long intD.12) _20;
  _22 = _19 % _21;
  pct_23 = (intD.9) _22;
  # DEBUG pctD.51936 => pct_23
  # DEBUG iD.51955 => 0
  # DEBUG iD.51955 => 0
  # DEBUG pctD.51936 => pct_23
  # DEBUG D#122ptD.0 => &this_5(D)->_hotspotsD.36085
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _7 = MEM[(intD.9 * *)this_5(D) + 16B];
  # DEBUG D#99ptD.0 => D#122ptD.0
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _2 = MEM[(intD.9 * *)this_5(D) + 24B];
  # DEBUG D#99ptD.0 => D#122ptD.0
  # DEBUG thisD.51956 => D#99ptD.0
  # DEBUG thisD.51957 => D#99ptD.0
  _52 = (long intD.12) _2;
  _51 = (long intD.12) _7;
  _50 = _52 - _51;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _49 = _50 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _48 = (size_typeD.34516) _49;
  # RANGE ~[2305843009213693951, 16140901064495857662]
  _53 = _48 + 18446744073709551615;
  if (_53 != 0)
    goto <bb 8>;
  else
    goto <bb 16>;
;;    succ:       8 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 840, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#123ptD.0 => &this_5(D)->_ratesD.36086
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _54 = MEM[(intD.9 * *)this_5(D) + 40B];
  # DEBUG D#100ptD.0 => D#123ptD.0
  # DEBUG __nD.51962 => 0
  # DEBUG thisD.51961 => D#100ptD.0
  # VUSE <.MEM_17>
  limit_57 = *_54;
  # DEBUG limitD.51958 => limit_57
  if (pct_23 < limit_57)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 8710, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       14 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#123ptD.0 => &this_5(D)->_ratesD.36086
  # DEBUG D#100ptD.0 => D#123ptD.0
  # DEBUG __nD.51962 => i_41
  # DEBUG thisD.51961 => D#100ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _34 = i_41 * 4;
  # PT = nonlocal escaped 
  _35 = _54 + _34;
  # VUSE <.MEM_17>
  limit_36 = *_35;
  # DEBUG limitD.51958 => limit_36
  if (limit_36 > pct_40)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 8318, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 392, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       9 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  # _56 = PHI <_34(9)>
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 11, next block 20, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  # _61 = PHI <_56(11), 0(8)>
;;    succ:       20 [100.0%]  (FALLTHRU)

;;   basic block 20, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG D#124ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG D#100ptD.0 => D#124ptD.0
  # DEBUG __nD.51960 => 0
  # DEBUG thisD.51959 => D#100ptD.0
  # PT = nonlocal escaped 
  _38 = _7 + _61;
  # VUSE <.MEM_17>
  _39 = *_38;
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 802, maybe hot
;;    prev block 20, next block 14, flags: (NEW)
;;    pred:       8 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # i_60 = PHI <0(13), i_41(10)>
  # limit_62 = PHI <limit_57(13), limit_36(10)>
  # pct_63 = PHI <pct_23(13), pct_40(10)>
  # DEBUG iD.51955 => i_60
  # DEBUG pctD.51936 => pct_63
  # DEBUG D#122ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG D#99ptD.0 => D#122ptD.0
  # DEBUG thisD.51956 => D#99ptD.0
  # DEBUG thisD.51957 => D#99ptD.0
  # DEBUG D#123ptD.0 => &this_5(D)->_ratesD.36086
  # DEBUG D#100ptD.0 => D#123ptD.0
  # DEBUG __nD.51962 => i_60
  # DEBUG thisD.51961 => D#100ptD.0
  # DEBUG limitD.51958 => limit_62
  # RANGE [0, 2147483647] NONZERO 2147483647
  pct_40 = pct_63 - limit_62;
  # DEBUG pctD.51936 => pct_40
  # RANGE [0, 18446744073709551615]
  i_41 = i_60 + 1;
  # DEBUG iD.51955 => i_41
  # DEBUG iD.51955 => i_41
  # DEBUG pctD.51936 => pct_40
  # DEBUG D#122ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG D#99ptD.0 => D#122ptD.0
  # DEBUG D#99ptD.0 => D#122ptD.0
  # DEBUG thisD.51956 => D#99ptD.0
  # DEBUG thisD.51957 => D#99ptD.0
  if (i_41 < _53)
    goto <bb 9>;
  else
    goto <bb 15>;
;;    succ:       9 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 410, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # pct_55 = PHI <pct_40(14)>
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # pct_64 = PHI <pct_55(15), pct_23(7)>
  # DEBUG D#125ptD.0 => &this_5(D)->_ratesD.36086
  # DEBUG thisD.51944 => D#125ptD.0
  # DEBUG thisD.51945 => D#125ptD.0
  # DEBUG D#118ptD.0 => &D#125ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.51947 => NULL
  # DEBUG __iD.51946 => D#118ptD.0
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _42 = MEM[(intD.9 * const &)this_5(D) + 48];
  # DEBUG thisD.51949 => NULL
  # DEBUG __nD.51948 => 1
  # DEBUG thisD.45635 => NULL
  # DEBUG __iD.45634 => NULL
  # DEBUG thisD.45630 => NULL
  # VUSE <.MEM_17>
  _43 = MEM[(intD.9 &)_42 + 18446744073709551612];
  if (_43 <= pct_64)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_46 = VDEF <.MEM_17>
  # USE = nonlocal { D.39058 } (nonlocal, escaped)
  # CLB = nonlocal { D.39058 } (nonlocal, escaped)
  __assert_failD.29068 ("_rates.back() > pct", "traffic.cpp", 524, &_ZZN21HotSpotTrafficPattern4destEiE19__PRETTY_FUNCTION__D.39058);
;;    succ:      

;;   basic block 18, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#126ptD.0 => &this_5(D)->_hotspotsD.36085
  # DEBUG thisD.51938 => D#126ptD.0
  # DEBUG thisD.51939 => D#126ptD.0
  # DEBUG D#118ptD.0 => &D#126ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.51941 => NULL
  # DEBUG __iD.51940 => D#118ptD.0
  # DEBUG thisD.51943 => NULL
  # DEBUG __nD.51942 => 1
  # DEBUG thisD.45635 => NULL
  # DEBUG __iD.45634 => NULL
  # DEBUG thisD.45630 => NULL
  # VUSE <.MEM_17>
  _44 = MEM[(intD.9 &)_2 + 18446744073709551612];
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 1415, maybe hot
;;    prev block 18, next block 21, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _1 = PHI <_9(6), _44(18), _39(20)>
  # .MEM_10 = PHI <.MEM_4(D)(6), .MEM_17(18), .MEM_17(20)>
;;    succ:       21 [100.0%]  (FALLTHRU)

;;   basic block 21, loop depth 0, count 0, freq 1415, maybe hot
;;    prev block 19, next block 1, flags: (NEW)
;;    pred:       19 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_10>
  return _1;
;;    succ:       EXIT [100.0%] 

}



;; Function TransposeTrafficPattern::TransposeTrafficPattern(int) (_ZN23TransposeTrafficPatternC2Ei, funcdef_no=1766, decl_uid=34008, cgraph_uid=436, symbol_order=437)


Pass statistics:
----------------

TransposeTrafficPattern::TransposeTrafficPattern(int) (struct TransposeTrafficPatternD.33984 * const thisD.34009, intD.9 nodesD.34010)
Eh tree:
   3 cleanup land:{4,<L8>},{3,<L7>},{2,<L9>}
   1 cleanup land:{6,<L11>},{5,<L10>},{1,<L12>}
{
  boolD.2757 this___shift_lsm.859D.52158;
  intD.9 this___shift_lsm.858D.52157;
  intD.9 _13;
  unsigned int _16;
  unsigned int _17;
  intD.9 pretmp_24;
  intD.9 prephitmp_25;
  intD.9 prephitmp_26;
  intD.9 _27;
  intD.9 _30;
  intD.9 _31;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#577ptD.0 => &this_4(D)->D.34011
  # DEBUG thisD.52134 => D#577ptD.0
  # DEBUG nodesD.52135 => nodes_7(D)
  # DEBUG D#69ptD.0 => &D#577ptD.0->D.33950
  # DEBUG thisD.52145 => D#69ptD.0
  # DEBUG nodesD.52144 => nodes_7(D)
  # DEBUG D#66ptD.0 => &D#69ptD.0->D.33923
  # DEBUG thisD.52147 => D#66ptD.0
  # DEBUG nodesD.52146 => nodes_7(D)
  # .MEM_32 = VDEF <.MEM_6(D)>
  MEM[(struct TrafficPatternD.33853 *)this_4(D)]._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_33 = VDEF <.MEM_32>
  MEM[(struct TrafficPatternD.33853 *)this_4(D)]._nodesD.33855 = nodes_7(D);
  if (nodes_7(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_7(D)
  # .MEM_44 = VDEF <.MEM_33>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_35 = VDEF <.MEM_33>
  MEM[(struct BitPermutationTrafficPatternD.33927 *)this_4(D)].D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV28BitPermutationTrafficPatternD.33952 + 16B];
  # RANGE [-2147483647, -1]
  _30 = -nodes_7(D);
  # RANGE [0, 2147483647] NONZERO 2147483647
  _31 = nodes_7(D) & _30;
  if (nodes_7(D) != _31)
    goto <bb 5>;
  else
    goto <bb 13>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __outD.52143 => &_ZSt4coutD.22587
  # DEBUG __sD.52142 => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __sD.45168 => "Error: Bit permutation traffic patterns require the number of "
  [LP 3] # .MEM_36 = VDEF <.MEM_35>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Bit permutation traffic patterns require the number of ", 62);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.52141 => &_ZSt4coutD.22587
  # DEBUG __sD.52140 => "nodes to be a power of two."
  # DEBUG __sD.45172 => "nodes to be a power of two."
  [LP 4] # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "nodes to be a power of two.", 27);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L8>: [LP 4]
  goto <bb 12> (<L6>);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.52139 => &_ZSt4coutD.22587
  # DEBUG __pfD.52138 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 2] # .MEM_38 = VDEF <.MEM_37>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (&_ZSt4coutD.22587);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L9>: [LP 2]
  goto <bb 12> (<L6>);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_38(8), .MEM_23(21)>
  # .MEM_39 = VDEF <.MEM_49>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  exitD.1322 (-1);
;;    succ:      

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L7>: [LP 3]
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_36(11), .MEM_37(7), .MEM_38(9)>
<L6>:
  # DEBUG D#68ptD.0 => &D#577ptD.0->D.33950
  # DEBUG thisD.52136 => D#68ptD.0
  # DEBUG D#67ptD.0 => &D#68ptD.0->D.33923
  # DEBUG thisD.52137 => D#67ptD.0
  # .MEM_43 = VDEF <.MEM_8>
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_9 = VDEF <.MEM_35>
  this_4(D)->D.34011.D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV23TransposeTrafficPatternD.34014 + 16B];
  # .MEM_10 = VDEF <.MEM_9>
  this_4(D)->_shiftD.33986 = 0;
  # DEBUG nodesD.34010 => nodes_7(D)
  # RANGE [0, 1073741823] NONZERO 1073741823
  nodes_47 = nodes_7(D) >> 1;
  # DEBUG nodesD.34010 => nodes_47
  if (nodes_47 != 0)
    goto <bb 14>;
  else
    goto <bb 24>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_50 = PHI <.MEM_10(14), .MEM_50(16)>
  # RANGE [0, 1073741823] NONZERO 1073741823
  # nodes_48 = PHI <nodes_47(14), nodes_11(16)>
  # prephitmp_26 = PHI <0(14), _13(16)>
  # DEBUG nodesD.34010 => nodes_48
  _13 = prephitmp_26 + 1;
  # DEBUG nodesD.34010 => nodes_48
  # RANGE [0, 1073741823] NONZERO 536870911
  nodes_11 = nodes_48 >> 1;
  # DEBUG nodesD.34010 => nodes_11
  if (nodes_11 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # _27 = PHI <_13(15)>
  # this___shift_lsm.858_41 = PHI <_13(15)>
  # .MEM_40 = VDEF <.MEM_50>
  this_4(D)->_shiftD.33986 = this___shift_lsm.858_41;
  # RANGE [0, 4294967295]
  _16 = (unsigned int) _27;
  # RANGE [0, 1] NONZERO 1
  _17 = _16 & 1;
  if (_17 != 0)
    goto <bb 18>;
  else
    goto <bb 23>;
;;    succ:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __outD.45224 => &_ZSt4coutD.22587
  # DEBUG __sD.45225 => "Error: Transpose traffic pattern requires the number of nodes to "
  # DEBUG __sD.45226 => "Error: Transpose traffic pattern requires the number of nodes to "
  [LP 5] # .MEM_21 = VDEF <.MEM_40>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Transpose traffic pattern requires the number of nodes to ", 65);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 (EH,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.45228 => &_ZSt4coutD.22587
  # DEBUG __sD.45229 => "be an even power of two."
  # DEBUG __sD.45230 => "be an even power of two."
  [LP 6] # .MEM_22 = VDEF <.MEM_21>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "be an even power of two.", 24);
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L11>: [LP 6]
  goto <bb 26> (<L5>);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.45232 => &_ZSt4coutD.22587
  # DEBUG __pfD.45233 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 1] # .MEM_23 = VDEF <.MEM_22>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (&_ZSt4coutD.22587);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 (EH,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       21 (EH,EXECUTABLE)
<L12>: [LP 1]
  goto <bb 26> (<L5>);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       17 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_24 = _27 >> 1;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_40(23), .MEM_10(13)>
  # RANGE [-1073741824, 1073741823]
  # prephitmp_25 = PHI <pretmp_24(23), 0(13)>
  # .MEM_19 = VDEF <.MEM_53>
  this_4(D)->_shiftD.33986 = prephitmp_25;
  # VUSE <.MEM_19>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       18 (EH,EXECUTABLE)
<L10>: [LP 5]
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 1, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_21(25), .MEM_22(20), .MEM_23(22)>
<L5>:
  # DEBUG D#75ptD.0 => &this_4(D)->D.34011
  # DEBUG thisD.45235 => D#75ptD.0
  # DEBUG D#70ptD.0 => &D#75ptD.0->D.33950
  # DEBUG thisD.45236 => D#70ptD.0
  # DEBUG D#67ptD.0 => &D#70ptD.0->D.33923
  # DEBUG thisD.45237 => D#67ptD.0
  # .MEM_29 = VDEF <.MEM_3>
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


Creating dr for MEM[(struct TrafficPattern *)this_4(D)]._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct TrafficPattern *)this_4(D)]
	Access function 0: 0
Creating dr for MEM[(struct TrafficPattern *)this_4(D)]._nodes
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct TrafficPattern *)this_4(D)]
	Access function 0: 64
Creating dr for MEM[(struct BitPermutationTrafficPattern *)this_4(D)].D.33950.D.33923._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct BitPermutationTrafficPattern *)this_4(D)]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34011.D.33950.D.33923._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for this_4(D)->_shift
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 96
Creating dr for this_4(D)->_shift
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 96
Creating dr for this_4(D)->_shift
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 96

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:29, LOOPS:1, CONDITIONS:11, STMTS:83)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#577 => &this_4(D)->D.34011
    # DEBUG this => D#577
    # DEBUG nodes => nodes_7(D)
    # DEBUG D#69 => &D#577->D.33950
    # DEBUG this => D#69
    # DEBUG nodes => nodes_7(D)
    # DEBUG D#66 => &D#69->D.33923
    # DEBUG this => D#66
    # DEBUG nodes => nodes_7(D)
    # .MEM_32 = VDEF <.MEM_6(D)>
    MEM[(struct TrafficPattern *)this_4(D)]._vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
    # .MEM_33 = VDEF <.MEM_32>
    MEM[(struct TrafficPattern *)this_4(D)]._nodes = nodes_7(D);
    if (nodes_7(D) <= 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {})
  {
    <bb 3>:
    # DEBUG D#62 => D#66
    # DEBUG D#63 => nodes_7(D)
    # .MEM_44 = VDEF <.MEM_33>
    TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_13 })
  {
    <bb 4>:
    # .MEM_35 = VDEF <.MEM_33>
    MEM[(struct BitPermutationTrafficPattern *)this_4(D)].D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV28BitPermutationTrafficPattern + 16B];
    _30 = -nodes_7(D);
    _31 = nodes_7(D) & _30;
    if (nodes_7(D) != _31)
      goto <bb 5>;
    else
      goto <bb 13>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_11 })
  {
    <bb 5>:
    # DEBUG __out => &cout
    # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
    # DEBUG __s => "Error: Bit permutation traffic patterns require the number of "
    # .MEM_36 = VDEF <.MEM_35>
    std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Bit permutation traffic patterns require the number of ", 62);

  }
  bb_6 (preds = {bb_5 }, succs = {bb_8 bb_7 })
  {
    <bb 6>:
    # DEBUG __out => &cout
    # DEBUG __s => "nodes to be a power of two."
    # DEBUG __s => "nodes to be a power of two."
    # .MEM_37 = VDEF <.MEM_36>
    std::__ostream_insert<char, std::char_traits<char> > (&cout, "nodes to be a power of two.", 27);
    goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_12 })
  {
  <L8>:
    goto <bb 12> (<L6>);

  }
  bb_8 (preds = {bb_6 }, succs = {bb_10 bb_9 })
  {
    <bb 8>:
    # DEBUG this => &cout
    # DEBUG __pf => endl
    # .MEM_38 = VDEF <.MEM_37>
    std::endl<char, std::char_traits<char> > (&cout);
    goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_12 })
  {
  <L9>:
    goto <bb 12> (<L6>);

  }
  bb_10 (preds = {bb_8 bb_21 }, succs = {})
  {
    <bb 10>:
    # .MEM_49 = PHI <.MEM_38(8), .MEM_23(21)>
    # .MEM_39 = VDEF <.MEM_49>
    exit (-1);

  }
  bb_11 (preds = {bb_5 }, succs = {bb_12 })
  {
  <L7>:

  }
  bb_12 (preds = {bb_11 bb_7 bb_9 }, succs = {})
  {
    # .MEM_8 = PHI <.MEM_36(11), .MEM_37(7), .MEM_38(9)>
  <L6>:
    # DEBUG D#68 => &D#577->D.33950
    # DEBUG this => D#68
    # DEBUG D#67 => &D#68->D.33923
    # DEBUG this => D#67
    # .MEM_43 = VDEF <.MEM_8>
    MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
    resx 3

  }
  bb_13 (preds = {bb_4 }, succs = {bb_14 bb_24 })
  {
    <bb 13>:
    # .MEM_9 = VDEF <.MEM_35>
    this_4(D)->D.34011.D.33950.D.33923._vptr.TrafficPattern = &MEM[(void *)&_ZTV23TransposeTrafficPattern + 16B];
    # .MEM_10 = VDEF <.MEM_9>
    this_4(D)->_shift = 0;
    # DEBUG nodes => nodes_7(D)
    nodes_47 = nodes_7(D) >> 1;
    # DEBUG nodes => nodes_47
    if (nodes_47 != 0)
      goto <bb 14>;
    else
      goto <bb 24>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:

  }
  bb_17 (preds = {bb_15 }, succs = {bb_27 })
  {
    <bb 17>:
    # _27 = PHI <_13(15)>

  }
  bb_27 (preds = {bb_17 }, succs = {bb_18 bb_23 })
  {
    <bb 27>:
    # .MEM_40 = VDEF <.MEM_50>
    this_4(D)->_shift = _27;
    _16 = (unsigned int) _27;
    _17 = _16 & 1;
    if (_17 != 0)
      goto <bb 18>;
    else
      goto <bb 23>;

  }
  bb_18 (preds = {bb_27 }, succs = {bb_19 bb_25 })
  {
    <bb 18>:
    # DEBUG __out => &cout
    # DEBUG __s => "Error: Transpose traffic pattern requires the number of nodes to "
    # DEBUG __s => "Error: Transpose traffic pattern requires the number of nodes to "
    # .MEM_21 = VDEF <.MEM_40>
    std::__ostream_insert<char, std::char_traits<char> > (&cout, "Error: Transpose traffic pattern requires the number of nodes to ", 65);

  }
  bb_19 (preds = {bb_18 }, succs = {bb_21 bb_20 })
  {
    <bb 19>:
    # DEBUG __out => &cout
    # DEBUG __s => "be an even power of two."
    # DEBUG __s => "be an even power of two."
    # .MEM_22 = VDEF <.MEM_21>
    std::__ostream_insert<char, std::char_traits<char> > (&cout, "be an even power of two.", 24);
    goto <bb 21>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_26 })
  {
  <L11>:
    goto <bb 26> (<L5>);

  }
  bb_21 (preds = {bb_19 }, succs = {bb_10 bb_22 })
  {
    <bb 21>:
    # DEBUG this => &cout
    # DEBUG __pf => endl
    # .MEM_23 = VDEF <.MEM_22>
    std::endl<char, std::char_traits<char> > (&cout);
    goto <bb 10>;

  }
  bb_22 (preds = {bb_21 }, succs = {bb_26 })
  {
  <L12>:
    goto <bb 26> (<L5>);

  }
  bb_23 (preds = {bb_27 }, succs = {bb_24 })
  {
    <bb 23>:
    pretmp_24 = _27 >> 1;

  }
  bb_24 (preds = {bb_23 bb_13 }, succs = {bb_28 })
  {
    <bb 24>:
    # .MEM_53 = PHI <.MEM_40(23), .MEM_10(13)>
    # prephitmp_25 = PHI <pretmp_24(23), 0(13)>

  }
  bb_28 (preds = {bb_24 }, succs = {bb_1 })
  {
    <bb 28>:
    # .MEM_19 = VDEF <.MEM_53>
    this_4(D)->_shift = prephitmp_25;
    # VUSE <.MEM_19>
    return;

  }
  bb_25 (preds = {bb_18 }, succs = {bb_26 })
  {
  <L10>:

  }
  bb_26 (preds = {bb_25 bb_20 bb_22 }, succs = {})
  {
    # .MEM_3 = PHI <.MEM_21(25), .MEM_22(20), .MEM_23(22)>
  <L5>:
    # DEBUG D#75 => &this_4(D)->D.34011
    # DEBUG this => D#75
    # DEBUG D#70 => &D#75->D.33950
    # DEBUG this => D#70
    # DEBUG D#67 => &D#70->D.33923
    # DEBUG this => D#67
    # .MEM_29 = VDEF <.MEM_3>
    MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
    resx 1

  }
  loop_1 (header = 15, latch = 16, niter = , upper_bound = 2147483646)
  {
    bb_15 (preds = {bb_14 bb_16 }, succs = {bb_16 bb_17 })
    {
      <bb 15>:
      # .MEM_50 = PHI <.MEM_10(14), .MEM_50(16)>
      # nodes_48 = PHI <nodes_47(14), nodes_11(16)>
      # prephitmp_26 = PHI <0(14), _13(16)>
      # DEBUG nodes => nodes_48
      _13 = prephitmp_26 + 1;
      # DEBUG nodes => nodes_48
      nodes_11 = nodes_48 >> 1;
      # DEBUG nodes => nodes_11
      if (nodes_11 != 0)
        goto <bb 16>;
      else
        goto <bb 17>;

    }
    bb_16 (preds = {bb_15 }, succs = {bb_15 })
    {
      <bb 16>:
      goto <bb 15>;

    }
  }
}

Pass statistics:
----------------

TransposeTrafficPattern::TransposeTrafficPattern(int) (struct TransposeTrafficPatternD.33984 * const thisD.34009, intD.9 nodesD.34010)
Eh tree:
   3 cleanup land:{4,<L8>},{3,<L7>},{2,<L9>}
   1 cleanup land:{6,<L11>},{5,<L10>},{1,<L12>}
{
  boolD.2757 this___shift_lsm.859D.52158;
  intD.9 this___shift_lsm.858D.52157;
  intD.9 _13;
  unsigned int _16;
  unsigned int _17;
  intD.9 pretmp_24;
  intD.9 prephitmp_25;
  intD.9 prephitmp_26;
  intD.9 _27;
  intD.9 _30;
  intD.9 _31;

;;   basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#577ptD.0 => &this_4(D)->D.34011
  # DEBUG thisD.52134 => D#577ptD.0
  # DEBUG nodesD.52135 => nodes_7(D)
  # DEBUG D#69ptD.0 => &D#577ptD.0->D.33950
  # DEBUG thisD.52145 => D#69ptD.0
  # DEBUG nodesD.52144 => nodes_7(D)
  # DEBUG D#66ptD.0 => &D#69ptD.0->D.33923
  # DEBUG thisD.52147 => D#66ptD.0
  # DEBUG nodesD.52146 => nodes_7(D)
  # .MEM_32 = VDEF <.MEM_6(D)>
  MEM[(struct TrafficPatternD.33853 *)this_4(D)]._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_33 = VDEF <.MEM_32>
  MEM[(struct TrafficPatternD.33853 *)this_4(D)]._nodesD.33855 = nodes_7(D);
  if (nodes_7(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_7(D)
  # .MEM_44 = VDEF <.MEM_33>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_35 = VDEF <.MEM_33>
  MEM[(struct BitPermutationTrafficPatternD.33927 *)this_4(D)].D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV28BitPermutationTrafficPatternD.33952 + 16B];
  # RANGE [-2147483647, -1]
  _30 = -nodes_7(D);
  # RANGE [0, 2147483647] NONZERO 2147483647
  _31 = nodes_7(D) & _30;
  if (nodes_7(D) != _31)
    goto <bb 5>;
  else
    goto <bb 13>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __outD.52143 => &_ZSt4coutD.22587
  # DEBUG __sD.52142 => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __sD.45168 => "Error: Bit permutation traffic patterns require the number of "
  [LP 3] # .MEM_36 = VDEF <.MEM_35>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Bit permutation traffic patterns require the number of ", 62);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.52141 => &_ZSt4coutD.22587
  # DEBUG __sD.52140 => "nodes to be a power of two."
  # DEBUG __sD.45172 => "nodes to be a power of two."
  [LP 4] # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "nodes to be a power of two.", 27);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L8>: [LP 4]
  goto <bb 12> (<L6>);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.52139 => &_ZSt4coutD.22587
  # DEBUG __pfD.52138 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 2] # .MEM_38 = VDEF <.MEM_37>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (&_ZSt4coutD.22587);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L9>: [LP 2]
  goto <bb 12> (<L6>);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_38(8), .MEM_23(21)>
  # .MEM_39 = VDEF <.MEM_49>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  exitD.1322 (-1);
;;    succ:      

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L7>: [LP 3]
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_36(11), .MEM_37(7), .MEM_38(9)>
<L6>:
  # DEBUG D#68ptD.0 => &D#577ptD.0->D.33950
  # DEBUG thisD.52136 => D#68ptD.0
  # DEBUG D#67ptD.0 => &D#68ptD.0->D.33923
  # DEBUG thisD.52137 => D#67ptD.0
  # .MEM_43 = VDEF <.MEM_8>
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_9 = VDEF <.MEM_35>
  this_4(D)->D.34011.D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV23TransposeTrafficPatternD.34014 + 16B];
  # .MEM_10 = VDEF <.MEM_9>
  this_4(D)->_shiftD.33986 = 0;
  # DEBUG nodesD.34010 => nodes_7(D)
  # RANGE [0, 1073741823] NONZERO 1073741823
  nodes_47 = nodes_7(D) >> 1;
  # DEBUG nodesD.34010 => nodes_47
  if (nodes_47 != 0)
    goto <bb 14>;
  else
    goto <bb 24>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_50 = PHI <.MEM_10(14), .MEM_50(16)>
  # RANGE [0, 1073741823] NONZERO 1073741823
  # nodes_48 = PHI <nodes_47(14), nodes_11(16)>
  # prephitmp_26 = PHI <0(14), _13(16)>
  # DEBUG nodesD.34010 => nodes_48
  _13 = prephitmp_26 + 1;
  # DEBUG nodesD.34010 => nodes_48
  # RANGE [0, 1073741823] NONZERO 536870911
  nodes_11 = nodes_48 >> 1;
  # DEBUG nodesD.34010 => nodes_11
  if (nodes_11 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 16, next block 27, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # _27 = PHI <_13(15)>
;;    succ:       27 [100.0%]  (FALLTHRU)

;;   basic block 27, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 18, flags: (NEW)
;;    pred:       17 [100.0%]  (FALLTHRU)
  # .MEM_40 = VDEF <.MEM_50>
  this_4(D)->_shiftD.33986 = _27;
  # RANGE [0, 4294967295]
  _16 = (unsigned int) _27;
  # RANGE [0, 1] NONZERO 1
  _17 = _16 & 1;
  if (_17 != 0)
    goto <bb 18>;
  else
    goto <bb 23>;
;;    succ:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 27, next block 19, flags: (NEW, REACHABLE)
;;    pred:       27 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __outD.45224 => &_ZSt4coutD.22587
  # DEBUG __sD.45225 => "Error: Transpose traffic pattern requires the number of nodes to "
  # DEBUG __sD.45226 => "Error: Transpose traffic pattern requires the number of nodes to "
  [LP 5] # .MEM_21 = VDEF <.MEM_40>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Transpose traffic pattern requires the number of nodes to ", 65);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 (EH,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.45228 => &_ZSt4coutD.22587
  # DEBUG __sD.45229 => "be an even power of two."
  # DEBUG __sD.45230 => "be an even power of two."
  [LP 6] # .MEM_22 = VDEF <.MEM_21>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "be an even power of two.", 24);
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L11>: [LP 6]
  goto <bb 26> (<L5>);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.45232 => &_ZSt4coutD.22587
  # DEBUG __pfD.45233 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 1] # .MEM_23 = VDEF <.MEM_22>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.34014 } (nonlocal, escaped)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (&_ZSt4coutD.22587);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 (EH,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       21 (EH,EXECUTABLE)
<L12>: [LP 1]
  goto <bb 26> (<L5>);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       27 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_24 = _27 >> 1;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 23, next block 28, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_40(23), .MEM_10(13)>
  # RANGE [-1073741824, 1073741823]
  # prephitmp_25 = PHI <pretmp_24(23), 0(13)>
;;    succ:       28 [100.0%]  (FALLTHRU)

;;   basic block 28, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 24, next block 25, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU)
  # .MEM_19 = VDEF <.MEM_53>
  this_4(D)->_shiftD.33986 = prephitmp_25;
  # VUSE <.MEM_19>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 28, next block 26, flags: (NEW)
;;    pred:       18 (EH,EXECUTABLE)
<L10>: [LP 5]
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 1, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_21(25), .MEM_22(20), .MEM_23(22)>
<L5>:
  # DEBUG D#75ptD.0 => &this_4(D)->D.34011
  # DEBUG thisD.45235 => D#75ptD.0
  # DEBUG D#70ptD.0 => &D#75ptD.0->D.33950
  # DEBUG thisD.45236 => D#70ptD.0
  # DEBUG D#67ptD.0 => &D#70ptD.0->D.33923
  # DEBUG thisD.45237 => D#67ptD.0
  # .MEM_29 = VDEF <.MEM_3>
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}



;; Function void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE6resizeEmi, funcdef_no=1891, decl_uid=34605, cgraph_uid=561, symbol_order=562)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33797 * const thisD.34606, size_typeD.34516 __new_sizeD.34607, value_typeD.34503 __xD.34608)
{
  const long unsigned intD.14 D.52565;
  const size_typeD.34516 __lenD.52559;
  size_typeD.34516 D.52564;
  size_typeD.34516 __nD.52557;
  intD.9 * D.52555;
  const ptrdiff_tD.2819 _NumD.52545;
  intD.9 * D.52546;
  value_typeD.34503 __x_copyD.52314;
  const size_typeD.34516 __elems_afterD.52315;
  intD.9 * __new_finishD.52424;
  intD.9 * __firstD.52414;
  const ptrdiff_tD.2819 _NumD.52411;
  intD.9 * __firstD.52373;
  long unsigned intD.14 __nD.52319;
  intD.9 * __firstD.52320;
  const ptrdiff_tD.2819 _NumD.52517;
  const ptrdiff_tD.2819 _NumD.52483;
  intD.9 * __firstD.52433;
  intD.9 * const __positionD.52528;
  struct iteratorD.34508 __positionD.52311;
  size_typeD.34516 __nD.52312;
  struct iteratorD.34508 __positionD.50088;
  long intD.12 _5;
  long unsigned intD.14 _7;
  intD.9 * _8;
  intD.9 * const _9;
  long intD.12 _11;
  long intD.12 _12;
  long intD.12 _13;
  const ptrdiff_tD.2819 pretmp_15;
  long intD.12 pretmp_18;
  intD.9 * _19;
  long intD.12 _20;
  long intD.12 pretmp_21;
  long intD.12 _23;
  long intD.12 _24;
  long unsigned intD.14 _25;
  long unsigned intD.14 _28;
  long intD.12 prephitmp_31;
  boolD.2757 _32;
  long unsigned intD.14 prephitmp_35;
  long unsigned intD.14 pretmp_38;
  long unsigned intD.14 prephitmp_39;
  intD.9 * pretmp_40;
  long unsigned intD.14 _60;
  long unsigned intD.14 _71;
  intD.9 * pretmp_73;
  long unsigned intD.14 _74;
  intD.9 * _82;
  long unsigned intD.14 prephitmp_88;
  intD.9 * prephitmp_89;
  long unsigned intD.14 _92;
  intD.9 * _96;
  intD.9 * iftmp.79_97;
  long unsigned intD.14 _105;
  intD.9 * prephitmp_107;
  const ptrdiff_tD.2819 pretmp_111;
  long unsigned intD.14 pretmp_112;
  long intD.12 pretmp_114;
  boolD.2757 _115;
  long intD.12 pretmp_116;
  intD.9 * pretmp_118;
  const ptrdiff_tD.2819 prephitmp_122;
  const ptrdiff_tD.2819 prephitmp_123;
  long unsigned intD.14 pretmp_124;
  boolD.2757 _130;
  long unsigned intD.14 _136;

;;   basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _9 = MEM[(intD.9 * *)this_3(D)];
  # DEBUG D#99ptD.0 => this_3(D)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __first_10 = MEM[(intD.9 * *)this_3(D) + 8B];
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.50085 => D#99ptD.0
  # DEBUG thisD.50084 => D#99ptD.0
  _5 = (long intD.12) __first_10;
  _11 = (long intD.12) _9;
  _12 = _5 - _11;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _13 = _12 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _14 = (const long unsigned intD.14) _13;
  if (__new_size_4(D) > _14)
    goto <bb 3>;
  else
    goto <bb 23>;
;;    succ:       3 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.50098 => D#99ptD.0
  # DEBUG thisD.50097 => D#99ptD.0
  # RANGE [1, 18446744073709551615]
  __n_6 = __new_size_4(D) - _14;
  # DEBUG thisD.50091 => this_3(D)
  # DEBUG D#118ptD.0 => &this_3(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.50093 => NULL
  # DEBUG __iD.50092 => D#118ptD.0
  # DEBUG thisD.50087 => this_3(D)
  # DEBUG __nD.50089 => __n_6
  # DEBUG __xD.50090 => &__xD.34608
  # DEBUG thisD.52310 => this_3(D)
  # DEBUG __nD.52312 => __n_6
  # DEBUG __xD.52313 => &__xD.34608
  # DEBUG __positionD.52528 => __first_10
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _19 = this_3(D)->D.34940._M_implD.34431._M_end_of_storageD.34435;
  _20 = (long intD.12) _19;
  _23 = _20 - _5;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _24 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _25 = (long unsigned intD.14) _24;
  if (__n_6 <= _25)
    goto <bb 4>;
  else
    goto <bb 8>;
;;    succ:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 1470, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 4535, maybe hot
;;   Invalid sum of incoming frequencies 5507, should be 4535
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_138 = PHI <__n_6(4), __n_46(6)>
  # PT = nonlocal escaped 
  # __first_132 = PHI <__first_10(4), __first_47(6)>
  # .MEM_29 = PHI <.MEM_2(D)(4), .MEM_128(6)>
  # DEBUG __niterD.52336 => __n_138
  # DEBUG __firstD.52334 => __first_132
  # .MEM_128 = VDEF <.MEM_29>
  *__first_132 = __x_148(D);
  # RANGE [0, 18446744073709551614]
  __n_46 = __n_138 + 18446744073709551615;
  # DEBUG __niterD.52336 => __n_46
  # PT = nonlocal escaped 
  __first_47 = __first_132 + 4;
  # DEBUG __firstD.52334 => __first_47
  # DEBUG __niterD.52336 => __n_46
  # DEBUG __firstD.52334 => __first_47
  if (__n_46 == 0)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [11.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [89.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 4037, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [89.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 4983, maybe hot
;;   Invalid sum of incoming frequencies 498, should be 4983
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [11.0%]  (TRUE_VALUE,EXECUTABLE)
  _28 = __n_6 * 4;
  # PT = nonlocal escaped 
  __first_125 = __first_10 + _28;
  # .MEM_129 = VDEF <.MEM_128>
  this_3(D)->D.34940._M_implD.34431._M_finishD.34434 = __first_125;
  # DEBUG D#476ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.49922 => D#476ptD.0
  # DEBUG thisD.49920 => &__positionD.52311
  # DEBUG __firstD.52340 => __first_10
  # DEBUG __lastD.52339 => __first_10
  # DEBUG __resultD.52338 => __first_125
  # DEBUG __allocD.52337 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#246ptD.0
  # DEBUG D#244ptD.0 => D#245ptD.0
  # DEBUG __firstD.52344 => __first_10
  # DEBUG __lastD.52343 => __first_10
  # DEBUG __resultD.52342 => __first_125
  # DEBUG D.52341 => D#244ptD.0
  # DEBUG __firstD.52347 => __first_10
  # DEBUG __lastD.52346 => __first_10
  # DEBUG __resultD.52345 => __first_125
  # DEBUG __assignableD.52350 => 1
  # DEBUG __firstD.52353 => __first_10
  # DEBUG __lastD.52352 => __first_10
  # DEBUG __resultD.52351 => __first_125
  # DEBUG __firstD.52356 => __first_10
  # DEBUG __lastD.52355 => __first_10
  # DEBUG __resultD.52354 => __first_125
  # DEBUG __itD.46707 => __first_10
  # DEBUG __itD.46059 => __first_10
  # DEBUG __itD.46705 => __first_10
  # DEBUG __itD.46059 => __first_10
  # DEBUG __firstD.52359 => __first_10
  # DEBUG __lastD.52358 => __first_10
  # DEBUG __resultD.52357 => __first_125
  # DEBUG __itD.46687 => __first_125
  # DEBUG __itD.46062 => __first_125
  # DEBUG __itD.46685 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __itD.46683 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __firstD.52362 => NULL
  # DEBUG __lastD.52361 => NULL
  # DEBUG __resultD.52360 => NULL
  # DEBUG __simpleD.52366 => 1
  # DEBUG __firstD.52369 => NULL
  # DEBUG __lastD.52368 => NULL
  # DEBUG __resultD.52367 => NULL
  # DEBUG _NumD.52370 => 0
  # DEBUG thisD.49883 => &__positionD.52311
  # DEBUG D#251ptD.0 => &__x_copyD.52314
  # DEBUG __firstD.52373 => __first_10
  # DEBUG __lastD.52372 => __first_10
  # DEBUG D#250ptD.0 => D#251ptD.0
  # DEBUG __valueD.52371 => D#250ptD.0
  # DEBUG __itD.46973 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __itD.46971 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG D#249ptD.0 => D#250ptD.0
  # DEBUG __firstD.52376 => NULL
  # DEBUG __lastD.52375 => NULL
  # DEBUG __valueD.52374 => D#249ptD.0
  # DEBUG __tmpD.52377 => __x_148(D)
  # DEBUG __firstD.52376 => __first_10
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 366, maybe hot
;;   Invalid sum of incoming frequencies 601, should be 366
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       3 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52556 => this_3(D)
  # DEBUG __nD.52557 => __n_6
  # DEBUG __nD.52557 => __n_6
  # DEBUG __sD.52558 => "vector::_M_fill_insert"
  # DEBUG D#395ptD.0 => this_3(D)
  # DEBUG thisD.48744 => D#395ptD.0
  # DEBUG D#394ptD.0 => D#395ptD.0
  # DEBUG D#393ptD.0 => &D#394ptD.0->D.34940
  # DEBUG thisD.48734 => D#393ptD.0
  # DEBUG __aD.48726 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#338ptD.0 => D#391ptD.0
  # DEBUG thisD.48717 => D#338ptD.0
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.52562 => D#99ptD.0
  # DEBUG thisD.52563 => D#99ptD.0
  # RANGE [0, 18446744073709551615]
  _105 = 4611686018427387903 - _14;
  if (__n_6 > _105)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_147 = VDEF <.MEM_2(D)>
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 10, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.48762 => D#99ptD.0
  # DEBUG thisD.48761 => D#99ptD.0
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.48757 => D#99ptD.0
  # DEBUG thisD.48756 => D#99ptD.0
  # DEBUG __aD.52561 => &D.52565
  # DEBUG __bD.52560 => &__nD.52557
  _92 = MAX_EXPR <__n_6, _14>;
  # RANGE [0, 18446744073709551615]
  __len_109 = _14 + _92;
  # DEBUG __lenD.52559 => __len_109
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.48749 => D#99ptD.0
  # DEBUG thisD.48748 => D#99ptD.0
  # DEBUG D#395ptD.0 => this_3(D)
  # DEBUG thisD.48764 => D#395ptD.0
  # DEBUG D#394ptD.0 => D#395ptD.0
  # DEBUG D#393ptD.0 => &D#394ptD.0->D.34940
  # DEBUG thisD.48734 => D#393ptD.0
  # DEBUG __aD.48726 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#338ptD.0 => D#391ptD.0
  # DEBUG thisD.48717 => D#338ptD.0
  _115 = __len_109 > 4611686018427387903;
  _130 = _14 > __len_109;
  _32 = _115 | _130;
  if (_32 != 0)
    goto <bb 11>;
  else
    goto <bb 26>;
;;    succ:       11 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 329, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_35 = PHI <18446744073709551612(10), pretmp_112(27)>
  # DEBUG __lenD.52421 => NULL
  # DEBUG thisD.52425 => this_3(D)
  # DEBUG D#119ptD.0 => &this_3(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.52427 => NULL
  # DEBUG __iD.52426 => D#119ptD.0
  # DEBUG __lhsD.52429 => &__positionD.52311
  # DEBUG __rhsD.52428 => NULL
  # DEBUG thisD.46068 => &__positionD.52311
  # DEBUG thisD.46066 => NULL
  # DEBUG D#487ptD.0 => _12 /[ex] 4
  # DEBUG __elems_beforeD.52422 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_3(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.52547 => NULL
  # DEBUG thisD.52548 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.52551 => NULL
  # DEBUG __aD.52550 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.52554 => NULL
  # DEBUG thisD.52552 => D#340ptD.0
  # DEBUG D.52553 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  # .MEM_137 = VDEF <.MEM_2(D)>
  # PT = { D.52568 } (escaped heap)
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  _96 = _ZnwmD.2764 (prephitmp_35);
  # VUSE <.MEM_137>
  pretmp_118 = this_3(D)->D.34940._M_implD.34431._M_startD.34433;
  pretmp_116 = (long intD.12) pretmp_118;
  pretmp_114 = _5 - pretmp_116;
  pretmp_15 = pretmp_114 /[ex] 4;
  # VUSE <.MEM_137>
  pretmp_73 = this_3(D)->D.34940._M_implD.34431._M_finishD.34434;
  pretmp_18 = (long intD.12) pretmp_73;
  pretmp_21 = pretmp_18 - _5;
  pretmp_111 = pretmp_21 /[ex] 4;
  pretmp_38 = (long unsigned intD.14) pretmp_21;
  pretmp_40 = _96 + prephitmp_35;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       26 [91.5%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.52568 } (escaped heap)
  # iftmp.79_97 = PHI <0B(26), _96(11)>
  # .MEM_117 = PHI <.MEM_2(D)(26), .MEM_137(11)>
  # PT = nonlocal escaped 
  # prephitmp_107 = PHI <_9(26), pretmp_118(11)>
  # prephitmp_31 = PHI <_12(26), pretmp_114(11)>
  # prephitmp_122 = PHI <_13(26), pretmp_15(11)>
  # prephitmp_123 = PHI <0(26), pretmp_111(11)>
  # prephitmp_39 = PHI <0(26), pretmp_38(11)>
  # PT = null { D.52568 } (escaped heap)
  # prephitmp_89 = PHI <0B(26), pretmp_40(11)>
  # DEBUG __new_startD.52423 => NULL
  # DEBUG __new_finishD.52424 => NULL
  # DEBUG D#470ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.50063 => D#470ptD.0
  # RANGE [0, 18446744073709551615]
  _60 = (long unsigned intD.14) _12;
  # PT = null { D.52568 } (escaped heap)
  __first_61 = iftmp.79_97 + _60;
  # DEBUG D#376ptD.0 => &__xD.34608
  # DEBUG __firstD.52433 => __first_61
  # DEBUG __nD.52432 => __n_6
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.52430 => D#375ptD.0
  # DEBUG D.52431 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.52436 => __first_61
  # DEBUG __nD.52435 => __n_6
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.52434 => D#373ptD.0
  # DEBUG __assignableD.52438 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.52441 => __first_61
  # DEBUG __nD.52440 => __n_6
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.52439 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.52444 => __first_61
  # DEBUG __nD.52443 => __n_6
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.52442 => D#307ptD.0
  # DEBUG __itD.47237 => __first_61
  # DEBUG __itD.46062 => __first_61
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.52447 => NULL
  # DEBUG __nD.52446 => __n_6
  # DEBUG __valueD.52445 => D#306ptD.0
  # DEBUG __tmpD.52448 => __x_148(D)
  # DEBUG __niterD.52449 => __n_6
  # DEBUG __niterD.52449 => __n_6
  # DEBUG __firstD.52447 => __first_61
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 3702, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_53 = PHI <__n_65(14), __n_6(12)>
  # PT = null { D.52568 } (escaped heap)
  # __first_90 = PHI <__first_66(14), __first_61(12)>
  # .MEM_42 = PHI <.MEM_140(14), .MEM_117(12)>
  # DEBUG __niterD.52449 => __n_53
  # DEBUG __firstD.52447 => __first_90
  # .MEM_140 = VDEF <.MEM_42>
  *__first_90 = __x_148(D);
  # RANGE [0, 18446744073709551614]
  __n_65 = __n_53 + 18446744073709551615;
  # DEBUG __niterD.52449 => __n_65
  # PT = null { D.52568 } (escaped heap)
  __first_66 = __first_90 + 4;
  # DEBUG __firstD.52447 => __first_66
  # DEBUG __niterD.52449 => __n_65
  # DEBUG __firstD.52447 => __first_66
  if (__n_65 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 3336, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.52424 => 0B
  # DEBUG D#471ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.50039 => D#471ptD.0
  # DEBUG thisD.50037 => &__positionD.52311
  # DEBUG D#599ptD.0 => this_3(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.52453 => D#599ptD.0
  # DEBUG __lastD.52452 => __first_10
  # DEBUG __resultD.52451 => NULL
  # DEBUG __allocD.52450 => D#248ptD.0
  # DEBUG D#247ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#247ptD.0
  # DEBUG __firstD.52457 => D#599ptD.0
  # DEBUG __lastD.52456 => __first_10
  # DEBUG __resultD.52455 => NULL
  # DEBUG D.52454 => D#244ptD.0
  # DEBUG __firstD.52460 => D#599ptD.0
  # DEBUG __lastD.52459 => __first_10
  # DEBUG __resultD.52458 => NULL
  # DEBUG __assignableD.52463 => 1
  # DEBUG __firstD.52466 => D#599ptD.0
  # DEBUG __lastD.52465 => __first_10
  # DEBUG __resultD.52464 => NULL
  # DEBUG __firstD.52469 => D#599ptD.0
  # DEBUG __lastD.52468 => __first_10
  # DEBUG __resultD.52467 => NULL
  # DEBUG __itD.46707 => __first_10
  # DEBUG __itD.46059 => __first_10
  # DEBUG __itD.46705 => D#599ptD.0
  # DEBUG __itD.46059 => D#599ptD.0
  # DEBUG __firstD.52472 => D#599ptD.0
  # DEBUG __lastD.52471 => __first_10
  # DEBUG __resultD.52470 => NULL
  # DEBUG __itD.46687 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.46685 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __itD.46683 => D#599ptD.0
  # DEBUG __itD.46062 => D#599ptD.0
  # DEBUG __firstD.52475 => NULL
  # DEBUG __lastD.52474 => NULL
  # DEBUG __resultD.52473 => NULL
  # DEBUG __simpleD.52479 => 1
  # DEBUG __firstD.52482 => NULL
  # DEBUG __lastD.52481 => NULL
  # DEBUG __resultD.52480 => NULL
  # DEBUG D#598ptD.0 => (long intD.12) D#599ptD.0
  # DEBUG D#597ptD.0 => _5 - D#598ptD.0
  # DEBUG _NumD.52483 => D#597ptD.0 /[ex] 4
  if (prephitmp_122 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_124 = (long unsigned intD.14) prephitmp_31;
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 106, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _71 = (long unsigned intD.14) prephitmp_31;
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  memmoveD.995 (iftmp.79_97, prephitmp_107, _71);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_140(16), .MEM_141(17)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_88 = PHI <pretmp_124(16), _71(17)>
  # DEBUG D#596ptD.0 => (long unsigned intD.14) D#597ptD.0
  # DEBUG __new_finishD.52424 => iftmp.79_97 + D#596ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _74 = __n_6 * 4;
  # RANGE [0, 18446744073709551615]
  _136 = _74 + prephitmp_88;
  # PT = null { D.52568 } (escaped heap)
  __new_finish_75 = iftmp.79_97 + _136;
  # DEBUG __new_finishD.52424 => __new_finish_75
  # DEBUG D#472ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.50000 => D#472ptD.0
  # DEBUG D#595ptD.0 => this_3(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.49998 => &__positionD.52311
  # DEBUG __firstD.52487 => __first_10
  # DEBUG __lastD.52486 => D#595ptD.0
  # DEBUG __resultD.52485 => __new_finish_75
  # DEBUG __allocD.52484 => D#248ptD.0
  # DEBUG D#247ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#247ptD.0
  # DEBUG __firstD.52491 => __first_10
  # DEBUG __lastD.52490 => D#595ptD.0
  # DEBUG __resultD.52489 => __new_finish_75
  # DEBUG D.52488 => D#244ptD.0
  # DEBUG __firstD.52494 => __first_10
  # DEBUG __lastD.52493 => D#595ptD.0
  # DEBUG __resultD.52492 => __new_finish_75
  # DEBUG __assignableD.52497 => 1
  # DEBUG __firstD.52500 => __first_10
  # DEBUG __lastD.52499 => D#595ptD.0
  # DEBUG __resultD.52498 => __new_finish_75
  # DEBUG __firstD.52503 => __first_10
  # DEBUG __lastD.52502 => D#595ptD.0
  # DEBUG __resultD.52501 => __new_finish_75
  # DEBUG __itD.46707 => D#595ptD.0
  # DEBUG __itD.46059 => D#595ptD.0
  # DEBUG __itD.46705 => __first_10
  # DEBUG __itD.46059 => __first_10
  # DEBUG __firstD.52506 => __first_10
  # DEBUG __lastD.52505 => D#595ptD.0
  # DEBUG __resultD.52504 => __new_finish_75
  # DEBUG __itD.46687 => __new_finish_75
  # DEBUG __itD.46062 => __new_finish_75
  # DEBUG __itD.46685 => D#595ptD.0
  # DEBUG __itD.46062 => D#595ptD.0
  # DEBUG __itD.46683 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __firstD.52509 => NULL
  # DEBUG __lastD.52508 => NULL
  # DEBUG __resultD.52507 => NULL
  # DEBUG __simpleD.52513 => 1
  # DEBUG __firstD.52516 => NULL
  # DEBUG __lastD.52515 => NULL
  # DEBUG __resultD.52514 => NULL
  # DEBUG D#594ptD.0 => (long intD.12) D#595ptD.0
  # DEBUG D#593ptD.0 => D#594ptD.0 - _5
  # DEBUG _NumD.52517 => D#593ptD.0 /[ex] 4
  if (prephitmp_123 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 106, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_142 = VDEF <.MEM_119>
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  memmoveD.995 (__new_finish_75, __first_10, prephitmp_39);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_120 = PHI <.MEM_119(18), .MEM_142(19)>
  # PT = null { D.52568 } (escaped heap)
  _82 = __new_finish_75 + prephitmp_39;
  # DEBUG __new_finishD.52424 => _82
  # DEBUG D#473ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.49961 => D#473ptD.0
  # DEBUG D#485ptD.0 => this_3(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#484ptD.0 => this_3(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.49958 => D#484ptD.0
  # DEBUG __lastD.49959 => D#485ptD.0
  # DEBUG D.49960 => NULL
  # DEBUG D#140ptD.0 => D#484ptD.0
  # DEBUG D#141ptD.0 => D#485ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#483ptD.0 => this_3(D)->D.34940._M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#482ptD.0 => (long intD.12) D#483ptD.0
  # DEBUG D#481ptD.0 => (long intD.12) D#599ptD.0
  # DEBUG D#480ptD.0 => D#482ptD.0 - D#481ptD.0
  # DEBUG D#479ptD.0 => D#480ptD.0 /[ex] 4
  # DEBUG D#478ptD.0 => (long unsigned intD.14) D#479ptD.0
  # DEBUG D#477ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.52520 => D#477ptD.0
  # DEBUG __pD.52519 => D#599ptD.0
  # DEBUG __nD.52518 => D#478ptD.0
  if (prephitmp_107 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 256, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#477ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#478ptD.0
  # DEBUG __pD.52524 => D#599ptD.0
  # DEBUG __aD.52522 => D#157ptD.0
  # DEBUG __nD.52523 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.52527 => D#599ptD.0
  # DEBUG thisD.52525 => D#153ptD.0
  # DEBUG D.52526 => D#154ptD.0
  # .MEM_143 = VDEF <.MEM_120>
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_107);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_121 = PHI <.MEM_120(20), .MEM_143(21)>
  # .MEM_144 = VDEF <.MEM_121>
  this_3(D)->D.34940._M_implD.34431._M_startD.34433 = iftmp.79_97;
  # .MEM_145 = VDEF <.MEM_144>
  this_3(D)->D.34940._M_implD.34431._M_finishD.34434 = _82;
  # .MEM_146 = VDEF <.MEM_145>
  this_3(D)->D.34940._M_implD.34431._M_end_of_storageD.34435 = prephitmp_89;
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.50103 => D#99ptD.0
  # DEBUG thisD.50102 => D#99ptD.0
  if (__new_size_4(D) < _14)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 4837, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _7 = __new_size_4(D) * 4;
  # PT = nonlocal escaped 
  _8 = _9 + _7;
  # DEBUG D#145ptD.0 => this_3(D)
  # DEBUG __posD.50106 => _8
  # DEBUG D#144ptD.0 => D#145ptD.0
  # DEBUG thisD.50107 => D#144ptD.0
  # DEBUG D#142ptD.0 => &D#144ptD.0->D.34940
  # DEBUG thisD.45847 => D#142ptD.0
  # DEBUG D#143ptD.0 => D#144ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG __firstD.45837 => _8
  # DEBUG __lastD.45838 => D#143ptD.0
  # DEBUG D.45839 => NULL
  # DEBUG D#140ptD.0 => _8
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # .MEM_17 = VDEF <.MEM_2(D)>
  MEM[(intD.9 * *)this_3(D) + 8B] = _8;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 10000, maybe hot
;;   Invalid sum of incoming frequencies 13278, should be 10000
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_129(7), .MEM_2(D)(23), .MEM_17(24), .MEM_146(22)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 26, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       10 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.52421 => NULL
  # DEBUG thisD.52425 => this_3(D)
  # DEBUG D#119ptD.0 => &this_3(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.52427 => NULL
  # DEBUG __iD.52426 => D#119ptD.0
  # DEBUG __lhsD.52429 => &__positionD.52311
  # DEBUG __rhsD.52428 => NULL
  # DEBUG thisD.46068 => &__positionD.52311
  # DEBUG thisD.46066 => NULL
  # DEBUG D#487ptD.0 => _12 /[ex] 4
  # DEBUG __elems_beforeD.52422 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_3(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.52547 => NULL
  # DEBUG thisD.52548 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (__len_109 != 0)
    goto <bb 27>;
  else
    goto <bb 12>;
;;    succ:       27 [8.5%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 3
;;    prev block 26, next block 1, flags: (NEW)
;;    pred:       26 [8.5%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_112 = __len_109 * 4;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for MEM[(int * *)this_3(D)]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_3(D)]
Creating dr for MEM[(int * *)this_3(D) + 8B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_3(D) + 8B]
Creating dr for this_3(D)->D.34940._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_132
analyze_innermost: success.
	base_address: __first_10
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_10
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_132
analyze_innermost: success.
	base_address: __first_10
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_10
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_132
analyze_innermost: success.
	base_address: __first_10
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_10
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_132
analyze_innermost: success.
	base_address: __first_10
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_10
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_6 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551614 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_6 + 18446744073709551615, bounded by 0x0fffffffffffffffe
Creating dr for *__first_132
analyze_innermost: success.
	base_address: __first_10
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_10
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_132
analyze_innermost: success.
	base_address: __first_10
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_10
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_132
analyze_innermost: success.
	base_address: __first_10
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_10
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_132
analyze_innermost: success.
	base_address: __first_10
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_10
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_6 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551614 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_6 + 18446744073709551615, bounded by 0x0fffffffffffffffe
Creating dr for this_3(D)->D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_90
analyze_innermost: success.
	base_address: iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_90
analyze_innermost: success.
	base_address: iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_90
analyze_innermost: success.
	base_address: iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_90
analyze_innermost: success.
	base_address: iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_6 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551614 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_6 + 18446744073709551615, bounded by 0x0fffffffffffffffe
Creating dr for *__first_90
analyze_innermost: success.
	base_address: iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_90
analyze_innermost: success.
	base_address: iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_90
analyze_innermost: success.
	base_address: iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_90
analyze_innermost: success.
	base_address: iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_97 + (long unsigned int) ((long int) __first_10 - (long int) _9)
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_6 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551614 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_6 + 18446744073709551615, bounded by 0x0fffffffffffffffe
Creating dr for this_3(D)->D.34940._M_impl._M_start
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->D.34940._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int * *)this_3(D) + 8B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_3(D) + 8B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:63)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:38)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:3, LOOPS:0, CONDITIONS:1, STMTS:28)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:34, LOOPS:2, CONDITIONS:11, STMTS:446)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_23 })
  {
    <bb 2>:
    # VUSE <.MEM_2(D)>
    _9 = MEM[(int * *)this_3(D)];
    # DEBUG D#99 => this_3(D)
    # VUSE <.MEM_2(D)>
    __first_10 = MEM[(int * *)this_3(D) + 8B];
    # DEBUG D#99 => this_3(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    _5 = (long int) __first_10;
    _11 = (long int) _9;
    _12 = _5 - _11;
    _13 = _12 /[ex] 4;
    _14 = (const long unsigned int) _13;
    if (__new_size_4(D) > _14)
      goto <bb 3>;
    else
      goto <bb 23>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_8 })
  {
    <bb 3>:
    # DEBUG D#99 => this_3(D)
    # DEBUG D#99 => this_3(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    __n_6 = __new_size_4(D) - _14;
    # DEBUG this => this_3(D)
    # DEBUG D#118 => &this_3(D)->D.34940._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#118
    # DEBUG this => this_3(D)
    # DEBUG __n => __n_6
    # DEBUG __x => &__x
    # DEBUG this => this_3(D)
    # DEBUG __n => __n_6
    # DEBUG __x => &__x
    # DEBUG __position => __first_10
    # VUSE <.MEM_2(D)>
    _19 = this_3(D)->D.34940._M_impl._M_end_of_storage;
    _20 = (long int) _19;
    _23 = _20 - _5;
    _24 = _23 /[ex] 4;
    _25 = (long unsigned int) _24;
    if (__n_6 <= _25)
      goto <bb 4>;
    else
      goto <bb 8>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_5 }, succs = {bb_28 })
  {
    <bb 7>:

  }
  bb_28 (preds = {bb_7 }, succs = {bb_33 })
  {
    <bb 28>:
    _28 = __n_6 * 4;
    __first_125 = __first_10 + _28;
    # .MEM_129 = VDEF <.MEM_128>
    this_3(D)->D.34940._M_impl._M_finish = __first_125;
    # DEBUG D#476 => &this_3(D)->D.34940
    # DEBUG this => D#476
    # DEBUG this => &__position
    # DEBUG __first => __first_10
    # DEBUG __last => __first_10
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#246
    # DEBUG D#245 => D#246
    # DEBUG D#244 => D#245
    # DEBUG __first => __first_10
    # DEBUG __last => __first_10
    # DEBUG __result => __first_125
    # DEBUG D.52341 => D#244
    # DEBUG __first => __first_10
    # DEBUG __last => __first_10
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => __first_10
    # DEBUG __last => __first_10
    # DEBUG __result => __first_125
    # DEBUG __first => __first_10
    # DEBUG __last => __first_10
    # DEBUG __result => __first_125
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __first => __first_10
    # DEBUG __last => __first_10
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG _Num => 0
    # DEBUG this => &__position
    # DEBUG D#251 => &__x_copy
    # DEBUG __first => __first_10
    # DEBUG __last => __first_10
    # DEBUG D#250 => D#251
    # DEBUG __value => D#250
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG D#249 => D#250
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __value => D#249
    # DEBUG __tmp => __x_148(D)
    # DEBUG __first => __first_10
    goto <bb 33>;

  }
  bb_8 (preds = {bb_3 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # DEBUG this => this_3(D)
    # DEBUG __n => __n_6
    # DEBUG __n => __n_6
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#395 => this_3(D)
    # DEBUG this => D#395
    # DEBUG D#394 => D#395
    # DEBUG D#393 => &D#394->D.34940
    # DEBUG this => D#393
    # DEBUG __a => D#392
    # DEBUG D#391 => D#392
    # DEBUG D#338 => D#391
    # DEBUG this => D#338
    # DEBUG D#99 => this_3(D)
    # DEBUG D#99 => this_3(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    _105 = 4611686018427387903 - _14;
    if (__n_6 > _105)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {})
  {
    <bb 9>:
    # .MEM_147 = VDEF <.MEM_2(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_10 (preds = {bb_8 }, succs = {bb_11 bb_26 })
  {
    <bb 10>:
    # DEBUG D#99 => this_3(D)
    # DEBUG D#99 => this_3(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    # DEBUG D#99 => this_3(D)
    # DEBUG D#99 => this_3(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    # DEBUG __a => &D.52565
    # DEBUG __b => &__n
    _92 = MAX_EXPR <__n_6, _14>;
    __len_109 = _14 + _92;
    # DEBUG __len => __len_109
    # DEBUG D#99 => this_3(D)
    # DEBUG D#99 => this_3(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    # DEBUG D#395 => this_3(D)
    # DEBUG this => D#395
    # DEBUG D#394 => D#395
    # DEBUG D#393 => &D#394->D.34940
    # DEBUG this => D#393
    # DEBUG __a => D#392
    # DEBUG D#391 => D#392
    # DEBUG D#338 => D#391
    # DEBUG this => D#338
    _115 = __len_109 > 4611686018427387903;
    _130 = _14 > __len_109;
    _32 = _115 | _130;
    if (_32 != 0)
      goto <bb 11>;
    else
      goto <bb 26>;

  }
  bb_11 (preds = {bb_10 bb_27 }, succs = {bb_12 })
  {
    <bb 11>:
    # prephitmp_35 = PHI <18446744073709551612(10), pretmp_112(27)>
    # DEBUG __len => NULL
    # DEBUG this => this_3(D)
    # DEBUG D#119 => &this_3(D)->D.34940._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#119
    # DEBUG __lhs => &__position
    # DEBUG __rhs => NULL
    # DEBUG this => &__position
    # DEBUG this => NULL
    # DEBUG D#487 => _12 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#487
    # DEBUG D#486 => &this_3(D)->D.34940
    # DEBUG D#346 => D#486
    # DEBUG __n => NULL
    # DEBUG this => D#346
    # DEBUG D#345 => D#346
    # DEBUG D#344 => &D#345->_M_impl
    # DEBUG D#343 => D#344
    # DEBUG __n => NULL
    # DEBUG __a => D#343
    # DEBUG D#342 => D#343
    # DEBUG D#340 => D#342
    # DEBUG D#341 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#340
    # DEBUG D.52553 => D#341
    # DEBUG D#339 => D#340
    # DEBUG D#338 => D#339
    # DEBUG this => D#338
    # .MEM_137 = VDEF <.MEM_2(D)>
    _96 = operator new (prephitmp_35);
    # VUSE <.MEM_137>
    pretmp_118 = this_3(D)->D.34940._M_impl._M_start;
    pretmp_116 = (long int) pretmp_118;
    pretmp_114 = _5 - pretmp_116;
    pretmp_15 = pretmp_114 /[ex] 4;
    # VUSE <.MEM_137>
    pretmp_73 = this_3(D)->D.34940._M_impl._M_finish;
    pretmp_18 = (long int) pretmp_73;
    pretmp_21 = pretmp_18 - _5;
    pretmp_111 = pretmp_21 /[ex] 4;
    pretmp_38 = (long unsigned int) pretmp_21;
    pretmp_40 = _96 + prephitmp_35;

  }
  bb_12 (preds = {bb_26 bb_11 }, succs = {bb_30 })
  {
    <bb 12>:
    # iftmp.79_97 = PHI <0B(26), _96(11)>
    # .MEM_117 = PHI <.MEM_2(D)(26), .MEM_137(11)>
    # prephitmp_107 = PHI <_9(26), pretmp_118(11)>
    # prephitmp_31 = PHI <_12(26), pretmp_114(11)>
    # prephitmp_122 = PHI <_13(26), pretmp_15(11)>
    # prephitmp_123 = PHI <0(26), pretmp_111(11)>
    # prephitmp_39 = PHI <0(26), pretmp_38(11)>
    # prephitmp_89 = PHI <0B(26), pretmp_40(11)>

  }
  bb_30 (preds = {bb_12 }, succs = {bb_13 })
  {
    <bb 30>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#470 => &this_3(D)->D.34940
    # DEBUG this => D#470
    _60 = (long unsigned int) _12;
    __first_61 = iftmp.79_97 + _60;
    # DEBUG D#376 => &__x
    # DEBUG __first => __first_61
    # DEBUG __n => __n_6
    # DEBUG D#375 => D#376
    # DEBUG __x => D#375
    # DEBUG D.52431 => D#377
    # DEBUG D#374 => D#375
    # DEBUG __first => __first_61
    # DEBUG __n => __n_6
    # DEBUG D#373 => D#374
    # DEBUG __x => D#373
    # DEBUG __assignable => 1
    # DEBUG D#372 => D#373
    # DEBUG __first => __first_61
    # DEBUG __n => __n_6
    # DEBUG D#371 => D#372
    # DEBUG __x => D#371
    # DEBUG D#308 => D#371
    # DEBUG __first => __first_61
    # DEBUG __n => __n_6
    # DEBUG D#307 => D#308
    # DEBUG __value => D#307
    # DEBUG __it => __first_61
    # DEBUG __it => __first_61
    # DEBUG D#306 => D#307
    # DEBUG __first => NULL
    # DEBUG __n => __n_6
    # DEBUG __value => D#306
    # DEBUG __tmp => __x_148(D)
    # DEBUG __niter => __n_6
    # DEBUG __niter => __n_6
    # DEBUG __first => __first_61

  }
  bb_15 (preds = {bb_13 }, succs = {bb_29 })
  {
    <bb 15>:

  }
  bb_29 (preds = {bb_15 }, succs = {bb_17 bb_16 })
  {
    <bb 29>:
    # DEBUG __new_finish => 0B
    # DEBUG D#471 => &this_3(D)->D.34940
    # DEBUG this => D#471
    # DEBUG this => &__position
    # DEBUG D#599 => this_3(D)->D.34940._M_impl._M_start
    # DEBUG __first => D#599
    # DEBUG __last => __first_10
    # DEBUG __result => NULL
    # DEBUG __alloc => D#248
    # DEBUG D#247 => D#248
    # DEBUG D#244 => D#247
    # DEBUG __first => D#599
    # DEBUG __last => __first_10
    # DEBUG __result => NULL
    # DEBUG D.52454 => D#244
    # DEBUG __first => D#599
    # DEBUG __last => __first_10
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#599
    # DEBUG __last => __first_10
    # DEBUG __result => NULL
    # DEBUG __first => D#599
    # DEBUG __last => __first_10
    # DEBUG __result => NULL
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __it => D#599
    # DEBUG __it => D#599
    # DEBUG __first => D#599
    # DEBUG __last => __first_10
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __it => D#599
    # DEBUG __it => D#599
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG D#598 => (long int) D#599
    # DEBUG D#597 => _5 - D#598
    # DEBUG _Num => D#597 /[ex] 4
    if (prephitmp_122 != 0)
      goto <bb 17>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_29 }, succs = {bb_18 })
  {
    <bb 16>:
    pretmp_124 = (long unsigned int) prephitmp_31;
    goto <bb 18>;

  }
  bb_17 (preds = {bb_29 }, succs = {bb_18 })
  {
    <bb 17>:
    _71 = (long unsigned int) prephitmp_31;
    # .MEM_141 = VDEF <.MEM_140>
    __builtin_memmove (iftmp.79_97, prephitmp_107, _71);

  }
  bb_18 (preds = {bb_16 bb_17 }, succs = {bb_19 bb_20 })
  {
    <bb 18>:
    # .MEM_119 = PHI <.MEM_140(16), .MEM_141(17)>
    # prephitmp_88 = PHI <pretmp_124(16), _71(17)>
    # DEBUG D#596 => (long unsigned int) D#597
    # DEBUG __new_finish => iftmp.79_97 + D#596
    _74 = __n_6 * 4;
    _136 = _74 + prephitmp_88;
    __new_finish_75 = iftmp.79_97 + _136;
    # DEBUG __new_finish => __new_finish_75
    # DEBUG D#472 => &this_3(D)->D.34940
    # DEBUG this => D#472
    # DEBUG D#595 => this_3(D)->D.34940._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => __first_10
    # DEBUG __last => D#595
    # DEBUG __result => __new_finish_75
    # DEBUG __alloc => D#248
    # DEBUG D#247 => D#248
    # DEBUG D#244 => D#247
    # DEBUG __first => __first_10
    # DEBUG __last => D#595
    # DEBUG __result => __new_finish_75
    # DEBUG D.52488 => D#244
    # DEBUG __first => __first_10
    # DEBUG __last => D#595
    # DEBUG __result => __new_finish_75
    # DEBUG __assignable => 1
    # DEBUG __first => __first_10
    # DEBUG __last => D#595
    # DEBUG __result => __new_finish_75
    # DEBUG __first => __first_10
    # DEBUG __last => D#595
    # DEBUG __result => __new_finish_75
    # DEBUG __it => D#595
    # DEBUG __it => D#595
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __first => __first_10
    # DEBUG __last => D#595
    # DEBUG __result => __new_finish_75
    # DEBUG __it => __new_finish_75
    # DEBUG __it => __new_finish_75
    # DEBUG __it => D#595
    # DEBUG __it => D#595
    # DEBUG __it => __first_10
    # DEBUG __it => __first_10
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG D#594 => (long int) D#595
    # DEBUG D#593 => D#594 - _5
    # DEBUG _Num => D#593 /[ex] 4
    if (prephitmp_123 != 0)
      goto <bb 19>;
    else
      goto <bb 20>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # .MEM_142 = VDEF <.MEM_119>
    __builtin_memmove (__new_finish_75, __first_10, prephitmp_39);

  }
  bb_20 (preds = {bb_18 bb_19 }, succs = {bb_21 bb_22 })
  {
    <bb 20>:
    # .MEM_120 = PHI <.MEM_119(18), .MEM_142(19)>
    _82 = __new_finish_75 + prephitmp_39;
    # DEBUG __new_finish => _82
    # DEBUG D#473 => &this_3(D)->D.34940
    # DEBUG this => D#473
    # DEBUG D#485 => this_3(D)->D.34940._M_impl._M_finish
    # DEBUG D#484 => this_3(D)->D.34940._M_impl._M_start
    # DEBUG __first => D#484
    # DEBUG __last => D#485
    # DEBUG D.49960 => NULL
    # DEBUG D#140 => D#484
    # DEBUG D#141 => D#485
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # DEBUG D#483 => this_3(D)->D.34940._M_impl._M_end_of_storage
    # DEBUG D#482 => (long int) D#483
    # DEBUG D#481 => (long int) D#599
    # DEBUG D#480 => D#482 - D#481
    # DEBUG D#479 => D#480 /[ex] 4
    # DEBUG D#478 => (long unsigned int) D#479
    # DEBUG D#477 => &this_3(D)->D.34940
    # DEBUG this => D#477
    # DEBUG __p => D#599
    # DEBUG __n => D#478
    if (prephitmp_107 != 0B)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # DEBUG D#159 => &D#477->_M_impl
    # DEBUG D#157 => D#159
    # DEBUG D#158 => D#478
    # DEBUG __p => D#599
    # DEBUG __a => D#157
    # DEBUG __n => D#158
    # DEBUG D#156 => D#158
    # DEBUG D#155 => D#157
    # DEBUG D#153 => D#155
    # DEBUG D#154 => D#156
    # DEBUG __p => D#599
    # DEBUG this => D#153
    # DEBUG D.52526 => D#154
    # .MEM_143 = VDEF <.MEM_120>
    operator delete (prephitmp_107);

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {bb_31 })
  {
    <bb 22>:
    # .MEM_121 = PHI <.MEM_120(20), .MEM_143(21)>

  }
  bb_31 (preds = {bb_22 }, succs = {bb_33 })
  {
    <bb 31>:
    # .MEM_144 = VDEF <.MEM_121>
    this_3(D)->D.34940._M_impl._M_start = iftmp.79_97;
    # .MEM_145 = VDEF <.MEM_144>
    this_3(D)->D.34940._M_impl._M_finish = _82;
    # .MEM_146 = VDEF <.MEM_145>
    this_3(D)->D.34940._M_impl._M_end_of_storage = prephitmp_89;
    goto <bb 33>;

  }
  bb_23 (preds = {bb_2 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # DEBUG D#99 => this_3(D)
    # DEBUG D#99 => this_3(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    if (__new_size_4(D) < _14)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    _7 = __new_size_4(D) * 4;
    _8 = _9 + _7;
    # DEBUG D#145 => this_3(D)
    # DEBUG __pos => _8
    # DEBUG D#144 => D#145
    # DEBUG this => D#144
    # DEBUG D#142 => &D#144->D.34940
    # DEBUG this => D#142
    # DEBUG D#143 => D#144->D.34940._M_impl._M_finish
    # DEBUG __first => _8
    # DEBUG __last => D#143
    # DEBUG D.45839 => NULL
    # DEBUG D#140 => _8
    # DEBUG D#141 => D#143
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # .MEM_17 = VDEF <.MEM_2(D)>
    MEM[(int * *)this_3(D) + 8B] = _8;

  }
  bb_25 (preds = {bb_24 bb_23 }, succs = {bb_33 })
  {
    <bb 25>:
    # .MEM_27 = PHI <.MEM_17(24), .MEM_2(D)(23)>

  }
  bb_33 (preds = {bb_25 bb_28 bb_31 }, succs = {bb_32 })
  {
    <bb 33>:
    # .MEM_1 = PHI <.MEM_27(25), .MEM_129(28), .MEM_146(31)>

  }
  bb_32 (preds = {bb_33 }, succs = {bb_1 })
  {
    <bb 32>:
    # VUSE <.MEM_1>
    return;

  }
  bb_26 (preds = {bb_10 }, succs = {bb_27 bb_12 })
  {
    <bb 26>:
    # DEBUG __len => NULL
    # DEBUG this => this_3(D)
    # DEBUG D#119 => &this_3(D)->D.34940._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#119
    # DEBUG __lhs => &__position
    # DEBUG __rhs => NULL
    # DEBUG this => &__position
    # DEBUG this => NULL
    # DEBUG D#487 => _12 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#487
    # DEBUG D#486 => &this_3(D)->D.34940
    # DEBUG D#346 => D#486
    # DEBUG __n => NULL
    # DEBUG this => D#346
    # DEBUG D#345 => D#346
    if (__len_109 != 0)
      goto <bb 27>;
    else
      goto <bb 12>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_11 })
  {
    <bb 27>:
    pretmp_112 = __len_109 * 4;
    goto <bb 11>;

  }
  loop_3 (header = 5, latch = 6, niter = , upper_bound = 0x0fffffffffffffffe)
  {
    bb_5 (preds = {bb_4 bb_6 }, succs = {bb_7 bb_6 })
    {
      <bb 5>:
      # __n_138 = PHI <__n_6(4), __n_46(6)>
      # __first_132 = PHI <__first_10(4), __first_47(6)>
      # .MEM_29 = PHI <.MEM_2(D)(4), .MEM_128(6)>
      # DEBUG __niter => __n_138
      # DEBUG __first => __first_132
      # .MEM_128 = VDEF <.MEM_29>
      *__first_132 = __x_148(D);
      __n_46 = __n_138 + 18446744073709551615;
      # DEBUG __niter => __n_46
      __first_47 = __first_132 + 4;
      # DEBUG __first => __first_47
      # DEBUG __niter => __n_46
      # DEBUG __first => __first_47
      if (__n_46 == 0)
        goto <bb 7>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_5 })
    {
      <bb 6>:
      goto <bb 5>;

    }
  }
  loop_4 (header = 13, latch = 14, niter = , upper_bound = 0x0fffffffffffffffe)
  {
    bb_13 (preds = {bb_14 bb_30 }, succs = {bb_15 bb_14 })
    {
      <bb 13>:
      # __n_53 = PHI <__n_65(14), __n_6(30)>
      # __first_90 = PHI <__first_66(14), __first_61(30)>
      # .MEM_42 = PHI <.MEM_140(14), .MEM_117(30)>
      # DEBUG __niter => __n_53
      # DEBUG __first => __first_90
      # .MEM_140 = VDEF <.MEM_42>
      *__first_90 = __x_148(D);
      __n_65 = __n_53 + 18446744073709551615;
      # DEBUG __niter => __n_65
      __first_66 = __first_90 + 4;
      # DEBUG __first => __first_66
      # DEBUG __niter => __n_65
      # DEBUG __first => __first_66
      if (__n_65 == 0)
        goto <bb 15>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_13 }, succs = {bb_13 })
    {
      <bb 14>:
      goto <bb 13>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, std::vector<_Tp, _Alloc>::value_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33797 * const thisD.34606, size_typeD.34516 __new_sizeD.34607, value_typeD.34503 __xD.34608)
{
  const long unsigned intD.14 D.52565;
  const size_typeD.34516 __lenD.52559;
  size_typeD.34516 D.52564;
  size_typeD.34516 __nD.52557;
  intD.9 * D.52555;
  const ptrdiff_tD.2819 _NumD.52545;
  intD.9 * D.52546;
  value_typeD.34503 __x_copyD.52314;
  const size_typeD.34516 __elems_afterD.52315;
  intD.9 * __new_finishD.52424;
  intD.9 * __firstD.52414;
  const ptrdiff_tD.2819 _NumD.52411;
  intD.9 * __firstD.52373;
  long unsigned intD.14 __nD.52319;
  intD.9 * __firstD.52320;
  const ptrdiff_tD.2819 _NumD.52517;
  const ptrdiff_tD.2819 _NumD.52483;
  intD.9 * __firstD.52433;
  intD.9 * const __positionD.52528;
  struct iteratorD.34508 __positionD.52311;
  size_typeD.34516 __nD.52312;
  struct iteratorD.34508 __positionD.50088;
  long intD.12 _5;
  long unsigned intD.14 _7;
  intD.9 * _8;
  intD.9 * const _9;
  long intD.12 _11;
  long intD.12 _12;
  long intD.12 _13;
  const ptrdiff_tD.2819 pretmp_15;
  long intD.12 pretmp_18;
  intD.9 * _19;
  long intD.12 _20;
  long intD.12 pretmp_21;
  long intD.12 _23;
  long intD.12 _24;
  long unsigned intD.14 _25;
  long unsigned intD.14 _28;
  long intD.12 prephitmp_31;
  boolD.2757 _32;
  long unsigned intD.14 prephitmp_35;
  long unsigned intD.14 pretmp_38;
  long unsigned intD.14 prephitmp_39;
  intD.9 * pretmp_40;
  long unsigned intD.14 _60;
  long unsigned intD.14 _71;
  intD.9 * pretmp_73;
  long unsigned intD.14 _74;
  intD.9 * _82;
  long unsigned intD.14 prephitmp_88;
  intD.9 * prephitmp_89;
  long unsigned intD.14 _92;
  intD.9 * _96;
  intD.9 * iftmp.79_97;
  long unsigned intD.14 _105;
  intD.9 * prephitmp_107;
  const ptrdiff_tD.2819 pretmp_111;
  long unsigned intD.14 pretmp_112;
  long intD.12 pretmp_114;
  boolD.2757 _115;
  long intD.12 pretmp_116;
  intD.9 * pretmp_118;
  const ptrdiff_tD.2819 prephitmp_122;
  const ptrdiff_tD.2819 prephitmp_123;
  long unsigned intD.14 pretmp_124;
  boolD.2757 _130;
  long unsigned intD.14 _136;

;;   basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _9 = MEM[(intD.9 * *)this_3(D)];
  # DEBUG D#99ptD.0 => this_3(D)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __first_10 = MEM[(intD.9 * *)this_3(D) + 8B];
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.50085 => D#99ptD.0
  # DEBUG thisD.50084 => D#99ptD.0
  _5 = (long intD.12) __first_10;
  _11 = (long intD.12) _9;
  _12 = _5 - _11;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _13 = _12 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _14 = (const long unsigned intD.14) _13;
  if (__new_size_4(D) > _14)
    goto <bb 3>;
  else
    goto <bb 23>;
;;    succ:       3 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2071, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.50098 => D#99ptD.0
  # DEBUG thisD.50097 => D#99ptD.0
  # RANGE [1, 18446744073709551615]
  __n_6 = __new_size_4(D) - _14;
  # DEBUG thisD.50091 => this_3(D)
  # DEBUG D#118ptD.0 => &this_3(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.50093 => NULL
  # DEBUG __iD.50092 => D#118ptD.0
  # DEBUG thisD.50087 => this_3(D)
  # DEBUG __nD.50089 => __n_6
  # DEBUG __xD.50090 => &__xD.34608
  # DEBUG thisD.52310 => this_3(D)
  # DEBUG __nD.52312 => __n_6
  # DEBUG __xD.52313 => &__xD.34608
  # DEBUG __positionD.52528 => __first_10
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _19 = this_3(D)->D.34940._M_implD.34431._M_end_of_storageD.34435;
  _20 = (long intD.12) _19;
  _23 = _20 - _5;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _24 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _25 = (long unsigned intD.14) _24;
  if (__n_6 <= _25)
    goto <bb 4>;
  else
    goto <bb 8>;
;;    succ:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 1470, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 4535, maybe hot
;;   Invalid sum of incoming frequencies 5507, should be 4535
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_138 = PHI <__n_6(4), __n_46(6)>
  # PT = nonlocal escaped 
  # __first_132 = PHI <__first_10(4), __first_47(6)>
  # .MEM_29 = PHI <.MEM_2(D)(4), .MEM_128(6)>
  # DEBUG __niterD.52336 => __n_138
  # DEBUG __firstD.52334 => __first_132
  # .MEM_128 = VDEF <.MEM_29>
  *__first_132 = __x_148(D);
  # RANGE [0, 18446744073709551614]
  __n_46 = __n_138 + 18446744073709551615;
  # DEBUG __niterD.52336 => __n_46
  # PT = nonlocal escaped 
  __first_47 = __first_132 + 4;
  # DEBUG __firstD.52334 => __first_47
  # DEBUG __niterD.52336 => __n_46
  # DEBUG __firstD.52334 => __first_47
  if (__n_46 == 0)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [11.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [89.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 4037, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [89.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 4983, maybe hot
;;   Invalid sum of incoming frequencies 498, should be 4983
;;    prev block 6, next block 28, flags: (NEW, REACHABLE)
;;    pred:       5 [11.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       28 [100.0%]  (FALLTHRU)

;;   basic block 28, loop depth 0, count 0, freq 4983, maybe hot
;;    prev block 7, next block 8, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
  _28 = __n_6 * 4;
  # PT = nonlocal escaped 
  __first_125 = __first_10 + _28;
  # .MEM_129 = VDEF <.MEM_128>
  this_3(D)->D.34940._M_implD.34431._M_finishD.34434 = __first_125;
  # DEBUG D#476ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.49922 => D#476ptD.0
  # DEBUG thisD.49920 => &__positionD.52311
  # DEBUG __firstD.52340 => __first_10
  # DEBUG __lastD.52339 => __first_10
  # DEBUG __resultD.52338 => __first_125
  # DEBUG __allocD.52337 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#246ptD.0
  # DEBUG D#244ptD.0 => D#245ptD.0
  # DEBUG __firstD.52344 => __first_10
  # DEBUG __lastD.52343 => __first_10
  # DEBUG __resultD.52342 => __first_125
  # DEBUG D.52341 => D#244ptD.0
  # DEBUG __firstD.52347 => __first_10
  # DEBUG __lastD.52346 => __first_10
  # DEBUG __resultD.52345 => __first_125
  # DEBUG __assignableD.52350 => 1
  # DEBUG __firstD.52353 => __first_10
  # DEBUG __lastD.52352 => __first_10
  # DEBUG __resultD.52351 => __first_125
  # DEBUG __firstD.52356 => __first_10
  # DEBUG __lastD.52355 => __first_10
  # DEBUG __resultD.52354 => __first_125
  # DEBUG __itD.46707 => __first_10
  # DEBUG __itD.46059 => __first_10
  # DEBUG __itD.46705 => __first_10
  # DEBUG __itD.46059 => __first_10
  # DEBUG __firstD.52359 => __first_10
  # DEBUG __lastD.52358 => __first_10
  # DEBUG __resultD.52357 => __first_125
  # DEBUG __itD.46687 => __first_125
  # DEBUG __itD.46062 => __first_125
  # DEBUG __itD.46685 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __itD.46683 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __firstD.52362 => NULL
  # DEBUG __lastD.52361 => NULL
  # DEBUG __resultD.52360 => NULL
  # DEBUG __simpleD.52366 => 1
  # DEBUG __firstD.52369 => NULL
  # DEBUG __lastD.52368 => NULL
  # DEBUG __resultD.52367 => NULL
  # DEBUG _NumD.52370 => 0
  # DEBUG thisD.49883 => &__positionD.52311
  # DEBUG D#251ptD.0 => &__x_copyD.52314
  # DEBUG __firstD.52373 => __first_10
  # DEBUG __lastD.52372 => __first_10
  # DEBUG D#250ptD.0 => D#251ptD.0
  # DEBUG __valueD.52371 => D#250ptD.0
  # DEBUG __itD.46973 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __itD.46971 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG D#249ptD.0 => D#250ptD.0
  # DEBUG __firstD.52376 => NULL
  # DEBUG __lastD.52375 => NULL
  # DEBUG __valueD.52374 => D#249ptD.0
  # DEBUG __tmpD.52377 => __x_148(D)
  # DEBUG __firstD.52376 => __first_10
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 366, maybe hot
;;   Invalid sum of incoming frequencies 601, should be 366
;;    prev block 28, next block 9, flags: (NEW, REACHABLE)
;;    pred:       3 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52556 => this_3(D)
  # DEBUG __nD.52557 => __n_6
  # DEBUG __nD.52557 => __n_6
  # DEBUG __sD.52558 => "vector::_M_fill_insert"
  # DEBUG D#395ptD.0 => this_3(D)
  # DEBUG thisD.48744 => D#395ptD.0
  # DEBUG D#394ptD.0 => D#395ptD.0
  # DEBUG D#393ptD.0 => &D#394ptD.0->D.34940
  # DEBUG thisD.48734 => D#393ptD.0
  # DEBUG __aD.48726 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#338ptD.0 => D#391ptD.0
  # DEBUG thisD.48717 => D#338ptD.0
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.52562 => D#99ptD.0
  # DEBUG thisD.52563 => D#99ptD.0
  # RANGE [0, 18446744073709551615]
  _105 = 4611686018427387903 - _14;
  if (__n_6 > _105)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_147 = VDEF <.MEM_2(D)>
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 10, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.48762 => D#99ptD.0
  # DEBUG thisD.48761 => D#99ptD.0
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.48757 => D#99ptD.0
  # DEBUG thisD.48756 => D#99ptD.0
  # DEBUG __aD.52561 => &D.52565
  # DEBUG __bD.52560 => &__nD.52557
  _92 = MAX_EXPR <__n_6, _14>;
  # RANGE [0, 18446744073709551615]
  __len_109 = _14 + _92;
  # DEBUG __lenD.52559 => __len_109
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.48749 => D#99ptD.0
  # DEBUG thisD.48748 => D#99ptD.0
  # DEBUG D#395ptD.0 => this_3(D)
  # DEBUG thisD.48764 => D#395ptD.0
  # DEBUG D#394ptD.0 => D#395ptD.0
  # DEBUG D#393ptD.0 => &D#394ptD.0->D.34940
  # DEBUG thisD.48734 => D#393ptD.0
  # DEBUG __aD.48726 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#338ptD.0 => D#391ptD.0
  # DEBUG thisD.48717 => D#338ptD.0
  _115 = __len_109 > 4611686018427387903;
  _130 = _14 > __len_109;
  _32 = _115 | _130;
  if (_32 != 0)
    goto <bb 11>;
  else
    goto <bb 26>;
;;    succ:       11 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 329, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_35 = PHI <18446744073709551612(10), pretmp_112(27)>
  # DEBUG __lenD.52421 => NULL
  # DEBUG thisD.52425 => this_3(D)
  # DEBUG D#119ptD.0 => &this_3(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.52427 => NULL
  # DEBUG __iD.52426 => D#119ptD.0
  # DEBUG __lhsD.52429 => &__positionD.52311
  # DEBUG __rhsD.52428 => NULL
  # DEBUG thisD.46068 => &__positionD.52311
  # DEBUG thisD.46066 => NULL
  # DEBUG D#487ptD.0 => _12 /[ex] 4
  # DEBUG __elems_beforeD.52422 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_3(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.52547 => NULL
  # DEBUG thisD.52548 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.52551 => NULL
  # DEBUG __aD.52550 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.52554 => NULL
  # DEBUG thisD.52552 => D#340ptD.0
  # DEBUG D.52553 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  # .MEM_137 = VDEF <.MEM_2(D)>
  # PT = { D.52568 } (escaped heap)
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  _96 = _ZnwmD.2764 (prephitmp_35);
  # VUSE <.MEM_137>
  pretmp_118 = this_3(D)->D.34940._M_implD.34431._M_startD.34433;
  pretmp_116 = (long intD.12) pretmp_118;
  pretmp_114 = _5 - pretmp_116;
  pretmp_15 = pretmp_114 /[ex] 4;
  # VUSE <.MEM_137>
  pretmp_73 = this_3(D)->D.34940._M_implD.34431._M_finishD.34434;
  pretmp_18 = (long intD.12) pretmp_73;
  pretmp_21 = pretmp_18 - _5;
  pretmp_111 = pretmp_21 /[ex] 4;
  pretmp_38 = (long unsigned intD.14) pretmp_21;
  pretmp_40 = _96 + prephitmp_35;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 11, next block 30, flags: (NEW, REACHABLE)
;;    pred:       26 [91.5%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.52568 } (escaped heap)
  # iftmp.79_97 = PHI <0B(26), _96(11)>
  # .MEM_117 = PHI <.MEM_2(D)(26), .MEM_137(11)>
  # PT = nonlocal escaped 
  # prephitmp_107 = PHI <_9(26), pretmp_118(11)>
  # prephitmp_31 = PHI <_12(26), pretmp_114(11)>
  # prephitmp_122 = PHI <_13(26), pretmp_15(11)>
  # prephitmp_123 = PHI <0(26), pretmp_111(11)>
  # prephitmp_39 = PHI <0(26), pretmp_38(11)>
  # PT = null { D.52568 } (escaped heap)
  # prephitmp_89 = PHI <0B(26), pretmp_40(11)>
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.52423 => NULL
  # DEBUG __new_finishD.52424 => NULL
  # DEBUG D#470ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.50063 => D#470ptD.0
  # RANGE [0, 18446744073709551615]
  _60 = (long unsigned intD.14) _12;
  # PT = null { D.52568 } (escaped heap)
  __first_61 = iftmp.79_97 + _60;
  # DEBUG D#376ptD.0 => &__xD.34608
  # DEBUG __firstD.52433 => __first_61
  # DEBUG __nD.52432 => __n_6
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.52430 => D#375ptD.0
  # DEBUG D.52431 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.52436 => __first_61
  # DEBUG __nD.52435 => __n_6
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.52434 => D#373ptD.0
  # DEBUG __assignableD.52438 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.52441 => __first_61
  # DEBUG __nD.52440 => __n_6
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.52439 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.52444 => __first_61
  # DEBUG __nD.52443 => __n_6
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.52442 => D#307ptD.0
  # DEBUG __itD.47237 => __first_61
  # DEBUG __itD.46062 => __first_61
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.52447 => NULL
  # DEBUG __nD.52446 => __n_6
  # DEBUG __valueD.52445 => D#306ptD.0
  # DEBUG __tmpD.52448 => __x_148(D)
  # DEBUG __niterD.52449 => __n_6
  # DEBUG __niterD.52449 => __n_6
  # DEBUG __firstD.52447 => __first_61
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 3702, maybe hot
;;    prev block 30, next block 14, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_53 = PHI <__n_65(14), __n_6(30)>
  # PT = null { D.52568 } (escaped heap)
  # __first_90 = PHI <__first_66(14), __first_61(30)>
  # .MEM_42 = PHI <.MEM_140(14), .MEM_117(30)>
  # DEBUG __niterD.52449 => __n_53
  # DEBUG __firstD.52447 => __first_90
  # .MEM_140 = VDEF <.MEM_42>
  *__first_90 = __x_148(D);
  # RANGE [0, 18446744073709551614]
  __n_65 = __n_53 + 18446744073709551615;
  # DEBUG __niterD.52449 => __n_65
  # PT = null { D.52568 } (escaped heap)
  __first_66 = __first_90 + 4;
  # DEBUG __firstD.52447 => __first_66
  # DEBUG __niterD.52449 => __n_65
  # DEBUG __firstD.52447 => __first_66
  if (__n_65 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 3336, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 14, next block 29, flags: (NEW, REACHABLE)
;;    pred:       13 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       29 [100.0%]  (FALLTHRU)

;;   basic block 29, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 15, next block 16, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.52424 => 0B
  # DEBUG D#471ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.50039 => D#471ptD.0
  # DEBUG thisD.50037 => &__positionD.52311
  # DEBUG D#599ptD.0 => this_3(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.52453 => D#599ptD.0
  # DEBUG __lastD.52452 => __first_10
  # DEBUG __resultD.52451 => NULL
  # DEBUG __allocD.52450 => D#248ptD.0
  # DEBUG D#247ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#247ptD.0
  # DEBUG __firstD.52457 => D#599ptD.0
  # DEBUG __lastD.52456 => __first_10
  # DEBUG __resultD.52455 => NULL
  # DEBUG D.52454 => D#244ptD.0
  # DEBUG __firstD.52460 => D#599ptD.0
  # DEBUG __lastD.52459 => __first_10
  # DEBUG __resultD.52458 => NULL
  # DEBUG __assignableD.52463 => 1
  # DEBUG __firstD.52466 => D#599ptD.0
  # DEBUG __lastD.52465 => __first_10
  # DEBUG __resultD.52464 => NULL
  # DEBUG __firstD.52469 => D#599ptD.0
  # DEBUG __lastD.52468 => __first_10
  # DEBUG __resultD.52467 => NULL
  # DEBUG __itD.46707 => __first_10
  # DEBUG __itD.46059 => __first_10
  # DEBUG __itD.46705 => D#599ptD.0
  # DEBUG __itD.46059 => D#599ptD.0
  # DEBUG __firstD.52472 => D#599ptD.0
  # DEBUG __lastD.52471 => __first_10
  # DEBUG __resultD.52470 => NULL
  # DEBUG __itD.46687 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.46685 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __itD.46683 => D#599ptD.0
  # DEBUG __itD.46062 => D#599ptD.0
  # DEBUG __firstD.52475 => NULL
  # DEBUG __lastD.52474 => NULL
  # DEBUG __resultD.52473 => NULL
  # DEBUG __simpleD.52479 => 1
  # DEBUG __firstD.52482 => NULL
  # DEBUG __lastD.52481 => NULL
  # DEBUG __resultD.52480 => NULL
  # DEBUG D#598ptD.0 => (long intD.12) D#599ptD.0
  # DEBUG D#597ptD.0 => _5 - D#598ptD.0
  # DEBUG _NumD.52483 => D#597ptD.0 /[ex] 4
  if (prephitmp_122 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 29, next block 17, flags: (NEW)
;;    pred:       29 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_124 = (long unsigned intD.14) prephitmp_31;
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 106, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       29 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _71 = (long unsigned intD.14) prephitmp_31;
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  memmoveD.995 (iftmp.79_97, prephitmp_107, _71);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_140(16), .MEM_141(17)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_88 = PHI <pretmp_124(16), _71(17)>
  # DEBUG D#596ptD.0 => (long unsigned intD.14) D#597ptD.0
  # DEBUG __new_finishD.52424 => iftmp.79_97 + D#596ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _74 = __n_6 * 4;
  # RANGE [0, 18446744073709551615]
  _136 = _74 + prephitmp_88;
  # PT = null { D.52568 } (escaped heap)
  __new_finish_75 = iftmp.79_97 + _136;
  # DEBUG __new_finishD.52424 => __new_finish_75
  # DEBUG D#472ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.50000 => D#472ptD.0
  # DEBUG D#595ptD.0 => this_3(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.49998 => &__positionD.52311
  # DEBUG __firstD.52487 => __first_10
  # DEBUG __lastD.52486 => D#595ptD.0
  # DEBUG __resultD.52485 => __new_finish_75
  # DEBUG __allocD.52484 => D#248ptD.0
  # DEBUG D#247ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#247ptD.0
  # DEBUG __firstD.52491 => __first_10
  # DEBUG __lastD.52490 => D#595ptD.0
  # DEBUG __resultD.52489 => __new_finish_75
  # DEBUG D.52488 => D#244ptD.0
  # DEBUG __firstD.52494 => __first_10
  # DEBUG __lastD.52493 => D#595ptD.0
  # DEBUG __resultD.52492 => __new_finish_75
  # DEBUG __assignableD.52497 => 1
  # DEBUG __firstD.52500 => __first_10
  # DEBUG __lastD.52499 => D#595ptD.0
  # DEBUG __resultD.52498 => __new_finish_75
  # DEBUG __firstD.52503 => __first_10
  # DEBUG __lastD.52502 => D#595ptD.0
  # DEBUG __resultD.52501 => __new_finish_75
  # DEBUG __itD.46707 => D#595ptD.0
  # DEBUG __itD.46059 => D#595ptD.0
  # DEBUG __itD.46705 => __first_10
  # DEBUG __itD.46059 => __first_10
  # DEBUG __firstD.52506 => __first_10
  # DEBUG __lastD.52505 => D#595ptD.0
  # DEBUG __resultD.52504 => __new_finish_75
  # DEBUG __itD.46687 => __new_finish_75
  # DEBUG __itD.46062 => __new_finish_75
  # DEBUG __itD.46685 => D#595ptD.0
  # DEBUG __itD.46062 => D#595ptD.0
  # DEBUG __itD.46683 => __first_10
  # DEBUG __itD.46062 => __first_10
  # DEBUG __firstD.52509 => NULL
  # DEBUG __lastD.52508 => NULL
  # DEBUG __resultD.52507 => NULL
  # DEBUG __simpleD.52513 => 1
  # DEBUG __firstD.52516 => NULL
  # DEBUG __lastD.52515 => NULL
  # DEBUG __resultD.52514 => NULL
  # DEBUG D#594ptD.0 => (long intD.12) D#595ptD.0
  # DEBUG D#593ptD.0 => D#594ptD.0 - _5
  # DEBUG _NumD.52517 => D#593ptD.0 /[ex] 4
  if (prephitmp_123 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 106, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_142 = VDEF <.MEM_119>
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  memmoveD.995 (__new_finish_75, __first_10, prephitmp_39);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_120 = PHI <.MEM_119(18), .MEM_142(19)>
  # PT = null { D.52568 } (escaped heap)
  _82 = __new_finish_75 + prephitmp_39;
  # DEBUG __new_finishD.52424 => _82
  # DEBUG D#473ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.49961 => D#473ptD.0
  # DEBUG D#485ptD.0 => this_3(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#484ptD.0 => this_3(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.49958 => D#484ptD.0
  # DEBUG __lastD.49959 => D#485ptD.0
  # DEBUG D.49960 => NULL
  # DEBUG D#140ptD.0 => D#484ptD.0
  # DEBUG D#141ptD.0 => D#485ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#483ptD.0 => this_3(D)->D.34940._M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#482ptD.0 => (long intD.12) D#483ptD.0
  # DEBUG D#481ptD.0 => (long intD.12) D#599ptD.0
  # DEBUG D#480ptD.0 => D#482ptD.0 - D#481ptD.0
  # DEBUG D#479ptD.0 => D#480ptD.0 /[ex] 4
  # DEBUG D#478ptD.0 => (long unsigned intD.14) D#479ptD.0
  # DEBUG D#477ptD.0 => &this_3(D)->D.34940
  # DEBUG thisD.52520 => D#477ptD.0
  # DEBUG __pD.52519 => D#599ptD.0
  # DEBUG __nD.52518 => D#478ptD.0
  if (prephitmp_107 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 256, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#477ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#478ptD.0
  # DEBUG __pD.52524 => D#599ptD.0
  # DEBUG __aD.52522 => D#157ptD.0
  # DEBUG __nD.52523 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.52527 => D#599ptD.0
  # DEBUG thisD.52525 => D#153ptD.0
  # DEBUG D.52526 => D#154ptD.0
  # .MEM_143 = VDEF <.MEM_120>
  # USE = nonlocal null { D.52568 } (escaped heap)
  # CLB = nonlocal null { D.52568 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_107);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 21, next block 31, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_121 = PHI <.MEM_120(20), .MEM_143(21)>
;;    succ:       31 [100.0%]  (FALLTHRU)

;;   basic block 31, loop depth 0, count 0, freq 366, maybe hot
;;    prev block 22, next block 23, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU)
  # .MEM_144 = VDEF <.MEM_121>
  this_3(D)->D.34940._M_implD.34431._M_startD.34433 = iftmp.79_97;
  # .MEM_145 = VDEF <.MEM_144>
  this_3(D)->D.34940._M_implD.34431._M_finishD.34434 = _82;
  # .MEM_146 = VDEF <.MEM_145>
  this_3(D)->D.34940._M_implD.34431._M_end_of_storageD.34435 = prephitmp_89;
  goto <bb 33>;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 31, next block 24, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG D#99ptD.0 => this_3(D)
  # DEBUG thisD.50103 => D#99ptD.0
  # DEBUG thisD.50102 => D#99ptD.0
  if (__new_size_4(D) < _14)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 4837, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _7 = __new_size_4(D) * 4;
  # PT = nonlocal escaped 
  _8 = _9 + _7;
  # DEBUG D#145ptD.0 => this_3(D)
  # DEBUG __posD.50106 => _8
  # DEBUG D#144ptD.0 => D#145ptD.0
  # DEBUG thisD.50107 => D#144ptD.0
  # DEBUG D#142ptD.0 => &D#144ptD.0->D.34940
  # DEBUG thisD.45847 => D#142ptD.0
  # DEBUG D#143ptD.0 => D#144ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG __firstD.45837 => _8
  # DEBUG __lastD.45838 => D#143ptD.0
  # DEBUG D.45839 => NULL
  # DEBUG D#140ptD.0 => _8
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # .MEM_17 = VDEF <.MEM_2(D)>
  MEM[(intD.9 * *)this_3(D) + 8B] = _8;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 7929, maybe hot
;;    prev block 24, next block 33, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_17(24), .MEM_2(D)(23)>
;;    succ:       33 [100.0%]  (FALLTHRU)

;;   basic block 33, loop depth 0, count 0, freq 10000, maybe hot
;;   Invalid sum of incoming frequencies 13278, should be 10000
;;    prev block 25, next block 32, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_27(25), .MEM_129(28), .MEM_146(31)>
;;    succ:       32 [100.0%]  (FALLTHRU)

;;   basic block 32, loop depth 0, count 0, freq 10000, maybe hot
;;    prev block 33, next block 26, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 26, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 32, next block 27, flags: (NEW, REACHABLE)
;;    pred:       10 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.52421 => NULL
  # DEBUG thisD.52425 => this_3(D)
  # DEBUG D#119ptD.0 => &this_3(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.52427 => NULL
  # DEBUG __iD.52426 => D#119ptD.0
  # DEBUG __lhsD.52429 => &__positionD.52311
  # DEBUG __rhsD.52428 => NULL
  # DEBUG thisD.46068 => &__positionD.52311
  # DEBUG thisD.46066 => NULL
  # DEBUG D#487ptD.0 => _12 /[ex] 4
  # DEBUG __elems_beforeD.52422 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_3(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.52547 => NULL
  # DEBUG thisD.52548 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (__len_109 != 0)
    goto <bb 27>;
  else
    goto <bb 12>;
;;    succ:       27 [8.5%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 3
;;    prev block 26, next block 1, flags: (NEW)
;;    pred:       26 [8.5%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_112 = __len_109 * 4;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*] (_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_, funcdef_no=1983, decl_uid=36828, cgraph_uid=653, symbol_order=654)


Pass statistics:
----------------


Global statistics (BBS:130, LOOPS:7, CONDITIONS:54, STMTS:1273)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*] (struct vectorD.33792 * const thisD.36829, struct iteratorD.36468 __positionD.36830, const struct basic_stringD.2844 & __xD.36831)
Eh tree:
   8 must_not_throw
   7 cleanup land:{4,<L10>}
   6 try land:{12,<L21>},{10,<L18>},{9,<L17>},{3,<L24>} catch:{}
     14 try land:{14,<L23>},{8,<L26>} catch:{}
     13 cleanup land:{7,<L16>}
     12 must_not_throw
     11 try land:{13,<L22>},{6,<L25>} catch:{}
     10 cleanup land:{5,<L13>}
     9 must_not_throw
   2 cleanup land:{11,<L19>},{2,<L20>}
{
  size_typeD.11502 __dnewD.52849;
  struct basic_stringD.2844 * D.52842;
  struct basic_stringD.2844 * __firstD.52801;
  struct basic_stringD.2844 * __resultD.52803;
  size_typeD.11502 __dnewD.52775;
  struct basic_stringD.2844 * D.52768;
  struct basic_stringD.2844 * __firstD.52727;
  struct basic_stringD.2844 * __resultD.52729;
  size_typeD.11502 __dnewD.52701;
  const long unsigned intD.14 D.52697;
  const size_typeD.36476 __lenD.52691;
  size_typeD.36476 D.52696;
  size_typeD.36476 __nD.52689;
  struct basic_stringD.2844 * D.52687;
  size_typeD.11502 __dnewD.52653;
  size_typeD.11502 __dnewD.52624;
  struct basic_stringD.2844 * const __positionD.49739;
  struct basic_stringD.2844 * __firstD.49643;
  difference_typeD.39582 __nD.49537;
  struct basic_stringD.2844 * __lastD.49522;
  struct basic_stringD.2844 * __resultD.49523;
  struct basic_stringD.2844 * __new_finishD.40368;
  struct basic_stringD.2844 __x_copyD.40352;
  struct basic_stringD.2844 * _8;
  struct basic_stringD.2844 * _9;
  size_typeD.11502 pretmp_10;
  struct basic_stringD.2844 * _12;
  long intD.12 __last.69_15;
  struct basic_stringD.2844 * _16;
  long intD.12 _19;
  long intD.12 __first.70_20;
  charD.10 * _21;
  charD.10 * const _23;
  boolD.2757 _25;
  charD.10 * _27;
  struct basic_stringD.2844 * const _29;
  boolD.2757 _30;
  long unsigned intD.14 _31;
  struct basic_stringD.2844 * _32;
  const size_typeD.11502 _33;
  charD.10 * const _34;
  charD.10 * _37;
  struct basic_stringD.2844 * _38;
  const size_typeD.11502 _39;
  charD.10 * const _40;
  struct basic_stringD.2844 * prephitmp_44;
  struct basic_stringD.2844 * _48;
  voidD.45 * _50;
  charD.10 * _53;
  charD.10 * const _64;
  charD.10 * const _65;
  const size_typeD.11502 _66;
  charD.10 * _67;
  size_typeD.11502 pretmp_69;
  boolD.2757 _71;
  charD.10 * const _73;
  const charD.10 * _74;
  charD.10 * const _76;
  charD.10 * const _78;
  const charD.10 * _79;
  struct basic_stringD.2844 * pretmp_100;
  struct basic_stringD.2844 * prephitmp_101;
  long unsigned intD.14 prephitmp_104;
  charD.10[16] * pretmp_106;
  charD.10[16] * pretmp_107;
  size_typeD.11502 prephitmp_109;
  charD.10[16] * prephitmp_113;
  struct basic_stringD.2844 * pretmp_114;
  struct basic_stringD.2844 * prephitmp_115;
  long unsigned intD.14 prephitmp_133;
  charD.10 * _134;
  long unsigned intD.14 __dnew.63_135;
  const char_typeD.6629 _137;
  charD.10 * _140;
  charD.10 * const prephitmp_141;
  long intD.12 _144;
  charD.10 * _145;
  long unsigned intD.14 __dnew.63_146;
  const char_typeD.6629 _148;
  charD.10 * _151;
  struct basic_stringD.2844 * _152;
  boolD.2757 _154;
  long intD.12 _155;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  voidD.45 * _160;
  boolD.2757 _161;
  size_typeD.11502 prephitmp_162;
  boolD.2757 _163;
  charD.10 * _170;
  long unsigned intD.14 __dnew.63_171;
  const char_typeD.6629 _173;
  charD.10 * _176;
  charD.10 * const pretmp_177;
  charD.10 * _178;
  charD.10 * const _179;
  const size_typeD.11502 _180;
  charD.10 * _181;
  voidD.45 * _184;
  charD.10 * const pretmp_185;
  charD.10 * const _186;
  const charD.10 * _187;
  charD.10 * _193;
  long unsigned intD.14 __dnew.63_194;
  const char_typeD.6629 _196;
  charD.10 * _199;
  size_typeD.11502 pretmp_200;
  charD.10 * _202;
  charD.10 * const _203;
  const size_typeD.11502 _204;
  charD.10 * _205;
  voidD.45 * _208;
  charD.10 * const pretmp_209;
  charD.10 * const _210;
  const charD.10 * _211;
  charD.10 * _217;
  long unsigned intD.14 __dnew.63_218;
  const char_typeD.6629 _220;
  charD.10 * _223;
  charD.10 * const prephitmp_226;
  size_typeD.11502 pretmp_229;
  voidD.45 * _232;
  charD.10 * const prephitmp_236;
  size_typeD.11502 prephitmp_239;
  struct basic_stringD.2844 * pretmp_243;
  charD.10 * const _270;
  long intD.12 _271;
  charD.10 * const _322;
  size_typeD.11502 prephitmp_346;
  charD.10 * const prephitmp_358;
  boolD.2757 _362;
  charD.10 * const prephitmp_364;
  long unsigned intD.14 pretmp_367;
  charD.10 * const _378;
  charD.10 * const _384;
  charD.10 * const _385;
  size_typeD.11502 pretmp_389;
  boolD.2757 _393;
  boolD.2757 _394;
  long intD.12 _395;
  boolD.2757 _396;
  boolD.2757 _397;
  charD.10 * const pretmp_398;
  boolD.2757 _399;
  boolD.2757 _400;
  boolD.2757 _401;
  long intD.12 _402;
  charD.10 * const pretmp_403;
  size_typeD.11502 prephitmp_405;
  long intD.12 _406;
  long intD.12 _407;
  boolD.2757 _408;

;;   basic block 2, loop depth 0, count 0, freq 483, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_6(D)>
  # PT = nonlocal 
  __position_28 = MEM[(struct __normal_iteratorD.36469 *)&__positionD.36830];
  # DEBUG __positionD.49739 => __position_28
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _8 = this_7(D)->D.36900._M_implD.36391._M_finishD.36394;
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _9 = this_7(D)->D.36900._M_implD.36391._M_end_of_storageD.36395;
  if (_8 != _9)
    goto <bb 3>;
  else
    goto <bb 25>;
;;    succ:       3 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#451ptD.0 => _8 + 18446744073709551584
  # DEBUG D#464ptD.0 => &this_7(D)->D.36900._M_implD.36391
  # DEBUG D#447ptD.0 => D#464ptD.0
  # DEBUG __pD.49486 => _8
  # DEBUG __argD.49487 => D#451ptD.0
  # DEBUG __aD.49488 => D#447ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG D#445ptD.0 => D#446ptD.0
  # DEBUG __pD.49491 => _8
  # DEBUG __valD.49490 => D#451ptD.0
  # DEBUG thisD.49489 => D#445ptD.0
  # DEBUG D#33ptD.0 => 32
  # DEBUG __pD.49284 => _8
  # DEBUG D.49285 => D#33ptD.0
  if (_8 != 0B)
    goto <bb 4>;
  else
    goto <bb 10>;
;;    succ:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.49493 => _8
  # DEBUG __strD.49492 => D#451ptD.0
  # DEBUG thisD.49278 => D#451ptD.0
  # DEBUG D#442ptD.0 => &D#451ptD.0->_M_dataplusD.11519
  # DEBUG thisD.49494 => _8
  # PT = nonlocal escaped 
  _53 = &_8->D.11539._M_local_bufD.11541;
  # DEBUG D#443ptD.0 => &_8->_M_dataplusD.11519
  # DEBUG D#151ptD.0 => D#442ptD.0
  # DEBUG thisD.49497 => D#443ptD.0
  # DEBUG __datD.49496 => _53
  # DEBUG __aD.49495 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#443ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_92 = VDEF <.MEM_6(D)>
  MEM[(struct _Alloc_hiderD.11518 *)_8]._M_pD.11525 = _53;
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _40 = MEM[(charD.10 * *)_8 + -32B];
  # DEBUG D#2ptD.0 => D#451ptD.0
  # DEBUG thisD.49271 => D#2ptD.0
  # VUSE <.MEM_92>
  _39 = MEM[(long unsigned intD.14 *)_8 + -24B];
  # DEBUG D#5ptD.0 => D#451ptD.0
  # DEBUG thisD.49268 => D#5ptD.0
  # PT = nonlocal escaped 
  _37 = _40 + _39;
  # DEBUG D#2ptD.0 => D#451ptD.0
  # DEBUG thisD.49265 => D#2ptD.0
  # DEBUG thisD.49500 => _8
  # DEBUG __begD.49499 => _40
  # DEBUG __endD.49498 => _37
  # DEBUG thisD.49504 => _8
  # DEBUG __begD.49503 => _40
  # DEBUG __endD.49502 => _37
  # DEBUG thisD.52621 => _8
  # DEBUG __begD.52622 => _40
  # DEBUG __endD.52623 => _37
  # DEBUG __ptrD.49230 => _40
  # RANGE [0, 1]
  _163 = _37 != 0B;
  # RANGE [0, 1]
  _362 = _40 == 0B;
  # RANGE [0, 1]
  _401 = _163 & _362;
  if (_401 != 0)
    goto <bb 115>;
  else
    goto <bb 116>;
;;    succ:       115 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                116 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 91, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       116 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_246 = VDEF <.MEM_245>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _134 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_8, &__dnewD.52624, 0);
  # DEBUG D#6ptD.0 => _8
  # DEBUG __pD.52643 => _134
  # DEBUG thisD.52642 => D#6ptD.0
  # .MEM_247 = VDEF <.MEM_246>
  MEM[(charD.10 * *)_8] = _134;
  # VUSE <.MEM_247>
  __dnew.63_135 = __dnewD.52624;
  # DEBUG D#7ptD.0 => _8
  # DEBUG __capacityD.52645 => __dnew.63_135
  # DEBUG thisD.52644 => D#7ptD.0
  # .MEM_248 = VDEF <.MEM_247>
  MEM[(size_typeD.11502 *)_8 + 16B] = __dnew.63_135;
  # DEBUG D#2ptD.0 => _8
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52627 => _134
  # DEBUG __k1D.52626 => _40
  # DEBUG __k2D.52625 => _37
  # DEBUG __dD.52630 => _134
  # DEBUG __sD.52629 => _40
  # DEBUG __nD.52628 => _39
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 223, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       116 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => _8
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52627 => _53
  # DEBUG __k1D.52626 => _40
  # DEBUG __k2D.52625 => _37
  # DEBUG __dD.52630 => _53
  # DEBUG __sD.52629 => _40
  # DEBUG __nD.52628 => _39
  if (_39 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 119, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_245>
  _137 = MEM[(const char_typeD.6629 &)_40];
  # DEBUG D#32ptD.0 => _40
  # DEBUG __c1D.52635 => _53
  # DEBUG __c2D.52634 => D#32ptD.0
  # .MEM_249 = VDEF <.MEM_245>
  MEM[(char_typeD.6629 &)_53] = _137;
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 195, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _270 = PHI <_53(6), _134(5)>
  # .MEM_386 = PHI <.MEM_245(6), .MEM_248(5)>
  # DEBUG D#2ptD.0 => _8
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52627 => _270
  # DEBUG __k1D.52626 => _40
  # DEBUG __k2D.52625 => _37
  # DEBUG __dD.52630 => _270
  # DEBUG __sD.52629 => _40
  # DEBUG __nD.52628 => _39
  # DEBUG __s1D.52633 => _270
  # DEBUG __s2D.52632 => _40
  # DEBUG __nD.52631 => _39
  # .MEM_250 = VDEF <.MEM_386>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  memcpyD.992 (_270, _40, _39);
  # VUSE <.MEM_250>
  pretmp_69 = __dnewD.52624;
  # VUSE <.MEM_250>
  pretmp_403 = MEM[(charD.10 * *)_8];
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_225 = PHI <.MEM_249(7), .MEM_250(8)>
  # prephitmp_346 = PHI <_39(7), pretmp_69(8)>
  # PT = nonlocal escaped 
  # prephitmp_358 = PHI <_53(7), pretmp_403(8)>
  # DEBUG D#655ptD.0 => __dnewD.52624
  # DEBUG thisD.52637 => _8
  # DEBUG __nD.52636 => D#655ptD.0
  # DEBUG D#4ptD.0 => _8
  # DEBUG __lengthD.52639 => D#655ptD.0
  # DEBUG thisD.52638 => D#4ptD.0
  # .MEM_251 = VDEF <.MEM_225>
  MEM[(size_typeD.11502 *)_8 + 8B] = prephitmp_346;
  # DEBUG D#2ptD.0 => _8
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped 
  _140 = prephitmp_358 + prephitmp_346;
  # DEBUG __c1D.52641 => _140
  # DEBUG __c2D.52640 => D#32ptD.0
  # .MEM_252 = VDEF <.MEM_251>
  MEM[(char_typeD.6629 &)_140] = 0;
  # .MEM_253 = VDEF <.MEM_252>
  __dnewD.52624 ={v} {CLOBBER};
  # VUSE <.MEM_253>
  pretmp_243 = this_7(D)->D.36900._M_implD.36391._M_finishD.36394;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_54 = PHI <.MEM_253(9), .MEM_6(D)(3)>
  # PT = nonlocal escaped 
  # prephitmp_44 = PHI <pretmp_243(9), _8(3)>
  # PT = nonlocal escaped 
  _12 = prephitmp_44 + 32;
  # .MEM_13 = VDEF <.MEM_54>
  this_7(D)->D.36900._M_implD.36391._M_finishD.36394 = _12;
  # DEBUG thisD.49506 => &__x_copyD.40352
  # DEBUG __strD.49507 => __x_14(D)
  # DEBUG thisD.49278 => __x_14(D)
  # DEBUG D#442ptD.0 => &__x_14(D)->_M_dataplusD.11519
  # DEBUG thisD.49509 => &__x_copyD.40352
  # DEBUG D#443ptD.0 => &__x_copyD.40352._M_dataplusD.11519
  # DEBUG D#151ptD.0 => D#442ptD.0
  # DEBUG thisD.49512 => D#443ptD.0
  # DEBUG __datD.49511 => &__x_copyD.40352.D.11539._M_local_bufD.11541
  # DEBUG __aD.49510 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#443ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_94 = VDEF <.MEM_13>
  MEM[(struct _Alloc_hiderD.11518 *)&__x_copyD.40352]._M_pD.11525 = &__x_copyD.40352.D.11539._M_local_bufD.11541;
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _34 = MEM[(charD.10 * *)__x_14(D)];
  # DEBUG D#2ptD.0 => __x_14(D)
  # DEBUG thisD.49271 => D#2ptD.0
  # VUSE <.MEM_94>
  _33 = MEM[(long unsigned intD.14 *)__x_14(D) + 8B];
  # DEBUG D#5ptD.0 => __x_14(D)
  # DEBUG thisD.49268 => D#5ptD.0
  # PT = nonlocal escaped 
  _27 = _34 + _33;
  # DEBUG D#2ptD.0 => __x_14(D)
  # DEBUG thisD.49265 => D#2ptD.0
  # DEBUG thisD.49515 => &__x_copyD.40352
  # DEBUG __begD.49514 => _34
  # DEBUG __endD.49513 => _27
  # DEBUG thisD.49519 => &__x_copyD.40352
  # DEBUG __begD.49518 => _34
  # DEBUG __endD.49517 => _27
  # DEBUG thisD.52650 => &__x_copyD.40352
  # DEBUG __begD.52651 => _34
  # DEBUG __endD.52652 => _27
  # DEBUG __ptrD.49230 => _34
  # RANGE [0, 1]
  _408 = _27 != 0B;
  # RANGE [0, 1]
  _161 = _34 == 0B;
  # RANGE [0, 1]
  _154 = _161 & _408;
  if (_154 != 0)
    goto <bb 115>;
  else
    goto <bb 117>;
;;    succ:       115 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                117 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 131, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       117 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_256 = VDEF <.MEM_255>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _145 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&__x_copyD.40352, &__dnewD.52653, 0);
  # DEBUG D#6ptD.0 => &__x_copyD.40352
  # DEBUG __pD.52672 => _145
  # DEBUG thisD.52671 => D#6ptD.0
  # .MEM_257 = VDEF <.MEM_256>
  MEM[(charD.10 * *)&__x_copyD.40352] = _145;
  # VUSE <.MEM_257>
  __dnew.63_146 = __dnewD.52653;
  # DEBUG D#7ptD.0 => &__x_copyD.40352
  # DEBUG __capacityD.52674 => __dnew.63_146
  # DEBUG thisD.52673 => D#7ptD.0
  # .MEM_258 = VDEF <.MEM_257>
  MEM[(size_typeD.11502 *)&__x_copyD.40352 + 16B] = __dnew.63_146;
  # DEBUG D#2ptD.0 => &__x_copyD.40352
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52656 => _145
  # DEBUG __k1D.52655 => _34
  # DEBUG __k2D.52654 => _27
  # DEBUG __dD.52659 => _145
  # DEBUG __sD.52658 => _34
  # DEBUG __nD.52657 => _33
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 319, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       117 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => &__x_copyD.40352
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52656 => &__x_copyD.40352.D.11539._M_local_bufD.11541
  # DEBUG __k1D.52655 => _34
  # DEBUG __k2D.52654 => _27
  # DEBUG __dD.52659 => &__x_copyD.40352.D.11539._M_local_bufD.11541
  # DEBUG __sD.52658 => _34
  # DEBUG __nD.52657 => _33
  if (_33 == 1)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [53.4%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [46.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 170, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [53.4%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_255>
  _148 = MEM[(const char_typeD.6629 &)_34];
  # DEBUG D#32ptD.0 => _34
  # DEBUG __c1D.52664 => &__x_copyD.40352.D.11539._M_local_bufD.11541
  # DEBUG __c2D.52663 => D#32ptD.0
  # .MEM_259 = VDEF <.MEM_255>
  MEM[(char_typeD.6629 &)&__x_copyD.40352 + 16] = _148;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 280, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [46.6%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.40352 } (escaped)
  # _322 = PHI <&__x_copyD.40352.D.11539._M_local_bufD.11541(12), _145(11)>
  # .MEM_388 = PHI <.MEM_255(12), .MEM_258(11)>
  # DEBUG D#2ptD.0 => &__x_copyD.40352
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52656 => _322
  # DEBUG __k1D.52655 => _34
  # DEBUG __k2D.52654 => _27
  # DEBUG __dD.52659 => _322
  # DEBUG __sD.52658 => _34
  # DEBUG __nD.52657 => _33
  # DEBUG __s1D.52662 => _322
  # DEBUG __s2D.52661 => _34
  # DEBUG __nD.52660 => _33
  # .MEM_260 = VDEF <.MEM_388>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  memcpyD.992 (_322, _34, _33);
  # VUSE <.MEM_260>
  pretmp_10 = __dnewD.52653;
  # VUSE <.MEM_260>
  pretmp_398 = MEM[(charD.10 * *)&__x_copyD.40352];
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_227 = PHI <.MEM_259(13), .MEM_260(14)>
  # prephitmp_405 = PHI <_33(13), pretmp_10(14)>
  # PT = nonlocal escaped null { D.40352 } (escaped)
  # prephitmp_226 = PHI <&__x_copyD.40352.D.11539._M_local_bufD.11541(13), pretmp_398(14)>
  # DEBUG D#654ptD.0 => __dnewD.52653
  # DEBUG thisD.52666 => &__x_copyD.40352
  # DEBUG __nD.52665 => D#654ptD.0
  # DEBUG D#4ptD.0 => &__x_copyD.40352
  # DEBUG __lengthD.52668 => D#654ptD.0
  # DEBUG thisD.52667 => D#4ptD.0
  # .MEM_261 = VDEF <.MEM_227>
  MEM[(size_typeD.11502 *)&__x_copyD.40352 + 8B] = prephitmp_405;
  # DEBUG D#2ptD.0 => &__x_copyD.40352
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped null { D.40352 } (escaped)
  _151 = prephitmp_226 + prephitmp_405;
  # DEBUG __c1D.52670 => _151
  # DEBUG __c2D.52669 => D#32ptD.0
  # .MEM_262 = VDEF <.MEM_261>
  MEM[(char_typeD.6629 &)_151] = 0;
  # .MEM_263 = VDEF <.MEM_262>
  __dnewD.52653 ={v} {CLOBBER};
  # VUSE <.MEM_263>
  # PT = nonlocal escaped 
  _16 = this_7(D)->D.36900._M_implD.36391._M_finishD.36394;
  # PT = nonlocal escaped 
  __result_17 = _16 + 18446744073709551584;
  # PT = nonlocal escaped 
  __last_18 = _16 + 18446744073709551552;
  # DEBUG thisD.49543 => &__positionD.36830
  # DEBUG __firstD.49521 => __position_28
  # DEBUG __lastD.49522 => __last_18
  # DEBUG __resultD.49523 => __result_17
  # DEBUG __itD.47717 => __last_18
  # DEBUG __itD.46565 => __last_18
  # DEBUG __itD.47715 => __position_28
  # DEBUG __itD.46565 => __position_28
  # DEBUG __firstD.49526 => __position_28
  # DEBUG __lastD.49525 => __last_18
  # DEBUG __resultD.49524 => __result_17
  # DEBUG __itD.47693 => __result_17
  # DEBUG __itD.46568 => __result_17
  # DEBUG __itD.47691 => __last_18
  # DEBUG __itD.46568 => __last_18
  # DEBUG __itD.47689 => __position_28
  # DEBUG __itD.46568 => __position_28
  # DEBUG __firstD.49529 => NULL
  # DEBUG __lastD.49528 => NULL
  # DEBUG __resultD.49527 => NULL
  # DEBUG __simpleD.49533 => 0
  # DEBUG __firstD.49536 => NULL
  # DEBUG __lastD.49535 => NULL
  # DEBUG __resultD.49534 => NULL
  __last.69_15 = (long intD.12) __last_18;
  __first.70_20 = (long intD.12) __position_28;
  _19 = __last.69_15 - __first.70_20;
  # RANGE [-288230376151711744, 288230376151711743]
  __n_57 = _19 /[ex] 32;
  # DEBUG __nD.49537 => __n_57
  # DEBUG __nD.49537 => __n_57
  # DEBUG __resultD.49534 => __result_17
  # DEBUG __lastD.49535 => __last_18
  if (__n_57 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_392 = PHI <.MEM_263(15), .MEM_96(19)>
  # DEBUG thisD.49550 => &__positionD.36830
  # DEBUG thisD.49545 => NULL
  # DEBUG __strD.49546 => &__x_copyD.40352
  # DEBUG thisD.49548 => NULL
  # DEBUG __strD.49547 => &__x_copyD.40352
  [LP 2] # .MEM_97 = VDEF <.MEM_392>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (__position_28, &__x_copyD.40352);
  goto <bb 22>;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-288230376151711744, 288230376151711743]
  # __n_131 = PHI <__n_57(17), __n_63(20)>
  # PT = nonlocal escaped 
  # __last_132 = PHI <__last_18(17), __last_60(20)>
  # PT = nonlocal escaped 
  # __result_166 = PHI <__result_17(17), __result_62(20)>
  # .MEM_167 = PHI <.MEM_263(17), .MEM_96(20)>
  # DEBUG __nD.49537 => __n_131
  # DEBUG __resultD.49534 => __result_166
  # DEBUG __lastD.49535 => __last_132
  # PT = nonlocal escaped 
  __last_60 = __last_132 + 18446744073709551584;
  # DEBUG __lastD.49535 => __last_60
  # PT = nonlocal escaped 
  __result_62 = __result_166 + 18446744073709551584;
  # DEBUG __resultD.49534 => __result_62
  # DEBUG thisD.49539 => __result_62
  # DEBUG __strD.49538 => __last_60
  # DEBUG thisD.49541 => __result_62
  # DEBUG __strD.49540 => __last_60
  [LP 11] # .MEM_96 = VDEF <.MEM_167>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (__result_62, __last_60);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                94 (EH,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 288230376151711742] NONZERO 288230376151711743
  __n_63 = __n_131 + -1;
  # DEBUG __nD.49537 => __n_63
  # DEBUG __nD.49537 => __n_63
  # DEBUG __resultD.49534 => __result_62
  # DEBUG __lastD.49535 => __last_60
  if (__n_63 <= 0)
    goto <bb 16>;
  else
    goto <bb 20>;
;;    succ:       16 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L20>: [LP 2]
  goto <bb 95> (<L3>);
;;    succ:       95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.49552 => &__x_copyD.40352
  # DEBUG thisD.49553 => &__x_copyD.40352
  # DEBUG thisD.49562 => &__x_copyD.40352
  # VUSE <.MEM_97>
  # PT = nonlocal escaped null { D.40352 } (escaped)
  _64 = MEM[(charD.10 * *)&__x_copyD.40352];
  # DEBUG D#2ptD.0 => &__x_copyD.40352
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.49563 => &__x_copyD.40352
  if (&__x_copyD.40352.D.11539._M_local_bufD.11541 != _64)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 353, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => __x_copyD.40352.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.49555 => &__x_copyD.40352
  # DEBUG __sizeD.49554 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &__x_copyD.40352
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &__x_copyD.40352
  # DEBUG D#216ptD.0 => &__x_copyD.40352._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.49558 => _64
  # DEBUG __aD.49556 => D#214ptD.0
  # DEBUG __nD.49557 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.49561 => _64
  # DEBUG thisD.49559 => D#210ptD.0
  # DEBUG D.49560 => D#211ptD.0
  # .MEM_98 = VDEF <.MEM_97>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (_64);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_82 = PHI <.MEM_97(22), .MEM_98(23)>
  # DEBUG D#220ptD.0 => &__x_copyD.40352._M_dataplusD.11519
  # DEBUG thisD.49564 => D#220ptD.0
  # DEBUG thisD.49565 => D#220ptD.0
  # DEBUG thisD.49566 => D#220ptD.0
  # .MEM_22 = VDEF <.MEM_82>
  __x_copyD.40352 ={v} {CLOBBER};
  goto <bb 93>;
;;    succ:       93 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       2 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.52688 => this_7(D)
  # DEBUG __nD.52689 => 1
  # DEBUG __nD.52689 => 1
  # DEBUG __sD.52690 => "vector::_M_insert_aux"
  # DEBUG D#329ptD.0 => this_7(D)
  # DEBUG thisD.47753 => D#329ptD.0
  # DEBUG D#328ptD.0 => D#329ptD.0
  # DEBUG D#327ptD.0 => &D#328ptD.0->D.36900
  # DEBUG thisD.47743 => D#327ptD.0
  # DEBUG __aD.47735 => D#326ptD.0
  # DEBUG D#325ptD.0 => D#326ptD.0
  # DEBUG D#324ptD.0 => D#325ptD.0
  # DEBUG thisD.47726 => D#324ptD.0
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _29 = MEM[(struct basic_stringD.2844 * *)this_7(D)];
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG thisD.52694 => D#98ptD.0
  # DEBUG thisD.52695 => D#98ptD.0
  _155 = (long intD.12) _8;
  _156 = (long intD.12) _29;
  _157 = _155 - _156;
  # RANGE [-288230376151711744, 288230376151711743]
  _158 = _157 /[ex] 32;
  # RANGE ~[288230376151711744, 18158513697557839871]
  _159 = (const long unsigned intD.14) _158;
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG thisD.47771 => D#98ptD.0
  # DEBUG thisD.47770 => D#98ptD.0
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG thisD.47766 => D#98ptD.0
  # DEBUG thisD.47765 => D#98ptD.0
  # DEBUG __aD.52693 => &D.52697
  # DEBUG __bD.52692 => &__nD.52689
  if (_159 == 0)
    goto <bb 119>;
  else
    goto <bb 26>;
;;    succ:       119 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __len_164 = _159 + _159;
  # DEBUG __lenD.52691 => __len_164
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG thisD.47758 => D#98ptD.0
  # DEBUG thisD.47757 => D#98ptD.0
  if (_159 > __len_164)
    goto <bb 118>;
  else
    goto <bb 27>;
;;    succ:       118 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.52691 => __len_164
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG thisD.47758 => D#98ptD.0
  # DEBUG thisD.47757 => D#98ptD.0
  # DEBUG D#329ptD.0 => this_7(D)
  # DEBUG thisD.47773 => D#329ptD.0
  # DEBUG D#328ptD.0 => D#329ptD.0
  # DEBUG D#327ptD.0 => &D#328ptD.0->D.36900
  # DEBUG thisD.47743 => D#327ptD.0
  # DEBUG __aD.47735 => D#326ptD.0
  # DEBUG D#325ptD.0 => D#326ptD.0
  # DEBUG D#324ptD.0 => D#325ptD.0
  # DEBUG thisD.47726 => D#324ptD.0
  if (__len_164 > 576460752303423487)
    goto <bb 118>;
  else
    goto <bb 119>;
;;    succ:       118 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                119 (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 27, next block 29, flags: (NEW)
;;    pred:       119 [20.0%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_367 = __len_59 * 32;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 29, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       118 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _271 = PHI <_407(118), _402(28)>
  # RANGE [32, 18446744073709551584] NONZERO 18446744073709551584
  # prephitmp_133 = PHI <18446744073709551584(118), pretmp_367(28)>
  # DEBUG __lenD.40358 => NULL
  # DEBUG thisD.49590 => this_7(D)
  # DEBUG D#117ptD.0 => &this_7(D)->D.36900._M_implD.36391._M_startD.36393
  # DEBUG thisD.49592 => NULL
  # DEBUG __iD.49591 => D#117ptD.0
  # DEBUG __lhsD.49587 => &__positionD.36830
  # DEBUG __rhsD.49588 => &D.40360
  # DEBUG thisD.45605 => &__positionD.36830
  # DEBUG thisD.45603 => &D.40360
  # DEBUG D#467ptD.0 => _271 /[ex] 32
  # DEBUG __elems_beforeD.40359 => (const size_typeD.36476) D#467ptD.0
  # DEBUG D#466ptD.0 => &this_7(D)->D.36900
  # DEBUG D#337ptD.0 => D#466ptD.0
  # DEBUG __nD.52679 => NULL
  # DEBUG thisD.52680 => D#337ptD.0
  # DEBUG D#336ptD.0 => D#337ptD.0
  # DEBUG D#335ptD.0 => &D#336ptD.0->_M_implD.36391
  # DEBUG D#334ptD.0 => D#335ptD.0
  # DEBUG __nD.52683 => NULL
  # DEBUG __aD.52682 => D#334ptD.0
  # DEBUG D#333ptD.0 => D#334ptD.0
  # DEBUG D#331ptD.0 => D#333ptD.0
  # DEBUG D#332ptD.0 => 0B
  # DEBUG __nD.52686 => NULL
  # DEBUG thisD.52684 => D#331ptD.0
  # DEBUG D.52685 => D#332ptD.0
  # DEBUG D#330ptD.0 => D#331ptD.0
  # DEBUG D#324ptD.0 => D#330ptD.0
  # DEBUG thisD.47778 => D#324ptD.0
  # .MEM_269 = VDEF <.MEM_6(D)>
  # PT = { D.52887 } (escaped heap)
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _152 = _ZnwmD.2764 (prephitmp_133);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       119 [80.0%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_153 = PHI <0B(119), _152(29)>
  # .MEM_228 = PHI <.MEM_6(D)(119), .MEM_269(29)>
  # _144 = PHI <_402(119), _271(29)>
  # prephitmp_104 = PHI <0(119), prephitmp_133(29)>
  # DEBUG __new_startD.40367 => NULL
  # DEBUG __new_finishD.40368 => NULL
  # RANGE [0, 18446744073709551615]
  _31 = (long unsigned intD.14) _144;
  # PT = null { D.52887 } (escaped heap)
  _32 = __new_finish_153 + _31;
  # DEBUG D#465ptD.0 => &this_7(D)->D.36900._M_implD.36391
  # DEBUG D#447ptD.0 => D#465ptD.0
  # DEBUG __pD.49567 => _32
  # DEBUG __argD.49568 => __x_14(D)
  # DEBUG __aD.49569 => D#447ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG D#445ptD.0 => D#446ptD.0
  # DEBUG __pD.49572 => _32
  # DEBUG __valD.49571 => __x_14(D)
  # DEBUG thisD.49570 => D#445ptD.0
  # DEBUG D#33ptD.0 => 32
  # DEBUG __pD.49284 => _32
  # DEBUG D.49285 => D#33ptD.0
  if (_32 != 0B)
    goto <bb 31>;
  else
    goto <bb 38>;
;;    succ:       31 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.49574 => _32
  # DEBUG __strD.49573 => __x_14(D)
  # DEBUG thisD.49278 => __x_14(D)
  # DEBUG D#442ptD.0 => &__x_14(D)->_M_dataplusD.11519
  # DEBUG thisD.49575 => _32
  # PT = null { D.52887 } (escaped heap)
  _21 = &_32->D.11539._M_local_bufD.11541;
  # DEBUG D#443ptD.0 => &_32->_M_dataplusD.11519
  # DEBUG D#151ptD.0 => D#442ptD.0
  # DEBUG thisD.49578 => D#443ptD.0
  # DEBUG __datD.49577 => _21
  # DEBUG __aD.49576 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#443ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_108 = VDEF <.MEM_228>
  MEM[(struct _Alloc_hiderD.11518 *)_32]._M_pD.11525 = _21;
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _65 = MEM[(charD.10 * *)__x_14(D)];
  # DEBUG D#2ptD.0 => __x_14(D)
  # DEBUG thisD.49271 => D#2ptD.0
  # VUSE <.MEM_108>
  _66 = MEM[(long unsigned intD.14 *)__x_14(D) + 8B];
  # DEBUG D#5ptD.0 => __x_14(D)
  # DEBUG thisD.49268 => D#5ptD.0
  # PT = nonlocal escaped 
  _67 = _65 + _66;
  # DEBUG D#2ptD.0 => __x_14(D)
  # DEBUG thisD.49265 => D#2ptD.0
  # DEBUG thisD.49581 => _32
  # DEBUG __begD.49580 => _65
  # DEBUG __endD.49579 => _67
  # DEBUG thisD.49585 => _32
  # DEBUG __begD.49584 => _65
  # DEBUG __endD.49583 => _67
  # DEBUG thisD.52698 => _32
  # DEBUG __begD.52699 => _65
  # DEBUG __endD.52700 => _67
  # DEBUG __ptrD.49230 => _65
  # RANGE [0, 1]
  _71 = _67 != 0B;
  # RANGE [0, 1]
  _30 = _65 == 0B;
  # RANGE [0, 1]
  _25 = _30 & _71;
  if (_25 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;
;;    succ:       120 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                121 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       121 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 12] # .MEM_273 = VDEF <.MEM_272>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _170 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_32, &__dnewD.52701, 0);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                98 (EH,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => _32
  # DEBUG __pD.52720 => _170
  # DEBUG thisD.52719 => D#6ptD.0
  # .MEM_274 = VDEF <.MEM_273>
  MEM[(charD.10 * *)_32] = _170;
  # VUSE <.MEM_274>
  __dnew.63_171 = __dnewD.52701;
  # DEBUG D#7ptD.0 => _32
  # DEBUG __capacityD.52722 => __dnew.63_171
  # DEBUG thisD.52721 => D#7ptD.0
  # .MEM_275 = VDEF <.MEM_274>
  MEM[(size_typeD.11502 *)_32 + 16B] = __dnew.63_171;
  # DEBUG D#2ptD.0 => _32
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52704 => _170
  # DEBUG __k1D.52703 => _65
  # DEBUG __k2D.52702 => _67
  # DEBUG __dD.52707 => _170
  # DEBUG __sD.52706 => _65
  # DEBUG __nD.52705 => _66
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       121 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => _32
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52704 => _21
  # DEBUG __k1D.52703 => _65
  # DEBUG __k2D.52702 => _67
  # DEBUG __dD.52707 => _21
  # DEBUG __sD.52706 => _65
  # DEBUG __nD.52705 => _66
  if (_66 == 1)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [53.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [47.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 10, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [53.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_272>
  _173 = MEM[(const char_typeD.6629 &)_65];
  # DEBUG D#32ptD.0 => _65
  # DEBUG __c1D.52712 => _21
  # DEBUG __c2D.52711 => D#32ptD.0
  # .MEM_276 = VDEF <.MEM_272>
  MEM[(char_typeD.6629 &)_21] = _173;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 17, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [47.0%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  # _384 = PHI <_21(34), _170(33)>
  # .MEM_381 = PHI <.MEM_272(34), .MEM_275(33)>
  # DEBUG D#2ptD.0 => _32
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52704 => _384
  # DEBUG __k1D.52703 => _65
  # DEBUG __k2D.52702 => _67
  # DEBUG __dD.52707 => _384
  # DEBUG __sD.52706 => _65
  # DEBUG __nD.52705 => _66
  # DEBUG __s1D.52710 => _384
  # DEBUG __s2D.52709 => _65
  # DEBUG __nD.52708 => _66
  # .MEM_277 = VDEF <.MEM_381>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  memcpyD.992 (_384, _65, _66);
  # VUSE <.MEM_277>
  pretmp_200 = __dnewD.52701;
  # VUSE <.MEM_277>
  pretmp_209 = MEM[(charD.10 * *)_32];
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_230 = PHI <.MEM_276(35), .MEM_277(36)>
  # prephitmp_239 = PHI <_66(35), pretmp_200(36)>
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  # prephitmp_364 = PHI <_21(35), pretmp_209(36)>
  # DEBUG D#653ptD.0 => __dnewD.52701
  # DEBUG thisD.52714 => _32
  # DEBUG __nD.52713 => D#653ptD.0
  # DEBUG D#4ptD.0 => _32
  # DEBUG __lengthD.52716 => D#653ptD.0
  # DEBUG thisD.52715 => D#4ptD.0
  # .MEM_278 = VDEF <.MEM_230>
  MEM[(size_typeD.11502 *)_32 + 8B] = prephitmp_239;
  # DEBUG D#2ptD.0 => _32
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  _176 = prephitmp_364 + prephitmp_239;
  # DEBUG __c1D.52718 => _176
  # DEBUG __c2D.52717 => D#32ptD.0
  # .MEM_279 = VDEF <.MEM_278>
  MEM[(char_typeD.6629 &)_176] = 0;
  # .MEM_280 = VDEF <.MEM_279>
  __dnewD.52701 ={v} {CLOBBER};
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_83 = PHI <.MEM_280(37), .MEM_228(30)>
  # DEBUG __new_finishD.40368 => 0B
  # DEBUG D#452ptD.0 => &this_7(D)->D.36900
  # DEBUG thisD.49612 => D#452ptD.0
  # DEBUG thisD.49610 => &__positionD.36830
  # VUSE <.MEM_83>
  # PT = nonlocal escaped 
  __first_35 = this_7(D)->D.36900._M_implD.36391._M_startD.36393;
  # DEBUG __firstD.49595 => __first_35
  # DEBUG __lastD.49596 => __position_28
  # DEBUG __resultD.49597 => NULL
  # DEBUG __allocD.49598 => D#450ptD.0
  # DEBUG D#449ptD.0 => D#450ptD.0
  # DEBUG D#448ptD.0 => D#449ptD.0
  # DEBUG __firstD.49602 => __first_35
  # DEBUG __lastD.49601 => __position_28
  # DEBUG __resultD.49600 => NULL
  # DEBUG D.49599 => D#448ptD.0
  # DEBUG __firstD.49605 => __first_35
  # DEBUG __lastD.49604 => __position_28
  # DEBUG __resultD.49603 => NULL
  # DEBUG __assignableD.49608 => 1
  # DEBUG __firstD.52727 => __first_35
  # DEBUG __lastD.52728 => __position_28
  # DEBUG __resultD.52729 => __new_finish_153
  # DEBUG __curD.52730 => __new_finish_153
  # DEBUG __curD.52730 => __new_finish_153
  # DEBUG __firstD.52727 => __first_35
  if (__position_28 == __first_35)
    goto <bb 51>;
  else
    goto <bb 39>;
;;    succ:       51 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 31, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 682, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_213 = PHI <__first_35(39), __first_182(50)>
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_214 = PHI <__new_finish_153(39), __new_finish_183(50)>
  # .MEM_70 = PHI <.MEM_83(39), .MEM_234(50)>
  # DEBUG __curD.52730 => __new_finish_214
  # DEBUG __firstD.52727 => __first_213
  # DEBUG __rD.49407 => __new_finish_214
  # DEBUG __pD.52753 => NULL
  # DEBUG __valueD.52752 => __first_213
  # DEBUG D#33ptD.0 => 32
  # DEBUG __pD.49370 => NULL
  # DEBUG D.49371 => D#33ptD.0
  if (__new_finish_214 != 0B)
    goto <bb 41>;
  else
    goto <bb 48>;
;;    succ:       41 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 682, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.52755 => NULL
  # DEBUG __strD.52754 => __first_213
  # DEBUG thisD.49278 => __first_213
  # DEBUG D#442ptD.0 => &MEM[(const struct basic_stringD.2844 *)__first_213]._M_dataplusD.11519
  # DEBUG thisD.52756 => NULL
  # PT = null { D.52887 } (escaped heap)
  _178 = &__new_finish_214->D.11539._M_local_bufD.11541;
  # DEBUG D#151ptD.0 => D#442ptD.0
  # DEBUG thisD.52759 => D#443ptD.0
  # DEBUG __datD.52758 => _178
  # DEBUG __aD.52757 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#443ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_282 = VDEF <.MEM_70>
  MEM[(struct _Alloc_hiderD.11518 *)__new_finish_214]._M_pD.11525 = _178;
  # VUSE <.MEM_282>
  # PT = nonlocal escaped 
  _179 = MEM[(charD.10 * *)__first_213];
  # DEBUG D#2ptD.0 => __first_213
  # DEBUG thisD.49271 => D#2ptD.0
  # VUSE <.MEM_282>
  _180 = MEM[(long unsigned intD.14 *)__first_213 + 8B];
  # DEBUG D#5ptD.0 => __first_213
  # DEBUG thisD.49268 => D#5ptD.0
  # PT = nonlocal escaped 
  _181 = _179 + _180;
  # DEBUG D#2ptD.0 => __first_213
  # DEBUG thisD.49265 => D#2ptD.0
  # DEBUG thisD.52762 => NULL
  # DEBUG __begD.52761 => _179
  # DEBUG __endD.52760 => _181
  # DEBUG thisD.52766 => NULL
  # DEBUG __begD.52765 => _179
  # DEBUG __endD.52764 => _181
  # DEBUG thisD.52772 => __new_finish_214
  # DEBUG __begD.52773 => _179
  # DEBUG __endD.52774 => _181
  # DEBUG __ptrD.49230 => _179
  # RANGE [0, 1]
  _393 = _181 != 0B;
  # RANGE [0, 1]
  _396 = _179 == 0B;
  # RANGE [0, 1]
  _394 = _393 & _396;
  if (_394 != 0)
    goto <bb 122>;
  else
    goto <bb 124>;
;;    succ:       122 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                124 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 198, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       124 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 13] # .MEM_284 = VDEF <.MEM_283>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _193 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (__new_finish_214, &__dnewD.52775, 0);
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 (EH,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 198, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => __new_finish_214
  # DEBUG __pD.52794 => _193
  # DEBUG thisD.52793 => D#6ptD.0
  # .MEM_285 = VDEF <.MEM_284>
  MEM[(charD.10 * *)__new_finish_214] = _193;
  # VUSE <.MEM_285>
  __dnew.63_194 = __dnewD.52775;
  # DEBUG D#7ptD.0 => __new_finish_214
  # DEBUG __capacityD.52796 => __dnew.63_194
  # DEBUG thisD.52795 => D#7ptD.0
  # .MEM_286 = VDEF <.MEM_285>
  MEM[(size_typeD.11502 *)__new_finish_214 + 16B] = __dnew.63_194;
  # DEBUG D#2ptD.0 => __new_finish_214
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52778 => _193
  # DEBUG __k1D.52777 => _179
  # DEBUG __k2D.52776 => _181
  # DEBUG __dD.52781 => _193
  # DEBUG __sD.52780 => _179
  # DEBUG __nD.52779 => _180
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 484, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       124 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => __new_finish_214
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52778 => _178
  # DEBUG __k1D.52777 => _179
  # DEBUG __k2D.52776 => _181
  # DEBUG __dD.52781 => _178
  # DEBUG __sD.52780 => _179
  # DEBUG __nD.52779 => _180
  if (_180 == 1)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 258, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_283>
  _196 = MEM[(const char_typeD.6629 &)_179];
  # DEBUG D#32ptD.0 => _179
  # DEBUG __c1D.52786 => _178
  # DEBUG __c2D.52785 => D#32ptD.0
  # .MEM_287 = VDEF <.MEM_283>
  MEM[(char_typeD.6629 &)_178] = _196;
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 424, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  # _378 = PHI <_178(44), _193(43)>
  # .MEM_387 = PHI <.MEM_283(44), .MEM_286(43)>
  # DEBUG D#2ptD.0 => __new_finish_214
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52778 => _378
  # DEBUG __k1D.52777 => _179
  # DEBUG __k2D.52776 => _181
  # DEBUG __dD.52781 => _378
  # DEBUG __sD.52780 => _179
  # DEBUG __nD.52779 => _180
  # DEBUG __s1D.52784 => _378
  # DEBUG __s2D.52783 => _179
  # DEBUG __nD.52782 => _180
  # .MEM_288 = VDEF <.MEM_387>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  memcpyD.992 (_378, _179, _180);
  # VUSE <.MEM_288>
  pretmp_229 = __dnewD.52775;
  # VUSE <.MEM_288>
  pretmp_185 = MEM[(charD.10 * *)__new_finish_214];
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 682, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_233 = PHI <.MEM_287(45), .MEM_288(46)>
  # prephitmp_162 = PHI <_180(45), pretmp_229(46)>
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  # prephitmp_236 = PHI <_178(45), pretmp_185(46)>
  # DEBUG D#652ptD.0 => __dnewD.52775
  # DEBUG thisD.52788 => __new_finish_214
  # DEBUG __nD.52787 => D#652ptD.0
  # DEBUG D#4ptD.0 => __new_finish_214
  # DEBUG __lengthD.52790 => D#652ptD.0
  # DEBUG thisD.52789 => D#4ptD.0
  # .MEM_289 = VDEF <.MEM_233>
  MEM[(size_typeD.11502 *)__new_finish_214 + 8B] = prephitmp_162;
  # DEBUG D#2ptD.0 => __new_finish_214
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  _199 = prephitmp_236 + prephitmp_162;
  # DEBUG __c1D.52792 => _199
  # DEBUG __c2D.52791 => D#32ptD.0
  # .MEM_290 = VDEF <.MEM_289>
  MEM[(char_typeD.6629 &)_199] = 0;
  # .MEM_291 = VDEF <.MEM_290>
  __dnewD.52775 ={v} {CLOBBER};
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 682, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       40 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_234 = PHI <.MEM_70(40), .MEM_291(47)>
  # PT = nonlocal escaped 
  __first_182 = __first_213 + 32;
  # DEBUG __firstD.52727 => __first_182
  # PT = null { D.52887 } (escaped heap)
  __new_finish_183 = __new_finish_214 + 32;
  # DEBUG __curD.52730 => __new_finish_183
  # DEBUG __curD.52730 => __new_finish_183
  # DEBUG __firstD.52727 => __first_182
  if (__position_28 == __first_182)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 31, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       48 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_142 = PHI <__new_finish_183(48)>
  goto <bb 51>;
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 651, maybe hot
;;    prev block 49, next block 51, flags: (NEW)
;;    pred:       48 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_215 = PHI <__new_finish_142(49), __new_finish_153(38)>
  # .MEM_68 = PHI <.MEM_234(49), .MEM_83(38)>
  # DEBUG __new_finishD.40368 => NULL
  # PT = null { D.52887 } (escaped heap)
  __new_finish_36 = __new_finish_215 + 32;
  # DEBUG __new_finishD.40368 => __new_finish_36
  # DEBUG D#453ptD.0 => &this_7(D)->D.36900
  # DEBUG thisD.49631 => D#453ptD.0
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _38 = this_7(D)->D.36900._M_implD.36391._M_finishD.36394;
  # DEBUG thisD.49629 => &__positionD.36830
  # DEBUG __firstD.49614 => __position_28
  # DEBUG __lastD.49615 => _38
  # DEBUG __resultD.49616 => __new_finish_36
  # DEBUG __allocD.49617 => D#450ptD.0
  # DEBUG D#449ptD.0 => D#450ptD.0
  # DEBUG D#448ptD.0 => D#449ptD.0
  # DEBUG __firstD.49621 => __position_28
  # DEBUG __lastD.49620 => _38
  # DEBUG __resultD.49619 => __new_finish_36
  # DEBUG D.49618 => D#448ptD.0
  # DEBUG __firstD.49624 => __position_28
  # DEBUG __lastD.49623 => _38
  # DEBUG __resultD.49622 => __new_finish_36
  # DEBUG __assignableD.49627 => 1
  # DEBUG __firstD.52801 => __position_28
  # DEBUG __lastD.52802 => _38
  # DEBUG __resultD.52803 => __new_finish_36
  # DEBUG __curD.52804 => __new_finish_36
  # DEBUG __firstD.52801 => __position_28
  if (__position_28 == _38)
    goto <bb 73>;
  else
    goto <bb 61>;
;;    succ:       73 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       42 (EH,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_125 = PHI <__new_finish_214(42)>
<L22>: [LP 13]
;;    succ:       53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                123 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_235 = PHI <.MEM_284(52), .MEM_292(123)>
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_120 = PHI <__new_finish_125(52), __new_finish_124(123)>
<L11>:
  # VUSE <.MEM_235>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _184 = __builtin_eh_pointerD.2738 (11);
  # .MEM_293 = VDEF <.MEM_235>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_begin_catchD.13514 (_184);
  # DEBUG __firstD.52732 => __new_finish_153
  # DEBUG __lastD.52731 => __new_finish_120
  # DEBUG __firstD.52735 => __new_finish_153
  # DEBUG __lastD.52734 => __new_finish_120
  # DEBUG __firstD.52735 => __new_finish_153
  if (__new_finish_153 == __new_finish_120)
    goto <bb 54>;
  else
    goto <bb 55>;
;;    succ:       54 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       53 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_391 = PHI <.MEM_293(53), .MEM_298(58)>
  [LP 5] # .MEM_299 = VDEF <.MEM_391>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_rethrowD.40374 ();
;;    succ:       60 (EH,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_165 = PHI <__new_finish_153(55), __new_finish_188(59)>
  # .MEM_24 = PHI <.MEM_293(55), .MEM_298(59)>
  # DEBUG __firstD.52735 => __new_finish_165
  # DEBUG __rD.46443 => __new_finish_165
  # DEBUG __pointerD.52736 => NULL
  # DEBUG thisD.52737 => NULL
  # DEBUG thisD.52738 => NULL
  # DEBUG thisD.52747 => NULL
  # VUSE <.MEM_24>
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  _186 = MEM[(charD.10 * *)__new_finish_165];
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.52748 => NULL
  # PT = null { D.52887 } (escaped heap)
  _187 = &MEM[(const struct basic_stringD.2844 *)__new_finish_165].D.11539._M_local_bufD.11541;
  if (_186 != _187)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.52740 => NULL
  # DEBUG __sizeD.52739 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => NULL
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.52743 => _186
  # DEBUG __aD.52741 => D#214ptD.0
  # DEBUG __nD.52742 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.52746 => _186
  # DEBUG thisD.52744 => D#210ptD.0
  # DEBUG D.52745 => D#211ptD.0
  # .MEM_294 = VDEF <.MEM_24>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (_186);
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_237 = PHI <.MEM_24(56), .MEM_294(57)>
  # DEBUG thisD.52749 => D#220ptD.0
  # DEBUG thisD.52750 => D#220ptD.0
  # DEBUG thisD.52751 => D#220ptD.0
  # .MEM_298 = VDEF <.MEM_237>
  MEM[(struct  &)__new_finish_165] ={v} {CLOBBER};
  # PT = null { D.52887 } (escaped heap)
  __new_finish_188 = __new_finish_165 + 32;
  # DEBUG __firstD.52735 => __new_finish_188
  # DEBUG __firstD.52735 => __new_finish_188
  if (__new_finish_188 == __new_finish_120)
    goto <bb 54>;
  else
    goto <bb 59>;
;;    succ:       54 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 59, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 56>;
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       54 (EH,EXECUTABLE)
<L13>: [LP 5]
  [MNT 9] # .MEM_300 = VDEF <.MEM_299>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_end_catchD.13513 ();
  [LP 9] resx 10
;;    succ:       128 (EH,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 31, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       51 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 1, count 0, freq 676, maybe hot
;;    prev block 61, next block 63, flags: (NEW)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_129 = PHI <__position_28(61), __position_206(71)>
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_111 = PHI <__new_finish_36(61), __new_finish_207(71)>
  # .MEM_379 = PHI <.MEM_68(61), .MEM_241(71)>
  # DEBUG __curD.52804 => __new_finish_111
  # DEBUG __firstD.52801 => __position_129
  # DEBUG __rD.49407 => __new_finish_111
  # DEBUG __pD.52827 => NULL
  # DEBUG __valueD.52826 => __position_129
  # DEBUG D#33ptD.0 => 32
  # DEBUG __pD.49370 => NULL
  # DEBUG D.49371 => D#33ptD.0
  if (__new_finish_111 != 0B)
    goto <bb 63>;
  else
    goto <bb 70>;
;;    succ:       63 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 1, count 0, freq 676, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       62 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.52829 => NULL
  # DEBUG __strD.52828 => __position_129
  # DEBUG thisD.49278 => __position_129
  # DEBUG D#442ptD.0 => &MEM[(const struct basic_stringD.2844 *)__position_129]._M_dataplusD.11519
  # DEBUG thisD.52830 => NULL
  # PT = null { D.52887 } (escaped heap)
  _202 = &__new_finish_111->D.11539._M_local_bufD.11541;
  # DEBUG D#151ptD.0 => D#442ptD.0
  # DEBUG thisD.52833 => D#443ptD.0
  # DEBUG __datD.52832 => _202
  # DEBUG __aD.52831 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#443ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_302 = VDEF <.MEM_379>
  MEM[(struct _Alloc_hiderD.11518 *)__new_finish_111]._M_pD.11525 = _202;
  # VUSE <.MEM_302>
  # PT = nonlocal escaped 
  _203 = MEM[(charD.10 * *)__position_129];
  # DEBUG D#2ptD.0 => __position_129
  # DEBUG thisD.49271 => D#2ptD.0
  # VUSE <.MEM_302>
  _204 = MEM[(long unsigned intD.14 *)__position_129 + 8B];
  # DEBUG D#5ptD.0 => __position_129
  # DEBUG thisD.49268 => D#5ptD.0
  # PT = nonlocal escaped 
  _205 = _203 + _204;
  # DEBUG D#2ptD.0 => __position_129
  # DEBUG thisD.49265 => D#2ptD.0
  # DEBUG thisD.52836 => NULL
  # DEBUG __begD.52835 => _203
  # DEBUG __endD.52834 => _205
  # DEBUG thisD.52840 => NULL
  # DEBUG __begD.52839 => _203
  # DEBUG __endD.52838 => _205
  # DEBUG thisD.52846 => __new_finish_111
  # DEBUG __begD.52847 => _203
  # DEBUG __endD.52848 => _205
  # DEBUG __ptrD.49230 => _203
  # RANGE [0, 1]
  _400 = _205 != 0B;
  # RANGE [0, 1]
  _399 = _203 == 0B;
  # RANGE [0, 1]
  _397 = _399 & _400;
  if (_397 != 0)
    goto <bb 125>;
  else
    goto <bb 127>;
;;    succ:       125 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                127 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 64, loop depth 1, count 0, freq 196, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       127 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 14] # .MEM_304 = VDEF <.MEM_303>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _217 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (__new_finish_111, &__dnewD.52849, 0);
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 (EH,EXECUTABLE)

;;   basic block 65, loop depth 1, count 0, freq 196, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => __new_finish_111
  # DEBUG __pD.52868 => _217
  # DEBUG thisD.52867 => D#6ptD.0
  # .MEM_305 = VDEF <.MEM_304>
  MEM[(charD.10 * *)__new_finish_111] = _217;
  # VUSE <.MEM_305>
  __dnew.63_218 = __dnewD.52849;
  # DEBUG D#7ptD.0 => __new_finish_111
  # DEBUG __capacityD.52870 => __dnew.63_218
  # DEBUG thisD.52869 => D#7ptD.0
  # .MEM_306 = VDEF <.MEM_305>
  MEM[(size_typeD.11502 *)__new_finish_111 + 16B] = __dnew.63_218;
  # DEBUG D#2ptD.0 => __new_finish_111
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52852 => _217
  # DEBUG __k1D.52851 => _203
  # DEBUG __k2D.52850 => _205
  # DEBUG __dD.52855 => _217
  # DEBUG __sD.52854 => _203
  # DEBUG __nD.52853 => _204
  goto <bb 68>;
;;    succ:       68 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 1, count 0, freq 480, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       127 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => __new_finish_111
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52852 => _202
  # DEBUG __k1D.52851 => _203
  # DEBUG __k2D.52850 => _205
  # DEBUG __dD.52855 => _202
  # DEBUG __sD.52854 => _203
  # DEBUG __nD.52853 => _204
  if (_204 == 1)
    goto <bb 67>;
  else
    goto <bb 68>;
;;    succ:       67 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                68 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 67, loop depth 1, count 0, freq 256, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       66 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_303>
  _220 = MEM[(const char_typeD.6629 &)_203];
  # DEBUG D#32ptD.0 => _203
  # DEBUG __c1D.52860 => _202
  # DEBUG __c2D.52859 => D#32ptD.0
  # .MEM_307 = VDEF <.MEM_303>
  MEM[(char_typeD.6629 &)_202] = _220;
  goto <bb 69>;
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 68, loop depth 1, count 0, freq 420, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       66 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  # _385 = PHI <_202(66), _217(65)>
  # .MEM_380 = PHI <.MEM_303(66), .MEM_306(65)>
  # DEBUG D#2ptD.0 => __new_finish_111
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.52852 => _385
  # DEBUG __k1D.52851 => _203
  # DEBUG __k2D.52850 => _205
  # DEBUG __dD.52855 => _385
  # DEBUG __sD.52854 => _203
  # DEBUG __nD.52853 => _204
  # DEBUG __s1D.52858 => _385
  # DEBUG __s2D.52857 => _203
  # DEBUG __nD.52856 => _204
  # .MEM_308 = VDEF <.MEM_380>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  memcpyD.992 (_385, _203, _204);
  # VUSE <.MEM_308>
  pretmp_389 = __dnewD.52849;
  # VUSE <.MEM_308>
  pretmp_177 = MEM[(charD.10 * *)__new_finish_111];
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 1, count 0, freq 676, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       67 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_240 = PHI <.MEM_307(67), .MEM_308(68)>
  # prephitmp_109 = PHI <_204(67), pretmp_389(68)>
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  # prephitmp_141 = PHI <_202(67), pretmp_177(68)>
  # DEBUG D#651ptD.0 => __dnewD.52849
  # DEBUG thisD.52862 => __new_finish_111
  # DEBUG __nD.52861 => D#651ptD.0
  # DEBUG D#4ptD.0 => __new_finish_111
  # DEBUG __lengthD.52864 => D#651ptD.0
  # DEBUG thisD.52863 => D#4ptD.0
  # .MEM_309 = VDEF <.MEM_240>
  MEM[(size_typeD.11502 *)__new_finish_111 + 8B] = prephitmp_109;
  # DEBUG D#2ptD.0 => __new_finish_111
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  _223 = prephitmp_141 + prephitmp_109;
  # DEBUG __c1D.52866 => _223
  # DEBUG __c2D.52865 => D#32ptD.0
  # .MEM_310 = VDEF <.MEM_309>
  MEM[(char_typeD.6629 &)_223] = 0;
  # .MEM_311 = VDEF <.MEM_310>
  __dnewD.52849 ={v} {CLOBBER};
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 1, count 0, freq 676, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       62 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_241 = PHI <.MEM_379(62), .MEM_311(69)>
  # PT = nonlocal 
  __position_206 = __position_129 + 32;
  # DEBUG __firstD.52801 => __position_206
  # PT = null { D.52887 } (escaped heap)
  __new_finish_207 = __new_finish_111 + 32;
  # DEBUG __curD.52804 => __new_finish_207
  # DEBUG __curD.52804 => __new_finish_207
  # DEBUG __firstD.52801 => __position_206
  if (_38 == __position_206)
    goto <bb 72>;
  else
    goto <bb 71>;
;;    succ:       72 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 71, loop depth 1, count 0, freq 646, maybe hot
;;    prev block 70, next block 72, flags: (NEW)
;;    pred:       70 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 62>;
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 30, maybe hot
;;    prev block 71, next block 73, flags: (NEW)
;;    pred:       70 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_126 = PHI <__new_finish_207(70)>
  # VUSE <.MEM_241>
  pretmp_114 = this_7(D)->D.36900._M_implD.36391._M_finishD.36394;
;;    succ:       73 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       72 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_110 = PHI <__new_finish_126(72), __new_finish_36(51)>
  # .MEM_366 = PHI <.MEM_241(72), .MEM_68(51)>
  # PT = nonlocal escaped 
  # prephitmp_115 = PHI <pretmp_114(72), _38(51)>
  # DEBUG __new_finishD.40368 => NULL
  # DEBUG D#454ptD.0 => &this_7(D)->D.36900
  # DEBUG thisD.49667 => D#454ptD.0
  # DEBUG D#650ptD.0 => this_7(D)->D.36900._M_implD.36391._M_finishD.36394
  # VUSE <.MEM_366>
  # PT = nonlocal escaped 
  __first_42 = this_7(D)->D.36900._M_implD.36391._M_startD.36393;
  # DEBUG __firstD.49643 => __first_42
  # DEBUG __lastD.49644 => D#650ptD.0
  # DEBUG __firstD.49650 => __first_42
  if (__first_42 == prephitmp_115)
    goto <bb 90>;
  else
    goto <bb 84>;
;;    succ:       90 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                84 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       64 (EH,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_224 = PHI <__new_finish_111(64)>
<L23>: [LP 14]
;;    succ:       75 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                126 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_242 = PHI <.MEM_304(74), .MEM_312(126)>
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_121 = PHI <__new_finish_224(74), __new_finish_201(126)>
<L14>:
  # VUSE <.MEM_242>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _208 = __builtin_eh_pointerD.2738 (14);
  # .MEM_313 = VDEF <.MEM_242>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_begin_catchD.13514 (_208);
  # DEBUG __firstD.52806 => __new_finish_36
  # DEBUG __lastD.52805 => __new_finish_121
  # DEBUG __firstD.52809 => __new_finish_36
  # DEBUG __lastD.52808 => __new_finish_121
  # DEBUG __firstD.52809 => __new_finish_36
  if (__new_finish_36 == __new_finish_121)
    goto <bb 76>;
  else
    goto <bb 77>;
;;    succ:       76 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       75 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_382 = PHI <.MEM_313(75), .MEM_318(80)>
  [LP 7] # .MEM_319 = VDEF <.MEM_382>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_rethrowD.40374 ();
;;    succ:       82 (EH,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       75 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       78 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 78, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 77, next block 79, flags: (NEW)
;;    pred:       77 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                81 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_93 = PHI <__new_finish_36(77), __new_finish_212(81)>
  # .MEM_357 = PHI <.MEM_313(77), .MEM_318(81)>
  # DEBUG __firstD.52809 => __new_finish_93
  # DEBUG __rD.46443 => __new_finish_93
  # DEBUG __pointerD.52810 => NULL
  # DEBUG thisD.52811 => NULL
  # DEBUG thisD.52812 => NULL
  # DEBUG thisD.52821 => NULL
  # VUSE <.MEM_357>
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  _210 = MEM[(charD.10 * *)__new_finish_93];
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.52822 => NULL
  # PT = null { D.52887 } (escaped heap)
  _211 = &MEM[(const struct basic_stringD.2844 *)__new_finish_93].D.11539._M_local_bufD.11541;
  if (_210 != _211)
    goto <bb 79>;
  else
    goto <bb 80>;
;;    succ:       79 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 79, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       78 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.52814 => NULL
  # DEBUG __sizeD.52813 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => NULL
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.52817 => _210
  # DEBUG __aD.52815 => D#214ptD.0
  # DEBUG __nD.52816 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.52820 => _210
  # DEBUG thisD.52818 => D#210ptD.0
  # DEBUG D.52819 => D#211ptD.0
  # .MEM_314 = VDEF <.MEM_357>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (_210);
;;    succ:       80 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 80, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 79, next block 81, flags: (NEW, REACHABLE)
;;    pred:       78 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                79 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_244 = PHI <.MEM_357(78), .MEM_314(79)>
  # DEBUG thisD.52823 => D#220ptD.0
  # DEBUG thisD.52824 => D#220ptD.0
  # DEBUG thisD.52825 => D#220ptD.0
  # .MEM_318 = VDEF <.MEM_244>
  MEM[(struct  &)__new_finish_93] ={v} {CLOBBER};
  # PT = null { D.52887 } (escaped heap)
  __new_finish_212 = __new_finish_93 + 32;
  # DEBUG __firstD.52809 => __new_finish_212
  # DEBUG __firstD.52809 => __new_finish_212
  if (__new_finish_121 == __new_finish_212)
    goto <bb 76>;
  else
    goto <bb 81>;
;;    succ:       76 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                81 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 81, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 80, next block 82, flags: (NEW)
;;    pred:       80 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 78>;
;;    succ:       78 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 81, next block 83, flags: (NEW, REACHABLE)
;;    pred:       76 (EH,EXECUTABLE)
<L16>: [LP 7]
  [MNT 12] # .MEM_320 = VDEF <.MEM_319>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_end_catchD.13513 ();
  [LP 3] resx 13
;;    succ:       83 (EH,EXECUTABLE)

;;   basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 82, next block 84, flags: (NEW)
;;    pred:       82 (EH,EXECUTABLE)
<L24>: [LP 3]
  goto <bb 99> (<L5>);
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 84, loop depth 0, count 0, freq 29, maybe hot
;;    prev block 83, next block 85, flags: (NEW, REACHABLE)
;;    pred:       73 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 85, loop depth 1, count 0, freq 322, maybe hot
;;    prev block 84, next block 86, flags: (NEW)
;;    pred:       84 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_143 = PHI <__first_42(84), __first_75(88)>
  # .MEM_189 = PHI <.MEM_366(84), .MEM_116(88)>
  # DEBUG __firstD.49650 => __first_143
  # DEBUG __rD.46443 => __first_143
  # DEBUG __pointerD.49651 => NULL
  # DEBUG thisD.49652 => NULL
  # DEBUG thisD.49653 => NULL
  # DEBUG thisD.49662 => NULL
  # VUSE <.MEM_189>
  # PT = nonlocal escaped 
  _73 = MEM[(charD.10 * *)__first_143];
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.49663 => NULL
  # PT = nonlocal escaped 
  _74 = &MEM[(const struct basic_stringD.2844 *)__first_143].D.11539._M_local_bufD.11541;
  if (_73 != _74)
    goto <bb 86>;
  else
    goto <bb 87>;
;;    succ:       86 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                87 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 86, loop depth 1, count 0, freq 225, maybe hot
;;    prev block 85, next block 87, flags: (NEW, REACHABLE)
;;    pred:       85 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.49655 => NULL
  # DEBUG __sizeD.49654 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => NULL
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.49658 => _73
  # DEBUG __aD.49656 => D#214ptD.0
  # DEBUG __nD.49657 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.49661 => _73
  # DEBUG thisD.49659 => D#210ptD.0
  # DEBUG D.49660 => D#211ptD.0
  # .MEM_112 = VDEF <.MEM_189>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (_73);
;;    succ:       87 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 87, loop depth 1, count 0, freq 322, maybe hot
;;    prev block 86, next block 88, flags: (NEW, REACHABLE)
;;    pred:       85 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                86 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_85 = PHI <.MEM_189(85), .MEM_112(86)>
  # DEBUG thisD.49664 => D#220ptD.0
  # DEBUG thisD.49665 => D#220ptD.0
  # DEBUG thisD.49666 => D#220ptD.0
  # .MEM_116 = VDEF <.MEM_85>
  MEM[(struct  &)__first_143] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_75 = __first_143 + 32;
  # DEBUG __firstD.49650 => __first_75
  # DEBUG __firstD.49650 => __first_75
  if (__first_75 == prephitmp_115)
    goto <bb 89>;
  else
    goto <bb 88>;
;;    succ:       89 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                88 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 88, loop depth 1, count 0, freq 293, maybe hot
;;    prev block 87, next block 89, flags: (NEW)
;;    pred:       87 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 85>;
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 89, loop depth 0, count 0, freq 29, maybe hot
;;    prev block 88, next block 90, flags: (NEW)
;;    pred:       87 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_116>
  pretmp_100 = this_7(D)->D.36900._M_implD.36391._M_startD.36393;
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 90, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 89, next block 91, flags: (NEW, REACHABLE)
;;    pred:       89 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                73 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_190 = PHI <.MEM_116(89), .MEM_366(73)>
  # PT = nonlocal escaped 
  # prephitmp_101 = PHI <pretmp_100(89), __first_42(73)>
  # DEBUG D#461ptD.0 => this_7(D)->D.36900._M_implD.36391._M_end_of_storageD.36395
  # DEBUG D#460ptD.0 => (long intD.12) D#461ptD.0
  # DEBUG D#649ptD.0 => this_7(D)->D.36900._M_implD.36391._M_startD.36393
  # DEBUG D#459ptD.0 => (long intD.12) D#649ptD.0
  # DEBUG D#458ptD.0 => D#460ptD.0 - D#459ptD.0
  # DEBUG D#457ptD.0 => D#458ptD.0 /[ex] 32
  # DEBUG D#456ptD.0 => &this_7(D)->D.36900
  # DEBUG D#233ptD.0 => D#456ptD.0
  # DEBUG D#234ptD.0 => (long unsigned intD.14) D#457ptD.0
  # DEBUG __pD.49633 => D#649ptD.0
  # DEBUG thisD.49635 => D#233ptD.0
  # DEBUG __nD.49634 => D#234ptD.0
  # DEBUG D#232ptD.0 => D#234ptD.0
  # DEBUG D#231ptD.0 => D#233ptD.0
  if (prephitmp_101 != 0B)
    goto <bb 91>;
  else
    goto <bb 92>;
;;    succ:       91 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                92 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 91, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       90 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#230ptD.0 => &D#231ptD.0->_M_implD.36391
  # DEBUG D#228ptD.0 => D#230ptD.0
  # DEBUG D#229ptD.0 => D#232ptD.0
  # DEBUG __pD.49639 => D#649ptD.0
  # DEBUG __aD.49637 => D#228ptD.0
  # DEBUG __nD.49638 => D#229ptD.0
  # DEBUG D#227ptD.0 => D#229ptD.0
  # DEBUG D#226ptD.0 => D#228ptD.0
  # DEBUG D#224ptD.0 => D#226ptD.0
  # DEBUG D#225ptD.0 => D#227ptD.0
  # DEBUG __pD.49642 => D#649ptD.0
  # DEBUG thisD.49640 => D#224ptD.0
  # DEBUG D.49641 => D#225ptD.0
  # .MEM_117 = VDEF <.MEM_190>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (prephitmp_101);
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 92, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       91 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_86 = PHI <.MEM_117(91), .MEM_190(90)>
  # .MEM_45 = VDEF <.MEM_86>
  this_7(D)->D.36900._M_implD.36391._M_startD.36393 = __new_finish_153;
  # .MEM_46 = VDEF <.MEM_45>
  this_7(D)->D.36900._M_implD.36391._M_finishD.36394 = __new_finish_110;
  # PT = null { D.52887 } (escaped heap)
  _48 = __new_finish_153 + prephitmp_104;
  # .MEM_49 = VDEF <.MEM_46>
  this_7(D)->D.36900._M_implD.36391._M_end_of_storageD.36395 = _48;
;;    succ:       93 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 93, loop depth 0, count 0, freq 482, maybe hot
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                92 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_22(24), .MEM_49(92)>
  # VUSE <.MEM_2>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 93, next block 95, flags: (NEW)
;;    pred:       18 (EH,EXECUTABLE)
<L19>: [LP 11]
;;    succ:       95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 94, next block 96, flags: (NEW, REACHABLE)
;;    pred:       94 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_96(94), .MEM_97(21)>
<L3>:
  # DEBUG thisD.49669 => &__x_copyD.40352
  # DEBUG thisD.49670 => &__x_copyD.40352
  # DEBUG thisD.49679 => &__x_copyD.40352
  # VUSE <.MEM_3>
  # PT = nonlocal escaped null { D.40352 } (escaped)
  _76 = MEM[(charD.10 * *)&__x_copyD.40352];
  # DEBUG D#2ptD.0 => &__x_copyD.40352
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.49680 => &__x_copyD.40352
  if (&__x_copyD.40352.D.11539._M_local_bufD.11541 != _76)
    goto <bb 96>;
  else
    goto <bb 97>;
;;    succ:       96 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                97 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       95 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => __x_copyD.40352.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.49672 => &__x_copyD.40352
  # DEBUG __sizeD.49671 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &__x_copyD.40352
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &__x_copyD.40352
  # DEBUG D#216ptD.0 => &__x_copyD.40352._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.49675 => _76
  # DEBUG __aD.49673 => D#214ptD.0
  # DEBUG __nD.49674 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.49678 => _76
  # DEBUG thisD.49676 => D#210ptD.0
  # DEBUG D.49677 => D#211ptD.0
  # .MEM_103 = VDEF <.MEM_3>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (_76);
;;    succ:       97 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       95 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                96 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_3(95), .MEM_103(96)>
  # DEBUG D#220ptD.0 => &__x_copyD.40352._M_dataplusD.11519
  # DEBUG thisD.49681 => D#220ptD.0
  # DEBUG thisD.49682 => D#220ptD.0
  # DEBUG thisD.49683 => D#220ptD.0
  resx 2
;;    succ:      

;;   basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 97, next block 99, flags: (NEW)
;;    pred:       32 (EH,EXECUTABLE)
<L21>: [LP 12]
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       98 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_1 = PHI <__new_finish_153(98), __new_finish_36(83)>
  # .MEM_4 = PHI <.MEM_273(98), .MEM_320(83)>
<L5>:
  # DEBUG __new_finishD.40368 => __new_finish_1
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _50 = __builtin_eh_pointerD.2738 (6);
  # .MEM_51 = VDEF <.MEM_4>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_begin_catchD.13514 (_50);
  if (__new_finish_1 == 0B)
    goto <bb 102>;
  else
    goto <bb 100>;
;;    succ:       102 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                100 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 99, next block 101, flags: (NEW, REACHABLE)
;;    pred:       99 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.49710 => __new_finish_153
  if (__new_finish_1 == __new_finish_153)
    goto <bb 101>;
  else
    goto <bb 106>;
;;    succ:       101 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                106 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 100, next block 102, flags: (NEW)
;;    pred:       100 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                109 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                129 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_365 = PHI <.MEM_51(100), .MEM_127(109), .MEM_81(129)>
  goto <bb 111>;
;;    succ:       111 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 101, next block 103, flags: (NEW)
;;    pred:       99 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_106 = &_32->D.11539._M_local_bufD.11541;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       102 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                128 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                129 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_51(102), .MEM_231(128), .MEM_81(129)>
  # PT = null { D.52887 } (escaped heap)
  # prephitmp_113 = PHI <pretmp_106(102), pretmp_107(128), _21(129)>
  # DEBUG __new_finishD.40368 => 0B
  # DEBUG D#462ptD.0 => &this_7(D)->D.36900._M_implD.36391
  # DEBUG D#223ptD.0 => D#462ptD.0
  # DEBUG __pD.49684 => _32
  # DEBUG __aD.49685 => D#223ptD.0
  # DEBUG D#222ptD.0 => D#223ptD.0
  # DEBUG D#221ptD.0 => D#222ptD.0
  # DEBUG __pD.49687 => _32
  # DEBUG thisD.49686 => D#221ptD.0
  # DEBUG thisD.49688 => _32
  # DEBUG thisD.49689 => _32
  # DEBUG thisD.49698 => _32
  # VUSE <.MEM_58>
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  _23 = MEM[(charD.10 * *)_32];
  # DEBUG D#2ptD.0 => _32
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.49699 => _32
  if (_23 != prephitmp_113)
    goto <bb 104>;
  else
    goto <bb 105>;
;;    succ:       104 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                105 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 103, next block 105, flags: (NEW, REACHABLE)
;;    pred:       103 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => _32->D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.49691 => _32
  # DEBUG __sizeD.49690 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => _32
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => _32
  # DEBUG D#216ptD.0 => &_32->_M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.49694 => _23
  # DEBUG __aD.49692 => D#214ptD.0
  # DEBUG __nD.49693 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.49697 => _23
  # DEBUG thisD.49695 => D#210ptD.0
  # DEBUG D.49696 => D#211ptD.0
  # .MEM_118 = VDEF <.MEM_58>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (_23);
;;    succ:       105 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 104, next block 106, flags: (NEW, REACHABLE)
;;    pred:       103 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                104 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_88 = PHI <.MEM_58(103), .MEM_118(104)>
  # DEBUG D#220ptD.0 => &_32->_M_dataplusD.11519
  # DEBUG thisD.49700 => D#220ptD.0
  # DEBUG thisD.49701 => D#220ptD.0
  # DEBUG thisD.49702 => D#220ptD.0
  # .MEM_122 = VDEF <.MEM_88>
  MEM[(struct  &)_32] ={v} {CLOBBER};
  goto <bb 111>;
;;    succ:       111 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 105, next block 107, flags: (NEW, REACHABLE)
;;    pred:       100 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       107 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 107, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 106, next block 108, flags: (NEW)
;;    pred:       106 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                110 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_130 = PHI <__new_finish_153(106), __new_finish_80(110)>
  # .MEM_191 = PHI <.MEM_51(106), .MEM_127(110)>
  # DEBUG __firstD.49710 => __new_finish_130
  # DEBUG __rD.46443 => __new_finish_130
  # DEBUG __pointerD.49711 => NULL
  # DEBUG thisD.49712 => NULL
  # DEBUG thisD.49713 => NULL
  # DEBUG thisD.49722 => NULL
  # VUSE <.MEM_191>
  # PT = nonlocal escaped null { D.52887 } (escaped heap)
  _78 = MEM[(charD.10 * *)__new_finish_130];
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.49723 => NULL
  # PT = null { D.52887 } (escaped heap)
  _79 = &MEM[(const struct basic_stringD.2844 *)__new_finish_130].D.11539._M_local_bufD.11541;
  if (_78 != _79)
    goto <bb 108>;
  else
    goto <bb 109>;
;;    succ:       108 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                109 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 108, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       107 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.49715 => NULL
  # DEBUG __sizeD.49714 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => NULL
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.49718 => _78
  # DEBUG __aD.49716 => D#214ptD.0
  # DEBUG __nD.49717 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.49721 => _78
  # DEBUG thisD.49719 => D#210ptD.0
  # DEBUG D.49720 => D#211ptD.0
  # .MEM_123 = VDEF <.MEM_191>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (_78);
;;    succ:       109 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 109, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       107 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                108 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_191(107), .MEM_123(108)>
  # DEBUG thisD.49724 => D#220ptD.0
  # DEBUG thisD.49725 => D#220ptD.0
  # DEBUG thisD.49726 => D#220ptD.0
  # .MEM_127 = VDEF <.MEM_90>
  MEM[(struct  &)__new_finish_130] ={v} {CLOBBER};
  # PT = null { D.52887 } (escaped heap)
  __new_finish_80 = __new_finish_130 + 32;
  # DEBUG __firstD.49710 => __new_finish_80
  # DEBUG __firstD.49710 => __new_finish_80
  if (__new_finish_1 == __new_finish_80)
    goto <bb 101>;
  else
    goto <bb 110>;
;;    succ:       101 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                110 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 110, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 109, next block 111, flags: (NEW)
;;    pred:       109 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 107>;
;;    succ:       107 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 110, next block 112, flags: (NEW, REACHABLE)
;;    pred:       105 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                101 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_122(105), .MEM_365(101)>
  # DEBUG D#463ptD.0 => &this_7(D)->D.36900
  # DEBUG D#233ptD.0 => D#463ptD.0
  # DEBUG __pD.49729 => NULL
  # DEBUG thisD.49731 => D#233ptD.0
  # DEBUG __nD.49730 => D#234ptD.0
  # DEBUG D#232ptD.0 => D#234ptD.0
  # DEBUG D#231ptD.0 => D#233ptD.0
  if (__new_finish_153 != 0B)
    goto <bb 112>;
  else
    goto <bb 113>;
;;    succ:       112 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                113 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 111, next block 113, flags: (NEW, REACHABLE)
;;    pred:       111 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#230ptD.0 => &D#231ptD.0->_M_implD.36391
  # DEBUG D#228ptD.0 => D#230ptD.0
  # DEBUG D#229ptD.0 => D#232ptD.0
  # DEBUG __pD.49735 => NULL
  # DEBUG __aD.49733 => D#228ptD.0
  # DEBUG __nD.49734 => D#229ptD.0
  # DEBUG D#227ptD.0 => D#229ptD.0
  # DEBUG D#226ptD.0 => D#228ptD.0
  # DEBUG D#224ptD.0 => D#226ptD.0
  # DEBUG D#225ptD.0 => D#227ptD.0
  # DEBUG __pD.49738 => NULL
  # DEBUG thisD.49736 => D#224ptD.0
  # DEBUG D.49737 => D#225ptD.0
  # .MEM_128 = VDEF <.MEM_5>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZdlPvD.2766 (__new_finish_153);
;;    succ:       113 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       112 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                111 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_128(112), .MEM_5(111)>
  [LP 4] # .MEM_55 = VDEF <.MEM_91>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_rethrowD.40374 ();
;;    succ:       114 (EH,EXECUTABLE)

;;   basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 113, next block 115, flags: (NEW, REACHABLE)
;;    pred:       113 (EH,EXECUTABLE)
<L10>: [LP 4]
  [MNT 8] # .MEM_56 = VDEF <.MEM_55>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_end_catchD.13513 ();
  resx 7
;;    succ:      

;;   basic block 115, loop depth 0, count 0, freq 98, maybe hot
;;   Invalid sum of incoming frequencies 650, should be 98
;;    prev block 114, next block 116, flags: (NEW, REACHABLE)
;;    pred:       4 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_404 = PHI <.MEM_92(4), .MEM_94(10)>
  # .MEM_254 = VDEF <.MEM_404>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:      

;;   basic block 116, loop depth 0, count 0, freq 314, maybe hot
;;   Invalid sum of incoming frequencies 47, should be 314
;;    prev block 115, next block 117, flags: (NEW, REACHABLE)
;;    pred:       4 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.52647 => _40
  # DEBUG __lastD.52646 => _37
  # DEBUG D#438ptD.0 => &__firstD.52647
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.52649 => _40
  # DEBUG __lastD.52648 => _37
  # .MEM_245 = VDEF <.MEM_92>
  __dnewD.52624 = _39;
  if (_39 > 15)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 117, loop depth 0, count 0, freq 450, maybe hot
;;   Invalid sum of incoming frequencies 68, should be 450
;;    prev block 116, next block 118, flags: (NEW, REACHABLE)
;;    pred:       10 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.52676 => _34
  # DEBUG __lastD.52675 => _27
  # DEBUG D#438ptD.0 => &__firstD.52676
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.52678 => _34
  # DEBUG __lastD.52677 => _27
  # .MEM_255 = VDEF <.MEM_94>
  __dnewD.52653 = _33;
  if (_33 > 15)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 118, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.40358 => NULL
  # DEBUG thisD.49590 => this_7(D)
  # DEBUG D#117ptD.0 => &this_7(D)->D.36900._M_implD.36391._M_startD.36393
  # DEBUG thisD.49592 => NULL
  # DEBUG __iD.49591 => D#117ptD.0
  # DEBUG __lhsD.49587 => &__positionD.36830
  # DEBUG __rhsD.49588 => &D.40360
  # DEBUG thisD.45605 => &__positionD.36830
  _406 = (long intD.12) __position_28;
  # DEBUG thisD.45603 => &D.40360
  _407 = _406 - _156;
  # DEBUG D#467ptD.0 => _407 /[ex] 32
  # DEBUG __elems_beforeD.40359 => (const size_typeD.36476) D#467ptD.0
  # DEBUG D#466ptD.0 => &this_7(D)->D.36900
  # DEBUG D#337ptD.0 => D#466ptD.0
  # DEBUG __nD.52679 => NULL
  # DEBUG thisD.52680 => D#337ptD.0
  # DEBUG D#336ptD.0 => D#337ptD.0
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 119, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 118, next block 120, flags: (NEW, REACHABLE)
;;    pred:       27 (FALSE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # __len_59 = PHI <__len_164(27), 1(25)>
  # DEBUG __lenD.52691 => __len_59
  # DEBUG D#98ptD.0 => this_7(D)
  # DEBUG thisD.47758 => D#98ptD.0
  # DEBUG thisD.47757 => D#98ptD.0
  # DEBUG D#329ptD.0 => this_7(D)
  # DEBUG thisD.47773 => D#329ptD.0
  # DEBUG D#328ptD.0 => D#329ptD.0
  # DEBUG D#327ptD.0 => &D#328ptD.0->D.36900
  # DEBUG thisD.47743 => D#327ptD.0
  # DEBUG __aD.47735 => D#326ptD.0
  # DEBUG D#325ptD.0 => D#326ptD.0
  # DEBUG D#324ptD.0 => D#325ptD.0
  # DEBUG thisD.47726 => D#324ptD.0
  # DEBUG __lenD.40358 => NULL
  # DEBUG thisD.49590 => this_7(D)
  # DEBUG D#117ptD.0 => &this_7(D)->D.36900._M_implD.36391._M_startD.36393
  # DEBUG thisD.49592 => NULL
  # DEBUG __iD.49591 => D#117ptD.0
  # DEBUG __lhsD.49587 => &__positionD.36830
  # DEBUG __rhsD.49588 => &D.40360
  # DEBUG thisD.45605 => &__positionD.36830
  _395 = (long intD.12) __position_28;
  # DEBUG thisD.45603 => &D.40360
  _402 = _395 - _156;
  # DEBUG D#467ptD.0 => _402 /[ex] 32
  # DEBUG __elems_beforeD.40359 => (const size_typeD.36476) D#467ptD.0
  # DEBUG D#466ptD.0 => &this_7(D)->D.36900
  # DEBUG D#337ptD.0 => D#466ptD.0
  # DEBUG __nD.52679 => NULL
  # DEBUG thisD.52680 => D#337ptD.0
  # DEBUG D#336ptD.0 => D#337ptD.0
  if (__len_59 != 0)
    goto <bb 28>;
  else
    goto <bb 30>;
;;    succ:       28 [20.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [80.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 120, loop depth 0, count 0, freq 3, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 119, next block 121, flags: (NEW, REACHABLE)
;;    pred:       31 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 10] # .MEM_281 = VDEF <.MEM_108>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       129 (EH,EXECUTABLE)

;;   basic block 121, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 120, next block 122, flags: (NEW, REACHABLE)
;;    pred:       31 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.52724 => _65
  # DEBUG __lastD.52723 => _67
  # DEBUG D#438ptD.0 => &__firstD.52724
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.52726 => _65
  # DEBUG __lastD.52725 => _67
  # .MEM_272 = VDEF <.MEM_108>
  __dnewD.52701 = _66;
  if (_66 > 15)
    goto <bb 32>;
  else
    goto <bb 34>;
;;    succ:       32 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 122, loop depth 0, count 0, freq 87, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 580, should be 87
;;    prev block 121, next block 123, flags: (NEW, REACHABLE)
;;    pred:       41 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_124 = PHI <__new_finish_214(41)>
  [LP 6] # .MEM_292 = VDEF <.MEM_282>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       123 (EH,EXECUTABLE)

;;   basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 122, next block 124, flags: (NEW)
;;    pred:       122 (EH,EXECUTABLE)
<L25>: [LP 6]
  goto <bb 53> (<L11>);
;;    succ:       53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 124, loop depth 1, count 0, freq 682, maybe hot
;;   Invalid sum of incoming frequencies 102, should be 682
;;    prev block 123, next block 125, flags: (NEW, REACHABLE)
;;    pred:       41 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.52798 => _179
  # DEBUG __lastD.52797 => _181
  # DEBUG D#438ptD.0 => &__firstD.52798
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.52800 => _179
  # DEBUG __lastD.52799 => _181
  # .MEM_283 = VDEF <.MEM_282>
  __dnewD.52775 = _180;
  if (_180 > 15)
    goto <bb 42>;
  else
    goto <bb 44>;
;;    succ:       42 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 125, loop depth 0, count 0, freq 86, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 575, should be 86
;;    prev block 124, next block 126, flags: (NEW, REACHABLE)
;;    pred:       63 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.52887 } (escaped heap)
  # __new_finish_201 = PHI <__new_finish_111(63)>
  [LP 8] # .MEM_312 = VDEF <.MEM_302>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       126 (EH,EXECUTABLE)

;;   basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 125, next block 127, flags: (NEW)
;;    pred:       125 (EH,EXECUTABLE)
<L26>: [LP 8]
  goto <bb 75> (<L14>);
;;    succ:       75 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 127, loop depth 1, count 0, freq 676, maybe hot
;;   Invalid sum of incoming frequencies 101, should be 676
;;    prev block 126, next block 128, flags: (NEW, REACHABLE)
;;    pred:       63 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.52872 => _203
  # DEBUG __lastD.52871 => _205
  # DEBUG D#438ptD.0 => &__firstD.52872
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.52874 => _203
  # DEBUG __lastD.52873 => _205
  # .MEM_303 = VDEF <.MEM_302>
  __dnewD.52849 = _204;
  if (_204 > 15)
    goto <bb 64>;
  else
    goto <bb 66>;
;;    succ:       64 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 127, next block 129, flags: (NEW, REACHABLE)
;;    pred:       60 (EH,EXECUTABLE)
<L17>: [LP 9]
  # DEBUG __new_finishD.40368 => 0B
  # VUSE <.MEM_300>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _232 = __builtin_eh_pointerD.2738 (6);
  # .MEM_231 = VDEF <.MEM_300>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_begin_catchD.13514 (_232);
  pretmp_107 = &_32->D.11539._M_local_bufD.11541;
  goto <bb 103>;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 128, next block 1, flags: (NEW, REACHABLE)
;;    pred:       120 (EH,EXECUTABLE)
<L18>: [LP 10]
  # DEBUG __new_finishD.40368 => __new_finish_153
  # VUSE <.MEM_281>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _160 = __builtin_eh_pointerD.2738 (6);
  # .MEM_81 = VDEF <.MEM_281>
  # USE = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  # CLB = nonlocal null { D.40352 D.52624 D.52653 D.52701 D.52775 D.52849 D.52887 } (escaped)
  __cxa_begin_catchD.13514 (_160);
  if (__new_finish_153 == 0B)
    goto <bb 103>;
  else
    goto <bb 101>;
;;    succ:       103 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                101 [85.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE, funcdef_no=2027, decl_uid=35420, cgraph_uid=697, symbol_order=698)


Pass statistics:
----------------

void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (struct _Rb_treeD.35049 * const thisD.35421, struct _Rb_tree_nodeD.35053 * __xD.35422)
{
  struct _Rb_tree_nodeD.35053 * __xD.53089;
  struct _Rb_tree_nodeD.35053 * __xD.53076;
  struct _Rb_tree_nodeD.35053 * __xD.53063;
  struct _Rb_tree_nodeD.35053 * __xD.53050;
  struct _Rb_tree_nodeD.35053 * __xD.53037;
  struct _Rb_tree_nodeD.35053 * __xD.53024;
  struct _Rb_tree_nodeD.35053 * __xD.53011;
  struct _Rb_tree_nodeD.35053 * __xD.52998;
  struct _Rb_tree_node_baseD.25994 * _39;

;;   basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __xD.35422 => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_4(D)(2), .MEM_10(6)>
  # VUSE <.MEM_38>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # .MEM_69 = PHI <.MEM_4(D)(4), .MEM_10(38)>
  # DEBUG __xD.35422 => __x_68
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  __x_8 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_68 + 24B];
  # DEBUG D#129ptD.0 => __x_68
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.52997 => this_6(D)
  # DEBUG __xD.52998 => __x_8
  # DEBUG __xD.52998 => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_69(5), .MEM_50(9)>
  # VUSE <.MEM_34>
  # PT = nonlocal escaped 
  __x_9 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_68 + 16B];
  # DEBUG D#130ptD.0 => __x_68
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.40572 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.48864 => __x_68
  # DEBUG thisD.48865 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_68
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.48867 => D#411ptD.0
  # DEBUG __pD.48866 => __x_68
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.48870 => __x_68
  # DEBUG __aD.48868 => D#408ptD.0
  # DEBUG __nD.48869 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.48873 => __x_68
  # DEBUG thisD.48871 => D#404ptD.0
  # DEBUG D.48872 => D#405ptD.0
  # .MEM_10 = VDEF <.MEM_34>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_68);
  # DEBUG __xD.35422 => __x_9
  # DEBUG __xD.35422 => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # .MEM_93 = PHI <.MEM_69(7), .MEM_50(37)>
  # DEBUG __xD.52998 => __x_72
  # VUSE <.MEM_93>
  # PT = nonlocal escaped 
  __x_12 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_72 + 24B];
  # DEBUG D#129ptD.0 => __x_72
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53010 => this_6(D)
  # DEBUG __xD.53011 => __x_12
  # DEBUG __xD.53011 => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_93(8), .MEM_49(12)>
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  __x_13 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_72 + 16B];
  # DEBUG D#130ptD.0 => __x_72
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.52999 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53001 => __x_72
  # DEBUG thisD.53000 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_72
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53003 => D#411ptD.0
  # DEBUG __pD.53002 => __x_72
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53006 => __x_72
  # DEBUG __aD.53004 => D#408ptD.0
  # DEBUG __nD.53005 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53009 => __x_72
  # DEBUG thisD.53007 => D#404ptD.0
  # DEBUG D.53008 => D#405ptD.0
  # .MEM_50 = VDEF <.MEM_30>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_72);
  # DEBUG __xD.52998 => __x_13
  # DEBUG __xD.52998 => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;
;;    succ:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       8 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # .MEM_90 = PHI <.MEM_93(10), .MEM_49(36)>
  # DEBUG __xD.53011 => __x_71
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  __x_15 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_71 + 24B];
  # DEBUG D#129ptD.0 => __x_71
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53023 => this_6(D)
  # DEBUG __xD.53024 => __x_15
  # DEBUG __xD.53024 => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_90(11), .MEM_48(15)>
  # VUSE <.MEM_26>
  # PT = nonlocal escaped 
  __x_16 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_71 + 16B];
  # DEBUG D#130ptD.0 => __x_71
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53012 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53014 => __x_71
  # DEBUG thisD.53013 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_71
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53016 => D#411ptD.0
  # DEBUG __pD.53015 => __x_71
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53019 => __x_71
  # DEBUG __aD.53017 => D#408ptD.0
  # DEBUG __nD.53018 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53022 => __x_71
  # DEBUG thisD.53020 => D#404ptD.0
  # DEBUG D.53021 => D#405ptD.0
  # .MEM_49 = VDEF <.MEM_26>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_71);
  # DEBUG __xD.53011 => __x_16
  # DEBUG __xD.53011 => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # .MEM_87 = PHI <.MEM_90(13), .MEM_48(35)>
  # DEBUG __xD.53024 => __x_77
  # VUSE <.MEM_87>
  # PT = nonlocal escaped 
  __x_19 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_77 + 24B];
  # DEBUG D#129ptD.0 => __x_77
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53036 => this_6(D)
  # DEBUG __xD.53037 => __x_19
  # DEBUG __xD.53037 => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_87(14), .MEM_47(18)>
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  __x_20 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_77 + 16B];
  # DEBUG D#130ptD.0 => __x_77
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53025 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53027 => __x_77
  # DEBUG thisD.53026 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_77
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53029 => D#411ptD.0
  # DEBUG __pD.53028 => __x_77
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53032 => __x_77
  # DEBUG __aD.53030 => D#408ptD.0
  # DEBUG __nD.53031 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53035 => __x_77
  # DEBUG thisD.53033 => D#404ptD.0
  # DEBUG D.53034 => D#405ptD.0
  # .MEM_48 = VDEF <.MEM_25>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_77);
  # DEBUG __xD.53024 => __x_20
  # DEBUG __xD.53024 => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # .MEM_84 = PHI <.MEM_87(16), .MEM_47(34)>
  # DEBUG __xD.53037 => __x_80
  # VUSE <.MEM_84>
  # PT = nonlocal escaped 
  __x_23 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_80 + 24B];
  # DEBUG D#129ptD.0 => __x_80
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53049 => this_6(D)
  # DEBUG __xD.53050 => __x_23
  # DEBUG __xD.53050 => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_21 = PHI <.MEM_84(17), .MEM_46(21)>
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  __x_24 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_80 + 16B];
  # DEBUG D#130ptD.0 => __x_80
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53038 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53040 => __x_80
  # DEBUG thisD.53039 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_80
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53042 => D#411ptD.0
  # DEBUG __pD.53041 => __x_80
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53045 => __x_80
  # DEBUG __aD.53043 => D#408ptD.0
  # DEBUG __nD.53044 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53048 => __x_80
  # DEBUG thisD.53046 => D#404ptD.0
  # DEBUG D.53047 => D#405ptD.0
  # .MEM_47 = VDEF <.MEM_21>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_80);
  # DEBUG __xD.53037 => __x_24
  # DEBUG __xD.53037 => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 6, count 0, freq 9, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_81 = PHI <.MEM_84(19), .MEM_46(33)>
  # PT = nonlocal escaped 
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __xD.53050 => __x_83
  # VUSE <.MEM_81>
  # PT = nonlocal escaped 
  __x_27 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_83 + 24B];
  # DEBUG D#129ptD.0 => __x_83
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53062 => this_6(D)
  # DEBUG __xD.53063 => __x_27
  # DEBUG __xD.53063 => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 6, count 0, freq 9, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_17 = PHI <.MEM_81(20), .MEM_45(24)>
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  __x_28 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_83 + 16B];
  # DEBUG D#130ptD.0 => __x_83
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53051 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53053 => __x_83
  # DEBUG thisD.53052 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_83
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53055 => D#411ptD.0
  # DEBUG __pD.53054 => __x_83
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53058 => __x_83
  # DEBUG __aD.53056 => D#408ptD.0
  # DEBUG __nD.53057 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53061 => __x_83
  # DEBUG thisD.53059 => D#404ptD.0
  # DEBUG D.53060 => D#405ptD.0
  # .MEM_46 = VDEF <.MEM_17>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_83);
  # DEBUG __xD.53050 => __x_28
  # DEBUG __xD.53050 => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 6, count 0, freq 8, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 7, count 0, freq 89, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_78 = PHI <.MEM_81(22), .MEM_45(32)>
  # PT = nonlocal escaped 
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __xD.53063 => __x_86
  # VUSE <.MEM_78>
  # PT = nonlocal escaped 
  __x_31 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_86 + 24B];
  # DEBUG D#129ptD.0 => __x_86
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53075 => this_6(D)
  # DEBUG __xD.53076 => __x_31
  # DEBUG __xD.53076 => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 7, count 0, freq 89, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_78(23), .MEM_44(27)>
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  __x_32 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_86 + 16B];
  # DEBUG D#130ptD.0 => __x_86
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53064 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53066 => __x_86
  # DEBUG thisD.53065 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_86
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53068 => D#411ptD.0
  # DEBUG __pD.53067 => __x_86
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53071 => __x_86
  # DEBUG __aD.53069 => D#408ptD.0
  # DEBUG __nD.53070 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53074 => __x_86
  # DEBUG thisD.53072 => D#404ptD.0
  # DEBUG D.53073 => D#405ptD.0
  # .MEM_45 = VDEF <.MEM_14>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_86);
  # DEBUG __xD.53063 => __x_32
  # DEBUG __xD.53063 => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;
;;    succ:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 7, count 0, freq 81, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 8, count 0, freq 900, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_78(25), .MEM_44(31)>
  # PT = nonlocal escaped 
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __xD.53076 => __x_89
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  __x_35 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_89 + 24B];
  # DEBUG D#129ptD.0 => __x_89
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53088 => this_6(D)
  # DEBUG __xD.53089 => __x_35
  # DEBUG __xD.53089 => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 8, count 0, freq 900, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_22 = PHI <.MEM_75(26), .MEM_43(29)>
  # VUSE <.MEM_22>
  # PT = nonlocal escaped 
  __x_36 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_89 + 16B];
  # DEBUG D#130ptD.0 => __x_89
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53077 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53079 => __x_89
  # DEBUG thisD.53078 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_89
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53081 => D#411ptD.0
  # DEBUG __pD.53080 => __x_89
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53084 => __x_89
  # DEBUG __aD.53082 => D#408ptD.0
  # DEBUG __nD.53083 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53087 => __x_89
  # DEBUG thisD.53085 => D#404ptD.0
  # DEBUG D.53086 => D#405ptD.0
  # .MEM_44 = VDEF <.MEM_22>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_89);
  # DEBUG __xD.53076 => __x_36
  # DEBUG __xD.53076 => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;
;;    succ:       24 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 8, count 0, freq 819, maybe hot
;;    prev block 27, next block 29, flags: (NEW)
;;    pred:       26 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 9, count 0, freq 9100, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_73 = PHI <.MEM_75(28), .MEM_43(30)>
  # PT = nonlocal escaped 
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __xD.53089 => __x_92
  # VUSE <.MEM_73>
  # PT = nonlocal escaped 
  _39 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_92 + 24B];
  # DEBUG D#129ptD.0 => __x_92
  # DEBUG __xD.48878 => D#129ptD.0
  # .MEM_42 = VDEF <.MEM_73>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiED.35420 (this_6(D), _39);
  # VUSE <.MEM_42>
  # PT = nonlocal escaped 
  __x_40 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_92 + 16B];
  # DEBUG D#130ptD.0 => __x_92
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53090 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53092 => __x_92
  # DEBUG thisD.53091 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_92
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53094 => D#411ptD.0
  # DEBUG __pD.53093 => __x_92
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53097 => __x_92
  # DEBUG __aD.53095 => D#408ptD.0
  # DEBUG __nD.53096 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53100 => __x_92
  # DEBUG thisD.53098 => D#404ptD.0
  # DEBUG D.53099 => D#405ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_92);
  # DEBUG __xD.53089 => __x_40
  # DEBUG __xD.53089 => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;
;;    succ:       27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 9, count 0, freq 8281, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 31, loop depth 8, count 0, freq 819, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       27 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 32, loop depth 7, count 0, freq 81, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       24 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 33, loop depth 6, count 0, freq 8, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       21 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 34, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       18 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 35, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 36, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 37, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       9 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 37, next block 1, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



Updating SSA:
Registering new PHI nodes in block #5
Registering new PHI nodes in block #7
Registering new PHI nodes in block #8
Registering new PHI nodes in block #10
Registering new PHI nodes in block #11
Registering new PHI nodes in block #13
Registering new PHI nodes in block #14
Registering new PHI nodes in block #16
Registering new PHI nodes in block #17
Registering new PHI nodes in block #19
Registering new PHI nodes in block #20
Registering new PHI nodes in block #22
Registering new PHI nodes in block #23
Registering new PHI nodes in block #25
Registering new PHI nodes in block #26
Registering new PHI nodes in block #28
Registering new PHI nodes in block #29
Updating SSA information for statement operator delete (__x_92);
Registering new PHI nodes in block #30
Registering new PHI nodes in block #47
Registering new PHI nodes in block #27
Updating SSA information for statement operator delete (__x_89);
Registering new PHI nodes in block #31
Registering new PHI nodes in block #46
Registering new PHI nodes in block #24
Updating SSA information for statement operator delete (__x_86);
Registering new PHI nodes in block #32
Registering new PHI nodes in block #45
Registering new PHI nodes in block #21
Updating SSA information for statement operator delete (__x_83);
Registering new PHI nodes in block #33
Registering new PHI nodes in block #44
Registering new PHI nodes in block #18
Updating SSA information for statement operator delete (__x_80);
Registering new PHI nodes in block #34
Registering new PHI nodes in block #43
Registering new PHI nodes in block #15
Updating SSA information for statement operator delete (__x_77);
Registering new PHI nodes in block #35
Registering new PHI nodes in block #42
Registering new PHI nodes in block #12
Updating SSA information for statement operator delete (__x_71);
Registering new PHI nodes in block #36
Registering new PHI nodes in block #41
Registering new PHI nodes in block #9
Updating SSA information for statement operator delete (__x_72);
Registering new PHI nodes in block #37
Registering new PHI nodes in block #40
Registering new PHI nodes in block #6
Updating SSA information for statement operator delete (__x_68);
Registering new PHI nodes in block #38
Registering new PHI nodes in block #39

DFA Statistics for void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*]

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            171       1368b
DEF operands                             18        144b
VUSE operands                            29        232b
VDEF operands                            10         80b
PHI nodes                                36       3744b
PHI arguments                            63       3024b
---------------------------------------------------------
Total memory used by DFA/SSA data                 8592b
---------------------------------------------------------

Average number of arguments per PHI node: 1.8 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_70 -> { .MEM_10 }
.MEM_74 -> { .MEM_43 }
.MEM_76 -> { .MEM_44 }
.MEM_79 -> { .MEM_45 }
.MEM_82 -> { .MEM_46 }
.MEM_85 -> { .MEM_47 }
.MEM_88 -> { .MEM_48 }
.MEM_91 -> { .MEM_49 }
.MEM_94 -> { .MEM_50 }
Incremental SSA update started at block: 5
Number of blocks in CFG: 48
Number of blocks to update: 35 ( 73%)
Affected blocks: 5 6 8 9 11 12 14 15 17 18 20 21 23 24 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47


Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:49, LOOPS:9, CONDITIONS:18, STMTS:522)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG __x => __x_3(D)
    if (__x_3(D) == 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 bb_39 }, succs = {bb_48 })
  {
    <bb 3>:
    # .MEM_38 = PHI <.MEM_4(D)(2), .MEM_70(39)>

  }
  bb_48 (preds = {bb_3 }, succs = {bb_1 })
  {
    <bb 48>:
    # VUSE <.MEM_38>
    return;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_39 (preds = {bb_6 }, succs = {bb_3 })
  {
    <bb 39>:
    # .MEM_70 = PHI <.MEM_10(6)>
    goto <bb 3>;

  }
  loop_1 (header = 5, latch = 38, niter = )
  {
    bb_5 (preds = {bb_4 bb_38 }, succs = {bb_6 bb_7 })
    {
      <bb 5>:
      # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
      # .MEM_69 = PHI <.MEM_4(D)(4), .MEM_10(38)>
      # DEBUG __x => __x_68
      # VUSE <.MEM_69>
      __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
      # DEBUG D#129 => __x_68
      # DEBUG __x => D#129
      # DEBUG this => this_6(D)
      # DEBUG __x => __x_8
      # DEBUG __x => __x_8
      if (__x_8 == 0B)
        goto <bb 6>;
      else
        goto <bb 7>;

    }
    bb_6 (preds = {bb_5 bb_40 }, succs = {bb_39 bb_38 })
    {
      <bb 6>:
      # .MEM_34 = PHI <.MEM_69(5), .MEM_94(40)>
      # VUSE <.MEM_34>
      __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
      # DEBUG D#130 => __x_68
      # DEBUG __x => D#130
      # DEBUG __y => NULL
      # DEBUG D#413 => this_6(D)
      # DEBUG __p => __x_68
      # DEBUG this => D#413
      # DEBUG D#412 => D#413
      # DEBUG D#411 => D#413
      # DEBUG D#410 => D#413
      # DEBUG D#402 => D#410
      # DEBUG D#403 => __x_68
      # DEBUG this => D#402
      # DEBUG __p => D#403
      # DEBUG D#401 => D#402
      # DEBUG D#400 => D#403
      # DEBUG D#399 => D#403
      # DEBUG this => D#399
      # DEBUG D#398 => &D#400->_M_value_field
      # DEBUG __r => D#398
      # DEBUG D#397 => D#401
      # DEBUG this => D#397
      # DEBUG D#396 => D#397
      # DEBUG this => D#396
      # DEBUG this => NULL
      # DEBUG D.48773 => NULL
      # DEBUG this => NULL
      # DEBUG D#312 => D#398
      # DEBUG this => D#311
      # DEBUG __p => D#312
      # DEBUG this => NULL
      # DEBUG this => NULL
      # DEBUG this => D#411
      # DEBUG __p => __x_68
      # DEBUG this => D#412
      # DEBUG D#409 => 1
      # DEBUG __p => __x_68
      # DEBUG __a => D#408
      # DEBUG __n => D#409
      # DEBUG D#407 => D#409
      # DEBUG D#406 => D#408
      # DEBUG D#404 => D#406
      # DEBUG D#405 => D#407
      # DEBUG __p => __x_68
      # DEBUG this => D#404
      # DEBUG D.48872 => D#405
      # .MEM_10 = VDEF <.MEM_34>
      operator delete (__x_68);
      # DEBUG __x => __x_9
      # DEBUG __x => __x_9
      if (__x_9 == 0B)
        goto <bb 39>;
      else
        goto <bb 38>;

    }
    bb_7 (preds = {bb_5 }, succs = {bb_8 })
    {
      <bb 7>:

    }
    bb_40 (preds = {bb_9 }, succs = {bb_6 })
    {
      <bb 40>:
      # .MEM_94 = PHI <.MEM_50(9)>
      goto <bb 6>;

    }
    bb_38 (preds = {bb_6 }, succs = {bb_5 })
    {
      <bb 38>:
      goto <bb 5>;

    }
    loop_2 (header = 8, latch = 37, niter = )
    {
      bb_8 (preds = {bb_7 bb_37 }, succs = {bb_9 bb_10 })
      {
        <bb 8>:
        # __x_72 = PHI <__x_8(7), __x_13(37)>
        # .MEM_93 = PHI <.MEM_69(7), .MEM_50(37)>
        # DEBUG __x => __x_72
        # VUSE <.MEM_93>
        __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
        # DEBUG D#129 => __x_72
        # DEBUG __x => D#129
        # DEBUG this => this_6(D)
        # DEBUG __x => __x_12
        # DEBUG __x => __x_12
        if (__x_12 == 0B)
          goto <bb 9>;
        else
          goto <bb 10>;

      }
      bb_9 (preds = {bb_8 bb_41 }, succs = {bb_40 bb_37 })
      {
        <bb 9>:
        # .MEM_30 = PHI <.MEM_93(8), .MEM_91(41)>
        # VUSE <.MEM_30>
        __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
        # DEBUG D#130 => __x_72
        # DEBUG __x => D#130
        # DEBUG __y => NULL
        # DEBUG D#413 => this_6(D)
        # DEBUG __p => __x_72
        # DEBUG this => D#413
        # DEBUG D#412 => D#413
        # DEBUG D#411 => D#413
        # DEBUG D#410 => D#413
        # DEBUG D#402 => D#410
        # DEBUG D#403 => __x_72
        # DEBUG this => D#402
        # DEBUG __p => D#403
        # DEBUG D#401 => D#402
        # DEBUG D#400 => D#403
        # DEBUG D#399 => D#403
        # DEBUG this => D#399
        # DEBUG D#398 => &D#400->_M_value_field
        # DEBUG __r => D#398
        # DEBUG D#397 => D#401
        # DEBUG this => D#397
        # DEBUG D#396 => D#397
        # DEBUG this => D#396
        # DEBUG this => NULL
        # DEBUG D.48773 => NULL
        # DEBUG this => NULL
        # DEBUG D#312 => D#398
        # DEBUG this => D#311
        # DEBUG __p => D#312
        # DEBUG this => NULL
        # DEBUG this => NULL
        # DEBUG this => D#411
        # DEBUG __p => __x_72
        # DEBUG this => D#412
        # DEBUG D#409 => 1
        # DEBUG __p => __x_72
        # DEBUG __a => D#408
        # DEBUG __n => D#409
        # DEBUG D#407 => D#409
        # DEBUG D#406 => D#408
        # DEBUG D#404 => D#406
        # DEBUG D#405 => D#407
        # DEBUG __p => __x_72
        # DEBUG this => D#404
        # DEBUG D.53008 => D#405
        # .MEM_50 = VDEF <.MEM_30>
        operator delete (__x_72);
        # DEBUG __x => __x_13
        # DEBUG __x => __x_13
        if (__x_13 == 0B)
          goto <bb 40>;
        else
          goto <bb 37>;

      }
      bb_10 (preds = {bb_8 }, succs = {bb_11 })
      {
        <bb 10>:

      }
      bb_41 (preds = {bb_12 }, succs = {bb_9 })
      {
        <bb 41>:
        # .MEM_91 = PHI <.MEM_49(12)>
        goto <bb 9>;

      }
      bb_37 (preds = {bb_9 }, succs = {bb_8 })
      {
        <bb 37>:
        goto <bb 8>;

      }
      loop_3 (header = 11, latch = 36, niter = )
      {
        bb_11 (preds = {bb_10 bb_36 }, succs = {bb_12 bb_13 })
        {
          <bb 11>:
          # __x_71 = PHI <__x_12(10), __x_16(36)>
          # .MEM_90 = PHI <.MEM_93(10), .MEM_49(36)>
          # DEBUG __x => __x_71
          # VUSE <.MEM_90>
          __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
          # DEBUG D#129 => __x_71
          # DEBUG __x => D#129
          # DEBUG this => this_6(D)
          # DEBUG __x => __x_15
          # DEBUG __x => __x_15
          if (__x_15 == 0B)
            goto <bb 12>;
          else
            goto <bb 13>;

        }
        bb_12 (preds = {bb_11 bb_42 }, succs = {bb_41 bb_36 })
        {
          <bb 12>:
          # .MEM_26 = PHI <.MEM_90(11), .MEM_88(42)>
          # VUSE <.MEM_26>
          __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
          # DEBUG D#130 => __x_71
          # DEBUG __x => D#130
          # DEBUG __y => NULL
          # DEBUG D#413 => this_6(D)
          # DEBUG __p => __x_71
          # DEBUG this => D#413
          # DEBUG D#412 => D#413
          # DEBUG D#411 => D#413
          # DEBUG D#410 => D#413
          # DEBUG D#402 => D#410
          # DEBUG D#403 => __x_71
          # DEBUG this => D#402
          # DEBUG __p => D#403
          # DEBUG D#401 => D#402
          # DEBUG D#400 => D#403
          # DEBUG D#399 => D#403
          # DEBUG this => D#399
          # DEBUG D#398 => &D#400->_M_value_field
          # DEBUG __r => D#398
          # DEBUG D#397 => D#401
          # DEBUG this => D#397
          # DEBUG D#396 => D#397
          # DEBUG this => D#396
          # DEBUG this => NULL
          # DEBUG D.48773 => NULL
          # DEBUG this => NULL
          # DEBUG D#312 => D#398
          # DEBUG this => D#311
          # DEBUG __p => D#312
          # DEBUG this => NULL
          # DEBUG this => NULL
          # DEBUG this => D#411
          # DEBUG __p => __x_71
          # DEBUG this => D#412
          # DEBUG D#409 => 1
          # DEBUG __p => __x_71
          # DEBUG __a => D#408
          # DEBUG __n => D#409
          # DEBUG D#407 => D#409
          # DEBUG D#406 => D#408
          # DEBUG D#404 => D#406
          # DEBUG D#405 => D#407
          # DEBUG __p => __x_71
          # DEBUG this => D#404
          # DEBUG D.53021 => D#405
          # .MEM_49 = VDEF <.MEM_26>
          operator delete (__x_71);
          # DEBUG __x => __x_16
          # DEBUG __x => __x_16
          if (__x_16 == 0B)
            goto <bb 41>;
          else
            goto <bb 36>;

        }
        bb_13 (preds = {bb_11 }, succs = {bb_14 })
        {
          <bb 13>:

        }
        bb_42 (preds = {bb_15 }, succs = {bb_12 })
        {
          <bb 42>:
          # .MEM_88 = PHI <.MEM_48(15)>
          goto <bb 12>;

        }
        bb_36 (preds = {bb_12 }, succs = {bb_11 })
        {
          <bb 36>:
          goto <bb 11>;

        }
        loop_4 (header = 14, latch = 35, niter = )
        {
          bb_14 (preds = {bb_13 bb_35 }, succs = {bb_15 bb_16 })
          {
            <bb 14>:
            # __x_77 = PHI <__x_15(13), __x_20(35)>
            # .MEM_87 = PHI <.MEM_90(13), .MEM_48(35)>
            # DEBUG __x => __x_77
            # VUSE <.MEM_87>
            __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
            # DEBUG D#129 => __x_77
            # DEBUG __x => D#129
            # DEBUG this => this_6(D)
            # DEBUG __x => __x_19
            # DEBUG __x => __x_19
            if (__x_19 == 0B)
              goto <bb 15>;
            else
              goto <bb 16>;

          }
          bb_15 (preds = {bb_14 bb_43 }, succs = {bb_42 bb_35 })
          {
            <bb 15>:
            # .MEM_25 = PHI <.MEM_87(14), .MEM_85(43)>
            # VUSE <.MEM_25>
            __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
            # DEBUG D#130 => __x_77
            # DEBUG __x => D#130
            # DEBUG __y => NULL
            # DEBUG D#413 => this_6(D)
            # DEBUG __p => __x_77
            # DEBUG this => D#413
            # DEBUG D#412 => D#413
            # DEBUG D#411 => D#413
            # DEBUG D#410 => D#413
            # DEBUG D#402 => D#410
            # DEBUG D#403 => __x_77
            # DEBUG this => D#402
            # DEBUG __p => D#403
            # DEBUG D#401 => D#402
            # DEBUG D#400 => D#403
            # DEBUG D#399 => D#403
            # DEBUG this => D#399
            # DEBUG D#398 => &D#400->_M_value_field
            # DEBUG __r => D#398
            # DEBUG D#397 => D#401
            # DEBUG this => D#397
            # DEBUG D#396 => D#397
            # DEBUG this => D#396
            # DEBUG this => NULL
            # DEBUG D.48773 => NULL
            # DEBUG this => NULL
            # DEBUG D#312 => D#398
            # DEBUG this => D#311
            # DEBUG __p => D#312
            # DEBUG this => NULL
            # DEBUG this => NULL
            # DEBUG this => D#411
            # DEBUG __p => __x_77
            # DEBUG this => D#412
            # DEBUG D#409 => 1
            # DEBUG __p => __x_77
            # DEBUG __a => D#408
            # DEBUG __n => D#409
            # DEBUG D#407 => D#409
            # DEBUG D#406 => D#408
            # DEBUG D#404 => D#406
            # DEBUG D#405 => D#407
            # DEBUG __p => __x_77
            # DEBUG this => D#404
            # DEBUG D.53034 => D#405
            # .MEM_48 = VDEF <.MEM_25>
            operator delete (__x_77);
            # DEBUG __x => __x_20
            # DEBUG __x => __x_20
            if (__x_20 == 0B)
              goto <bb 42>;
            else
              goto <bb 35>;

          }
          bb_16 (preds = {bb_14 }, succs = {bb_17 })
          {
            <bb 16>:

          }
          bb_43 (preds = {bb_18 }, succs = {bb_15 })
          {
            <bb 43>:
            # .MEM_85 = PHI <.MEM_47(18)>
            goto <bb 15>;

          }
          bb_35 (preds = {bb_15 }, succs = {bb_14 })
          {
            <bb 35>:
            goto <bb 14>;

          }
          loop_5 (header = 17, latch = 34, niter = )
          {
            bb_17 (preds = {bb_16 bb_34 }, succs = {bb_18 bb_19 })
            {
              <bb 17>:
              # __x_80 = PHI <__x_19(16), __x_24(34)>
              # .MEM_84 = PHI <.MEM_87(16), .MEM_47(34)>
              # DEBUG __x => __x_80
              # VUSE <.MEM_84>
              __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
              # DEBUG D#129 => __x_80
              # DEBUG __x => D#129
              # DEBUG this => this_6(D)
              # DEBUG __x => __x_23
              # DEBUG __x => __x_23
              if (__x_23 == 0B)
                goto <bb 18>;
              else
                goto <bb 19>;

            }
            bb_18 (preds = {bb_17 bb_44 }, succs = {bb_43 bb_34 })
            {
              <bb 18>:
              # .MEM_21 = PHI <.MEM_84(17), .MEM_82(44)>
              # VUSE <.MEM_21>
              __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
              # DEBUG D#130 => __x_80
              # DEBUG __x => D#130
              # DEBUG __y => NULL
              # DEBUG D#413 => this_6(D)
              # DEBUG __p => __x_80
              # DEBUG this => D#413
              # DEBUG D#412 => D#413
              # DEBUG D#411 => D#413
              # DEBUG D#410 => D#413
              # DEBUG D#402 => D#410
              # DEBUG D#403 => __x_80
              # DEBUG this => D#402
              # DEBUG __p => D#403
              # DEBUG D#401 => D#402
              # DEBUG D#400 => D#403
              # DEBUG D#399 => D#403
              # DEBUG this => D#399
              # DEBUG D#398 => &D#400->_M_value_field
              # DEBUG __r => D#398
              # DEBUG D#397 => D#401
              # DEBUG this => D#397
              # DEBUG D#396 => D#397
              # DEBUG this => D#396
              # DEBUG this => NULL
              # DEBUG D.48773 => NULL
              # DEBUG this => NULL
              # DEBUG D#312 => D#398
              # DEBUG this => D#311
              # DEBUG __p => D#312
              # DEBUG this => NULL
              # DEBUG this => NULL
              # DEBUG this => D#411
              # DEBUG __p => __x_80
              # DEBUG this => D#412
              # DEBUG D#409 => 1
              # DEBUG __p => __x_80
              # DEBUG __a => D#408
              # DEBUG __n => D#409
              # DEBUG D#407 => D#409
              # DEBUG D#406 => D#408
              # DEBUG D#404 => D#406
              # DEBUG D#405 => D#407
              # DEBUG __p => __x_80
              # DEBUG this => D#404
              # DEBUG D.53047 => D#405
              # .MEM_47 = VDEF <.MEM_21>
              operator delete (__x_80);
              # DEBUG __x => __x_24
              # DEBUG __x => __x_24
              if (__x_24 == 0B)
                goto <bb 43>;
              else
                goto <bb 34>;

            }
            bb_19 (preds = {bb_17 }, succs = {bb_20 })
            {
              <bb 19>:

            }
            bb_44 (preds = {bb_21 }, succs = {bb_18 })
            {
              <bb 44>:
              # .MEM_82 = PHI <.MEM_46(21)>
              goto <bb 18>;

            }
            bb_34 (preds = {bb_18 }, succs = {bb_17 })
            {
              <bb 34>:
              goto <bb 17>;

            }
            loop_6 (header = 20, latch = 33, niter = )
            {
              bb_20 (preds = {bb_19 bb_33 }, succs = {bb_21 bb_22 })
              {
                <bb 20>:
                # .MEM_81 = PHI <.MEM_84(19), .MEM_46(33)>
                # __x_83 = PHI <__x_23(19), __x_28(33)>
                # DEBUG __x => __x_83
                # VUSE <.MEM_81>
                __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
                # DEBUG D#129 => __x_83
                # DEBUG __x => D#129
                # DEBUG this => this_6(D)
                # DEBUG __x => __x_27
                # DEBUG __x => __x_27
                if (__x_27 == 0B)
                  goto <bb 21>;
                else
                  goto <bb 22>;

              }
              bb_21 (preds = {bb_20 bb_45 }, succs = {bb_44 bb_33 })
              {
                <bb 21>:
                # .MEM_17 = PHI <.MEM_81(20), .MEM_79(45)>
                # VUSE <.MEM_17>
                __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
                # DEBUG D#130 => __x_83
                # DEBUG __x => D#130
                # DEBUG __y => NULL
                # DEBUG D#413 => this_6(D)
                # DEBUG __p => __x_83
                # DEBUG this => D#413
                # DEBUG D#412 => D#413
                # DEBUG D#411 => D#413
                # DEBUG D#410 => D#413
                # DEBUG D#402 => D#410
                # DEBUG D#403 => __x_83
                # DEBUG this => D#402
                # DEBUG __p => D#403
                # DEBUG D#401 => D#402
                # DEBUG D#400 => D#403
                # DEBUG D#399 => D#403
                # DEBUG this => D#399
                # DEBUG D#398 => &D#400->_M_value_field
                # DEBUG __r => D#398
                # DEBUG D#397 => D#401
                # DEBUG this => D#397
                # DEBUG D#396 => D#397
                # DEBUG this => D#396
                # DEBUG this => NULL
                # DEBUG D.48773 => NULL
                # DEBUG this => NULL
                # DEBUG D#312 => D#398
                # DEBUG this => D#311
                # DEBUG __p => D#312
                # DEBUG this => NULL
                # DEBUG this => NULL
                # DEBUG this => D#411
                # DEBUG __p => __x_83
                # DEBUG this => D#412
                # DEBUG D#409 => 1
                # DEBUG __p => __x_83
                # DEBUG __a => D#408
                # DEBUG __n => D#409
                # DEBUG D#407 => D#409
                # DEBUG D#406 => D#408
                # DEBUG D#404 => D#406
                # DEBUG D#405 => D#407
                # DEBUG __p => __x_83
                # DEBUG this => D#404
                # DEBUG D.53060 => D#405
                # .MEM_46 = VDEF <.MEM_17>
                operator delete (__x_83);
                # DEBUG __x => __x_28
                # DEBUG __x => __x_28
                if (__x_28 == 0B)
                  goto <bb 44>;
                else
                  goto <bb 33>;

              }
              bb_22 (preds = {bb_20 }, succs = {bb_23 })
              {
                <bb 22>:

              }
              bb_45 (preds = {bb_24 }, succs = {bb_21 })
              {
                <bb 45>:
                # .MEM_79 = PHI <.MEM_45(24)>
                goto <bb 21>;

              }
              bb_33 (preds = {bb_21 }, succs = {bb_20 })
              {
                <bb 33>:
                goto <bb 20>;

              }
              loop_7 (header = 23, latch = 32, niter = )
              {
                bb_23 (preds = {bb_22 bb_32 }, succs = {bb_24 bb_25 })
                {
                  <bb 23>:
                  # .MEM_78 = PHI <.MEM_81(22), .MEM_45(32)>
                  # __x_86 = PHI <__x_27(22), __x_32(32)>
                  # DEBUG __x => __x_86
                  # VUSE <.MEM_78>
                  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
                  # DEBUG D#129 => __x_86
                  # DEBUG __x => D#129
                  # DEBUG this => this_6(D)
                  # DEBUG __x => __x_31
                  # DEBUG __x => __x_31
                  if (__x_31 == 0B)
                    goto <bb 24>;
                  else
                    goto <bb 25>;

                }
                bb_24 (preds = {bb_23 bb_46 }, succs = {bb_45 bb_32 })
                {
                  <bb 24>:
                  # .MEM_14 = PHI <.MEM_78(23), .MEM_76(46)>
                  # VUSE <.MEM_14>
                  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
                  # DEBUG D#130 => __x_86
                  # DEBUG __x => D#130
                  # DEBUG __y => NULL
                  # DEBUG D#413 => this_6(D)
                  # DEBUG __p => __x_86
                  # DEBUG this => D#413
                  # DEBUG D#412 => D#413
                  # DEBUG D#411 => D#413
                  # DEBUG D#410 => D#413
                  # DEBUG D#402 => D#410
                  # DEBUG D#403 => __x_86
                  # DEBUG this => D#402
                  # DEBUG __p => D#403
                  # DEBUG D#401 => D#402
                  # DEBUG D#400 => D#403
                  # DEBUG D#399 => D#403
                  # DEBUG this => D#399
                  # DEBUG D#398 => &D#400->_M_value_field
                  # DEBUG __r => D#398
                  # DEBUG D#397 => D#401
                  # DEBUG this => D#397
                  # DEBUG D#396 => D#397
                  # DEBUG this => D#396
                  # DEBUG this => NULL
                  # DEBUG D.48773 => NULL
                  # DEBUG this => NULL
                  # DEBUG D#312 => D#398
                  # DEBUG this => D#311
                  # DEBUG __p => D#312
                  # DEBUG this => NULL
                  # DEBUG this => NULL
                  # DEBUG this => D#411
                  # DEBUG __p => __x_86
                  # DEBUG this => D#412
                  # DEBUG D#409 => 1
                  # DEBUG __p => __x_86
                  # DEBUG __a => D#408
                  # DEBUG __n => D#409
                  # DEBUG D#407 => D#409
                  # DEBUG D#406 => D#408
                  # DEBUG D#404 => D#406
                  # DEBUG D#405 => D#407
                  # DEBUG __p => __x_86
                  # DEBUG this => D#404
                  # DEBUG D.53073 => D#405
                  # .MEM_45 = VDEF <.MEM_14>
                  operator delete (__x_86);
                  # DEBUG __x => __x_32
                  # DEBUG __x => __x_32
                  if (__x_32 == 0B)
                    goto <bb 45>;
                  else
                    goto <bb 32>;

                }
                bb_25 (preds = {bb_23 }, succs = {bb_26 })
                {
                  <bb 25>:

                }
                bb_46 (preds = {bb_27 }, succs = {bb_24 })
                {
                  <bb 46>:
                  # .MEM_76 = PHI <.MEM_44(27)>
                  goto <bb 24>;

                }
                bb_32 (preds = {bb_24 }, succs = {bb_23 })
                {
                  <bb 32>:
                  goto <bb 23>;

                }
                loop_8 (header = 26, latch = 31, niter = )
                {
                  bb_26 (preds = {bb_25 bb_31 }, succs = {bb_27 bb_28 })
                  {
                    <bb 26>:
                    # .MEM_75 = PHI <.MEM_78(25), .MEM_44(31)>
                    # __x_89 = PHI <__x_31(25), __x_36(31)>
                    # DEBUG __x => __x_89
                    # VUSE <.MEM_75>
                    __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
                    # DEBUG D#129 => __x_89
                    # DEBUG __x => D#129
                    # DEBUG this => this_6(D)
                    # DEBUG __x => __x_35
                    # DEBUG __x => __x_35
                    if (__x_35 == 0B)
                      goto <bb 27>;
                    else
                      goto <bb 28>;

                  }
                  bb_27 (preds = {bb_26 bb_47 }, succs = {bb_46 bb_31 })
                  {
                    <bb 27>:
                    # .MEM_22 = PHI <.MEM_75(26), .MEM_74(47)>
                    # VUSE <.MEM_22>
                    __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
                    # DEBUG D#130 => __x_89
                    # DEBUG __x => D#130
                    # DEBUG __y => NULL
                    # DEBUG D#413 => this_6(D)
                    # DEBUG __p => __x_89
                    # DEBUG this => D#413
                    # DEBUG D#412 => D#413
                    # DEBUG D#411 => D#413
                    # DEBUG D#410 => D#413
                    # DEBUG D#402 => D#410
                    # DEBUG D#403 => __x_89
                    # DEBUG this => D#402
                    # DEBUG __p => D#403
                    # DEBUG D#401 => D#402
                    # DEBUG D#400 => D#403
                    # DEBUG D#399 => D#403
                    # DEBUG this => D#399
                    # DEBUG D#398 => &D#400->_M_value_field
                    # DEBUG __r => D#398
                    # DEBUG D#397 => D#401
                    # DEBUG this => D#397
                    # DEBUG D#396 => D#397
                    # DEBUG this => D#396
                    # DEBUG this => NULL
                    # DEBUG D.48773 => NULL
                    # DEBUG this => NULL
                    # DEBUG D#312 => D#398
                    # DEBUG this => D#311
                    # DEBUG __p => D#312
                    # DEBUG this => NULL
                    # DEBUG this => NULL
                    # DEBUG this => D#411
                    # DEBUG __p => __x_89
                    # DEBUG this => D#412
                    # DEBUG D#409 => 1
                    # DEBUG __p => __x_89
                    # DEBUG __a => D#408
                    # DEBUG __n => D#409
                    # DEBUG D#407 => D#409
                    # DEBUG D#406 => D#408
                    # DEBUG D#404 => D#406
                    # DEBUG D#405 => D#407
                    # DEBUG __p => __x_89
                    # DEBUG this => D#404
                    # DEBUG D.53086 => D#405
                    # .MEM_44 = VDEF <.MEM_22>
                    operator delete (__x_89);
                    # DEBUG __x => __x_36
                    # DEBUG __x => __x_36
                    if (__x_36 == 0B)
                      goto <bb 46>;
                    else
                      goto <bb 31>;

                  }
                  bb_28 (preds = {bb_26 }, succs = {bb_29 })
                  {
                    <bb 28>:

                  }
                  bb_47 (preds = {bb_29 }, succs = {bb_27 })
                  {
                    <bb 47>:
                    # .MEM_74 = PHI <.MEM_43(29)>
                    goto <bb 27>;

                  }
                  bb_31 (preds = {bb_27 }, succs = {bb_26 })
                  {
                    <bb 31>:
                    goto <bb 26>;

                  }
                  loop_9 (header = 29, latch = 30, niter = )
                  {
                    bb_29 (preds = {bb_28 bb_30 }, succs = {bb_47 bb_30 })
                    {
                      <bb 29>:
                      # .MEM_73 = PHI <.MEM_75(28), .MEM_43(30)>
                      # __x_92 = PHI <__x_35(28), __x_40(30)>
                      # DEBUG __x => __x_92
                      # VUSE <.MEM_73>
                      _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
                      # DEBUG D#129 => __x_92
                      # DEBUG __x => D#129
                      # .MEM_42 = VDEF <.MEM_73>
                      std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (this_6(D), _39);
                      # VUSE <.MEM_42>
                      __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
                      # DEBUG D#130 => __x_92
                      # DEBUG __x => D#130
                      # DEBUG __y => NULL
                      # DEBUG D#413 => this_6(D)
                      # DEBUG __p => __x_92
                      # DEBUG this => D#413
                      # DEBUG D#412 => D#413
                      # DEBUG D#411 => D#413
                      # DEBUG D#410 => D#413
                      # DEBUG D#402 => D#410
                      # DEBUG D#403 => __x_92
                      # DEBUG this => D#402
                      # DEBUG __p => D#403
                      # DEBUG D#401 => D#402
                      # DEBUG D#400 => D#403
                      # DEBUG D#399 => D#403
                      # DEBUG this => D#399
                      # DEBUG D#398 => &D#400->_M_value_field
                      # DEBUG __r => D#398
                      # DEBUG D#397 => D#401
                      # DEBUG this => D#397
                      # DEBUG D#396 => D#397
                      # DEBUG this => D#396
                      # DEBUG this => NULL
                      # DEBUG D.48773 => NULL
                      # DEBUG this => NULL
                      # DEBUG D#312 => D#398
                      # DEBUG this => D#311
                      # DEBUG __p => D#312
                      # DEBUG this => NULL
                      # DEBUG this => NULL
                      # DEBUG this => D#411
                      # DEBUG __p => __x_92
                      # DEBUG this => D#412
                      # DEBUG D#409 => 1
                      # DEBUG __p => __x_92
                      # DEBUG __a => D#408
                      # DEBUG __n => D#409
                      # DEBUG D#407 => D#409
                      # DEBUG D#406 => D#408
                      # DEBUG D#404 => D#406
                      # DEBUG D#405 => D#407
                      # DEBUG __p => __x_92
                      # DEBUG this => D#404
                      # DEBUG D.53099 => D#405
                      # .MEM_43 = VDEF <.MEM_42>
                      operator delete (__x_92);
                      # DEBUG __x => __x_40
                      # DEBUG __x => __x_40
                      if (__x_40 == 0B)
                        goto <bb 47>;
                      else
                        goto <bb 30>;

                    }
                    bb_30 (preds = {bb_29 }, succs = {bb_29 })
                    {
                      <bb 30>:
                      goto <bb 29>;

                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

Pass statistics:
----------------

void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*] (struct _Rb_treeD.35049 * const thisD.35421, struct _Rb_tree_nodeD.35053 * __xD.35422)
{
  struct _Rb_tree_nodeD.35053 * __xD.53089;
  struct _Rb_tree_nodeD.35053 * __xD.53076;
  struct _Rb_tree_nodeD.35053 * __xD.53063;
  struct _Rb_tree_nodeD.35053 * __xD.53050;
  struct _Rb_tree_nodeD.35053 * __xD.53037;
  struct _Rb_tree_nodeD.35053 * __xD.53024;
  struct _Rb_tree_nodeD.35053 * __xD.53011;
  struct _Rb_tree_nodeD.35053 * __xD.52998;
  struct _Rb_tree_node_baseD.25994 * _39;

;;   basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __xD.35422 => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 48, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU)
  # .MEM_38 = PHI <.MEM_4(D)(2), .MEM_70(39)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_38>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # .MEM_69 = PHI <.MEM_4(D)(4), .MEM_10(38)>
  # DEBUG __xD.35422 => __x_68
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  __x_8 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_68 + 24B];
  # DEBUG D#129ptD.0 => __x_68
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.52997 => this_6(D)
  # DEBUG __xD.52998 => __x_8
  # DEBUG __xD.52998 => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 5, next block 39, flags: (NEW, REACHABLE)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU)
  # .MEM_34 = PHI <.MEM_69(5), .MEM_94(40)>
  # VUSE <.MEM_34>
  # PT = nonlocal escaped 
  __x_9 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_68 + 16B];
  # DEBUG D#130ptD.0 => __x_68
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.40572 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.48864 => __x_68
  # DEBUG thisD.48865 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_68
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.48867 => D#411ptD.0
  # DEBUG __pD.48866 => __x_68
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.48870 => __x_68
  # DEBUG __aD.48868 => D#408ptD.0
  # DEBUG __nD.48869 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.48873 => __x_68
  # DEBUG thisD.48871 => D#404ptD.0
  # DEBUG D.48872 => D#405ptD.0
  # .MEM_10 = VDEF <.MEM_34>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_68);
  # DEBUG __xD.35422 => __x_9
  # DEBUG __xD.35422 => __x_9
  if (__x_9 == 0B)
    goto <bb 39>;
  else
    goto <bb 38>;
;;    succ:       39 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 7, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_70 = PHI <.MEM_10(6)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU)

;;   basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 39, next block 8, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # .MEM_93 = PHI <.MEM_69(7), .MEM_50(37)>
  # DEBUG __xD.52998 => __x_72
  # VUSE <.MEM_93>
  # PT = nonlocal escaped 
  __x_12 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_72 + 24B];
  # DEBUG D#129ptD.0 => __x_72
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53010 => this_6(D)
  # DEBUG __xD.53011 => __x_12
  # DEBUG __xD.53011 => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 8, next block 40, flags: (NEW, REACHABLE)
;;    pred:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU)
  # .MEM_30 = PHI <.MEM_93(8), .MEM_91(41)>
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  __x_13 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_72 + 16B];
  # DEBUG D#130ptD.0 => __x_72
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.52999 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53001 => __x_72
  # DEBUG thisD.53000 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_72
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53003 => D#411ptD.0
  # DEBUG __pD.53002 => __x_72
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53006 => __x_72
  # DEBUG __aD.53004 => D#408ptD.0
  # DEBUG __nD.53005 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53009 => __x_72
  # DEBUG thisD.53007 => D#404ptD.0
  # DEBUG D.53008 => D#405ptD.0
  # .MEM_50 = VDEF <.MEM_30>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_72);
  # DEBUG __xD.52998 => __x_13
  # DEBUG __xD.52998 => __x_13
  if (__x_13 == 0B)
    goto <bb 40>;
  else
    goto <bb 37>;
;;    succ:       40 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 9, next block 10, flags: (NEW)
;;    pred:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_94 = PHI <.MEM_50(9)>
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU)

;;   basic block 10, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 40, next block 11, flags: (NEW)
;;    pred:       8 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # .MEM_90 = PHI <.MEM_93(10), .MEM_49(36)>
  # DEBUG __xD.53011 => __x_71
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  __x_15 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_71 + 24B];
  # DEBUG D#129ptD.0 => __x_71
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53023 => this_6(D)
  # DEBUG __xD.53024 => __x_15
  # DEBUG __xD.53024 => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 11, next block 41, flags: (NEW, REACHABLE)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU)
  # .MEM_26 = PHI <.MEM_90(11), .MEM_88(42)>
  # VUSE <.MEM_26>
  # PT = nonlocal escaped 
  __x_16 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_71 + 16B];
  # DEBUG D#130ptD.0 => __x_71
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53012 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53014 => __x_71
  # DEBUG thisD.53013 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_71
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53016 => D#411ptD.0
  # DEBUG __pD.53015 => __x_71
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53019 => __x_71
  # DEBUG __aD.53017 => D#408ptD.0
  # DEBUG __nD.53018 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53022 => __x_71
  # DEBUG thisD.53020 => D#404ptD.0
  # DEBUG D.53021 => D#405ptD.0
  # .MEM_49 = VDEF <.MEM_26>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_71);
  # DEBUG __xD.53011 => __x_16
  # DEBUG __xD.53011 => __x_16
  if (__x_16 == 0B)
    goto <bb 41>;
  else
    goto <bb 36>;
;;    succ:       41 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_49(12)>
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU)

;;   basic block 13, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 41, next block 14, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # .MEM_87 = PHI <.MEM_90(13), .MEM_48(35)>
  # DEBUG __xD.53024 => __x_77
  # VUSE <.MEM_87>
  # PT = nonlocal escaped 
  __x_19 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_77 + 24B];
  # DEBUG D#129ptD.0 => __x_77
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53036 => this_6(D)
  # DEBUG __xD.53037 => __x_19
  # DEBUG __xD.53037 => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 14, next block 42, flags: (NEW, REACHABLE)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU)
  # .MEM_25 = PHI <.MEM_87(14), .MEM_85(43)>
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  __x_20 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_77 + 16B];
  # DEBUG D#130ptD.0 => __x_77
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53025 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53027 => __x_77
  # DEBUG thisD.53026 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_77
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53029 => D#411ptD.0
  # DEBUG __pD.53028 => __x_77
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53032 => __x_77
  # DEBUG __aD.53030 => D#408ptD.0
  # DEBUG __nD.53031 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53035 => __x_77
  # DEBUG thisD.53033 => D#404ptD.0
  # DEBUG D.53034 => D#405ptD.0
  # .MEM_48 = VDEF <.MEM_25>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_77);
  # DEBUG __xD.53024 => __x_20
  # DEBUG __xD.53024 => __x_20
  if (__x_20 == 0B)
    goto <bb 42>;
  else
    goto <bb 35>;
;;    succ:       42 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 15, next block 16, flags: (NEW)
;;    pred:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_88 = PHI <.MEM_48(15)>
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU)

;;   basic block 16, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 42, next block 17, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # .MEM_84 = PHI <.MEM_87(16), .MEM_47(34)>
  # DEBUG __xD.53037 => __x_80
  # VUSE <.MEM_84>
  # PT = nonlocal escaped 
  __x_23 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_80 + 24B];
  # DEBUG D#129ptD.0 => __x_80
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53049 => this_6(D)
  # DEBUG __xD.53050 => __x_23
  # DEBUG __xD.53050 => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 17, next block 43, flags: (NEW, REACHABLE)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU)
  # .MEM_21 = PHI <.MEM_84(17), .MEM_82(44)>
  # VUSE <.MEM_21>
  # PT = nonlocal escaped 
  __x_24 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_80 + 16B];
  # DEBUG D#130ptD.0 => __x_80
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53038 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53040 => __x_80
  # DEBUG thisD.53039 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_80
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53042 => D#411ptD.0
  # DEBUG __pD.53041 => __x_80
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53045 => __x_80
  # DEBUG __aD.53043 => D#408ptD.0
  # DEBUG __nD.53044 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53048 => __x_80
  # DEBUG thisD.53046 => D#404ptD.0
  # DEBUG D.53047 => D#405ptD.0
  # .MEM_47 = VDEF <.MEM_21>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_80);
  # DEBUG __xD.53037 => __x_24
  # DEBUG __xD.53037 => __x_24
  if (__x_24 == 0B)
    goto <bb 43>;
  else
    goto <bb 34>;
;;    succ:       43 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_85 = PHI <.MEM_47(18)>
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU)

;;   basic block 19, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 43, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 6, count 0, freq 9, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_81 = PHI <.MEM_84(19), .MEM_46(33)>
  # PT = nonlocal escaped 
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __xD.53050 => __x_83
  # VUSE <.MEM_81>
  # PT = nonlocal escaped 
  __x_27 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_83 + 24B];
  # DEBUG D#129ptD.0 => __x_83
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53062 => this_6(D)
  # DEBUG __xD.53063 => __x_27
  # DEBUG __xD.53063 => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 6, count 0, freq 9, maybe hot
;;    prev block 20, next block 44, flags: (NEW, REACHABLE)
;;    pred:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU)
  # .MEM_17 = PHI <.MEM_81(20), .MEM_79(45)>
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  __x_28 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_83 + 16B];
  # DEBUG D#130ptD.0 => __x_83
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53051 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53053 => __x_83
  # DEBUG thisD.53052 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_83
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53055 => D#411ptD.0
  # DEBUG __pD.53054 => __x_83
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53058 => __x_83
  # DEBUG __aD.53056 => D#408ptD.0
  # DEBUG __nD.53057 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53061 => __x_83
  # DEBUG thisD.53059 => D#404ptD.0
  # DEBUG D.53060 => D#405ptD.0
  # .MEM_46 = VDEF <.MEM_17>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_83);
  # DEBUG __xD.53050 => __x_28
  # DEBUG __xD.53050 => __x_28
  if (__x_28 == 0B)
    goto <bb 44>;
  else
    goto <bb 33>;
;;    succ:       44 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 21, next block 22, flags: (NEW)
;;    pred:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_82 = PHI <.MEM_46(21)>
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU)

;;   basic block 22, loop depth 6, count 0, freq 8, maybe hot
;;    prev block 44, next block 23, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 7, count 0, freq 89, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_78 = PHI <.MEM_81(22), .MEM_45(32)>
  # PT = nonlocal escaped 
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __xD.53063 => __x_86
  # VUSE <.MEM_78>
  # PT = nonlocal escaped 
  __x_31 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_86 + 24B];
  # DEBUG D#129ptD.0 => __x_86
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53075 => this_6(D)
  # DEBUG __xD.53076 => __x_31
  # DEBUG __xD.53076 => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 7, count 0, freq 89, maybe hot
;;    prev block 23, next block 45, flags: (NEW, REACHABLE)
;;    pred:       23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU)
  # .MEM_14 = PHI <.MEM_78(23), .MEM_76(46)>
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  __x_32 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_86 + 16B];
  # DEBUG D#130ptD.0 => __x_86
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53064 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53066 => __x_86
  # DEBUG thisD.53065 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_86
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53068 => D#411ptD.0
  # DEBUG __pD.53067 => __x_86
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53071 => __x_86
  # DEBUG __aD.53069 => D#408ptD.0
  # DEBUG __nD.53070 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53074 => __x_86
  # DEBUG thisD.53072 => D#404ptD.0
  # DEBUG D.53073 => D#405ptD.0
  # .MEM_45 = VDEF <.MEM_14>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_86);
  # DEBUG __xD.53063 => __x_32
  # DEBUG __xD.53063 => __x_32
  if (__x_32 == 0B)
    goto <bb 45>;
  else
    goto <bb 32>;
;;    succ:       45 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 6, count 0, freq 8, maybe hot
;;    prev block 24, next block 25, flags: (NEW)
;;    pred:       24 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_79 = PHI <.MEM_45(24)>
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU)

;;   basic block 25, loop depth 7, count 0, freq 81, maybe hot
;;    prev block 45, next block 26, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 8, count 0, freq 900, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_78(25), .MEM_44(31)>
  # PT = nonlocal escaped 
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __xD.53076 => __x_89
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  __x_35 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_89 + 24B];
  # DEBUG D#129ptD.0 => __x_89
  # DEBUG __xD.48878 => D#129ptD.0
  # DEBUG thisD.53088 => this_6(D)
  # DEBUG __xD.53089 => __x_35
  # DEBUG __xD.53089 => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 8, count 0, freq 900, maybe hot
;;    prev block 26, next block 46, flags: (NEW, REACHABLE)
;;    pred:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU)
  # .MEM_22 = PHI <.MEM_75(26), .MEM_74(47)>
  # VUSE <.MEM_22>
  # PT = nonlocal escaped 
  __x_36 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_89 + 16B];
  # DEBUG D#130ptD.0 => __x_89
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53077 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53079 => __x_89
  # DEBUG thisD.53078 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_89
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53081 => D#411ptD.0
  # DEBUG __pD.53080 => __x_89
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53084 => __x_89
  # DEBUG __aD.53082 => D#408ptD.0
  # DEBUG __nD.53083 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53087 => __x_89
  # DEBUG thisD.53085 => D#404ptD.0
  # DEBUG D.53086 => D#405ptD.0
  # .MEM_44 = VDEF <.MEM_22>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_89);
  # DEBUG __xD.53076 => __x_36
  # DEBUG __xD.53076 => __x_36
  if (__x_36 == 0B)
    goto <bb 46>;
  else
    goto <bb 31>;
;;    succ:       46 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 7, count 0, freq 81, maybe hot
;;    prev block 27, next block 28, flags: (NEW)
;;    pred:       27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_76 = PHI <.MEM_44(27)>
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU)

;;   basic block 28, loop depth 8, count 0, freq 819, maybe hot
;;    prev block 46, next block 29, flags: (NEW)
;;    pred:       26 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 9, count 0, freq 9100, maybe hot
;;    prev block 28, next block 47, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_73 = PHI <.MEM_75(28), .MEM_43(30)>
  # PT = nonlocal escaped 
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __xD.53089 => __x_92
  # VUSE <.MEM_73>
  # PT = nonlocal escaped 
  _39 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_92 + 24B];
  # DEBUG D#129ptD.0 => __x_92
  # DEBUG __xD.48878 => D#129ptD.0
  # .MEM_42 = VDEF <.MEM_73>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiED.35420 (this_6(D), _39);
  # VUSE <.MEM_42>
  # PT = nonlocal escaped 
  __x_40 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_92 + 16B];
  # DEBUG D#130ptD.0 => __x_92
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53090 => NULL
  # DEBUG D#413ptD.0 => this_6(D)
  # DEBUG __pD.53092 => __x_92
  # DEBUG thisD.53091 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_92
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53094 => D#411ptD.0
  # DEBUG __pD.53093 => __x_92
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53097 => __x_92
  # DEBUG __aD.53095 => D#408ptD.0
  # DEBUG __nD.53096 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53100 => __x_92
  # DEBUG thisD.53098 => D#404ptD.0
  # DEBUG D.53099 => D#405ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (__x_92);
  # DEBUG __xD.53089 => __x_40
  # DEBUG __xD.53089 => __x_40
  if (__x_40 == 0B)
    goto <bb 47>;
  else
    goto <bb 30>;
;;    succ:       47 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 8, count 0, freq 819, maybe hot
;;    prev block 29, next block 30, flags: (NEW)
;;    pred:       29 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_74 = PHI <.MEM_43(29)>
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 9, count 0, freq 8281, maybe hot
;;    prev block 47, next block 31, flags: (NEW)
;;    pred:       29 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 31, loop depth 8, count 0, freq 819, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       27 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 32, loop depth 7, count 0, freq 81, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       24 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 33, loop depth 6, count 0, freq 8, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       21 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 34, loop depth 5, count 0, freq 1, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       18 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 35, loop depth 4, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 36, loop depth 3, count 0, freq 0, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 37, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       9 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 37, next block 1, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



;; Function UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>) (_ZN31UniformBackgroundTrafficPatternC2EiSt6vectorIiSaIiEE, funcdef_no=1812, decl_uid=35909, cgraph_uid=482, symbol_order=483)


Pass statistics:
----------------

UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>) (struct UniformBackgroundTrafficPatternD.35035 * const thisD.35910, intD.9 nodesD.35911, struct vectorD.33797 & restrict excluded_nodesD.35912)
Eh tree:
   1 cleanup land:{1,<L8>}
     2 cleanup land:{3,<L7>}
{
  struct _Rb_tree_node_baseD.25994 * SR.991D.53184;
  struct _Rb_tree_node_baseD.25994 * SR.990D.53183;
  struct _Rb_tree_node_baseD.25994 * __res$8D.53182;
  struct _Rb_tree_node_baseD.25994 * __resD.53181;
  boolD.2757 __insert_leftD.53156;
  struct iteratorD.35364 D.53177;
  struct pairD.26447 D.53150;
  boolD.2757 __compD.53129;
  struct _Rb_tree_node_baseD.25994 * const __j$_M_nodeD.53147;
  struct pairD.35485 D.53123;
  struct iteratorD.35364 D.53122;
  struct pairD.26447 __resD.53107;
  struct _Rb_tree_node_baseD.25994 * __res$firstD.53121;
  struct _Rb_tree_node_baseD.25994 * __res$secondD.53120;
  struct _Rb_tree_node_baseD.25994 * SR.705D.53119;
  struct pairD.35485 __pD.50507;
  const intD.9 nodeD.38959;
  size_tD.2853 iD.38957;
  static const charD.10 _ZZN31UniformBackgroundTrafficPatternC4EiSt6vectorIiSaIiEEE19__PRETTY_FUNCTION__D.38841[88] = "UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>)";
  static const charD.10 _ZZN31UniformBackgroundTrafficPatternC4EiSt6vectorIiSaIiEEE19__PRETTY_FUNCTION__D.38841[88] = "UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>)";
  long intD.12 _7;
  intD.9 node.101_10;
  intD.9 _12;
  const intD.9 prephitmp_15;
  long intD.12 _21;
  long intD.12 _22;
  long intD.12 _23;
  size_typeD.34516 _24;
  long unsigned intD.14 _25;
  intD.9 & _26;
  struct _Rb_tree_node_baseD.25994 * _28;
  const intD.9 pretmp_33;
  struct _Rb_tree_node_baseD.25994 * pretmp_41;
  struct _Rb_tree_node_baseD.25994 * prephitmp_42;
  intD.9 * const prephitmp_43;
  intD.9 * const prephitmp_45;
  const intD.9 _56;
  struct _Rb_tree_node_baseD.25994 * _58;
  struct _Rb_tree_node_baseD.25994 * _59;
  struct _Rb_tree_node_baseD.25994 * _61;
  intD.9 node.101_66;
  struct _Rb_tree_node_baseD.25994 * const _67;
  intD.9 * const prephitmp_70;
  const intD.9 _72;
  struct _Rb_tree_nodeD.35053 * _73;
  long intD.12 _74;
  intD.9 _78;
  long unsigned intD.14 _79;
  long unsigned intD.14 _80;
  struct _Rep_typeD.35047 * pretmp_87;
  long intD.12 _95;
  long intD.12 _96;
  intD.9 * const _100;
  long intD.12 _101;
  intD.9 * const _102;
  intD.9 node.101_107;
  intD.9 * const pretmp_108;
  const intD.9 _110;
  intD.9 * const prephitmp_113;
  intD.9 * const pretmp_114;

;;   basic block 2, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#534ptD.0 => &this_3(D)->D.35913
  # DEBUG thisD.50492 => D#534ptD.0
  # DEBUG nodesD.50493 => nodes_5(D)
  # DEBUG D#84ptD.0 => &D#534ptD.0->D.35001
  # DEBUG thisD.50495 => D#84ptD.0
  # DEBUG nodesD.50494 => nodes_5(D)
  # .MEM_17 = VDEF <.MEM_4(D)>
  MEM[(struct TrafficPatternD.33853 *)this_3(D)]._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_16 = VDEF <.MEM_17>
  MEM[(struct TrafficPatternD.33853 *)this_3(D)]._nodesD.33855 = nodes_5(D);
  if (nodes_5(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#84ptD.0
  # DEBUG D#63ptD.0 => nodes_5(D)
  # .MEM_49 = VDEF <.MEM_16>
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_6 = VDEF <.MEM_16>
  this_3(D)->D.35913.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV31UniformBackgroundTrafficPatternD.35916 + 16B];
  # DEBUG D#533ptD.0 => &this_3(D)->_excludedD.35876
  # DEBUG thisD.50488 => D#533ptD.0
  # DEBUG D#310ptD.0 => &D#533ptD.0->_M_tD.35050
  # DEBUG thisD.50489 => D#310ptD.0
  # DEBUG D#309ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#310ptD.0]._M_implD.35127
  # DEBUG thisD.50490 => D#309ptD.0
  # DEBUG thisD.47259 => D#309ptD.0
  # DEBUG thisD.47256 => D#309ptD.0
  # .MEM_30 = VDEF <.MEM_6>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293._M_colorD.25998 = 0;
  # .MEM_31 = VDEF <.MEM_30>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293._M_parentD.25999 = 0B;
  # .MEM_34 = VDEF <.MEM_31>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_node_countD.35294 = 0;
  # DEBUG thisD.50491 => D#309ptD.0
  # PT = nonlocal 
  __j$_M_node_9 = &MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293;
  # .MEM_35 = VDEF <.MEM_34>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293._M_leftD.26000 = __j$_M_node_9;
  # .MEM_36 = VDEF <.MEM_35>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293._M_rightD.26001 = __j$_M_node_9;
  # DEBUG iD.38957 => 0
  # DEBUG iD.38957 => 0
  # VUSE <.MEM_36>
  # PT = nonlocal escaped 
  _102 = MEM[(intD.9 * *)excluded_nodes_8(D) clique 1 base 1];
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # VUSE <.MEM_36>
  # PT = nonlocal escaped 
  _100 = MEM[(intD.9 * *)excluded_nodes_8(D) + 8B clique 1 base 1];
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # DEBUG thisD.50499 => D#99ptD.0
  # DEBUG thisD.50498 => D#99ptD.0
  _101 = (long intD.12) _100;
  _74 = (long intD.12) _102;
  _95 = _101 - _74;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _96 = _95 /[ex] 4;
  if (_96 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [2.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [2.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_115 = PHI <.MEM_36(4), .MEM_38(29)>
  # VUSE <.MEM_115>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 6, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => excluded_nodes_8(D)
  # DEBUG __nD.50502 => 0
  # DEBUG thisD.50503 => D#100ptD.0
  # VUSE <.MEM_36>
  node.101_66 = *_102;
  # DEBUG nodeD.38959 => node.101_66
  if (node.101_66 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_36(6), .MEM_36(8), .MEM_38(9), .MEM_38(10)>
  # .MEM_18 = VDEF <.MEM_98>
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  __assert_failD.29068 ("(node >= 0) && (node < _nodes)", "traffic.cpp", 397, &_ZZN31UniformBackgroundTrafficPatternC4EiSt6vectorIiSaIiEEE19__PRETTY_FUNCTION__D.38841);
;;    succ:      

;;   basic block 8, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  if (nodes_5(D) <= node.101_66)
    goto <bb 7>;
  else
    goto <bb 12>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       29 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => excluded_nodes_8(D)
  # DEBUG __nD.50502 => i_14
  # DEBUG thisD.50503 => D#100ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = i_14 * 4;
  # PT = nonlocal escaped 
  _26 = prephitmp_113 + _25;
  # VUSE <.MEM_38>
  node.101_10 = *_26;
  # DEBUG nodeD.38959 => node.101_10
  if (node.101_10 < 0)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 879, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_38>
  _12 = this_3(D)->D.35913.D.35001._nodesD.33855;
  if (node.101_10 >= _12)
    goto <bb 7>;
  else
    goto <bb 11>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 879, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_38>
  pretmp_41 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_3(D) + 32B];
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # i_103 = PHI <0(12), i_14(11)>
  # .MEM_11 = PHI <.MEM_36(12), .MEM_38(11)>
  # node.101_107 = PHI <node.101_66(12), node.101_10(11)>
  # PT = nonlocal escaped 
  # prephitmp_42 = PHI <0B(12), pretmp_41(11)>
  # prephitmp_43 = PHI <_100(12), prephitmp_70(11)>
  # prephitmp_45 = PHI <_102(12), prephitmp_113(11)>
  # DEBUG iD.38957 => i_103
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # DEBUG thisD.50499 => D#99ptD.0
  # DEBUG thisD.50498 => D#99ptD.0
  # DEBUG D#100ptD.0 => excluded_nodes_8(D)
  # DEBUG __nD.50502 => i_103
  # DEBUG thisD.50503 => D#100ptD.0
  # DEBUG nodeD.38959 => node.101_107
  # DEBUG D#527ptD.0 => &this_3(D)->_excludedD.35876
  # DEBUG thisD.50505 => D#527ptD.0
  # DEBUG __xD.50506 => &nodeD.38959
  # DEBUG D#681ptD.0 => &MEM[(struct setD.35038 *)this_3(D) + 16B]._M_tD.35050
  # DEBUG thisD.53104 => D#681ptD.0
  # DEBUG __vD.53105 => &nodeD.38959
  # DEBUG __xD.50457 => &nodeD.38959
  # DEBUG thisD.50458 => D#131ptD.0
  # DEBUG thisD.53124 => D#681ptD.0
  # DEBUG __kD.53125 => &nodeD.38959
  # DEBUG D#680ptD.0 => MEM[(struct _Rb_tree_node_baseD.25994 * *)this_3(D) + 32B]
  # DEBUG D#111ptD.0 => D#681ptD.0
  # DEBUG thisD.48982 => D#111ptD.0
  # DEBUG __xD.53127 => NULL
  # DEBUG thisD.53146 => D#681ptD.0
  # DEBUG __yD.53128 => NULL
  # DEBUG __compD.53129 => 1
  # DEBUG __compD.53129 => 1
  # DEBUG __yD.53128 => __j$_M_node_9
  # DEBUG __xD.53127 => D#680ptD.0
  if (prephitmp_42 == 0B)
    goto <bb 21>;
  else
    goto <bb 16>;
;;    succ:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _67 = PHI <_58(18), _59(19)>
  # DEBUG __compD.53129 => _56 > node.101_107
  # DEBUG __yD.53128 => __j$_M_node_106
  # DEBUG __xD.53127 => _67
  if (_67 == 0B)
    goto <bb 20>;
  else
    goto <bb 15>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_106 = PHI <prephitmp_42(16), _67(15)>
  # DEBUG __compD.53129 => 1
  # DEBUG __xD.53127 => __j$_M_node_106
  # DEBUG __yD.53128 => __j$_M_node_106
  # DEBUG __xD.48990 => __j$_M_node_106
  # DEBUG __xD.48991 => __j$_M_node_106
  # DEBUG thisD.48992 => __j$_M_node_106
  # DEBUG D#421ptD.0 => &MEM[(const struct _Rb_tree_nodeD.35053 *)__j$_M_node_106]._M_value_fieldD.40564
  # DEBUG __rD.48911 => D#421ptD.0
  # DEBUG __xD.48917 => D#421ptD.0
  # DEBUG thisD.48918 => D#131ptD.0
  # DEBUG D#425ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#681ptD.0]._M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#425ptD.0
  # DEBUG D#134ptD.0 => &nodeD.38959
  # VUSE <.MEM_11>
  _56 = MEM[(const intD.9 &)__j$_M_node_106 + 32];
  # DEBUG D#135ptD.0 => D#421ptD.0
  # DEBUG thisD.53143 => D#133ptD.0
  # DEBUG __xD.53144 => D#134ptD.0
  # DEBUG __yD.53145 => D#135ptD.0
  # DEBUG __compD.53129 => NULL
  if (_56 > node.101_107)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 2, count 0, freq 4550, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _58 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__j$_M_node_106 + 16B];
  # DEBUG D#130ptD.0 => __j$_M_node_106
  # DEBUG __xD.48995 => D#130ptD.0
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 2, count 0, freq 4550, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _59 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__j$_M_node_106 + 24B];
  # DEBUG D#129ptD.0 => __j$_M_node_106
  # DEBUG __xD.48998 => D#129ptD.0
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _110 = PHI <_56(14)>
  # PT = nonlocal escaped 
  # __j$_M_node_97 = PHI <__j$_M_node_106(14)>
  # DEBUG thisD.53142 => &__jD.53130
  # DEBUG __xD.53141 => __j$_M_node_97
  # DEBUG __j$_M_nodeD.53147 => __j$_M_node_97
  if (_110 > node.101_107)
    goto <bb 21>;
  else
    goto <bb 23>;
;;    succ:       21 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [55.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_109 = PHI <__j$_M_node_97(20), __j$_M_node_9(13)>
  # DEBUG thisD.53142 => &__jD.53130
  # DEBUG __xD.53141 => __j$_M_node_109
  # DEBUG __j$_M_nodeD.53147 => __j$_M_node_109
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _61 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_3(D) + 40B];
  # DEBUG D#205ptD.0 => D#681ptD.0
  # DEBUG thisD.49006 => D#205ptD.0
  # DEBUG thisD.46157 => NULL
  # DEBUG __xD.46156 => _61
  # DEBUG thisD.49002 => &__jD.53130
  # DEBUG __xD.49003 => NULL
  if (_61 == __j$_M_node_109)
    goto <bb 24>;
  else
    goto <bb 22>;
;;    succ:       24 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 404, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53137 => &__jD.53130
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  __j$_M_node_63 = _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_baseD.26043 (__j$_M_node_109);
  # DEBUG __j$_M_nodeD.53147 => __j$_M_node_63
  # VUSE <.MEM_11>
  pretmp_33 = MEM[(const intD.9 &)__j$_M_node_63 + 32];
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 854, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       20 [55.0%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_68 = PHI <__j$_M_node_97(20), __j$_M_node_109(22)>
  # prephitmp_15 = PHI <_110(20), pretmp_33(22)>
  # DEBUG __j$_M_nodeD.53147 => NULL
  # DEBUG __xD.49020 => NULL
  # DEBUG __xD.49021 => NULL
  # DEBUG thisD.49022 => NULL
  # DEBUG D#422ptD.0 => NULL
  # DEBUG __rD.48911 => D#422ptD.0
  # DEBUG __xD.48972 => D#422ptD.0
  # DEBUG thisD.48973 => D#131ptD.0
  # DEBUG D#424ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#681ptD.0]._M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#424ptD.0
  # DEBUG D#134ptD.0 => D#422ptD.0
  # DEBUG D#135ptD.0 => &nodeD.38959
  # DEBUG thisD.49018 => D#133ptD.0
  # DEBUG __xD.49017 => D#134ptD.0
  # DEBUG __yD.49016 => D#135ptD.0
  if (prephitmp_15 < node.101_107)
    goto <bb 24>;
  else
    goto <bb 29>;
;;    succ:       24 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 379, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       21 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __res$8_89 = PHI <_61(21), __j$_M_node_68(23)>
  # DEBUG D#423ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.53147 => D#423ptD.0
  # DEBUG __resD.53181 => 0B
  # DEBUG __res$8D.53182 => __res$8_89
  # DEBUG __res$firstD.53121 => 0B
  # DEBUG __res$secondD.53120 => __res$8_89
  if (__res$8_89 != 0B)
    goto <bb 25>;
  else
    goto <bb 29>;
;;    succ:       25 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 81, maybe hot
;;   Invalid sum of incoming frequencies 379, should be 81
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53118 => &__anD.53113
  # DEBUG __tD.53117 => D#681ptD.0
  # DEBUG __an$_M_tD.50472 => D#681ptD.0
  # DEBUG D#522ptD.0 => &__anD.53113
  # DEBUG thisD.53151 => D#681ptD.0
  # DEBUG __xD.53152 => 0B
  # DEBUG __pD.53153 => __res$8_89
  # DEBUG __vD.53154 => &nodeD.38959
  # DEBUG __node_genD.53155 => D#522ptD.0
  # DEBUG D#521ptD.0 => D#522ptD.0
  # DEBUG thisD.53176 => D#681ptD.0
  if (__j$_M_node_9 == __res$8_89)
    goto <bb 27>;
  else
    goto <bb 26>;
;;    succ:       27 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 68, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.50439 => __res$8_89
  # DEBUG __xD.50440 => __res$8_89
  # DEBUG thisD.50441 => __res$8_89
  # DEBUG D#519ptD.0 => &MEM[(const struct _Rb_tree_nodeD.35053 *)__res$8_89]._M_value_fieldD.40564
  # DEBUG __rD.48911 => D#519ptD.0
  # DEBUG __xD.48972 => D#519ptD.0
  # DEBUG thisD.48973 => D#131ptD.0
  # DEBUG __xD.50379 => &nodeD.38959
  # DEBUG thisD.50380 => D#131ptD.0
  # DEBUG D#520ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#681ptD.0]._M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#520ptD.0
  # VUSE <.MEM_11>
  _72 = MEM[(const intD.9 &)__res$8_89 + 32];
  # DEBUG D#135ptD.0 => D#519ptD.0
  # DEBUG thisD.50442 => D#133ptD.0
  # DEBUG __xD.50443 => D#134ptD.0
  # DEBUG __yD.50444 => D#135ptD.0
  __insert_left_55 = _72 > node.101_107;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 537, maybe hot
;;   Invalid sum of incoming frequencies 80, should be 537
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # __insert_left_77 = PHI <__insert_left_55(26), 1(25)>
  # DEBUG __insert_leftD.53156 => __insert_left_77
  # DEBUG D#518ptD.0 => D#521ptD.0
  # DEBUG __argD.53159 => &nodeD.38959
  # DEBUG thisD.53158 => D#518ptD.0
  # DEBUG D#517ptD.0 => D#518ptD.0
  # DEBUG D#516ptD.0 => D#517ptD.0->_M_tD.40625
  # DEBUG D#515ptD.0 => D#516ptD.0
  # DEBUG __xD.53161 => &nodeD.38959
  # DEBUG thisD.53160 => D#515ptD.0
  # DEBUG D#514ptD.0 => D#515ptD.0
  # DEBUG D#513ptD.0 => D#515ptD.0
  # DEBUG D#512ptD.0 => D#513ptD.0
  # DEBUG thisD.53163 => D#512ptD.0
  # DEBUG D#511ptD.0 => D#512ptD.0
  # DEBUG thisD.50282 => D#511ptD.0
  # DEBUG __nD.53165 => 1
  # DEBUG __aD.53164 => D#510ptD.0
  # DEBUG D#509ptD.0 => D#510ptD.0
  # DEBUG D#507ptD.0 => D#509ptD.0
  # DEBUG D#508ptD.0 => 0B
  # DEBUG __nD.53168 => 1
  # DEBUG thisD.53166 => D#507ptD.0
  # DEBUG D.53167 => D#508ptD.0
  # DEBUG D#506ptD.0 => D#507ptD.0
  # DEBUG D#505ptD.0 => D#506ptD.0
  # DEBUG thisD.50240 => D#505ptD.0
  [LP 3] # .MEM_91 = VDEF <.MEM_11>
  # PT = { D.53186 } (escaped heap)
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  _73 = _ZnwmD.2764 (40);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 (EH,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 537, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __tmpD.53162 => _73
  # DEBUG D#504ptD.0 => D#514ptD.0
  # DEBUG __nodeD.53171 => _73
  # DEBUG __xD.53170 => &nodeD.38959
  # DEBUG thisD.53169 => D#504ptD.0
  # DEBUG D#503ptD.0 => D#504ptD.0
  # DEBUG thisD.53172 => _73
  # DEBUG D#679ptD.0 => &_73->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#679ptD.0
  # DEBUG D#397ptD.0 => D#503ptD.0
  # DEBUG thisD.50214 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG __pD.53175 => D#679ptD.0
  # DEBUG __valD.53174 => &nodeD.38959
  # DEBUG thisD.53173 => D#502ptD.0
  # DEBUG D#33ptD.0 => 4
  # DEBUG __pD.50197 => D#679ptD.0
  # DEBUG D.50198 => D#33ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(intD.9 *)_73 + 32B] = node.101_107;
  # DEBUG thisD.50227 => NULL
  # DEBUG thisD.50210 => NULL
  # DEBUG __zD.53157 => _73
  # RANGE [0, 1] NONZERO 1
  _78 = (intD.9) __insert_left_77;
  # .MEM_93 = VDEF <.MEM_92>
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_D.26220 (_78, _73, __res$8_89, __j$_M_node_9);
  # VUSE <.MEM_93>
  _79 = MEM[(struct _Rb_treeD.35049 *)this_3(D) + 16B]._M_implD.35127._M_node_countD.35294;
  # RANGE [0, 18446744073709551615]
  _80 = _79 + 1;
  # .MEM_94 = VDEF <.MEM_93>
  MEM[(struct _Rb_treeD.35049 *)this_3(D) + 16B]._M_implD.35127._M_node_countD.35294 = _80;
  # DEBUG thisD.50438 => NULL
  # DEBUG __xD.50437 => _73
  # DEBUG thisD.53116 => NULL
  # DEBUG __aD.53115 => &D.53122
  # DEBUG __bD.53114 => NULL
  # .MEM_99 = VDEF <.MEM_94>
  D.53122 ={v} {CLOBBER};
  # VUSE <.MEM_99>
  pretmp_114 = MEM[(intD.9 * *)excluded_nodes_8(D)];
  # VUSE <.MEM_99>
  pretmp_108 = MEM[(intD.9 * *)excluded_nodes_8(D) + 8B];
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 1058, should be 900
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 (FALSE_VALUE,EXECUTABLE)
;;                23 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_83 = PHI <.MEM_99(28), .MEM_11(24), .MEM_11(23)>
  # PT = nonlocal escaped 
  # prephitmp_113 = PHI <pretmp_114(28), prephitmp_45(24), prephitmp_45(23)>
  # PT = nonlocal escaped 
  # prephitmp_70 = PHI <pretmp_108(28), prephitmp_43(24), prephitmp_43(23)>
  # DEBUG D#525ptD.0 => {CLOBBER}
  # DEBUG __res$firstD.53121 => D#525ptD.0
  # DEBUG D#526ptD.0 => {CLOBBER}
  # DEBUG __res$secondD.53120 => D#526ptD.0
  # DEBUG thisD.50509 => NULL
  # DEBUG __itD.50508 => &__pD.50507.firstD.40053
  # DEBUG D#532ptD.0 => MEM[(const struct iteratorD.38850 &)&__pD.50507 clique 1 base 0]._M_nodeD.40088
  # DEBUG thisD.50512 => NULL
  # DEBUG __aD.50511 => NULL
  # DEBUG __bD.50510 => &__pD.50507.secondD.40100
  # DEBUG D#531ptD.0 => MEM[(const boolD.2757 &)&__pD.50507 + 8 clique 1 base 0]
  # DEBUG D#530ptD.0 => VIEW_CONVERT_EXPR<unsigned char>(D#531ptD.0)
  # .MEM_38 = VDEF <.MEM_83>
  __pD.50507 ={v} {CLOBBER};
  # DEBUG D.50521 => D#532ptD.0
  # DEBUG D.50522 => D#530ptD.0
  # DEBUG D#678ptD.0 => {CLOBBER}
  # DEBUG nodeD.38959 => D#678ptD.0
  # RANGE [0, 18446744073709551615]
  i_14 = i_103 + 1;
  # DEBUG iD.38957 => i_14
  # DEBUG iD.38957 => i_14
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # DEBUG thisD.50499 => D#99ptD.0
  # DEBUG thisD.50498 => D#99ptD.0
  _7 = (long intD.12) prephitmp_70;
  _21 = (long intD.12) prephitmp_113;
  _22 = _7 - _21;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _23 = _22 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _24 = (size_typeD.34516) _23;
  if (i_14 < _24)
    goto <bb 9>;
  else
    goto <bb 5>;
;;    succ:       9 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       27 (EH,EXECUTABLE)
<L7>: [LP 3]
  # DEBUG D#677ptD.0 => {CLOBBER}
  # DEBUG nodeD.38959 => D#677ptD.0
  # DEBUG D#529ptD.0 => &this_3(D)->_excludedD.35876
  # DEBUG thisD.50514 => D#529ptD.0
  # DEBUG thisD.50515 => D#681ptD.0
  # VUSE <.MEM_91>
  # PT = nonlocal escaped 
  _28 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_3(D) + 32B];
  # DEBUG D#111ptD.0 => D#681ptD.0
  # DEBUG thisD.48885 => D#111ptD.0
  # PT = nonlocal 
  pretmp_87 = &MEM[(struct setD.35038 *)this_3(D) + 16B]._M_tD.35050;
  # .MEM_39 = VDEF <.MEM_91>
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiED.35420 (pretmp_87, _28);
  # DEBUG D#414ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#681ptD.0]._M_implD.35127
  # DEBUG thisD.50516 => D#414ptD.0
  # DEBUG thisD.50517 => D#414ptD.0
  # DEBUG thisD.50518 => D#414ptD.0
  # .MEM_44 = VDEF <.MEM_39>
  MEM[(struct  &)this_3(D) + 16] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       31 (EH,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 30, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 (EH,EXECUTABLE)
<L8>: [LP 1]
  # DEBUG D#528ptD.0 => &this_3(D)->D.35913
  # DEBUG thisD.50519 => D#528ptD.0
  # DEBUG D#85ptD.0 => &D#528ptD.0->D.35001
  # DEBUG thisD.50520 => D#85ptD.0
  # .MEM_48 = VDEF <.MEM_44>
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


Creating dr for MEM[(struct TrafficPattern *)this_3(D)]._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct TrafficPattern *)this_3(D)]
	Access function 0: 0
Creating dr for MEM[(struct TrafficPattern *)this_3(D)]._nodes
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct TrafficPattern *)this_3(D)]
	Access function 0: 64
Creating dr for this_3(D)->D.35913.D.35001._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_color
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]
	Access function 0: 0
	Access function 1: 64
Creating dr for MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_parent
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]
	Access function 0: 64
	Access function 1: 64
Creating dr for MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_node_count
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]
	Access function 0: 320
Creating dr for MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_left
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]
	Access function 0: 128
	Access function 1: 64
Creating dr for MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_right
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]
	Access function 0: 192
	Access function 1: 64
Creating dr for MEM[(int * *)excluded_nodes_8(D)]
analyze_innermost: success.
	base_address: excluded_nodes_8(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)excluded_nodes_8(D)]
Creating dr for MEM[(int * *)excluded_nodes_8(D) + 8B]
analyze_innermost: success.
	base_address: excluded_nodes_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)excluded_nodes_8(D) + 8B]
Creating dr for *_102
analyze_innermost: success.
	base_address: _102
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_102
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(const int &)__j$_M_node_106 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_106 + 32]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B]
Creating dr for *_26
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_26
Creating dr for *_26
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_26
Creating dr for this_3(D)->D.35913.D.35001._nodes
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->D.35913.D.35001._nodes
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B]
Creating dr for MEM[(const int &)__res$8_89 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__res$8_89 + 32]
Creating dr for MEM[(const int &)__res$8_89 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__res$8_89 + 32]
Creating dr for MEM[(int *)_73 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int *)_73 + 32B]
Creating dr for MEM[(int *)_73 + 32B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int *)_73 + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_3(D) + 40B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_3(D) + 40B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_3(D) + 40B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_3(D) + 40B]
Creating dr for MEM[(const int &)__j$_M_node_63 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_63 + 32]
Creating dr for MEM[(const int &)__j$_M_node_63 + 32]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__j$_M_node_63 + 32]
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:17)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:34, LOOPS:2, CONDITIONS:16, STMTS:311)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#534 => &this_3(D)->D.35913
    # DEBUG this => D#534
    # DEBUG nodes => nodes_5(D)
    # DEBUG D#84 => &D#534->D.35001
    # DEBUG this => D#84
    # DEBUG nodes => nodes_5(D)
    # .MEM_17 = VDEF <.MEM_4(D)>
    MEM[(struct TrafficPattern *)this_3(D)]._vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
    # .MEM_16 = VDEF <.MEM_17>
    MEM[(struct TrafficPattern *)this_3(D)]._nodes = nodes_5(D);
    if (nodes_5(D) <= 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {})
  {
    <bb 3>:
    # DEBUG D#62 => D#84
    # DEBUG D#63 => nodes_5(D)
    # .MEM_49 = VDEF <.MEM_16>
    TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  }
  bb_4 (preds = {bb_2 }, succs = {bb_6 bb_5 })
  {
    <bb 4>:
    # .MEM_6 = VDEF <.MEM_16>
    this_3(D)->D.35913.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV31UniformBackgroundTrafficPattern + 16B];
    # DEBUG D#533 => &this_3(D)->_excluded
    # DEBUG this => D#533
    # DEBUG D#310 => &D#533->_M_t
    # DEBUG this => D#310
    # DEBUG D#309 => &MEM[(struct _Rb_tree *)D#310]._M_impl
    # DEBUG this => D#309
    # DEBUG this => D#309
    # DEBUG this => D#309
    # .MEM_30 = VDEF <.MEM_6>
    MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_color = 0;
    # .MEM_31 = VDEF <.MEM_30>
    MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_parent = 0B;
    # .MEM_34 = VDEF <.MEM_31>
    MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_node_count = 0;
    # DEBUG this => D#309
    __j$_M_node_9 = &MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header;
    # .MEM_35 = VDEF <.MEM_34>
    MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_left = __j$_M_node_9;
    # .MEM_36 = VDEF <.MEM_35>
    MEM[(struct _Rb_tree_impl *)this_3(D) + 16B]._M_header._M_right = __j$_M_node_9;
    # DEBUG i => 0
    # DEBUG i => 0
    # VUSE <.MEM_36>
    _102 = MEM[(int * *)excluded_nodes_8(D)];
    # DEBUG D#99 => excluded_nodes_8(D)
    # VUSE <.MEM_36>
    _100 = MEM[(int * *)excluded_nodes_8(D) + 8B];
    # DEBUG D#99 => excluded_nodes_8(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    _101 = (long int) _100;
    _74 = (long int) _102;
    _95 = _101 - _74;
    _96 = _95 /[ex] 4;
    if (_96 != 0)
      goto <bb 6>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 bb_29 }, succs = {bb_33 })
  {
    <bb 5>:
    # .MEM_115 = PHI <.MEM_36(4), .MEM_38(29)>

  }
  bb_33 (preds = {bb_5 }, succs = {bb_1 })
  {
    <bb 33>:
    # VUSE <.MEM_115>
    return;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#100 => excluded_nodes_8(D)
    # DEBUG __n => 0
    # DEBUG this => D#100
    # VUSE <.MEM_36>
    node.101_66 = *_102;
    # DEBUG node => node.101_66
    if (node.101_66 < 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 bb_8 bb_9 bb_10 }, succs = {})
  {
    <bb 7>:
    # .MEM_98 = PHI <.MEM_36(6), .MEM_36(8), .MEM_38(9), .MEM_38(10)>
    # .MEM_18 = VDEF <.MEM_98>
    __assert_fail ("(node >= 0) && (node < _nodes)", "traffic.cpp", 397, &__PRETTY_FUNCTION__);

  }
  bb_8 (preds = {bb_6 }, succs = {bb_7 bb_12 })
  {
    <bb 8>:
    if (nodes_5(D) <= node.101_66)
      goto <bb 7>;
    else
      goto <bb 12>;

  }
  bb_12 (preds = {bb_8 }, succs = {bb_13 })
  {
    <bb 12>:

  }
  bb_30 (preds = {bb_27 }, succs = {bb_31 })
  {
  <L7>:
    # DEBUG D#677 => {CLOBBER}
    # DEBUG node => D#677
    # DEBUG D#529 => &this_3(D)->_excluded
    # DEBUG this => D#529
    # DEBUG this => D#681
    # VUSE <.MEM_91>
    _28 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B];
    # DEBUG D#111 => D#681
    # DEBUG this => D#111
    pretmp_87 = &MEM[(struct set *)this_3(D) + 16B]._M_t;
    # .MEM_39 = VDEF <.MEM_91>
    std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (pretmp_87, _28);
    # DEBUG D#414 => &MEM[(struct _Rb_tree *)D#681]._M_impl
    # DEBUG this => D#414
    # DEBUG this => D#414
    # DEBUG this => D#414
    # .MEM_44 = VDEF <.MEM_39>
    MEM[(struct  &)this_3(D) + 16] ={v} {CLOBBER};
    resx 2

  }
  bb_31 (preds = {bb_30 }, succs = {})
  {
  <L8>:
    # DEBUG D#528 => &this_3(D)->D.35913
    # DEBUG this => D#528
    # DEBUG D#85 => &D#528->D.35001
    # DEBUG this => D#85
    # .MEM_48 = VDEF <.MEM_44>
    MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
    resx 1

  }
  loop_1 (header = 13, latch = 11, niter = )
  {
    bb_9 (preds = {bb_29 }, succs = {bb_7 bb_10 })
    {
      <bb 9>:
      # DEBUG D#100 => excluded_nodes_8(D)
      # DEBUG __n => i_14
      # DEBUG this => D#100
      _25 = i_14 * 4;
      _26 = prephitmp_113 + _25;
      # VUSE <.MEM_38>
      node.101_10 = *_26;
      # DEBUG node => node.101_10
      if (node.101_10 < 0)
        goto <bb 7>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_7 bb_11 })
    {
      <bb 10>:
      # VUSE <.MEM_38>
      _12 = this_3(D)->D.35913.D.35001._nodes;
      if (node.101_10 >= _12)
        goto <bb 7>;
      else
        goto <bb 11>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_13 })
    {
      <bb 11>:
      # VUSE <.MEM_38>
      pretmp_41 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B];
      goto <bb 13>;

    }
    bb_13 (preds = {bb_12 bb_11 }, succs = {bb_21 bb_16 })
    {
      <bb 13>:
      # i_103 = PHI <0(12), i_14(11)>
      # .MEM_11 = PHI <.MEM_36(12), .MEM_38(11)>
      # node.101_107 = PHI <node.101_66(12), node.101_10(11)>
      # prephitmp_42 = PHI <0B(12), pretmp_41(11)>
      # prephitmp_43 = PHI <_100(12), prephitmp_70(11)>
      # prephitmp_45 = PHI <_102(12), prephitmp_113(11)>
      # DEBUG i => i_103
      # DEBUG D#99 => excluded_nodes_8(D)
      # DEBUG this => D#99
      # DEBUG this => D#99
      # DEBUG D#100 => excluded_nodes_8(D)
      # DEBUG __n => i_103
      # DEBUG this => D#100
      # DEBUG node => node.101_107
      # DEBUG D#527 => &this_3(D)->_excluded
      # DEBUG this => D#527
      # DEBUG __x => &node
      # DEBUG D#681 => &MEM[(struct set *)this_3(D) + 16B]._M_t
      # DEBUG this => D#681
      # DEBUG __v => &node
      # DEBUG __x => &node
      # DEBUG this => D#131
      # DEBUG this => D#681
      # DEBUG __k => &node
      # DEBUG D#680 => MEM[(struct _Rb_tree_node_base * *)this_3(D) + 32B]
      # DEBUG D#111 => D#681
      # DEBUG this => D#111
      # DEBUG __x => NULL
      # DEBUG this => D#681
      # DEBUG __y => NULL
      # DEBUG __comp => 1
      # DEBUG __comp => 1
      # DEBUG __y => __j$_M_node_9
      # DEBUG __x => D#680
      if (prephitmp_42 == 0B)
        goto <bb 21>;
      else
        goto <bb 16>;

    }
    bb_16 (preds = {bb_13 }, succs = {bb_17 })
    {
      <bb 16>:

    }
    bb_20 (preds = {bb_14 }, succs = {bb_32 })
    {
      <bb 20>:
      # _110 = PHI <_56(14)>
      # __j$_M_node_97 = PHI <__j$_M_node_106(14)>

    }
    bb_32 (preds = {bb_20 }, succs = {bb_21 bb_23 })
    {
      <bb 32>:
      # DEBUG this => &__j
      # DEBUG __x => __j$_M_node_97
      # DEBUG __j$_M_node => __j$_M_node_97
      if (_110 > node.101_107)
        goto <bb 21>;
      else
        goto <bb 23>;

    }
    bb_21 (preds = {bb_32 bb_13 }, succs = {bb_24 bb_22 })
    {
      <bb 21>:
      # __j$_M_node_109 = PHI <__j$_M_node_97(32), __j$_M_node_9(13)>
      # DEBUG this => &__j
      # DEBUG __x => __j$_M_node_109
      # DEBUG __j$_M_node => __j$_M_node_109
      # VUSE <.MEM_11>
      _61 = MEM[(struct _Rb_tree_node_base * *)this_3(D) + 40B];
      # DEBUG D#205 => D#681
      # DEBUG this => D#205
      # DEBUG this => NULL
      # DEBUG __x => _61
      # DEBUG this => &__j
      # DEBUG __x => NULL
      if (_61 == __j$_M_node_109)
        goto <bb 24>;
      else
        goto <bb 22>;

    }
    bb_22 (preds = {bb_21 }, succs = {bb_23 })
    {
      <bb 22>:
      # DEBUG this => &__j
      # VUSE <.MEM_11>
      __j$_M_node_63 = std::_Rb_tree_decrement (__j$_M_node_109);
      # DEBUG __j$_M_node => __j$_M_node_63
      # VUSE <.MEM_11>
      pretmp_33 = MEM[(const int &)__j$_M_node_63 + 32];

    }
    bb_23 (preds = {bb_32 bb_22 }, succs = {bb_24 bb_29 })
    {
      <bb 23>:
      # __j$_M_node_68 = PHI <__j$_M_node_97(32), __j$_M_node_109(22)>
      # prephitmp_15 = PHI <_110(32), pretmp_33(22)>
      # DEBUG __j$_M_node => NULL
      # DEBUG __x => NULL
      # DEBUG __x => NULL
      # DEBUG this => NULL
      # DEBUG D#422 => NULL
      # DEBUG __r => D#422
      # DEBUG __x => D#422
      # DEBUG this => D#131
      # DEBUG D#424 => &MEM[(struct _Rb_tree *)D#681]._M_impl._M_key_compare
      # DEBUG D#133 => D#424
      # DEBUG D#134 => D#422
      # DEBUG D#135 => &node
      # DEBUG this => D#133
      # DEBUG __x => D#134
      # DEBUG __y => D#135
      if (prephitmp_15 < node.101_107)
        goto <bb 24>;
      else
        goto <bb 29>;

    }
    bb_24 (preds = {bb_21 bb_23 }, succs = {bb_25 bb_29 })
    {
      <bb 24>:
      # __res$8_89 = PHI <_61(21), __j$_M_node_68(23)>
      # DEBUG D#423 => {CLOBBER}
      # DEBUG __j$_M_node => D#423
      # DEBUG __res => 0B
      # DEBUG __res$8 => __res$8_89
      # DEBUG __res$first => 0B
      # DEBUG __res$second => __res$8_89
      if (__res$8_89 != 0B)
        goto <bb 25>;
      else
        goto <bb 29>;

    }
    bb_25 (preds = {bb_24 }, succs = {bb_27 bb_26 })
    {
      <bb 25>:
      # DEBUG this => &__an
      # DEBUG __t => D#681
      # DEBUG __an$_M_t => D#681
      # DEBUG D#522 => &__an
      # DEBUG this => D#681
      # DEBUG __x => 0B
      # DEBUG __p => __res$8_89
      # DEBUG __v => &node
      # DEBUG __node_gen => D#522
      # DEBUG D#521 => D#522
      # DEBUG this => D#681
      if (__j$_M_node_9 == __res$8_89)
        goto <bb 27>;
      else
        goto <bb 26>;

    }
    bb_26 (preds = {bb_25 }, succs = {bb_27 })
    {
      <bb 26>:
      # DEBUG __x => __res$8_89
      # DEBUG __x => __res$8_89
      # DEBUG this => __res$8_89
      # DEBUG D#519 => &MEM[(const struct _Rb_tree_node *)__res$8_89]._M_value_field
      # DEBUG __r => D#519
      # DEBUG __x => D#519
      # DEBUG this => D#131
      # DEBUG __x => &node
      # DEBUG this => D#131
      # DEBUG D#520 => &MEM[(struct _Rb_tree *)D#681]._M_impl._M_key_compare
      # DEBUG D#133 => D#520
      # VUSE <.MEM_11>
      _72 = MEM[(const int &)__res$8_89 + 32];
      # DEBUG D#135 => D#519
      # DEBUG this => D#133
      # DEBUG __x => D#134
      # DEBUG __y => D#135
      __insert_left_55 = _72 > node.101_107;

    }
    bb_27 (preds = {bb_26 bb_25 }, succs = {bb_28 bb_30 })
    {
      <bb 27>:
      # __insert_left_77 = PHI <__insert_left_55(26), 1(25)>
      # DEBUG __insert_left => __insert_left_77
      # DEBUG D#518 => D#521
      # DEBUG __arg => &node
      # DEBUG this => D#518
      # DEBUG D#517 => D#518
      # DEBUG D#516 => D#517->_M_t
      # DEBUG D#515 => D#516
      # DEBUG __x => &node
      # DEBUG this => D#515
      # DEBUG D#514 => D#515
      # DEBUG D#513 => D#515
      # DEBUG D#512 => D#513
      # DEBUG this => D#512
      # DEBUG D#511 => D#512
      # DEBUG this => D#511
      # DEBUG __n => 1
      # DEBUG __a => D#510
      # DEBUG D#509 => D#510
      # DEBUG D#507 => D#509
      # DEBUG D#508 => 0B
      # DEBUG __n => 1
      # DEBUG this => D#507
      # DEBUG D.53167 => D#508
      # DEBUG D#506 => D#507
      # DEBUG D#505 => D#506
      # DEBUG this => D#505
      # .MEM_91 = VDEF <.MEM_11>
      _73 = operator new (40);

    }
    bb_28 (preds = {bb_27 }, succs = {bb_29 })
    {
      <bb 28>:
      # DEBUG __tmp => _73
      # DEBUG D#504 => D#514
      # DEBUG __node => _73
      # DEBUG __x => &node
      # DEBUG this => D#504
      # DEBUG D#503 => D#504
      # DEBUG this => _73
      # DEBUG D#679 => &_73->_M_value_field
      # DEBUG __r => D#679
      # DEBUG D#397 => D#503
      # DEBUG this => D#397
      # DEBUG D#396 => D#397
      # DEBUG this => D#396
      # DEBUG this => NULL
      # DEBUG D.48773 => NULL
      # DEBUG this => NULL
      # DEBUG __p => D#679
      # DEBUG __val => &node
      # DEBUG this => D#502
      # DEBUG D#33 => 4
      # DEBUG __p => D#679
      # DEBUG D.50198 => D#33
      # .MEM_92 = VDEF <.MEM_91>
      MEM[(int *)_73 + 32B] = node.101_107;
      # DEBUG this => NULL
      # DEBUG this => NULL
      # DEBUG __z => _73
      _78 = (int) __insert_left_77;
      # .MEM_93 = VDEF <.MEM_92>
      std::_Rb_tree_insert_and_rebalance (_78, _73, __res$8_89, __j$_M_node_9);
      # VUSE <.MEM_93>
      _79 = MEM[(struct _Rb_tree *)this_3(D) + 16B]._M_impl._M_node_count;
      _80 = _79 + 1;
      # .MEM_94 = VDEF <.MEM_93>
      MEM[(struct _Rb_tree *)this_3(D) + 16B]._M_impl._M_node_count = _80;
      # DEBUG this => NULL
      # DEBUG __x => _73
      # DEBUG this => NULL
      # DEBUG __a => &D.53122
      # DEBUG __b => NULL
      # .MEM_99 = VDEF <.MEM_94>
      D.53122 ={v} {CLOBBER};
      # VUSE <.MEM_99>
      pretmp_114 = MEM[(int * *)excluded_nodes_8(D)];
      # VUSE <.MEM_99>
      pretmp_108 = MEM[(int * *)excluded_nodes_8(D) + 8B];

    }
    bb_29 (preds = {bb_28 bb_24 bb_23 }, succs = {bb_9 bb_5 })
    {
      <bb 29>:
      # .MEM_83 = PHI <.MEM_99(28), .MEM_11(24), .MEM_11(23)>
      # prephitmp_113 = PHI <pretmp_114(28), prephitmp_45(24), prephitmp_45(23)>
      # prephitmp_70 = PHI <pretmp_108(28), prephitmp_43(24), prephitmp_43(23)>
      # DEBUG D#525 => {CLOBBER}
      # DEBUG __res$first => D#525
      # DEBUG D#526 => {CLOBBER}
      # DEBUG __res$second => D#526
      # DEBUG this => NULL
      # DEBUG __it => &__p.first
      # DEBUG D#532 => MEM[(const struct iterator &)&__p]._M_node
      # DEBUG this => NULL
      # DEBUG __a => NULL
      # DEBUG __b => &__p.second
      # DEBUG D#531 => MEM[(const bool &)&__p + 8]
      # DEBUG D#530 => VIEW_CONVERT_EXPR<unsigned char>(D#531)
      # .MEM_38 = VDEF <.MEM_83>
      __p ={v} {CLOBBER};
      # DEBUG D.50521 => D#532
      # DEBUG D.50522 => D#530
      # DEBUG D#678 => {CLOBBER}
      # DEBUG node => D#678
      i_14 = i_103 + 1;
      # DEBUG i => i_14
      # DEBUG i => i_14
      # DEBUG D#99 => excluded_nodes_8(D)
      # DEBUG D#99 => excluded_nodes_8(D)
      # DEBUG this => D#99
      # DEBUG this => D#99
      _7 = (long int) prephitmp_70;
      _21 = (long int) prephitmp_113;
      _22 = _7 - _21;
      _23 = _22 /[ex] 4;
      _24 = (size_type) _23;
      if (i_14 < _24)
        goto <bb 9>;
      else
        goto <bb 5>;

    }
    loop_2 (header = 17, latch = 15, niter = )
    {
      bb_14 (preds = {bb_18 bb_19 }, succs = {bb_20 bb_15 })
      {
        <bb 14>:
        # _67 = PHI <_58(18), _59(19)>
        # DEBUG __comp => _56 > node.101_107
        # DEBUG __y => __j$_M_node_106
        # DEBUG __x => _67
        if (_67 == 0B)
          goto <bb 20>;
        else
          goto <bb 15>;

      }
      bb_15 (preds = {bb_14 }, succs = {bb_17 })
      {
        <bb 15>:
        goto <bb 17>;

      }
      bb_17 (preds = {bb_16 bb_15 }, succs = {bb_18 bb_19 })
      {
        <bb 17>:
        # __j$_M_node_106 = PHI <prephitmp_42(16), _67(15)>
        # DEBUG __comp => 1
        # DEBUG __x => __j$_M_node_106
        # DEBUG __y => __j$_M_node_106
        # DEBUG __x => __j$_M_node_106
        # DEBUG __x => __j$_M_node_106
        # DEBUG this => __j$_M_node_106
        # DEBUG D#421 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_106]._M_value_field
        # DEBUG __r => D#421
        # DEBUG __x => D#421
        # DEBUG this => D#131
        # DEBUG D#425 => &MEM[(struct _Rb_tree *)D#681]._M_impl._M_key_compare
        # DEBUG D#133 => D#425
        # DEBUG D#134 => &node
        # VUSE <.MEM_11>
        _56 = MEM[(const int &)__j$_M_node_106 + 32];
        # DEBUG D#135 => D#421
        # DEBUG this => D#133
        # DEBUG __x => D#134
        # DEBUG __y => D#135
        # DEBUG __comp => NULL
        if (_56 > node.101_107)
          goto <bb 18>;
        else
          goto <bb 19>;

      }
      bb_18 (preds = {bb_17 }, succs = {bb_14 })
      {
        <bb 18>:
        # VUSE <.MEM_11>
        _58 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 16B];
        # DEBUG D#130 => __j$_M_node_106
        # DEBUG __x => D#130
        goto <bb 14>;

      }
      bb_19 (preds = {bb_17 }, succs = {bb_14 })
      {
        <bb 19>:
        # VUSE <.MEM_11>
        _59 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_106 + 24B];
        # DEBUG D#129 => __j$_M_node_106
        # DEBUG __x => D#129
        goto <bb 14>;

      }
    }
  }
}

Pass statistics:
----------------

UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>) (struct UniformBackgroundTrafficPatternD.35035 * const thisD.35910, intD.9 nodesD.35911, struct vectorD.33797 & restrict excluded_nodesD.35912)
Eh tree:
   1 cleanup land:{1,<L8>}
     2 cleanup land:{3,<L7>}
{
  struct _Rb_tree_node_baseD.25994 * SR.991D.53184;
  struct _Rb_tree_node_baseD.25994 * SR.990D.53183;
  struct _Rb_tree_node_baseD.25994 * __res$8D.53182;
  struct _Rb_tree_node_baseD.25994 * __resD.53181;
  boolD.2757 __insert_leftD.53156;
  struct iteratorD.35364 D.53177;
  struct pairD.26447 D.53150;
  boolD.2757 __compD.53129;
  struct _Rb_tree_node_baseD.25994 * const __j$_M_nodeD.53147;
  struct pairD.35485 D.53123;
  struct iteratorD.35364 D.53122;
  struct pairD.26447 __resD.53107;
  struct _Rb_tree_node_baseD.25994 * __res$firstD.53121;
  struct _Rb_tree_node_baseD.25994 * __res$secondD.53120;
  struct _Rb_tree_node_baseD.25994 * SR.705D.53119;
  struct pairD.35485 __pD.50507;
  const intD.9 nodeD.38959;
  size_tD.2853 iD.38957;
  static const charD.10 _ZZN31UniformBackgroundTrafficPatternC4EiSt6vectorIiSaIiEEE19__PRETTY_FUNCTION__D.38841[88] = "UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>)";
  static const charD.10 _ZZN31UniformBackgroundTrafficPatternC4EiSt6vectorIiSaIiEEE19__PRETTY_FUNCTION__D.38841[88] = "UniformBackgroundTrafficPattern::UniformBackgroundTrafficPattern(int, std::vector<int>)";
  long intD.12 _7;
  intD.9 node.101_10;
  intD.9 _12;
  const intD.9 prephitmp_15;
  long intD.12 _21;
  long intD.12 _22;
  long intD.12 _23;
  size_typeD.34516 _24;
  long unsigned intD.14 _25;
  intD.9 & _26;
  struct _Rb_tree_node_baseD.25994 * _28;
  const intD.9 pretmp_33;
  struct _Rb_tree_node_baseD.25994 * pretmp_41;
  struct _Rb_tree_node_baseD.25994 * prephitmp_42;
  intD.9 * const prephitmp_43;
  intD.9 * const prephitmp_45;
  const intD.9 _56;
  struct _Rb_tree_node_baseD.25994 * _58;
  struct _Rb_tree_node_baseD.25994 * _59;
  struct _Rb_tree_node_baseD.25994 * _61;
  intD.9 node.101_66;
  struct _Rb_tree_node_baseD.25994 * const _67;
  intD.9 * const prephitmp_70;
  const intD.9 _72;
  struct _Rb_tree_nodeD.35053 * _73;
  long intD.12 _74;
  intD.9 _78;
  long unsigned intD.14 _79;
  long unsigned intD.14 _80;
  struct _Rep_typeD.35047 * pretmp_87;
  long intD.12 _95;
  long intD.12 _96;
  intD.9 * const _100;
  long intD.12 _101;
  intD.9 * const _102;
  intD.9 node.101_107;
  intD.9 * const pretmp_108;
  const intD.9 _110;
  intD.9 * const prephitmp_113;
  intD.9 * const pretmp_114;

;;   basic block 2, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#534ptD.0 => &this_3(D)->D.35913
  # DEBUG thisD.50492 => D#534ptD.0
  # DEBUG nodesD.50493 => nodes_5(D)
  # DEBUG D#84ptD.0 => &D#534ptD.0->D.35001
  # DEBUG thisD.50495 => D#84ptD.0
  # DEBUG nodesD.50494 => nodes_5(D)
  # .MEM_17 = VDEF <.MEM_4(D)>
  MEM[(struct TrafficPatternD.33853 *)this_3(D)]._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_16 = VDEF <.MEM_17>
  MEM[(struct TrafficPatternD.33853 *)this_3(D)]._nodesD.33855 = nodes_5(D);
  if (nodes_5(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#84ptD.0
  # DEBUG D#63ptD.0 => nodes_5(D)
  # .MEM_49 = VDEF <.MEM_16>
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_6 = VDEF <.MEM_16>
  this_3(D)->D.35913.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV31UniformBackgroundTrafficPatternD.35916 + 16B];
  # DEBUG D#533ptD.0 => &this_3(D)->_excludedD.35876
  # DEBUG thisD.50488 => D#533ptD.0
  # DEBUG D#310ptD.0 => &D#533ptD.0->_M_tD.35050
  # DEBUG thisD.50489 => D#310ptD.0
  # DEBUG D#309ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#310ptD.0]._M_implD.35127
  # DEBUG thisD.50490 => D#309ptD.0
  # DEBUG thisD.47259 => D#309ptD.0
  # DEBUG thisD.47256 => D#309ptD.0
  # .MEM_30 = VDEF <.MEM_6>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293._M_colorD.25998 = 0;
  # .MEM_31 = VDEF <.MEM_30>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293._M_parentD.25999 = 0B;
  # .MEM_34 = VDEF <.MEM_31>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_node_countD.35294 = 0;
  # DEBUG thisD.50491 => D#309ptD.0
  # PT = nonlocal 
  __j$_M_node_9 = &MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293;
  # .MEM_35 = VDEF <.MEM_34>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293._M_leftD.26000 = __j$_M_node_9;
  # .MEM_36 = VDEF <.MEM_35>
  MEM[(struct _Rb_tree_implD.35139 *)this_3(D) + 16B]._M_headerD.35293._M_rightD.26001 = __j$_M_node_9;
  # DEBUG iD.38957 => 0
  # DEBUG iD.38957 => 0
  # VUSE <.MEM_36>
  # PT = nonlocal escaped 
  _102 = MEM[(intD.9 * *)excluded_nodes_8(D) clique 1 base 1];
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # VUSE <.MEM_36>
  # PT = nonlocal escaped 
  _100 = MEM[(intD.9 * *)excluded_nodes_8(D) + 8B clique 1 base 1];
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # DEBUG thisD.50499 => D#99ptD.0
  # DEBUG thisD.50498 => D#99ptD.0
  _101 = (long intD.12) _100;
  _74 = (long intD.12) _102;
  _95 = _101 - _74;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _96 = _95 /[ex] 4;
  if (_96 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 4, next block 33, flags: (NEW, REACHABLE)
;;    pred:       4 [2.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [2.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_115 = PHI <.MEM_36(4), .MEM_38(29)>
;;    succ:       33 [100.0%]  (FALLTHRU)

;;   basic block 33, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_115>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 6, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 33, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => excluded_nodes_8(D)
  # DEBUG __nD.50502 => 0
  # DEBUG thisD.50503 => D#100ptD.0
  # VUSE <.MEM_36>
  node.101_66 = *_102;
  # DEBUG nodeD.38959 => node.101_66
  if (node.101_66 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_36(6), .MEM_36(8), .MEM_38(9), .MEM_38(10)>
  # .MEM_18 = VDEF <.MEM_98>
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  __assert_failD.29068 ("(node >= 0) && (node < _nodes)", "traffic.cpp", 397, &_ZZN31UniformBackgroundTrafficPatternC4EiSt6vectorIiSaIiEEE19__PRETTY_FUNCTION__D.38841);
;;    succ:      

;;   basic block 8, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  if (nodes_5(D) <= node.101_66)
    goto <bb 7>;
  else
    goto <bb 12>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       29 [97.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => excluded_nodes_8(D)
  # DEBUG __nD.50502 => i_14
  # DEBUG thisD.50503 => D#100ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = i_14 * 4;
  # PT = nonlocal escaped 
  _26 = prephitmp_113 + _25;
  # VUSE <.MEM_38>
  node.101_10 = *_26;
  # DEBUG nodeD.38959 => node.101_10
  if (node.101_10 < 0)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 879, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_38>
  _12 = this_3(D)->D.35913.D.35001._nodesD.33855;
  if (node.101_10 >= _12)
    goto <bb 7>;
  else
    goto <bb 11>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 879, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_38>
  pretmp_41 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_3(D) + 32B];
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # i_103 = PHI <0(12), i_14(11)>
  # .MEM_11 = PHI <.MEM_36(12), .MEM_38(11)>
  # node.101_107 = PHI <node.101_66(12), node.101_10(11)>
  # PT = nonlocal escaped 
  # prephitmp_42 = PHI <0B(12), pretmp_41(11)>
  # prephitmp_43 = PHI <_100(12), prephitmp_70(11)>
  # prephitmp_45 = PHI <_102(12), prephitmp_113(11)>
  # DEBUG iD.38957 => i_103
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # DEBUG thisD.50499 => D#99ptD.0
  # DEBUG thisD.50498 => D#99ptD.0
  # DEBUG D#100ptD.0 => excluded_nodes_8(D)
  # DEBUG __nD.50502 => i_103
  # DEBUG thisD.50503 => D#100ptD.0
  # DEBUG nodeD.38959 => node.101_107
  # DEBUG D#527ptD.0 => &this_3(D)->_excludedD.35876
  # DEBUG thisD.50505 => D#527ptD.0
  # DEBUG __xD.50506 => &nodeD.38959
  # DEBUG D#681ptD.0 => &MEM[(struct setD.35038 *)this_3(D) + 16B]._M_tD.35050
  # DEBUG thisD.53104 => D#681ptD.0
  # DEBUG __vD.53105 => &nodeD.38959
  # DEBUG __xD.50457 => &nodeD.38959
  # DEBUG thisD.50458 => D#131ptD.0
  # DEBUG thisD.53124 => D#681ptD.0
  # DEBUG __kD.53125 => &nodeD.38959
  # DEBUG D#680ptD.0 => MEM[(struct _Rb_tree_node_baseD.25994 * *)this_3(D) + 32B]
  # DEBUG D#111ptD.0 => D#681ptD.0
  # DEBUG thisD.48982 => D#111ptD.0
  # DEBUG __xD.53127 => NULL
  # DEBUG thisD.53146 => D#681ptD.0
  # DEBUG __yD.53128 => NULL
  # DEBUG __compD.53129 => 1
  # DEBUG __compD.53129 => 1
  # DEBUG __yD.53128 => __j$_M_node_9
  # DEBUG __xD.53127 => D#680ptD.0
  if (prephitmp_42 == 0B)
    goto <bb 21>;
  else
    goto <bb 16>;
;;    succ:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _67 = PHI <_58(18), _59(19)>
  # DEBUG __compD.53129 => _56 > node.101_107
  # DEBUG __yD.53128 => __j$_M_node_106
  # DEBUG __xD.53127 => _67
  if (_67 == 0B)
    goto <bb 20>;
  else
    goto <bb 15>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_106 = PHI <prephitmp_42(16), _67(15)>
  # DEBUG __compD.53129 => 1
  # DEBUG __xD.53127 => __j$_M_node_106
  # DEBUG __yD.53128 => __j$_M_node_106
  # DEBUG __xD.48990 => __j$_M_node_106
  # DEBUG __xD.48991 => __j$_M_node_106
  # DEBUG thisD.48992 => __j$_M_node_106
  # DEBUG D#421ptD.0 => &MEM[(const struct _Rb_tree_nodeD.35053 *)__j$_M_node_106]._M_value_fieldD.40564
  # DEBUG __rD.48911 => D#421ptD.0
  # DEBUG __xD.48917 => D#421ptD.0
  # DEBUG thisD.48918 => D#131ptD.0
  # DEBUG D#425ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#681ptD.0]._M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#425ptD.0
  # DEBUG D#134ptD.0 => &nodeD.38959
  # VUSE <.MEM_11>
  _56 = MEM[(const intD.9 &)__j$_M_node_106 + 32];
  # DEBUG D#135ptD.0 => D#421ptD.0
  # DEBUG thisD.53143 => D#133ptD.0
  # DEBUG __xD.53144 => D#134ptD.0
  # DEBUG __yD.53145 => D#135ptD.0
  # DEBUG __compD.53129 => NULL
  if (_56 > node.101_107)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 2, count 0, freq 4550, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _58 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__j$_M_node_106 + 16B];
  # DEBUG D#130ptD.0 => __j$_M_node_106
  # DEBUG __xD.48995 => D#130ptD.0
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 2, count 0, freq 4550, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _59 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__j$_M_node_106 + 24B];
  # DEBUG D#129ptD.0 => __j$_M_node_106
  # DEBUG __xD.48998 => D#129ptD.0
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 19, next block 32, flags: (NEW, REACHABLE)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # _110 = PHI <_56(14)>
  # PT = nonlocal escaped 
  # __j$_M_node_97 = PHI <__j$_M_node_106(14)>
;;    succ:       32 [100.0%]  (FALLTHRU)

;;   basic block 32, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 20, next block 21, flags: (NEW)
;;    pred:       20 [100.0%]  (FALLTHRU)
  # DEBUG thisD.53142 => &__jD.53130
  # DEBUG __xD.53141 => __j$_M_node_97
  # DEBUG __j$_M_nodeD.53147 => __j$_M_node_97
  if (_110 > node.101_107)
    goto <bb 21>;
  else
    goto <bb 23>;
;;    succ:       21 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [55.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 32, next block 22, flags: (NEW, REACHABLE)
;;    pred:       32 [45.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_109 = PHI <__j$_M_node_97(32), __j$_M_node_9(13)>
  # DEBUG thisD.53142 => &__jD.53130
  # DEBUG __xD.53141 => __j$_M_node_109
  # DEBUG __j$_M_nodeD.53147 => __j$_M_node_109
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _61 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_3(D) + 40B];
  # DEBUG D#205ptD.0 => D#681ptD.0
  # DEBUG thisD.49006 => D#205ptD.0
  # DEBUG thisD.46157 => NULL
  # DEBUG __xD.46156 => _61
  # DEBUG thisD.49002 => &__jD.53130
  # DEBUG __xD.49003 => NULL
  if (_61 == __j$_M_node_109)
    goto <bb 24>;
  else
    goto <bb 22>;
;;    succ:       24 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [89.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 404, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [89.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53137 => &__jD.53130
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  __j$_M_node_63 = _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_baseD.26043 (__j$_M_node_109);
  # DEBUG __j$_M_nodeD.53147 => __j$_M_node_63
  # VUSE <.MEM_11>
  pretmp_33 = MEM[(const intD.9 &)__j$_M_node_63 + 32];
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 854, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       32 [55.0%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __j$_M_node_68 = PHI <__j$_M_node_97(32), __j$_M_node_109(22)>
  # prephitmp_15 = PHI <_110(32), pretmp_33(22)>
  # DEBUG __j$_M_nodeD.53147 => NULL
  # DEBUG __xD.49020 => NULL
  # DEBUG __xD.49021 => NULL
  # DEBUG thisD.49022 => NULL
  # DEBUG D#422ptD.0 => NULL
  # DEBUG __rD.48911 => D#422ptD.0
  # DEBUG __xD.48972 => D#422ptD.0
  # DEBUG thisD.48973 => D#131ptD.0
  # DEBUG D#424ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#681ptD.0]._M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#424ptD.0
  # DEBUG D#134ptD.0 => D#422ptD.0
  # DEBUG D#135ptD.0 => &nodeD.38959
  # DEBUG thisD.49018 => D#133ptD.0
  # DEBUG __xD.49017 => D#134ptD.0
  # DEBUG __yD.49016 => D#135ptD.0
  if (prephitmp_15 < node.101_107)
    goto <bb 24>;
  else
    goto <bb 29>;
;;    succ:       24 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 379, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       21 [10.1%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __res$8_89 = PHI <_61(21), __j$_M_node_68(23)>
  # DEBUG D#423ptD.0 => {CLOBBER}
  # DEBUG __j$_M_nodeD.53147 => D#423ptD.0
  # DEBUG __resD.53181 => 0B
  # DEBUG __res$8D.53182 => __res$8_89
  # DEBUG __res$firstD.53121 => 0B
  # DEBUG __res$secondD.53120 => __res$8_89
  if (__res$8_89 != 0B)
    goto <bb 25>;
  else
    goto <bb 29>;
;;    succ:       25 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 81, maybe hot
;;   Invalid sum of incoming frequencies 379, should be 81
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53118 => &__anD.53113
  # DEBUG __tD.53117 => D#681ptD.0
  # DEBUG __an$_M_tD.50472 => D#681ptD.0
  # DEBUG D#522ptD.0 => &__anD.53113
  # DEBUG thisD.53151 => D#681ptD.0
  # DEBUG __xD.53152 => 0B
  # DEBUG __pD.53153 => __res$8_89
  # DEBUG __vD.53154 => &nodeD.38959
  # DEBUG __node_genD.53155 => D#522ptD.0
  # DEBUG D#521ptD.0 => D#522ptD.0
  # DEBUG thisD.53176 => D#681ptD.0
  if (__j$_M_node_9 == __res$8_89)
    goto <bb 27>;
  else
    goto <bb 26>;
;;    succ:       27 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 68, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __xD.50439 => __res$8_89
  # DEBUG __xD.50440 => __res$8_89
  # DEBUG thisD.50441 => __res$8_89
  # DEBUG D#519ptD.0 => &MEM[(const struct _Rb_tree_nodeD.35053 *)__res$8_89]._M_value_fieldD.40564
  # DEBUG __rD.48911 => D#519ptD.0
  # DEBUG __xD.48972 => D#519ptD.0
  # DEBUG thisD.48973 => D#131ptD.0
  # DEBUG __xD.50379 => &nodeD.38959
  # DEBUG thisD.50380 => D#131ptD.0
  # DEBUG D#520ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#681ptD.0]._M_implD.35127._M_key_compareD.35292
  # DEBUG D#133ptD.0 => D#520ptD.0
  # VUSE <.MEM_11>
  _72 = MEM[(const intD.9 &)__res$8_89 + 32];
  # DEBUG D#135ptD.0 => D#519ptD.0
  # DEBUG thisD.50442 => D#133ptD.0
  # DEBUG __xD.50443 => D#134ptD.0
  # DEBUG __yD.50444 => D#135ptD.0
  __insert_left_55 = _72 > node.101_107;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 537, maybe hot
;;   Invalid sum of incoming frequencies 80, should be 537
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # __insert_left_77 = PHI <__insert_left_55(26), 1(25)>
  # DEBUG __insert_leftD.53156 => __insert_left_77
  # DEBUG D#518ptD.0 => D#521ptD.0
  # DEBUG __argD.53159 => &nodeD.38959
  # DEBUG thisD.53158 => D#518ptD.0
  # DEBUG D#517ptD.0 => D#518ptD.0
  # DEBUG D#516ptD.0 => D#517ptD.0->_M_tD.40625
  # DEBUG D#515ptD.0 => D#516ptD.0
  # DEBUG __xD.53161 => &nodeD.38959
  # DEBUG thisD.53160 => D#515ptD.0
  # DEBUG D#514ptD.0 => D#515ptD.0
  # DEBUG D#513ptD.0 => D#515ptD.0
  # DEBUG D#512ptD.0 => D#513ptD.0
  # DEBUG thisD.53163 => D#512ptD.0
  # DEBUG D#511ptD.0 => D#512ptD.0
  # DEBUG thisD.50282 => D#511ptD.0
  # DEBUG __nD.53165 => 1
  # DEBUG __aD.53164 => D#510ptD.0
  # DEBUG D#509ptD.0 => D#510ptD.0
  # DEBUG D#507ptD.0 => D#509ptD.0
  # DEBUG D#508ptD.0 => 0B
  # DEBUG __nD.53168 => 1
  # DEBUG thisD.53166 => D#507ptD.0
  # DEBUG D.53167 => D#508ptD.0
  # DEBUG D#506ptD.0 => D#507ptD.0
  # DEBUG D#505ptD.0 => D#506ptD.0
  # DEBUG thisD.50240 => D#505ptD.0
  [LP 3] # .MEM_91 = VDEF <.MEM_11>
  # PT = { D.53186 } (escaped heap)
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  _73 = _ZnwmD.2764 (40);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 (EH,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 537, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __tmpD.53162 => _73
  # DEBUG D#504ptD.0 => D#514ptD.0
  # DEBUG __nodeD.53171 => _73
  # DEBUG __xD.53170 => &nodeD.38959
  # DEBUG thisD.53169 => D#504ptD.0
  # DEBUG D#503ptD.0 => D#504ptD.0
  # DEBUG thisD.53172 => _73
  # DEBUG D#679ptD.0 => &_73->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#679ptD.0
  # DEBUG D#397ptD.0 => D#503ptD.0
  # DEBUG thisD.50214 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG __pD.53175 => D#679ptD.0
  # DEBUG __valD.53174 => &nodeD.38959
  # DEBUG thisD.53173 => D#502ptD.0
  # DEBUG D#33ptD.0 => 4
  # DEBUG __pD.50197 => D#679ptD.0
  # DEBUG D.50198 => D#33ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(intD.9 *)_73 + 32B] = node.101_107;
  # DEBUG thisD.50227 => NULL
  # DEBUG thisD.50210 => NULL
  # DEBUG __zD.53157 => _73
  # RANGE [0, 1] NONZERO 1
  _78 = (intD.9) __insert_left_77;
  # .MEM_93 = VDEF <.MEM_92>
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_D.26220 (_78, _73, __res$8_89, __j$_M_node_9);
  # VUSE <.MEM_93>
  _79 = MEM[(struct _Rb_treeD.35049 *)this_3(D) + 16B]._M_implD.35127._M_node_countD.35294;
  # RANGE [0, 18446744073709551615]
  _80 = _79 + 1;
  # .MEM_94 = VDEF <.MEM_93>
  MEM[(struct _Rb_treeD.35049 *)this_3(D) + 16B]._M_implD.35127._M_node_countD.35294 = _80;
  # DEBUG thisD.50438 => NULL
  # DEBUG __xD.50437 => _73
  # DEBUG thisD.53116 => NULL
  # DEBUG __aD.53115 => &D.53122
  # DEBUG __bD.53114 => NULL
  # .MEM_99 = VDEF <.MEM_94>
  D.53122 ={v} {CLOBBER};
  # VUSE <.MEM_99>
  pretmp_114 = MEM[(intD.9 * *)excluded_nodes_8(D)];
  # VUSE <.MEM_99>
  pretmp_108 = MEM[(intD.9 * *)excluded_nodes_8(D) + 8B];
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 1058, should be 900
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 (FALSE_VALUE,EXECUTABLE)
;;                23 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_83 = PHI <.MEM_99(28), .MEM_11(24), .MEM_11(23)>
  # PT = nonlocal escaped 
  # prephitmp_113 = PHI <pretmp_114(28), prephitmp_45(24), prephitmp_45(23)>
  # PT = nonlocal escaped 
  # prephitmp_70 = PHI <pretmp_108(28), prephitmp_43(24), prephitmp_43(23)>
  # DEBUG D#525ptD.0 => {CLOBBER}
  # DEBUG __res$firstD.53121 => D#525ptD.0
  # DEBUG D#526ptD.0 => {CLOBBER}
  # DEBUG __res$secondD.53120 => D#526ptD.0
  # DEBUG thisD.50509 => NULL
  # DEBUG __itD.50508 => &__pD.50507.firstD.40053
  # DEBUG D#532ptD.0 => MEM[(const struct iteratorD.38850 &)&__pD.50507 clique 1 base 0]._M_nodeD.40088
  # DEBUG thisD.50512 => NULL
  # DEBUG __aD.50511 => NULL
  # DEBUG __bD.50510 => &__pD.50507.secondD.40100
  # DEBUG D#531ptD.0 => MEM[(const boolD.2757 &)&__pD.50507 + 8 clique 1 base 0]
  # DEBUG D#530ptD.0 => VIEW_CONVERT_EXPR<unsigned char>(D#531ptD.0)
  # .MEM_38 = VDEF <.MEM_83>
  __pD.50507 ={v} {CLOBBER};
  # DEBUG D.50521 => D#532ptD.0
  # DEBUG D.50522 => D#530ptD.0
  # DEBUG D#678ptD.0 => {CLOBBER}
  # DEBUG nodeD.38959 => D#678ptD.0
  # RANGE [0, 18446744073709551615]
  i_14 = i_103 + 1;
  # DEBUG iD.38957 => i_14
  # DEBUG iD.38957 => i_14
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # DEBUG D#99ptD.0 => excluded_nodes_8(D)
  # DEBUG thisD.50499 => D#99ptD.0
  # DEBUG thisD.50498 => D#99ptD.0
  _7 = (long intD.12) prephitmp_70;
  _21 = (long intD.12) prephitmp_113;
  _22 = _7 - _21;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _23 = _22 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _24 = (size_typeD.34516) _23;
  if (i_14 < _24)
    goto <bb 9>;
  else
    goto <bb 5>;
;;    succ:       9 [97.8%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [2.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       27 (EH,EXECUTABLE)
<L7>: [LP 3]
  # DEBUG D#677ptD.0 => {CLOBBER}
  # DEBUG nodeD.38959 => D#677ptD.0
  # DEBUG D#529ptD.0 => &this_3(D)->_excludedD.35876
  # DEBUG thisD.50514 => D#529ptD.0
  # DEBUG thisD.50515 => D#681ptD.0
  # VUSE <.MEM_91>
  # PT = nonlocal escaped 
  _28 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_3(D) + 32B];
  # DEBUG D#111ptD.0 => D#681ptD.0
  # DEBUG thisD.48885 => D#111ptD.0
  # PT = nonlocal 
  pretmp_87 = &MEM[(struct setD.35038 *)this_3(D) + 16B]._M_tD.35050;
  # .MEM_39 = VDEF <.MEM_91>
  # USE = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.33889 D.35916 D.38841 D.53186 } (nonlocal, escaped heap)
  _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiED.35420 (pretmp_87, _28);
  # DEBUG D#414ptD.0 => &MEM[(struct _Rb_treeD.35049 *)D#681ptD.0]._M_implD.35127
  # DEBUG thisD.50516 => D#414ptD.0
  # DEBUG thisD.50517 => D#414ptD.0
  # DEBUG thisD.50518 => D#414ptD.0
  # .MEM_44 = VDEF <.MEM_39>
  MEM[(struct  &)this_3(D) + 16] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       31 (EH,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 30, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 (EH,EXECUTABLE)
<L8>: [LP 1]
  # DEBUG D#528ptD.0 => &this_3(D)->D.35913
  # DEBUG thisD.50519 => D#528ptD.0
  # DEBUG D#85ptD.0 => &D#528ptD.0->D.35001
  # DEBUG thisD.50520 => D#85ptD.0
  # .MEM_48 = VDEF <.MEM_44>
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}



;; Function UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (_ZN31UniformBackgroundTrafficPatternD2Ev, funcdef_no=2364, decl_uid=35902, cgraph_uid=1034, symbol_order=1042)


Pass statistics:
----------------

UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (struct UniformBackgroundTrafficPatternD.35035 * const thisD.35903)
{
  struct _Rb_tree_nodeD.35053 * __xD.53211;
  struct _Rep_typeD.35047 * _5;
  struct _Rb_tree_node_baseD.25994 * _18;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.35913.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV31UniformBackgroundTrafficPatternD.35916 + 16B];
  # DEBUG D#416ptD.0 => &this_2(D)->_excludedD.35876
  # DEBUG thisD.48895 => D#416ptD.0
  # PT = nonlocal 
  _5 = &MEM[(struct setD.35038 *)this_2(D) + 16B]._M_tD.35050;
  # DEBUG thisD.48896 => _5
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __x_7 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_2(D) + 32B];
  # DEBUG D#111ptD.0 => _5
  # DEBUG thisD.48885 => D#111ptD.0
  # DEBUG thisD.53210 => _5
  # DEBUG __xD.53211 => __x_7
  # DEBUG __xD.53211 => __x_7
  if (__x_7 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_3(2), .MEM_21(5)>
  # DEBUG D#414ptD.0 => &MEM[(struct _Rb_treeD.35049 *)_5]._M_implD.35127
  # DEBUG thisD.48897 => D#414ptD.0
  # DEBUG thisD.48898 => D#414ptD.0
  # DEBUG thisD.48899 => D#414ptD.0
  # DEBUG D#415ptD.0 => &this_2(D)->D.35913
  # DEBUG thisD.48893 => D#415ptD.0
  # DEBUG D#85ptD.0 => &D#415ptD.0->D.35001
  # DEBUG thisD.48894 => D#85ptD.0
  # .MEM_6 = VDEF <.MEM_8>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_6>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_24 = PHI <__x_7(4), __x_19(6)>
  # .MEM_25 = PHI <.MEM_3(4), .MEM_21(6)>
  # DEBUG __xD.53211 => __x_24
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  _18 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_24 + 24B];
  # DEBUG D#129ptD.0 => __x_24
  # DEBUG __xD.48878 => D#129ptD.0
  # .MEM_4 = VDEF <.MEM_25>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiED.35420 (_5, _18);
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  __x_19 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_24 + 16B];
  # DEBUG D#130ptD.0 => __x_24
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53212 => NULL
  # DEBUG D#413ptD.0 => _5
  # DEBUG __pD.53214 => __x_24
  # DEBUG thisD.53213 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_24
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53216 => D#411ptD.0
  # DEBUG __pD.53215 => __x_24
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53219 => __x_24
  # DEBUG __aD.53217 => D#408ptD.0
  # DEBUG __nD.53218 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53222 => __x_24
  # DEBUG thisD.53220 => D#404ptD.0
  # DEBUG D.53221 => D#405ptD.0
  # .MEM_21 = VDEF <.MEM_4>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZdlPvD.2766 (__x_24);
  # DEBUG __xD.53211 => __x_19
  # DEBUG __xD.53211 => __x_19
  if (__x_19 == 0B)
    goto <bb 3>;
  else
    goto <bb 6>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 1, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



Updating SSA:
Registering new PHI nodes in block #5
Updating SSA information for statement operator delete (__x_24);
Registering new PHI nodes in block #6
Registering new PHI nodes in block #7

DFA Statistics for UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern()

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             30        240b
DEF operands                              4         32b
VUSE operands                             8         64b
VDEF operands                             4         32b
PHI nodes                                 4        416b
PHI arguments                             7        336b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1120b
---------------------------------------------------------

Average number of arguments per PHI node: 1.8 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_26 -> { .MEM_21 }
Incremental SSA update started at block: 5
Number of blocks in CFG: 8
Number of blocks to update: 3 ( 38%)
Affected blocks: 5 6 7


Creating dr for this_2(D)->D.35913.D.35001._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_2(D) + 32B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_2(D) + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:8, LOOPS:1, CONDITIONS:2, STMTS:77)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.35913.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV31UniformBackgroundTrafficPattern + 16B];
    # DEBUG D#416 => &this_2(D)->_excluded
    # DEBUG this => D#416
    _5 = &MEM[(struct set *)this_2(D) + 16B]._M_t;
    # DEBUG this => _5
    # VUSE <.MEM_3>
    __x_7 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 32B];
    # DEBUG D#111 => _5
    # DEBUG this => D#111
    # DEBUG this => _5
    # DEBUG __x => __x_7
    # DEBUG __x => __x_7
    if (__x_7 == 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 bb_7 }, succs = {bb_1 })
  {
    <bb 3>:
    # .MEM_8 = PHI <.MEM_3(2), .MEM_26(7)>
    # DEBUG D#414 => &MEM[(struct _Rb_tree *)_5]._M_impl
    # DEBUG this => D#414
    # DEBUG this => D#414
    # DEBUG this => D#414
    # DEBUG D#415 => &this_2(D)->D.35913
    # DEBUG this => D#415
    # DEBUG D#85 => &D#415->D.35001
    # DEBUG this => D#85
    # .MEM_6 = VDEF <.MEM_8>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # VUSE <.MEM_6>
    return;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_5 }, succs = {bb_3 })
  {
    <bb 7>:
    # .MEM_26 = PHI <.MEM_21(5)>
    goto <bb 3>;

  }
  loop_1 (header = 5, latch = 6, niter = )
  {
    bb_5 (preds = {bb_4 bb_6 }, succs = {bb_7 bb_6 })
    {
      <bb 5>:
      # __x_24 = PHI <__x_7(4), __x_19(6)>
      # .MEM_25 = PHI <.MEM_3(4), .MEM_21(6)>
      # DEBUG __x => __x_24
      # VUSE <.MEM_25>
      _18 = MEM[(struct _Rb_tree_node_base * *)__x_24 + 24B];
      # DEBUG D#129 => __x_24
      # DEBUG __x => D#129
      # .MEM_4 = VDEF <.MEM_25>
      std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_5, _18);
      # VUSE <.MEM_4>
      __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_24 + 16B];
      # DEBUG D#130 => __x_24
      # DEBUG __x => D#130
      # DEBUG __y => NULL
      # DEBUG D#413 => _5
      # DEBUG __p => __x_24
      # DEBUG this => D#413
      # DEBUG D#412 => D#413
      # DEBUG D#411 => D#413
      # DEBUG D#410 => D#413
      # DEBUG D#402 => D#410
      # DEBUG D#403 => __x_24
      # DEBUG this => D#402
      # DEBUG __p => D#403
      # DEBUG D#401 => D#402
      # DEBUG D#400 => D#403
      # DEBUG D#399 => D#403
      # DEBUG this => D#399
      # DEBUG D#398 => &D#400->_M_value_field
      # DEBUG __r => D#398
      # DEBUG D#397 => D#401
      # DEBUG this => D#397
      # DEBUG D#396 => D#397
      # DEBUG this => D#396
      # DEBUG this => NULL
      # DEBUG D.48773 => NULL
      # DEBUG this => NULL
      # DEBUG D#312 => D#398
      # DEBUG this => D#311
      # DEBUG __p => D#312
      # DEBUG this => NULL
      # DEBUG this => NULL
      # DEBUG this => D#411
      # DEBUG __p => __x_24
      # DEBUG this => D#412
      # DEBUG D#409 => 1
      # DEBUG __p => __x_24
      # DEBUG __a => D#408
      # DEBUG __n => D#409
      # DEBUG D#407 => D#409
      # DEBUG D#406 => D#408
      # DEBUG D#404 => D#406
      # DEBUG D#405 => D#407
      # DEBUG __p => __x_24
      # DEBUG this => D#404
      # DEBUG D.53221 => D#405
      # .MEM_21 = VDEF <.MEM_4>
      operator delete (__x_24);
      # DEBUG __x => __x_19
      # DEBUG __x => __x_19
      if (__x_19 == 0B)
        goto <bb 7>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_5 })
    {
      <bb 6>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (struct UniformBackgroundTrafficPatternD.35035 * const thisD.35903)
{
  struct _Rb_tree_nodeD.35053 * __xD.53211;
  struct _Rep_typeD.35047 * _5;
  struct _Rb_tree_node_baseD.25994 * _18;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.35913.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV31UniformBackgroundTrafficPatternD.35916 + 16B];
  # DEBUG D#416ptD.0 => &this_2(D)->_excludedD.35876
  # DEBUG thisD.48895 => D#416ptD.0
  # PT = nonlocal 
  _5 = &MEM[(struct setD.35038 *)this_2(D) + 16B]._M_tD.35050;
  # DEBUG thisD.48896 => _5
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __x_7 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_2(D) + 32B];
  # DEBUG D#111ptD.0 => _5
  # DEBUG thisD.48885 => D#111ptD.0
  # DEBUG thisD.53210 => _5
  # DEBUG __xD.53211 => __x_7
  # DEBUG __xD.53211 => __x_7
  if (__x_7 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU)
  # .MEM_8 = PHI <.MEM_3(2), .MEM_26(7)>
  # DEBUG D#414ptD.0 => &MEM[(struct _Rb_treeD.35049 *)_5]._M_implD.35127
  # DEBUG thisD.48897 => D#414ptD.0
  # DEBUG thisD.48898 => D#414ptD.0
  # DEBUG thisD.48899 => D#414ptD.0
  # DEBUG D#415ptD.0 => &this_2(D)->D.35913
  # DEBUG thisD.48893 => D#415ptD.0
  # DEBUG D#85ptD.0 => &D#415ptD.0->D.35001
  # DEBUG thisD.48894 => D#85ptD.0
  # .MEM_6 = VDEF <.MEM_8>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_6>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 7, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_24 = PHI <__x_7(4), __x_19(6)>
  # .MEM_25 = PHI <.MEM_3(4), .MEM_21(6)>
  # DEBUG __xD.53211 => __x_24
  # VUSE <.MEM_25>
  # PT = nonlocal escaped 
  _18 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_24 + 24B];
  # DEBUG D#129ptD.0 => __x_24
  # DEBUG __xD.48878 => D#129ptD.0
  # .MEM_4 = VDEF <.MEM_25>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiED.35420 (_5, _18);
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  __x_19 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_24 + 16B];
  # DEBUG D#130ptD.0 => __x_24
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53212 => NULL
  # DEBUG D#413ptD.0 => _5
  # DEBUG __pD.53214 => __x_24
  # DEBUG thisD.53213 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_24
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53216 => D#411ptD.0
  # DEBUG __pD.53215 => __x_24
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53219 => __x_24
  # DEBUG __aD.53217 => D#408ptD.0
  # DEBUG __nD.53218 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53222 => __x_24
  # DEBUG thisD.53220 => D#404ptD.0
  # DEBUG D.53221 => D#405ptD.0
  # .MEM_21 = VDEF <.MEM_4>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZdlPvD.2766 (__x_24);
  # DEBUG __xD.53211 => __x_19
  # DEBUG __xD.53211 => __x_19
  if (__x_19 == 0B)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_21(5)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 1, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



;; Function virtual UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (_ZN31UniformBackgroundTrafficPatternD0Ev, funcdef_no=2366, decl_uid=35896, cgraph_uid=1036, symbol_order=1044)


Pass statistics:
----------------

virtual UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (struct UniformBackgroundTrafficPatternD.35035 * const thisD.35897)
{
  struct _Rb_tree_nodeD.35053 * __xD.53228;
  struct _Rep_typeD.35047 * _5;
  struct _Rb_tree_node_baseD.25994 * _19;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.48901 => this_2(D)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.35913.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV31UniformBackgroundTrafficPatternD.35916 + 16B];
  # DEBUG D#416ptD.0 => &this_2(D)->_excludedD.35876
  # DEBUG thisD.48902 => D#416ptD.0
  # PT = nonlocal 
  _5 = &MEM[(struct setD.35038 *)this_2(D) + 16B]._M_tD.35050;
  # DEBUG thisD.48903 => _5
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __x_6 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_2(D) + 32B];
  # DEBUG D#111ptD.0 => _5
  # DEBUG thisD.48885 => D#111ptD.0
  # DEBUG thisD.53227 => _5
  # DEBUG __xD.53228 => __x_6
  # DEBUG __xD.53228 => __x_6
  if (__x_6 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_3(2), .MEM_22(5)>
  # DEBUG D#414ptD.0 => &MEM[(struct _Rb_treeD.35049 *)_5]._M_implD.35127
  # DEBUG thisD.48904 => D#414ptD.0
  # DEBUG thisD.48905 => D#414ptD.0
  # DEBUG thisD.48906 => D#414ptD.0
  # DEBUG D#415ptD.0 => &this_2(D)->D.35913
  # DEBUG thisD.48907 => D#415ptD.0
  # DEBUG D#85ptD.0 => &D#415ptD.0->D.35001
  # DEBUG thisD.48908 => D#85ptD.0
  # .MEM_17 = VDEF <.MEM_8>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_17>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_25 = PHI <__x_6(4), __x_20(6)>
  # .MEM_26 = PHI <.MEM_3(4), .MEM_22(6)>
  # DEBUG __xD.53228 => __x_25
  # VUSE <.MEM_26>
  # PT = nonlocal escaped 
  _19 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_25 + 24B];
  # DEBUG D#129ptD.0 => __x_25
  # DEBUG __xD.48878 => D#129ptD.0
  # .MEM_7 = VDEF <.MEM_26>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiED.35420 (_5, _19);
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  __x_20 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_25 + 16B];
  # DEBUG D#130ptD.0 => __x_25
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53229 => NULL
  # DEBUG D#413ptD.0 => _5
  # DEBUG __pD.53231 => __x_25
  # DEBUG thisD.53230 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_25
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53233 => D#411ptD.0
  # DEBUG __pD.53232 => __x_25
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53236 => __x_25
  # DEBUG __aD.53234 => D#408ptD.0
  # DEBUG __nD.53235 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53239 => __x_25
  # DEBUG thisD.53237 => D#404ptD.0
  # DEBUG D.53238 => D#405ptD.0
  # .MEM_22 = VDEF <.MEM_7>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZdlPvD.2766 (__x_25);
  # DEBUG __xD.53228 => __x_20
  # DEBUG __xD.53228 => __x_20
  if (__x_20 == 0B)
    goto <bb 3>;
  else
    goto <bb 6>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 1, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



Updating SSA:
Registering new PHI nodes in block #5
Updating SSA information for statement operator delete (__x_25);
Registering new PHI nodes in block #6
Registering new PHI nodes in block #7

DFA Statistics for virtual UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern()

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             32        256b
DEF operands                              4         32b
VUSE operands                             9         72b
VDEF operands                             5         40b
PHI nodes                                 4        416b
PHI arguments                             7        336b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1152b
---------------------------------------------------------

Average number of arguments per PHI node: 1.8 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_27 -> { .MEM_22 }
Incremental SSA update started at block: 5
Number of blocks in CFG: 8
Number of blocks to update: 3 ( 38%)
Affected blocks: 5 6 7


Creating dr for this_2(D)->D.35913.D.35001._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Rb_tree_node_base * *)this_2(D) + 32B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Rb_tree_node_base * *)this_2(D) + 32B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
Creating dr for MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:8, LOOPS:1, CONDITIONS:2, STMTS:79)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG this => this_2(D)
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.35913.D.35001._vptr.TrafficPattern = &MEM[(void *)&_ZTV31UniformBackgroundTrafficPattern + 16B];
    # DEBUG D#416 => &this_2(D)->_excluded
    # DEBUG this => D#416
    _5 = &MEM[(struct set *)this_2(D) + 16B]._M_t;
    # DEBUG this => _5
    # VUSE <.MEM_3>
    __x_6 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 32B];
    # DEBUG D#111 => _5
    # DEBUG this => D#111
    # DEBUG this => _5
    # DEBUG __x => __x_6
    # DEBUG __x => __x_6
    if (__x_6 == 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 bb_7 }, succs = {bb_1 })
  {
    <bb 3>:
    # .MEM_8 = PHI <.MEM_3(2), .MEM_27(7)>
    # DEBUG D#414 => &MEM[(struct _Rb_tree *)_5]._M_impl
    # DEBUG this => D#414
    # DEBUG this => D#414
    # DEBUG this => D#414
    # DEBUG D#415 => &this_2(D)->D.35913
    # DEBUG this => D#415
    # DEBUG D#85 => &D#415->D.35001
    # DEBUG this => D#85
    # .MEM_17 = VDEF <.MEM_8>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # .MEM_4 = VDEF <.MEM_17>
    operator delete (this_2(D));
    # VUSE <.MEM_4>
    return;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_5 }, succs = {bb_3 })
  {
    <bb 7>:
    # .MEM_27 = PHI <.MEM_22(5)>
    goto <bb 3>;

  }
  loop_1 (header = 5, latch = 6, niter = )
  {
    bb_5 (preds = {bb_4 bb_6 }, succs = {bb_7 bb_6 })
    {
      <bb 5>:
      # __x_25 = PHI <__x_6(4), __x_20(6)>
      # .MEM_26 = PHI <.MEM_3(4), .MEM_22(6)>
      # DEBUG __x => __x_25
      # VUSE <.MEM_26>
      _19 = MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B];
      # DEBUG D#129 => __x_25
      # DEBUG __x => D#129
      # .MEM_7 = VDEF <.MEM_26>
      std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase (_5, _19);
      # VUSE <.MEM_7>
      __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_25 + 16B];
      # DEBUG D#130 => __x_25
      # DEBUG __x => D#130
      # DEBUG __y => NULL
      # DEBUG D#413 => _5
      # DEBUG __p => __x_25
      # DEBUG this => D#413
      # DEBUG D#412 => D#413
      # DEBUG D#411 => D#413
      # DEBUG D#410 => D#413
      # DEBUG D#402 => D#410
      # DEBUG D#403 => __x_25
      # DEBUG this => D#402
      # DEBUG __p => D#403
      # DEBUG D#401 => D#402
      # DEBUG D#400 => D#403
      # DEBUG D#399 => D#403
      # DEBUG this => D#399
      # DEBUG D#398 => &D#400->_M_value_field
      # DEBUG __r => D#398
      # DEBUG D#397 => D#401
      # DEBUG this => D#397
      # DEBUG D#396 => D#397
      # DEBUG this => D#396
      # DEBUG this => NULL
      # DEBUG D.48773 => NULL
      # DEBUG this => NULL
      # DEBUG D#312 => D#398
      # DEBUG this => D#311
      # DEBUG __p => D#312
      # DEBUG this => NULL
      # DEBUG this => NULL
      # DEBUG this => D#411
      # DEBUG __p => __x_25
      # DEBUG this => D#412
      # DEBUG D#409 => 1
      # DEBUG __p => __x_25
      # DEBUG __a => D#408
      # DEBUG __n => D#409
      # DEBUG D#407 => D#409
      # DEBUG D#406 => D#408
      # DEBUG D#404 => D#406
      # DEBUG D#405 => D#407
      # DEBUG __p => __x_25
      # DEBUG this => D#404
      # DEBUG D.53238 => D#405
      # .MEM_22 = VDEF <.MEM_7>
      operator delete (__x_25);
      # DEBUG __x => __x_20
      # DEBUG __x => __x_20
      if (__x_20 == 0B)
        goto <bb 7>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_5 })
    {
      <bb 6>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

virtual UniformBackgroundTrafficPattern::~UniformBackgroundTrafficPattern() (struct UniformBackgroundTrafficPatternD.35035 * const thisD.35897)
{
  struct _Rb_tree_nodeD.35053 * __xD.53228;
  struct _Rep_typeD.35047 * _5;
  struct _Rb_tree_node_baseD.25994 * _19;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.48901 => this_2(D)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.35913.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV31UniformBackgroundTrafficPatternD.35916 + 16B];
  # DEBUG D#416ptD.0 => &this_2(D)->_excludedD.35876
  # DEBUG thisD.48902 => D#416ptD.0
  # PT = nonlocal 
  _5 = &MEM[(struct setD.35038 *)this_2(D) + 16B]._M_tD.35050;
  # DEBUG thisD.48903 => _5
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __x_6 = MEM[(struct _Rb_tree_node_baseD.25994 * *)this_2(D) + 32B];
  # DEBUG D#111ptD.0 => _5
  # DEBUG thisD.48885 => D#111ptD.0
  # DEBUG thisD.53227 => _5
  # DEBUG __xD.53228 => __x_6
  # DEBUG __xD.53228 => __x_6
  if (__x_6 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU)
  # .MEM_8 = PHI <.MEM_3(2), .MEM_27(7)>
  # DEBUG D#414ptD.0 => &MEM[(struct _Rb_treeD.35049 *)_5]._M_implD.35127
  # DEBUG thisD.48904 => D#414ptD.0
  # DEBUG thisD.48905 => D#414ptD.0
  # DEBUG thisD.48906 => D#414ptD.0
  # DEBUG D#415ptD.0 => &this_2(D)->D.35913
  # DEBUG thisD.48907 => D#415ptD.0
  # DEBUG D#85ptD.0 => &D#415ptD.0->D.35001
  # DEBUG thisD.48908 => D#85ptD.0
  # .MEM_17 = VDEF <.MEM_8>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_17>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 7, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __x_25 = PHI <__x_6(4), __x_20(6)>
  # .MEM_26 = PHI <.MEM_3(4), .MEM_22(6)>
  # DEBUG __xD.53228 => __x_25
  # VUSE <.MEM_26>
  # PT = nonlocal escaped 
  _19 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_25 + 24B];
  # DEBUG D#129ptD.0 => __x_25
  # DEBUG __xD.48878 => D#129ptD.0
  # .MEM_7 = VDEF <.MEM_26>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiED.35420 (_5, _19);
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  __x_20 = MEM[(struct _Rb_tree_node_baseD.25994 * *)__x_25 + 16B];
  # DEBUG D#130ptD.0 => __x_25
  # DEBUG __xD.48875 => D#130ptD.0
  # DEBUG __yD.53229 => NULL
  # DEBUG D#413ptD.0 => _5
  # DEBUG __pD.53231 => __x_25
  # DEBUG thisD.53230 => D#413ptD.0
  # DEBUG D#412ptD.0 => D#413ptD.0
  # DEBUG D#411ptD.0 => D#413ptD.0
  # DEBUG D#410ptD.0 => D#413ptD.0
  # DEBUG D#402ptD.0 => D#410ptD.0
  # DEBUG D#403ptD.0 => __x_25
  # DEBUG thisD.48848 => D#402ptD.0
  # DEBUG __pD.48847 => D#403ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => D#403ptD.0
  # DEBUG D#399ptD.0 => D#403ptD.0
  # DEBUG thisD.48800 => D#399ptD.0
  # DEBUG D#398ptD.0 => &D#400ptD.0->_M_value_fieldD.40564
  # DEBUG __rD.48785 => D#398ptD.0
  # DEBUG D#397ptD.0 => D#401ptD.0
  # DEBUG thisD.48792 => D#397ptD.0
  # DEBUG D#396ptD.0 => D#397ptD.0
  # DEBUG thisD.48780 => D#396ptD.0
  # DEBUG thisD.48772 => NULL
  # DEBUG D.48773 => NULL
  # DEBUG thisD.48770 => NULL
  # DEBUG D#312ptD.0 => D#398ptD.0
  # DEBUG thisD.48791 => D#311ptD.0
  # DEBUG __pD.48790 => D#312ptD.0
  # DEBUG thisD.48801 => NULL
  # DEBUG thisD.48789 => NULL
  # DEBUG thisD.53233 => D#411ptD.0
  # DEBUG __pD.53232 => __x_25
  # DEBUG thisD.48836 => D#412ptD.0
  # DEBUG D#409ptD.0 => 1
  # DEBUG __pD.53236 => __x_25
  # DEBUG __aD.53234 => D#408ptD.0
  # DEBUG __nD.53235 => D#409ptD.0
  # DEBUG D#407ptD.0 => D#409ptD.0
  # DEBUG D#406ptD.0 => D#408ptD.0
  # DEBUG D#404ptD.0 => D#406ptD.0
  # DEBUG D#405ptD.0 => D#407ptD.0
  # DEBUG __pD.53239 => __x_25
  # DEBUG thisD.53237 => D#404ptD.0
  # DEBUG D.53238 => D#405ptD.0
  # .MEM_22 = VDEF <.MEM_7>
  # USE = nonlocal { D.35916 } (nonlocal, escaped)
  # CLB = nonlocal { D.35916 } (nonlocal, escaped)
  _ZdlPvD.2766 (__x_25);
  # DEBUG __xD.53228 => __x_20
  # DEBUG __xD.53228 => __x_20
  if (__x_20 == 0B)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_22(5)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 1, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=2107, decl_uid=34863, cgraph_uid=777, symbol_order=778)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33797 * const thisD.34864, struct iteratorD.34508 __positionD.34865, size_typeD.34516 __nD.34866, const value_typeD.34503 & __xD.34867)
{
  const long unsigned intD.14 D.53280;
  const size_typeD.34516 __lenD.53274;
  size_typeD.34516 D.53279;
  size_typeD.34516 __nD.53272;
  intD.9 * D.53270;
  const ptrdiff_tD.2819 _NumD.53260;
  intD.9 * D.53261;
  intD.9 * const __positionD.50073;
  intD.9 * __firstD.50041;
  const ptrdiff_tD.2819 _NumD.50035;
  const ptrdiff_tD.2819 _NumD.49996;
  intD.9 * __firstD.49924;
  long unsigned intD.14 __nD.49925;
  intD.9 * __firstD.49875;
  const ptrdiff_tD.2819 _NumD.49871;
  intD.9 * __firstD.49824;
  intD.9 * __new_finishD.41063;
  const size_typeD.34516 __elems_afterD.41027;
  value_typeD.34503 __x_copyD.41026;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.39719 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.82_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.79_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#692ptD.0 => MEM[(struct __normal_iteratorD.34509 *)&__positionD.34865]
  # DEBUG __positionD.50073 => D#692ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(13), .MEM_54(23), .MEM_154(26)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.34509 *)&__positionD.34865];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.34940._M_implD.34431._M_end_of_storageD.34435;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.34940._M_implD.34431._M_finishD.34434;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.41026 => __x_copy_35
  # DEBUG thisD.49819 => this_4(D)
  # DEBUG D#118ptD.0 => &this_4(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.49821 => NULL
  # DEBUG __iD.49820 => D#118ptD.0
  # DEBUG __lhsD.49816 => &D.41028
  # DEBUG __rhsD.49817 => &__positionD.34865
  # DEBUG thisD.46068 => &D.41028
  # DEBUG thisD.46066 => &__positionD.34865
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.34516) _22;
  # DEBUG __elems_afterD.41027 => __elems_after_37
  # DEBUG __old_finishD.41035 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#474ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49873 => D#474ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.49838 => _41
  # DEBUG __lastD.49839 => __first_7
  # DEBUG __resultD.49840 => __first_7
  # DEBUG __allocD.49841 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#246ptD.0
  # DEBUG D#244ptD.0 => D#245ptD.0
  # DEBUG __firstD.49845 => _41
  # DEBUG __lastD.49844 => __first_7
  # DEBUG __resultD.49843 => __first_7
  # DEBUG D.49842 => D#244ptD.0
  # DEBUG __firstD.49848 => _41
  # DEBUG __lastD.49847 => __first_7
  # DEBUG __resultD.49846 => __first_7
  # DEBUG __assignableD.49851 => 1
  # DEBUG __firstD.49854 => _41
  # DEBUG __lastD.49853 => __first_7
  # DEBUG __resultD.49852 => __first_7
  # DEBUG __firstD.49857 => _41
  # DEBUG __lastD.49856 => __first_7
  # DEBUG __resultD.49855 => __first_7
  # DEBUG __itD.46707 => __first_7
  # DEBUG __itD.46059 => __first_7
  # DEBUG __itD.46705 => _41
  # DEBUG __itD.46059 => _41
  # DEBUG __firstD.49860 => _41
  # DEBUG __lastD.49859 => __first_7
  # DEBUG __resultD.49858 => __first_7
  # DEBUG __itD.46687 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.46685 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.46683 => _41
  # DEBUG __itD.46062 => _41
  # DEBUG __firstD.49863 => NULL
  # DEBUG __lastD.49862 => NULL
  # DEBUG __resultD.49861 => NULL
  # DEBUG __simpleD.49867 => 1
  # DEBUG __firstD.49870 => NULL
  # DEBUG __lastD.49869 => NULL
  # DEBUG __resultD.49868 => NULL
  __first.82_49 = (long intD.12) _41;
  _47 = _8 - __first.82_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.49871 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.34940._M_implD.34431._M_finishD.34434;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.34940._M_implD.34431._M_finishD.34434 = _43;
  # DEBUG thisD.49836 => &__positionD.34865
  # DEBUG __firstD.53244 => D#692ptD.0
  # DEBUG __lastD.53245 => _41
  # DEBUG __resultD.53246 => __first_7
  # DEBUG __itD.49813 => _41
  # DEBUG __itD.46059 => _41
  # DEBUG __itD.49811 => D#692ptD.0
  # DEBUG __itD.46059 => D#692ptD.0
  # DEBUG __firstD.53249 => D#692ptD.0
  # DEBUG __lastD.53248 => _41
  # DEBUG __resultD.53247 => __first_7
  # DEBUG __itD.49793 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.49791 => _41
  # DEBUG __itD.46062 => _41
  # DEBUG __itD.49789 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG __firstD.53252 => NULL
  # DEBUG __lastD.53251 => NULL
  # DEBUG __resultD.53250 => NULL
  # DEBUG __simpleD.53256 => 1
  # DEBUG __firstD.53259 => NULL
  # DEBUG __lastD.53258 => NULL
  # DEBUG __resultD.53257 => NULL
  _104 = __first.82_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.53260 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.49834 => &__positionD.34865
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.49832 => &__positionD.34865
  # DEBUG D#251ptD.0 => &__x_copyD.41026
  # DEBUG __firstD.49824 => D#692ptD.0
  # DEBUG __lastD.49825 => _48
  # DEBUG D#250ptD.0 => D#251ptD.0
  # DEBUG __valueD.49827 => D#250ptD.0
  # DEBUG __itD.46973 => _48
  # DEBUG __itD.46062 => _48
  # DEBUG __itD.46971 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG D#249ptD.0 => D#250ptD.0
  # DEBUG __firstD.49830 => NULL
  # DEBUG __lastD.49829 => NULL
  # DEBUG __valueD.49828 => D#249ptD.0
  # DEBUG __tmpD.49831 => __x_copy_35
  # DEBUG __firstD.49830 => D#692ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.49830 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.49830 => __position_55
  # DEBUG __firstD.49830 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#475ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49946 => D#475ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#376ptD.0 => &__x_copyD.41026
  # DEBUG __firstD.49924 => __first_7
  # DEBUG __nD.49925 => __n_50
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.49928 => D#375ptD.0
  # DEBUG D.49927 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.49931 => __first_7
  # DEBUG __nD.49930 => __n_50
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.49929 => D#373ptD.0
  # DEBUG __assignableD.49933 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.49936 => __first_7
  # DEBUG __nD.49935 => __n_50
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.49934 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.49939 => __first_7
  # DEBUG __nD.49938 => __n_50
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.49937 => D#307ptD.0
  # DEBUG __itD.47237 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.49942 => NULL
  # DEBUG __nD.49941 => __n_50
  # DEBUG __valueD.49940 => D#306ptD.0
  # DEBUG __tmpD.49943 => __x_copy_35
  # DEBUG __niterD.49944 => __n_50
  # DEBUG __niterD.49944 => __n_50
  # DEBUG __firstD.49942 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.49944 => __n_111
  # DEBUG __firstD.49942 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.49944 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.49942 => __first_64
  # DEBUG __niterD.49944 => __n_63
  # DEBUG __firstD.49942 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(18), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(18), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.34940._M_implD.34431._M_finishD.34434 = __first_125;
  # DEBUG D#476ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49922 => D#476ptD.0
  # DEBUG thisD.49920 => &__positionD.34865
  # DEBUG __firstD.49885 => D#692ptD.0
  # DEBUG __lastD.49886 => __first_7
  # DEBUG __resultD.49887 => __first_125
  # DEBUG __allocD.49888 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#246ptD.0
  # DEBUG D#244ptD.0 => D#245ptD.0
  # DEBUG __firstD.49892 => D#692ptD.0
  # DEBUG __lastD.49891 => __first_7
  # DEBUG __resultD.49890 => __first_125
  # DEBUG D.49889 => D#244ptD.0
  # DEBUG __firstD.49895 => D#692ptD.0
  # DEBUG __lastD.49894 => __first_7
  # DEBUG __resultD.49893 => __first_125
  # DEBUG __assignableD.49898 => 1
  # DEBUG __firstD.49901 => D#692ptD.0
  # DEBUG __lastD.49900 => __first_7
  # DEBUG __resultD.49899 => __first_125
  # DEBUG __firstD.49904 => D#692ptD.0
  # DEBUG __lastD.49903 => __first_7
  # DEBUG __resultD.49902 => __first_125
  # DEBUG __itD.46707 => __first_7
  # DEBUG __itD.46059 => __first_7
  # DEBUG __itD.46705 => D#692ptD.0
  # DEBUG __itD.46059 => D#692ptD.0
  # DEBUG __firstD.49907 => D#692ptD.0
  # DEBUG __lastD.49906 => __first_7
  # DEBUG __resultD.49905 => __first_125
  # DEBUG __itD.46687 => __first_125
  # DEBUG __itD.46062 => __first_125
  # DEBUG __itD.46685 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.46683 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG __firstD.49910 => NULL
  # DEBUG __lastD.49909 => NULL
  # DEBUG __resultD.49908 => NULL
  # DEBUG __simpleD.49914 => 1
  # DEBUG __firstD.49917 => NULL
  # DEBUG __lastD.49916 => NULL
  # DEBUG __resultD.49915 => NULL
  # DEBUG _NumD.49918 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.34940._M_implD.34431._M_finishD.34434;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.34940._M_implD.34431._M_finishD.34434 = _53;
  # DEBUG thisD.49883 => &__positionD.34865
  # DEBUG D#251ptD.0 => &__x_copyD.41026
  # DEBUG __firstD.49875 => D#692ptD.0
  # DEBUG __lastD.49876 => __first_7
  # DEBUG D#250ptD.0 => D#251ptD.0
  # DEBUG __valueD.49878 => D#250ptD.0
  # DEBUG __itD.46973 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.46971 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG D#249ptD.0 => D#250ptD.0
  # DEBUG __firstD.49881 => NULL
  # DEBUG __lastD.49880 => NULL
  # DEBUG __valueD.49879 => D#249ptD.0
  # DEBUG __tmpD.49882 => __x_copy_35
  # DEBUG __firstD.49881 => D#692ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.49881 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.49881 => __position_58
  # DEBUG __firstD.49881 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53271 => this_4(D)
  # DEBUG __nD.53272 => __n_2(D)
  # DEBUG __nD.53272 => __n_2(D)
  # DEBUG __sD.53273 => "vector::_M_fill_insert"
  # DEBUG D#395ptD.0 => this_4(D)
  # DEBUG thisD.48744 => D#395ptD.0
  # DEBUG D#394ptD.0 => D#395ptD.0
  # DEBUG D#393ptD.0 => &D#394ptD.0->D.34940
  # DEBUG thisD.48734 => D#393ptD.0
  # DEBUG __aD.48726 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#338ptD.0 => D#391ptD.0
  # DEBUG thisD.48717 => D#338ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG thisD.53277 => D#99ptD.0
  # DEBUG thisD.53278 => D#99ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG thisD.48762 => D#99ptD.0
  # DEBUG thisD.48761 => D#99ptD.0
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG thisD.48757 => D#99ptD.0
  # DEBUG thisD.48756 => D#99ptD.0
  # DEBUG __aD.53276 => &D.53280
  # DEBUG __bD.53275 => &__nD.53272
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.53274 => __len_124
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG thisD.48749 => D#99ptD.0
  # DEBUG thisD.48748 => D#99ptD.0
  # DEBUG D#395ptD.0 => this_4(D)
  # DEBUG thisD.48764 => D#395ptD.0
  # DEBUG D#394ptD.0 => D#395ptD.0
  # DEBUG D#393ptD.0 => &D#394ptD.0->D.34940
  # DEBUG thisD.48734 => D#393ptD.0
  # DEBUG __aD.48726 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#338ptD.0 => D#391ptD.0
  # DEBUG thisD.48717 => D#338ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.41059 => NULL
  # DEBUG thisD.50068 => this_4(D)
  # DEBUG D#119ptD.0 => &this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.50070 => NULL
  # DEBUG __iD.50069 => D#119ptD.0
  # DEBUG __lhsD.50065 => &__positionD.34865
  # DEBUG __rhsD.50066 => &D.41061
  # DEBUG thisD.46068 => &__positionD.34865
  # DEBUG thisD.46066 => &D.41061
  # DEBUG D#487ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.41060 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_4(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.53262 => NULL
  # DEBUG thisD.53263 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.53266 => NULL
  # DEBUG __aD.53265 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.53269 => NULL
  # DEBUG thisD.53267 => D#340ptD.0
  # DEBUG D.53268 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.53283 } (escaped heap)
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.34940._M_implD.34431._M_startD.34433;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.34940._M_implD.34431._M_finishD.34434;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.53283 } (escaped heap)
  # iftmp.79_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.53283 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
  # DEBUG __new_startD.41062 => NULL
  # DEBUG __new_finishD.41063 => NULL
  # DEBUG D#470ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.50063 => D#470ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.53283 } (escaped heap)
  __first_20 = iftmp.79_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#376ptD.0 => __x_21(D)
  # DEBUG __firstD.50041 => __first_20
  # DEBUG __nD.50042 => __n_2(D)
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.50045 => D#375ptD.0
  # DEBUG D.50044 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.50048 => __first_20
  # DEBUG __nD.50047 => __n_2(D)
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.50046 => D#373ptD.0
  # DEBUG __assignableD.50050 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.50053 => __first_20
  # DEBUG __nD.50052 => __n_2(D)
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.50051 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.50056 => __first_20
  # DEBUG __nD.50055 => __n_2(D)
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.50054 => D#307ptD.0
  # DEBUG __itD.47237 => __first_20
  # DEBUG __itD.46062 => __first_20
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.50059 => NULL
  # DEBUG __nD.50058 => __n_2(D)
  # DEBUG __valueD.50057 => D#306ptD.0
  # DEBUG __tmpD.50060 => _56
  # DEBUG __niterD.50061 => __n_2(D)
  # DEBUG __niterD.50061 => __n_2(D)
  # DEBUG __firstD.50059 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(33)>
  # PT = null { D.53283 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(33)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(33)>
  # DEBUG __niterD.50061 => __n_132
  # DEBUG __firstD.50059 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.50061 => __n_79
  # PT = null { D.53283 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.50059 => __first_80
  # DEBUG __niterD.50061 => __n_79
  # DEBUG __firstD.50059 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.41063 => 0B
  # DEBUG D#471ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.50039 => D#471ptD.0
  # DEBUG thisD.50037 => &__positionD.34865
  # DEBUG D#691ptD.0 => this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.50002 => D#691ptD.0
  # DEBUG __lastD.50003 => D#692ptD.0
  # DEBUG __resultD.50004 => NULL
  # DEBUG __allocD.50005 => D#248ptD.0
  # DEBUG D#247ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#247ptD.0
  # DEBUG __firstD.50009 => D#691ptD.0
  # DEBUG __lastD.50008 => D#692ptD.0
  # DEBUG __resultD.50007 => NULL
  # DEBUG D.50006 => D#244ptD.0
  # DEBUG __firstD.50012 => D#691ptD.0
  # DEBUG __lastD.50011 => D#692ptD.0
  # DEBUG __resultD.50010 => NULL
  # DEBUG __assignableD.50015 => 1
  # DEBUG __firstD.50018 => D#691ptD.0
  # DEBUG __lastD.50017 => D#692ptD.0
  # DEBUG __resultD.50016 => NULL
  # DEBUG __firstD.50021 => D#691ptD.0
  # DEBUG __lastD.50020 => D#692ptD.0
  # DEBUG __resultD.50019 => NULL
  # DEBUG __itD.46707 => D#692ptD.0
  # DEBUG __itD.46059 => D#692ptD.0
  # DEBUG __itD.46705 => D#691ptD.0
  # DEBUG __itD.46059 => D#691ptD.0
  # DEBUG __firstD.50024 => D#691ptD.0
  # DEBUG __lastD.50023 => D#692ptD.0
  # DEBUG __resultD.50022 => NULL
  # DEBUG __itD.46687 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.46685 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG __itD.46683 => D#691ptD.0
  # DEBUG __itD.46062 => D#691ptD.0
  # DEBUG __firstD.50027 => NULL
  # DEBUG __lastD.50026 => NULL
  # DEBUG __resultD.50025 => NULL
  # DEBUG __simpleD.50031 => 1
  # DEBUG __firstD.50034 => NULL
  # DEBUG __lastD.50033 => NULL
  # DEBUG __resultD.50032 => NULL
  # DEBUG D#690ptD.0 => (long intD.12) D#691ptD.0
  # DEBUG D#689ptD.0 => _158 - D#690ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.50035 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memmoveD.995 (iftmp.79_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#688ptD.0 => (long unsigned intD.14) D#689ptD.0
  # DEBUG __new_finishD.41063 => iftmp.79_113 + D#688ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.53283 } (escaped heap)
  __new_finish_26 = iftmp.79_113 + _133;
  # DEBUG __new_finishD.41063 => __new_finish_26
  # DEBUG D#472ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.50000 => D#472ptD.0
  # DEBUG D#687ptD.0 => this_4(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.49998 => &__positionD.34865
  # DEBUG __firstD.49963 => D#692ptD.0
  # DEBUG __lastD.49964 => D#687ptD.0
  # DEBUG __resultD.49965 => __new_finish_26
  # DEBUG __allocD.49966 => D#248ptD.0
  # DEBUG D#247ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#247ptD.0
  # DEBUG __firstD.49970 => D#692ptD.0
  # DEBUG __lastD.49969 => D#687ptD.0
  # DEBUG __resultD.49968 => __new_finish_26
  # DEBUG D.49967 => D#244ptD.0
  # DEBUG __firstD.49973 => D#692ptD.0
  # DEBUG __lastD.49972 => D#687ptD.0
  # DEBUG __resultD.49971 => __new_finish_26
  # DEBUG __assignableD.49976 => 1
  # DEBUG __firstD.49979 => D#692ptD.0
  # DEBUG __lastD.49978 => D#687ptD.0
  # DEBUG __resultD.49977 => __new_finish_26
  # DEBUG __firstD.49982 => D#692ptD.0
  # DEBUG __lastD.49981 => D#687ptD.0
  # DEBUG __resultD.49980 => __new_finish_26
  # DEBUG __itD.46707 => D#687ptD.0
  # DEBUG __itD.46059 => D#687ptD.0
  # DEBUG __itD.46705 => D#692ptD.0
  # DEBUG __itD.46059 => D#692ptD.0
  # DEBUG __firstD.49985 => D#692ptD.0
  # DEBUG __lastD.49984 => D#687ptD.0
  # DEBUG __resultD.49983 => __new_finish_26
  # DEBUG __itD.46687 => __new_finish_26
  # DEBUG __itD.46062 => __new_finish_26
  # DEBUG __itD.46685 => D#687ptD.0
  # DEBUG __itD.46062 => D#687ptD.0
  # DEBUG __itD.46683 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG __firstD.49988 => NULL
  # DEBUG __lastD.49987 => NULL
  # DEBUG __resultD.49986 => NULL
  # DEBUG __simpleD.49992 => 1
  # DEBUG __firstD.49995 => NULL
  # DEBUG __lastD.49994 => NULL
  # DEBUG __resultD.49993 => NULL
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.49996 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.53283 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.41063 => _70
  # DEBUG D#473ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49961 => D#473ptD.0
  # DEBUG D#485ptD.0 => this_4(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#484ptD.0 => this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.49958 => D#484ptD.0
  # DEBUG __lastD.49959 => D#485ptD.0
  # DEBUG D.49960 => NULL
  # DEBUG D#140ptD.0 => D#484ptD.0
  # DEBUG D#141ptD.0 => D#485ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#483ptD.0 => this_4(D)->D.34940._M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#482ptD.0 => (long intD.12) D#483ptD.0
  # DEBUG D#481ptD.0 => (long intD.12) D#691ptD.0
  # DEBUG D#480ptD.0 => D#482ptD.0 - D#481ptD.0
  # DEBUG D#479ptD.0 => D#480ptD.0 /[ex] 4
  # DEBUG D#478ptD.0 => (long unsigned intD.14) D#479ptD.0
  # DEBUG D#477ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49948 => D#477ptD.0
  # DEBUG __pD.49949 => D#691ptD.0
  # DEBUG __nD.49950 => D#478ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#477ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#478ptD.0
  # DEBUG __pD.49954 => D#691ptD.0
  # DEBUG __aD.49952 => D#157ptD.0
  # DEBUG __nD.49953 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.49957 => D#691ptD.0
  # DEBUG thisD.49955 => D#153ptD.0
  # DEBUG D.49956 => D#154ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.34940._M_implD.34431._M_startD.34433 = iftmp.79_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.34940._M_implD.34431._M_finishD.34434 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.34940._M_implD.34431._M_end_of_storageD.34435 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(3), .MEM_34(44)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.41059 => NULL
  # DEBUG thisD.50068 => this_4(D)
  # DEBUG D#119ptD.0 => &this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.50070 => NULL
  # DEBUG __iD.50069 => D#119ptD.0
  # DEBUG __lhsD.50065 => &__positionD.34865
  # DEBUG __rhsD.50066 => &D.41061
  # DEBUG thisD.46068 => &__positionD.34865
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.46066 => &D.41061
  _143 = _144 - _116;
  # DEBUG D#487ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.41060 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_4(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.53262 => NULL
  # DEBUG thisD.53263 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.41059 => NULL
  # DEBUG thisD.50068 => this_4(D)
  # DEBUG D#119ptD.0 => &this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.50070 => NULL
  # DEBUG __iD.50069 => D#119ptD.0
  # DEBUG __lhsD.50065 => &__positionD.34865
  # DEBUG __rhsD.50066 => &D.41061
  # DEBUG thisD.46068 => &__positionD.34865
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.46066 => &D.41061
  _150 = _151 - _116;
  # DEBUG D#487ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.41060 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_4(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.53262 => NULL
  # DEBUG thisD.53263 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for this_4(D)->D.34940._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__x_21(D)
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__x_21(D)
Creating dr for this_4(D)->D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for MEM[(int * *)this_4(D)]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D)]
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for MEM[(const int &)__x_21(D)]
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const int &)__x_21(D)]
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.79_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.79_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.79_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.79_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.79_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.79_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.79_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.79_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.79_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.34940._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.34940._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:18)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:39)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:56, LOOPS:4, CONDITIONS:19, STMTS:600)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#692 => MEM[(struct __normal_iterator *)&__position]
    # DEBUG __position => D#692
    if (__n_2(D) != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_10 bb_48 bb_23 bb_49 }, succs = {bb_55 })
  {
    <bb 3>:
    # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>

  }
  bb_55 (preds = {bb_3 }, succs = {bb_45 })
  {
    <bb 55>:
    goto <bb 45>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_28 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    __position_16 = MEM[(struct __normal_iterator *)&__position];
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.34940._M_impl._M_end_of_storage;
    _6 = (long int) _5;
    # VUSE <.MEM_3(D)>
    __first_7 = this_4(D)->D.34940._M_impl._M_finish;
    _8 = (long int) __first_7;
    _9 = _6 - _8;
    _10 = _9 /[ex] 4;
    _11 = (long unsigned int) _10;
    if (__n_2(D) <= _11)
      goto <bb 5>;
    else
      goto <bb 28>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_15 })
  {
    <bb 5>:
    # VUSE <.MEM_3(D)>
    __x_copy_35 = *__x_21(D);
    # DEBUG __x_copy => __x_copy_35
    # DEBUG this => this_4(D)
    # DEBUG D#118 => &this_4(D)->D.34940._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#118
    # DEBUG __lhs => &D.41028
    # DEBUG __rhs => &__position
    # DEBUG this => &D.41028
    # DEBUG this => &__position
    _27 = (long int) __position_16;
    _23 = _8 - _27;
    _22 = _23 /[ex] 4;
    __elems_after_37 = (const size_type) _22;
    # DEBUG __elems_after => __elems_after_37
    # DEBUG __old_finish => __first_7
    if (__n_2(D) < __elems_after_37)
      goto <bb 6>;
    else
      goto <bb 15>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#474 => &this_4(D)->D.34940
    # DEBUG this => D#474
    _39 = __n_2(D) * 4;
    _40 = -_39;
    _41 = __first_7 + _40;
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __alloc => D#246
    # DEBUG D#245 => D#246
    # DEBUG D#244 => D#245
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG D.49842 => D#244
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __assignable => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    __first.82_49 = (long int) _41;
    _47 = _8 - __first.82_49;
    _Num_45 = _47 /[ex] 4;
    # DEBUG _Num => _Num_45
    if (_Num_45 != 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _38 = (long unsigned int) _47;
    # .MEM_97 = VDEF <.MEM_3(D)>
    __builtin_memmove (__first_7, _41, _38);
    # VUSE <.MEM_97>
    pretmp_173 = this_4(D)->D.34940._M_impl._M_finish;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
    # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
    _43 = prephitmp_174 + _39;
    # .MEM_44 = VDEF <.MEM_14>
    this_4(D)->D.34940._M_impl._M_finish = _43;
    # DEBUG this => &__position
    # DEBUG __first => D#692
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG __first => D#692
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    _104 = __first.82_49 - _27;
    _Num_105 = _104 /[ex] 4;
    # DEBUG _Num => _Num_105
    if (_Num_105 != 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    _106 = (long unsigned int) _104;
    _107 = -_106;
    _108 = __first_7 + _107;
    # .MEM_135 = VDEF <.MEM_44>
    __builtin_memmove (_108, __position_16, _106);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_3 bb_11 })
  {
    <bb 10>:
    # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
    # DEBUG this => &__position
    _48 = __position_16 + _39;
    # DEBUG this => &__position
    # DEBUG D#251 => &__x_copy
    # DEBUG __first => D#692
    # DEBUG __last => _48
    # DEBUG D#250 => D#251
    # DEBUG __value => D#250
    # DEBUG __it => _48
    # DEBUG __it => _48
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG D#249 => D#250
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __value => D#249
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#692
    if (__position_16 == _48)
      goto <bb 3>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_13 (preds = {bb_12 }, succs = {bb_48 })
  {
    <bb 13>:
    # .MEM_13 = PHI <.MEM_98(12)>

  }
  bb_48 (preds = {bb_13 }, succs = {bb_3 })
  {
    <bb 48>:
    goto <bb 3>;

  }
  bb_15 (preds = {bb_5 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # DEBUG D#475 => &this_4(D)->D.34940
    # DEBUG this => D#475
    __n_50 = __n_2(D) - __elems_after_37;
    # DEBUG D#376 => &__x_copy
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#375 => D#376
    # DEBUG __x => D#375
    # DEBUG D.49927 => D#377
    # DEBUG D#374 => D#375
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#373 => D#374
    # DEBUG __x => D#373
    # DEBUG __assignable => 1
    # DEBUG D#372 => D#373
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#371 => D#372
    # DEBUG __x => D#371
    # DEBUG D#308 => D#371
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#307 => D#308
    # DEBUG __value => D#307
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG D#306 => D#307
    # DEBUG __first => NULL
    # DEBUG __n => __n_50
    # DEBUG __value => D#306
    # DEBUG __tmp => __x_copy_35
    # DEBUG __niter => __n_50
    # DEBUG __niter => __n_50
    # DEBUG __first => __first_7
    if (__n_50 == 0)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
    <bb 18>:

  }
  bb_50 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 50>:
    _160 = __n_50 * 4;
    __first_123 = __first_7 + _160;
    goto <bb 20>;

  }
  bb_20 (preds = {bb_50 bb_15 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # __first_125 = PHI <__first_123(50), __first_7(15)>
    # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
    # .MEM_51 = VDEF <.MEM_84>
    this_4(D)->D.34940._M_impl._M_finish = __first_125;
    # DEBUG D#476 => &this_4(D)->D.34940
    # DEBUG this => D#476
    # DEBUG this => &__position
    # DEBUG __first => D#692
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#246
    # DEBUG D#245 => D#246
    # DEBUG D#244 => D#245
    # DEBUG __first => D#692
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG D.49889 => D#244
    # DEBUG __first => D#692
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => D#692
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __first => D#692
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG __first => D#692
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG _Num => _22
    if (_22 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_168 = (long unsigned int) _23;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _59 = (long unsigned int) _23;
    # .MEM_100 = VDEF <.MEM_51>
    __builtin_memmove (__first_125, __position_16, _59);
    # VUSE <.MEM_100>
    pretmp_166 = this_4(D)->D.34940._M_impl._M_finish;

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_3 bb_24 })
  {
    <bb 23>:
    # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
    # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
    # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
    _53 = prephitmp_167 + prephitmp_169;
    # .MEM_54 = VDEF <.MEM_87>
    this_4(D)->D.34940._M_impl._M_finish = _53;
    # DEBUG this => &__position
    # DEBUG D#251 => &__x_copy
    # DEBUG __first => D#692
    # DEBUG __last => __first_7
    # DEBUG D#250 => D#251
    # DEBUG __value => D#250
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG D#249 => D#250
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __value => D#249
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#692
    if (__first_7 == __position_16)
      goto <bb 3>;
    else
      goto <bb 24>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:

  }
  bb_26 (preds = {bb_25 }, succs = {bb_49 })
  {
    <bb 26>:
    # .MEM_154 = PHI <.MEM_101(25)>

  }
  bb_49 (preds = {bb_26 }, succs = {bb_3 })
  {
    <bb 49>:
    goto <bb 3>;

  }
  bb_28 (preds = {bb_4 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG this => this_4(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#395 => this_4(D)
    # DEBUG this => D#395
    # DEBUG D#394 => D#395
    # DEBUG D#393 => &D#394->D.34940
    # DEBUG this => D#393
    # DEBUG __a => D#392
    # DEBUG D#391 => D#392
    # DEBUG D#338 => D#391
    # DEBUG this => D#338
    # VUSE <.MEM_3(D)>
    _17 = MEM[(int * *)this_4(D)];
    # DEBUG D#99 => this_4(D)
    # DEBUG D#99 => this_4(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    _116 = (long int) _17;
    _117 = _8 - _116;
    _118 = _117 /[ex] 4;
    _119 = (const long unsigned int) _118;
    _120 = 4611686018427387903 - _119;
    if (__n_2(D) > _120)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_134 = VDEF <.MEM_3(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_30 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
    <bb 30>:
    # DEBUG D#99 => this_4(D)
    # DEBUG D#99 => this_4(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    # DEBUG D#99 => this_4(D)
    # DEBUG D#99 => this_4(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    # DEBUG __a => &D.53280
    # DEBUG __b => &__n
    _77 = MAX_EXPR <__n_2(D), _119>;
    __len_124 = _77 + _119;
    # DEBUG __len => __len_124
    # DEBUG D#99 => this_4(D)
    # DEBUG D#99 => this_4(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    # DEBUG D#395 => this_4(D)
    # DEBUG this => D#395
    # DEBUG D#394 => D#395
    # DEBUG D#393 => &D#394->D.34940
    # DEBUG this => D#393
    # DEBUG __a => D#392
    # DEBUG D#391 => D#392
    # DEBUG D#338 => D#391
    # DEBUG this => D#338
    _152 = __len_124 > 4611686018427387903;
    _142 = _119 > __len_124;
    _114 = _142 | _152;
    if (_114 != 0)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_31 (preds = {bb_47 }, succs = {bb_32 })
  {
    <bb 31>:
    pretmp_164 = __len_124 * 4;

  }
  bb_32 (preds = {bb_46 bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # _156 = PHI <_144(46), _151(31)>
    # _157 = PHI <_143(46), _150(31)>
    # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#119 => &this_4(D)->D.34940._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#119
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.41061
    # DEBUG this => &__position
    # DEBUG this => &D.41061
    # DEBUG D#487 => _157 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#487
    # DEBUG D#486 => &this_4(D)->D.34940
    # DEBUG D#346 => D#486
    # DEBUG __n => NULL
    # DEBUG this => D#346
    # DEBUG D#345 => D#346
    # DEBUG D#344 => &D#345->_M_impl
    # DEBUG D#343 => D#344
    # DEBUG __n => NULL
    # DEBUG __a => D#343
    # DEBUG D#342 => D#343
    # DEBUG D#340 => D#342
    # DEBUG D#341 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#340
    # DEBUG D.53268 => D#341
    # DEBUG D#339 => D#340
    # DEBUG D#338 => D#339
    # DEBUG this => D#338
    # .MEM_131 = VDEF <.MEM_3(D)>
    _112 = operator new (prephitmp_165);
    # VUSE <.MEM_131>
    pretmp_29 = this_4(D)->D.34940._M_impl._M_start;
    # VUSE <.MEM_131>
    pretmp_147 = this_4(D)->D.34940._M_impl._M_finish;
    pretmp_149 = _112 + prephitmp_165;
    pretmp_145 = (long int) pretmp_147;
    pretmp_138 = (long int) pretmp_29;
    pretmp_140 = _156 - pretmp_138;

  }
  bb_33 (preds = {bb_47 bb_32 }, succs = {bb_52 })
  {
    <bb 33>:
    # iftmp.79_113 = PHI <0B(47), _112(32)>
    # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
    # _158 = PHI <_151(47), _156(32)>
    # _153 = PHI <_150(47), _157(32)>
    # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
    # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
    # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
    # prephitmp_137 = PHI <_150(47), pretmp_140(32)>

  }
  bb_52 (preds = {bb_33 }, succs = {bb_34 })
  {
    <bb 52>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#470 => &this_4(D)->D.34940
    # DEBUG this => D#470
    _19 = (long unsigned int) _153;
    __first_20 = iftmp.79_113 + _19;
    # VUSE <.MEM_126>
    _56 = MEM[(const int &)__x_21(D)];
    # DEBUG D#376 => __x_21(D)
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#375 => D#376
    # DEBUG __x => D#375
    # DEBUG D.50044 => D#377
    # DEBUG D#374 => D#375
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#373 => D#374
    # DEBUG __x => D#373
    # DEBUG __assignable => 1
    # DEBUG D#372 => D#373
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#371 => D#372
    # DEBUG __x => D#371
    # DEBUG D#308 => D#371
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#307 => D#308
    # DEBUG __value => D#307
    # DEBUG __it => __first_20
    # DEBUG __it => __first_20
    # DEBUG D#306 => D#307
    # DEBUG __first => NULL
    # DEBUG __n => __n_2(D)
    # DEBUG __value => D#306
    # DEBUG __tmp => _56
    # DEBUG __niter => __n_2(D)
    # DEBUG __niter => __n_2(D)
    # DEBUG __first => __first_20

  }
  bb_36 (preds = {bb_34 }, succs = {bb_51 })
  {
    <bb 36>:

  }
  bb_51 (preds = {bb_36 }, succs = {bb_38 bb_37 })
  {
    <bb 51>:
    # DEBUG __new_finish => 0B
    # DEBUG D#471 => &this_4(D)->D.34940
    # DEBUG this => D#471
    # DEBUG this => &__position
    # DEBUG D#691 => this_4(D)->D.34940._M_impl._M_start
    # DEBUG __first => D#691
    # DEBUG __last => D#692
    # DEBUG __result => NULL
    # DEBUG __alloc => D#248
    # DEBUG D#247 => D#248
    # DEBUG D#244 => D#247
    # DEBUG __first => D#691
    # DEBUG __last => D#692
    # DEBUG __result => NULL
    # DEBUG D.50006 => D#244
    # DEBUG __first => D#691
    # DEBUG __last => D#692
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#691
    # DEBUG __last => D#692
    # DEBUG __result => NULL
    # DEBUG __first => D#691
    # DEBUG __last => D#692
    # DEBUG __result => NULL
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG __it => D#691
    # DEBUG __it => D#691
    # DEBUG __first => D#691
    # DEBUG __last => D#692
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG __it => D#691
    # DEBUG __it => D#691
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG D#690 => (long int) D#691
    # DEBUG D#689 => _158 - D#690
    _Num_73 = prephitmp_137 /[ex] 4;
    # DEBUG _Num => _Num_73
    if (_Num_73 != 0)
      goto <bb 38>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 37>:
    pretmp_103 = (long unsigned int) prephitmp_137;
    goto <bb 39>;

  }
  bb_38 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 38>:
    _74 = (long unsigned int) prephitmp_137;
    # .MEM_94 = VDEF <.MEM_93>
    __builtin_memmove (iftmp.79_113, prephitmp_146, _74);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_41 bb_40 })
  {
    <bb 39>:
    # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
    # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
    # DEBUG D#688 => (long unsigned int) D#689
    # DEBUG __new_finish => iftmp.79_113 + D#688
    _25 = __n_2(D) * 4;
    _133 = _25 + prephitmp_102;
    __new_finish_26 = iftmp.79_113 + _133;
    # DEBUG __new_finish => __new_finish_26
    # DEBUG D#472 => &this_4(D)->D.34940
    # DEBUG this => D#472
    # DEBUG D#687 => this_4(D)->D.34940._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => D#692
    # DEBUG __last => D#687
    # DEBUG __result => __new_finish_26
    # DEBUG __alloc => D#248
    # DEBUG D#247 => D#248
    # DEBUG D#244 => D#247
    # DEBUG __first => D#692
    # DEBUG __last => D#687
    # DEBUG __result => __new_finish_26
    # DEBUG D.49967 => D#244
    # DEBUG __first => D#692
    # DEBUG __last => D#687
    # DEBUG __result => __new_finish_26
    # DEBUG __assignable => 1
    # DEBUG __first => D#692
    # DEBUG __last => D#687
    # DEBUG __result => __new_finish_26
    # DEBUG __first => D#692
    # DEBUG __last => D#687
    # DEBUG __result => __new_finish_26
    # DEBUG __it => D#687
    # DEBUG __it => D#687
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG __first => D#692
    # DEBUG __last => D#687
    # DEBUG __result => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => D#687
    # DEBUG __it => D#687
    # DEBUG __it => D#692
    # DEBUG __it => D#692
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    _66 = prephitmp_121 - _158;
    _Num_67 = _66 /[ex] 4;
    # DEBUG _Num => _Num_67
    if (_Num_67 != 0)
      goto <bb 41>;
    else
      goto <bb 40>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    pretmp_162 = (long unsigned int) _66;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 41>:
    _68 = (long unsigned int) _66;
    # .MEM_95 = VDEF <.MEM_90>
    __builtin_memcpy (__new_finish_26, __position_16, _68);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
    # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
    _70 = __new_finish_26 + prephitmp_163;
    # DEBUG __new_finish => _70
    # DEBUG D#473 => &this_4(D)->D.34940
    # DEBUG this => D#473
    # DEBUG D#485 => this_4(D)->D.34940._M_impl._M_finish
    # DEBUG D#484 => this_4(D)->D.34940._M_impl._M_start
    # DEBUG __first => D#484
    # DEBUG __last => D#485
    # DEBUG D.49960 => NULL
    # DEBUG D#140 => D#484
    # DEBUG D#141 => D#485
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # DEBUG D#483 => this_4(D)->D.34940._M_impl._M_end_of_storage
    # DEBUG D#482 => (long int) D#483
    # DEBUG D#481 => (long int) D#691
    # DEBUG D#480 => D#482 - D#481
    # DEBUG D#479 => D#480 /[ex] 4
    # DEBUG D#478 => (long unsigned int) D#479
    # DEBUG D#477 => &this_4(D)->D.34940
    # DEBUG this => D#477
    # DEBUG __p => D#691
    # DEBUG __n => D#478
    if (prephitmp_146 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#159 => &D#477->_M_impl
    # DEBUG D#157 => D#159
    # DEBUG D#158 => D#478
    # DEBUG __p => D#691
    # DEBUG __a => D#157
    # DEBUG __n => D#158
    # DEBUG D#156 => D#158
    # DEBUG D#155 => D#157
    # DEBUG D#153 => D#155
    # DEBUG D#154 => D#156
    # DEBUG __p => D#691
    # DEBUG this => D#153
    # DEBUG D.49956 => D#154
    # .MEM_96 = VDEF <.MEM_91>
    operator delete (prephitmp_146);

  }
  bb_44 (preds = {bb_43 bb_42 }, succs = {bb_53 })
  {
    <bb 44>:
    # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>

  }
  bb_53 (preds = {bb_44 }, succs = {bb_45 })
  {
    <bb 53>:
    # .MEM_30 = VDEF <.MEM_92>
    this_4(D)->D.34940._M_impl._M_start = iftmp.79_113;
    # .MEM_31 = VDEF <.MEM_30>
    this_4(D)->D.34940._M_impl._M_finish = _70;
    # .MEM_34 = VDEF <.MEM_31>
    this_4(D)->D.34940._M_impl._M_end_of_storage = prephitmp_148;

  }
  bb_45 (preds = {bb_55 bb_53 }, succs = {bb_54 })
  {
    <bb 45>:
    # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>

  }
  bb_54 (preds = {bb_45 }, succs = {bb_1 })
  {
    <bb 54>:
    # VUSE <.MEM_1>
    return;

  }
  bb_46 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 46>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#119 => &this_4(D)->D.34940._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#119
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.41061
    # DEBUG this => &__position
    _144 = (long int) __position_16;
    # DEBUG this => &D.41061
    _143 = _144 - _116;
    # DEBUG D#487 => _143 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#487
    # DEBUG D#486 => &this_4(D)->D.34940
    # DEBUG D#346 => D#486
    # DEBUG __n => NULL
    # DEBUG this => D#346
    # DEBUG D#345 => D#346
    goto <bb 32>;

  }
  bb_47 (preds = {bb_30 }, succs = {bb_31 bb_33 })
  {
    <bb 47>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#119 => &this_4(D)->D.34940._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#119
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.41061
    # DEBUG this => &__position
    _151 = (long int) __position_16;
    # DEBUG this => &D.41061
    _150 = _151 - _116;
    # DEBUG D#487 => _150 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#487
    # DEBUG D#486 => &this_4(D)->D.34940
    # DEBUG D#346 => D#486
    # DEBUG __n => NULL
    # DEBUG this => D#346
    # DEBUG D#345 => D#346
    if (__len_124 != 0)
      goto <bb 31>;
    else
      goto <bb 33>;

  }
  loop_1 (header = 12, latch = 14, niter = ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_12 (preds = {bb_11 bb_14 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __position_109 = PHI <__position_16(11), __position_55(14)>
      # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
      # DEBUG __first => __position_109
      # .MEM_98 = VDEF <.MEM_83>
      *__position_109 = __x_copy_35;
      __position_55 = __position_109 + 4;
      # DEBUG __first => __position_55
      # DEBUG __first => __position_55
      if (_48 == __position_55)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_12 }, succs = {bb_12 })
    {
      <bb 14>:
      goto <bb 12>;

    }
  }
  loop_2 (header = 25, latch = 27, niter = ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_25 (preds = {bb_24 bb_27 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # __position_110 = PHI <__position_16(24), __position_58(27)>
      # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
      # DEBUG __first => __position_110
      # .MEM_101 = VDEF <.MEM_136>
      *__position_110 = __x_copy_35;
      __position_58 = __position_110 + 4;
      # DEBUG __first => __position_58
      # DEBUG __first => __position_58
      if (__first_7 == __position_58)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_25 }, succs = {bb_25 })
    {
      <bb 27>:
      goto <bb 25>;

    }
  }
  loop_3 (header = 17, latch = 19, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_17 (preds = {bb_16 bb_19 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # __n_111 = PHI <__n_50(16), __n_63(19)>
      # __first_76 = PHI <__first_7(16), __first_64(19)>
      # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
      # DEBUG __niter => __n_111
      # DEBUG __first => __first_76
      # .MEM_99 = VDEF <.MEM_81>
      *__first_76 = __x_copy_35;
      __n_63 = __n_111 + 18446744073709551615;
      # DEBUG __niter => __n_63
      __first_64 = __first_76 + 4;
      # DEBUG __first => __first_64
      # DEBUG __niter => __n_63
      # DEBUG __first => __first_64
      if (__n_63 == 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 19>:
      goto <bb 17>;

    }
  }
  loop_4 (header = 34, latch = 35, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_34 (preds = {bb_35 bb_52 }, succs = {bb_36 bb_35 })
    {
      <bb 34>:
      # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
      # __first_155 = PHI <__first_80(35), __first_20(52)>
      # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
      # DEBUG __niter => __n_132
      # DEBUG __first => __first_155
      # .MEM_93 = VDEF <.MEM_130>
      *__first_155 = _56;
      __n_79 = __n_132 + 18446744073709551615;
      # DEBUG __niter => __n_79
      __first_80 = __first_155 + 4;
      # DEBUG __first => __first_80
      # DEBUG __niter => __n_79
      # DEBUG __first => __first_80
      if (__n_79 == 0)
        goto <bb 36>;
      else
        goto <bb 35>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_34 })
    {
      <bb 35>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.33797 * const thisD.34864, struct iteratorD.34508 __positionD.34865, size_typeD.34516 __nD.34866, const value_typeD.34503 & __xD.34867)
{
  const long unsigned intD.14 D.53280;
  const size_typeD.34516 __lenD.53274;
  size_typeD.34516 D.53279;
  size_typeD.34516 __nD.53272;
  intD.9 * D.53270;
  const ptrdiff_tD.2819 _NumD.53260;
  intD.9 * D.53261;
  intD.9 * const __positionD.50073;
  intD.9 * __firstD.50041;
  const ptrdiff_tD.2819 _NumD.50035;
  const ptrdiff_tD.2819 _NumD.49996;
  intD.9 * __firstD.49924;
  long unsigned intD.14 __nD.49925;
  intD.9 * __firstD.49875;
  const ptrdiff_tD.2819 _NumD.49871;
  intD.9 * __firstD.49824;
  intD.9 * __new_finishD.41063;
  const size_typeD.34516 __elems_afterD.41027;
  value_typeD.34503 __x_copyD.41026;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.39719 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.82_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.79_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#692ptD.0 => MEM[(struct __normal_iteratorD.34509 *)&__positionD.34865]
  # DEBUG __positionD.50073 => D#692ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 55, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 55, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.34509 *)&__positionD.34865];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.34940._M_implD.34431._M_end_of_storageD.34435;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.34940._M_implD.34431._M_finishD.34434;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.41026 => __x_copy_35
  # DEBUG thisD.49819 => this_4(D)
  # DEBUG D#118ptD.0 => &this_4(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.49821 => NULL
  # DEBUG __iD.49820 => D#118ptD.0
  # DEBUG __lhsD.49816 => &D.41028
  # DEBUG __rhsD.49817 => &__positionD.34865
  # DEBUG thisD.46068 => &D.41028
  # DEBUG thisD.46066 => &__positionD.34865
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.34516) _22;
  # DEBUG __elems_afterD.41027 => __elems_after_37
  # DEBUG __old_finishD.41035 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#474ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49873 => D#474ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.49838 => _41
  # DEBUG __lastD.49839 => __first_7
  # DEBUG __resultD.49840 => __first_7
  # DEBUG __allocD.49841 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#246ptD.0
  # DEBUG D#244ptD.0 => D#245ptD.0
  # DEBUG __firstD.49845 => _41
  # DEBUG __lastD.49844 => __first_7
  # DEBUG __resultD.49843 => __first_7
  # DEBUG D.49842 => D#244ptD.0
  # DEBUG __firstD.49848 => _41
  # DEBUG __lastD.49847 => __first_7
  # DEBUG __resultD.49846 => __first_7
  # DEBUG __assignableD.49851 => 1
  # DEBUG __firstD.49854 => _41
  # DEBUG __lastD.49853 => __first_7
  # DEBUG __resultD.49852 => __first_7
  # DEBUG __firstD.49857 => _41
  # DEBUG __lastD.49856 => __first_7
  # DEBUG __resultD.49855 => __first_7
  # DEBUG __itD.46707 => __first_7
  # DEBUG __itD.46059 => __first_7
  # DEBUG __itD.46705 => _41
  # DEBUG __itD.46059 => _41
  # DEBUG __firstD.49860 => _41
  # DEBUG __lastD.49859 => __first_7
  # DEBUG __resultD.49858 => __first_7
  # DEBUG __itD.46687 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.46685 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.46683 => _41
  # DEBUG __itD.46062 => _41
  # DEBUG __firstD.49863 => NULL
  # DEBUG __lastD.49862 => NULL
  # DEBUG __resultD.49861 => NULL
  # DEBUG __simpleD.49867 => 1
  # DEBUG __firstD.49870 => NULL
  # DEBUG __lastD.49869 => NULL
  # DEBUG __resultD.49868 => NULL
  __first.82_49 = (long intD.12) _41;
  _47 = _8 - __first.82_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.49871 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.34940._M_implD.34431._M_finishD.34434;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.34940._M_implD.34431._M_finishD.34434 = _43;
  # DEBUG thisD.49836 => &__positionD.34865
  # DEBUG __firstD.53244 => D#692ptD.0
  # DEBUG __lastD.53245 => _41
  # DEBUG __resultD.53246 => __first_7
  # DEBUG __itD.49813 => _41
  # DEBUG __itD.46059 => _41
  # DEBUG __itD.49811 => D#692ptD.0
  # DEBUG __itD.46059 => D#692ptD.0
  # DEBUG __firstD.53249 => D#692ptD.0
  # DEBUG __lastD.53248 => _41
  # DEBUG __resultD.53247 => __first_7
  # DEBUG __itD.49793 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.49791 => _41
  # DEBUG __itD.46062 => _41
  # DEBUG __itD.49789 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG __firstD.53252 => NULL
  # DEBUG __lastD.53251 => NULL
  # DEBUG __resultD.53250 => NULL
  # DEBUG __simpleD.53256 => 1
  # DEBUG __firstD.53259 => NULL
  # DEBUG __lastD.53258 => NULL
  # DEBUG __resultD.53257 => NULL
  _104 = __first.82_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.53260 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.49834 => &__positionD.34865
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.49832 => &__positionD.34865
  # DEBUG D#251ptD.0 => &__x_copyD.41026
  # DEBUG __firstD.49824 => D#692ptD.0
  # DEBUG __lastD.49825 => _48
  # DEBUG D#250ptD.0 => D#251ptD.0
  # DEBUG __valueD.49827 => D#250ptD.0
  # DEBUG __itD.46973 => _48
  # DEBUG __itD.46062 => _48
  # DEBUG __itD.46971 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG D#249ptD.0 => D#250ptD.0
  # DEBUG __firstD.49830 => NULL
  # DEBUG __lastD.49829 => NULL
  # DEBUG __valueD.49828 => D#249ptD.0
  # DEBUG __tmpD.49831 => __x_copy_35
  # DEBUG __firstD.49830 => D#692ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.49830 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.49830 => __position_55
  # DEBUG __firstD.49830 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 48, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 48, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#475ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49946 => D#475ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#376ptD.0 => &__x_copyD.41026
  # DEBUG __firstD.49924 => __first_7
  # DEBUG __nD.49925 => __n_50
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.49928 => D#375ptD.0
  # DEBUG D.49927 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.49931 => __first_7
  # DEBUG __nD.49930 => __n_50
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.49929 => D#373ptD.0
  # DEBUG __assignableD.49933 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.49936 => __first_7
  # DEBUG __nD.49935 => __n_50
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.49934 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.49939 => __first_7
  # DEBUG __nD.49938 => __n_50
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.49937 => D#307ptD.0
  # DEBUG __itD.47237 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.49942 => NULL
  # DEBUG __nD.49941 => __n_50
  # DEBUG __valueD.49940 => D#306ptD.0
  # DEBUG __tmpD.49943 => __x_copy_35
  # DEBUG __niterD.49944 => __n_50
  # DEBUG __niterD.49944 => __n_50
  # DEBUG __firstD.49942 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.49944 => __n_111
  # DEBUG __firstD.49942 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.49944 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.49942 => __first_64
  # DEBUG __niterD.49944 => __n_63
  # DEBUG __firstD.49942 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 50, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       50 [100.0%]  (FALLTHRU)

;;   basic block 50, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 50, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(50), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.34940._M_implD.34431._M_finishD.34434 = __first_125;
  # DEBUG D#476ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49922 => D#476ptD.0
  # DEBUG thisD.49920 => &__positionD.34865
  # DEBUG __firstD.49885 => D#692ptD.0
  # DEBUG __lastD.49886 => __first_7
  # DEBUG __resultD.49887 => __first_125
  # DEBUG __allocD.49888 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#246ptD.0
  # DEBUG D#244ptD.0 => D#245ptD.0
  # DEBUG __firstD.49892 => D#692ptD.0
  # DEBUG __lastD.49891 => __first_7
  # DEBUG __resultD.49890 => __first_125
  # DEBUG D.49889 => D#244ptD.0
  # DEBUG __firstD.49895 => D#692ptD.0
  # DEBUG __lastD.49894 => __first_7
  # DEBUG __resultD.49893 => __first_125
  # DEBUG __assignableD.49898 => 1
  # DEBUG __firstD.49901 => D#692ptD.0
  # DEBUG __lastD.49900 => __first_7
  # DEBUG __resultD.49899 => __first_125
  # DEBUG __firstD.49904 => D#692ptD.0
  # DEBUG __lastD.49903 => __first_7
  # DEBUG __resultD.49902 => __first_125
  # DEBUG __itD.46707 => __first_7
  # DEBUG __itD.46059 => __first_7
  # DEBUG __itD.46705 => D#692ptD.0
  # DEBUG __itD.46059 => D#692ptD.0
  # DEBUG __firstD.49907 => D#692ptD.0
  # DEBUG __lastD.49906 => __first_7
  # DEBUG __resultD.49905 => __first_125
  # DEBUG __itD.46687 => __first_125
  # DEBUG __itD.46062 => __first_125
  # DEBUG __itD.46685 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.46683 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG __firstD.49910 => NULL
  # DEBUG __lastD.49909 => NULL
  # DEBUG __resultD.49908 => NULL
  # DEBUG __simpleD.49914 => 1
  # DEBUG __firstD.49917 => NULL
  # DEBUG __lastD.49916 => NULL
  # DEBUG __resultD.49915 => NULL
  # DEBUG _NumD.49918 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.34940._M_implD.34431._M_finishD.34434;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.34940._M_implD.34431._M_finishD.34434 = _53;
  # DEBUG thisD.49883 => &__positionD.34865
  # DEBUG D#251ptD.0 => &__x_copyD.41026
  # DEBUG __firstD.49875 => D#692ptD.0
  # DEBUG __lastD.49876 => __first_7
  # DEBUG D#250ptD.0 => D#251ptD.0
  # DEBUG __valueD.49878 => D#250ptD.0
  # DEBUG __itD.46973 => __first_7
  # DEBUG __itD.46062 => __first_7
  # DEBUG __itD.46971 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG D#249ptD.0 => D#250ptD.0
  # DEBUG __firstD.49881 => NULL
  # DEBUG __lastD.49880 => NULL
  # DEBUG __valueD.49879 => D#249ptD.0
  # DEBUG __tmpD.49882 => __x_copy_35
  # DEBUG __firstD.49881 => D#692ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.49881 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.49881 => __position_58
  # DEBUG __firstD.49881 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 49, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
;;    succ:       49 [100.0%]  (FALLTHRU)

;;   basic block 49, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 49, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53271 => this_4(D)
  # DEBUG __nD.53272 => __n_2(D)
  # DEBUG __nD.53272 => __n_2(D)
  # DEBUG __sD.53273 => "vector::_M_fill_insert"
  # DEBUG D#395ptD.0 => this_4(D)
  # DEBUG thisD.48744 => D#395ptD.0
  # DEBUG D#394ptD.0 => D#395ptD.0
  # DEBUG D#393ptD.0 => &D#394ptD.0->D.34940
  # DEBUG thisD.48734 => D#393ptD.0
  # DEBUG __aD.48726 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#338ptD.0 => D#391ptD.0
  # DEBUG thisD.48717 => D#338ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG thisD.53277 => D#99ptD.0
  # DEBUG thisD.53278 => D#99ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG thisD.48762 => D#99ptD.0
  # DEBUG thisD.48761 => D#99ptD.0
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG thisD.48757 => D#99ptD.0
  # DEBUG thisD.48756 => D#99ptD.0
  # DEBUG __aD.53276 => &D.53280
  # DEBUG __bD.53275 => &__nD.53272
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.53274 => __len_124
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG D#99ptD.0 => this_4(D)
  # DEBUG thisD.48749 => D#99ptD.0
  # DEBUG thisD.48748 => D#99ptD.0
  # DEBUG D#395ptD.0 => this_4(D)
  # DEBUG thisD.48764 => D#395ptD.0
  # DEBUG D#394ptD.0 => D#395ptD.0
  # DEBUG D#393ptD.0 => &D#394ptD.0->D.34940
  # DEBUG thisD.48734 => D#393ptD.0
  # DEBUG __aD.48726 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG D#338ptD.0 => D#391ptD.0
  # DEBUG thisD.48717 => D#338ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.41059 => NULL
  # DEBUG thisD.50068 => this_4(D)
  # DEBUG D#119ptD.0 => &this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.50070 => NULL
  # DEBUG __iD.50069 => D#119ptD.0
  # DEBUG __lhsD.50065 => &__positionD.34865
  # DEBUG __rhsD.50066 => &D.41061
  # DEBUG thisD.46068 => &__positionD.34865
  # DEBUG thisD.46066 => &D.41061
  # DEBUG D#487ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.41060 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_4(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.53262 => NULL
  # DEBUG thisD.53263 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.53266 => NULL
  # DEBUG __aD.53265 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.53269 => NULL
  # DEBUG thisD.53267 => D#340ptD.0
  # DEBUG D.53268 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.53283 } (escaped heap)
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.34940._M_implD.34431._M_startD.34433;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.34940._M_implD.34431._M_finishD.34434;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 52, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.53283 } (escaped heap)
  # iftmp.79_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.53283 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
;;    succ:       52 [100.0%]  (FALLTHRU)

;;   basic block 52, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.41062 => NULL
  # DEBUG __new_finishD.41063 => NULL
  # DEBUG D#470ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.50063 => D#470ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.53283 } (escaped heap)
  __first_20 = iftmp.79_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#376ptD.0 => __x_21(D)
  # DEBUG __firstD.50041 => __first_20
  # DEBUG __nD.50042 => __n_2(D)
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.50045 => D#375ptD.0
  # DEBUG D.50044 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.50048 => __first_20
  # DEBUG __nD.50047 => __n_2(D)
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.50046 => D#373ptD.0
  # DEBUG __assignableD.50050 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.50053 => __first_20
  # DEBUG __nD.50052 => __n_2(D)
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.50051 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.50056 => __first_20
  # DEBUG __nD.50055 => __n_2(D)
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.50054 => D#307ptD.0
  # DEBUG __itD.47237 => __first_20
  # DEBUG __itD.46062 => __first_20
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.50059 => NULL
  # DEBUG __nD.50058 => __n_2(D)
  # DEBUG __valueD.50057 => D#306ptD.0
  # DEBUG __tmpD.50060 => _56
  # DEBUG __niterD.50061 => __n_2(D)
  # DEBUG __niterD.50061 => __n_2(D)
  # DEBUG __firstD.50059 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 52, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
  # PT = null { D.53283 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(52)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
  # DEBUG __niterD.50061 => __n_132
  # DEBUG __firstD.50059 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.50061 => __n_79
  # PT = null { D.53283 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.50059 => __first_80
  # DEBUG __niterD.50061 => __n_79
  # DEBUG __firstD.50059 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 51, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU)

;;   basic block 51, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.41063 => 0B
  # DEBUG D#471ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.50039 => D#471ptD.0
  # DEBUG thisD.50037 => &__positionD.34865
  # DEBUG D#691ptD.0 => this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.50002 => D#691ptD.0
  # DEBUG __lastD.50003 => D#692ptD.0
  # DEBUG __resultD.50004 => NULL
  # DEBUG __allocD.50005 => D#248ptD.0
  # DEBUG D#247ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#247ptD.0
  # DEBUG __firstD.50009 => D#691ptD.0
  # DEBUG __lastD.50008 => D#692ptD.0
  # DEBUG __resultD.50007 => NULL
  # DEBUG D.50006 => D#244ptD.0
  # DEBUG __firstD.50012 => D#691ptD.0
  # DEBUG __lastD.50011 => D#692ptD.0
  # DEBUG __resultD.50010 => NULL
  # DEBUG __assignableD.50015 => 1
  # DEBUG __firstD.50018 => D#691ptD.0
  # DEBUG __lastD.50017 => D#692ptD.0
  # DEBUG __resultD.50016 => NULL
  # DEBUG __firstD.50021 => D#691ptD.0
  # DEBUG __lastD.50020 => D#692ptD.0
  # DEBUG __resultD.50019 => NULL
  # DEBUG __itD.46707 => D#692ptD.0
  # DEBUG __itD.46059 => D#692ptD.0
  # DEBUG __itD.46705 => D#691ptD.0
  # DEBUG __itD.46059 => D#691ptD.0
  # DEBUG __firstD.50024 => D#691ptD.0
  # DEBUG __lastD.50023 => D#692ptD.0
  # DEBUG __resultD.50022 => NULL
  # DEBUG __itD.46687 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.46685 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG __itD.46683 => D#691ptD.0
  # DEBUG __itD.46062 => D#691ptD.0
  # DEBUG __firstD.50027 => NULL
  # DEBUG __lastD.50026 => NULL
  # DEBUG __resultD.50025 => NULL
  # DEBUG __simpleD.50031 => 1
  # DEBUG __firstD.50034 => NULL
  # DEBUG __lastD.50033 => NULL
  # DEBUG __resultD.50032 => NULL
  # DEBUG D#690ptD.0 => (long intD.12) D#691ptD.0
  # DEBUG D#689ptD.0 => _158 - D#690ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.50035 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 51, next block 38, flags: (NEW)
;;    pred:       51 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       51 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memmoveD.995 (iftmp.79_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#688ptD.0 => (long unsigned intD.14) D#689ptD.0
  # DEBUG __new_finishD.41063 => iftmp.79_113 + D#688ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.53283 } (escaped heap)
  __new_finish_26 = iftmp.79_113 + _133;
  # DEBUG __new_finishD.41063 => __new_finish_26
  # DEBUG D#472ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.50000 => D#472ptD.0
  # DEBUG D#687ptD.0 => this_4(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.49998 => &__positionD.34865
  # DEBUG __firstD.49963 => D#692ptD.0
  # DEBUG __lastD.49964 => D#687ptD.0
  # DEBUG __resultD.49965 => __new_finish_26
  # DEBUG __allocD.49966 => D#248ptD.0
  # DEBUG D#247ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#247ptD.0
  # DEBUG __firstD.49970 => D#692ptD.0
  # DEBUG __lastD.49969 => D#687ptD.0
  # DEBUG __resultD.49968 => __new_finish_26
  # DEBUG D.49967 => D#244ptD.0
  # DEBUG __firstD.49973 => D#692ptD.0
  # DEBUG __lastD.49972 => D#687ptD.0
  # DEBUG __resultD.49971 => __new_finish_26
  # DEBUG __assignableD.49976 => 1
  # DEBUG __firstD.49979 => D#692ptD.0
  # DEBUG __lastD.49978 => D#687ptD.0
  # DEBUG __resultD.49977 => __new_finish_26
  # DEBUG __firstD.49982 => D#692ptD.0
  # DEBUG __lastD.49981 => D#687ptD.0
  # DEBUG __resultD.49980 => __new_finish_26
  # DEBUG __itD.46707 => D#687ptD.0
  # DEBUG __itD.46059 => D#687ptD.0
  # DEBUG __itD.46705 => D#692ptD.0
  # DEBUG __itD.46059 => D#692ptD.0
  # DEBUG __firstD.49985 => D#692ptD.0
  # DEBUG __lastD.49984 => D#687ptD.0
  # DEBUG __resultD.49983 => __new_finish_26
  # DEBUG __itD.46687 => __new_finish_26
  # DEBUG __itD.46062 => __new_finish_26
  # DEBUG __itD.46685 => D#687ptD.0
  # DEBUG __itD.46062 => D#687ptD.0
  # DEBUG __itD.46683 => D#692ptD.0
  # DEBUG __itD.46062 => D#692ptD.0
  # DEBUG __firstD.49988 => NULL
  # DEBUG __lastD.49987 => NULL
  # DEBUG __resultD.49986 => NULL
  # DEBUG __simpleD.49992 => 1
  # DEBUG __firstD.49995 => NULL
  # DEBUG __lastD.49994 => NULL
  # DEBUG __resultD.49993 => NULL
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.49996 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.53283 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.41063 => _70
  # DEBUG D#473ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49961 => D#473ptD.0
  # DEBUG D#485ptD.0 => this_4(D)->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#484ptD.0 => this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.49958 => D#484ptD.0
  # DEBUG __lastD.49959 => D#485ptD.0
  # DEBUG D.49960 => NULL
  # DEBUG D#140ptD.0 => D#484ptD.0
  # DEBUG D#141ptD.0 => D#485ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#483ptD.0 => this_4(D)->D.34940._M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#482ptD.0 => (long intD.12) D#483ptD.0
  # DEBUG D#481ptD.0 => (long intD.12) D#691ptD.0
  # DEBUG D#480ptD.0 => D#482ptD.0 - D#481ptD.0
  # DEBUG D#479ptD.0 => D#480ptD.0 /[ex] 4
  # DEBUG D#478ptD.0 => (long unsigned intD.14) D#479ptD.0
  # DEBUG D#477ptD.0 => &this_4(D)->D.34940
  # DEBUG thisD.49948 => D#477ptD.0
  # DEBUG __pD.49949 => D#691ptD.0
  # DEBUG __nD.49950 => D#478ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#477ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#478ptD.0
  # DEBUG __pD.49954 => D#691ptD.0
  # DEBUG __aD.49952 => D#157ptD.0
  # DEBUG __nD.49953 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.49957 => D#691ptD.0
  # DEBUG thisD.49955 => D#153ptD.0
  # DEBUG D.49956 => D#154ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.53283 } (escaped heap)
  # CLB = nonlocal null { D.53283 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 53, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
;;    succ:       53 [100.0%]  (FALLTHRU)

;;   basic block 53, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.34940._M_implD.34431._M_startD.34433 = iftmp.79_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.34940._M_implD.34431._M_finishD.34434 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.34940._M_implD.34431._M_end_of_storageD.34435 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 53, next block 54, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>
;;    succ:       54 [100.0%]  (FALLTHRU)

;;   basic block 54, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 54, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.41059 => NULL
  # DEBUG thisD.50068 => this_4(D)
  # DEBUG D#119ptD.0 => &this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.50070 => NULL
  # DEBUG __iD.50069 => D#119ptD.0
  # DEBUG __lhsD.50065 => &__positionD.34865
  # DEBUG __rhsD.50066 => &D.41061
  # DEBUG thisD.46068 => &__positionD.34865
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.46066 => &D.41061
  _143 = _144 - _116;
  # DEBUG D#487ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.41060 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_4(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.53262 => NULL
  # DEBUG thisD.53263 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.41059 => NULL
  # DEBUG thisD.50068 => this_4(D)
  # DEBUG D#119ptD.0 => &this_4(D)->D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.50070 => NULL
  # DEBUG __iD.50069 => D#119ptD.0
  # DEBUG __lhsD.50065 => &__positionD.34865
  # DEBUG __rhsD.50066 => &D.41061
  # DEBUG thisD.46068 => &__positionD.34865
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.46066 => &D.41061
  _150 = _151 - _116;
  # DEBUG D#487ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.41060 => (const size_typeD.34516) D#487ptD.0
  # DEBUG D#486ptD.0 => &this_4(D)->D.34940
  # DEBUG D#346ptD.0 => D#486ptD.0
  # DEBUG __nD.53262 => NULL
  # DEBUG thisD.53263 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function RandomPermutationTrafficPattern::RandomPermutationTrafficPattern(int, int) (_ZN31RandomPermutationTrafficPatternC2Eii, funcdef_no=1793, decl_uid=34969, cgraph_uid=463, symbol_order=464)


Pass statistics:
----------------

RandomPermutationTrafficPattern::RandomPermutationTrafficPattern(int, int) (struct RandomPermutationTrafficPatternD.34196 * const thisD.34970, intD.9 nodesD.34971, intD.9 seedD.34972)
Eh tree:
   1 cleanup land:{1,<L1>}
     2 cleanup land:{5,<L4>},{2,<L12>}
       5 cleanup land:{3,<L3>}
         6 cleanup land:{11,<L10>},{10,<L9>},{9,<L8>},{8,<L7>},{7,<L6>},{6,<L5>},{4,<L11>}
{
  intD.9 * D.53663;
  intD.9 * __firstD.53638;
  size_typeD.34516 __nD.53621;
  intD.9 * __tmpD.53582;
  intD.9 * __tmpD.53579;
  intD.9 * __tmpD.53576;
  struct vectorD.33797 __tmpD.53571;
  long unsigned intD.14 __nD.53494;
  intD.9 * __firstD.53495;
  intD.9 * __firstD.53490;
  intD.9 * __firstD.53477;
  size_tD.2818 __nD.53473;
  struct vectorD.25982 save_xD.53383;
  struct vectorD.25985 save_uD.53384;
  intD.9 iD.53459;
  intD.9 jD.53461;
  intD.9 cntD.53462;
  intD.9 __valD.53449;
  static const charD.10 _ZZN31RandomPermutationTrafficPattern9randomizeEiE19__PRETTY_FUNCTION__D.38791[53] = "void RandomPermutationTrafficPattern::randomize(int)";
  struct iteratorD.34508 __positionD.53377;
  value_typeD.34503 __xD.53372;
  intD.9 * _5;
  long unsigned intD.14 _8;
  struct vectorD.33797 * _9;
  long intD.12 _10;
  intD.9 prephitmp_19;
  intD.9 * pretmp_21;
  intD.9 * pretmp_22;
  intD.9 * prephitmp_24;
  intD.9 _27;
  unsigned long _28;
  unsigned long _34;
  intD.9 _37;
  sizetype _38;
  intD.9 _40;
  intD.9 _42;
  intD.9 _43;
  long intD.12 _44;
  intD.9 _45;
  long intD.12 _46;
  long intD.12 _47;
  intD.9 _48;
  long unsigned intD.14 _51;
  long unsigned intD.14 _53;
  intD.9 & _54;
  intD.9 _55;
  long unsigned intD.14 _57;
  long unsigned intD.14 _59;
  intD.9 & _60;
  intD.9 _61;
  intD.9 _64;
  intD.9 & _67;
  long unsigned intD.14 _68;
  doubleD.39 * _70;
  long intD.12 * _71;
  doubleD.39 * _72;
  long intD.12 * _73;
  intD.9 * const _76;
  long intD.12 _77;
  long intD.12 _78;
  long intD.12 _79;
  long intD.12 _80;
  size_typeD.34516 _81;
  long intD.12 _83;
  long intD.12 _84;
  long intD.12 _85;
  size_typeD.34516 _86;
  unsigned long _94;
  sizetype _95;
  intD.9 * _110;
  sizetype _112;
  sizetype _113;
  long unsigned intD.14 _116;
  intD.9 * _117;
  intD.9 * _121;
  unsigned long _148;
  sizetype _152;
  sizetype _163;
  sizetype _165;
  long unsigned intD.14 _181;
  intD.9 pretmp_182;
  intD.9 pretmp_183;
  intD.9 prephitmp_184;
  intD.9 * pretmp_187;
  sizetype _195;
  long unsigned intD.14 _202;
  long unsigned intD.14 _203;
  intD.9 pretmp_204;
  intD.9 * _213;
  intD.9 * _214;
  long unsigned intD.14 _215;
  long unsigned intD.14 _218;

;;   basic block 2, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#491ptD.0 => &this_2(D)->D.34973
  # DEBUG thisD.50114 => D#491ptD.0
  # DEBUG nodesD.50115 => nodes_4(D)
  # .MEM_13 = VDEF <.MEM_3(D)>
  MEM[(struct TrafficPatternD.33853 *)this_2(D)]._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_7 = VDEF <.MEM_13>
  MEM[(struct TrafficPatternD.33853 *)this_2(D)]._nodesD.33855 = nodes_4(D);
  if (nodes_4(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#491ptD.0
  # DEBUG D#63ptD.0 => nodes_4(D)
  # .MEM_26 = VDEF <.MEM_7>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_6 = VDEF <.MEM_7>
  this_2(D)->D.34973._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV31RandomPermutationTrafficPatternD.34976 + 16B];
  # DEBUG D#490ptD.0 => &this_2(D)->_destD.34942
  # DEBUG thisD.50111 => D#490ptD.0
  # DEBUG D#209ptD.0 => &D#490ptD.0->D.34940
  # DEBUG thisD.50112 => D#209ptD.0
  # DEBUG D#208ptD.0 => &D#209ptD.0->_M_implD.34431
  # DEBUG thisD.50113 => D#208ptD.0
  # DEBUG thisD.46184 => D#208ptD.0
  # DEBUG thisD.46182 => D#208ptD.0
  # .MEM_15 = VDEF <.MEM_6>
  MEM[(struct _Vector_implD.34408 *)this_2(D) + 16B]._M_startD.34433 = 0B;
  # .MEM_16 = VDEF <.MEM_15>
  MEM[(struct _Vector_implD.34408 *)this_2(D) + 16B]._M_finishD.34434 = 0B;
  # .MEM_17 = VDEF <.MEM_16>
  MEM[(struct _Vector_implD.34408 *)this_2(D) + 16B]._M_end_of_storageD.34435 = 0B;
  # RANGE [1, 2147483647] NONZERO 2147483647
  _8 = (long unsigned intD.14) nodes_4(D);
  # PT = nonlocal 
  _9 = &this_2(D)->_destD.34942;
  # DEBUG thisD.53370 => _9
  # DEBUG __new_sizeD.53371 => _8
  # .MEM_133 = VDEF <.MEM_17>
  __xD.53372 = 0;
  # DEBUG __xD.53372 => __xD.53372
  # DEBUG D#99ptD.0 => _9
  # DEBUG D#99ptD.0 => _9
  # DEBUG thisD.53379 => D#99ptD.0
  # DEBUG thisD.53380 => D#99ptD.0
  # DEBUG D#99ptD.0 => _9
  # DEBUG D#99ptD.0 => _9
  # DEBUG thisD.50098 => D#99ptD.0
  # DEBUG thisD.50097 => D#99ptD.0
  # DEBUG thisD.50091 => _9
  # DEBUG D#118ptD.0 => &_9->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.50093 => NULL
  # DEBUG __iD.50092 => D#118ptD.0
  # DEBUG thisD.53378 => _9
  # .MEM_135 = VDEF <.MEM_133>
  MEM[(struct __normal_iteratorD.34509 *)&__positionD.53377] = 0B;
  # DEBUG __nD.53376 => _8
  # DEBUG __xD.53375 => &__xD.53372
  [LP 5] # .MEM_136 = VDEF <.MEM_135>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34863 (_9, __positionD.53377, _8, &__xD.53372);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.53381 => this_2(D)
  # DEBUG seedD.53382 => seed_11(D)
  # DEBUG thisD.53453 => &save_xD.53383
  # DEBUG D#255ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.53454 => D#255ptD.0
  # DEBUG D#254ptD.0 => &D#255ptD.0->_M_implD.37527
  # DEBUG thisD.53455 => D#254ptD.0
  # DEBUG thisD.47031 => D#254ptD.0
  # DEBUG thisD.47029 => D#254ptD.0
  # .MEM_137 = VDEF <.MEM_136>
  MEM[(struct _Vector_implD.37504 *)&save_xD.53383]._M_startD.37529 = 0B;
  # .MEM_138 = VDEF <.MEM_137>
  MEM[(struct _Vector_implD.37504 *)&save_xD.53383]._M_finishD.37530 = 0B;
  # .MEM_139 = VDEF <.MEM_138>
  MEM[(struct _Vector_implD.37504 *)&save_xD.53383]._M_end_of_storageD.37531 = 0B;
  # DEBUG thisD.53456 => &save_uD.53384
  # DEBUG D#278ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.53457 => D#278ptD.0
  # DEBUG D#277ptD.0 => &D#278ptD.0->_M_implD.38272
  # DEBUG thisD.53458 => D#277ptD.0
  # DEBUG thisD.47121 => D#277ptD.0
  # DEBUG thisD.47119 => D#277ptD.0
  # .MEM_140 = VDEF <.MEM_139>
  MEM[(struct _Vector_implD.38249 *)&save_uD.53384]._M_startD.38274 = 0B;
  # .MEM_141 = VDEF <.MEM_140>
  MEM[(struct _Vector_implD.38249 *)&save_uD.53384]._M_finishD.38275 = 0B;
  # .MEM_142 = VDEF <.MEM_141>
  MEM[(struct _Vector_implD.38249 *)&save_uD.53384]._M_end_of_storageD.38276 = 0B;
  [LP 6] # .MEM_143 = VDEF <.MEM_142>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _Z15SaveRandomStateRSt6vectorIlSaIlEERS_IdSaIdEED.25987 (&save_xD.53383, &save_uD.53384);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  _10 = (long intD.12) seed_11(D);
  # DEBUG seedD.53452 => _10
  [LP 7] # .MEM_144 = VDEF <.MEM_143>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _Z9ran_startlD.25963 (_10);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L6>: [LP 7]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 8] # .MEM_145 = VDEF <.MEM_144>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _Z10ranf_startlD.25966 (_10);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L7>: [LP 8]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_145>
  _37 = this_2(D)->D.34973._nodesD.33855;
  # DEBUG D#756ptD.0 => &this_2(D)->_destD.34942
  # DEBUG thisD.53447 => D#756ptD.0
  # DEBUG __firstD.53446 => _37
  # DEBUG __lastD.53445 => -1
  # DEBUG thisD.53451 => D#756ptD.0
  # DEBUG __nD.53450 => _37
  # DEBUG __valD.53449 => -1
  # DEBUG __valD.53449 => -1
  # RANGE ~[2147483648, 18446744071562067967]
  __n_39 = (size_tD.2818) _37;
  # DEBUG thisD.53472 => D#756ptD.0
  # DEBUG __nD.53473 => __n_39
  # DEBUG __valD.53474 => &__valD.53449
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  __first_12 = MEM[(intD.9 * *)this_2(D) + 16B];
  # DEBUG D#110ptD.0 => D#756ptD.0
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _76 = MEM[(intD.9 * *)this_2(D) + 32B];
  # DEBUG D#110ptD.0 => D#756ptD.0
  # DEBUG thisD.53514 => D#110ptD.0
  # DEBUG thisD.53515 => D#110ptD.0
  _77 = (long intD.12) _76;
  _78 = (long intD.12) __first_12;
  _79 = _77 - _78;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _80 = _79 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _81 = (size_typeD.34516) _80;
  if (__n_39 > _81)
    goto <bb 11>;
  else
    goto <bb 26>;
;;    succ:       11 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53518 => D#756ptD.0
  # DEBUG __nD.53519 => __n_39
  # DEBUG __valD.53520 => &__valD.53449
  # DEBUG D#384ptD.0 => &D#756ptD.0->D.34940
  # DEBUG thisD.53598 => D#384ptD.0
  # DEBUG D#755ptD.0 => &MEM[(struct _Vector_baseD.34198 *)this_2(D) + 16B]._M_implD.34431
  # DEBUG thisD.53620 => &__tmpD.53571
  # DEBUG __nD.53621 => __n_39
  # DEBUG __valueD.53622 => &__valD.53449
  # DEBUG __aD.53623 => D#755ptD.0
  # DEBUG D#383ptD.0 => &__tmpD.53571.D.34940
  # DEBUG thisD.53626 => D#383ptD.0
  # DEBUG __nD.53625 => __n_39
  # DEBUG __aD.53624 => D#755ptD.0
  # DEBUG D#367ptD.0 => &D#383ptD.0->_M_implD.34431
  # DEBUG thisD.53628 => D#367ptD.0
  # DEBUG __aD.53627 => D#755ptD.0
  # DEBUG thisD.46561 => D#367ptD.0
  # DEBUG __aD.46562 => D#755ptD.0
  # DEBUG thisD.46558 => D#367ptD.0
  # DEBUG D.46559 => D#755ptD.0
  # DEBUG thisD.53630 => D#383ptD.0
  # DEBUG __nD.53629 => __n_39
  # DEBUG D#346ptD.0 => D#383ptD.0
  # DEBUG __nD.53655 => __n_39
  # DEBUG thisD.53656 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (__n_39 != 0)
    goto <bb 12>;
  else
    goto <bb 76>;
;;    succ:       12 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                76 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.53659 => __n_39
  # DEBUG __aD.53658 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.53662 => __n_39
  # DEBUG thisD.53660 => D#340ptD.0
  # DEBUG D.53661 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  if (__n_39 > 4611686018427387903)
    goto <bb 13>;
  else
    goto <bb 15>;
;;    succ:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 9] # .MEM_156 = VDEF <.MEM_145>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZSt17__throw_bad_allocvD.3957 ();
;;    succ:       14 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 (EH,EXECUTABLE)
<L8>: [LP 9]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  _116 = __n_39 * 4;
  [LP 10] # .MEM_155 = VDEF <.MEM_145>
  # PT = { D.53675 } (escaped heap)
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _117 = _ZnwmD.2764 (_116);
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 (EH,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 (EH,EXECUTABLE)
<L9>: [LP 10]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.53675 } (escaped heap)
  _110 = _117 + _116;
  # DEBUG D#381ptD.0 => &__tmpD.53571
  # DEBUG D#381ptD.0 => &__tmpD.53571
  # DEBUG D#382ptD.0 => &__valD.53449
  # DEBUG __nD.53634 => __n_39
  # DEBUG D#379ptD.0 => D#381ptD.0
  # DEBUG thisD.53631 => D#379ptD.0
  # DEBUG thisD.53632 => D#381ptD.0
  # DEBUG D#380ptD.0 => D#382ptD.0
  # DEBUG __valueD.53633 => D#380ptD.0
  # DEBUG D#378ptD.0 => &D#379ptD.0->D.34940
  # DEBUG thisD.48338 => D#378ptD.0
  # DEBUG D#376ptD.0 => D#380ptD.0
  # DEBUG __firstD.53638 => NULL
  # DEBUG __nD.53637 => __n_39
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.53635 => D#375ptD.0
  # DEBUG D.53636 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.53641 => NULL
  # DEBUG __nD.53640 => __n_39
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.53639 => D#373ptD.0
  # DEBUG __assignableD.53643 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.53646 => NULL
  # DEBUG __nD.53645 => __n_39
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.53644 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.53649 => NULL
  # DEBUG __nD.53648 => __n_39
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.53647 => D#307ptD.0
  # DEBUG __itD.47237 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.53652 => NULL
  # DEBUG __nD.53651 => __n_39
  # DEBUG __valueD.53650 => D#306ptD.0
  # DEBUG __tmpD.53653 => -1
  # DEBUG __niterD.53654 => __n_39
  # DEBUG __niterD.53654 => __n_39
  # DEBUG __firstD.53652 => _117
  if (__n_39 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_155>
  pretmp_22 = MEM[(intD.9 * &)this_2(D) + 16];
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 4, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 18, next block 22, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  _165 = (sizetype) _37;
  _152 = _165 * 4;
  # .MEM_160 = VDEF <.MEM_155>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (_117, 255, _152);
;;    succ:       22 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 19, next block 23, flags: (NEW)
;;    pred:       19 [9.0%]  (FALLTHRU,EXECUTABLE)
  _215 = (long unsigned intD.14) _37;
  _68 = _215 * 4;
  # PT = { D.53675 } (escaped heap)
  __first_20 = _117 + _68;
  # VUSE <.MEM_160>
  pretmp_21 = MEM[(intD.9 * &)this_2(D) + 16];
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                76 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.53675 } (escaped heap)
  # __first_159 = PHI <__first_20(22), _117(18), 0B(76)>
  # .MEM_162 = PHI <.MEM_160(22), .MEM_155(18), .MEM_145(76)>
  # PT = nonlocal escaped { D.53675 } (escaped heap)
  # _213 = PHI <_110(22), _110(18), _121(76)>
  # PT = null { D.53675 } (escaped heap)
  # __first_212 = PHI <_117(22), _117(18), 0B(76)>
  # PT = nonlocal escaped 
  # prephitmp_24 = PHI <pretmp_21(22), pretmp_22(18), __first_12(76)>
  # DEBUG D#386ptD.0 => &D#756ptD.0->D.34940._M_implD.34431
  # DEBUG thisD.53573 => &__tmpD.53571.D.34940._M_implD.34431
  # DEBUG __xD.53572 => D#386ptD.0
  # DEBUG D#305ptD.0 => &D#386ptD.0->_M_startD.34433
  # DEBUG D#304ptD.0 => &MEM[(struct _Vector_implD.34408 *)&__tmpD.53571]._M_startD.34433
  # DEBUG __aD.53575 => D#304ptD.0
  # DEBUG __bD.53574 => D#305ptD.0
  # DEBUG __tmpD.53576 => __first_212
  # DEBUG D#757ptD.0 => MEM[(intD.9 * &)this_2(D) + 16]
  # .MEM_164 = VDEF <.MEM_162>
  MEM[(intD.9 * &)this_2(D) + 16] = __first_212;
  # DEBUG D#303ptD.0 => &D#386ptD.0->_M_finishD.34434
  # DEBUG D#302ptD.0 => &MEM[(struct _Vector_implD.34408 *)&__tmpD.53571]._M_finishD.34434
  # DEBUG __aD.53578 => D#302ptD.0
  # DEBUG __bD.53577 => D#303ptD.0
  # DEBUG __tmpD.53579 => __first_159
  # .MEM_166 = VDEF <.MEM_164>
  MEM[(intD.9 * &)this_2(D) + 24] = __first_159;
  # DEBUG D#301ptD.0 => &D#386ptD.0->_M_end_of_storageD.34435
  # DEBUG D#300ptD.0 => &MEM[(struct _Vector_implD.34408 *)&__tmpD.53571]._M_end_of_storageD.34435
  # DEBUG __aD.53581 => D#300ptD.0
  # DEBUG __bD.53580 => D#301ptD.0
  # DEBUG __tmpD.53582 => _213
  # .MEM_168 = VDEF <.MEM_166>
  MEM[(intD.9 * &)this_2(D) + 32] = _213;
  # DEBUG thisD.53583 => &__tmpD.53571
  # DEBUG D#167ptD.0 => &__tmpD.53571.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => __tmpD.53571.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => __tmpD.53571.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &__tmpD.53571.D.34940
  # DEBUG thisD.53584 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # DEBUG D#164ptD.0 => (long intD.12) D#757ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.53587 => D#168ptD.0
  # DEBUG __pD.53586 => D#757ptD.0
  # DEBUG __nD.53585 => D#161ptD.0
  if (prephitmp_24 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.53591 => D#757ptD.0
  # DEBUG __aD.53589 => D#157ptD.0
  # DEBUG __nD.53590 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.53594 => D#757ptD.0
  # DEBUG thisD.53592 => D#153ptD.0
  # DEBUG D.53593 => D#154ptD.0
  # .MEM_169 = VDEF <.MEM_168>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_24);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_122 = PHI <.MEM_168(23), .MEM_169(24)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.53595 => D#160ptD.0
  # DEBUG thisD.53596 => D#160ptD.0
  # DEBUG thisD.53597 => D#160ptD.0
  # .MEM_175 = VDEF <.MEM_122>
  __tmpD.53571 ={v} {CLOBBER};
  # VUSE <.MEM_175>
  pretmp_182 = this_2(D)->D.34973._nodesD.33855;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       10 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => D#756ptD.0
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  __first_82 = MEM[(intD.9 * *)this_2(D) + 24B];
  # DEBUG D#99ptD.0 => D#756ptD.0
  # DEBUG thisD.53512 => D#99ptD.0
  # DEBUG thisD.53513 => D#99ptD.0
  _83 = (long intD.12) __first_82;
  _84 = _83 - _78;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _85 = _84 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _86 = (size_typeD.34516) _85;
  if (__n_39 > _86)
    goto <bb 28>;
  else
    goto <bb 27>;
;;    succ:       28 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __niterD.53482 => __n_39
  # DEBUG __firstD.53480 => __first_12
  if (__n_39 == 0)
    goto <bb 41>;
  else
    goto <bb 37>;
;;    succ:       41 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __firstD.53490 => __first_12
  if (__first_12 == __first_82)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 7, maybe hot
;;   Invalid sum of outgoing probabilities 9.8%
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_217 = PHI <.MEM_145(28), .MEM_201(32)>
  # DEBUG D#385ptD.0 => &D#756ptD.0->D.34940
  # DEBUG thisD.48469 => D#385ptD.0
  # DEBUG D#99ptD.0 => D#756ptD.0
  # DEBUG D#99ptD.0 => D#756ptD.0
  # DEBUG thisD.48467 => D#99ptD.0
  # DEBUG thisD.48466 => D#99ptD.0
  # RANGE [1, 18446744073709551615]
  __n_90 = __n_39 - _86;
  # DEBUG D#376ptD.0 => &__valD.53449
  # DEBUG __firstD.53495 => __first_82
  # DEBUG __nD.53494 => __n_90
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.53492 => D#375ptD.0
  # DEBUG D.53493 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.53498 => __first_82
  # DEBUG __nD.53497 => __n_90
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.53496 => D#373ptD.0
  # DEBUG __assignableD.53500 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.53503 => __first_82
  # DEBUG __nD.53502 => __n_90
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.53501 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.53506 => __first_82
  # DEBUG __nD.53505 => __n_90
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.53504 => D#307ptD.0
  # DEBUG __itD.47237 => __first_82
  # DEBUG __itD.46062 => __first_82
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.53509 => NULL
  # DEBUG __nD.53508 => __n_90
  # DEBUG __valueD.53507 => D#306ptD.0
  # DEBUG __tmpD.53510 => -1
  # DEBUG __niterD.53511 => __n_90
  # DEBUG __niterD.53511 => __n_90
  # DEBUG __firstD.53509 => __first_82
  _113 = __n_90 * 4;
  # .MEM_161 = VDEF <.MEM_217>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_82, 255, _113);
  goto <bb 36>;
;;    succ:       36 [9.8%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 6, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 29, next block 32, flags: (NEW, REACHABLE)
;;    pred:       28 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  _34 = (unsigned long) __first_82;
  _214 = __first_12 + 4;
  _28 = (unsigned long) _214;
  _148 = _34 - _28;
  _94 = _148 /[ex] 4;
  _95 = _94 & 4611686018427387903;
  _112 = _95 + 1;
  _195 = _112 * 4;
  # .MEM_154 = VDEF <.MEM_145>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_12, 255, _195);
;;    succ:       32 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 30, next block 36, flags: (NEW)
;;    pred:       30 [9.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_201 = PHI <.MEM_154(30)>
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 32, next block 37, flags: (NEW, REACHABLE)
;;    pred:       29 [9.8%]  (FALLTHRU,EXECUTABLE)
  _181 = __n_90 * 4;
  # PT = nonlocal escaped 
  __first_66 = __first_82 + _181;
  # .MEM_149 = VDEF <.MEM_161>
  MEM[(struct vectorD.33797 *)this_2(D) + 16B].D.34940._M_implD.34431._M_finishD.34434 = __first_66;
  # VUSE <.MEM_149>
  pretmp_183 = this_2(D)->D.34973._nodesD.33855;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 6, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 36, next block 40, flags: (NEW, REACHABLE)
;;    pred:       27 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  _163 = (sizetype) _37;
  _38 = _163 * 4;
  # .MEM_158 = VDEF <.MEM_145>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_12, 255, _38);
;;    succ:       40 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 37, next block 41, flags: (NEW)
;;    pred:       37 [9.0%]  (FALLTHRU,EXECUTABLE)
  _203 = (long unsigned intD.14) _37;
  _202 = _203 * 4;
  # PT = nonlocal escaped 
  __first_65 = __first_12 + _202;
  # VUSE <.MEM_158>
  pretmp_204 = this_2(D)->D.34973._nodesD.33855;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_153 = PHI <__first_65(40), __first_12(27)>
  # .MEM_107 = PHI <.MEM_158(40), .MEM_145(27)>
  # prephitmp_19 = PHI <pretmp_204(40), _37(27)>
  # DEBUG D#145ptD.0 => D#756ptD.0
  # DEBUG __posD.53484 => __first_153
  # DEBUG D#144ptD.0 => D#145ptD.0
  # DEBUG thisD.53483 => D#144ptD.0
  # DEBUG D#142ptD.0 => &D#144ptD.0->D.34940
  # DEBUG thisD.45847 => D#142ptD.0
  # DEBUG D#143ptD.0 => D#144ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG __firstD.45837 => __first_153
  # DEBUG __lastD.45838 => D#143ptD.0
  # DEBUG D.45839 => NULL
  # DEBUG D#140ptD.0 => __first_153
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # .MEM_151 = VDEF <.MEM_107>
  MEM[(intD.9 * *)this_2(D) + 24B] = __first_153;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 17, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_108 = PHI <.MEM_175(25), .MEM_151(41), .MEM_149(36)>
  # prephitmp_184 = PHI <pretmp_182(25), prephitmp_19(41), pretmp_183(36)>
  # DEBUG iD.53459 => 0
  if (prephitmp_184 <= 0)
    goto <bb 53>;
  else
    goto <bb 43>;
;;    succ:       53 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [97.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 454, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _27 = PHI <prephitmp_184(43), _40(74)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # i_119 = PHI <0(43), i_69(74)>
  # .MEM_167 = PHI <.MEM_108(43), .MEM_178(74)>
  # DEBUG iD.53459 => i_119
  # RANGE [0, 2147483646] NONZERO 2147483647
  _42 = _27 + -1;
  # RANGE [-2147483646, 2147483646]
  _43 = _42 - i_119;
  # DEBUG maxD.53469 => _43
  [LP 11] # .MEM_176 = VDEF <.MEM_167>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _44 = _Z8ran_nextvD.25964 ();
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 (EH,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 (EH,EXECUTABLE)
<L10>: [LP 11]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 454, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483645, 2147483647]
  _45 = _43 + 1;
  # RANGE [-2147483645, 2147483647]
  _46 = (long intD.12) _45;
  _47 = _44 % _46;
  _48 = (intD.9) _47;
  # DEBUG indD.53460 => _48
  # DEBUG jD.53461 => 0
  # DEBUG cntD.53462 => 0
  # VUSE <.MEM_176>
  # PT = nonlocal escaped 
  pretmp_187 = MEM[(intD.9 * *)this_2(D) + 16B];
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 2, count 0, freq 10000, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_50 = PHI <0(46), j_63(51)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # cnt_49 = PHI <0(46), cnt_75(51)>
  # DEBUG cntD.53462 => cnt_49
  # DEBUG jD.53461 => j_50
  if (_48 > cnt_49)
    goto <bb 75>;
  else
    goto <bb 48>;
;;    succ:       75 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 2, count 0, freq 5000, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[2147483648, 18446744071562067967]
  _51 = (long unsigned intD.14) j_50;
  # DEBUG D#389ptD.0 => &this_2(D)->_destD.34942
  # DEBUG D#100ptD.0 => D#389ptD.0
  # DEBUG __nD.53468 => _51
  # DEBUG thisD.53467 => D#100ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _53 = _51 * 4;
  # PT = nonlocal escaped 
  _54 = pretmp_187 + _53;
  # VUSE <.MEM_176>
  _55 = *_54;
  if (_55 != -1)
    goto <bb 50>;
  else
    goto <bb 73>;
;;    succ:       50 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                73 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 2, count 0, freq 2674, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       75 [53.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 2147483647] NONZERO 2147483647
  cnt_62 = cnt_49 + 1;
  # DEBUG cntD.53462 => cnt_62
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 2, count 0, freq 9550, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       75 [46.5%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # cnt_75 = PHI <cnt_49(75), cnt_62(49), cnt_49(48)>
  # DEBUG cntD.53462 => cnt_75
  j_63 = j_50 + 1;
  # DEBUG jD.53461 => j_63
  # VUSE <.MEM_176>
  _64 = this_2(D)->D.34973._nodesD.33855;
  if (j_63 >= _64)
    goto <bb 52>;
  else
    goto <bb 51>;
;;    succ:       52 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 2, count 0, freq 9546, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_177 = VDEF <.MEM_176>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  __assert_failD.29068 ("j < _nodes", "traffic.cpp", 358, &_ZZN31RandomPermutationTrafficPattern9randomizeEiE19__PRETTY_FUNCTION__D.38791);
;;    succ:      

;;   basic block 53, loop depth 0, count 0, freq 15, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       42 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                73 [3.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_216 = PHI <.MEM_108(42), .MEM_178(73)>
  [LP 4] # .MEM_179 = VDEF <.MEM_216>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _Z18RestoreRandomStateRKSt6vectorIlSaIlEERKS_IdSaIdEED.25990 (&save_xD.53383, &save_uD.53384);
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 (EH,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 (EH,EXECUTABLE)
<L11>: [LP 4]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.53415 => &save_uD.53384
  # DEBUG D#296ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.47205 => D#296ptD.0
  # DEBUG D#299ptD.0 => save_uD.53384.D.38781._M_implD.38272._M_finishD.38275
  # DEBUG D#298ptD.0 => save_uD.53384.D.38781._M_implD.38272._M_startD.38274
  # DEBUG D#202ptD.0 => D#298ptD.0
  # DEBUG D#203ptD.0 => D#299ptD.0
  # DEBUG __firstD.47204 => D#202ptD.0
  # DEBUG __lastD.47203 => D#203ptD.0
  # DEBUG D.47202 => D#204ptD.0
  # DEBUG D#201ptD.0 => D#203ptD.0
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG __firstD.46135 => D#198ptD.0
  # DEBUG __lastD.46134 => D#199ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#194ptD.0 => D#196ptD.0
  # DEBUG D#195ptD.0 => D#197ptD.0
  # DEBUG D.46124 => D#194ptD.0
  # DEBUG D.46123 => D#195ptD.0
  # DEBUG D#297ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.53416 => D#297ptD.0
  # DEBUG D#295ptD.0 => D#297ptD.0->_M_implD.38272._M_end_of_storageD.38276
  # DEBUG D#294ptD.0 => (long intD.12) D#295ptD.0
  # VUSE <.MEM_179>
  # PT = nonlocal escaped null 
  _70 = MEM[(struct _Vector_baseD.38039 *)&save_uD.53384]._M_implD.38272._M_startD.38274;
  # DEBUG D#293ptD.0 => (long intD.12) _70
  # DEBUG D#292ptD.0 => D#294ptD.0 - D#293ptD.0
  # DEBUG D#291ptD.0 => D#292ptD.0 /[ex] 8
  # DEBUG D#288ptD.0 => D#297ptD.0
  # DEBUG D#289ptD.0 => (long unsigned intD.14) D#291ptD.0
  # DEBUG __pD.53419 => _70
  # DEBUG thisD.53417 => D#288ptD.0
  # DEBUG __nD.53418 => D#289ptD.0
  # DEBUG D#287ptD.0 => D#289ptD.0
  # DEBUG D#286ptD.0 => D#288ptD.0
  if (_70 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;
;;    succ:       56 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                57 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 10, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       55 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#285ptD.0 => &D#286ptD.0->_M_implD.38272
  # DEBUG D#283ptD.0 => D#285ptD.0
  # DEBUG D#284ptD.0 => D#287ptD.0
  # DEBUG __pD.53423 => _70
  # DEBUG __aD.53421 => D#283ptD.0
  # DEBUG __nD.53422 => D#284ptD.0
  # DEBUG D#282ptD.0 => D#284ptD.0
  # DEBUG D#281ptD.0 => D#283ptD.0
  # DEBUG D#279ptD.0 => D#281ptD.0
  # DEBUG D#280ptD.0 => D#282ptD.0
  # DEBUG __pD.53426 => _70
  # DEBUG thisD.53424 => D#279ptD.0
  # DEBUG D.53425 => D#280ptD.0
  # .MEM_180 = VDEF <.MEM_179>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_70);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       55 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_128 = PHI <.MEM_179(55), .MEM_180(56)>
  # DEBUG D#290ptD.0 => &D#297ptD.0->_M_implD.38272
  # DEBUG thisD.53427 => D#290ptD.0
  # DEBUG thisD.53428 => D#290ptD.0
  # DEBUG thisD.53429 => D#290ptD.0
  # .MEM_185 = VDEF <.MEM_128>
  MEM[(struct  &)&save_uD.53384] ={v} {CLOBBER};
  # DEBUG thisD.53430 => &save_xD.53383
  # DEBUG D#273ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.47115 => D#273ptD.0
  # DEBUG D#276ptD.0 => save_xD.53383.D.38036._M_implD.37527._M_finishD.37530
  # DEBUG D#275ptD.0 => save_xD.53383.D.38036._M_implD.37527._M_startD.37529
  # DEBUG D#191ptD.0 => D#275ptD.0
  # DEBUG D#192ptD.0 => D#276ptD.0
  # DEBUG __firstD.47114 => D#191ptD.0
  # DEBUG __lastD.47113 => D#192ptD.0
  # DEBUG D.47112 => D#193ptD.0
  # DEBUG D#190ptD.0 => D#192ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0
  # DEBUG D#187ptD.0 => D#189ptD.0
  # DEBUG D#188ptD.0 => D#190ptD.0
  # DEBUG __firstD.46097 => D#187ptD.0
  # DEBUG __lastD.46096 => D#188ptD.0
  # DEBUG D#186ptD.0 => D#188ptD.0
  # DEBUG D#185ptD.0 => D#187ptD.0
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0
  # DEBUG D.46086 => D#183ptD.0
  # DEBUG D.46085 => D#184ptD.0
  # DEBUG D#274ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.53431 => D#274ptD.0
  # DEBUG D#272ptD.0 => D#274ptD.0->_M_implD.37527._M_end_of_storageD.37531
  # DEBUG D#271ptD.0 => (long intD.12) D#272ptD.0
  # VUSE <.MEM_185>
  # PT = nonlocal escaped null 
  _71 = MEM[(struct _Vector_baseD.37294 *)&save_xD.53383]._M_implD.37527._M_startD.37529;
  # DEBUG D#270ptD.0 => (long intD.12) _71
  # DEBUG D#269ptD.0 => D#271ptD.0 - D#270ptD.0
  # DEBUG D#268ptD.0 => D#269ptD.0 /[ex] 8
  # DEBUG D#265ptD.0 => D#274ptD.0
  # DEBUG D#266ptD.0 => (long unsigned intD.14) D#268ptD.0
  # DEBUG __pD.53434 => _71
  # DEBUG thisD.53432 => D#265ptD.0
  # DEBUG __nD.53433 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  if (_71 != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;
;;    succ:       58 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#262ptD.0 => &D#263ptD.0->_M_implD.37527
  # DEBUG D#260ptD.0 => D#262ptD.0
  # DEBUG D#261ptD.0 => D#264ptD.0
  # DEBUG __pD.53438 => _71
  # DEBUG __aD.53436 => D#260ptD.0
  # DEBUG __nD.53437 => D#261ptD.0
  # DEBUG D#259ptD.0 => D#261ptD.0
  # DEBUG D#258ptD.0 => D#260ptD.0
  # DEBUG D#256ptD.0 => D#258ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0
  # DEBUG __pD.53441 => _71
  # DEBUG thisD.53439 => D#256ptD.0
  # DEBUG D.53440 => D#257ptD.0
  # .MEM_186 = VDEF <.MEM_185>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_71);
;;    succ:       59 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       57 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_185(57), .MEM_186(58)>
  # DEBUG D#267ptD.0 => &D#274ptD.0->_M_implD.37527
  # DEBUG thisD.53442 => D#267ptD.0
  # DEBUG thisD.53443 => D#267ptD.0
  # DEBUG thisD.53444 => D#267ptD.0
  # .MEM_192 = VDEF <.MEM_129>
  save_xD.53383 ={v} {CLOBBER};
  # .MEM_193 = VDEF <.MEM_192>
  save_uD.53384 ={v} {CLOBBER};
  # VUSE <.MEM_193>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 59, next block 61, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L5>: [LP 6]
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_130 = PHI <.MEM_143(60), .MEM_144(7), .MEM_145(9), .MEM_155(16), .MEM_176(45), .MEM_179(54), .MEM_156(14)>
<L2>:
  # DEBUG thisD.53400 => &save_uD.53384
  # DEBUG D#296ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.47205 => D#296ptD.0
  # DEBUG D#299ptD.0 => save_uD.53384.D.38781._M_implD.38272._M_finishD.38275
  # DEBUG D#298ptD.0 => save_uD.53384.D.38781._M_implD.38272._M_startD.38274
  # DEBUG D#202ptD.0 => D#298ptD.0
  # DEBUG D#203ptD.0 => D#299ptD.0
  # DEBUG __firstD.47204 => D#202ptD.0
  # DEBUG __lastD.47203 => D#203ptD.0
  # DEBUG D.47202 => D#204ptD.0
  # DEBUG D#201ptD.0 => D#203ptD.0
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG __firstD.46135 => D#198ptD.0
  # DEBUG __lastD.46134 => D#199ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#194ptD.0 => D#196ptD.0
  # DEBUG D#195ptD.0 => D#197ptD.0
  # DEBUG D.46124 => D#194ptD.0
  # DEBUG D.46123 => D#195ptD.0
  # DEBUG D#297ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.53401 => D#297ptD.0
  # DEBUG D#295ptD.0 => D#297ptD.0->_M_implD.38272._M_end_of_storageD.38276
  # DEBUG D#294ptD.0 => (long intD.12) D#295ptD.0
  # VUSE <.MEM_130>
  # PT = nonlocal escaped null 
  _72 = MEM[(struct _Vector_baseD.38039 *)&save_uD.53384]._M_implD.38272._M_startD.38274;
  # DEBUG D#293ptD.0 => (long intD.12) _72
  # DEBUG D#292ptD.0 => D#294ptD.0 - D#293ptD.0
  # DEBUG D#291ptD.0 => D#292ptD.0 /[ex] 8
  # DEBUG D#288ptD.0 => D#297ptD.0
  # DEBUG D#289ptD.0 => (long unsigned intD.14) D#291ptD.0
  # DEBUG __pD.53404 => _72
  # DEBUG thisD.53402 => D#288ptD.0
  # DEBUG __nD.53403 => D#289ptD.0
  # DEBUG D#287ptD.0 => D#289ptD.0
  # DEBUG D#286ptD.0 => D#288ptD.0
  if (_72 != 0B)
    goto <bb 62>;
  else
    goto <bb 63>;
;;    succ:       62 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       61 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#285ptD.0 => &D#286ptD.0->_M_implD.38272
  # DEBUG D#283ptD.0 => D#285ptD.0
  # DEBUG D#284ptD.0 => D#287ptD.0
  # DEBUG __pD.53408 => _72
  # DEBUG __aD.53406 => D#283ptD.0
  # DEBUG __nD.53407 => D#284ptD.0
  # DEBUG D#282ptD.0 => D#284ptD.0
  # DEBUG D#281ptD.0 => D#283ptD.0
  # DEBUG D#279ptD.0 => D#281ptD.0
  # DEBUG D#280ptD.0 => D#282ptD.0
  # DEBUG __pD.53411 => _72
  # DEBUG thisD.53409 => D#279ptD.0
  # DEBUG D.53410 => D#280ptD.0
  # .MEM_194 = VDEF <.MEM_130>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_72);
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       61 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_131 = PHI <.MEM_130(61), .MEM_194(62)>
  # DEBUG D#290ptD.0 => &D#297ptD.0->_M_implD.38272
  # DEBUG thisD.53412 => D#290ptD.0
  # DEBUG thisD.53413 => D#290ptD.0
  # DEBUG thisD.53414 => D#290ptD.0
  # .MEM_199 = VDEF <.MEM_131>
  MEM[(struct  &)&save_uD.53384] ={v} {CLOBBER};
  [LP 3] resx 6
;;    succ:       64 (EH,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       63 (EH,EXECUTABLE)
<L3>: [LP 3]
  # DEBUG thisD.53385 => &save_xD.53383
  # DEBUG D#273ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.47115 => D#273ptD.0
  # DEBUG D#276ptD.0 => save_xD.53383.D.38036._M_implD.37527._M_finishD.37530
  # DEBUG D#275ptD.0 => save_xD.53383.D.38036._M_implD.37527._M_startD.37529
  # DEBUG D#191ptD.0 => D#275ptD.0
  # DEBUG D#192ptD.0 => D#276ptD.0
  # DEBUG __firstD.47114 => D#191ptD.0
  # DEBUG __lastD.47113 => D#192ptD.0
  # DEBUG D.47112 => D#193ptD.0
  # DEBUG D#190ptD.0 => D#192ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0
  # DEBUG D#187ptD.0 => D#189ptD.0
  # DEBUG D#188ptD.0 => D#190ptD.0
  # DEBUG __firstD.46097 => D#187ptD.0
  # DEBUG __lastD.46096 => D#188ptD.0
  # DEBUG D#186ptD.0 => D#188ptD.0
  # DEBUG D#185ptD.0 => D#187ptD.0
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0
  # DEBUG D.46086 => D#183ptD.0
  # DEBUG D.46085 => D#184ptD.0
  # DEBUG D#274ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.53386 => D#274ptD.0
  # DEBUG D#272ptD.0 => D#274ptD.0->_M_implD.37527._M_end_of_storageD.37531
  # DEBUG D#271ptD.0 => (long intD.12) D#272ptD.0
  # VUSE <.MEM_199>
  # PT = nonlocal escaped null 
  _73 = MEM[(struct _Vector_baseD.37294 *)&save_xD.53383]._M_implD.37527._M_startD.37529;
  # DEBUG D#270ptD.0 => (long intD.12) _73
  # DEBUG D#269ptD.0 => D#271ptD.0 - D#270ptD.0
  # DEBUG D#268ptD.0 => D#269ptD.0 /[ex] 8
  # DEBUG D#265ptD.0 => D#274ptD.0
  # DEBUG D#266ptD.0 => (long unsigned intD.14) D#268ptD.0
  # DEBUG __pD.53389 => _73
  # DEBUG thisD.53387 => D#265ptD.0
  # DEBUG __nD.53388 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  if (_73 != 0B)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#262ptD.0 => &D#263ptD.0->_M_implD.37527
  # DEBUG D#260ptD.0 => D#262ptD.0
  # DEBUG D#261ptD.0 => D#264ptD.0
  # DEBUG __pD.53393 => _73
  # DEBUG __aD.53391 => D#260ptD.0
  # DEBUG __nD.53392 => D#261ptD.0
  # DEBUG D#259ptD.0 => D#261ptD.0
  # DEBUG D#258ptD.0 => D#260ptD.0
  # DEBUG D#256ptD.0 => D#258ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0
  # DEBUG __pD.53396 => _73
  # DEBUG thisD.53394 => D#256ptD.0
  # DEBUG D.53395 => D#257ptD.0
  # .MEM_200 = VDEF <.MEM_199>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_73);
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       64 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_132 = PHI <.MEM_199(64), .MEM_200(65)>
  # DEBUG D#267ptD.0 => &D#274ptD.0->_M_implD.37527
  # DEBUG thisD.53397 => D#267ptD.0
  # DEBUG thisD.53398 => D#267ptD.0
  # DEBUG thisD.53399 => D#267ptD.0
  # .MEM_205 = VDEF <.MEM_132>
  MEM[(struct  &)&save_xD.53383] ={v} {CLOBBER};
  [LP 2] resx 5
;;    succ:       67 (EH,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW)
;;    pred:       66 (EH,EXECUTABLE)
<L12>: [LP 2]
  goto <bb 69> (<L0>);
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L4>: [LP 5]
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                67 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_136(68), .MEM_205(67)>
<L0>:
  # DEBUG D#489ptD.0 => &this_2(D)->_destD.34942
  # DEBUG thisD.50116 => D#489ptD.0
  # DEBUG D#167ptD.0 => &D#489ptD.0->D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D#489ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D#489ptD.0->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D#489ptD.0->D.34940
  # DEBUG thisD.50117 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.34198 *)this_2(D) + 16B]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _5
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.50120 => D#168ptD.0
  # DEBUG __pD.50119 => _5
  # DEBUG __nD.50118 => D#161ptD.0
  if (_5 != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;
;;    succ:       70 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.50124 => _5
  # DEBUG __aD.50122 => D#157ptD.0
  # DEBUG __nD.50123 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.50127 => _5
  # DEBUG thisD.50125 => D#153ptD.0
  # DEBUG D.50126 => D#154ptD.0
  # .MEM_18 = VDEF <.MEM_1>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       69 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_1(69), .MEM_18(70)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.50128 => D#160ptD.0
  # DEBUG thisD.50129 => D#160ptD.0
  # DEBUG thisD.50130 => D#160ptD.0
  # .MEM_23 = VDEF <.MEM_14>
  MEM[(struct  &)this_2(D) + 16] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       72 (EH,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       71 (EH,EXECUTABLE)
<L1>: [LP 1]
  # DEBUG D#488ptD.0 => &this_2(D)->D.34973
  # DEBUG thisD.50131 => D#488ptD.0
  # .MEM_25 = VDEF <.MEM_23>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 73, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       48 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _67 = PHI <_54(48)>
  # DEBUG D#390ptD.0 => &this_2(D)->_destD.34942
  # DEBUG D#100ptD.0 => D#390ptD.0
  # DEBUG __nD.53464 => _51
  # DEBUG thisD.53463 => D#100ptD.0
  # .MEM_178 = VDEF <.MEM_176>
  *_67 = i_119;
  # RANGE [1, 2147483647] NONZERO 2147483647
  i_69 = i_119 + 1;
  # DEBUG iD.53459 => i_69
  # DEBUG iD.53459 => i_69
  # VUSE <.MEM_178>
  _40 = this_2(D)->D.34973._nodesD.33855;
  if (_40 <= i_69)
    goto <bb 53>;
  else
    goto <bb 74>;
;;    succ:       53 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                74 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 74, loop depth 1, count 0, freq 437, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 [97.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 44>;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 2, count 0, freq 5000, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       47 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE ~[2147483648, 18446744071562067967]
  _57 = (long unsigned intD.14) j_50;
  # DEBUG D#388ptD.0 => &this_2(D)->_destD.34942
  # DEBUG D#100ptD.0 => D#388ptD.0
  # DEBUG __nD.53466 => _57
  # DEBUG thisD.53465 => D#100ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _59 = _57 * 4;
  # PT = nonlocal escaped 
  _60 = pretmp_187 + _59;
  # VUSE <.MEM_176>
  _61 = *_60;
  if (_61 == -1)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [53.5%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [46.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 75, next block 1, flags: (NEW, REACHABLE)
;;    pred:       11 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _218 = __n_39 * 4;
  # PT = nonlocal escaped 
  # ALIGN = 4, MISALIGN = 0
  _121 = (intD.9 *) _218;
  # DEBUG D#381ptD.0 => &__tmpD.53571
  # DEBUG D#381ptD.0 => &__tmpD.53571
  # DEBUG D#382ptD.0 => &__valD.53449
  # DEBUG __nD.53634 => __n_39
  # DEBUG D#379ptD.0 => D#381ptD.0
  # DEBUG thisD.53631 => D#379ptD.0
  # DEBUG thisD.53632 => D#381ptD.0
  # DEBUG D#380ptD.0 => D#382ptD.0
  # DEBUG __valueD.53633 => D#380ptD.0
  # DEBUG D#378ptD.0 => &D#379ptD.0->D.34940
  # DEBUG thisD.48338 => D#378ptD.0
  # DEBUG D#376ptD.0 => D#380ptD.0
  # DEBUG __firstD.53638 => NULL
  # DEBUG __nD.53637 => __n_39
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.53635 => D#375ptD.0
  # DEBUG D.53636 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.53641 => NULL
  # DEBUG __nD.53640 => __n_39
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.53639 => D#373ptD.0
  # DEBUG __assignableD.53643 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.53646 => NULL
  # DEBUG __nD.53645 => __n_39
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.53644 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.53649 => NULL
  # DEBUG __nD.53648 => __n_39
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.53647 => D#307ptD.0
  # DEBUG __itD.47237 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.53652 => NULL
  # DEBUG __nD.53651 => __n_39
  # DEBUG __valueD.53650 => D#306ptD.0
  # DEBUG __tmpD.53653 => -1
  # DEBUG __niterD.53654 => __n_39
  # DEBUG __niterD.53654 => __n_39
  # DEBUG __firstD.53652 => 0B
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for MEM[(struct TrafficPattern *)this_2(D)]._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct TrafficPattern *)this_2(D)]
	Access function 0: 0
Creating dr for MEM[(struct TrafficPattern *)this_2(D)]._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct TrafficPattern *)this_2(D)]
	Access function 0: 64
Creating dr for this_2(D)->D.34973._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_2(D) + 16B]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_2(D) + 16B]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_end_of_storage
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_2(D) + 16B]
	Access function 0: 128
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(struct _Vector_impl *)&save_x]._M_start
analyze_innermost: success.
	base_address: &save_x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)&save_x]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)&save_x]._M_finish
analyze_innermost: success.
	base_address: &save_x
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)&save_x]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)&save_x]._M_end_of_storage
analyze_innermost: success.
	base_address: &save_x
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)&save_x]
	Access function 0: 128
Creating dr for MEM[(struct _Vector_impl *)&save_u]._M_start
analyze_innermost: success.
	base_address: &save_u
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)&save_u]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)&save_u]._M_finish
analyze_innermost: success.
	base_address: &save_u
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)&save_u]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)&save_u]._M_end_of_storage
analyze_innermost: success.
	base_address: &save_u
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)&save_u]
	Access function 0: 128
Creating dr for this_2(D)->D.34973._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for MEM[(int * *)this_2(D) + 16B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 16B]
Creating dr for MEM[(int * *)this_2(D) + 32B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 32B]
Creating dr for MEM[(int * &)this_2(D) + 16]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_2(D) + 16]
Creating dr for MEM[(int * &)this_2(D) + 16]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_2(D) + 16]
Creating dr for MEM[(int * &)this_2(D) + 16]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_2(D) + 16]
Creating dr for MEM[(int * &)this_2(D) + 24]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_2(D) + 24]
Creating dr for MEM[(int * &)this_2(D) + 32]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(int * &)this_2(D) + 32]
Creating dr for MEM[(int * *)this_2(D) + 24B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 24B]
Creating dr for MEM[(struct vector *)this_2(D) + 16B].D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 16B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_2(D)->D.34973._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for this_2(D)->D.34973._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for MEM[(int * *)this_2(D) + 24B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 24B]
Creating dr for MEM[(int * *)this_2(D) + 16B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 16B]
Creating dr for MEM[(int * *)this_2(D) + 16B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 16B]
Creating dr for *_60
analyze_innermost: success.
	base_address: pretmp_187
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_187
	Access function 0: {0B, +, 4}_2
Creating dr for *_60
analyze_innermost: success.
	base_address: pretmp_187
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_60
Creating dr for *_60
analyze_innermost: success.
	base_address: pretmp_187
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_60
Creating dr for *_54
analyze_innermost: success.
	base_address: pretmp_187
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_187
	Access function 0: {0B, +, 4}_2
Creating dr for *_54
analyze_innermost: success.
	base_address: pretmp_187
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_54
Creating dr for *_54
analyze_innermost: success.
	base_address: pretmp_187
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_54
Creating dr for this_2(D)->D.34973._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for this_2(D)->D.34973._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for this_2(D)->D.34973._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for this_2(D)->D.34973._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for this_2(D)->D.34973._nodes
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)&save_u]._M_impl._M_start
analyze_innermost: success.
	base_address: &save_u
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)&save_u]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)&save_u]._M_impl._M_start
analyze_innermost: success.
	base_address: &save_u
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)&save_u]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)&save_x]._M_impl._M_start
analyze_innermost: success.
	base_address: &save_x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)&save_x]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 16B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:45)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:21)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:8)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:70, LOOPS:2, CONDITIONS:27, STMTS:764)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#491 => &this_2(D)->D.34973
    # DEBUG this => D#491
    # DEBUG nodes => nodes_4(D)
    # .MEM_13 = VDEF <.MEM_3(D)>
    MEM[(struct TrafficPattern *)this_2(D)]._vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
    # .MEM_7 = VDEF <.MEM_13>
    MEM[(struct TrafficPattern *)this_2(D)]._nodes = nodes_4(D);
    if (nodes_4(D) <= 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {})
  {
    <bb 3>:
    # DEBUG D#62 => D#491
    # DEBUG D#63 => nodes_4(D)
    # .MEM_26 = VDEF <.MEM_7>
    TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_68 })
  {
    <bb 4>:
    # .MEM_6 = VDEF <.MEM_7>
    this_2(D)->D.34973._vptr.TrafficPattern = &MEM[(void *)&_ZTV31RandomPermutationTrafficPattern + 16B];
    # DEBUG D#490 => &this_2(D)->_dest
    # DEBUG this => D#490
    # DEBUG D#209 => &D#490->D.34940
    # DEBUG this => D#209
    # DEBUG D#208 => &D#209->_M_impl
    # DEBUG this => D#208
    # DEBUG this => D#208
    # DEBUG this => D#208
    # .MEM_15 = VDEF <.MEM_6>
    MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_start = 0B;
    # .MEM_16 = VDEF <.MEM_15>
    MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_finish = 0B;
    # .MEM_17 = VDEF <.MEM_16>
    MEM[(struct _Vector_impl *)this_2(D) + 16B]._M_end_of_storage = 0B;
    _8 = (long unsigned int) nodes_4(D);
    _9 = &this_2(D)->_dest;
    # DEBUG this => _9
    # DEBUG __new_size => _8
    # .MEM_133 = VDEF <.MEM_17>
    __x = 0;
    # DEBUG __x => __x
    # DEBUG D#99 => _9
    # DEBUG D#99 => _9
    # DEBUG this => D#99
    # DEBUG this => D#99
    # DEBUG D#99 => _9
    # DEBUG D#99 => _9
    # DEBUG this => D#99
    # DEBUG this => D#99
    # DEBUG this => _9
    # DEBUG D#118 => &_9->D.34940._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#118
    # DEBUG this => _9
    # .MEM_135 = VDEF <.MEM_133>
    MEM[(struct __normal_iterator *)&__position] = 0B;
    # DEBUG __n => _8
    # DEBUG __x => &__x
    # .MEM_136 = VDEF <.MEM_135>
    std::vector<int>::_M_fill_insert (_9, __position, _8, &__x);

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_60 })
  {
    <bb 5>:
    # DEBUG this => this_2(D)
    # DEBUG seed => seed_11(D)
    # DEBUG this => &save_x
    # DEBUG D#255 => &save_x.D.38036
    # DEBUG this => D#255
    # DEBUG D#254 => &D#255->_M_impl
    # DEBUG this => D#254
    # DEBUG this => D#254
    # DEBUG this => D#254
    # .MEM_137 = VDEF <.MEM_136>
    MEM[(struct _Vector_impl *)&save_x]._M_start = 0B;
    # .MEM_138 = VDEF <.MEM_137>
    MEM[(struct _Vector_impl *)&save_x]._M_finish = 0B;
    # .MEM_139 = VDEF <.MEM_138>
    MEM[(struct _Vector_impl *)&save_x]._M_end_of_storage = 0B;
    # DEBUG this => &save_u
    # DEBUG D#278 => &save_u.D.38781
    # DEBUG this => D#278
    # DEBUG D#277 => &D#278->_M_impl
    # DEBUG this => D#277
    # DEBUG this => D#277
    # DEBUG this => D#277
    # .MEM_140 = VDEF <.MEM_139>
    MEM[(struct _Vector_impl *)&save_u]._M_start = 0B;
    # .MEM_141 = VDEF <.MEM_140>
    MEM[(struct _Vector_impl *)&save_u]._M_finish = 0B;
    # .MEM_142 = VDEF <.MEM_141>
    MEM[(struct _Vector_impl *)&save_u]._M_end_of_storage = 0B;
    # .MEM_143 = VDEF <.MEM_142>
    SaveRandomState (&save_x, &save_u);

  }
  bb_6 (preds = {bb_5 }, succs = {bb_8 bb_7 })
  {
    <bb 6>:
    _10 = (long int) seed_11(D);
    # DEBUG seed => _10
    # .MEM_144 = VDEF <.MEM_143>
    ran_start (_10);
    goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_61 })
  {
  <L6>:
    goto <bb 61> (<L2>);

  }
  bb_8 (preds = {bb_6 }, succs = {bb_10 bb_9 })
  {
    <bb 8>:
    # .MEM_145 = VDEF <.MEM_144>
    ranf_start (_10);
    goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_61 })
  {
  <L7>:
    goto <bb 61> (<L2>);

  }
  bb_10 (preds = {bb_8 }, succs = {bb_11 bb_26 })
  {
    <bb 10>:
    # VUSE <.MEM_145>
    _37 = this_2(D)->D.34973._nodes;
    # DEBUG D#756 => &this_2(D)->_dest
    # DEBUG this => D#756
    # DEBUG __first => _37
    # DEBUG __last => -1
    # DEBUG this => D#756
    # DEBUG __n => _37
    # DEBUG __val => -1
    # DEBUG __val => -1
    __n_39 = (size_t) _37;
    # DEBUG this => D#756
    # DEBUG __n => __n_39
    # DEBUG __val => &__val
    # VUSE <.MEM_145>
    __first_12 = MEM[(int * *)this_2(D) + 16B];
    # DEBUG D#110 => D#756
    # VUSE <.MEM_145>
    _76 = MEM[(int * *)this_2(D) + 32B];
    # DEBUG D#110 => D#756
    # DEBUG this => D#110
    # DEBUG this => D#110
    _77 = (long int) _76;
    _78 = (long int) __first_12;
    _79 = _77 - _78;
    _80 = _79 /[ex] 4;
    _81 = (size_type) _80;
    if (__n_39 > _81)
      goto <bb 11>;
    else
      goto <bb 26>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 bb_76 })
  {
    <bb 11>:
    # DEBUG this => D#756
    # DEBUG __n => __n_39
    # DEBUG __val => &__val
    # DEBUG D#384 => &D#756->D.34940
    # DEBUG this => D#384
    # DEBUG D#755 => &MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl
    # DEBUG this => &__tmp
    # DEBUG __n => __n_39
    # DEBUG __value => &__val
    # DEBUG __a => D#755
    # DEBUG D#383 => &__tmp.D.34940
    # DEBUG this => D#383
    # DEBUG __n => __n_39
    # DEBUG __a => D#755
    # DEBUG D#367 => &D#383->_M_impl
    # DEBUG this => D#367
    # DEBUG __a => D#755
    # DEBUG this => D#367
    # DEBUG __a => D#755
    # DEBUG this => D#367
    # DEBUG D.46559 => D#755
    # DEBUG this => D#383
    # DEBUG __n => __n_39
    # DEBUG D#346 => D#383
    # DEBUG __n => __n_39
    # DEBUG this => D#346
    # DEBUG D#345 => D#346
    if (__n_39 != 0)
      goto <bb 12>;
    else
      goto <bb 76>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 bb_15 })
  {
    <bb 12>:
    # DEBUG D#344 => &D#345->_M_impl
    # DEBUG D#343 => D#344
    # DEBUG __n => __n_39
    # DEBUG __a => D#343
    # DEBUG D#342 => D#343
    # DEBUG D#340 => D#342
    # DEBUG D#341 => 0B
    # DEBUG __n => __n_39
    # DEBUG this => D#340
    # DEBUG D.53661 => D#341
    # DEBUG D#339 => D#340
    # DEBUG D#338 => D#339
    # DEBUG this => D#338
    if (__n_39 > 4611686018427387903)
      goto <bb 13>;
    else
      goto <bb 15>;

  }
  bb_13 (preds = {bb_12 }, succs = {bb_14 })
  {
    <bb 13>:
    # .MEM_156 = VDEF <.MEM_145>
    std::__throw_bad_alloc ();

  }
  bb_14 (preds = {bb_13 }, succs = {bb_61 })
  {
  <L8>:
    goto <bb 61> (<L2>);

  }
  bb_15 (preds = {bb_12 }, succs = {bb_17 bb_16 })
  {
    <bb 15>:
    _116 = __n_39 * 4;
    # .MEM_155 = VDEF <.MEM_145>
    _117 = operator new (_116);
    goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_61 })
  {
  <L9>:
    goto <bb 61> (<L2>);

  }
  bb_17 (preds = {bb_15 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    _110 = _117 + _116;
    # DEBUG D#381 => &__tmp
    # DEBUG D#381 => &__tmp
    # DEBUG D#382 => &__val
    # DEBUG __n => __n_39
    # DEBUG D#379 => D#381
    # DEBUG this => D#379
    # DEBUG this => D#381
    # DEBUG D#380 => D#382
    # DEBUG __value => D#380
    # DEBUG D#378 => &D#379->D.34940
    # DEBUG this => D#378
    # DEBUG D#376 => D#380
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG D#375 => D#376
    # DEBUG __x => D#375
    # DEBUG D.53636 => D#377
    # DEBUG D#374 => D#375
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG D#373 => D#374
    # DEBUG __x => D#373
    # DEBUG __assignable => 1
    # DEBUG D#372 => D#373
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG D#371 => D#372
    # DEBUG __x => D#371
    # DEBUG D#308 => D#371
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG D#307 => D#308
    # DEBUG __value => D#307
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG D#306 => D#307
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG __value => D#306
    # DEBUG __tmp => -1
    # DEBUG __niter => __n_39
    # DEBUG __niter => __n_39
    # DEBUG __first => _117
    if (__n_39 == 0)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_23 })
  {
    <bb 18>:
    # VUSE <.MEM_155>
    pretmp_22 = MEM[(int * &)this_2(D) + 16];
    goto <bb 23>;

  }
  bb_19 (preds = {bb_17 }, succs = {bb_22 })
  {
    <bb 19>:
    _165 = (sizetype) _37;
    _152 = _165 * 4;
    # .MEM_160 = VDEF <.MEM_155>
    __builtin_memset (_117, 255, _152);

  }
  bb_22 (preds = {bb_19 }, succs = {bb_23 })
  {
    <bb 22>:
    _215 = (long unsigned int) _37;
    _68 = _215 * 4;
    __first_20 = _117 + _68;
    # VUSE <.MEM_160>
    pretmp_21 = MEM[(int * &)this_2(D) + 16];

  }
  bb_23 (preds = {bb_22 bb_18 bb_76 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # __first_159 = PHI <__first_20(22), _117(18), 0B(76)>
    # .MEM_162 = PHI <.MEM_160(22), .MEM_155(18), .MEM_145(76)>
    # _213 = PHI <_110(22), _110(18), _121(76)>
    # __first_212 = PHI <_117(22), _117(18), 0B(76)>
    # prephitmp_24 = PHI <pretmp_21(22), pretmp_22(18), __first_12(76)>
    # DEBUG D#386 => &D#756->D.34940._M_impl
    # DEBUG this => &__tmp.D.34940._M_impl
    # DEBUG __x => D#386
    # DEBUG D#305 => &D#386->_M_start
    # DEBUG D#304 => &MEM[(struct _Vector_impl *)&__tmp]._M_start
    # DEBUG __a => D#304
    # DEBUG __b => D#305
    # DEBUG __tmp => __first_212
    # DEBUG D#757 => MEM[(int * &)this_2(D) + 16]
    # .MEM_164 = VDEF <.MEM_162>
    MEM[(int * &)this_2(D) + 16] = __first_212;
    # DEBUG D#303 => &D#386->_M_finish
    # DEBUG D#302 => &MEM[(struct _Vector_impl *)&__tmp]._M_finish
    # DEBUG __a => D#302
    # DEBUG __b => D#303
    # DEBUG __tmp => __first_159
    # .MEM_166 = VDEF <.MEM_164>
    MEM[(int * &)this_2(D) + 24] = __first_159;
    # DEBUG D#301 => &D#386->_M_end_of_storage
    # DEBUG D#300 => &MEM[(struct _Vector_impl *)&__tmp]._M_end_of_storage
    # DEBUG __a => D#300
    # DEBUG __b => D#301
    # DEBUG __tmp => _213
    # .MEM_168 = VDEF <.MEM_166>
    MEM[(int * &)this_2(D) + 32] = _213;
    # DEBUG this => &__tmp
    # DEBUG D#167 => &__tmp.D.34940
    # DEBUG this => D#167
    # DEBUG D#170 => __tmp.D.34940._M_impl._M_finish
    # DEBUG D#169 => __tmp.D.34940._M_impl._M_start
    # DEBUG __first => D#169
    # DEBUG __last => D#170
    # DEBUG D.45958 => NULL
    # DEBUG D#140 => D#169
    # DEBUG D#141 => D#170
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # DEBUG D#168 => &__tmp.D.34940
    # DEBUG this => D#168
    # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
    # DEBUG D#165 => (long int) D#166
    # DEBUG D#164 => (long int) D#757
    # DEBUG D#163 => D#165 - D#164
    # DEBUG D#162 => D#163 /[ex] 4
    # DEBUG D#161 => (long unsigned int) D#162
    # DEBUG this => D#168
    # DEBUG __p => D#757
    # DEBUG __n => D#161
    if (prephitmp_24 != 0B)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#159 => &D#168->_M_impl
    # DEBUG D#157 => D#159
    # DEBUG D#158 => D#161
    # DEBUG __p => D#757
    # DEBUG __a => D#157
    # DEBUG __n => D#158
    # DEBUG D#156 => D#158
    # DEBUG D#155 => D#157
    # DEBUG D#153 => D#155
    # DEBUG D#154 => D#156
    # DEBUG __p => D#757
    # DEBUG this => D#153
    # DEBUG D.53593 => D#154
    # .MEM_169 = VDEF <.MEM_168>
    operator delete (prephitmp_24);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_42 })
  {
    <bb 25>:
    # .MEM_122 = PHI <.MEM_168(23), .MEM_169(24)>
    # DEBUG D#160 => &D#168->_M_impl
    # DEBUG this => D#160
    # DEBUG this => D#160
    # DEBUG this => D#160
    # .MEM_175 = VDEF <.MEM_122>
    __tmp ={v} {CLOBBER};
    # VUSE <.MEM_175>
    pretmp_182 = this_2(D)->D.34973._nodes;
    goto <bb 42>;

  }
  bb_26 (preds = {bb_10 }, succs = {bb_28 bb_27 })
  {
    <bb 26>:
    # DEBUG D#99 => D#756
    # VUSE <.MEM_145>
    __first_82 = MEM[(int * *)this_2(D) + 24B];
    # DEBUG D#99 => D#756
    # DEBUG this => D#99
    # DEBUG this => D#99
    _83 = (long int) __first_82;
    _84 = _83 - _78;
    _85 = _84 /[ex] 4;
    _86 = (size_type) _85;
    if (__n_39 > _86)
      goto <bb 28>;
    else
      goto <bb 27>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_41 bb_37 })
  {
    <bb 27>:
    # DEBUG __niter => __n_39
    # DEBUG __first => __first_12
    if (__n_39 == 0)
      goto <bb 41>;
    else
      goto <bb 37>;

  }
  bb_28 (preds = {bb_26 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG __first => __first_12
    if (__first_12 == __first_82)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 bb_32 }, succs = {bb_36 })
  {
    <bb 29>:
    # .MEM_217 = PHI <.MEM_145(28), .MEM_201(32)>
    # DEBUG D#385 => &D#756->D.34940
    # DEBUG this => D#385
    # DEBUG D#99 => D#756
    # DEBUG D#99 => D#756
    # DEBUG this => D#99
    # DEBUG this => D#99
    __n_90 = __n_39 - _86;
    # DEBUG D#376 => &__val
    # DEBUG __first => __first_82
    # DEBUG __n => __n_90
    # DEBUG D#375 => D#376
    # DEBUG __x => D#375
    # DEBUG D.53493 => D#377
    # DEBUG D#374 => D#375
    # DEBUG __first => __first_82
    # DEBUG __n => __n_90
    # DEBUG D#373 => D#374
    # DEBUG __x => D#373
    # DEBUG __assignable => 1
    # DEBUG D#372 => D#373
    # DEBUG __first => __first_82
    # DEBUG __n => __n_90
    # DEBUG D#371 => D#372
    # DEBUG __x => D#371
    # DEBUG D#308 => D#371
    # DEBUG __first => __first_82
    # DEBUG __n => __n_90
    # DEBUG D#307 => D#308
    # DEBUG __value => D#307
    # DEBUG __it => __first_82
    # DEBUG __it => __first_82
    # DEBUG D#306 => D#307
    # DEBUG __first => NULL
    # DEBUG __n => __n_90
    # DEBUG __value => D#306
    # DEBUG __tmp => -1
    # DEBUG __niter => __n_90
    # DEBUG __niter => __n_90
    # DEBUG __first => __first_82
    _113 = __n_90 * 4;
    # .MEM_161 = VDEF <.MEM_217>
    __builtin_memset (__first_82, 255, _113);
    goto <bb 36>;

  }
  bb_30 (preds = {bb_28 }, succs = {bb_32 })
  {
    <bb 30>:
    _34 = (unsigned long) __first_82;
    _214 = __first_12 + 4;
    _28 = (unsigned long) _214;
    _148 = _34 - _28;
    _94 = _148 /[ex] 4;
    _95 = _94 & 4611686018427387903;
    _112 = _95 + 1;
    _195 = _112 * 4;
    # .MEM_154 = VDEF <.MEM_145>
    __builtin_memset (__first_12, 255, _195);

  }
  bb_32 (preds = {bb_30 }, succs = {bb_29 })
  {
    <bb 32>:
    # .MEM_201 = PHI <.MEM_154(30)>
    goto <bb 29>;

  }
  bb_36 (preds = {bb_29 }, succs = {bb_42 })
  {
    <bb 36>:
    _181 = __n_90 * 4;
    __first_66 = __first_82 + _181;
    # .MEM_149 = VDEF <.MEM_161>
    MEM[(struct vector *)this_2(D) + 16B].D.34940._M_impl._M_finish = __first_66;
    # VUSE <.MEM_149>
    pretmp_183 = this_2(D)->D.34973._nodes;
    goto <bb 42>;

  }
  bb_37 (preds = {bb_27 }, succs = {bb_40 })
  {
    <bb 37>:
    _163 = (sizetype) _37;
    _38 = _163 * 4;
    # .MEM_158 = VDEF <.MEM_145>
    __builtin_memset (__first_12, 255, _38);

  }
  bb_40 (preds = {bb_37 }, succs = {bb_41 })
  {
    <bb 40>:
    _203 = (long unsigned int) _37;
    _202 = _203 * 4;
    __first_65 = __first_12 + _202;
    # VUSE <.MEM_158>
    pretmp_204 = this_2(D)->D.34973._nodes;

  }
  bb_41 (preds = {bb_40 bb_27 }, succs = {bb_77 })
  {
    <bb 41>:
    # __first_153 = PHI <__first_65(40), __first_12(27)>
    # .MEM_107 = PHI <.MEM_158(40), .MEM_145(27)>
    # prephitmp_19 = PHI <pretmp_204(40), _37(27)>

  }
  bb_77 (preds = {bb_41 }, succs = {bb_42 })
  {
    <bb 77>:
    # DEBUG D#145 => D#756
    # DEBUG __pos => __first_153
    # DEBUG D#144 => D#145
    # DEBUG this => D#144
    # DEBUG D#142 => &D#144->D.34940
    # DEBUG this => D#142
    # DEBUG D#143 => D#144->D.34940._M_impl._M_finish
    # DEBUG __first => __first_153
    # DEBUG __last => D#143
    # DEBUG D.45839 => NULL
    # DEBUG D#140 => __first_153
    # DEBUG D#141 => D#143
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # .MEM_151 = VDEF <.MEM_107>
    MEM[(int * *)this_2(D) + 24B] = __first_153;

  }
  bb_42 (preds = {bb_25 bb_77 bb_36 }, succs = {bb_53 bb_43 })
  {
    <bb 42>:
    # .MEM_108 = PHI <.MEM_175(25), .MEM_151(77), .MEM_149(36)>
    # prephitmp_184 = PHI <pretmp_182(25), prephitmp_19(77), pretmp_183(36)>
    # DEBUG i => 0
    if (prephitmp_184 <= 0)
      goto <bb 53>;
    else
      goto <bb 43>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:

  }
  bb_45 (preds = {bb_44 }, succs = {bb_61 })
  {
  <L10>:
    goto <bb 61> (<L2>);

  }
  bb_52 (preds = {bb_50 }, succs = {})
  {
    <bb 52>:
    # .MEM_177 = VDEF <.MEM_176>
    __assert_fail ("j < _nodes", "traffic.cpp", 358, &__PRETTY_FUNCTION__);

  }
  bb_53 (preds = {bb_42 bb_73 }, succs = {bb_55 bb_54 })
  {
    <bb 53>:
    # .MEM_216 = PHI <.MEM_108(42), .MEM_178(73)>
    # .MEM_179 = VDEF <.MEM_216>
    RestoreRandomState (&save_x, &save_u);
    goto <bb 55>;

  }
  bb_54 (preds = {bb_53 }, succs = {bb_61 })
  {
  <L11>:
    goto <bb 61> (<L2>);

  }
  bb_55 (preds = {bb_53 }, succs = {bb_56 bb_57 })
  {
    <bb 55>:
    # DEBUG this => &save_u
    # DEBUG D#296 => &save_u.D.38781
    # DEBUG this => D#296
    # DEBUG D#299 => save_u.D.38781._M_impl._M_finish
    # DEBUG D#298 => save_u.D.38781._M_impl._M_start
    # DEBUG D#202 => D#298
    # DEBUG D#203 => D#299
    # DEBUG __first => D#202
    # DEBUG __last => D#203
    # DEBUG D.47202 => D#204
    # DEBUG D#201 => D#203
    # DEBUG D#200 => D#202
    # DEBUG D#198 => D#200
    # DEBUG D#199 => D#201
    # DEBUG __first => D#198
    # DEBUG __last => D#199
    # DEBUG D#197 => D#199
    # DEBUG D#196 => D#198
    # DEBUG D#194 => D#196
    # DEBUG D#195 => D#197
    # DEBUG D.46124 => D#194
    # DEBUG D.46123 => D#195
    # DEBUG D#297 => &save_u.D.38781
    # DEBUG this => D#297
    # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
    # DEBUG D#294 => (long int) D#295
    # VUSE <.MEM_179>
    _70 = MEM[(struct _Vector_base *)&save_u]._M_impl._M_start;
    # DEBUG D#293 => (long int) _70
    # DEBUG D#292 => D#294 - D#293
    # DEBUG D#291 => D#292 /[ex] 8
    # DEBUG D#288 => D#297
    # DEBUG D#289 => (long unsigned int) D#291
    # DEBUG __p => _70
    # DEBUG this => D#288
    # DEBUG __n => D#289
    # DEBUG D#287 => D#289
    # DEBUG D#286 => D#288
    if (_70 != 0B)
      goto <bb 56>;
    else
      goto <bb 57>;

  }
  bb_56 (preds = {bb_55 }, succs = {bb_57 })
  {
    <bb 56>:
    # DEBUG D#285 => &D#286->_M_impl
    # DEBUG D#283 => D#285
    # DEBUG D#284 => D#287
    # DEBUG __p => _70
    # DEBUG __a => D#283
    # DEBUG __n => D#284
    # DEBUG D#282 => D#284
    # DEBUG D#281 => D#283
    # DEBUG D#279 => D#281
    # DEBUG D#280 => D#282
    # DEBUG __p => _70
    # DEBUG this => D#279
    # DEBUG D.53425 => D#280
    # .MEM_180 = VDEF <.MEM_179>
    operator delete (_70);

  }
  bb_57 (preds = {bb_55 bb_56 }, succs = {bb_58 bb_59 })
  {
    <bb 57>:
    # .MEM_128 = PHI <.MEM_179(55), .MEM_180(56)>
    # DEBUG D#290 => &D#297->_M_impl
    # DEBUG this => D#290
    # DEBUG this => D#290
    # DEBUG this => D#290
    # .MEM_185 = VDEF <.MEM_128>
    MEM[(struct  &)&save_u] ={v} {CLOBBER};
    # DEBUG this => &save_x
    # DEBUG D#273 => &save_x.D.38036
    # DEBUG this => D#273
    # DEBUG D#276 => save_x.D.38036._M_impl._M_finish
    # DEBUG D#275 => save_x.D.38036._M_impl._M_start
    # DEBUG D#191 => D#275
    # DEBUG D#192 => D#276
    # DEBUG __first => D#191
    # DEBUG __last => D#192
    # DEBUG D.47112 => D#193
    # DEBUG D#190 => D#192
    # DEBUG D#189 => D#191
    # DEBUG D#187 => D#189
    # DEBUG D#188 => D#190
    # DEBUG __first => D#187
    # DEBUG __last => D#188
    # DEBUG D#186 => D#188
    # DEBUG D#185 => D#187
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186
    # DEBUG D.46086 => D#183
    # DEBUG D.46085 => D#184
    # DEBUG D#274 => &save_x.D.38036
    # DEBUG this => D#274
    # DEBUG D#272 => D#274->_M_impl._M_end_of_storage
    # DEBUG D#271 => (long int) D#272
    # VUSE <.MEM_185>
    _71 = MEM[(struct _Vector_base *)&save_x]._M_impl._M_start;
    # DEBUG D#270 => (long int) _71
    # DEBUG D#269 => D#271 - D#270
    # DEBUG D#268 => D#269 /[ex] 8
    # DEBUG D#265 => D#274
    # DEBUG D#266 => (long unsigned int) D#268
    # DEBUG __p => _71
    # DEBUG this => D#265
    # DEBUG __n => D#266
    # DEBUG D#264 => D#266
    # DEBUG D#263 => D#265
    if (_71 != 0B)
      goto <bb 58>;
    else
      goto <bb 59>;

  }
  bb_58 (preds = {bb_57 }, succs = {bb_59 })
  {
    <bb 58>:
    # DEBUG D#262 => &D#263->_M_impl
    # DEBUG D#260 => D#262
    # DEBUG D#261 => D#264
    # DEBUG __p => _71
    # DEBUG __a => D#260
    # DEBUG __n => D#261
    # DEBUG D#259 => D#261
    # DEBUG D#258 => D#260
    # DEBUG D#256 => D#258
    # DEBUG D#257 => D#259
    # DEBUG __p => _71
    # DEBUG this => D#256
    # DEBUG D.53440 => D#257
    # .MEM_186 = VDEF <.MEM_185>
    operator delete (_71);

  }
  bb_59 (preds = {bb_57 bb_58 }, succs = {bb_1 })
  {
    <bb 59>:
    # .MEM_129 = PHI <.MEM_185(57), .MEM_186(58)>
    # DEBUG D#267 => &D#274->_M_impl
    # DEBUG this => D#267
    # DEBUG this => D#267
    # DEBUG this => D#267
    # .MEM_192 = VDEF <.MEM_129>
    save_x ={v} {CLOBBER};
    # .MEM_193 = VDEF <.MEM_192>
    save_u ={v} {CLOBBER};
    # VUSE <.MEM_193>
    return;

  }
  bb_60 (preds = {bb_5 }, succs = {bb_61 })
  {
  <L5>:

  }
  bb_61 (preds = {bb_60 bb_7 bb_9 bb_16 bb_45 bb_54 bb_14 }, succs = {bb_62 bb_63 })
  {
    # .MEM_130 = PHI <.MEM_143(60), .MEM_144(7), .MEM_145(9), .MEM_155(16), .MEM_176(45), .MEM_179(54), .MEM_156(14)>
  <L2>:
    # DEBUG this => &save_u
    # DEBUG D#296 => &save_u.D.38781
    # DEBUG this => D#296
    # DEBUG D#299 => save_u.D.38781._M_impl._M_finish
    # DEBUG D#298 => save_u.D.38781._M_impl._M_start
    # DEBUG D#202 => D#298
    # DEBUG D#203 => D#299
    # DEBUG __first => D#202
    # DEBUG __last => D#203
    # DEBUG D.47202 => D#204
    # DEBUG D#201 => D#203
    # DEBUG D#200 => D#202
    # DEBUG D#198 => D#200
    # DEBUG D#199 => D#201
    # DEBUG __first => D#198
    # DEBUG __last => D#199
    # DEBUG D#197 => D#199
    # DEBUG D#196 => D#198
    # DEBUG D#194 => D#196
    # DEBUG D#195 => D#197
    # DEBUG D.46124 => D#194
    # DEBUG D.46123 => D#195
    # DEBUG D#297 => &save_u.D.38781
    # DEBUG this => D#297
    # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
    # DEBUG D#294 => (long int) D#295
    # VUSE <.MEM_130>
    _72 = MEM[(struct _Vector_base *)&save_u]._M_impl._M_start;
    # DEBUG D#293 => (long int) _72
    # DEBUG D#292 => D#294 - D#293
    # DEBUG D#291 => D#292 /[ex] 8
    # DEBUG D#288 => D#297
    # DEBUG D#289 => (long unsigned int) D#291
    # DEBUG __p => _72
    # DEBUG this => D#288
    # DEBUG __n => D#289
    # DEBUG D#287 => D#289
    # DEBUG D#286 => D#288
    if (_72 != 0B)
      goto <bb 62>;
    else
      goto <bb 63>;

  }
  bb_62 (preds = {bb_61 }, succs = {bb_63 })
  {
    <bb 62>:
    # DEBUG D#285 => &D#286->_M_impl
    # DEBUG D#283 => D#285
    # DEBUG D#284 => D#287
    # DEBUG __p => _72
    # DEBUG __a => D#283
    # DEBUG __n => D#284
    # DEBUG D#282 => D#284
    # DEBUG D#281 => D#283
    # DEBUG D#279 => D#281
    # DEBUG D#280 => D#282
    # DEBUG __p => _72
    # DEBUG this => D#279
    # DEBUG D.53410 => D#280
    # .MEM_194 = VDEF <.MEM_130>
    operator delete (_72);

  }
  bb_63 (preds = {bb_61 bb_62 }, succs = {bb_64 })
  {
    <bb 63>:
    # .MEM_131 = PHI <.MEM_130(61), .MEM_194(62)>
    # DEBUG D#290 => &D#297->_M_impl
    # DEBUG this => D#290
    # DEBUG this => D#290
    # DEBUG this => D#290
    # .MEM_199 = VDEF <.MEM_131>
    MEM[(struct  &)&save_u] ={v} {CLOBBER};
    resx 6

  }
  bb_64 (preds = {bb_63 }, succs = {bb_65 bb_66 })
  {
  <L3>:
    # DEBUG this => &save_x
    # DEBUG D#273 => &save_x.D.38036
    # DEBUG this => D#273
    # DEBUG D#276 => save_x.D.38036._M_impl._M_finish
    # DEBUG D#275 => save_x.D.38036._M_impl._M_start
    # DEBUG D#191 => D#275
    # DEBUG D#192 => D#276
    # DEBUG __first => D#191
    # DEBUG __last => D#192
    # DEBUG D.47112 => D#193
    # DEBUG D#190 => D#192
    # DEBUG D#189 => D#191
    # DEBUG D#187 => D#189
    # DEBUG D#188 => D#190
    # DEBUG __first => D#187
    # DEBUG __last => D#188
    # DEBUG D#186 => D#188
    # DEBUG D#185 => D#187
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186
    # DEBUG D.46086 => D#183
    # DEBUG D.46085 => D#184
    # DEBUG D#274 => &save_x.D.38036
    # DEBUG this => D#274
    # DEBUG D#272 => D#274->_M_impl._M_end_of_storage
    # DEBUG D#271 => (long int) D#272
    # VUSE <.MEM_199>
    _73 = MEM[(struct _Vector_base *)&save_x]._M_impl._M_start;
    # DEBUG D#270 => (long int) _73
    # DEBUG D#269 => D#271 - D#270
    # DEBUG D#268 => D#269 /[ex] 8
    # DEBUG D#265 => D#274
    # DEBUG D#266 => (long unsigned int) D#268
    # DEBUG __p => _73
    # DEBUG this => D#265
    # DEBUG __n => D#266
    # DEBUG D#264 => D#266
    # DEBUG D#263 => D#265
    if (_73 != 0B)
      goto <bb 65>;
    else
      goto <bb 66>;

  }
  bb_65 (preds = {bb_64 }, succs = {bb_66 })
  {
    <bb 65>:
    # DEBUG D#262 => &D#263->_M_impl
    # DEBUG D#260 => D#262
    # DEBUG D#261 => D#264
    # DEBUG __p => _73
    # DEBUG __a => D#260
    # DEBUG __n => D#261
    # DEBUG D#259 => D#261
    # DEBUG D#258 => D#260
    # DEBUG D#256 => D#258
    # DEBUG D#257 => D#259
    # DEBUG __p => _73
    # DEBUG this => D#256
    # DEBUG D.53395 => D#257
    # .MEM_200 = VDEF <.MEM_199>
    operator delete (_73);

  }
  bb_66 (preds = {bb_64 bb_65 }, succs = {bb_67 })
  {
    <bb 66>:
    # .MEM_132 = PHI <.MEM_199(64), .MEM_200(65)>
    # DEBUG D#267 => &D#274->_M_impl
    # DEBUG this => D#267
    # DEBUG this => D#267
    # DEBUG this => D#267
    # .MEM_205 = VDEF <.MEM_132>
    MEM[(struct  &)&save_x] ={v} {CLOBBER};
    resx 5

  }
  bb_67 (preds = {bb_66 }, succs = {bb_69 })
  {
  <L12>:
    goto <bb 69> (<L0>);

  }
  bb_68 (preds = {bb_4 }, succs = {bb_69 })
  {
  <L4>:

  }
  bb_69 (preds = {bb_68 bb_67 }, succs = {bb_70 bb_71 })
  {
    # .MEM_1 = PHI <.MEM_136(68), .MEM_205(67)>
  <L0>:
    # DEBUG D#489 => &this_2(D)->_dest
    # DEBUG this => D#489
    # DEBUG D#167 => &D#489->D.34940
    # DEBUG this => D#167
    # DEBUG D#170 => D#489->D.34940._M_impl._M_finish
    # DEBUG D#169 => D#489->D.34940._M_impl._M_start
    # DEBUG __first => D#169
    # DEBUG __last => D#170
    # DEBUG D.45958 => NULL
    # DEBUG D#140 => D#169
    # DEBUG D#141 => D#170
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # DEBUG D#168 => &D#489->D.34940
    # DEBUG this => D#168
    # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
    # DEBUG D#165 => (long int) D#166
    # VUSE <.MEM_1>
    _5 = MEM[(struct _Vector_base *)this_2(D) + 16B]._M_impl._M_start;
    # DEBUG D#164 => (long int) _5
    # DEBUG D#163 => D#165 - D#164
    # DEBUG D#162 => D#163 /[ex] 4
    # DEBUG D#161 => (long unsigned int) D#162
    # DEBUG this => D#168
    # DEBUG __p => _5
    # DEBUG __n => D#161
    if (_5 != 0B)
      goto <bb 70>;
    else
      goto <bb 71>;

  }
  bb_70 (preds = {bb_69 }, succs = {bb_71 })
  {
    <bb 70>:
    # DEBUG D#159 => &D#168->_M_impl
    # DEBUG D#157 => D#159
    # DEBUG D#158 => D#161
    # DEBUG __p => _5
    # DEBUG __a => D#157
    # DEBUG __n => D#158
    # DEBUG D#156 => D#158
    # DEBUG D#155 => D#157
    # DEBUG D#153 => D#155
    # DEBUG D#154 => D#156
    # DEBUG __p => _5
    # DEBUG this => D#153
    # DEBUG D.50126 => D#154
    # .MEM_18 = VDEF <.MEM_1>
    operator delete (_5);

  }
  bb_71 (preds = {bb_69 bb_70 }, succs = {bb_72 })
  {
    <bb 71>:
    # .MEM_14 = PHI <.MEM_1(69), .MEM_18(70)>
    # DEBUG D#160 => &D#168->_M_impl
    # DEBUG this => D#160
    # DEBUG this => D#160
    # DEBUG this => D#160
    # .MEM_23 = VDEF <.MEM_14>
    MEM[(struct  &)this_2(D) + 16] ={v} {CLOBBER};
    resx 2

  }
  bb_72 (preds = {bb_71 }, succs = {})
  {
  <L1>:
    # DEBUG D#488 => &this_2(D)->D.34973
    # DEBUG this => D#488
    # .MEM_25 = VDEF <.MEM_23>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    resx 1

  }
  bb_76 (preds = {bb_11 }, succs = {bb_23 })
  {
    <bb 76>:
    _218 = __n_39 * 4;
    _121 = (int *) _218;
    # DEBUG D#381 => &__tmp
    # DEBUG D#381 => &__tmp
    # DEBUG D#382 => &__val
    # DEBUG __n => __n_39
    # DEBUG D#379 => D#381
    # DEBUG this => D#379
    # DEBUG this => D#381
    # DEBUG D#380 => D#382
    # DEBUG __value => D#380
    # DEBUG D#378 => &D#379->D.34940
    # DEBUG this => D#378
    # DEBUG D#376 => D#380
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG D#375 => D#376
    # DEBUG __x => D#375
    # DEBUG D.53636 => D#377
    # DEBUG D#374 => D#375
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG D#373 => D#374
    # DEBUG __x => D#373
    # DEBUG __assignable => 1
    # DEBUG D#372 => D#373
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG D#371 => D#372
    # DEBUG __x => D#371
    # DEBUG D#308 => D#371
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG D#307 => D#308
    # DEBUG __value => D#307
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG D#306 => D#307
    # DEBUG __first => NULL
    # DEBUG __n => __n_39
    # DEBUG __value => D#306
    # DEBUG __tmp => -1
    # DEBUG __niter => __n_39
    # DEBUG __niter => __n_39
    # DEBUG __first => 0B
    goto <bb 23>;

  }
  loop_1 (header = 44, latch = 74, niter = , upper_bound = 2147483647)
  {
    bb_44 (preds = {bb_43 bb_74 }, succs = {bb_46 bb_45 })
    {
      <bb 44>:
      # _27 = PHI <prephitmp_184(43), _40(74)>
      # i_119 = PHI <0(43), i_69(74)>
      # .MEM_167 = PHI <.MEM_108(43), .MEM_178(74)>
      # DEBUG i => i_119
      _42 = _27 + -1;
      _43 = _42 - i_119;
      # DEBUG max => _43
      # .MEM_176 = VDEF <.MEM_167>
      _44 = ran_next ();
      goto <bb 46>;

    }
    bb_46 (preds = {bb_44 }, succs = {bb_47 })
    {
      <bb 46>:
      _45 = _43 + 1;
      _46 = (long int) _45;
      _47 = _44 % _46;
      _48 = (int) _47;
      # DEBUG ind => _48
      # DEBUG j => 0
      # DEBUG cnt => 0
      # VUSE <.MEM_176>
      pretmp_187 = MEM[(int * *)this_2(D) + 16B];

    }
    bb_73 (preds = {bb_48 }, succs = {bb_53 bb_74 })
    {
      <bb 73>:
      # _67 = PHI <_54(48)>
      # DEBUG D#390 => &this_2(D)->_dest
      # DEBUG D#100 => D#390
      # DEBUG __n => _51
      # DEBUG this => D#100
      # .MEM_178 = VDEF <.MEM_176>
      *_67 = i_119;
      i_69 = i_119 + 1;
      # DEBUG i => i_69
      # DEBUG i => i_69
      # VUSE <.MEM_178>
      _40 = this_2(D)->D.34973._nodes;
      if (_40 <= i_69)
        goto <bb 53>;
      else
        goto <bb 74>;

    }
    bb_74 (preds = {bb_73 }, succs = {bb_44 })
    {
      <bb 74>:
      goto <bb 44>;

    }
    loop_2 (header = 47, latch = 51, niter = scev_not_known, upper_bound = 2147483647)
    {
      bb_47 (preds = {bb_46 bb_51 }, succs = {bb_75 bb_48 })
      {
        <bb 47>:
        # j_50 = PHI <0(46), j_63(51)>
        # cnt_49 = PHI <0(46), cnt_75(51)>
        # DEBUG cnt => cnt_49
        # DEBUG j => j_50
        if (_48 > cnt_49)
          goto <bb 75>;
        else
          goto <bb 48>;

      }
      bb_48 (preds = {bb_47 }, succs = {bb_50 bb_73 })
      {
        <bb 48>:
        _51 = (long unsigned int) j_50;
        # DEBUG D#389 => &this_2(D)->_dest
        # DEBUG D#100 => D#389
        # DEBUG __n => _51
        # DEBUG this => D#100
        _53 = _51 * 4;
        _54 = pretmp_187 + _53;
        # VUSE <.MEM_176>
        _55 = *_54;
        if (_55 != -1)
          goto <bb 50>;
        else
          goto <bb 73>;

      }
      bb_49 (preds = {bb_75 }, succs = {bb_50 })
      {
        <bb 49>:
        cnt_62 = cnt_49 + 1;
        # DEBUG cnt => cnt_62

      }
      bb_50 (preds = {bb_75 bb_49 bb_48 }, succs = {bb_52 bb_51 })
      {
        <bb 50>:
        # cnt_75 = PHI <cnt_49(75), cnt_62(49), cnt_49(48)>
        # DEBUG cnt => cnt_75
        j_63 = j_50 + 1;
        # DEBUG j => j_63
        # VUSE <.MEM_176>
        _64 = this_2(D)->D.34973._nodes;
        if (j_63 >= _64)
          goto <bb 52>;
        else
          goto <bb 51>;

      }
      bb_51 (preds = {bb_50 }, succs = {bb_47 })
      {
        <bb 51>:
        goto <bb 47>;

      }
      bb_75 (preds = {bb_47 }, succs = {bb_49 bb_50 })
      {
        <bb 75>:
        _57 = (long unsigned int) j_50;
        # DEBUG D#388 => &this_2(D)->_dest
        # DEBUG D#100 => D#388
        # DEBUG __n => _57
        # DEBUG this => D#100
        _59 = _57 * 4;
        _60 = pretmp_187 + _59;
        # VUSE <.MEM_176>
        _61 = *_60;
        if (_61 == -1)
          goto <bb 49>;
        else
          goto <bb 50>;

      }
    }
  }
}

Pass statistics:
----------------

RandomPermutationTrafficPattern::RandomPermutationTrafficPattern(int, int) (struct RandomPermutationTrafficPatternD.34196 * const thisD.34970, intD.9 nodesD.34971, intD.9 seedD.34972)
Eh tree:
   1 cleanup land:{1,<L1>}
     2 cleanup land:{5,<L4>},{2,<L12>}
       5 cleanup land:{3,<L3>}
         6 cleanup land:{11,<L10>},{10,<L9>},{9,<L8>},{8,<L7>},{7,<L6>},{6,<L5>},{4,<L11>}
{
  intD.9 * D.53663;
  intD.9 * __firstD.53638;
  size_typeD.34516 __nD.53621;
  intD.9 * __tmpD.53582;
  intD.9 * __tmpD.53579;
  intD.9 * __tmpD.53576;
  struct vectorD.33797 __tmpD.53571;
  long unsigned intD.14 __nD.53494;
  intD.9 * __firstD.53495;
  intD.9 * __firstD.53490;
  intD.9 * __firstD.53477;
  size_tD.2818 __nD.53473;
  struct vectorD.25982 save_xD.53383;
  struct vectorD.25985 save_uD.53384;
  intD.9 iD.53459;
  intD.9 jD.53461;
  intD.9 cntD.53462;
  intD.9 __valD.53449;
  static const charD.10 _ZZN31RandomPermutationTrafficPattern9randomizeEiE19__PRETTY_FUNCTION__D.38791[53] = "void RandomPermutationTrafficPattern::randomize(int)";
  struct iteratorD.34508 __positionD.53377;
  value_typeD.34503 __xD.53372;
  intD.9 * _5;
  long unsigned intD.14 _8;
  struct vectorD.33797 * _9;
  long intD.12 _10;
  intD.9 prephitmp_19;
  intD.9 * pretmp_21;
  intD.9 * pretmp_22;
  intD.9 * prephitmp_24;
  intD.9 _27;
  unsigned long _28;
  unsigned long _34;
  intD.9 _37;
  sizetype _38;
  intD.9 _40;
  intD.9 _42;
  intD.9 _43;
  long intD.12 _44;
  intD.9 _45;
  long intD.12 _46;
  long intD.12 _47;
  intD.9 _48;
  long unsigned intD.14 _51;
  long unsigned intD.14 _53;
  intD.9 & _54;
  intD.9 _55;
  long unsigned intD.14 _57;
  long unsigned intD.14 _59;
  intD.9 & _60;
  intD.9 _61;
  intD.9 _64;
  intD.9 & _67;
  long unsigned intD.14 _68;
  doubleD.39 * _70;
  long intD.12 * _71;
  doubleD.39 * _72;
  long intD.12 * _73;
  intD.9 * const _76;
  long intD.12 _77;
  long intD.12 _78;
  long intD.12 _79;
  long intD.12 _80;
  size_typeD.34516 _81;
  long intD.12 _83;
  long intD.12 _84;
  long intD.12 _85;
  size_typeD.34516 _86;
  unsigned long _94;
  sizetype _95;
  intD.9 * _110;
  sizetype _112;
  sizetype _113;
  long unsigned intD.14 _116;
  intD.9 * _117;
  intD.9 * _121;
  unsigned long _148;
  sizetype _152;
  sizetype _163;
  sizetype _165;
  long unsigned intD.14 _181;
  intD.9 pretmp_182;
  intD.9 pretmp_183;
  intD.9 prephitmp_184;
  intD.9 * pretmp_187;
  sizetype _195;
  long unsigned intD.14 _202;
  long unsigned intD.14 _203;
  intD.9 pretmp_204;
  intD.9 * _213;
  intD.9 * _214;
  long unsigned intD.14 _215;
  long unsigned intD.14 _218;

;;   basic block 2, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#491ptD.0 => &this_2(D)->D.34973
  # DEBUG thisD.50114 => D#491ptD.0
  # DEBUG nodesD.50115 => nodes_4(D)
  # .MEM_13 = VDEF <.MEM_3(D)>
  MEM[(struct TrafficPatternD.33853 *)this_2(D)]._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_7 = VDEF <.MEM_13>
  MEM[(struct TrafficPatternD.33853 *)this_2(D)]._nodesD.33855 = nodes_4(D);
  if (nodes_4(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#491ptD.0
  # DEBUG D#63ptD.0 => nodes_4(D)
  # .MEM_26 = VDEF <.MEM_7>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_6 = VDEF <.MEM_7>
  this_2(D)->D.34973._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV31RandomPermutationTrafficPatternD.34976 + 16B];
  # DEBUG D#490ptD.0 => &this_2(D)->_destD.34942
  # DEBUG thisD.50111 => D#490ptD.0
  # DEBUG D#209ptD.0 => &D#490ptD.0->D.34940
  # DEBUG thisD.50112 => D#209ptD.0
  # DEBUG D#208ptD.0 => &D#209ptD.0->_M_implD.34431
  # DEBUG thisD.50113 => D#208ptD.0
  # DEBUG thisD.46184 => D#208ptD.0
  # DEBUG thisD.46182 => D#208ptD.0
  # .MEM_15 = VDEF <.MEM_6>
  MEM[(struct _Vector_implD.34408 *)this_2(D) + 16B]._M_startD.34433 = 0B;
  # .MEM_16 = VDEF <.MEM_15>
  MEM[(struct _Vector_implD.34408 *)this_2(D) + 16B]._M_finishD.34434 = 0B;
  # .MEM_17 = VDEF <.MEM_16>
  MEM[(struct _Vector_implD.34408 *)this_2(D) + 16B]._M_end_of_storageD.34435 = 0B;
  # RANGE [1, 2147483647] NONZERO 2147483647
  _8 = (long unsigned intD.14) nodes_4(D);
  # PT = nonlocal 
  _9 = &this_2(D)->_destD.34942;
  # DEBUG thisD.53370 => _9
  # DEBUG __new_sizeD.53371 => _8
  # .MEM_133 = VDEF <.MEM_17>
  __xD.53372 = 0;
  # DEBUG __xD.53372 => __xD.53372
  # DEBUG D#99ptD.0 => _9
  # DEBUG D#99ptD.0 => _9
  # DEBUG thisD.53379 => D#99ptD.0
  # DEBUG thisD.53380 => D#99ptD.0
  # DEBUG D#99ptD.0 => _9
  # DEBUG D#99ptD.0 => _9
  # DEBUG thisD.50098 => D#99ptD.0
  # DEBUG thisD.50097 => D#99ptD.0
  # DEBUG thisD.50091 => _9
  # DEBUG D#118ptD.0 => &_9->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.50093 => NULL
  # DEBUG __iD.50092 => D#118ptD.0
  # DEBUG thisD.53378 => _9
  # .MEM_135 = VDEF <.MEM_133>
  MEM[(struct __normal_iteratorD.34509 *)&__positionD.53377] = 0B;
  # DEBUG __nD.53376 => _8
  # DEBUG __xD.53375 => &__xD.53372
  [LP 5] # .MEM_136 = VDEF <.MEM_135>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34863 (_9, __positionD.53377, _8, &__xD.53372);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.53381 => this_2(D)
  # DEBUG seedD.53382 => seed_11(D)
  # DEBUG thisD.53453 => &save_xD.53383
  # DEBUG D#255ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.53454 => D#255ptD.0
  # DEBUG D#254ptD.0 => &D#255ptD.0->_M_implD.37527
  # DEBUG thisD.53455 => D#254ptD.0
  # DEBUG thisD.47031 => D#254ptD.0
  # DEBUG thisD.47029 => D#254ptD.0
  # .MEM_137 = VDEF <.MEM_136>
  MEM[(struct _Vector_implD.37504 *)&save_xD.53383]._M_startD.37529 = 0B;
  # .MEM_138 = VDEF <.MEM_137>
  MEM[(struct _Vector_implD.37504 *)&save_xD.53383]._M_finishD.37530 = 0B;
  # .MEM_139 = VDEF <.MEM_138>
  MEM[(struct _Vector_implD.37504 *)&save_xD.53383]._M_end_of_storageD.37531 = 0B;
  # DEBUG thisD.53456 => &save_uD.53384
  # DEBUG D#278ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.53457 => D#278ptD.0
  # DEBUG D#277ptD.0 => &D#278ptD.0->_M_implD.38272
  # DEBUG thisD.53458 => D#277ptD.0
  # DEBUG thisD.47121 => D#277ptD.0
  # DEBUG thisD.47119 => D#277ptD.0
  # .MEM_140 = VDEF <.MEM_139>
  MEM[(struct _Vector_implD.38249 *)&save_uD.53384]._M_startD.38274 = 0B;
  # .MEM_141 = VDEF <.MEM_140>
  MEM[(struct _Vector_implD.38249 *)&save_uD.53384]._M_finishD.38275 = 0B;
  # .MEM_142 = VDEF <.MEM_141>
  MEM[(struct _Vector_implD.38249 *)&save_uD.53384]._M_end_of_storageD.38276 = 0B;
  [LP 6] # .MEM_143 = VDEF <.MEM_142>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _Z15SaveRandomStateRSt6vectorIlSaIlEERS_IdSaIdEED.25987 (&save_xD.53383, &save_uD.53384);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  _10 = (long intD.12) seed_11(D);
  # DEBUG seedD.53452 => _10
  [LP 7] # .MEM_144 = VDEF <.MEM_143>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _Z9ran_startlD.25963 (_10);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (EH,EXECUTABLE)
<L6>: [LP 7]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 8] # .MEM_145 = VDEF <.MEM_144>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _Z10ranf_startlD.25966 (_10);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L7>: [LP 8]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_145>
  _37 = this_2(D)->D.34973._nodesD.33855;
  # DEBUG D#756ptD.0 => &this_2(D)->_destD.34942
  # DEBUG thisD.53447 => D#756ptD.0
  # DEBUG __firstD.53446 => _37
  # DEBUG __lastD.53445 => -1
  # DEBUG thisD.53451 => D#756ptD.0
  # DEBUG __nD.53450 => _37
  # DEBUG __valD.53449 => -1
  # DEBUG __valD.53449 => -1
  # RANGE ~[2147483648, 18446744071562067967]
  __n_39 = (size_tD.2818) _37;
  # DEBUG thisD.53472 => D#756ptD.0
  # DEBUG __nD.53473 => __n_39
  # DEBUG __valD.53474 => &__valD.53449
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  __first_12 = MEM[(intD.9 * *)this_2(D) + 16B];
  # DEBUG D#110ptD.0 => D#756ptD.0
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _76 = MEM[(intD.9 * *)this_2(D) + 32B];
  # DEBUG D#110ptD.0 => D#756ptD.0
  # DEBUG thisD.53514 => D#110ptD.0
  # DEBUG thisD.53515 => D#110ptD.0
  _77 = (long intD.12) _76;
  _78 = (long intD.12) __first_12;
  _79 = _77 - _78;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _80 = _79 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _81 = (size_typeD.34516) _80;
  if (__n_39 > _81)
    goto <bb 11>;
  else
    goto <bb 26>;
;;    succ:       11 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.53518 => D#756ptD.0
  # DEBUG __nD.53519 => __n_39
  # DEBUG __valD.53520 => &__valD.53449
  # DEBUG D#384ptD.0 => &D#756ptD.0->D.34940
  # DEBUG thisD.53598 => D#384ptD.0
  # DEBUG D#755ptD.0 => &MEM[(struct _Vector_baseD.34198 *)this_2(D) + 16B]._M_implD.34431
  # DEBUG thisD.53620 => &__tmpD.53571
  # DEBUG __nD.53621 => __n_39
  # DEBUG __valueD.53622 => &__valD.53449
  # DEBUG __aD.53623 => D#755ptD.0
  # DEBUG D#383ptD.0 => &__tmpD.53571.D.34940
  # DEBUG thisD.53626 => D#383ptD.0
  # DEBUG __nD.53625 => __n_39
  # DEBUG __aD.53624 => D#755ptD.0
  # DEBUG D#367ptD.0 => &D#383ptD.0->_M_implD.34431
  # DEBUG thisD.53628 => D#367ptD.0
  # DEBUG __aD.53627 => D#755ptD.0
  # DEBUG thisD.46561 => D#367ptD.0
  # DEBUG __aD.46562 => D#755ptD.0
  # DEBUG thisD.46558 => D#367ptD.0
  # DEBUG D.46559 => D#755ptD.0
  # DEBUG thisD.53630 => D#383ptD.0
  # DEBUG __nD.53629 => __n_39
  # DEBUG D#346ptD.0 => D#383ptD.0
  # DEBUG __nD.53655 => __n_39
  # DEBUG thisD.53656 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (__n_39 != 0)
    goto <bb 12>;
  else
    goto <bb 76>;
;;    succ:       12 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                76 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.53659 => __n_39
  # DEBUG __aD.53658 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.53662 => __n_39
  # DEBUG thisD.53660 => D#340ptD.0
  # DEBUG D.53661 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  if (__n_39 > 4611686018427387903)
    goto <bb 13>;
  else
    goto <bb 15>;
;;    succ:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 9] # .MEM_156 = VDEF <.MEM_145>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZSt17__throw_bad_allocvD.3957 ();
;;    succ:       14 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 (EH,EXECUTABLE)
<L8>: [LP 9]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  _116 = __n_39 * 4;
  [LP 10] # .MEM_155 = VDEF <.MEM_145>
  # PT = { D.53675 } (escaped heap)
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _117 = _ZnwmD.2764 (_116);
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 (EH,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 (EH,EXECUTABLE)
<L9>: [LP 10]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.53675 } (escaped heap)
  _110 = _117 + _116;
  # DEBUG D#381ptD.0 => &__tmpD.53571
  # DEBUG D#381ptD.0 => &__tmpD.53571
  # DEBUG D#382ptD.0 => &__valD.53449
  # DEBUG __nD.53634 => __n_39
  # DEBUG D#379ptD.0 => D#381ptD.0
  # DEBUG thisD.53631 => D#379ptD.0
  # DEBUG thisD.53632 => D#381ptD.0
  # DEBUG D#380ptD.0 => D#382ptD.0
  # DEBUG __valueD.53633 => D#380ptD.0
  # DEBUG D#378ptD.0 => &D#379ptD.0->D.34940
  # DEBUG thisD.48338 => D#378ptD.0
  # DEBUG D#376ptD.0 => D#380ptD.0
  # DEBUG __firstD.53638 => NULL
  # DEBUG __nD.53637 => __n_39
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.53635 => D#375ptD.0
  # DEBUG D.53636 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.53641 => NULL
  # DEBUG __nD.53640 => __n_39
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.53639 => D#373ptD.0
  # DEBUG __assignableD.53643 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.53646 => NULL
  # DEBUG __nD.53645 => __n_39
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.53644 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.53649 => NULL
  # DEBUG __nD.53648 => __n_39
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.53647 => D#307ptD.0
  # DEBUG __itD.47237 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.53652 => NULL
  # DEBUG __nD.53651 => __n_39
  # DEBUG __valueD.53650 => D#306ptD.0
  # DEBUG __tmpD.53653 => -1
  # DEBUG __niterD.53654 => __n_39
  # DEBUG __niterD.53654 => __n_39
  # DEBUG __firstD.53652 => _117
  if (__n_39 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_155>
  pretmp_22 = MEM[(intD.9 * &)this_2(D) + 16];
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 4, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 18, next block 22, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  _165 = (sizetype) _37;
  _152 = _165 * 4;
  # .MEM_160 = VDEF <.MEM_155>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (_117, 255, _152);
;;    succ:       22 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 19, next block 23, flags: (NEW)
;;    pred:       19 [9.0%]  (FALLTHRU,EXECUTABLE)
  _215 = (long unsigned intD.14) _37;
  _68 = _215 * 4;
  # PT = { D.53675 } (escaped heap)
  __first_20 = _117 + _68;
  # VUSE <.MEM_160>
  pretmp_21 = MEM[(intD.9 * &)this_2(D) + 16];
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                76 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.53675 } (escaped heap)
  # __first_159 = PHI <__first_20(22), _117(18), 0B(76)>
  # .MEM_162 = PHI <.MEM_160(22), .MEM_155(18), .MEM_145(76)>
  # PT = nonlocal escaped { D.53675 } (escaped heap)
  # _213 = PHI <_110(22), _110(18), _121(76)>
  # PT = null { D.53675 } (escaped heap)
  # __first_212 = PHI <_117(22), _117(18), 0B(76)>
  # PT = nonlocal escaped 
  # prephitmp_24 = PHI <pretmp_21(22), pretmp_22(18), __first_12(76)>
  # DEBUG D#386ptD.0 => &D#756ptD.0->D.34940._M_implD.34431
  # DEBUG thisD.53573 => &__tmpD.53571.D.34940._M_implD.34431
  # DEBUG __xD.53572 => D#386ptD.0
  # DEBUG D#305ptD.0 => &D#386ptD.0->_M_startD.34433
  # DEBUG D#304ptD.0 => &MEM[(struct _Vector_implD.34408 *)&__tmpD.53571]._M_startD.34433
  # DEBUG __aD.53575 => D#304ptD.0
  # DEBUG __bD.53574 => D#305ptD.0
  # DEBUG __tmpD.53576 => __first_212
  # DEBUG D#757ptD.0 => MEM[(intD.9 * &)this_2(D) + 16]
  # .MEM_164 = VDEF <.MEM_162>
  MEM[(intD.9 * &)this_2(D) + 16] = __first_212;
  # DEBUG D#303ptD.0 => &D#386ptD.0->_M_finishD.34434
  # DEBUG D#302ptD.0 => &MEM[(struct _Vector_implD.34408 *)&__tmpD.53571]._M_finishD.34434
  # DEBUG __aD.53578 => D#302ptD.0
  # DEBUG __bD.53577 => D#303ptD.0
  # DEBUG __tmpD.53579 => __first_159
  # .MEM_166 = VDEF <.MEM_164>
  MEM[(intD.9 * &)this_2(D) + 24] = __first_159;
  # DEBUG D#301ptD.0 => &D#386ptD.0->_M_end_of_storageD.34435
  # DEBUG D#300ptD.0 => &MEM[(struct _Vector_implD.34408 *)&__tmpD.53571]._M_end_of_storageD.34435
  # DEBUG __aD.53581 => D#300ptD.0
  # DEBUG __bD.53580 => D#301ptD.0
  # DEBUG __tmpD.53582 => _213
  # .MEM_168 = VDEF <.MEM_166>
  MEM[(intD.9 * &)this_2(D) + 32] = _213;
  # DEBUG thisD.53583 => &__tmpD.53571
  # DEBUG D#167ptD.0 => &__tmpD.53571.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => __tmpD.53571.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => __tmpD.53571.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &__tmpD.53571.D.34940
  # DEBUG thisD.53584 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # DEBUG D#164ptD.0 => (long intD.12) D#757ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.53587 => D#168ptD.0
  # DEBUG __pD.53586 => D#757ptD.0
  # DEBUG __nD.53585 => D#161ptD.0
  if (prephitmp_24 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.53591 => D#757ptD.0
  # DEBUG __aD.53589 => D#157ptD.0
  # DEBUG __nD.53590 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.53594 => D#757ptD.0
  # DEBUG thisD.53592 => D#153ptD.0
  # DEBUG D.53593 => D#154ptD.0
  # .MEM_169 = VDEF <.MEM_168>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_24);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_122 = PHI <.MEM_168(23), .MEM_169(24)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.53595 => D#160ptD.0
  # DEBUG thisD.53596 => D#160ptD.0
  # DEBUG thisD.53597 => D#160ptD.0
  # .MEM_175 = VDEF <.MEM_122>
  __tmpD.53571 ={v} {CLOBBER};
  # VUSE <.MEM_175>
  pretmp_182 = this_2(D)->D.34973._nodesD.33855;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       10 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => D#756ptD.0
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  __first_82 = MEM[(intD.9 * *)this_2(D) + 24B];
  # DEBUG D#99ptD.0 => D#756ptD.0
  # DEBUG thisD.53512 => D#99ptD.0
  # DEBUG thisD.53513 => D#99ptD.0
  _83 = (long intD.12) __first_82;
  _84 = _83 - _78;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _85 = _84 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _86 = (size_typeD.34516) _85;
  if (__n_39 > _86)
    goto <bb 28>;
  else
    goto <bb 27>;
;;    succ:       28 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __niterD.53482 => __n_39
  # DEBUG __firstD.53480 => __first_12
  if (__n_39 == 0)
    goto <bb 41>;
  else
    goto <bb 37>;
;;    succ:       41 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __firstD.53490 => __first_12
  if (__first_12 == __first_82)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 7, maybe hot
;;   Invalid sum of outgoing probabilities 9.8%
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_217 = PHI <.MEM_145(28), .MEM_201(32)>
  # DEBUG D#385ptD.0 => &D#756ptD.0->D.34940
  # DEBUG thisD.48469 => D#385ptD.0
  # DEBUG D#99ptD.0 => D#756ptD.0
  # DEBUG D#99ptD.0 => D#756ptD.0
  # DEBUG thisD.48467 => D#99ptD.0
  # DEBUG thisD.48466 => D#99ptD.0
  # RANGE [1, 18446744073709551615]
  __n_90 = __n_39 - _86;
  # DEBUG D#376ptD.0 => &__valD.53449
  # DEBUG __firstD.53495 => __first_82
  # DEBUG __nD.53494 => __n_90
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.53492 => D#375ptD.0
  # DEBUG D.53493 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.53498 => __first_82
  # DEBUG __nD.53497 => __n_90
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.53496 => D#373ptD.0
  # DEBUG __assignableD.53500 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.53503 => __first_82
  # DEBUG __nD.53502 => __n_90
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.53501 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.53506 => __first_82
  # DEBUG __nD.53505 => __n_90
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.53504 => D#307ptD.0
  # DEBUG __itD.47237 => __first_82
  # DEBUG __itD.46062 => __first_82
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.53509 => NULL
  # DEBUG __nD.53508 => __n_90
  # DEBUG __valueD.53507 => D#306ptD.0
  # DEBUG __tmpD.53510 => -1
  # DEBUG __niterD.53511 => __n_90
  # DEBUG __niterD.53511 => __n_90
  # DEBUG __firstD.53509 => __first_82
  _113 = __n_90 * 4;
  # .MEM_161 = VDEF <.MEM_217>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_82, 255, _113);
  goto <bb 36>;
;;    succ:       36 [9.8%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 6, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 29, next block 32, flags: (NEW, REACHABLE)
;;    pred:       28 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  _34 = (unsigned long) __first_82;
  _214 = __first_12 + 4;
  _28 = (unsigned long) _214;
  _148 = _34 - _28;
  _94 = _148 /[ex] 4;
  _95 = _94 & 4611686018427387903;
  _112 = _95 + 1;
  _195 = _112 * 4;
  # .MEM_154 = VDEF <.MEM_145>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_12, 255, _195);
;;    succ:       32 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 30, next block 36, flags: (NEW)
;;    pred:       30 [9.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_201 = PHI <.MEM_154(30)>
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 32, next block 37, flags: (NEW, REACHABLE)
;;    pred:       29 [9.8%]  (FALLTHRU,EXECUTABLE)
  _181 = __n_90 * 4;
  # PT = nonlocal escaped 
  __first_66 = __first_82 + _181;
  # .MEM_149 = VDEF <.MEM_161>
  MEM[(struct vectorD.33797 *)this_2(D) + 16B].D.34940._M_implD.34431._M_finishD.34434 = __first_66;
  # VUSE <.MEM_149>
  pretmp_183 = this_2(D)->D.34973._nodesD.33855;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 6, maybe hot
;;   Invalid sum of outgoing probabilities 9.0%
;;    prev block 36, next block 40, flags: (NEW, REACHABLE)
;;    pred:       27 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  _163 = (sizetype) _37;
  _38 = _163 * 4;
  # .MEM_158 = VDEF <.MEM_145>
  # USE = anything 
  # CLB = anything 
  memsetD.1001 (__first_12, 255, _38);
;;    succ:       40 [9.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 37, next block 41, flags: (NEW)
;;    pred:       37 [9.0%]  (FALLTHRU,EXECUTABLE)
  _203 = (long unsigned intD.14) _37;
  _202 = _203 * 4;
  # PT = nonlocal escaped 
  __first_65 = __first_12 + _202;
  # VUSE <.MEM_158>
  pretmp_204 = this_2(D)->D.34973._nodesD.33855;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 40, next block 77, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_153 = PHI <__first_65(40), __first_12(27)>
  # .MEM_107 = PHI <.MEM_158(40), .MEM_145(27)>
  # prephitmp_19 = PHI <pretmp_204(40), _37(27)>
;;    succ:       77 [100.0%]  (FALLTHRU)

;;   basic block 77, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 41, next block 42, flags: (NEW)
;;    pred:       41 [100.0%]  (FALLTHRU)
  # DEBUG D#145ptD.0 => D#756ptD.0
  # DEBUG __posD.53484 => __first_153
  # DEBUG D#144ptD.0 => D#145ptD.0
  # DEBUG thisD.53483 => D#144ptD.0
  # DEBUG D#142ptD.0 => &D#144ptD.0->D.34940
  # DEBUG thisD.45847 => D#142ptD.0
  # DEBUG D#143ptD.0 => D#144ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG __firstD.45837 => __first_153
  # DEBUG __lastD.45838 => D#143ptD.0
  # DEBUG D.45839 => NULL
  # DEBUG D#140ptD.0 => __first_153
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # .MEM_151 = VDEF <.MEM_107>
  MEM[(intD.9 * *)this_2(D) + 24B] = __first_153;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 17, maybe hot
;;    prev block 77, next block 43, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                77 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_108 = PHI <.MEM_175(25), .MEM_151(77), .MEM_149(36)>
  # prephitmp_184 = PHI <pretmp_182(25), prephitmp_19(77), pretmp_183(36)>
  # DEBUG iD.53459 => 0
  if (prephitmp_184 <= 0)
    goto <bb 53>;
  else
    goto <bb 43>;
;;    succ:       53 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [97.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 454, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _27 = PHI <prephitmp_184(43), _40(74)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # i_119 = PHI <0(43), i_69(74)>
  # .MEM_167 = PHI <.MEM_108(43), .MEM_178(74)>
  # DEBUG iD.53459 => i_119
  # RANGE [0, 2147483646] NONZERO 2147483647
  _42 = _27 + -1;
  # RANGE [-2147483646, 2147483646]
  _43 = _42 - i_119;
  # DEBUG maxD.53469 => _43
  [LP 11] # .MEM_176 = VDEF <.MEM_167>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _44 = _Z8ran_nextvD.25964 ();
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 (EH,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 (EH,EXECUTABLE)
<L10>: [LP 11]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 454, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483645, 2147483647]
  _45 = _43 + 1;
  # RANGE [-2147483645, 2147483647]
  _46 = (long intD.12) _45;
  _47 = _44 % _46;
  _48 = (intD.9) _47;
  # DEBUG indD.53460 => _48
  # DEBUG jD.53461 => 0
  # DEBUG cntD.53462 => 0
  # VUSE <.MEM_176>
  # PT = nonlocal escaped 
  pretmp_187 = MEM[(intD.9 * *)this_2(D) + 16B];
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 2, count 0, freq 10000, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_50 = PHI <0(46), j_63(51)>
  # RANGE [0, 2147483647] NONZERO 2147483647
  # cnt_49 = PHI <0(46), cnt_75(51)>
  # DEBUG cntD.53462 => cnt_49
  # DEBUG jD.53461 => j_50
  if (_48 > cnt_49)
    goto <bb 75>;
  else
    goto <bb 48>;
;;    succ:       75 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 2, count 0, freq 5000, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[2147483648, 18446744071562067967]
  _51 = (long unsigned intD.14) j_50;
  # DEBUG D#389ptD.0 => &this_2(D)->_destD.34942
  # DEBUG D#100ptD.0 => D#389ptD.0
  # DEBUG __nD.53468 => _51
  # DEBUG thisD.53467 => D#100ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _53 = _51 * 4;
  # PT = nonlocal escaped 
  _54 = pretmp_187 + _53;
  # VUSE <.MEM_176>
  _55 = *_54;
  if (_55 != -1)
    goto <bb 50>;
  else
    goto <bb 73>;
;;    succ:       50 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                73 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 2, count 0, freq 2674, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       75 [53.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 2147483647] NONZERO 2147483647
  cnt_62 = cnt_49 + 1;
  # DEBUG cntD.53462 => cnt_62
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 2, count 0, freq 9550, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       75 [46.5%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # cnt_75 = PHI <cnt_49(75), cnt_62(49), cnt_49(48)>
  # DEBUG cntD.53462 => cnt_75
  j_63 = j_50 + 1;
  # DEBUG jD.53461 => j_63
  # VUSE <.MEM_176>
  _64 = this_2(D)->D.34973._nodesD.33855;
  if (j_63 >= _64)
    goto <bb 52>;
  else
    goto <bb 51>;
;;    succ:       52 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 2, count 0, freq 9546, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_177 = VDEF <.MEM_176>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  __assert_failD.29068 ("j < _nodes", "traffic.cpp", 358, &_ZZN31RandomPermutationTrafficPattern9randomizeEiE19__PRETTY_FUNCTION__D.38791);
;;    succ:      

;;   basic block 53, loop depth 0, count 0, freq 15, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       42 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                73 [3.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_216 = PHI <.MEM_108(42), .MEM_178(73)>
  [LP 4] # .MEM_179 = VDEF <.MEM_216>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _Z18RestoreRandomStateRKSt6vectorIlSaIlEERKS_IdSaIdEED.25990 (&save_xD.53383, &save_uD.53384);
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 (EH,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 (EH,EXECUTABLE)
<L11>: [LP 4]
  goto <bb 61> (<L2>);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.53415 => &save_uD.53384
  # DEBUG D#296ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.47205 => D#296ptD.0
  # DEBUG D#299ptD.0 => save_uD.53384.D.38781._M_implD.38272._M_finishD.38275
  # DEBUG D#298ptD.0 => save_uD.53384.D.38781._M_implD.38272._M_startD.38274
  # DEBUG D#202ptD.0 => D#298ptD.0
  # DEBUG D#203ptD.0 => D#299ptD.0
  # DEBUG __firstD.47204 => D#202ptD.0
  # DEBUG __lastD.47203 => D#203ptD.0
  # DEBUG D.47202 => D#204ptD.0
  # DEBUG D#201ptD.0 => D#203ptD.0
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG __firstD.46135 => D#198ptD.0
  # DEBUG __lastD.46134 => D#199ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#194ptD.0 => D#196ptD.0
  # DEBUG D#195ptD.0 => D#197ptD.0
  # DEBUG D.46124 => D#194ptD.0
  # DEBUG D.46123 => D#195ptD.0
  # DEBUG D#297ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.53416 => D#297ptD.0
  # DEBUG D#295ptD.0 => D#297ptD.0->_M_implD.38272._M_end_of_storageD.38276
  # DEBUG D#294ptD.0 => (long intD.12) D#295ptD.0
  # VUSE <.MEM_179>
  # PT = nonlocal escaped null 
  _70 = MEM[(struct _Vector_baseD.38039 *)&save_uD.53384]._M_implD.38272._M_startD.38274;
  # DEBUG D#293ptD.0 => (long intD.12) _70
  # DEBUG D#292ptD.0 => D#294ptD.0 - D#293ptD.0
  # DEBUG D#291ptD.0 => D#292ptD.0 /[ex] 8
  # DEBUG D#288ptD.0 => D#297ptD.0
  # DEBUG D#289ptD.0 => (long unsigned intD.14) D#291ptD.0
  # DEBUG __pD.53419 => _70
  # DEBUG thisD.53417 => D#288ptD.0
  # DEBUG __nD.53418 => D#289ptD.0
  # DEBUG D#287ptD.0 => D#289ptD.0
  # DEBUG D#286ptD.0 => D#288ptD.0
  if (_70 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;
;;    succ:       56 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                57 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 10, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       55 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#285ptD.0 => &D#286ptD.0->_M_implD.38272
  # DEBUG D#283ptD.0 => D#285ptD.0
  # DEBUG D#284ptD.0 => D#287ptD.0
  # DEBUG __pD.53423 => _70
  # DEBUG __aD.53421 => D#283ptD.0
  # DEBUG __nD.53422 => D#284ptD.0
  # DEBUG D#282ptD.0 => D#284ptD.0
  # DEBUG D#281ptD.0 => D#283ptD.0
  # DEBUG D#279ptD.0 => D#281ptD.0
  # DEBUG D#280ptD.0 => D#282ptD.0
  # DEBUG __pD.53426 => _70
  # DEBUG thisD.53424 => D#279ptD.0
  # DEBUG D.53425 => D#280ptD.0
  # .MEM_180 = VDEF <.MEM_179>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_70);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       55 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_128 = PHI <.MEM_179(55), .MEM_180(56)>
  # DEBUG D#290ptD.0 => &D#297ptD.0->_M_implD.38272
  # DEBUG thisD.53427 => D#290ptD.0
  # DEBUG thisD.53428 => D#290ptD.0
  # DEBUG thisD.53429 => D#290ptD.0
  # .MEM_185 = VDEF <.MEM_128>
  MEM[(struct  &)&save_uD.53384] ={v} {CLOBBER};
  # DEBUG thisD.53430 => &save_xD.53383
  # DEBUG D#273ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.47115 => D#273ptD.0
  # DEBUG D#276ptD.0 => save_xD.53383.D.38036._M_implD.37527._M_finishD.37530
  # DEBUG D#275ptD.0 => save_xD.53383.D.38036._M_implD.37527._M_startD.37529
  # DEBUG D#191ptD.0 => D#275ptD.0
  # DEBUG D#192ptD.0 => D#276ptD.0
  # DEBUG __firstD.47114 => D#191ptD.0
  # DEBUG __lastD.47113 => D#192ptD.0
  # DEBUG D.47112 => D#193ptD.0
  # DEBUG D#190ptD.0 => D#192ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0
  # DEBUG D#187ptD.0 => D#189ptD.0
  # DEBUG D#188ptD.0 => D#190ptD.0
  # DEBUG __firstD.46097 => D#187ptD.0
  # DEBUG __lastD.46096 => D#188ptD.0
  # DEBUG D#186ptD.0 => D#188ptD.0
  # DEBUG D#185ptD.0 => D#187ptD.0
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0
  # DEBUG D.46086 => D#183ptD.0
  # DEBUG D.46085 => D#184ptD.0
  # DEBUG D#274ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.53431 => D#274ptD.0
  # DEBUG D#272ptD.0 => D#274ptD.0->_M_implD.37527._M_end_of_storageD.37531
  # DEBUG D#271ptD.0 => (long intD.12) D#272ptD.0
  # VUSE <.MEM_185>
  # PT = nonlocal escaped null 
  _71 = MEM[(struct _Vector_baseD.37294 *)&save_xD.53383]._M_implD.37527._M_startD.37529;
  # DEBUG D#270ptD.0 => (long intD.12) _71
  # DEBUG D#269ptD.0 => D#271ptD.0 - D#270ptD.0
  # DEBUG D#268ptD.0 => D#269ptD.0 /[ex] 8
  # DEBUG D#265ptD.0 => D#274ptD.0
  # DEBUG D#266ptD.0 => (long unsigned intD.14) D#268ptD.0
  # DEBUG __pD.53434 => _71
  # DEBUG thisD.53432 => D#265ptD.0
  # DEBUG __nD.53433 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  if (_71 != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;
;;    succ:       58 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#262ptD.0 => &D#263ptD.0->_M_implD.37527
  # DEBUG D#260ptD.0 => D#262ptD.0
  # DEBUG D#261ptD.0 => D#264ptD.0
  # DEBUG __pD.53438 => _71
  # DEBUG __aD.53436 => D#260ptD.0
  # DEBUG __nD.53437 => D#261ptD.0
  # DEBUG D#259ptD.0 => D#261ptD.0
  # DEBUG D#258ptD.0 => D#260ptD.0
  # DEBUG D#256ptD.0 => D#258ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0
  # DEBUG __pD.53441 => _71
  # DEBUG thisD.53439 => D#256ptD.0
  # DEBUG D.53440 => D#257ptD.0
  # .MEM_186 = VDEF <.MEM_185>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_71);
;;    succ:       59 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       57 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_185(57), .MEM_186(58)>
  # DEBUG D#267ptD.0 => &D#274ptD.0->_M_implD.37527
  # DEBUG thisD.53442 => D#267ptD.0
  # DEBUG thisD.53443 => D#267ptD.0
  # DEBUG thisD.53444 => D#267ptD.0
  # .MEM_192 = VDEF <.MEM_129>
  save_xD.53383 ={v} {CLOBBER};
  # .MEM_193 = VDEF <.MEM_192>
  save_uD.53384 ={v} {CLOBBER};
  # VUSE <.MEM_193>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 59, next block 61, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L5>: [LP 6]
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_130 = PHI <.MEM_143(60), .MEM_144(7), .MEM_145(9), .MEM_155(16), .MEM_176(45), .MEM_179(54), .MEM_156(14)>
<L2>:
  # DEBUG thisD.53400 => &save_uD.53384
  # DEBUG D#296ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.47205 => D#296ptD.0
  # DEBUG D#299ptD.0 => save_uD.53384.D.38781._M_implD.38272._M_finishD.38275
  # DEBUG D#298ptD.0 => save_uD.53384.D.38781._M_implD.38272._M_startD.38274
  # DEBUG D#202ptD.0 => D#298ptD.0
  # DEBUG D#203ptD.0 => D#299ptD.0
  # DEBUG __firstD.47204 => D#202ptD.0
  # DEBUG __lastD.47203 => D#203ptD.0
  # DEBUG D.47202 => D#204ptD.0
  # DEBUG D#201ptD.0 => D#203ptD.0
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG __firstD.46135 => D#198ptD.0
  # DEBUG __lastD.46134 => D#199ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#194ptD.0 => D#196ptD.0
  # DEBUG D#195ptD.0 => D#197ptD.0
  # DEBUG D.46124 => D#194ptD.0
  # DEBUG D.46123 => D#195ptD.0
  # DEBUG D#297ptD.0 => &save_uD.53384.D.38781
  # DEBUG thisD.53401 => D#297ptD.0
  # DEBUG D#295ptD.0 => D#297ptD.0->_M_implD.38272._M_end_of_storageD.38276
  # DEBUG D#294ptD.0 => (long intD.12) D#295ptD.0
  # VUSE <.MEM_130>
  # PT = nonlocal escaped null 
  _72 = MEM[(struct _Vector_baseD.38039 *)&save_uD.53384]._M_implD.38272._M_startD.38274;
  # DEBUG D#293ptD.0 => (long intD.12) _72
  # DEBUG D#292ptD.0 => D#294ptD.0 - D#293ptD.0
  # DEBUG D#291ptD.0 => D#292ptD.0 /[ex] 8
  # DEBUG D#288ptD.0 => D#297ptD.0
  # DEBUG D#289ptD.0 => (long unsigned intD.14) D#291ptD.0
  # DEBUG __pD.53404 => _72
  # DEBUG thisD.53402 => D#288ptD.0
  # DEBUG __nD.53403 => D#289ptD.0
  # DEBUG D#287ptD.0 => D#289ptD.0
  # DEBUG D#286ptD.0 => D#288ptD.0
  if (_72 != 0B)
    goto <bb 62>;
  else
    goto <bb 63>;
;;    succ:       62 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       61 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#285ptD.0 => &D#286ptD.0->_M_implD.38272
  # DEBUG D#283ptD.0 => D#285ptD.0
  # DEBUG D#284ptD.0 => D#287ptD.0
  # DEBUG __pD.53408 => _72
  # DEBUG __aD.53406 => D#283ptD.0
  # DEBUG __nD.53407 => D#284ptD.0
  # DEBUG D#282ptD.0 => D#284ptD.0
  # DEBUG D#281ptD.0 => D#283ptD.0
  # DEBUG D#279ptD.0 => D#281ptD.0
  # DEBUG D#280ptD.0 => D#282ptD.0
  # DEBUG __pD.53411 => _72
  # DEBUG thisD.53409 => D#279ptD.0
  # DEBUG D.53410 => D#280ptD.0
  # .MEM_194 = VDEF <.MEM_130>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_72);
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       61 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_131 = PHI <.MEM_130(61), .MEM_194(62)>
  # DEBUG D#290ptD.0 => &D#297ptD.0->_M_implD.38272
  # DEBUG thisD.53412 => D#290ptD.0
  # DEBUG thisD.53413 => D#290ptD.0
  # DEBUG thisD.53414 => D#290ptD.0
  # .MEM_199 = VDEF <.MEM_131>
  MEM[(struct  &)&save_uD.53384] ={v} {CLOBBER};
  [LP 3] resx 6
;;    succ:       64 (EH,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       63 (EH,EXECUTABLE)
<L3>: [LP 3]
  # DEBUG thisD.53385 => &save_xD.53383
  # DEBUG D#273ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.47115 => D#273ptD.0
  # DEBUG D#276ptD.0 => save_xD.53383.D.38036._M_implD.37527._M_finishD.37530
  # DEBUG D#275ptD.0 => save_xD.53383.D.38036._M_implD.37527._M_startD.37529
  # DEBUG D#191ptD.0 => D#275ptD.0
  # DEBUG D#192ptD.0 => D#276ptD.0
  # DEBUG __firstD.47114 => D#191ptD.0
  # DEBUG __lastD.47113 => D#192ptD.0
  # DEBUG D.47112 => D#193ptD.0
  # DEBUG D#190ptD.0 => D#192ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0
  # DEBUG D#187ptD.0 => D#189ptD.0
  # DEBUG D#188ptD.0 => D#190ptD.0
  # DEBUG __firstD.46097 => D#187ptD.0
  # DEBUG __lastD.46096 => D#188ptD.0
  # DEBUG D#186ptD.0 => D#188ptD.0
  # DEBUG D#185ptD.0 => D#187ptD.0
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0
  # DEBUG D.46086 => D#183ptD.0
  # DEBUG D.46085 => D#184ptD.0
  # DEBUG D#274ptD.0 => &save_xD.53383.D.38036
  # DEBUG thisD.53386 => D#274ptD.0
  # DEBUG D#272ptD.0 => D#274ptD.0->_M_implD.37527._M_end_of_storageD.37531
  # DEBUG D#271ptD.0 => (long intD.12) D#272ptD.0
  # VUSE <.MEM_199>
  # PT = nonlocal escaped null 
  _73 = MEM[(struct _Vector_baseD.37294 *)&save_xD.53383]._M_implD.37527._M_startD.37529;
  # DEBUG D#270ptD.0 => (long intD.12) _73
  # DEBUG D#269ptD.0 => D#271ptD.0 - D#270ptD.0
  # DEBUG D#268ptD.0 => D#269ptD.0 /[ex] 8
  # DEBUG D#265ptD.0 => D#274ptD.0
  # DEBUG D#266ptD.0 => (long unsigned intD.14) D#268ptD.0
  # DEBUG __pD.53389 => _73
  # DEBUG thisD.53387 => D#265ptD.0
  # DEBUG __nD.53388 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  if (_73 != 0B)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#262ptD.0 => &D#263ptD.0->_M_implD.37527
  # DEBUG D#260ptD.0 => D#262ptD.0
  # DEBUG D#261ptD.0 => D#264ptD.0
  # DEBUG __pD.53393 => _73
  # DEBUG __aD.53391 => D#260ptD.0
  # DEBUG __nD.53392 => D#261ptD.0
  # DEBUG D#259ptD.0 => D#261ptD.0
  # DEBUG D#258ptD.0 => D#260ptD.0
  # DEBUG D#256ptD.0 => D#258ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0
  # DEBUG __pD.53396 => _73
  # DEBUG thisD.53394 => D#256ptD.0
  # DEBUG D.53395 => D#257ptD.0
  # .MEM_200 = VDEF <.MEM_199>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_73);
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       64 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_132 = PHI <.MEM_199(64), .MEM_200(65)>
  # DEBUG D#267ptD.0 => &D#274ptD.0->_M_implD.37527
  # DEBUG thisD.53397 => D#267ptD.0
  # DEBUG thisD.53398 => D#267ptD.0
  # DEBUG thisD.53399 => D#267ptD.0
  # .MEM_205 = VDEF <.MEM_132>
  MEM[(struct  &)&save_xD.53383] ={v} {CLOBBER};
  [LP 2] resx 5
;;    succ:       67 (EH,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW)
;;    pred:       66 (EH,EXECUTABLE)
<L12>: [LP 2]
  goto <bb 69> (<L0>);
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L4>: [LP 5]
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                67 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_136(68), .MEM_205(67)>
<L0>:
  # DEBUG D#489ptD.0 => &this_2(D)->_destD.34942
  # DEBUG thisD.50116 => D#489ptD.0
  # DEBUG D#167ptD.0 => &D#489ptD.0->D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D#489ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D#489ptD.0->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D#489ptD.0->D.34940
  # DEBUG thisD.50117 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.34198 *)this_2(D) + 16B]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _5
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.50120 => D#168ptD.0
  # DEBUG __pD.50119 => _5
  # DEBUG __nD.50118 => D#161ptD.0
  if (_5 != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;
;;    succ:       70 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.50124 => _5
  # DEBUG __aD.50122 => D#157ptD.0
  # DEBUG __nD.50123 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.50127 => _5
  # DEBUG thisD.50125 => D#153ptD.0
  # DEBUG D.50126 => D#154ptD.0
  # .MEM_18 = VDEF <.MEM_1>
  # USE = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.34976 D.38791 D.53372 D.53383 D.53384 D.53675 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       69 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_1(69), .MEM_18(70)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.50128 => D#160ptD.0
  # DEBUG thisD.50129 => D#160ptD.0
  # DEBUG thisD.50130 => D#160ptD.0
  # .MEM_23 = VDEF <.MEM_14>
  MEM[(struct  &)this_2(D) + 16] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       72 (EH,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       71 (EH,EXECUTABLE)
<L1>: [LP 1]
  # DEBUG D#488ptD.0 => &this_2(D)->D.34973
  # DEBUG thisD.50131 => D#488ptD.0
  # .MEM_25 = VDEF <.MEM_23>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 73, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       48 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # _67 = PHI <_54(48)>
  # DEBUG D#390ptD.0 => &this_2(D)->_destD.34942
  # DEBUG D#100ptD.0 => D#390ptD.0
  # DEBUG __nD.53464 => _51
  # DEBUG thisD.53463 => D#100ptD.0
  # .MEM_178 = VDEF <.MEM_176>
  *_67 = i_119;
  # RANGE [1, 2147483647] NONZERO 2147483647
  i_69 = i_119 + 1;
  # DEBUG iD.53459 => i_69
  # DEBUG iD.53459 => i_69
  # VUSE <.MEM_178>
  _40 = this_2(D)->D.34973._nodesD.33855;
  if (_40 <= i_69)
    goto <bb 53>;
  else
    goto <bb 74>;
;;    succ:       53 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                74 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 74, loop depth 1, count 0, freq 437, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 [97.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 44>;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 2, count 0, freq 5000, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       47 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE ~[2147483648, 18446744071562067967]
  _57 = (long unsigned intD.14) j_50;
  # DEBUG D#388ptD.0 => &this_2(D)->_destD.34942
  # DEBUG D#100ptD.0 => D#388ptD.0
  # DEBUG __nD.53466 => _57
  # DEBUG thisD.53465 => D#100ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _59 = _57 * 4;
  # PT = nonlocal escaped 
  _60 = pretmp_187 + _59;
  # VUSE <.MEM_176>
  _61 = *_60;
  if (_61 == -1)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [53.5%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [46.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 75, next block 1, flags: (NEW, REACHABLE)
;;    pred:       11 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _218 = __n_39 * 4;
  # PT = nonlocal escaped 
  # ALIGN = 4, MISALIGN = 0
  _121 = (intD.9 *) _218;
  # DEBUG D#381ptD.0 => &__tmpD.53571
  # DEBUG D#381ptD.0 => &__tmpD.53571
  # DEBUG D#382ptD.0 => &__valD.53449
  # DEBUG __nD.53634 => __n_39
  # DEBUG D#379ptD.0 => D#381ptD.0
  # DEBUG thisD.53631 => D#379ptD.0
  # DEBUG thisD.53632 => D#381ptD.0
  # DEBUG D#380ptD.0 => D#382ptD.0
  # DEBUG __valueD.53633 => D#380ptD.0
  # DEBUG D#378ptD.0 => &D#379ptD.0->D.34940
  # DEBUG thisD.48338 => D#378ptD.0
  # DEBUG D#376ptD.0 => D#380ptD.0
  # DEBUG __firstD.53638 => NULL
  # DEBUG __nD.53637 => __n_39
  # DEBUG D#375ptD.0 => D#376ptD.0
  # DEBUG __xD.53635 => D#375ptD.0
  # DEBUG D.53636 => D#377ptD.0
  # DEBUG D#374ptD.0 => D#375ptD.0
  # DEBUG __firstD.53641 => NULL
  # DEBUG __nD.53640 => __n_39
  # DEBUG D#373ptD.0 => D#374ptD.0
  # DEBUG __xD.53639 => D#373ptD.0
  # DEBUG __assignableD.53643 => 1
  # DEBUG D#372ptD.0 => D#373ptD.0
  # DEBUG __firstD.53646 => NULL
  # DEBUG __nD.53645 => __n_39
  # DEBUG D#371ptD.0 => D#372ptD.0
  # DEBUG __xD.53644 => D#371ptD.0
  # DEBUG D#308ptD.0 => D#371ptD.0
  # DEBUG __firstD.53649 => NULL
  # DEBUG __nD.53648 => __n_39
  # DEBUG D#307ptD.0 => D#308ptD.0
  # DEBUG __valueD.53647 => D#307ptD.0
  # DEBUG __itD.47237 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG D#306ptD.0 => D#307ptD.0
  # DEBUG __firstD.53652 => NULL
  # DEBUG __nD.53651 => __n_39
  # DEBUG __valueD.53650 => D#306ptD.0
  # DEBUG __tmpD.53653 => -1
  # DEBUG __niterD.53654 => __n_39
  # DEBUG __niterD.53654 => __n_39
  # DEBUG __firstD.53652 => 0B
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>) (_ZN21HotSpotTrafficPatternC2EiSt6vectorIiSaIiEES2_, funcdef_no=1836, decl_uid=36113, cgraph_uid=506, symbol_order=507)


Pass statistics:
----------------

HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>) (struct HotSpotTrafficPatternD.36083 * const thisD.36114, intD.9 nodesD.36115, struct vectorD.33797 & restrict hotspotsD.36116, struct vectorD.33797 & restrict ratesD.36117)
Eh tree:
   1 cleanup land:{5,<L17>},{4,<L16>},{1,<L21>}
     2 cleanup land:{7,<L19>},{6,<L18>},{2,<L20>}
       3 cleanup land:{3,<L13>}
{
  struct iteratorD.34508 __positionD.53809;
  value_typeD.34503 __xD.53804;
  intD.9 * D.53801;
  const ptrdiff_tD.2819 _NumD.53792;
  intD.9 * D.53751;
  const ptrdiff_tD.2819 _NumD.53742;
  const intD.9 rateD.39052;
  const intD.9 hotspotD.39051;
  size_tD.2853 iD.39049;
  static const charD.10 _ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040[86] = "HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>)";
  static const charD.10 _ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040[86] = "HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>)";
  long unsigned intD.14 prephitmp_1;
  intD.9 iftmp.118_2;
  long unsigned intD.14 pretmp_11;
  long unsigned intD.14 _13;
  struct vectorD.33797 * _14;
  long unsigned intD.14 _16;
  intD.9 iftmp.118_20;
  intD.9 _27;
  intD.9 * _32;
  long unsigned intD.14 pretmp_38;
  long intD.12 _39;
  long intD.12 _40;
  long intD.12 _41;
  long intD.12 _42;
  size_typeD.34516 _43;
  long unsigned intD.14 _44;
  intD.9 & _45;
  intD.9 & _46;
  intD.9 * _47;
  long unsigned intD.14 prephitmp_51;
  long unsigned intD.14 pretmp_52;
  long unsigned intD.14 prephitmp_53;
  intD.9 * const pretmp_54;
  intD.9 * const prephitmp_57;
  long unsigned intD.14 pretmp_58;
  long unsigned intD.14 prephitmp_59;
  intD.9 * const pretmp_60;
  intD.9 * const prephitmp_62;
  intD.9 * const _65;
  intD.9 * const _66;
  long intD.12 _67;
  long intD.12 _68;
  long intD.12 _69;
  long intD.12 _70;
  size_typeD.34516 _71;
  intD.9 * _74;
  intD.9 * const _75;
  intD.9 * const _76;
  long intD.12 __last.81_77;
  long intD.12 __first.82_78;
  long intD.12 _79;
  long unsigned intD.14 _81;
  intD.9 * _83;
  intD.9 * _84;
  intD.9 * iftmp.79_85;
  intD.9 * const _86;
  intD.9 * const _87;
  long intD.12 _88;
  long intD.12 _89;
  long intD.12 _90;
  long intD.12 _91;
  size_typeD.34516 _92;
  intD.9 * _95;
  intD.9 * const _96;
  intD.9 * const _97;
  long intD.12 __last.81_98;
  long intD.12 __first.82_99;
  long intD.12 _100;
  long unsigned intD.14 _102;
  intD.9 * _104;
  intD.9 * _105;
  intD.9 * iftmp.79_106;
  intD.9 * _109;
  intD.9 _112;
  size_typeD.34516 _113;
  long unsigned intD.14 _114;
  long unsigned intD.14 _115;
  intD.9 * _116;
  intD.9 pretmp_120;
  intD.9 * _148;
  intD.9 prephitmp_152;

;;   basic block 2, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#501ptD.0 => &this_6(D)->D.36118
  # DEBUG thisD.50133 => D#501ptD.0
  # DEBUG nodesD.50134 => nodes_8(D)
  # .MEM_48 = VDEF <.MEM_7(D)>
  MEM[(struct TrafficPatternD.33853 *)this_6(D)]._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_49 = VDEF <.MEM_48>
  MEM[(struct TrafficPatternD.33853 *)this_6(D)]._nodesD.33855 = nodes_8(D);
  if (nodes_8(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#501ptD.0
  # DEBUG D#63ptD.0 => nodes_8(D)
  # .MEM_64 = VDEF <.MEM_49>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_10 = VDEF <.MEM_49>
  this_6(D)->D.36118._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV21HotSpotTrafficPatternD.36123 + 16B];
  # DEBUG D#763ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG thisD.53702 => D#763ptD.0
  # DEBUG __xD.53703 => hotspots_12(D)
  # DEBUG D#368ptD.0 => &MEM[(const struct vectorD.33797 *)hotspots_12(D)].D.34940
  # DEBUG thisD.48189 => D#368ptD.0
  # DEBUG __aD.48187 => NULL
  # VUSE <.MEM_10>
  # PT = nonlocal escaped 
  _65 = MEM[(intD.9 * *)hotspots_12(D) clique 1 base 1];
  # DEBUG D#99ptD.0 => hotspots_12(D)
  # VUSE <.MEM_10>
  # PT = nonlocal escaped 
  _66 = MEM[(intD.9 * *)hotspots_12(D) + 8B clique 1 base 1];
  # DEBUG D#99ptD.0 => hotspots_12(D)
  # DEBUG thisD.53704 => D#99ptD.0
  # DEBUG thisD.53705 => D#99ptD.0
  _67 = (long intD.12) _66;
  _68 = (long intD.12) _65;
  _69 = _67 - _68;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _70 = _69 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _71 = (size_typeD.34516) _70;
  # DEBUG D#370ptD.0 => &D#763ptD.0->D.34940
  # DEBUG thisD.53708 => D#370ptD.0
  # DEBUG __nD.53707 => NULL
  # DEBUG __aD.53706 => NULL
  # DEBUG D#367ptD.0 => &D#370ptD.0->_M_implD.34431
  # DEBUG thisD.53710 => D#367ptD.0
  # DEBUG __aD.53709 => NULL
  # DEBUG thisD.46561 => D#367ptD.0
  # DEBUG __aD.46562 => NULL
  # DEBUG thisD.46558 => D#367ptD.0
  # DEBUG D.46559 => NULL
  # .MEM_121 = VDEF <.MEM_10>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 16B]._M_startD.34433 = 0B;
  # .MEM_122 = VDEF <.MEM_121>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 16B]._M_finishD.34434 = 0B;
  # .MEM_123 = VDEF <.MEM_122>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 16B]._M_end_of_storageD.34435 = 0B;
  # DEBUG thisD.53712 => D#370ptD.0
  # DEBUG __nD.53711 => NULL
  # DEBUG D#346ptD.0 => D#370ptD.0
  # DEBUG __nD.53743 => _71
  # DEBUG thisD.53744 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (_71 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 24, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_38 = (long unsigned intD.14) _69;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.53747 => _71
  # DEBUG __aD.53746 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.53750 => _71
  # DEBUG thisD.53748 => D#340ptD.0
  # DEBUG D.53749 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  if (_71 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 4] # .MEM_125 = VDEF <.MEM_123>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZSt17__throw_bad_allocvD.3957 ();
;;    succ:       54 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _13 = (long unsigned intD.14) _69;
  [LP 5] # .MEM_124 = VDEF <.MEM_123>
  # PT = { D.53826 } (escaped heap)
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _84 = _ZnwmD.2764 (_13);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L17>: [LP 5]
  goto <bb 55> (<L15>);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.53826 } (escaped heap)
  # iftmp.79_85 = PHI <0B(5), _84(8)>
  # .MEM_21 = PHI <.MEM_123(5), .MEM_124(8)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_51 = PHI <pretmp_38(5), _13(8)>
  # .MEM_127 = VDEF <.MEM_21>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_startD.34433 = iftmp.79_85;
  # .MEM_128 = VDEF <.MEM_127>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_finishD.34434 = iftmp.79_85;
  # PT = null { D.53826 } (escaped heap)
  _74 = iftmp.79_85 + prephitmp_51;
  # .MEM_129 = VDEF <.MEM_128>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_end_of_storageD.34435 = _74;
  # DEBUG D#369ptD.0 => &D#763ptD.0->D.34940
  # DEBUG thisD.48172 => D#369ptD.0
  # VUSE <.MEM_129>
  # PT = nonlocal escaped 
  _75 = MEM[(intD.9 * *)hotspots_12(D) + 8B clique 1 base 1];
  # DEBUG D#114ptD.0 => hotspots_12(D)
  # DEBUG thisD.48170 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # VUSE <.MEM_129>
  # PT = nonlocal escaped 
  _76 = MEM[(intD.9 * *)hotspots_12(D) clique 1 base 1];
  # DEBUG D#115ptD.0 => hotspots_12(D)
  # DEBUG thisD.48167 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __firstD.48193 => _76
  # DEBUG __lastD.48194 => _75
  # DEBUG __resultD.53714 => NULL
  # DEBUG D.53713 => D#323ptD.0
  # DEBUG __firstD.48164 => _76
  # DEBUG __lastD.48165 => _75
  # DEBUG __resultD.53717 => NULL
  # DEBUG __assignableD.53722 => 1
  # DEBUG __firstD.47652 => _76
  # DEBUG __lastD.47653 => _75
  # DEBUG __resultD.53723 => NULL
  # DEBUG __firstD.47582 => _76
  # DEBUG __lastD.47581 => _75
  # DEBUG __resultD.53726 => NULL
  # DEBUG __itD.47553 => _75
  # DEBUG __it$_M_currentD.47523 => _75
  # DEBUG __itD.47555 => _76
  # DEBUG __it$_M_currentD.47519 => _76
  # DEBUG __firstD.47528 => _76
  # DEBUG __lastD.47529 => _75
  # DEBUG __resultD.53729 => NULL
  # DEBUG __itD.47494 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.47514 => _75
  # DEBUG __itD.47492 => _75
  # DEBUG thisD.46571 => NULL
  # DEBUG __itD.47516 => _76
  # DEBUG __itD.47488 => _76
  # DEBUG thisD.46571 => NULL
  # DEBUG __firstD.53734 => _76
  # DEBUG __lastD.53733 => _75
  # DEBUG __resultD.53732 => NULL
  # DEBUG __simpleD.53738 => 1
  # DEBUG __firstD.53741 => _76
  # DEBUG __lastD.53740 => _75
  # DEBUG __resultD.53739 => NULL
  __last.81_77 = (long intD.12) _75;
  __first.82_78 = (long intD.12) _76;
  _79 = __last.81_77 - __first.82_78;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_80 = _79 /[ex] 4;
  # DEBUG _NumD.53742 => _Num_80
  if (_Num_80 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;
;;    succ:       12 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 145, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_52 = (long unsigned intD.14) _79;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 92, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _81 = (long unsigned intD.14) _79;
  # .MEM_130 = VDEF <.MEM_129>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  memmoveD.995 (iftmp.79_85, _76, _81);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_117 = PHI <.MEM_129(11), .MEM_130(12)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_53 = PHI <pretmp_52(11), _81(12)>
  # PT = null { D.53826 } (escaped heap)
  _83 = iftmp.79_85 + prephitmp_53;
  # .MEM_131 = VDEF <.MEM_117>
  MEM[(struct vectorD.33797 *)this_6(D) + 16B].D.34940._M_implD.34431._M_finishD.34434 = _83;
  # DEBUG D#764ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG thisD.53752 => D#764ptD.0
  # DEBUG __xD.53753 => rates_15(D)
  # DEBUG D#368ptD.0 => &MEM[(const struct vectorD.33797 *)rates_15(D)].D.34940
  # DEBUG thisD.48189 => D#368ptD.0
  # DEBUG __aD.48187 => NULL
  # VUSE <.MEM_131>
  # PT = nonlocal escaped 
  _86 = MEM[(intD.9 * *)rates_15(D) clique 1 base 2];
  # DEBUG D#99ptD.0 => rates_15(D)
  # VUSE <.MEM_131>
  # PT = nonlocal escaped 
  _87 = MEM[(intD.9 * *)rates_15(D) + 8B clique 1 base 2];
  # DEBUG D#99ptD.0 => rates_15(D)
  # DEBUG thisD.53754 => D#99ptD.0
  # DEBUG thisD.53755 => D#99ptD.0
  _88 = (long intD.12) _87;
  _89 = (long intD.12) _86;
  _90 = _88 - _89;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _91 = _90 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _92 = (size_typeD.34516) _91;
  # DEBUG D#370ptD.0 => &D#764ptD.0->D.34940
  # DEBUG thisD.53758 => D#370ptD.0
  # DEBUG __nD.53757 => NULL
  # DEBUG __aD.53756 => NULL
  # DEBUG D#367ptD.0 => &D#370ptD.0->_M_implD.34431
  # DEBUG thisD.53760 => D#367ptD.0
  # DEBUG __aD.53759 => NULL
  # DEBUG thisD.46561 => D#367ptD.0
  # DEBUG __aD.46562 => NULL
  # DEBUG thisD.46558 => D#367ptD.0
  # DEBUG D.46559 => NULL
  # .MEM_132 = VDEF <.MEM_131>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 40B]._M_startD.34433 = 0B;
  # .MEM_133 = VDEF <.MEM_132>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 40B]._M_finishD.34434 = 0B;
  # .MEM_134 = VDEF <.MEM_133>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 40B]._M_end_of_storageD.34435 = 0B;
  # DEBUG thisD.53762 => D#370ptD.0
  # DEBUG __nD.53761 => NULL
  # DEBUG D#346ptD.0 => D#370ptD.0
  # DEBUG __nD.53793 => _92
  # DEBUG thisD.53794 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (_92 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 24, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_58 = (long unsigned intD.14) _90;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.53797 => _92
  # DEBUG __aD.53796 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.53800 => _92
  # DEBUG thisD.53798 => D#340ptD.0
  # DEBUG D.53799 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  if (_92 > 4611686018427387903)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 6] # .MEM_136 = VDEF <.MEM_134>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZSt17__throw_bad_allocvD.3957 ();
;;    succ:       49 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _16 = (long unsigned intD.14) _90;
  [LP 7] # .MEM_135 = VDEF <.MEM_134>
  # PT = { D.53827 } (escaped heap)
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _105 = _ZnwmD.2764 (_16);
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 (EH,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 (EH,EXECUTABLE)
<L19>: [LP 7]
  goto <bb 50> (<L14>);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_135>
  pretmp_54 = MEM[(intD.9 * *)this_6(D) + 24B];
  # VUSE <.MEM_135>
  pretmp_60 = MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_startD.34433;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.53827 } (escaped heap)
  # iftmp.79_106 = PHI <0B(14), _105(19)>
  # .MEM_118 = PHI <.MEM_134(14), .MEM_135(19)>
  # PT = nonlocal escaped 
  # prephitmp_57 = PHI <_83(14), pretmp_54(19)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_59 = PHI <pretmp_58(14), _16(19)>
  # PT = nonlocal escaped 
  # prephitmp_62 = PHI <iftmp.79_85(14), pretmp_60(19)>
  # .MEM_138 = VDEF <.MEM_118>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 40B]._M_implD.34431._M_startD.34433 = iftmp.79_106;
  # .MEM_139 = VDEF <.MEM_138>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 40B]._M_implD.34431._M_finishD.34434 = iftmp.79_106;
  # PT = null { D.53827 } (escaped heap)
  _95 = iftmp.79_106 + prephitmp_59;
  # .MEM_140 = VDEF <.MEM_139>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 40B]._M_implD.34431._M_end_of_storageD.34435 = _95;
  # DEBUG D#369ptD.0 => &D#764ptD.0->D.34940
  # DEBUG thisD.48172 => D#369ptD.0
  # VUSE <.MEM_140>
  # PT = nonlocal escaped 
  _96 = MEM[(intD.9 * *)rates_15(D) + 8B clique 1 base 2];
  # DEBUG D#114ptD.0 => rates_15(D)
  # DEBUG thisD.48170 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # VUSE <.MEM_140>
  # PT = nonlocal escaped 
  _97 = MEM[(intD.9 * *)rates_15(D) clique 1 base 2];
  # DEBUG D#115ptD.0 => rates_15(D)
  # DEBUG thisD.48167 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __firstD.48193 => _97
  # DEBUG __lastD.48194 => _96
  # DEBUG __resultD.53764 => NULL
  # DEBUG D.53763 => D#323ptD.0
  # DEBUG __firstD.48164 => _97
  # DEBUG __lastD.48165 => _96
  # DEBUG __resultD.53767 => NULL
  # DEBUG __assignableD.53772 => 1
  # DEBUG __firstD.47652 => _97
  # DEBUG __lastD.47653 => _96
  # DEBUG __resultD.53773 => NULL
  # DEBUG __firstD.47582 => _97
  # DEBUG __lastD.47581 => _96
  # DEBUG __resultD.53776 => NULL
  # DEBUG __itD.47553 => _96
  # DEBUG __it$_M_currentD.47523 => _96
  # DEBUG __itD.47555 => _97
  # DEBUG __it$_M_currentD.47519 => _97
  # DEBUG __firstD.47528 => _97
  # DEBUG __lastD.47529 => _96
  # DEBUG __resultD.53779 => NULL
  # DEBUG __itD.47494 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.47514 => _96
  # DEBUG __itD.47492 => _96
  # DEBUG thisD.46571 => NULL
  # DEBUG __itD.47516 => _97
  # DEBUG __itD.47488 => _97
  # DEBUG thisD.46571 => NULL
  # DEBUG __firstD.53784 => _97
  # DEBUG __lastD.53783 => _96
  # DEBUG __resultD.53782 => NULL
  # DEBUG __simpleD.53788 => 1
  # DEBUG __firstD.53791 => _97
  # DEBUG __lastD.53790 => _96
  # DEBUG __resultD.53789 => NULL
  __last.81_98 = (long intD.12) _96;
  __first.82_99 = (long intD.12) _97;
  _100 = __last.81_98 - __first.82_99;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_101 = _100 /[ex] 4;
  # DEBUG _NumD.53792 => _Num_101
  if (_Num_101 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 145, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_11 = (long unsigned intD.14) _100;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 92, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _102 = (long unsigned intD.14) _100;
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  memmoveD.995 (iftmp.79_106, _97, _102);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_140(21), .MEM_141(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_1 = PHI <pretmp_11(21), _102(22)>
  # PT = null { D.53827 } (escaped heap)
  _104 = iftmp.79_106 + prephitmp_1;
  # .MEM_142 = VDEF <.MEM_119>
  MEM[(struct vectorD.33797 *)this_6(D) + 40B].D.34940._M_implD.34431._M_finishD.34434 = _104;
  # .MEM_17 = VDEF <.MEM_142>
  this_6(D)->_max_valD.36087 = -1;
  # DEBUG D#492ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG thisD.50135 => D#492ptD.0
  # DEBUG D#114ptD.0 => D#492ptD.0
  # DEBUG thisD.45798 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # DEBUG D#115ptD.0 => D#492ptD.0
  # DEBUG thisD.45794 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __lhsD.50137 => NULL
  # DEBUG __rhsD.50136 => NULL
  # DEBUG thisD.45787 => NULL
  # DEBUG thisD.45785 => NULL
  if (prephitmp_57 == prephitmp_62)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_33 = VDEF <.MEM_17>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  __assert_failD.29068 ("!_hotspots.empty()", "traffic.cpp", 494, &_ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040);
;;    succ:      

;;   basic block 25, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#493ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG D#99ptD.0 => D#493ptD.0
  # DEBUG D#99ptD.0 => D#493ptD.0
  # DEBUG thisD.50146 => D#99ptD.0
  # DEBUG thisD.50145 => D#99ptD.0
  _39 = (long intD.12) prephitmp_57;
  _40 = (long intD.12) prephitmp_62;
  _41 = _39 - _40;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _42 = _41 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _43 = (size_typeD.34516) _42;
  # DEBUG sizeD.39048 => NULL
  # DEBUG D#494ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG thisD.50139 => D#494ptD.0
  # DEBUG D#114ptD.0 => D#494ptD.0
  # DEBUG thisD.45798 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # DEBUG D#115ptD.0 => D#494ptD.0
  # DEBUG thisD.45794 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __lhsD.50141 => NULL
  # DEBUG __rhsD.50140 => NULL
  # DEBUG thisD.45787 => NULL
  # DEBUG thisD.45785 => NULL
  if (_104 == iftmp.79_106)
    goto <bb 27>;
  else
    goto <bb 26>;
;;    succ:       27 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 201, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#495ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG thisD.50148 => D#495ptD.0
  # DEBUG thisD.50149 => D#495ptD.0
  # DEBUG D#118ptD.0 => &D#495ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.50151 => NULL
  # DEBUG __iD.50150 => D#118ptD.0
  # DEBUG thisD.50153 => NULL
  # DEBUG __nD.50152 => 1
  # DEBUG thisD.45635 => NULL
  # DEBUG __iD.45634 => NULL
  # DEBUG thisD.45630 => NULL
  # VUSE <.MEM_17>
  iftmp.118_20 = MEM[(intD.9 &)_104 + 18446744073709551612];
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # iftmp.118_2 = PHI <1(25), iftmp.118_20(26)>
  # DEBUG thisD.53802 => D#764ptD.0
  # DEBUG __new_sizeD.53803 => _43
  # .MEM_143 = VDEF <.MEM_17>
  __xD.53804 = iftmp.118_2;
  # DEBUG __xD.53804 => __xD.53804
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG thisD.53811 => D#99ptD.0
  # DEBUG thisD.53812 => D#99ptD.0
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _113 = (size_typeD.34516) _Num_101;
  if (_43 > _113)
    goto <bb 28>;
  else
    goto <bb 30>;
;;    succ:       28 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 49, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG thisD.50098 => D#99ptD.0
  # DEBUG thisD.50097 => D#99ptD.0
  # RANGE [1, 18446744073709551615]
  _114 = _43 - _113;
  # DEBUG thisD.50091 => D#764ptD.0
  # DEBUG D#118ptD.0 => &D#764ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.50093 => NULL
  # DEBUG __iD.50092 => D#118ptD.0
  # DEBUG thisD.53810 => D#764ptD.0
  # .MEM_145 = VDEF <.MEM_143>
  MEM[(struct __normal_iteratorD.34509 *)&__positionD.53809 clique 1 base 0] = _104;
  # DEBUG __nD.53808 => _114
  # DEBUG __xD.53807 => &__xD.53804
  # PT = nonlocal 
  _14 = &this_6(D)->_ratesD.36086;
  [LP 3] # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34863 (_14, __positionD.53809, _114, &__xD.53804);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 (EH,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 122, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_149 = PHI <.MEM_146(28), .MEM_143(30)>
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 188, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       27 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG thisD.50103 => D#99ptD.0
  # DEBUG thisD.50102 => D#99ptD.0
  if (_43 < _113)
    goto <bb 31>;
  else
    goto <bb 29>;
;;    succ:       31 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 114, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _115 = (long unsigned intD.14) _41;
  # PT = null { D.53827 } (escaped heap)
  _116 = iftmp.79_106 + _115;
  # DEBUG D#145ptD.0 => D#764ptD.0
  # DEBUG __posD.53806 => _116
  # DEBUG D#144ptD.0 => D#145ptD.0
  # DEBUG thisD.53805 => D#144ptD.0
  # DEBUG D#142ptD.0 => &D#144ptD.0->D.34940
  # DEBUG thisD.45847 => D#142ptD.0
  # DEBUG D#143ptD.0 => D#144ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG __firstD.45837 => _116
  # DEBUG __lastD.45838 => D#143ptD.0
  # DEBUG D.45839 => NULL
  # DEBUG D#140ptD.0 => _116
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # .MEM_144 = VDEF <.MEM_143>
  MEM[(intD.9 * *)this_6(D) + 48B] = _116;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 240, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_19 = PHI <.MEM_149(29), .MEM_144(31)>
  # DEBUG iD.39049 => 0
  if (_43 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [2.2%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [97.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [2.2%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [2.2%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_110 = PHI <.MEM_19(32), .MEM_28(44)>
  # VUSE <.MEM_110>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 34, loop depth 0, count 0, freq 235, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [97.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#496ptD.0 => &this_6(D)->_hotspotsD.36085
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _109 = MEM[(intD.9 * *)this_6(D) + 16B];
  # DEBUG D#100ptD.0 => D#496ptD.0
  # DEBUG __nD.50156 => 0
  # DEBUG thisD.50157 => D#100ptD.0
  # VUSE <.MEM_19>
  hotspot_154 = *_109;
  # DEBUG hotspotD.39051 => hotspot_154
  if (hotspot_154 < 0)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_19(34), .MEM_19(36), .MEM_28(39), .MEM_28(40)>
  # .MEM_31 = VDEF <.MEM_37>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  __assert_failD.29068 ("(hotspot >= 0) && (hotspot < _nodes)", "traffic.cpp", 499, &_ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040);
;;    succ:      

;;   basic block 36, loop depth 0, count 0, freq 235, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_19>
  _112 = this_6(D)->D.36118._nodesD.33855;
  if (_112 <= hotspot_154)
    goto <bb 35>;
  else
    goto <bb 37>;
;;    succ:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 234, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#497ptD.0 => &this_6(D)->_ratesD.36086
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _148 = MEM[(intD.9 * *)this_6(D) + 40B];
  # DEBUG D#100ptD.0 => D#497ptD.0
  # DEBUG __nD.50160 => 0
  # DEBUG thisD.50161 => D#100ptD.0
  # VUSE <.MEM_19>
  rate_18 = *_148;
  # DEBUG rateD.39052 => rate_18
  if (rate_18 < 0)
    goto <bb 38>;
  else
    goto <bb 43>;
;;    succ:       38 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_36 = PHI <.MEM_19(37), .MEM_28(41)>
  # .MEM_30 = VDEF <.MEM_36>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  __assert_failD.29068 ("rate >= 0", "traffic.cpp", 501, &_ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040);
;;    succ:      

;;   basic block 39, loop depth 1, count 0, freq 9540, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       44 [97.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#496ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG D#100ptD.0 => D#496ptD.0
  # DEBUG __nD.50156 => i_29
  # DEBUG thisD.50157 => D#100ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _44 = i_29 * 4;
  # PT = nonlocal escaped 
  _45 = _109 + _44;
  # VUSE <.MEM_28>
  hotspot_22 = *_45;
  # DEBUG hotspotD.39051 => hotspot_22
  if (hotspot_22 < 0)
    goto <bb 35>;
  else
    goto <bb 40>;
;;    succ:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 9536, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  if (hotspot_22 >= _112)
    goto <bb 35>;
  else
    goto <bb 41>;
;;    succ:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 9533, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#497ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG D#100ptD.0 => D#497ptD.0
  # DEBUG __nD.50160 => i_29
  # DEBUG thisD.50161 => D#100ptD.0
  # PT = nonlocal escaped 
  _46 = _148 + _44;
  # VUSE <.MEM_28>
  rate_25 = *_46;
  # DEBUG rateD.39052 => rate_25
  if (rate_25 < 0)
    goto <bb 38>;
  else
    goto <bb 42>;
;;    succ:       38 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 9529, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 44>;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 234, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       37 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_19>
  pretmp_120 = this_6(D)->_max_valD.36087;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 9763, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # i_126 = PHI <0(43), i_29(42)>
  # .MEM_167 = PHI <.MEM_19(43), .MEM_28(42)>
  # rate_166 = PHI <rate_18(43), rate_25(42)>
  # prephitmp_152 = PHI <pretmp_120(43), _27(42)>
  # DEBUG iD.39049 => i_126
  # DEBUG D#496ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG __nD.50156 => i_126
  # DEBUG thisD.50157 => D#100ptD.0
  # DEBUG hotspotD.39051 => hotspot_154
  # DEBUG D#497ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG D#100ptD.0 => D#497ptD.0
  # DEBUG __nD.50160 => i_126
  # DEBUG thisD.50161 => D#100ptD.0
  # DEBUG rateD.39052 => rate_166
  _27 = prephitmp_152 + rate_166;
  # .MEM_28 = VDEF <.MEM_167>
  this_6(D)->_max_valD.36087 = _27;
  # RANGE [0, 18446744073709551615]
  i_29 = i_126 + 1;
  # DEBUG iD.39049 => i_29
  # DEBUG iD.39049 => i_29
  if (i_29 >= _43)
    goto <bb 33>;
  else
    goto <bb 39>;
;;    succ:       33 [2.2%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [97.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       28 (EH,EXECUTABLE)
<L13>: [LP 3]
  # DEBUG D#498ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG thisD.50163 => D#498ptD.0
  # DEBUG D#167ptD.0 => &D#498ptD.0->D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D#498ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D#498ptD.0->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D#498ptD.0->D.34940
  # DEBUG thisD.50164 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  _47 = MEM[(struct _Vector_baseD.34198 *)this_6(D) + 40B]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _47
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.50167 => D#168ptD.0
  # DEBUG __pD.50166 => _47
  # DEBUG __nD.50165 => D#161ptD.0
  if (_47 != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.50171 => _47
  # DEBUG __aD.50169 => D#157ptD.0
  # DEBUG __nD.50170 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.50174 => _47
  # DEBUG thisD.50172 => D#153ptD.0
  # DEBUG D.50173 => D#154ptD.0
  # .MEM_50 = VDEF <.MEM_146>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZdlPvD.2766 (_47);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_146(45), .MEM_50(46)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.50175 => D#160ptD.0
  # DEBUG thisD.50176 => D#160ptD.0
  # DEBUG thisD.50177 => D#160ptD.0
  # .MEM_55 = VDEF <.MEM_35>
  MEM[(struct  &)this_6(D) + 40] ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       48 (EH,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       47 (EH,EXECUTABLE)
<L20>: [LP 2]
  goto <bb 50> (<L14>);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L18>: [LP 6]
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_135(18), .MEM_55(48), .MEM_136(49)>
<L14>:
  # DEBUG D#499ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG thisD.50178 => D#499ptD.0
  # DEBUG D#167ptD.0 => &D#499ptD.0->D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D#499ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D#499ptD.0->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D#499ptD.0->D.34940
  # DEBUG thisD.50179 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  _32 = MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _32
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.50182 => D#168ptD.0
  # DEBUG __pD.50181 => _32
  # DEBUG __nD.50180 => D#161ptD.0
  if (_32 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.50186 => _32
  # DEBUG __aD.50184 => D#157ptD.0
  # DEBUG __nD.50185 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.50189 => _32
  # DEBUG thisD.50187 => D#153ptD.0
  # DEBUG D.50188 => D#154ptD.0
  # .MEM_56 = VDEF <.MEM_4>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_4(50), .MEM_56(51)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.50190 => D#160ptD.0
  # DEBUG thisD.50191 => D#160ptD.0
  # DEBUG thisD.50192 => D#160ptD.0
  # .MEM_61 = VDEF <.MEM_34>
  MEM[(struct  &)this_6(D) + 16] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       53 (EH,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       52 (EH,EXECUTABLE)
<L21>: [LP 1]
  goto <bb 55> (<L15>);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       7 (EH,EXECUTABLE)
<L16>: [LP 4]
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 54, next block 1, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_124(9), .MEM_61(53), .MEM_125(54)>
<L15>:
  # DEBUG D#500ptD.0 => &this_6(D)->D.36118
  # DEBUG thisD.50193 => D#500ptD.0
  # .MEM_63 = VDEF <.MEM_5>
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


Creating dr for MEM[(struct TrafficPattern *)this_6(D)]._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct TrafficPattern *)this_6(D)]
	Access function 0: 0
Creating dr for MEM[(struct TrafficPattern *)this_6(D)]._nodes
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct TrafficPattern *)this_6(D)]
	Access function 0: 64
Creating dr for this_6(D)->D.36118._vptr.TrafficPattern
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int * *)hotspots_12(D)]
analyze_innermost: success.
	base_address: hotspots_12(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)hotspots_12(D)]
Creating dr for MEM[(int * *)hotspots_12(D) + 8B]
analyze_innermost: success.
	base_address: hotspots_12(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)hotspots_12(D) + 8B]
Creating dr for MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_6(D) + 16B]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_finish
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_6(D) + 16B]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_end_of_storage
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_6(D) + 16B]
	Access function 0: 128
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 16B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_finish
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 16B]
	Access function 0: 64
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 16B]
	Access function 0: 128
	Access function 1: 0
Creating dr for MEM[(int * *)hotspots_12(D) + 8B]
analyze_innermost: success.
	base_address: hotspots_12(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)hotspots_12(D) + 8B]
Creating dr for MEM[(int * *)hotspots_12(D)]
analyze_innermost: success.
	base_address: hotspots_12(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)hotspots_12(D)]
Creating dr for MEM[(struct vector *)this_6(D) + 16B].D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_6(D) + 16B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int * *)rates_15(D)]
analyze_innermost: success.
	base_address: rates_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)rates_15(D)]
Creating dr for MEM[(int * *)rates_15(D) + 8B]
analyze_innermost: success.
	base_address: rates_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)rates_15(D) + 8B]
Creating dr for MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_6(D) + 40B]
	Access function 0: 0
Creating dr for MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_finish
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_6(D) + 40B]
	Access function 0: 64
Creating dr for MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_end_of_storage
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_impl *)this_6(D) + 40B]
	Access function 0: 128
Creating dr for MEM[(int * *)this_6(D) + 24B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 24B]
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 16B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 16B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 40B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_finish
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 40B]
	Access function 0: 64
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 40B]
	Access function 0: 128
	Access function 1: 0
Creating dr for MEM[(int * *)rates_15(D) + 8B]
analyze_innermost: success.
	base_address: rates_15(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)rates_15(D) + 8B]
Creating dr for MEM[(int * *)rates_15(D)]
analyze_innermost: success.
	base_address: rates_15(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)rates_15(D)]
Creating dr for MEM[(struct vector *)this_6(D) + 40B].D.34940._M_impl._M_finish
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_6(D) + 40B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_6(D)->_max_val
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 512
Creating dr for MEM[(int &)_104 + 18446744073709551612]
analyze_innermost: success.
	base_address: iftmp.79_106 + prephitmp_1
	offset from base address: 0
	constant offset from base address: -4(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(int &)_104 + 18446744073709551612]
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 40B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int * *)this_6(D) + 48B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 48B]
Creating dr for MEM[(int * *)this_6(D) + 16B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 16B]
Creating dr for *_109
analyze_innermost: success.
	base_address: _109
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_109
Creating dr for this_6(D)->D.36118._nodes
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for MEM[(int * *)this_6(D) + 40B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 40B]
Creating dr for *_148
analyze_innermost: success.
	base_address: _148
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_148
Creating dr for this_6(D)->_max_val
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 512
Creating dr for this_6(D)->_max_val
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 512
Creating dr for this_6(D)->_max_val
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 512
Creating dr for this_6(D)->_max_val
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 512
Creating dr for this_6(D)->_max_val
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 512
Creating dr for *_45
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _109
	offset from base address: 0
	constant offset from base address: 4
	step: 4
	aligned to: 256
	base_object: *_109
	Access function 0: {4, +, 4}_1
Creating dr for *_45
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _109
	offset from base address: 0
	constant offset from base address: 4
	step: 4
	aligned to: 256
	base_object: *_109
	Access function 0: {4, +, 4}_1
Creating dr for *_46
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _148
	offset from base address: 0
	constant offset from base address: 4
	step: 4
	aligned to: 256
	base_object: *_148
	Access function 0: {4, +, 4}_1
Creating dr for *_46
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _148
	offset from base address: 0
	constant offset from base address: 4
	step: 4
	aligned to: 256
	base_object: *_148
	Access function 0: {4, +, 4}_1

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:12)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:23)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:58, LOOPS:1, CONDITIONS:24, STMTS:533)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#501 => &this_6(D)->D.36118
    # DEBUG this => D#501
    # DEBUG nodes => nodes_8(D)
    # .MEM_48 = VDEF <.MEM_7(D)>
    MEM[(struct TrafficPattern *)this_6(D)]._vptr.TrafficPattern = &MEM[(void *)&_ZTV14TrafficPattern + 16B];
    # .MEM_49 = VDEF <.MEM_48>
    MEM[(struct TrafficPattern *)this_6(D)]._nodes = nodes_8(D);
    if (nodes_8(D) <= 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {})
  {
    <bb 3>:
    # DEBUG D#62 => D#501
    # DEBUG D#63 => nodes_8(D)
    # .MEM_64 = VDEF <.MEM_49>
    TrafficPattern::_ZN14TrafficPatternC2Ei.part.24 ();

  }
  bb_4 (preds = {bb_2 }, succs = {bb_6 bb_5 })
  {
    <bb 4>:
    # .MEM_10 = VDEF <.MEM_49>
    this_6(D)->D.36118._vptr.TrafficPattern = &MEM[(void *)&_ZTV21HotSpotTrafficPattern + 16B];
    # DEBUG D#763 => &this_6(D)->_hotspots
    # DEBUG this => D#763
    # DEBUG __x => hotspots_12(D)
    # DEBUG D#368 => &MEM[(const struct vector *)hotspots_12(D)].D.34940
    # DEBUG this => D#368
    # DEBUG __a => NULL
    # VUSE <.MEM_10>
    _65 = MEM[(int * *)hotspots_12(D)];
    # DEBUG D#99 => hotspots_12(D)
    # VUSE <.MEM_10>
    _66 = MEM[(int * *)hotspots_12(D) + 8B];
    # DEBUG D#99 => hotspots_12(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    _67 = (long int) _66;
    _68 = (long int) _65;
    _69 = _67 - _68;
    _70 = _69 /[ex] 4;
    _71 = (size_type) _70;
    # DEBUG D#370 => &D#763->D.34940
    # DEBUG this => D#370
    # DEBUG __n => NULL
    # DEBUG __a => NULL
    # DEBUG D#367 => &D#370->_M_impl
    # DEBUG this => D#367
    # DEBUG __a => NULL
    # DEBUG this => D#367
    # DEBUG __a => NULL
    # DEBUG this => D#367
    # DEBUG D.46559 => NULL
    # .MEM_121 = VDEF <.MEM_10>
    MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_start = 0B;
    # .MEM_122 = VDEF <.MEM_121>
    MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_finish = 0B;
    # .MEM_123 = VDEF <.MEM_122>
    MEM[(struct _Vector_impl *)this_6(D) + 16B]._M_end_of_storage = 0B;
    # DEBUG this => D#370
    # DEBUG __n => NULL
    # DEBUG D#346 => D#370
    # DEBUG __n => _71
    # DEBUG this => D#346
    # DEBUG D#345 => D#346
    if (_71 != 0)
      goto <bb 6>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_10 })
  {
    <bb 5>:
    pretmp_38 = (long unsigned int) _69;
    goto <bb 10>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#344 => &D#345->_M_impl
    # DEBUG D#343 => D#344
    # DEBUG __n => _71
    # DEBUG __a => D#343
    # DEBUG D#342 => D#343
    # DEBUG D#340 => D#342
    # DEBUG D#341 => 0B
    # DEBUG __n => _71
    # DEBUG this => D#340
    # DEBUG D.53749 => D#341
    # DEBUG D#339 => D#340
    # DEBUG D#338 => D#339
    # DEBUG this => D#338
    if (_71 > 4611686018427387903)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_54 })
  {
    <bb 7>:
    # .MEM_125 = VDEF <.MEM_123>
    std::__throw_bad_alloc ();

  }
  bb_8 (preds = {bb_6 }, succs = {bb_10 bb_9 })
  {
    <bb 8>:
    _13 = (long unsigned int) _69;
    # .MEM_124 = VDEF <.MEM_123>
    _84 = operator new (_13);
    goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_55 })
  {
  <L17>:
    goto <bb 55> (<L15>);

  }
  bb_10 (preds = {bb_5 bb_8 }, succs = {bb_12 bb_11 })
  {
    <bb 10>:
    # iftmp.79_85 = PHI <0B(5), _84(8)>
    # .MEM_21 = PHI <.MEM_123(5), .MEM_124(8)>
    # prephitmp_51 = PHI <pretmp_38(5), _13(8)>
    # .MEM_127 = VDEF <.MEM_21>
    MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start = iftmp.79_85;
    # .MEM_128 = VDEF <.MEM_127>
    MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_finish = iftmp.79_85;
    _74 = iftmp.79_85 + prephitmp_51;
    # .MEM_129 = VDEF <.MEM_128>
    MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_end_of_storage = _74;
    # DEBUG D#369 => &D#763->D.34940
    # DEBUG this => D#369
    # VUSE <.MEM_129>
    _75 = MEM[(int * *)hotspots_12(D) + 8B];
    # DEBUG D#114 => hotspots_12(D)
    # DEBUG this => D#114
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # VUSE <.MEM_129>
    _76 = MEM[(int * *)hotspots_12(D)];
    # DEBUG D#115 => hotspots_12(D)
    # DEBUG this => D#115
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG __first => _76
    # DEBUG __last => _75
    # DEBUG __result => NULL
    # DEBUG D.53713 => D#323
    # DEBUG __first => _76
    # DEBUG __last => _75
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => _76
    # DEBUG __last => _75
    # DEBUG __result => NULL
    # DEBUG __first => _76
    # DEBUG __last => _75
    # DEBUG __result => NULL
    # DEBUG __it => _75
    # DEBUG __it$_M_current => _75
    # DEBUG __it => _76
    # DEBUG __it$_M_current => _76
    # DEBUG __first => _76
    # DEBUG __last => _75
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => _75
    # DEBUG __it => _75
    # DEBUG this => NULL
    # DEBUG __it => _76
    # DEBUG __it => _76
    # DEBUG this => NULL
    # DEBUG __first => _76
    # DEBUG __last => _75
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => _76
    # DEBUG __last => _75
    # DEBUG __result => NULL
    __last.81_77 = (long int) _75;
    __first.82_78 = (long int) _76;
    _79 = __last.81_77 - __first.82_78;
    _Num_80 = _79 /[ex] 4;
    # DEBUG _Num => _Num_80
    if (_Num_80 != 0)
      goto <bb 12>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_13 })
  {
    <bb 11>:
    pretmp_52 = (long unsigned int) _79;
    goto <bb 13>;

  }
  bb_12 (preds = {bb_10 }, succs = {bb_13 })
  {
    <bb 12>:
    _81 = (long unsigned int) _79;
    # .MEM_130 = VDEF <.MEM_129>
    __builtin_memmove (iftmp.79_85, _76, _81);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_15 bb_14 })
  {
    <bb 13>:
    # .MEM_117 = PHI <.MEM_129(11), .MEM_130(12)>
    # prephitmp_53 = PHI <pretmp_52(11), _81(12)>
    _83 = iftmp.79_85 + prephitmp_53;
    # .MEM_131 = VDEF <.MEM_117>
    MEM[(struct vector *)this_6(D) + 16B].D.34940._M_impl._M_finish = _83;
    # DEBUG D#764 => &this_6(D)->_rates
    # DEBUG this => D#764
    # DEBUG __x => rates_15(D)
    # DEBUG D#368 => &MEM[(const struct vector *)rates_15(D)].D.34940
    # DEBUG this => D#368
    # DEBUG __a => NULL
    # VUSE <.MEM_131>
    _86 = MEM[(int * *)rates_15(D)];
    # DEBUG D#99 => rates_15(D)
    # VUSE <.MEM_131>
    _87 = MEM[(int * *)rates_15(D) + 8B];
    # DEBUG D#99 => rates_15(D)
    # DEBUG this => D#99
    # DEBUG this => D#99
    _88 = (long int) _87;
    _89 = (long int) _86;
    _90 = _88 - _89;
    _91 = _90 /[ex] 4;
    _92 = (size_type) _91;
    # DEBUG D#370 => &D#764->D.34940
    # DEBUG this => D#370
    # DEBUG __n => NULL
    # DEBUG __a => NULL
    # DEBUG D#367 => &D#370->_M_impl
    # DEBUG this => D#367
    # DEBUG __a => NULL
    # DEBUG this => D#367
    # DEBUG __a => NULL
    # DEBUG this => D#367
    # DEBUG D.46559 => NULL
    # .MEM_132 = VDEF <.MEM_131>
    MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_start = 0B;
    # .MEM_133 = VDEF <.MEM_132>
    MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_finish = 0B;
    # .MEM_134 = VDEF <.MEM_133>
    MEM[(struct _Vector_impl *)this_6(D) + 40B]._M_end_of_storage = 0B;
    # DEBUG this => D#370
    # DEBUG __n => NULL
    # DEBUG D#346 => D#370
    # DEBUG __n => _92
    # DEBUG this => D#346
    # DEBUG D#345 => D#346
    if (_92 != 0)
      goto <bb 15>;
    else
      goto <bb 14>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_20 })
  {
    <bb 14>:
    pretmp_58 = (long unsigned int) _90;
    goto <bb 20>;

  }
  bb_15 (preds = {bb_13 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # DEBUG D#344 => &D#345->_M_impl
    # DEBUG D#343 => D#344
    # DEBUG __n => _92
    # DEBUG __a => D#343
    # DEBUG D#342 => D#343
    # DEBUG D#340 => D#342
    # DEBUG D#341 => 0B
    # DEBUG __n => _92
    # DEBUG this => D#340
    # DEBUG D.53799 => D#341
    # DEBUG D#339 => D#340
    # DEBUG D#338 => D#339
    # DEBUG this => D#338
    if (_92 > 4611686018427387903)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_49 })
  {
    <bb 16>:
    # .MEM_136 = VDEF <.MEM_134>
    std::__throw_bad_alloc ();

  }
  bb_17 (preds = {bb_15 }, succs = {bb_19 bb_18 })
  {
    <bb 17>:
    _16 = (long unsigned int) _90;
    # .MEM_135 = VDEF <.MEM_134>
    _105 = operator new (_16);
    goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
  <L19>:
    goto <bb 50> (<L14>);

  }
  bb_19 (preds = {bb_17 }, succs = {bb_20 })
  {
    <bb 19>:
    # VUSE <.MEM_135>
    pretmp_54 = MEM[(int * *)this_6(D) + 24B];
    # VUSE <.MEM_135>
    pretmp_60 = MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start;

  }
  bb_20 (preds = {bb_14 bb_19 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # iftmp.79_106 = PHI <0B(14), _105(19)>
    # .MEM_118 = PHI <.MEM_134(14), .MEM_135(19)>
    # prephitmp_57 = PHI <_83(14), pretmp_54(19)>
    # prephitmp_59 = PHI <pretmp_58(14), _16(19)>
    # prephitmp_62 = PHI <iftmp.79_85(14), pretmp_60(19)>
    # .MEM_138 = VDEF <.MEM_118>
    MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_start = iftmp.79_106;
    # .MEM_139 = VDEF <.MEM_138>
    MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_finish = iftmp.79_106;
    _95 = iftmp.79_106 + prephitmp_59;
    # .MEM_140 = VDEF <.MEM_139>
    MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_end_of_storage = _95;
    # DEBUG D#369 => &D#764->D.34940
    # DEBUG this => D#369
    # VUSE <.MEM_140>
    _96 = MEM[(int * *)rates_15(D) + 8B];
    # DEBUG D#114 => rates_15(D)
    # DEBUG this => D#114
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # VUSE <.MEM_140>
    _97 = MEM[(int * *)rates_15(D)];
    # DEBUG D#115 => rates_15(D)
    # DEBUG this => D#115
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG __first => _97
    # DEBUG __last => _96
    # DEBUG __result => NULL
    # DEBUG D.53763 => D#323
    # DEBUG __first => _97
    # DEBUG __last => _96
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => _97
    # DEBUG __last => _96
    # DEBUG __result => NULL
    # DEBUG __first => _97
    # DEBUG __last => _96
    # DEBUG __result => NULL
    # DEBUG __it => _96
    # DEBUG __it$_M_current => _96
    # DEBUG __it => _97
    # DEBUG __it$_M_current => _97
    # DEBUG __first => _97
    # DEBUG __last => _96
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => _96
    # DEBUG __it => _96
    # DEBUG this => NULL
    # DEBUG __it => _97
    # DEBUG __it => _97
    # DEBUG this => NULL
    # DEBUG __first => _97
    # DEBUG __last => _96
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => _97
    # DEBUG __last => _96
    # DEBUG __result => NULL
    __last.81_98 = (long int) _96;
    __first.82_99 = (long int) _97;
    _100 = __last.81_98 - __first.82_99;
    _Num_101 = _100 /[ex] 4;
    # DEBUG _Num => _Num_101
    if (_Num_101 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_11 = (long unsigned int) _100;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _102 = (long unsigned int) _100;
    # .MEM_141 = VDEF <.MEM_140>
    __builtin_memmove (iftmp.79_106, _97, _102);

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # .MEM_119 = PHI <.MEM_140(21), .MEM_141(22)>
    # prephitmp_1 = PHI <pretmp_11(21), _102(22)>
    _104 = iftmp.79_106 + prephitmp_1;
    # .MEM_142 = VDEF <.MEM_119>
    MEM[(struct vector *)this_6(D) + 40B].D.34940._M_impl._M_finish = _104;
    # .MEM_17 = VDEF <.MEM_142>
    this_6(D)->_max_val = -1;
    # DEBUG D#492 => &this_6(D)->_hotspots
    # DEBUG this => D#492
    # DEBUG D#114 => D#492
    # DEBUG this => D#114
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG D#115 => D#492
    # DEBUG this => D#115
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG __lhs => NULL
    # DEBUG __rhs => NULL
    # DEBUG this => NULL
    # DEBUG this => NULL
    if (prephitmp_57 == prephitmp_62)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {})
  {
    <bb 24>:
    # .MEM_33 = VDEF <.MEM_17>
    __assert_fail ("!_hotspots.empty()", "traffic.cpp", 494, &__PRETTY_FUNCTION__);

  }
  bb_25 (preds = {bb_23 }, succs = {bb_27 bb_26 })
  {
    <bb 25>:
    # DEBUG D#493 => &this_6(D)->_hotspots
    # DEBUG D#99 => D#493
    # DEBUG D#99 => D#493
    # DEBUG this => D#99
    # DEBUG this => D#99
    _39 = (long int) prephitmp_57;
    _40 = (long int) prephitmp_62;
    _41 = _39 - _40;
    _42 = _41 /[ex] 4;
    _43 = (size_type) _42;
    # DEBUG size => NULL
    # DEBUG D#494 => &this_6(D)->_rates
    # DEBUG this => D#494
    # DEBUG D#114 => D#494
    # DEBUG this => D#114
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG D#115 => D#494
    # DEBUG this => D#115
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG __lhs => NULL
    # DEBUG __rhs => NULL
    # DEBUG this => NULL
    # DEBUG this => NULL
    if (_104 == iftmp.79_106)
      goto <bb 27>;
    else
      goto <bb 26>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    # DEBUG D#495 => &this_6(D)->_rates
    # DEBUG this => D#495
    # DEBUG this => D#495
    # DEBUG D#118 => &D#495->D.34940._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#118
    # DEBUG this => NULL
    # DEBUG __n => 1
    # DEBUG this => NULL
    # DEBUG __i => NULL
    # DEBUG this => NULL
    # VUSE <.MEM_17>
    iftmp.118_20 = MEM[(int &)_104 + 18446744073709551612];

  }
  bb_27 (preds = {bb_25 bb_26 }, succs = {bb_28 bb_30 })
  {
    <bb 27>:
    # iftmp.118_2 = PHI <1(25), iftmp.118_20(26)>
    # DEBUG this => D#764
    # DEBUG __new_size => _43
    # .MEM_143 = VDEF <.MEM_17>
    __x = iftmp.118_2;
    # DEBUG __x => __x
    # DEBUG D#99 => D#764
    # DEBUG D#99 => D#764
    # DEBUG this => D#99
    # DEBUG this => D#99
    _113 = (size_type) _Num_101;
    if (_43 > _113)
      goto <bb 28>;
    else
      goto <bb 30>;

  }
  bb_28 (preds = {bb_27 }, succs = {bb_29 bb_45 })
  {
    <bb 28>:
    # DEBUG D#99 => D#764
    # DEBUG D#99 => D#764
    # DEBUG this => D#99
    # DEBUG this => D#99
    _114 = _43 - _113;
    # DEBUG this => D#764
    # DEBUG D#118 => &D#764->D.34940._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#118
    # DEBUG this => D#764
    # .MEM_145 = VDEF <.MEM_143>
    MEM[(struct __normal_iterator *)&__position] = _104;
    # DEBUG __n => _114
    # DEBUG __x => &__x
    _14 = &this_6(D)->_rates;
    # .MEM_146 = VDEF <.MEM_145>
    std::vector<int>::_M_fill_insert (_14, __position, _114, &__x);

  }
  bb_29 (preds = {bb_28 bb_30 }, succs = {bb_57 })
  {
    <bb 29>:
    # .MEM_149 = PHI <.MEM_146(28), .MEM_143(30)>

  }
  bb_57 (preds = {bb_29 }, succs = {bb_32 })
  {
    <bb 57>:
    goto <bb 32>;

  }
  bb_30 (preds = {bb_27 }, succs = {bb_31 bb_29 })
  {
    <bb 30>:
    # DEBUG D#99 => D#764
    # DEBUG D#99 => D#764
    # DEBUG this => D#99
    # DEBUG this => D#99
    if (_43 < _113)
      goto <bb 31>;
    else
      goto <bb 29>;

  }
  bb_31 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 31>:
    _115 = (long unsigned int) _41;
    _116 = iftmp.79_106 + _115;
    # DEBUG D#145 => D#764
    # DEBUG __pos => _116
    # DEBUG D#144 => D#145
    # DEBUG this => D#144
    # DEBUG D#142 => &D#144->D.34940
    # DEBUG this => D#142
    # DEBUG D#143 => D#144->D.34940._M_impl._M_finish
    # DEBUG __first => _116
    # DEBUG __last => D#143
    # DEBUG D.45839 => NULL
    # DEBUG D#140 => _116
    # DEBUG D#141 => D#143
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # .MEM_144 = VDEF <.MEM_143>
    MEM[(int * *)this_6(D) + 48B] = _116;

  }
  bb_32 (preds = {bb_57 bb_31 }, succs = {bb_33 bb_34 })
  {
    <bb 32>:
    # .MEM_19 = PHI <.MEM_149(57), .MEM_144(31)>
    # DEBUG i => 0
    if (_43 == 0)
      goto <bb 33>;
    else
      goto <bb 34>;

  }
  bb_33 (preds = {bb_32 bb_44 }, succs = {bb_56 })
  {
    <bb 33>:
    # .MEM_110 = PHI <.MEM_19(32), .MEM_28(44)>

  }
  bb_56 (preds = {bb_33 }, succs = {bb_1 })
  {
    <bb 56>:
    # VUSE <.MEM_110>
    return;

  }
  bb_34 (preds = {bb_32 }, succs = {bb_35 bb_36 })
  {
    <bb 34>:
    # DEBUG D#496 => &this_6(D)->_hotspots
    # VUSE <.MEM_19>
    _109 = MEM[(int * *)this_6(D) + 16B];
    # DEBUG D#100 => D#496
    # DEBUG __n => 0
    # DEBUG this => D#100
    # VUSE <.MEM_19>
    hotspot_154 = *_109;
    # DEBUG hotspot => hotspot_154
    if (hotspot_154 < 0)
      goto <bb 35>;
    else
      goto <bb 36>;

  }
  bb_35 (preds = {bb_34 bb_36 bb_39 bb_40 }, succs = {})
  {
    <bb 35>:
    # .MEM_37 = PHI <.MEM_19(34), .MEM_19(36), .MEM_28(39), .MEM_28(40)>
    # .MEM_31 = VDEF <.MEM_37>
    __assert_fail ("(hotspot >= 0) && (hotspot < _nodes)", "traffic.cpp", 499, &__PRETTY_FUNCTION__);

  }
  bb_36 (preds = {bb_34 }, succs = {bb_35 bb_37 })
  {
    <bb 36>:
    # VUSE <.MEM_19>
    _112 = this_6(D)->D.36118._nodes;
    if (_112 <= hotspot_154)
      goto <bb 35>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_36 }, succs = {bb_38 bb_43 })
  {
    <bb 37>:
    # DEBUG D#497 => &this_6(D)->_rates
    # VUSE <.MEM_19>
    _148 = MEM[(int * *)this_6(D) + 40B];
    # DEBUG D#100 => D#497
    # DEBUG __n => 0
    # DEBUG this => D#100
    # VUSE <.MEM_19>
    rate_18 = *_148;
    # DEBUG rate => rate_18
    if (rate_18 < 0)
      goto <bb 38>;
    else
      goto <bb 43>;

  }
  bb_38 (preds = {bb_37 bb_41 }, succs = {})
  {
    <bb 38>:
    # .MEM_36 = PHI <.MEM_19(37), .MEM_28(41)>
    # .MEM_30 = VDEF <.MEM_36>
    __assert_fail ("rate >= 0", "traffic.cpp", 501, &__PRETTY_FUNCTION__);

  }
  bb_43 (preds = {bb_37 }, succs = {bb_44 })
  {
    <bb 43>:
    # VUSE <.MEM_19>
    pretmp_120 = this_6(D)->_max_val;

  }
  bb_45 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
  <L13>:
    # DEBUG D#498 => &this_6(D)->_rates
    # DEBUG this => D#498
    # DEBUG D#167 => &D#498->D.34940
    # DEBUG this => D#167
    # DEBUG D#170 => D#498->D.34940._M_impl._M_finish
    # DEBUG D#169 => D#498->D.34940._M_impl._M_start
    # DEBUG __first => D#169
    # DEBUG __last => D#170
    # DEBUG D.45958 => NULL
    # DEBUG D#140 => D#169
    # DEBUG D#141 => D#170
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # DEBUG D#168 => &D#498->D.34940
    # DEBUG this => D#168
    # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
    # DEBUG D#165 => (long int) D#166
    # VUSE <.MEM_146>
    _47 = MEM[(struct _Vector_base *)this_6(D) + 40B]._M_impl._M_start;
    # DEBUG D#164 => (long int) _47
    # DEBUG D#163 => D#165 - D#164
    # DEBUG D#162 => D#163 /[ex] 4
    # DEBUG D#161 => (long unsigned int) D#162
    # DEBUG this => D#168
    # DEBUG __p => _47
    # DEBUG __n => D#161
    if (_47 != 0B)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_46 (preds = {bb_45 }, succs = {bb_47 })
  {
    <bb 46>:
    # DEBUG D#159 => &D#168->_M_impl
    # DEBUG D#157 => D#159
    # DEBUG D#158 => D#161
    # DEBUG __p => _47
    # DEBUG __a => D#157
    # DEBUG __n => D#158
    # DEBUG D#156 => D#158
    # DEBUG D#155 => D#157
    # DEBUG D#153 => D#155
    # DEBUG D#154 => D#156
    # DEBUG __p => _47
    # DEBUG this => D#153
    # DEBUG D.50173 => D#154
    # .MEM_50 = VDEF <.MEM_146>
    operator delete (_47);

  }
  bb_47 (preds = {bb_45 bb_46 }, succs = {bb_48 })
  {
    <bb 47>:
    # .MEM_35 = PHI <.MEM_146(45), .MEM_50(46)>
    # DEBUG D#160 => &D#168->_M_impl
    # DEBUG this => D#160
    # DEBUG this => D#160
    # DEBUG this => D#160
    # .MEM_55 = VDEF <.MEM_35>
    MEM[(struct  &)this_6(D) + 40] ={v} {CLOBBER};
    resx 3

  }
  bb_48 (preds = {bb_47 }, succs = {bb_50 })
  {
  <L20>:
    goto <bb 50> (<L14>);

  }
  bb_49 (preds = {bb_16 }, succs = {bb_50 })
  {
  <L18>:

  }
  bb_50 (preds = {bb_18 bb_48 bb_49 }, succs = {bb_51 bb_52 })
  {
    # .MEM_4 = PHI <.MEM_135(18), .MEM_55(48), .MEM_136(49)>
  <L14>:
    # DEBUG D#499 => &this_6(D)->_hotspots
    # DEBUG this => D#499
    # DEBUG D#167 => &D#499->D.34940
    # DEBUG this => D#167
    # DEBUG D#170 => D#499->D.34940._M_impl._M_finish
    # DEBUG D#169 => D#499->D.34940._M_impl._M_start
    # DEBUG __first => D#169
    # DEBUG __last => D#170
    # DEBUG D.45958 => NULL
    # DEBUG D#140 => D#169
    # DEBUG D#141 => D#170
    # DEBUG __first => D#140
    # DEBUG __last => D#141
    # DEBUG D#139 => D#141
    # DEBUG D#138 => D#140
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#139
    # DEBUG D.45823 => D#136
    # DEBUG D.45822 => D#137
    # DEBUG D#168 => &D#499->D.34940
    # DEBUG this => D#168
    # DEBUG D#166 => D#168->_M_impl._M_end_of_storage
    # DEBUG D#165 => (long int) D#166
    # VUSE <.MEM_4>
    _32 = MEM[(struct _Vector_base *)this_6(D) + 16B]._M_impl._M_start;
    # DEBUG D#164 => (long int) _32
    # DEBUG D#163 => D#165 - D#164
    # DEBUG D#162 => D#163 /[ex] 4
    # DEBUG D#161 => (long unsigned int) D#162
    # DEBUG this => D#168
    # DEBUG __p => _32
    # DEBUG __n => D#161
    if (_32 != 0B)
      goto <bb 51>;
    else
      goto <bb 52>;

  }
  bb_51 (preds = {bb_50 }, succs = {bb_52 })
  {
    <bb 51>:
    # DEBUG D#159 => &D#168->_M_impl
    # DEBUG D#157 => D#159
    # DEBUG D#158 => D#161
    # DEBUG __p => _32
    # DEBUG __a => D#157
    # DEBUG __n => D#158
    # DEBUG D#156 => D#158
    # DEBUG D#155 => D#157
    # DEBUG D#153 => D#155
    # DEBUG D#154 => D#156
    # DEBUG __p => _32
    # DEBUG this => D#153
    # DEBUG D.50188 => D#154
    # .MEM_56 = VDEF <.MEM_4>
    operator delete (_32);

  }
  bb_52 (preds = {bb_50 bb_51 }, succs = {bb_53 })
  {
    <bb 52>:
    # .MEM_34 = PHI <.MEM_4(50), .MEM_56(51)>
    # DEBUG D#160 => &D#168->_M_impl
    # DEBUG this => D#160
    # DEBUG this => D#160
    # DEBUG this => D#160
    # .MEM_61 = VDEF <.MEM_34>
    MEM[(struct  &)this_6(D) + 16] ={v} {CLOBBER};
    resx 2

  }
  bb_53 (preds = {bb_52 }, succs = {bb_55 })
  {
  <L21>:
    goto <bb 55> (<L15>);

  }
  bb_54 (preds = {bb_7 }, succs = {bb_55 })
  {
  <L16>:

  }
  bb_55 (preds = {bb_9 bb_53 bb_54 }, succs = {})
  {
    # .MEM_5 = PHI <.MEM_124(9), .MEM_61(53), .MEM_125(54)>
  <L15>:
    # DEBUG D#500 => &this_6(D)->D.36118
    # DEBUG this => D#500
    # .MEM_63 = VDEF <.MEM_5>
    MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
    resx 1

  }
  loop_1 (header = 44, latch = 42, niter = , upper_bound = 4611686018427387903)
  {
    bb_39 (preds = {bb_44 }, succs = {bb_35 bb_40 })
    {
      <bb 39>:
      # DEBUG D#496 => &this_6(D)->_hotspots
      # DEBUG D#100 => D#496
      # DEBUG __n => i_29
      # DEBUG this => D#100
      _44 = i_29 * 4;
      _45 = _109 + _44;
      # VUSE <.MEM_28>
      hotspot_22 = *_45;
      # DEBUG hotspot => hotspot_22
      if (hotspot_22 < 0)
        goto <bb 35>;
      else
        goto <bb 40>;

    }
    bb_40 (preds = {bb_39 }, succs = {bb_35 bb_41 })
    {
      <bb 40>:
      if (hotspot_22 >= _112)
        goto <bb 35>;
      else
        goto <bb 41>;

    }
    bb_41 (preds = {bb_40 }, succs = {bb_38 bb_42 })
    {
      <bb 41>:
      # DEBUG D#497 => &this_6(D)->_rates
      # DEBUG D#100 => D#497
      # DEBUG __n => i_29
      # DEBUG this => D#100
      _46 = _148 + _44;
      # VUSE <.MEM_28>
      rate_25 = *_46;
      # DEBUG rate => rate_25
      if (rate_25 < 0)
        goto <bb 38>;
      else
        goto <bb 42>;

    }
    bb_42 (preds = {bb_41 }, succs = {bb_44 })
    {
      <bb 42>:
      goto <bb 44>;

    }
    bb_44 (preds = {bb_43 bb_42 }, succs = {bb_33 bb_39 })
    {
      <bb 44>:
      # i_126 = PHI <0(43), i_29(42)>
      # .MEM_167 = PHI <.MEM_19(43), .MEM_28(42)>
      # rate_166 = PHI <rate_18(43), rate_25(42)>
      # prephitmp_152 = PHI <pretmp_120(43), _27(42)>
      # DEBUG i => i_126
      # DEBUG D#496 => &this_6(D)->_hotspots
      # DEBUG __n => i_126
      # DEBUG this => D#100
      # DEBUG hotspot => hotspot_154
      # DEBUG D#497 => &this_6(D)->_rates
      # DEBUG D#100 => D#497
      # DEBUG __n => i_126
      # DEBUG this => D#100
      # DEBUG rate => rate_166
      _27 = prephitmp_152 + rate_166;
      # .MEM_28 = VDEF <.MEM_167>
      this_6(D)->_max_val = _27;
      i_29 = i_126 + 1;
      # DEBUG i => i_29
      # DEBUG i => i_29
      if (i_29 >= _43)
        goto <bb 33>;
      else
        goto <bb 39>;

    }
  }
}

Pass statistics:
----------------

HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>) (struct HotSpotTrafficPatternD.36083 * const thisD.36114, intD.9 nodesD.36115, struct vectorD.33797 & restrict hotspotsD.36116, struct vectorD.33797 & restrict ratesD.36117)
Eh tree:
   1 cleanup land:{5,<L17>},{4,<L16>},{1,<L21>}
     2 cleanup land:{7,<L19>},{6,<L18>},{2,<L20>}
       3 cleanup land:{3,<L13>}
{
  struct iteratorD.34508 __positionD.53809;
  value_typeD.34503 __xD.53804;
  intD.9 * D.53801;
  const ptrdiff_tD.2819 _NumD.53792;
  intD.9 * D.53751;
  const ptrdiff_tD.2819 _NumD.53742;
  const intD.9 rateD.39052;
  const intD.9 hotspotD.39051;
  size_tD.2853 iD.39049;
  static const charD.10 _ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040[86] = "HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>)";
  static const charD.10 _ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040[86] = "HotSpotTrafficPattern::HotSpotTrafficPattern(int, std::vector<int>, std::vector<int>)";
  long unsigned intD.14 prephitmp_1;
  intD.9 iftmp.118_2;
  long unsigned intD.14 pretmp_11;
  long unsigned intD.14 _13;
  struct vectorD.33797 * _14;
  long unsigned intD.14 _16;
  intD.9 iftmp.118_20;
  intD.9 _27;
  intD.9 * _32;
  long unsigned intD.14 pretmp_38;
  long intD.12 _39;
  long intD.12 _40;
  long intD.12 _41;
  long intD.12 _42;
  size_typeD.34516 _43;
  long unsigned intD.14 _44;
  intD.9 & _45;
  intD.9 & _46;
  intD.9 * _47;
  long unsigned intD.14 prephitmp_51;
  long unsigned intD.14 pretmp_52;
  long unsigned intD.14 prephitmp_53;
  intD.9 * const pretmp_54;
  intD.9 * const prephitmp_57;
  long unsigned intD.14 pretmp_58;
  long unsigned intD.14 prephitmp_59;
  intD.9 * const pretmp_60;
  intD.9 * const prephitmp_62;
  intD.9 * const _65;
  intD.9 * const _66;
  long intD.12 _67;
  long intD.12 _68;
  long intD.12 _69;
  long intD.12 _70;
  size_typeD.34516 _71;
  intD.9 * _74;
  intD.9 * const _75;
  intD.9 * const _76;
  long intD.12 __last.81_77;
  long intD.12 __first.82_78;
  long intD.12 _79;
  long unsigned intD.14 _81;
  intD.9 * _83;
  intD.9 * _84;
  intD.9 * iftmp.79_85;
  intD.9 * const _86;
  intD.9 * const _87;
  long intD.12 _88;
  long intD.12 _89;
  long intD.12 _90;
  long intD.12 _91;
  size_typeD.34516 _92;
  intD.9 * _95;
  intD.9 * const _96;
  intD.9 * const _97;
  long intD.12 __last.81_98;
  long intD.12 __first.82_99;
  long intD.12 _100;
  long unsigned intD.14 _102;
  intD.9 * _104;
  intD.9 * _105;
  intD.9 * iftmp.79_106;
  intD.9 * _109;
  intD.9 _112;
  size_typeD.34516 _113;
  long unsigned intD.14 _114;
  long unsigned intD.14 _115;
  intD.9 * _116;
  intD.9 pretmp_120;
  intD.9 * _148;
  intD.9 prephitmp_152;

;;   basic block 2, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#501ptD.0 => &this_6(D)->D.36118
  # DEBUG thisD.50133 => D#501ptD.0
  # DEBUG nodesD.50134 => nodes_8(D)
  # .MEM_48 = VDEF <.MEM_7(D)>
  MEM[(struct TrafficPatternD.33853 *)this_6(D)]._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_49 = VDEF <.MEM_48>
  MEM[(struct TrafficPatternD.33853 *)this_6(D)]._nodesD.33855 = nodes_8(D);
  if (nodes_8(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#501ptD.0
  # DEBUG D#63ptD.0 => nodes_8(D)
  # .MEM_64 = VDEF <.MEM_49>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_10 = VDEF <.MEM_49>
  this_6(D)->D.36118._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV21HotSpotTrafficPatternD.36123 + 16B];
  # DEBUG D#763ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG thisD.53702 => D#763ptD.0
  # DEBUG __xD.53703 => hotspots_12(D)
  # DEBUG D#368ptD.0 => &MEM[(const struct vectorD.33797 *)hotspots_12(D)].D.34940
  # DEBUG thisD.48189 => D#368ptD.0
  # DEBUG __aD.48187 => NULL
  # VUSE <.MEM_10>
  # PT = nonlocal escaped 
  _65 = MEM[(intD.9 * *)hotspots_12(D) clique 1 base 1];
  # DEBUG D#99ptD.0 => hotspots_12(D)
  # VUSE <.MEM_10>
  # PT = nonlocal escaped 
  _66 = MEM[(intD.9 * *)hotspots_12(D) + 8B clique 1 base 1];
  # DEBUG D#99ptD.0 => hotspots_12(D)
  # DEBUG thisD.53704 => D#99ptD.0
  # DEBUG thisD.53705 => D#99ptD.0
  _67 = (long intD.12) _66;
  _68 = (long intD.12) _65;
  _69 = _67 - _68;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _70 = _69 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _71 = (size_typeD.34516) _70;
  # DEBUG D#370ptD.0 => &D#763ptD.0->D.34940
  # DEBUG thisD.53708 => D#370ptD.0
  # DEBUG __nD.53707 => NULL
  # DEBUG __aD.53706 => NULL
  # DEBUG D#367ptD.0 => &D#370ptD.0->_M_implD.34431
  # DEBUG thisD.53710 => D#367ptD.0
  # DEBUG __aD.53709 => NULL
  # DEBUG thisD.46561 => D#367ptD.0
  # DEBUG __aD.46562 => NULL
  # DEBUG thisD.46558 => D#367ptD.0
  # DEBUG D.46559 => NULL
  # .MEM_121 = VDEF <.MEM_10>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 16B]._M_startD.34433 = 0B;
  # .MEM_122 = VDEF <.MEM_121>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 16B]._M_finishD.34434 = 0B;
  # .MEM_123 = VDEF <.MEM_122>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 16B]._M_end_of_storageD.34435 = 0B;
  # DEBUG thisD.53712 => D#370ptD.0
  # DEBUG __nD.53711 => NULL
  # DEBUG D#346ptD.0 => D#370ptD.0
  # DEBUG __nD.53743 => _71
  # DEBUG thisD.53744 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (_71 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 24, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_38 = (long unsigned intD.14) _69;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.53747 => _71
  # DEBUG __aD.53746 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.53750 => _71
  # DEBUG thisD.53748 => D#340ptD.0
  # DEBUG D.53749 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  if (_71 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 4] # .MEM_125 = VDEF <.MEM_123>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZSt17__throw_bad_allocvD.3957 ();
;;    succ:       54 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _13 = (long unsigned intD.14) _69;
  [LP 5] # .MEM_124 = VDEF <.MEM_123>
  # PT = { D.53826 } (escaped heap)
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _84 = _ZnwmD.2764 (_13);
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 (EH,EXECUTABLE)
<L17>: [LP 5]
  goto <bb 55> (<L15>);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.53826 } (escaped heap)
  # iftmp.79_85 = PHI <0B(5), _84(8)>
  # .MEM_21 = PHI <.MEM_123(5), .MEM_124(8)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_51 = PHI <pretmp_38(5), _13(8)>
  # .MEM_127 = VDEF <.MEM_21>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_startD.34433 = iftmp.79_85;
  # .MEM_128 = VDEF <.MEM_127>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_finishD.34434 = iftmp.79_85;
  # PT = null { D.53826 } (escaped heap)
  _74 = iftmp.79_85 + prephitmp_51;
  # .MEM_129 = VDEF <.MEM_128>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_end_of_storageD.34435 = _74;
  # DEBUG D#369ptD.0 => &D#763ptD.0->D.34940
  # DEBUG thisD.48172 => D#369ptD.0
  # VUSE <.MEM_129>
  # PT = nonlocal escaped 
  _75 = MEM[(intD.9 * *)hotspots_12(D) + 8B clique 1 base 1];
  # DEBUG D#114ptD.0 => hotspots_12(D)
  # DEBUG thisD.48170 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # VUSE <.MEM_129>
  # PT = nonlocal escaped 
  _76 = MEM[(intD.9 * *)hotspots_12(D) clique 1 base 1];
  # DEBUG D#115ptD.0 => hotspots_12(D)
  # DEBUG thisD.48167 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __firstD.48193 => _76
  # DEBUG __lastD.48194 => _75
  # DEBUG __resultD.53714 => NULL
  # DEBUG D.53713 => D#323ptD.0
  # DEBUG __firstD.48164 => _76
  # DEBUG __lastD.48165 => _75
  # DEBUG __resultD.53717 => NULL
  # DEBUG __assignableD.53722 => 1
  # DEBUG __firstD.47652 => _76
  # DEBUG __lastD.47653 => _75
  # DEBUG __resultD.53723 => NULL
  # DEBUG __firstD.47582 => _76
  # DEBUG __lastD.47581 => _75
  # DEBUG __resultD.53726 => NULL
  # DEBUG __itD.47553 => _75
  # DEBUG __it$_M_currentD.47523 => _75
  # DEBUG __itD.47555 => _76
  # DEBUG __it$_M_currentD.47519 => _76
  # DEBUG __firstD.47528 => _76
  # DEBUG __lastD.47529 => _75
  # DEBUG __resultD.53729 => NULL
  # DEBUG __itD.47494 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.47514 => _75
  # DEBUG __itD.47492 => _75
  # DEBUG thisD.46571 => NULL
  # DEBUG __itD.47516 => _76
  # DEBUG __itD.47488 => _76
  # DEBUG thisD.46571 => NULL
  # DEBUG __firstD.53734 => _76
  # DEBUG __lastD.53733 => _75
  # DEBUG __resultD.53732 => NULL
  # DEBUG __simpleD.53738 => 1
  # DEBUG __firstD.53741 => _76
  # DEBUG __lastD.53740 => _75
  # DEBUG __resultD.53739 => NULL
  __last.81_77 = (long intD.12) _75;
  __first.82_78 = (long intD.12) _76;
  _79 = __last.81_77 - __first.82_78;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_80 = _79 /[ex] 4;
  # DEBUG _NumD.53742 => _Num_80
  if (_Num_80 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;
;;    succ:       12 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 145, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_52 = (long unsigned intD.14) _79;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 92, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _81 = (long unsigned intD.14) _79;
  # .MEM_130 = VDEF <.MEM_129>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  memmoveD.995 (iftmp.79_85, _76, _81);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_117 = PHI <.MEM_129(11), .MEM_130(12)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_53 = PHI <pretmp_52(11), _81(12)>
  # PT = null { D.53826 } (escaped heap)
  _83 = iftmp.79_85 + prephitmp_53;
  # .MEM_131 = VDEF <.MEM_117>
  MEM[(struct vectorD.33797 *)this_6(D) + 16B].D.34940._M_implD.34431._M_finishD.34434 = _83;
  # DEBUG D#764ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG thisD.53752 => D#764ptD.0
  # DEBUG __xD.53753 => rates_15(D)
  # DEBUG D#368ptD.0 => &MEM[(const struct vectorD.33797 *)rates_15(D)].D.34940
  # DEBUG thisD.48189 => D#368ptD.0
  # DEBUG __aD.48187 => NULL
  # VUSE <.MEM_131>
  # PT = nonlocal escaped 
  _86 = MEM[(intD.9 * *)rates_15(D) clique 1 base 2];
  # DEBUG D#99ptD.0 => rates_15(D)
  # VUSE <.MEM_131>
  # PT = nonlocal escaped 
  _87 = MEM[(intD.9 * *)rates_15(D) + 8B clique 1 base 2];
  # DEBUG D#99ptD.0 => rates_15(D)
  # DEBUG thisD.53754 => D#99ptD.0
  # DEBUG thisD.53755 => D#99ptD.0
  _88 = (long intD.12) _87;
  _89 = (long intD.12) _86;
  _90 = _88 - _89;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _91 = _90 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _92 = (size_typeD.34516) _91;
  # DEBUG D#370ptD.0 => &D#764ptD.0->D.34940
  # DEBUG thisD.53758 => D#370ptD.0
  # DEBUG __nD.53757 => NULL
  # DEBUG __aD.53756 => NULL
  # DEBUG D#367ptD.0 => &D#370ptD.0->_M_implD.34431
  # DEBUG thisD.53760 => D#367ptD.0
  # DEBUG __aD.53759 => NULL
  # DEBUG thisD.46561 => D#367ptD.0
  # DEBUG __aD.46562 => NULL
  # DEBUG thisD.46558 => D#367ptD.0
  # DEBUG D.46559 => NULL
  # .MEM_132 = VDEF <.MEM_131>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 40B]._M_startD.34433 = 0B;
  # .MEM_133 = VDEF <.MEM_132>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 40B]._M_finishD.34434 = 0B;
  # .MEM_134 = VDEF <.MEM_133>
  MEM[(struct _Vector_implD.34408 *)this_6(D) + 40B]._M_end_of_storageD.34435 = 0B;
  # DEBUG thisD.53762 => D#370ptD.0
  # DEBUG __nD.53761 => NULL
  # DEBUG D#346ptD.0 => D#370ptD.0
  # DEBUG __nD.53793 => _92
  # DEBUG thisD.53794 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (_92 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 24, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_58 = (long unsigned intD.14) _90;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.53797 => _92
  # DEBUG __aD.53796 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.53800 => _92
  # DEBUG thisD.53798 => D#340ptD.0
  # DEBUG D.53799 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  if (_92 > 4611686018427387903)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 6] # .MEM_136 = VDEF <.MEM_134>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZSt17__throw_bad_allocvD.3957 ();
;;    succ:       49 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _16 = (long unsigned intD.14) _90;
  [LP 7] # .MEM_135 = VDEF <.MEM_134>
  # PT = { D.53827 } (escaped heap)
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _105 = _ZnwmD.2764 (_16);
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 (EH,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 (EH,EXECUTABLE)
<L19>: [LP 7]
  goto <bb 50> (<L14>);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_135>
  pretmp_54 = MEM[(intD.9 * *)this_6(D) + 24B];
  # VUSE <.MEM_135>
  pretmp_60 = MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_startD.34433;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.53827 } (escaped heap)
  # iftmp.79_106 = PHI <0B(14), _105(19)>
  # .MEM_118 = PHI <.MEM_134(14), .MEM_135(19)>
  # PT = nonlocal escaped 
  # prephitmp_57 = PHI <_83(14), pretmp_54(19)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_59 = PHI <pretmp_58(14), _16(19)>
  # PT = nonlocal escaped 
  # prephitmp_62 = PHI <iftmp.79_85(14), pretmp_60(19)>
  # .MEM_138 = VDEF <.MEM_118>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 40B]._M_implD.34431._M_startD.34433 = iftmp.79_106;
  # .MEM_139 = VDEF <.MEM_138>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 40B]._M_implD.34431._M_finishD.34434 = iftmp.79_106;
  # PT = null { D.53827 } (escaped heap)
  _95 = iftmp.79_106 + prephitmp_59;
  # .MEM_140 = VDEF <.MEM_139>
  MEM[(struct _Vector_baseD.34198 *)this_6(D) + 40B]._M_implD.34431._M_end_of_storageD.34435 = _95;
  # DEBUG D#369ptD.0 => &D#764ptD.0->D.34940
  # DEBUG thisD.48172 => D#369ptD.0
  # VUSE <.MEM_140>
  # PT = nonlocal escaped 
  _96 = MEM[(intD.9 * *)rates_15(D) + 8B clique 1 base 2];
  # DEBUG D#114ptD.0 => rates_15(D)
  # DEBUG thisD.48170 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # VUSE <.MEM_140>
  # PT = nonlocal escaped 
  _97 = MEM[(intD.9 * *)rates_15(D) clique 1 base 2];
  # DEBUG D#115ptD.0 => rates_15(D)
  # DEBUG thisD.48167 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __firstD.48193 => _97
  # DEBUG __lastD.48194 => _96
  # DEBUG __resultD.53764 => NULL
  # DEBUG D.53763 => D#323ptD.0
  # DEBUG __firstD.48164 => _97
  # DEBUG __lastD.48165 => _96
  # DEBUG __resultD.53767 => NULL
  # DEBUG __assignableD.53772 => 1
  # DEBUG __firstD.47652 => _97
  # DEBUG __lastD.47653 => _96
  # DEBUG __resultD.53773 => NULL
  # DEBUG __firstD.47582 => _97
  # DEBUG __lastD.47581 => _96
  # DEBUG __resultD.53776 => NULL
  # DEBUG __itD.47553 => _96
  # DEBUG __it$_M_currentD.47523 => _96
  # DEBUG __itD.47555 => _97
  # DEBUG __it$_M_currentD.47519 => _97
  # DEBUG __firstD.47528 => _97
  # DEBUG __lastD.47529 => _96
  # DEBUG __resultD.53779 => NULL
  # DEBUG __itD.47494 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.47514 => _96
  # DEBUG __itD.47492 => _96
  # DEBUG thisD.46571 => NULL
  # DEBUG __itD.47516 => _97
  # DEBUG __itD.47488 => _97
  # DEBUG thisD.46571 => NULL
  # DEBUG __firstD.53784 => _97
  # DEBUG __lastD.53783 => _96
  # DEBUG __resultD.53782 => NULL
  # DEBUG __simpleD.53788 => 1
  # DEBUG __firstD.53791 => _97
  # DEBUG __lastD.53790 => _96
  # DEBUG __resultD.53789 => NULL
  __last.81_98 = (long intD.12) _96;
  __first.82_99 = (long intD.12) _97;
  _100 = __last.81_98 - __first.82_99;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_101 = _100 /[ex] 4;
  # DEBUG _NumD.53792 => _Num_101
  if (_Num_101 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 145, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_11 = (long unsigned intD.14) _100;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 92, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _102 = (long unsigned intD.14) _100;
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  memmoveD.995 (iftmp.79_106, _97, _102);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_119 = PHI <.MEM_140(21), .MEM_141(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_1 = PHI <pretmp_11(21), _102(22)>
  # PT = null { D.53827 } (escaped heap)
  _104 = iftmp.79_106 + prephitmp_1;
  # .MEM_142 = VDEF <.MEM_119>
  MEM[(struct vectorD.33797 *)this_6(D) + 40B].D.34940._M_implD.34431._M_finishD.34434 = _104;
  # .MEM_17 = VDEF <.MEM_142>
  this_6(D)->_max_valD.36087 = -1;
  # DEBUG D#492ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG thisD.50135 => D#492ptD.0
  # DEBUG D#114ptD.0 => D#492ptD.0
  # DEBUG thisD.45798 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # DEBUG D#115ptD.0 => D#492ptD.0
  # DEBUG thisD.45794 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __lhsD.50137 => NULL
  # DEBUG __rhsD.50136 => NULL
  # DEBUG thisD.45787 => NULL
  # DEBUG thisD.45785 => NULL
  if (prephitmp_57 == prephitmp_62)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_33 = VDEF <.MEM_17>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  __assert_failD.29068 ("!_hotspots.empty()", "traffic.cpp", 494, &_ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040);
;;    succ:      

;;   basic block 25, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#493ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG D#99ptD.0 => D#493ptD.0
  # DEBUG D#99ptD.0 => D#493ptD.0
  # DEBUG thisD.50146 => D#99ptD.0
  # DEBUG thisD.50145 => D#99ptD.0
  _39 = (long intD.12) prephitmp_57;
  _40 = (long intD.12) prephitmp_62;
  _41 = _39 - _40;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _42 = _41 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _43 = (size_typeD.34516) _42;
  # DEBUG sizeD.39048 => NULL
  # DEBUG D#494ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG thisD.50139 => D#494ptD.0
  # DEBUG D#114ptD.0 => D#494ptD.0
  # DEBUG thisD.45798 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # DEBUG D#115ptD.0 => D#494ptD.0
  # DEBUG thisD.45794 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __lhsD.50141 => NULL
  # DEBUG __rhsD.50140 => NULL
  # DEBUG thisD.45787 => NULL
  # DEBUG thisD.45785 => NULL
  if (_104 == iftmp.79_106)
    goto <bb 27>;
  else
    goto <bb 26>;
;;    succ:       27 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 201, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#495ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG thisD.50148 => D#495ptD.0
  # DEBUG thisD.50149 => D#495ptD.0
  # DEBUG D#118ptD.0 => &D#495ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.50151 => NULL
  # DEBUG __iD.50150 => D#118ptD.0
  # DEBUG thisD.50153 => NULL
  # DEBUG __nD.50152 => 1
  # DEBUG thisD.45635 => NULL
  # DEBUG __iD.45634 => NULL
  # DEBUG thisD.45630 => NULL
  # VUSE <.MEM_17>
  iftmp.118_20 = MEM[(intD.9 &)_104 + 18446744073709551612];
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 237, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # iftmp.118_2 = PHI <1(25), iftmp.118_20(26)>
  # DEBUG thisD.53802 => D#764ptD.0
  # DEBUG __new_sizeD.53803 => _43
  # .MEM_143 = VDEF <.MEM_17>
  __xD.53804 = iftmp.118_2;
  # DEBUG __xD.53804 => __xD.53804
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG thisD.53811 => D#99ptD.0
  # DEBUG thisD.53812 => D#99ptD.0
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _113 = (size_typeD.34516) _Num_101;
  if (_43 > _113)
    goto <bb 28>;
  else
    goto <bb 30>;
;;    succ:       28 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 49, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG thisD.50098 => D#99ptD.0
  # DEBUG thisD.50097 => D#99ptD.0
  # RANGE [1, 18446744073709551615]
  _114 = _43 - _113;
  # DEBUG thisD.50091 => D#764ptD.0
  # DEBUG D#118ptD.0 => &D#764ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.50093 => NULL
  # DEBUG __iD.50092 => D#118ptD.0
  # DEBUG thisD.53810 => D#764ptD.0
  # .MEM_145 = VDEF <.MEM_143>
  MEM[(struct __normal_iteratorD.34509 *)&__positionD.53809 clique 1 base 0] = _104;
  # DEBUG __nD.53808 => _114
  # DEBUG __xD.53807 => &__xD.53804
  # PT = nonlocal 
  _14 = &this_6(D)->_ratesD.36086;
  [LP 3] # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.34863 (_14, __positionD.53809, _114, &__xD.53804);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 (EH,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 122, maybe hot
;;    prev block 28, next block 57, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_149 = PHI <.MEM_146(28), .MEM_143(30)>
;;    succ:       57 [100.0%]  (FALLTHRU)

;;   basic block 57, loop depth 0, count 0, freq 122, maybe hot
;;    prev block 29, next block 30, flags: (NEW)
;;    pred:       29 [100.0%]  (FALLTHRU)
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 188, maybe hot
;;    prev block 57, next block 31, flags: (NEW, REACHABLE)
;;    pred:       27 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG D#99ptD.0 => D#764ptD.0
  # DEBUG thisD.50103 => D#99ptD.0
  # DEBUG thisD.50102 => D#99ptD.0
  if (_43 < _113)
    goto <bb 31>;
  else
    goto <bb 29>;
;;    succ:       31 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 114, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _115 = (long unsigned intD.14) _41;
  # PT = null { D.53827 } (escaped heap)
  _116 = iftmp.79_106 + _115;
  # DEBUG D#145ptD.0 => D#764ptD.0
  # DEBUG __posD.53806 => _116
  # DEBUG D#144ptD.0 => D#145ptD.0
  # DEBUG thisD.53805 => D#144ptD.0
  # DEBUG D#142ptD.0 => &D#144ptD.0->D.34940
  # DEBUG thisD.45847 => D#142ptD.0
  # DEBUG D#143ptD.0 => D#144ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG __firstD.45837 => _116
  # DEBUG __lastD.45838 => D#143ptD.0
  # DEBUG D.45839 => NULL
  # DEBUG D#140ptD.0 => _116
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # .MEM_144 = VDEF <.MEM_143>
  MEM[(intD.9 * *)this_6(D) + 48B] = _116;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 240, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       57 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_19 = PHI <.MEM_149(57), .MEM_144(31)>
  # DEBUG iD.39049 => 0
  if (_43 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [2.2%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [97.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 32, next block 56, flags: (NEW, REACHABLE)
;;    pred:       32 [2.2%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [2.2%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_110 = PHI <.MEM_19(32), .MEM_28(44)>
;;    succ:       56 [100.0%]  (FALLTHRU)

;;   basic block 56, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_110>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 34, loop depth 0, count 0, freq 235, maybe hot
;;    prev block 56, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [97.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#496ptD.0 => &this_6(D)->_hotspotsD.36085
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _109 = MEM[(intD.9 * *)this_6(D) + 16B];
  # DEBUG D#100ptD.0 => D#496ptD.0
  # DEBUG __nD.50156 => 0
  # DEBUG thisD.50157 => D#100ptD.0
  # VUSE <.MEM_19>
  hotspot_154 = *_109;
  # DEBUG hotspotD.39051 => hotspot_154
  if (hotspot_154 < 0)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_19(34), .MEM_19(36), .MEM_28(39), .MEM_28(40)>
  # .MEM_31 = VDEF <.MEM_37>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  __assert_failD.29068 ("(hotspot >= 0) && (hotspot < _nodes)", "traffic.cpp", 499, &_ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040);
;;    succ:      

;;   basic block 36, loop depth 0, count 0, freq 235, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_19>
  _112 = this_6(D)->D.36118._nodesD.33855;
  if (_112 <= hotspot_154)
    goto <bb 35>;
  else
    goto <bb 37>;
;;    succ:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 234, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#497ptD.0 => &this_6(D)->_ratesD.36086
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _148 = MEM[(intD.9 * *)this_6(D) + 40B];
  # DEBUG D#100ptD.0 => D#497ptD.0
  # DEBUG __nD.50160 => 0
  # DEBUG thisD.50161 => D#100ptD.0
  # VUSE <.MEM_19>
  rate_18 = *_148;
  # DEBUG rateD.39052 => rate_18
  if (rate_18 < 0)
    goto <bb 38>;
  else
    goto <bb 43>;
;;    succ:       38 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_36 = PHI <.MEM_19(37), .MEM_28(41)>
  # .MEM_30 = VDEF <.MEM_36>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  __assert_failD.29068 ("rate >= 0", "traffic.cpp", 501, &_ZZN21HotSpotTrafficPatternC4EiSt6vectorIiSaIiEES2_E19__PRETTY_FUNCTION__D.39040);
;;    succ:      

;;   basic block 39, loop depth 1, count 0, freq 9540, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       44 [97.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#496ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG D#100ptD.0 => D#496ptD.0
  # DEBUG __nD.50156 => i_29
  # DEBUG thisD.50157 => D#100ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _44 = i_29 * 4;
  # PT = nonlocal escaped 
  _45 = _109 + _44;
  # VUSE <.MEM_28>
  hotspot_22 = *_45;
  # DEBUG hotspotD.39051 => hotspot_22
  if (hotspot_22 < 0)
    goto <bb 35>;
  else
    goto <bb 40>;
;;    succ:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 9536, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  if (hotspot_22 >= _112)
    goto <bb 35>;
  else
    goto <bb 41>;
;;    succ:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 9533, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#497ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG D#100ptD.0 => D#497ptD.0
  # DEBUG __nD.50160 => i_29
  # DEBUG thisD.50161 => D#100ptD.0
  # PT = nonlocal escaped 
  _46 = _148 + _44;
  # VUSE <.MEM_28>
  rate_25 = *_46;
  # DEBUG rateD.39052 => rate_25
  if (rate_25 < 0)
    goto <bb 38>;
  else
    goto <bb 42>;
;;    succ:       38 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 9529, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 44>;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 234, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       37 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_19>
  pretmp_120 = this_6(D)->_max_valD.36087;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 9763, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # i_126 = PHI <0(43), i_29(42)>
  # .MEM_167 = PHI <.MEM_19(43), .MEM_28(42)>
  # rate_166 = PHI <rate_18(43), rate_25(42)>
  # prephitmp_152 = PHI <pretmp_120(43), _27(42)>
  # DEBUG iD.39049 => i_126
  # DEBUG D#496ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG __nD.50156 => i_126
  # DEBUG thisD.50157 => D#100ptD.0
  # DEBUG hotspotD.39051 => hotspot_154
  # DEBUG D#497ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG D#100ptD.0 => D#497ptD.0
  # DEBUG __nD.50160 => i_126
  # DEBUG thisD.50161 => D#100ptD.0
  # DEBUG rateD.39052 => rate_166
  _27 = prephitmp_152 + rate_166;
  # .MEM_28 = VDEF <.MEM_167>
  this_6(D)->_max_valD.36087 = _27;
  # RANGE [0, 18446744073709551615]
  i_29 = i_126 + 1;
  # DEBUG iD.39049 => i_29
  # DEBUG iD.39049 => i_29
  if (i_29 >= _43)
    goto <bb 33>;
  else
    goto <bb 39>;
;;    succ:       33 [2.2%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [97.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       28 (EH,EXECUTABLE)
<L13>: [LP 3]
  # DEBUG D#498ptD.0 => &this_6(D)->_ratesD.36086
  # DEBUG thisD.50163 => D#498ptD.0
  # DEBUG D#167ptD.0 => &D#498ptD.0->D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D#498ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D#498ptD.0->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D#498ptD.0->D.34940
  # DEBUG thisD.50164 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  _47 = MEM[(struct _Vector_baseD.34198 *)this_6(D) + 40B]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _47
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.50167 => D#168ptD.0
  # DEBUG __pD.50166 => _47
  # DEBUG __nD.50165 => D#161ptD.0
  if (_47 != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.50171 => _47
  # DEBUG __aD.50169 => D#157ptD.0
  # DEBUG __nD.50170 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.50174 => _47
  # DEBUG thisD.50172 => D#153ptD.0
  # DEBUG D.50173 => D#154ptD.0
  # .MEM_50 = VDEF <.MEM_146>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZdlPvD.2766 (_47);
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_146(45), .MEM_50(46)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.50175 => D#160ptD.0
  # DEBUG thisD.50176 => D#160ptD.0
  # DEBUG thisD.50177 => D#160ptD.0
  # .MEM_55 = VDEF <.MEM_35>
  MEM[(struct  &)this_6(D) + 40] ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       48 (EH,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       47 (EH,EXECUTABLE)
<L20>: [LP 2]
  goto <bb 50> (<L14>);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L18>: [LP 6]
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_135(18), .MEM_55(48), .MEM_136(49)>
<L14>:
  # DEBUG D#499ptD.0 => &this_6(D)->_hotspotsD.36085
  # DEBUG thisD.50178 => D#499ptD.0
  # DEBUG D#167ptD.0 => &D#499ptD.0->D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D#499ptD.0->D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D#499ptD.0->D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D#499ptD.0->D.34940
  # DEBUG thisD.50179 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  _32 = MEM[(struct _Vector_baseD.34198 *)this_6(D) + 16B]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _32
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.50182 => D#168ptD.0
  # DEBUG __pD.50181 => _32
  # DEBUG __nD.50180 => D#161ptD.0
  if (_32 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.50186 => _32
  # DEBUG __aD.50184 => D#157ptD.0
  # DEBUG __nD.50185 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.50189 => _32
  # DEBUG thisD.50187 => D#153ptD.0
  # DEBUG D.50188 => D#154ptD.0
  # .MEM_56 = VDEF <.MEM_4>
  # USE = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  # CLB = nonlocal null { D.33889 D.36123 D.39040 D.53804 D.53826 D.53827 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_4(50), .MEM_56(51)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.50190 => D#160ptD.0
  # DEBUG thisD.50191 => D#160ptD.0
  # DEBUG thisD.50192 => D#160ptD.0
  # .MEM_61 = VDEF <.MEM_34>
  MEM[(struct  &)this_6(D) + 16] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       53 (EH,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       52 (EH,EXECUTABLE)
<L21>: [LP 1]
  goto <bb 55> (<L15>);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       7 (EH,EXECUTABLE)
<L16>: [LP 4]
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 54, next block 1, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_124(9), .MEM_61(53), .MEM_125(54)>
<L15>:
  # DEBUG D#500ptD.0 => &this_6(D)->D.36118
  # DEBUG thisD.50193 => D#500ptD.0
  # .MEM_63 = VDEF <.MEM_5>
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}



;; Function static TrafficPattern* TrafficPattern::New(const string&, int, const Configuration*) (_ZN14TrafficPattern3NewERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiPK13Configuration, funcdef_no=1746, decl_uid=33870, cgraph_uid=416, symbol_order=417)


Pass statistics:
----------------


Global statistics (BBS:542, LOOPS:3, CONDITIONS:237, STMTS:4207)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

static TrafficPattern* TrafficPattern::New(const string&, int, const Configuration*) (const struct stringD.2845 & patternD.36144, intD.9 nodesD.36145, const struct ConfigurationD.30545 * const configD.36146)
Eh tree:
   2 cleanup land:{2,<L165>}
     3 cleanup land:{170,<L302>},{169,<L301>},{168,<L300>},{143,<L268>},{142,<L267>},{141,<L266>},{60,<L178>},{59,<L177>},{58,<L176>},{57,<L175>},{56,<L174>},{55,<L173>},{54,<L172>},{53,<L171>},{52,<L170>},{3,<L303>}
       10 cleanup land:{167,<L299>},{165,<L293>},{164,<L292>},{163,<L291>},{162,<L290>},{161,<L289>},{160,<L288>},{159,<L287>},{158,<L286>},{157,<L285>},{156,<L284>},{155,<L283>},{154,<L282>},{153,<L281>},{152,<L280>},{151,<L277>},{150,<L276>},{149,<L275>},{148,<L274>},{147,<L272>},{146,<L271>},{145,<L270>},{144,<L269>},{140,<L265>},{139,<L264>},{138,<L263>},{129,<L253>},{126,<L250>},{125,<L249>},{124,<L248>},{123,<L247>},{122,<L246>},{121,<L245>},{120,<L244>},{119,<L243>},{118,<L242>},{117,<L241>},{116,<L240>},{115,<L239>},{114,<L238>},{113,<L237>},{112,<L236>},{111,<L235>},{110,<L234>},{109,<L233>},{108,<L232>},{107,<L231>},{106,<L230>},{105,<L229>},{104,<L228>},{103,<L227>},{102,<L226>},{101,<L225>},{100,<L224>},{99,<L223>},{98,<L222>},{94,<L218>},{93,<L217>},{92,<L216>},{91,<L215>},{90,<L214>},{89,<L213>},{88,<L212>},{87,<L211>},{86,<L210>},{85,<L209>},{84,<L208>},{83,<L207>},{82,<L206>},{81,<L205>},{80,<L204>},{78,<L202>},{74,<L196>},{73,<L195>},{69,<L189>},{68,<L188>},{67,<L187>},{66,<L186>},{62,<L180>},{61,<L179>},{7,<L304>}
         80 cleanup land:{130,<L254>},{43,<L298>}
           81 cleanup land:{166,<L294>},{135,<L260>},{134,<L259>},{133,<L258>},{131,<L255>},{44,<L297>}
             84 cleanup land:{136,<L261>},{46,<L296>}
               85 cleanup land:{137,<L262>},{47,<L295>}
                 86 cleanup land:{48,<L157>}
             82 cleanup land:{132,<L256>},{45,<L257>}
         77 cleanup land:{128,<L252>},{127,<L251>},{42,<L305>}
         73 cleanup land:{39,<L153>}
         71 cleanup land:{38,<L152>}
         69 cleanup land:{37,<L151>}
         66 cleanup land:{36,<L149>}
         62 cleanup land:{34,<L147>}
         58 cleanup land:{32,<L145>}
         55 cleanup land:{30,<L144>}
         52 cleanup land:{29,<L142>}
         48 cleanup land:{27,<L140>}
         45 cleanup land:{25,<L139>}
         43 cleanup land:{24,<L138>}
         41 cleanup land:{23,<L137>}
         34 cleanup land:{96,<L220>},{95,<L219>},{20,<L279>}
           35 cleanup land:{97,<L221>},{21,<L278>}
             36 cleanup land:{22,<L133>}
         31 cleanup land:{18,<L132>}
         29 cleanup land:{17,<L131>}
         26 cleanup land:{16,<L129>}
         20 cleanup land:{79,<L203>},{13,<L273>}
           21 cleanup land:{14,<L126>}
         17 cleanup land:{75,<L197>},{11,<L201>}
           99 cleanup land:{77,<L199>},{76,<L198>},{51,<L200>}
         15 cleanup land:{70,<L190>},{10,<L194>}
           98 cleanup land:{72,<L192>},{71,<L191>},{50,<L193>}
         13 cleanup land:{9,<L123>}
         11 cleanup land:{63,<L181>},{8,<L185>}
           97 cleanup land:{65,<L183>},{64,<L182>},{49,<L184>}
       8 cleanup land:{6,<L121>}
       6 cleanup land:{5,<L120>}
       4 cleanup land:{4,<L119>}
{
  struct basic_stringD.2844 * __firstD.54464;
  struct basic_stringD.2844 * __firstD.54425;
  intD.9 * D.54421;
  const intD.9 * __lastD.54412;
  const intD.9 * __firstD.54411;
  const ptrdiff_tD.2819 _NumD.54409;
  intD.9 * __resultD.54379;
  intD.9 * D.54410;
  struct __normal_iteratorD.34511 __firstD.54376;
  struct __normal_iteratorD.34511 __lastD.54377;
  struct __normal_iteratorD.34511 D.54374;
  struct __normal_iteratorD.34511 D.54373;
  intD.9 * __tmpD.54361;
  const ptrdiff_tD.2819 _NumD.54339;
  struct vectorD.33797 & D.54372;
  size_typeD.11502 __dnewD.54260;
  struct __normal_iteratorD.36469 D.54256;
  intD.9 * D.54233;
  const ptrdiff_tD.2819 _NumD.54224;
  size_typeD.11502 __dnewD.54158;
  char_typeD.16738 D.54138;
  charD.10 __cD.54137;
  char_typeD.19817 D.54135;
  struct basic_ostreamD.3833 & D.54129;
  size_typeD.11502 __dnewD.54101;
  size_typeD.11502 __dnewD.54011;
  const charD.10 * __startD.53992;
  size_typeD.11502 __dnewD.53949;
  const charD.10 * __startD.53930;
  size_typeD.11502 __dnewD.53887;
  const charD.10 * __startD.53868;
  size_tD.2853 iD.37122;
  struct vectorD.33797 ratesD.37123;
  struct vectorD.33797 hotspotsD.37120;
  intD.9 xrD.37083;
  intD.9 nD.37079;
  intD.9 kD.37075;
  boolD.2757 missing_paramsD.37074;
  intD.9 nD.37051;
  intD.9 kD.37047;
  boolD.2757 missing_paramsD.37046;
  struct vectorD.33797 excludesD.37002;
  intD.9 perm_seedD.36965;
  struct TrafficPatternD.33853 * resultD.36903;
  struct vectorD.33792 paramsD.36157;
  struct stringD.2845 param_strD.36151;
  struct stringD.2845 pattern_nameD.36150;
  struct vectorD.33797 D.37136;
  struct vectorD.33797 D.37135;
  struct vectorD.33797 D.37124;
  const struct value_typeD.36463 D.37119;
  const struct stringD.2845 D.37086;
  const struct stringD.2845 D.37082;
  const struct stringD.2845 D.37078;
  const struct stringD.2845 D.37054;
  const struct stringD.2845 D.37050;
  struct vectorD.33797 D.37014;
  const struct stringD.2845 D.36972;
  const struct stringD.2845 D.36968;
  struct stringD.2845 D.36969;
  struct basic_stringD.2844 D.36156;
  struct basic_stringD.2844 D.36155;
  struct basic_stringD.2844 D.36153;
  long unsigned intD.14 prephitmp_3;
  boolD.2757 _4;
  long unsigned intD.14 pretmp_5;
  intD.9 * const prephitmp_7;
  boolD.2757 _9;
  intD.9 * const pretmp_10;
  long intD.12 pretmp_13;
  intD.9 * prephitmp_17;
  long intD.12 prephitmp_25;
  size_typeD.11502 _40;
  boolD.2757 _41;
  charD.10 * const _43;
  long unsigned intD.14 _44;
  long intD.12 pretmp_45;
  charD.10 * const _46;
  charD.10 * const _48;
  long unsigned intD.14 _51;
  long unsigned intD.14 _52;
  boolD.2757 _53;
  charD.10 * const _54;
  intD.9 _55;
  charD.10 * const _57;
  charD.10 * const _59;
  intD.9 _66;
  intD.9 _68;
  intD.9 _76;
  intD.9 _81;
  struct basic_stringD.2844 * const _83;
  intD.9 * _84;
  charD.10 * const _89;
  charD.10 * const _91;
  long intD.12 _93;
  struct basic_ostreamD.3833 & _96;
  intD.9 * const _97;
  charD.10 * const _101;
  intD.9 * _103;
  charD.10 * const _104;
  charD.10 * const _107;
  const size_typeD.11502 _108;
  charD.10 * const _109;
  intD.9 _111;
  intD.9 _118;
  long unsigned intD.14 _121;
  intD.9 _125;
  intD.9 * _127;
  intD.9 * _130;
  charD.10 * const _132;
  intD.9 _136;
  intD.9 _140;
  intD.9 _142;
  charD.10 * const _150;
  charD.10 * const _152;
  charD.10 * const _154;
  struct basic_ostreamD.3833 & _155;
  charD.10 * const _156;
  long intD.12 _157;
  charD.10 * const _161;
  charD.10 * const _163;
  charD.10 * const _165;
  intD.9 _168;
  const size_typeD.11502 _170;
  intD.9 _172;
  intD.9 _173;
  intD.9 _174;
  charD.10 * const _178;
  charD.10 * const _180;
  charD.10 * const _182;
  struct basic_stringD.2844 * const _183;
  charD.10 * const _187;
  charD.10 * const _189;
  charD.10 * const _191;
  size_typeD.11502 _192;
  charD.10 * const _196;
  charD.10 * const _198;
  charD.10 * const _200;
  intD.9 _204;
  intD.9 _208;
  intD.9 _212;
  const size_typeD.11502 _214;
  intD.9 _215;
  struct basic_stringD.2844 * const _217;
  long intD.12 _218;
  charD.10 * const _223;
  intD.9 * _225;
  long intD.12 _226;
  long intD.12 _229;
  intD.9 _230;
  long intD.12 _234;
  long intD.12 _239;
  intD.9 _240;
  intD.9 * _243;
  long intD.12 _245;
  intD.9 * _253;
  intD.9 * _255;
  intD.9 * _256;
  intD.9 * _260;
  intD.9 * _262;
  intD.9 * _264;
  charD.10 * const _265;
  const size_typeD.11502 _268;
  charD.10 * const _269;
  struct basic_stringD.2844 * _271;
  charD.10 * const _272;
  charD.10 * const _273;
  charD.10 * const _278;
  struct basic_stringD.2844 * _280;
  struct basic_stringD.2844 * const _282;
  struct basic_stringD.2844 * const _283;
  struct basic_stringD.2844 * const _284;
  struct basic_stringD.2844 * const _285;
  struct basic_stringD.2844 * const _286;
  struct basic_stringD.2844 * const _287;
  struct basic_stringD.2844 * const _288;
  struct basic_stringD.2844 * const _289;
  struct basic_stringD.2844 * const _292;
  struct basic_stringD.2844 * const _293;
  intD.9 * const _296;
  intD.9 * const _297;
  long intD.12 _298;
  long intD.12 _299;
  long intD.12 _300;
  long intD.12 _301;
  long intD.12 _303;
  long intD.12 _304;
  long intD.12 _305;
  long intD.12 _306;
  size_typeD.36476 _307;
  long intD.12 _308;
  charD.10 * const _309;
  struct basic_ostreamD.3833 & _310;
  long intD.12 _311;
  long intD.12 _312;
  long intD.12 _313;
  long intD.12 _314;
  long intD.12 _316;
  long intD.12 _317;
  long intD.12 _318;
  long intD.12 _319;
  size_typeD.36476 _320;
  size_typeD.36476 _325;
  long intD.12 _326;
  charD.10 * const _327;
  struct basic_ostreamD.3833 & _328;
  struct basic_stringD.2844 * const _329;
  long intD.12 _330;
  long intD.12 _331;
  long intD.12 _332;
  long intD.12 _333;
  size_typeD.34516 _334;
  long unsigned intD.14 _335;
  intD.9 & _336;
  long intD.12 _337;
  long intD.12 _338;
  long intD.12 _339;
  intD.9 _340;
  long intD.12 _341;
  long intD.12 _342;
  long intD.12 _343;
  long intD.12 _344;
  size_typeD.36476 _345;
  struct basic_stringD.2844 & _346;
  long intD.12 _347;
  long intD.12 _348;
  long intD.12 _349;
  long intD.12 _350;
  size_typeD.34516 _351;
  intD.9 * _354;
  long intD.12 _355;
  charD.10 * const _356;
  struct basic_ostreamD.3833 & _357;
  intD.9 * const pretmp_409;
  intD.9 * const prephitmp_410;
  intD.9 * const pretmp_411;
  intD.9 * const prephitmp_412;
  intD.9 * pretmp_416;
  intD.9 * prephitmp_417;
  intD.9 * const pretmp_418;
  intD.9 * prephitmp_427;
  intD.9 * const pretmp_429;
  intD.9 * const prephitmp_430;
  intD.9 _442;
  intD.9 _446;
  intD.9 * prephitmp_454;
  intD.9 * pretmp_455;
  intD.9 * pretmp_456;
  intD.9 * pretmp_459;
  long unsigned intD.14 pretmp_460;
  intD.9 * pretmp_461;
  long unsigned intD.14 pretmp_462;
  const struct __ctype_typeD.19822 * _464;
  struct basic_stringD.2844 * prephitmp_466;
  intD.9 * pretmp_467;
  intD.9 * pretmp_468;
  intD.9 * pretmp_469;
  long intD.12 pretmp_536;
  long intD.12 prephitmp_537;
  struct basic_stringD.2844 * pretmp_538;
  long intD.12 pretmp_547;
  long intD.12 pretmp_549;
  struct basic_stringD.2844 * const prephitmp_572;
  struct basic_stringD.2844 * const pretmp_573;
  long intD.12 pretmp_575;
  struct basic_stringD.2844 * pretmp_583;
  struct basic_stringD.2844 * prephitmp_584;
  struct basic_stringD.2844 * const pretmp_586;
  struct basic_stringD.2844 * pretmp_595;
  struct basic_stringD.2844 * prephitmp_596;
  size_typeD.34516 _735;
  const size_typeD.11502 _737;
  long intD.12 pretmp_740;
  const charD.10 * _741;
  charD.10 * _747;
  long unsigned intD.14 __dnew.63_748;
  const char_typeD.6629 _750;
  charD.10 * _753;
  const size_typeD.11502 _754;
  charD.10 * const _755;
  intD.9 * const prephitmp_756;
  long unsigned intD.14 _758;
  const charD.10 * _760;
  size_typeD.11502 prephitmp_761;
  charD.10 * _766;
  long unsigned intD.14 __dnew.63_767;
  const char_typeD.6629 _769;
  charD.10 * _772;
  const size_typeD.11502 _773;
  charD.10 * const _774;
  long unsigned intD.14 _777;
  const charD.10 * _779;
  charD.10 * const pretmp_780;
  long unsigned intD.14 prephitmp_783;
  charD.10 * _785;
  long unsigned intD.14 __dnew.63_786;
  const char_typeD.6629 _788;
  charD.10 * _791;
  intD.9 _792;
  intD.9 _793;
  intD.9 _794;
  intD.9 _795;
  long intD.12 pretmp_796;
  size_typeD.11502 iftmp.47_797;
  long unsigned intD.14 pretmp_800;
  size_typeD.11502 pretmp_802;
  boolD.2757 _803;
  charD.10 * const prephitmp_808;
  size_typeD.11502 prephitmp_809;
  charD.10 * const pretmp_810;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _811;
  long intD.12 _812;
  sizetype _813;
  struct basic_iosD.3827 * _814;
  boolD.2757 _815;
  intD.9 _816;
  struct basic_ostreamD.3833 & _817;
  struct basic_stringD.2844 * const _818;
  charD.10 _819;
  size_typeD.11502 iftmp.47_821;
  char_typeD.16738 _822;
  char_typeD.16738 _825;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _827;
  intD.9 (*__vtbl_ptr_typeD.2760) () _828;
  char_typeD.16738 _830;
  long unsigned intD.14 prephitmp_837;
  struct basic_stringD.2844 * const _838;
  size_typeD.11502 pretmp_839;
  long unsigned intD.14 pretmp_840;
  const ptrdiff_tD.2819 prephitmp_843;
  struct basic_stringD.2844 * const _845;
  struct basic_stringD.2844 * const _847;
  intD.9 * const _848;
  intD.9 * const _849;
  long intD.12 _850;
  long intD.12 _851;
  long intD.12 _852;
  long intD.12 _853;
  size_typeD.34516 _854;
  boolD.2757 _855;
  intD.9 * _857;
  intD.9 * _866;
  intD.9 * _867;
  intD.9 * iftmp.79_868;
  struct basic_stringD.2844 * _869;
  struct basic_stringD.2844 * _870;
  charD.10 * _871;
  charD.10 * const _872;
  const size_typeD.11502 _873;
  charD.10 * _874;
  struct basic_stringD.2844 * _876;
  struct basic_stringD.2844 * const _877;
  long intD.12 _878;
  long intD.12 _879;
  charD.10 * _881;
  long unsigned intD.14 __dnew.63_882;
  const char_typeD.6629 _884;
  charD.10 * _887;
  intD.9 * const _888;
  intD.9 * const _889;
  long intD.12 _890;
  long intD.12 _891;
  long intD.12 _892;
  long intD.12 _893;
  size_typeD.34516 _894;
  intD.9 * const _895;
  intD.9 * const _896;
  long intD.12 _897;
  long intD.12 _898;
  long intD.12 _899;
  long intD.12 _900;
  size_typeD.34516 _901;
  intD.9 * _905;
  intD.9 * const _906;
  long intD.12 _907;
  long intD.12 _908;
  long intD.12 _909;
  size_typeD.34516 _910;
  long unsigned intD.14 _911;
  long unsigned intD.14 _912;
  intD.9 * _921;
  long intD.12 __first.82_923;
  long intD.12 _924;
  long unsigned intD.14 _926;
  long intD.12 pretmp_933;
  long unsigned intD.14 _937;
  intD.9 * _938;
  intD.9 * iftmp.79_939;
  struct basic_stringD.2844 * _940;
  intD.9 * const prephitmp_942;
  charD.10 * const _943;
  const charD.10 * _944;
  charD.10 * const _949;
  const charD.10 * _950;
  long intD.12 _955;
  long intD.12 _958;
  intD.9 * const prephitmp_970;
  const ptrdiff_tD.2819 pretmp_978;
  intD.9 * pretmp_1020;
  long unsigned intD.14 pretmp_1033;
  intD.9 * pretmp_1046;
  boolD.2757 _1061;
  boolD.2757 _1070;
  charD.10 * const _1077;
  boolD.2757 _1080;
  long intD.12 _1110;
  long intD.12 _1111;
  size_typeD.36476 _1112;
  charD.10 * const prephitmp_1113;
  boolD.2757 _1116;
  size_typeD.36476 _1126;
  long unsigned intD.14 _1140;
  size_typeD.34516 _1145;
  intD.9 * pretmp_1149;
  long intD.12 _1157;
  boolD.2757 _1159;
  long intD.12 _1161;
  long intD.12 _1162;
  long intD.12 _1163;
  charD.10 * const _1165;
  charD.10 * const prephitmp_1193;
  size_typeD.11502 prephitmp_1194;
  intD.9 * const pretmp_1195;
  intD.9 * const prephitmp_1196;
  intD.9 * const pretmp_1198;
  size_typeD.11502 prephitmp_1199;
  charD.10 * const pretmp_1200;
  charD.10 * const prephitmp_1201;
  charD.10 * const pretmp_1202;
  size_typeD.11502 pretmp_1203;
  long unsigned intD.14 prephitmp_1206;
  long intD.12 pretmp_1207;
  long unsigned intD.14 pretmp_1208;
  long intD.12 pretmp_1209;
  long intD.12 _1210;
  long intD.12 _1211;
  size_typeD.36476 _1212;
  intD.9 * const pretmp_1213;
  struct basic_stringD.2844 * const _1215;
  struct basic_stringD.2844 * const _1216;
  long intD.12 _1217;
  long intD.12 _1218;
  struct basic_stringD.2844 * const _1219;
  struct basic_stringD.2844 * const _1220;
  long intD.12 _1221;
  size_typeD.11502 pretmp_1222;
  struct basic_stringD.2844 * prephitmp_1223;
  struct basic_stringD.2844 * pretmp_1224;
  charD.10 * const _1226;
  charD.10 * const _1227;
  intD.9 * const _1229;
  intD.9 * const _1230;
  long intD.12 _1232;

;;   basic block 2, loop depth 0, count 0, freq 902, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50556 => &pattern_nameD.36150
  # DEBUG thisD.50557 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG thisD.50558 => &pattern_nameD.36150
  # DEBUG D#152ptD.0 => &pattern_nameD.36150._M_dataplusD.11519
  # DEBUG thisD.50561 => D#152ptD.0
  # DEBUG __datD.50560 => &pattern_nameD.36150.D.11539._M_local_bufD.11541
  # DEBUG __aD.50559 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#152ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_399 = VDEF <.MEM_38(D)>
  MEM[(struct _Alloc_hiderD.11518 *)&pattern_nameD.36150]._M_pD.11525 = &pattern_nameD.36150.D.11539._M_local_bufD.11541;
  # DEBUG thisD.50562 => NULL
  # DEBUG thisD.45882 => NULL
  # DEBUG thisD.50564 => &pattern_nameD.36150
  # DEBUG __nD.50563 => 0
  # DEBUG D#4ptD.0 => &pattern_nameD.36150
  # DEBUG __lengthD.50566 => 0
  # DEBUG thisD.50565 => D#4ptD.0
  # .MEM_400 = VDEF <.MEM_399>
  MEM[(size_typeD.11502 *)&pattern_nameD.36150 + 8B] = 0;
  # DEBUG D#2ptD.0 => &pattern_nameD.36150
  # DEBUG thisD.44971 => D#2ptD.0
  # DEBUG __c1D.50568 => &pattern_nameD.36150.D.11539._M_local_bufD.11541
  # DEBUG __c2D.50567 => D#32ptD.0
  # .MEM_401 = VDEF <.MEM_400>
  MEM[(char_typeD.6629 &)&pattern_nameD.36150 + 16] = 0;
  # DEBUG thisD.50543 => &param_strD.36151
  # DEBUG thisD.50544 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG thisD.50545 => &param_strD.36151
  # DEBUG D#152ptD.0 => &param_strD.36151._M_dataplusD.11519
  # DEBUG thisD.50548 => D#152ptD.0
  # DEBUG __datD.50547 => &param_strD.36151.D.11539._M_local_bufD.11541
  # DEBUG __aD.50546 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#152ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_402 = VDEF <.MEM_401>
  MEM[(struct _Alloc_hiderD.11518 *)&param_strD.36151]._M_pD.11525 = &param_strD.36151.D.11539._M_local_bufD.11541;
  # DEBUG thisD.50549 => NULL
  # DEBUG thisD.45882 => NULL
  # DEBUG thisD.50551 => &param_strD.36151
  # DEBUG __nD.50550 => 0
  # DEBUG D#4ptD.0 => &param_strD.36151
  # DEBUG __lengthD.50553 => 0
  # DEBUG thisD.50552 => D#4ptD.0
  # .MEM_403 = VDEF <.MEM_402>
  MEM[(size_typeD.11502 *)&param_strD.36151 + 8B] = 0;
  # DEBUG D#2ptD.0 => &param_strD.36151
  # DEBUG thisD.44971 => D#2ptD.0
  # DEBUG __c1D.50555 => &param_strD.36151.D.11539._M_local_bufD.11541
  # DEBUG __c2D.50554 => D#32ptD.0
  # .MEM_404 = VDEF <.MEM_403>
  MEM[(char_typeD.6629 &)&param_strD.36151 + 16] = 0;
  # DEBUG thisD.50539 => pattern_39(D)
  # DEBUG __cD.50540 => 40
  # DEBUG __posD.50541 => 0
  [LP 52] # .MEM_405 = VDEF <.MEM_404>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _192 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcmD.12131 (pattern_39(D), 40, 0);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                519 (EH,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 902, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG leftD.36152 => _192
  if (_192 == 18446744073709551615)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 252, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.50569 => &pattern_nameD.36150
  # DEBUG __strD.50570 => pattern_39(D)
  # DEBUG thisD.50572 => &pattern_nameD.36150
  # DEBUG __strD.50571 => pattern_39(D)
  [LP 53] # .MEM_406 = VDEF <.MEM_405>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&pattern_nameD.36150, pattern_39(D));
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 (EH,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 (EH,EXECUTABLE)
<L171>: [LP 53]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 649, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       3 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53851 => pattern_39(D)
  # DEBUG __posD.53852 => 0
  # DEBUG __nD.53853 => _192
  # DEBUG thisD.53856 => pattern_39(D)
  # DEBUG __posD.53855 => 0
  # DEBUG __sD.53854 => "basic_string::substr"
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44899 => D#1ptD.0
  # DEBUG thisD.53857 => &D.36153
  # DEBUG __strD.53858 => pattern_39(D)
  # DEBUG __posD.53859 => 0
  # DEBUG __nD.53860 => _192
  # DEBUG thisD.53862 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG thisD.53863 => &D.36153
  # DEBUG D#317ptD.0 => &D.36153._M_dataplusD.11519
  # DEBUG thisD.53866 => D#317ptD.0
  # DEBUG __datD.53865 => &D.36153.D.11539._M_local_bufD.11541
  # DEBUG __aD.53864 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#317ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_981 = VDEF <.MEM_405>
  MEM[(struct _Alloc_hiderD.11518 *)&D.36153]._M_pD.11525 = &D.36153.D.11539._M_local_bufD.11541;
  # DEBUG thisD.53867 => NULL
  # DEBUG thisD.47400 => NULL
  # VUSE <.MEM_981>
  # PT = nonlocal escaped 
  __start_736 = MEM[(charD.10 * *)pattern_39(D)];
  # DEBUG D#2ptD.0 => pattern_39(D)
  # DEBUG thisD.47397 => D#2ptD.0
  # DEBUG thisD.53883 => pattern_39(D)
  # DEBUG __posD.53882 => 0
  # DEBUG __sD.53881 => "basic_string::basic_string"
  # VUSE <.MEM_981>
  _737 = MEM[(long unsigned intD.14 *)pattern_39(D) + 8B];
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44899 => D#1ptD.0
  # DEBUG __startD.53868 => __start_736
  # DEBUG thisD.53871 => pattern_39(D)
  # DEBUG __posD.53870 => 0
  # DEBUG __offD.53869 => _192
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44851 => D#1ptD.0
  # DEBUG __testoffD.53872 => _737 > _192
  iftmp.47_821 = MIN_EXPR <_192, _737>;
  # PT = nonlocal escaped 
  _741 = __start_736 + iftmp.47_821;
  # DEBUG thisD.53875 => &D.36153
  # DEBUG __begD.53874 => __start_736
  # DEBUG __endD.53873 => _741
  # DEBUG thisD.53879 => &D.36153
  # DEBUG __begD.53878 => __start_736
  # DEBUG __endD.53877 => _741
  # DEBUG thisD.53884 => &D.36153
  # DEBUG __begD.53885 => __start_736
  # DEBUG __endD.53886 => _741
  # DEBUG __ptrD.49230 => __start_736
  # RANGE [0, 1]
  _4 = _741 != 0B;
  # RANGE [0, 1]
  _1159 = __start_736 == 0B;
  # RANGE [0, 1]
  _1080 = _4 & _1159;
  if (_1080 != 0)
    goto <bb 526>;
  else
    goto <bb 528>;
;;    succ:       526 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                528 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 188, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       528 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 54] # .MEM_983 = VDEF <.MEM_982>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _747 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.36153, &__dnewD.53887, 0);
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 (EH,EXECUTABLE)
<L172>: [LP 54]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 188, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.36153
  # DEBUG __pD.53906 => _747
  # DEBUG thisD.53905 => D#6ptD.0
  # .MEM_984 = VDEF <.MEM_983>
  MEM[(charD.10 * *)&D.36153] = _747;
  # VUSE <.MEM_984>
  __dnew.63_748 = __dnewD.53887;
  # DEBUG D#7ptD.0 => &D.36153
  # DEBUG __capacityD.53908 => __dnew.63_748
  # DEBUG thisD.53907 => D#7ptD.0
  # .MEM_985 = VDEF <.MEM_984>
  MEM[(size_typeD.11502 *)&D.36153 + 16B] = __dnew.63_748;
  # DEBUG D#2ptD.0 => &D.36153
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.53890 => _747
  # DEBUG __k1D.53889 => __start_736
  # DEBUG __k2D.53888 => _741
  # DEBUG __dD.53893 => _747
  # DEBUG __sD.53892 => __start_736
  # DEBUG __nD.53891 => iftmp.47_821
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 461, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       528 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => &D.36153
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.53890 => &D.36153.D.11539._M_local_bufD.11541
  # DEBUG __k1D.53889 => __start_736
  # DEBUG __k2D.53888 => _741
  # DEBUG __dD.53893 => &D.36153.D.11539._M_local_bufD.11541
  # DEBUG __sD.53892 => __start_736
  # DEBUG __nD.53891 => iftmp.47_821
  if (iftmp.47_821 == 1)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 246, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_982>
  _750 = MEM[(const char_typeD.6629 &)__start_736];
  # DEBUG D#32ptD.0 => __start_736
  # DEBUG __c1D.53898 => &D.36153.D.11539._M_local_bufD.11541
  # DEBUG __c2D.53897 => D#32ptD.0
  # .MEM_986 = VDEF <.MEM_982>
  MEM[(char_typeD.6629 &)&D.36153 + 16] = _750;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 403, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1228 = PHI <.MEM_982(10), .MEM_985(9)>
  # PT = nonlocal escaped null { D.36153 } (escaped)
  # _1227 = PHI <&D.36153.D.11539._M_local_bufD.11541(10), _747(9)>
  # DEBUG D#2ptD.0 => &D.36153
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.53890 => _1227
  # DEBUG __k1D.53889 => __start_736
  # DEBUG __k2D.53888 => _741
  # DEBUG __dD.53893 => _1227
  # DEBUG __sD.53892 => __start_736
  # DEBUG __nD.53891 => iftmp.47_821
  # DEBUG __s1D.53896 => _1227
  # DEBUG __s2D.53895 => __start_736
  # DEBUG __nD.53894 => iftmp.47_821
  # .MEM_987 = VDEF <.MEM_1228>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memcpyD.992 (_1227, __start_736, iftmp.47_821);
  # VUSE <.MEM_987>
  pretmp_839 = __dnewD.53887;
  # VUSE <.MEM_987>
  pretmp_810 = MEM[(charD.10 * *)&D.36153];
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 649, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_836 = PHI <.MEM_986(11), .MEM_987(12)>
  # prephitmp_809 = PHI <iftmp.47_821(11), pretmp_839(12)>
  # PT = nonlocal escaped null { D.36153 } (escaped)
  # prephitmp_808 = PHI <&D.36153.D.11539._M_local_bufD.11541(11), pretmp_810(12)>
  # DEBUG D#787ptD.0 => __dnewD.53887
  # DEBUG thisD.53900 => &D.36153
  # DEBUG __nD.53899 => D#787ptD.0
  # DEBUG D#4ptD.0 => &D.36153
  # DEBUG __lengthD.53902 => D#787ptD.0
  # DEBUG thisD.53901 => D#4ptD.0
  # .MEM_988 = VDEF <.MEM_836>
  MEM[(size_typeD.11502 *)&D.36153 + 8B] = prephitmp_809;
  # DEBUG D#2ptD.0 => &D.36153
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped null { D.36153 } (escaped)
  _753 = prephitmp_808 + prephitmp_809;
  # DEBUG __c1D.53904 => _753
  # DEBUG __c2D.53903 => D#32ptD.0
  # .MEM_989 = VDEF <.MEM_988>
  MEM[(char_typeD.6629 &)_753] = 0;
  # .MEM_990 = VDEF <.MEM_989>
  __dnewD.53887 ={v} {CLOBBER};
  # DEBUG thisD.50574 => &pattern_nameD.36150
  # DEBUG __strD.50575 => &D.36153
  # DEBUG thisD.50577 => &pattern_nameD.36150
  # DEBUG __strD.50576 => &D.36153
  [LP 4] # .MEM_407 = VDEF <.MEM_990>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&pattern_nameD.36150, &D.36153);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                389 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 649, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50583 => &D.36153
  # DEBUG thisD.50584 => &D.36153
  # DEBUG thisD.50593 => &D.36153
  # VUSE <.MEM_407>
  # PT = nonlocal escaped null { D.36153 } (escaped)
  _43 = MEM[(charD.10 * *)&D.36153];
  # DEBUG D#2ptD.0 => &D.36153
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50594 => &D.36153
  if (&D.36153.D.11539._M_local_bufD.11541 != _43)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 453, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36153.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50586 => &D.36153
  # DEBUG __sizeD.50585 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36153
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36153
  # DEBUG D#216ptD.0 => &D.36153._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50589 => _43
  # DEBUG __aD.50587 => D#214ptD.0
  # DEBUG __nD.50588 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50592 => _43
  # DEBUG thisD.50590 => D#210ptD.0
  # DEBUG D.50591 => D#211ptD.0
  # .MEM_408 = VDEF <.MEM_407>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_43);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 649, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_279 = PHI <.MEM_407(14), .MEM_408(15)>
  # DEBUG D#220ptD.0 => &D.36153._M_dataplusD.11519
  # DEBUG thisD.50595 => D#220ptD.0
  # DEBUG thisD.50596 => D#220ptD.0
  # DEBUG thisD.50597 => D#220ptD.0
  # .MEM_42 = VDEF <.MEM_279>
  D.36153 ={v} {CLOBBER};
  # DEBUG thisD.50579 => pattern_39(D)
  # DEBUG __cD.50580 => 41
  # DEBUG __posD.50581 => 18446744073709551615
  [LP 55] # .MEM_413 = VDEF <.MEM_42>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _40 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcmD.12148 (pattern_39(D), 41, 18446744073709551615);
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L173>: [LP 55]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 649, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG rightD.36154 => _40
  if (_40 == 18446744073709551615)
    goto <bb 19>;
  else
    goto <bb 33>;
;;    succ:       19 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 182, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  _44 = _192 + 1;
  # DEBUG thisD.53913 => pattern_39(D)
  # DEBUG __posD.53914 => _44
  # DEBUG __nD.53915 => 18446744073709551615
  # DEBUG thisD.53918 => pattern_39(D)
  # DEBUG __posD.53917 => _44
  # DEBUG __sD.53916 => "basic_string::substr"
  # VUSE <.MEM_413>
  _754 = MEM[(long unsigned intD.14 *)pattern_39(D) + 8B];
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44899 => D#1ptD.0
  if (_44 > _754)
    goto <bb 20>;
  else
    goto <bb 22>;
;;    succ:       20 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44902 => D#1ptD.0
  [LP 56] # .MEM_1003 = VDEF <.MEM_413>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt24__throw_out_of_range_fmtPKczD.3971 ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", _44, _754);
;;    succ:       21 (EH,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 (EH,EXECUTABLE)
<L174>: [LP 56]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 182, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       19 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53919 => &D.36155
  # DEBUG __strD.53920 => pattern_39(D)
  # DEBUG __posD.53921 => _44
  # DEBUG __nD.53922 => 18446744073709551615
  # DEBUG thisD.53924 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG thisD.53925 => &D.36155
  # DEBUG D#317ptD.0 => &D.36155._M_dataplusD.11519
  # DEBUG thisD.53928 => D#317ptD.0
  # DEBUG __datD.53927 => &D.36155.D.11539._M_local_bufD.11541
  # DEBUG __aD.53926 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#317ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_991 = VDEF <.MEM_413>
  MEM[(struct _Alloc_hiderD.11518 *)&D.36155]._M_pD.11525 = &D.36155.D.11539._M_local_bufD.11541;
  # DEBUG thisD.53929 => NULL
  # DEBUG thisD.47400 => NULL
  # VUSE <.MEM_991>
  # PT = nonlocal escaped 
  _755 = MEM[(charD.10 * *)pattern_39(D)];
  # DEBUG D#2ptD.0 => pattern_39(D)
  # DEBUG thisD.47397 => D#2ptD.0
  # DEBUG thisD.53945 => pattern_39(D)
  # DEBUG __posD.53944 => _44
  # DEBUG __sD.53943 => "basic_string::basic_string"
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44899 => D#1ptD.0
  # PT = nonlocal escaped 
  __start_757 = _755 + _44;
  # DEBUG __startD.53930 => __start_757
  # DEBUG thisD.53933 => pattern_39(D)
  # DEBUG __posD.53932 => _44
  # DEBUG __offD.53931 => 18446744073709551615
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44851 => D#1ptD.0
  # RANGE [0, 18446744073709551615]
  _758 = _754 - _44;
  # DEBUG __testoffD.53934 => _758 > 18446744073709551615
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44854 => D#1ptD.0
  # PT = nonlocal escaped 
  _760 = __start_757 + _758;
  # DEBUG thisD.53937 => &D.36155
  # DEBUG __begD.53936 => __start_757
  # DEBUG __endD.53935 => _760
  # DEBUG thisD.53941 => &D.36155
  # DEBUG __begD.53940 => __start_757
  # DEBUG __endD.53939 => _760
  # DEBUG thisD.53946 => &D.36155
  # DEBUG __begD.53947 => __start_757
  # DEBUG __endD.53948 => _760
  # DEBUG __ptrD.49230 => __start_757
  # RANGE [0, 1]
  _9 = _760 != 0B;
  # RANGE [0, 1]
  _1061 = __start_757 == 0B;
  # RANGE [0, 1]
  _803 = _9 & _1061;
  if (_803 != 0)
    goto <bb 529>;
  else
    goto <bb 531>;
;;    succ:       529 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                531 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 53, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       531 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 57] # .MEM_993 = VDEF <.MEM_992>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _766 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.36155, &__dnewD.53949, 0);
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 (EH,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 (EH,EXECUTABLE)
<L175>: [LP 57]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 53, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.36155
  # DEBUG __pD.53968 => _766
  # DEBUG thisD.53967 => D#6ptD.0
  # .MEM_994 = VDEF <.MEM_993>
  MEM[(charD.10 * *)&D.36155] = _766;
  # VUSE <.MEM_994>
  __dnew.63_767 = __dnewD.53949;
  # DEBUG D#7ptD.0 => &D.36155
  # DEBUG __capacityD.53970 => __dnew.63_767
  # DEBUG thisD.53969 => D#7ptD.0
  # .MEM_995 = VDEF <.MEM_994>
  MEM[(size_typeD.11502 *)&D.36155 + 16B] = __dnew.63_767;
  # DEBUG D#2ptD.0 => &D.36155
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.53952 => _766
  # DEBUG __k1D.53951 => __start_757
  # DEBUG __k2D.53950 => _760
  # DEBUG __dD.53955 => _766
  # DEBUG __sD.53954 => __start_757
  # DEBUG __nD.53953 => _758
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 128, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       531 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => &D.36155
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.53952 => &D.36155.D.11539._M_local_bufD.11541
  # DEBUG __k1D.53951 => __start_757
  # DEBUG __k2D.53950 => _760
  # DEBUG __dD.53955 => &D.36155.D.11539._M_local_bufD.11541
  # DEBUG __sD.53954 => __start_757
  # DEBUG __nD.53953 => _758
  if (_758 == 1)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [53.5%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [46.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [53.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_992>
  _769 = MEM[(const char_typeD.6629 &)__start_757];
  # DEBUG D#32ptD.0 => __start_757
  # DEBUG __c1D.53960 => &D.36155.D.11539._M_local_bufD.11541
  # DEBUG __c2D.53959 => D#32ptD.0
  # .MEM_996 = VDEF <.MEM_992>
  MEM[(char_typeD.6629 &)&D.36155 + 16] = _769;
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 113, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [46.5%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1160 = PHI <.MEM_992(26), .MEM_995(25)>
  # PT = nonlocal escaped null { D.36155 } (escaped)
  # _1226 = PHI <&D.36155.D.11539._M_local_bufD.11541(26), _766(25)>
  # DEBUG D#2ptD.0 => &D.36155
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.53952 => _1226
  # DEBUG __k1D.53951 => __start_757
  # DEBUG __k2D.53950 => _760
  # DEBUG __dD.53955 => _1226
  # DEBUG __sD.53954 => __start_757
  # DEBUG __nD.53953 => _758
  # DEBUG __s1D.53958 => _1226
  # DEBUG __s2D.53957 => __start_757
  # DEBUG __nD.53956 => _758
  # .MEM_997 = VDEF <.MEM_1160>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memcpyD.992 (_1226, __start_757, _758);
  # VUSE <.MEM_997>
  pretmp_1203 = __dnewD.53949;
  # VUSE <.MEM_997>
  pretmp_1202 = MEM[(charD.10 * *)&D.36155];
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 181, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_799 = PHI <.MEM_996(27), .MEM_997(28)>
  # prephitmp_1194 = PHI <_758(27), pretmp_1203(28)>
  # PT = nonlocal escaped null { D.36155 } (escaped)
  # prephitmp_1193 = PHI <&D.36155.D.11539._M_local_bufD.11541(27), pretmp_1202(28)>
  # DEBUG D#786ptD.0 => __dnewD.53949
  # DEBUG thisD.53962 => &D.36155
  # DEBUG __nD.53961 => D#786ptD.0
  # DEBUG D#4ptD.0 => &D.36155
  # DEBUG __lengthD.53964 => D#786ptD.0
  # DEBUG thisD.53963 => D#4ptD.0
  # .MEM_998 = VDEF <.MEM_799>
  MEM[(size_typeD.11502 *)&D.36155 + 8B] = prephitmp_1194;
  # DEBUG D#2ptD.0 => &D.36155
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped null { D.36155 } (escaped)
  _772 = prephitmp_1193 + prephitmp_1194;
  # DEBUG __c1D.53966 => _772
  # DEBUG __c2D.53965 => D#32ptD.0
  # .MEM_999 = VDEF <.MEM_998>
  MEM[(char_typeD.6629 &)_772] = 0;
  # .MEM_1000 = VDEF <.MEM_999>
  __dnewD.53949 ={v} {CLOBBER};
  # DEBUG thisD.50598 => &param_strD.36151
  # DEBUG __strD.50599 => &D.36155
  # DEBUG thisD.50601 => &param_strD.36151
  # DEBUG __strD.50600 => &D.36155
  [LP 5] # .MEM_414 = VDEF <.MEM_1000>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&param_strD.36151, &D.36155);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                393 (EH,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 181, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50603 => &D.36155
  # DEBUG thisD.50604 => &D.36155
  # DEBUG thisD.50613 => &D.36155
  # VUSE <.MEM_414>
  # PT = nonlocal escaped null { D.36155 } (escaped)
  _46 = MEM[(charD.10 * *)&D.36155];
  # DEBUG D#2ptD.0 => &D.36155
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50614 => &D.36155
  if (&D.36155.D.11539._M_local_bufD.11541 != _46)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 127, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36155.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50606 => &D.36155
  # DEBUG __sizeD.50605 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36155
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36155
  # DEBUG D#216ptD.0 => &D.36155._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50609 => _46
  # DEBUG __aD.50607 => D#214ptD.0
  # DEBUG __nD.50608 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50612 => _46
  # DEBUG thisD.50610 => D#210ptD.0
  # DEBUG D.50611 => D#211ptD.0
  # .MEM_415 = VDEF <.MEM_414>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_46);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 181, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_358 = PHI <.MEM_414(30), .MEM_415(31)>
  # DEBUG D#220ptD.0 => &D.36155._M_dataplusD.11519
  # DEBUG thisD.50615 => D#220ptD.0
  # DEBUG thisD.50616 => D#220ptD.0
  # DEBUG thisD.50617 => D#220ptD.0
  # .MEM_47 = VDEF <.MEM_358>
  D.36155 ={v} {CLOBBER};
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 467, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       18 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  _1140 = ~_192;
  # RANGE [0, 18446744073709551615]
  _51 = _40 + _1140;
  # RANGE [1, 18446744073709551615]
  _52 = _192 + 1;
  # DEBUG thisD.53975 => pattern_39(D)
  # DEBUG __posD.53976 => _52
  # DEBUG __nD.53977 => _51
  # DEBUG thisD.53980 => pattern_39(D)
  # DEBUG __posD.53979 => _52
  # DEBUG __sD.53978 => "basic_string::substr"
  # VUSE <.MEM_413>
  _773 = MEM[(long unsigned intD.14 *)pattern_39(D) + 8B];
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44899 => D#1ptD.0
  if (_52 > _773)
    goto <bb 34>;
  else
    goto <bb 36>;
;;    succ:       34 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44902 => D#1ptD.0
  [LP 58] # .MEM_1016 = VDEF <.MEM_413>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt24__throw_out_of_range_fmtPKczD.3971 ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::substr", _52, _773);
;;    succ:       35 (EH,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 (EH,EXECUTABLE)
<L176>: [LP 58]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 467, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.53981 => &D.36156
  # DEBUG __strD.53982 => pattern_39(D)
  # DEBUG __posD.53983 => _52
  # DEBUG __nD.53984 => _51
  # DEBUG thisD.53986 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG thisD.53987 => &D.36156
  # DEBUG D#317ptD.0 => &D.36156._M_dataplusD.11519
  # DEBUG thisD.53990 => D#317ptD.0
  # DEBUG __datD.53989 => &D.36156.D.11539._M_local_bufD.11541
  # DEBUG __aD.53988 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#317ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_1004 = VDEF <.MEM_413>
  MEM[(struct _Alloc_hiderD.11518 *)&D.36156]._M_pD.11525 = &D.36156.D.11539._M_local_bufD.11541;
  # DEBUG thisD.53991 => NULL
  # DEBUG thisD.47400 => NULL
  # VUSE <.MEM_1004>
  # PT = nonlocal escaped 
  _774 = MEM[(charD.10 * *)pattern_39(D)];
  # DEBUG D#2ptD.0 => pattern_39(D)
  # DEBUG thisD.47397 => D#2ptD.0
  # DEBUG thisD.54007 => pattern_39(D)
  # DEBUG __posD.54006 => _52
  # DEBUG __sD.54005 => "basic_string::basic_string"
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44899 => D#1ptD.0
  # PT = nonlocal escaped 
  __start_776 = _774 + _52;
  # DEBUG __startD.53992 => __start_776
  # DEBUG thisD.53995 => pattern_39(D)
  # DEBUG __posD.53994 => _52
  # DEBUG __offD.53993 => _51
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44851 => D#1ptD.0
  # RANGE [0, 18446744073709551615]
  _777 = _773 - _52;
  # DEBUG __testoffD.53996 => _777 > _51
  # RANGE [0, 18446744073709551615]
  iftmp.47_797 = MIN_EXPR <_51, _777>;
  # PT = nonlocal escaped 
  _779 = __start_776 + iftmp.47_797;
  # DEBUG thisD.53999 => &D.36156
  # DEBUG __begD.53998 => __start_776
  # DEBUG __endD.53997 => _779
  # DEBUG thisD.54003 => &D.36156
  # DEBUG __begD.54002 => __start_776
  # DEBUG __endD.54001 => _779
  # DEBUG thisD.54008 => &D.36156
  # DEBUG __begD.54009 => __start_776
  # DEBUG __endD.54010 => _779
  # DEBUG __ptrD.49230 => __start_776
  # RANGE [0, 1]
  _1070 = _779 != 0B;
  # RANGE [0, 1]
  _815 = __start_776 == 0B;
  # RANGE [0, 1]
  _855 = _815 & _1070;
  if (_855 != 0)
    goto <bb 532>;
  else
    goto <bb 534>;
;;    succ:       532 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                534 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 135, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       534 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 59] # .MEM_1006 = VDEF <.MEM_1005>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _785 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.36156, &__dnewD.54011, 0);
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       37 (EH,EXECUTABLE)
<L177>: [LP 59]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 135, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => &D.36156
  # DEBUG __pD.54030 => _785
  # DEBUG thisD.54029 => D#6ptD.0
  # .MEM_1007 = VDEF <.MEM_1006>
  MEM[(charD.10 * *)&D.36156] = _785;
  # VUSE <.MEM_1007>
  __dnew.63_786 = __dnewD.54011;
  # DEBUG D#7ptD.0 => &D.36156
  # DEBUG __capacityD.54032 => __dnew.63_786
  # DEBUG thisD.54031 => D#7ptD.0
  # .MEM_1008 = VDEF <.MEM_1007>
  MEM[(size_typeD.11502 *)&D.36156 + 16B] = __dnew.63_786;
  # DEBUG D#2ptD.0 => &D.36156
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.54014 => _785
  # DEBUG __k1D.54013 => __start_776
  # DEBUG __k2D.54012 => _779
  # DEBUG __dD.54017 => _785
  # DEBUG __sD.54016 => __start_776
  # DEBUG __nD.54015 => iftmp.47_797
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 332, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       534 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => &D.36156
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.54014 => &D.36156.D.11539._M_local_bufD.11541
  # DEBUG __k1D.54013 => __start_776
  # DEBUG __k2D.54012 => _779
  # DEBUG __dD.54017 => &D.36156.D.11539._M_local_bufD.11541
  # DEBUG __sD.54016 => __start_776
  # DEBUG __nD.54015 => iftmp.47_797
  if (iftmp.47_797 == 1)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41 [53.2%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [46.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 177, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [53.2%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1005>
  _788 = MEM[(const char_typeD.6629 &)__start_776];
  # DEBUG D#32ptD.0 => __start_776
  # DEBUG __c1D.54022 => &D.36156.D.11539._M_local_bufD.11541
  # DEBUG __c2D.54021 => D#32ptD.0
  # .MEM_1009 = VDEF <.MEM_1005>
  MEM[(char_typeD.6629 &)&D.36156 + 16] = _788;
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 290, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [46.8%]  (FALSE_VALUE,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1225 = PHI <.MEM_1005(40), .MEM_1008(39)>
  # PT = nonlocal escaped null { D.36156 } (escaped)
  # _1077 = PHI <&D.36156.D.11539._M_local_bufD.11541(40), _785(39)>
  # DEBUG D#2ptD.0 => &D.36156
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.54014 => _1077
  # DEBUG __k1D.54013 => __start_776
  # DEBUG __k2D.54012 => _779
  # DEBUG __dD.54017 => _1077
  # DEBUG __sD.54016 => __start_776
  # DEBUG __nD.54015 => iftmp.47_797
  # DEBUG __s1D.54020 => _1077
  # DEBUG __s2D.54019 => __start_776
  # DEBUG __nD.54018 => iftmp.47_797
  # .MEM_1010 = VDEF <.MEM_1225>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memcpyD.992 (_1077, __start_776, iftmp.47_797);
  # VUSE <.MEM_1010>
  pretmp_802 = __dnewD.54011;
  # VUSE <.MEM_1010>
  pretmp_1200 = MEM[(charD.10 * *)&D.36156];
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 467, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_835 = PHI <.MEM_1009(41), .MEM_1010(42)>
  # prephitmp_1199 = PHI <iftmp.47_797(41), pretmp_802(42)>
  # PT = nonlocal escaped null { D.36156 } (escaped)
  # prephitmp_1201 = PHI <&D.36156.D.11539._M_local_bufD.11541(41), pretmp_1200(42)>
  # DEBUG D#785ptD.0 => __dnewD.54011
  # DEBUG thisD.54024 => &D.36156
  # DEBUG __nD.54023 => D#785ptD.0
  # DEBUG D#4ptD.0 => &D.36156
  # DEBUG __lengthD.54026 => D#785ptD.0
  # DEBUG thisD.54025 => D#4ptD.0
  # .MEM_1011 = VDEF <.MEM_835>
  MEM[(size_typeD.11502 *)&D.36156 + 8B] = prephitmp_1199;
  # DEBUG D#2ptD.0 => &D.36156
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped null { D.36156 } (escaped)
  _791 = prephitmp_1201 + prephitmp_1199;
  # DEBUG __c1D.54028 => _791
  # DEBUG __c2D.54027 => D#32ptD.0
  # .MEM_1012 = VDEF <.MEM_1011>
  MEM[(char_typeD.6629 &)_791] = 0;
  # .MEM_1013 = VDEF <.MEM_1012>
  __dnewD.54011 ={v} {CLOBBER};
  # DEBUG thisD.50618 => &param_strD.36151
  # DEBUG __strD.50619 => &D.36156
  # DEBUG thisD.50621 => &param_strD.36151
  # DEBUG __strD.50620 => &D.36156
  [LP 6] # .MEM_425 = VDEF <.MEM_1013>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&param_strD.36151, &D.36156);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                397 (EH,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 467, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50623 => &D.36156
  # DEBUG thisD.50624 => &D.36156
  # DEBUG thisD.50633 => &D.36156
  # VUSE <.MEM_425>
  # PT = nonlocal escaped null { D.36156 } (escaped)
  _54 = MEM[(charD.10 * *)&D.36156];
  # DEBUG D#2ptD.0 => &D.36156
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50634 => &D.36156
  if (&D.36156.D.11539._M_local_bufD.11541 != _54)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 326, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36156.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50626 => &D.36156
  # DEBUG __sizeD.50625 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36156
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36156
  # DEBUG D#216ptD.0 => &D.36156._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50629 => _54
  # DEBUG __aD.50627 => D#214ptD.0
  # DEBUG __nD.50628 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50632 => _54
  # DEBUG thisD.50630 => D#210ptD.0
  # DEBUG D.50631 => D#211ptD.0
  # .MEM_426 = VDEF <.MEM_425>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_54);
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 467, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_359 = PHI <.MEM_425(44), .MEM_426(45)>
  # DEBUG D#220ptD.0 => &D.36156._M_dataplusD.11519
  # DEBUG thisD.50635 => D#220ptD.0
  # DEBUG thisD.50636 => D#220ptD.0
  # DEBUG thisD.50637 => D#220ptD.0
  # .MEM_56 = VDEF <.MEM_359>
  D.36156 ={v} {CLOBBER};
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_15 = PHI <.MEM_406(4), .MEM_47(32), .MEM_56(46)>
  [LP 60] # .MEM_61 = VDEF <.MEM_15>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  paramsD.36157 = _Z12tokenize_strRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33848 (&param_strD.36151); [return slot optimization]
  goto <bb 49>;
;;    succ:       48 (EH,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       47 (EH,EXECUTABLE)
<L178>: [LP 60]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG resultD.36903 => 0B
  # DEBUG __lhsD.50638 => &pattern_nameD.36150
  # DEBUG __rhsD.50639 => "bitcomp"
  [LP 61] # .MEM_441 = VDEF <.MEM_61>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _55 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "bitcomp");
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                507 (EH,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 901, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_55 == 0)
    goto <bb 51>;
  else
    goto <bb 66>;
;;    succ:       51 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 62] # .MEM_63 = VDEF <.MEM_441>
  # PT = { D.54654 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_64 = _ZnwmD.2764 (16);
  goto <bb 53>;
;;    succ:       52 (EH,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 (EH,EXECUTABLE)
<L180>: [LP 62]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50641 => result_64
  # DEBUG nodesD.50642 => nodes_65(D)
  # DEBUG D#770ptD.0 => &MEM[(struct BitCompTrafficPatternD.33954 *)result_64].D.33980
  # DEBUG thisD.54037 => D#770ptD.0
  # DEBUG nodesD.54038 => nodes_65(D)
  # DEBUG D#69ptD.0 => &D#770ptD.0->D.33950
  # DEBUG thisD.54048 => D#69ptD.0
  # DEBUG nodesD.54047 => nodes_65(D)
  # DEBUG D#66ptD.0 => &D#69ptD.0->D.33923
  # DEBUG thisD.54050 => D#66ptD.0
  # DEBUG nodesD.54049 => nodes_65(D)
  # .MEM_1018 = VDEF <.MEM_63>
  result_64->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_1019 = VDEF <.MEM_1018>
  result_64->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 54>;
  else
    goto <bb 55>;
;;    succ:       54 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       53 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 63] # .MEM_1030 = VDEF <.MEM_1019>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       401 (EH,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_1021 = VDEF <.MEM_1019>
  MEM[(struct BitPermutationTrafficPatternD.33927 *)result_64].D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV28BitPermutationTrafficPatternD.33952 + 16B];
  # RANGE [-2147483647, -1]
  _792 = -nodes_65(D);
  # RANGE [0, 2147483647] NONZERO 2147483647
  _793 = nodes_65(D) & _792;
  if (nodes_65(D) != _793)
    goto <bb 56>;
  else
    goto <bb 65>;
;;    succ:       56 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                65 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       55 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __outD.54046 => &_ZSt4coutD.22587
  # DEBUG __sD.54045 => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __sD.45168 => "Error: Bit permutation traffic patterns require the number of "
  [LP 64] # .MEM_1022 = VDEF <.MEM_1021>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Bit permutation traffic patterns require the number of ", 62);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                62 (EH,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.54044 => &_ZSt4coutD.22587
  # DEBUG __sD.54043 => "nodes to be a power of two."
  # DEBUG __sD.45172 => "nodes to be a power of two."
  [LP 65] # .MEM_1023 = VDEF <.MEM_1022>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "nodes to be a power of two.", 27);
  goto <bb 59>;
;;    succ:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW)
;;    pred:       57 (EH,EXECUTABLE)
<L183>: [LP 65]
  goto <bb 63> (<L167>);
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54042 => &_ZSt4coutD.22587
  # DEBUG __pfD.54041 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 49] # .MEM_1024 = VDEF <.MEM_1023>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (&_ZSt4coutD.22587);
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 (EH,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 59, next block 61, flags: (NEW)
;;    pred:       59 (EH,EXECUTABLE)
<L184>: [LP 49]
  goto <bb 63> (<L167>);
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                100 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                143 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                226 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                270 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                373 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1231 = PHI <.MEM_1024(59), .MEM_1037(83), .MEM_1050(100), .MEM_487(143), .MEM_567(226), .MEM_636(270), .MEM_714(373)>
  # .MEM_1025 = VDEF <.MEM_1231>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  exitD.1322 (-1);
;;    succ:      

;;   basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 61, next block 63, flags: (NEW)
;;    pred:       56 (EH,EXECUTABLE)
<L182>: [LP 64]
;;    succ:       63 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       62 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_798 = PHI <.MEM_1022(62), .MEM_1023(58), .MEM_1024(60)>
<L167>:
  # DEBUG D#68ptD.0 => &D#770ptD.0->D.33950
  # DEBUG thisD.54039 => D#68ptD.0
  # DEBUG D#67ptD.0 => &D#68ptD.0->D.33923
  # DEBUG thisD.54040 => D#67ptD.0
  # .MEM_1029 = VDEF <.MEM_798>
  MEM[(struct  &)result_64] ={v} {CLOBBER};
  [LP 8] resx 97
;;    succ:       64 (EH,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       63 (EH,EXECUTABLE)
<L185>: [LP 8]
  goto <bb 402> (<L122>);
;;    succ:       402 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_443 = VDEF <.MEM_1021>
  MEM[(struct BitCompTrafficPatternD.33954 *)result_64].D.33980.D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV21BitCompTrafficPatternD.33982 + 16B];
  # DEBUG resultD.36903 => result_64
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       50 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50643 => &pattern_nameD.36150
  # DEBUG __rhsD.50644 => "transpose"
  [LP 66] # .MEM_444 = VDEF <.MEM_441>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _66 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "transpose");
  goto <bb 68>;
;;    succ:       68 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                67 (EH,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW)
;;    pred:       66 (EH,EXECUTABLE)
<L186>: [LP 66]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       66 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_66 == 0)
    goto <bb 69>;
  else
    goto <bb 72>;
;;    succ:       69 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 67] # .MEM_69 = VDEF <.MEM_444>
  # PT = { D.54655 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_70 = _ZnwmD.2764 (16);
  goto <bb 71>;
;;    succ:       70 (EH,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW)
;;    pred:       69 (EH,EXECUTABLE)
<L187>: [LP 67]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       69 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 9] # .MEM_71 = VDEF <.MEM_69>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN23TransposeTrafficPatternC1EiD.34005 (result_70, nodes_65(D));
  goto <bb 375>;
;;    succ:       404 (EH,EXECUTABLE)
;;                375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       68 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50646 => &pattern_nameD.36150
  # DEBUG __rhsD.50647 => "bitrev"
  [LP 68] # .MEM_445 = VDEF <.MEM_444>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _68 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "bitrev");
  goto <bb 74>;
;;    succ:       74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                73 (EH,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 72, next block 74, flags: (NEW)
;;    pred:       72 (EH,EXECUTABLE)
<L188>: [LP 68]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 73, next block 75, flags: (NEW, REACHABLE)
;;    pred:       72 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_68 == 0)
    goto <bb 75>;
  else
    goto <bb 89>;
;;    succ:       75 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                89 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 113, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       74 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 69] # .MEM_74 = VDEF <.MEM_445>
  # PT = { D.54656 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_75 = _ZnwmD.2764 (16);
  goto <bb 77>;
;;    succ:       76 (EH,EXECUTABLE)
;;                77 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 75, next block 77, flags: (NEW)
;;    pred:       75 (EH,EXECUTABLE)
<L189>: [LP 69]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 113, maybe hot
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       75 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50649 => result_75
  # DEBUG nodesD.50650 => nodes_65(D)
  # DEBUG D#769ptD.0 => &MEM[(struct BitRevTrafficPatternD.34016 *)result_75].D.34042
  # DEBUG thisD.54052 => D#769ptD.0
  # DEBUG nodesD.54053 => nodes_65(D)
  # DEBUG D#69ptD.0 => &D#769ptD.0->D.33950
  # DEBUG thisD.54063 => D#69ptD.0
  # DEBUG nodesD.54062 => nodes_65(D)
  # DEBUG D#66ptD.0 => &D#69ptD.0->D.33923
  # DEBUG thisD.54065 => D#66ptD.0
  # DEBUG nodesD.54064 => nodes_65(D)
  # .MEM_1031 = VDEF <.MEM_74>
  result_75->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_1032 = VDEF <.MEM_1031>
  result_75->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 78>;
  else
    goto <bb 79>;
;;    succ:       78 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                79 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 77, next block 79, flags: (NEW, REACHABLE)
;;    pred:       77 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 70] # .MEM_1043 = VDEF <.MEM_1032>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       406 (EH,EXECUTABLE)

;;   basic block 79, loop depth 0, count 0, freq 113, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       77 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_1034 = VDEF <.MEM_1032>
  MEM[(struct BitPermutationTrafficPatternD.33927 *)result_75].D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV28BitPermutationTrafficPatternD.33952 + 16B];
  # RANGE [-2147483647, -1]
  _442 = -nodes_65(D);
  # RANGE [0, 2147483647] NONZERO 2147483647
  _794 = nodes_65(D) & _442;
  if (nodes_65(D) != _794)
    goto <bb 80>;
  else
    goto <bb 88>;
;;    succ:       80 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                88 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 79, next block 81, flags: (NEW, REACHABLE)
;;    pred:       79 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __outD.54061 => &_ZSt4coutD.22587
  # DEBUG __sD.54060 => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __sD.45168 => "Error: Bit permutation traffic patterns require the number of "
  [LP 71] # .MEM_1035 = VDEF <.MEM_1034>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Bit permutation traffic patterns require the number of ", 62);
;;    succ:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                85 (EH,EXECUTABLE)

;;   basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 80, next block 82, flags: (NEW, REACHABLE)
;;    pred:       80 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.54059 => &_ZSt4coutD.22587
  # DEBUG __sD.54058 => "nodes to be a power of two."
  # DEBUG __sD.45172 => "nodes to be a power of two."
  [LP 72] # .MEM_1036 = VDEF <.MEM_1035>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "nodes to be a power of two.", 27);
  goto <bb 83>;
;;    succ:       83 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                82 (EH,EXECUTABLE)

;;   basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 81, next block 83, flags: (NEW)
;;    pred:       81 (EH,EXECUTABLE)
<L192>: [LP 72]
  goto <bb 86> (<L168>);
;;    succ:       86 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 82, next block 84, flags: (NEW, REACHABLE)
;;    pred:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54057 => &_ZSt4coutD.22587
  # DEBUG __pfD.54056 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 50] # .MEM_1037 = VDEF <.MEM_1036>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (&_ZSt4coutD.22587);
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                84 (EH,EXECUTABLE)

;;   basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 83, next block 85, flags: (NEW)
;;    pred:       83 (EH,EXECUTABLE)
<L193>: [LP 50]
  goto <bb 86> (<L168>);
;;    succ:       86 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 84, next block 86, flags: (NEW)
;;    pred:       80 (EH,EXECUTABLE)
<L191>: [LP 71]
;;    succ:       86 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 85, next block 87, flags: (NEW, REACHABLE)
;;    pred:       85 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                82 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                84 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_277 = PHI <.MEM_1035(85), .MEM_1036(82), .MEM_1037(84)>
<L168>:
  # DEBUG D#68ptD.0 => &D#769ptD.0->D.33950
  # DEBUG thisD.54054 => D#68ptD.0
  # DEBUG D#67ptD.0 => &D#68ptD.0->D.33923
  # DEBUG thisD.54055 => D#67ptD.0
  # .MEM_1042 = VDEF <.MEM_277>
  MEM[(struct  &)result_75] ={v} {CLOBBER};
  [LP 10] resx 98
;;    succ:       87 (EH,EXECUTABLE)

;;   basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 86, next block 88, flags: (NEW)
;;    pred:       86 (EH,EXECUTABLE)
<L194>: [LP 10]
  goto <bb 407> (<L124>);
;;    succ:       407 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 88, loop depth 0, count 0, freq 112, maybe hot
;;    prev block 87, next block 89, flags: (NEW, REACHABLE)
;;    pred:       79 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_447 = VDEF <.MEM_1034>
  MEM[(struct BitRevTrafficPatternD.34016 *)result_75].D.34042.D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV20BitRevTrafficPatternD.34044 + 16B];
  # DEBUG resultD.36903 => result_75
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 89, loop depth 0, count 0, freq 113, maybe hot
;;    prev block 88, next block 90, flags: (NEW, REACHABLE)
;;    pred:       74 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50651 => &pattern_nameD.36150
  # DEBUG __rhsD.50652 => "shuffle"
  [LP 73] # .MEM_448 = VDEF <.MEM_445>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _76 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "shuffle");
  goto <bb 91>;
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 (EH,EXECUTABLE)

;;   basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 89, next block 91, flags: (NEW)
;;    pred:       89 (EH,EXECUTABLE)
<L195>: [LP 73]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 91, loop depth 0, count 0, freq 113, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       89 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_76 == 0)
    goto <bb 92>;
  else
    goto <bb 106>;
;;    succ:       92 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                106 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 92, loop depth 0, count 0, freq 56, maybe hot
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       91 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 74] # .MEM_79 = VDEF <.MEM_448>
  # PT = { D.54657 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_80 = _ZnwmD.2764 (16);
  goto <bb 94>;
;;    succ:       93 (EH,EXECUTABLE)
;;                94 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 92, next block 94, flags: (NEW)
;;    pred:       92 (EH,EXECUTABLE)
<L196>: [LP 74]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 94, loop depth 0, count 0, freq 56, maybe hot
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       92 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50654 => result_80
  # DEBUG nodesD.50655 => nodes_65(D)
  # DEBUG D#768ptD.0 => &MEM[(struct ShuffleTrafficPatternD.34046 *)result_80].D.34072
  # DEBUG thisD.54067 => D#768ptD.0
  # DEBUG nodesD.54068 => nodes_65(D)
  # DEBUG D#69ptD.0 => &D#768ptD.0->D.33950
  # DEBUG thisD.54078 => D#69ptD.0
  # DEBUG nodesD.54077 => nodes_65(D)
  # DEBUG D#66ptD.0 => &D#69ptD.0->D.33923
  # DEBUG thisD.54080 => D#66ptD.0
  # DEBUG nodesD.54079 => nodes_65(D)
  # .MEM_1044 = VDEF <.MEM_79>
  result_80->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_1045 = VDEF <.MEM_1044>
  result_80->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 95>;
  else
    goto <bb 96>;
;;    succ:       95 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                96 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 94, next block 96, flags: (NEW, REACHABLE)
;;    pred:       94 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 75] # .MEM_1056 = VDEF <.MEM_1045>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       409 (EH,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 56, maybe hot
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       94 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_1047 = VDEF <.MEM_1045>
  MEM[(struct BitPermutationTrafficPatternD.33927 *)result_80].D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV28BitPermutationTrafficPatternD.33952 + 16B];
  # RANGE [-2147483647, -1]
  _446 = -nodes_65(D);
  # RANGE [0, 2147483647] NONZERO 2147483647
  _795 = nodes_65(D) & _446;
  if (nodes_65(D) != _795)
    goto <bb 97>;
  else
    goto <bb 105>;
;;    succ:       97 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                105 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       96 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __outD.54076 => &_ZSt4coutD.22587
  # DEBUG __sD.54075 => "Error: Bit permutation traffic patterns require the number of "
  # DEBUG __sD.45168 => "Error: Bit permutation traffic patterns require the number of "
  [LP 76] # .MEM_1048 = VDEF <.MEM_1047>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Bit permutation traffic patterns require the number of ", 62);
;;    succ:       98 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                102 (EH,EXECUTABLE)

;;   basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 97, next block 99, flags: (NEW, REACHABLE)
;;    pred:       97 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.54074 => &_ZSt4coutD.22587
  # DEBUG __sD.54073 => "nodes to be a power of two."
  # DEBUG __sD.45172 => "nodes to be a power of two."
  [LP 77] # .MEM_1049 = VDEF <.MEM_1048>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "nodes to be a power of two.", 27);
  goto <bb 100>;
;;    succ:       100 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                99 (EH,EXECUTABLE)

;;   basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 98, next block 100, flags: (NEW)
;;    pred:       98 (EH,EXECUTABLE)
<L199>: [LP 77]
  goto <bb 103> (<L169>);
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 99, next block 101, flags: (NEW, REACHABLE)
;;    pred:       98 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54072 => &_ZSt4coutD.22587
  # DEBUG __pfD.54071 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 51] # .MEM_1050 = VDEF <.MEM_1049>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (&_ZSt4coutD.22587);
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                101 (EH,EXECUTABLE)

;;   basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 100, next block 102, flags: (NEW)
;;    pred:       100 (EH,EXECUTABLE)
<L200>: [LP 51]
  goto <bb 103> (<L169>);
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 101, next block 103, flags: (NEW)
;;    pred:       97 (EH,EXECUTABLE)
<L198>: [LP 76]
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       102 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                99 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                101 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_953 = PHI <.MEM_1048(102), .MEM_1049(99), .MEM_1050(101)>
<L169>:
  # DEBUG D#68ptD.0 => &D#768ptD.0->D.33950
  # DEBUG thisD.54069 => D#68ptD.0
  # DEBUG D#67ptD.0 => &D#68ptD.0->D.33923
  # DEBUG thisD.54070 => D#67ptD.0
  # .MEM_1055 = VDEF <.MEM_953>
  MEM[(struct  &)result_80] ={v} {CLOBBER};
  [LP 11] resx 99
;;    succ:       104 (EH,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 103, next block 105, flags: (NEW)
;;    pred:       103 (EH,EXECUTABLE)
<L201>: [LP 11]
  goto <bb 410> (<L125>);
;;    succ:       410 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 56, maybe hot
;;    prev block 104, next block 106, flags: (NEW, REACHABLE)
;;    pred:       96 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_450 = VDEF <.MEM_1047>
  MEM[(struct ShuffleTrafficPatternD.34046 *)result_80].D.34072.D.33950.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV21ShuffleTrafficPatternD.34074 + 16B];
  # DEBUG resultD.36903 => result_80
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 0, count 0, freq 56, maybe hot
;;    prev block 105, next block 107, flags: (NEW, REACHABLE)
;;    pred:       91 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50656 => &pattern_nameD.36150
  # DEBUG __rhsD.50657 => "randperm"
  [LP 78] # .MEM_451 = VDEF <.MEM_448>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _81 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "randperm");
  goto <bb 108>;
;;    succ:       108 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                107 (EH,EXECUTABLE)

;;   basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 106, next block 108, flags: (NEW)
;;    pred:       106 (EH,EXECUTABLE)
<L202>: [LP 78]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 108, loop depth 0, count 0, freq 56, maybe hot
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       106 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_81 == 0)
    goto <bb 109>;
  else
    goto <bb 149>;
;;    succ:       109 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                149 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 109, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       108 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG perm_seedD.36965 => -1
  # DEBUG thisD.50659 => &paramsD.36157
  # VUSE <.MEM_451>
  # PT = nonlocal escaped null 
  _83 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#112ptD.0 => &paramsD.36157
  # DEBUG thisD.45558 => D#112ptD.0
  # DEBUG thisD.45520 => NULL
  # DEBUG __iD.45519 => NULL
  # VUSE <.MEM_451>
  # PT = nonlocal escaped null 
  _183 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#113ptD.0 => &paramsD.36157
  # DEBUG thisD.45554 => D#113ptD.0
  # DEBUG thisD.45536 => NULL
  # DEBUG __iD.45535 => NULL
  # DEBUG __lhsD.50661 => NULL
  # DEBUG __rhsD.50660 => NULL
  # DEBUG thisD.45547 => NULL
  # DEBUG thisD.45545 => NULL
  if (_83 == _183)
    goto <bb 110>;
  else
    goto <bb 145>;
;;    succ:       110 [30.2%]  (TRUE_VALUE,EXECUTABLE)
;;                145 [69.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 110, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 109, next block 111, flags: (NEW, REACHABLE)
;;    pred:       109 [30.2%]  (TRUE_VALUE,EXECUTABLE)
  if (config_85(D) != 0B)
    goto <bb 111>;
  else
    goto <bb 139>;
;;    succ:       111 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                139 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 110, next block 112, flags: (NEW, REACHABLE)
;;    pred:       110 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#109ptD.0 => &D.36967
  # DEBUG thisD.50663 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG D#322ptD.0 => &D.36967
  # DEBUG thisD.54082 => &D.36968
  # DEBUG __sD.54083 => "perm_seed"
  # DEBUG __aD.54084 => D#322ptD.0
  # DEBUG D#321ptD.0 => D#322ptD.0
  # DEBUG thisD.54094 => &D.36968
  # DEBUG D#319ptD.0 => &D.36968._M_dataplusD.11519
  # DEBUG D#151ptD.0 => D#321ptD.0
  # DEBUG thisD.54097 => D#319ptD.0
  # DEBUG __datD.54096 => &D.36968.D.11539._M_local_bufD.11541
  # DEBUG __aD.54095 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#319ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_1057 = VDEF <.MEM_451>
  MEM[(struct _Alloc_hiderD.11518 *)&D.36968]._M_pD.11525 = &D.36968.D.11539._M_local_bufD.11541;
  # DEBUG __sD.54093 => "perm_seed"
  # DEBUG thisD.54087 => &D.36968
  # DEBUG __begD.54086 => "perm_seed"
  # DEBUG __endD.54085 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG thisD.54091 => &D.36968
  # DEBUG __begD.54090 => "perm_seed"
  # DEBUG __endD.54089 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG thisD.54098 => &D.36968
  # DEBUG __begD.54099 => "perm_seed"
  # DEBUG __endD.54100 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG __ptrD.49230 => "perm_seed"
  # DEBUG __firstD.54124 => "perm_seed"
  # DEBUG __lastD.54123 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG D#438ptD.0 => &__firstD.54124
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.54126 => "perm_seed"
  # DEBUG __lastD.54125 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG __dnewD.54101 => 9
  # DEBUG D#2ptD.0 => &D.36968
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.54104 => &D.36968.D.11539._M_local_bufD.11541
  # DEBUG __k1D.54103 => "perm_seed"
  # DEBUG __k2D.54102 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG __dD.54107 => &D.36968.D.11539._M_local_bufD.11541
  # DEBUG __sD.54106 => "perm_seed"
  # DEBUG __nD.54105 => 9
  # DEBUG __s1D.54110 => &D.36968.D.11539._M_local_bufD.11541
  # DEBUG __s2D.54109 => "perm_seed"
  # DEBUG __nD.54108 => 9
  # .MEM_1063 = VDEF <.MEM_1057>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memcpyD.992 (&D.36968.D.11539._M_local_bufD.11541, "perm_seed", 9);
  # DEBUG thisD.54114 => &D.36968
  # DEBUG __nD.54113 => 9
  # DEBUG D#4ptD.0 => &D.36968
  # DEBUG __lengthD.54116 => 9
  # DEBUG thisD.54115 => D#4ptD.0
  # .MEM_1064 = VDEF <.MEM_1063>
  MEM[(size_typeD.11502 *)&D.36968 + 8B] = 9;
  # DEBUG D#2ptD.0 => &D.36968
  # DEBUG thisD.44971 => D#2ptD.0
  # DEBUG __c1D.54118 => &MEM[(voidD.45 *)&D.36968 + 25B]
  # DEBUG __c2D.54117 => D#32ptD.0
  # .MEM_1065 = VDEF <.MEM_1064>
  MEM[(char_typeD.6629 &)&D.36968 + 25] = 0;
  # DEBUG D#771ptD.0 => {CLOBBER}
  # DEBUG __dnewD.54101 => D#771ptD.0
  [LP 79] # .MEM_87 = VDEF <.MEM_1065>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  D.36969 = _ZNK13Configuration6GetStrERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33783 (config_85(D), &D.36968); [return slot optimization]
;;    succ:       416 (EH,EXECUTABLE)
;;                112 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 112, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 111, next block 113, flags: (NEW, REACHABLE)
;;    pred:       111 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __lhsD.50664 => &D.36969
  # DEBUG __rhsD.50665 => "time"
  [LP 14] # .MEM_452 = VDEF <.MEM_87>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _174 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&D.36969, "time");
;;    succ:       113 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                412 (EH,EXECUTABLE)

;;   basic block 113, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       112 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50684 => &D.36969
  # DEBUG thisD.50685 => &D.36969
  # DEBUG thisD.50694 => &D.36969
  # VUSE <.MEM_452>
  # PT = nonlocal escaped null 
  _89 = MEM[(charD.10 * *)&D.36969];
  # DEBUG D#2ptD.0 => &D.36969
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50695 => &D.36969
  if (&D.36969.D.11539._M_local_bufD.11541 != _89)
    goto <bb 114>;
  else
    goto <bb 115>;
;;    succ:       114 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                115 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 114, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 113, next block 115, flags: (NEW, REACHABLE)
;;    pred:       113 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36969.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50687 => &D.36969
  # DEBUG __sizeD.50686 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36969
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36969
  # DEBUG D#216ptD.0 => &D.36969._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50690 => _89
  # DEBUG __aD.50688 => D#214ptD.0
  # DEBUG __nD.50689 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50693 => _89
  # DEBUG thisD.50691 => D#210ptD.0
  # DEBUG D.50692 => D#211ptD.0
  # .MEM_453 = VDEF <.MEM_452>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_89);
;;    succ:       115 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 115, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 114, next block 116, flags: (NEW, REACHABLE)
;;    pred:       113 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                114 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_360 = PHI <.MEM_452(113), .MEM_453(114)>
  # DEBUG D#220ptD.0 => &D.36969._M_dataplusD.11519
  # DEBUG thisD.50696 => D#220ptD.0
  # DEBUG thisD.50697 => D#220ptD.0
  # DEBUG thisD.50698 => D#220ptD.0
  # .MEM_88 = VDEF <.MEM_360>
  D.36969 ={v} {CLOBBER};
  # DEBUG thisD.50669 => &D.36968
  # DEBUG thisD.50670 => &D.36968
  # DEBUG thisD.50679 => &D.36968
  # VUSE <.MEM_88>
  # PT = nonlocal escaped null { D.36968 } (escaped)
  _91 = MEM[(charD.10 * *)&D.36968];
  # DEBUG D#2ptD.0 => &D.36968
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50680 => &D.36968
  if (&D.36968.D.11539._M_local_bufD.11541 != _91)
    goto <bb 116>;
  else
    goto <bb 117>;
;;    succ:       116 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                117 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 116, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 115, next block 117, flags: (NEW, REACHABLE)
;;    pred:       115 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36968.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50672 => &D.36968
  # DEBUG __sizeD.50671 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36968
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36968
  # DEBUG D#216ptD.0 => &D.36968._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50675 => _91
  # DEBUG __aD.50673 => D#214ptD.0
  # DEBUG __nD.50674 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50678 => _91
  # DEBUG thisD.50676 => D#210ptD.0
  # DEBUG D.50677 => D#211ptD.0
  # .MEM_458 = VDEF <.MEM_88>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_91);
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 117, loop depth 0, count 0, freq 12, maybe hot
;;    prev block 116, next block 118, flags: (NEW, REACHABLE)
;;    pred:       115 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                116 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_361 = PHI <.MEM_88(115), .MEM_458(116)>
  # DEBUG D#220ptD.0 => &D.36968._M_dataplusD.11519
  # DEBUG thisD.50681 => D#220ptD.0
  # DEBUG thisD.50682 => D#220ptD.0
  # DEBUG thisD.50683 => D#220ptD.0
  # .MEM_90 = VDEF <.MEM_361>
  D.36968 ={v} {CLOBBER};
  # DEBUG thisD.50667 => &D.36967
  # DEBUG thisD.50668 => &D.36967
  if (_174 == 0)
    goto <bb 118>;
  else
    goto <bb 135>;
;;    succ:       118 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                135 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 118, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       117 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_92 = VDEF <.MEM_90>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _93 = timeD.7273 (0B);
  perm_seed_94 = (intD.9) _93;
  # DEBUG perm_seedD.36965 => perm_seed_94
  # DEBUG __outD.50699 => &_ZSt4coutD.22587
  # DEBUG __sD.50700 => "SEED: perm_seed="
  # DEBUG __sD.50701 => "SEED: perm_seed="
  [LP 80] # .MEM_463 = VDEF <.MEM_92>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "SEED: perm_seed=", 16);
  goto <bb 120>;
;;    succ:       120 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                119 (EH,EXECUTABLE)

;;   basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 118, next block 120, flags: (NEW)
;;    pred:       118 (EH,EXECUTABLE)
<L204>: [LP 80]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 120, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 119, next block 121, flags: (NEW, REACHABLE)
;;    pred:       118 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 81] # .MEM_95 = VDEF <.MEM_463>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _96 = _ZNSolsEiD.20513 (&_ZSt4coutD.22587, perm_seed_94);
  goto <bb 122>;
;;    succ:       121 (EH,EXECUTABLE)
;;                122 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 120, next block 122, flags: (NEW)
;;    pred:       120 (EH,EXECUTABLE)
<L205>: [LP 81]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 122, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 121, next block 123, flags: (NEW, REACHABLE)
;;    pred:       120 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50703 => _96
  # DEBUG __pfD.50704 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  # DEBUG __osD.54127 => _96
  # VUSE <.MEM_95>
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _811 = _96->_vptr.basic_ostreamD.20605;
  # VUSE <.MEM_95>
  _812 = MEM[(long intD.12 *)_811 + -24B];
  # RANGE [0, 18446744073709551615]
  _813 = (sizetype) _812;
  # PT = nonlocal escaped 
  _814 = _96 + _813;
  # DEBUG thisD.54130 => _814
  # DEBUG __cD.54131 => 10
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _464 = MEM[(const struct basic_iosD.3827 *)_814]._M_ctypeD.19829;
  # DEBUG __fD.54132 => _464
  if (_464 == 0B)
    goto <bb 123>;
  else
    goto <bb 125>;
;;    succ:       123 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                125 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 122, next block 124, flags: (NEW, REACHABLE)
;;    pred:       122 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 82] # .MEM_1074 = VDEF <.MEM_95>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__throw_bad_castvD.3958 ();
;;    succ:       124 (EH,EXECUTABLE)

;;   basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 123, next block 125, flags: (NEW)
;;    pred:       123 (EH,EXECUTABLE)
<L206>: [LP 82]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 125, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 124, next block 126, flags: (NEW, REACHABLE)
;;    pred:       122 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.54134 => _464
  # DEBUG __cD.54133 => 10
  # VUSE <.MEM_95>
  _819 = MEM[(const struct ctypeD.7063 *)_464]._M_widen_okD.16744;
  if (_819 != 0)
    goto <bb 126>;
  else
    goto <bb 127>;
;;    succ:       126 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                127 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 126, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 125, next block 127, flags: (NEW, REACHABLE)
;;    pred:       125 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_95>
  _822 = MEM[(const struct ctypeD.7063 *)_464]._M_widenD.16745[10];
  goto <bb 131>;
;;    succ:       131 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 127, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 126, next block 128, flags: (NEW, REACHABLE)
;;    pred:       125 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.54136 => _464
  # DEBUG __cD.54137 => 10
  [LP 83] # .MEM_1067 = VDEF <.MEM_95>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.16852 (_464);
  goto <bb 129>;
;;    succ:       129 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                128 (EH,EXECUTABLE)

;;   basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 127, next block 129, flags: (NEW)
;;    pred:       127 (EH,EXECUTABLE)
<L207>: [LP 83]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 129, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 128, next block 130, flags: (NEW, REACHABLE)
;;    pred:       127 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_1067>
  # PT = nonlocal escaped 
  _827 = MEM[(const struct ctypeD.7063 *)_464].D.16885._vptr.facetD.13503;
  # VUSE <.MEM_1067>
  # PT = nonlocal escaped 
  _828 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_827 + 48B];
  [LP 84] # .MEM_1068 = VDEF <.MEM_1067>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _830 = OBJ_TYPE_REF(_828;(const struct ctypeD.7063)_464->6) (_464, 10);
  goto <bb 131>;
;;    succ:       131 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                130 (EH,EXECUTABLE)

;;   basic block 130, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 129, next block 131, flags: (NEW)
;;    pred:       129 (EH,EXECUTABLE)
<L208>: [LP 84]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 131, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 130, next block 132, flags: (NEW, REACHABLE)
;;    pred:       126 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                129 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _825 = PHI <_822(126), _830(129)>
  # .MEM_956 = PHI <.MEM_95(126), .MEM_1068(129)>
  # RANGE [-128, 127]
  _816 = (intD.9) _825;
  [LP 85] # .MEM_1071 = VDEF <.MEM_956>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _817 = _ZNSo3putEcD.20540 (_96, _816);
  goto <bb 133>;
;;    succ:       133 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                132 (EH,EXECUTABLE)

;;   basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 131, next block 133, flags: (NEW)
;;    pred:       131 (EH,EXECUTABLE)
<L209>: [LP 85]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 133, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 132, next block 134, flags: (NEW, REACHABLE)
;;    pred:       131 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.54128 => _817
  [LP 86] # .MEM_1072 = VDEF <.MEM_1071>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSo5flushEvD.20551 (_817);
  goto <bb 146>;
;;    succ:       146 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                134 (EH,EXECUTABLE)

;;   basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 133, next block 135, flags: (NEW)
;;    pred:       133 (EH,EXECUTABLE)
<L210>: [LP 86]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 135, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 134, next block 136, flags: (NEW, REACHABLE)
;;    pred:       117 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#109ptD.0 => &D.36971
  # DEBUG thisD.50706 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG D#322ptD.0 => &D.36971
  # DEBUG thisD.54139 => &D.36972
  # DEBUG __sD.54140 => "perm_seed"
  # DEBUG __aD.54141 => D#322ptD.0
  # DEBUG D#321ptD.0 => D#322ptD.0
  # DEBUG thisD.54151 => &D.36972
  # DEBUG D#319ptD.0 => &D.36972._M_dataplusD.11519
  # DEBUG D#151ptD.0 => D#321ptD.0
  # DEBUG thisD.54154 => D#319ptD.0
  # DEBUG __datD.54153 => &D.36972.D.11539._M_local_bufD.11541
  # DEBUG __aD.54152 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#319ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_1075 = VDEF <.MEM_90>
  MEM[(struct _Alloc_hiderD.11518 *)&D.36972]._M_pD.11525 = &D.36972.D.11539._M_local_bufD.11541;
  # DEBUG __sD.54150 => "perm_seed"
  # DEBUG thisD.54144 => &D.36972
  # DEBUG __begD.54143 => "perm_seed"
  # DEBUG __endD.54142 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG thisD.54148 => &D.36972
  # DEBUG __begD.54147 => "perm_seed"
  # DEBUG __endD.54146 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG thisD.54155 => &D.36972
  # DEBUG __begD.54156 => "perm_seed"
  # DEBUG __endD.54157 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG __ptrD.49230 => "perm_seed"
  # DEBUG __firstD.54181 => "perm_seed"
  # DEBUG __lastD.54180 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG D#438ptD.0 => &__firstD.54181
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.54183 => "perm_seed"
  # DEBUG __lastD.54182 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG __dnewD.54158 => 9
  # DEBUG D#2ptD.0 => &D.36972
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.54161 => &D.36972.D.11539._M_local_bufD.11541
  # DEBUG __k1D.54160 => "perm_seed"
  # DEBUG __k2D.54159 => &MEM[(voidD.45 *)"perm_seed" + 9B]
  # DEBUG __dD.54164 => &D.36972.D.11539._M_local_bufD.11541
  # DEBUG __sD.54163 => "perm_seed"
  # DEBUG __nD.54162 => 9
  # DEBUG __s1D.54167 => &D.36972.D.11539._M_local_bufD.11541
  # DEBUG __s2D.54166 => "perm_seed"
  # DEBUG __nD.54165 => 9
  # .MEM_1081 = VDEF <.MEM_1075>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memcpyD.992 (&D.36972.D.11539._M_local_bufD.11541, "perm_seed", 9);
  # DEBUG thisD.54171 => &D.36972
  # DEBUG __nD.54170 => 9
  # DEBUG D#4ptD.0 => &D.36972
  # DEBUG __lengthD.54173 => 9
  # DEBUG thisD.54172 => D#4ptD.0
  # .MEM_1082 = VDEF <.MEM_1081>
  MEM[(size_typeD.11502 *)&D.36972 + 8B] = 9;
  # DEBUG D#2ptD.0 => &D.36972
  # DEBUG thisD.44971 => D#2ptD.0
  # DEBUG __c1D.54175 => &MEM[(voidD.45 *)&D.36972 + 25B]
  # DEBUG __c2D.54174 => D#32ptD.0
  # .MEM_1083 = VDEF <.MEM_1082>
  MEM[(char_typeD.6629 &)&D.36972 + 25] = 0;
  # DEBUG D#772ptD.0 => {CLOBBER}
  # DEBUG __dnewD.54158 => D#772ptD.0
  [LP 16] # .MEM_98 = VDEF <.MEM_1083>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  perm_seed_99 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33786 (config_85(D), &D.36972);
;;    succ:       421 (EH,EXECUTABLE)
;;                136 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 136, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 135, next block 137, flags: (NEW, REACHABLE)
;;    pred:       135 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG perm_seedD.36965 => perm_seed_99
  # DEBUG thisD.50709 => &D.36972
  # DEBUG thisD.50710 => &D.36972
  # DEBUG thisD.50719 => &D.36972
  # VUSE <.MEM_98>
  # PT = nonlocal escaped null { D.36972 } (escaped)
  _101 = MEM[(charD.10 * *)&D.36972];
  # DEBUG D#2ptD.0 => &D.36972
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50720 => &D.36972
  if (&D.36972.D.11539._M_local_bufD.11541 != _101)
    goto <bb 137>;
  else
    goto <bb 138>;
;;    succ:       137 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                138 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 137, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 136, next block 138, flags: (NEW, REACHABLE)
;;    pred:       136 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36972.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50712 => &D.36972
  # DEBUG __sizeD.50711 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36972
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36972
  # DEBUG D#216ptD.0 => &D.36972._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50715 => _101
  # DEBUG __aD.50713 => D#214ptD.0
  # DEBUG __nD.50714 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50718 => _101
  # DEBUG thisD.50716 => D#210ptD.0
  # DEBUG D.50717 => D#211ptD.0
  # .MEM_465 = VDEF <.MEM_98>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_101);
;;    succ:       138 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 138, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 137, next block 139, flags: (NEW, REACHABLE)
;;    pred:       136 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                137 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_362 = PHI <.MEM_98(136), .MEM_465(137)>
  # DEBUG D#220ptD.0 => &D.36972._M_dataplusD.11519
  # DEBUG thisD.50721 => D#220ptD.0
  # DEBUG thisD.50722 => D#220ptD.0
  # DEBUG thisD.50723 => D#220ptD.0
  # .MEM_100 = VDEF <.MEM_362>
  D.36972 ={v} {CLOBBER};
  # DEBUG thisD.50707 => &D.36971
  # DEBUG thisD.50708 => &D.36971
  goto <bb 146>;
;;    succ:       146 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 138, next block 140, flags: (NEW, REACHABLE)
;;    pred:       110 [0.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __outD.50724 => &_ZSt4coutD.22587
  # DEBUG __sD.50725 => "Error: Missing parameter for random permutation traffic pattern: "
  # DEBUG __sD.50726 => "Error: Missing parameter for random permutation traffic pattern: "
  [LP 87] # .MEM_485 = VDEF <.MEM_451>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Missing parameter for random permutation traffic pattern: ", 65);
  goto <bb 141>;
;;    succ:       141 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                140 (EH,EXECUTABLE)

;;   basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 139, next block 141, flags: (NEW)
;;    pred:       139 (EH,EXECUTABLE)
<L211>: [LP 87]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 141, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 140, next block 142, flags: (NEW, REACHABLE)
;;    pred:       139 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.50728 => &_ZSt4coutD.22587
  # DEBUG __strD.50729 => pattern_39(D)
  # VUSE <.MEM_485>
  _108 = MEM[(long unsigned intD.14 *)pattern_39(D) + 8B];
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44893 => D#1ptD.0
  _157 = (long intD.12) _108;
  # DEBUG thisD.44890 => pattern_39(D)
  # VUSE <.MEM_485>
  # PT = nonlocal escaped 
  _156 = MEM[(charD.10 * *)pattern_39(D)];
  # DEBUG D#2ptD.0 => pattern_39(D)
  # DEBUG thisD.44832 => D#2ptD.0
  [LP 88] # .MEM_486 = VDEF <.MEM_485>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _155 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, _156, _157);
  goto <bb 143>;
;;    succ:       143 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                142 (EH,EXECUTABLE)

;;   basic block 142, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 141, next block 143, flags: (NEW)
;;    pred:       141 (EH,EXECUTABLE)
<L212>: [LP 88]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 142, next block 144, flags: (NEW, REACHABLE)
;;    pred:       141 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50731 => _155
  # DEBUG __pfD.50732 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 89] # .MEM_487 = VDEF <.MEM_486>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (_155);
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                144 (EH,EXECUTABLE)

;;   basic block 144, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 143, next block 145, flags: (NEW)
;;    pred:       143 (EH,EXECUTABLE)
<L213>: [LP 89]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 145, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 144, next block 146, flags: (NEW, REACHABLE)
;;    pred:       109 [69.8%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.50737 => 0
  # DEBUG thisD.50738 => D#97ptD.0
  # DEBUG thisD.50734 => NULL
  # VUSE <.MEM_451>
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _109 = MEM[(charD.10 * *)_183];
  # DEBUG thisD.44828 => D#2ptD.0
  # DEBUG __nptrD.50527 => _109
  # .MEM_488 = VDEF <.MEM_451>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _245 = strtolD.28007 (_109, 0B, 10);
  perm_seed_241 = (intD.9) _245;
  # DEBUG perm_seedD.36965 => NULL
;;    succ:       146 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 146, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 145, next block 147, flags: (NEW, REACHABLE)
;;    pred:       133 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                145 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                138 [100.0%]  (FALLTHRU,EXECUTABLE)
  # perm_seed_2 = PHI <perm_seed_94(133), perm_seed_241(145), perm_seed_99(138)>
  # .MEM_16 = PHI <.MEM_1072(133), .MEM_488(145), .MEM_100(138)>
  # DEBUG perm_seedD.36965 => perm_seed_2
  [LP 90] # .MEM_112 = VDEF <.MEM_16>
  # PT = { D.54658 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_113 = _ZnwmD.2764 (40);
  goto <bb 148>;
;;    succ:       147 (EH,EXECUTABLE)
;;                148 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 146, next block 148, flags: (NEW)
;;    pred:       146 (EH,EXECUTABLE)
<L214>: [LP 90]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 148, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 147, next block 149, flags: (NEW, REACHABLE)
;;    pred:       146 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 17] # .MEM_114 = VDEF <.MEM_112>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN31RandomPermutationTrafficPatternC1EiiD.34965 (result_113, nodes_65(D), perm_seed_2);
  goto <bb 375>;
;;    succ:       425 (EH,EXECUTABLE)
;;                375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 149, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 148, next block 150, flags: (NEW, REACHABLE)
;;    pred:       108 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50740 => &pattern_nameD.36150
  # DEBUG __rhsD.50741 => "uniform"
  [LP 91] # .MEM_489 = VDEF <.MEM_451>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _111 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "uniform");
  goto <bb 151>;
;;    succ:       151 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                150 (EH,EXECUTABLE)

;;   basic block 150, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 149, next block 151, flags: (NEW)
;;    pred:       149 (EH,EXECUTABLE)
<L215>: [LP 91]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 151, loop depth 0, count 0, freq 16, maybe hot
;;    prev block 150, next block 152, flags: (NEW, REACHABLE)
;;    pred:       149 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_111 == 0)
    goto <bb 152>;
  else
    goto <bb 157>;
;;    succ:       152 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                157 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 152, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 151, next block 153, flags: (NEW, REACHABLE)
;;    pred:       151 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 92] # .MEM_116 = VDEF <.MEM_489>
  # PT = { D.54659 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_117 = _ZnwmD.2764 (16);
  goto <bb 154>;
;;    succ:       153 (EH,EXECUTABLE)
;;                154 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 153, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 152, next block 154, flags: (NEW)
;;    pred:       152 (EH,EXECUTABLE)
<L216>: [LP 92]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 154, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 153, next block 155, flags: (NEW, REACHABLE)
;;    pred:       152 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50743 => result_117
  # DEBUG nodesD.50744 => nodes_65(D)
  # DEBUG D#90ptD.0 => &MEM[(struct UniformRandomTrafficPatternD.35005 *)result_117].D.35031
  # DEBUG thisD.50746 => D#90ptD.0
  # DEBUG nodesD.50745 => nodes_65(D)
  # DEBUG D#84ptD.0 => &D#90ptD.0->D.35001
  # DEBUG thisD.50748 => D#84ptD.0
  # DEBUG nodesD.50747 => nodes_65(D)
  # .MEM_490 = VDEF <.MEM_116>
  result_117->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_491 = VDEF <.MEM_490>
  result_117->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 155>;
  else
    goto <bb 156>;
;;    succ:       155 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                156 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 154, next block 156, flags: (NEW, REACHABLE)
;;    pred:       154 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#84ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 18] # .MEM_494 = VDEF <.MEM_491>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       427 (EH,EXECUTABLE)

;;   basic block 156, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 155, next block 157, flags: (NEW, REACHABLE)
;;    pred:       154 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_493 = VDEF <.MEM_491>
  MEM[(struct UniformRandomTrafficPatternD.35005 *)result_117].D.35031.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV27UniformRandomTrafficPatternD.35033 + 16B];
  # DEBUG resultD.36903 => result_117
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 157, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 156, next block 158, flags: (NEW, REACHABLE)
;;    pred:       151 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50749 => &pattern_nameD.36150
  # DEBUG __rhsD.50750 => "background"
  [LP 93] # .MEM_495 = VDEF <.MEM_489>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _118 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "background");
  goto <bb 159>;
;;    succ:       159 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                158 (EH,EXECUTABLE)

;;   basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 157, next block 159, flags: (NEW)
;;    pred:       157 (EH,EXECUTABLE)
<L217>: [LP 93]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 159, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 158, next block 160, flags: (NEW, REACHABLE)
;;    pred:       157 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_118 == 0)
    goto <bb 160>;
  else
    goto <bb 178>;
;;    succ:       160 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                178 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 160, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 159, next block 161, flags: (NEW, REACHABLE)
;;    pred:       159 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_495>
  # PT = nonlocal escaped null 
  _280 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.50753 => 0
  # DEBUG thisD.50754 => D#97ptD.0
  [LP 94] # .MEM_120 = VDEF <.MEM_495>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  excludesD.37002 = _Z12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33850 (_280); [return slot optimization]
  goto <bb 162>;
;;    succ:       161 (EH,EXECUTABLE)
;;                162 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 160, next block 162, flags: (NEW)
;;    pred:       160 (EH,EXECUTABLE)
<L218>: [LP 94]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 162, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 161, next block 163, flags: (NEW, REACHABLE)
;;    pred:       160 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54184 => &D.37014
  # DEBUG __xD.54185 => &excludesD.37002
  # DEBUG D#368ptD.0 => &excludesD.37002.D.34940
  # DEBUG thisD.48189 => D#368ptD.0
  # DEBUG __aD.48187 => NULL
  # VUSE <.MEM_120>
  # PT = nonlocal escaped null 
  _848 = MEM[(intD.9 * *)&excludesD.37002];
  # DEBUG D#99ptD.0 => &excludesD.37002
  # VUSE <.MEM_120>
  # PT = nonlocal escaped null 
  _849 = MEM[(intD.9 * *)&excludesD.37002 + 8B];
  # DEBUG D#99ptD.0 => &excludesD.37002
  # DEBUG thisD.54186 => D#99ptD.0
  # DEBUG thisD.54187 => D#99ptD.0
  _850 = (long intD.12) _849;
  _851 = (long intD.12) _848;
  _852 = _850 - _851;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _853 = _852 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _854 = (size_typeD.34516) _853;
  # DEBUG D#370ptD.0 => &D.37014.D.34940
  # DEBUG thisD.54190 => D#370ptD.0
  # DEBUG __nD.54189 => NULL
  # DEBUG __aD.54188 => NULL
  # DEBUG D#367ptD.0 => &D#370ptD.0->_M_implD.34431
  # DEBUG thisD.54192 => D#367ptD.0
  # DEBUG __aD.54191 => NULL
  # DEBUG thisD.46561 => D#367ptD.0
  # DEBUG __aD.46562 => NULL
  # DEBUG thisD.46558 => D#367ptD.0
  # DEBUG D.46559 => NULL
  # .MEM_1085 = VDEF <.MEM_120>
  MEM[(struct _Vector_implD.34408 *)&D.37014]._M_startD.34433 = 0B;
  # .MEM_1086 = VDEF <.MEM_1085>
  MEM[(struct _Vector_implD.34408 *)&D.37014]._M_finishD.34434 = 0B;
  # .MEM_1087 = VDEF <.MEM_1086>
  MEM[(struct _Vector_implD.34408 *)&D.37014]._M_end_of_storageD.34435 = 0B;
  # DEBUG thisD.54194 => D#370ptD.0
  # DEBUG __nD.54193 => NULL
  # DEBUG D#346ptD.0 => D#370ptD.0
  # DEBUG __nD.54225 => _854
  # DEBUG thisD.54226 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (_854 != 0)
    goto <bb 164>;
  else
    goto <bb 163>;
;;    succ:       164 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                163 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 162, next block 164, flags: (NEW)
;;    pred:       162 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_1208 = (long unsigned intD.14) _852;
  goto <bb 169>;
;;    succ:       169 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 164, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 163, next block 165, flags: (NEW, REACHABLE)
;;    pred:       162 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.54229 => _854
  # DEBUG __aD.54228 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.54232 => _854
  # DEBUG thisD.54230 => D#340ptD.0
  # DEBUG D.54231 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  if (_854 > 4611686018427387903)
    goto <bb 165>;
  else
    goto <bb 166>;
;;    succ:       165 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                166 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 164, next block 166, flags: (NEW, REACHABLE)
;;    pred:       164 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 95] # .MEM_1089 = VDEF <.MEM_1087>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt17__throw_bad_allocvD.3957 ();
;;    succ:       436 (EH,EXECUTABLE)

;;   basic block 166, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 165, next block 167, flags: (NEW, REACHABLE)
;;    pred:       164 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _121 = (long unsigned intD.14) _852;
  [LP 96] # .MEM_1088 = VDEF <.MEM_1087>
  # PT = { D.54660 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _867 = _ZnwmD.2764 (_121);
  goto <bb 168>;
;;    succ:       168 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                167 (EH,EXECUTABLE)

;;   basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 166, next block 168, flags: (NEW)
;;    pred:       166 (EH,EXECUTABLE)
<L220>: [LP 96]
  goto <bb 437> (<L135>);
;;    succ:       437 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 168, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 167, next block 169, flags: (NEW)
;;    pred:       166 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_1088>
  pretmp_1213 = MEM[(intD.9 * *)&excludesD.37002 + 8B];
  # VUSE <.MEM_1088>
  pretmp_10 = MEM[(struct _Vector_baseD.34198 *)&excludesD.37002]._M_implD.34431._M_startD.34433;
  pretmp_1207 = (long intD.12) pretmp_1213;
  pretmp_1209 = (long intD.12) pretmp_10;
  pretmp_740 = pretmp_1207 - pretmp_1209;
  pretmp_978 = pretmp_740 /[ex] 4;
  pretmp_840 = (long unsigned intD.14) pretmp_740;
;;    succ:       169 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 169, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 168, next block 170, flags: (NEW, REACHABLE)
;;    pred:       163 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                168 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.54660 } (escaped heap)
  # iftmp.79_868 = PHI <0B(163), _867(168)>
  # .MEM_959 = PHI <.MEM_1087(163), .MEM_1088(168)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_1206 = PHI <pretmp_1208(163), _121(168)>
  # PT = nonlocal escaped null 
  # prephitmp_7 = PHI <_848(163), pretmp_10(168)>
  # RANGE [-2305843009213693952, 2305843009213693951]
  # prephitmp_843 = PHI <_853(163), pretmp_978(168)>
  # prephitmp_837 = PHI <pretmp_1208(163), pretmp_840(168)>
  # .MEM_1091 = VDEF <.MEM_959>
  MEM[(struct _Vector_baseD.34198 *)&D.37014]._M_implD.34431._M_startD.34433 = iftmp.79_868;
  # .MEM_1092 = VDEF <.MEM_1091>
  MEM[(struct _Vector_baseD.34198 *)&D.37014]._M_implD.34431._M_finishD.34434 = iftmp.79_868;
  # PT = null { D.54660 } (escaped heap)
  _857 = iftmp.79_868 + prephitmp_1206;
  # .MEM_1093 = VDEF <.MEM_1092>
  MEM[(struct _Vector_baseD.34198 *)&D.37014]._M_implD.34431._M_end_of_storageD.34435 = _857;
  # DEBUG D#369ptD.0 => &D.37014.D.34940
  # DEBUG thisD.48172 => D#369ptD.0
  # DEBUG D#784ptD.0 => MEM[(intD.9 * *)&excludesD.37002 + 8B]
  # DEBUG D#114ptD.0 => &excludesD.37002
  # DEBUG thisD.48170 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # DEBUG D#783ptD.0 => MEM[(intD.9 * *)&excludesD.37002]
  # DEBUG D#115ptD.0 => &excludesD.37002
  # DEBUG thisD.48167 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __firstD.48193 => D#783ptD.0
  # DEBUG __lastD.48194 => D#784ptD.0
  # DEBUG __resultD.54196 => NULL
  # DEBUG D.54195 => D#323ptD.0
  # DEBUG __firstD.48164 => D#783ptD.0
  # DEBUG __lastD.48165 => D#784ptD.0
  # DEBUG __resultD.54199 => NULL
  # DEBUG __assignableD.54204 => 1
  # DEBUG __firstD.47652 => D#783ptD.0
  # DEBUG __lastD.47653 => D#784ptD.0
  # DEBUG __resultD.54205 => NULL
  # DEBUG __firstD.47582 => D#783ptD.0
  # DEBUG __lastD.47581 => D#784ptD.0
  # DEBUG __resultD.54208 => NULL
  # DEBUG __itD.47553 => D#784ptD.0
  # DEBUG __it$_M_currentD.47523 => D#784ptD.0
  # DEBUG __itD.47555 => D#783ptD.0
  # DEBUG __it$_M_currentD.47519 => D#783ptD.0
  # DEBUG __firstD.47528 => D#783ptD.0
  # DEBUG __lastD.47529 => D#784ptD.0
  # DEBUG __resultD.54211 => NULL
  # DEBUG __itD.47494 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.47514 => D#784ptD.0
  # DEBUG __itD.47492 => D#784ptD.0
  # DEBUG thisD.46571 => NULL
  # DEBUG __itD.47516 => D#783ptD.0
  # DEBUG __itD.47488 => D#783ptD.0
  # DEBUG thisD.46571 => NULL
  # DEBUG __firstD.54216 => D#783ptD.0
  # DEBUG __lastD.54215 => D#784ptD.0
  # DEBUG __resultD.54214 => NULL
  # DEBUG __simpleD.54220 => 1
  # DEBUG __firstD.54223 => D#783ptD.0
  # DEBUG __lastD.54222 => D#784ptD.0
  # DEBUG __resultD.54221 => NULL
  # DEBUG D#782ptD.0 => (long intD.12) D#784ptD.0
  # DEBUG D#781ptD.0 => (long intD.12) D#783ptD.0
  # DEBUG D#780ptD.0 => D#782ptD.0 - D#781ptD.0
  # DEBUG _NumD.54224 => D#780ptD.0 /[ex] 4
  if (prephitmp_843 != 0)
    goto <bb 170>;
  else
    goto <bb 171>;
;;    succ:       170 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                171 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 170, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 169, next block 171, flags: (NEW, REACHABLE)
;;    pred:       169 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1094 = VDEF <.MEM_1093>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memmoveD.995 (iftmp.79_868, prephitmp_7, prephitmp_837);
;;    succ:       171 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 171, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 170, next block 172, flags: (NEW, REACHABLE)
;;    pred:       169 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                170 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_960 = PHI <.MEM_1093(169), .MEM_1094(170)>
  # PT = null { D.54660 } (escaped heap)
  _866 = iftmp.79_868 + prephitmp_837;
  # .MEM_1095 = VDEF <.MEM_960>
  D.37014.D.34940._M_implD.34431._M_finishD.34434 = _866;
  [LP 97] # .MEM_122 = VDEF <.MEM_1095>
  # PT = { D.54661 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_123 = _ZnwmD.2764 (64);
;;    succ:       431 (EH,EXECUTABLE)
;;                172 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 172, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 171, next block 173, flags: (NEW, REACHABLE)
;;    pred:       171 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 22] # .MEM_124 = VDEF <.MEM_122>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN31UniformBackgroundTrafficPatternC1EiSt6vectorIiSaIiEED.35905 (result_123, nodes_65(D), &D.37014);
;;    succ:       429 (EH,EXECUTABLE)
;;                173 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 173, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 172, next block 174, flags: (NEW, REACHABLE)
;;    pred:       172 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG resultD.36903 => result_123
  # DEBUG thisD.50771 => &D.37014
  # DEBUG D#167ptD.0 => &D.37014.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D.37014.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D.37014.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D.37014.D.34940
  # DEBUG thisD.50772 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_124>
  # PT = nonlocal escaped null { D.54660 } (escaped heap)
  _127 = MEM[(struct _Vector_baseD.34198 *)&D.37014]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _127
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.50775 => D#168ptD.0
  # DEBUG __pD.50774 => _127
  # DEBUG __nD.50773 => D#161ptD.0
  if (_127 != 0B)
    goto <bb 174>;
  else
    goto <bb 175>;
;;    succ:       174 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                175 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 174, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 173, next block 175, flags: (NEW, REACHABLE)
;;    pred:       173 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.50779 => _127
  # DEBUG __aD.50777 => D#157ptD.0
  # DEBUG __nD.50778 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.50782 => _127
  # DEBUG thisD.50780 => D#153ptD.0
  # DEBUG D.50781 => D#154ptD.0
  # .MEM_496 = VDEF <.MEM_124>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_127);
;;    succ:       175 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 175, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 174, next block 176, flags: (NEW, REACHABLE)
;;    pred:       173 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                174 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_363 = PHI <.MEM_124(173), .MEM_496(174)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.50783 => D#160ptD.0
  # DEBUG thisD.50784 => D#160ptD.0
  # DEBUG thisD.50785 => D#160ptD.0
  # .MEM_126 = VDEF <.MEM_363>
  D.37014 ={v} {CLOBBER};
  # DEBUG thisD.50756 => &excludesD.37002
  # DEBUG D#167ptD.0 => &excludesD.37002.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => excludesD.37002.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => excludesD.37002.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &excludesD.37002.D.34940
  # DEBUG thisD.50757 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_126>
  # PT = nonlocal escaped null 
  _84 = MEM[(struct _Vector_baseD.34198 *)&excludesD.37002]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _84
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.50760 => D#168ptD.0
  # DEBUG __pD.50759 => _84
  # DEBUG __nD.50758 => D#161ptD.0
  if (_84 != 0B)
    goto <bb 176>;
  else
    goto <bb 177>;
;;    succ:       176 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                177 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 176, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 175, next block 177, flags: (NEW, REACHABLE)
;;    pred:       175 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.50764 => _84
  # DEBUG __aD.50762 => D#157ptD.0
  # DEBUG __nD.50763 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.50767 => _84
  # DEBUG thisD.50765 => D#153ptD.0
  # DEBUG D.50766 => D#154ptD.0
  # .MEM_502 = VDEF <.MEM_126>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_84);
;;    succ:       177 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 177, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 176, next block 178, flags: (NEW, REACHABLE)
;;    pred:       175 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                176 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_364 = PHI <.MEM_126(175), .MEM_502(176)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.50768 => D#160ptD.0
  # DEBUG thisD.50769 => D#160ptD.0
  # DEBUG thisD.50770 => D#160ptD.0
  # .MEM_128 = VDEF <.MEM_364>
  excludesD.37002 ={v} {CLOBBER};
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 178, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 177, next block 179, flags: (NEW, REACHABLE)
;;    pred:       159 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50786 => &pattern_nameD.36150
  # DEBUG __rhsD.50787 => "diagonal"
  [LP 98] # .MEM_520 = VDEF <.MEM_495>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _125 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "diagonal");
  goto <bb 180>;
;;    succ:       180 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                179 (EH,EXECUTABLE)

;;   basic block 179, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 178, next block 180, flags: (NEW)
;;    pred:       178 (EH,EXECUTABLE)
<L222>: [LP 98]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 180, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 179, next block 181, flags: (NEW, REACHABLE)
;;    pred:       178 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_125 == 0)
    goto <bb 181>;
  else
    goto <bb 186>;
;;    succ:       181 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                186 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 181, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 180, next block 182, flags: (NEW, REACHABLE)
;;    pred:       180 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 99] # .MEM_134 = VDEF <.MEM_520>
  # PT = { D.54662 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_135 = _ZnwmD.2764 (16);
  goto <bb 183>;
;;    succ:       182 (EH,EXECUTABLE)
;;                183 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 182, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 181, next block 183, flags: (NEW)
;;    pred:       181 (EH,EXECUTABLE)
<L223>: [LP 99]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 183, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 182, next block 184, flags: (NEW, REACHABLE)
;;    pred:       181 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50789 => result_135
  # DEBUG nodesD.50790 => nodes_65(D)
  # DEBUG D#91ptD.0 => &MEM[(struct DiagonalTrafficPatternD.35918 *)result_135].D.35944
  # DEBUG thisD.50792 => D#91ptD.0
  # DEBUG nodesD.50791 => nodes_65(D)
  # DEBUG D#84ptD.0 => &D#91ptD.0->D.35001
  # DEBUG thisD.50794 => D#84ptD.0
  # DEBUG nodesD.50793 => nodes_65(D)
  # .MEM_521 = VDEF <.MEM_134>
  result_135->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_522 = VDEF <.MEM_521>
  result_135->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 184>;
  else
    goto <bb 185>;
;;    succ:       184 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                185 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 184, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 183, next block 185, flags: (NEW, REACHABLE)
;;    pred:       183 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#84ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 23] # .MEM_525 = VDEF <.MEM_522>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       441 (EH,EXECUTABLE)

;;   basic block 185, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 184, next block 186, flags: (NEW, REACHABLE)
;;    pred:       183 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_524 = VDEF <.MEM_522>
  MEM[(struct DiagonalTrafficPatternD.35918 *)result_135].D.35944.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV22DiagonalTrafficPatternD.35946 + 16B];
  # DEBUG resultD.36903 => result_135
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 186, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 185, next block 187, flags: (NEW, REACHABLE)
;;    pred:       180 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50795 => &pattern_nameD.36150
  # DEBUG __rhsD.50796 => "asymmetric"
  [LP 100] # .MEM_526 = VDEF <.MEM_520>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _136 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "asymmetric");
  goto <bb 188>;
;;    succ:       188 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                187 (EH,EXECUTABLE)

;;   basic block 187, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 186, next block 188, flags: (NEW)
;;    pred:       186 (EH,EXECUTABLE)
<L224>: [LP 100]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 188, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 187, next block 189, flags: (NEW, REACHABLE)
;;    pred:       186 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_136 == 0)
    goto <bb 189>;
  else
    goto <bb 194>;
;;    succ:       189 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                194 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 189, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 188, next block 190, flags: (NEW, REACHABLE)
;;    pred:       188 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 101] # .MEM_138 = VDEF <.MEM_526>
  # PT = { D.54663 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_139 = _ZnwmD.2764 (16);
  goto <bb 191>;
;;    succ:       190 (EH,EXECUTABLE)
;;                191 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 190, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 189, next block 191, flags: (NEW)
;;    pred:       189 (EH,EXECUTABLE)
<L225>: [LP 101]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 191, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 190, next block 192, flags: (NEW, REACHABLE)
;;    pred:       189 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50798 => result_139
  # DEBUG nodesD.50799 => nodes_65(D)
  # DEBUG D#92ptD.0 => &MEM[(struct AsymmetricTrafficPatternD.35948 *)result_139].D.35974
  # DEBUG thisD.50801 => D#92ptD.0
  # DEBUG nodesD.50800 => nodes_65(D)
  # DEBUG D#84ptD.0 => &D#92ptD.0->D.35001
  # DEBUG thisD.50803 => D#84ptD.0
  # DEBUG nodesD.50802 => nodes_65(D)
  # .MEM_527 = VDEF <.MEM_138>
  result_139->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_528 = VDEF <.MEM_527>
  result_139->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 192>;
  else
    goto <bb 193>;
;;    succ:       192 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                193 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 192, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 191, next block 193, flags: (NEW, REACHABLE)
;;    pred:       191 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#84ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 24] # .MEM_531 = VDEF <.MEM_528>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       443 (EH,EXECUTABLE)

;;   basic block 193, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 192, next block 194, flags: (NEW, REACHABLE)
;;    pred:       191 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_530 = VDEF <.MEM_528>
  MEM[(struct AsymmetricTrafficPatternD.35948 *)result_139].D.35974.D.35001._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV24AsymmetricTrafficPatternD.35976 + 16B];
  # DEBUG resultD.36903 => result_139
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 194, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 193, next block 195, flags: (NEW, REACHABLE)
;;    pred:       188 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50804 => &pattern_nameD.36150
  # DEBUG __rhsD.50805 => "taper64"
  [LP 102] # .MEM_532 = VDEF <.MEM_526>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _140 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "taper64");
  goto <bb 196>;
;;    succ:       196 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                195 (EH,EXECUTABLE)

;;   basic block 195, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 194, next block 196, flags: (NEW)
;;    pred:       194 (EH,EXECUTABLE)
<L226>: [LP 102]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 196, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 195, next block 197, flags: (NEW, REACHABLE)
;;    pred:       194 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_140 == 0)
    goto <bb 197>;
  else
    goto <bb 200>;
;;    succ:       197 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                200 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 197, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 196, next block 198, flags: (NEW, REACHABLE)
;;    pred:       196 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 103] # .MEM_143 = VDEF <.MEM_532>
  # PT = { D.54664 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_144 = _ZnwmD.2764 (16);
  goto <bb 199>;
;;    succ:       198 (EH,EXECUTABLE)
;;                199 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 198, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 197, next block 199, flags: (NEW)
;;    pred:       197 (EH,EXECUTABLE)
<L227>: [LP 103]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 199, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 198, next block 200, flags: (NEW, REACHABLE)
;;    pred:       197 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 25] # .MEM_145 = VDEF <.MEM_143>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN21Taper64TrafficPatternC1EiD.35998 (result_144, nodes_65(D));
  goto <bb 375>;
;;    succ:       445 (EH,EXECUTABLE)
;;                375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 200, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 199, next block 201, flags: (NEW, REACHABLE)
;;    pred:       196 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50807 => &pattern_nameD.36150
  # DEBUG __rhsD.50808 => "bad_dragon"
  [LP 104] # .MEM_533 = VDEF <.MEM_532>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _142 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "bad_dragon");
  goto <bb 202>;
;;    succ:       202 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                201 (EH,EXECUTABLE)

;;   basic block 201, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 200, next block 202, flags: (NEW)
;;    pred:       200 (EH,EXECUTABLE)
<L228>: [LP 104]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 202, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 201, next block 203, flags: (NEW, REACHABLE)
;;    pred:       200 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_142 == 0)
    goto <bb 203>;
  else
    goto <bb 231>;
;;    succ:       203 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                231 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 203, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 202, next block 204, flags: (NEW, REACHABLE)
;;    pred:       202 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG missing_paramsD.37046 => 0
  # DEBUG kD.37047 => -1
  # VUSE <.MEM_533>
  # PT = nonlocal escaped null 
  _282 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # VUSE <.MEM_533>
  # PT = nonlocal escaped null 
  _283 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50813 => D#98ptD.0
  # DEBUG thisD.50812 => D#98ptD.0
  _298 = (long intD.12) _283;
  _299 = (long intD.12) _282;
  _300 = _298 - _299;
  # RANGE [-288230376151711744, 288230376151711743]
  _301 = _300 /[ex] 32;
  if (_301 == 0)
    goto <bb 204>;
  else
    goto <bb 211>;
;;    succ:       204 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                211 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 204, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 203, next block 205, flags: (NEW, REACHABLE)
;;    pred:       203 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  if (config_85(D) != 0B)
    goto <bb 205>;
  else
    goto <bb 222>;
;;    succ:       205 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                222 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 205, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 204, next block 206, flags: (NEW, REACHABLE)
;;    pred:       204 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#109ptD.0 => &D.37049
  # DEBUG thisD.50815 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG D#322ptD.0 => &D.37049
  [LP 105] # .MEM_147 = VDEF <.MEM_533>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90D.47448 (&D.37050, "k");
  goto <bb 207>;
;;    succ:       206 (EH,EXECUTABLE)
;;                207 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 206, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 205, next block 207, flags: (NEW)
;;    pred:       205 (EH,EXECUTABLE)
<L229>: [LP 105]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 207, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 206, next block 208, flags: (NEW, REACHABLE)
;;    pred:       205 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 27] # .MEM_148 = VDEF <.MEM_147>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  k_149 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33786 (config_85(D), &D.37050);
;;    succ:       447 (EH,EXECUTABLE)
;;                208 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 208, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 207, next block 209, flags: (NEW, REACHABLE)
;;    pred:       207 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG kD.37047 => k_149
  # DEBUG thisD.50818 => &D.37050
  # DEBUG thisD.50819 => &D.37050
  # DEBUG thisD.50828 => &D.37050
  # VUSE <.MEM_148>
  # PT = nonlocal escaped null 
  _152 = MEM[(charD.10 * *)&D.37050];
  # DEBUG D#2ptD.0 => &D.37050
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50829 => &D.37050
  if (&D.37050.D.11539._M_local_bufD.11541 != _152)
    goto <bb 209>;
  else
    goto <bb 210>;
;;    succ:       209 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                210 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 209, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 208, next block 210, flags: (NEW, REACHABLE)
;;    pred:       208 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37050.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50821 => &D.37050
  # DEBUG __sizeD.50820 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37050
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37050
  # DEBUG D#216ptD.0 => &D.37050._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50824 => _152
  # DEBUG __aD.50822 => D#214ptD.0
  # DEBUG __nD.50823 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50827 => _152
  # DEBUG thisD.50825 => D#210ptD.0
  # DEBUG D.50826 => D#211ptD.0
  # .MEM_534 = VDEF <.MEM_148>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_152);
;;    succ:       210 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 210, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 209, next block 211, flags: (NEW, REACHABLE)
;;    pred:       208 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                209 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_365 = PHI <.MEM_148(208), .MEM_534(209)>
  # DEBUG D#220ptD.0 => &D.37050._M_dataplusD.11519
  # DEBUG thisD.50830 => D#220ptD.0
  # DEBUG thisD.50831 => D#220ptD.0
  # DEBUG thisD.50832 => D#220ptD.0
  # .MEM_151 = VDEF <.MEM_365>
  D.37050 ={v} {CLOBBER};
  # DEBUG thisD.50816 => &D.37049
  # DEBUG thisD.50817 => &D.37049
  # DEBUG kD.37047 => k_149
  # DEBUG missing_paramsD.37046 => 0
  # DEBUG nD.37051 => -1
  # VUSE <.MEM_151>
  # PT = nonlocal escaped null 
  _818 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # VUSE <.MEM_151>
  # PT = nonlocal escaped null 
  _877 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50842 => D#98ptD.0
  # DEBUG thisD.50841 => D#98ptD.0
  _878 = (long intD.12) _877;
  _879 = (long intD.12) _818;
  _1110 = _878 - _879;
  # RANGE [-288230376151711744, 288230376151711743]
  _1111 = _1110 /[ex] 32;
  # RANGE ~[288230376151711744, 18158513697557839871]
  _1112 = (size_typeD.36476) _1111;
  if (_1112 <= 1)
    goto <bb 213>;
  else
    goto <bb 219>;
;;    succ:       213 [47.5%]  (TRUE_VALUE,EXECUTABLE)
;;                219 [52.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 211, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 210, next block 212, flags: (NEW, REACHABLE)
;;    pred:       203 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.50836 => 0
  # DEBUG thisD.50837 => D#97ptD.0
  # DEBUG thisD.50833 => NULL
  # VUSE <.MEM_533>
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _150 = MEM[(charD.10 * *)_282];
  # DEBUG thisD.44828 => D#2ptD.0
  # DEBUG __nptrD.50529 => _150
  # .MEM_544 = VDEF <.MEM_533>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _239 = strtolD.28007 (_150, 0B, 10);
  k_235 = (intD.9) _239;
  # DEBUG kD.37047 => NULL
  # DEBUG kD.37047 => k_235
  # DEBUG missing_paramsD.37046 => 0
  # DEBUG nD.37051 => -1
  # VUSE <.MEM_544>
  # PT = nonlocal escaped null 
  _284 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # VUSE <.MEM_544>
  # PT = nonlocal escaped null 
  _285 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50842 => D#98ptD.0
  # DEBUG thisD.50841 => D#98ptD.0
  _303 = (long intD.12) _285;
  _304 = (long intD.12) _284;
  _305 = _303 - _304;
  # RANGE [-288230376151711744, 288230376151711743]
  _306 = _305 /[ex] 32;
  # RANGE ~[288230376151711744, 18158513697557839871]
  _307 = (size_typeD.36476) _306;
  if (_307 <= 1)
    goto <bb 212>;
  else
    goto <bb 219>;
;;    succ:       212 [47.5%]  (TRUE_VALUE,EXECUTABLE)
;;                219 [52.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 212, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 211, next block 213, flags: (NEW, REACHABLE)
;;    pred:       211 [47.5%]  (TRUE_VALUE,EXECUTABLE)
  if (config_85(D) != 0B)
    goto <bb 213>;
  else
    goto <bb 222>;
;;    succ:       213 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                222 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 213, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 212, next block 214, flags: (NEW, REACHABLE)
;;    pred:       212 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                210 [47.5%]  (TRUE_VALUE,EXECUTABLE)
  # k_934 = PHI <k_235(212), k_149(210)>
  # .MEM_1062 = PHI <.MEM_544(212), .MEM_151(210)>
  # DEBUG D#109ptD.0 => &D.37053
  # DEBUG thisD.50844 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG D#322ptD.0 => &D.37053
  [LP 106] # .MEM_158 = VDEF <.MEM_1062>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90D.47448 (&D.37054, "n");
  goto <bb 215>;
;;    succ:       214 (EH,EXECUTABLE)
;;                215 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 214, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 213, next block 215, flags: (NEW)
;;    pred:       213 (EH,EXECUTABLE)
<L230>: [LP 106]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 215, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 214, next block 216, flags: (NEW, REACHABLE)
;;    pred:       213 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 29] # .MEM_159 = VDEF <.MEM_158>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  n_160 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33786 (config_85(D), &D.37054);
;;    succ:       451 (EH,EXECUTABLE)
;;                216 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 216, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 215, next block 217, flags: (NEW, REACHABLE)
;;    pred:       215 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG nD.37051 => n_160
  # DEBUG thisD.50847 => &D.37054
  # DEBUG thisD.50848 => &D.37054
  # DEBUG thisD.50857 => &D.37054
  # VUSE <.MEM_159>
  # PT = nonlocal escaped null 
  _163 = MEM[(charD.10 * *)&D.37054];
  # DEBUG D#2ptD.0 => &D.37054
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50858 => &D.37054
  if (&D.37054.D.11539._M_local_bufD.11541 != _163)
    goto <bb 217>;
  else
    goto <bb 218>;
;;    succ:       217 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                218 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 217, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 216, next block 218, flags: (NEW, REACHABLE)
;;    pred:       216 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37054.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50850 => &D.37054
  # DEBUG __sizeD.50849 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37054
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37054
  # DEBUG D#216ptD.0 => &D.37054._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50853 => _163
  # DEBUG __aD.50851 => D#214ptD.0
  # DEBUG __nD.50852 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50856 => _163
  # DEBUG thisD.50854 => D#210ptD.0
  # DEBUG D.50855 => D#211ptD.0
  # .MEM_545 = VDEF <.MEM_159>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_163);
;;    succ:       218 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 218, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 217, next block 219, flags: (NEW, REACHABLE)
;;    pred:       216 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                217 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_366 = PHI <.MEM_159(216), .MEM_545(217)>
  # DEBUG D#220ptD.0 => &D.37054._M_dataplusD.11519
  # DEBUG thisD.50859 => D#220ptD.0
  # DEBUG thisD.50860 => D#220ptD.0
  # DEBUG thisD.50861 => D#220ptD.0
  # .MEM_162 = VDEF <.MEM_366>
  D.37054 ={v} {CLOBBER};
  # DEBUG thisD.50845 => &D.37053
  # DEBUG thisD.50846 => &D.37053
  goto <bb 220>;
;;    succ:       220 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 219, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 218, next block 220, flags: (NEW, REACHABLE)
;;    pred:       211 [52.5%]  (FALSE_VALUE,EXECUTABLE)
;;                210 [52.5%]  (FALSE_VALUE,EXECUTABLE)
  # k_935 = PHI <k_235(211), k_149(210)>
  # .MEM_1069 = PHI <.MEM_544(211), .MEM_151(210)>
  # PT = nonlocal escaped null 
  # _847 = PHI <_284(211), _818(210)>
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.50865 => 1
  # DEBUG thisD.50866 => D#97ptD.0
  # DEBUG thisD.50862 => NULL
  # VUSE <.MEM_1069>
  # PT = nonlocal escaped 
  _161 = MEM[(charD.10 * *)_847 + 32B];
  # DEBUG thisD.44828 => D#2ptD.0
  # DEBUG __nptrD.50531 => _161
  # .MEM_555 = VDEF <.MEM_1069>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _234 = strtolD.28007 (_161, 0B, 10);
  n_231 = (intD.9) _234;
  # DEBUG nD.37051 => NULL
;;    succ:       220 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 220, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 219, next block 221, flags: (NEW, REACHABLE)
;;    pred:       218 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                219 [100.0%]  (FALLTHRU,EXECUTABLE)
  # n_6 = PHI <n_160(218), n_231(219)>
  # .MEM_18 = PHI <.MEM_162(218), .MEM_555(219)>
  # k_449 = PHI <k_934(218), k_935(219)>
  # DEBUG nD.37051 => n_6
  # DEBUG missing_paramsD.37046 => 0
  [LP 107] # .MEM_166 = VDEF <.MEM_18>
  # PT = { D.54665 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_167 = _ZnwmD.2764 (24);
  goto <bb 228>;
;;    succ:       221 (EH,EXECUTABLE)
;;                228 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 221, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 220, next block 222, flags: (NEW)
;;    pred:       220 (EH,EXECUTABLE)
<L231>: [LP 107]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 222, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 221, next block 223, flags: (NEW, REACHABLE)
;;    pred:       204 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                212 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_1164 = PHI <.MEM_533(204), .MEM_544(212)>
  # DEBUG nD.37051 => NULL
  # DEBUG missing_paramsD.37046 => NULL
  # DEBUG __outD.50868 => &_ZSt4coutD.22587
  # DEBUG __sD.50869 => "Error: Missing parameters for dragonfly bad permutation traffic pattern: "
  # DEBUG __sD.50870 => "Error: Missing parameters for dragonfly bad permutation traffic pattern: "
  [LP 108] # .MEM_565 = VDEF <.MEM_1164>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Missing parameters for dragonfly bad permutation traffic pattern: ", 73);
  goto <bb 224>;
;;    succ:       224 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                223 (EH,EXECUTABLE)

;;   basic block 223, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 222, next block 224, flags: (NEW)
;;    pred:       222 (EH,EXECUTABLE)
<L232>: [LP 108]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 224, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 223, next block 225, flags: (NEW, REACHABLE)
;;    pred:       222 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.50872 => &_ZSt4coutD.22587
  # DEBUG __strD.50873 => pattern_39(D)
  # VUSE <.MEM_565>
  _170 = MEM[(long unsigned intD.14 *)pattern_39(D) + 8B];
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44893 => D#1ptD.0
  _308 = (long intD.12) _170;
  # DEBUG thisD.44890 => pattern_39(D)
  # VUSE <.MEM_565>
  # PT = nonlocal escaped 
  _309 = MEM[(charD.10 * *)pattern_39(D)];
  # DEBUG D#2ptD.0 => pattern_39(D)
  # DEBUG thisD.44832 => D#2ptD.0
  [LP 109] # .MEM_566 = VDEF <.MEM_565>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _310 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, _309, _308);
  goto <bb 226>;
;;    succ:       226 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                225 (EH,EXECUTABLE)

;;   basic block 225, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 224, next block 226, flags: (NEW)
;;    pred:       224 (EH,EXECUTABLE)
<L233>: [LP 109]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 226, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 225, next block 227, flags: (NEW, REACHABLE)
;;    pred:       224 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50875 => _310
  # DEBUG __pfD.50876 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 110] # .MEM_567 = VDEF <.MEM_566>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (_310);
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                227 (EH,EXECUTABLE)

;;   basic block 227, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 226, next block 228, flags: (NEW)
;;    pred:       226 (EH,EXECUTABLE)
<L234>: [LP 110]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 228, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 227, next block 229, flags: (NEW, REACHABLE)
;;    pred:       220 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50878 => result_167
  # DEBUG nodesD.50879 => nodes_65(D)
  # DEBUG kD.50880 => k_449
  # DEBUG nD.50881 => n_6
  # DEBUG D#95ptD.0 => &MEM[(struct BadPermDFlyTrafficPatternD.36008 *)result_167].D.36040
  # DEBUG thisD.50886 => D#95ptD.0
  # DEBUG nodesD.50885 => nodes_65(D)
  # DEBUG kD.50884 => k_449
  # DEBUG nD.50883 => n_6
  # DEBUG xrD.50882 => 1
  # DEBUG D#76ptD.0 => &D#95ptD.0->D.34111
  # DEBUG thisD.50888 => D#76ptD.0
  # DEBUG nodesD.50887 => nodes_65(D)
  # DEBUG D#66ptD.0 => &D#76ptD.0->D.33923
  # DEBUG thisD.50890 => D#66ptD.0
  # DEBUG nodesD.50889 => nodes_65(D)
  # .MEM_556 = VDEF <.MEM_166>
  result_167->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_557 = VDEF <.MEM_556>
  result_167->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 229>;
  else
    goto <bb 230>;
;;    succ:       229 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                230 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 229, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 228, next block 230, flags: (NEW, REACHABLE)
;;    pred:       228 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 30] # .MEM_564 = VDEF <.MEM_557>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       455 (EH,EXECUTABLE)

;;   basic block 230, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 229, next block 231, flags: (NEW, REACHABLE)
;;    pred:       228 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_560 = VDEF <.MEM_557>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_167]._kD.34078 = k_449;
  # .MEM_561 = VDEF <.MEM_560>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_167]._nD.34079 = n_6;
  # .MEM_562 = VDEF <.MEM_561>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_167]._xrD.34080 = 1;
  # .MEM_563 = VDEF <.MEM_562>
  MEM[(struct BadPermDFlyTrafficPatternD.36008 *)result_167].D.36040.D.34111.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV25BadPermDFlyTrafficPatternD.36042 + 16B];
  # DEBUG resultD.36903 => result_167
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 231, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 230, next block 232, flags: (NEW, REACHABLE)
;;    pred:       202 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50891 => &pattern_nameD.36150
  # DEBUG __rhsD.50892 => "tornado"
  [LP 111] # .MEM_568 = VDEF <.MEM_533>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _168 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "tornado");
  goto <bb 233>;
;;    succ:       233 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                232 (EH,EXECUTABLE)

;;   basic block 232, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 231, next block 233, flags: (NEW)
;;    pred:       231 (EH,EXECUTABLE)
<L235>: [LP 111]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 233, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 232, next block 234, flags: (NEW, REACHABLE)
;;    pred:       231 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_168 == 0)
    goto <bb 537>;
  else
    goto <bb 234>;
;;    succ:       537 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                234 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 234, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 233, next block 235, flags: (NEW, REACHABLE)
;;    pred:       233 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50894 => &pattern_nameD.36150
  # DEBUG __rhsD.50895 => "neighbor"
  [LP 112] # .MEM_569 = VDEF <.MEM_568>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _172 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "neighbor");
  goto <bb 236>;
;;    succ:       236 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                235 (EH,EXECUTABLE)

;;   basic block 235, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 234, next block 236, flags: (NEW)
;;    pred:       234 (EH,EXECUTABLE)
<L236>: [LP 112]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 236, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 235, next block 237, flags: (NEW, REACHABLE)
;;    pred:       234 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_172 == 0)
    goto <bb 537>;
  else
    goto <bb 237>;
;;    succ:       537 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                237 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 237, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 236, next block 238, flags: (NEW, REACHABLE)
;;    pred:       236 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50897 => &pattern_nameD.36150
  # DEBUG __rhsD.50898 => "badperm_yarc"
  [LP 113] # .MEM_570 = VDEF <.MEM_569>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _173 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "badperm_yarc");
  goto <bb 239>;
;;    succ:       239 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                238 (EH,EXECUTABLE)

;;   basic block 238, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 237, next block 239, flags: (NEW)
;;    pred:       237 (EH,EXECUTABLE)
<L237>: [LP 113]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 239, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 238, next block 240, flags: (NEW, REACHABLE)
;;    pred:       237 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_173 == 0)
    goto <bb 537>;
  else
    goto <bb 535>;
;;    succ:       537 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                535 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 240, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 239, next block 241, flags: (NEW, REACHABLE)
;;    pred:       537 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  if (config_85(D) != 0B)
    goto <bb 241>;
  else
    goto <bb 256>;
;;    succ:       241 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                256 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 241, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 240, next block 242, flags: (NEW, REACHABLE)
;;    pred:       240 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#109ptD.0 => &D.37077
  # DEBUG thisD.50905 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG D#322ptD.0 => &D.37077
  [LP 114] # .MEM_175 = VDEF <.MEM_1158>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90D.47448 (&D.37078, "k");
  goto <bb 243>;
;;    succ:       242 (EH,EXECUTABLE)
;;                243 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 242, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 241, next block 243, flags: (NEW)
;;    pred:       241 (EH,EXECUTABLE)
<L238>: [LP 114]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 243, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 242, next block 244, flags: (NEW, REACHABLE)
;;    pred:       241 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 32] # .MEM_176 = VDEF <.MEM_175>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  k_177 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33786 (config_85(D), &D.37078);
;;    succ:       457 (EH,EXECUTABLE)
;;                244 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 244, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 243, next block 245, flags: (NEW, REACHABLE)
;;    pred:       243 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG kD.37075 => k_177
  # DEBUG thisD.50908 => &D.37078
  # DEBUG thisD.50909 => &D.37078
  # DEBUG thisD.50918 => &D.37078
  # VUSE <.MEM_176>
  # PT = nonlocal escaped null 
  _180 = MEM[(charD.10 * *)&D.37078];
  # DEBUG D#2ptD.0 => &D.37078
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50919 => &D.37078
  if (&D.37078.D.11539._M_local_bufD.11541 != _180)
    goto <bb 245>;
  else
    goto <bb 246>;
;;    succ:       245 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                246 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 245, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 244, next block 246, flags: (NEW, REACHABLE)
;;    pred:       244 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37078.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50911 => &D.37078
  # DEBUG __sizeD.50910 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37078
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37078
  # DEBUG D#216ptD.0 => &D.37078._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50914 => _180
  # DEBUG __aD.50912 => D#214ptD.0
  # DEBUG __nD.50913 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50917 => _180
  # DEBUG thisD.50915 => D#210ptD.0
  # DEBUG D.50916 => D#211ptD.0
  # .MEM_571 = VDEF <.MEM_176>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_180);
;;    succ:       246 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 246, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 245, next block 247, flags: (NEW, REACHABLE)
;;    pred:       244 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                245 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_367 = PHI <.MEM_176(244), .MEM_571(245)>
  # DEBUG D#220ptD.0 => &D.37078._M_dataplusD.11519
  # DEBUG thisD.50920 => D#220ptD.0
  # DEBUG thisD.50921 => D#220ptD.0
  # DEBUG thisD.50922 => D#220ptD.0
  # .MEM_179 = VDEF <.MEM_367>
  D.37078 ={v} {CLOBBER};
  # DEBUG thisD.50906 => &D.37077
  # DEBUG thisD.50907 => &D.37077
  # DEBUG kD.37075 => k_177
  # DEBUG missing_paramsD.37074 => 0
  # DEBUG nD.37079 => -1
  # VUSE <.MEM_179>
  # PT = nonlocal escaped null 
  _1219 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # VUSE <.MEM_179>
  # PT = nonlocal escaped null 
  _1220 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50932 => D#98ptD.0
  # DEBUG thisD.50931 => D#98ptD.0
  _1221 = (long intD.12) _1220;
  _1162 = (long intD.12) _1219;
  _1163 = _1221 - _1162;
  # RANGE [-288230376151711744, 288230376151711743]
  _955 = _1163 /[ex] 32;
  # RANGE ~[288230376151711744, 18158513697557839871]
  _1126 = (size_typeD.36476) _955;
  if (_1126 <= 1)
    goto <bb 249>;
  else
    goto <bb 255>;
;;    succ:       249 [47.5%]  (TRUE_VALUE,EXECUTABLE)
;;                255 [52.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 247, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 246, next block 248, flags: (NEW, REACHABLE)
;;    pred:       537 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.50926 => 0
  # DEBUG thisD.50927 => D#97ptD.0
  # DEBUG thisD.50923 => NULL
  # VUSE <.MEM_1158>
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _178 = MEM[(charD.10 * *)_286];
  # DEBUG thisD.44828 => D#2ptD.0
  # DEBUG __nptrD.50533 => _178
  # .MEM_581 = VDEF <.MEM_1158>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _229 = strtolD.28007 (_178, 0B, 10);
  k_228 = (intD.9) _229;
  # DEBUG kD.37075 => NULL
  # DEBUG kD.37075 => k_228
  # DEBUG missing_paramsD.37074 => 0
  # DEBUG nD.37079 => -1
  # VUSE <.MEM_581>
  # PT = nonlocal escaped null 
  _288 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # VUSE <.MEM_581>
  # PT = nonlocal escaped null 
  _289 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50932 => D#98ptD.0
  # DEBUG thisD.50931 => D#98ptD.0
  _316 = (long intD.12) _289;
  _317 = (long intD.12) _288;
  _318 = _316 - _317;
  # RANGE [-288230376151711744, 288230376151711743]
  _319 = _318 /[ex] 32;
  # RANGE ~[288230376151711744, 18158513697557839871]
  _320 = (size_typeD.36476) _319;
  if (_320 <= 1)
    goto <bb 248>;
  else
    goto <bb 255>;
;;    succ:       248 [47.5%]  (TRUE_VALUE,EXECUTABLE)
;;                255 [52.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 248, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 247, next block 249, flags: (NEW, REACHABLE)
;;    pred:       247 [47.5%]  (TRUE_VALUE,EXECUTABLE)
  if (config_85(D) != 0B)
    goto <bb 249>;
  else
    goto <bb 541>;
;;    succ:       249 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                541 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 249, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 248, next block 250, flags: (NEW, REACHABLE)
;;    pred:       248 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                246 [47.5%]  (TRUE_VALUE,EXECUTABLE)
  # k_930 = PHI <k_228(248), k_177(246)>
  # .MEM_1166 = PHI <.MEM_581(248), .MEM_179(246)>
  # DEBUG D#109ptD.0 => &D.37081
  # DEBUG thisD.50934 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG D#322ptD.0 => &D.37081
  [LP 115] # .MEM_184 = VDEF <.MEM_1166>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90D.47448 (&D.37082, "n");
  goto <bb 251>;
;;    succ:       250 (EH,EXECUTABLE)
;;                251 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 250, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 249, next block 251, flags: (NEW)
;;    pred:       249 (EH,EXECUTABLE)
<L239>: [LP 115]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 251, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 250, next block 252, flags: (NEW, REACHABLE)
;;    pred:       249 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 34] # .MEM_185 = VDEF <.MEM_184>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  n_186 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33786 (config_85(D), &D.37082);
;;    succ:       461 (EH,EXECUTABLE)
;;                252 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 252, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 251, next block 253, flags: (NEW, REACHABLE)
;;    pred:       251 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG nD.37079 => n_186
  # DEBUG thisD.50937 => &D.37082
  # DEBUG thisD.50938 => &D.37082
  # DEBUG thisD.50947 => &D.37082
  # VUSE <.MEM_185>
  # PT = nonlocal escaped null 
  _189 = MEM[(charD.10 * *)&D.37082];
  # DEBUG D#2ptD.0 => &D.37082
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50948 => &D.37082
  if (&D.37082.D.11539._M_local_bufD.11541 != _189)
    goto <bb 253>;
  else
    goto <bb 254>;
;;    succ:       253 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                254 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 253, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 252, next block 254, flags: (NEW, REACHABLE)
;;    pred:       252 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37082.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50940 => &D.37082
  # DEBUG __sizeD.50939 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37082
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37082
  # DEBUG D#216ptD.0 => &D.37082._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50943 => _189
  # DEBUG __aD.50941 => D#214ptD.0
  # DEBUG __nD.50942 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50946 => _189
  # DEBUG thisD.50944 => D#210ptD.0
  # DEBUG D.50945 => D#211ptD.0
  # .MEM_582 = VDEF <.MEM_185>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_189);
;;    succ:       254 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 254, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 253, next block 255, flags: (NEW, REACHABLE)
;;    pred:       252 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                253 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_368 = PHI <.MEM_185(252), .MEM_582(253)>
  # DEBUG D#220ptD.0 => &D.37082._M_dataplusD.11519
  # DEBUG thisD.50949 => D#220ptD.0
  # DEBUG thisD.50950 => D#220ptD.0
  # DEBUG thisD.50951 => D#220ptD.0
  # .MEM_188 = VDEF <.MEM_368>
  D.37082 ={v} {CLOBBER};
  # DEBUG thisD.50935 => &D.37081
  # DEBUG thisD.50936 => &D.37081
  # DEBUG nD.37079 => n_186
  # DEBUG missing_paramsD.37074 => 0
  # DEBUG xrD.37083 => -1
  # VUSE <.MEM_188>
  # PT = nonlocal escaped null 
  _1215 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # VUSE <.MEM_188>
  # PT = nonlocal escaped null 
  _1216 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50961 => D#98ptD.0
  # DEBUG thisD.50960 => D#98ptD.0
  _1218 = (long intD.12) _1216;
  _1211 = (long intD.12) _1215;
  _1217 = _1218 - _1211;
  # RANGE [-288230376151711744, 288230376151711743]
  _1210 = _1217 /[ex] 32;
  # RANGE ~[288230376151711744, 18158513697557839871]
  _1212 = (size_typeD.36476) _1210;
  if (_1212 <= 2)
    goto <bb 259>;
  else
    goto <bb 265>;
;;    succ:       259 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                265 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 255, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 254, next block 256, flags: (NEW, REACHABLE)
;;    pred:       247 [52.5%]  (FALSE_VALUE,EXECUTABLE)
;;                246 [52.5%]  (FALSE_VALUE,EXECUTABLE)
  # k_1118 = PHI <k_228(247), k_177(246)>
  # .MEM_831 = PHI <.MEM_581(247), .MEM_179(246)>
  # PT = nonlocal escaped null 
  # _845 = PHI <_288(247), _1219(246)>
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.50955 => 1
  # DEBUG thisD.50956 => D#97ptD.0
  # DEBUG thisD.50952 => NULL
  # VUSE <.MEM_831>
  # PT = nonlocal escaped 
  _187 = MEM[(charD.10 * *)_845 + 32B];
  # DEBUG thisD.44828 => D#2ptD.0
  # DEBUG __nptrD.50535 => _187
  # .MEM_592 = VDEF <.MEM_831>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _226 = strtolD.28007 (_187, 0B, 10);
  n_219 = (intD.9) _226;
  # DEBUG nD.37079 => NULL
  # VUSE <.MEM_592>
  pretmp_586 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # VUSE <.MEM_592>
  pretmp_573 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  pretmp_575 = (long intD.12) pretmp_573;
  pretmp_547 = (long intD.12) pretmp_586;
  pretmp_549 = pretmp_575 - pretmp_547;
  pretmp_536 = pretmp_549 /[ex] 32;
;;    succ:       256 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 256, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 255, next block 257, flags: (NEW, REACHABLE)
;;    pred:       240 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                255 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1]
  # missing_params_8 = PHI <1(240), 0(255)>
  # n_11 = PHI <-1(240), n_219(255)>
  # .MEM_22 = PHI <.MEM_1158(240), .MEM_592(255)>
  # k_237 = PHI <-1(240), k_1118(255)>
  # PT = nonlocal escaped null 
  # prephitmp_572 = PHI <_286(240), pretmp_586(255)>
  # RANGE [-288230376151711744, 288230376151711743]
  # prephitmp_537 = PHI <_314(240), pretmp_536(255)>
  # DEBUG nD.37079 => n_11
  # DEBUG missing_paramsD.37074 => missing_params_8
  # DEBUG xrD.37083 => -1
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50961 => D#98ptD.0
  # DEBUG thisD.50960 => D#98ptD.0
  # RANGE ~[288230376151711744, 18158513697557839871]
  _325 = (size_typeD.36476) prephitmp_537;
  if (_325 <= 2)
    goto <bb 257>;
  else
    goto <bb 265>;
;;    succ:       257 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                265 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 257, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 256, next block 258, flags: (NEW, REACHABLE)
;;    pred:       256 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  if (config_85(D) != 0B)
    goto <bb 259>;
  else
    goto <bb 258>;
;;    succ:       259 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                258 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 258, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 257, next block 259, flags: (NEW, REACHABLE)
;;    pred:       257 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                266 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                541 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1156 = PHI <.MEM_22(257), .MEM_23(266), .MEM_581(541)>
  # DEBUG xrD.37083 => NULL
  # DEBUG missing_paramsD.37074 => NULL
  # DEBUG __outD.50987 => &_ZSt4coutD.22587
  # DEBUG __sD.50988 => "Error: Missing parameters for digit permutation traffic pattern: "
  # DEBUG __sD.50989 => "Error: Missing parameters for digit permutation traffic pattern: "
  [LP 117] # .MEM_634 = VDEF <.MEM_1156>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Missing parameters for digit permutation traffic pattern: ", 65);
  goto <bb 268>;
;;    succ:       268 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                267 (EH,EXECUTABLE)

;;   basic block 259, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 258, next block 260, flags: (NEW, REACHABLE)
;;    pred:       257 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                254 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # missing_params_880 = PHI <missing_params_8(257), 0(254)>
  # k_846 = PHI <k_237(257), k_930(254)>
  # n_1204 = PHI <n_11(257), n_186(254)>
  # .MEM_302 = PHI <.MEM_22(257), .MEM_188(254)>
  # DEBUG D#109ptD.0 => &D.37085
  # DEBUG thisD.50963 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG D#322ptD.0 => &D.37085
  [LP 116] # .MEM_193 = VDEF <.MEM_302>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90D.47448 (&D.37086, "xr");
  goto <bb 261>;
;;    succ:       260 (EH,EXECUTABLE)
;;                261 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 260, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 259, next block 261, flags: (NEW)
;;    pred:       259 (EH,EXECUTABLE)
<L240>: [LP 116]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 261, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 260, next block 262, flags: (NEW, REACHABLE)
;;    pred:       259 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 36] # .MEM_194 = VDEF <.MEM_193>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  xr_195 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33786 (config_85(D), &D.37086);
;;    succ:       465 (EH,EXECUTABLE)
;;                262 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 262, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 261, next block 263, flags: (NEW, REACHABLE)
;;    pred:       261 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG xrD.37083 => xr_195
  # DEBUG thisD.50966 => &D.37086
  # DEBUG thisD.50967 => &D.37086
  # DEBUG thisD.50976 => &D.37086
  # VUSE <.MEM_194>
  # PT = nonlocal escaped null 
  _198 = MEM[(charD.10 * *)&D.37086];
  # DEBUG D#2ptD.0 => &D.37086
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.50977 => &D.37086
  if (&D.37086.D.11539._M_local_bufD.11541 != _198)
    goto <bb 263>;
  else
    goto <bb 264>;
;;    succ:       263 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                264 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 263, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 262, next block 264, flags: (NEW, REACHABLE)
;;    pred:       262 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37086.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.50969 => &D.37086
  # DEBUG __sizeD.50968 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37086
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37086
  # DEBUG D#216ptD.0 => &D.37086._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.50972 => _198
  # DEBUG __aD.50970 => D#214ptD.0
  # DEBUG __nD.50971 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.50975 => _198
  # DEBUG thisD.50973 => D#210ptD.0
  # DEBUG D.50974 => D#211ptD.0
  # .MEM_593 = VDEF <.MEM_194>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_198);
;;    succ:       264 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 264, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 263, next block 265, flags: (NEW, REACHABLE)
;;    pred:       262 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                263 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_369 = PHI <.MEM_194(262), .MEM_593(263)>
  # DEBUG D#220ptD.0 => &D.37086._M_dataplusD.11519
  # DEBUG thisD.50978 => D#220ptD.0
  # DEBUG thisD.50979 => D#220ptD.0
  # DEBUG thisD.50980 => D#220ptD.0
  # .MEM_197 = VDEF <.MEM_369>
  D.37086 ={v} {CLOBBER};
  # DEBUG thisD.50964 => &D.37085
  # DEBUG thisD.50965 => &D.37085
  goto <bb 266>;
;;    succ:       266 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 265, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 264, next block 266, flags: (NEW, REACHABLE)
;;    pred:       256 [29.0%]  (FALSE_VALUE,EXECUTABLE)
;;                254 [29.0%]  (FALSE_VALUE,EXECUTABLE)
;;                541 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 1]
  # missing_params_902 = PHI <missing_params_8(256), 0(254), 1(541)>
  # k_1090 = PHI <k_237(256), k_930(254), k_228(541)>
  # n_1073 = PHI <n_11(256), n_186(254), -1(541)>
  # .MEM_315 = PHI <.MEM_22(256), .MEM_188(254), .MEM_581(541)>
  # PT = nonlocal escaped null 
  # _838 = PHI <prephitmp_572(256), _1215(254), _288(541)>
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.50984 => 2
  # DEBUG thisD.50985 => D#97ptD.0
  # DEBUG thisD.50981 => NULL
  # VUSE <.MEM_315>
  # PT = nonlocal escaped 
  _196 = MEM[(charD.10 * *)_838 + 64B];
  # DEBUG thisD.44828 => D#2ptD.0
  # DEBUG __nptrD.50537 => _196
  # .MEM_603 = VDEF <.MEM_315>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _218 = strtolD.28007 (_196, 0B, 10);
  xr_201 = (intD.9) _218;
  # DEBUG xrD.37083 => NULL
;;    succ:       266 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 266, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 265, next block 267, flags: (NEW, REACHABLE)
;;    pred:       264 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                265 [100.0%]  (FALLTHRU,EXECUTABLE)
  # xr_12 = PHI <xr_195(264), xr_201(265)>
  # .MEM_23 = PHI <.MEM_197(264), .MEM_603(265)>
  # RANGE [0, 1]
  # missing_params_738 = PHI <missing_params_880(264), missing_params_902(265)>
  # k_1205 = PHI <k_846(264), k_1090(265)>
  # n_807 = PHI <n_1204(264), n_1073(265)>
  # DEBUG xrD.37083 => xr_12
  # DEBUG missing_paramsD.37074 => missing_params_738
  if (missing_params_738 != 0)
    goto <bb 258>;
  else
    goto <bb 272>;
;;    succ:       258 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                272 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 267, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 266, next block 268, flags: (NEW)
;;    pred:       258 (EH,EXECUTABLE)
<L241>: [LP 117]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 268, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 267, next block 269, flags: (NEW, REACHABLE)
;;    pred:       258 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.50991 => &_ZSt4coutD.22587
  # DEBUG __strD.50992 => pattern_39(D)
  # VUSE <.MEM_634>
  _214 = MEM[(long unsigned intD.14 *)pattern_39(D) + 8B];
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44893 => D#1ptD.0
  _326 = (long intD.12) _214;
  # DEBUG thisD.44890 => pattern_39(D)
  # VUSE <.MEM_634>
  # PT = nonlocal escaped 
  _327 = MEM[(charD.10 * *)pattern_39(D)];
  # DEBUG D#2ptD.0 => pattern_39(D)
  # DEBUG thisD.44832 => D#2ptD.0
  [LP 118] # .MEM_635 = VDEF <.MEM_634>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _328 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, _327, _326);
  goto <bb 270>;
;;    succ:       270 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                269 (EH,EXECUTABLE)

;;   basic block 269, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 268, next block 270, flags: (NEW)
;;    pred:       268 (EH,EXECUTABLE)
<L242>: [LP 118]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 270, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 269, next block 271, flags: (NEW, REACHABLE)
;;    pred:       268 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.50994 => _328
  # DEBUG __pfD.50995 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 119] # .MEM_636 = VDEF <.MEM_635>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (_328);
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                271 (EH,EXECUTABLE)

;;   basic block 271, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 270, next block 272, flags: (NEW)
;;    pred:       270 (EH,EXECUTABLE)
<L243>: [LP 119]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 272, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 271, next block 273, flags: (NEW, REACHABLE)
;;    pred:       266 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.50997 => &pattern_nameD.36150
  # DEBUG __rhsD.50998 => "tornado"
  [LP 120] # .MEM_604 = VDEF <.MEM_23>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _215 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "tornado");
  goto <bb 274>;
;;    succ:       274 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                273 (EH,EXECUTABLE)

;;   basic block 273, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 272, next block 274, flags: (NEW)
;;    pred:       272 (EH,EXECUTABLE)
<L244>: [LP 120]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 274, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 273, next block 275, flags: (NEW, REACHABLE)
;;    pred:       272 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_215 == 0)
    goto <bb 275>;
  else
    goto <bb 280>;
;;    succ:       275 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                280 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 275, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 274, next block 276, flags: (NEW, REACHABLE)
;;    pred:       274 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 121] # .MEM_210 = VDEF <.MEM_604>
  # PT = { D.54666 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_211 = _ZnwmD.2764 (24);
  goto <bb 277>;
;;    succ:       276 (EH,EXECUTABLE)
;;                277 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 276, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 275, next block 277, flags: (NEW)
;;    pred:       275 (EH,EXECUTABLE)
<L245>: [LP 121]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 277, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 276, next block 278, flags: (NEW, REACHABLE)
;;    pred:       275 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.51000 => result_211
  # DEBUG nodesD.51001 => nodes_65(D)
  # DEBUG kD.51002 => k_1205
  # DEBUG nD.51003 => n_807
  # DEBUG xrD.51004 => xr_12
  # DEBUG D#82ptD.0 => &MEM[(struct TornadoTrafficPatternD.34118 *)result_211].D.34153
  # DEBUG thisD.51009 => D#82ptD.0
  # DEBUG nodesD.51008 => nodes_65(D)
  # DEBUG kD.51007 => k_1205
  # DEBUG nD.51006 => n_807
  # DEBUG xrD.51005 => xr_12
  # DEBUG D#76ptD.0 => &D#82ptD.0->D.34111
  # DEBUG thisD.51011 => D#76ptD.0
  # DEBUG nodesD.51010 => nodes_65(D)
  # DEBUG D#66ptD.0 => &D#76ptD.0->D.33923
  # DEBUG thisD.51013 => D#66ptD.0
  # DEBUG nodesD.51012 => nodes_65(D)
  # .MEM_625 = VDEF <.MEM_210>
  result_211->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_626 = VDEF <.MEM_625>
  result_211->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 278>;
  else
    goto <bb 279>;
;;    succ:       278 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                279 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 278, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 277, next block 279, flags: (NEW, REACHABLE)
;;    pred:       277 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 37] # .MEM_633 = VDEF <.MEM_626>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       469 (EH,EXECUTABLE)

;;   basic block 279, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 278, next block 280, flags: (NEW, REACHABLE)
;;    pred:       277 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_629 = VDEF <.MEM_626>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_211]._kD.34078 = k_1205;
  # .MEM_630 = VDEF <.MEM_629>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_211]._nD.34079 = n_807;
  # .MEM_631 = VDEF <.MEM_630>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_211]._xrD.34080 = xr_12;
  # .MEM_632 = VDEF <.MEM_631>
  MEM[(struct TornadoTrafficPatternD.34118 *)result_211].D.34153.D.34111.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV21TornadoTrafficPatternD.34155 + 16B];
  # DEBUG resultD.36903 => result_211
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 280, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 279, next block 281, flags: (NEW, REACHABLE)
;;    pred:       274 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.51014 => &pattern_nameD.36150
  # DEBUG __rhsD.51015 => "neighbor"
  [LP 122] # .MEM_605 = VDEF <.MEM_604>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _212 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "neighbor");
  goto <bb 282>;
;;    succ:       282 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                281 (EH,EXECUTABLE)

;;   basic block 281, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 280, next block 282, flags: (NEW)
;;    pred:       280 (EH,EXECUTABLE)
<L246>: [LP 122]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 282, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 281, next block 283, flags: (NEW, REACHABLE)
;;    pred:       280 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_212 == 0)
    goto <bb 283>;
  else
    goto <bb 288>;
;;    succ:       283 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                288 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 283, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 282, next block 284, flags: (NEW, REACHABLE)
;;    pred:       282 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 123] # .MEM_202 = VDEF <.MEM_605>
  # PT = { D.54667 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_203 = _ZnwmD.2764 (24);
  goto <bb 285>;
;;    succ:       284 (EH,EXECUTABLE)
;;                285 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 284, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 283, next block 285, flags: (NEW)
;;    pred:       283 (EH,EXECUTABLE)
<L247>: [LP 123]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 285, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 284, next block 286, flags: (NEW, REACHABLE)
;;    pred:       283 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.51017 => result_203
  # DEBUG nodesD.51018 => nodes_65(D)
  # DEBUG kD.51019 => k_1205
  # DEBUG nD.51020 => n_807
  # DEBUG xrD.51021 => xr_12
  # DEBUG D#83ptD.0 => &MEM[(struct NeighborTrafficPatternD.34157 *)result_203].D.34192
  # DEBUG thisD.51026 => D#83ptD.0
  # DEBUG nodesD.51025 => nodes_65(D)
  # DEBUG kD.51024 => k_1205
  # DEBUG nD.51023 => n_807
  # DEBUG xrD.51022 => xr_12
  # DEBUG D#76ptD.0 => &D#83ptD.0->D.34111
  # DEBUG thisD.51028 => D#76ptD.0
  # DEBUG nodesD.51027 => nodes_65(D)
  # DEBUG D#66ptD.0 => &D#76ptD.0->D.33923
  # DEBUG thisD.51030 => D#66ptD.0
  # DEBUG nodesD.51029 => nodes_65(D)
  # .MEM_606 = VDEF <.MEM_202>
  result_203->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_607 = VDEF <.MEM_606>
  result_203->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 286>;
  else
    goto <bb 287>;
;;    succ:       286 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                287 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 286, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 285, next block 287, flags: (NEW, REACHABLE)
;;    pred:       285 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 38] # .MEM_614 = VDEF <.MEM_607>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       471 (EH,EXECUTABLE)

;;   basic block 287, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 286, next block 288, flags: (NEW, REACHABLE)
;;    pred:       285 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_610 = VDEF <.MEM_607>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_203]._kD.34078 = k_1205;
  # .MEM_611 = VDEF <.MEM_610>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_203]._nD.34079 = n_807;
  # .MEM_612 = VDEF <.MEM_611>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_203]._xrD.34080 = xr_12;
  # .MEM_613 = VDEF <.MEM_612>
  MEM[(struct NeighborTrafficPatternD.34157 *)result_203].D.34192.D.34111.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV22NeighborTrafficPatternD.34194 + 16B];
  # DEBUG resultD.36903 => result_203
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 288, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 287, next block 289, flags: (NEW, REACHABLE)
;;    pred:       282 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.51031 => &pattern_nameD.36150
  # DEBUG __rhsD.51032 => "badperm_yarc"
  [LP 124] # .MEM_615 = VDEF <.MEM_605>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _204 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "badperm_yarc");
  goto <bb 290>;
;;    succ:       290 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                289 (EH,EXECUTABLE)

;;   basic block 289, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 288, next block 290, flags: (NEW)
;;    pred:       288 (EH,EXECUTABLE)
<L248>: [LP 124]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 290, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 289, next block 291, flags: (NEW, REACHABLE)
;;    pred:       288 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_204 == 0)
    goto <bb 291>;
  else
    goto <bb 375>;
;;    succ:       291 [78.6%]  (TRUE_VALUE,EXECUTABLE)
;;                375 [21.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 291, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 290, next block 292, flags: (NEW, REACHABLE)
;;    pred:       290 [78.6%]  (TRUE_VALUE,EXECUTABLE)
  [LP 125] # .MEM_206 = VDEF <.MEM_615>
  # PT = { D.54668 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_207 = _ZnwmD.2764 (24);
  goto <bb 293>;
;;    succ:       292 (EH,EXECUTABLE)
;;                293 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 292, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 291, next block 293, flags: (NEW)
;;    pred:       291 (EH,EXECUTABLE)
<L249>: [LP 125]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 293, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 292, next block 294, flags: (NEW, REACHABLE)
;;    pred:       291 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.51034 => result_207
  # DEBUG nodesD.51035 => nodes_65(D)
  # DEBUG kD.51036 => k_1205
  # DEBUG nD.51037 => n_807
  # DEBUG xrD.51038 => xr_12
  # DEBUG D#96ptD.0 => &MEM[(struct BadPermYarcTrafficPatternD.36044 *)result_207].D.36079
  # DEBUG thisD.51043 => D#96ptD.0
  # DEBUG nodesD.51042 => nodes_65(D)
  # DEBUG kD.51041 => k_1205
  # DEBUG nD.51040 => n_807
  # DEBUG xrD.51039 => xr_12
  # DEBUG D#76ptD.0 => &D#96ptD.0->D.34111
  # DEBUG thisD.51045 => D#76ptD.0
  # DEBUG nodesD.51044 => nodes_65(D)
  # DEBUG D#66ptD.0 => &D#76ptD.0->D.33923
  # DEBUG thisD.51047 => D#66ptD.0
  # DEBUG nodesD.51046 => nodes_65(D)
  # .MEM_616 = VDEF <.MEM_206>
  result_207->_vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV14TrafficPatternD.33889 + 16B];
  # .MEM_617 = VDEF <.MEM_616>
  result_207->_nodesD.33855 = nodes_65(D);
  if (nodes_65(D) <= 0)
    goto <bb 294>;
  else
    goto <bb 295>;
;;    succ:       294 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                295 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 294, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 293, next block 295, flags: (NEW, REACHABLE)
;;    pred:       293 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#62ptD.0 => D#66ptD.0
  # DEBUG D#63ptD.0 => nodes_65(D)
  [LP 39] # .MEM_624 = VDEF <.MEM_617>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN14TrafficPatternC2Ei.part.24D.45142 ();
;;    succ:       473 (EH,EXECUTABLE)

;;   basic block 295, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 294, next block 296, flags: (NEW, REACHABLE)
;;    pred:       293 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_620 = VDEF <.MEM_617>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_207]._kD.34078 = k_1205;
  # .MEM_621 = VDEF <.MEM_620>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_207]._nD.34079 = n_807;
  # .MEM_622 = VDEF <.MEM_621>
  MEM[(struct DigitPermutationTrafficPatternD.34076 *)result_207]._xrD.34080 = xr_12;
  # .MEM_623 = VDEF <.MEM_622>
  MEM[(struct BadPermYarcTrafficPatternD.36044 *)result_207].D.36079.D.34111.D.33923._vptr.TrafficPatternD.33886 = &MEM[(voidD.45 *)&_ZTV25BadPermYarcTrafficPatternD.36081 + 16B];
  # DEBUG resultD.36903 => result_207
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 296, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 295, next block 297, flags: (NEW, REACHABLE)
;;    pred:       535 [100.0%]  (FALLTHRU,EXECUTABLE)
  if (_208 == 0)
    goto <bb 297>;
  else
    goto <bb 369>;
;;    succ:       297 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                369 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 297, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 296, next block 298, flags: (NEW, REACHABLE)
;;    pred:       296 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.51051 => &paramsD.36157
  # VUSE <.MEM_637>
  # PT = nonlocal escaped null 
  _217 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#112ptD.0 => &paramsD.36157
  # DEBUG thisD.45558 => D#112ptD.0
  # DEBUG thisD.45520 => NULL
  # DEBUG __iD.45519 => NULL
  # VUSE <.MEM_637>
  # PT = nonlocal escaped null 
  _329 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#113ptD.0 => &paramsD.36157
  # DEBUG thisD.45554 => D#113ptD.0
  # DEBUG thisD.45536 => NULL
  # DEBUG __iD.45535 => NULL
  # DEBUG __lhsD.51053 => NULL
  # DEBUG __rhsD.51052 => NULL
  # DEBUG thisD.45547 => NULL
  # DEBUG thisD.45545 => NULL
  if (_217 == _329)
    goto <bb 298>;
  else
    goto <bb 315>;
;;    succ:       298 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                315 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 298, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 297, next block 299, flags: (NEW, REACHABLE)
;;    pred:       297 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#109ptD.0 => &D.37118
  # DEBUG thisD.51055 => D#109ptD.0
  # DEBUG D#108ptD.0 => D#109ptD.0
  # DEBUG thisD.45464 => D#108ptD.0
  # DEBUG D#322ptD.0 => &D.37118
  [LP 126] # .MEM_220 = VDEF <.MEM_637>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.90D.47448 (&D.37119, "-1");
  goto <bb 300>;
;;    succ:       299 (EH,EXECUTABLE)
;;                300 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 299, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 298, next block 300, flags: (NEW)
;;    pred:       298 (EH,EXECUTABLE)
<L250>: [LP 126]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 300, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 299, next block 301, flags: (NEW, REACHABLE)
;;    pred:       298 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54234 => &paramsD.36157
  # DEBUG __xD.54235 => &D.37119
  # VUSE <.MEM_220>
  # PT = nonlocal escaped null 
  _869 = paramsD.36157.D.36900._M_implD.36391._M_finishD.36394;
  # VUSE <.MEM_220>
  # PT = nonlocal escaped null 
  _870 = paramsD.36157.D.36900._M_implD.36391._M_end_of_storageD.36395;
  if (_869 != _870)
    goto <bb 301>;
  else
    goto <bb 310>;
;;    succ:       301 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                310 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 301, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 300, next block 302, flags: (NEW, REACHABLE)
;;    pred:       300 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#468ptD.0 => &paramsD.36157.D.36900._M_implD.36391
  # DEBUG D#447ptD.0 => D#468ptD.0
  # DEBUG __pD.54238 => _869
  # DEBUG __argD.54237 => &D.37119
  # DEBUG __aD.54236 => D#447ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG D#445ptD.0 => D#446ptD.0
  # DEBUG __pD.54241 => _869
  # DEBUG __valD.54240 => &D.37119
  # DEBUG thisD.54239 => D#445ptD.0
  # DEBUG D#33ptD.0 => 32
  # DEBUG __pD.49284 => _869
  # DEBUG D.49285 => D#33ptD.0
  if (_869 != 0B)
    goto <bb 302>;
  else
    goto <bb 309>;
;;    succ:       302 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                309 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 302, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 301, next block 303, flags: (NEW, REACHABLE)
;;    pred:       301 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.54243 => _869
  # DEBUG __strD.54242 => &D.37119
  # DEBUG thisD.49278 => &D.37119
  # DEBUG D#442ptD.0 => &D.37119._M_dataplusD.11519
  # DEBUG thisD.54244 => _869
  # PT = nonlocal escaped null 
  _871 = &_869->D.11539._M_local_bufD.11541;
  # DEBUG D#443ptD.0 => &_869->_M_dataplusD.11519
  # DEBUG D#151ptD.0 => D#442ptD.0
  # DEBUG thisD.54247 => D#443ptD.0
  # DEBUG __datD.54246 => _871
  # DEBUG __aD.54245 => D#151ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0
  # DEBUG D#148ptD.0 => D#443ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0
  # DEBUG thisD.45871 => D#148ptD.0
  # DEBUG __aD.45872 => D#149ptD.0
  # DEBUG D#147ptD.0 => D#149ptD.0
  # DEBUG D#146ptD.0 => D#148ptD.0
  # DEBUG thisD.45853 => D#146ptD.0
  # DEBUG D.45854 => D#147ptD.0
  # .MEM_1098 = VDEF <.MEM_220>
  MEM[(struct _Alloc_hiderD.11518 *)_869]._M_pD.11525 = _871;
  # VUSE <.MEM_1098>
  # PT = nonlocal escaped null 
  _872 = MEM[(charD.10 * *)&D.37119];
  # DEBUG D#2ptD.0 => &D.37119
  # DEBUG thisD.49271 => D#2ptD.0
  # VUSE <.MEM_1098>
  _873 = MEM[(long unsigned intD.14 *)&D.37119 + 8B];
  # DEBUG D#5ptD.0 => &D.37119
  # DEBUG thisD.49268 => D#5ptD.0
  # PT = nonlocal escaped null 
  _874 = _872 + _873;
  # DEBUG D#2ptD.0 => &D.37119
  # DEBUG thisD.49265 => D#2ptD.0
  # DEBUG thisD.54250 => _869
  # DEBUG __begD.54249 => _872
  # DEBUG __endD.54248 => _874
  # DEBUG thisD.54254 => _869
  # DEBUG __begD.54253 => _872
  # DEBUG __endD.54252 => _874
  # DEBUG thisD.54257 => _869
  # DEBUG __begD.54258 => _872
  # DEBUG __endD.54259 => _874
  # DEBUG __ptrD.49230 => _872
  # RANGE [0, 1]
  _1116 = _874 != 0B;
  # RANGE [0, 1]
  _41 = _872 == 0B;
  # RANGE [0, 1]
  _53 = _41 & _1116;
  if (_53 != 0)
    goto <bb 538>;
  else
    goto <bb 540>;
;;    succ:       538 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                540 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 303, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 302, next block 304, flags: (NEW, REACHABLE)
;;    pred:       540 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 127] # .MEM_1100 = VDEF <.MEM_1099>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _881 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (_869, &__dnewD.54260, 0);
;;    succ:       304 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                475 (EH,EXECUTABLE)

;;   basic block 304, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 303, next block 305, flags: (NEW, REACHABLE)
;;    pred:       303 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#6ptD.0 => _869
  # DEBUG __pD.54279 => _881
  # DEBUG thisD.54278 => D#6ptD.0
  # .MEM_1101 = VDEF <.MEM_1100>
  MEM[(charD.10 * *)_869] = _881;
  # VUSE <.MEM_1101>
  __dnew.63_882 = __dnewD.54260;
  # DEBUG D#7ptD.0 => _869
  # DEBUG __capacityD.54281 => __dnew.63_882
  # DEBUG thisD.54280 => D#7ptD.0
  # .MEM_1102 = VDEF <.MEM_1101>
  MEM[(size_typeD.11502 *)_869 + 16B] = __dnew.63_882;
  # DEBUG D#2ptD.0 => _869
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.54263 => _881
  # DEBUG __k1D.54262 => _872
  # DEBUG __k2D.54261 => _874
  # DEBUG __dD.54266 => _881
  # DEBUG __sD.54265 => _872
  # DEBUG __nD.54264 => _873
  goto <bb 307>;
;;    succ:       307 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 305, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 304, next block 306, flags: (NEW, REACHABLE)
;;    pred:       540 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#2ptD.0 => _869
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.54263 => _871
  # DEBUG __k1D.54262 => _872
  # DEBUG __k2D.54261 => _874
  # DEBUG __dD.54266 => _871
  # DEBUG __sD.54265 => _872
  # DEBUG __nD.54264 => _873
  if (_873 == 1)
    goto <bb 306>;
  else
    goto <bb 307>;
;;    succ:       306 [37.8%]  (TRUE_VALUE,EXECUTABLE)
;;                307 [62.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 306, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 305, next block 307, flags: (NEW, REACHABLE)
;;    pred:       305 [37.8%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1099>
  _884 = MEM[(const char_typeD.6629 &)_872];
  # DEBUG D#32ptD.0 => _872
  # DEBUG __c1D.54271 => _871
  # DEBUG __c2D.54270 => D#32ptD.0
  # .MEM_1103 = VDEF <.MEM_1099>
  MEM[(char_typeD.6629 &)_871] = _884;
  goto <bb 308>;
;;    succ:       308 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 307, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 306, next block 308, flags: (NEW, REACHABLE)
;;    pred:       305 [62.2%]  (FALSE_VALUE,EXECUTABLE)
;;                304 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # _1165 = PHI <_871(305), _881(304)>
  # .MEM_1153 = PHI <.MEM_1099(305), .MEM_1102(304)>
  # DEBUG D#2ptD.0 => _869
  # DEBUG thisD.49204 => D#2ptD.0
  # DEBUG __pD.54263 => _1165
  # DEBUG __k1D.54262 => _872
  # DEBUG __k2D.54261 => _874
  # DEBUG __dD.54266 => _1165
  # DEBUG __sD.54265 => _872
  # DEBUG __nD.54264 => _873
  # DEBUG __s1D.54269 => _1165
  # DEBUG __s2D.54268 => _872
  # DEBUG __nD.54267 => _873
  # .MEM_1104 = VDEF <.MEM_1153>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memcpyD.992 (_1165, _872, _873);
  # VUSE <.MEM_1104>
  pretmp_1222 = __dnewD.54260;
  # VUSE <.MEM_1104>
  pretmp_780 = MEM[(charD.10 * *)_869];
;;    succ:       308 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 308, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 307, next block 309, flags: (NEW, REACHABLE)
;;    pred:       306 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                307 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_962 = PHI <.MEM_1103(306), .MEM_1104(307)>
  # prephitmp_761 = PHI <_873(306), pretmp_1222(307)>
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # prephitmp_1113 = PHI <_871(306), pretmp_780(307)>
  # DEBUG D#779ptD.0 => __dnewD.54260
  # DEBUG thisD.54273 => _869
  # DEBUG __nD.54272 => D#779ptD.0
  # DEBUG D#4ptD.0 => _869
  # DEBUG __lengthD.54275 => D#779ptD.0
  # DEBUG thisD.54274 => D#4ptD.0
  # .MEM_1105 = VDEF <.MEM_962>
  MEM[(size_typeD.11502 *)_869 + 8B] = prephitmp_761;
  # DEBUG D#2ptD.0 => _869
  # DEBUG thisD.44971 => D#2ptD.0
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _887 = prephitmp_1113 + prephitmp_761;
  # DEBUG __c1D.54277 => _887
  # DEBUG __c2D.54276 => D#32ptD.0
  # .MEM_1106 = VDEF <.MEM_1105>
  MEM[(char_typeD.6629 &)_887] = 0;
  # .MEM_1107 = VDEF <.MEM_1106>
  __dnewD.54260 ={v} {CLOBBER};
  # VUSE <.MEM_1107>
  pretmp_1224 = paramsD.36157.D.36900._M_implD.36391._M_finishD.36394;
;;    succ:       309 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 309, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 308, next block 310, flags: (NEW, REACHABLE)
;;    pred:       301 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                308 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_963 = PHI <.MEM_220(301), .MEM_1107(308)>
  # PT = nonlocal escaped null 
  # prephitmp_1223 = PHI <_869(301), pretmp_1224(308)>
  # PT = nonlocal escaped null 
  _876 = prephitmp_1223 + 32;
  # .MEM_1109 = VDEF <.MEM_963>
  paramsD.36157.D.36900._M_implD.36391._M_finishD.36394 = _876;
  goto <bb 312>;
;;    succ:       312 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 310, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 309, next block 311, flags: (NEW, REACHABLE)
;;    pred:       300 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.49764 => &paramsD.36157
  # DEBUG D#116ptD.0 => &paramsD.36157.D.36900._M_implD.36391._M_finishD.36394
  # DEBUG thisD.49766 => NULL
  # DEBUG __iD.49765 => D#116ptD.0
  # .MEM_1096 = VDEF <.MEM_220>
  MEM[(struct __normal_iteratorD.36469 *)&D.54256] = _869;
  [LP 128] # .MEM_1097 = VDEF <.MEM_1096>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_D.36828 (&paramsD.36157, D.54256, &D.37119);
  goto <bb 312>;
;;    succ:       312 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                311 (EH,EXECUTABLE)

;;   basic block 311, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 310, next block 312, flags: (NEW)
;;    pred:       310 (EH,EXECUTABLE)
<L252>: [LP 128]
  goto <bb 476> (<L154>);
;;    succ:       476 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 312, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 311, next block 313, flags: (NEW, REACHABLE)
;;    pred:       310 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                309 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_964 = PHI <.MEM_1097(310), .MEM_1109(309)>
  # DEBUG thisD.51058 => &D.37119
  # DEBUG thisD.51059 => &D.37119
  # DEBUG thisD.51068 => &D.37119
  # VUSE <.MEM_964>
  # PT = nonlocal escaped null 
  _223 = MEM[(charD.10 * *)&D.37119];
  # DEBUG D#2ptD.0 => &D.37119
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51069 => &D.37119
  if (&D.37119.D.11539._M_local_bufD.11541 != _223)
    goto <bb 313>;
  else
    goto <bb 314>;
;;    succ:       313 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                314 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 313, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 312, next block 314, flags: (NEW, REACHABLE)
;;    pred:       312 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37119.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51061 => &D.37119
  # DEBUG __sizeD.51060 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37119
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37119
  # DEBUG D#216ptD.0 => &D.37119._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51064 => _223
  # DEBUG __aD.51062 => D#214ptD.0
  # DEBUG __nD.51063 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51067 => _223
  # DEBUG thisD.51065 => D#210ptD.0
  # DEBUG D.51066 => D#211ptD.0
  # .MEM_638 = VDEF <.MEM_964>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_223);
;;    succ:       314 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 314, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 313, next block 315, flags: (NEW, REACHABLE)
;;    pred:       312 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                313 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_370 = PHI <.MEM_964(312), .MEM_638(313)>
  # DEBUG D#220ptD.0 => &D.37119._M_dataplusD.11519
  # DEBUG thisD.51070 => D#220ptD.0
  # DEBUG thisD.51071 => D#220ptD.0
  # DEBUG thisD.51072 => D#220ptD.0
  # .MEM_222 = VDEF <.MEM_370>
  D.37119 ={v} {CLOBBER};
  # DEBUG thisD.51056 => &D.37118
  # DEBUG thisD.51057 => &D.37118
  # VUSE <.MEM_222>
  pretmp_538 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
;;    succ:       315 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 315, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 314, next block 316, flags: (NEW, REACHABLE)
;;    pred:       297 [85.0%]  (FALSE_VALUE,EXECUTABLE)
;;                314 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_637(297), .MEM_222(314)>
  # PT = nonlocal escaped null 
  # prephitmp_466 = PHI <_329(297), pretmp_538(314)>
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.51074 => 0
  # DEBUG thisD.51075 => D#97ptD.0
  [LP 129] # .MEM_227 = VDEF <.MEM_24>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  hotspotsD.37120 = _Z12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33850 (prephitmp_466); [return slot optimization]
  goto <bb 317>;
;;    succ:       316 (EH,EXECUTABLE)
;;                317 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 316, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 315, next block 317, flags: (NEW)
;;    pred:       315 (EH,EXECUTABLE)
<L253>: [LP 129]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 317, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 316, next block 318, flags: (NEW, REACHABLE)
;;    pred:       315 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG iD.37122 => 0
  # VUSE <.MEM_227>
  # PT = nonlocal escaped null 
  _1230 = MEM[(intD.9 * *)&hotspotsD.37120];
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # VUSE <.MEM_227>
  # PT = nonlocal escaped null 
  _1229 = MEM[(intD.9 * *)&hotspotsD.37120 + 8B];
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # DEBUG thisD.51080 => D#99ptD.0
  # DEBUG thisD.51079 => D#99ptD.0
  _1232 = (long intD.12) _1229;
  _1157 = (long intD.12) _1230;
  _1161 = _1232 - _1157;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _958 = _1161 /[ex] 4;
  if (_958 != 0)
    goto <bb 318>;
  else
    goto <bb 325>;
;;    succ:       318 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                325 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 318, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 317, next block 319, flags: (NEW, REACHABLE)
;;    pred:       317 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       319 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 319, loop depth 1, count 0, freq 1, maybe hot
;;    prev block 318, next block 320, flags: (NEW)
;;    pred:       318 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                324 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  # i_961 = PHI <0(318), i_233(324)>
  # .MEM_759 = PHI <.MEM_227(318), .MEM_26(324)>
  # PT = nonlocal escaped null 
  # _97 = PHI <_1230(318), prephitmp_1196(324)>
  # prephitmp_942 = PHI <_1230(318), prephitmp_1196(324)>
  # prephitmp_970 = PHI <_1229(318), prephitmp_756(324)>
  # DEBUG iD.37122 => i_961
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # DEBUG thisD.51080 => D#99ptD.0
  # DEBUG thisD.51079 => D#99ptD.0
  # DEBUG D#100ptD.0 => &hotspotsD.37120
  # DEBUG __nD.51083 => i_961
  # DEBUG thisD.51084 => D#100ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _335 = i_961 * 4;
  # PT = nonlocal escaped null 
  _336 = _97 + _335;
  # VUSE <.MEM_759>
  _230 = *_336;
  if (_230 < 0)
    goto <bb 320>;
  else
    goto <bb 322>;
;;    succ:       320 [13.1%]  (TRUE_VALUE,EXECUTABLE)
;;                322 [86.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 320, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 319, next block 321, flags: (NEW, REACHABLE)
;;    pred:       319 [13.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => &hotspotsD.37120
  # DEBUG __nD.51089 => i_961
  # DEBUG thisD.51090 => D#100ptD.0
  # DEBUG maxD.51086 => nodes_65(D) + -1
  [LP 130] # .MEM_648 = VDEF <.MEM_759>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _337 = _Z8ran_nextvD.25964 ();
;;    succ:       321 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                502 (EH,EXECUTABLE)

;;   basic block 321, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 320, next block 322, flags: (NEW, REACHABLE)
;;    pred:       320 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-2147483648, 2147483647]
  _338 = (long intD.12) nodes_65(D);
  _339 = _337 % _338;
  _340 = (intD.9) _339;
  # .MEM_232 = VDEF <.MEM_648>
  *_336 = _340;
  # VUSE <.MEM_232>
  pretmp_1195 = MEM[(struct _Vector_baseD.34198 *)&hotspotsD.37120]._M_implD.34431._M_startD.34433;
  # VUSE <.MEM_232>
  pretmp_1198 = MEM[(intD.9 * *)&hotspotsD.37120 + 8B];
;;    succ:       322 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 322, loop depth 1, count 0, freq 1, maybe hot
;;    prev block 321, next block 323, flags: (NEW, REACHABLE)
;;    pred:       319 [86.9%]  (FALSE_VALUE,EXECUTABLE)
;;                321 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_759(319), .MEM_232(321)>
  # PT = nonlocal escaped null 
  # prephitmp_1196 = PHI <prephitmp_942(319), pretmp_1195(321)>
  # PT = nonlocal escaped null 
  # prephitmp_756 = PHI <prephitmp_970(319), pretmp_1198(321)>
  # RANGE [0, 18446744073709551615]
  i_233 = i_961 + 1;
  # DEBUG iD.37122 => i_233
  # DEBUG iD.37122 => i_233
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # DEBUG thisD.51080 => D#99ptD.0
  # DEBUG thisD.51079 => D#99ptD.0
  _330 = (long intD.12) prephitmp_756;
  _331 = (long intD.12) prephitmp_1196;
  _332 = _330 - _331;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _333 = _332 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _334 = (size_typeD.34516) _333;
  if (i_233 < _334)
    goto <bb 324>;
  else
    goto <bb 323>;
;;    succ:       324 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                323 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 323, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 322, next block 324, flags: (NEW)
;;    pred:       322 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[2305843009213693952, 16140901064495857663]
  # _1145 = PHI <_334(322)>
  goto <bb 325>;
;;    succ:       325 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 324, loop depth 1, count 0, freq 1, maybe hot
;;    prev block 323, next block 325, flags: (NEW)
;;    pred:       322 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 319>;
;;    succ:       319 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 325, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 324, next block 326, flags: (NEW, REACHABLE)
;;    pred:       323 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                317 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_86 = PHI <.MEM_26(323), .MEM_227(317)>
  # RANGE ~[2305843009213693952, 16140901064495857663]
  # _735 = PHI <_1145(323), 0(317)>
  # DEBUG thisD.51097 => &ratesD.37123
  # DEBUG D#209ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.51098 => D#209ptD.0
  # DEBUG D#208ptD.0 => &D#209ptD.0->_M_implD.34431
  # DEBUG thisD.51099 => D#208ptD.0
  # DEBUG thisD.46184 => D#208ptD.0
  # DEBUG thisD.46182 => D#208ptD.0
  # .MEM_649 = VDEF <.MEM_86>
  MEM[(struct _Vector_implD.34408 *)&ratesD.37123]._M_startD.34433 = 0B;
  # .MEM_650 = VDEF <.MEM_649>
  MEM[(struct _Vector_implD.34408 *)&ratesD.37123]._M_finishD.34434 = 0B;
  # .MEM_651 = VDEF <.MEM_650>
  MEM[(struct _Vector_implD.34408 *)&ratesD.37123]._M_end_of_storageD.34435 = 0B;
  # VUSE <.MEM_651>
  # PT = nonlocal escaped null 
  _292 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # VUSE <.MEM_651>
  # PT = nonlocal escaped null 
  _293 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.51095 => D#98ptD.0
  # DEBUG thisD.51094 => D#98ptD.0
  _341 = (long intD.12) _293;
  _342 = (long intD.12) _292;
  _343 = _341 - _342;
  # RANGE [-288230376151711744, 288230376151711743]
  _344 = _343 /[ex] 32;
  # RANGE ~[288230376151711744, 18158513697557839871]
  _345 = (size_typeD.36476) _344;
  if (_345 > 1)
    goto <bb 326>;
  else
    goto <bb 354>;
;;    succ:       326 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                354 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 326, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 325, next block 327, flags: (NEW, REACHABLE)
;;    pred:       325 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#97ptD.0 => &paramsD.36157
  # DEBUG __nD.51101 => 1
  # DEBUG thisD.51102 => D#97ptD.0
  # PT = nonlocal escaped null 
  _346 = _292 + 32;
  [LP 131] # .MEM_236 = VDEF <.MEM_651>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  D.37124 = _Z12tokenize_intRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.33850 (_346); [return slot optimization]
;;    succ:       497 (EH,EXECUTABLE)
;;                327 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 327, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 326, next block 328, flags: (NEW, REACHABLE)
;;    pred:       326 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.54286 => &ratesD.37123
  # DEBUG __xD.54287 => &D.37124
  # VUSE <.MEM_236>
  # PT = nonlocal escaped null 
  _888 = MEM[(intD.9 * *)&D.37124];
  # DEBUG D#99ptD.0 => &D.37124
  # VUSE <.MEM_236>
  # PT = nonlocal escaped null 
  _889 = MEM[(intD.9 * *)&D.37124 + 8B];
  # DEBUG D#99ptD.0 => &D.37124
  # DEBUG thisD.54289 => D#99ptD.0
  # DEBUG thisD.54290 => D#99ptD.0
  _890 = (long intD.12) _889;
  _891 = (long intD.12) _888;
  _892 = _890 - _891;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _893 = _892 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _894 = (size_typeD.34516) _893;
  # DEBUG __xlenD.54288 => NULL
  # VUSE <.MEM_236>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  _895 = MEM[(intD.9 * *)&ratesD.37123];
  # DEBUG D#110ptD.0 => &ratesD.37123
  # VUSE <.MEM_236>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  _896 = MEM[(intD.9 * *)&ratesD.37123 + 16B];
  # DEBUG D#110ptD.0 => &ratesD.37123
  # DEBUG thisD.54359 => D#110ptD.0
  # DEBUG thisD.54360 => D#110ptD.0
  _897 = (long intD.12) _896;
  _898 = (long intD.12) _895;
  _899 = _897 - _898;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _900 = _899 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _901 = (size_typeD.34516) _900;
  if (_894 > _901)
    goto <bb 328>;
  else
    goto <bb 340>;
;;    succ:       328 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                340 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 328, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 327, next block 329, flags: (NEW, REACHABLE)
;;    pred:       327 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#114ptD.0 => &D.37124
  # DEBUG thisD.48000 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # DEBUG D#115ptD.0 => &D.37124
  # DEBUG thisD.47997 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG D#351ptD.0 => &ratesD.37123
  # DEBUG __nD.54375 => _894
  # DEBUG thisD.54378 => D#351ptD.0
  # DEBUG D#350ptD.0 => D#351ptD.0
  # DEBUG D#349ptD.0 => D#351ptD.0
  # DEBUG D#348ptD.0 => &D#349ptD.0->D.34940
  # DEBUG D#346ptD.0 => D#348ptD.0
  # DEBUG __nD.54413 => _894
  # DEBUG thisD.54414 => D#346ptD.0
  # DEBUG D#345ptD.0 => D#346ptD.0
  if (_894 != 0)
    goto <bb 330>;
  else
    goto <bb 329>;
;;    succ:       330 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                329 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 329, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 328, next block 330, flags: (NEW)
;;    pred:       328 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_5 = (long unsigned intD.14) _892;
  goto <bb 335>;
;;    succ:       335 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 330, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 329, next block 331, flags: (NEW, REACHABLE)
;;    pred:       328 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#344ptD.0 => &D#345ptD.0->_M_implD.34431
  # DEBUG D#343ptD.0 => D#344ptD.0
  # DEBUG __nD.54417 => _894
  # DEBUG __aD.54416 => D#343ptD.0
  # DEBUG D#342ptD.0 => D#343ptD.0
  # DEBUG D#340ptD.0 => D#342ptD.0
  # DEBUG D#341ptD.0 => 0B
  # DEBUG __nD.54420 => _894
  # DEBUG thisD.54418 => D#340ptD.0
  # DEBUG D.54419 => D#341ptD.0
  # DEBUG D#339ptD.0 => D#340ptD.0
  # DEBUG D#338ptD.0 => D#339ptD.0
  # DEBUG thisD.47834 => D#338ptD.0
  if (_894 > 4611686018427387903)
    goto <bb 331>;
  else
    goto <bb 332>;
;;    succ:       331 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                332 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 331, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 330, next block 332, flags: (NEW, REACHABLE)
;;    pred:       330 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 132] # .MEM_1115 = VDEF <.MEM_236>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt17__throw_bad_allocvD.3957 ();
;;    succ:       480 (EH,EXECUTABLE)

;;   basic block 332, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 331, next block 333, flags: (NEW, REACHABLE)
;;    pred:       330 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _937 = (long unsigned intD.14) _892;
  [LP 45] # .MEM_1114 = VDEF <.MEM_236>
  # PT = { D.54669 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _938 = _ZnwmD.2764 (_937);
  goto <bb 334>;
;;    succ:       334 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                333 (EH,EXECUTABLE)

;;   basic block 333, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 332, next block 334, flags: (NEW)
;;    pred:       332 (EH,EXECUTABLE)
<L257>: [LP 45]
  goto <bb 481> (<L156>);
;;    succ:       481 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 334, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 333, next block 335, flags: (NEW)
;;    pred:       332 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_1114>
  pretmp_1149 = ratesD.37123.D.34940._M_implD.34431._M_startD.34433;
;;    succ:       335 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 335, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 334, next block 336, flags: (NEW, REACHABLE)
;;    pred:       329 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                334 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.54669 } (escaped heap)
  # iftmp.79_939 = PHI <0B(329), _938(334)>
  # .MEM_965 = PHI <.MEM_236(329), .MEM_1114(334)>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  # prephitmp_17 = PHI <_895(329), pretmp_1149(334)>
  # prephitmp_3 = PHI <pretmp_5(329), _937(334)>
  # DEBUG __resultD.54379 => NULL
  # DEBUG D#347ptD.0 => &D#350ptD.0->D.34940
  # DEBUG thisD.47929 => D#347ptD.0
  # DEBUG __firstD.54411 => _888
  # DEBUG __lastD.54412 => _889
  # DEBUG __resultD.54381 => NULL
  # DEBUG D.54380 => D#323ptD.0
  # DEBUG __firstD.47964 => _888
  # DEBUG __lastD.47963 => _889
  # DEBUG __resultD.54384 => NULL
  # DEBUG __assignableD.54389 => 1
  # DEBUG __firstD.47652 => _888
  # DEBUG __lastD.47653 => _889
  # DEBUG __resultD.54390 => NULL
  # DEBUG __firstD.47582 => _888
  # DEBUG __lastD.47581 => _889
  # DEBUG __resultD.54393 => NULL
  # DEBUG __itD.47553 => _889
  # DEBUG __it$_M_currentD.47523 => _889
  # DEBUG __itD.47555 => _888
  # DEBUG __it$_M_currentD.47519 => _888
  # DEBUG __firstD.47528 => _888
  # DEBUG __lastD.47529 => _889
  # DEBUG __resultD.54396 => NULL
  # DEBUG __itD.47494 => NULL
  # DEBUG __itD.46062 => NULL
  # DEBUG __itD.47514 => _889
  # DEBUG __itD.47492 => _889
  # DEBUG thisD.46571 => NULL
  # DEBUG __itD.47516 => _888
  # DEBUG __itD.47488 => _888
  # DEBUG thisD.46571 => NULL
  # DEBUG __firstD.54401 => _888
  # DEBUG __lastD.54400 => _889
  # DEBUG __resultD.54399 => NULL
  # DEBUG __simpleD.54405 => 1
  # DEBUG __firstD.54408 => _888
  # DEBUG __lastD.54407 => _889
  # DEBUG __resultD.54406 => NULL
  # DEBUG _NumD.54409 => _893
  if (_893 != 0)
    goto <bb 336>;
  else
    goto <bb 337>;
;;    succ:       336 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                337 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 336, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 335, next block 337, flags: (NEW, REACHABLE)
;;    pred:       335 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1117 = VDEF <.MEM_965>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memmoveD.995 (iftmp.79_939, _888, prephitmp_3);
;;    succ:       337 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 337, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 336, next block 338, flags: (NEW, REACHABLE)
;;    pred:       335 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                336 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_966 = PHI <.MEM_965(335), .MEM_1117(336)>
  # DEBUG __tmpD.54361 => NULL
  # DEBUG D#352ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.47994 => D#352ptD.0
  # DEBUG D#365ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#364ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.47991 => D#364ptD.0
  # DEBUG __lastD.47992 => D#365ptD.0
  # DEBUG D.47993 => NULL
  # DEBUG D#140ptD.0 => D#364ptD.0
  # DEBUG D#141ptD.0 => D#365ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#363ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#362ptD.0 => (long intD.12) D#363ptD.0
  # DEBUG D#778ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_startD.34433
  # DEBUG D#361ptD.0 => (long intD.12) D#778ptD.0
  # DEBUG D#360ptD.0 => D#362ptD.0 - D#361ptD.0
  # DEBUG D#359ptD.0 => D#360ptD.0 /[ex] 4
  # DEBUG D#358ptD.0 => (long unsigned intD.14) D#359ptD.0
  # DEBUG D#357ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.54364 => D#357ptD.0
  # DEBUG __pD.54363 => D#778ptD.0
  # DEBUG __nD.54362 => D#358ptD.0
  if (prephitmp_17 != 0B)
    goto <bb 338>;
  else
    goto <bb 339>;
;;    succ:       338 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                339 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 338, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 337, next block 339, flags: (NEW, REACHABLE)
;;    pred:       337 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#357ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#358ptD.0
  # DEBUG __pD.54368 => D#778ptD.0
  # DEBUG __aD.54366 => D#157ptD.0
  # DEBUG __nD.54367 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.54371 => D#778ptD.0
  # DEBUG thisD.54369 => D#153ptD.0
  # DEBUG D.54370 => D#154ptD.0
  # .MEM_1119 = VDEF <.MEM_966>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (prephitmp_17);
;;    succ:       339 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 339, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 338, next block 340, flags: (NEW, REACHABLE)
;;    pred:       337 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                338 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_967 = PHI <.MEM_966(337), .MEM_1119(338)>
  # .MEM_1120 = VDEF <.MEM_967>
  ratesD.37123.D.34940._M_implD.34431._M_startD.34433 = iftmp.79_939;
  # PT = null { D.54669 } (escaped heap)
  _905 = iftmp.79_939 + prephitmp_3;
  # .MEM_1121 = VDEF <.MEM_1120>
  ratesD.37123.D.34940._M_implD.34431._M_end_of_storageD.34435 = _905;
  # VUSE <.MEM_1121>
  pretmp_467 = MEM[(struct _Vector_baseD.34198 *)&D.37124]._M_implD.34431._M_startD.34433;
  goto <bb 349>;
;;    succ:       349 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 340, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 339, next block 341, flags: (NEW, REACHABLE)
;;    pred:       327 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => &ratesD.37123
  # VUSE <.MEM_236>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  _906 = MEM[(intD.9 * *)&ratesD.37123 + 8B];
  # DEBUG D#99ptD.0 => &ratesD.37123
  # DEBUG thisD.54357 => D#99ptD.0
  # DEBUG thisD.54358 => D#99ptD.0
  _907 = (long intD.12) _906;
  _908 = _907 - _898;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _909 = _908 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _910 = (size_typeD.34516) _909;
  if (_894 <= _910)
    goto <bb 341>;
  else
    goto <bb 344>;
;;    succ:       341 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                344 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 341, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 340, next block 342, flags: (NEW, REACHABLE)
;;    pred:       340 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#353ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.48045 => D#353ptD.0
  # DEBUG thisD.48041 => &ratesD.37123
  # DEBUG D#118ptD.0 => &ratesD.37123.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.48043 => NULL
  # DEBUG __iD.48042 => D#118ptD.0
  # DEBUG D.48108 => _906
  # DEBUG thisD.48037 => &ratesD.37123
  # DEBUG D#119ptD.0 => &ratesD.37123.D.34940._M_implD.34431._M_startD.34433
  # DEBUG thisD.48039 => NULL
  # DEBUG __iD.48038 => D#119ptD.0
  # DEBUG D#114ptD.0 => &D.37124
  # DEBUG thisD.48035 => D#114ptD.0
  # DEBUG thisD.45577 => NULL
  # DEBUG __iD.45576 => NULL
  # DEBUG D#115ptD.0 => &D.37124
  # DEBUG thisD.48032 => D#115ptD.0
  # DEBUG thisD.45593 => NULL
  # DEBUG __iD.45592 => NULL
  # DEBUG __firstD.48115 => _888
  # DEBUG __lastD.48116 => _889
  # DEBUG __resultD.48117 => _895
  # DEBUG __itD.48025 => _889
  # DEBUG __it$_M_currentD.46651 => _889
  # DEBUG __itD.48027 => _888
  # DEBUG __it$_M_currentD.46647 => _888
  # DEBUG __firstD.46656 => _888
  # DEBUG __lastD.46657 => _889
  # DEBUG __resultD.48029 => _895
  # DEBUG __itD.46639 => _895
  # DEBUG __itD.46616 => _895
  # DEBUG thisD.46578 => NULL
  # DEBUG __itD.46641 => _889
  # DEBUG __itD.46612 => _889
  # DEBUG thisD.46571 => NULL
  # DEBUG __itD.46643 => _888
  # DEBUG __itD.46608 => _888
  # DEBUG thisD.46571 => NULL
  # DEBUG __firstD.54348 => _888
  # DEBUG __lastD.54347 => _889
  # DEBUG __resultD.54346 => _895
  # DEBUG __simpleD.54352 => 1
  # DEBUG __firstD.54355 => _888
  # DEBUG __lastD.54354 => _889
  # DEBUG __resultD.54353 => _895
  # DEBUG _NumD.54356 => _893
  if (_893 != 0)
    goto <bb 343>;
  else
    goto <bb 342>;
;;    succ:       343 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                342 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 342, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 341, next block 343, flags: (NEW)
;;    pred:       341 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_462 = (long unsigned intD.14) _892;
  pretmp_1046 = _895 + pretmp_462;
  goto <bb 349>;
;;    succ:       349 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 343, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 342, next block 344, flags: (NEW, REACHABLE)
;;    pred:       341 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _911 = (long unsigned intD.14) _892;
  # .MEM_1122 = VDEF <.MEM_236>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memmoveD.995 (_895, _888, _911);
  # VUSE <.MEM_1122>
  pretmp_468 = MEM[(struct _Vector_baseD.34198 *)&D.37124]._M_implD.34431._M_startD.34433;
  # VUSE <.MEM_1122>
  pretmp_455 = ratesD.37123.D.34940._M_implD.34431._M_startD.34433;
  pretmp_459 = pretmp_455 + _911;
  goto <bb 349>;
;;    succ:       349 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 344, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 343, next block 345, flags: (NEW, REACHABLE)
;;    pred:       340 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => &ratesD.37123
  # DEBUG D#99ptD.0 => &ratesD.37123
  # DEBUG thisD.48106 => D#99ptD.0
  # DEBUG thisD.48105 => D#99ptD.0
  # RANGE [0, 18446744073709551615]
  _912 = (long unsigned intD.14) _908;
  # DEBUG D#356ptD.0 => _888 + _912
  # DEBUG __firstD.54293 => _888
  # DEBUG __lastD.54292 => D#356ptD.0
  # DEBUG __resultD.54291 => _895
  # DEBUG __itD.46707 => D#356ptD.0
  # DEBUG __itD.46059 => D#356ptD.0
  # DEBUG __itD.46705 => _888
  # DEBUG __itD.46059 => _888
  # DEBUG __firstD.54296 => _888
  # DEBUG __lastD.54295 => D#356ptD.0
  # DEBUG __resultD.54294 => _895
  # DEBUG __itD.46687 => _895
  # DEBUG __itD.46062 => _895
  # DEBUG __itD.46685 => D#356ptD.0
  # DEBUG __itD.46062 => D#356ptD.0
  # DEBUG __itD.46683 => _888
  # DEBUG __itD.46062 => _888
  # DEBUG __firstD.54299 => NULL
  # DEBUG __lastD.54298 => NULL
  # DEBUG __resultD.54297 => NULL
  # DEBUG __simpleD.54303 => 1
  # DEBUG __firstD.54306 => NULL
  # DEBUG __lastD.54305 => NULL
  # DEBUG __resultD.54304 => NULL
  # DEBUG _NumD.54307 => _909
  if (_909 != 0)
    goto <bb 345>;
  else
    goto <bb 346>;
;;    succ:       345 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                346 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 345, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 344, next block 346, flags: (NEW, REACHABLE)
;;    pred:       344 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1123 = VDEF <.MEM_236>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memmoveD.995 (_895, _888, _912);
  # VUSE <.MEM_1123>
  pretmp_416 = ratesD.37123.D.34940._M_implD.34431._M_finishD.34434;
  # VUSE <.MEM_1123>
  pretmp_418 = D.37124.D.34940._M_implD.34431._M_finishD.34434;
  # VUSE <.MEM_1123>
  pretmp_409 = D.37124.D.34940._M_implD.34431._M_startD.34433;
  # VUSE <.MEM_1123>
  pretmp_411 = MEM[(intD.9 * *)&ratesD.37123];
  pretmp_796 = (long intD.12) pretmp_416;
  pretmp_933 = (long intD.12) pretmp_411;
  pretmp_45 = pretmp_796 - pretmp_933;
  pretmp_800 = (long unsigned intD.14) pretmp_45;
  pretmp_13 = (long intD.12) pretmp_418;
;;    succ:       346 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 346, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 345, next block 347, flags: (NEW, REACHABLE)
;;    pred:       344 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                345 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_968 = PHI <.MEM_236(344), .MEM_1123(345)>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  # prephitmp_417 = PHI <_906(344), pretmp_416(345)>
  # PT = nonlocal escaped null 
  # prephitmp_410 = PHI <_888(344), pretmp_409(345)>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  # prephitmp_412 = PHI <_895(344), pretmp_411(345)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_783 = PHI <_912(344), pretmp_800(345)>
  # prephitmp_25 = PHI <_890(344), pretmp_13(345)>
  # DEBUG D#354ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.48083 => D#354ptD.0
  # DEBUG D#777ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#776ptD.0 => D.37124.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#99ptD.0 => &ratesD.37123
  # DEBUG D#99ptD.0 => &ratesD.37123
  # DEBUG thisD.54308 => D#99ptD.0
  # DEBUG thisD.54309 => D#99ptD.0
  # PT = nonlocal escaped null 
  _921 = prephitmp_410 + prephitmp_783;
  # DEBUG __firstD.54313 => _921
  # DEBUG __lastD.54312 => D#776ptD.0
  # DEBUG __resultD.54311 => D#777ptD.0
  # DEBUG D.54310 => D#244ptD.0
  # DEBUG __firstD.54316 => _921
  # DEBUG __lastD.54315 => D#776ptD.0
  # DEBUG __resultD.54314 => D#777ptD.0
  # DEBUG __assignableD.54319 => 1
  # DEBUG __firstD.54322 => _921
  # DEBUG __lastD.54321 => D#776ptD.0
  # DEBUG __resultD.54320 => D#777ptD.0
  # DEBUG __firstD.54325 => _921
  # DEBUG __lastD.54324 => D#776ptD.0
  # DEBUG __resultD.54323 => D#777ptD.0
  # DEBUG __itD.46707 => D#776ptD.0
  # DEBUG __itD.46059 => D#776ptD.0
  # DEBUG __itD.46705 => _921
  # DEBUG __itD.46059 => _921
  # DEBUG __firstD.54328 => _921
  # DEBUG __lastD.54327 => D#776ptD.0
  # DEBUG __resultD.54326 => D#777ptD.0
  # DEBUG __itD.46687 => D#777ptD.0
  # DEBUG __itD.46062 => D#777ptD.0
  # DEBUG __itD.46685 => D#776ptD.0
  # DEBUG __itD.46062 => D#776ptD.0
  # DEBUG __itD.46683 => _921
  # DEBUG __itD.46062 => _921
  # DEBUG __firstD.54331 => NULL
  # DEBUG __lastD.54330 => NULL
  # DEBUG __resultD.54329 => NULL
  # DEBUG __simpleD.54335 => 1
  # DEBUG __firstD.54338 => NULL
  # DEBUG __lastD.54337 => NULL
  # DEBUG __resultD.54336 => NULL
  __first.82_923 = (long intD.12) _921;
  _924 = prephitmp_25 - __first.82_923;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_925 = _924 /[ex] 4;
  # DEBUG _NumD.54339 => _Num_925
  if (_Num_925 != 0)
    goto <bb 348>;
  else
    goto <bb 347>;
;;    succ:       348 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                347 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 347, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 346, next block 348, flags: (NEW)
;;    pred:       346 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_1033 = (long unsigned intD.14) _892;
  pretmp_1020 = prephitmp_412 + pretmp_1033;
  goto <bb 349>;
;;    succ:       349 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 348, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 347, next block 349, flags: (NEW, REACHABLE)
;;    pred:       346 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _926 = (long unsigned intD.14) _924;
  # .MEM_1124 = VDEF <.MEM_968>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  memmoveD.995 (prephitmp_417, _921, _926);
  # VUSE <.MEM_1124>
  pretmp_469 = MEM[(struct _Vector_baseD.34198 *)&D.37124]._M_implD.34431._M_startD.34433;
  # VUSE <.MEM_1124>
  pretmp_456 = ratesD.37123.D.34940._M_implD.34431._M_startD.34433;
  pretmp_460 = (long unsigned intD.14) _892;
  pretmp_461 = pretmp_456 + pretmp_460;
;;    succ:       349 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 349, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 348, next block 350, flags: (NEW, REACHABLE)
;;    pred:       339 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                343 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                348 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                342 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                347 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_969 = PHI <.MEM_1121(339), .MEM_1122(343), .MEM_1124(348), .MEM_236(342), .MEM_968(347)>
  # PT = nonlocal escaped null 
  # prephitmp_454 = PHI <pretmp_467(339), pretmp_468(343), pretmp_469(348), _888(342), prephitmp_410(347)>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  # prephitmp_427 = PHI <_905(339), pretmp_459(343), pretmp_461(348), pretmp_1046(342), pretmp_1020(347)>
  # .MEM_1125 = VDEF <.MEM_969>
  ratesD.37123.D.34940._M_implD.34431._M_finishD.34434 = prephitmp_427;
  # DEBUG thisD.51116 => &D.37124
  # DEBUG D#167ptD.0 => &D.37124.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D.37124.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D.37124.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D.37124.D.34940
  # DEBUG thisD.51117 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # DEBUG D#775ptD.0 => MEM[(struct _Vector_baseD.34198 *)&D.37124]._M_implD.34431._M_startD.34433
  # DEBUG D#164ptD.0 => (long intD.12) D#775ptD.0
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51120 => D#168ptD.0
  # DEBUG __pD.51119 => D#775ptD.0
  # DEBUG __nD.51118 => D#161ptD.0
  if (prephitmp_454 != 0B)
    goto <bb 350>;
  else
    goto <bb 351>;
;;    succ:       350 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                351 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 350, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 349, next block 351, flags: (NEW, REACHABLE)
;;    pred:       349 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51124 => D#775ptD.0
  # DEBUG __aD.51122 => D#157ptD.0
  # DEBUG __nD.51123 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51127 => D#775ptD.0
  # DEBUG thisD.51125 => D#153ptD.0
  # DEBUG D.51126 => D#154ptD.0
  # .MEM_652 = VDEF <.MEM_1125>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (prephitmp_454);
  # VUSE <.MEM_652>
  pretmp_429 = MEM[(intD.9 * const &)&ratesD.37123 + 8];
;;    succ:       351 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 351, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 350, next block 352, flags: (NEW, REACHABLE)
;;    pred:       349 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                350 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_371 = PHI <.MEM_1125(349), .MEM_652(350)>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  # prephitmp_430 = PHI <prephitmp_427(349), pretmp_429(350)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51128 => D#160ptD.0
  # DEBUG thisD.51129 => D#160ptD.0
  # DEBUG thisD.51130 => D#160ptD.0
  # .MEM_238 = VDEF <.MEM_371>
  D.37124 ={v} {CLOBBER};
  # DEBUG thisD.51109 => &ratesD.37123
  # DEBUG thisD.51110 => &ratesD.37123
  # DEBUG D#118ptD.0 => &ratesD.37123.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG thisD.51112 => NULL
  # DEBUG __iD.51111 => D#118ptD.0
  # DEBUG thisD.51114 => NULL
  # DEBUG __nD.51113 => 1
  # DEBUG thisD.45635 => NULL
  # DEBUG __iD.45634 => NULL
  # DEBUG thisD.45630 => NULL
  # VUSE <.MEM_238>
  _240 = MEM[(intD.9 &)prephitmp_430 + 18446744073709551612];
  # VUSE <.MEM_238>
  # PT = nonlocal escaped null 
  _296 = MEM[(intD.9 * *)&hotspotsD.37120];
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # VUSE <.MEM_238>
  # PT = nonlocal escaped null 
  _297 = MEM[(intD.9 * *)&hotspotsD.37120 + 8B];
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # DEBUG thisD.51107 => D#99ptD.0
  # DEBUG thisD.51106 => D#99ptD.0
  _347 = (long intD.12) _297;
  _348 = (long intD.12) _296;
  _349 = _347 - _348;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _350 = _349 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _351 = (size_typeD.34516) _350;
  [LP 133] # .MEM_242 = VDEF <.MEM_238>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt6vectorIiSaIiEE6resizeEmiD.34605 (&ratesD.37123, _351, _240);
;;    succ:       353 (EH,EXECUTABLE)
;;                352 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 352, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 351, next block 353, flags: (NEW, REACHABLE)
;;    pred:       351 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                354 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1155 = PHI <.MEM_242(351), .MEM_246(354)>
  [LP 135] # .MEM_247 = VDEF <.MEM_1155>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt6vectorIiSaIiEEC1ERKS1_D.34908 (&D.37135, &hotspotsD.37120);
  goto <bb 357>;
;;    succ:       356 (EH,EXECUTABLE)
;;                357 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 353, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 352, next block 354, flags: (NEW)
;;    pred:       351 (EH,EXECUTABLE)
<L258>: [LP 133]
  goto <bb 498> (<L160>);
;;    succ:       498 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 354, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 353, next block 355, flags: (NEW, REACHABLE)
;;    pred:       325 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # DEBUG D#99ptD.0 => &hotspotsD.37120
  # DEBUG thisD.51134 => D#99ptD.0
  # DEBUG thisD.51133 => D#99ptD.0
  [LP 134] # .MEM_246 = VDEF <.MEM_651>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt6vectorIiSaIiEE6resizeEmiD.34605 (&ratesD.37123, _735, 1);
  goto <bb 352>;
;;    succ:       355 (EH,EXECUTABLE)
;;                352 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 355, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 354, next block 356, flags: (NEW)
;;    pred:       354 (EH,EXECUTABLE)
<L259>: [LP 134]
  goto <bb 498> (<L160>);
;;    succ:       498 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 356, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 355, next block 357, flags: (NEW)
;;    pred:       352 (EH,EXECUTABLE)
<L260>: [LP 135]
  goto <bb 498> (<L160>);
;;    succ:       498 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 357, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 356, next block 358, flags: (NEW, REACHABLE)
;;    pred:       352 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 136] # .MEM_248 = VDEF <.MEM_247>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZNSt6vectorIiSaIiEEC1ERKS1_D.34908 (&D.37136, &ratesD.37123);
;;    succ:       492 (EH,EXECUTABLE)
;;                358 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 358, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 357, next block 359, flags: (NEW, REACHABLE)
;;    pred:       357 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 137] # .MEM_249 = VDEF <.MEM_248>
  # PT = { D.54670 } (escaped heap)
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  result_250 = _ZnwmD.2764 (72);
;;    succ:       487 (EH,EXECUTABLE)
;;                359 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 359, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 358, next block 360, flags: (NEW, REACHABLE)
;;    pred:       358 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 48] # .MEM_251 = VDEF <.MEM_249>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZN21HotSpotTrafficPatternC1EiSt6vectorIiSaIiEES2_D.36108 (result_250, nodes_65(D), &D.37135, &D.37136);
;;    succ:       485 (EH,EXECUTABLE)
;;                360 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 360, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 359, next block 361, flags: (NEW, REACHABLE)
;;    pred:       359 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG resultD.36903 => result_250
  # DEBUG thisD.51181 => &D.37136
  # DEBUG D#167ptD.0 => &D.37136.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D.37136.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D.37136.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D.37136.D.34940
  # DEBUG thisD.51182 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_251>
  # PT = nonlocal escaped null 
  _253 = MEM[(struct _Vector_baseD.34198 *)&D.37136]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _253
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51185 => D#168ptD.0
  # DEBUG __pD.51184 => _253
  # DEBUG __nD.51183 => D#161ptD.0
  if (_253 != 0B)
    goto <bb 361>;
  else
    goto <bb 362>;
;;    succ:       361 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                362 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 361, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 360, next block 362, flags: (NEW, REACHABLE)
;;    pred:       360 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51189 => _253
  # DEBUG __aD.51187 => D#157ptD.0
  # DEBUG __nD.51188 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51192 => _253
  # DEBUG thisD.51190 => D#153ptD.0
  # DEBUG D.51191 => D#154ptD.0
  # .MEM_664 = VDEF <.MEM_251>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_253);
;;    succ:       362 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 362, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 361, next block 363, flags: (NEW, REACHABLE)
;;    pred:       360 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                361 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_372 = PHI <.MEM_251(360), .MEM_664(361)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51193 => D#160ptD.0
  # DEBUG thisD.51194 => D#160ptD.0
  # DEBUG thisD.51195 => D#160ptD.0
  # .MEM_252 = VDEF <.MEM_372>
  D.37136 ={v} {CLOBBER};
  # DEBUG thisD.51166 => &D.37135
  # DEBUG D#167ptD.0 => &D.37135.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D.37135.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D.37135.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D.37135.D.34940
  # DEBUG thisD.51167 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_252>
  # PT = nonlocal escaped null 
  _255 = MEM[(struct _Vector_baseD.34198 *)&D.37135]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _255
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51170 => D#168ptD.0
  # DEBUG __pD.51169 => _255
  # DEBUG __nD.51168 => D#161ptD.0
  if (_255 != 0B)
    goto <bb 363>;
  else
    goto <bb 364>;
;;    succ:       363 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                364 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 363, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 362, next block 364, flags: (NEW, REACHABLE)
;;    pred:       362 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51174 => _255
  # DEBUG __aD.51172 => D#157ptD.0
  # DEBUG __nD.51173 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51177 => _255
  # DEBUG thisD.51175 => D#153ptD.0
  # DEBUG D.51176 => D#154ptD.0
  # .MEM_670 = VDEF <.MEM_252>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_255);
;;    succ:       364 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 364, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 363, next block 365, flags: (NEW, REACHABLE)
;;    pred:       362 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                363 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_373 = PHI <.MEM_252(362), .MEM_670(363)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51178 => D#160ptD.0
  # DEBUG thisD.51179 => D#160ptD.0
  # DEBUG thisD.51180 => D#160ptD.0
  # .MEM_254 = VDEF <.MEM_373>
  D.37135 ={v} {CLOBBER};
  # DEBUG thisD.51151 => &ratesD.37123
  # DEBUG D#167ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.51152 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_254>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  _256 = MEM[(struct _Vector_baseD.34198 *)&ratesD.37123]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _256
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51155 => D#168ptD.0
  # DEBUG __pD.51154 => _256
  # DEBUG __nD.51153 => D#161ptD.0
  if (_256 != 0B)
    goto <bb 365>;
  else
    goto <bb 366>;
;;    succ:       365 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                366 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 365, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 364, next block 366, flags: (NEW, REACHABLE)
;;    pred:       364 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51159 => _256
  # DEBUG __aD.51157 => D#157ptD.0
  # DEBUG __nD.51158 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51162 => _256
  # DEBUG thisD.51160 => D#153ptD.0
  # DEBUG D.51161 => D#154ptD.0
  # .MEM_676 = VDEF <.MEM_254>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_256);
;;    succ:       366 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 366, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 365, next block 367, flags: (NEW, REACHABLE)
;;    pred:       364 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                365 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_374 = PHI <.MEM_254(364), .MEM_676(365)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51163 => D#160ptD.0
  # DEBUG thisD.51164 => D#160ptD.0
  # DEBUG thisD.51165 => D#160ptD.0
  # .MEM_681 = VDEF <.MEM_374>
  MEM[(struct  &)&ratesD.37123] ={v} {CLOBBER};
  # DEBUG thisD.51136 => &hotspotsD.37120
  # DEBUG D#167ptD.0 => &hotspotsD.37120.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => hotspotsD.37120.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => hotspotsD.37120.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &hotspotsD.37120.D.34940
  # DEBUG thisD.51137 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_681>
  # PT = nonlocal escaped null 
  _354 = MEM[(struct _Vector_baseD.34198 *)&hotspotsD.37120]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _354
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51140 => D#168ptD.0
  # DEBUG __pD.51139 => _354
  # DEBUG __nD.51138 => D#161ptD.0
  if (_354 != 0B)
    goto <bb 367>;
  else
    goto <bb 368>;
;;    succ:       367 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                368 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 367, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 366, next block 368, flags: (NEW, REACHABLE)
;;    pred:       366 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51144 => _354
  # DEBUG __aD.51142 => D#157ptD.0
  # DEBUG __nD.51143 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51147 => _354
  # DEBUG thisD.51145 => D#153ptD.0
  # DEBUG D.51146 => D#154ptD.0
  # .MEM_682 = VDEF <.MEM_681>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_354);
;;    succ:       368 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 368, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 367, next block 369, flags: (NEW, REACHABLE)
;;    pred:       366 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                367 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_375 = PHI <.MEM_681(366), .MEM_682(367)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51148 => D#160ptD.0
  # DEBUG thisD.51149 => D#160ptD.0
  # DEBUG thisD.51150 => D#160ptD.0
  # .MEM_257 = VDEF <.MEM_375>
  hotspotsD.37120 ={v} {CLOBBER};
  # .MEM_258 = VDEF <.MEM_257>
  ratesD.37123 ={v} {CLOBBER};
  goto <bb 375>;
;;    succ:       375 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 369, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 368, next block 370, flags: (NEW, REACHABLE)
;;    pred:       296 [0.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __outD.51196 => &_ZSt4coutD.22587
  # DEBUG __sD.51197 => "Error: Unknown traffic pattern: "
  # DEBUG __sD.51198 => "Error: Unknown traffic pattern: "
  [LP 138] # .MEM_712 = VDEF <.MEM_637>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, "Error: Unknown traffic pattern: ", 32);
  goto <bb 371>;
;;    succ:       371 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                370 (EH,EXECUTABLE)

;;   basic block 370, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 369, next block 371, flags: (NEW)
;;    pred:       369 (EH,EXECUTABLE)
<L263>: [LP 138]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 371, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 370, next block 372, flags: (NEW, REACHABLE)
;;    pred:       369 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __osD.51200 => &_ZSt4coutD.22587
  # DEBUG __strD.51201 => pattern_39(D)
  # VUSE <.MEM_712>
  _268 = MEM[(long unsigned intD.14 *)pattern_39(D) + 8B];
  # DEBUG D#1ptD.0 => pattern_39(D)
  # DEBUG thisD.44893 => D#1ptD.0
  _355 = (long intD.12) _268;
  # DEBUG thisD.44890 => pattern_39(D)
  # VUSE <.MEM_712>
  # PT = nonlocal escaped 
  _356 = MEM[(charD.10 * *)pattern_39(D)];
  # DEBUG D#2ptD.0 => pattern_39(D)
  # DEBUG thisD.44832 => D#2ptD.0
  [LP 139] # .MEM_713 = VDEF <.MEM_712>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _357 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&_ZSt4coutD.22587, _356, _355);
  goto <bb 373>;
;;    succ:       373 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                372 (EH,EXECUTABLE)

;;   basic block 372, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 371, next block 373, flags: (NEW)
;;    pred:       371 (EH,EXECUTABLE)
<L264>: [LP 139]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 373, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 372, next block 374, flags: (NEW, REACHABLE)
;;    pred:       371 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.51203 => _357
  # DEBUG __pfD.51204 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  [LP 140] # .MEM_714 = VDEF <.MEM_713>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645 (_357);
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                374 (EH,EXECUTABLE)

;;   basic block 374, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 373, next block 375, flags: (NEW)
;;    pred:       373 (EH,EXECUTABLE)
<L265>: [LP 140]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 375, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 374, next block 376, flags: (NEW, REACHABLE)
;;    pred:       65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                105 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                148 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                156 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                177 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                185 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                193 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                199 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                230 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                287 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                368 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                279 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                295 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                290 [21.4%]  (FALSE_VALUE,EXECUTABLE)
  # PT = null { D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54670 } (escaped heap)
  # result_1 = PHI <result_64(65), result_70(71), result_75(88), result_80(105), result_113(148), result_117(156), result_123(177), result_135(185), result_139(193), result_144(199), result_167(230), result_203(287), result_250(368), result_211(279), result_207(295), 0B(290)>
  # .MEM_28 = PHI <.MEM_443(65), .MEM_71(71), .MEM_447(88), .MEM_450(105), .MEM_114(148), .MEM_493(156), .MEM_128(177), .MEM_524(185), .MEM_530(193), .MEM_145(199), .MEM_563(230), .MEM_613(287), .MEM_258(368), .MEM_632(279), .MEM_623(295), .MEM_615(290)>
  # DEBUG resultD.36903 => result_1
  # DEBUG thisD.54422 => &paramsD.36157
  # DEBUG D#242ptD.0 => &paramsD.36157.D.36900
  # DEBUG thisD.46553 => D#242ptD.0
  # VUSE <.MEM_28>
  # PT = nonlocal escaped null 
  _940 = paramsD.36157.D.36900._M_implD.36391._M_finishD.36394;
  # VUSE <.MEM_28>
  # PT = nonlocal escaped null 
  __first_941 = paramsD.36157.D.36900._M_implD.36391._M_startD.36393;
  # DEBUG __firstD.54425 => __first_941
  # DEBUG __lastD.54424 => _940
  # DEBUG __firstD.54430 => __first_941
  if (_940 == __first_941)
    goto <bb 382>;
  else
    goto <bb 376>;
;;    succ:       382 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                376 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 376, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 375, next block 377, flags: (NEW, REACHABLE)
;;    pred:       375 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       377 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 377, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 376, next block 378, flags: (NEW)
;;    pred:       376 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                380 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __first_743 = PHI <__first_941(376), __first_945(380)>
  # .MEM_745 = PHI <.MEM_28(376), .MEM_1131(380)>
  # DEBUG __firstD.54430 => __first_743
  # DEBUG __rD.46443 => __first_743
  # DEBUG __pointerD.54431 => NULL
  # DEBUG thisD.54432 => NULL
  # DEBUG thisD.54433 => NULL
  # DEBUG thisD.54442 => NULL
  # VUSE <.MEM_745>
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _943 = MEM[(charD.10 * *)__first_743];
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.54443 => NULL
  # PT = nonlocal escaped null 
  _944 = &MEM[(const struct basic_stringD.2844 *)__first_743].D.11539._M_local_bufD.11541;
  if (_943 != _944)
    goto <bb 378>;
  else
    goto <bb 379>;
;;    succ:       378 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                379 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 378, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 377, next block 379, flags: (NEW, REACHABLE)
;;    pred:       377 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.54435 => NULL
  # DEBUG __sizeD.54434 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => NULL
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.54438 => _943
  # DEBUG __aD.54436 => D#214ptD.0
  # DEBUG __nD.54437 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.54441 => _943
  # DEBUG thisD.54439 => D#210ptD.0
  # DEBUG D.54440 => D#211ptD.0
  # .MEM_1127 = VDEF <.MEM_745>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_943);
;;    succ:       379 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 379, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 378, next block 380, flags: (NEW, REACHABLE)
;;    pred:       377 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                378 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_971 = PHI <.MEM_745(377), .MEM_1127(378)>
  # DEBUG thisD.54444 => D#220ptD.0
  # DEBUG thisD.54445 => D#220ptD.0
  # DEBUG thisD.54446 => D#220ptD.0
  # .MEM_1131 = VDEF <.MEM_971>
  MEM[(struct  &)__first_743] ={v} {CLOBBER};
  # PT = nonlocal escaped null 
  __first_945 = __first_743 + 32;
  # DEBUG __firstD.54430 => __first_945
  # DEBUG __firstD.54430 => __first_945
  if (_940 == __first_945)
    goto <bb 381>;
  else
    goto <bb 380>;
;;    succ:       381 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                380 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 380, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 379, next block 381, flags: (NEW)
;;    pred:       379 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 377>;
;;    succ:       377 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 381, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 380, next block 382, flags: (NEW)
;;    pred:       379 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1131>
  pretmp_583 = MEM[(struct _Vector_baseD.36158 *)&paramsD.36157]._M_implD.36391._M_startD.36393;
;;    succ:       382 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 382, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 381, next block 383, flags: (NEW, REACHABLE)
;;    pred:       381 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                375 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_1131(381), .MEM_28(375)>
  # PT = nonlocal escaped null 
  # prephitmp_584 = PHI <pretmp_583(381), __first_941(375)>
  # DEBUG D#243ptD.0 => &paramsD.36157.D.36900
  # DEBUG thisD.54447 => D#243ptD.0
  # DEBUG D#240ptD.0 => D#243ptD.0->_M_implD.36391._M_end_of_storageD.36395
  # DEBUG D#239ptD.0 => (long intD.12) D#240ptD.0
  # DEBUG D#774ptD.0 => MEM[(struct _Vector_baseD.36158 *)&paramsD.36157]._M_implD.36391._M_startD.36393
  # DEBUG D#238ptD.0 => (long intD.12) D#774ptD.0
  # DEBUG D#237ptD.0 => D#239ptD.0 - D#238ptD.0
  # DEBUG D#236ptD.0 => D#237ptD.0 /[ex] 32
  # DEBUG D#233ptD.0 => D#243ptD.0
  # DEBUG D#234ptD.0 => (long unsigned intD.14) D#236ptD.0
  # DEBUG __pD.54450 => D#774ptD.0
  # DEBUG thisD.54448 => D#233ptD.0
  # DEBUG __nD.54449 => D#234ptD.0
  # DEBUG D#232ptD.0 => D#234ptD.0
  # DEBUG D#231ptD.0 => D#233ptD.0
  if (prephitmp_584 != 0B)
    goto <bb 383>;
  else
    goto <bb 384>;
;;    succ:       383 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                384 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 383, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 382, next block 384, flags: (NEW, REACHABLE)
;;    pred:       382 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#230ptD.0 => &D#231ptD.0->_M_implD.36391
  # DEBUG D#228ptD.0 => D#230ptD.0
  # DEBUG D#229ptD.0 => D#232ptD.0
  # DEBUG __pD.54454 => D#774ptD.0
  # DEBUG __aD.54452 => D#228ptD.0
  # DEBUG __nD.54453 => D#229ptD.0
  # DEBUG D#227ptD.0 => D#229ptD.0
  # DEBUG D#226ptD.0 => D#228ptD.0
  # DEBUG D#224ptD.0 => D#226ptD.0
  # DEBUG D#225ptD.0 => D#227ptD.0
  # DEBUG __pD.54457 => D#774ptD.0
  # DEBUG thisD.54455 => D#224ptD.0
  # DEBUG D.54456 => D#225ptD.0
  # .MEM_1132 = VDEF <.MEM_62>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (prephitmp_584);
;;    succ:       384 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 384, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 383, next block 385, flags: (NEW, REACHABLE)
;;    pred:       382 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                383 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_972 = PHI <.MEM_62(382), .MEM_1132(383)>
  # DEBUG D#235ptD.0 => &D#243ptD.0->_M_implD.36391
  # DEBUG thisD.54458 => D#235ptD.0
  # DEBUG thisD.54459 => D#235ptD.0
  # DEBUG thisD.54460 => D#235ptD.0
  # .MEM_1137 = VDEF <.MEM_972>
  MEM[(struct  &)&paramsD.36157] ={v} {CLOBBER};
  # DEBUG thisD.51221 => &param_strD.36151
  # DEBUG thisD.51222 => &param_strD.36151
  # DEBUG thisD.51231 => &param_strD.36151
  # VUSE <.MEM_1137>
  # PT = nonlocal escaped null { D.36151 } (escaped)
  _273 = MEM[(charD.10 * *)&param_strD.36151];
  # DEBUG D#2ptD.0 => &param_strD.36151
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51232 => &param_strD.36151
  if (&param_strD.36151.D.11539._M_local_bufD.11541 != _273)
    goto <bb 385>;
  else
    goto <bb 386>;
;;    succ:       385 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                386 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 385, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 384, next block 386, flags: (NEW, REACHABLE)
;;    pred:       384 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => param_strD.36151.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51224 => &param_strD.36151
  # DEBUG __sizeD.51223 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &param_strD.36151
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &param_strD.36151
  # DEBUG D#216ptD.0 => &param_strD.36151._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51227 => _273
  # DEBUG __aD.51225 => D#214ptD.0
  # DEBUG __nD.51226 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51230 => _273
  # DEBUG thisD.51228 => D#210ptD.0
  # DEBUG D.51229 => D#211ptD.0
  # .MEM_715 = VDEF <.MEM_1137>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_273);
;;    succ:       386 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 386, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 385, next block 387, flags: (NEW, REACHABLE)
;;    pred:       384 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                385 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_376 = PHI <.MEM_1137(384), .MEM_715(385)>
  # DEBUG D#220ptD.0 => &param_strD.36151._M_dataplusD.11519
  # DEBUG thisD.51233 => D#220ptD.0
  # DEBUG thisD.51234 => D#220ptD.0
  # DEBUG thisD.51235 => D#220ptD.0
  # .MEM_719 = VDEF <.MEM_376>
  MEM[(struct  &)&param_strD.36151] ={v} {CLOBBER};
  # DEBUG thisD.51206 => &pattern_nameD.36150
  # DEBUG thisD.51207 => &pattern_nameD.36150
  # DEBUG thisD.51216 => &pattern_nameD.36150
  # VUSE <.MEM_719>
  # PT = nonlocal escaped null { D.36150 } (escaped)
  _269 = MEM[(charD.10 * *)&pattern_nameD.36150];
  # DEBUG D#2ptD.0 => &pattern_nameD.36150
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51217 => &pattern_nameD.36150
  if (&pattern_nameD.36150.D.11539._M_local_bufD.11541 != _269)
    goto <bb 387>;
  else
    goto <bb 388>;
;;    succ:       387 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                388 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 387, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 386, next block 388, flags: (NEW, REACHABLE)
;;    pred:       386 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => pattern_nameD.36150.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51209 => &pattern_nameD.36150
  # DEBUG __sizeD.51208 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &pattern_nameD.36150
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &pattern_nameD.36150
  # DEBUG D#216ptD.0 => &pattern_nameD.36150._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51212 => _269
  # DEBUG __aD.51210 => D#214ptD.0
  # DEBUG __nD.51211 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51215 => _269
  # DEBUG thisD.51213 => D#210ptD.0
  # DEBUG D.51214 => D#211ptD.0
  # .MEM_720 = VDEF <.MEM_719>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_269);
;;    succ:       388 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 388, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 387, next block 389, flags: (NEW, REACHABLE)
;;    pred:       386 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                387 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_377 = PHI <.MEM_719(386), .MEM_720(387)>
  # DEBUG D#220ptD.0 => &pattern_nameD.36150._M_dataplusD.11519
  # DEBUG thisD.51218 => D#220ptD.0
  # DEBUG thisD.51219 => D#220ptD.0
  # DEBUG thisD.51220 => D#220ptD.0
  # .MEM_274 = VDEF <.MEM_377>
  pattern_nameD.36150 ={v} {CLOBBER};
  # .MEM_275 = VDEF <.MEM_274>
  param_strD.36151 ={v} {CLOBBER};
  # .MEM_276 = VDEF <.MEM_275>
  paramsD.36157 ={v} {CLOBBER};
  # VUSE <.MEM_276>
  return result_1;
;;    succ:       EXIT [100.0%] 

;;   basic block 389, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 388, next block 390, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L119>: [LP 4]
  # DEBUG thisD.51236 => &D.36153
  # DEBUG thisD.51237 => &D.36153
  # DEBUG thisD.51246 => &D.36153
  # VUSE <.MEM_407>
  # PT = nonlocal escaped null { D.36153 } (escaped)
  _272 = MEM[(charD.10 * *)&D.36153];
  # DEBUG D#2ptD.0 => &D.36153
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51247 => &D.36153
  if (&D.36153.D.11539._M_local_bufD.11541 != _272)
    goto <bb 390>;
  else
    goto <bb 391>;
;;    succ:       390 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                391 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 390, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 389, next block 391, flags: (NEW, REACHABLE)
;;    pred:       389 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36153.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51239 => &D.36153
  # DEBUG __sizeD.51238 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36153
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36153
  # DEBUG D#216ptD.0 => &D.36153._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51242 => _272
  # DEBUG __aD.51240 => D#214ptD.0
  # DEBUG __nD.51241 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51245 => _272
  # DEBUG thisD.51243 => D#210ptD.0
  # DEBUG D.51244 => D#211ptD.0
  # .MEM_436 = VDEF <.MEM_407>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_272);
;;    succ:       391 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 391, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 390, next block 392, flags: (NEW, REACHABLE)
;;    pred:       389 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                390 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_378 = PHI <.MEM_407(389), .MEM_436(390)>
  # DEBUG D#220ptD.0 => &D.36153._M_dataplusD.11519
  # DEBUG thisD.51248 => D#220ptD.0
  # DEBUG thisD.51249 => D#220ptD.0
  # DEBUG thisD.51250 => D#220ptD.0
  # .MEM_60 = VDEF <.MEM_378>
  D.36153 ={v} {CLOBBER};
  [LP 141] resx 4
;;    succ:       392 (EH,EXECUTABLE)

;;   basic block 392, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 391, next block 393, flags: (NEW)
;;    pred:       391 (EH,EXECUTABLE)
<L266>: [LP 141]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 393, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 392, next block 394, flags: (NEW, REACHABLE)
;;    pred:       29 (EH,EXECUTABLE)
<L120>: [LP 5]
  # DEBUG thisD.51251 => &D.36155
  # DEBUG thisD.51252 => &D.36155
  # DEBUG thisD.51261 => &D.36155
  # VUSE <.MEM_414>
  # PT = nonlocal escaped null { D.36155 } (escaped)
  _59 = MEM[(charD.10 * *)&D.36155];
  # DEBUG D#2ptD.0 => &D.36155
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51262 => &D.36155
  if (&D.36155.D.11539._M_local_bufD.11541 != _59)
    goto <bb 394>;
  else
    goto <bb 395>;
;;    succ:       394 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                395 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 394, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 393, next block 395, flags: (NEW, REACHABLE)
;;    pred:       393 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36155.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51254 => &D.36155
  # DEBUG __sizeD.51253 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36155
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36155
  # DEBUG D#216ptD.0 => &D.36155._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51257 => _59
  # DEBUG __aD.51255 => D#214ptD.0
  # DEBUG __nD.51256 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51260 => _59
  # DEBUG thisD.51258 => D#210ptD.0
  # DEBUG D.51259 => D#211ptD.0
  # .MEM_420 = VDEF <.MEM_414>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_59);
;;    succ:       395 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 395, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 394, next block 396, flags: (NEW, REACHABLE)
;;    pred:       393 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                394 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_379 = PHI <.MEM_414(393), .MEM_420(394)>
  # DEBUG D#220ptD.0 => &D.36155._M_dataplusD.11519
  # DEBUG thisD.51263 => D#220ptD.0
  # DEBUG thisD.51264 => D#220ptD.0
  # DEBUG thisD.51265 => D#220ptD.0
  # .MEM_49 = VDEF <.MEM_379>
  D.36155 ={v} {CLOBBER};
  [LP 142] resx 6
;;    succ:       396 (EH,EXECUTABLE)

;;   basic block 396, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 395, next block 397, flags: (NEW)
;;    pred:       395 (EH,EXECUTABLE)
<L267>: [LP 142]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 397, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 396, next block 398, flags: (NEW, REACHABLE)
;;    pred:       43 (EH,EXECUTABLE)
<L121>: [LP 6]
  # DEBUG thisD.51266 => &D.36156
  # DEBUG thisD.51267 => &D.36156
  # DEBUG thisD.51276 => &D.36156
  # VUSE <.MEM_425>
  # PT = nonlocal escaped null { D.36156 } (escaped)
  _48 = MEM[(charD.10 * *)&D.36156];
  # DEBUG D#2ptD.0 => &D.36156
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51277 => &D.36156
  if (&D.36156.D.11539._M_local_bufD.11541 != _48)
    goto <bb 398>;
  else
    goto <bb 399>;
;;    succ:       398 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                399 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 398, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 397, next block 399, flags: (NEW, REACHABLE)
;;    pred:       397 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36156.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51269 => &D.36156
  # DEBUG __sizeD.51268 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36156
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36156
  # DEBUG D#216ptD.0 => &D.36156._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51272 => _48
  # DEBUG __aD.51270 => D#214ptD.0
  # DEBUG __nD.51271 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51275 => _48
  # DEBUG thisD.51273 => D#210ptD.0
  # DEBUG D.51274 => D#211ptD.0
  # .MEM_431 = VDEF <.MEM_425>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_48);
;;    succ:       399 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 399, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 398, next block 400, flags: (NEW, REACHABLE)
;;    pred:       397 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                398 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_380 = PHI <.MEM_425(397), .MEM_431(398)>
  # DEBUG D#220ptD.0 => &D.36156._M_dataplusD.11519
  # DEBUG thisD.51278 => D#220ptD.0
  # DEBUG thisD.51279 => D#220ptD.0
  # DEBUG thisD.51280 => D#220ptD.0
  # .MEM_58 = VDEF <.MEM_380>
  D.36156 ={v} {CLOBBER};
  [LP 143] resx 8
;;    succ:       400 (EH,EXECUTABLE)

;;   basic block 400, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 399, next block 401, flags: (NEW)
;;    pred:       399 (EH,EXECUTABLE)
<L268>: [LP 143]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 401, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 400, next block 402, flags: (NEW)
;;    pred:       54 (EH,EXECUTABLE)
<L181>: [LP 63]
;;    succ:       402 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 402, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 401, next block 403, flags: (NEW, REACHABLE)
;;    pred:       64 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                401 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_973 = PHI <.MEM_1029(64), .MEM_1030(401)>
<L122>:
  # .MEM_67 = VDEF <.MEM_973>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_64);
  [LP 144] resx 11
;;    succ:       403 (EH,EXECUTABLE)

;;   basic block 403, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 402, next block 404, flags: (NEW)
;;    pred:       402 (EH,EXECUTABLE)
<L269>: [LP 144]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 404, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 403, next block 405, flags: (NEW, REACHABLE)
;;    pred:       71 (EH,EXECUTABLE)
<L123>: [LP 9]
  # .MEM_72 = VDEF <.MEM_71>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_70);
  [LP 145] resx 13
;;    succ:       405 (EH,EXECUTABLE)

;;   basic block 405, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 404, next block 406, flags: (NEW)
;;    pred:       404 (EH,EXECUTABLE)
<L270>: [LP 145]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 406, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 405, next block 407, flags: (NEW)
;;    pred:       78 (EH,EXECUTABLE)
<L190>: [LP 70]
;;    succ:       407 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 407, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 406, next block 408, flags: (NEW, REACHABLE)
;;    pred:       87 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                406 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_974 = PHI <.MEM_1042(87), .MEM_1043(406)>
<L124>:
  # .MEM_77 = VDEF <.MEM_974>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_75);
  [LP 146] resx 15
;;    succ:       408 (EH,EXECUTABLE)

;;   basic block 408, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 407, next block 409, flags: (NEW)
;;    pred:       407 (EH,EXECUTABLE)
<L271>: [LP 146]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 409, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 408, next block 410, flags: (NEW)
;;    pred:       95 (EH,EXECUTABLE)
<L197>: [LP 75]
;;    succ:       410 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 410, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 409, next block 411, flags: (NEW, REACHABLE)
;;    pred:       104 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                409 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_975 = PHI <.MEM_1055(104), .MEM_1056(409)>
<L125>:
  # .MEM_82 = VDEF <.MEM_975>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_80);
  [LP 147] resx 17
;;    succ:       411 (EH,EXECUTABLE)

;;   basic block 411, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 410, next block 412, flags: (NEW)
;;    pred:       410 (EH,EXECUTABLE)
<L272>: [LP 147]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 412, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 411, next block 413, flags: (NEW, REACHABLE)
;;    pred:       112 (EH,EXECUTABLE)
<L126>: [LP 14]
  # DEBUG thisD.51281 => &D.36969
  # DEBUG thisD.51282 => &D.36969
  # DEBUG thisD.51291 => &D.36969
  # VUSE <.MEM_452>
  # PT = nonlocal escaped null 
  _57 = MEM[(charD.10 * *)&D.36969];
  # DEBUG D#2ptD.0 => &D.36969
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51292 => &D.36969
  if (&D.36969.D.11539._M_local_bufD.11541 != _57)
    goto <bb 413>;
  else
    goto <bb 414>;
;;    succ:       413 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                414 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 413, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 412, next block 414, flags: (NEW, REACHABLE)
;;    pred:       412 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36969.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51284 => &D.36969
  # DEBUG __sizeD.51283 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36969
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36969
  # DEBUG D#216ptD.0 => &D.36969._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51287 => _57
  # DEBUG __aD.51285 => D#214ptD.0
  # DEBUG __nD.51286 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51290 => _57
  # DEBUG thisD.51288 => D#210ptD.0
  # DEBUG D.51289 => D#211ptD.0
  # .MEM_475 = VDEF <.MEM_452>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_57);
;;    succ:       414 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 414, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 413, next block 415, flags: (NEW, REACHABLE)
;;    pred:       412 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                413 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_381 = PHI <.MEM_452(412), .MEM_475(413)>
  # DEBUG D#220ptD.0 => &D.36969._M_dataplusD.11519
  # DEBUG thisD.51293 => D#220ptD.0
  # DEBUG thisD.51294 => D#220ptD.0
  # DEBUG thisD.51295 => D#220ptD.0
  # .MEM_105 = VDEF <.MEM_381>
  D.36969 ={v} {CLOBBER};
  [LP 13] resx 21
;;    succ:       415 (EH,EXECUTABLE)

;;   basic block 415, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 414, next block 416, flags: (NEW)
;;    pred:       414 (EH,EXECUTABLE)
<L273>: [LP 13]
  goto <bb 417> (<L127>);
;;    succ:       417 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 416, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 415, next block 417, flags: (NEW)
;;    pred:       111 (EH,EXECUTABLE)
<L203>: [LP 79]
;;    succ:       417 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 417, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 416, next block 418, flags: (NEW, REACHABLE)
;;    pred:       416 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                415 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_29 = PHI <.MEM_87(416), .MEM_105(415)>
<L127>:
  # DEBUG thisD.51296 => &D.36968
  # DEBUG thisD.51297 => &D.36968
  # DEBUG thisD.51306 => &D.36968
  # VUSE <.MEM_29>
  # PT = nonlocal escaped null { D.36968 } (escaped)
  _104 = MEM[(charD.10 * *)&D.36968];
  # DEBUG D#2ptD.0 => &D.36968
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51307 => &D.36968
  if (&D.36968.D.11539._M_local_bufD.11541 != _104)
    goto <bb 418>;
  else
    goto <bb 419>;
;;    succ:       418 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                419 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 418, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 417, next block 419, flags: (NEW, REACHABLE)
;;    pred:       417 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36968.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51299 => &D.36968
  # DEBUG __sizeD.51298 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36968
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36968
  # DEBUG D#216ptD.0 => &D.36968._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51302 => _104
  # DEBUG __aD.51300 => D#214ptD.0
  # DEBUG __nD.51301 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51305 => _104
  # DEBUG thisD.51303 => D#210ptD.0
  # DEBUG D.51304 => D#211ptD.0
  # .MEM_480 = VDEF <.MEM_29>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_104);
;;    succ:       419 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 419, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 418, next block 420, flags: (NEW, REACHABLE)
;;    pred:       417 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                418 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_382 = PHI <.MEM_29(417), .MEM_480(418)>
  # DEBUG D#220ptD.0 => &D.36968._M_dataplusD.11519
  # DEBUG thisD.51308 => D#220ptD.0
  # DEBUG thisD.51309 => D#220ptD.0
  # DEBUG thisD.51310 => D#220ptD.0
  # .MEM_106 = VDEF <.MEM_382>
  D.36968 ={v} {CLOBBER};
  [LP 148] resx 20
;;    succ:       420 (EH,EXECUTABLE)

;;   basic block 420, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 419, next block 421, flags: (NEW)
;;    pred:       419 (EH,EXECUTABLE)
<L274>: [LP 148]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 421, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 420, next block 422, flags: (NEW, REACHABLE)
;;    pred:       135 (EH,EXECUTABLE)
<L129>: [LP 16]
  # DEBUG thisD.51313 => &D.36972
  # DEBUG thisD.51314 => &D.36972
  # DEBUG thisD.51323 => &D.36972
  # VUSE <.MEM_98>
  # PT = nonlocal escaped null { D.36972 } (escaped)
  _107 = MEM[(charD.10 * *)&D.36972];
  # DEBUG D#2ptD.0 => &D.36972
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51324 => &D.36972
  if (&D.36972.D.11539._M_local_bufD.11541 != _107)
    goto <bb 422>;
  else
    goto <bb 423>;
;;    succ:       422 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                423 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 422, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 421, next block 423, flags: (NEW, REACHABLE)
;;    pred:       421 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.36972.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51316 => &D.36972
  # DEBUG __sizeD.51315 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.36972
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.36972
  # DEBUG D#216ptD.0 => &D.36972._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51319 => _107
  # DEBUG __aD.51317 => D#214ptD.0
  # DEBUG __nD.51318 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51322 => _107
  # DEBUG thisD.51320 => D#210ptD.0
  # DEBUG D.51321 => D#211ptD.0
  # .MEM_470 = VDEF <.MEM_98>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_107);
;;    succ:       423 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 423, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 422, next block 424, flags: (NEW, REACHABLE)
;;    pred:       421 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                422 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_383 = PHI <.MEM_98(421), .MEM_470(422)>
  # DEBUG D#220ptD.0 => &D.36972._M_dataplusD.11519
  # DEBUG thisD.51325 => D#220ptD.0
  # DEBUG thisD.51326 => D#220ptD.0
  # DEBUG thisD.51327 => D#220ptD.0
  # .MEM_102 = VDEF <.MEM_383>
  D.36972 ={v} {CLOBBER};
  [LP 149] resx 26
;;    succ:       424 (EH,EXECUTABLE)

;;   basic block 424, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 423, next block 425, flags: (NEW)
;;    pred:       423 (EH,EXECUTABLE)
<L275>: [LP 149]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 425, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 424, next block 426, flags: (NEW, REACHABLE)
;;    pred:       148 (EH,EXECUTABLE)
<L131>: [LP 17]
  # .MEM_115 = VDEF <.MEM_114>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_113);
  [LP 150] resx 29
;;    succ:       426 (EH,EXECUTABLE)

;;   basic block 426, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 425, next block 427, flags: (NEW)
;;    pred:       425 (EH,EXECUTABLE)
<L276>: [LP 150]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 427, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 426, next block 428, flags: (NEW, REACHABLE)
;;    pred:       155 (EH,EXECUTABLE)
<L132>: [LP 18]
  # .MEM_119 = VDEF <.MEM_494>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_117);
  [LP 151] resx 31
;;    succ:       428 (EH,EXECUTABLE)

;;   basic block 428, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 427, next block 429, flags: (NEW)
;;    pred:       427 (EH,EXECUTABLE)
<L277>: [LP 151]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 429, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 428, next block 430, flags: (NEW, REACHABLE)
;;    pred:       172 (EH,EXECUTABLE)
<L133>: [LP 22]
  # .MEM_129 = VDEF <.MEM_124>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_123);
  [LP 21] resx 36
;;    succ:       430 (EH,EXECUTABLE)

;;   basic block 430, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 429, next block 431, flags: (NEW)
;;    pred:       429 (EH,EXECUTABLE)
<L278>: [LP 21]
  goto <bb 432> (<L134>);
;;    succ:       432 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 431, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 430, next block 432, flags: (NEW)
;;    pred:       171 (EH,EXECUTABLE)
<L221>: [LP 97]
;;    succ:       432 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 432, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 431, next block 433, flags: (NEW, REACHABLE)
;;    pred:       431 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                430 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_122(431), .MEM_129(430)>
<L134>:
  # DEBUG thisD.51330 => &D.37014
  # DEBUG D#167ptD.0 => &D.37014.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D.37014.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D.37014.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D.37014.D.34940
  # DEBUG thisD.51331 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_30>
  # PT = nonlocal escaped null { D.54660 } (escaped heap)
  _103 = MEM[(struct _Vector_baseD.34198 *)&D.37014]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _103
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51334 => D#168ptD.0
  # DEBUG __pD.51333 => _103
  # DEBUG __nD.51332 => D#161ptD.0
  if (_103 != 0B)
    goto <bb 433>;
  else
    goto <bb 434>;
;;    succ:       433 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                434 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 433, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 432, next block 434, flags: (NEW, REACHABLE)
;;    pred:       432 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51338 => _103
  # DEBUG __aD.51336 => D#157ptD.0
  # DEBUG __nD.51337 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51341 => _103
  # DEBUG thisD.51339 => D#153ptD.0
  # DEBUG D.51340 => D#154ptD.0
  # .MEM_508 = VDEF <.MEM_30>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_103);
;;    succ:       434 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 434, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 433, next block 435, flags: (NEW, REACHABLE)
;;    pred:       432 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                433 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_384 = PHI <.MEM_30(432), .MEM_508(433)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51342 => D#160ptD.0
  # DEBUG thisD.51343 => D#160ptD.0
  # DEBUG thisD.51344 => D#160ptD.0
  # .MEM_131 = VDEF <.MEM_384>
  D.37014 ={v} {CLOBBER};
  [LP 20] resx 35
;;    succ:       435 (EH,EXECUTABLE)

;;   basic block 435, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 434, next block 436, flags: (NEW)
;;    pred:       434 (EH,EXECUTABLE)
<L279>: [LP 20]
  goto <bb 437> (<L135>);
;;    succ:       437 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 436, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 435, next block 437, flags: (NEW)
;;    pred:       165 (EH,EXECUTABLE)
<L219>: [LP 95]
;;    succ:       437 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 437, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 436, next block 438, flags: (NEW, REACHABLE)
;;    pred:       167 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                435 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                436 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = PHI <.MEM_1088(167), .MEM_131(435), .MEM_1089(436)>
<L135>:
  # DEBUG thisD.51345 => &excludesD.37002
  # DEBUG D#167ptD.0 => &excludesD.37002.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => excludesD.37002.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => excludesD.37002.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &excludesD.37002.D.34940
  # DEBUG thisD.51346 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_31>
  # PT = nonlocal escaped null 
  _130 = MEM[(struct _Vector_baseD.34198 *)&excludesD.37002]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _130
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51349 => D#168ptD.0
  # DEBUG __pD.51348 => _130
  # DEBUG __nD.51347 => D#161ptD.0
  if (_130 != 0B)
    goto <bb 438>;
  else
    goto <bb 439>;
;;    succ:       438 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                439 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 438, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 437, next block 439, flags: (NEW, REACHABLE)
;;    pred:       437 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51353 => _130
  # DEBUG __aD.51351 => D#157ptD.0
  # DEBUG __nD.51352 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51356 => _130
  # DEBUG thisD.51354 => D#153ptD.0
  # DEBUG D.51355 => D#154ptD.0
  # .MEM_514 = VDEF <.MEM_31>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_130);
;;    succ:       439 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 439, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 438, next block 440, flags: (NEW, REACHABLE)
;;    pred:       437 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                438 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_385 = PHI <.MEM_31(437), .MEM_514(438)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51357 => D#160ptD.0
  # DEBUG thisD.51358 => D#160ptD.0
  # DEBUG thisD.51359 => D#160ptD.0
  [LP 152] resx 34
;;    succ:       440 (EH,EXECUTABLE)

;;   basic block 440, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 439, next block 441, flags: (NEW)
;;    pred:       439 (EH,EXECUTABLE)
<L280>: [LP 152]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 441, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 440, next block 442, flags: (NEW, REACHABLE)
;;    pred:       184 (EH,EXECUTABLE)
<L137>: [LP 23]
  # .MEM_137 = VDEF <.MEM_525>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_135);
  [LP 153] resx 41
;;    succ:       442 (EH,EXECUTABLE)

;;   basic block 442, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 441, next block 443, flags: (NEW)
;;    pred:       441 (EH,EXECUTABLE)
<L281>: [LP 153]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 443, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 442, next block 444, flags: (NEW, REACHABLE)
;;    pred:       192 (EH,EXECUTABLE)
<L138>: [LP 24]
  # .MEM_141 = VDEF <.MEM_531>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_139);
  [LP 154] resx 43
;;    succ:       444 (EH,EXECUTABLE)

;;   basic block 444, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 443, next block 445, flags: (NEW)
;;    pred:       443 (EH,EXECUTABLE)
<L282>: [LP 154]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 445, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 444, next block 446, flags: (NEW, REACHABLE)
;;    pred:       199 (EH,EXECUTABLE)
<L139>: [LP 25]
  # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_144);
  [LP 155] resx 45
;;    succ:       446 (EH,EXECUTABLE)

;;   basic block 446, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 445, next block 447, flags: (NEW)
;;    pred:       445 (EH,EXECUTABLE)
<L283>: [LP 155]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 447, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 446, next block 448, flags: (NEW, REACHABLE)
;;    pred:       207 (EH,EXECUTABLE)
<L140>: [LP 27]
  # DEBUG thisD.51360 => &D.37050
  # DEBUG thisD.51361 => &D.37050
  # DEBUG thisD.51370 => &D.37050
  # VUSE <.MEM_148>
  # PT = nonlocal escaped null 
  _132 = MEM[(charD.10 * *)&D.37050];
  # DEBUG D#2ptD.0 => &D.37050
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51371 => &D.37050
  if (&D.37050.D.11539._M_local_bufD.11541 != _132)
    goto <bb 448>;
  else
    goto <bb 449>;
;;    succ:       448 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                449 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 448, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 447, next block 449, flags: (NEW, REACHABLE)
;;    pred:       447 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37050.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51363 => &D.37050
  # DEBUG __sizeD.51362 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37050
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37050
  # DEBUG D#216ptD.0 => &D.37050._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51366 => _132
  # DEBUG __aD.51364 => D#214ptD.0
  # DEBUG __nD.51365 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51369 => _132
  # DEBUG thisD.51367 => D#210ptD.0
  # DEBUG D.51368 => D#211ptD.0
  # .MEM_539 = VDEF <.MEM_148>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_132);
;;    succ:       449 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 449, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 448, next block 450, flags: (NEW, REACHABLE)
;;    pred:       447 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                448 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_386 = PHI <.MEM_148(447), .MEM_539(448)>
  # DEBUG D#220ptD.0 => &D.37050._M_dataplusD.11519
  # DEBUG thisD.51372 => D#220ptD.0
  # DEBUG thisD.51373 => D#220ptD.0
  # DEBUG thisD.51374 => D#220ptD.0
  # .MEM_153 = VDEF <.MEM_386>
  D.37050 ={v} {CLOBBER};
  [LP 156] resx 48
;;    succ:       450 (EH,EXECUTABLE)

;;   basic block 450, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 449, next block 451, flags: (NEW)
;;    pred:       449 (EH,EXECUTABLE)
<L284>: [LP 156]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 451, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 450, next block 452, flags: (NEW, REACHABLE)
;;    pred:       215 (EH,EXECUTABLE)
<L142>: [LP 29]
  # DEBUG thisD.51377 => &D.37054
  # DEBUG thisD.51378 => &D.37054
  # DEBUG thisD.51387 => &D.37054
  # VUSE <.MEM_159>
  # PT = nonlocal escaped null 
  _154 = MEM[(charD.10 * *)&D.37054];
  # DEBUG D#2ptD.0 => &D.37054
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51388 => &D.37054
  if (&D.37054.D.11539._M_local_bufD.11541 != _154)
    goto <bb 452>;
  else
    goto <bb 453>;
;;    succ:       452 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                453 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 452, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 451, next block 453, flags: (NEW, REACHABLE)
;;    pred:       451 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37054.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51380 => &D.37054
  # DEBUG __sizeD.51379 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37054
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37054
  # DEBUG D#216ptD.0 => &D.37054._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51383 => _154
  # DEBUG __aD.51381 => D#214ptD.0
  # DEBUG __nD.51382 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51386 => _154
  # DEBUG thisD.51384 => D#210ptD.0
  # DEBUG D.51385 => D#211ptD.0
  # .MEM_550 = VDEF <.MEM_159>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_154);
;;    succ:       453 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 453, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 452, next block 454, flags: (NEW, REACHABLE)
;;    pred:       451 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                452 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_387 = PHI <.MEM_159(451), .MEM_550(452)>
  # DEBUG D#220ptD.0 => &D.37054._M_dataplusD.11519
  # DEBUG thisD.51389 => D#220ptD.0
  # DEBUG thisD.51390 => D#220ptD.0
  # DEBUG thisD.51391 => D#220ptD.0
  # .MEM_164 = VDEF <.MEM_387>
  D.37054 ={v} {CLOBBER};
  [LP 157] resx 52
;;    succ:       454 (EH,EXECUTABLE)

;;   basic block 454, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 453, next block 455, flags: (NEW)
;;    pred:       453 (EH,EXECUTABLE)
<L285>: [LP 157]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 455, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 454, next block 456, flags: (NEW, REACHABLE)
;;    pred:       229 (EH,EXECUTABLE)
<L144>: [LP 30]
  # .MEM_169 = VDEF <.MEM_564>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_167);
  [LP 158] resx 55
;;    succ:       456 (EH,EXECUTABLE)

;;   basic block 456, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 455, next block 457, flags: (NEW)
;;    pred:       455 (EH,EXECUTABLE)
<L286>: [LP 158]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 457, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 456, next block 458, flags: (NEW, REACHABLE)
;;    pred:       243 (EH,EXECUTABLE)
<L145>: [LP 32]
  # DEBUG thisD.51394 => &D.37078
  # DEBUG thisD.51395 => &D.37078
  # DEBUG thisD.51404 => &D.37078
  # VUSE <.MEM_176>
  # PT = nonlocal escaped null 
  _165 = MEM[(charD.10 * *)&D.37078];
  # DEBUG D#2ptD.0 => &D.37078
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51405 => &D.37078
  if (&D.37078.D.11539._M_local_bufD.11541 != _165)
    goto <bb 458>;
  else
    goto <bb 459>;
;;    succ:       458 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                459 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 458, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 457, next block 459, flags: (NEW, REACHABLE)
;;    pred:       457 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37078.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51397 => &D.37078
  # DEBUG __sizeD.51396 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37078
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37078
  # DEBUG D#216ptD.0 => &D.37078._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51400 => _165
  # DEBUG __aD.51398 => D#214ptD.0
  # DEBUG __nD.51399 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51403 => _165
  # DEBUG thisD.51401 => D#210ptD.0
  # DEBUG D.51402 => D#211ptD.0
  # .MEM_576 = VDEF <.MEM_176>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_165);
;;    succ:       459 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 459, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 458, next block 460, flags: (NEW, REACHABLE)
;;    pred:       457 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                458 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_388 = PHI <.MEM_176(457), .MEM_576(458)>
  # DEBUG D#220ptD.0 => &D.37078._M_dataplusD.11519
  # DEBUG thisD.51406 => D#220ptD.0
  # DEBUG thisD.51407 => D#220ptD.0
  # DEBUG thisD.51408 => D#220ptD.0
  # .MEM_181 = VDEF <.MEM_388>
  D.37078 ={v} {CLOBBER};
  [LP 159] resx 58
;;    succ:       460 (EH,EXECUTABLE)

;;   basic block 460, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 459, next block 461, flags: (NEW)
;;    pred:       459 (EH,EXECUTABLE)
<L287>: [LP 159]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 461, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 460, next block 462, flags: (NEW, REACHABLE)
;;    pred:       251 (EH,EXECUTABLE)
<L147>: [LP 34]
  # DEBUG thisD.51411 => &D.37082
  # DEBUG thisD.51412 => &D.37082
  # DEBUG thisD.51421 => &D.37082
  # VUSE <.MEM_185>
  # PT = nonlocal escaped null 
  _182 = MEM[(charD.10 * *)&D.37082];
  # DEBUG D#2ptD.0 => &D.37082
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51422 => &D.37082
  if (&D.37082.D.11539._M_local_bufD.11541 != _182)
    goto <bb 462>;
  else
    goto <bb 463>;
;;    succ:       462 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                463 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 462, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 461, next block 463, flags: (NEW, REACHABLE)
;;    pred:       461 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37082.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51414 => &D.37082
  # DEBUG __sizeD.51413 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37082
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37082
  # DEBUG D#216ptD.0 => &D.37082._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51417 => _182
  # DEBUG __aD.51415 => D#214ptD.0
  # DEBUG __nD.51416 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51420 => _182
  # DEBUG thisD.51418 => D#210ptD.0
  # DEBUG D.51419 => D#211ptD.0
  # .MEM_587 = VDEF <.MEM_185>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_182);
;;    succ:       463 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 463, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 462, next block 464, flags: (NEW, REACHABLE)
;;    pred:       461 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                462 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_389 = PHI <.MEM_185(461), .MEM_587(462)>
  # DEBUG D#220ptD.0 => &D.37082._M_dataplusD.11519
  # DEBUG thisD.51423 => D#220ptD.0
  # DEBUG thisD.51424 => D#220ptD.0
  # DEBUG thisD.51425 => D#220ptD.0
  # .MEM_190 = VDEF <.MEM_389>
  D.37082 ={v} {CLOBBER};
  [LP 160] resx 62
;;    succ:       464 (EH,EXECUTABLE)

;;   basic block 464, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 463, next block 465, flags: (NEW)
;;    pred:       463 (EH,EXECUTABLE)
<L288>: [LP 160]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 465, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 464, next block 466, flags: (NEW, REACHABLE)
;;    pred:       261 (EH,EXECUTABLE)
<L149>: [LP 36]
  # DEBUG thisD.51428 => &D.37086
  # DEBUG thisD.51429 => &D.37086
  # DEBUG thisD.51438 => &D.37086
  # VUSE <.MEM_194>
  # PT = nonlocal escaped null 
  _191 = MEM[(charD.10 * *)&D.37086];
  # DEBUG D#2ptD.0 => &D.37086
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51439 => &D.37086
  if (&D.37086.D.11539._M_local_bufD.11541 != _191)
    goto <bb 466>;
  else
    goto <bb 467>;
;;    succ:       466 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                467 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 466, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 465, next block 467, flags: (NEW, REACHABLE)
;;    pred:       465 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37086.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51431 => &D.37086
  # DEBUG __sizeD.51430 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37086
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37086
  # DEBUG D#216ptD.0 => &D.37086._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51434 => _191
  # DEBUG __aD.51432 => D#214ptD.0
  # DEBUG __nD.51433 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51437 => _191
  # DEBUG thisD.51435 => D#210ptD.0
  # DEBUG D.51436 => D#211ptD.0
  # .MEM_598 = VDEF <.MEM_194>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_191);
;;    succ:       467 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 467, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 466, next block 468, flags: (NEW, REACHABLE)
;;    pred:       465 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                466 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_390 = PHI <.MEM_194(465), .MEM_598(466)>
  # DEBUG D#220ptD.0 => &D.37086._M_dataplusD.11519
  # DEBUG thisD.51440 => D#220ptD.0
  # DEBUG thisD.51441 => D#220ptD.0
  # DEBUG thisD.51442 => D#220ptD.0
  # .MEM_199 = VDEF <.MEM_390>
  D.37086 ={v} {CLOBBER};
  [LP 161] resx 66
;;    succ:       468 (EH,EXECUTABLE)

;;   basic block 468, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 467, next block 469, flags: (NEW)
;;    pred:       467 (EH,EXECUTABLE)
<L289>: [LP 161]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 469, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 468, next block 470, flags: (NEW, REACHABLE)
;;    pred:       278 (EH,EXECUTABLE)
<L151>: [LP 37]
  # .MEM_213 = VDEF <.MEM_633>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_211);
  [LP 162] resx 69
;;    succ:       470 (EH,EXECUTABLE)

;;   basic block 470, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 469, next block 471, flags: (NEW)
;;    pred:       469 (EH,EXECUTABLE)
<L290>: [LP 162]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 471, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 470, next block 472, flags: (NEW, REACHABLE)
;;    pred:       286 (EH,EXECUTABLE)
<L152>: [LP 38]
  # .MEM_205 = VDEF <.MEM_614>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_203);
  [LP 163] resx 71
;;    succ:       472 (EH,EXECUTABLE)

;;   basic block 472, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 471, next block 473, flags: (NEW)
;;    pred:       471 (EH,EXECUTABLE)
<L291>: [LP 163]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 473, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 472, next block 474, flags: (NEW, REACHABLE)
;;    pred:       294 (EH,EXECUTABLE)
<L153>: [LP 39]
  # .MEM_209 = VDEF <.MEM_624>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_207);
  [LP 164] resx 73
;;    succ:       474 (EH,EXECUTABLE)

;;   basic block 474, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 473, next block 475, flags: (NEW)
;;    pred:       473 (EH,EXECUTABLE)
<L292>: [LP 164]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 475, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 474, next block 476, flags: (NEW)
;;    pred:       303 (EH,EXECUTABLE)
<L251>: [LP 127]
;;    succ:       476 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 476, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 475, next block 477, flags: (NEW, REACHABLE)
;;    pred:       311 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                475 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                539 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_976 = PHI <.MEM_1097(311), .MEM_1100(475), .MEM_1108(539)>
<L154>:
  # DEBUG thisD.51445 => &D.37119
  # DEBUG thisD.51446 => &D.37119
  # DEBUG thisD.51455 => &D.37119
  # VUSE <.MEM_976>
  # PT = nonlocal escaped null 
  _200 = MEM[(charD.10 * *)&D.37119];
  # DEBUG D#2ptD.0 => &D.37119
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51456 => &D.37119
  if (&D.37119.D.11539._M_local_bufD.11541 != _200)
    goto <bb 477>;
  else
    goto <bb 478>;
;;    succ:       477 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                478 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 477, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 476, next block 478, flags: (NEW, REACHABLE)
;;    pred:       476 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => D.37119.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51448 => &D.37119
  # DEBUG __sizeD.51447 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &D.37119
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &D.37119
  # DEBUG D#216ptD.0 => &D.37119._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51451 => _200
  # DEBUG __aD.51449 => D#214ptD.0
  # DEBUG __nD.51450 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51454 => _200
  # DEBUG thisD.51452 => D#210ptD.0
  # DEBUG D.51453 => D#211ptD.0
  # .MEM_643 = VDEF <.MEM_976>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_200);
;;    succ:       478 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 478, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 477, next block 479, flags: (NEW, REACHABLE)
;;    pred:       476 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                477 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_391 = PHI <.MEM_976(476), .MEM_643(477)>
  # DEBUG D#220ptD.0 => &D.37119._M_dataplusD.11519
  # DEBUG thisD.51457 => D#220ptD.0
  # DEBUG thisD.51458 => D#220ptD.0
  # DEBUG thisD.51459 => D#220ptD.0
  # .MEM_224 = VDEF <.MEM_391>
  D.37119 ={v} {CLOBBER};
  [LP 165] resx 77
;;    succ:       479 (EH,EXECUTABLE)

;;   basic block 479, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 478, next block 480, flags: (NEW)
;;    pred:       478 (EH,EXECUTABLE)
<L293>: [LP 165]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 480, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 479, next block 481, flags: (NEW)
;;    pred:       331 (EH,EXECUTABLE)
<L256>: [LP 132]
;;    succ:       481 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 481, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 480, next block 482, flags: (NEW, REACHABLE)
;;    pred:       333 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                480 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_977 = PHI <.MEM_1114(333), .MEM_1115(480)>
<L156>:
  # DEBUG thisD.51462 => &D.37124
  # DEBUG D#167ptD.0 => &D.37124.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D.37124.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D.37124.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D.37124.D.34940
  # DEBUG thisD.51463 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_977>
  # PT = nonlocal escaped null 
  _225 = MEM[(struct _Vector_baseD.34198 *)&D.37124]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _225
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51466 => D#168ptD.0
  # DEBUG __pD.51465 => _225
  # DEBUG __nD.51464 => D#161ptD.0
  if (_225 != 0B)
    goto <bb 482>;
  else
    goto <bb 483>;
;;    succ:       482 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                483 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 482, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 481, next block 483, flags: (NEW, REACHABLE)
;;    pred:       481 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51470 => _225
  # DEBUG __aD.51468 => D#157ptD.0
  # DEBUG __nD.51469 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51473 => _225
  # DEBUG thisD.51471 => D#153ptD.0
  # DEBUG D.51472 => D#154ptD.0
  # .MEM_658 = VDEF <.MEM_977>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_225);
;;    succ:       483 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 483, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 482, next block 484, flags: (NEW, REACHABLE)
;;    pred:       481 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                482 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_392 = PHI <.MEM_977(481), .MEM_658(482)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51474 => D#160ptD.0
  # DEBUG thisD.51475 => D#160ptD.0
  # DEBUG thisD.51476 => D#160ptD.0
  # .MEM_244 = VDEF <.MEM_392>
  D.37124 ={v} {CLOBBER};
  [LP 166] resx 82
;;    succ:       484 (EH,EXECUTABLE)

;;   basic block 484, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 483, next block 485, flags: (NEW)
;;    pred:       483 (EH,EXECUTABLE)
<L294>: [LP 166]
  goto <bb 498> (<L160>);
;;    succ:       498 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 485, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 484, next block 486, flags: (NEW, REACHABLE)
;;    pred:       359 (EH,EXECUTABLE)
<L157>: [LP 48]
  # .MEM_259 = VDEF <.MEM_251>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (result_250);
  [LP 47] resx 86
;;    succ:       486 (EH,EXECUTABLE)

;;   basic block 486, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 485, next block 487, flags: (NEW)
;;    pred:       485 (EH,EXECUTABLE)
<L295>: [LP 47]
  goto <bb 488> (<L158>);
;;    succ:       488 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 487, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 486, next block 488, flags: (NEW)
;;    pred:       358 (EH,EXECUTABLE)
<L262>: [LP 137]
;;    succ:       488 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 488, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 487, next block 489, flags: (NEW, REACHABLE)
;;    pred:       487 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                486 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_32 = PHI <.MEM_249(487), .MEM_259(486)>
<L158>:
  # DEBUG thisD.51477 => &D.37136
  # DEBUG D#167ptD.0 => &D.37136.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D.37136.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D.37136.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D.37136.D.34940
  # DEBUG thisD.51478 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_32>
  # PT = nonlocal escaped null 
  _243 = MEM[(struct _Vector_baseD.34198 *)&D.37136]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _243
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51481 => D#168ptD.0
  # DEBUG __pD.51480 => _243
  # DEBUG __nD.51479 => D#161ptD.0
  if (_243 != 0B)
    goto <bb 489>;
  else
    goto <bb 490>;
;;    succ:       489 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                490 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 489, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 488, next block 490, flags: (NEW, REACHABLE)
;;    pred:       488 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51485 => _243
  # DEBUG __aD.51483 => D#157ptD.0
  # DEBUG __nD.51484 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51488 => _243
  # DEBUG thisD.51486 => D#153ptD.0
  # DEBUG D.51487 => D#154ptD.0
  # .MEM_688 = VDEF <.MEM_32>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_243);
;;    succ:       490 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 490, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 489, next block 491, flags: (NEW, REACHABLE)
;;    pred:       488 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                489 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_393 = PHI <.MEM_32(488), .MEM_688(489)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51489 => D#160ptD.0
  # DEBUG thisD.51490 => D#160ptD.0
  # DEBUG thisD.51491 => D#160ptD.0
  # .MEM_261 = VDEF <.MEM_393>
  D.37136 ={v} {CLOBBER};
  [LP 46] resx 85
;;    succ:       491 (EH,EXECUTABLE)

;;   basic block 491, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 490, next block 492, flags: (NEW)
;;    pred:       490 (EH,EXECUTABLE)
<L296>: [LP 46]
  goto <bb 493> (<L159>);
;;    succ:       493 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 492, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 491, next block 493, flags: (NEW)
;;    pred:       357 (EH,EXECUTABLE)
<L261>: [LP 136]
;;    succ:       493 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 493, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 492, next block 494, flags: (NEW, REACHABLE)
;;    pred:       492 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                491 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_33 = PHI <.MEM_248(492), .MEM_261(491)>
<L159>:
  # DEBUG thisD.51492 => &D.37135
  # DEBUG D#167ptD.0 => &D.37135.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => D.37135.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => D.37135.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &D.37135.D.34940
  # DEBUG thisD.51493 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_33>
  # PT = nonlocal escaped null 
  _260 = MEM[(struct _Vector_baseD.34198 *)&D.37135]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _260
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51496 => D#168ptD.0
  # DEBUG __pD.51495 => _260
  # DEBUG __nD.51494 => D#161ptD.0
  if (_260 != 0B)
    goto <bb 494>;
  else
    goto <bb 495>;
;;    succ:       494 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                495 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 494, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 493, next block 495, flags: (NEW, REACHABLE)
;;    pred:       493 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51500 => _260
  # DEBUG __aD.51498 => D#157ptD.0
  # DEBUG __nD.51499 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51503 => _260
  # DEBUG thisD.51501 => D#153ptD.0
  # DEBUG D.51502 => D#154ptD.0
  # .MEM_694 = VDEF <.MEM_33>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_260);
;;    succ:       495 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 495, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 494, next block 496, flags: (NEW, REACHABLE)
;;    pred:       493 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                494 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_394 = PHI <.MEM_33(493), .MEM_694(494)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51504 => D#160ptD.0
  # DEBUG thisD.51505 => D#160ptD.0
  # DEBUG thisD.51506 => D#160ptD.0
  # .MEM_263 = VDEF <.MEM_394>
  D.37135 ={v} {CLOBBER};
  [LP 44] resx 84
;;    succ:       496 (EH,EXECUTABLE)

;;   basic block 496, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 495, next block 497, flags: (NEW)
;;    pred:       495 (EH,EXECUTABLE)
<L297>: [LP 44]
  goto <bb 498> (<L160>);
;;    succ:       498 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 497, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 496, next block 498, flags: (NEW)
;;    pred:       326 (EH,EXECUTABLE)
<L255>: [LP 131]
;;    succ:       498 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 498, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 497, next block 499, flags: (NEW, REACHABLE)
;;    pred:       497 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                496 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                484 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                353 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                355 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                356 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_236(497), .MEM_263(496), .MEM_244(484), .MEM_242(353), .MEM_246(355), .MEM_247(356)>
<L160>:
  # DEBUG thisD.51507 => &ratesD.37123
  # DEBUG D#167ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => ratesD.37123.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &ratesD.37123.D.34940
  # DEBUG thisD.51508 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_34>
  # PT = nonlocal escaped null { D.54669 } (escaped heap)
  _262 = MEM[(struct _Vector_baseD.34198 *)&ratesD.37123]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _262
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51511 => D#168ptD.0
  # DEBUG __pD.51510 => _262
  # DEBUG __nD.51509 => D#161ptD.0
  if (_262 != 0B)
    goto <bb 499>;
  else
    goto <bb 500>;
;;    succ:       499 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                500 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 499, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 498, next block 500, flags: (NEW, REACHABLE)
;;    pred:       498 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51515 => _262
  # DEBUG __aD.51513 => D#157ptD.0
  # DEBUG __nD.51514 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51518 => _262
  # DEBUG thisD.51516 => D#153ptD.0
  # DEBUG D.51517 => D#154ptD.0
  # .MEM_700 = VDEF <.MEM_34>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_262);
;;    succ:       500 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 500, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 499, next block 501, flags: (NEW, REACHABLE)
;;    pred:       498 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                499 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_395 = PHI <.MEM_34(498), .MEM_700(499)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51519 => D#160ptD.0
  # DEBUG thisD.51520 => D#160ptD.0
  # DEBUG thisD.51521 => D#160ptD.0
  # .MEM_705 = VDEF <.MEM_395>
  MEM[(struct  &)&ratesD.37123] ={v} {CLOBBER};
  [LP 43] resx 81
;;    succ:       501 (EH,EXECUTABLE)

;;   basic block 501, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 500, next block 502, flags: (NEW)
;;    pred:       500 (EH,EXECUTABLE)
<L298>: [LP 43]
  goto <bb 503> (<L161>);
;;    succ:       503 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 502, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 501, next block 503, flags: (NEW)
;;    pred:       320 (EH,EXECUTABLE)
<L254>: [LP 130]
;;    succ:       503 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 503, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 502, next block 504, flags: (NEW, REACHABLE)
;;    pred:       502 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                501 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_648(502), .MEM_705(501)>
<L161>:
  # DEBUG thisD.51522 => &hotspotsD.37120
  # DEBUG D#167ptD.0 => &hotspotsD.37120.D.34940
  # DEBUG thisD.45959 => D#167ptD.0
  # DEBUG D#170ptD.0 => hotspotsD.37120.D.34940._M_implD.34431._M_finishD.34434
  # DEBUG D#169ptD.0 => hotspotsD.37120.D.34940._M_implD.34431._M_startD.34433
  # DEBUG __firstD.45956 => D#169ptD.0
  # DEBUG __lastD.45957 => D#170ptD.0
  # DEBUG D.45958 => NULL
  # DEBUG D#140ptD.0 => D#169ptD.0
  # DEBUG D#141ptD.0 => D#170ptD.0
  # DEBUG __firstD.45834 => D#140ptD.0
  # DEBUG __lastD.45833 => D#141ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  # DEBUG D#138ptD.0 => D#140ptD.0
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#139ptD.0
  # DEBUG D.45823 => D#136ptD.0
  # DEBUG D.45822 => D#137ptD.0
  # DEBUG D#168ptD.0 => &hotspotsD.37120.D.34940
  # DEBUG thisD.51523 => D#168ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0->_M_implD.34431._M_end_of_storageD.34435
  # DEBUG D#165ptD.0 => (long intD.12) D#166ptD.0
  # VUSE <.MEM_35>
  # PT = nonlocal escaped null 
  _264 = MEM[(struct _Vector_baseD.34198 *)&hotspotsD.37120]._M_implD.34431._M_startD.34433;
  # DEBUG D#164ptD.0 => (long intD.12) _264
  # DEBUG D#163ptD.0 => D#165ptD.0 - D#164ptD.0
  # DEBUG D#162ptD.0 => D#163ptD.0 /[ex] 4
  # DEBUG D#161ptD.0 => (long unsigned intD.14) D#162ptD.0
  # DEBUG thisD.51526 => D#168ptD.0
  # DEBUG __pD.51525 => _264
  # DEBUG __nD.51524 => D#161ptD.0
  if (_264 != 0B)
    goto <bb 504>;
  else
    goto <bb 505>;
;;    succ:       504 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                505 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 504, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 503, next block 505, flags: (NEW, REACHABLE)
;;    pred:       503 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#159ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG D#158ptD.0 => D#161ptD.0
  # DEBUG __pD.51530 => _264
  # DEBUG __aD.51528 => D#157ptD.0
  # DEBUG __nD.51529 => D#158ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#155ptD.0 => D#157ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0
  # DEBUG __pD.51533 => _264
  # DEBUG thisD.51531 => D#153ptD.0
  # DEBUG D.51532 => D#154ptD.0
  # .MEM_706 = VDEF <.MEM_35>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_264);
;;    succ:       505 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 505, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 504, next block 506, flags: (NEW, REACHABLE)
;;    pred:       503 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                504 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_396 = PHI <.MEM_35(503), .MEM_706(504)>
  # DEBUG D#160ptD.0 => &D#168ptD.0->_M_implD.34431
  # DEBUG thisD.51534 => D#160ptD.0
  # DEBUG thisD.51535 => D#160ptD.0
  # DEBUG thisD.51536 => D#160ptD.0
  [LP 167] resx 80
;;    succ:       506 (EH,EXECUTABLE)

;;   basic block 506, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 505, next block 507, flags: (NEW)
;;    pred:       505 (EH,EXECUTABLE)
<L299>: [LP 167]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 507, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 506, next block 508, flags: (NEW)
;;    pred:       49 (EH,EXECUTABLE)
<L179>: [LP 61]
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 508, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 507, next block 509, flags: (NEW, REACHABLE)
;;    pred:       507 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                67 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                73 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                76 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                93 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                107 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                479 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                119 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                121 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                134 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                140 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                142 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                144 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                474 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                147 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                150 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                153 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                158 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                179 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                182 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                187 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                190 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                195 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                198 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                201 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                472 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                470 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                223 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                225 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                227 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                221 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                232 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                235 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                238 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                316 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                299 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                506 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                267 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                269 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                271 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                273 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                276 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                281 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                284 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                289 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                292 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                536 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                370 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                372 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                374 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                403 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                405 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                408 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                411 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                460 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                250 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                426 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                428 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                464 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                442 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                444 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                446 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                260 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                468 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                456 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                124 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                420 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                132 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                424 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                161 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                440 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                206 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                450 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                214 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                454 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                242 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                128 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                130 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_36 = PHI <.MEM_441(507), .MEM_63(52), .MEM_444(67), .MEM_69(70), .MEM_445(73), .MEM_74(76), .MEM_448(90), .MEM_79(93), .MEM_451(107), .MEM_224(479), .MEM_463(119), .MEM_95(121), .MEM_1072(134), .MEM_485(140), .MEM_486(142), .MEM_487(144), .MEM_209(474), .MEM_112(147), .MEM_489(150), .MEM_116(153), .MEM_495(158), .MEM_520(179), .MEM_134(182), .MEM_526(187), .MEM_138(190), .MEM_532(195), .MEM_143(198), .MEM_533(201), .MEM_205(472), .MEM_213(470), .MEM_565(223), .MEM_566(225), .MEM_567(227), .MEM_166(221), .MEM_568(232), .MEM_569(235), .MEM_570(238), .MEM_227(316), .MEM_220(299), .MEM_396(506), .MEM_634(267), .MEM_635(269), .MEM_636(271), .MEM_604(273), .MEM_210(276), .MEM_605(281), .MEM_202(284), .MEM_615(289), .MEM_206(292), .MEM_637(536), .MEM_712(370), .MEM_713(372), .MEM_714(374), .MEM_67(403), .MEM_72(405), .MEM_77(408), .MEM_82(411), .MEM_181(460), .MEM_184(250), .MEM_115(426), .MEM_119(428), .MEM_190(464), .MEM_137(442), .MEM_141(444), .MEM_146(446), .MEM_193(260), .MEM_199(468), .MEM_169(456), .MEM_1074(124), .MEM_106(420), .MEM_1071(132), .MEM_102(424), .MEM_120(161), .MEM_385(440), .MEM_147(206), .MEM_153(450), .MEM_158(214), .MEM_164(454), .MEM_175(242), .MEM_1067(128), .MEM_1068(130)>
<L163>:
  # .MEM_266 = VDEF <.MEM_36>
  hotspotsD.37120 ={v} {CLOBBER};
  # .MEM_267 = VDEF <.MEM_266>
  ratesD.37123 ={v} {CLOBBER};
  # .MEM_133 = VDEF <.MEM_267>
  excludesD.37002 ={v} {CLOBBER};
  # DEBUG thisD.54461 => &paramsD.36157
  # DEBUG D#242ptD.0 => &paramsD.36157.D.36900
  # DEBUG thisD.46553 => D#242ptD.0
  # VUSE <.MEM_133>
  # PT = nonlocal escaped null 
  _271 = paramsD.36157.D.36900._M_implD.36391._M_finishD.36394;
  # VUSE <.MEM_133>
  # PT = nonlocal escaped null 
  __first_947 = paramsD.36157.D.36900._M_implD.36391._M_startD.36393;
  # DEBUG __firstD.54464 => __first_947
  # DEBUG __lastD.54463 => _271
  # DEBUG __firstD.54469 => __first_947
  if (_271 == __first_947)
    goto <bb 515>;
  else
    goto <bb 509>;
;;    succ:       515 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                509 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 509, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 508, next block 510, flags: (NEW, REACHABLE)
;;    pred:       508 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       510 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 510, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 509, next block 511, flags: (NEW)
;;    pred:       509 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                513 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __first_744 = PHI <__first_947(509), __first_951(513)>
  # .MEM_73 = PHI <.MEM_133(509), .MEM_1142(513)>
  # DEBUG __firstD.54469 => __first_744
  # DEBUG __rD.46443 => __first_744
  # DEBUG __pointerD.54470 => NULL
  # DEBUG thisD.54471 => NULL
  # DEBUG thisD.54472 => NULL
  # DEBUG thisD.54481 => NULL
  # VUSE <.MEM_73>
  # PT = nonlocal escaped null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _949 = MEM[(charD.10 * *)__first_744];
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.54482 => NULL
  # PT = nonlocal escaped null 
  _950 = &MEM[(const struct basic_stringD.2844 *)__first_744].D.11539._M_local_bufD.11541;
  if (_949 != _950)
    goto <bb 511>;
  else
    goto <bb 512>;
;;    succ:       511 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                512 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 511, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 510, next block 512, flags: (NEW, REACHABLE)
;;    pred:       510 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.54474 => NULL
  # DEBUG __sizeD.54473 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => NULL
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.54477 => _949
  # DEBUG __aD.54475 => D#214ptD.0
  # DEBUG __nD.54476 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.54480 => _949
  # DEBUG thisD.54478 => D#210ptD.0
  # DEBUG D.54479 => D#211ptD.0
  # .MEM_1138 = VDEF <.MEM_73>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_949);
;;    succ:       512 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 512, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 511, next block 513, flags: (NEW, REACHABLE)
;;    pred:       510 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                511 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_979 = PHI <.MEM_73(510), .MEM_1138(511)>
  # DEBUG thisD.54483 => D#220ptD.0
  # DEBUG thisD.54484 => D#220ptD.0
  # DEBUG thisD.54485 => D#220ptD.0
  # .MEM_1142 = VDEF <.MEM_979>
  MEM[(struct  &)__first_744] ={v} {CLOBBER};
  # PT = nonlocal escaped null 
  __first_951 = __first_744 + 32;
  # DEBUG __firstD.54469 => __first_951
  # DEBUG __firstD.54469 => __first_951
  if (_271 == __first_951)
    goto <bb 514>;
  else
    goto <bb 513>;
;;    succ:       514 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                513 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 513, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 512, next block 514, flags: (NEW)
;;    pred:       512 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 510>;
;;    succ:       510 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 514, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 513, next block 515, flags: (NEW)
;;    pred:       512 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1142>
  pretmp_595 = MEM[(struct _Vector_baseD.36158 *)&paramsD.36157]._M_implD.36391._M_startD.36393;
;;    succ:       515 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 515, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 514, next block 516, flags: (NEW, REACHABLE)
;;    pred:       514 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                508 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_762 = PHI <.MEM_1142(514), .MEM_133(508)>
  # PT = nonlocal escaped null 
  # prephitmp_596 = PHI <pretmp_595(514), __first_947(508)>
  # DEBUG D#243ptD.0 => &paramsD.36157.D.36900
  # DEBUG thisD.54486 => D#243ptD.0
  # DEBUG D#240ptD.0 => D#243ptD.0->_M_implD.36391._M_end_of_storageD.36395
  # DEBUG D#239ptD.0 => (long intD.12) D#240ptD.0
  # DEBUG D#773ptD.0 => MEM[(struct _Vector_baseD.36158 *)&paramsD.36157]._M_implD.36391._M_startD.36393
  # DEBUG D#238ptD.0 => (long intD.12) D#773ptD.0
  # DEBUG D#237ptD.0 => D#239ptD.0 - D#238ptD.0
  # DEBUG D#236ptD.0 => D#237ptD.0 /[ex] 32
  # DEBUG D#233ptD.0 => D#243ptD.0
  # DEBUG D#234ptD.0 => (long unsigned intD.14) D#236ptD.0
  # DEBUG __pD.54489 => D#773ptD.0
  # DEBUG thisD.54487 => D#233ptD.0
  # DEBUG __nD.54488 => D#234ptD.0
  # DEBUG D#232ptD.0 => D#234ptD.0
  # DEBUG D#231ptD.0 => D#233ptD.0
  if (prephitmp_596 != 0B)
    goto <bb 516>;
  else
    goto <bb 517>;
;;    succ:       516 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                517 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 516, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 515, next block 517, flags: (NEW, REACHABLE)
;;    pred:       515 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#230ptD.0 => &D#231ptD.0->_M_implD.36391
  # DEBUG D#228ptD.0 => D#230ptD.0
  # DEBUG D#229ptD.0 => D#232ptD.0
  # DEBUG __pD.54493 => D#773ptD.0
  # DEBUG __aD.54491 => D#228ptD.0
  # DEBUG __nD.54492 => D#229ptD.0
  # DEBUG D#227ptD.0 => D#229ptD.0
  # DEBUG D#226ptD.0 => D#228ptD.0
  # DEBUG D#224ptD.0 => D#226ptD.0
  # DEBUG D#225ptD.0 => D#227ptD.0
  # DEBUG __pD.54496 => D#773ptD.0
  # DEBUG thisD.54494 => D#224ptD.0
  # DEBUG D.54495 => D#225ptD.0
  # .MEM_1143 = VDEF <.MEM_762>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (prephitmp_596);
;;    succ:       517 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 517, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 516, next block 518, flags: (NEW, REACHABLE)
;;    pred:       515 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                516 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_980 = PHI <.MEM_762(515), .MEM_1143(516)>
  # DEBUG D#235ptD.0 => &D#243ptD.0->_M_implD.36391
  # DEBUG thisD.54497 => D#235ptD.0
  # DEBUG thisD.54498 => D#235ptD.0
  # DEBUG thisD.54499 => D#235ptD.0
  # .MEM_1148 = VDEF <.MEM_980>
  MEM[(struct  &)&paramsD.36157] ={v} {CLOBBER};
  [LP 168] resx 10
;;    succ:       518 (EH,EXECUTABLE)

;;   basic block 518, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 517, next block 519, flags: (NEW)
;;    pred:       517 (EH,EXECUTABLE)
<L300>: [LP 168]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 519, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 518, next block 520, flags: (NEW)
;;    pred:       2 (EH,EXECUTABLE)
<L170>: [LP 52]
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 520, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 519, next block 521, flags: (NEW, REACHABLE)
;;    pred:       519 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                518 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                400 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                396 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                392 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                533 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                530 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                527 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_405(519), .MEM_406(5), .MEM_983(8), .MEM_1148(518), .MEM_413(17), .MEM_993(24), .MEM_58(400), .MEM_1006(38), .MEM_49(396), .MEM_61(48), .MEM_60(392), .MEM_1014(533), .MEM_1001(530), .MEM_1017(527), .MEM_1003(21), .MEM_1016(35)>
<L164>:
  # DEBUG thisD.51537 => &param_strD.36151
  # DEBUG thisD.51538 => &param_strD.36151
  # DEBUG thisD.51547 => &param_strD.36151
  # VUSE <.MEM_37>
  # PT = nonlocal escaped null { D.36151 } (escaped)
  _265 = MEM[(charD.10 * *)&param_strD.36151];
  # DEBUG D#2ptD.0 => &param_strD.36151
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51548 => &param_strD.36151
  if (&param_strD.36151.D.11539._M_local_bufD.11541 != _265)
    goto <bb 521>;
  else
    goto <bb 522>;
;;    succ:       521 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                522 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 521, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 520, next block 522, flags: (NEW, REACHABLE)
;;    pred:       520 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => param_strD.36151.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51540 => &param_strD.36151
  # DEBUG __sizeD.51539 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &param_strD.36151
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &param_strD.36151
  # DEBUG D#216ptD.0 => &param_strD.36151._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51543 => _265
  # DEBUG __aD.51541 => D#214ptD.0
  # DEBUG __nD.51542 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51546 => _265
  # DEBUG thisD.51544 => D#210ptD.0
  # DEBUG D.51545 => D#211ptD.0
  # .MEM_725 = VDEF <.MEM_37>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_265);
;;    succ:       522 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 522, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 521, next block 523, flags: (NEW, REACHABLE)
;;    pred:       520 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                521 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_397 = PHI <.MEM_37(520), .MEM_725(521)>
  # DEBUG D#220ptD.0 => &param_strD.36151._M_dataplusD.11519
  # DEBUG thisD.51549 => D#220ptD.0
  # DEBUG thisD.51550 => D#220ptD.0
  # DEBUG thisD.51551 => D#220ptD.0
  # .MEM_729 = VDEF <.MEM_397>
  MEM[(struct  &)&param_strD.36151] ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       523 (EH,EXECUTABLE)

;;   basic block 523, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 522, next block 524, flags: (NEW, REACHABLE)
;;    pred:       522 (EH,EXECUTABLE)
<L165>: [LP 2]
  # DEBUG thisD.51552 => &pattern_nameD.36150
  # DEBUG thisD.51553 => &pattern_nameD.36150
  # DEBUG thisD.51562 => &pattern_nameD.36150
  # VUSE <.MEM_729>
  # PT = nonlocal escaped null { D.36150 } (escaped)
  _278 = MEM[(charD.10 * *)&pattern_nameD.36150];
  # DEBUG D#2ptD.0 => &pattern_nameD.36150
  # DEBUG thisD.44869 => D#2ptD.0
  # DEBUG thisD.51563 => &pattern_nameD.36150
  if (&pattern_nameD.36150.D.11539._M_local_bufD.11541 != _278)
    goto <bb 524>;
  else
    goto <bb 525>;
;;    succ:       524 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                525 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 524, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 523, next block 525, flags: (NEW, REACHABLE)
;;    pred:       523 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#219ptD.0 => pattern_nameD.36150.D.11539._M_allocated_capacityD.11542
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG thisD.51555 => &pattern_nameD.36150
  # DEBUG __sizeD.51554 => D#218ptD.0
  # DEBUG D#217ptD.0 => D#218ptD.0
  # DEBUG D#2ptD.0 => &pattern_nameD.36150
  # DEBUG thisD.46231 => D#2ptD.0
  # DEBUG thisD.46232 => &pattern_nameD.36150
  # DEBUG D#216ptD.0 => &pattern_nameD.36150._M_dataplusD.11519
  # DEBUG D#214ptD.0 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#217ptD.0 + 1
  # DEBUG __pD.51558 => _278
  # DEBUG __aD.51556 => D#214ptD.0
  # DEBUG __nD.51557 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#215ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0
  # DEBUG D#210ptD.0 => D#212ptD.0
  # DEBUG D#211ptD.0 => D#213ptD.0
  # DEBUG __pD.51561 => _278
  # DEBUG thisD.51559 => D#210ptD.0
  # DEBUG D.51560 => D#211ptD.0
  # .MEM_730 = VDEF <.MEM_729>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZdlPvD.2766 (_278);
;;    succ:       525 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 525, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 524, next block 526, flags: (NEW, REACHABLE)
;;    pred:       523 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                524 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_398 = PHI <.MEM_729(523), .MEM_730(524)>
  # DEBUG D#220ptD.0 => &pattern_nameD.36150._M_dataplusD.11519
  # DEBUG thisD.51564 => D#220ptD.0
  # DEBUG thisD.51565 => D#220ptD.0
  # DEBUG thisD.51566 => D#220ptD.0
  resx 2
;;    succ:      

;;   basic block 526, loop depth 0, count 0, freq 82, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 552, should be 82
;;    prev block 525, next block 527, flags: (NEW, REACHABLE)
;;    pred:       6 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 169] # .MEM_1017 = VDEF <.MEM_981>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       527 (EH,EXECUTABLE)

;;   basic block 527, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 526, next block 528, flags: (NEW)
;;    pred:       526 (EH,EXECUTABLE)
<L301>: [LP 169]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 528, loop depth 0, count 0, freq 649, maybe hot
;;   Invalid sum of incoming frequencies 97, should be 649
;;    prev block 527, next block 529, flags: (NEW, REACHABLE)
;;    pred:       6 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.53910 => __start_736
  # DEBUG __lastD.53909 => _741
  # DEBUG D#438ptD.0 => &__firstD.53910
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.53912 => __start_736
  # DEBUG __lastD.53911 => _741
  # .MEM_982 = VDEF <.MEM_981>
  __dnewD.53887 = iftmp.47_821;
  if (iftmp.47_821 > 15)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 529, loop depth 0, count 0, freq 23, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 155, should be 23
;;    prev block 528, next block 530, flags: (NEW, REACHABLE)
;;    pred:       22 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 170] # .MEM_1001 = VDEF <.MEM_991>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       530 (EH,EXECUTABLE)

;;   basic block 530, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 529, next block 531, flags: (NEW)
;;    pred:       529 (EH,EXECUTABLE)
<L302>: [LP 170]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 531, loop depth 0, count 0, freq 181, maybe hot
;;   Invalid sum of incoming frequencies 27, should be 181
;;    prev block 530, next block 532, flags: (NEW, REACHABLE)
;;    pred:       22 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.53972 => __start_757
  # DEBUG __lastD.53971 => _760
  # DEBUG D#438ptD.0 => &__firstD.53972
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.53974 => __start_757
  # DEBUG __lastD.53973 => _760
  # .MEM_992 = VDEF <.MEM_991>
  __dnewD.53949 = _758;
  if (_758 > 15)
    goto <bb 23>;
  else
    goto <bb 26>;
;;    succ:       23 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 532, loop depth 0, count 0, freq 60, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 397, should be 60
;;    prev block 531, next block 533, flags: (NEW, REACHABLE)
;;    pred:       36 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 3] # .MEM_1014 = VDEF <.MEM_1004>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       533 (EH,EXECUTABLE)

;;   basic block 533, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 532, next block 534, flags: (NEW)
;;    pred:       532 (EH,EXECUTABLE)
<L303>: [LP 3]
  goto <bb 520> (<L164>);
;;    succ:       520 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 534, loop depth 0, count 0, freq 467, maybe hot
;;   Invalid sum of incoming frequencies 70, should be 467
;;    prev block 533, next block 535, flags: (NEW, REACHABLE)
;;    pred:       36 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.54034 => __start_776
  # DEBUG __lastD.54033 => _779
  # DEBUG D#438ptD.0 => &__firstD.54034
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.54036 => __start_776
  # DEBUG __lastD.54035 => _779
  # .MEM_1005 = VDEF <.MEM_1004>
  __dnewD.54011 = iftmp.47_797;
  if (iftmp.47_797 > 15)
    goto <bb 37>;
  else
    goto <bb 40>;
;;    succ:       37 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 535, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 534, next block 536, flags: (NEW, REACHABLE)
;;    pred:       239 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lhsD.51048 => &pattern_nameD.36150
  # DEBUG __rhsD.51049 => "hotspot"
  [LP 7] # .MEM_637 = VDEF <.MEM_570>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _208 = _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKcD.12239 (&pattern_nameD.36150, "hotspot");
  goto <bb 296>;
;;    succ:       296 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                536 (EH,EXECUTABLE)

;;   basic block 536, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 535, next block 537, flags: (NEW)
;;    pred:       535 (EH,EXECUTABLE)
<L304>: [LP 7]
  goto <bb 508> (<L163>);
;;    succ:       508 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 537, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 536, next block 538, flags: (NEW, REACHABLE)
;;    pred:       233 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                236 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                239 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1158 = PHI <.MEM_568(233), .MEM_569(236), .MEM_570(239)>
  # DEBUG missing_paramsD.37074 => 0
  # DEBUG kD.37075 => -1
  # VUSE <.MEM_1158>
  # PT = nonlocal escaped null 
  _286 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # VUSE <.MEM_1158>
  # PT = nonlocal escaped null 
  _287 = MEM[(struct basic_stringD.2844 * *)&paramsD.36157 + 8B];
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50903 => D#98ptD.0
  # DEBUG thisD.50902 => D#98ptD.0
  _311 = (long intD.12) _287;
  _312 = (long intD.12) _286;
  _313 = _311 - _312;
  # RANGE [-288230376151711744, 288230376151711743]
  _314 = _313 /[ex] 32;
  if (_314 == 0)
    goto <bb 240>;
  else
    goto <bb 247>;
;;    succ:       240 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                247 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 538, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 537, next block 539, flags: (NEW, REACHABLE)
;;    pred:       302 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 42] # .MEM_1108 = VDEF <.MEM_1098>
  # USE = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  # CLB = nonlocal null { D.22587 D.33889 D.33952 D.33982 D.34044 D.34074 D.34155 D.34194 D.35033 D.35946 D.35976 D.36042 D.36081 D.36150 D.36151 D.36153 D.36155 D.36156 D.36157 D.36968 D.36969 D.36972 D.37002 D.37014 D.37050 D.37054 D.37078 D.37082 D.37086 D.37119 D.37120 D.37123 D.37124 D.37135 D.37136 D.53887 D.53949 D.54011 D.54260 D.54654 D.54655 D.54656 D.54657 D.54658 D.54659 D.54660 D.54661 D.54662 D.54663 D.54664 D.54665 D.54666 D.54667 D.54668 D.54669 D.54670 } (nonlocal, escaped heap)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       539 (EH,EXECUTABLE)

;;   basic block 539, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 538, next block 540, flags: (NEW)
;;    pred:       538 (EH,EXECUTABLE)
<L305>: [LP 42]
  goto <bb 476> (<L154>);
;;    succ:       476 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 540, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 539, next block 541, flags: (NEW, REACHABLE)
;;    pred:       302 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.54283 => _872
  # DEBUG __lastD.54282 => _874
  # DEBUG D#438ptD.0 => &__firstD.54283
  # DEBUG D.49159 => D#438ptD.0
  # DEBUG __firstD.54285 => _872
  # DEBUG __lastD.54284 => _874
  # .MEM_1099 = VDEF <.MEM_1098>
  __dnewD.54260 = _873;
  if (_873 > 15)
    goto <bb 303>;
  else
    goto <bb 305>;
;;    succ:       303 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                305 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 541, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 540, next block 1, flags: (NEW, REACHABLE)
;;    pred:       248 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG nD.37079 => -1
  # DEBUG missing_paramsD.37074 => 1
  # DEBUG xrD.37083 => -1
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG D#98ptD.0 => &paramsD.36157
  # DEBUG thisD.50961 => D#98ptD.0
  # DEBUG thisD.50960 => D#98ptD.0
  if (_320 <= 2)
    goto <bb 258>;
  else
    goto <bb 265>;
;;    succ:       258 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                265 [29.0%]  (FALSE_VALUE,EXECUTABLE)

}


