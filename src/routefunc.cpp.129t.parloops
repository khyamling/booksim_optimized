
;; Function void qtree_nca(const Router*, const Flit*, int, OutputSet*, bool) (_Z9qtree_ncaPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1964, decl_uid=45359, cgraph_uid=463, symbol_order=474)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void qtree_nca(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  bool Close_Phi.443_I_lsm.449;
  int Close_Phi.443_I_lsm.448;
  bool phi_out_of_ssa.442_I_lsm.447;
  int phi_out_of_ssa.442_I_lsm.446;
  signed long graphite_IV.445;
  int Cross_BB_scalar_dependence.444[1];
  int D.54670;
  int D.54669;
  int D.54668;
  int Close_Phi.443[1];
  int phi_out_of_ssa.442[1];
  int i;
  int dest;
  int pos;
  int height;
  int out_port;
  static const char __PRETTY_FUNCTION__[66] = "void qtree_nca(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  signed long _4;
  signed long _5;
  int gNumVCs.0_8;
  FlitType _11;
  int _20;
  signed long _31;
  signed long _34;
  int _35;
  const int _40;
  const int _41;
  bool _42;
  int gN.1_44;
  bool _46;
  bool _47;
  bool _56;
  int pretmp_61;
  int prephitmp_62;
  int pretmp_63;
  signed long _64;
  signed long _67;
  bool _68;
  signed long _69;
  signed long _70;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#148 => gNumVCs
  # DEBUG vcEnd => D#148 + -1
  _11 = f_10(D)->type;
  if (_11 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_12 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_12
  vcEnd_13 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_13
  goto <bb 11>;

  <bb 4>:
  if (_11 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_14 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_14
  vcEnd_15 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_15
  goto <bb 11>;

  <bb 6>:
  if (_11 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_16 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_16
  vcEnd_17 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_17
  goto <bb 11>;

  <bb 8>:
  gNumVCs.0_8 = gNumVCs;
  if (_11 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_9 = gNumVCs.0_8 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_18 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_18
  vcEnd_19 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_19

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_12(3), vcBegin_14(5), vcBegin_16(7), 0(9), vcBegin_18(10)>
  # vcEnd_2 = PHI <vcEnd_13(3), vcEnd_15(5), vcEnd_17(7), vcEnd_9(9), vcEnd_19(10)>
  # DEBUG vcEnd => vcEnd_2
  # DEBUG vcBegin => vcBegin_1
  _20 = f_10(D)->vc;
  _42 = vcEnd_2 < _20;
  _47 = vcBegin_1 > _20;
  _56 = _42 | _47;
  if (_56 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _46 = _20 >= 0;
  if (inject_21(D) <= _46)
    goto <bb 13>;
  else
    goto <bb 26>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 92, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_21(D) != 0)
    goto <bb 26>;
  else
    goto <bb 15>;

  <bb 15>:
  _40 = MEM[(int *)r_23(D) + 96B];
  # DEBUG D#14 => r_23(D)
  # DEBUG this => D#14
  height_25 = QTree::HeightFromID (_40);
  # DEBUG height => height_25
  _41 = MEM[(int *)r_23(D) + 96B];
  # DEBUG D#14 => r_23(D)
  # DEBUG this => D#14
  pos_27 = QTree::PosFromID (_41);
  # DEBUG pos => pos_27
  dest_28 = f_10(D)->dest;
  # DEBUG dest => dest_28
  i_29 = height_25 + 1;
  # DEBUG i => i_29
  # DEBUG i => i_29
  # DEBUG dest => dest_28
  gN.1_44 = gN;
  if (i_29 >= gN.1_44)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  pretmp_61 = gK;
  goto <bb 23>;

  <bb 17>:
  pretmp_63 = gK;
  phi_out_of_ssa.442[0] = dest_28;
  _5 = (signed long) height_25;
  _4 = (signed long) gN.1_44;
  _64 = _5 - _4;
  _31 = _64 + 4294967297;
  _34 = _31 % 4294967296;
  _67 = 4294967296 - _34;
  _68 = _67 > 0;
  if (_68 != 0)
    goto <bb 18>;
  else
    goto <bb 22>;

  <bb 18>:
  _69 = _31 % 4294967296;
  _70 = 4294967295 - _69;
  phi_out_of_ssa.442_I_lsm.446_30 = phi_out_of_ssa.442[0];

  <bb 19>:
  # graphite_IV.445_71 = PHI <0(18), graphite_IV.445_72(20)>
  # phi_out_of_ssa.442_I_lsm.446_76 = PHI <phi_out_of_ssa.442_I_lsm.446_30(18), dest_74(20)>
  # DEBUG i => NULL
  # DEBUG dest => NULL
  dest_74 = phi_out_of_ssa.442_I_lsm.446_76 / pretmp_63;
  # DEBUG dest => NULL
  # DEBUG i => NULL
  # DEBUG i => NULL
  # DEBUG dest => NULL
  graphite_IV.445_72 = graphite_IV.445_71 + 1;
  if (graphite_IV.445_71 < _70)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  goto <bb 19>;

  <bb 21>:
  # Close_Phi.443_I_lsm.448_81 = PHI <dest_74(19)>
  Close_Phi.443[0] = Close_Phi.443_I_lsm.448_81;

  <bb 22>:
  dest_79 = Close_Phi.443[0];
  Cross_BB_scalar_dependence.444[0] = dest_79;
  dest_48 = Cross_BB_scalar_dependence.444[0];

  <bb 23>:
  # dest_43 = PHI <dest_48(22), dest_28(16)>
  # prephitmp_62 = PHI <pretmp_63(22), pretmp_61(16)>
  _35 = dest_43 / prephitmp_62;
  if (pos_27 == _35)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  out_port_36 = dest_43 % prephitmp_62;
  # DEBUG out_port => out_port_36

  <bb 25>:
  # out_port_55 = PHI <prephitmp_62(23), out_port_36(24)>

  <bb 26>:
  # out_port_3 = PHI <out_port_55(25), -1(14), -1(12)>
  # DEBUG out_port => out_port_3
  OutputSet::Clear (outputs_37(D));
  OutputSet::AddRange (outputs_37(D), out_port_3, vcBegin_1, vcEnd_2, 0);
  return;

}



;; Function void dest_tag_fly(const Router*, const Flit*, int, OutputSet*, bool) (_Z12dest_tag_flyPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1988, decl_uid=45756, cgraph_uid=487, symbol_order=498)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void dest_tag_fly(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  bool Close_Phi.457_I_lsm.463;
  int Close_Phi.457_I_lsm.462;
  bool phi_out_of_ssa.456_I_lsm.461;
  int phi_out_of_ssa.456_I_lsm.460;
  signed long graphite_IV.459;
  int Cross_BB_scalar_dependence.458[1];
  int D.54700;
  int D.54699;
  int D.54698;
  int Close_Phi.457[1];
  int phi_out_of_ssa.456[1];
  int dest;
  int stage;
  int out_port;
  static const char __PRETTY_FUNCTION__[69] = "void dest_tag_fly(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int gNumVCs.132_7;
  FlitType _10;
  int _19;
  int gK.133_23;
  int _24;
  int gNodes.134_25;
  const int _36;
  bool _37;
  int _38;
  bool _41;
  bool _42;
  int gN.135_48;
  bool _50;
  signed long _57;
  signed long _58;
  signed long _59;
  signed long _60;
  signed long _61;
  signed long _62;
  bool _63;
  signed long _64;
  signed long _65;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#150 => gNumVCs
  # DEBUG vcEnd => D#150 + -1
  _10 = f_9(D)->type;
  if (_10 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_11 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_11
  vcEnd_12 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_12
  goto <bb 11>;

  <bb 4>:
  if (_10 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_13 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_13
  vcEnd_14 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_14
  goto <bb 11>;

  <bb 6>:
  if (_10 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_15 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_15
  vcEnd_16 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_16
  goto <bb 11>;

  <bb 8>:
  gNumVCs.132_7 = gNumVCs;
  if (_10 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_8 = gNumVCs.132_7 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_17 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_17
  vcEnd_18 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_18

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_11(3), vcBegin_13(5), vcBegin_15(7), 0(9), vcBegin_17(10)>
  # vcEnd_2 = PHI <vcEnd_12(3), vcEnd_14(5), vcEnd_16(7), vcEnd_8(9), vcEnd_18(10)>
  # DEBUG vcEnd => vcEnd_2
  # DEBUG vcBegin => vcBegin_1
  _19 = f_9(D)->vc;
  _37 = vcEnd_2 < _19;
  _42 = vcBegin_1 > _19;
  _41 = _37 | _42;
  if (_41 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _50 = _19 >= 0;
  if (inject_20(D) <= _50)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 1815, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_20(D) != 0)
    goto <bb 23>;
  else
    goto <bb 15>;

  <bb 15>:
  _36 = MEM[(int *)r_22(D) + 96B];
  # DEBUG D#14 => r_22(D)
  # DEBUG this => D#14
  gK.133_23 = gK;
  _24 = gK.133_23 * _36;
  gNodes.134_25 = gNodes;
  stage_26 = _24 / gNodes.134_25;
  # DEBUG stage => stage_26
  dest_27 = f_9(D)->dest;
  # DEBUG dest => dest_27
  # DEBUG dest => dest_27
  # DEBUG stage => stage_26
  gN.135_48 = gN;
  _38 = gN.135_48 + -1;
  if (stage_26 >= _38)
    goto <bb 22>;
  else
    goto <bb 16>;

  <bb 16>:
  phi_out_of_ssa.456[0] = dest_27;
  _57 = (signed long) stage_26;
  _58 = (signed long) gN.135_48;
  _59 = _57 - _58;
  _60 = _59 + 4294967297;
  _61 = _60 % 4294967296;
  _62 = 4294967296 - _61;
  _63 = _62 > 0;
  if (_63 != 0)
    goto <bb 17>;
  else
    goto <bb 21>;

  <bb 17>:
  _64 = _60 % 4294967296;
  _65 = 4294967295 - _64;
  phi_out_of_ssa.456_I_lsm.460_4 = phi_out_of_ssa.456[0];

  <bb 18>:
  # graphite_IV.459_66 = PHI <0(17), graphite_IV.459_67(19)>
  # phi_out_of_ssa.456_I_lsm.460_71 = PHI <phi_out_of_ssa.456_I_lsm.460_4(17), dest_69(19)>
  # DEBUG dest => NULL
  # DEBUG stage => NULL
  dest_69 = phi_out_of_ssa.456_I_lsm.460_71 / gK.133_23;
  # DEBUG dest => NULL
  # DEBUG stage => NULL
  # DEBUG dest => NULL
  # DEBUG stage => NULL
  graphite_IV.459_67 = graphite_IV.459_66 + 1;
  if (graphite_IV.459_66 < _65)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  goto <bb 18>;

  <bb 20>:
  # Close_Phi.457_I_lsm.462_76 = PHI <dest_69(18)>
  Close_Phi.457[0] = Close_Phi.457_I_lsm.462_76;

  <bb 21>:
  dest_74 = Close_Phi.457[0];
  Cross_BB_scalar_dependence.458[0] = dest_74;
  dest_28 = Cross_BB_scalar_dependence.458[0];

  <bb 22>:
  # dest_46 = PHI <dest_28(21), dest_27(15)>
  out_port_32 = dest_46 % gK.133_23;
  # DEBUG out_port => out_port_32

  <bb 23>:
  # out_port_47 = PHI <-1(14), out_port_32(22)>

  <bb 24>:
  # out_port_3 = PHI <out_port_47(23), -1(12)>
  # DEBUG out_port => out_port_3
  OutputSet::Clear (outputs_33(D));
  OutputSet::AddRange (outputs_33(D), out_port_3, vcBegin_1, vcEnd_2, 0);
  return;

}



;; Function void chaos_torus(const Router*, const Flit*, int, OutputSet*, bool) (_Z11chaos_torusPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1989, decl_uid=45771, cgraph_uid=488, symbol_order=499)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void chaos_torus(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  int dist2;
  int n;
  int dest;
  int cur;
  int pretmp_4;
  int prephitmp_5;
  int _19;
  int _21;
  int _23;
  int _24;
  int _25;
  int _26;
  int _28;
  int _30;
  int _31;
  int gN.136_37;
  int _38;
  int gN.136_42;
  int prephitmp_52;
  int pretmp_53;
  int pretmp_54;
  int prephitmp_55;
  int pretmp_58;
  int pretmp_59;
  int prephitmp_60;

  <bb 2>:
  OutputSet::Clear (outputs_9(D));
  if (inject_11(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  OutputSet::AddRange (outputs_9(D), -1, 0, 0, 0);
  goto <bb 16>;

  <bb 4>:
  cur_40 = MEM[(int *)r_13(D) + 96B];
  # DEBUG D#14 => r_13(D)
  # DEBUG this => D#14
  # DEBUG cur => NULL
  dest_16 = f_15(D)->dest;
  # DEBUG dest => dest_16
  if (dest_16 != cur_40)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG n => 0
  # DEBUG dest => dest_16
  # DEBUG cur => cur_40
  gN.136_42 = gN;
  if (gN.136_42 <= 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 16>;

  <bb 7>:
  pretmp_4 = gK;

  <bb 8>:
  # cur_48 = PHI <cur_40(7), cur_34(14)>
  # dest_43 = PHI <dest_16(7), dest_35(14)>
  # n_49 = PHI <0(7), n_36(14)>
  # prephitmp_5 = PHI <pretmp_4(7), prephitmp_55(14)>
  # prephitmp_52 = PHI <gN.136_42(7), prephitmp_60(14)>
  # DEBUG n => n_49
  # DEBUG dest => dest_43
  # DEBUG cur => cur_48
  _19 = cur_48 % prephitmp_5;
  _21 = dest_43 % prephitmp_5;
  if (_19 != _21)
    goto <bb 9>;
  else
    goto <bb 13>;

  <bb 9>:
  _23 = _21 - _19;
  _24 = prephitmp_5 + _23;
  _25 = _24 % prephitmp_5;
  _26 = _25 * -2;
  dist2_27 = prephitmp_5 + _26;
  # DEBUG dist2 => dist2_27
  if (dist2_27 >= 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _30 = n_49 * 2;
  _31 = _30 + 1;
  OutputSet::AddRange (outputs_9(D), _31, 0, 0, 0);
  pretmp_53 = gK;
  pretmp_58 = gN;
  goto <bb 13>;

  <bb 11>:
  _28 = n_49 * 2;
  OutputSet::AddRange (outputs_9(D), _28, 0, 0, 0);
  if (dist2_27 <= 0)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_54 = gK;
  pretmp_59 = gN;

  <bb 13>:
  # prephitmp_55 = PHI <prephitmp_5(8), pretmp_53(10), pretmp_54(12)>
  # prephitmp_60 = PHI <prephitmp_52(8), pretmp_58(10), pretmp_59(12)>
  cur_34 = cur_48 / prephitmp_55;
  # DEBUG cur => cur_34
  dest_35 = dest_43 / prephitmp_55;
  # DEBUG dest => dest_35
  n_36 = n_49 + 1;
  # DEBUG n => n_36
  # DEBUG n => n_36
  # DEBUG dest => dest_35
  # DEBUG cur => cur_34
  if (n_36 >= prephitmp_60)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 8>;

  <bb 15>:
  gN.136_37 = gN;
  _38 = gN.136_37 * 2;
  OutputSet::AddRange (outputs_9(D), _38, 0, 0, 0);

  <bb 16>:
  return;

}



;; Function void chaos_mesh(const Router*, const Flit*, int, OutputSet*, bool) (_Z10chaos_meshPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1990, decl_uid=45784, cgraph_uid=489, symbol_order=500)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void chaos_mesh(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  int n;
  int dest;
  int cur;
  int pretmp_4;
  int _18;
  int prephitmp_19;
  int _20;
  int _22;
  int _23;
  int _25;
  int gN.138_31;
  int _32;
  int prephitmp_35;
  int pretmp_36;
  int gN.138_37;
  int prephitmp_38;
  int pretmp_40;
  int pretmp_46;
  int pretmp_47;
  int prephitmp_48;

  <bb 2>:
  OutputSet::Clear (outputs_8(D));
  if (inject_10(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  OutputSet::AddRange (outputs_8(D), -1, 0, 0, 0);
  goto <bb 15>;

  <bb 4>:
  cur_34 = MEM[(int *)r_12(D) + 96B];
  # DEBUG D#14 => r_12(D)
  # DEBUG this => D#14
  # DEBUG cur => NULL
  dest_15 = f_14(D)->dest;
  # DEBUG dest => dest_15
  if (dest_15 != cur_34)
    goto <bb 5>;
  else
    goto <bb 14>;

  <bb 5>:
  # DEBUG n => 0
  # DEBUG dest => dest_15
  # DEBUG cur => cur_34
  gN.138_37 = gN;
  if (gN.138_37 <= 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 15>;

  <bb 7>:
  pretmp_4 = gK;

  <bb 8>:
  # cur_41 = PHI <cur_34(7), cur_28(13)>
  # dest_42 = PHI <dest_15(7), dest_29(13)>
  # n_43 = PHI <0(7), n_30(13)>
  # prephitmp_19 = PHI <pretmp_4(7), prephitmp_38(13)>
  # prephitmp_35 = PHI <gN.138_37(7), prephitmp_48(13)>
  # DEBUG n => n_43
  # DEBUG dest => dest_42
  # DEBUG cur => cur_41
  _18 = cur_41 % prephitmp_19;
  _20 = dest_42 % prephitmp_19;
  if (_18 != _20)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 9>:
  if (_18 < _20)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _25 = n_43 * 2;
  OutputSet::AddRange (outputs_8(D), _25, 0, 0, 0);
  pretmp_36 = gK;
  pretmp_47 = gN;
  goto <bb 12>;

  <bb 11>:
  _22 = n_43 * 2;
  _23 = _22 + 1;
  OutputSet::AddRange (outputs_8(D), _23, 0, 0, 0);
  pretmp_40 = gK;
  pretmp_46 = gN;

  <bb 12>:
  # prephitmp_38 = PHI <prephitmp_19(8), pretmp_40(11), pretmp_36(10)>
  # prephitmp_48 = PHI <prephitmp_35(8), pretmp_46(11), pretmp_47(10)>
  cur_28 = cur_41 / prephitmp_38;
  # DEBUG cur => cur_28
  dest_29 = dest_42 / prephitmp_38;
  # DEBUG dest => dest_29
  n_30 = n_43 + 1;
  # DEBUG n => n_30
  # DEBUG n => n_30
  # DEBUG dest => dest_29
  # DEBUG cur => cur_28
  if (n_30 >= prephitmp_48)
    goto <bb 6>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 8>;

  <bb 14>:
  gN.138_31 = gN;
  _32 = gN.138_31 * 2;
  OutputSet::AddRange (outputs_8(D), _32, 0, 0, 0);

  <bb 15>:
  return;

}



;; Function void tree4_anca(const Router*, const Flit*, int, OutputSet*, bool) (_Z10tree4_ancaPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1965, decl_uid=45376, cgraph_uid=464, symbol_order=475)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void tree4_anca(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  int i;
  int rP;
  int rH;
  int dest;
  int out_port;
  int range;
  static const char __PRETTY_FUNCTION__[67] = "void tree4_anca(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int gNumVCs.3_9;
  FlitType _12;
  int _21;
  int _29;
  int _32;
  int _33;
  int _36;
  int _41;
  const int _44;
  long int _45;
  long int _46;
  int _47;
  bool _52;
  bool _53;
  bool _61;
  bool _62;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#158 => gNumVCs
  # DEBUG vcEnd => D#158 + -1
  _12 = f_11(D)->type;
  if (_12 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_13 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_13
  vcEnd_14 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_14
  goto <bb 11>;

  <bb 4>:
  if (_12 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_15 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_15
  vcEnd_16 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_16
  goto <bb 11>;

  <bb 6>:
  if (_12 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_17 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_17
  vcEnd_18 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_18
  goto <bb 11>;

  <bb 8>:
  gNumVCs.3_9 = gNumVCs;
  if (_12 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_10 = gNumVCs.3_9 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_19 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_19
  vcEnd_20 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_20

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_13(3), vcBegin_15(5), vcBegin_17(7), 0(9), vcBegin_19(10)>
  # vcEnd_2 = PHI <vcEnd_14(3), vcEnd_16(5), vcEnd_18(7), vcEnd_10(9), vcEnd_20(10)>
  # DEBUG vcEnd => vcEnd_2
  # DEBUG vcBegin => vcBegin_1
  _21 = f_11(D)->vc;
  _53 = vcEnd_2 < _21;
  _62 = vcBegin_1 > _21;
  _52 = _53 | _62;
  if (_52 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _61 = _21 >= 0;
  if (inject_22(D) <= _61)
    goto <bb 13>;
  else
    goto <bb 29>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 143, &__PRETTY_FUNCTION__);

  <bb 14>:
  # DEBUG range => 1
  if (inject_22(D) != 0)
    goto <bb 29>;
  else
    goto <bb 15>;

  <bb 15>:
  dest_24 = f_11(D)->dest;
  # DEBUG dest => dest_24
  # DEBUG NPOS => 16
  _44 = MEM[(int *)r_25(D) + 96B];
  # DEBUG D#14 => r_25(D)
  # DEBUG this => D#14
  rH_26 = _44 / 16;
  # DEBUG rH => rH_26
  # DEBUG D#14 => r_25(D)
  # DEBUG this => D#14
  # DEBUG rP => _44 % 16
  if (rH_26 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  dest_28 = dest_24 / 16;
  # DEBUG dest => dest_28
  _29 = dest_28 * 2;
  # DEBUG max => 1
  _45 = ran_next ();
  _46 = _45 % 2;
  _47 = (int) _46;
  out_port_30 = _29 + _47;
  # DEBUG out_port => out_port_30
  goto <bb 29>;

  <bb 17>:
  rP_27 = _44 % 16;
  if (rH_26 == 1)
    goto <bb 18>;
  else
    goto <bb 22>;

  <bb 18>:
  # DEBUG dest => dest_24 / 4
  _32 = dest_24 / 16;
  _33 = rP_27 / 2;
  if (_32 == _33)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  dest_31 = dest_24 / 4;
  out_port_35 = dest_31 % 4;
  # DEBUG out_port => out_port_35
  goto <bb 29>;

  <bb 20>:
  out_port_34 = gK;
  # DEBUG out_port => out_port_34
  # DEBUG range => out_port_34
  # DEBUG out_port => out_port_34
  # DEBUG range => out_port_34
  OutputSet::Clear (outputs_39(D));
  # DEBUG i => 0
  # DEBUG i => 0
  if (out_port_34 <= 0)
    goto <bb 21>;
  else
    goto <bb 25>;

  <bb 21>:
  return;

  <bb 22>:
  _36 = dest_24 / 4;
  if (rP_27 == _36)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  out_port_37 = dest_24 % 4;
  # DEBUG out_port => out_port_37
  goto <bb 28>;

  <bb 24>:
  out_port_38 = gK;
  # DEBUG out_port => out_port_38
  # DEBUG range => 2
  goto <bb 28>;

  <bb 25>:
  # out_port_54 = PHI <out_port_34(20), out_port_50(29)>
  # out_port_63 = PHI <out_port_34(20), out_port_60(29)>
  # DEBUG out_port => out_port_63
  # DEBUG range => out_port_54
  # DEBUG i => 0

  <bb 26>:
  # i_59 = PHI <0(25), i_43(27)>
  # DEBUG i => i_59
  _41 = i_59 + out_port_63;
  OutputSet::AddRange (outputs_39(D), _41, vcBegin_1, vcEnd_2, 0);
  i_43 = i_59 + 1;
  # DEBUG i => i_43
  # DEBUG i => i_43
  if (i_43 >= out_port_54)
    goto <bb 21>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 26>;

  <bb 28>:
  # out_port_58 = PHI <1(23), 2(24)>
  # out_port_51 = PHI <out_port_37(23), out_port_38(24)>

  <bb 29>:
  # out_port_50 = PHI <out_port_58(28), 1(14), 1(12), 1(16), 1(19)>
  # out_port_60 = PHI <out_port_51(28), -1(14), -1(12), out_port_30(16), out_port_35(19)>
  # DEBUG out_port => out_port_60
  # DEBUG range => out_port_50
  OutputSet::Clear (outputs_39(D));
  # DEBUG i => 0
  # DEBUG i => 0
  goto <bb 25>;

}



;; Function void dim_order_ni_torus(const Router*, const Flit*, int, OutputSet*, bool) (_Z18dim_order_ni_torusPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1985, decl_uid=45710, cgraph_uid=484, symbol_order=495)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void dim_order_ni_torus(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.54805;
  char __c;
  char_type D.54802;
  char __c;
  char_type D.54799;
  struct basic_ostream & D.54793;
  int dim_left;
  int dir;
  int dist2;
  int cur;
  int dest;
  const int vcs_per_dest;
  int dest;
  int out_port;
  static const char __PRETTY_FUNCTION__[75] = "void dim_order_ni_torus(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int gNumVCs.120_9;
  FlitType _12;
  int _21;
  int (*__vtbl_ptr_type) () * _28;
  int _29;
  int _30;
  int gNodes.121_31;
  int _33;
  int _34;
  int _36;
  bool _39;
  int _40;
  int _41;
  int _44;
  struct ostream * gWatchOut.123_45;
  struct basic_ostream & _47;
  const size_type _48;
  struct basic_ostream & _50;
  struct basic_ostream & _52;
  struct basic_ostream & _54;
  struct basic_ostream & _56;
  struct basic_ostream & _58;
  struct basic_ostream & _60;
  bool _65;
  long int _67;
  char * const _68;
  struct basic_ostream & _69;
  const struct __ctype_type * _82;
  int _87;
  int _89;
  int _93;
  int _97;
  int _98;
  int _99;
  int _100;
  long int _102;
  long int _103;
  int gN.23_105;
  int _107;
  bool _109;
  bool _125;
  bool _127;
  int _131;
  long int _132;
  sizetype _133;
  struct basic_ios * _134;
  struct basic_ostream & _137;
  char _139;
  char_type _142;
  int gK.24_146;
  int (*__vtbl_ptr_type) () * _147;
  int (*__vtbl_ptr_type) () _148;
  void * PROF_152;
  char_type _154;
  int _159;
  int pretmp_188;
  int pretmp_189;
  int prephitmp_190;
  int prephitmp_191;
  int prephitmp_192;
  int _198;
  int _199;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#175 => gNumVCs
  # DEBUG vcEnd => D#175 + -1
  _12 = f_11(D)->type;
  if (_12 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_13 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_13
  vcEnd_14 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_14
  goto <bb 11>;

  <bb 4>:
  if (_12 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_15 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_15
  vcEnd_16 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_16
  goto <bb 11>;

  <bb 6>:
  if (_12 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_17 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_17
  vcEnd_18 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_18
  goto <bb 11>;

  <bb 8>:
  gNumVCs.120_9 = gNumVCs;
  if (_12 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_10 = gNumVCs.120_9 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_19 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_19
  vcEnd_20 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_20

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_13(3), vcBegin_15(5), vcBegin_17(7), 0(9), vcBegin_19(10)>
  # vcEnd_4 = PHI <vcEnd_14(3), vcEnd_16(5), vcEnd_18(7), vcEnd_10(9), vcEnd_20(10)>

  <bb 46>:
  # DEBUG vcEnd => vcEnd_4
  # DEBUG vcBegin => vcBegin_1
  _21 = f_11(D)->vc;
  _65 = vcEnd_4 < _21;
  _125 = vcBegin_1 > _21;
  _109 = _65 | _125;
  if (_109 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _127 = _21 >= 0;
  if (inject_22(D) <= _127)
    goto <bb 13>;
  else
    goto <bb 38>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 1602, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_22(D) != 0)
    goto <bb 38>;
  else
    goto <bb 15>;

  <bb 15>:
  cur_66 = MEM[(int *)r_25(D) + 96B];
  # DEBUG D#14 => r_25(D)
  # DEBUG this => D#14
  # DEBUG cur => NULL
  dest_26 = f_11(D)->dest;
  # DEBUG dest => dest_26
  # DEBUG cur => cur_66
  # DEBUG dest => dest_26
  # DEBUG in_port => in_channel_27(D)
  # DEBUG out_port => &out_port
  # DEBUG partition => 0B
  # DEBUG balance => 0
  # DEBUG dim_left => 0
  # DEBUG dim_left => 0
  # DEBUG dest => dest_26
  # DEBUG cur => cur_66
  gN.23_105 = gN;
  if (gN.23_105 <= 0)
    goto <bb 41>;
  else
    goto <bb 16>;

  <bb 16>:
  gK.24_146 = gK;
  _131 = cur_66 % gK.24_146;
  _159 = dest_26 % gK.24_146;
  if (_131 != _159)
    goto <bb 42>;
  else
    goto <bb 20>;

  <bb 17>:
  _87 = cur_90 % gK.24_146;
  _89 = dest_91 % gK.24_146;
  if (_87 != _89)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # _199 = PHI <_87(17)>
  # _198 = PHI <_89(17)>
  # dim_left_195 = PHI <dim_left_92(17)>
  goto <bb 42>;

  <bb 19>:
  goto <bb 21>;

  <bb 20>:

  <bb 21>:
  # dim_left_117 = PHI <0(20), dim_left_92(19)>
  # cur_156 = PHI <cur_66(20), cur_90(19)>
  # dest_124 = PHI <dest_26(20), dest_91(19)>
  # DEBUG dim_left => dim_left_117
  # DEBUG dest => dest_124
  # DEBUG cur => cur_156
  cur_90 = cur_156 / gK.24_146;
  # DEBUG cur => cur_90
  dest_91 = dest_124 / gK.24_146;
  # DEBUG dest => dest_91
  dim_left_92 = dim_left_117 + 1;
  # DEBUG dim_left => dim_left_92
  # DEBUG dim_left => dim_left_92
  # DEBUG dest => dest_91
  # DEBUG cur => cur_90
  if (dim_left_92 >= gN.23_105)
    goto <bb 41>;
  else
    goto <bb 17>;

  <bb 22>:
  # DEBUG D#174 => gK
  # DEBUG cur => NULL
  # DEBUG dest => NULL
  _97 = prephitmp_192 - prephitmp_191;
  _98 = _97 + gK.24_146;
  _99 = _98 % gK.24_146;
  _100 = _99 * -2;
  dist2_101 = _100 + gK.24_146;
  # DEBUG dist2 => dist2_101
  if (dist2_101 > 0)
    goto <bb 40>;
  else
    goto <bb 23>;

  <bb 23>:
  if (dist2_101 == 0)
    goto <bb 24>;
  else
    goto <bb 39>;

  <bb 24>:
  # DEBUG max => 1
  _102 = ran_next ();
  _103 = _102 % 2;
  if (_103 != 0)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 25>:
  out_port_129 = in_channel_27(D) ^ 1;
  # DEBUG out_port => out_port_129

  <bb 26>:
  # out_port_110 = PHI <out_port_130(45), out_port_108(43), out_port_129(25), out_port_106(44)>
  # DEBUG out_port => out_port_110
  if (dest_26 != cur_66)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 27>:
  _29 = vcEnd_4 - vcBegin_1;
  _30 = _29 + 1;
  gNodes.121_31 = gNodes;
  vcs_per_dest_32 = _30 / gNodes.121_31;
  # DEBUG vcs_per_dest => vcs_per_dest_32
  if (vcs_per_dest_32 == 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  __assert_fail ("vcs_per_dest", "routefunc.cpp", 1622, &__PRETTY_FUNCTION__);

  <bb 29>:
  _33 = f_11(D)->dest;
  _34 = vcs_per_dest_32 * _33;
  vcBegin_35 = vcBegin_1 + _34;
  # DEBUG vcBegin => vcBegin_35
  _36 = vcs_per_dest_32 + vcBegin_35;
  vcEnd_37 = _36 + -1;
  # DEBUG vcEnd => vcEnd_37

  <bb 30>:
  # vcBegin_2 = PHI <vcBegin_1(26), vcBegin_35(29)>
  # vcEnd_5 = PHI <vcEnd_4(26), vcEnd_37(29)>
  # DEBUG vcEnd => vcEnd_5
  # DEBUG vcBegin => vcBegin_2
  _39 = f_11(D)->watch;
  if (_39 != 0)
    goto <bb 31>;
  else
    goto <bb 38>;

  <bb 31>:
  _40 = f_11(D)->dest;
  _41 = f_11(D)->id;
  # DEBUG D#25 => &r_25(D)->D.42039.D.32226
  # DEBUG this => D#25
  # DEBUG D#26 => &MEM[(const struct Module *)r_25(D)]._fullname
  _44 = GetSimTime ();
  gWatchOut.123_45 = gWatchOut;
  _47 = std::basic_ostream<char>::operator<< (gWatchOut.123_45, _44);
  # DEBUG __out => _47
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_47, " | ", 3);
  # DEBUG __os => _47
  # DEBUG __str => D#26
  _48 = MEM[(long unsigned int *)r_25(D) + 48B];
  # DEBUG D#1 => D#26
  # DEBUG this => D#1
  _67 = (long int) _48;
  # DEBUG this => D#26
  _68 = MEM[(char * *)r_25(D) + 40B];
  # DEBUG D#3 => D#26
  # DEBUG this => D#3
  _69 = std::__ostream_insert<char, std::char_traits<char> > (_47, _68, _67);
  # DEBUG __out => _69
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_69, " | ", 3);
  # DEBUG __out => _69
  # DEBUG __s => "Adding VC range ["
  # DEBUG __s => "Adding VC range ["
  std::__ostream_insert<char, std::char_traits<char> > (_69, "Adding VC range [", 17);
  _50 = std::basic_ostream<char>::operator<< (_69, vcBegin_2);
  # DEBUG __out => _50
  # DEBUG __s => ","
  # DEBUG __s => ","
  std::__ostream_insert<char, std::char_traits<char> > (_50, ",", 1);
  _52 = std::basic_ostream<char>::operator<< (_50, vcEnd_5);
  # DEBUG __out => _52
  # DEBUG __s => "]"
  # DEBUG __s => "]"
  std::__ostream_insert<char, std::char_traits<char> > (_52, "]", 1);
  # DEBUG __out => _52
  # DEBUG __s => " at output port "
  # DEBUG __s => " at output port "
  std::__ostream_insert<char, std::char_traits<char> > (_52, " at output port ", 16);
  _54 = std::basic_ostream<char>::operator<< (_52, out_port_110);
  # DEBUG __out => _54
  # DEBUG __s => " for flit "
  # DEBUG __s => " for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_54, " for flit ", 10);
  _56 = std::basic_ostream<char>::operator<< (_54, _41);
  # DEBUG __out => _56
  # DEBUG __s => " (input port "
  # DEBUG __s => " (input port "
  std::__ostream_insert<char, std::char_traits<char> > (_56, " (input port ", 13);
  _58 = std::basic_ostream<char>::operator<< (_56, in_channel_27(D));
  # DEBUG __out => _58
  # DEBUG __s => ", destination "
  # DEBUG __s => ", destination "
  std::__ostream_insert<char, std::char_traits<char> > (_58, ", destination ", 14);
  _60 = std::basic_ostream<char>::operator<< (_58, _40);
  # DEBUG __out => _60
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_60, ")", 1);
  # DEBUG __out => _60
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_60, ".", 1);
  # DEBUG this => _60
  # DEBUG __pf => endl
  # DEBUG __os => _60
  _28 = _60->_vptr.basic_ostream;
  _132 = MEM[(long int *)_28 + -24B];
  _133 = (sizetype) _132;
  _134 = _60 + _133;
  # DEBUG this => _134
  # DEBUG __c => 10
  _82 = MEM[(const struct basic_ios *)_134]._M_ctype;
  # DEBUG __f => _82
  if (_82 == 0B)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  std::__throw_bad_cast ();

  <bb 33>:
  # DEBUG this => _82
  # DEBUG __c => 10
  _139 = MEM[(const struct ctype *)_82]._M_widen_ok;
  if (_139 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _142 = MEM[(const struct ctype *)_82]._M_widen[10];
  pretmp_188 = (int) _142;
  goto <bb 37>;

  <bb 35>:
  # DEBUG this => _82
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_82);
  _147 = MEM[(const struct ctype *)_82].D.20091._vptr.facet;
  _148 = MEM[(int (*__vtbl_ptr_type) () *)_147 + 48B];
  PROF_152 = [obj_type_ref] OBJ_TYPE_REF(_148;(const struct ctype)_82->6);
  if (PROF_152 == do_widen)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  _154 = OBJ_TYPE_REF(_148;(const struct ctype)_82->6) (_82, 10);
  pretmp_189 = (int) _154;

  <bb 37>:
  # prephitmp_190 = PHI <pretmp_188(34), 10(35), pretmp_189(36)>
  _137 = std::basic_ostream<char>::put (_60, prephitmp_190);
  # DEBUG __os => _137
  std::basic_ostream<char>::flush (_137);

  <bb 38>:
  # vcBegin_3 = PHI <vcBegin_1(14), vcBegin_2(30), vcBegin_2(37), vcBegin_1(12)>
  # vcEnd_6 = PHI <vcEnd_4(14), vcEnd_5(30), vcEnd_5(37), vcEnd_4(12)>
  # out_port_114 = PHI <-1(14), out_port_110(30), out_port_110(37), -1(12)>
  # DEBUG out_port => out_port_114
  # DEBUG vcEnd => vcEnd_6
  # DEBUG vcBegin => vcBegin_3
  OutputSet::Clear (outputs_61(D));
  OutputSet::AddRange (outputs_61(D), out_port_114, vcBegin_3, vcEnd_6, 0);
  # DEBUG D#173 => {CLOBBER}
  # DEBUG out_port => D#173
  return;

  <bb 39>:

  <bb 43>:
  _107 = dim_left_112 * 2;
  out_port_108 = _107 + 1;
  # DEBUG out_port => out_port_108
  # DEBUG dir => 1
  goto <bb 26>;

  <bb 40>:

  <bb 44>:
  out_port_106 = dim_left_112 * 2;
  # DEBUG out_port => out_port_106
  # DEBUG dir => 0
  goto <bb 26>;

  <bb 41>:

  <bb 45>:
  out_port_130 = gN.23_105 * 2;
  # DEBUG out_port => out_port_130
  goto <bb 26>;

  <bb 42>:
  # dim_left_112 = PHI <0(16), dim_left_195(18)>
  # prephitmp_191 = PHI <_131(16), _199(18)>
  # prephitmp_192 = PHI <_159(16), _198(18)>
  _93 = in_channel_27(D) / 2;
  if (_93 != dim_left_112)
    goto <bb 22>;
  else
    goto <bb 25>;

}



;; Function void planar_adapt_mesh(const Router*, const Flit*, int, OutputSet*, bool) (_Z17planar_adapt_meshPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1980, decl_uid=45626, cgraph_uid=479, symbol_order=490)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void planar_adapt_mesh(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  size_type __dnew;
  size_type __dnew;
  char_type D.54898;
  char __c;
  char_type D.54895;
  char __c;
  char_type D.54892;
  struct basic_ostream & D.54886;
  char_type D.54883;
  char __c;
  char_type D.54880;
  char __c;
  char_type D.54877;
  struct basic_ostream & D.54871;
  char_type D.54868;
  char __c;
  char_type D.54865;
  char __c;
  char_type D.54862;
  struct basic_ostream & D.54856;
  char_type D.54853;
  char __c;
  char_type D.54850;
  char __c;
  char_type D.54847;
  struct basic_ostream & D.54841;
  bool atedge;
  int d1_min_c;
  bool fault;
  bool increase;
  int n;
  int vc_mult;
  int in_vc;
  int dest;
  int cur;
  static const char __PRETTY_FUNCTION__[74] = "void planar_adapt_mesh(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  const struct string D.45645;
  const struct string D.45641;
  int pretmp_8;
  int gNumVCs.67_22;
  FlitType _25;
  int _34;
  long int _41;
  int _44;
  int _45;
  int _49;
  int _50;
  unsigned int in_channel.70_52;
  unsigned int _53;
  int _54;
  int _55;
  bool _59;
  int _60;
  int _62;
  struct ostream * gWatchOut.71_63;
  struct basic_ostream & _65;
  const size_type _66;
  struct basic_ostream & _68;
  struct basic_ostream & _70;
  int _74;
  bool _76;
  int _77;
  int _78;
  bool _80;
  int _82;
  struct ostream * gWatchOut.71_83;
  struct basic_ostream & _85;
  const size_type _86;
  struct basic_ostream & _88;
  int _89;
  int _90;
  bool _92;
  int _93;
  int _94;
  bool _96;
  int _98;
  struct ostream * gWatchOut.71_99;
  struct basic_ostream & _101;
  const size_type _102;
  struct basic_ostream & _104;
  int pretmp_105;
  int _112;
  int _114;
  int _115;
  int _117;
  bool _120;
  int _122;
  struct ostream * gWatchOut.71_123;
  struct basic_ostream & _125;
  const size_type _126;
  struct basic_ostream & _128;
  int gK.69_129;
  int _130;
  int _132;
  int _133;
  int _135;
  bool _139;
  int _140;
  bool _142;
  bool _143;
  const struct Module * _144;
  char * const _146;
  char * const _148;
  bool _156;
  bool _157;
  const struct Module * _158;
  long int _160;
  char * const _162;
  char * const _164;
  int gN.68_167;
  int _168;
  char * const _171;
  struct basic_ostream & _172;
  long int _173;
  char * const _174;
  struct basic_ostream & _175;
  long int _176;
  char * const _177;
  struct basic_ostream & _178;
  long int _179;
  char * const _180;
  struct basic_ostream & _181;
  long int _182;
  int _183;
  const struct __ctype_type * _192;
  const struct __ctype_type * _198;
  const struct __ctype_type * _204;
  const struct __ctype_type * _210;
  int _224;
  int _225;
  bool _230;
  bool _231;
  int (*__vtbl_ptr_type) () * _232;
  long int _233;
  sizetype _234;
  struct basic_ios * _235;
  int prephitmp_236;
  struct basic_ostream & _238;
  bool _239;
  char _240;
  int gK.69_241;
  char_type _243;
  unsigned int _244;
  int _246;
  int (*__vtbl_ptr_type) () * _248;
  int (*__vtbl_ptr_type) () _249;
  bool _251;
  int gN.68_252;
  void * PROF_253;
  unsigned int in_channel.70_254;
  char_type _255;
  unsigned int _256;
  unsigned int _257;
  int (*__vtbl_ptr_type) () * _258;
  long int _259;
  sizetype _260;
  struct basic_ios * _261;
  int pretmp_262;
  struct basic_ostream & _264;
  unsigned int _265;
  char _266;
  unsigned int _267;
  char_type _269;
  bool _270;
  int pretmp_271;
  int (*__vtbl_ptr_type) () * _274;
  int (*__vtbl_ptr_type) () _275;
  bool _277;
  int gN.68_278;
  void * PROF_279;
  char_type _281;
  unsigned int _282;
  int (*__vtbl_ptr_type) () * _284;
  long int _285;
  sizetype _286;
  struct basic_ios * _287;
  struct basic_ostream & _290;
  char _292;
  int pretmp_294;
  char_type _295;
  int pretmp_296;
  int prephitmp_299;
  int (*__vtbl_ptr_type) () * _300;
  int (*__vtbl_ptr_type) () _301;
  bool _303;
  void * PROF_305;
  int _306;
  char_type _307;
  int pretmp_308;
  int _309;
  int (*__vtbl_ptr_type) () * _310;
  long int _311;
  sizetype _312;
  struct basic_ios * _313;
  bool _314;
  struct basic_ostream & _316;
  char _318;
  int prephitmp_319;
  char_type _321;
  int pretmp_325;
  int (*__vtbl_ptr_type) () * _326;
  int (*__vtbl_ptr_type) () _327;
  int pretmp_328;
  int gK.69_329;
  void * PROF_331;
  int prephitmp_332;
  char_type _333;
  int prephitmp_334;
  int pretmp_335;
  int _344;
  char * _345;
  long unsigned int __dnew.173_346;
  int _347;
  long unsigned int __dnew.173_349;
  char * const _350;
  char * _351;
  bool _355;
  char * _361;
  long unsigned int __dnew.173_362;
  int gK.69_364;
  long unsigned int __dnew.173_365;
  char * const _366;
  char * _367;
  int _369;
  int _372;
  int gN.68_377;
  int prephitmp_383;
  int pretmp_390;
  int pretmp_399;
  int _400;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#178 => gNumVCs
  # DEBUG vcEnd => D#178 + -1
  _25 = f_24(D)->type;
  if (_25 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_26 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_26
  vcEnd_27 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_27
  goto <bb 11>;

  <bb 4>:
  if (_25 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_28 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_28
  vcEnd_29 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_29
  goto <bb 11>;

  <bb 6>:
  if (_25 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_30 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_30
  vcEnd_31 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_31
  goto <bb 11>;

  <bb 8>:
  gNumVCs.67_22 = gNumVCs;
  if (_25 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_23 = gNumVCs.67_22 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_32 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_32
  vcEnd_33 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_33

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_26(3), vcBegin_28(5), vcBegin_30(7), 0(9), vcBegin_32(10)>
  # vcEnd_3 = PHI <vcEnd_27(3), vcEnd_29(5), vcEnd_31(7), vcEnd_23(9), vcEnd_33(10)>
  # DEBUG vcEnd => vcEnd_3
  # DEBUG vcBegin => vcBegin_1
  _34 = f_24(D)->vc;
  _143 = vcEnd_3 < _34;
  _251 = vcBegin_1 > _34;
  _157 = _143 | _251;
  if (_157 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _277 = _34 >= 0;
  if (inject_35(D) <= _277)
    goto <bb 13>;
  else
    goto <bb 101>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 1048, &__PRETTY_FUNCTION__);

  <bb 14>:
  OutputSet::Clear (outputs_37(D));
  if (inject_35(D) != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  OutputSet::AddRange (outputs_37(D), -1, vcBegin_1, vcEnd_3, 0);
  goto <bb 94>;

  <bb 16>:
  cur_170 = MEM[(int *)r_40(D) + 96B];
  # DEBUG D#14 => r_40(D)
  # DEBUG this => D#14
  # DEBUG cur => NULL
  dest_42 = f_24(D)->dest;
  # DEBUG dest => dest_42
  if (dest_42 != cur_170)
    goto <bb 17>;
  else
    goto <bb 93>;

  <bb 17>:
  in_vc_43 = f_24(D)->vc;
  # DEBUG in_vc => in_vc_43
  _44 = vcEnd_3 - vcBegin_1;
  _45 = _44 + 1;
  vc_mult_46 = _45 / 3;
  # DEBUG vc_mult => vc_mult_46
  # DEBUG n => 0
  # DEBUG n => 0
  # DEBUG dest => dest_42
  # DEBUG cur => cur_170
  gN.68_278 = gN;
  if (gN.68_278 <= 0)
    goto <bb 30>;
  else
    goto <bb 18>;

  <bb 18>:
  pretmp_105 = gK;
  _282 = (unsigned int) vc_mult_46;
  _267 = _282 * 2;
  _54 = (int) _267;
  _265 = (unsigned int) vcBegin_1;
  _257 = (unsigned int) _54;
  _256 = _265 + _257;
  _55 = (int) _256;
  if (in_vc_43 >= _55)
    goto <bb 24>;
  else
    goto <bb 19>;

  <bb 19>:

  <bb 20>:
  # cur_324 = PHI <cur_170(19), cur_229(23)>
  # dest_298 = PHI <dest_42(19), dest_228(23)>
  # n_272 = PHI <0(19), n_226(23)>
  # DEBUG n => n_272
  # DEBUG dest => dest_298
  # DEBUG cur => cur_324
  _246 = cur_324 % pretmp_105;
  _372 = dest_298 % pretmp_105;
  if (_246 != _372)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  in_channel.70_254 = (unsigned int) in_channel_51(D);
  _244 = in_channel.70_254 + 1;
  _239 = n_272 != 0;
  _231 = _244 > 2;
  _230 = _239 | _231;
  if (_230 != 0)
    goto <bb 31>;
  else
    goto <bb 22>;

  <bb 22>:
  cur_229 = cur_324 / pretmp_105;
  # DEBUG cur => cur_229
  dest_228 = dest_298 / pretmp_105;
  # DEBUG dest => dest_228
  n_226 = n_272 + 1;
  # DEBUG n => n_226
  # DEBUG n => n_226
  # DEBUG dest => dest_228
  # DEBUG cur => cur_229
  if (n_226 >= gN.68_278)
    goto <bb 30>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 20>;

  <bb 24>:

  <bb 25>:
  # cur_359 = PHI <cur_170(24), cur_56(28)>
  # dest_382 = PHI <dest_42(24), dest_57(28)>
  # n_323 = PHI <0(24), n_58(28)>
  # DEBUG n => n_323
  # DEBUG dest => dest_382
  # DEBUG cur => cur_359
  _49 = cur_359 % pretmp_105;
  _50 = dest_382 % pretmp_105;
  if (_49 != _50)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # _225 = PHI <_49(25)>
  # _224 = PHI <_50(25)>
  # n_223 = PHI <n_323(25)>
  # cur_221 = PHI <cur_359(25)>
  # dest_220 = PHI <dest_382(25)>
  in_channel.70_52 = (unsigned int) in_channel_51(D);
  _53 = in_channel.70_52 + 1;
  _270 = n_223 != 0;
  _303 = _53 > 2;
  _355 = _270 | _303;
  if (_355 != 0)
    goto <bb 31>;
  else
    goto <bb 29>;

  <bb 27>:
  cur_56 = cur_359 / pretmp_105;
  # DEBUG cur => cur_56
  dest_57 = dest_382 / pretmp_105;
  # DEBUG dest => dest_57
  n_58 = n_323 + 1;
  # DEBUG n => n_58
  # DEBUG n => n_58
  # DEBUG dest => dest_57
  # DEBUG cur => cur_56
  if (n_58 >= gN.68_278)
    goto <bb 30>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  if (gN.68_278 <= 0)
    goto <bb 30>;
  else
    goto <bb 32>;

  <bb 30>:
  __assert_fail ("n < gN", "routefunc.cpp", 1084, &__PRETTY_FUNCTION__);

  <bb 31>:
  # _369 = PHI <_225(26), _246(21)>
  # _347 = PHI <_224(26), _372(21)>
  # n_342 = PHI <n_223(26), n_272(21)>
  # cur_322 = PHI <cur_221(26), cur_324(21)>
  # dest_317 = PHI <dest_220(26), dest_298(21)>

  <bb 32>:
  # n_391 = PHI <0(29), n_342(31)>
  # _309 = PHI <_225(29), _369(31)>
  # _306 = PHI <_224(29), _347(31)>
  # cur_297 = PHI <cur_221(29), cur_322(31)>
  # dest_291 = PHI <dest_220(29), dest_317(31)>
  _59 = f_24(D)->watch;
  if (_59 != 0)
    goto <bb 33>;
  else
    goto <bb 40>;

  <bb 33>:
  _60 = f_24(D)->id;
  # DEBUG D#70 => &r_40(D)->D.42039.D.32226
  # DEBUG this => D#70
  _62 = GetSimTime ();
  gWatchOut.71_63 = gWatchOut;
  _65 = std::basic_ostream<char>::operator<< (gWatchOut.71_63, _62);
  # DEBUG __out => _65
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_65, " | ", 3);
  # DEBUG __os => _65
  # DEBUG __str => NULL
  _66 = MEM[(long unsigned int *)r_40(D) + 48B];
  # DEBUG this => D#1
  _41 = (long int) _66;
  # DEBUG this => NULL
  _171 = MEM[(char * *)r_40(D) + 40B];
  # DEBUG this => D#3
  _172 = std::__ostream_insert<char, std::char_traits<char> > (_65, _171, _41);
  # DEBUG __out => _172
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_172, " | ", 3);
  # DEBUG __out => _172
  # DEBUG __s => "PLANAR ADAPTIVE: flit "
  # DEBUG __s => "PLANAR ADAPTIVE: flit "
  std::__ostream_insert<char, std::char_traits<char> > (_172, "PLANAR ADAPTIVE: flit ", 22);
  _68 = std::basic_ostream<char>::operator<< (_172, _60);
  # DEBUG __out => _68
  # DEBUG __s => " in adaptive plane "
  # DEBUG __s => " in adaptive plane "
  std::__ostream_insert<char, std::char_traits<char> > (_68, " in adaptive plane ", 19);
  _70 = std::basic_ostream<char>::operator<< (_68, n_391);
  # DEBUG __out => _70
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_70, ".", 1);
  # DEBUG this => _70
  # DEBUG __pf => endl
  # DEBUG __os => _70
  _232 = _70->_vptr.basic_ostream;
  _233 = MEM[(long int *)_232 + -24B];
  _234 = (sizetype) _233;
  _235 = _70 + _234;
  # DEBUG this => _235
  # DEBUG __c => 10
  _192 = MEM[(const struct basic_ios *)_235]._M_ctype;
  # DEBUG __f => _192
  if (_192 == 0B)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  std::__throw_bad_cast ();

  <bb 35>:
  # DEBUG this => _192
  # DEBUG __c => 10
  _240 = MEM[(const struct ctype *)_192]._M_widen_ok;
  if (_240 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  _243 = MEM[(const struct ctype *)_192]._M_widen[10];
  pretmp_335 = (int) _243;
  goto <bb 39>;

  <bb 37>:
  # DEBUG this => _192
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_192);
  _248 = MEM[(const struct ctype *)_192].D.20091._vptr.facet;
  _249 = MEM[(int (*__vtbl_ptr_type) () *)_248 + 48B];
  PROF_253 = [obj_type_ref] OBJ_TYPE_REF(_249;(const struct ctype)_192->6);
  if (PROF_253 == do_widen)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  _255 = OBJ_TYPE_REF(_249;(const struct ctype)_192->6) (_192, 10);
  pretmp_399 = (int) _255;

  <bb 39>:
  # prephitmp_334 = PHI <pretmp_335(36), 10(37), pretmp_399(38)>
  _238 = std::basic_ostream<char>::put (_70, prephitmp_334);
  # DEBUG __os => _238
  std::basic_ostream<char>::flush (_238);
  pretmp_8 = gK;
  pretmp_271 = cur_297 % pretmp_8;
  pretmp_262 = dest_291 % pretmp_8;

  <bb 40>:
  # prephitmp_383 = PHI <_309(32), pretmp_271(39)>
  # prephitmp_236 = PHI <_306(32), pretmp_262(39)>
  if (prephitmp_236 > prephitmp_383)
    goto <bb 41>;
  else
    goto <bb 49>;

  <bb 41>:
  # DEBUG increase => 1
  _74 = n_391 * 2;
  _76 = Router::IsFaultyOutput (r_40(D), _74);
  if (_76 != 0)
    goto <bb 103>;
  else
    goto <bb 42>;

  <bb 42>:
  _77 = vc_mult_46 * 2;
  _78 = vcBegin_1 + _77;
  OutputSet::AddRange (outputs_37(D), _74, _78, vcEnd_3, 0);
  # DEBUG fault => 0
  _80 = f_24(D)->watch;
  if (_80 != 0)
    goto <bb 43>;
  else
    goto <bb 103>;

  <bb 43>:
  # DEBUG D#72 => &r_40(D)->D.42039.D.32226
  # DEBUG this => D#72
  _82 = GetSimTime ();
  gWatchOut.71_83 = gWatchOut;
  _85 = std::basic_ostream<char>::operator<< (gWatchOut.71_83, _82);
  # DEBUG __out => _85
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_85, " | ", 3);
  # DEBUG __os => _85
  # DEBUG __str => NULL
  _86 = MEM[(long unsigned int *)r_40(D) + 48B];
  # DEBUG this => D#1
  _173 = (long int) _86;
  # DEBUG this => NULL
  _174 = MEM[(char * *)r_40(D) + 40B];
  # DEBUG this => D#3
  _175 = std::__ostream_insert<char, std::char_traits<char> > (_85, _174, _173);
  # DEBUG __out => _175
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_175, " | ", 3);
  # DEBUG __out => _175
  # DEBUG __s => "PLANAR ADAPTIVE: increasing in dimension "
  # DEBUG __s => "PLANAR ADAPTIVE: increasing in dimension "
  std::__ostream_insert<char, std::char_traits<char> > (_175, "PLANAR ADAPTIVE: increasing in dimension ", 41);
  _88 = std::basic_ostream<char>::operator<< (_175, n_391);
  # DEBUG __out => _88
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_88, ".", 1);
  # DEBUG this => _88
  # DEBUG __pf => endl
  # DEBUG __os => _88
  _258 = _88->_vptr.basic_ostream;
  _259 = MEM[(long int *)_258 + -24B];
  _260 = (sizetype) _259;
  _261 = _88 + _260;
  # DEBUG this => _261
  # DEBUG __c => 10
  _198 = MEM[(const struct basic_ios *)_261]._M_ctype;
  # DEBUG __f => _198
  if (_198 == 0B)
    goto <bb 34>;
  else
    goto <bb 44>;

  <bb 44>:
  # DEBUG this => _198
  # DEBUG __c => 10
  _266 = MEM[(const struct ctype *)_198]._M_widen_ok;
  if (_266 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _269 = MEM[(const struct ctype *)_198]._M_widen[10];
  pretmp_325 = (int) _269;
  goto <bb 48>;

  <bb 46>:
  # DEBUG this => _198
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_198);
  _274 = MEM[(const struct ctype *)_198].D.20091._vptr.facet;
  _275 = MEM[(int (*__vtbl_ptr_type) () *)_274 + 48B];
  PROF_279 = [obj_type_ref] OBJ_TYPE_REF(_275;(const struct ctype)_198->6);
  if (PROF_279 == do_widen)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:
  _281 = OBJ_TYPE_REF(_275;(const struct ctype)_198->6) (_198, 10);
  pretmp_328 = (int) _281;

  <bb 48>:
  # prephitmp_332 = PHI <pretmp_325(45), 10(46), pretmp_328(47)>
  _264 = std::basic_ostream<char>::put (_88, prephitmp_332);
  # DEBUG __os => _264
  std::basic_ostream<char>::flush (_264);
  goto <bb 103>;

  <bb 49>:
  # DEBUG increase => 0
  _89 = n_391 * 2;
  _90 = _89 + 1;
  _92 = Router::IsFaultyOutput (r_40(D), _90);
  if (_92 != 0)
    goto <bb 102>;
  else
    goto <bb 50>;

  <bb 50>:
  _93 = vc_mult_46 * 2;
  _94 = vcBegin_1 + _93;
  OutputSet::AddRange (outputs_37(D), _90, _94, vcEnd_3, 0);
  # DEBUG fault => 0
  _96 = f_24(D)->watch;
  if (_96 != 0)
    goto <bb 51>;
  else
    goto <bb 102>;

  <bb 51>:
  # DEBUG D#71 => &r_40(D)->D.42039.D.32226
  # DEBUG this => D#71
  _98 = GetSimTime ();
  gWatchOut.71_99 = gWatchOut;
  _101 = std::basic_ostream<char>::operator<< (gWatchOut.71_99, _98);
  # DEBUG __out => _101
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_101, " | ", 3);
  # DEBUG __os => _101
  # DEBUG __str => NULL
  _102 = MEM[(long unsigned int *)r_40(D) + 48B];
  # DEBUG this => D#1
  _176 = (long int) _102;
  # DEBUG this => NULL
  _177 = MEM[(char * *)r_40(D) + 40B];
  # DEBUG this => D#3
  _178 = std::__ostream_insert<char, std::char_traits<char> > (_101, _177, _176);
  # DEBUG __out => _178
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_178, " | ", 3);
  # DEBUG __out => _178
  # DEBUG __s => "PLANAR ADAPTIVE: decreasing in dimension "
  # DEBUG __s => "PLANAR ADAPTIVE: decreasing in dimension "
  std::__ostream_insert<char, std::char_traits<char> > (_178, "PLANAR ADAPTIVE: decreasing in dimension ", 41);
  _104 = std::basic_ostream<char>::operator<< (_178, n_391);
  # DEBUG __out => _104
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_104, ".", 1);
  # DEBUG this => _104
  # DEBUG __pf => endl
  # DEBUG __os => _104
  _284 = _104->_vptr.basic_ostream;
  _285 = MEM[(long int *)_284 + -24B];
  _286 = (sizetype) _285;
  _287 = _104 + _286;
  # DEBUG this => _287
  # DEBUG __c => 10
  _204 = MEM[(const struct basic_ios *)_287]._M_ctype;
  # DEBUG __f => _204
  if (_204 == 0B)
    goto <bb 34>;
  else
    goto <bb 52>;

  <bb 52>:
  # DEBUG this => _204
  # DEBUG __c => 10
  _292 = MEM[(const struct ctype *)_204]._M_widen_ok;
  if (_292 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _295 = MEM[(const struct ctype *)_204]._M_widen[10];
  pretmp_390 = (int) _295;
  goto <bb 56>;

  <bb 54>:
  # DEBUG this => _204
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_204);
  _300 = MEM[(const struct ctype *)_204].D.20091._vptr.facet;
  _301 = MEM[(int (*__vtbl_ptr_type) () *)_300 + 48B];
  PROF_305 = [obj_type_ref] OBJ_TYPE_REF(_301;(const struct ctype)_204->6);
  if (PROF_305 == do_widen)
    goto <bb 56>;
  else
    goto <bb 55>;

  <bb 55>:
  _307 = OBJ_TYPE_REF(_301;(const struct ctype)_204->6) (_204, 10);
  pretmp_308 = (int) _307;

  <bb 56>:
  # prephitmp_319 = PHI <pretmp_390(53), 10(54), pretmp_308(55)>
  _290 = std::basic_ostream<char>::put (_104, prephitmp_319);
  # DEBUG __os => _290
  std::basic_ostream<char>::flush (_290);
  goto <bb 102>;

  <bb 57>:
  # vcBegin_2 = PHI <vcBegin_1(103), vcBegin_111(102)>
  # fault_411 = PHI <fault_381(103), fault_250(102)>
  # n_288 = PHI <n_283(103), n_373(102)>
  # gK.69_329 = PHI <gK.69_241(103), gK.69_364(102)>
  # cur_392 = PHI <cur_395(103), cur_245(102)>
  # dest_386 = PHI <dest_280(103), dest_247(102)>
  # DEBUG vcBegin => vcBegin_2
  _112 = vcBegin_2 + vc_mult_46;
  vcEnd_113 = _112 + -1;
  # DEBUG vcEnd => vcEnd_113
  _114 = cur_392 % gK.69_329;
  _115 = dest_386 % gK.69_329;
  if (_114 < _115)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  d1_min_c_116 = n_288 * 2;
  # DEBUG d1_min_c => d1_min_c_116
  goto <bb 61>;

  <bb 59>:
  if (_114 != _115)
    goto <bb 60>;
  else
    goto <bb 107>;

  <bb 60>:
  _117 = n_288 * 2;
  d1_min_c_118 = _117 + 1;
  # DEBUG d1_min_c => d1_min_c_118

  <bb 61>:
  # d1_min_c_9 = PHI <d1_min_c_116(58), d1_min_c_118(60)>
  # DEBUG d1_min_c => d1_min_c_9
  if (d1_min_c_9 == in_channel_51(D))
    goto <bb 62>;
  else
    goto <bb 71>;

  <bb 62>:
  # d1_min_c_374 = PHI <d1_min_c_9(61), -1(107)>
  if (fault_411 != 0)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  d1_min_c_119 = d1_min_c_374 ^ 1;
  # DEBUG d1_min_c => d1_min_c_119

  <bb 64>:
  # d1_min_c_10 = PHI <d1_min_c_119(63), -1(62)>
  # DEBUG d1_min_c => d1_min_c_10
  _120 = f_24(D)->watch;
  if (_120 != 0)
    goto <bb 65>;
  else
    goto <bb 71>;

  <bb 65>:
  # DEBUG D#73 => &r_40(D)->D.42039.D.32226
  # DEBUG this => D#73
  _122 = GetSimTime ();
  gWatchOut.71_123 = gWatchOut;
  _125 = std::basic_ostream<char>::operator<< (gWatchOut.71_123, _122);
  # DEBUG __out => _125
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_125, " | ", 3);
  # DEBUG __os => _125
  # DEBUG __str => NULL
  _126 = MEM[(long unsigned int *)r_40(D) + 48B];
  # DEBUG this => D#1
  _179 = (long int) _126;
  # DEBUG this => NULL
  _180 = MEM[(char * *)r_40(D) + 40B];
  # DEBUG this => D#3
  _181 = std::__ostream_insert<char, std::char_traits<char> > (_125, _180, _179);
  # DEBUG __out => _181
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_181, " | ", 3);
  # DEBUG __out => _181
  # DEBUG __s => "PLANAR ADAPTIVE: avoiding 180 in dimension "
  # DEBUG __s => "PLANAR ADAPTIVE: avoiding 180 in dimension "
  std::__ostream_insert<char, std::char_traits<char> > (_181, "PLANAR ADAPTIVE: avoiding 180 in dimension ", 43);
  _128 = std::basic_ostream<char>::operator<< (_181, n_288);
  # DEBUG __out => _128
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_128, ".", 1);
  # DEBUG this => _128
  # DEBUG __pf => endl
  # DEBUG __os => _128
  _310 = _128->_vptr.basic_ostream;
  _311 = MEM[(long int *)_310 + -24B];
  _312 = (sizetype) _311;
  _313 = _128 + _312;
  # DEBUG this => _313
  # DEBUG __c => 10
  _210 = MEM[(const struct basic_ios *)_313]._M_ctype;
  # DEBUG __f => _210
  if (_210 == 0B)
    goto <bb 34>;
  else
    goto <bb 66>;

  <bb 66>:
  # DEBUG this => _210
  # DEBUG __c => 10
  _318 = MEM[(const struct ctype *)_210]._M_widen_ok;
  if (_318 != 0)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  _321 = MEM[(const struct ctype *)_210]._M_widen[10];
  pretmp_294 = (int) _321;
  goto <bb 70>;

  <bb 68>:
  # DEBUG this => _210
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_210);
  _326 = MEM[(const struct ctype *)_210].D.20091._vptr.facet;
  _327 = MEM[(int (*__vtbl_ptr_type) () *)_326 + 48B];
  PROF_331 = [obj_type_ref] OBJ_TYPE_REF(_327;(const struct ctype)_210->6);
  if (PROF_331 == do_widen)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:
  _333 = OBJ_TYPE_REF(_327;(const struct ctype)_210->6) (_210, 10);
  pretmp_296 = (int) _333;

  <bb 70>:
  # prephitmp_299 = PHI <pretmp_294(67), 10(68), pretmp_296(69)>
  _316 = std::basic_ostream<char>::put (_128, prephitmp_299);
  # DEBUG __os => _316
  std::basic_ostream<char>::flush (_316);

  <bb 71>:
  # d1_min_c_11 = PHI <d1_min_c_9(61), d1_min_c_10(70), d1_min_c_10(64)>
  # DEBUG d1_min_c => d1_min_c_11
  if (d1_min_c_11 != -1)
    goto <bb 72>;
  else
    goto <bb 80>;

  <bb 72>:
  _156 = Router::IsFaultyOutput (r_40(D), d1_min_c_11);
  if (_156 != 0)
    goto <bb 74>;
  else
    goto <bb 73>;

  <bb 73>:
  OutputSet::AddRange (outputs_37(D), d1_min_c_11, vcBegin_2, vcEnd_113, 0);
  goto <bb 94>;

  <bb 74>:
  if (fault_411 != 0)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  goto <bb 94>;

  <bb 76>:
  # DEBUG D#30 => &D.45640
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45640
  # DEBUG this => &D.45641
  # DEBUG __s => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45641
  # DEBUG D#66 => &D.45641._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45641.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45641]._M_p = &D.45641.D.14356._M_local_buf;
  # DEBUG __s => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG this => &D.45641
  # DEBUG __beg => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __end => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG this => &D.45641
  # DEBUG __beg => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __end => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG this => &D.45641
  # DEBUG __beg => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __end => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG __ptr => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __first => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __last => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __last => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  __dnew = 42;
  _345 = std::__cxx11::basic_string<char>::_M_create (&D.45641, &__dnew, 0);
  # DEBUG D#5 => &D.45641
  # DEBUG __p => _345
  # DEBUG this => D#5
  MEM[(char * *)&D.45641] = _345;
  __dnew.173_346 = __dnew;
  # DEBUG D#6 => &D.45641
  # DEBUG __capacity => __dnew.173_346
  # DEBUG this => D#6
  MEM[(size_type *)&D.45641 + 16B] = __dnew.173_346;
  # DEBUG D#3 => &D.45641
  # DEBUG this => D#3
  # DEBUG __p => _345
  # DEBUG __k1 => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __k2 => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG __d => _345
  # DEBUG __s => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __n => 42
  # DEBUG __s1 => _345
  # DEBUG __s2 => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __n => 42
  __builtin_memcpy (_345, "There seem to be faults in d_i and d_{i+1}", 42);
  __dnew.173_349 = __dnew;
  # DEBUG this => &D.45641
  # DEBUG __n => __dnew.173_349
  # DEBUG D#7 => &D.45641
  # DEBUG __length => __dnew.173_349
  # DEBUG this => D#7
  MEM[(size_type *)&D.45641 + 8B] = __dnew.173_349;
  _350 = MEM[(char * *)&D.45641];
  # DEBUG D#3 => &D.45641
  # DEBUG this => D#3
  _351 = _350 + __dnew.173_349;
  # DEBUG __c1 => _351
  # DEBUG __c2 => D#11
  MEM[(char_type &)_351] = 0;
  __dnew ={v} {CLOBBER};
  _158 = &r_40(D)->D.42039.D.32226;
  Module::Error (_158, &D.45641);

  <bb 77>:
  # DEBUG this => &D.45641
  # DEBUG this => &D.45641
  # DEBUG this => &D.45641
  _162 = MEM[(char * *)&D.45641];
  # DEBUG D#3 => &D.45641
  # DEBUG this => D#3
  # DEBUG this => &D.45641
  if (&D.45641.D.14356._M_local_buf != _162)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#54 => D.45641.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45641
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45641
  # DEBUG this => D#3
  # DEBUG this => &D.45641
  # DEBUG D#51 => &D.45641._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _162
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _162
  # DEBUG this => D#45
  # DEBUG D.52149 => D#46
  operator delete (_162);

  <bb 79>:
  # DEBUG D#55 => &D.45641._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45641 ={v} {CLOBBER};
  # DEBUG this => &D.45640
  # DEBUG this => &D.45640
  goto <bb 94>;

  <bb 80>:
  # DEBUG d1_min_c => -1
  if (fault_411 != 0)
    goto <bb 81>;
  else
    goto <bb 75>;

  <bb 81>:
  gK.69_129 = gK;
  _130 = cur_392 % gK.69_129;
  if (_130 == 0)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  d1_min_c_131 = n_288 * 2;
  # DEBUG d1_min_c => d1_min_c_131
  # DEBUG atedge => 1
  goto <bb 87>;

  <bb 83>:
  _132 = gK.69_129 + -1;
  if (_130 == _132)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  _133 = n_288 * 2;
  d1_min_c_134 = _133 + 1;
  # DEBUG d1_min_c => d1_min_c_134
  # DEBUG atedge => 1
  goto <bb 87>;

  <bb 85>:
  _135 = n_288 * 2;
  # DEBUG max => 1
  _160 = ran_next ();
  _182 = _160 % 2;
  _183 = (int) _182;
  d1_min_c_136 = _135 + _183;
  # DEBUG d1_min_c => d1_min_c_136
  if (in_channel_51(D) == d1_min_c_136)
    goto <bb 86>;
  else
    goto <bb 104>;

  <bb 86>:
  d1_min_c_137 = in_channel_51(D) ^ 1;
  # DEBUG d1_min_c => d1_min_c_137
  goto <bb 104>;

  <bb 87>:
  # d1_min_c_12 = PHI <d1_min_c_131(82), d1_min_c_134(84)>
  # DEBUG atedge => 1
  # DEBUG d1_min_c => d1_min_c_12
  _139 = Router::IsFaultyOutput (r_40(D), d1_min_c_12);
  if (_139 != 0)
    goto <bb 106>;
  else
    goto <bb 88>;

  <bb 88>:
  # d1_min_c_404 = PHI <d1_min_c_12(87), d1_min_c_421(104)>
  OutputSet::AddRange (outputs_37(D), d1_min_c_404, vcBegin_2, vcEnd_113, 0);
  goto <bb 94>;

  <bb 89>:
  _140 = d1_min_c_421 ^ 1;
  _142 = Router::IsFaultyOutput (r_40(D), _140);
  if (_142 != 0)
    goto <bb 106>;
  else
    goto <bb 105>;

  <bb 90>:
  # DEBUG this => &D.45645
  # DEBUG this => &D.45645
  # DEBUG this => &D.45645
  _148 = MEM[(char * *)&D.45645];
  # DEBUG D#3 => &D.45645
  # DEBUG this => D#3
  # DEBUG this => &D.45645
  if (&D.45645.D.14356._M_local_buf != _148)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  # DEBUG D#54 => D.45645.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45645
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45645
  # DEBUG this => D#3
  # DEBUG this => &D.45645
  # DEBUG D#51 => &D.45645._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _148
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _148
  # DEBUG this => D#45
  # DEBUG D.52169 => D#46
  operator delete (_148);

  <bb 92>:
  # DEBUG D#55 => &D.45645._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45645 ={v} {CLOBBER};
  # DEBUG this => &D.45644
  # DEBUG this => &D.45644
  goto <bb 94>;

  <bb 93>:
  gN.68_167 = gN;
  _168 = gN.68_167 * 2;
  OutputSet::AddRange (outputs_37(D), _168, vcBegin_1, vcEnd_3, 0);

  <bb 94>:
  return;

<L100>:
  # DEBUG this => &D.45641
  # DEBUG this => &D.45641
  # DEBUG this => &D.45641
  _146 = MEM[(char * *)&D.45641];
  # DEBUG D#3 => &D.45641
  # DEBUG this => D#3
  # DEBUG this => &D.45641
  if (&D.45641.D.14356._M_local_buf != _146)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#54 => D.45641.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45641
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45641
  # DEBUG this => D#3
  # DEBUG this => &D.45641
  # DEBUG D#51 => &D.45641._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _146
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _146
  # DEBUG this => D#45
  # DEBUG D.52184 => D#46
  operator delete (_146);

  <bb 97>:
  # DEBUG D#55 => &D.45641._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45641 ={v} {CLOBBER};
  resx 2

<L102>:
  # DEBUG this => &D.45645
  # DEBUG this => &D.45645
  # DEBUG this => &D.45645
  _164 = MEM[(char * *)&D.45645];
  # DEBUG D#3 => &D.45645
  # DEBUG this => D#3
  # DEBUG this => &D.45645
  if (&D.45645.D.14356._M_local_buf != _164)
    goto <bb 99>;
  else
    goto <bb 100>;

  <bb 99>:
  # DEBUG D#54 => D.45645.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45645
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45645
  # DEBUG this => D#3
  # DEBUG this => &D.45645
  # DEBUG D#51 => &D.45645._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _164
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _164
  # DEBUG this => D#45
  # DEBUG D.52201 => D#46
  operator delete (_164);

  <bb 100>:
  # DEBUG D#55 => &D.45645._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45645 ={v} {CLOBBER};
  resx 6

  <bb 101>:
  OutputSet::Clear (outputs_37(D));
  goto <bb 15>;

  <bb 102>:
  # fault_250 = PHI <0(50), 1(49), 0(56)>
  # DEBUG fault => fault_250
  # DEBUG increase => 0
  _344 = n_391 + 1;
  gN.68_252 = gN;
  n_373 = _344 % gN.68_252;
  # DEBUG n => n_373
  gK.69_364 = gK;
  cur_245 = cur_297 / gK.69_364;
  # DEBUG cur => cur_245
  dest_247 = dest_291 / gK.69_364;
  # DEBUG dest => dest_247
  # DEBUG fault => fault_250
  # DEBUG increase => 0
  # DEBUG n => n_373
  # DEBUG cur => cur_245
  # DEBUG dest => dest_247
  vcBegin_111 = vcBegin_1 + vc_mult_46;
  # DEBUG vcBegin => vcBegin_111
  goto <bb 57>;

  <bb 103>:
  # fault_381 = PHI <0(42), 0(48), 1(41)>
  # DEBUG fault => fault_381
  # DEBUG increase => 1
  _400 = n_391 + 1;
  gN.68_377 = gN;
  n_283 = _400 % gN.68_377;
  # DEBUG n => n_283
  gK.69_241 = gK;
  cur_395 = cur_297 / gK.69_241;
  # DEBUG cur => cur_395
  dest_280 = dest_291 / gK.69_241;
  # DEBUG dest => dest_280
  goto <bb 57>;

  <bb 104>:
  # d1_min_c_421 = PHI <d1_min_c_136(85), d1_min_c_137(86)>
  # DEBUG atedge => 0
  # DEBUG d1_min_c => d1_min_c_421
  _314 = Router::IsFaultyOutput (r_40(D), d1_min_c_421);
  if (_314 != 0)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 105>:
  OutputSet::AddRange (outputs_37(D), _140, vcBegin_2, vcEnd_113, 0);
  goto <bb 94>;

  <bb 106>:
  # DEBUG D#30 => &D.45644
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45644
  # DEBUG this => &D.45645
  # DEBUG __s => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45645
  # DEBUG D#66 => &D.45645._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45645.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45645]._M_p = &D.45645.D.14356._M_local_buf;
  # DEBUG __s => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG this => &D.45645
  # DEBUG __beg => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __end => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG this => &D.45645
  # DEBUG __beg => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __end => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG this => &D.45645
  # DEBUG __beg => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __end => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG __ptr => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __first => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __last => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __last => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  __dnew = 42;
  _361 = std::__cxx11::basic_string<char>::_M_create (&D.45645, &__dnew, 0);
  # DEBUG D#5 => &D.45645
  # DEBUG __p => _361
  # DEBUG this => D#5
  MEM[(char * *)&D.45645] = _361;
  __dnew.173_362 = __dnew;
  # DEBUG D#6 => &D.45645
  # DEBUG __capacity => __dnew.173_362
  # DEBUG this => D#6
  MEM[(size_type *)&D.45645 + 16B] = __dnew.173_362;
  # DEBUG D#3 => &D.45645
  # DEBUG this => D#3
  # DEBUG __p => _361
  # DEBUG __k1 => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __k2 => &MEM[(void *)"There seem to be faults in d_i and d_{i+1}" + 42B]
  # DEBUG __d => _361
  # DEBUG __s => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __n => 42
  # DEBUG __s1 => _361
  # DEBUG __s2 => "There seem to be faults in d_i and d_{i+1}"
  # DEBUG __n => 42
  __builtin_memcpy (_361, "There seem to be faults in d_i and d_{i+1}", 42);
  __dnew.173_365 = __dnew;
  # DEBUG this => &D.45645
  # DEBUG __n => __dnew.173_365
  # DEBUG D#7 => &D.45645
  # DEBUG __length => __dnew.173_365
  # DEBUG this => D#7
  MEM[(size_type *)&D.45645 + 8B] = __dnew.173_365;
  _366 = MEM[(char * *)&D.45645];
  # DEBUG D#3 => &D.45645
  # DEBUG this => D#3
  _367 = _366 + __dnew.173_365;
  # DEBUG __c1 => _367
  # DEBUG __c2 => D#11
  MEM[(char_type &)_367] = 0;
  __dnew ={v} {CLOBBER};
  _144 = &r_40(D)->D.42039.D.32226;
  Module::Error (_144, &D.45645);
  goto <bb 90>;

  <bb 107>:
  # DEBUG d1_min_c => -1
  if (in_channel_51(D) == -1)
    goto <bb 62>;
  else
    goto <bb 80>;

}



;; Function int dor_next_mesh(int, int, bool) (_Z13dor_next_meshiib, funcdef_no=1971, decl_uid=45450, cgraph_uid=470, symbol_order=481)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int dor_next_mesh(int, int, bool) (int cur, int dest, bool descending)
{
  int dim_left;
  int pretmp_1;
  int _9;
  int _10;
  int gN.20_14;
  int _15;
  int gN.20_17;
  int _20;
  int _21;
  int _22;
  int pretmp_23;
  int _24;
  int pretmp_25;
  int _26;
  int gNodes.22_27;
  int _37;
  int _40;
  int _41;
  int _50;
  int pretmp_52;
  int pretmp_53;
  int gK.21_54;
  int _56;
  int _57;
  int _59;
  int _60;
  int gN.20_63;
  int _64;
  int gK.21_65;
  int _66;
  int _67;
  int _78;
  int _79;
  int _80;
  int _81;
  int pretmp_82;
  int pretmp_88;
  int pretmp_89;
  int pretmp_90;
  int pretmp_92;
  int pretmp_93;
  int prephitmp_94;
  int pretmp_98;
  int prephitmp_99;
  int pretmp_100;
  int pretmp_102;
  int prephitmp_103;
  int pretmp_104;
  int pretmp_106;
  int prephitmp_107;
  int pretmp_108;
  int prephitmp_109;
  int pretmp_110;
  int prephitmp_111;

  <bb 2>:
  if (cur_11(D) == dest_12(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  gN.20_14 = gN;
  _15 = gN.20_14 * 2;
  goto <bb 32>;

  <bb 4>:
  if (descending_16(D) != 0)
    goto <bb 7>;
  else
    goto <bb 5>;

  <bb 5>:
  # DEBUG dim_left => 0
  # DEBUG dest => dest_12(D)
  # DEBUG cur => cur_11(D)
  gN.20_63 = gN;
  _64 = gN.20_63 + -1;
  if (_64 <= 0)
    goto <bb 6>;
  else
    goto <bb 17>;

  <bb 6>:
  pretmp_90 = gK;
  pretmp_108 = cur_11(D) % pretmp_90;
  pretmp_110 = dest_12(D) % pretmp_90;
  goto <bb 24>;

  <bb 7>:
  gN.20_17 = gN;
  dim_left_18 = gN.20_17 + -1;
  # DEBUG dim_left => dim_left_18
  # DEBUG dim_left => dim_left_18
  # DEBUG dest => dest_12(D)
  # DEBUG cur => cur_11(D)
  if (dim_left_18 <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  pretmp_53 = gNodes;
  pretmp_82 = gK;
  pretmp_100 = cur_11(D) * pretmp_82;
  pretmp_102 = pretmp_100 / pretmp_53;
  pretmp_104 = dest_12(D) * pretmp_82;
  pretmp_106 = pretmp_104 / pretmp_53;
  goto <bb 16>;

  <bb 9>:
  gK.21_54 = gK;
  _56 = cur_11(D) * gK.21_54;
  gNodes.22_27 = gNodes;
  _59 = _56 / gNodes.22_27;
  _60 = dest_12(D) * gK.21_54;
  _57 = _60 / gNodes.22_27;
  if (_57 != _59)
    goto <bb 16>;
  else
    goto <bb 13>;

  <bb 10>:
  _20 = cur_28 * gK.21_54;
  _22 = _20 / gNodes.22_27;
  _24 = dest_29 * gK.21_54;
  _26 = _24 / gNodes.22_27;
  if (_22 != _26)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # _81 = PHI <_22(10)>
  # _79 = PHI <_26(10)>
  # dim_left_38 = PHI <dim_left_30(10)>
  goto <bb 16>;

  <bb 12>:
  goto <bb 14>;

  <bb 13>:

  <bb 14>:
  # dim_left_74 = PHI <dim_left_18(13), dim_left_30(12)>
  # _78 = PHI <_56(13), _20(12)>
  # _80 = PHI <_60(13), _24(12)>
  # DEBUG dim_left => dim_left_74
  # DEBUG dest => dest_12(D)
  # DEBUG cur => cur_11(D)
  cur_28 = _78 % gNodes.22_27;
  # DEBUG cur => cur_28
  dest_29 = _80 % gNodes.22_27;
  # DEBUG dest => dest_29
  dim_left_30 = dim_left_74 + -1;
  # DEBUG dim_left => dim_left_30
  # DEBUG dim_left => dim_left_30
  # DEBUG dest => dest_29
  # DEBUG cur => cur_28
  if (dim_left_30 <= 0)
    goto <bb 15>;
  else
    goto <bb 10>;

  <bb 15>:
  # cur_62 = PHI <cur_28(14)>
  # dest_58 = PHI <dest_29(14)>
  # dim_left_39 = PHI <dim_left_30(14)>
  pretmp_1 = cur_62 * gK.21_54;
  pretmp_52 = pretmp_1 / gNodes.22_27;
  pretmp_25 = dest_58 * gK.21_54;
  pretmp_23 = pretmp_25 / gNodes.22_27;

  <bb 16>:
  # dim_left_75 = PHI <dim_left_39(15), dim_left_38(11), dim_left_18(8), dim_left_18(9)>
  # prephitmp_103 = PHI <pretmp_52(15), _81(11), pretmp_102(8), _59(9)>
  # prephitmp_107 = PHI <pretmp_23(15), _79(11), pretmp_106(8), _57(9)>

  <bb 28>:
  # DEBUG D#193 => gK
  # DEBUG D#191 => gNodes
  # DEBUG cur => D#192 / D#191
  # DEBUG dest => D#190 / D#191
  pretmp_98 = dim_left_75 * 2;
  goto <bb 25>;

  <bb 17>:
  gK.21_65 = gK;
  _66 = cur_11(D) % gK.21_65;
  _67 = dest_12(D) % gK.21_65;
  if (_66 != _67)
    goto <bb 24>;
  else
    goto <bb 21>;

  <bb 18>:
  _40 = cur_42 % gK.21_65;
  _41 = dest_43 % gK.21_65;
  if (_40 != _41)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 22>;

  <bb 20>:
  # _37 = PHI <_40(18)>
  # _21 = PHI <_41(18)>
  # dim_left_4 = PHI <dim_left_44(18)>
  pretmp_93 = dim_left_4 * 2;
  goto <bb 24>;

  <bb 21>:

  <bb 22>:
  # cur_69 = PHI <cur_11(D)(21), cur_42(19)>
  # dest_72 = PHI <dest_12(D)(21), dest_43(19)>
  # dim_left_76 = PHI <0(21), dim_left_44(19)>
  # DEBUG dim_left => dim_left_76
  # DEBUG dest => dest_72
  # DEBUG cur => cur_69
  cur_42 = cur_69 / gK.21_65;
  # DEBUG cur => cur_42
  dest_43 = dest_72 / gK.21_65;
  # DEBUG dest => dest_43
  dim_left_44 = dim_left_76 + 1;
  # DEBUG dim_left => dim_left_44
  # DEBUG dim_left => dim_left_44
  # DEBUG dest => dest_43
  # DEBUG cur => cur_42
  if (dim_left_44 >= _64)
    goto <bb 23>;
  else
    goto <bb 18>;

  <bb 23>:
  # cur_8 = PHI <cur_42(22)>
  # dest_5 = PHI <dest_43(22)>
  # dim_left_2 = PHI <dim_left_44(22)>
  pretmp_88 = cur_8 % gK.21_65;
  pretmp_89 = dest_5 % gK.21_65;
  pretmp_92 = dim_left_2 * 2;

  <bb 24>:
  # prephitmp_94 = PHI <pretmp_92(23), pretmp_93(20), 0(6), 0(17)>
  # prephitmp_109 = PHI <pretmp_88(23), _37(20), pretmp_108(6), _66(17)>
  # prephitmp_111 = PHI <pretmp_89(23), _21(20), pretmp_110(6), _67(17)>

  <bb 29>:
  # DEBUG D#189 => gK
  # DEBUG cur => NULL
  # DEBUG dest => NULL

  <bb 25>:
  # cur_3 = PHI <prephitmp_103(28), prephitmp_109(29)>
  # dest_6 = PHI <prephitmp_107(28), prephitmp_111(29)>
  # prephitmp_99 = PHI <pretmp_98(28), prephitmp_94(29)>

  <bb 30>:
  # DEBUG dim_left => NULL
  # DEBUG dest => dest_6
  # DEBUG cur => cur_3
  if (cur_3 < dest_6)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  _50 = prephitmp_99 + 1;

  <bb 27>:
  # _9 = PHI <_50(26), prephitmp_99(30)>

  <bb 32>:
  # _10 = PHI <_9(27), _15(3)>

  <bb 31>:
  return _10;

}



;; Function void dim_order_pni_mesh(const Router*, const Flit*, int, OutputSet*, bool) (_Z18dim_order_pni_meshPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1975, decl_uid=45556, cgraph_uid=474, symbol_order=485)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void dim_order_pni_mesh(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  bool Close_Phi.528_I_lsm.534;
  int Close_Phi.528_I_lsm.533;
  bool phi_out_of_ssa.527_I_lsm.532;
  int phi_out_of_ssa.527_I_lsm.531;
  signed long graphite_IV.530;
  int Cross_BB_scalar_dependence.529[1];
  int D.55153;
  int D.55152;
  int D.55151;
  int Close_Phi.528[1];
  int phi_out_of_ssa.527[1];
  char_type D.55146;
  char __c;
  char_type D.55143;
  char __c;
  char_type D.55140;
  struct basic_ostream & D.55134;
  int d;
  int out_dim;
  int vcs_per_dest;
  int next_coord;
  static const char __PRETTY_FUNCTION__[75] = "void dim_order_pni_mesh(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  int out_port;
  bool _9;
  int _14;
  int gNumVCs.41_17;
  FlitType _19;
  int _28;
  int _30;
  int _38;
  int _39;
  int _41;
  int _43;
  bool _47;
  int _48;
  int _49;
  int _51;
  struct ostream * gWatchOut.45_52;
  struct basic_ostream & _54;
  const size_type _55;
  struct basic_ostream & _57;
  struct basic_ostream & _59;
  struct basic_ostream & _61;
  struct basic_ostream & _63;
  struct basic_ostream & _66;
  struct basic_ostream & _68;
  const int _72;
  const int _73;
  long int _74;
  char * const _75;
  struct basic_ostream & _76;
  const struct __ctype_type * _89;
  int (*__vtbl_ptr_type) () * _90;
  long int _91;
  sizetype _92;
  struct basic_ios * _93;
  struct basic_ostream & _96;
  bool _97;
  char _98;
  char_type _101;
  int (*__vtbl_ptr_type) () * _106;
  int (*__vtbl_ptr_type) () _107;
  void * PROF_111;
  char_type _113;
  signed long _124;
  int prephitmp_126;
  signed long _128;
  bool _129;
  bool _135;
  bool _136;
  bool _137;
  bool _139;
  bool _140;
  int pretmp_147;
  int pretmp_148;
  int prephitmp_149;
  int pretmp_150;
  int pretmp_151;
  int pretmp_152;
  int prephitmp_153;
  int pretmp_157;

  <bb 2>:
  if (inject_11(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _14 = f_13(D)->dest;
  _72 = MEM[(int *)r_15(D) + 96B];
  # DEBUG D#14 => r_15(D)
  # DEBUG this => D#14
  out_port_16 = dor_next_mesh (_72, _14, 0);

  <bb 4>:
  # out_port_8 = PHI <-1(2), out_port_16(3)>
  # DEBUG out_port => out_port_8
  # DEBUG vcBegin => 0
  # DEBUG D#201 => gNumVCs
  # DEBUG vcEnd => D#201 + -1
  _19 = f_13(D)->type;
  if (_19 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_20 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_20
  vcEnd_21 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_21
  goto <bb 13>;

  <bb 6>:
  if (_19 == 2)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_22 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_22
  vcEnd_23 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_23
  goto <bb 13>;

  <bb 8>:
  if (_19 == 1)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  vcBegin_24 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_24
  vcEnd_25 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_25
  goto <bb 13>;

  <bb 10>:
  gNumVCs.41_17 = gNumVCs;
  if (_19 == 3)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  vcEnd_18 = gNumVCs.41_17 + -1;
  goto <bb 13>;

  <bb 12>:
  vcBegin_26 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_26
  vcEnd_27 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_27

  <bb 13>:
  # vcBegin_1 = PHI <vcBegin_20(5), vcBegin_22(7), vcBegin_24(9), 0(11), vcBegin_26(12)>
  # vcEnd_3 = PHI <vcEnd_21(5), vcEnd_23(7), vcEnd_25(9), vcEnd_18(11), vcEnd_27(12)>
  # DEBUG vcEnd => vcEnd_3
  # DEBUG vcBegin => vcBegin_1
  _28 = f_13(D)->vc;
  _139 = vcEnd_3 < _28;
  _140 = vcBegin_1 > _28;
  _97 = _139 | _140;
  if (_97 != 0)
    goto <bb 14>;
  else
    goto <bb 16>;

  <bb 14>:
  _9 = _28 >= 0;
  if (_9 >= inject_11(D))
    goto <bb 15>;
  else
    goto <bb 41>;

  <bb 15>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 750, &__PRETTY_FUNCTION__);

  <bb 16>:
  if (inject_11(D) != 0)
    goto <bb 43>;
  else
    goto <bb 17>;

  <bb 17>:
  _73 = MEM[(int *)r_15(D) + 96B];
  # DEBUG D#14 => r_15(D)
  # DEBUG this => D#14
  _30 = f_13(D)->dest;
  if (_30 != _73)
    goto <bb 18>;
  else
    goto <bb 32>;

  <bb 18>:
  # next_coord_132 = PHI <next_coord_31(41), _30(17)>
  # DEBUG next_coord => next_coord_132
  out_dim_32 = out_port_8 / 2;
  # DEBUG out_dim => out_dim_32
  # DEBUG d => 0
  # DEBUG d => 0
  # DEBUG next_coord => next_coord_132
  if (out_dim_32 <= 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  pretmp_151 = gK;
  goto <bb 26>;

  <bb 20>:
  pretmp_157 = gK;
  phi_out_of_ssa.527[0] = next_coord_132;
  _129 = out_dim_32 > 0;
  if (_129 != 0)
    goto <bb 21>;
  else
    goto <bb 25>;

  <bb 21>:
  _128 = (signed long) out_dim_32;
  _124 = _128 + -1;
  phi_out_of_ssa.527_I_lsm.531_130 = phi_out_of_ssa.527[0];

  <bb 22>:
  # graphite_IV.530_121 = PHI <0(21), graphite_IV.530_120(23)>
  # phi_out_of_ssa.527_I_lsm.531_109 = PHI <phi_out_of_ssa.527_I_lsm.531_130(21), next_coord_112(23)>
  # DEBUG d => NULL
  # DEBUG next_coord => NULL
  next_coord_112 = phi_out_of_ssa.527_I_lsm.531_109 / pretmp_157;
  # DEBUG next_coord => NULL
  # DEBUG d => NULL
  # DEBUG d => NULL
  # DEBUG next_coord => NULL
  graphite_IV.530_120 = graphite_IV.530_121 + 1;
  if (graphite_IV.530_121 < _124)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  # Close_Phi.528_I_lsm.533_4 = PHI <next_coord_112(22)>
  Close_Phi.528[0] = Close_Phi.528_I_lsm.533_4;

  <bb 25>:
  next_coord_7 = Close_Phi.528[0];
  Cross_BB_scalar_dependence.529[0] = next_coord_7;
  next_coord_133 = Cross_BB_scalar_dependence.529[0];

  <bb 26>:
  # next_coord_104 = PHI <next_coord_132(19), next_coord_133(25)>
  # prephitmp_126 = PHI <pretmp_151(19), pretmp_157(25)>

  <bb 27>:
  # next_coord_6 = PHI <next_coord_104(26), next_coord_31(42), next_coord_127(43)>
  # prephitmp_153 = PHI <prephitmp_126(26), pretmp_150(42), pretmp_152(43)>
  # DEBUG next_coord => next_coord_6
  next_coord_37 = next_coord_6 % prephitmp_153;
  # DEBUG next_coord => next_coord_37
  _136 = next_coord_37 >= prephitmp_153;
  _135 = next_coord_37 < 0;
  _137 = _135 | _136;
  if (_137 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  __assert_fail ("next_coord >= 0 && next_coord < gK", "routefunc.cpp", 761, &__PRETTY_FUNCTION__);

  <bb 29>:
  _38 = vcEnd_3 - vcBegin_1;
  _39 = _38 + 1;
  vcs_per_dest_40 = _39 / prephitmp_153;
  # DEBUG vcs_per_dest => vcs_per_dest_40
  if (vcs_per_dest_40 <= 0)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __assert_fail ("vcs_per_dest > 0", "routefunc.cpp", 763, &__PRETTY_FUNCTION__);

  <bb 31>:
  _41 = next_coord_37 * vcs_per_dest_40;
  vcBegin_42 = vcBegin_1 + _41;
  # DEBUG vcBegin => vcBegin_42
  _43 = vcs_per_dest_40 + vcBegin_42;
  vcEnd_44 = _43 + -1;
  # DEBUG vcEnd => vcEnd_44
  # DEBUG vcEnd => vcEnd_44
  # DEBUG vcBegin => vcBegin_42
  if (inject_11(D) != 0)
    goto <bb 40>;
  else
    goto <bb 32>;

  <bb 32>:
  # vcBegin_100 = PHI <vcBegin_42(31), vcBegin_1(17)>
  # vcEnd_103 = PHI <vcEnd_44(31), vcEnd_3(17)>
  # DEBUG vcEnd => vcEnd_103
  # DEBUG vcBegin => vcBegin_100
  _47 = f_13(D)->watch;
  if (_47 != 0)
    goto <bb 33>;
  else
    goto <bb 40>;

  <bb 33>:
  _48 = f_13(D)->dest;
  _49 = f_13(D)->id;
  # DEBUG D#17 => &r_15(D)->D.42039.D.32226
  # DEBUG this => D#17
  _51 = GetSimTime ();
  gWatchOut.45_52 = gWatchOut;
  _54 = std::basic_ostream<char>::operator<< (gWatchOut.45_52, _51);
  # DEBUG __out => _54
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_54, " | ", 3);
  # DEBUG __os => _54
  # DEBUG __str => NULL
  _55 = MEM[(long unsigned int *)r_15(D) + 48B];
  # DEBUG this => D#1
  _74 = (long int) _55;
  # DEBUG this => NULL
  _75 = MEM[(char * *)r_15(D) + 40B];
  # DEBUG this => D#3
  _76 = std::__ostream_insert<char, std::char_traits<char> > (_54, _75, _74);
  # DEBUG __out => _76
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_76, " | ", 3);
  # DEBUG __out => _76
  # DEBUG __s => "Adding VC range ["
  # DEBUG __s => "Adding VC range ["
  std::__ostream_insert<char, std::char_traits<char> > (_76, "Adding VC range [", 17);
  _57 = std::basic_ostream<char>::operator<< (_76, vcBegin_100);
  # DEBUG __out => _57
  # DEBUG __s => ","
  # DEBUG __s => ","
  std::__ostream_insert<char, std::char_traits<char> > (_57, ",", 1);
  _59 = std::basic_ostream<char>::operator<< (_57, vcEnd_103);
  # DEBUG __out => _59
  # DEBUG __s => "]"
  # DEBUG __s => "]"
  std::__ostream_insert<char, std::char_traits<char> > (_59, "]", 1);
  # DEBUG __out => _59
  # DEBUG __s => " at output port "
  # DEBUG __s => " at output port "
  std::__ostream_insert<char, std::char_traits<char> > (_59, " at output port ", 16);
  _61 = std::basic_ostream<char>::operator<< (_59, out_port_8);
  # DEBUG __out => _61
  # DEBUG __s => " for flit "
  # DEBUG __s => " for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_61, " for flit ", 10);
  _63 = std::basic_ostream<char>::operator<< (_61, _49);
  # DEBUG __out => _63
  # DEBUG __s => " (input port "
  # DEBUG __s => " (input port "
  std::__ostream_insert<char, std::char_traits<char> > (_63, " (input port ", 13);
  _66 = std::basic_ostream<char>::operator<< (_63, in_channel_64(D));
  # DEBUG __out => _66
  # DEBUG __s => ", destination "
  # DEBUG __s => ", destination "
  std::__ostream_insert<char, std::char_traits<char> > (_66, ", destination ", 14);
  _68 = std::basic_ostream<char>::operator<< (_66, _48);
  # DEBUG __out => _68
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_68, ")", 1);
  # DEBUG __out => _68
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_68, ".", 1);
  # DEBUG this => _68
  # DEBUG __pf => endl
  # DEBUG __os => _68
  _90 = _68->_vptr.basic_ostream;
  _91 = MEM[(long int *)_90 + -24B];
  _92 = (sizetype) _91;
  _93 = _68 + _92;
  # DEBUG this => _93
  # DEBUG __c => 10
  _89 = MEM[(const struct basic_ios *)_93]._M_ctype;
  # DEBUG __f => _89
  if (_89 == 0B)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  std::__throw_bad_cast ();

  <bb 35>:
  # DEBUG this => _89
  # DEBUG __c => 10
  _98 = MEM[(const struct ctype *)_89]._M_widen_ok;
  if (_98 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  _101 = MEM[(const struct ctype *)_89]._M_widen[10];
  pretmp_147 = (int) _101;
  goto <bb 39>;

  <bb 37>:
  # DEBUG this => _89
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_89);
  _106 = MEM[(const struct ctype *)_89].D.20091._vptr.facet;
  _107 = MEM[(int (*__vtbl_ptr_type) () *)_106 + 48B];
  PROF_111 = [obj_type_ref] OBJ_TYPE_REF(_107;(const struct ctype)_89->6);
  if (PROF_111 == do_widen)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  _113 = OBJ_TYPE_REF(_107;(const struct ctype)_89->6) (_89, 10);
  pretmp_148 = (int) _113;

  <bb 39>:
  # prephitmp_149 = PHI <pretmp_147(36), 10(37), pretmp_148(38)>
  _96 = std::basic_ostream<char>::put (_68, prephitmp_149);
  # DEBUG __os => _96
  std::basic_ostream<char>::flush (_96);

  <bb 40>:
  # vcBegin_99 = PHI <vcBegin_42(31), vcBegin_100(32), vcBegin_100(39)>
  # vcEnd_102 = PHI <vcEnd_44(31), vcEnd_103(32), vcEnd_103(39)>
  OutputSet::Clear (outputs_69(D));
  OutputSet::AddRange (outputs_69(D), out_port_8, vcBegin_99, vcEnd_102, 0);
  return;

  <bb 41>:
  next_coord_31 = f_13(D)->dest;
  # DEBUG next_coord => next_coord_31
  if (inject_11(D) != 0)
    goto <bb 42>;
  else
    goto <bb 18>;

  <bb 42>:
  pretmp_150 = gK;
  goto <bb 27>;

  <bb 43>:
  next_coord_127 = f_13(D)->dest;
  # DEBUG next_coord => next_coord_127
  pretmp_152 = gK;
  goto <bb 27>;

}



;; Function void min_adapt_mesh(const Router*, const Flit*, int, OutputSet*, bool) (_Z14min_adapt_meshPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1979, decl_uid=45609, cgraph_uid=478, symbol_order=489)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void min_adapt_mesh(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  char_type D.55228;
  char __c;
  char_type D.55225;
  char __c;
  char_type D.55222;
  struct basic_ostream & D.55216;
  char_type D.55213;
  char __c;
  char_type D.55210;
  char __c;
  char_type D.55207;
  struct basic_ostream & D.55201;
  char_type D.55198;
  char __c;
  char_type D.55195;
  char __c;
  char_type D.55192;
  struct basic_ostream & D.55186;
  int n;
  int dest;
  int cur;
  int out_port;
  int in_vc;
  static const char __PRETTY_FUNCTION__[71] = "void min_adapt_mesh(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcBegin;
  int gNumVCs.62_14;
  FlitType _17;
  int _26;
  int _33;
  int gN.64_34;
  int _35;
  int gN.64_37;
  int _38;
  bool _43;
  int _44;
  int _45;
  int _47;
  struct ostream * gWatchOut.65_48;
  struct basic_ostream & _50;
  const size_type _51;
  struct basic_ostream & _53;
  struct basic_ostream & _55;
  struct basic_ostream & _57;
  struct basic_ostream & _59;
  struct basic_ostream & _61;
  struct basic_ostream & _63;
  int _67;
  int _68;
  bool _69;
  int _70;
  int _71;
  int _72;
  int _73;
  int _74;
  int _76;
  struct ostream * gWatchOut.65_77;
  struct basic_ostream & _79;
  const size_type _80;
  struct basic_ostream & _82;
  struct basic_ostream & _84;
  struct basic_ostream & _86;
  struct basic_ostream & _88;
  struct basic_ostream & _90;
  struct basic_ostream & _92;
  struct basic_ostream & _94;
  bool _99;
  int _100;
  int _101;
  int _102;
  int _103;
  int _105;
  struct ostream * gWatchOut.65_106;
  struct basic_ostream & _108;
  const size_type _109;
  struct basic_ostream & _111;
  struct basic_ostream & _113;
  struct basic_ostream & _115;
  struct basic_ostream & _117;
  struct basic_ostream & _119;
  struct basic_ostream & _121;
  struct basic_ostream & _123;
  const int _131;
  long int _133;
  char * const _134;
  struct basic_ostream & _135;
  long int _136;
  char * const _137;
  struct basic_ostream & _138;
  long int _139;
  char * const _140;
  struct basic_ostream & _141;
  const struct __ctype_type * _154;
  const struct __ctype_type * _168;
  const struct __ctype_type * _182;
  int (*__vtbl_ptr_type) () * _183;
  long int _184;
  sizetype _185;
  struct basic_ios * _186;
  struct basic_ostream & _189;
  bool _190;
  char _191;
  char_type _194;
  int (*__vtbl_ptr_type) () * _199;
  int (*__vtbl_ptr_type) () _200;
  int prephitmp_202;
  int prephitmp_203;
  void * PROF_204;
  char_type _206;
  int (*__vtbl_ptr_type) () * _209;
  long int _210;
  sizetype _211;
  struct basic_ios * _212;
  struct basic_ostream & _215;
  bool _216;
  char _217;
  int pretmp_218;
  int pretmp_219;
  char_type _220;
  int prephitmp_221;
  int pretmp_224;
  int (*__vtbl_ptr_type) () * _225;
  int (*__vtbl_ptr_type) () _226;
  int prephitmp_227;
  void * PROF_230;
  int pretmp_231;
  char_type _232;
  int pretmp_233;
  int prephitmp_234;
  int (*__vtbl_ptr_type) () * _235;
  long int _236;
  sizetype _237;
  struct basic_ios * _238;
  struct basic_ostream & _241;
  bool _242;
  char _243;
  char_type _246;
  int prephitmp_248;
  int pretmp_250;
  int (*__vtbl_ptr_type) () * _251;
  int (*__vtbl_ptr_type) () _252;
  int gN.64_255;
  void * PROF_256;
  int pretmp_257;
  char_type _258;
  int prephitmp_259;
  int prephitmp_260;
  int pretmp_271;
  int pretmp_275;
  int pretmp_276;
  int pretmp_280;
  int pretmp_284;
  bool _286;
  int prephitmp_291;
  int pretmp_292;
  int pretmp_293;
  int prephitmp_294;
  int pretmp_295;
  int pretmp_296;
  int prephitmp_297;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#202 => gNumVCs
  # DEBUG vcEnd => D#202 + -1
  _17 = f_16(D)->type;
  if (_17 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_18 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_18
  in_vc_19 = gReadReqEndVC;
  # DEBUG vcEnd => in_vc_19
  goto <bb 11>;

  <bb 4>:
  if (_17 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_20 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_20
  in_vc_21 = gWriteReqEndVC;
  # DEBUG vcEnd => in_vc_21
  goto <bb 11>;

  <bb 6>:
  if (_17 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_22 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_22
  in_vc_23 = gReadReplyEndVC;
  # DEBUG vcEnd => in_vc_23
  goto <bb 11>;

  <bb 8>:
  gNumVCs.62_14 = gNumVCs;
  if (_17 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  in_vc_15 = gNumVCs.62_14 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_24 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_24
  in_vc_25 = gWriteReplyEndVC;
  # DEBUG vcEnd => in_vc_25

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_18(3), vcBegin_20(5), vcBegin_22(7), 0(9), vcBegin_24(10)>
  # in_vc_2 = PHI <in_vc_19(3), in_vc_21(5), in_vc_23(7), in_vc_15(9), in_vc_25(10)>

  <bb 59>:
  # DEBUG vcEnd => in_vc_2
  # DEBUG vcBegin => vcBegin_1
  _26 = f_16(D)->vc;
  _190 = in_vc_2 < _26;
  _242 = vcBegin_1 > _26;
  _216 = _190 | _242;
  if (_216 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _286 = _26 >= 0;
  if (inject_27(D) <= _286)
    goto <bb 13>;
  else
    goto <bb 55>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 948, &__PRETTY_FUNCTION__);

  <bb 14>:
  OutputSet::Clear (outputs_29(D));
  if (inject_27(D) != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  OutputSet::AddRange (outputs_29(D), -1, vcBegin_1, in_vc_2, 0);
  goto <bb 54>;

  <bb 16>:
  _131 = MEM[(int *)r_32(D) + 96B];
  # DEBUG D#14 => r_32(D)
  # DEBUG this => D#14
  _33 = f_16(D)->dest;
  if (_33 == _131)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  gN.64_34 = gN;
  _35 = gN.64_34 * 2;
  OutputSet::AddRange (outputs_29(D), _35, vcBegin_1, in_vc_2, 0);
  goto <bb 54>;

  <bb 18>:
  gN.64_37 = gN;
  _38 = gN.64_37 * 2;
  if (_38 == in_channel_39(D))
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  in_vc_40 = f_16(D)->vc;
  # DEBUG in_vc => in_vc_40

  <bb 20>:
  # in_vc_3 = PHI <in_vc_2(18), in_vc_40(19)>

  <bb 58>:
  # DEBUG in_vc => in_vc_3
  # DEBUG D#14 => r_32(D)
  # DEBUG this => D#14
  out_port_41 = dor_next_mesh (_131, _33, 0);
  # DEBUG out_port => out_port_41
  OutputSet::AddRange (outputs_29(D), out_port_41, 0, vcBegin_1, vcBegin_1);
  _43 = f_16(D)->watch;
  if (_43 != 0)
    goto <bb 21>;
  else
    goto <bb 28>;

  <bb 21>:
  _44 = f_16(D)->dest;
  _45 = f_16(D)->id;
  # DEBUG D#18 => &r_32(D)->D.42039.D.32226
  # DEBUG this => D#18
  _47 = GetSimTime ();
  gWatchOut.65_48 = gWatchOut;
  _50 = std::basic_ostream<char>::operator<< (gWatchOut.65_48, _47);
  # DEBUG __out => _50
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_50, " | ", 3);
  # DEBUG __os => _50
  # DEBUG __str => NULL
  _51 = MEM[(long unsigned int *)r_32(D) + 48B];
  # DEBUG this => D#1
  _133 = (long int) _51;
  # DEBUG this => NULL
  _134 = MEM[(char * *)r_32(D) + 40B];
  # DEBUG this => D#3
  _135 = std::__ostream_insert<char, std::char_traits<char> > (_50, _134, _133);
  # DEBUG __out => _135
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_135, " | ", 3);
  # DEBUG __out => _135
  # DEBUG __s => "Adding VC range ["
  # DEBUG __s => "Adding VC range ["
  std::__ostream_insert<char, std::char_traits<char> > (_135, "Adding VC range [", 17);
  _53 = std::basic_ostream<char>::operator<< (_135, vcBegin_1);
  # DEBUG __out => _53
  # DEBUG __s => ","
  # DEBUG __s => ","
  std::__ostream_insert<char, std::char_traits<char> > (_53, ",", 1);
  _55 = std::basic_ostream<char>::operator<< (_53, vcBegin_1);
  # DEBUG __out => _55
  # DEBUG __s => "]"
  # DEBUG __s => "]"
  std::__ostream_insert<char, std::char_traits<char> > (_55, "]", 1);
  # DEBUG __out => _55
  # DEBUG __s => " at output port "
  # DEBUG __s => " at output port "
  std::__ostream_insert<char, std::char_traits<char> > (_55, " at output port ", 16);
  _57 = std::basic_ostream<char>::operator<< (_55, out_port_41);
  # DEBUG __out => _57
  # DEBUG __s => " for flit "
  # DEBUG __s => " for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_57, " for flit ", 10);
  _59 = std::basic_ostream<char>::operator<< (_57, _45);
  # DEBUG __out => _59
  # DEBUG __s => " (input port "
  # DEBUG __s => " (input port "
  std::__ostream_insert<char, std::char_traits<char> > (_59, " (input port ", 13);
  _61 = std::basic_ostream<char>::operator<< (_59, in_channel_39(D));
  # DEBUG __out => _61
  # DEBUG __s => ", destination "
  # DEBUG __s => ", destination "
  std::__ostream_insert<char, std::char_traits<char> > (_61, ", destination ", 14);
  _63 = std::basic_ostream<char>::operator<< (_61, _44);
  # DEBUG __out => _63
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_63, ")", 1);
  # DEBUG __out => _63
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_63, ".", 1);
  # DEBUG this => _63
  # DEBUG __pf => endl
  # DEBUG __os => _63
  _183 = _63->_vptr.basic_ostream;
  _184 = MEM[(long int *)_183 + -24B];
  _185 = (sizetype) _184;
  _186 = _63 + _185;
  # DEBUG this => _186
  # DEBUG __c => 10
  _154 = MEM[(const struct basic_ios *)_186]._M_ctype;
  # DEBUG __f => _154
  if (_154 == 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  std::__throw_bad_cast ();

  <bb 23>:
  # DEBUG this => _154
  # DEBUG __c => 10
  _191 = MEM[(const struct ctype *)_154]._M_widen_ok;
  if (_191 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _194 = MEM[(const struct ctype *)_154]._M_widen[10];
  pretmp_292 = (int) _194;
  goto <bb 27>;

  <bb 25>:
  # DEBUG this => _154
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_154);
  _199 = MEM[(const struct ctype *)_154].D.20091._vptr.facet;
  _200 = MEM[(int (*__vtbl_ptr_type) () *)_199 + 48B];
  PROF_204 = [obj_type_ref] OBJ_TYPE_REF(_200;(const struct ctype)_154->6);
  if (PROF_204 == do_widen)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  _206 = OBJ_TYPE_REF(_200;(const struct ctype)_154->6) (_154, 10);
  pretmp_293 = (int) _206;

  <bb 27>:
  # prephitmp_294 = PHI <pretmp_292(24), 10(25), pretmp_293(26)>
  _189 = std::basic_ostream<char>::put (_63, prephitmp_294);
  # DEBUG __os => _189
  std::basic_ostream<char>::flush (_189);

  <bb 28>:
  if (vcBegin_1 != in_vc_3)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:

  <bb 56>:
  goto <bb 54>;

  <bb 30>:
  cur_132 = MEM[(int *)r_32(D) + 96B];
  # DEBUG D#14 => r_32(D)
  # DEBUG this => D#14
  # DEBUG cur => NULL
  dest_64 = f_16(D)->dest;
  # DEBUG dest => dest_64
  # DEBUG n => 0
  # DEBUG n => 0
  # DEBUG dest => dest_64
  # DEBUG cur => cur_132
  gN.64_255 = gN;
  if (gN.64_255 <= 0)
    goto <bb 29>;
  else
    goto <bb 31>;

  <bb 31>:
  pretmp_280 = gK;

  <bb 32>:
  # cur_207 = PHI <cur_132(31), cur_128(53)>
  # dest_195 = PHI <dest_64(31), dest_129(53)>
  # n_213 = PHI <0(31), n_130(53)>
  # prephitmp_203 = PHI <pretmp_280(31), prephitmp_248(53)>
  # prephitmp_202 = PHI <gN.64_255(31), prephitmp_297(53)>
  # DEBUG n => n_213
  # DEBUG dest => dest_195
  # DEBUG cur => cur_207
  _67 = cur_207 % prephitmp_203;
  _68 = dest_195 % prephitmp_203;
  if (_67 != _68)
    goto <bb 33>;
  else
    goto <bb 52>;

  <bb 33>:
  if (_67 < _68)
    goto <bb 34>;
  else
    goto <bb 43>;

  <bb 34>:
  _99 = f_16(D)->watch;
  if (_99 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_224 = n_213 * 2;
  pretmp_231 = vcBegin_1 + 1;
  goto <bb 42>;

  <bb 36>:
  _100 = f_16(D)->dest;
  _101 = f_16(D)->id;
  _102 = n_213 * 2;
  _103 = vcBegin_1 + 1;
  # DEBUG D#20 => &r_32(D)->D.42039.D.32226
  # DEBUG this => D#20
  _105 = GetSimTime ();
  gWatchOut.65_106 = gWatchOut;
  _108 = std::basic_ostream<char>::operator<< (gWatchOut.65_106, _105);
  # DEBUG __out => _108
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_108, " | ", 3);
  # DEBUG __os => _108
  # DEBUG __str => NULL
  _109 = MEM[(long unsigned int *)r_32(D) + 48B];
  # DEBUG this => D#1
  _136 = (long int) _109;
  # DEBUG this => NULL
  _137 = MEM[(char * *)r_32(D) + 40B];
  # DEBUG this => D#3
  _138 = std::__ostream_insert<char, std::char_traits<char> > (_108, _137, _136);
  # DEBUG __out => _138
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_138, " | ", 3);
  # DEBUG __out => _138
  # DEBUG __s => "Adding VC range ["
  # DEBUG __s => "Adding VC range ["
  std::__ostream_insert<char, std::char_traits<char> > (_138, "Adding VC range [", 17);
  _111 = std::basic_ostream<char>::operator<< (_138, _103);
  # DEBUG __out => _111
  # DEBUG __s => ","
  # DEBUG __s => ","
  std::__ostream_insert<char, std::char_traits<char> > (_111, ",", 1);
  _113 = std::basic_ostream<char>::operator<< (_111, in_vc_2);
  # DEBUG __out => _113
  # DEBUG __s => "]"
  # DEBUG __s => "]"
  std::__ostream_insert<char, std::char_traits<char> > (_113, "]", 1);
  # DEBUG __out => _113
  # DEBUG __s => " at output port "
  # DEBUG __s => " at output port "
  std::__ostream_insert<char, std::char_traits<char> > (_113, " at output port ", 16);
  _115 = std::basic_ostream<char>::operator<< (_113, _102);
  # DEBUG __out => _115
  # DEBUG __s => " with priority "
  # DEBUG __s => " with priority "
  std::__ostream_insert<char, std::char_traits<char> > (_115, " with priority ", 15);
  _117 = std::basic_ostream<char>::operator<< (_115, 1);
  # DEBUG __out => _117
  # DEBUG __s => " for flit "
  # DEBUG __s => " for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_117, " for flit ", 10);
  _119 = std::basic_ostream<char>::operator<< (_117, _101);
  # DEBUG __out => _119
  # DEBUG __s => " (input port "
  # DEBUG __s => " (input port "
  std::__ostream_insert<char, std::char_traits<char> > (_119, " (input port ", 13);
  _121 = std::basic_ostream<char>::operator<< (_119, in_channel_39(D));
  # DEBUG __out => _121
  # DEBUG __s => ", destination "
  # DEBUG __s => ", destination "
  std::__ostream_insert<char, std::char_traits<char> > (_121, ", destination ", 14);
  _123 = std::basic_ostream<char>::operator<< (_121, _100);
  # DEBUG __out => _123
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_123, ")", 1);
  # DEBUG __out => _123
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_123, ".", 1);
  # DEBUG this => _123
  # DEBUG __pf => endl
  # DEBUG __os => _123
  _209 = _123->_vptr.basic_ostream;
  _210 = MEM[(long int *)_209 + -24B];
  _211 = (sizetype) _210;
  _212 = _123 + _211;
  # DEBUG this => _212
  # DEBUG __c => 10
  _182 = MEM[(const struct basic_ios *)_212]._M_ctype;
  # DEBUG __f => _182
  if (_182 == 0B)
    goto <bb 22>;
  else
    goto <bb 37>;

  <bb 37>:
  # DEBUG this => _182
  # DEBUG __c => 10
  _217 = MEM[(const struct ctype *)_182]._M_widen_ok;
  if (_217 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _220 = MEM[(const struct ctype *)_182]._M_widen[10];
  pretmp_284 = (int) _220;
  goto <bb 41>;

  <bb 39>:
  # DEBUG this => _182
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_182);
  _225 = MEM[(const struct ctype *)_182].D.20091._vptr.facet;
  _226 = MEM[(int (*__vtbl_ptr_type) () *)_225 + 48B];
  PROF_230 = [obj_type_ref] OBJ_TYPE_REF(_226;(const struct ctype)_182->6);
  if (PROF_230 == do_widen)
    goto <bb 41>;
  else
    goto <bb 40>;

  <bb 40>:
  _232 = OBJ_TYPE_REF(_226;(const struct ctype)_182->6) (_182, 10);
  pretmp_233 = (int) _232;

  <bb 41>:
  # prephitmp_291 = PHI <pretmp_284(38), 10(39), pretmp_233(40)>
  _215 = std::basic_ostream<char>::put (_123, prephitmp_291);
  # DEBUG __os => _215
  std::basic_ostream<char>::flush (_215);

  <bb 42>:
  # prephitmp_227 = PHI <pretmp_224(35), _102(41)>
  # prephitmp_234 = PHI <pretmp_231(35), _103(41)>
  OutputSet::AddRange (outputs_29(D), prephitmp_227, prephitmp_234, in_vc_2, 1);
  pretmp_276 = gK;
  pretmp_296 = gN;
  goto <bb 52>;

  <bb 43>:
  _69 = f_16(D)->watch;
  if (_69 != 0)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  pretmp_250 = n_213 * 2;
  pretmp_257 = pretmp_250 + 1;
  pretmp_275 = vcBegin_1 + 1;
  goto <bb 51>;

  <bb 45>:
  _70 = f_16(D)->dest;
  _71 = f_16(D)->id;
  _72 = n_213 * 2;
  _73 = _72 + 1;
  _74 = vcBegin_1 + 1;
  # DEBUG D#19 => &r_32(D)->D.42039.D.32226
  # DEBUG this => D#19
  _76 = GetSimTime ();
  gWatchOut.65_77 = gWatchOut;
  _79 = std::basic_ostream<char>::operator<< (gWatchOut.65_77, _76);
  # DEBUG __out => _79
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_79, " | ", 3);
  # DEBUG __os => _79
  # DEBUG __str => NULL
  _80 = MEM[(long unsigned int *)r_32(D) + 48B];
  # DEBUG this => D#1
  _139 = (long int) _80;
  # DEBUG this => NULL
  _140 = MEM[(char * *)r_32(D) + 40B];
  # DEBUG this => D#3
  _141 = std::__ostream_insert<char, std::char_traits<char> > (_79, _140, _139);
  # DEBUG __out => _141
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_141, " | ", 3);
  # DEBUG __out => _141
  # DEBUG __s => "Adding VC range ["
  # DEBUG __s => "Adding VC range ["
  std::__ostream_insert<char, std::char_traits<char> > (_141, "Adding VC range [", 17);
  _82 = std::basic_ostream<char>::operator<< (_141, _74);
  # DEBUG __out => _82
  # DEBUG __s => ","
  # DEBUG __s => ","
  std::__ostream_insert<char, std::char_traits<char> > (_82, ",", 1);
  _84 = std::basic_ostream<char>::operator<< (_82, in_vc_2);
  # DEBUG __out => _84
  # DEBUG __s => "]"
  # DEBUG __s => "]"
  std::__ostream_insert<char, std::char_traits<char> > (_84, "]", 1);
  # DEBUG __out => _84
  # DEBUG __s => " at output port "
  # DEBUG __s => " at output port "
  std::__ostream_insert<char, std::char_traits<char> > (_84, " at output port ", 16);
  _86 = std::basic_ostream<char>::operator<< (_84, _73);
  # DEBUG __out => _86
  # DEBUG __s => " with priority "
  # DEBUG __s => " with priority "
  std::__ostream_insert<char, std::char_traits<char> > (_86, " with priority ", 15);
  _88 = std::basic_ostream<char>::operator<< (_86, 1);
  # DEBUG __out => _88
  # DEBUG __s => " for flit "
  # DEBUG __s => " for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_88, " for flit ", 10);
  _90 = std::basic_ostream<char>::operator<< (_88, _71);
  # DEBUG __out => _90
  # DEBUG __s => " (input port "
  # DEBUG __s => " (input port "
  std::__ostream_insert<char, std::char_traits<char> > (_90, " (input port ", 13);
  _92 = std::basic_ostream<char>::operator<< (_90, in_channel_39(D));
  # DEBUG __out => _92
  # DEBUG __s => ", destination "
  # DEBUG __s => ", destination "
  std::__ostream_insert<char, std::char_traits<char> > (_92, ", destination ", 14);
  _94 = std::basic_ostream<char>::operator<< (_92, _70);
  # DEBUG __out => _94
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_94, ")", 1);
  # DEBUG __out => _94
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_94, ".", 1);
  # DEBUG this => _94
  # DEBUG __pf => endl
  # DEBUG __os => _94
  _235 = _94->_vptr.basic_ostream;
  _236 = MEM[(long int *)_235 + -24B];
  _237 = (sizetype) _236;
  _238 = _94 + _237;
  # DEBUG this => _238
  # DEBUG __c => 10
  _168 = MEM[(const struct basic_ios *)_238]._M_ctype;
  # DEBUG __f => _168
  if (_168 == 0B)
    goto <bb 22>;
  else
    goto <bb 46>;

  <bb 46>:
  # DEBUG this => _168
  # DEBUG __c => 10
  _243 = MEM[(const struct ctype *)_168]._M_widen_ok;
  if (_243 != 0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  _246 = MEM[(const struct ctype *)_168]._M_widen[10];
  pretmp_218 = (int) _246;
  goto <bb 50>;

  <bb 48>:
  # DEBUG this => _168
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_168);
  _251 = MEM[(const struct ctype *)_168].D.20091._vptr.facet;
  _252 = MEM[(int (*__vtbl_ptr_type) () *)_251 + 48B];
  PROF_256 = [obj_type_ref] OBJ_TYPE_REF(_252;(const struct ctype)_168->6);
  if (PROF_256 == do_widen)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:
  _258 = OBJ_TYPE_REF(_252;(const struct ctype)_168->6) (_168, 10);
  pretmp_219 = (int) _258;

  <bb 50>:
  # prephitmp_221 = PHI <pretmp_218(47), 10(48), pretmp_219(49)>
  _241 = std::basic_ostream<char>::put (_94, prephitmp_221);
  # DEBUG __os => _241
  std::basic_ostream<char>::flush (_241);

  <bb 51>:
  # prephitmp_260 = PHI <pretmp_257(44), _73(50)>
  # prephitmp_259 = PHI <pretmp_275(44), _74(50)>
  OutputSet::AddRange (outputs_29(D), prephitmp_260, prephitmp_259, in_vc_2, 1);
  pretmp_271 = gK;
  pretmp_295 = gN;

  <bb 52>:
  # prephitmp_248 = PHI <prephitmp_203(32), pretmp_271(51), pretmp_276(42)>
  # prephitmp_297 = PHI <prephitmp_202(32), pretmp_295(51), pretmp_296(42)>
  cur_128 = cur_207 / prephitmp_248;
  # DEBUG cur => cur_128
  dest_129 = dest_195 / prephitmp_248;
  # DEBUG dest => dest_129
  n_130 = n_213 + 1;
  # DEBUG n => n_130
  # DEBUG n => n_130
  # DEBUG dest => dest_129
  # DEBUG cur => cur_128
  if (n_130 >= prephitmp_297)
    goto <bb 29>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 32>;

  <bb 54>:

  <bb 57>:
  return;

  <bb 55>:
  OutputSet::Clear (outputs_29(D));
  goto <bb 15>;

}



;; Function void romm_mesh(const Router*, const Flit*, int, OutputSet*, bool) (_Z9romm_meshPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1977, decl_uid=45585, cgraph_uid=476, symbol_order=487)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void romm_mesh(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  int dist;
  int intm;
  int offset;
  int n;
  int D.55273;
  int src;
  int dest;
  int available_vcs;
  int out_port;
  static const char __PRETTY_FUNCTION__[66] = "void romm_mesh(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  bool _6;
  const int iftmp.52_7;
  int gNumVCs.48_12;
  FlitType _15;
  int _24;
  int gN.49_27;
  int _28;
  int _38;
  int _45;
  int _46;
  const int _55;
  int gN.46_57;
  int _61;
  int _63;
  long int _65;
  int _66;
  long int _67;
  long int _68;
  int _69;
  int _70;
  int _72;
  long int _75;
  int _76;
  long int _77;
  long int _78;
  int _79;
  int _80;
  int _81;
  int gK.47_83;
  bool _92;
  bool _109;
  int _110;
  bool _112;
  int prephitmp_123;
  const int pretmp_126;
  const int prephitmp_127;
  int pretmp_128;
  int prephitmp_129;
  const int pretmp_130;
  const int prephitmp_131;
  int pretmp_132;
  int prephitmp_133;
  int pretmp_138;
  int prephitmp_139;
  const int pretmp_140;
  const int prephitmp_141;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#207 => gNumVCs
  # DEBUG vcEnd => D#207 + -1
  _15 = f_14(D)->type;
  if (_15 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_16 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_16
  vcEnd_17 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_17
  goto <bb 11>;

  <bb 4>:
  if (_15 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_18 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_18
  vcEnd_19 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_19
  goto <bb 11>;

  <bb 6>:
  if (_15 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_20 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_20
  vcEnd_21 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_21
  goto <bb 11>;

  <bb 8>:
  gNumVCs.48_12 = gNumVCs;
  if (_15 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_13 = gNumVCs.48_12 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_22 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_22
  vcEnd_23 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_23

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_16(3), vcBegin_18(5), vcBegin_20(7), 0(9), vcBegin_22(10)>
  # vcEnd_3 = PHI <vcEnd_17(3), vcEnd_19(5), vcEnd_21(7), vcEnd_13(9), vcEnd_23(10)>

  <bb 42>:
  # DEBUG vcEnd => vcEnd_3
  # DEBUG vcBegin => vcBegin_1
  _24 = f_14(D)->vc;
  _92 = vcEnd_3 < _24;
  _112 = vcBegin_1 > _24;
  _109 = _92 | _112;
  if (_109 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _6 = _24 >= 0;
  if (_6 >= inject_25(D))
    goto <bb 13>;
  else
    goto <bb 36>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 830, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_25(D) != 0)
    goto <bb 36>;
  else
    goto <bb 15>;

  <bb 15>:
  gN.49_27 = gN;
  _28 = gN.49_27 * 2;
  if (_28 == in_channel_29(D))
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  pretmp_138 = f_14(D)->ph;
  pretmp_140 = f_14(D)->dest;
  goto <bb 26>;

  <bb 17>:
  f_14(D)->ph = 0;
  dest_31 = f_14(D)->dest;
  src_32 = f_14(D)->src;
  # DEBUG src => src_32
  # DEBUG dest => dest_31
  # DEBUG intm => 0
  # DEBUG offset => 1
  # DEBUG n => 0
  # DEBUG n => 0
  # DEBUG offset => 1
  # DEBUG intm => 0
  # DEBUG dest => dest_31
  # DEBUG src => src_32
  if (gN.49_27 <= 0)
    goto <bb 25>;
  else
    goto <bb 18>;

  <bb 18>:
  pretmp_132 = gK;

  <bb 19>:
  # n_107 = PHI <0(18), n_87(23)>
  # dest_104 = PHI <dest_31(18), dest_85(23)>
  # src_94 = PHI <src_32(18), src_86(23)>
  # offset_106 = PHI <1(18), offset_84(23)>
  # intm_93 = PHI <0(18), intm_88(23)>
  # prephitmp_133 = PHI <pretmp_132(18), gK.47_83(23)>
  # DEBUG n => n_107
  # DEBUG offset => offset_106
  # DEBUG intm => intm_93
  # DEBUG dest => dest_104
  # DEBUG src => src_94
  _61 = dest_104 % prephitmp_133;
  _63 = src_94 % prephitmp_133;
  dist_64 = _61 - _63;
  # DEBUG dist => dist_64
  if (dist_64 > 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG max => dist_64
  _65 = ran_next ();
  _66 = dist_64 + 1;
  _67 = (long int) _66;
  _68 = _65 % _67;
  _69 = (int) _68;
  _70 = _63 + _69;
  _72 = _70 * offset_106;
  intm_74 = _72 + intm_93;
  # DEBUG intm => intm_74
  goto <bb 22>;

  <bb 21>:
  # DEBUG max => -dist_64
  _75 = ran_next ();
  _76 = 1 - dist_64;
  _77 = (long int) _76;
  _78 = _75 % _77;
  _79 = (int) _78;
  _80 = _61 + _79;
  _81 = _80 * offset_106;
  intm_82 = _81 + intm_93;
  # DEBUG intm => intm_82

  <bb 22>:
  # intm_88 = PHI <intm_74(20), intm_82(21)>
  # DEBUG intm => intm_88
  gK.47_83 = gK;
  offset_84 = gK.47_83 * offset_106;
  # DEBUG offset => offset_84
  dest_85 = dest_104 / gK.47_83;
  # DEBUG dest => dest_85
  src_86 = src_94 / gK.47_83;
  # DEBUG src => src_86
  n_87 = n_107 + 1;
  # DEBUG n => n_87
  # DEBUG n => n_87
  # DEBUG offset => offset_84
  # DEBUG intm => intm_88
  # DEBUG dest => dest_85
  # DEBUG src => src_86
  gN.46_57 = gN;
  if (gN.46_57 <= n_87)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 19>;

  <bb 24>:
  # intm_137 = PHI <intm_88(22)>

  <bb 39>:
  pretmp_128 = f_14(D)->ph;
  pretmp_130 = f_14(D)->dest;

  <bb 25>:
  # intm_105 = PHI <intm_137(39), 0(17)>
  # prephitmp_129 = PHI <pretmp_128(39), 0(17)>
  # prephitmp_131 = PHI <pretmp_130(39), dest_31(17)>

  <bb 40>:
  f_14(D)->intm = intm_105;

  <bb 26>:
  # prephitmp_139 = PHI <pretmp_138(16), prephitmp_129(40)>
  # prephitmp_141 = PHI <pretmp_140(16), prephitmp_131(40)>
  if (prephitmp_139 == 0)
    goto <bb 27>;
  else
    goto <bb 38>;

  <bb 27>:
  _55 = MEM[(int *)r_37(D) + 96B];
  # DEBUG D#14 => r_37(D)
  # DEBUG this => D#14
  _38 = f_14(D)->intm;
  if (_38 == _55)
    goto <bb 37>;
  else
    goto <bb 28>;

  <bb 28>:
  # iftmp.52_7 = PHI <_38(27), prephitmp_141(41)>
  # _110 = PHI <prephitmp_139(27), prephitmp_123(41)>
  # prephitmp_127 = PHI <_55(27), pretmp_126(41)>
  # DEBUG D#14 => r_37(D)
  # DEBUG this => D#14
  out_port_43 = dor_next_mesh (prephitmp_127, iftmp.52_7, 0);
  # DEBUG out_port => out_port_43
  # DEBUG D#14 => r_37(D)
  # DEBUG this => D#14
  if (prephitmp_127 != prephitmp_141)
    goto <bb 29>;
  else
    goto <bb 36>;

  <bb 29>:
  _45 = vcEnd_3 - vcBegin_1;
  _46 = _45 + 1;
  available_vcs_47 = _46 / 2;
  # DEBUG available_vcs => available_vcs_47
  if (available_vcs_47 <= 0)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __assert_fail ("available_vcs > 0", "routefunc.cpp", 856, &__PRETTY_FUNCTION__);

  <bb 31>:
  if (_110 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  vcEnd_50 = vcEnd_3 - available_vcs_47;
  # DEBUG vcEnd => vcEnd_50
  goto <bb 36>;

  <bb 33>:
  if (_110 != 1)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  __assert_fail ("f->ph == 1", "routefunc.cpp", 861, &__PRETTY_FUNCTION__);

  <bb 35>:
  vcBegin_48 = vcBegin_1 + available_vcs_47;
  # DEBUG vcBegin => vcBegin_48

  <bb 36>:
  # vcBegin_2 = PHI <vcBegin_1(14), vcBegin_1(28), vcBegin_48(35), vcBegin_1(32), vcBegin_1(12)>
  # vcEnd_4 = PHI <vcEnd_3(14), vcEnd_3(28), vcEnd_3(35), vcEnd_50(32), vcEnd_3(12)>
  # out_port_5 = PHI <-1(14), out_port_43(28), out_port_43(35), out_port_43(32), -1(12)>
  # DEBUG out_port => out_port_5
  # DEBUG vcEnd => vcEnd_4
  # DEBUG vcBegin => vcBegin_2
  OutputSet::Clear (outputs_52(D));
  OutputSet::AddRange (outputs_52(D), out_port_5, vcBegin_2, vcEnd_4, 0);
  return;

  <bb 37>:
  f_14(D)->ph = 1;

  <bb 38>:
  # prephitmp_123 = PHI <prephitmp_139(26), 1(37)>

  <bb 41>:
  pretmp_126 = MEM[(int *)r_37(D) + 96B];
  goto <bb 28>;

}



;; Function void romm_ni_mesh(const Router*, const Flit*, int, OutputSet*, bool) (_Z12romm_ni_meshPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1978, decl_uid=45597, cgraph_uid=477, symbol_order=488)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void romm_ni_mesh(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  int dist;
  int intm;
  int offset;
  int n;
  int D.55293;
  int src;
  int dest;
  const int vcs_per_dest;
  int out_port;
  static const char __PRETTY_FUNCTION__[69] = "void romm_ni_mesh(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcEnd;
  int vcBegin;
  const int iftmp.61_8;
  int gNumVCs.54_13;
  FlitType _16;
  int _25;
  int _29;
  int _30;
  int _31;
  int gNodes.57_32;
  int _34;
  int _35;
  int _37;
  int gN.58_40;
  int _41;
  int _50;
  const int iftmp.61_54;
  const int _59;
  const int _60;
  int gN.46_62;
  int _66;
  int _68;
  long int _70;
  int _71;
  long int _72;
  long int _73;
  int _74;
  int _75;
  int _77;
  long int _80;
  int _81;
  long int _82;
  long int _83;
  int _84;
  int _85;
  int _86;
  int gK.47_88;
  bool _97;
  bool _103;
  bool _116;
  bool _121;
  const int prephitmp_127;
  const int pretmp_129;
  const int prephitmp_130;
  int pretmp_131;
  int prephitmp_132;
  int pretmp_133;
  int prephitmp_134;
  int pretmp_139;
  int prephitmp_140;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#212 => gNumVCs
  # DEBUG vcEnd => D#212 + -1
  _16 = f_15(D)->type;
  if (_16 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_17 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_17
  vcEnd_18 = gReadReqEndVC;
  # DEBUG vcEnd => vcEnd_18
  goto <bb 11>;

  <bb 4>:
  if (_16 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_19 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_19
  vcEnd_20 = gWriteReqEndVC;
  # DEBUG vcEnd => vcEnd_20
  goto <bb 11>;

  <bb 6>:
  if (_16 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_21 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_21
  vcEnd_22 = gReadReplyEndVC;
  # DEBUG vcEnd => vcEnd_22
  goto <bb 11>;

  <bb 8>:
  gNumVCs.54_13 = gNumVCs;
  if (_16 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  vcEnd_14 = gNumVCs.54_13 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_23 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_23
  vcEnd_24 = gWriteReplyEndVC;
  # DEBUG vcEnd => vcEnd_24

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_17(3), vcBegin_19(5), vcBegin_21(7), 0(9), vcBegin_23(10)>
  # vcEnd_3 = PHI <vcEnd_18(3), vcEnd_20(5), vcEnd_22(7), vcEnd_14(9), vcEnd_24(10)>

  <bb 40>:
  # DEBUG vcEnd => vcEnd_3
  # DEBUG vcBegin => vcBegin_1
  _25 = f_15(D)->vc;
  _97 = vcEnd_3 < _25;
  _121 = vcBegin_1 > _25;
  _116 = _97 | _121;
  if (_116 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _103 = _25 >= 0;
  if (inject_26(D) <= _103)
    goto <bb 13>;
  else
    goto <bb 33>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 891, &__PRETTY_FUNCTION__);

  <bb 14>:
  if (inject_26(D) != 0)
    goto <bb 33>;
  else
    goto <bb 15>;

  <bb 15>:
  _59 = MEM[(int *)r_28(D) + 96B];
  # DEBUG D#14 => r_28(D)
  # DEBUG this => D#14
  _29 = f_15(D)->dest;
  if (_29 != _59)
    goto <bb 33>;
  else
    goto <bb 18>;

  <bb 16>:
  __assert_fail ("vcs_per_dest > 0", "routefunc.cpp", 897, &__PRETTY_FUNCTION__);

  <bb 17>:
  _34 = f_15(D)->dest;
  _35 = vcs_per_dest_33 * _34;
  vcBegin_36 = vcBegin_1 + _35;
  # DEBUG vcBegin => vcBegin_36
  _37 = vcs_per_dest_33 + vcBegin_36;
  vcEnd_38 = _37 + -1;
  # DEBUG vcEnd => vcEnd_38
  # DEBUG vcEnd => vcEnd_38
  # DEBUG vcBegin => vcBegin_36
  if (inject_26(D) != 0)
    goto <bb 32>;
  else
    goto <bb 18>;

  <bb 18>:
  # vcBegin_98 = PHI <vcBegin_36(17), vcBegin_1(15)>
  # vcEnd_47 = PHI <vcEnd_38(17), vcEnd_3(15)>
  # prephitmp_127 = PHI <_34(17), _29(15)>
  # DEBUG vcEnd => vcEnd_47
  # DEBUG vcBegin => vcBegin_98
  gN.58_40 = gN;
  _41 = gN.58_40 * 2;
  if (_41 == in_channel_42(D))
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  pretmp_139 = f_15(D)->ph;
  goto <bb 29>;

  <bb 20>:
  f_15(D)->ph = 0;
  # DEBUG D#211 => f_15(D)->dest
  src_45 = f_15(D)->src;
  # DEBUG src => src_45
  # DEBUG dest => D#211
  # DEBUG intm => 0
  # DEBUG offset => 1
  # DEBUG n => 0
  # DEBUG n => 0
  # DEBUG offset => 1
  # DEBUG intm => 0
  # DEBUG dest => D#211
  # DEBUG src => src_45
  if (gN.58_40 <= 0)
    goto <bb 28>;
  else
    goto <bb 21>;

  <bb 21>:
  pretmp_133 = gK;

  <bb 22>:
  # n_113 = PHI <0(21), n_92(26)>
  # dest_100 = PHI <prephitmp_127(21), dest_90(26)>
  # src_115 = PHI <src_45(21), src_91(26)>
  # offset_110 = PHI <1(21), offset_89(26)>
  # intm_99 = PHI <0(21), intm_93(26)>
  # prephitmp_134 = PHI <pretmp_133(21), gK.47_88(26)>
  # DEBUG n => n_113
  # DEBUG offset => offset_110
  # DEBUG intm => intm_99
  # DEBUG dest => dest_100
  # DEBUG src => src_115
  _66 = dest_100 % prephitmp_134;
  _68 = src_115 % prephitmp_134;
  dist_69 = _66 - _68;
  # DEBUG dist => dist_69
  if (dist_69 > 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG max => dist_69
  _70 = ran_next ();
  _71 = dist_69 + 1;
  _72 = (long int) _71;
  _73 = _70 % _72;
  _74 = (int) _73;
  _75 = _68 + _74;
  _77 = _75 * offset_110;
  intm_79 = _77 + intm_99;
  # DEBUG intm => intm_79
  goto <bb 25>;

  <bb 24>:
  # DEBUG max => -dist_69
  _80 = ran_next ();
  _81 = 1 - dist_69;
  _82 = (long int) _81;
  _83 = _80 % _82;
  _84 = (int) _83;
  _85 = _66 + _84;
  _86 = _85 * offset_110;
  intm_87 = _86 + intm_99;
  # DEBUG intm => intm_87

  <bb 25>:
  # intm_93 = PHI <intm_79(23), intm_87(24)>
  # DEBUG intm => intm_93
  gK.47_88 = gK;
  offset_89 = gK.47_88 * offset_110;
  # DEBUG offset => offset_89
  dest_90 = dest_100 / gK.47_88;
  # DEBUG dest => dest_90
  src_91 = src_115 / gK.47_88;
  # DEBUG src => src_91
  n_92 = n_113 + 1;
  # DEBUG n => n_92
  # DEBUG n => n_92
  # DEBUG offset => offset_89
  # DEBUG intm => intm_93
  # DEBUG dest => dest_90
  # DEBUG src => src_91
  gN.46_62 = gN;
  if (gN.46_62 <= n_92)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 22>;

  <bb 27>:
  # intm_138 = PHI <intm_93(25)>

  <bb 36>:
  pretmp_131 = f_15(D)->ph;

  <bb 28>:
  # intm_112 = PHI <intm_138(36), 0(20)>
  # prephitmp_132 = PHI <pretmp_131(36), 0(20)>

  <bb 37>:
  f_15(D)->intm = intm_112;

  <bb 29>:
  # prephitmp_140 = PHI <pretmp_139(19), prephitmp_132(37)>
  if (prephitmp_140 == 0)
    goto <bb 30>;
  else
    goto <bb 35>;

  <bb 30>:
  _60 = MEM[(int *)r_28(D) + 96B];
  # DEBUG D#14 => r_28(D)
  # DEBUG this => D#14
  _50 = f_15(D)->intm;
  if (_50 == _60)
    goto <bb 34>;
  else
    goto <bb 31>;

  <bb 31>:
  # iftmp.61_8 = PHI <_50(30), iftmp.61_54(38)>
  # prephitmp_130 = PHI <_60(30), pretmp_129(38)>

  <bb 39>:
  # DEBUG D#14 => r_28(D)
  # DEBUG this => D#14
  out_port_55 = dor_next_mesh (prephitmp_130, iftmp.61_8, 0);
  # DEBUG out_port => out_port_55

  <bb 32>:
  # out_port_5 = PHI <-1(17), out_port_55(39)>
  # vcBegin_111 = PHI <vcBegin_36(17), vcBegin_98(39)>
  # vcEnd_107 = PHI <vcEnd_38(17), vcEnd_47(39)>
  # DEBUG out_port => out_port_5
  OutputSet::Clear (outputs_56(D));
  OutputSet::AddRange (outputs_56(D), out_port_5, vcBegin_111, vcEnd_107, 0);
  return;

  <bb 33>:
  _30 = vcEnd_3 - vcBegin_1;
  _31 = _30 + 1;
  gNodes.57_32 = gNodes;
  vcs_per_dest_33 = _31 / gNodes.57_32;
  # DEBUG vcs_per_dest => vcs_per_dest_33
  if (vcs_per_dest_33 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 34>:
  f_15(D)->ph = 1;

  <bb 35>:

  <bb 38>:
  iftmp.61_54 = f_15(D)->dest;
  pretmp_129 = MEM[(int *)r_28(D) + 96B];
  goto <bb 31>;

}



;; Function void dor_next_torus(int, int, int, int*, int*, bool) (_Z14dor_next_torusiiiPiS_b, funcdef_no=1972, decl_uid=45497, cgraph_uid=471, symbol_order=482)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void dor_next_torus(int, int, int, int*, int*, bool) (int cur, int dest, int in_port, int * out_port, int * partition, bool balance)
{
  int dist2;
  int dir;
  int dim_left;
  int _14;
  int _15;
  int _20;
  int _21;
  int _27;
  int _28;
  int _29;
  int _30;
  long int _32;
  int _33;
  int _35;
  int _36;
  int cstore_37;
  int _40;
  bool _43;
  bool _47;
  bool _48;
  bool _50;
  bool _51;
  int gK.24_52;
  int _53;
  int _54;
  int gK.24_55;
  int _56;
  int _57;
  int _62;
  long int _64;
  long int _65;
  int _66;
  long int _67;
  int _68;
  int prephitmp_74;
  bool _77;
  int prephitmp_79;
  int gN.23_80;
  bool _82;
  int gK.24_85;
  bool _86;
  bool _87;
  bool _89;
  bool prephitmp_91;
  bool prephitmp_92;
  int _100;
  int _101;

  <bb 2>:
  # DEBUG dim_left => 0
  # DEBUG dim_left => 0
  # DEBUG dest => dest_10(D)
  # DEBUG cur => cur_9(D)
  gN.23_80 = gN;
  if (gN.23_80 <= 0)
    goto <bb 26>;
  else
    goto <bb 3>;

  <bb 3>:
  gK.24_85 = gK;
  _66 = cur_9(D) % gK.24_85;
  _40 = dest_10(D) % gK.24_85;
  if (_40 != _66)
    goto <bb 25>;
  else
    goto <bb 7>;

  <bb 4>:
  _14 = cur_16 % gK.24_85;
  _15 = dest_17 % gK.24_85;
  if (_14 != _15)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # _101 = PHI <_14(4)>
  # _100 = PHI <_15(4)>
  # dim_left_97 = PHI <dim_left_18(4)>
  goto <bb 25>;

  <bb 6>:
  goto <bb 8>;

  <bb 7>:

  <bb 8>:
  # cur_41 = PHI <cur_9(D)(7), cur_16(6)>
  # dest_72 = PHI <dest_10(D)(7), dest_17(6)>
  # dim_left_70 = PHI <0(7), dim_left_18(6)>
  # DEBUG dim_left => dim_left_70
  # DEBUG dest => dest_72
  # DEBUG cur => cur_41
  cur_16 = cur_41 / gK.24_85;
  # DEBUG cur => cur_16
  dest_17 = dest_72 / gK.24_85;
  # DEBUG dest => dest_17
  dim_left_18 = dim_left_70 + 1;
  # DEBUG dim_left => dim_left_18
  # DEBUG dim_left => dim_left_18
  # DEBUG dest => dest_17
  # DEBUG cur => cur_16
  if (dim_left_18 >= gN.23_80)
    goto <bb 26>;
  else
    goto <bb 4>;

  <bb 9>:
  # DEBUG cur => NULL
  # DEBUG dest => NULL
  _27 = prephitmp_79 - prephitmp_74;
  _28 = _27 + gK.24_85;
  _29 = _28 % gK.24_85;
  _30 = _29 * -2;
  dist2_31 = _30 + gK.24_85;
  # DEBUG dist2 => dist2_31
  if (dist2_31 > 0)
    goto <bb 28>;
  else
    goto <bb 10>;

  <bb 10>:
  if (dist2_31 == 0)
    goto <bb 11>;
  else
    goto <bb 27>;

  <bb 11>:
  # DEBUG max => 1
  _64 = ran_next ();
  _65 = _64 % 2;
  if (_65 != 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 12>:
  # dir_4 = PHI <0(30), 1(29)>
  # cstore_37 = PHI <_33(30), _36(29)>
  # prephitmp_91 = PHI <1(30), 0(29)>
  # prephitmp_92 = PHI <0(30), 1(29)>
  *out_port_22(D) = cstore_37;
  # DEBUG dir => dir_4
  if (partition_38(D) != 0B)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 13>:
  if (balance_39(D) != 0)
    goto <bb 14>;
  else
    goto <bb 22>;

  <bb 14>:
  _47 = prephitmp_74 > prephitmp_79;
  _48 = _47 & prephitmp_91;
  if (_48 != 0)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  _50 = prephitmp_74 < prephitmp_79;
  _51 = _50 & prephitmp_92;
  if (_51 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:

  <bb 32>:
  *partition_38(D) = 1;
  goto <bb 24>;

  <bb 17>:
  if (dir_4 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  gK.24_52 = gK;
  _53 = gK.24_52 + -1;
  _54 = _53 / 2;
  _89 = _54 < prephitmp_79;
  _86 = _54 >= prephitmp_74;
  _82 = _86 & _89;
  if (_82 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 19>:
  gK.24_55 = gK;
  _56 = gK.24_55 + -1;
  _57 = _56 / 2;
  _43 = _57 >= prephitmp_79;
  _77 = _57 < prephitmp_74;
  _87 = _43 & _77;
  if (_87 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:

  <bb 31>:
  *partition_38(D) = 0;
  goto <bb 24>;

  <bb 21>:
  # DEBUG max => 1
  _32 = ran_next ();
  _67 = _32 % 2;
  _68 = (int) _67;
  *partition_38(D) = _68;
  goto <bb 24>;

  <bb 22>:
  if (prephitmp_74 > prephitmp_79)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 23>:
  _21 = in_port_19(D) ^ 1;
  *out_port_22(D) = _21;

  <bb 24>:

  <bb 34>:
  return;

  <bb 25>:
  # dim_left_6 = PHI <dim_left_97(5), 0(3)>
  # prephitmp_74 = PHI <_101(5), _66(3)>
  # prephitmp_79 = PHI <_100(5), _40(3)>
  _20 = in_port_19(D) / 2;
  if (dim_left_6 != _20)
    goto <bb 9>;
  else
    goto <bb 23>;

  <bb 26>:

  <bb 33>:
  _62 = gN.23_80 * 2;
  *out_port_22(D) = _62;
  goto <bb 24>;

  <bb 27>:

  <bb 29>:
  _35 = dim_left_6 * 2;
  _36 = _35 + 1;
  # DEBUG dir => 1
  goto <bb 12>;

  <bb 28>:

  <bb 30>:
  _33 = dim_left_6 * 2;
  # DEBUG dir => 0
  goto <bb 12>;

}



;; Function void min_adapt_torus(const Router*, const Flit*, int, OutputSet*, bool) (_Z15min_adapt_torusPK6RouterPK4FlitiP9OutputSetb, funcdef_no=1987, decl_uid=45738, cgraph_uid=486, symbol_order=497)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void min_adapt_torus(const Router*, const Flit*, int, OutputSet*, bool) (const struct Router * r, const struct Flit * f, int in_channel, struct OutputSet * outputs, bool inject)
{
  int dist2;
  int n;
  int out_port;
  int dest;
  int cur;
  int in_vc;
  static const char __PRETTY_FUNCTION__[72] = "void min_adapt_torus(const Router*, const Flit*, int, OutputSet*, bool)";
  int vcBegin;
  int gNumVCs.127_14;
  FlitType _17;
  bool _20;
  bool _26;
  int _29;
  int _35;
  int gN.129_36;
  int _37;
  int gN.129_39;
  int _40;
  int _44;
  int _47;
  int _48;
  int _49;
  int _50;
  int _51;
  int _52;
  int _54;
  int _55;
  int _56;
  int _58;
  int _59;
  int * _65;
  int * _69;
  int _71;
  int out_port.131_72;
  int out_port.131_74;
  const int _79;
  bool _82;
  bool _83;
  const int pretmp_106;
  const int prephitmp_107;
  const int pretmp_108;
  const int prephitmp_109;
  int pretmp_110;
  int prephitmp_111;
  const int pretmp_112;
  const int prephitmp_113;
  const int pretmp_114;
  const int prephitmp_115;
  int pretmp_116;
  int prephitmp_117;
  int prephitmp_126;
  int pretmp_127;
  int pretmp_128;
  int prephitmp_129;
  int prephitmp_131;
  int pretmp_132;
  int pretmp_133;
  int prephitmp_134;

  <bb 2>:
  # DEBUG vcBegin => 0
  # DEBUG D#224 => gNumVCs
  # DEBUG vcEnd => D#224 + -1
  _17 = f_16(D)->type;
  if (_17 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  vcBegin_18 = gReadReqBeginVC;
  # DEBUG vcBegin => vcBegin_18
  in_vc_19 = gReadReqEndVC;
  # DEBUG vcEnd => in_vc_19
  goto <bb 11>;

  <bb 4>:
  if (_17 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vcBegin_21 = gWriteReqBeginVC;
  # DEBUG vcBegin => vcBegin_21
  in_vc_22 = gWriteReqEndVC;
  # DEBUG vcEnd => in_vc_22
  goto <bb 11>;

  <bb 6>:
  if (_17 == 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  vcBegin_24 = gReadReplyBeginVC;
  # DEBUG vcBegin => vcBegin_24
  in_vc_25 = gReadReplyEndVC;
  # DEBUG vcEnd => in_vc_25
  goto <bb 11>;

  <bb 8>:
  gNumVCs.127_14 = gNumVCs;
  if (_17 == 3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  in_vc_15 = gNumVCs.127_14 + -1;
  goto <bb 11>;

  <bb 10>:
  vcBegin_27 = gWriteReplyBeginVC;
  # DEBUG vcBegin => vcBegin_27
  in_vc_28 = gWriteReplyEndVC;
  # DEBUG vcEnd => in_vc_28

  <bb 11>:
  # vcBegin_1 = PHI <vcBegin_18(3), vcBegin_21(5), vcBegin_24(7), 0(9), vcBegin_27(10)>
  # in_vc_2 = PHI <in_vc_19(3), in_vc_22(5), in_vc_25(7), in_vc_15(9), in_vc_28(10)>

  <bb 42>:
  # DEBUG vcEnd => in_vc_2
  # DEBUG vcBegin => vcBegin_1
  _29 = f_16(D)->vc;
  _82 = in_vc_2 < _29;
  _20 = vcBegin_1 > _29;
  _83 = _20 | _82;
  if (_83 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _26 = _29 >= 0;
  if (_26 >= inject_30(D))
    goto <bb 13>;
  else
    goto <bb 37>;

  <bb 13>:
  __assert_fail ("((f->vc >= vcBegin) && (f->vc <= vcEnd)) || (inject && (f->vc < 0))", "routefunc.cpp", 1734, &__PRETTY_FUNCTION__);

  <bb 14>:
  OutputSet::Clear (outputs_32(D));
  if (inject_30(D) != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  OutputSet::AddRange (outputs_32(D), -1, vcBegin_1, in_vc_2, 0);
  out_port ={v} {CLOBBER};
  goto <bb 36>;

  <bb 16>:
  _79 = MEM[(int *)r_34(D) + 96B];
  # DEBUG D#14 => r_34(D)
  # DEBUG this => D#14
  _35 = f_16(D)->dest;
  if (_35 == _79)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  gN.129_36 = gN;
  _37 = gN.129_36 * 2;
  OutputSet::AddRange (outputs_32(D), _37, vcBegin_1, in_vc_2, 0);
  pretmp_106 = f_16(D)->dest;
  pretmp_108 = MEM[(int *)r_34(D) + 96B];

  <bb 18>:
  # prephitmp_107 = PHI <_35(16), pretmp_106(17)>
  # prephitmp_109 = PHI <_79(16), pretmp_108(17)>

  <bb 39>:
  gN.129_39 = gN;
  _40 = gN.129_39 * 2;
  if (_40 == in_channel_41(D))
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  in_vc_42 = f_16(D)->vc;
  # DEBUG in_vc => in_vc_42

  <bb 20>:
  # in_vc_3 = PHI <in_vc_2(39), in_vc_42(19)>

  <bb 41>:
  # DEBUG in_vc => in_vc_3
  # DEBUG D#223 => MEM[(int *)r_34(D) + 96B]
  # DEBUG D#14 => r_34(D)
  # DEBUG this => D#14
  # DEBUG cur => NULL
  # DEBUG D#222 => f_16(D)->dest
  # DEBUG dest => D#222
  _44 = vcBegin_1 + 1;
  if (in_vc_3 > _44)
    goto <bb 21>;
  else
    goto <bb 31>;

  <bb 21>:
  # DEBUG n => 0
  # DEBUG dest => D#222
  # DEBUG cur => D#223
  if (gN.129_39 <= 0)
    goto <bb 30>;
  else
    goto <bb 22>;

  <bb 22>:
  pretmp_116 = gK;

  <bb 23>:
  # cur_94 = PHI <prephitmp_109(22), cur_62(28)>
  # dest_86 = PHI <prephitmp_107(22), dest_63(28)>
  # n_96 = PHI <0(22), n_64(28)>
  # prephitmp_117 = PHI <pretmp_116(22), prephitmp_129(28)>
  # prephitmp_126 = PHI <gN.129_39(22), prephitmp_134(28)>
  # DEBUG n => n_96
  # DEBUG dest => dest_86
  # DEBUG cur => cur_94
  _47 = cur_94 % prephitmp_117;
  _48 = dest_86 % prephitmp_117;
  if (_47 != _48)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  _49 = _48 - _47;
  _50 = _49 + prephitmp_117;
  _51 = _50 % prephitmp_117;
  _52 = _51 * -2;
  dist2_53 = _52 + prephitmp_117;
  # DEBUG dist2 => dist2_53
  if (dist2_53 > 0)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  _58 = vcBegin_1 + 3;
  _59 = n_96 * 2;
  OutputSet::AddRange (outputs_32(D), _59, _58, _58, 1);
  pretmp_128 = gK;
  pretmp_133 = gN;
  goto <bb 27>;

  <bb 26>:
  _54 = vcBegin_1 + 3;
  _55 = n_96 * 2;
  _56 = _55 + 1;
  OutputSet::AddRange (outputs_32(D), _56, _54, _54, 1);
  pretmp_127 = gK;
  pretmp_132 = gN;

  <bb 27>:
  # prephitmp_129 = PHI <prephitmp_117(23), pretmp_127(26), pretmp_128(25)>
  # prephitmp_134 = PHI <prephitmp_126(23), pretmp_132(26), pretmp_133(25)>
  cur_62 = cur_94 / prephitmp_129;
  # DEBUG cur => cur_62
  dest_63 = dest_86 / prephitmp_129;
  # DEBUG dest => dest_63
  n_64 = n_96 + 1;
  # DEBUG n => n_64
  # DEBUG n => n_64
  # DEBUG dest => dest_63
  # DEBUG cur => cur_62
  if (n_64 >= prephitmp_134)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 23>;

  <bb 29>:
  # prephitmp_131 = PHI <prephitmp_134(27)>

  <bb 38>:
  pretmp_110 = prephitmp_131 * 2;
  pretmp_112 = f_16(D)->dest;
  pretmp_114 = MEM[(int *)r_34(D) + 96B];

  <bb 30>:
  # prephitmp_111 = PHI <pretmp_110(38), _40(21)>
  # prephitmp_113 = PHI <pretmp_112(38), prephitmp_107(21)>
  # prephitmp_115 = PHI <pretmp_114(38), prephitmp_109(21)>
  _65 = &f_16(D)->ph;
  # DEBUG D#14 => r_34(D)
  # DEBUG this => D#14
  dor_next_torus (prephitmp_115, prephitmp_113, prephitmp_111, &out_port, _65, 0);
  goto <bb 32>;

  <bb 31>:
  _69 = &f_16(D)->ph;
  dor_next_torus (prephitmp_109, prephitmp_107, in_channel_41(D), &out_port, _69, 0);

  <bb 32>:
  _71 = f_16(D)->ph;
  if (_71 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  out_port.131_72 = out_port;
  OutputSet::AddRange (outputs_32(D), out_port.131_72, vcBegin_1, vcBegin_1, 0);
  goto <bb 35>;

  <bb 34>:
  out_port.131_74 = out_port;
  OutputSet::AddRange (outputs_32(D), out_port.131_74, _44, _44, 0);

  <bb 35>:
  out_port ={v} {CLOBBER};

  <bb 36>:

  <bb 40>:
  return;

  <bb 37>:
  OutputSet::Clear (outputs_32(D));
  goto <bb 15>;

}



;; Function int rand_min_intr_mesh(int, int) (_Z18rand_min_intr_meshii, funcdef_no=1976, decl_uid=45570, cgraph_uid=475, symbol_order=486)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int rand_min_intr_mesh(int, int) (int src, int dest)
{
  int n;
  int offset;
  int intm;
  int dist;
  int pretmp_7;
  int gN.46_12;
  int _14;
  int _15;
  long int _17;
  int _18;
  int _19;
  int _22;
  int _23;
  int gK.47_25;
  long int _30;
  int _31;
  long int _32;
  long int _33;
  int _34;
  int _35;
  long int _36;
  long int _37;
  int _38;
  int prephitmp_45;
  int gN.46_46;

  <bb 2>:
  # DEBUG intm => 0
  # DEBUG offset => 1
  # DEBUG n => 0
  # DEBUG n => 0
  # DEBUG offset => 1
  # DEBUG intm => 0
  # DEBUG dest => dest_10(D)
  # DEBUG src => src_9(D)
  gN.46_46 = gN;
  if (gN.46_46 <= 0)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_7 = gK;

  <bb 4>:
  # src_47 = PHI <src_9(D)(3), src_28(9)>
  # dest_48 = PHI <dest_10(D)(3), dest_27(9)>
  # intm_49 = PHI <0(3), intm_4(9)>
  # offset_51 = PHI <1(3), offset_26(9)>
  # n_52 = PHI <0(3), n_29(9)>
  # prephitmp_45 = PHI <pretmp_7(3), gK.47_25(9)>
  # DEBUG n => n_52
  # DEBUG offset => offset_51
  # DEBUG intm => intm_49
  # DEBUG dest => dest_48
  # DEBUG src => src_47
  _14 = dest_48 % prephitmp_45;
  _15 = src_47 % prephitmp_45;
  dist_16 = _14 - _15;
  # DEBUG dist => dist_16
  if (dist_16 > 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG max => dist_16
  _30 = ran_next ();
  _31 = dist_16 + 1;
  _32 = (long int) _31;
  _33 = _30 % _32;
  _34 = (int) _33;
  _18 = _15 + _34;
  _19 = _18 * offset_51;
  intm_20 = _19 + intm_49;
  # DEBUG intm => intm_20
  goto <bb 7>;

  <bb 6>:
  # DEBUG max => -dist_16
  _17 = ran_next ();
  _35 = 1 - dist_16;
  _36 = (long int) _35;
  _37 = _17 % _36;
  _38 = (int) _37;
  _22 = _14 + _38;
  _23 = _22 * offset_51;
  intm_24 = _23 + intm_49;
  # DEBUG intm => intm_24

  <bb 7>:
  # intm_4 = PHI <intm_20(5), intm_24(6)>
  # DEBUG intm => intm_4
  gK.47_25 = gK;
  offset_26 = gK.47_25 * offset_51;
  # DEBUG offset => offset_26
  dest_27 = dest_48 / gK.47_25;
  # DEBUG dest => dest_27
  src_28 = src_47 / gK.47_25;
  # DEBUG src => src_28
  n_29 = n_52 + 1;
  # DEBUG n => n_29
  # DEBUG n => n_29
  # DEBUG offset => offset_26
  # DEBUG intm => intm_4
  # DEBUG dest => dest_27
  # DEBUG src => src_28
  gN.46_12 = gN;
  if (gN.46_12 <= n_29)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # intm_43 = PHI <intm_4(7)>

  <bb 11>:
  goto <bb 10>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # intm_50 = PHI <intm_43(11), 0(2)>

  <bb 12>:
  return intm_50;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >*] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE8_M_eraseEPSt13_Rb_tree_nodeISI_E, funcdef_no=2120, decl_uid=44859, cgraph_uid=619, symbol_order=630)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  char * const _7;
  char * const _11;
  const char * _12;
  const char * _16;
  char * const _21;
  const char * _22;
  char * const _27;
  const char * _28;
  char * const _33;
  const char * _34;
  char * const _39;
  const char * _40;
  char * const _45;
  const char * _46;
  char * const _51;
  const char * _52;
  struct _Rb_tree_node_base * _54;
  char * const _57;
  const char * _58;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_149 = PHI <__x_3(D)(4), __x_10(56)>
  # DEBUG __x => __x_149
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 24B];
  # DEBUG D#36 => __x_149
  # DEBUG __x => D#36
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_10 = MEM[(struct _Rb_tree_node_base * *)__x_149 + 16B];
  # DEBUG D#37 => __x_149
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_149
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_149
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_149
  # DEBUG D#86 => &__x_149->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _11 = MEM[(char * *)__x_149 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _12 = &MEM[(const struct basic_string *)__x_149 + 32B].D.14356._M_local_buf;
  if (_11 != _12)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 7>:

  <bb 8>:
  # __x_152 = PHI <__x_9(7), __x_14(53)>
  # DEBUG __x => __x_152
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 24B];
  # DEBUG D#36 => __x_152
  # DEBUG __x => D#36
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_14 = MEM[(struct _Rb_tree_node_base * *)__x_152 + 16B];
  # DEBUG D#37 => __x_152
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_152
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_152
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_152
  # DEBUG D#86 => &__x_152->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _7 = MEM[(char * *)__x_152 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _16 = &MEM[(const struct basic_string *)__x_152 + 32B].D.14356._M_local_buf;
  if (_7 != _16)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 10>:

  <bb 11>:
  # __x_155 = PHI <__x_13(10), __x_19(50)>
  # DEBUG __x => __x_155
  __x_18 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 24B];
  # DEBUG D#36 => __x_155
  # DEBUG __x => D#36
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_18
  # DEBUG __x => __x_18
  if (__x_18 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_155 + 16B];
  # DEBUG D#37 => __x_155
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_155
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_155
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_155
  # DEBUG D#86 => &__x_155->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _21 = MEM[(char * *)__x_155 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _22 = &MEM[(const struct basic_string *)__x_155 + 32B].D.14356._M_local_buf;
  if (_21 != _22)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 13>:

  <bb 14>:
  # __x_158 = PHI <__x_18(13), __x_25(47)>
  # DEBUG __x => __x_158
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 24B];
  # DEBUG D#36 => __x_158
  # DEBUG __x => D#36
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_25 = MEM[(struct _Rb_tree_node_base * *)__x_158 + 16B];
  # DEBUG D#37 => __x_158
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_158
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_158
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_158
  # DEBUG D#86 => &__x_158->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _27 = MEM[(char * *)__x_158 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _28 = &MEM[(const struct basic_string *)__x_158 + 32B].D.14356._M_local_buf;
  if (_27 != _28)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 16>:

  <bb 17>:
  # __x_161 = PHI <__x_24(16), __x_31(44)>
  # DEBUG __x => __x_161
  __x_30 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 24B];
  # DEBUG D#36 => __x_161
  # DEBUG __x => D#36
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_30
  # DEBUG __x => __x_30
  if (__x_30 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_161 + 16B];
  # DEBUG D#37 => __x_161
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_161
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_161
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_161
  # DEBUG D#86 => &__x_161->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _33 = MEM[(char * *)__x_161 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _34 = &MEM[(const struct basic_string *)__x_161 + 32B].D.14356._M_local_buf;
  if (_33 != _34)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 19>:

  <bb 20>:
  # __x_164 = PHI <__x_30(19), __x_37(41)>
  # DEBUG __x => __x_164
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 24B];
  # DEBUG D#36 => __x_164
  # DEBUG __x => D#36
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_37 = MEM[(struct _Rb_tree_node_base * *)__x_164 + 16B];
  # DEBUG D#37 => __x_164
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_164
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_164
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_164
  # DEBUG D#86 => &__x_164->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _39 = MEM[(char * *)__x_164 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _40 = &MEM[(const struct basic_string *)__x_164 + 32B].D.14356._M_local_buf;
  if (_39 != _40)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 22>:

  <bb 23>:
  # __x_167 = PHI <__x_36(22), __x_43(38)>
  # DEBUG __x => __x_167
  __x_42 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 24B];
  # DEBUG D#36 => __x_167
  # DEBUG __x => D#36
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_42
  # DEBUG __x => __x_42
  if (__x_42 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_43 = MEM[(struct _Rb_tree_node_base * *)__x_167 + 16B];
  # DEBUG D#37 => __x_167
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_167
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_167
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_167
  # DEBUG D#86 => &__x_167->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _45 = MEM[(char * *)__x_167 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _46 = &MEM[(const struct basic_string *)__x_167 + 32B].D.14356._M_local_buf;
  if (_45 != _46)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 25>:

  <bb 26>:
  # __x_170 = PHI <__x_42(25), __x_49(35)>
  # DEBUG __x => __x_170
  __x_48 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 24B];
  # DEBUG D#36 => __x_170
  # DEBUG __x => D#36
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_48
  # DEBUG __x => __x_48
  if (__x_48 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_49 = MEM[(struct _Rb_tree_node_base * *)__x_170 + 16B];
  # DEBUG D#37 => __x_170
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_170
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_170
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_170
  # DEBUG D#86 => &__x_170->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _51 = MEM[(char * *)__x_170 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _52 = &MEM[(const struct basic_string *)__x_170 + 32B].D.14356._M_local_buf;
  if (_51 != _52)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 28>:

  <bb 29>:
  # __x_173 = PHI <__x_48(28), __x_55(32)>
  # DEBUG __x => __x_173
  _54 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 24B];
  # DEBUG D#36 => __x_173
  # DEBUG __x => D#36
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_M_erase (this_6(D), _54);
  __x_55 = MEM[(struct _Rb_tree_node_base * *)__x_173 + 16B];
  # DEBUG D#37 => __x_173
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => this_6(D)
  # DEBUG __p => __x_173
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_173
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_173
  # DEBUG D#86 => &__x_173->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _57 = MEM[(char * *)__x_173 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _58 = &MEM[(const struct basic_string *)__x_173 + 32B].D.14356._M_local_buf;
  if (_57 != _58)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _57
  # DEBUG this => D#45
  # DEBUG D.55744 => D#46
  operator delete (_57);

  <bb 31>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_173 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_173
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_173
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_173
  # DEBUG this => D#75
  # DEBUG D.55757 => D#76
  operator delete (__x_173);
  # DEBUG __x => __x_55
  if (__x_55 == 0B)
    goto <bb 27>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 29>;

  <bb 33>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _51
  # DEBUG this => D#45
  # DEBUG D.55711 => D#46
  operator delete (_51);

  <bb 34>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_170 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_170
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_170
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_170
  # DEBUG this => D#75
  # DEBUG D.55724 => D#76
  operator delete (__x_170);
  # DEBUG __x => __x_49
  if (__x_49 == 0B)
    goto <bb 24>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 26>;

  <bb 36>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _45
  # DEBUG this => D#45
  # DEBUG D.55678 => D#46
  operator delete (_45);

  <bb 37>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_167 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_167
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_167
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_167
  # DEBUG this => D#75
  # DEBUG D.55691 => D#76
  operator delete (__x_167);
  # DEBUG __x => __x_43
  if (__x_43 == 0B)
    goto <bb 21>;
  else
    goto <bb 38>;

  <bb 38>:
  goto <bb 23>;

  <bb 39>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _39
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _39
  # DEBUG this => D#45
  # DEBUG D.55645 => D#46
  operator delete (_39);

  <bb 40>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_164 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_164
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_164
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_164
  # DEBUG this => D#75
  # DEBUG D.55658 => D#76
  operator delete (__x_164);
  # DEBUG __x => __x_37
  if (__x_37 == 0B)
    goto <bb 18>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 20>;

  <bb 42>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _33
  # DEBUG this => D#45
  # DEBUG D.55612 => D#46
  operator delete (_33);

  <bb 43>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_161 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_161
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_161
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_161
  # DEBUG this => D#75
  # DEBUG D.55625 => D#76
  operator delete (__x_161);
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 15>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 17>;

  <bb 45>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _27
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _27
  # DEBUG this => D#45
  # DEBUG D.55579 => D#46
  operator delete (_27);

  <bb 46>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_158 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_158
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_158
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_158
  # DEBUG this => D#75
  # DEBUG D.55592 => D#76
  operator delete (__x_158);
  # DEBUG __x => __x_25
  if (__x_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 14>;

  <bb 48>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _21
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _21
  # DEBUG this => D#45
  # DEBUG D.55546 => D#46
  operator delete (_21);

  <bb 49>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_155 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_155
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_155
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_155
  # DEBUG this => D#75
  # DEBUG D.55559 => D#76
  operator delete (__x_155);
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 9>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 11>;

  <bb 51>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _7
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _7
  # DEBUG this => D#45
  # DEBUG D.55513 => D#46
  operator delete (_7);

  <bb 52>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_152 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_152
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_152
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_152
  # DEBUG this => D#75
  # DEBUG D.55526 => D#76
  operator delete (__x_152);
  # DEBUG __x => __x_14
  if (__x_14 == 0B)
    goto <bb 6>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 8>;

  <bb 54>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _11
  # DEBUG this => D#45
  # DEBUG D.55480 => D#46
  operator delete (_11);

  <bb 55>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_149 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_149
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_149
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_149
  # DEBUG this => D#75
  # DEBUG D.55493 => D#76
  operator delete (__x_149);
  # DEBUG __x => __x_10
  if (__x_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 5>;

}



;; Function std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::~map() (_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvPK6RouterPK4FlitiP9OutputSetbESt4lessIS5_ESaISt4pairIKS5_SF_EEED2Ev, funcdef_no=2316, decl_uid=47615, cgraph_uid=814, symbol_order=856)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::~map() (struct map * const this)
{
  struct _Rb_tree_node * __x;
  struct _Rep_type * _2;
  char * const _4;
  struct _Rb_tree_node_base * _12;
  const char * _15;

  <bb 2>:
  _2 = &this_1(D)->_M_t;
  # DEBUG this => _2
  __x_6 = MEM[(struct _Rb_tree_node_base * *)this_1(D) + 16B];
  # DEBUG D#31 => _2
  # DEBUG this => D#31
  # DEBUG this => _2
  # DEBUG __x => __x_6
  # DEBUG __x => __x_6
  if (__x_6 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#92 => &MEM[(struct _Rb_tree *)_2]._M_impl
  # DEBUG this => D#92
  # DEBUG this => D#92
  # DEBUG this => D#92
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __x_25 = PHI <__x_6(4), __x_13(8)>
  # DEBUG __x => __x_25
  _12 = MEM[(struct _Rb_tree_node_base * *)__x_25 + 24B];
  # DEBUG D#36 => __x_25
  # DEBUG __x => D#36
  std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_M_erase (_2, _12);
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_25 + 16B];
  # DEBUG D#37 => __x_25
  # DEBUG __x => D#37
  # DEBUG __y => NULL
  # DEBUG D#91 => _2
  # DEBUG __p => __x_25
  # DEBUG this => D#91
  # DEBUG D#90 => D#91
  # DEBUG D#89 => D#91
  # DEBUG D#88 => D#89
  # DEBUG __p => __x_25
  # DEBUG this => D#88
  # DEBUG D#87 => D#88
  # DEBUG this => __x_25
  # DEBUG D#86 => &__x_25->_M_value_field
  # DEBUG __r => D#86
  # DEBUG D#85 => D#87
  # DEBUG this => D#85
  # DEBUG D#84 => D#85
  # DEBUG this => D#84
  # DEBUG this => NULL
  # DEBUG D.52298 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#86
  # DEBUG this => D#61
  # DEBUG this => D#86
  # DEBUG D#56 => &D#86->first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _4 = MEM[(char * *)__x_25 + 32B];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  _15 = &MEM[(const struct basic_string *)__x_25 + 32B].D.14356._M_local_buf;
  if (_4 != _15)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _4
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _4
  # DEBUG this => D#45
  # DEBUG D.55782 => D#46
  operator delete (_4);

  <bb 7>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  MEM[(struct  &)__x_25 + 32] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#82 => D#90
  # DEBUG __p => __x_25
  # DEBUG this => D#82
  # DEBUG D#81 => D#82
  # DEBUG this => D#81
  # DEBUG D#80 => 1
  # DEBUG __p => __x_25
  # DEBUG __a => D#79
  # DEBUG __n => D#80
  # DEBUG D#78 => D#80
  # DEBUG D#77 => D#79
  # DEBUG D#75 => D#77
  # DEBUG D#76 => D#78
  # DEBUG __p => __x_25
  # DEBUG this => D#75
  # DEBUG D.55795 => D#76
  operator delete (__x_25);
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 5>;

}



;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE24_M_get_insert_unique_posERS7_, funcdef_no=2261, decl_uid=44811, cgraph_uid=760, symbol_order=771)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>] (struct _Rb_tree * const this, const struct key_type & __k)
{
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.55832;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.55817;
  struct _Rb_tree_node_base * const __j$_M_node;
  bool __comp;
  struct _Rb_tree_node_base * const D.47482;
  struct _Rb_tree_node_base * const D.47483;
  struct pair D.50328;
  const size_type pretmp_1;
  char * const prephitmp_13;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node_base * _22;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node_base * _24;
  const size_type _34;
  char * const _37;
  long unsigned int _40;
  char * const pretmp_44;
  long unsigned int _52;
  const size_type prephitmp_61;
  char * const pretmp_64;
  char * const prephitmp_65;
  const size_type pretmp_67;
  const size_type pretmp_76;
  const size_type prephitmp_77;
  const size_type prephitmp_78;
  const size_type pretmp_79;
  char * const pretmp_80;
  char * const _83;
  const size_type _84;

  <bb 2>:
  _21 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 16B];
  # DEBUG D#31 => this_9(D)
  # DEBUG this => D#31
  # DEBUG __x => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#256 => &this_9(D)->_M_impl._M_header
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => D#256
  # DEBUG __x => _21
  if (_21 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = &this_9(D)->_M_impl._M_header;
  goto <bb 15>;

  <bb 4>:
  pretmp_1 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_44 = MEM[(char * *)__k_12(D)];
  goto <bb 7>;

  <bb 5>:
  # _6 = PHI <_22(27), _23(28)>
  # __comp_56 = PHI <0(27), 1(28)>
  # DEBUG __comp => __comp_56
  # DEBUG __y => _10
  # DEBUG __x => _6
  if (_6 == 0B)
    goto <bb 14>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # _10 = PHI <_21(4), _6(6)>
  # DEBUG __comp => 1
  # DEBUG __x => _10
  # DEBUG __y => _10
  # DEBUG __x => _10
  # DEBUG __x => _10
  # DEBUG this => _10
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)_10]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#236 => &MEM[(const struct pair &)_10 + 32].first
  # DEBUG D#100 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#59 => D#100
  # DEBUG __x => __k_12(D)
  # DEBUG __y => D#236
  # DEBUG this => D#59
  # DEBUG __lhs => __k_12(D)
  # DEBUG __rhs => D#236
  # DEBUG this => __k_12(D)
  # DEBUG __str => D#236
  # DEBUG D#255 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __size => D#255
  _34 = MEM[(long unsigned int *)_10 + 40B];
  # DEBUG D#1 => D#236
  # DEBUG this => D#1
  # DEBUG __osize => _34
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_87 = MIN_EXPR <pretmp_1, _34>;
  # DEBUG __len => D#234
  # DEBUG this => D#236
  _37 = MEM[(char * *)_10 + 32B];
  # DEBUG D#3 => D#236
  # DEBUG this => D#3
  # DEBUG D#254 => MEM[(char * *)__k_12(D)]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#254
  # DEBUG __s2 => _37
  # DEBUG __n => D#234
  __r_39 = __builtin_memcmp (pretmp_44, _37, __len_87);
  # DEBUG __r => NULL
  if (__r_39 == 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG __n1 => D#255
  # DEBUG __n2 => _34
  _40 = pretmp_1 - _34;
  __d_41 = (const difference_type) _40;
  # DEBUG __d => __d_41
  if (__d_41 > 2147483647)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  if (__d_41 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  __r_42 = (int) _40;

  <bb 11>:
  # __r_43 = PHI <__r_39(7), __r_42(10)>
  # DEBUG __r => __r_43
  # DEBUG D#242 => {CLOBBER}
  # DEBUG __size => D#242
  # DEBUG D#243 => {CLOBBER}
  # DEBUG __osize => D#243
  # DEBUG __comp => __r_43 < 0
  if (__r_43 < 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:

  <bb 28>:
  # DEBUG __r => NULL
  # DEBUG __comp => 1
  _23 = MEM[(struct _Rb_tree_node_base * *)_10 + 16B];
  # DEBUG D#37 => _10
  # DEBUG __x => D#37
  goto <bb 5>;

  <bb 13>:

  <bb 27>:
  # DEBUG __r => NULL
  # DEBUG __comp => 0
  _22 = MEM[(struct _Rb_tree_node_base * *)_10 + 24B];
  # DEBUG D#36 => _10
  # DEBUG __x => D#36
  goto <bb 5>;

  <bb 14>:
  # _85 = PHI <_10(5)>
  # _84 = PHI <_34(5)>
  # _83 = PHI <_37(5)>
  # __comp_82 = PHI <__comp_56(5)>
  # __len_81 = PHI <__len_87(5)>

  <bb 26>:
  # DEBUG this => &__j
  # DEBUG __x => _85
  # DEBUG __j$_M_node => _85
  if (__comp_82 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # _57 = PHI <_85(26), _17(3)>
  # DEBUG this => &__j
  # DEBUG __x => _57
  # DEBUG __j$_M_node => _57
  _24 = MEM[(struct _Rb_tree_node_base * *)this_9(D) + 24B];
  # DEBUG D#83 => this_9(D)
  # DEBUG this => D#83
  # DEBUG this => NULL
  # DEBUG __x => _24
  # DEBUG this => &__j
  # DEBUG __x => &D.47481
  if (_24 == _57)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG this => &D.47484
  # DEBUG __a => &D.47482
  # DEBUG __b => &D.47483
  MEM[(struct pair *)&D.50328] = 0B;
  MEM[(struct pair *)&D.50328 + 8B] = _57;
  goto <bb 25>;

  <bb 17>:
  # DEBUG this => &__j
  __j$_M_node_25 = std::_Rb_tree_decrement (_57);
  # DEBUG __j$_M_node => __j$_M_node_25
  pretmp_67 = MEM[(long unsigned int *)__k_12(D) + 8B];
  pretmp_80 = MEM[(char * *)__k_12(D)];
  pretmp_79 = MEM[(long unsigned int *)__j$_M_node_25 + 40B];
  pretmp_64 = MEM[(char * *)__j$_M_node_25 + 32B];
  pretmp_76 = MIN_EXPR <pretmp_67, pretmp_79>;

  <bb 18>:
  # __j$_M_node_20 = PHI <_85(26), __j$_M_node_25(17)>
  # _5 = PHI <_85(26), _57(17)>
  # prephitmp_61 = PHI <pretmp_1(26), pretmp_67(17)>
  # prephitmp_13 = PHI <pretmp_44(26), pretmp_80(17)>
  # prephitmp_78 = PHI <_84(26), pretmp_79(17)>
  # prephitmp_65 = PHI <_83(26), pretmp_64(17)>
  # prephitmp_77 = PHI <__len_81(26), pretmp_76(17)>
  # DEBUG __j$_M_node => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG __x => __j$_M_node_20
  # DEBUG this => __j$_M_node_20
  # DEBUG D#97 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_20]._M_value_field
  # DEBUG __r => D#97
  # DEBUG __x => D#97
  # DEBUG this => D#60
  # DEBUG D#237 => &MEM[(const struct pair &)__j$_M_node_20 + 32].first
  # DEBUG D#99 => &this_9(D)->_M_impl._M_key_compare
  # DEBUG D#59 => D#99
  # DEBUG __x => D#237
  # DEBUG __y => __k_12(D)
  # DEBUG this => D#59
  # DEBUG __lhs => D#237
  # DEBUG __rhs => __k_12(D)
  # DEBUG this => D#237
  # DEBUG __str => __k_12(D)
  # DEBUG D#253 => MEM[(long unsigned int *)__j$_M_node_20 + 40B]
  # DEBUG D#1 => D#237
  # DEBUG this => D#1
  # DEBUG __size => D#253
  # DEBUG D#252 => MEM[(long unsigned int *)__k_12(D) + 8B]
  # DEBUG D#1 => __k_12(D)
  # DEBUG this => D#1
  # DEBUG __osize => D#252
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  # DEBUG __len => D#235
  # DEBUG this => __k_12(D)
  # DEBUG D#251 => MEM[(char * *)__k_12(D)]
  # DEBUG D#3 => __k_12(D)
  # DEBUG this => D#3
  # DEBUG D#250 => MEM[(char * *)__j$_M_node_20 + 32B]
  # DEBUG D#3 => D#237
  # DEBUG this => D#3
  # DEBUG __s1 => D#250
  # DEBUG __s2 => D#251
  # DEBUG __n => D#235
  __r_51 = __builtin_memcmp (prephitmp_65, prephitmp_13, prephitmp_77);
  # DEBUG __r => NULL
  if (__r_51 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  # DEBUG __n1 => D#253
  # DEBUG __n2 => D#252
  _52 = prephitmp_78 - prephitmp_61;
  __d_53 = (const difference_type) _52;
  # DEBUG __d => __d_53
  if (__d_53 > 2147483647)
    goto <bb 24>;
  else
    goto <bb 20>;

  <bb 20>:
  if (__d_53 < -2147483648)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 21>:
  __r_54 = (int) _52;

  <bb 22>:
  # __r_55 = PHI <__r_51(18), __r_54(21)>
  # DEBUG __r => __r_55
  # DEBUG D#248 => {CLOBBER}
  # DEBUG __size => D#248
  # DEBUG D#249 => {CLOBBER}
  # DEBUG __osize => D#249
  if (__r_55 < 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:

  <bb 31>:
  # DEBUG __r => NULL
  # DEBUG this => &D.47487
  # DEBUG __a => &D.47485
  # DEBUG __b => &D.47486
  MEM[(struct pair *)&D.50328] = 0B;
  MEM[(struct pair *)&D.50328 + 8B] = _5;
  goto <bb 25>;

  <bb 24>:

  <bb 30>:
  # DEBUG __r => NULL
  # DEBUG this => &D.47489
  # DEBUG __a => &__j._M_node
  # DEBUG __b => &D.47488
  MEM[(struct pair *)&D.50328] = __j$_M_node_20;
  MEM[(struct pair *)&D.50328 + 8B] = 0B;

  <bb 25>:

  <bb 29>:
  # DEBUG D#98 => {CLOBBER}
  # DEBUG __j$_M_node => D#98
  return D.50328;

}



;; Function std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = void (*)(const Router*, const Flit*, int, OutputSet*, bool); _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >] (_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvPK6RouterPK4FlitiP9OutputSetbESt4lessIS5_ESaISt4pairIKS5_SF_EEEixERSJ_.constprop.56, funcdef_no=2377, decl_uid=54544, cgraph_uid=77, symbol_order=1601)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = std::__cxx11::basic_string<char>; _Tp = void (*)(const Router*, const Flit*, int, OutputSet*, bool); _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >] (const struct key_type & __k)
{
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56258;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56243;
  struct iterator D.56228;
  struct _Rb_tree_node * __y;
  struct value_type D.54645;
  struct iterator D.54644;
  struct iterator D.54643;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  char * _10;
  char * const _12;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _14;
  char * const _15;
  const size_type _20;
  char * const prephitmp_22;
  char * const pretmp_27;
  char * const prephitmp_28;
  const size_type prephitmp_29;
  char * const prephitmp_30;
  size_type pretmp_31;
  const size_type pretmp_37;
  const size_type prephitmp_38;
  char * const _54;
  long unsigned int _56;
  const size_type _62;
  char * const _65;
  long unsigned int _68;
  bool _72;
  char * const pretmp_77;
  char * _78;
  long unsigned int __dnew.173_79;
  const char_type _81;
  char * _84;
  const size_type pretmp_88;
  size_type prephitmp_89;
  char * const pretmp_90;
  bool _124;
  char * const _125;
  bool _126;

  <bb 2>:
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => __k_2(D)
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => __k_2(D)
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_41 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => __k_2(D)
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_41
  if (__i$_M_node_41 == 0B)
    goto <bb 32>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_88 = MEM[(long unsigned int *)__k_2(D) + 8B];
  pretmp_77 = MEM[(char * *)__k_2(D)];
  goto <bb 6>;

  <bb 4>:
  # __i$_M_node_49 = PHI <__i$_M_node_45(38), __i$_M_node_46(37)>
  # __i$_M_node_48 = PHI <__i$_M_node_99(38), __i$_M_node_6(37)>
  # DEBUG __y => __i$_M_node_48
  # DEBUG __x => __i$_M_node_49
  if (__i$_M_node_49 == 0B)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __i$_M_node_99 = PHI <__i$_M_node_41(3), __i$_M_node_49(5)>
  # __i$_M_node_6 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(3), __i$_M_node_48(5)>
  # DEBUG __y => __i$_M_node_6
  # DEBUG __x => __i$_M_node_99
  # DEBUG __x => __i$_M_node_99
  # DEBUG __x => __i$_M_node_99
  # DEBUG this => __i$_M_node_99
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_99]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#318 => &MEM[(const struct pair &)__i$_M_node_99 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#318
  # DEBUG __y => __k_2(D)
  # DEBUG this => D#59
  # DEBUG __lhs => D#318
  # DEBUG __rhs => __k_2(D)
  # DEBUG this => D#318
  # DEBUG __str => __k_2(D)
  _20 = MEM[(long unsigned int *)__i$_M_node_99 + 40B];
  # DEBUG D#1 => D#318
  # DEBUG this => D#1
  # DEBUG __size => _20
  # DEBUG D#338 => MEM[(long unsigned int *)__k_2(D) + 8B]
  # DEBUG D#1 => __k_2(D)
  # DEBUG this => D#1
  # DEBUG __osize => D#338
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_128 = MIN_EXPR <_20, pretmp_88>;
  # DEBUG __len => D#316
  # DEBUG this => __k_2(D)
  # DEBUG D#337 => MEM[(char * *)__k_2(D)]
  # DEBUG D#3 => __k_2(D)
  # DEBUG this => D#3
  _54 = MEM[(char * *)__i$_M_node_99 + 32B];
  # DEBUG D#3 => D#318
  # DEBUG this => D#3
  # DEBUG __s1 => _54
  # DEBUG __s2 => D#337
  # DEBUG __n => D#316
  __r_55 = __builtin_memcmp (_54, pretmp_77, __len_128);
  # DEBUG __r => NULL
  if (__r_55 == 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG __n1 => _20
  # DEBUG __n2 => D#338
  _56 = _20 - pretmp_88;
  __d_57 = (const difference_type) _56;
  # DEBUG __d => __d_57
  if (__d_57 > 2147483647)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  if (__d_57 < -2147483648)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  __r_58 = (int) _56;

  <bb 10>:
  # __r_59 = PHI <__r_55(6), __r_58(9)>
  # DEBUG __r => __r_59
  # DEBUG D#324 => {CLOBBER}
  # DEBUG __size => D#324
  # DEBUG D#325 => {CLOBBER}
  # DEBUG __osize => D#325
  if (__r_59 >= 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:

  <bb 38>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_99
  __i$_M_node_45 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_99 + 16B];
  # DEBUG D#37 => __i$_M_node_99
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 12>:

  <bb 37>:
  # DEBUG __r => NULL
  __i$_M_node_46 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_99 + 24B];
  # DEBUG D#36 => __i$_M_node_99
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 4>;

  <bb 13>:
  # __i$_M_node_135 = PHI <__i$_M_node_48(4)>

  <bb 36>:
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_135
  # DEBUG __i$_M_node => __i$_M_node_135
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_135 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 33>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_135
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_135]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#319 => &MEM[(struct pair &)__i$_M_node_135 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => __k_2(D)
  # DEBUG __y => D#319
  # DEBUG this => D#59
  # DEBUG __lhs => __k_2(D)
  # DEBUG __rhs => D#319
  # DEBUG this => __k_2(D)
  # DEBUG __str => D#319
  # DEBUG D#336 => MEM[(long unsigned int *)__k_2(D) + 8B]
  # DEBUG D#1 => __k_2(D)
  # DEBUG this => D#1
  # DEBUG __size => D#336
  _62 = MEM[(long unsigned int *)__i$_M_node_135 + 40B];
  # DEBUG D#1 => D#319
  # DEBUG this => D#1
  # DEBUG __osize => _62
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_129 = MIN_EXPR <_62, pretmp_88>;
  # DEBUG __len => D#317
  # DEBUG this => D#319
  _65 = MEM[(char * *)__i$_M_node_135 + 32B];
  # DEBUG D#3 => D#319
  # DEBUG this => D#3
  # DEBUG D#335 => MEM[(char * *)__k_2(D)]
  # DEBUG D#3 => __k_2(D)
  # DEBUG this => D#3
  # DEBUG __s1 => D#335
  # DEBUG __s2 => _65
  # DEBUG __n => D#317
  __r_67 = __builtin_memcmp (pretmp_77, _65, __len_129);
  # DEBUG __r => NULL
  if (__r_67 == 0)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  # DEBUG __n1 => D#336
  # DEBUG __n2 => _62
  _68 = pretmp_88 - _62;
  __d_69 = (const difference_type) _68;
  # DEBUG __d => __d_69
  if (__d_69 > 2147483647)
    goto <bb 28>;
  else
    goto <bb 16>;

  <bb 16>:
  if (__d_69 < -2147483648)
    goto <bb 19>;
  else
    goto <bb 17>;

  <bb 17>:
  __r_70 = (int) _68;

  <bb 18>:
  # __r_71 = PHI <__r_67(14), __r_70(17)>
  # DEBUG __r => __r_71
  # DEBUG D#330 => {CLOBBER}
  # DEBUG __size => D#330
  # DEBUG D#331 => {CLOBBER}
  # DEBUG __osize => D#331
  if (__r_71 < 0)
    goto <bb 33>;
  else
    goto <bb 28>;

  <bb 19>:
  # __i$_M_node_47 = PHI <__i$_M_node_135(16), __i$_M_node_42(39)>
  # prephitmp_29 = PHI <pretmp_88(16), prephitmp_38(39)>
  # prephitmp_30 = PHI <pretmp_77(16), prephitmp_28(39)>
  # DEBUG this => &D.54645
  # DEBUG __a => __k_2(D)
  # DEBUG __b => NULL
  # DEBUG this => &D.54645.first
  # DEBUG __str => __k_2(D)
  # DEBUG this => __k_2(D)
  # DEBUG D#113 => &MEM[(const struct basic_string *)__k_2(D)]._M_dataplus
  # DEBUG this => &D.54645.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.54645]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.54645].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.54645]._M_p = &MEM[(struct basic_string *)&D.54645].D.14356._M_local_buf;
  # DEBUG D#334 => MEM[(char * *)__k_2(D)]
  # DEBUG D#3 => __k_2(D)
  # DEBUG this => D#3
  # DEBUG D#333 => MEM[(long unsigned int *)__k_2(D) + 8B]
  # DEBUG D#4 => __k_2(D)
  # DEBUG this => D#4
  _10 = prephitmp_30 + prephitmp_29;
  # DEBUG D#3 => __k_2(D)
  # DEBUG this => D#3
  # DEBUG this => &D.54645.first
  # DEBUG __beg => D#334
  # DEBUG __end => _10
  # DEBUG this => &D.54645.first
  # DEBUG __beg => D#334
  # DEBUG __end => _10
  # DEBUG this => &D.54645.first
  # DEBUG __beg => D#334
  # DEBUG __end => _10
  # DEBUG __ptr => D#334
  _72 = _10 != 0B;
  _124 = prephitmp_30 == 0B;
  _126 = _72 & _124;
  if (_126 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 20>:
  _78 = std::__cxx11::basic_string<char>::_M_create (&D.54645.first, &__dnew, 0);
  # DEBUG D#5 => &D.54645.first
  # DEBUG __p => _78
  # DEBUG this => D#5
  MEM[(char * *)&D.54645] = _78;
  __dnew.173_79 = __dnew;
  # DEBUG D#6 => &D.54645.first
  # DEBUG __capacity => __dnew.173_79
  # DEBUG this => D#6
  MEM[(size_type *)&D.54645 + 16B] = __dnew.173_79;
  # DEBUG D#3 => &D.54645.first
  # DEBUG this => D#3
  # DEBUG __p => _78
  # DEBUG __k1 => D#334
  # DEBUG __k2 => _10
  # DEBUG __d => _78
  # DEBUG __s => D#334
  # DEBUG __n => D#333
  goto <bb 23>;

  <bb 21>:
  # DEBUG D#3 => &D.54645.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.54645].D.14356._M_local_buf
  # DEBUG __k1 => D#334
  # DEBUG __k2 => _10
  # DEBUG __d => &MEM[(struct basic_string *)&D.54645].D.14356._M_local_buf
  # DEBUG __s => D#334
  # DEBUG __n => D#333
  if (prephitmp_29 == 1)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _81 = MEM[(const char_type &)prephitmp_30];
  # DEBUG D#11 => D#334
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.54645].D.14356._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.54645 + 16] = _81;
  goto <bb 24>;

  <bb 23>:
  # _125 = PHI <&MEM[(struct basic_string *)&D.54645].D.14356._M_local_buf(21), _78(20)>
  # DEBUG D#3 => &D.54645.first
  # DEBUG this => D#3
  # DEBUG __p => _125
  # DEBUG __k1 => D#334
  # DEBUG __k2 => _10
  # DEBUG __d => _125
  # DEBUG __s => D#334
  # DEBUG __n => D#333
  # DEBUG __s1 => _125
  # DEBUG __s2 => D#334
  # DEBUG __n => D#333
  __builtin_memcpy (_125, prephitmp_30, prephitmp_29);
  pretmp_31 = __dnew;
  pretmp_90 = MEM[(char * *)&D.54645];

  <bb 24>:
  # prephitmp_89 = PHI <prephitmp_29(22), pretmp_31(23)>
  # prephitmp_22 = PHI <&MEM[(struct basic_string *)&D.54645].D.14356._M_local_buf(22), pretmp_90(23)>
  # DEBUG D#332 => __dnew
  # DEBUG this => &D.54645.first
  # DEBUG __n => D#332
  # DEBUG D#7 => &D.54645.first
  # DEBUG __length => D#332
  # DEBUG this => D#7
  MEM[(size_type *)&D.54645 + 8B] = prephitmp_89;
  # DEBUG D#3 => &D.54645.first
  # DEBUG this => D#3
  _84 = prephitmp_22 + prephitmp_89;
  # DEBUG __c1 => _84
  # DEBUG __c2 => D#11
  MEM[(char_type &)_84] = 0;
  __dnew ={v} {CLOBBER};
  D.54645.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_47
  # DEBUG __x => &D.54645
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_47;
  # DEBUG __x => &D.54645
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.54643 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.54645);

  <bb 25>:
  __i$_M_node_11 = MEM[(struct _Rb_tree_iterator *)&D.54643];
  # DEBUG __i$_M_node => __i$_M_node_11
  # DEBUG this => &D.54645
  # DEBUG D#56 => &D.54645.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _12 = MEM[(char * *)&D.54645];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.54645].D.14356._M_local_buf != _12)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _12
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _12
  # DEBUG this => D#45
  # DEBUG D.54600 => D#46
  operator delete (_12);

  <bb 27>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.54645 ={v} {CLOBBER};

  <bb 28>:
  # __i$_M_node_13 = PHI <__i$_M_node_135(15), __i$_M_node_11(27), __i$_M_node_135(18)>

  <bb 40>:
  # DEBUG __i$_M_node => __i$_M_node_13
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_13
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_13]._M_value_field
  # DEBUG __r => D#145
  _14 = &MEM[(struct pair &)__i$_M_node_13 + 32].second;
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  return _14;

<L0>:
  # DEBUG this => &D.54645
  # DEBUG D#56 => &D.54645.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _15 = MEM[(char * *)&D.54645];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.54645].D.14356._M_local_buf != _15)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _15
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _15
  # DEBUG this => D#45
  # DEBUG D.54584 => D#46
  operator delete (_15);

  <bb 31>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.54645 ={v} {CLOBBER};
  resx 1

  <bb 32>:
  pretmp_37 = MEM[(long unsigned int *)__k_2(D) + 8B];
  pretmp_27 = MEM[(char * *)__k_2(D)];

  <bb 33>:
  # __i$_M_node_42 = PHI <__i$_M_node_135(18), __i$_M_node_135(36), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(32)>
  # prephitmp_38 = PHI <pretmp_88(18), pretmp_88(36), pretmp_37(32)>
  # prephitmp_28 = PHI <pretmp_77(18), pretmp_77(36), pretmp_27(32)>

  <bb 39>:
  goto <bb 19>;

  <bb 34>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 35>:
  # DEBUG __first => D#334
  # DEBUG __last => _10
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => D#334
  # DEBUG __last => _10
  __dnew = prephitmp_29;
  if (prephitmp_29 > 15)
    goto <bb 20>;
  else
    goto <bb 21>;

}



;; Function void InitializeRoutingMap(const Configuration&) (_Z20InitializeRoutingMapRK13Configuration, funcdef_no=1991, decl_uid=42072, cgraph_uid=490, symbol_order=501)

Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void InitializeRoutingMap(const Configuration&) (const struct Configuration & config)
{
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58847;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58832;
  struct iterator D.58817;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.58755;
  struct iterator D.58754;
  struct iterator D.58753;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.58749;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58606;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58591;
  struct iterator D.58576;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.58514;
  struct iterator D.58513;
  struct iterator D.58512;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.58508;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58365;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58350;
  struct iterator D.58335;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.58273;
  struct iterator D.58272;
  struct iterator D.58271;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.58267;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58169;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.58154;
  struct iterator D.58139;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.58077;
  struct iterator D.58076;
  struct iterator D.58075;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.58071;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57973;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57958;
  struct iterator D.57943;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.57881;
  struct iterator D.57880;
  struct iterator D.57879;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.57875;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57732;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57717;
  struct iterator D.57702;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.57640;
  struct iterator D.57639;
  struct iterator D.57638;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.57634;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57491;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57476;
  struct iterator D.57461;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.57399;
  struct iterator D.57398;
  struct iterator D.57397;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.57393;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57250;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.57235;
  struct iterator D.57220;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.57158;
  struct iterator D.57157;
  struct iterator D.57156;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.57152;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56919;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.56904;
  struct iterator D.56889;
  struct _Rb_tree_node * __y;
  size_type __dnew;
  struct value_type D.56827;
  struct iterator D.56826;
  struct iterator D.56825;
  struct const_iterator __pos;
  struct _Rb_tree_node_base * const __i$_M_node;
  struct _Rb_tree_node_base * SR.431;
  struct _Rb_tree_node_base * SR.434;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & D.56821;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  const struct key_type D.45895;
  const struct key_type D.45892;
  const struct key_type D.45889;
  const struct key_type D.45886;
  const struct key_type D.45883;
  const struct key_type D.45880;
  const struct key_type D.45877;
  const struct key_type D.45874;
  const struct key_type D.45871;
  const struct key_type D.45868;
  const struct key_type D.45865;
  const struct key_type D.45862;
  const struct key_type D.45859;
  const struct key_type D.45856;
  const struct key_type D.45853;
  const struct key_type D.45850;
  const struct key_type D.45847;
  const struct key_type D.45844;
  const struct key_type D.45841;
  const struct key_type D.45838;
  const struct key_type D.45835;
  const struct key_type D.45832;
  const struct key_type D.45829;
  const struct key_type D.45826;
  const struct key_type D.45823;
  const struct string D.45820;
  const struct string D.45817;
  const struct string D.45814;
  const struct string D.45811;
  const struct string D.45808;
  const struct string D.45805;
  const struct string D.45802;
  const struct string D.45799;
  const struct string D.45796;
  int _14;
  char * const _17;
  int _21;
  char * const _24;
  int _30;
  char * const _33;
  int gNumVCs.145_35;
  int gReadReplyBeginVC.153_36;
  int gReadReqEndVC.146_37;
  int _42;
  char * const _45;
  int _51;
  char * const _54;
  int gNumVCs.145_56;
  int gReadReplyBeginVC.153_57;
  int gReadReqEndVC.146_58;
  int _63;
  char * const _66;
  int gNumVCs.145_68;
  int gReadReplyBeginVC.153_69;
  int _74;
  char * const _77;
  int gNumVCs.145_79;
  int gReadReplyEndVC.156_80;
  int _85;
  char * const _88;
  int gNumVCs.145_90;
  int gReadReplyBeginVC.153_91;
  int _96;
  char * const _99;
  int gNumVCs.145_101;
  int gReadReplyEndVC.156_102;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _107;
  char * const _110;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _121;
  char * const _124;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _128;
  char * const _131;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _135;
  char * const _138;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _149;
  char * const _152;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _163;
  char * const _166;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _177;
  char * const _180;
  bool _196;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _205;
  char * const _208;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _219;
  char * const _222;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _233;
  char * const _236;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _240;
  char * const _243;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _247;
  char * const _250;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _254;
  char * const _257;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _261;
  char * const _264;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _267;
  char * const _270;
  void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) & _273;
  char * const _275;
  char * const _277;
  char * const _282;
  char * const _284;
  char * const _286;
  char * const _288;
  char * const _290;
  char * const _292;
  char * const _294;
  char * const _296;
  char * const _298;
  char * const _300;
  char * const _302;
  char * const _304;
  char * const _306;
  char * const _308;
  char * const _310;
  char * const _312;
  char * const _314;
  char * const _316;
  char * const _318;
  char * const _320;
  char * const _322;
  char * const _324;
  char * const _326;
  char * const _328;
  char * const _330;
  char * const _332;
  char * const _334;
  char * const _336;
  char * const _338;
  char * const _340;
  char * const _342;
  char * const _344;
  char * const _346;
  char * const pretmp_543;
  size_type prephitmp_547;
  char * const pretmp_548;
  char * const prephitmp_549;
  const size_type pretmp_550;
  int pretmp_607;
  int prephitmp_608;
  int pretmp_609;
  int prephitmp_610;
  int prephitmp_612;
  int pretmp_613;
  int prephitmp_614;
  char * const pretmp_617;
  char * const prephitmp_618;
  const size_type pretmp_619;
  const size_type prephitmp_620;
  char * const pretmp_622;
  char * const prephitmp_623;
  char * const pretmp_624;
  char * const prephitmp_625;
  char * const prephitmp_627;
  char * const pretmp_630;
  char * const prephitmp_632;
  const size_type pretmp_633;
  const size_type prephitmp_634;
  char * const pretmp_635;
  char * const pretmp_637;
  char * const prephitmp_638;
  char * const pretmp_639;
  char * const prephitmp_640;
  char * const pretmp_644;
  char * const prephitmp_645;
  const size_type prephitmp_658;
  char * const prephitmp_659;
  size_type pretmp_660;
  size_type prephitmp_662;
  char * const pretmp_663;
  char * const prephitmp_664;
  const size_type pretmp_665;
  const size_type prephitmp_672;
  char * const prephitmp_673;
  size_type pretmp_674;
  size_type prephitmp_675;
  char * const pretmp_677;
  char * const prephitmp_678;
  const size_type pretmp_679;
  char * const pretmp_682;
  const size_type prephitmp_698;
  char * const prephitmp_699;
  size_type pretmp_700;
  size_type prephitmp_702;
  char * const pretmp_703;
  char * const prephitmp_704;
  const size_type pretmp_705;
  char * const pretmp_708;
  const size_type prephitmp_718;
  char * const prephitmp_719;
  size_type pretmp_720;
  char * _746;
  long unsigned int __dnew.173_747;
  long unsigned int __dnew.173_750;
  char * const _751;
  char * _752;
  char * _762;
  long unsigned int __dnew.173_763;
  long unsigned int __dnew.173_766;
  char * const _767;
  char * _768;
  char * _778;
  long unsigned int __dnew.173_779;
  long unsigned int __dnew.173_782;
  char * const _783;
  char * _784;
  char * _794;
  long unsigned int __dnew.173_795;
  long unsigned int __dnew.173_798;
  char * const _799;
  char * _800;
  char * _810;
  long unsigned int __dnew.173_811;
  long unsigned int __dnew.173_814;
  char * const _815;
  char * _816;
  char * _826;
  long unsigned int __dnew.173_827;
  long unsigned int __dnew.173_830;
  char * const _831;
  char * _832;
  char * _842;
  long unsigned int __dnew.173_843;
  long unsigned int __dnew.173_846;
  char * const _847;
  char * _848;
  char * _858;
  long unsigned int __dnew.173_859;
  long unsigned int __dnew.173_862;
  char * const _863;
  char * _864;
  char * const _891;
  char * const _894;
  char * const _907;
  const size_type _920;
  char * const _925;
  long unsigned int _927;
  const size_type _933;
  char * const _936;
  long unsigned int _939;
  char * const _1014;
  char * const _1017;
  const size_type _1043;
  char * const _1048;
  long unsigned int _1050;
  const size_type _1056;
  char * const _1059;
  long unsigned int _1062;
  char * _1103;
  char * const _1105;
  char * const _1108;
  char * _1117;
  long unsigned int __dnew.173_1118;
  long unsigned int __dnew.173_1121;
  char * const _1122;
  char * _1123;
  const size_type _1134;
  char * const _1139;
  long unsigned int _1141;
  const size_type _1147;
  char * const _1150;
  long unsigned int _1153;
  char * _1163;
  long unsigned int __dnew.173_1164;
  const char_type _1166;
  char * _1169;
  char * const _1180;
  char * _1194;
  char * const _1196;
  char * const _1199;
  char * _1208;
  long unsigned int __dnew.173_1209;
  long unsigned int __dnew.173_1212;
  char * const _1213;
  char * _1214;
  const size_type _1225;
  char * const _1230;
  long unsigned int _1232;
  const size_type _1238;
  char * const _1241;
  long unsigned int _1244;
  char * _1254;
  long unsigned int __dnew.173_1255;
  const char_type _1257;
  char * _1260;
  char * const _1264;
  char * _1270;
  long unsigned int __dnew.173_1271;
  long unsigned int __dnew.173_1274;
  char * const _1275;
  char * _1276;
  char * const _1287;
  char * const _1290;
  const size_type _1316;
  char * const _1321;
  long unsigned int _1323;
  const size_type _1329;
  char * const _1332;
  long unsigned int _1335;
  char * _1360;
  char * const _1362;
  char * const _1365;
  char * _1374;
  long unsigned int __dnew.173_1375;
  long unsigned int __dnew.173_1378;
  char * const _1379;
  char * _1380;
  const size_type _1391;
  char * const _1396;
  long unsigned int _1398;
  const size_type _1404;
  char * const _1407;
  long unsigned int _1410;
  char * _1420;
  long unsigned int __dnew.173_1421;
  const char_type _1423;
  char * _1426;
  char * _1435;
  char * const _1437;
  char * const _1440;
  char * _1449;
  long unsigned int __dnew.173_1450;
  long unsigned int __dnew.173_1453;
  char * const _1454;
  char * _1455;
  const size_type _1466;
  char * const _1471;
  long unsigned int _1473;
  const size_type _1479;
  char * const _1482;
  long unsigned int _1485;
  bool _1489;
  char * _1495;
  long unsigned int __dnew.173_1496;
  const char_type _1498;
  char * _1501;
  char * const _1528;
  char * const _1531;
  bool _1555;
  bool _1556;
  const size_type _1557;
  char * const _1562;
  long unsigned int _1564;
  bool _1568;
  const size_type _1570;
  char * const _1573;
  long unsigned int _1576;
  bool _1580;
  char * const _1619;
  char * const _1622;
  bool _1646;
  bool _1647;
  const size_type _1648;
  char * const _1653;
  long unsigned int _1655;
  bool _1659;
  const size_type _1661;
  char * const _1664;
  long unsigned int _1667;
  bool _1671;
  char * _1693;
  long unsigned int __dnew.173_1694;
  long unsigned int __dnew.173_1697;
  char * const _1698;
  char * _1699;
  char * _1741;
  long unsigned int __dnew.173_1742;
  long unsigned int __dnew.173_1745;
  char * const _1746;
  char * _1747;
  bool _1796;
  char * const pretmp_1978;
  long unsigned int _2008;
  char * const pretmp_2060;
  char * const prephitmp_2061;
  char * const _2081;
  char * const prephitmp_2119;
  char * const pretmp_2120;
  char * const prephitmp_2121;
  const size_type pretmp_2122;
  const size_type prephitmp_2123;
  bool _2142;
  const size_type pretmp_2180;
  const size_type prephitmp_2181;
  char * const pretmp_2182;
  char * const prephitmp_2183;
  char * const pretmp_2184;
  char * const pretmp_2242;
  char * const prephitmp_2243;
  int pretmp_2292;
  int prephitmp_2293;
  int pretmp_2294;
  int prephitmp_2295;
  int pretmp_2296;
  int pretmp_2344;
  int prephitmp_2345;
  int pretmp_2346;
  int prephitmp_2347;

  <bb 2>:
  # DEBUG D#30 => &D.45795
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45795
  # DEBUG this => &D.45796
  # DEBUG __s => "num_vcs"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45796
  # DEBUG D#66 => &D.45796._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45796.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45796]._M_p = &D.45796.D.14356._M_local_buf;
  # DEBUG __s => "num_vcs"
  # DEBUG this => &D.45796
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG this => &D.45796
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG this => &D.45796
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __ptr => "num_vcs"
  # DEBUG __first => "num_vcs"
  # DEBUG __last => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "num_vcs"
  # DEBUG __last => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __dnew => 7
  # DEBUG D#3 => &D.45796
  # DEBUG this => D#3
  # DEBUG __p => &D.45796.D.14356._M_local_buf
  # DEBUG __k1 => "num_vcs"
  # DEBUG __k2 => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG __d => &D.45796.D.14356._M_local_buf
  # DEBUG __s => "num_vcs"
  # DEBUG __n => 7
  # DEBUG __s1 => &D.45796.D.14356._M_local_buf
  # DEBUG __s2 => "num_vcs"
  # DEBUG __n => 7
  __builtin_memcpy (&D.45796.D.14356._M_local_buf, "num_vcs", 7);
  # DEBUG this => &D.45796
  # DEBUG __n => 7
  # DEBUG D#7 => &D.45796
  # DEBUG __length => 7
  # DEBUG this => D#7
  MEM[(size_type *)&D.45796 + 8B] = 7;
  # DEBUG D#3 => &D.45796
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45796 + 23B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45796 + 23] = 0;
  # DEBUG D#378 => {CLOBBER}
  # DEBUG __dnew => D#378
  _14 = Configuration::GetInt (config_12(D), &D.45796);

  <bb 3>:
  gNumVCs = _14;
  # DEBUG this => &D.45796
  # DEBUG this => &D.45796
  # DEBUG this => &D.45796
  _17 = MEM[(char * *)&D.45796];
  # DEBUG D#3 => &D.45796
  # DEBUG this => D#3
  # DEBUG this => &D.45796
  if (&D.45796.D.14356._M_local_buf != _17)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # DEBUG D#54 => D.45796.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45796
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45796
  # DEBUG this => D#3
  # DEBUG this => &D.45796
  # DEBUG D#51 => &D.45796._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _17
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _17
  # DEBUG this => D#45
  # DEBUG D.53363 => D#46
  operator delete (_17);

  <bb 5>:
  # DEBUG D#55 => &D.45796._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45796 ={v} {CLOBBER};
  # DEBUG this => &D.45795
  # DEBUG this => &D.45795
  # DEBUG D#30 => &D.45798
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45798
  # DEBUG this => &D.45799
  # DEBUG __s => "read_request_begin_vc"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45799
  # DEBUG D#66 => &D.45799._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45799.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45799]._M_p = &D.45799.D.14356._M_local_buf;
  # DEBUG __s => "read_request_begin_vc"
  # DEBUG this => &D.45799
  # DEBUG __beg => "read_request_begin_vc"
  # DEBUG __end => &MEM[(void *)"read_request_begin_vc" + 21B]
  # DEBUG this => &D.45799
  # DEBUG __beg => "read_request_begin_vc"
  # DEBUG __end => &MEM[(void *)"read_request_begin_vc" + 21B]
  # DEBUG this => &D.45799
  # DEBUG __beg => "read_request_begin_vc"
  # DEBUG __end => &MEM[(void *)"read_request_begin_vc" + 21B]
  # DEBUG __ptr => "read_request_begin_vc"
  # DEBUG __first => "read_request_begin_vc"
  # DEBUG __last => &MEM[(void *)"read_request_begin_vc" + 21B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "read_request_begin_vc"
  # DEBUG __last => &MEM[(void *)"read_request_begin_vc" + 21B]
  __dnew = 21;
  _746 = std::__cxx11::basic_string<char>::_M_create (&D.45799, &__dnew, 0);
  # DEBUG D#5 => &D.45799
  # DEBUG __p => _746
  # DEBUG this => D#5
  MEM[(char * *)&D.45799] = _746;
  __dnew.173_747 = __dnew;
  # DEBUG D#6 => &D.45799
  # DEBUG __capacity => __dnew.173_747
  # DEBUG this => D#6
  MEM[(size_type *)&D.45799 + 16B] = __dnew.173_747;
  # DEBUG D#3 => &D.45799
  # DEBUG this => D#3
  # DEBUG __p => _746
  # DEBUG __k1 => "read_request_begin_vc"
  # DEBUG __k2 => &MEM[(void *)"read_request_begin_vc" + 21B]
  # DEBUG __d => _746
  # DEBUG __s => "read_request_begin_vc"
  # DEBUG __n => 21
  # DEBUG __s1 => _746
  # DEBUG __s2 => "read_request_begin_vc"
  # DEBUG __n => 21
  __builtin_memcpy (_746, "read_request_begin_vc", 21);
  __dnew.173_750 = __dnew;
  # DEBUG this => &D.45799
  # DEBUG __n => __dnew.173_750
  # DEBUG D#7 => &D.45799
  # DEBUG __length => __dnew.173_750
  # DEBUG this => D#7
  MEM[(size_type *)&D.45799 + 8B] = __dnew.173_750;
  _751 = MEM[(char * *)&D.45799];
  # DEBUG D#3 => &D.45799
  # DEBUG this => D#3
  _752 = _751 + __dnew.173_750;
  # DEBUG __c1 => _752
  # DEBUG __c2 => D#11
  MEM[(char_type &)_752] = 0;
  __dnew ={v} {CLOBBER};
  _21 = Configuration::GetInt (config_12(D), &D.45799);

  <bb 6>:
  gReadReqBeginVC = _21;
  # DEBUG this => &D.45799
  # DEBUG this => &D.45799
  # DEBUG this => &D.45799
  _24 = MEM[(char * *)&D.45799];
  # DEBUG D#3 => &D.45799
  # DEBUG this => D#3
  # DEBUG this => &D.45799
  if (&D.45799.D.14356._M_local_buf != _24)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#54 => D.45799.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45799
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45799
  # DEBUG this => D#3
  # DEBUG this => &D.45799
  # DEBUG D#51 => &D.45799._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _24
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _24
  # DEBUG this => D#45
  # DEBUG D.53380 => D#46
  operator delete (_24);
  pretmp_2344 = gReadReqBeginVC;

  <bb 8>:
  # prephitmp_2345 = PHI <_21(6), pretmp_2344(7)>
  # DEBUG D#55 => &D.45799._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45799 ={v} {CLOBBER};
  # DEBUG this => &D.45798
  # DEBUG this => &D.45798
  if (prephitmp_2345 < 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  gReadReqBeginVC = 0;

  <bb 10>:
  # DEBUG D#30 => &D.45801
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45801
  # DEBUG this => &D.45802
  # DEBUG __s => "read_request_end_vc"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45802
  # DEBUG D#66 => &D.45802._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45802.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45802]._M_p = &D.45802.D.14356._M_local_buf;
  # DEBUG __s => "read_request_end_vc"
  # DEBUG this => &D.45802
  # DEBUG __beg => "read_request_end_vc"
  # DEBUG __end => &MEM[(void *)"read_request_end_vc" + 19B]
  # DEBUG this => &D.45802
  # DEBUG __beg => "read_request_end_vc"
  # DEBUG __end => &MEM[(void *)"read_request_end_vc" + 19B]
  # DEBUG this => &D.45802
  # DEBUG __beg => "read_request_end_vc"
  # DEBUG __end => &MEM[(void *)"read_request_end_vc" + 19B]
  # DEBUG __ptr => "read_request_end_vc"
  # DEBUG __first => "read_request_end_vc"
  # DEBUG __last => &MEM[(void *)"read_request_end_vc" + 19B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "read_request_end_vc"
  # DEBUG __last => &MEM[(void *)"read_request_end_vc" + 19B]
  __dnew = 19;
  _762 = std::__cxx11::basic_string<char>::_M_create (&D.45802, &__dnew, 0);
  # DEBUG D#5 => &D.45802
  # DEBUG __p => _762
  # DEBUG this => D#5
  MEM[(char * *)&D.45802] = _762;
  __dnew.173_763 = __dnew;
  # DEBUG D#6 => &D.45802
  # DEBUG __capacity => __dnew.173_763
  # DEBUG this => D#6
  MEM[(size_type *)&D.45802 + 16B] = __dnew.173_763;
  # DEBUG D#3 => &D.45802
  # DEBUG this => D#3
  # DEBUG __p => _762
  # DEBUG __k1 => "read_request_end_vc"
  # DEBUG __k2 => &MEM[(void *)"read_request_end_vc" + 19B]
  # DEBUG __d => _762
  # DEBUG __s => "read_request_end_vc"
  # DEBUG __n => 19
  # DEBUG __s1 => _762
  # DEBUG __s2 => "read_request_end_vc"
  # DEBUG __n => 19
  __builtin_memcpy (_762, "read_request_end_vc", 19);
  __dnew.173_766 = __dnew;
  # DEBUG this => &D.45802
  # DEBUG __n => __dnew.173_766
  # DEBUG D#7 => &D.45802
  # DEBUG __length => __dnew.173_766
  # DEBUG this => D#7
  MEM[(size_type *)&D.45802 + 8B] = __dnew.173_766;
  _767 = MEM[(char * *)&D.45802];
  # DEBUG D#3 => &D.45802
  # DEBUG this => D#3
  _768 = _767 + __dnew.173_766;
  # DEBUG __c1 => _768
  # DEBUG __c2 => D#11
  MEM[(char_type &)_768] = 0;
  __dnew ={v} {CLOBBER};
  _30 = Configuration::GetInt (config_12(D), &D.45802);

  <bb 11>:
  gReadReqEndVC = _30;
  # DEBUG this => &D.45802
  # DEBUG this => &D.45802
  # DEBUG this => &D.45802
  _33 = MEM[(char * *)&D.45802];
  # DEBUG D#3 => &D.45802
  # DEBUG this => D#3
  # DEBUG this => &D.45802
  if (&D.45802.D.14356._M_local_buf != _33)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#54 => D.45802.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45802
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45802
  # DEBUG this => D#3
  # DEBUG this => &D.45802
  # DEBUG D#51 => &D.45802._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _33
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _33
  # DEBUG this => D#45
  # DEBUG D.53398 => D#46
  operator delete (_33);
  pretmp_2346 = gReadReqEndVC;

  <bb 13>:
  # prephitmp_2347 = PHI <_30(11), pretmp_2346(12)>
  # DEBUG D#55 => &D.45802._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45802 ={v} {CLOBBER};
  # DEBUG this => &D.45801
  # DEBUG this => &D.45801
  if (prephitmp_2347 < 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  gNumVCs.145_35 = gNumVCs;
  gReadReplyBeginVC.153_36 = gNumVCs.145_35 / 2;
  gReadReqEndVC.146_37 = gReadReplyBeginVC.153_36 + -1;
  gReadReqEndVC = gReadReqEndVC.146_37;

  <bb 15>:
  # DEBUG D#30 => &D.45804
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45804
  # DEBUG this => &D.45805
  # DEBUG __s => "write_request_begin_vc"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45805
  # DEBUG D#66 => &D.45805._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45805.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45805]._M_p = &D.45805.D.14356._M_local_buf;
  # DEBUG __s => "write_request_begin_vc"
  # DEBUG this => &D.45805
  # DEBUG __beg => "write_request_begin_vc"
  # DEBUG __end => &MEM[(void *)"write_request_begin_vc" + 22B]
  # DEBUG this => &D.45805
  # DEBUG __beg => "write_request_begin_vc"
  # DEBUG __end => &MEM[(void *)"write_request_begin_vc" + 22B]
  # DEBUG this => &D.45805
  # DEBUG __beg => "write_request_begin_vc"
  # DEBUG __end => &MEM[(void *)"write_request_begin_vc" + 22B]
  # DEBUG __ptr => "write_request_begin_vc"
  # DEBUG __first => "write_request_begin_vc"
  # DEBUG __last => &MEM[(void *)"write_request_begin_vc" + 22B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "write_request_begin_vc"
  # DEBUG __last => &MEM[(void *)"write_request_begin_vc" + 22B]
  __dnew = 22;
  _778 = std::__cxx11::basic_string<char>::_M_create (&D.45805, &__dnew, 0);
  # DEBUG D#5 => &D.45805
  # DEBUG __p => _778
  # DEBUG this => D#5
  MEM[(char * *)&D.45805] = _778;
  __dnew.173_779 = __dnew;
  # DEBUG D#6 => &D.45805
  # DEBUG __capacity => __dnew.173_779
  # DEBUG this => D#6
  MEM[(size_type *)&D.45805 + 16B] = __dnew.173_779;
  # DEBUG D#3 => &D.45805
  # DEBUG this => D#3
  # DEBUG __p => _778
  # DEBUG __k1 => "write_request_begin_vc"
  # DEBUG __k2 => &MEM[(void *)"write_request_begin_vc" + 22B]
  # DEBUG __d => _778
  # DEBUG __s => "write_request_begin_vc"
  # DEBUG __n => 22
  # DEBUG __s1 => _778
  # DEBUG __s2 => "write_request_begin_vc"
  # DEBUG __n => 22
  __builtin_memcpy (_778, "write_request_begin_vc", 22);
  __dnew.173_782 = __dnew;
  # DEBUG this => &D.45805
  # DEBUG __n => __dnew.173_782
  # DEBUG D#7 => &D.45805
  # DEBUG __length => __dnew.173_782
  # DEBUG this => D#7
  MEM[(size_type *)&D.45805 + 8B] = __dnew.173_782;
  _783 = MEM[(char * *)&D.45805];
  # DEBUG D#3 => &D.45805
  # DEBUG this => D#3
  _784 = _783 + __dnew.173_782;
  # DEBUG __c1 => _784
  # DEBUG __c2 => D#11
  MEM[(char_type &)_784] = 0;
  __dnew ={v} {CLOBBER};
  _42 = Configuration::GetInt (config_12(D), &D.45805);

  <bb 16>:
  gWriteReqBeginVC = _42;
  # DEBUG this => &D.45805
  # DEBUG this => &D.45805
  # DEBUG this => &D.45805
  _45 = MEM[(char * *)&D.45805];
  # DEBUG D#3 => &D.45805
  # DEBUG this => D#3
  # DEBUG this => &D.45805
  if (&D.45805.D.14356._M_local_buf != _45)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#54 => D.45805.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45805
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45805
  # DEBUG this => D#3
  # DEBUG this => &D.45805
  # DEBUG D#51 => &D.45805._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _45
  # DEBUG this => D#45
  # DEBUG D.53416 => D#46
  operator delete (_45);
  pretmp_607 = gWriteReqBeginVC;

  <bb 18>:
  # prephitmp_608 = PHI <_42(16), pretmp_607(17)>
  # DEBUG D#55 => &D.45805._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45805 ={v} {CLOBBER};
  # DEBUG this => &D.45804
  # DEBUG this => &D.45804
  if (prephitmp_608 < 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  gWriteReqBeginVC = 0;

  <bb 20>:
  # DEBUG D#30 => &D.45807
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45807
  # DEBUG this => &D.45808
  # DEBUG __s => "write_request_end_vc"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45808
  # DEBUG D#66 => &D.45808._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45808.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45808]._M_p = &D.45808.D.14356._M_local_buf;
  # DEBUG __s => "write_request_end_vc"
  # DEBUG this => &D.45808
  # DEBUG __beg => "write_request_end_vc"
  # DEBUG __end => &MEM[(void *)"write_request_end_vc" + 20B]
  # DEBUG this => &D.45808
  # DEBUG __beg => "write_request_end_vc"
  # DEBUG __end => &MEM[(void *)"write_request_end_vc" + 20B]
  # DEBUG this => &D.45808
  # DEBUG __beg => "write_request_end_vc"
  # DEBUG __end => &MEM[(void *)"write_request_end_vc" + 20B]
  # DEBUG __ptr => "write_request_end_vc"
  # DEBUG __first => "write_request_end_vc"
  # DEBUG __last => &MEM[(void *)"write_request_end_vc" + 20B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "write_request_end_vc"
  # DEBUG __last => &MEM[(void *)"write_request_end_vc" + 20B]
  __dnew = 20;
  _794 = std::__cxx11::basic_string<char>::_M_create (&D.45808, &__dnew, 0);
  # DEBUG D#5 => &D.45808
  # DEBUG __p => _794
  # DEBUG this => D#5
  MEM[(char * *)&D.45808] = _794;
  __dnew.173_795 = __dnew;
  # DEBUG D#6 => &D.45808
  # DEBUG __capacity => __dnew.173_795
  # DEBUG this => D#6
  MEM[(size_type *)&D.45808 + 16B] = __dnew.173_795;
  # DEBUG D#3 => &D.45808
  # DEBUG this => D#3
  # DEBUG __p => _794
  # DEBUG __k1 => "write_request_end_vc"
  # DEBUG __k2 => &MEM[(void *)"write_request_end_vc" + 20B]
  # DEBUG __d => _794
  # DEBUG __s => "write_request_end_vc"
  # DEBUG __n => 20
  # DEBUG __s1 => _794
  # DEBUG __s2 => "write_request_end_vc"
  # DEBUG __n => 20
  __builtin_memcpy (_794, "write_request_end_vc", 20);
  __dnew.173_798 = __dnew;
  # DEBUG this => &D.45808
  # DEBUG __n => __dnew.173_798
  # DEBUG D#7 => &D.45808
  # DEBUG __length => __dnew.173_798
  # DEBUG this => D#7
  MEM[(size_type *)&D.45808 + 8B] = __dnew.173_798;
  _799 = MEM[(char * *)&D.45808];
  # DEBUG D#3 => &D.45808
  # DEBUG this => D#3
  _800 = _799 + __dnew.173_798;
  # DEBUG __c1 => _800
  # DEBUG __c2 => D#11
  MEM[(char_type &)_800] = 0;
  __dnew ={v} {CLOBBER};
  _51 = Configuration::GetInt (config_12(D), &D.45808);

  <bb 21>:
  gWriteReqEndVC = _51;
  # DEBUG this => &D.45808
  # DEBUG this => &D.45808
  # DEBUG this => &D.45808
  _54 = MEM[(char * *)&D.45808];
  # DEBUG D#3 => &D.45808
  # DEBUG this => D#3
  # DEBUG this => &D.45808
  if (&D.45808.D.14356._M_local_buf != _54)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#54 => D.45808.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45808
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45808
  # DEBUG this => D#3
  # DEBUG this => &D.45808
  # DEBUG D#51 => &D.45808._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _54
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _54
  # DEBUG this => D#45
  # DEBUG D.53434 => D#46
  operator delete (_54);
  pretmp_609 = gWriteReqEndVC;

  <bb 23>:
  # prephitmp_610 = PHI <_51(21), pretmp_609(22)>
  # DEBUG D#55 => &D.45808._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45808 ={v} {CLOBBER};
  # DEBUG this => &D.45807
  # DEBUG this => &D.45807
  if (prephitmp_610 < 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  gNumVCs.145_56 = gNumVCs;
  gReadReplyBeginVC.153_57 = gNumVCs.145_56 / 2;
  gReadReqEndVC.146_58 = gReadReplyBeginVC.153_57 + -1;
  gWriteReqEndVC = gReadReqEndVC.146_58;

  <bb 25>:
  # DEBUG D#30 => &D.45810
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45810
  # DEBUG this => &D.45811
  # DEBUG __s => "read_reply_begin_vc"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45811
  # DEBUG D#66 => &D.45811._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45811.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45811]._M_p = &D.45811.D.14356._M_local_buf;
  # DEBUG __s => "read_reply_begin_vc"
  # DEBUG this => &D.45811
  # DEBUG __beg => "read_reply_begin_vc"
  # DEBUG __end => &MEM[(void *)"read_reply_begin_vc" + 19B]
  # DEBUG this => &D.45811
  # DEBUG __beg => "read_reply_begin_vc"
  # DEBUG __end => &MEM[(void *)"read_reply_begin_vc" + 19B]
  # DEBUG this => &D.45811
  # DEBUG __beg => "read_reply_begin_vc"
  # DEBUG __end => &MEM[(void *)"read_reply_begin_vc" + 19B]
  # DEBUG __ptr => "read_reply_begin_vc"
  # DEBUG __first => "read_reply_begin_vc"
  # DEBUG __last => &MEM[(void *)"read_reply_begin_vc" + 19B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "read_reply_begin_vc"
  # DEBUG __last => &MEM[(void *)"read_reply_begin_vc" + 19B]
  __dnew = 19;
  _810 = std::__cxx11::basic_string<char>::_M_create (&D.45811, &__dnew, 0);
  # DEBUG D#5 => &D.45811
  # DEBUG __p => _810
  # DEBUG this => D#5
  MEM[(char * *)&D.45811] = _810;
  __dnew.173_811 = __dnew;
  # DEBUG D#6 => &D.45811
  # DEBUG __capacity => __dnew.173_811
  # DEBUG this => D#6
  MEM[(size_type *)&D.45811 + 16B] = __dnew.173_811;
  # DEBUG D#3 => &D.45811
  # DEBUG this => D#3
  # DEBUG __p => _810
  # DEBUG __k1 => "read_reply_begin_vc"
  # DEBUG __k2 => &MEM[(void *)"read_reply_begin_vc" + 19B]
  # DEBUG __d => _810
  # DEBUG __s => "read_reply_begin_vc"
  # DEBUG __n => 19
  # DEBUG __s1 => _810
  # DEBUG __s2 => "read_reply_begin_vc"
  # DEBUG __n => 19
  __builtin_memcpy (_810, "read_reply_begin_vc", 19);
  __dnew.173_814 = __dnew;
  # DEBUG this => &D.45811
  # DEBUG __n => __dnew.173_814
  # DEBUG D#7 => &D.45811
  # DEBUG __length => __dnew.173_814
  # DEBUG this => D#7
  MEM[(size_type *)&D.45811 + 8B] = __dnew.173_814;
  _815 = MEM[(char * *)&D.45811];
  # DEBUG D#3 => &D.45811
  # DEBUG this => D#3
  _816 = _815 + __dnew.173_814;
  # DEBUG __c1 => _816
  # DEBUG __c2 => D#11
  MEM[(char_type &)_816] = 0;
  __dnew ={v} {CLOBBER};
  _63 = Configuration::GetInt (config_12(D), &D.45811);

  <bb 26>:
  gReadReplyBeginVC = _63;
  # DEBUG this => &D.45811
  # DEBUG this => &D.45811
  # DEBUG this => &D.45811
  _66 = MEM[(char * *)&D.45811];
  # DEBUG D#3 => &D.45811
  # DEBUG this => D#3
  # DEBUG this => &D.45811
  if (&D.45811.D.14356._M_local_buf != _66)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#54 => D.45811.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45811
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45811
  # DEBUG this => D#3
  # DEBUG this => &D.45811
  # DEBUG D#51 => &D.45811._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _66
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _66
  # DEBUG this => D#45
  # DEBUG D.53452 => D#46
  operator delete (_66);
  pretmp_2292 = gReadReplyBeginVC;

  <bb 28>:
  # prephitmp_2293 = PHI <_63(26), pretmp_2292(27)>
  # DEBUG D#55 => &D.45811._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45811 ={v} {CLOBBER};
  # DEBUG this => &D.45810
  # DEBUG this => &D.45810
  if (prephitmp_2293 < 0)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  gNumVCs.145_68 = gNumVCs;
  gReadReplyBeginVC.153_69 = gNumVCs.145_68 / 2;
  gReadReplyBeginVC = gReadReplyBeginVC.153_69;

  <bb 30>:
  # DEBUG D#30 => &D.45813
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45813
  # DEBUG this => &D.45814
  # DEBUG __s => "read_reply_end_vc"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45814
  # DEBUG D#66 => &D.45814._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45814.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45814]._M_p = &D.45814.D.14356._M_local_buf;
  # DEBUG __s => "read_reply_end_vc"
  # DEBUG this => &D.45814
  # DEBUG __beg => "read_reply_end_vc"
  # DEBUG __end => &MEM[(void *)"read_reply_end_vc" + 17B]
  # DEBUG this => &D.45814
  # DEBUG __beg => "read_reply_end_vc"
  # DEBUG __end => &MEM[(void *)"read_reply_end_vc" + 17B]
  # DEBUG this => &D.45814
  # DEBUG __beg => "read_reply_end_vc"
  # DEBUG __end => &MEM[(void *)"read_reply_end_vc" + 17B]
  # DEBUG __ptr => "read_reply_end_vc"
  # DEBUG __first => "read_reply_end_vc"
  # DEBUG __last => &MEM[(void *)"read_reply_end_vc" + 17B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "read_reply_end_vc"
  # DEBUG __last => &MEM[(void *)"read_reply_end_vc" + 17B]
  __dnew = 17;
  _826 = std::__cxx11::basic_string<char>::_M_create (&D.45814, &__dnew, 0);
  # DEBUG D#5 => &D.45814
  # DEBUG __p => _826
  # DEBUG this => D#5
  MEM[(char * *)&D.45814] = _826;
  __dnew.173_827 = __dnew;
  # DEBUG D#6 => &D.45814
  # DEBUG __capacity => __dnew.173_827
  # DEBUG this => D#6
  MEM[(size_type *)&D.45814 + 16B] = __dnew.173_827;
  # DEBUG D#3 => &D.45814
  # DEBUG this => D#3
  # DEBUG __p => _826
  # DEBUG __k1 => "read_reply_end_vc"
  # DEBUG __k2 => &MEM[(void *)"read_reply_end_vc" + 17B]
  # DEBUG __d => _826
  # DEBUG __s => "read_reply_end_vc"
  # DEBUG __n => 17
  # DEBUG __s1 => _826
  # DEBUG __s2 => "read_reply_end_vc"
  # DEBUG __n => 17
  __builtin_memcpy (_826, "read_reply_end_vc", 17);
  __dnew.173_830 = __dnew;
  # DEBUG this => &D.45814
  # DEBUG __n => __dnew.173_830
  # DEBUG D#7 => &D.45814
  # DEBUG __length => __dnew.173_830
  # DEBUG this => D#7
  MEM[(size_type *)&D.45814 + 8B] = __dnew.173_830;
  _831 = MEM[(char * *)&D.45814];
  # DEBUG D#3 => &D.45814
  # DEBUG this => D#3
  _832 = _831 + __dnew.173_830;
  # DEBUG __c1 => _832
  # DEBUG __c2 => D#11
  MEM[(char_type &)_832] = 0;
  __dnew ={v} {CLOBBER};
  _74 = Configuration::GetInt (config_12(D), &D.45814);

  <bb 31>:
  gReadReplyEndVC = _74;
  # DEBUG this => &D.45814
  # DEBUG this => &D.45814
  # DEBUG this => &D.45814
  _77 = MEM[(char * *)&D.45814];
  # DEBUG D#3 => &D.45814
  # DEBUG this => D#3
  # DEBUG this => &D.45814
  if (&D.45814.D.14356._M_local_buf != _77)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#54 => D.45814.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45814
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45814
  # DEBUG this => D#3
  # DEBUG this => &D.45814
  # DEBUG D#51 => &D.45814._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _77
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _77
  # DEBUG this => D#45
  # DEBUG D.53470 => D#46
  operator delete (_77);
  pretmp_2294 = gReadReplyEndVC;

  <bb 33>:
  # prephitmp_2295 = PHI <_74(31), pretmp_2294(32)>
  # DEBUG D#55 => &D.45814._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45814 ={v} {CLOBBER};
  # DEBUG this => &D.45813
  # DEBUG this => &D.45813
  if (prephitmp_2295 < 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  gNumVCs.145_79 = gNumVCs;
  gReadReplyEndVC.156_80 = gNumVCs.145_79 + -1;
  gReadReplyEndVC = gReadReplyEndVC.156_80;

  <bb 35>:
  # DEBUG D#30 => &D.45816
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45816
  # DEBUG this => &D.45817
  # DEBUG __s => "write_reply_begin_vc"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45817
  # DEBUG D#66 => &D.45817._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45817.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45817]._M_p = &D.45817.D.14356._M_local_buf;
  # DEBUG __s => "write_reply_begin_vc"
  # DEBUG this => &D.45817
  # DEBUG __beg => "write_reply_begin_vc"
  # DEBUG __end => &MEM[(void *)"write_reply_begin_vc" + 20B]
  # DEBUG this => &D.45817
  # DEBUG __beg => "write_reply_begin_vc"
  # DEBUG __end => &MEM[(void *)"write_reply_begin_vc" + 20B]
  # DEBUG this => &D.45817
  # DEBUG __beg => "write_reply_begin_vc"
  # DEBUG __end => &MEM[(void *)"write_reply_begin_vc" + 20B]
  # DEBUG __ptr => "write_reply_begin_vc"
  # DEBUG __first => "write_reply_begin_vc"
  # DEBUG __last => &MEM[(void *)"write_reply_begin_vc" + 20B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "write_reply_begin_vc"
  # DEBUG __last => &MEM[(void *)"write_reply_begin_vc" + 20B]
  __dnew = 20;
  _842 = std::__cxx11::basic_string<char>::_M_create (&D.45817, &__dnew, 0);
  # DEBUG D#5 => &D.45817
  # DEBUG __p => _842
  # DEBUG this => D#5
  MEM[(char * *)&D.45817] = _842;
  __dnew.173_843 = __dnew;
  # DEBUG D#6 => &D.45817
  # DEBUG __capacity => __dnew.173_843
  # DEBUG this => D#6
  MEM[(size_type *)&D.45817 + 16B] = __dnew.173_843;
  # DEBUG D#3 => &D.45817
  # DEBUG this => D#3
  # DEBUG __p => _842
  # DEBUG __k1 => "write_reply_begin_vc"
  # DEBUG __k2 => &MEM[(void *)"write_reply_begin_vc" + 20B]
  # DEBUG __d => _842
  # DEBUG __s => "write_reply_begin_vc"
  # DEBUG __n => 20
  # DEBUG __s1 => _842
  # DEBUG __s2 => "write_reply_begin_vc"
  # DEBUG __n => 20
  __builtin_memcpy (_842, "write_reply_begin_vc", 20);
  __dnew.173_846 = __dnew;
  # DEBUG this => &D.45817
  # DEBUG __n => __dnew.173_846
  # DEBUG D#7 => &D.45817
  # DEBUG __length => __dnew.173_846
  # DEBUG this => D#7
  MEM[(size_type *)&D.45817 + 8B] = __dnew.173_846;
  _847 = MEM[(char * *)&D.45817];
  # DEBUG D#3 => &D.45817
  # DEBUG this => D#3
  _848 = _847 + __dnew.173_846;
  # DEBUG __c1 => _848
  # DEBUG __c2 => D#11
  MEM[(char_type &)_848] = 0;
  __dnew ={v} {CLOBBER};
  _85 = Configuration::GetInt (config_12(D), &D.45817);

  <bb 36>:
  gWriteReplyBeginVC = _85;
  # DEBUG this => &D.45817
  # DEBUG this => &D.45817
  # DEBUG this => &D.45817
  _88 = MEM[(char * *)&D.45817];
  # DEBUG D#3 => &D.45817
  # DEBUG this => D#3
  # DEBUG this => &D.45817
  if (&D.45817.D.14356._M_local_buf != _88)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#54 => D.45817.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45817
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45817
  # DEBUG this => D#3
  # DEBUG this => &D.45817
  # DEBUG D#51 => &D.45817._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _88
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _88
  # DEBUG this => D#45
  # DEBUG D.53488 => D#46
  operator delete (_88);
  pretmp_2296 = gWriteReplyBeginVC;

  <bb 38>:
  # prephitmp_612 = PHI <_85(36), pretmp_2296(37)>
  # DEBUG D#55 => &D.45817._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45817 ={v} {CLOBBER};
  # DEBUG this => &D.45816
  # DEBUG this => &D.45816
  if (prephitmp_612 < 0)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  gNumVCs.145_90 = gNumVCs;
  gReadReplyBeginVC.153_91 = gNumVCs.145_90 / 2;
  gWriteReplyBeginVC = gReadReplyBeginVC.153_91;

  <bb 40>:
  # DEBUG D#30 => &D.45819
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45819
  # DEBUG this => &D.45820
  # DEBUG __s => "write_reply_end_vc"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45820
  # DEBUG D#66 => &D.45820._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45820.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45820]._M_p = &D.45820.D.14356._M_local_buf;
  # DEBUG __s => "write_reply_end_vc"
  # DEBUG this => &D.45820
  # DEBUG __beg => "write_reply_end_vc"
  # DEBUG __end => &MEM[(void *)"write_reply_end_vc" + 18B]
  # DEBUG this => &D.45820
  # DEBUG __beg => "write_reply_end_vc"
  # DEBUG __end => &MEM[(void *)"write_reply_end_vc" + 18B]
  # DEBUG this => &D.45820
  # DEBUG __beg => "write_reply_end_vc"
  # DEBUG __end => &MEM[(void *)"write_reply_end_vc" + 18B]
  # DEBUG __ptr => "write_reply_end_vc"
  # DEBUG __first => "write_reply_end_vc"
  # DEBUG __last => &MEM[(void *)"write_reply_end_vc" + 18B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "write_reply_end_vc"
  # DEBUG __last => &MEM[(void *)"write_reply_end_vc" + 18B]
  __dnew = 18;
  _858 = std::__cxx11::basic_string<char>::_M_create (&D.45820, &__dnew, 0);
  # DEBUG D#5 => &D.45820
  # DEBUG __p => _858
  # DEBUG this => D#5
  MEM[(char * *)&D.45820] = _858;
  __dnew.173_859 = __dnew;
  # DEBUG D#6 => &D.45820
  # DEBUG __capacity => __dnew.173_859
  # DEBUG this => D#6
  MEM[(size_type *)&D.45820 + 16B] = __dnew.173_859;
  # DEBUG D#3 => &D.45820
  # DEBUG this => D#3
  # DEBUG __p => _858
  # DEBUG __k1 => "write_reply_end_vc"
  # DEBUG __k2 => &MEM[(void *)"write_reply_end_vc" + 18B]
  # DEBUG __d => _858
  # DEBUG __s => "write_reply_end_vc"
  # DEBUG __n => 18
  # DEBUG __s1 => _858
  # DEBUG __s2 => "write_reply_end_vc"
  # DEBUG __n => 18
  __builtin_memcpy (_858, "write_reply_end_vc", 18);
  __dnew.173_862 = __dnew;
  # DEBUG this => &D.45820
  # DEBUG __n => __dnew.173_862
  # DEBUG D#7 => &D.45820
  # DEBUG __length => __dnew.173_862
  # DEBUG this => D#7
  MEM[(size_type *)&D.45820 + 8B] = __dnew.173_862;
  _863 = MEM[(char * *)&D.45820];
  # DEBUG D#3 => &D.45820
  # DEBUG this => D#3
  _864 = _863 + __dnew.173_862;
  # DEBUG __c1 => _864
  # DEBUG __c2 => D#11
  MEM[(char_type &)_864] = 0;
  __dnew ={v} {CLOBBER};
  _96 = Configuration::GetInt (config_12(D), &D.45820);

  <bb 41>:
  gWriteReplyEndVC = _96;
  # DEBUG this => &D.45820
  # DEBUG this => &D.45820
  # DEBUG this => &D.45820
  _99 = MEM[(char * *)&D.45820];
  # DEBUG D#3 => &D.45820
  # DEBUG this => D#3
  # DEBUG this => &D.45820
  if (&D.45820.D.14356._M_local_buf != _99)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#54 => D.45820.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45820
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45820
  # DEBUG this => D#3
  # DEBUG this => &D.45820
  # DEBUG D#51 => &D.45820._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _99
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _99
  # DEBUG this => D#45
  # DEBUG D.53506 => D#46
  operator delete (_99);
  pretmp_613 = gWriteReplyEndVC;

  <bb 43>:
  # prephitmp_614 = PHI <_96(41), pretmp_613(42)>
  # DEBUG D#55 => &D.45820._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45820 ={v} {CLOBBER};
  # DEBUG this => &D.45819
  # DEBUG this => &D.45819
  if (prephitmp_614 < 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  gNumVCs.145_101 = gNumVCs;
  gReadReplyEndVC.156_102 = gNumVCs.145_101 + -1;
  gWriteReplyEndVC = gReadReplyEndVC.156_102;

  <bb 45>:
  # DEBUG D#30 => &D.45822
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45822
  # DEBUG this => &D.45823
  # DEBUG __s => "nca_fattree"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45823
  # DEBUG D#66 => &D.45823._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45823.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45823]._M_p = &D.45823.D.14356._M_local_buf;
  # DEBUG __s => "nca_fattree"
  # DEBUG this => &D.45823
  # DEBUG __beg => "nca_fattree"
  # DEBUG __end => &MEM[(void *)"nca_fattree" + 11B]
  # DEBUG this => &D.45823
  # DEBUG __beg => "nca_fattree"
  # DEBUG __end => &MEM[(void *)"nca_fattree" + 11B]
  # DEBUG this => &D.45823
  # DEBUG __beg => "nca_fattree"
  # DEBUG __end => &MEM[(void *)"nca_fattree" + 11B]
  # DEBUG __ptr => "nca_fattree"
  # DEBUG __first => "nca_fattree"
  # DEBUG __last => &MEM[(void *)"nca_fattree" + 11B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "nca_fattree"
  # DEBUG __last => &MEM[(void *)"nca_fattree" + 11B]
  # DEBUG __dnew => 11
  # DEBUG D#3 => &D.45823
  # DEBUG this => D#3
  # DEBUG __p => &D.45823.D.14356._M_local_buf
  # DEBUG __k1 => "nca_fattree"
  # DEBUG __k2 => &MEM[(void *)"nca_fattree" + 11B]
  # DEBUG __d => &D.45823.D.14356._M_local_buf
  # DEBUG __s => "nca_fattree"
  # DEBUG __n => 11
  # DEBUG __s1 => &D.45823.D.14356._M_local_buf
  # DEBUG __s2 => "nca_fattree"
  # DEBUG __n => 11
  __builtin_memcpy (&D.45823.D.14356._M_local_buf, "nca_fattree", 11);
  # DEBUG this => &D.45823
  # DEBUG __n => 11
  # DEBUG D#7 => &D.45823
  # DEBUG __length => 11
  # DEBUG this => D#7
  MEM[(size_type *)&D.45823 + 8B] = 11;
  # DEBUG D#3 => &D.45823
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45823 + 27B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45823 + 27] = 0;
  # DEBUG D#379 => {CLOBBER}
  # DEBUG __dnew => D#379
  _107 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45823);

  <bb 46>:
  *_107 = fattree_nca;
  # DEBUG this => &D.45823
  # DEBUG this => &D.45823
  # DEBUG this => &D.45823
  _110 = MEM[(char * *)&D.45823];
  # DEBUG D#3 => &D.45823
  # DEBUG this => D#3
  # DEBUG this => &D.45823
  if (&D.45823.D.14356._M_local_buf != _110)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#54 => D.45823.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45823
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45823
  # DEBUG this => D#3
  # DEBUG this => &D.45823
  # DEBUG D#51 => &D.45823._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _110
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _110
  # DEBUG this => D#45
  # DEBUG D.53525 => D#46
  operator delete (_110);

  <bb 48>:
  # DEBUG D#55 => &D.45823._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45823 ={v} {CLOBBER};
  # DEBUG this => &D.45822
  # DEBUG this => &D.45822
  # DEBUG D#30 => &D.45825
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45825
  # DEBUG this => &D.45826
  # DEBUG __s => "anca_fattree"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45826
  # DEBUG D#66 => &D.45826._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45826.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45826]._M_p = &D.45826.D.14356._M_local_buf;
  # DEBUG __s => "anca_fattree"
  # DEBUG this => &D.45826
  # DEBUG __beg => "anca_fattree"
  # DEBUG __end => &MEM[(void *)"anca_fattree" + 12B]
  # DEBUG this => &D.45826
  # DEBUG __beg => "anca_fattree"
  # DEBUG __end => &MEM[(void *)"anca_fattree" + 12B]
  # DEBUG this => &D.45826
  # DEBUG __beg => "anca_fattree"
  # DEBUG __end => &MEM[(void *)"anca_fattree" + 12B]
  # DEBUG __ptr => "anca_fattree"
  # DEBUG __first => "anca_fattree"
  # DEBUG __last => &MEM[(void *)"anca_fattree" + 12B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "anca_fattree"
  # DEBUG __last => &MEM[(void *)"anca_fattree" + 12B]
  # DEBUG __dnew => 12
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG __p => &D.45826.D.14356._M_local_buf
  # DEBUG __k1 => "anca_fattree"
  # DEBUG __k2 => &MEM[(void *)"anca_fattree" + 12B]
  # DEBUG __d => &D.45826.D.14356._M_local_buf
  # DEBUG __s => "anca_fattree"
  # DEBUG __n => 12
  # DEBUG __s1 => &D.45826.D.14356._M_local_buf
  # DEBUG __s2 => "anca_fattree"
  # DEBUG __n => 12
  __builtin_memcpy (&D.45826.D.14356._M_local_buf, "anca_fattree", 12);
  # DEBUG this => &D.45826
  # DEBUG __n => 12
  # DEBUG D#7 => &D.45826
  # DEBUG __length => 12
  # DEBUG this => D#7
  MEM[(size_type *)&D.45826 + 8B] = 12;
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45826 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45826 + 28] = 0;
  # DEBUG D#380 => {CLOBBER}
  # DEBUG __dnew => D#380
  # DEBUG __k => &D.45826
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45826
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45826
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_911 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45826
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_911
  if (__i$_M_node_911 == 0B)
    goto <bb 472>;
  else
    goto <bb 51>;

  <bb 49>:
  # __i$_M_node_1465 = PHI <__i$_M_node_915(57), __i$_M_node_916(58)>
  # __i$_M_node_1464 = PHI <__i$_M_node_872(57), __i$_M_node_876(58)>
  # DEBUG __y => __i$_M_node_1464
  # DEBUG __x => __i$_M_node_1465
  if (__i$_M_node_1465 == 0B)
    goto <bb 59>;
  else
    goto <bb 50>;

  <bb 50>:
  goto <bb 52>;

  <bb 51>:

  <bb 52>:
  # __i$_M_node_872 = PHI <__i$_M_node_911(51), __i$_M_node_1465(50)>
  # __i$_M_node_876 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(51), __i$_M_node_1464(50)>
  # DEBUG __y => __i$_M_node_876
  # DEBUG __x => __i$_M_node_872
  # DEBUG __x => __i$_M_node_872
  # DEBUG __x => __i$_M_node_872
  # DEBUG this => __i$_M_node_872
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_872]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#360 => &MEM[(const struct pair &)__i$_M_node_872 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#360
  # DEBUG __y => &D.45826
  # DEBUG this => D#59
  # DEBUG __lhs => D#360
  # DEBUG __rhs => &D.45826
  # DEBUG this => D#360
  # DEBUG __str => &D.45826
  _920 = MEM[(long unsigned int *)__i$_M_node_872 + 40B];
  # DEBUG D#1 => D#360
  # DEBUG this => D#1
  # DEBUG __size => _920
  # DEBUG D#1 => &D.45826
  # DEBUG this => D#1
  # DEBUG __osize => 12
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_2064 = MIN_EXPR <_920, 12>;
  # DEBUG __len => D#342
  # DEBUG this => &D.45826
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  _925 = MEM[(char * *)__i$_M_node_872 + 32B];
  # DEBUG D#3 => D#360
  # DEBUG this => D#3
  # DEBUG __s1 => _925
  # DEBUG __s2 => &D.45826.D.14356._M_local_buf
  # DEBUG __n => D#342
  __r_926 = __builtin_memcmp (_925, &D.45826.D.14356._M_local_buf, __len_2064);
  # DEBUG __r => NULL
  if (__r_926 == 0)
    goto <bb 53>;
  else
    goto <bb 56>;

  <bb 53>:
  # DEBUG __n1 => _920
  # DEBUG __n2 => 12
  _927 = _920 - 12;
  __d_928 = (const difference_type) _927;
  # DEBUG __d => __d_928
  if (__d_928 > 2147483647)
    goto <bb 57>;
  else
    goto <bb 54>;

  <bb 54>:
  if (__d_928 < -2147483648)
    goto <bb 58>;
  else
    goto <bb 55>;

  <bb 55>:
  __r_929 = (int) _927;

  <bb 56>:
  # __r_930 = PHI <__r_926(52), __r_929(55)>
  # DEBUG __r => __r_930
  # DEBUG D#385 => {CLOBBER}
  # DEBUG __size => D#385
  # DEBUG D#386 => {CLOBBER}
  # DEBUG __osize => D#386
  if (__r_930 >= 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_872
  __i$_M_node_915 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_872 + 16B];
  # DEBUG D#37 => __i$_M_node_872
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 49>;

  <bb 58>:
  # DEBUG __r => NULL
  __i$_M_node_916 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_872 + 24B];
  # DEBUG D#36 => __i$_M_node_872
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 49>;

  <bb 59>:
  # __i$_M_node_2379 = PHI <__i$_M_node_1464(49)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2379
  # DEBUG __i$_M_node => __i$_M_node_2379
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2379 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 472>;
  else
    goto <bb 60>;

  <bb 60>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2379
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2379]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#361 => &MEM[(struct pair &)__i$_M_node_2379 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45826
  # DEBUG __y => D#361
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45826
  # DEBUG __rhs => D#361
  # DEBUG this => &D.45826
  # DEBUG __str => D#361
  # DEBUG D#1 => &D.45826
  # DEBUG this => D#1
  # DEBUG __size => 12
  _933 = MEM[(long unsigned int *)__i$_M_node_2379 + 40B];
  # DEBUG D#1 => D#361
  # DEBUG this => D#1
  # DEBUG __osize => _933
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_933 <= 11)
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:

  <bb 62>:
  # __len_935 = PHI <_933(60), 12(61)>
  # DEBUG __len => D#343
  # DEBUG this => D#361
  _936 = MEM[(char * *)__i$_M_node_2379 + 32B];
  # DEBUG D#3 => D#361
  # DEBUG this => D#3
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG __s1 => &D.45826.D.14356._M_local_buf
  # DEBUG __s2 => _936
  # DEBUG __n => D#343
  __r_938 = __builtin_memcmp (&D.45826.D.14356._M_local_buf, _936, __len_935);
  # DEBUG __r => NULL
  if (__r_938 == 0)
    goto <bb 63>;
  else
    goto <bb 66>;

  <bb 63>:
  # DEBUG __n1 => 12
  # DEBUG __n2 => _933
  _939 = 12 - _933;
  __d_940 = (const difference_type) _939;
  # DEBUG __d => __d_940
  if (__d_940 > 2147483647)
    goto <bb 71>;
  else
    goto <bb 64>;

  <bb 64>:
  if (__d_940 < -2147483648)
    goto <bb 67>;
  else
    goto <bb 65>;

  <bb 65>:
  __r_941 = (int) _939;

  <bb 66>:
  # __r_942 = PHI <__r_938(62), __r_941(65)>
  # DEBUG __r => __r_942
  # DEBUG D#391 => {CLOBBER}
  # DEBUG __size => D#391
  # DEBUG D#392 => {CLOBBER}
  # DEBUG __osize => D#392
  if (__r_942 < 0)
    goto <bb 472>;
  else
    goto <bb 71>;

  <bb 67>:
  # __i$_M_node_1394 = PHI <__i$_M_node_2379(64), __i$_M_node_1406(472)>
  # DEBUG this => &D.56827
  # DEBUG __a => &D.45826
  # DEBUG __b => NULL
  # DEBUG this => &D.56827.first
  # DEBUG __str => &D.45826
  # DEBUG this => &D.45826
  # DEBUG D#113 => &D.45826._M_dataplus
  # DEBUG this => &D.56827.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.56827]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.56827].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.56827]._M_p = &MEM[(struct basic_string *)&D.56827].D.14356._M_local_buf;
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG D#4 => &D.45826
  # DEBUG this => D#4
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG this => &D.56827.first
  # DEBUG __beg => &D.45826.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45826 + 28B]
  # DEBUG this => &D.56827.first
  # DEBUG __beg => &D.45826.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45826 + 28B]
  # DEBUG this => &D.56827.first
  # DEBUG __beg => &D.45826.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45826 + 28B]
  # DEBUG __ptr => &D.45826.D.14356._M_local_buf
  # DEBUG __first => &D.45826.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45826 + 28B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => &D.45826.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45826 + 28B]
  # DEBUG __dnew => 12
  # DEBUG D#3 => &D.56827.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.56827].D.14356._M_local_buf
  # DEBUG __k1 => &D.45826.D.14356._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.45826 + 28B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.56827].D.14356._M_local_buf
  # DEBUG __s => &D.45826.D.14356._M_local_buf
  # DEBUG __n => 12
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.56827].D.14356._M_local_buf
  # DEBUG __s2 => &D.45826.D.14356._M_local_buf
  # DEBUG __n => 12
  __builtin_memcpy (&MEM[(struct basic_string *)&D.56827].D.14356._M_local_buf, &D.45826.D.14356._M_local_buf, 12);
  # DEBUG this => &D.56827.first
  # DEBUG __n => 12
  # DEBUG D#7 => &D.56827.first
  # DEBUG __length => 12
  # DEBUG this => D#7
  MEM[(size_type *)&D.56827 + 8B] = 12;
  # DEBUG D#3 => &D.56827.first
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.56827 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.56827 + 28] = 0;
  # DEBUG D#393 => {CLOBBER}
  # DEBUG __dnew => D#393
  D.56827.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1394
  # DEBUG __x => &D.56827
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1394;
  # DEBUG __x => &D.56827
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.56825 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.56827);

  <bb 68>:
  __i$_M_node_890 = MEM[(struct _Rb_tree_iterator *)&D.56825];
  # DEBUG __i$_M_node => __i$_M_node_890
  # DEBUG this => &D.56827
  # DEBUG D#56 => &D.56827.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _891 = MEM[(char * *)&D.56827];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.56827].D.14356._M_local_buf != _891)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _891
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _891
  # DEBUG this => D#45
  # DEBUG D.56781 => D#46
  operator delete (_891);

  <bb 70>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.56827 ={v} {CLOBBER};
  pretmp_2242 = MEM[(char * *)&D.45826];

  <bb 71>:
  # __i$_M_node_892 = PHI <__i$_M_node_2379(63), __i$_M_node_890(70), __i$_M_node_2379(66)>
  # prephitmp_2243 = PHI <&D.45826.D.14356._M_local_buf(63), pretmp_2242(70), &D.45826.D.14356._M_local_buf(66)>
  # DEBUG __i$_M_node => __i$_M_node_892
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_892
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_892]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_892 + 64] = fattree_anca;
  # DEBUG this => &D.45826
  # DEBUG this => &D.45826
  # DEBUG this => &D.45826
  # DEBUG D#546 => MEM[(char * *)&D.45826]
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG this => &D.45826
  if (&D.45826.D.14356._M_local_buf != prephitmp_2243)
    goto <bb 75>;
  else
    goto <bb 76>;

<L92>:
  # DEBUG this => &D.56827
  # DEBUG D#56 => &D.56827.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _894 = MEM[(char * *)&D.56827];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.56827].D.14356._M_local_buf != _894)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _894
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _894
  # DEBUG this => D#45
  # DEBUG D.56765 => D#46
  operator delete (_894);

  <bb 74>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.56827 ={v} {CLOBBER};
  resx 137

  <bb 75>:
  # DEBUG D#54 => D.45826.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45826
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG this => &D.45826
  # DEBUG D#51 => &D.45826._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#546
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#546
  # DEBUG this => D#45
  # DEBUG D.53543 => D#46
  operator delete (prephitmp_2243);

  <bb 76>:
  # DEBUG D#55 => &D.45826._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45826 ={v} {CLOBBER};
  # DEBUG this => &D.45825
  # DEBUG this => &D.45825
  # DEBUG D#30 => &D.45828
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45828
  # DEBUG this => &D.45829
  # DEBUG __s => "nca_qtree"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45829
  # DEBUG D#66 => &D.45829._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45829.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45829]._M_p = &D.45829.D.14356._M_local_buf;
  # DEBUG __s => "nca_qtree"
  # DEBUG this => &D.45829
  # DEBUG __beg => "nca_qtree"
  # DEBUG __end => &MEM[(void *)"nca_qtree" + 9B]
  # DEBUG this => &D.45829
  # DEBUG __beg => "nca_qtree"
  # DEBUG __end => &MEM[(void *)"nca_qtree" + 9B]
  # DEBUG this => &D.45829
  # DEBUG __beg => "nca_qtree"
  # DEBUG __end => &MEM[(void *)"nca_qtree" + 9B]
  # DEBUG __ptr => "nca_qtree"
  # DEBUG __first => "nca_qtree"
  # DEBUG __last => &MEM[(void *)"nca_qtree" + 9B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "nca_qtree"
  # DEBUG __last => &MEM[(void *)"nca_qtree" + 9B]
  # DEBUG __dnew => 9
  # DEBUG D#3 => &D.45829
  # DEBUG this => D#3
  # DEBUG __p => &D.45829.D.14356._M_local_buf
  # DEBUG __k1 => "nca_qtree"
  # DEBUG __k2 => &MEM[(void *)"nca_qtree" + 9B]
  # DEBUG __d => &D.45829.D.14356._M_local_buf
  # DEBUG __s => "nca_qtree"
  # DEBUG __n => 9
  # DEBUG __s1 => &D.45829.D.14356._M_local_buf
  # DEBUG __s2 => "nca_qtree"
  # DEBUG __n => 9
  __builtin_memcpy (&D.45829.D.14356._M_local_buf, "nca_qtree", 9);
  # DEBUG this => &D.45829
  # DEBUG __n => 9
  # DEBUG D#7 => &D.45829
  # DEBUG __length => 9
  # DEBUG this => D#7
  MEM[(size_type *)&D.45829 + 8B] = 9;
  # DEBUG D#3 => &D.45829
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45829 + 25B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45829 + 25] = 0;
  # DEBUG D#394 => {CLOBBER}
  # DEBUG __dnew => D#394
  _121 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45829);

  <bb 77>:
  *_121 = qtree_nca;
  # DEBUG this => &D.45829
  # DEBUG this => &D.45829
  # DEBUG this => &D.45829
  _124 = MEM[(char * *)&D.45829];
  # DEBUG D#3 => &D.45829
  # DEBUG this => D#3
  # DEBUG this => &D.45829
  if (&D.45829.D.14356._M_local_buf != _124)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#54 => D.45829.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45829
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45829
  # DEBUG this => D#3
  # DEBUG this => &D.45829
  # DEBUG D#51 => &D.45829._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _124
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _124
  # DEBUG this => D#45
  # DEBUG D.53561 => D#46
  operator delete (_124);

  <bb 79>:
  # DEBUG D#55 => &D.45829._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45829 ={v} {CLOBBER};
  # DEBUG this => &D.45828
  # DEBUG this => &D.45828
  # DEBUG D#30 => &D.45831
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45831
  # DEBUG this => &D.45832
  # DEBUG __s => "nca_tree4"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45832
  # DEBUG D#66 => &D.45832._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45832.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45832]._M_p = &D.45832.D.14356._M_local_buf;
  # DEBUG __s => "nca_tree4"
  # DEBUG this => &D.45832
  # DEBUG __beg => "nca_tree4"
  # DEBUG __end => &MEM[(void *)"nca_tree4" + 9B]
  # DEBUG this => &D.45832
  # DEBUG __beg => "nca_tree4"
  # DEBUG __end => &MEM[(void *)"nca_tree4" + 9B]
  # DEBUG this => &D.45832
  # DEBUG __beg => "nca_tree4"
  # DEBUG __end => &MEM[(void *)"nca_tree4" + 9B]
  # DEBUG __ptr => "nca_tree4"
  # DEBUG __first => "nca_tree4"
  # DEBUG __last => &MEM[(void *)"nca_tree4" + 9B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "nca_tree4"
  # DEBUG __last => &MEM[(void *)"nca_tree4" + 9B]
  # DEBUG __dnew => 9
  # DEBUG D#3 => &D.45832
  # DEBUG this => D#3
  # DEBUG __p => &D.45832.D.14356._M_local_buf
  # DEBUG __k1 => "nca_tree4"
  # DEBUG __k2 => &MEM[(void *)"nca_tree4" + 9B]
  # DEBUG __d => &D.45832.D.14356._M_local_buf
  # DEBUG __s => "nca_tree4"
  # DEBUG __n => 9
  # DEBUG __s1 => &D.45832.D.14356._M_local_buf
  # DEBUG __s2 => "nca_tree4"
  # DEBUG __n => 9
  __builtin_memcpy (&D.45832.D.14356._M_local_buf, "nca_tree4", 9);
  # DEBUG this => &D.45832
  # DEBUG __n => 9
  # DEBUG D#7 => &D.45832
  # DEBUG __length => 9
  # DEBUG this => D#7
  MEM[(size_type *)&D.45832 + 8B] = 9;
  # DEBUG D#3 => &D.45832
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45832 + 25B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45832 + 25] = 0;
  # DEBUG D#395 => {CLOBBER}
  # DEBUG __dnew => D#395
  _128 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45832);

  <bb 80>:
  *_128 = tree4_nca;
  # DEBUG this => &D.45832
  # DEBUG this => &D.45832
  # DEBUG this => &D.45832
  _131 = MEM[(char * *)&D.45832];
  # DEBUG D#3 => &D.45832
  # DEBUG this => D#3
  # DEBUG this => &D.45832
  if (&D.45832.D.14356._M_local_buf != _131)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  # DEBUG D#54 => D.45832.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45832
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45832
  # DEBUG this => D#3
  # DEBUG this => &D.45832
  # DEBUG D#51 => &D.45832._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _131
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _131
  # DEBUG this => D#45
  # DEBUG D.53579 => D#46
  operator delete (_131);

  <bb 82>:
  # DEBUG D#55 => &D.45832._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45832 ={v} {CLOBBER};
  # DEBUG this => &D.45831
  # DEBUG this => &D.45831
  # DEBUG D#30 => &D.45834
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45834
  # DEBUG this => &D.45835
  # DEBUG __s => "anca_tree4"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45835
  # DEBUG D#66 => &D.45835._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45835.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45835]._M_p = &D.45835.D.14356._M_local_buf;
  # DEBUG __s => "anca_tree4"
  # DEBUG this => &D.45835
  # DEBUG __beg => "anca_tree4"
  # DEBUG __end => &MEM[(void *)"anca_tree4" + 10B]
  # DEBUG this => &D.45835
  # DEBUG __beg => "anca_tree4"
  # DEBUG __end => &MEM[(void *)"anca_tree4" + 10B]
  # DEBUG this => &D.45835
  # DEBUG __beg => "anca_tree4"
  # DEBUG __end => &MEM[(void *)"anca_tree4" + 10B]
  # DEBUG __ptr => "anca_tree4"
  # DEBUG __first => "anca_tree4"
  # DEBUG __last => &MEM[(void *)"anca_tree4" + 10B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "anca_tree4"
  # DEBUG __last => &MEM[(void *)"anca_tree4" + 10B]
  # DEBUG __dnew => 10
  # DEBUG D#3 => &D.45835
  # DEBUG this => D#3
  # DEBUG __p => &D.45835.D.14356._M_local_buf
  # DEBUG __k1 => "anca_tree4"
  # DEBUG __k2 => &MEM[(void *)"anca_tree4" + 10B]
  # DEBUG __d => &D.45835.D.14356._M_local_buf
  # DEBUG __s => "anca_tree4"
  # DEBUG __n => 10
  # DEBUG __s1 => &D.45835.D.14356._M_local_buf
  # DEBUG __s2 => "anca_tree4"
  # DEBUG __n => 10
  __builtin_memcpy (&D.45835.D.14356._M_local_buf, "anca_tree4", 10);
  # DEBUG this => &D.45835
  # DEBUG __n => 10
  # DEBUG D#7 => &D.45835
  # DEBUG __length => 10
  # DEBUG this => D#7
  MEM[(size_type *)&D.45835 + 8B] = 10;
  # DEBUG D#3 => &D.45835
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45835 + 26B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45835 + 26] = 0;
  # DEBUG D#396 => {CLOBBER}
  # DEBUG __dnew => D#396
  _135 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45835);

  <bb 83>:
  *_135 = tree4_anca;
  # DEBUG this => &D.45835
  # DEBUG this => &D.45835
  # DEBUG this => &D.45835
  _138 = MEM[(char * *)&D.45835];
  # DEBUG D#3 => &D.45835
  # DEBUG this => D#3
  # DEBUG this => &D.45835
  if (&D.45835.D.14356._M_local_buf != _138)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  # DEBUG D#54 => D.45835.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45835
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45835
  # DEBUG this => D#3
  # DEBUG this => &D.45835
  # DEBUG D#51 => &D.45835._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _138
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _138
  # DEBUG this => D#45
  # DEBUG D.53597 => D#46
  operator delete (_138);

  <bb 85>:
  # DEBUG D#55 => &D.45835._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45835 ={v} {CLOBBER};
  # DEBUG this => &D.45834
  # DEBUG this => &D.45834
  # DEBUG D#30 => &D.45837
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45837
  # DEBUG this => &D.45838
  # DEBUG __s => "dor_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45838
  # DEBUG D#66 => &D.45838._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45838.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45838]._M_p = &D.45838.D.14356._M_local_buf;
  # DEBUG __s => "dor_mesh"
  # DEBUG this => &D.45838
  # DEBUG __beg => "dor_mesh"
  # DEBUG __end => &MEM[(void *)"dor_mesh" + 8B]
  # DEBUG this => &D.45838
  # DEBUG __beg => "dor_mesh"
  # DEBUG __end => &MEM[(void *)"dor_mesh" + 8B]
  # DEBUG this => &D.45838
  # DEBUG __beg => "dor_mesh"
  # DEBUG __end => &MEM[(void *)"dor_mesh" + 8B]
  # DEBUG __ptr => "dor_mesh"
  # DEBUG __first => "dor_mesh"
  # DEBUG __last => &MEM[(void *)"dor_mesh" + 8B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "dor_mesh"
  # DEBUG __last => &MEM[(void *)"dor_mesh" + 8B]
  # DEBUG __dnew => 8
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG __p => &D.45838.D.14356._M_local_buf
  # DEBUG __k1 => "dor_mesh"
  # DEBUG __k2 => &MEM[(void *)"dor_mesh" + 8B]
  # DEBUG __d => &D.45838.D.14356._M_local_buf
  # DEBUG __s => "dor_mesh"
  # DEBUG __n => 8
  # DEBUG __s1 => &D.45838.D.14356._M_local_buf
  # DEBUG __s2 => "dor_mesh"
  # DEBUG __n => 8
  __builtin_memcpy (&D.45838.D.14356._M_local_buf, "dor_mesh", 8);
  # DEBUG this => &D.45838
  # DEBUG __n => 8
  # DEBUG D#7 => &D.45838
  # DEBUG __length => 8
  # DEBUG this => D#7
  MEM[(size_type *)&D.45838 + 8B] = 8;
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45838 + 24B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45838 + 24] = 0;
  # DEBUG D#397 => {CLOBBER}
  # DEBUG __dnew => D#397
  # DEBUG __k => &D.45838
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45838
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45838
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_1034 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45838
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_1034
  if (__i$_M_node_1034 == 0B)
    goto <bb 473>;
  else
    goto <bb 88>;

  <bb 86>:
  # __i$_M_node_1389 = PHI <__i$_M_node_1038(94), __i$_M_node_1039(95)>
  # __i$_M_node_1402 = PHI <__i$_M_node_732(94), __i$_M_node_19(95)>
  # DEBUG __y => __i$_M_node_1402
  # DEBUG __x => __i$_M_node_1389
  if (__i$_M_node_1389 == 0B)
    goto <bb 96>;
  else
    goto <bb 87>;

  <bb 87>:
  goto <bb 89>;

  <bb 88>:

  <bb 89>:
  # __i$_M_node_732 = PHI <__i$_M_node_1034(88), __i$_M_node_1389(87)>
  # __i$_M_node_19 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(88), __i$_M_node_1402(87)>
  # DEBUG __y => __i$_M_node_19
  # DEBUG __x => __i$_M_node_732
  # DEBUG __x => __i$_M_node_732
  # DEBUG __x => __i$_M_node_732
  # DEBUG this => __i$_M_node_732
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_732]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#362 => &MEM[(const struct pair &)__i$_M_node_732 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#362
  # DEBUG __y => &D.45838
  # DEBUG this => D#59
  # DEBUG __lhs => D#362
  # DEBUG __rhs => &D.45838
  # DEBUG this => D#362
  # DEBUG __str => &D.45838
  _1043 = MEM[(long unsigned int *)__i$_M_node_732 + 40B];
  # DEBUG D#1 => D#362
  # DEBUG this => D#1
  # DEBUG __size => _1043
  # DEBUG D#1 => &D.45838
  # DEBUG this => D#1
  # DEBUG __osize => 8
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1443 = MIN_EXPR <_1043, 8>;
  # DEBUG __len => D#344
  # DEBUG this => &D.45838
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  _1048 = MEM[(char * *)__i$_M_node_732 + 32B];
  # DEBUG D#3 => D#362
  # DEBUG this => D#3
  # DEBUG __s1 => _1048
  # DEBUG __s2 => &D.45838.D.14356._M_local_buf
  # DEBUG __n => D#344
  __r_1049 = __builtin_memcmp (_1048, &D.45838.D.14356._M_local_buf, __len_1443);
  # DEBUG __r => NULL
  if (__r_1049 == 0)
    goto <bb 90>;
  else
    goto <bb 93>;

  <bb 90>:
  # DEBUG __n1 => _1043
  # DEBUG __n2 => 8
  _1050 = _1043 - 8;
  __d_1051 = (const difference_type) _1050;
  # DEBUG __d => __d_1051
  if (__d_1051 > 2147483647)
    goto <bb 94>;
  else
    goto <bb 91>;

  <bb 91>:
  if (__d_1051 < -2147483648)
    goto <bb 95>;
  else
    goto <bb 92>;

  <bb 92>:
  __r_1052 = (int) _1050;

  <bb 93>:
  # __r_1053 = PHI <__r_1049(89), __r_1052(92)>
  # DEBUG __r => __r_1053
  # DEBUG D#402 => {CLOBBER}
  # DEBUG __size => D#402
  # DEBUG D#403 => {CLOBBER}
  # DEBUG __osize => D#403
  if (__r_1053 >= 0)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_732
  __i$_M_node_1038 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_732 + 16B];
  # DEBUG D#37 => __i$_M_node_732
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 86>;

  <bb 95>:
  # DEBUG __r => NULL
  __i$_M_node_1039 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_732 + 24B];
  # DEBUG D#36 => __i$_M_node_732
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 86>;

  <bb 96>:
  # __i$_M_node_2381 = PHI <__i$_M_node_1402(86)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2381
  # DEBUG __i$_M_node => __i$_M_node_2381
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2381 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 473>;
  else
    goto <bb 97>;

  <bb 97>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2381
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2381]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#363 => &MEM[(struct pair &)__i$_M_node_2381 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45838
  # DEBUG __y => D#363
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45838
  # DEBUG __rhs => D#363
  # DEBUG this => &D.45838
  # DEBUG __str => D#363
  # DEBUG D#1 => &D.45838
  # DEBUG this => D#1
  # DEBUG __size => 8
  _1056 = MEM[(long unsigned int *)__i$_M_node_2381 + 40B];
  # DEBUG D#1 => D#363
  # DEBUG this => D#1
  # DEBUG __osize => _1056
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1056 <= 7)
    goto <bb 99>;
  else
    goto <bb 98>;

  <bb 98>:

  <bb 99>:
  # __len_1058 = PHI <_1056(97), 8(98)>
  # DEBUG __len => D#345
  # DEBUG this => D#363
  _1059 = MEM[(char * *)__i$_M_node_2381 + 32B];
  # DEBUG D#3 => D#363
  # DEBUG this => D#3
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG __s1 => &D.45838.D.14356._M_local_buf
  # DEBUG __s2 => _1059
  # DEBUG __n => D#345
  __r_1061 = __builtin_memcmp (&D.45838.D.14356._M_local_buf, _1059, __len_1058);
  # DEBUG __r => NULL
  if (__r_1061 == 0)
    goto <bb 100>;
  else
    goto <bb 103>;

  <bb 100>:
  # DEBUG __n1 => 8
  # DEBUG __n2 => _1056
  _1062 = 8 - _1056;
  __d_1063 = (const difference_type) _1062;
  # DEBUG __d => __d_1063
  if (__d_1063 > 2147483647)
    goto <bb 108>;
  else
    goto <bb 101>;

  <bb 101>:
  if (__d_1063 < -2147483648)
    goto <bb 104>;
  else
    goto <bb 102>;

  <bb 102>:
  __r_1064 = (int) _1062;

  <bb 103>:
  # __r_1065 = PHI <__r_1061(99), __r_1064(102)>
  # DEBUG __r => __r_1065
  # DEBUG D#408 => {CLOBBER}
  # DEBUG __size => D#408
  # DEBUG D#409 => {CLOBBER}
  # DEBUG __osize => D#409
  if (__r_1065 < 0)
    goto <bb 473>;
  else
    goto <bb 108>;

  <bb 104>:
  # __i$_M_node_1469 = PHI <__i$_M_node_2381(101), __i$_M_node_789(473)>
  # DEBUG this => &D.57158
  # DEBUG __a => &D.45838
  # DEBUG __b => NULL
  # DEBUG this => &D.57158.first
  # DEBUG __str => &D.45838
  # DEBUG this => &D.45838
  # DEBUG D#113 => &D.45838._M_dataplus
  # DEBUG this => &D.57158.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.57158]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.57158].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.57158]._M_p = &MEM[(struct basic_string *)&D.57158].D.14356._M_local_buf;
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG D#4 => &D.45838
  # DEBUG this => D#4
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG this => &D.57158.first
  # DEBUG __beg => &D.45838.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45838 + 24B]
  # DEBUG this => &D.57158.first
  # DEBUG __beg => &D.45838.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45838 + 24B]
  # DEBUG this => &D.57158.first
  # DEBUG __beg => &D.45838.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45838 + 24B]
  # DEBUG __ptr => &D.45838.D.14356._M_local_buf
  # DEBUG __first => &D.45838.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45838 + 24B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => &D.45838.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45838 + 24B]
  # DEBUG __dnew => 8
  # DEBUG D#3 => &D.57158.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.57158].D.14356._M_local_buf
  # DEBUG __k1 => &D.45838.D.14356._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.45838 + 24B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.57158].D.14356._M_local_buf
  # DEBUG __s => &D.45838.D.14356._M_local_buf
  # DEBUG __n => 8
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.57158].D.14356._M_local_buf
  # DEBUG __s2 => &D.45838.D.14356._M_local_buf
  # DEBUG __n => 8
  _2008 = MEM[(char * {ref-all})&D.45838 + 16B];
  MEM[(char * {ref-all})&D.57158 + 16B] = _2008;
  # DEBUG this => &D.57158.first
  # DEBUG __n => 8
  # DEBUG D#7 => &D.57158.first
  # DEBUG __length => 8
  # DEBUG this => D#7
  MEM[(size_type *)&D.57158 + 8B] = 8;
  # DEBUG D#3 => &D.57158.first
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.57158 + 24B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.57158 + 24] = 0;
  # DEBUG D#410 => {CLOBBER}
  # DEBUG __dnew => D#410
  D.57158.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1469
  # DEBUG __x => &D.57158
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1469;
  # DEBUG __x => &D.57158
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.57156 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.57158);

  <bb 105>:
  __i$_M_node_1013 = MEM[(struct _Rb_tree_iterator *)&D.57156];
  # DEBUG __i$_M_node => __i$_M_node_1013
  # DEBUG this => &D.57158
  # DEBUG D#56 => &D.57158.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1014 = MEM[(char * *)&D.57158];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.57158].D.14356._M_local_buf != _1014)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1014
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1014
  # DEBUG this => D#45
  # DEBUG D.57112 => D#46
  operator delete (_1014);

  <bb 107>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.57158 ={v} {CLOBBER};
  pretmp_617 = MEM[(char * *)&D.45838];

  <bb 108>:
  # __i$_M_node_1015 = PHI <__i$_M_node_2381(100), __i$_M_node_1013(107), __i$_M_node_2381(103)>
  # prephitmp_618 = PHI <&D.45838.D.14356._M_local_buf(100), pretmp_617(107), &D.45838.D.14356._M_local_buf(103)>
  # DEBUG __i$_M_node => __i$_M_node_1015
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1015
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1015]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_1015 + 64] = dim_order_mesh;
  # DEBUG this => &D.45838
  # DEBUG this => &D.45838
  # DEBUG this => &D.45838
  # DEBUG D#545 => MEM[(char * *)&D.45838]
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG this => &D.45838
  if (&D.45838.D.14356._M_local_buf != prephitmp_618)
    goto <bb 112>;
  else
    goto <bb 113>;

<L93>:
  # DEBUG this => &D.57158
  # DEBUG D#56 => &D.57158.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1017 = MEM[(char * *)&D.57158];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.57158].D.14356._M_local_buf != _1017)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1017
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1017
  # DEBUG this => D#45
  # DEBUG D.57096 => D#46
  operator delete (_1017);

  <bb 111>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.57158 ={v} {CLOBBER};
  resx 138

  <bb 112>:
  # DEBUG D#54 => D.45838.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45838
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG this => &D.45838
  # DEBUG D#51 => &D.45838._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#545
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#545
  # DEBUG this => D#45
  # DEBUG D.53615 => D#46
  operator delete (prephitmp_618);

  <bb 113>:
  # DEBUG D#55 => &D.45838._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45838 ={v} {CLOBBER};
  # DEBUG this => &D.45837
  # DEBUG this => &D.45837
  # DEBUG D#30 => &D.45840
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45840
  # DEBUG this => &D.45841
  # DEBUG __s => "xy_yx_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45841
  # DEBUG D#66 => &D.45841._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45841.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45841]._M_p = &D.45841.D.14356._M_local_buf;
  # DEBUG __s => "xy_yx_mesh"
  # DEBUG this => &D.45841
  # DEBUG __beg => "xy_yx_mesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_mesh" + 10B]
  # DEBUG this => &D.45841
  # DEBUG __beg => "xy_yx_mesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_mesh" + 10B]
  # DEBUG this => &D.45841
  # DEBUG __beg => "xy_yx_mesh"
  # DEBUG __end => &MEM[(void *)"xy_yx_mesh" + 10B]
  # DEBUG __ptr => "xy_yx_mesh"
  # DEBUG __first => "xy_yx_mesh"
  # DEBUG __last => &MEM[(void *)"xy_yx_mesh" + 10B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "xy_yx_mesh"
  # DEBUG __last => &MEM[(void *)"xy_yx_mesh" + 10B]
  # DEBUG __dnew => 10
  # DEBUG D#3 => &D.45841
  # DEBUG this => D#3
  # DEBUG __p => &D.45841.D.14356._M_local_buf
  # DEBUG __k1 => "xy_yx_mesh"
  # DEBUG __k2 => &MEM[(void *)"xy_yx_mesh" + 10B]
  # DEBUG __d => &D.45841.D.14356._M_local_buf
  # DEBUG __s => "xy_yx_mesh"
  # DEBUG __n => 10
  # DEBUG __s1 => &D.45841.D.14356._M_local_buf
  # DEBUG __s2 => "xy_yx_mesh"
  # DEBUG __n => 10
  __builtin_memcpy (&D.45841.D.14356._M_local_buf, "xy_yx_mesh", 10);
  # DEBUG this => &D.45841
  # DEBUG __n => 10
  # DEBUG D#7 => &D.45841
  # DEBUG __length => 10
  # DEBUG this => D#7
  MEM[(size_type *)&D.45841 + 8B] = 10;
  # DEBUG D#3 => &D.45841
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45841 + 26B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45841 + 26] = 0;
  # DEBUG D#411 => {CLOBBER}
  # DEBUG __dnew => D#411
  _149 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45841);

  <bb 114>:
  *_149 = xy_yx_mesh;
  # DEBUG this => &D.45841
  # DEBUG this => &D.45841
  # DEBUG this => &D.45841
  _152 = MEM[(char * *)&D.45841];
  # DEBUG D#3 => &D.45841
  # DEBUG this => D#3
  # DEBUG this => &D.45841
  if (&D.45841.D.14356._M_local_buf != _152)
    goto <bb 115>;
  else
    goto <bb 116>;

  <bb 115>:
  # DEBUG D#54 => D.45841.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45841
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45841
  # DEBUG this => D#3
  # DEBUG this => &D.45841
  # DEBUG D#51 => &D.45841._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _152
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _152
  # DEBUG this => D#45
  # DEBUG D.53633 => D#46
  operator delete (_152);

  <bb 116>:
  # DEBUG D#55 => &D.45841._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45841 ={v} {CLOBBER};
  # DEBUG this => &D.45840
  # DEBUG this => &D.45840
  # DEBUG D#30 => &D.45843
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45843
  # DEBUG this => &D.45844
  # DEBUG __s => "adaptive_xy_yx_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45844
  # DEBUG D#66 => &D.45844._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45844.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45844]._M_p = &D.45844.D.14356._M_local_buf;
  # DEBUG __s => "adaptive_xy_yx_mesh"
  # DEBUG this => &D.45844
  # DEBUG __beg => "adaptive_xy_yx_mesh"
  # DEBUG __end => &MEM[(void *)"adaptive_xy_yx_mesh" + 19B]
  # DEBUG this => &D.45844
  # DEBUG __beg => "adaptive_xy_yx_mesh"
  # DEBUG __end => &MEM[(void *)"adaptive_xy_yx_mesh" + 19B]
  # DEBUG this => &D.45844
  # DEBUG __beg => "adaptive_xy_yx_mesh"
  # DEBUG __end => &MEM[(void *)"adaptive_xy_yx_mesh" + 19B]
  # DEBUG __ptr => "adaptive_xy_yx_mesh"
  # DEBUG __first => "adaptive_xy_yx_mesh"
  # DEBUG __last => &MEM[(void *)"adaptive_xy_yx_mesh" + 19B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "adaptive_xy_yx_mesh"
  # DEBUG __last => &MEM[(void *)"adaptive_xy_yx_mesh" + 19B]
  __dnew = 19;
  _1117 = std::__cxx11::basic_string<char>::_M_create (&D.45844, &__dnew, 0);
  # DEBUG D#5 => &D.45844
  # DEBUG __p => _1117
  # DEBUG this => D#5
  MEM[(char * *)&D.45844] = _1117;
  __dnew.173_1118 = __dnew;
  # DEBUG D#6 => &D.45844
  # DEBUG __capacity => __dnew.173_1118
  # DEBUG this => D#6
  MEM[(size_type *)&D.45844 + 16B] = __dnew.173_1118;
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  # DEBUG __p => _1117
  # DEBUG __k1 => "adaptive_xy_yx_mesh"
  # DEBUG __k2 => &MEM[(void *)"adaptive_xy_yx_mesh" + 19B]
  # DEBUG __d => _1117
  # DEBUG __s => "adaptive_xy_yx_mesh"
  # DEBUG __n => 19
  # DEBUG __s1 => _1117
  # DEBUG __s2 => "adaptive_xy_yx_mesh"
  # DEBUG __n => 19
  __builtin_memcpy (_1117, "adaptive_xy_yx_mesh", 19);
  __dnew.173_1121 = __dnew;
  # DEBUG this => &D.45844
  # DEBUG __n => __dnew.173_1121
  # DEBUG D#7 => &D.45844
  # DEBUG __length => __dnew.173_1121
  # DEBUG this => D#7
  MEM[(size_type *)&D.45844 + 8B] = __dnew.173_1121;
  _1122 = MEM[(char * *)&D.45844];
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  _1123 = _1122 + __dnew.173_1121;
  # DEBUG __c1 => _1123
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1123] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG __k => &D.45844
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45844
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45844
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_1125 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45844
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_1125
  if (__i$_M_node_1125 == 0B)
    goto <bb 474>;
  else
    goto <bb 117>;

  <bb 117>:
  pretmp_550 = MEM[(long unsigned int *)&D.45844 + 8B];
  pretmp_543 = MEM[(char * *)&D.45844];
  goto <bb 120>;

  <bb 118>:
  # __i$_M_node_1327 = PHI <__i$_M_node_1129(125), __i$_M_node_1130(126)>
  # __i$_M_node_1339 = PHI <__i$_M_node_888(125), __i$_M_node_944(126)>
  # DEBUG __y => __i$_M_node_1339
  # DEBUG __x => __i$_M_node_1327
  if (__i$_M_node_1327 == 0B)
    goto <bb 127>;
  else
    goto <bb 119>;

  <bb 119>:

  <bb 120>:
  # __i$_M_node_888 = PHI <__i$_M_node_1125(117), __i$_M_node_1327(119)>
  # __i$_M_node_944 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(117), __i$_M_node_1339(119)>
  # DEBUG __y => __i$_M_node_944
  # DEBUG __x => __i$_M_node_888
  # DEBUG __x => __i$_M_node_888
  # DEBUG __x => __i$_M_node_888
  # DEBUG this => __i$_M_node_888
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_888]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#364 => &MEM[(const struct pair &)__i$_M_node_888 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#364
  # DEBUG __y => &D.45844
  # DEBUG this => D#59
  # DEBUG __lhs => D#364
  # DEBUG __rhs => &D.45844
  # DEBUG this => D#364
  # DEBUG __str => &D.45844
  _1134 = MEM[(long unsigned int *)__i$_M_node_888 + 40B];
  # DEBUG D#1 => D#364
  # DEBUG this => D#1
  # DEBUG __size => _1134
  # DEBUG D#544 => MEM[(long unsigned int *)&D.45844 + 8B]
  # DEBUG D#1 => &D.45844
  # DEBUG this => D#1
  # DEBUG __osize => D#544
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_2018 = MIN_EXPR <pretmp_550, _1134>;
  # DEBUG __len => D#346
  # DEBUG this => &D.45844
  # DEBUG D#543 => MEM[(char * *)&D.45844]
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  _1139 = MEM[(char * *)__i$_M_node_888 + 32B];
  # DEBUG D#3 => D#364
  # DEBUG this => D#3
  # DEBUG __s1 => _1139
  # DEBUG __s2 => D#543
  # DEBUG __n => D#346
  __r_1140 = __builtin_memcmp (_1139, pretmp_543, __len_2018);
  # DEBUG __r => NULL
  if (__r_1140 == 0)
    goto <bb 121>;
  else
    goto <bb 124>;

  <bb 121>:
  # DEBUG __n1 => _1134
  # DEBUG __n2 => D#544
  _1141 = _1134 - pretmp_550;
  __d_1142 = (const difference_type) _1141;
  # DEBUG __d => __d_1142
  if (__d_1142 > 2147483647)
    goto <bb 125>;
  else
    goto <bb 122>;

  <bb 122>:
  if (__d_1142 < -2147483648)
    goto <bb 126>;
  else
    goto <bb 123>;

  <bb 123>:
  __r_1143 = (int) _1141;

  <bb 124>:
  # __r_1144 = PHI <__r_1140(120), __r_1143(123)>
  # DEBUG __r => __r_1144
  # DEBUG D#416 => {CLOBBER}
  # DEBUG __size => D#416
  # DEBUG D#417 => {CLOBBER}
  # DEBUG __osize => D#417
  if (__r_1144 >= 0)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 125>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_888
  __i$_M_node_1129 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_888 + 16B];
  # DEBUG D#37 => __i$_M_node_888
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 118>;

  <bb 126>:
  # DEBUG __r => NULL
  __i$_M_node_1130 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_888 + 24B];
  # DEBUG D#36 => __i$_M_node_888
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 118>;

  <bb 127>:
  # __i$_M_node_2392 = PHI <__i$_M_node_1339(118)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2392
  # DEBUG __i$_M_node => __i$_M_node_2392
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2392 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 475>;
  else
    goto <bb 128>;

  <bb 128>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2392
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2392]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#365 => &MEM[(struct pair &)__i$_M_node_2392 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45844
  # DEBUG __y => D#365
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45844
  # DEBUG __rhs => D#365
  # DEBUG this => &D.45844
  # DEBUG __str => D#365
  # DEBUG D#542 => MEM[(long unsigned int *)&D.45844 + 8B]
  # DEBUG D#1 => &D.45844
  # DEBUG this => D#1
  # DEBUG __size => D#542
  _1147 = MEM[(long unsigned int *)__i$_M_node_2392 + 40B];
  # DEBUG D#1 => D#365
  # DEBUG this => D#1
  # DEBUG __osize => _1147
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_2039 = MIN_EXPR <pretmp_550, _1147>;
  # DEBUG __len => D#347
  # DEBUG this => D#365
  _1150 = MEM[(char * *)__i$_M_node_2392 + 32B];
  # DEBUG D#3 => D#365
  # DEBUG this => D#3
  # DEBUG D#541 => MEM[(char * *)&D.45844]
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  # DEBUG __s1 => D#541
  # DEBUG __s2 => _1150
  # DEBUG __n => D#347
  __r_1152 = __builtin_memcmp (pretmp_543, _1150, __len_2039);
  # DEBUG __r => NULL
  if (__r_1152 == 0)
    goto <bb 129>;
  else
    goto <bb 132>;

  <bb 129>:
  # DEBUG __n1 => D#542
  # DEBUG __n2 => _1147
  _1153 = pretmp_550 - _1147;
  __d_1154 = (const difference_type) _1153;
  # DEBUG __d => __d_1154
  if (__d_1154 > 2147483647)
    goto <bb 143>;
  else
    goto <bb 130>;

  <bb 130>:
  if (__d_1154 < -2147483648)
    goto <bb 133>;
  else
    goto <bb 131>;

  <bb 131>:
  __r_1155 = (int) _1153;

  <bb 132>:
  # __r_1156 = PHI <__r_1152(128), __r_1155(131)>
  # DEBUG __r => __r_1156
  # DEBUG D#422 => {CLOBBER}
  # DEBUG __size => D#422
  # DEBUG D#423 => {CLOBBER}
  # DEBUG __osize => D#423
  if (__r_1156 < 0)
    goto <bb 475>;
  else
    goto <bb 143>;

  <bb 133>:
  # __i$_M_node_1319 = PHI <__i$_M_node_2392(130), __i$_M_node_837(475)>
  # prephitmp_718 = PHI <pretmp_550(130), prephitmp_620(475)>
  # prephitmp_719 = PHI <pretmp_543(130), prephitmp_623(475)>
  # DEBUG this => &D.57399
  # DEBUG __a => &D.45844
  # DEBUG __b => NULL
  # DEBUG this => &D.57399.first
  # DEBUG __str => &D.45844
  # DEBUG this => &D.45844
  # DEBUG D#113 => &D.45844._M_dataplus
  # DEBUG this => &D.57399.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.57399]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.57399].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.57399]._M_p = &MEM[(struct basic_string *)&D.57399].D.14356._M_local_buf;
  # DEBUG D#540 => MEM[(char * *)&D.45844]
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  # DEBUG D#539 => MEM[(long unsigned int *)&D.45844 + 8B]
  # DEBUG D#4 => &D.45844
  # DEBUG this => D#4
  _1103 = prephitmp_719 + prephitmp_718;
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  # DEBUG this => &D.57399.first
  # DEBUG __beg => D#540
  # DEBUG __end => _1103
  # DEBUG this => &D.57399.first
  # DEBUG __beg => D#540
  # DEBUG __end => _1103
  # DEBUG this => &D.57399.first
  # DEBUG __beg => D#540
  # DEBUG __end => _1103
  # DEBUG __ptr => D#540
  _1489 = _1103 != 0B;
  _1556 = prephitmp_719 == 0B;
  _1555 = _1489 & _1556;
  if (_1555 != 0)
    goto <bb 476>;
  else
    goto <bb 478>;

  <bb 134>:
  _1163 = std::__cxx11::basic_string<char>::_M_create (&D.57399.first, &__dnew, 0);

  <bb 135>:
  # DEBUG D#5 => &D.57399.first
  # DEBUG __p => _1163
  # DEBUG this => D#5
  MEM[(char * *)&D.57399] = _1163;
  __dnew.173_1164 = __dnew;
  # DEBUG D#6 => &D.57399.first
  # DEBUG __capacity => __dnew.173_1164
  # DEBUG this => D#6
  MEM[(size_type *)&D.57399 + 16B] = __dnew.173_1164;
  # DEBUG D#3 => &D.57399.first
  # DEBUG this => D#3
  # DEBUG __p => _1163
  # DEBUG __k1 => D#540
  # DEBUG __k2 => _1103
  # DEBUG __d => _1163
  # DEBUG __s => D#540
  # DEBUG __n => D#539
  goto <bb 138>;

  <bb 136>:
  # DEBUG D#3 => &D.57399.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.57399].D.14356._M_local_buf
  # DEBUG __k1 => D#540
  # DEBUG __k2 => _1103
  # DEBUG __d => &MEM[(struct basic_string *)&D.57399].D.14356._M_local_buf
  # DEBUG __s => D#540
  # DEBUG __n => D#539
  if (prephitmp_718 == 1)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  _1166 = MEM[(const char_type &)prephitmp_719];
  # DEBUG D#11 => D#540
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.57399].D.14356._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.57399 + 16] = _1166;
  goto <bb 139>;

  <bb 138>:
  # _907 = PHI <&MEM[(struct basic_string *)&D.57399].D.14356._M_local_buf(136), _1163(135)>
  # DEBUG D#3 => &D.57399.first
  # DEBUG this => D#3
  # DEBUG __p => _907
  # DEBUG __k1 => D#540
  # DEBUG __k2 => _1103
  # DEBUG __d => _907
  # DEBUG __s => D#540
  # DEBUG __n => D#539
  # DEBUG __s1 => _907
  # DEBUG __s2 => D#540
  # DEBUG __n => D#539
  __builtin_memcpy (_907, prephitmp_719, prephitmp_718);
  pretmp_720 = __dnew;
  pretmp_548 = MEM[(char * *)&D.57399];

  <bb 139>:
  # prephitmp_547 = PHI <prephitmp_718(137), pretmp_720(138)>
  # prephitmp_549 = PHI <&MEM[(struct basic_string *)&D.57399].D.14356._M_local_buf(137), pretmp_548(138)>
  # DEBUG D#538 => __dnew
  # DEBUG this => &D.57399.first
  # DEBUG __n => D#538
  # DEBUG D#7 => &D.57399.first
  # DEBUG __length => D#538
  # DEBUG this => D#7
  MEM[(size_type *)&D.57399 + 8B] = prephitmp_547;
  # DEBUG D#3 => &D.57399.first
  # DEBUG this => D#3
  _1169 = prephitmp_549 + prephitmp_547;
  # DEBUG __c1 => _1169
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1169] = 0;
  __dnew ={v} {CLOBBER};
  D.57399.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1319
  # DEBUG __x => &D.57399
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1319;
  # DEBUG __x => &D.57399
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.57397 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.57399);

  <bb 140>:
  __i$_M_node_1104 = MEM[(struct _Rb_tree_iterator *)&D.57397];
  # DEBUG __i$_M_node => __i$_M_node_1104
  # DEBUG this => &D.57399
  # DEBUG D#56 => &D.57399.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1105 = MEM[(char * *)&D.57399];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.57399].D.14356._M_local_buf != _1105)
    goto <bb 141>;
  else
    goto <bb 142>;

  <bb 141>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1105
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1105
  # DEBUG this => D#45
  # DEBUG D.57353 => D#46
  operator delete (_1105);

  <bb 142>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.57399 ={v} {CLOBBER};
  pretmp_624 = MEM[(char * *)&D.45844];

  <bb 143>:
  # __i$_M_node_1106 = PHI <__i$_M_node_2392(129), __i$_M_node_1104(142), __i$_M_node_2392(132)>
  # prephitmp_625 = PHI <pretmp_543(129), pretmp_624(142), pretmp_543(132)>
  # DEBUG __i$_M_node => __i$_M_node_1106
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1106
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1106]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_1106 + 64] = adaptive_xy_yx_mesh;
  # DEBUG this => &D.45844
  # DEBUG this => &D.45844
  # DEBUG this => &D.45844
  # DEBUG D#537 => MEM[(char * *)&D.45844]
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  # DEBUG this => &D.45844
  if (&D.45844.D.14356._M_local_buf != prephitmp_625)
    goto <bb 148>;
  else
    goto <bb 149>;

<L94>:
  # DEBUG this => &D.57399
  # DEBUG D#56 => &D.57399.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1108 = MEM[(char * *)&D.57399];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.57399].D.14356._M_local_buf != _1108)
    goto <bb 145>;
  else
    goto <bb 146>;

  <bb 145>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1108
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1108
  # DEBUG this => D#45
  # DEBUG D.57337 => D#46
  operator delete (_1108);

  <bb 146>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.57399 ={v} {CLOBBER};
  resx 139

<L102>:
  goto <bb 415> (<L56>);

  <bb 148>:
  # DEBUG D#54 => D.45844.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45844
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  # DEBUG this => &D.45844
  # DEBUG D#51 => &D.45844._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#537
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#537
  # DEBUG this => D#45
  # DEBUG D.53651 => D#46
  operator delete (prephitmp_625);

  <bb 149>:
  # DEBUG D#55 => &D.45844._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45844 ={v} {CLOBBER};
  # DEBUG this => &D.45843
  # DEBUG this => &D.45843
  # DEBUG D#30 => &D.45846
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45846
  # DEBUG this => &D.45847
  # DEBUG __s => "dim_order_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45847
  # DEBUG D#66 => &D.45847._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45847.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45847]._M_p = &D.45847.D.14356._M_local_buf;
  # DEBUG __s => "dim_order_mesh"
  # DEBUG this => &D.45847
  # DEBUG __beg => "dim_order_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_mesh" + 14B]
  # DEBUG this => &D.45847
  # DEBUG __beg => "dim_order_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_mesh" + 14B]
  # DEBUG this => &D.45847
  # DEBUG __beg => "dim_order_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_mesh" + 14B]
  # DEBUG __ptr => "dim_order_mesh"
  # DEBUG __first => "dim_order_mesh"
  # DEBUG __last => &MEM[(void *)"dim_order_mesh" + 14B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "dim_order_mesh"
  # DEBUG __last => &MEM[(void *)"dim_order_mesh" + 14B]
  # DEBUG __dnew => 14
  # DEBUG D#3 => &D.45847
  # DEBUG this => D#3
  # DEBUG __p => &D.45847.D.14356._M_local_buf
  # DEBUG __k1 => "dim_order_mesh"
  # DEBUG __k2 => &MEM[(void *)"dim_order_mesh" + 14B]
  # DEBUG __d => &D.45847.D.14356._M_local_buf
  # DEBUG __s => "dim_order_mesh"
  # DEBUG __n => 14
  # DEBUG __s1 => &D.45847.D.14356._M_local_buf
  # DEBUG __s2 => "dim_order_mesh"
  # DEBUG __n => 14
  __builtin_memcpy (&D.45847.D.14356._M_local_buf, "dim_order_mesh", 14);
  # DEBUG this => &D.45847
  # DEBUG __n => 14
  # DEBUG D#7 => &D.45847
  # DEBUG __length => 14
  # DEBUG this => D#7
  MEM[(size_type *)&D.45847 + 8B] = 14;
  # DEBUG D#3 => &D.45847
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45847 + 30B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45847 + 30] = 0;
  # DEBUG D#424 => {CLOBBER}
  # DEBUG __dnew => D#424
  _163 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45847);

  <bb 150>:
  *_163 = dim_order_mesh;
  # DEBUG this => &D.45847
  # DEBUG this => &D.45847
  # DEBUG this => &D.45847
  _166 = MEM[(char * *)&D.45847];
  # DEBUG D#3 => &D.45847
  # DEBUG this => D#3
  # DEBUG this => &D.45847
  if (&D.45847.D.14356._M_local_buf != _166)
    goto <bb 151>;
  else
    goto <bb 152>;

  <bb 151>:
  # DEBUG D#54 => D.45847.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45847
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45847
  # DEBUG this => D#3
  # DEBUG this => &D.45847
  # DEBUG D#51 => &D.45847._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _166
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _166
  # DEBUG this => D#45
  # DEBUG D.53669 => D#46
  operator delete (_166);

  <bb 152>:
  # DEBUG D#55 => &D.45847._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45847 ={v} {CLOBBER};
  # DEBUG this => &D.45846
  # DEBUG this => &D.45846
  # DEBUG D#30 => &D.45849
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45849
  # DEBUG this => &D.45850
  # DEBUG __s => "dim_order_ni_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45850
  # DEBUG D#66 => &D.45850._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45850.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45850]._M_p = &D.45850.D.14356._M_local_buf;
  # DEBUG __s => "dim_order_ni_mesh"
  # DEBUG this => &D.45850
  # DEBUG __beg => "dim_order_ni_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_ni_mesh" + 17B]
  # DEBUG this => &D.45850
  # DEBUG __beg => "dim_order_ni_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_ni_mesh" + 17B]
  # DEBUG this => &D.45850
  # DEBUG __beg => "dim_order_ni_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_ni_mesh" + 17B]
  # DEBUG __ptr => "dim_order_ni_mesh"
  # DEBUG __first => "dim_order_ni_mesh"
  # DEBUG __last => &MEM[(void *)"dim_order_ni_mesh" + 17B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "dim_order_ni_mesh"
  # DEBUG __last => &MEM[(void *)"dim_order_ni_mesh" + 17B]
  __dnew = 17;
  _1208 = std::__cxx11::basic_string<char>::_M_create (&D.45850, &__dnew, 0);
  # DEBUG D#5 => &D.45850
  # DEBUG __p => _1208
  # DEBUG this => D#5
  MEM[(char * *)&D.45850] = _1208;
  __dnew.173_1209 = __dnew;
  # DEBUG D#6 => &D.45850
  # DEBUG __capacity => __dnew.173_1209
  # DEBUG this => D#6
  MEM[(size_type *)&D.45850 + 16B] = __dnew.173_1209;
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  # DEBUG __p => _1208
  # DEBUG __k1 => "dim_order_ni_mesh"
  # DEBUG __k2 => &MEM[(void *)"dim_order_ni_mesh" + 17B]
  # DEBUG __d => _1208
  # DEBUG __s => "dim_order_ni_mesh"
  # DEBUG __n => 17
  # DEBUG __s1 => _1208
  # DEBUG __s2 => "dim_order_ni_mesh"
  # DEBUG __n => 17
  __builtin_memcpy (_1208, "dim_order_ni_mesh", 17);
  __dnew.173_1212 = __dnew;
  # DEBUG this => &D.45850
  # DEBUG __n => __dnew.173_1212
  # DEBUG D#7 => &D.45850
  # DEBUG __length => __dnew.173_1212
  # DEBUG this => D#7
  MEM[(size_type *)&D.45850 + 8B] = __dnew.173_1212;
  _1213 = MEM[(char * *)&D.45850];
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  _1214 = _1213 + __dnew.173_1212;
  # DEBUG __c1 => _1214
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1214] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG __k => &D.45850
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45850
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45850
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_1216 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45850
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_1216
  if (__i$_M_node_1216 == 0B)
    goto <bb 479>;
  else
    goto <bb 153>;

  <bb 153>:
  pretmp_705 = MEM[(long unsigned int *)&D.45850 + 8B];
  pretmp_708 = MEM[(char * *)&D.45850];
  goto <bb 156>;

  <bb 154>:
  # __i$_M_node_1248 = PHI <__i$_M_node_1220(161), __i$_M_node_1221(162)>
  # __i$_M_node_1315 = PHI <__i$_M_node_964(161), __i$_M_node_963(162)>
  # DEBUG __y => __i$_M_node_1315
  # DEBUG __x => __i$_M_node_1248
  if (__i$_M_node_1248 == 0B)
    goto <bb 163>;
  else
    goto <bb 155>;

  <bb 155>:

  <bb 156>:
  # __i$_M_node_964 = PHI <__i$_M_node_1216(153), __i$_M_node_1248(155)>
  # __i$_M_node_963 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(153), __i$_M_node_1315(155)>
  # DEBUG __y => __i$_M_node_963
  # DEBUG __x => __i$_M_node_964
  # DEBUG __x => __i$_M_node_964
  # DEBUG __x => __i$_M_node_964
  # DEBUG this => __i$_M_node_964
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_964]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#366 => &MEM[(const struct pair &)__i$_M_node_964 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#366
  # DEBUG __y => &D.45850
  # DEBUG this => D#59
  # DEBUG __lhs => D#366
  # DEBUG __rhs => &D.45850
  # DEBUG this => D#366
  # DEBUG __str => &D.45850
  _1225 = MEM[(long unsigned int *)__i$_M_node_964 + 40B];
  # DEBUG D#1 => D#366
  # DEBUG this => D#1
  # DEBUG __size => _1225
  # DEBUG D#536 => MEM[(long unsigned int *)&D.45850 + 8B]
  # DEBUG D#1 => &D.45850
  # DEBUG this => D#1
  # DEBUG __osize => D#536
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1989 = MIN_EXPR <pretmp_705, _1225>;
  # DEBUG __len => D#348
  # DEBUG this => &D.45850
  # DEBUG D#535 => MEM[(char * *)&D.45850]
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  _1230 = MEM[(char * *)__i$_M_node_964 + 32B];
  # DEBUG D#3 => D#366
  # DEBUG this => D#3
  # DEBUG __s1 => _1230
  # DEBUG __s2 => D#535
  # DEBUG __n => D#348
  __r_1231 = __builtin_memcmp (_1230, pretmp_708, __len_1989);
  # DEBUG __r => NULL
  if (__r_1231 == 0)
    goto <bb 157>;
  else
    goto <bb 160>;

  <bb 157>:
  # DEBUG __n1 => _1225
  # DEBUG __n2 => D#536
  _1232 = _1225 - pretmp_705;
  __d_1233 = (const difference_type) _1232;
  # DEBUG __d => __d_1233
  if (__d_1233 > 2147483647)
    goto <bb 161>;
  else
    goto <bb 158>;

  <bb 158>:
  if (__d_1233 < -2147483648)
    goto <bb 162>;
  else
    goto <bb 159>;

  <bb 159>:
  __r_1234 = (int) _1232;

  <bb 160>:
  # __r_1235 = PHI <__r_1231(156), __r_1234(159)>
  # DEBUG __r => __r_1235
  # DEBUG D#429 => {CLOBBER}
  # DEBUG __size => D#429
  # DEBUG D#430 => {CLOBBER}
  # DEBUG __osize => D#430
  if (__r_1235 >= 0)
    goto <bb 161>;
  else
    goto <bb 162>;

  <bb 161>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_964
  __i$_M_node_1220 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_964 + 16B];
  # DEBUG D#37 => __i$_M_node_964
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 154>;

  <bb 162>:
  # DEBUG __r => NULL
  __i$_M_node_1221 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_964 + 24B];
  # DEBUG D#36 => __i$_M_node_964
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 154>;

  <bb 163>:
  # __i$_M_node_2404 = PHI <__i$_M_node_1315(154)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2404
  # DEBUG __i$_M_node => __i$_M_node_2404
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2404 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 480>;
  else
    goto <bb 164>;

  <bb 164>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2404
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2404]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#367 => &MEM[(struct pair &)__i$_M_node_2404 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45850
  # DEBUG __y => D#367
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45850
  # DEBUG __rhs => D#367
  # DEBUG this => &D.45850
  # DEBUG __str => D#367
  # DEBUG D#534 => MEM[(long unsigned int *)&D.45850 + 8B]
  # DEBUG D#1 => &D.45850
  # DEBUG this => D#1
  # DEBUG __size => D#534
  _1238 = MEM[(long unsigned int *)__i$_M_node_2404 + 40B];
  # DEBUG D#1 => D#367
  # DEBUG this => D#1
  # DEBUG __osize => _1238
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1988 = MIN_EXPR <pretmp_705, _1238>;
  # DEBUG __len => D#349
  # DEBUG this => D#367
  _1241 = MEM[(char * *)__i$_M_node_2404 + 32B];
  # DEBUG D#3 => D#367
  # DEBUG this => D#3
  # DEBUG D#533 => MEM[(char * *)&D.45850]
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  # DEBUG __s1 => D#533
  # DEBUG __s2 => _1241
  # DEBUG __n => D#349
  __r_1243 = __builtin_memcmp (pretmp_708, _1241, __len_1988);
  # DEBUG __r => NULL
  if (__r_1243 == 0)
    goto <bb 165>;
  else
    goto <bb 168>;

  <bb 165>:
  # DEBUG __n1 => D#534
  # DEBUG __n2 => _1238
  _1244 = pretmp_705 - _1238;
  __d_1245 = (const difference_type) _1244;
  # DEBUG __d => __d_1245
  if (__d_1245 > 2147483647)
    goto <bb 179>;
  else
    goto <bb 166>;

  <bb 166>:
  if (__d_1245 < -2147483648)
    goto <bb 169>;
  else
    goto <bb 167>;

  <bb 167>:
  __r_1246 = (int) _1244;

  <bb 168>:
  # __r_1247 = PHI <__r_1243(164), __r_1246(167)>
  # DEBUG __r => __r_1247
  # DEBUG D#435 => {CLOBBER}
  # DEBUG __size => D#435
  # DEBUG D#436 => {CLOBBER}
  # DEBUG __osize => D#436
  if (__r_1247 < 0)
    goto <bb 480>;
  else
    goto <bb 179>;

  <bb 169>:
  # __i$_M_node_1463 = PHI <__i$_M_node_2404(166), __i$_M_node_1458(480)>
  # prephitmp_698 = PHI <pretmp_705(166), prephitmp_2181(480)>
  # prephitmp_699 = PHI <pretmp_708(166), prephitmp_2183(480)>
  # DEBUG this => &D.57640
  # DEBUG __a => &D.45850
  # DEBUG __b => NULL
  # DEBUG this => &D.57640.first
  # DEBUG __str => &D.45850
  # DEBUG this => &D.45850
  # DEBUG D#113 => &D.45850._M_dataplus
  # DEBUG this => &D.57640.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.57640]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.57640].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.57640]._M_p = &MEM[(struct basic_string *)&D.57640].D.14356._M_local_buf;
  # DEBUG D#532 => MEM[(char * *)&D.45850]
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  # DEBUG D#531 => MEM[(long unsigned int *)&D.45850 + 8B]
  # DEBUG D#4 => &D.45850
  # DEBUG this => D#4
  _1194 = prephitmp_699 + prephitmp_698;
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  # DEBUG this => &D.57640.first
  # DEBUG __beg => D#532
  # DEBUG __end => _1194
  # DEBUG this => &D.57640.first
  # DEBUG __beg => D#532
  # DEBUG __end => _1194
  # DEBUG this => &D.57640.first
  # DEBUG __beg => D#532
  # DEBUG __end => _1194
  # DEBUG __ptr => D#532
  _1568 = _1194 != 0B;
  _1580 = prephitmp_699 == 0B;
  _1647 = _1568 & _1580;
  if (_1647 != 0)
    goto <bb 481>;
  else
    goto <bb 483>;

  <bb 170>:
  _1254 = std::__cxx11::basic_string<char>::_M_create (&D.57640.first, &__dnew, 0);

  <bb 171>:
  # DEBUG D#5 => &D.57640.first
  # DEBUG __p => _1254
  # DEBUG this => D#5
  MEM[(char * *)&D.57640] = _1254;
  __dnew.173_1255 = __dnew;
  # DEBUG D#6 => &D.57640.first
  # DEBUG __capacity => __dnew.173_1255
  # DEBUG this => D#6
  MEM[(size_type *)&D.57640 + 16B] = __dnew.173_1255;
  # DEBUG D#3 => &D.57640.first
  # DEBUG this => D#3
  # DEBUG __p => _1254
  # DEBUG __k1 => D#532
  # DEBUG __k2 => _1194
  # DEBUG __d => _1254
  # DEBUG __s => D#532
  # DEBUG __n => D#531
  goto <bb 174>;

  <bb 172>:
  # DEBUG D#3 => &D.57640.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.57640].D.14356._M_local_buf
  # DEBUG __k1 => D#532
  # DEBUG __k2 => _1194
  # DEBUG __d => &MEM[(struct basic_string *)&D.57640].D.14356._M_local_buf
  # DEBUG __s => D#532
  # DEBUG __n => D#531
  if (prephitmp_698 == 1)
    goto <bb 173>;
  else
    goto <bb 174>;

  <bb 173>:
  _1257 = MEM[(const char_type &)prephitmp_699];
  # DEBUG D#11 => D#532
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.57640].D.14356._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.57640 + 16] = _1257;
  goto <bb 175>;

  <bb 174>:
  # _2081 = PHI <&MEM[(struct basic_string *)&D.57640].D.14356._M_local_buf(172), _1254(171)>
  # DEBUG D#3 => &D.57640.first
  # DEBUG this => D#3
  # DEBUG __p => _2081
  # DEBUG __k1 => D#532
  # DEBUG __k2 => _1194
  # DEBUG __d => _2081
  # DEBUG __s => D#532
  # DEBUG __n => D#531
  # DEBUG __s1 => _2081
  # DEBUG __s2 => D#532
  # DEBUG __n => D#531
  __builtin_memcpy (_2081, prephitmp_699, prephitmp_698);
  pretmp_700 = __dnew;
  pretmp_703 = MEM[(char * *)&D.57640];

  <bb 175>:
  # prephitmp_702 = PHI <prephitmp_698(173), pretmp_700(174)>
  # prephitmp_704 = PHI <&MEM[(struct basic_string *)&D.57640].D.14356._M_local_buf(173), pretmp_703(174)>
  # DEBUG D#530 => __dnew
  # DEBUG this => &D.57640.first
  # DEBUG __n => D#530
  # DEBUG D#7 => &D.57640.first
  # DEBUG __length => D#530
  # DEBUG this => D#7
  MEM[(size_type *)&D.57640 + 8B] = prephitmp_702;
  # DEBUG D#3 => &D.57640.first
  # DEBUG this => D#3
  _1260 = prephitmp_704 + prephitmp_702;
  # DEBUG __c1 => _1260
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1260] = 0;
  __dnew ={v} {CLOBBER};
  D.57640.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1463
  # DEBUG __x => &D.57640
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1463;
  # DEBUG __x => &D.57640
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.57638 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.57640);

  <bb 176>:
  __i$_M_node_1195 = MEM[(struct _Rb_tree_iterator *)&D.57638];
  # DEBUG __i$_M_node => __i$_M_node_1195
  # DEBUG this => &D.57640
  # DEBUG D#56 => &D.57640.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1196 = MEM[(char * *)&D.57640];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.57640].D.14356._M_local_buf != _1196)
    goto <bb 177>;
  else
    goto <bb 178>;

  <bb 177>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1196
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1196
  # DEBUG this => D#45
  # DEBUG D.57594 => D#46
  operator delete (_1196);

  <bb 178>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.57640 ={v} {CLOBBER};
  pretmp_2184 = MEM[(char * *)&D.45850];

  <bb 179>:
  # __i$_M_node_1197 = PHI <__i$_M_node_2404(165), __i$_M_node_1195(178), __i$_M_node_2404(168)>
  # prephitmp_627 = PHI <pretmp_708(165), pretmp_2184(178), pretmp_708(168)>
  # DEBUG __i$_M_node => __i$_M_node_1197
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1197
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1197]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_1197 + 64] = dim_order_ni_mesh;
  # DEBUG this => &D.45850
  # DEBUG this => &D.45850
  # DEBUG this => &D.45850
  # DEBUG D#529 => MEM[(char * *)&D.45850]
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  # DEBUG this => &D.45850
  if (&D.45850.D.14356._M_local_buf != prephitmp_627)
    goto <bb 184>;
  else
    goto <bb 185>;

<L95>:
  # DEBUG this => &D.57640
  # DEBUG D#56 => &D.57640.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1199 = MEM[(char * *)&D.57640];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.57640].D.14356._M_local_buf != _1199)
    goto <bb 181>;
  else
    goto <bb 182>;

  <bb 181>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1199
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1199
  # DEBUG this => D#45
  # DEBUG D.57578 => D#46
  operator delete (_1199);

  <bb 182>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.57640 ={v} {CLOBBER};
  resx 140

<L104>:
  goto <bb 422> (<L60>);

  <bb 184>:
  # DEBUG D#54 => D.45850.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45850
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  # DEBUG this => &D.45850
  # DEBUG D#51 => &D.45850._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#529
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#529
  # DEBUG this => D#45
  # DEBUG D.53687 => D#46
  operator delete (prephitmp_627);

  <bb 185>:
  # DEBUG D#55 => &D.45850._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45850 ={v} {CLOBBER};
  # DEBUG this => &D.45849
  # DEBUG this => &D.45849
  # DEBUG D#30 => &D.45852
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45852
  # DEBUG this => &D.45853
  # DEBUG __s => "dim_order_pni_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45853
  # DEBUG D#66 => &D.45853._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45853.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45853]._M_p = &D.45853.D.14356._M_local_buf;
  # DEBUG __s => "dim_order_pni_mesh"
  # DEBUG this => &D.45853
  # DEBUG __beg => "dim_order_pni_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_pni_mesh" + 18B]
  # DEBUG this => &D.45853
  # DEBUG __beg => "dim_order_pni_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_pni_mesh" + 18B]
  # DEBUG this => &D.45853
  # DEBUG __beg => "dim_order_pni_mesh"
  # DEBUG __end => &MEM[(void *)"dim_order_pni_mesh" + 18B]
  # DEBUG __ptr => "dim_order_pni_mesh"
  # DEBUG __first => "dim_order_pni_mesh"
  # DEBUG __last => &MEM[(void *)"dim_order_pni_mesh" + 18B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "dim_order_pni_mesh"
  # DEBUG __last => &MEM[(void *)"dim_order_pni_mesh" + 18B]
  __dnew = 18;
  _1270 = std::__cxx11::basic_string<char>::_M_create (&D.45853, &__dnew, 0);
  # DEBUG D#5 => &D.45853
  # DEBUG __p => _1270
  # DEBUG this => D#5
  MEM[(char * *)&D.45853] = _1270;
  __dnew.173_1271 = __dnew;
  # DEBUG D#6 => &D.45853
  # DEBUG __capacity => __dnew.173_1271
  # DEBUG this => D#6
  MEM[(size_type *)&D.45853 + 16B] = __dnew.173_1271;
  # DEBUG D#3 => &D.45853
  # DEBUG this => D#3
  # DEBUG __p => _1270
  # DEBUG __k1 => "dim_order_pni_mesh"
  # DEBUG __k2 => &MEM[(void *)"dim_order_pni_mesh" + 18B]
  # DEBUG __d => _1270
  # DEBUG __s => "dim_order_pni_mesh"
  # DEBUG __n => 18
  # DEBUG __s1 => _1270
  # DEBUG __s2 => "dim_order_pni_mesh"
  # DEBUG __n => 18
  __builtin_memcpy (_1270, "dim_order_pni_mesh", 18);
  __dnew.173_1274 = __dnew;
  # DEBUG this => &D.45853
  # DEBUG __n => __dnew.173_1274
  # DEBUG D#7 => &D.45853
  # DEBUG __length => __dnew.173_1274
  # DEBUG this => D#7
  MEM[(size_type *)&D.45853 + 8B] = __dnew.173_1274;
  _1275 = MEM[(char * *)&D.45853];
  # DEBUG D#3 => &D.45853
  # DEBUG this => D#3
  _1276 = _1275 + __dnew.173_1274;
  # DEBUG __c1 => _1276
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1276] = 0;
  __dnew ={v} {CLOBBER};
  _177 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45853);

  <bb 186>:
  *_177 = dim_order_pni_mesh;
  # DEBUG this => &D.45853
  # DEBUG this => &D.45853
  # DEBUG this => &D.45853
  _180 = MEM[(char * *)&D.45853];
  # DEBUG D#3 => &D.45853
  # DEBUG this => D#3
  # DEBUG this => &D.45853
  if (&D.45853.D.14356._M_local_buf != _180)
    goto <bb 187>;
  else
    goto <bb 188>;

  <bb 187>:
  # DEBUG D#54 => D.45853.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45853
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45853
  # DEBUG this => D#3
  # DEBUG this => &D.45853
  # DEBUG D#51 => &D.45853._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _180
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _180
  # DEBUG this => D#45
  # DEBUG D.53705 => D#46
  operator delete (_180);

  <bb 188>:
  # DEBUG D#55 => &D.45853._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45853 ={v} {CLOBBER};
  # DEBUG this => &D.45852
  # DEBUG this => &D.45852
  # DEBUG D#30 => &D.45855
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45855
  # DEBUG this => &D.45856
  # DEBUG __s => "dim_order_torus"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45856
  # DEBUG D#66 => &D.45856._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45856.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45856]._M_p = &D.45856.D.14356._M_local_buf;
  # DEBUG __s => "dim_order_torus"
  # DEBUG this => &D.45856
  # DEBUG __beg => "dim_order_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_torus" + 15B]
  # DEBUG this => &D.45856
  # DEBUG __beg => "dim_order_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_torus" + 15B]
  # DEBUG this => &D.45856
  # DEBUG __beg => "dim_order_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_torus" + 15B]
  # DEBUG __ptr => "dim_order_torus"
  # DEBUG __first => "dim_order_torus"
  # DEBUG __last => &MEM[(void *)"dim_order_torus" + 15B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "dim_order_torus"
  # DEBUG __last => &MEM[(void *)"dim_order_torus" + 15B]
  # DEBUG __dnew => 15
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG __p => &D.45856.D.14356._M_local_buf
  # DEBUG __k1 => "dim_order_torus"
  # DEBUG __k2 => &MEM[(void *)"dim_order_torus" + 15B]
  # DEBUG __d => &D.45856.D.14356._M_local_buf
  # DEBUG __s => "dim_order_torus"
  # DEBUG __n => 15
  # DEBUG __s1 => &D.45856.D.14356._M_local_buf
  # DEBUG __s2 => "dim_order_torus"
  # DEBUG __n => 15
  __builtin_memcpy (&D.45856.D.14356._M_local_buf, "dim_order_torus", 15);
  # DEBUG this => &D.45856
  # DEBUG __n => 15
  # DEBUG D#7 => &D.45856
  # DEBUG __length => 15
  # DEBUG this => D#7
  MEM[(size_type *)&D.45856 + 8B] = 15;
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45856 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45856 + 31] = 0;
  # DEBUG D#437 => {CLOBBER}
  # DEBUG __dnew => D#437
  # DEBUG __k => &D.45856
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45856
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45856
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_1307 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45856
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_1307
  if (__i$_M_node_1307 == 0B)
    goto <bb 484>;
  else
    goto <bb 191>;

  <bb 189>:
  # __i$_M_node_1224 = PHI <__i$_M_node_1311(197), __i$_M_node_1312(198)>
  # __i$_M_node_1223 = PHI <__i$_M_node_967(197), __i$_M_node_971(198)>
  # DEBUG __y => __i$_M_node_1223
  # DEBUG __x => __i$_M_node_1224
  if (__i$_M_node_1224 == 0B)
    goto <bb 199>;
  else
    goto <bb 190>;

  <bb 190>:
  goto <bb 192>;

  <bb 191>:

  <bb 192>:
  # __i$_M_node_967 = PHI <__i$_M_node_1307(191), __i$_M_node_1224(190)>
  # __i$_M_node_971 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(191), __i$_M_node_1223(190)>
  # DEBUG __y => __i$_M_node_971
  # DEBUG __x => __i$_M_node_967
  # DEBUG __x => __i$_M_node_967
  # DEBUG __x => __i$_M_node_967
  # DEBUG this => __i$_M_node_967
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_967]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#368 => &MEM[(const struct pair &)__i$_M_node_967 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#368
  # DEBUG __y => &D.45856
  # DEBUG this => D#59
  # DEBUG __lhs => D#368
  # DEBUG __rhs => &D.45856
  # DEBUG this => D#368
  # DEBUG __str => &D.45856
  _1316 = MEM[(long unsigned int *)__i$_M_node_967 + 40B];
  # DEBUG D#1 => D#368
  # DEBUG this => D#1
  # DEBUG __size => _1316
  # DEBUG D#1 => &D.45856
  # DEBUG this => D#1
  # DEBUG __osize => 15
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1999 = MIN_EXPR <_1316, 15>;
  # DEBUG __len => D#350
  # DEBUG this => &D.45856
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  _1321 = MEM[(char * *)__i$_M_node_967 + 32B];
  # DEBUG D#3 => D#368
  # DEBUG this => D#3
  # DEBUG __s1 => _1321
  # DEBUG __s2 => &D.45856.D.14356._M_local_buf
  # DEBUG __n => D#350
  __r_1322 = __builtin_memcmp (_1321, &D.45856.D.14356._M_local_buf, __len_1999);
  # DEBUG __r => NULL
  if (__r_1322 == 0)
    goto <bb 193>;
  else
    goto <bb 196>;

  <bb 193>:
  # DEBUG __n1 => _1316
  # DEBUG __n2 => 15
  _1323 = _1316 - 15;
  __d_1324 = (const difference_type) _1323;
  # DEBUG __d => __d_1324
  if (__d_1324 > 2147483647)
    goto <bb 197>;
  else
    goto <bb 194>;

  <bb 194>:
  if (__d_1324 < -2147483648)
    goto <bb 198>;
  else
    goto <bb 195>;

  <bb 195>:
  __r_1325 = (int) _1323;

  <bb 196>:
  # __r_1326 = PHI <__r_1322(192), __r_1325(195)>
  # DEBUG __r => __r_1326
  # DEBUG D#442 => {CLOBBER}
  # DEBUG __size => D#442
  # DEBUG D#443 => {CLOBBER}
  # DEBUG __osize => D#443
  if (__r_1326 >= 0)
    goto <bb 197>;
  else
    goto <bb 198>;

  <bb 197>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_967
  __i$_M_node_1311 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_967 + 16B];
  # DEBUG D#37 => __i$_M_node_967
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 189>;

  <bb 198>:
  # DEBUG __r => NULL
  __i$_M_node_1312 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_967 + 24B];
  # DEBUG D#36 => __i$_M_node_967
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 189>;

  <bb 199>:
  # __i$_M_node_2405 = PHI <__i$_M_node_1223(189)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2405
  # DEBUG __i$_M_node => __i$_M_node_2405
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2405 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 484>;
  else
    goto <bb 200>;

  <bb 200>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2405
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2405]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#369 => &MEM[(struct pair &)__i$_M_node_2405 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45856
  # DEBUG __y => D#369
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45856
  # DEBUG __rhs => D#369
  # DEBUG this => &D.45856
  # DEBUG __str => D#369
  # DEBUG D#1 => &D.45856
  # DEBUG this => D#1
  # DEBUG __size => 15
  _1329 = MEM[(long unsigned int *)__i$_M_node_2405 + 40B];
  # DEBUG D#1 => D#369
  # DEBUG this => D#1
  # DEBUG __osize => _1329
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1329 <= 14)
    goto <bb 202>;
  else
    goto <bb 201>;

  <bb 201>:

  <bb 202>:
  # __len_1331 = PHI <_1329(200), 15(201)>
  # DEBUG __len => D#351
  # DEBUG this => D#369
  _1332 = MEM[(char * *)__i$_M_node_2405 + 32B];
  # DEBUG D#3 => D#369
  # DEBUG this => D#3
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG __s1 => &D.45856.D.14356._M_local_buf
  # DEBUG __s2 => _1332
  # DEBUG __n => D#351
  __r_1334 = __builtin_memcmp (&D.45856.D.14356._M_local_buf, _1332, __len_1331);
  # DEBUG __r => NULL
  if (__r_1334 == 0)
    goto <bb 203>;
  else
    goto <bb 206>;

  <bb 203>:
  # DEBUG __n1 => 15
  # DEBUG __n2 => _1329
  _1335 = 15 - _1329;
  __d_1336 = (const difference_type) _1335;
  # DEBUG __d => __d_1336
  if (__d_1336 > 2147483647)
    goto <bb 211>;
  else
    goto <bb 204>;

  <bb 204>:
  if (__d_1336 < -2147483648)
    goto <bb 207>;
  else
    goto <bb 205>;

  <bb 205>:
  __r_1337 = (int) _1335;

  <bb 206>:
  # __r_1338 = PHI <__r_1334(202), __r_1337(205)>
  # DEBUG __r => __r_1338
  # DEBUG D#448 => {CLOBBER}
  # DEBUG __size => D#448
  # DEBUG D#449 => {CLOBBER}
  # DEBUG __osize => D#449
  if (__r_1338 < 0)
    goto <bb 484>;
  else
    goto <bb 211>;

  <bb 207>:
  # __i$_M_node_1228 = PHI <__i$_M_node_2405(204), __i$_M_node_1240(484)>
  # DEBUG this => &D.57881
  # DEBUG __a => &D.45856
  # DEBUG __b => NULL
  # DEBUG this => &D.57881.first
  # DEBUG __str => &D.45856
  # DEBUG this => &D.45856
  # DEBUG D#113 => &D.45856._M_dataplus
  # DEBUG this => &D.57881.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.57881]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.57881].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.57881]._M_p = &MEM[(struct basic_string *)&D.57881].D.14356._M_local_buf;
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG D#4 => &D.45856
  # DEBUG this => D#4
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG this => &D.57881.first
  # DEBUG __beg => &D.45856.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45856 + 31B]
  # DEBUG this => &D.57881.first
  # DEBUG __beg => &D.45856.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45856 + 31B]
  # DEBUG this => &D.57881.first
  # DEBUG __beg => &D.45856.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45856 + 31B]
  # DEBUG __ptr => &D.45856.D.14356._M_local_buf
  # DEBUG __first => &D.45856.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45856 + 31B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => &D.45856.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45856 + 31B]
  # DEBUG __dnew => 15
  # DEBUG D#3 => &D.57881.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.57881].D.14356._M_local_buf
  # DEBUG __k1 => &D.45856.D.14356._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.45856 + 31B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.57881].D.14356._M_local_buf
  # DEBUG __s => &D.45856.D.14356._M_local_buf
  # DEBUG __n => 15
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.57881].D.14356._M_local_buf
  # DEBUG __s2 => &D.45856.D.14356._M_local_buf
  # DEBUG __n => 15
  __builtin_memcpy (&MEM[(struct basic_string *)&D.57881].D.14356._M_local_buf, &D.45856.D.14356._M_local_buf, 15);
  # DEBUG this => &D.57881.first
  # DEBUG __n => 15
  # DEBUG D#7 => &D.57881.first
  # DEBUG __length => 15
  # DEBUG this => D#7
  MEM[(size_type *)&D.57881 + 8B] = 15;
  # DEBUG D#3 => &D.57881.first
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.57881 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.57881 + 31] = 0;
  # DEBUG D#450 => {CLOBBER}
  # DEBUG __dnew => D#450
  D.57881.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1228
  # DEBUG __x => &D.57881
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1228;
  # DEBUG __x => &D.57881
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.57879 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.57881);

  <bb 208>:
  __i$_M_node_1286 = MEM[(struct _Rb_tree_iterator *)&D.57879];
  # DEBUG __i$_M_node => __i$_M_node_1286
  # DEBUG this => &D.57881
  # DEBUG D#56 => &D.57881.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1287 = MEM[(char * *)&D.57881];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.57881].D.14356._M_local_buf != _1287)
    goto <bb 209>;
  else
    goto <bb 210>;

  <bb 209>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1287
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1287
  # DEBUG this => D#45
  # DEBUG D.57835 => D#46
  operator delete (_1287);

  <bb 210>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.57881 ={v} {CLOBBER};
  pretmp_630 = MEM[(char * *)&D.45856];

  <bb 211>:
  # __i$_M_node_1288 = PHI <__i$_M_node_2405(203), __i$_M_node_1286(210), __i$_M_node_2405(206)>
  # prephitmp_632 = PHI <&D.45856.D.14356._M_local_buf(203), pretmp_630(210), &D.45856.D.14356._M_local_buf(206)>
  # DEBUG __i$_M_node => __i$_M_node_1288
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1288
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1288]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_1288 + 64] = dim_order_torus;
  # DEBUG this => &D.45856
  # DEBUG this => &D.45856
  # DEBUG this => &D.45856
  # DEBUG D#528 => MEM[(char * *)&D.45856]
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG this => &D.45856
  if (&D.45856.D.14356._M_local_buf != prephitmp_632)
    goto <bb 215>;
  else
    goto <bb 216>;

<L96>:
  # DEBUG this => &D.57881
  # DEBUG D#56 => &D.57881.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1290 = MEM[(char * *)&D.57881];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.57881].D.14356._M_local_buf != _1290)
    goto <bb 213>;
  else
    goto <bb 214>;

  <bb 213>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1290
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1290
  # DEBUG this => D#45
  # DEBUG D.57819 => D#46
  operator delete (_1290);

  <bb 214>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.57881 ={v} {CLOBBER};
  resx 141

  <bb 215>:
  # DEBUG D#54 => D.45856.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45856
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG this => &D.45856
  # DEBUG D#51 => &D.45856._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#528
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#528
  # DEBUG this => D#45
  # DEBUG D.53723 => D#46
  operator delete (prephitmp_632);

  <bb 216>:
  # DEBUG D#55 => &D.45856._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45856 ={v} {CLOBBER};
  # DEBUG this => &D.45855
  # DEBUG this => &D.45855
  # DEBUG D#30 => &D.45858
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45858
  # DEBUG this => &D.45859
  # DEBUG __s => "dim_order_ni_torus"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45859
  # DEBUG D#66 => &D.45859._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45859.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45859]._M_p = &D.45859.D.14356._M_local_buf;
  # DEBUG __s => "dim_order_ni_torus"
  # DEBUG this => &D.45859
  # DEBUG __beg => "dim_order_ni_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_ni_torus" + 18B]
  # DEBUG this => &D.45859
  # DEBUG __beg => "dim_order_ni_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_ni_torus" + 18B]
  # DEBUG this => &D.45859
  # DEBUG __beg => "dim_order_ni_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_ni_torus" + 18B]
  # DEBUG __ptr => "dim_order_ni_torus"
  # DEBUG __first => "dim_order_ni_torus"
  # DEBUG __last => &MEM[(void *)"dim_order_ni_torus" + 18B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "dim_order_ni_torus"
  # DEBUG __last => &MEM[(void *)"dim_order_ni_torus" + 18B]
  __dnew = 18;
  _1374 = std::__cxx11::basic_string<char>::_M_create (&D.45859, &__dnew, 0);
  # DEBUG D#5 => &D.45859
  # DEBUG __p => _1374
  # DEBUG this => D#5
  MEM[(char * *)&D.45859] = _1374;
  __dnew.173_1375 = __dnew;
  # DEBUG D#6 => &D.45859
  # DEBUG __capacity => __dnew.173_1375
  # DEBUG this => D#6
  MEM[(size_type *)&D.45859 + 16B] = __dnew.173_1375;
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  # DEBUG __p => _1374
  # DEBUG __k1 => "dim_order_ni_torus"
  # DEBUG __k2 => &MEM[(void *)"dim_order_ni_torus" + 18B]
  # DEBUG __d => _1374
  # DEBUG __s => "dim_order_ni_torus"
  # DEBUG __n => 18
  # DEBUG __s1 => _1374
  # DEBUG __s2 => "dim_order_ni_torus"
  # DEBUG __n => 18
  __builtin_memcpy (_1374, "dim_order_ni_torus", 18);
  __dnew.173_1378 = __dnew;
  # DEBUG this => &D.45859
  # DEBUG __n => __dnew.173_1378
  # DEBUG D#7 => &D.45859
  # DEBUG __length => __dnew.173_1378
  # DEBUG this => D#7
  MEM[(size_type *)&D.45859 + 8B] = __dnew.173_1378;
  _1379 = MEM[(char * *)&D.45859];
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  _1380 = _1379 + __dnew.173_1378;
  # DEBUG __c1 => _1380
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1380] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG __k => &D.45859
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45859
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45859
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_1382 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45859
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_1382
  if (__i$_M_node_1382 == 0B)
    goto <bb 485>;
  else
    goto <bb 217>;

  <bb 217>:
  pretmp_679 = MEM[(long unsigned int *)&D.45859 + 8B];
  pretmp_682 = MEM[(char * *)&D.45859];
  goto <bb 220>;

  <bb 218>:
  # __i$_M_node_1132 = PHI <__i$_M_node_1386(225), __i$_M_node_1387(226)>
  # __i$_M_node_1145 = PHI <__i$_M_node_112(225), __i$_M_node_1736(226)>
  # DEBUG __y => __i$_M_node_1145
  # DEBUG __x => __i$_M_node_1132
  if (__i$_M_node_1132 == 0B)
    goto <bb 227>;
  else
    goto <bb 219>;

  <bb 219>:

  <bb 220>:
  # __i$_M_node_112 = PHI <__i$_M_node_1382(217), __i$_M_node_1132(219)>
  # __i$_M_node_1736 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(217), __i$_M_node_1145(219)>
  # DEBUG __y => __i$_M_node_1736
  # DEBUG __x => __i$_M_node_112
  # DEBUG __x => __i$_M_node_112
  # DEBUG __x => __i$_M_node_112
  # DEBUG this => __i$_M_node_112
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_112]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#370 => &MEM[(const struct pair &)__i$_M_node_112 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#370
  # DEBUG __y => &D.45859
  # DEBUG this => D#59
  # DEBUG __lhs => D#370
  # DEBUG __rhs => &D.45859
  # DEBUG this => D#370
  # DEBUG __str => &D.45859
  _1391 = MEM[(long unsigned int *)__i$_M_node_112 + 40B];
  # DEBUG D#1 => D#370
  # DEBUG this => D#1
  # DEBUG __size => _1391
  # DEBUG D#527 => MEM[(long unsigned int *)&D.45859 + 8B]
  # DEBUG D#1 => &D.45859
  # DEBUG this => D#1
  # DEBUG __osize => D#527
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1987 = MIN_EXPR <pretmp_679, _1391>;
  # DEBUG __len => D#352
  # DEBUG this => &D.45859
  # DEBUG D#526 => MEM[(char * *)&D.45859]
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  _1396 = MEM[(char * *)__i$_M_node_112 + 32B];
  # DEBUG D#3 => D#370
  # DEBUG this => D#3
  # DEBUG __s1 => _1396
  # DEBUG __s2 => D#526
  # DEBUG __n => D#352
  __r_1397 = __builtin_memcmp (_1396, pretmp_682, __len_1987);
  # DEBUG __r => NULL
  if (__r_1397 == 0)
    goto <bb 221>;
  else
    goto <bb 224>;

  <bb 221>:
  # DEBUG __n1 => _1391
  # DEBUG __n2 => D#527
  _1398 = _1391 - pretmp_679;
  __d_1399 = (const difference_type) _1398;
  # DEBUG __d => __d_1399
  if (__d_1399 > 2147483647)
    goto <bb 225>;
  else
    goto <bb 222>;

  <bb 222>:
  if (__d_1399 < -2147483648)
    goto <bb 226>;
  else
    goto <bb 223>;

  <bb 223>:
  __r_1400 = (int) _1398;

  <bb 224>:
  # __r_1401 = PHI <__r_1397(220), __r_1400(223)>
  # DEBUG __r => __r_1401
  # DEBUG D#455 => {CLOBBER}
  # DEBUG __size => D#455
  # DEBUG D#456 => {CLOBBER}
  # DEBUG __osize => D#456
  if (__r_1401 >= 0)
    goto <bb 225>;
  else
    goto <bb 226>;

  <bb 225>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_112
  __i$_M_node_1386 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_112 + 16B];
  # DEBUG D#37 => __i$_M_node_112
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 218>;

  <bb 226>:
  # DEBUG __r => NULL
  __i$_M_node_1387 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_112 + 24B];
  # DEBUG D#36 => __i$_M_node_112
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 218>;

  <bb 227>:
  # __i$_M_node_2406 = PHI <__i$_M_node_1145(218)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2406
  # DEBUG __i$_M_node => __i$_M_node_2406
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2406 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 486>;
  else
    goto <bb 228>;

  <bb 228>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2406
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2406]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#371 => &MEM[(struct pair &)__i$_M_node_2406 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45859
  # DEBUG __y => D#371
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45859
  # DEBUG __rhs => D#371
  # DEBUG this => &D.45859
  # DEBUG __str => D#371
  # DEBUG D#525 => MEM[(long unsigned int *)&D.45859 + 8B]
  # DEBUG D#1 => &D.45859
  # DEBUG this => D#1
  # DEBUG __size => D#525
  _1404 = MEM[(long unsigned int *)__i$_M_node_2406 + 40B];
  # DEBUG D#1 => D#371
  # DEBUG this => D#1
  # DEBUG __osize => _1404
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1534 = MIN_EXPR <pretmp_679, _1404>;
  # DEBUG __len => D#353
  # DEBUG this => D#371
  _1407 = MEM[(char * *)__i$_M_node_2406 + 32B];
  # DEBUG D#3 => D#371
  # DEBUG this => D#3
  # DEBUG D#524 => MEM[(char * *)&D.45859]
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  # DEBUG __s1 => D#524
  # DEBUG __s2 => _1407
  # DEBUG __n => D#353
  __r_1409 = __builtin_memcmp (pretmp_682, _1407, __len_1534);
  # DEBUG __r => NULL
  if (__r_1409 == 0)
    goto <bb 229>;
  else
    goto <bb 232>;

  <bb 229>:
  # DEBUG __n1 => D#525
  # DEBUG __n2 => _1404
  _1410 = pretmp_679 - _1404;
  __d_1411 = (const difference_type) _1410;
  # DEBUG __d => __d_1411
  if (__d_1411 > 2147483647)
    goto <bb 243>;
  else
    goto <bb 230>;

  <bb 230>:
  if (__d_1411 < -2147483648)
    goto <bb 233>;
  else
    goto <bb 231>;

  <bb 231>:
  __r_1412 = (int) _1410;

  <bb 232>:
  # __r_1413 = PHI <__r_1409(228), __r_1412(231)>
  # DEBUG __r => __r_1413
  # DEBUG D#461 => {CLOBBER}
  # DEBUG __size => D#461
  # DEBUG D#462 => {CLOBBER}
  # DEBUG __osize => D#462
  if (__r_1413 < 0)
    goto <bb 486>;
  else
    goto <bb 243>;

  <bb 233>:
  # __i$_M_node_1149 = PHI <__i$_M_node_2406(230), __i$_M_node_898(486)>
  # prephitmp_672 = PHI <pretmp_679(230), prephitmp_634(486)>
  # prephitmp_673 = PHI <pretmp_682(230), prephitmp_2119(486)>
  # DEBUG this => &D.58077
  # DEBUG __a => &D.45859
  # DEBUG __b => NULL
  # DEBUG this => &D.58077.first
  # DEBUG __str => &D.45859
  # DEBUG this => &D.45859
  # DEBUG D#113 => &D.45859._M_dataplus
  # DEBUG this => &D.58077.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.58077]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58077].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.58077]._M_p = &MEM[(struct basic_string *)&D.58077].D.14356._M_local_buf;
  # DEBUG D#523 => MEM[(char * *)&D.45859]
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  # DEBUG D#522 => MEM[(long unsigned int *)&D.45859 + 8B]
  # DEBUG D#4 => &D.45859
  # DEBUG this => D#4
  _1360 = prephitmp_673 + prephitmp_672;
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  # DEBUG this => &D.58077.first
  # DEBUG __beg => D#523
  # DEBUG __end => _1360
  # DEBUG this => &D.58077.first
  # DEBUG __beg => D#523
  # DEBUG __end => _1360
  # DEBUG this => &D.58077.first
  # DEBUG __beg => D#523
  # DEBUG __end => _1360
  # DEBUG __ptr => D#523
  _1646 = _1360 != 0B;
  _1659 = prephitmp_673 == 0B;
  _1671 = _1646 & _1659;
  if (_1671 != 0)
    goto <bb 487>;
  else
    goto <bb 489>;

  <bb 234>:
  _1420 = std::__cxx11::basic_string<char>::_M_create (&D.58077.first, &__dnew, 0);

  <bb 235>:
  # DEBUG D#5 => &D.58077.first
  # DEBUG __p => _1420
  # DEBUG this => D#5
  MEM[(char * *)&D.58077] = _1420;
  __dnew.173_1421 = __dnew;
  # DEBUG D#6 => &D.58077.first
  # DEBUG __capacity => __dnew.173_1421
  # DEBUG this => D#6
  MEM[(size_type *)&D.58077 + 16B] = __dnew.173_1421;
  # DEBUG D#3 => &D.58077.first
  # DEBUG this => D#3
  # DEBUG __p => _1420
  # DEBUG __k1 => D#523
  # DEBUG __k2 => _1360
  # DEBUG __d => _1420
  # DEBUG __s => D#523
  # DEBUG __n => D#522
  goto <bb 238>;

  <bb 236>:
  # DEBUG D#3 => &D.58077.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.58077].D.14356._M_local_buf
  # DEBUG __k1 => D#523
  # DEBUG __k2 => _1360
  # DEBUG __d => &MEM[(struct basic_string *)&D.58077].D.14356._M_local_buf
  # DEBUG __s => D#523
  # DEBUG __n => D#522
  if (prephitmp_672 == 1)
    goto <bb 237>;
  else
    goto <bb 238>;

  <bb 237>:
  _1423 = MEM[(const char_type &)prephitmp_673];
  # DEBUG D#11 => D#523
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.58077].D.14356._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.58077 + 16] = _1423;
  goto <bb 239>;

  <bb 238>:
  # _1264 = PHI <&MEM[(struct basic_string *)&D.58077].D.14356._M_local_buf(236), _1420(235)>
  # DEBUG D#3 => &D.58077.first
  # DEBUG this => D#3
  # DEBUG __p => _1264
  # DEBUG __k1 => D#523
  # DEBUG __k2 => _1360
  # DEBUG __d => _1264
  # DEBUG __s => D#523
  # DEBUG __n => D#522
  # DEBUG __s1 => _1264
  # DEBUG __s2 => D#523
  # DEBUG __n => D#522
  __builtin_memcpy (_1264, prephitmp_673, prephitmp_672);
  pretmp_674 = __dnew;
  pretmp_677 = MEM[(char * *)&D.58077];

  <bb 239>:
  # prephitmp_675 = PHI <prephitmp_672(237), pretmp_674(238)>
  # prephitmp_678 = PHI <&MEM[(struct basic_string *)&D.58077].D.14356._M_local_buf(237), pretmp_677(238)>
  # DEBUG D#521 => __dnew
  # DEBUG this => &D.58077.first
  # DEBUG __n => D#521
  # DEBUG D#7 => &D.58077.first
  # DEBUG __length => D#521
  # DEBUG this => D#7
  MEM[(size_type *)&D.58077 + 8B] = prephitmp_675;
  # DEBUG D#3 => &D.58077.first
  # DEBUG this => D#3
  _1426 = prephitmp_678 + prephitmp_675;
  # DEBUG __c1 => _1426
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1426] = 0;
  __dnew ={v} {CLOBBER};
  D.58077.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1149
  # DEBUG __x => &D.58077
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1149;
  # DEBUG __x => &D.58077
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.58075 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.58077);

  <bb 240>:
  __i$_M_node_1361 = MEM[(struct _Rb_tree_iterator *)&D.58075];
  # DEBUG __i$_M_node => __i$_M_node_1361
  # DEBUG this => &D.58077
  # DEBUG D#56 => &D.58077.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1362 = MEM[(char * *)&D.58077];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.58077].D.14356._M_local_buf != _1362)
    goto <bb 241>;
  else
    goto <bb 242>;

  <bb 241>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1362
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1362
  # DEBUG this => D#45
  # DEBUG D.58031 => D#46
  operator delete (_1362);

  <bb 242>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.58077 ={v} {CLOBBER};
  pretmp_2120 = MEM[(char * *)&D.45859];

  <bb 243>:
  # __i$_M_node_1363 = PHI <__i$_M_node_2406(229), __i$_M_node_1361(242), __i$_M_node_2406(232)>
  # prephitmp_2121 = PHI <pretmp_682(229), pretmp_2120(242), pretmp_682(232)>
  # DEBUG __i$_M_node => __i$_M_node_1363
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1363
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1363]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_1363 + 64] = dim_order_ni_torus;
  # DEBUG this => &D.45859
  # DEBUG this => &D.45859
  # DEBUG this => &D.45859
  # DEBUG D#520 => MEM[(char * *)&D.45859]
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  # DEBUG this => &D.45859
  if (&D.45859.D.14356._M_local_buf != prephitmp_2121)
    goto <bb 248>;
  else
    goto <bb 249>;

<L97>:
  # DEBUG this => &D.58077
  # DEBUG D#56 => &D.58077.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1365 = MEM[(char * *)&D.58077];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.58077].D.14356._M_local_buf != _1365)
    goto <bb 245>;
  else
    goto <bb 246>;

  <bb 245>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1365
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1365
  # DEBUG this => D#45
  # DEBUG D.58015 => D#46
  operator delete (_1365);

  <bb 246>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.58077 ={v} {CLOBBER};
  resx 142

<L106>:
  goto <bb 432> (<L66>);

  <bb 248>:
  # DEBUG D#54 => D.45859.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45859
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  # DEBUG this => &D.45859
  # DEBUG D#51 => &D.45859._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#520
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#520
  # DEBUG this => D#45
  # DEBUG D.53741 => D#46
  operator delete (prephitmp_2121);

  <bb 249>:
  # DEBUG D#55 => &D.45859._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45859 ={v} {CLOBBER};
  # DEBUG this => &D.45858
  # DEBUG this => &D.45858
  # DEBUG D#30 => &D.45861
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45861
  # DEBUG this => &D.45862
  # DEBUG __s => "dim_order_bal_torus"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45862
  # DEBUG D#66 => &D.45862._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45862.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45862]._M_p = &D.45862.D.14356._M_local_buf;
  # DEBUG __s => "dim_order_bal_torus"
  # DEBUG this => &D.45862
  # DEBUG __beg => "dim_order_bal_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_bal_torus" + 19B]
  # DEBUG this => &D.45862
  # DEBUG __beg => "dim_order_bal_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_bal_torus" + 19B]
  # DEBUG this => &D.45862
  # DEBUG __beg => "dim_order_bal_torus"
  # DEBUG __end => &MEM[(void *)"dim_order_bal_torus" + 19B]
  # DEBUG __ptr => "dim_order_bal_torus"
  # DEBUG __first => "dim_order_bal_torus"
  # DEBUG __last => &MEM[(void *)"dim_order_bal_torus" + 19B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "dim_order_bal_torus"
  # DEBUG __last => &MEM[(void *)"dim_order_bal_torus" + 19B]
  __dnew = 19;
  _1449 = std::__cxx11::basic_string<char>::_M_create (&D.45862, &__dnew, 0);
  # DEBUG D#5 => &D.45862
  # DEBUG __p => _1449
  # DEBUG this => D#5
  MEM[(char * *)&D.45862] = _1449;
  __dnew.173_1450 = __dnew;
  # DEBUG D#6 => &D.45862
  # DEBUG __capacity => __dnew.173_1450
  # DEBUG this => D#6
  MEM[(size_type *)&D.45862 + 16B] = __dnew.173_1450;
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  # DEBUG __p => _1449
  # DEBUG __k1 => "dim_order_bal_torus"
  # DEBUG __k2 => &MEM[(void *)"dim_order_bal_torus" + 19B]
  # DEBUG __d => _1449
  # DEBUG __s => "dim_order_bal_torus"
  # DEBUG __n => 19
  # DEBUG __s1 => _1449
  # DEBUG __s2 => "dim_order_bal_torus"
  # DEBUG __n => 19
  __builtin_memcpy (_1449, "dim_order_bal_torus", 19);
  __dnew.173_1453 = __dnew;
  # DEBUG this => &D.45862
  # DEBUG __n => __dnew.173_1453
  # DEBUG D#7 => &D.45862
  # DEBUG __length => __dnew.173_1453
  # DEBUG this => D#7
  MEM[(size_type *)&D.45862 + 8B] = __dnew.173_1453;
  _1454 = MEM[(char * *)&D.45862];
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  _1455 = _1454 + __dnew.173_1453;
  # DEBUG __c1 => _1455
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1455] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG __k => &D.45862
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45862
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45862
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_1457 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45862
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_1457
  if (__i$_M_node_1457 == 0B)
    goto <bb 490>;
  else
    goto <bb 250>;

  <bb 250>:
  pretmp_665 = MEM[(long unsigned int *)&D.45862 + 8B];
  pretmp_1978 = MEM[(char * *)&D.45862];
  goto <bb 253>;

  <bb 251>:
  # __i$_M_node_1054 = PHI <__i$_M_node_1461(258), __i$_M_node_1462(259)>
  # __i$_M_node_1066 = PHI <__i$_M_node_245(258), __i$_M_node_1719(259)>
  # DEBUG __y => __i$_M_node_1066
  # DEBUG __x => __i$_M_node_1054
  if (__i$_M_node_1054 == 0B)
    goto <bb 260>;
  else
    goto <bb 252>;

  <bb 252>:

  <bb 253>:
  # __i$_M_node_245 = PHI <__i$_M_node_1457(250), __i$_M_node_1054(252)>
  # __i$_M_node_1719 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(250), __i$_M_node_1066(252)>
  # DEBUG __y => __i$_M_node_1719
  # DEBUG __x => __i$_M_node_245
  # DEBUG __x => __i$_M_node_245
  # DEBUG __x => __i$_M_node_245
  # DEBUG this => __i$_M_node_245
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_245]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#372 => &MEM[(const struct pair &)__i$_M_node_245 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#372
  # DEBUG __y => &D.45862
  # DEBUG this => D#59
  # DEBUG __lhs => D#372
  # DEBUG __rhs => &D.45862
  # DEBUG this => D#372
  # DEBUG __str => &D.45862
  _1466 = MEM[(long unsigned int *)__i$_M_node_245 + 40B];
  # DEBUG D#1 => D#372
  # DEBUG this => D#1
  # DEBUG __size => _1466
  # DEBUG D#519 => MEM[(long unsigned int *)&D.45862 + 8B]
  # DEBUG D#1 => &D.45862
  # DEBUG this => D#1
  # DEBUG __osize => D#519
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1955 = MIN_EXPR <pretmp_665, _1466>;
  # DEBUG __len => D#354
  # DEBUG this => &D.45862
  # DEBUG D#518 => MEM[(char * *)&D.45862]
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  _1471 = MEM[(char * *)__i$_M_node_245 + 32B];
  # DEBUG D#3 => D#372
  # DEBUG this => D#3
  # DEBUG __s1 => _1471
  # DEBUG __s2 => D#518
  # DEBUG __n => D#354
  __r_1472 = __builtin_memcmp (_1471, pretmp_1978, __len_1955);
  # DEBUG __r => NULL
  if (__r_1472 == 0)
    goto <bb 254>;
  else
    goto <bb 257>;

  <bb 254>:
  # DEBUG __n1 => _1466
  # DEBUG __n2 => D#519
  _1473 = _1466 - pretmp_665;
  __d_1474 = (const difference_type) _1473;
  # DEBUG __d => __d_1474
  if (__d_1474 > 2147483647)
    goto <bb 258>;
  else
    goto <bb 255>;

  <bb 255>:
  if (__d_1474 < -2147483648)
    goto <bb 259>;
  else
    goto <bb 256>;

  <bb 256>:
  __r_1475 = (int) _1473;

  <bb 257>:
  # __r_1476 = PHI <__r_1472(253), __r_1475(256)>
  # DEBUG __r => __r_1476
  # DEBUG D#467 => {CLOBBER}
  # DEBUG __size => D#467
  # DEBUG D#468 => {CLOBBER}
  # DEBUG __osize => D#468
  if (__r_1476 >= 0)
    goto <bb 258>;
  else
    goto <bb 259>;

  <bb 258>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_245
  __i$_M_node_1461 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_245 + 16B];
  # DEBUG D#37 => __i$_M_node_245
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 251>;

  <bb 259>:
  # DEBUG __r => NULL
  __i$_M_node_1462 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_245 + 24B];
  # DEBUG D#36 => __i$_M_node_245
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 251>;

  <bb 260>:
  # __i$_M_node_2407 = PHI <__i$_M_node_1066(251)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2407
  # DEBUG __i$_M_node => __i$_M_node_2407
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2407 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 491>;
  else
    goto <bb 261>;

  <bb 261>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2407
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2407]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#373 => &MEM[(struct pair &)__i$_M_node_2407 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45862
  # DEBUG __y => D#373
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45862
  # DEBUG __rhs => D#373
  # DEBUG this => &D.45862
  # DEBUG __str => D#373
  # DEBUG D#517 => MEM[(long unsigned int *)&D.45862 + 8B]
  # DEBUG D#1 => &D.45862
  # DEBUG this => D#1
  # DEBUG __size => D#517
  _1479 = MEM[(long unsigned int *)__i$_M_node_2407 + 40B];
  # DEBUG D#1 => D#373
  # DEBUG this => D#1
  # DEBUG __osize => _1479
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1997 = MIN_EXPR <pretmp_665, _1479>;
  # DEBUG __len => D#355
  # DEBUG this => D#373
  _1482 = MEM[(char * *)__i$_M_node_2407 + 32B];
  # DEBUG D#3 => D#373
  # DEBUG this => D#3
  # DEBUG D#516 => MEM[(char * *)&D.45862]
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  # DEBUG __s1 => D#516
  # DEBUG __s2 => _1482
  # DEBUG __n => D#355
  __r_1484 = __builtin_memcmp (pretmp_1978, _1482, __len_1997);
  # DEBUG __r => NULL
  if (__r_1484 == 0)
    goto <bb 262>;
  else
    goto <bb 265>;

  <bb 262>:
  # DEBUG __n1 => D#517
  # DEBUG __n2 => _1479
  _1485 = pretmp_665 - _1479;
  __d_1486 = (const difference_type) _1485;
  # DEBUG __d => __d_1486
  if (__d_1486 > 2147483647)
    goto <bb 276>;
  else
    goto <bb 263>;

  <bb 263>:
  if (__d_1486 < -2147483648)
    goto <bb 266>;
  else
    goto <bb 264>;

  <bb 264>:
  __r_1487 = (int) _1485;

  <bb 265>:
  # __r_1488 = PHI <__r_1484(261), __r_1487(264)>
  # DEBUG __r => __r_1488
  # DEBUG D#473 => {CLOBBER}
  # DEBUG __size => D#473
  # DEBUG D#474 => {CLOBBER}
  # DEBUG __osize => D#474
  if (__r_1488 < 0)
    goto <bb 491>;
  else
    goto <bb 276>;

  <bb 266>:
  # __i$_M_node_1046 = PHI <__i$_M_node_2407(263), __i$_M_node_1137(491)>
  # prephitmp_658 = PHI <pretmp_665(263), prephitmp_2123(491)>
  # prephitmp_659 = PHI <pretmp_1978(263), prephitmp_638(491)>
  # DEBUG this => &D.58273
  # DEBUG __a => &D.45862
  # DEBUG __b => NULL
  # DEBUG this => &D.58273.first
  # DEBUG __str => &D.45862
  # DEBUG this => &D.45862
  # DEBUG D#113 => &D.45862._M_dataplus
  # DEBUG this => &D.58273.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.58273]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58273].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.58273]._M_p = &MEM[(struct basic_string *)&D.58273].D.14356._M_local_buf;
  # DEBUG D#515 => MEM[(char * *)&D.45862]
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  # DEBUG D#514 => MEM[(long unsigned int *)&D.45862 + 8B]
  # DEBUG D#4 => &D.45862
  # DEBUG this => D#4
  _1435 = prephitmp_659 + prephitmp_658;
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  # DEBUG this => &D.58273.first
  # DEBUG __beg => D#515
  # DEBUG __end => _1435
  # DEBUG this => &D.58273.first
  # DEBUG __beg => D#515
  # DEBUG __end => _1435
  # DEBUG this => &D.58273.first
  # DEBUG __beg => D#515
  # DEBUG __end => _1435
  # DEBUG __ptr => D#515
  _2142 = _1435 != 0B;
  _1796 = prephitmp_659 == 0B;
  _196 = _1796 & _2142;
  if (_196 != 0)
    goto <bb 492>;
  else
    goto <bb 494>;

  <bb 267>:
  _1495 = std::__cxx11::basic_string<char>::_M_create (&D.58273.first, &__dnew, 0);

  <bb 268>:
  # DEBUG D#5 => &D.58273.first
  # DEBUG __p => _1495
  # DEBUG this => D#5
  MEM[(char * *)&D.58273] = _1495;
  __dnew.173_1496 = __dnew;
  # DEBUG D#6 => &D.58273.first
  # DEBUG __capacity => __dnew.173_1496
  # DEBUG this => D#6
  MEM[(size_type *)&D.58273 + 16B] = __dnew.173_1496;
  # DEBUG D#3 => &D.58273.first
  # DEBUG this => D#3
  # DEBUG __p => _1495
  # DEBUG __k1 => D#515
  # DEBUG __k2 => _1435
  # DEBUG __d => _1495
  # DEBUG __s => D#515
  # DEBUG __n => D#514
  goto <bb 271>;

  <bb 269>:
  # DEBUG D#3 => &D.58273.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.58273].D.14356._M_local_buf
  # DEBUG __k1 => D#515
  # DEBUG __k2 => _1435
  # DEBUG __d => &MEM[(struct basic_string *)&D.58273].D.14356._M_local_buf
  # DEBUG __s => D#515
  # DEBUG __n => D#514
  if (prephitmp_658 == 1)
    goto <bb 270>;
  else
    goto <bb 271>;

  <bb 270>:
  _1498 = MEM[(const char_type &)prephitmp_659];
  # DEBUG D#11 => D#515
  # DEBUG __c1 => &MEM[(struct basic_string *)&D.58273].D.14356._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.58273 + 16] = _1498;
  goto <bb 272>;

  <bb 271>:
  # _1180 = PHI <&MEM[(struct basic_string *)&D.58273].D.14356._M_local_buf(269), _1495(268)>
  # DEBUG D#3 => &D.58273.first
  # DEBUG this => D#3
  # DEBUG __p => _1180
  # DEBUG __k1 => D#515
  # DEBUG __k2 => _1435
  # DEBUG __d => _1180
  # DEBUG __s => D#515
  # DEBUG __n => D#514
  # DEBUG __s1 => _1180
  # DEBUG __s2 => D#515
  # DEBUG __n => D#514
  __builtin_memcpy (_1180, prephitmp_659, prephitmp_658);
  pretmp_660 = __dnew;
  pretmp_663 = MEM[(char * *)&D.58273];

  <bb 272>:
  # prephitmp_662 = PHI <prephitmp_658(270), pretmp_660(271)>
  # prephitmp_664 = PHI <&MEM[(struct basic_string *)&D.58273].D.14356._M_local_buf(270), pretmp_663(271)>
  # DEBUG D#513 => __dnew
  # DEBUG this => &D.58273.first
  # DEBUG __n => D#513
  # DEBUG D#7 => &D.58273.first
  # DEBUG __length => D#513
  # DEBUG this => D#7
  MEM[(size_type *)&D.58273 + 8B] = prephitmp_662;
  # DEBUG D#3 => &D.58273.first
  # DEBUG this => D#3
  _1501 = prephitmp_664 + prephitmp_662;
  # DEBUG __c1 => _1501
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1501] = 0;
  __dnew ={v} {CLOBBER};
  D.58273.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1046
  # DEBUG __x => &D.58273
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1046;
  # DEBUG __x => &D.58273
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.58271 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.58273);

  <bb 273>:
  __i$_M_node_1436 = MEM[(struct _Rb_tree_iterator *)&D.58271];
  # DEBUG __i$_M_node => __i$_M_node_1436
  # DEBUG this => &D.58273
  # DEBUG D#56 => &D.58273.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1437 = MEM[(char * *)&D.58273];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.58273].D.14356._M_local_buf != _1437)
    goto <bb 274>;
  else
    goto <bb 275>;

  <bb 274>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1437
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1437
  # DEBUG this => D#45
  # DEBUG D.58227 => D#46
  operator delete (_1437);

  <bb 275>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.58273 ={v} {CLOBBER};
  pretmp_639 = MEM[(char * *)&D.45862];

  <bb 276>:
  # __i$_M_node_1438 = PHI <__i$_M_node_2407(262), __i$_M_node_1436(275), __i$_M_node_2407(265)>
  # prephitmp_640 = PHI <pretmp_1978(262), pretmp_639(275), pretmp_1978(265)>
  # DEBUG __i$_M_node => __i$_M_node_1438
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1438
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1438]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_1438 + 64] = dim_order_bal_torus;
  # DEBUG this => &D.45862
  # DEBUG this => &D.45862
  # DEBUG this => &D.45862
  # DEBUG D#512 => MEM[(char * *)&D.45862]
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  # DEBUG this => &D.45862
  if (&D.45862.D.14356._M_local_buf != prephitmp_640)
    goto <bb 281>;
  else
    goto <bb 282>;

<L98>:
  # DEBUG this => &D.58273
  # DEBUG D#56 => &D.58273.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1440 = MEM[(char * *)&D.58273];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.58273].D.14356._M_local_buf != _1440)
    goto <bb 278>;
  else
    goto <bb 279>;

  <bb 278>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1440
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1440
  # DEBUG this => D#45
  # DEBUG D.58211 => D#46
  operator delete (_1440);

  <bb 279>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.58273 ={v} {CLOBBER};
  resx 143

<L108>:
  goto <bb 436> (<L68>);

  <bb 281>:
  # DEBUG D#54 => D.45862.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45862
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  # DEBUG this => &D.45862
  # DEBUG D#51 => &D.45862._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#512
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#512
  # DEBUG this => D#45
  # DEBUG D.53759 => D#46
  operator delete (prephitmp_640);

  <bb 282>:
  # DEBUG D#55 => &D.45862._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45862 ={v} {CLOBBER};
  # DEBUG this => &D.45861
  # DEBUG this => &D.45861
  # DEBUG D#30 => &D.45864
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45864
  # DEBUG this => &D.45865
  # DEBUG __s => "romm_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45865
  # DEBUG D#66 => &D.45865._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45865.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45865]._M_p = &D.45865.D.14356._M_local_buf;
  # DEBUG __s => "romm_mesh"
  # DEBUG this => &D.45865
  # DEBUG __beg => "romm_mesh"
  # DEBUG __end => &MEM[(void *)"romm_mesh" + 9B]
  # DEBUG this => &D.45865
  # DEBUG __beg => "romm_mesh"
  # DEBUG __end => &MEM[(void *)"romm_mesh" + 9B]
  # DEBUG this => &D.45865
  # DEBUG __beg => "romm_mesh"
  # DEBUG __end => &MEM[(void *)"romm_mesh" + 9B]
  # DEBUG __ptr => "romm_mesh"
  # DEBUG __first => "romm_mesh"
  # DEBUG __last => &MEM[(void *)"romm_mesh" + 9B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "romm_mesh"
  # DEBUG __last => &MEM[(void *)"romm_mesh" + 9B]
  # DEBUG __dnew => 9
  # DEBUG D#3 => &D.45865
  # DEBUG this => D#3
  # DEBUG __p => &D.45865.D.14356._M_local_buf
  # DEBUG __k1 => "romm_mesh"
  # DEBUG __k2 => &MEM[(void *)"romm_mesh" + 9B]
  # DEBUG __d => &D.45865.D.14356._M_local_buf
  # DEBUG __s => "romm_mesh"
  # DEBUG __n => 9
  # DEBUG __s1 => &D.45865.D.14356._M_local_buf
  # DEBUG __s2 => "romm_mesh"
  # DEBUG __n => 9
  __builtin_memcpy (&D.45865.D.14356._M_local_buf, "romm_mesh", 9);
  # DEBUG this => &D.45865
  # DEBUG __n => 9
  # DEBUG D#7 => &D.45865
  # DEBUG __length => 9
  # DEBUG this => D#7
  MEM[(size_type *)&D.45865 + 8B] = 9;
  # DEBUG D#3 => &D.45865
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45865 + 25B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45865 + 25] = 0;
  # DEBUG D#475 => {CLOBBER}
  # DEBUG __dnew => D#475
  _205 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45865);

  <bb 283>:
  *_205 = romm_mesh;
  # DEBUG this => &D.45865
  # DEBUG this => &D.45865
  # DEBUG this => &D.45865
  _208 = MEM[(char * *)&D.45865];
  # DEBUG D#3 => &D.45865
  # DEBUG this => D#3
  # DEBUG this => &D.45865
  if (&D.45865.D.14356._M_local_buf != _208)
    goto <bb 284>;
  else
    goto <bb 285>;

  <bb 284>:
  # DEBUG D#54 => D.45865.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45865
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45865
  # DEBUG this => D#3
  # DEBUG this => &D.45865
  # DEBUG D#51 => &D.45865._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _208
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _208
  # DEBUG this => D#45
  # DEBUG D.53777 => D#46
  operator delete (_208);

  <bb 285>:
  # DEBUG D#55 => &D.45865._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45865 ={v} {CLOBBER};
  # DEBUG this => &D.45864
  # DEBUG this => &D.45864
  # DEBUG D#30 => &D.45867
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45867
  # DEBUG this => &D.45868
  # DEBUG __s => "romm_ni_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45868
  # DEBUG D#66 => &D.45868._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45868.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45868]._M_p = &D.45868.D.14356._M_local_buf;
  # DEBUG __s => "romm_ni_mesh"
  # DEBUG this => &D.45868
  # DEBUG __beg => "romm_ni_mesh"
  # DEBUG __end => &MEM[(void *)"romm_ni_mesh" + 12B]
  # DEBUG this => &D.45868
  # DEBUG __beg => "romm_ni_mesh"
  # DEBUG __end => &MEM[(void *)"romm_ni_mesh" + 12B]
  # DEBUG this => &D.45868
  # DEBUG __beg => "romm_ni_mesh"
  # DEBUG __end => &MEM[(void *)"romm_ni_mesh" + 12B]
  # DEBUG __ptr => "romm_ni_mesh"
  # DEBUG __first => "romm_ni_mesh"
  # DEBUG __last => &MEM[(void *)"romm_ni_mesh" + 12B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "romm_ni_mesh"
  # DEBUG __last => &MEM[(void *)"romm_ni_mesh" + 12B]
  # DEBUG __dnew => 12
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG __p => &D.45868.D.14356._M_local_buf
  # DEBUG __k1 => "romm_ni_mesh"
  # DEBUG __k2 => &MEM[(void *)"romm_ni_mesh" + 12B]
  # DEBUG __d => &D.45868.D.14356._M_local_buf
  # DEBUG __s => "romm_ni_mesh"
  # DEBUG __n => 12
  # DEBUG __s1 => &D.45868.D.14356._M_local_buf
  # DEBUG __s2 => "romm_ni_mesh"
  # DEBUG __n => 12
  __builtin_memcpy (&D.45868.D.14356._M_local_buf, "romm_ni_mesh", 12);
  # DEBUG this => &D.45868
  # DEBUG __n => 12
  # DEBUG D#7 => &D.45868
  # DEBUG __length => 12
  # DEBUG this => D#7
  MEM[(size_type *)&D.45868 + 8B] = 12;
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45868 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45868 + 28] = 0;
  # DEBUG D#476 => {CLOBBER}
  # DEBUG __dnew => D#476
  # DEBUG __k => &D.45868
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45868
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45868
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_1548 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45868
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_1548
  if (__i$_M_node_1548 == 0B)
    goto <bb 495>;
  else
    goto <bb 288>;

  <bb 286>:
  # __i$_M_node_943 = PHI <__i$_M_node_1552(294), __i$_M_node_1553(295)>
  # __i$_M_node_1042 = PHI <__i$_M_node_1939(294), __i$_M_node_1597(295)>
  # DEBUG __y => __i$_M_node_1042
  # DEBUG __x => __i$_M_node_943
  if (__i$_M_node_943 == 0B)
    goto <bb 296>;
  else
    goto <bb 287>;

  <bb 287>:
  goto <bb 289>;

  <bb 288>:

  <bb 289>:
  # __i$_M_node_1939 = PHI <__i$_M_node_1548(288), __i$_M_node_943(287)>
  # __i$_M_node_1597 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(288), __i$_M_node_1042(287)>
  # DEBUG __y => __i$_M_node_1597
  # DEBUG __x => __i$_M_node_1939
  # DEBUG __x => __i$_M_node_1939
  # DEBUG __x => __i$_M_node_1939
  # DEBUG this => __i$_M_node_1939
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_1939]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#374 => &MEM[(const struct pair &)__i$_M_node_1939 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#374
  # DEBUG __y => &D.45868
  # DEBUG this => D#59
  # DEBUG __lhs => D#374
  # DEBUG __rhs => &D.45868
  # DEBUG this => D#374
  # DEBUG __str => &D.45868
  _1557 = MEM[(long unsigned int *)__i$_M_node_1939 + 40B];
  # DEBUG D#1 => D#374
  # DEBUG this => D#1
  # DEBUG __size => _1557
  # DEBUG D#1 => &D.45868
  # DEBUG this => D#1
  # DEBUG __osize => 12
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1506 = MIN_EXPR <_1557, 12>;
  # DEBUG __len => D#356
  # DEBUG this => &D.45868
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  _1562 = MEM[(char * *)__i$_M_node_1939 + 32B];
  # DEBUG D#3 => D#374
  # DEBUG this => D#3
  # DEBUG __s1 => _1562
  # DEBUG __s2 => &D.45868.D.14356._M_local_buf
  # DEBUG __n => D#356
  __r_1563 = __builtin_memcmp (_1562, &D.45868.D.14356._M_local_buf, __len_1506);
  # DEBUG __r => NULL
  if (__r_1563 == 0)
    goto <bb 290>;
  else
    goto <bb 293>;

  <bb 290>:
  # DEBUG __n1 => _1557
  # DEBUG __n2 => 12
  _1564 = _1557 - 12;
  __d_1565 = (const difference_type) _1564;
  # DEBUG __d => __d_1565
  if (__d_1565 > 2147483647)
    goto <bb 294>;
  else
    goto <bb 291>;

  <bb 291>:
  if (__d_1565 < -2147483648)
    goto <bb 295>;
  else
    goto <bb 292>;

  <bb 292>:
  __r_1566 = (int) _1564;

  <bb 293>:
  # __r_1567 = PHI <__r_1563(289), __r_1566(292)>
  # DEBUG __r => __r_1567
  # DEBUG D#481 => {CLOBBER}
  # DEBUG __size => D#481
  # DEBUG D#482 => {CLOBBER}
  # DEBUG __osize => D#482
  if (__r_1567 >= 0)
    goto <bb 294>;
  else
    goto <bb 295>;

  <bb 294>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_1939
  __i$_M_node_1552 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1939 + 16B];
  # DEBUG D#37 => __i$_M_node_1939
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 286>;

  <bb 295>:
  # DEBUG __r => NULL
  __i$_M_node_1553 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_1939 + 24B];
  # DEBUG D#36 => __i$_M_node_1939
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 286>;

  <bb 296>:
  # __i$_M_node_2408 = PHI <__i$_M_node_1042(286)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2408
  # DEBUG __i$_M_node => __i$_M_node_2408
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2408 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 495>;
  else
    goto <bb 297>;

  <bb 297>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2408
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2408]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#375 => &MEM[(struct pair &)__i$_M_node_2408 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45868
  # DEBUG __y => D#375
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45868
  # DEBUG __rhs => D#375
  # DEBUG this => &D.45868
  # DEBUG __str => D#375
  # DEBUG D#1 => &D.45868
  # DEBUG this => D#1
  # DEBUG __size => 12
  _1570 = MEM[(long unsigned int *)__i$_M_node_2408 + 40B];
  # DEBUG D#1 => D#375
  # DEBUG this => D#1
  # DEBUG __osize => _1570
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1570 <= 11)
    goto <bb 299>;
  else
    goto <bb 298>;

  <bb 298>:

  <bb 299>:
  # __len_1572 = PHI <_1570(297), 12(298)>
  # DEBUG __len => D#357
  # DEBUG this => D#375
  _1573 = MEM[(char * *)__i$_M_node_2408 + 32B];
  # DEBUG D#3 => D#375
  # DEBUG this => D#3
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG __s1 => &D.45868.D.14356._M_local_buf
  # DEBUG __s2 => _1573
  # DEBUG __n => D#357
  __r_1575 = __builtin_memcmp (&D.45868.D.14356._M_local_buf, _1573, __len_1572);
  # DEBUG __r => NULL
  if (__r_1575 == 0)
    goto <bb 300>;
  else
    goto <bb 303>;

  <bb 300>:
  # DEBUG __n1 => 12
  # DEBUG __n2 => _1570
  _1576 = 12 - _1570;
  __d_1577 = (const difference_type) _1576;
  # DEBUG __d => __d_1577
  if (__d_1577 > 2147483647)
    goto <bb 308>;
  else
    goto <bb 301>;

  <bb 301>:
  if (__d_1577 < -2147483648)
    goto <bb 304>;
  else
    goto <bb 302>;

  <bb 302>:
  __r_1578 = (int) _1576;

  <bb 303>:
  # __r_1579 = PHI <__r_1575(299), __r_1578(302)>
  # DEBUG __r => __r_1579
  # DEBUG D#487 => {CLOBBER}
  # DEBUG __size => D#487
  # DEBUG D#488 => {CLOBBER}
  # DEBUG __osize => D#488
  if (__r_1579 < 0)
    goto <bb 495>;
  else
    goto <bb 308>;

  <bb 304>:
  # __i$_M_node_1313 = PHI <__i$_M_node_2408(301), __i$_M_node_1308(495)>
  # DEBUG this => &D.58514
  # DEBUG __a => &D.45868
  # DEBUG __b => NULL
  # DEBUG this => &D.58514.first
  # DEBUG __str => &D.45868
  # DEBUG this => &D.45868
  # DEBUG D#113 => &D.45868._M_dataplus
  # DEBUG this => &D.58514.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.58514]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58514].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.58514]._M_p = &MEM[(struct basic_string *)&D.58514].D.14356._M_local_buf;
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG D#4 => &D.45868
  # DEBUG this => D#4
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG this => &D.58514.first
  # DEBUG __beg => &D.45868.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45868 + 28B]
  # DEBUG this => &D.58514.first
  # DEBUG __beg => &D.45868.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45868 + 28B]
  # DEBUG this => &D.58514.first
  # DEBUG __beg => &D.45868.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45868 + 28B]
  # DEBUG __ptr => &D.45868.D.14356._M_local_buf
  # DEBUG __first => &D.45868.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45868 + 28B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => &D.45868.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45868 + 28B]
  # DEBUG __dnew => 12
  # DEBUG D#3 => &D.58514.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.58514].D.14356._M_local_buf
  # DEBUG __k1 => &D.45868.D.14356._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.45868 + 28B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.58514].D.14356._M_local_buf
  # DEBUG __s => &D.45868.D.14356._M_local_buf
  # DEBUG __n => 12
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.58514].D.14356._M_local_buf
  # DEBUG __s2 => &D.45868.D.14356._M_local_buf
  # DEBUG __n => 12
  __builtin_memcpy (&MEM[(struct basic_string *)&D.58514].D.14356._M_local_buf, &D.45868.D.14356._M_local_buf, 12);
  # DEBUG this => &D.58514.first
  # DEBUG __n => 12
  # DEBUG D#7 => &D.58514.first
  # DEBUG __length => 12
  # DEBUG this => D#7
  MEM[(size_type *)&D.58514 + 8B] = 12;
  # DEBUG D#3 => &D.58514.first
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.58514 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.58514 + 28] = 0;
  # DEBUG D#489 => {CLOBBER}
  # DEBUG __dnew => D#489
  D.58514.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1313
  # DEBUG __x => &D.58514
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1313;
  # DEBUG __x => &D.58514
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.58512 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.58514);

  <bb 305>:
  __i$_M_node_1527 = MEM[(struct _Rb_tree_iterator *)&D.58512];
  # DEBUG __i$_M_node => __i$_M_node_1527
  # DEBUG this => &D.58514
  # DEBUG D#56 => &D.58514.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1528 = MEM[(char * *)&D.58514];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.58514].D.14356._M_local_buf != _1528)
    goto <bb 306>;
  else
    goto <bb 307>;

  <bb 306>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1528
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1528
  # DEBUG this => D#45
  # DEBUG D.58468 => D#46
  operator delete (_1528);

  <bb 307>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.58514 ={v} {CLOBBER};
  pretmp_644 = MEM[(char * *)&D.45868];

  <bb 308>:
  # __i$_M_node_1529 = PHI <__i$_M_node_2408(300), __i$_M_node_1527(307), __i$_M_node_2408(303)>
  # prephitmp_645 = PHI <&D.45868.D.14356._M_local_buf(300), pretmp_644(307), &D.45868.D.14356._M_local_buf(303)>
  # DEBUG __i$_M_node => __i$_M_node_1529
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1529
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1529]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_1529 + 64] = romm_ni_mesh;
  # DEBUG this => &D.45868
  # DEBUG this => &D.45868
  # DEBUG this => &D.45868
  # DEBUG D#511 => MEM[(char * *)&D.45868]
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG this => &D.45868
  if (&D.45868.D.14356._M_local_buf != prephitmp_645)
    goto <bb 312>;
  else
    goto <bb 313>;

<L99>:
  # DEBUG this => &D.58514
  # DEBUG D#56 => &D.58514.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1531 = MEM[(char * *)&D.58514];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.58514].D.14356._M_local_buf != _1531)
    goto <bb 310>;
  else
    goto <bb 311>;

  <bb 310>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1531
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1531
  # DEBUG this => D#45
  # DEBUG D.58452 => D#46
  operator delete (_1531);

  <bb 311>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.58514 ={v} {CLOBBER};
  resx 144

  <bb 312>:
  # DEBUG D#54 => D.45868.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45868
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG this => &D.45868
  # DEBUG D#51 => &D.45868._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#511
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#511
  # DEBUG this => D#45
  # DEBUG D.53795 => D#46
  operator delete (prephitmp_645);

  <bb 313>:
  # DEBUG D#55 => &D.45868._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45868 ={v} {CLOBBER};
  # DEBUG this => &D.45867
  # DEBUG this => &D.45867
  # DEBUG D#30 => &D.45870
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45870
  # DEBUG this => &D.45871
  # DEBUG __s => "min_adapt_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45871
  # DEBUG D#66 => &D.45871._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45871.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45871]._M_p = &D.45871.D.14356._M_local_buf;
  # DEBUG __s => "min_adapt_mesh"
  # DEBUG this => &D.45871
  # DEBUG __beg => "min_adapt_mesh"
  # DEBUG __end => &MEM[(void *)"min_adapt_mesh" + 14B]
  # DEBUG this => &D.45871
  # DEBUG __beg => "min_adapt_mesh"
  # DEBUG __end => &MEM[(void *)"min_adapt_mesh" + 14B]
  # DEBUG this => &D.45871
  # DEBUG __beg => "min_adapt_mesh"
  # DEBUG __end => &MEM[(void *)"min_adapt_mesh" + 14B]
  # DEBUG __ptr => "min_adapt_mesh"
  # DEBUG __first => "min_adapt_mesh"
  # DEBUG __last => &MEM[(void *)"min_adapt_mesh" + 14B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "min_adapt_mesh"
  # DEBUG __last => &MEM[(void *)"min_adapt_mesh" + 14B]
  # DEBUG __dnew => 14
  # DEBUG D#3 => &D.45871
  # DEBUG this => D#3
  # DEBUG __p => &D.45871.D.14356._M_local_buf
  # DEBUG __k1 => "min_adapt_mesh"
  # DEBUG __k2 => &MEM[(void *)"min_adapt_mesh" + 14B]
  # DEBUG __d => &D.45871.D.14356._M_local_buf
  # DEBUG __s => "min_adapt_mesh"
  # DEBUG __n => 14
  # DEBUG __s1 => &D.45871.D.14356._M_local_buf
  # DEBUG __s2 => "min_adapt_mesh"
  # DEBUG __n => 14
  __builtin_memcpy (&D.45871.D.14356._M_local_buf, "min_adapt_mesh", 14);
  # DEBUG this => &D.45871
  # DEBUG __n => 14
  # DEBUG D#7 => &D.45871
  # DEBUG __length => 14
  # DEBUG this => D#7
  MEM[(size_type *)&D.45871 + 8B] = 14;
  # DEBUG D#3 => &D.45871
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45871 + 30B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45871 + 30] = 0;
  # DEBUG D#490 => {CLOBBER}
  # DEBUG __dnew => D#490
  _219 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45871);

  <bb 314>:
  *_219 = min_adapt_mesh;
  # DEBUG this => &D.45871
  # DEBUG this => &D.45871
  # DEBUG this => &D.45871
  _222 = MEM[(char * *)&D.45871];
  # DEBUG D#3 => &D.45871
  # DEBUG this => D#3
  # DEBUG this => &D.45871
  if (&D.45871.D.14356._M_local_buf != _222)
    goto <bb 315>;
  else
    goto <bb 316>;

  <bb 315>:
  # DEBUG D#54 => D.45871.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45871
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45871
  # DEBUG this => D#3
  # DEBUG this => &D.45871
  # DEBUG D#51 => &D.45871._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _222
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _222
  # DEBUG this => D#45
  # DEBUG D.53813 => D#46
  operator delete (_222);

  <bb 316>:
  # DEBUG D#55 => &D.45871._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45871 ={v} {CLOBBER};
  # DEBUG this => &D.45870
  # DEBUG this => &D.45870
  # DEBUG D#30 => &D.45873
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45873
  # DEBUG this => &D.45874
  # DEBUG __s => "min_adapt_torus"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45874
  # DEBUG D#66 => &D.45874._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45874.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45874]._M_p = &D.45874.D.14356._M_local_buf;
  # DEBUG __s => "min_adapt_torus"
  # DEBUG this => &D.45874
  # DEBUG __beg => "min_adapt_torus"
  # DEBUG __end => &MEM[(void *)"min_adapt_torus" + 15B]
  # DEBUG this => &D.45874
  # DEBUG __beg => "min_adapt_torus"
  # DEBUG __end => &MEM[(void *)"min_adapt_torus" + 15B]
  # DEBUG this => &D.45874
  # DEBUG __beg => "min_adapt_torus"
  # DEBUG __end => &MEM[(void *)"min_adapt_torus" + 15B]
  # DEBUG __ptr => "min_adapt_torus"
  # DEBUG __first => "min_adapt_torus"
  # DEBUG __last => &MEM[(void *)"min_adapt_torus" + 15B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "min_adapt_torus"
  # DEBUG __last => &MEM[(void *)"min_adapt_torus" + 15B]
  # DEBUG __dnew => 15
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG __p => &D.45874.D.14356._M_local_buf
  # DEBUG __k1 => "min_adapt_torus"
  # DEBUG __k2 => &MEM[(void *)"min_adapt_torus" + 15B]
  # DEBUG __d => &D.45874.D.14356._M_local_buf
  # DEBUG __s => "min_adapt_torus"
  # DEBUG __n => 15
  # DEBUG __s1 => &D.45874.D.14356._M_local_buf
  # DEBUG __s2 => "min_adapt_torus"
  # DEBUG __n => 15
  __builtin_memcpy (&D.45874.D.14356._M_local_buf, "min_adapt_torus", 15);
  # DEBUG this => &D.45874
  # DEBUG __n => 15
  # DEBUG D#7 => &D.45874
  # DEBUG __length => 15
  # DEBUG this => D#7
  MEM[(size_type *)&D.45874 + 8B] = 15;
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45874 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45874 + 31] = 0;
  # DEBUG D#491 => {CLOBBER}
  # DEBUG __dnew => D#491
  # DEBUG __k => &D.45874
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &D.45874
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &D.45874
  # DEBUG this => &gRoutingFunctionMap._M_t
  __i$_M_node_1639 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#31 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#31
  # DEBUG D#96 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &D.45874
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __i$_M_node_1639
  if (__i$_M_node_1639 == 0B)
    goto <bb 496>;
  else
    goto <bb 319>;

  <bb 317>:
  # __i$_M_node_919 = PHI <__i$_M_node_1643(325), __i$_M_node_1644(326)>
  # __i$_M_node_918 = PHI <__i$_M_node_2020(325), __i$_M_node_1294(326)>
  # DEBUG __y => __i$_M_node_918
  # DEBUG __x => __i$_M_node_919
  if (__i$_M_node_919 == 0B)
    goto <bb 327>;
  else
    goto <bb 318>;

  <bb 318>:
  goto <bb 320>;

  <bb 319>:

  <bb 320>:
  # __i$_M_node_2020 = PHI <__i$_M_node_1639(319), __i$_M_node_919(318)>
  # __i$_M_node_1294 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(319), __i$_M_node_918(318)>
  # DEBUG __y => __i$_M_node_1294
  # DEBUG __x => __i$_M_node_2020
  # DEBUG __x => __i$_M_node_2020
  # DEBUG __x => __i$_M_node_2020
  # DEBUG this => __i$_M_node_2020
  # DEBUG D#93 => &MEM[(const struct _Rb_tree_node *)__i$_M_node_2020]._M_value_field
  # DEBUG __r => D#93
  # DEBUG __x => D#93
  # DEBUG this => D#60
  # DEBUG D#376 => &MEM[(const struct pair &)__i$_M_node_2020 + 32].first
  # DEBUG D#94 => &D#95->_M_impl._M_key_compare
  # DEBUG D#59 => D#94
  # DEBUG __x => D#376
  # DEBUG __y => &D.45874
  # DEBUG this => D#59
  # DEBUG __lhs => D#376
  # DEBUG __rhs => &D.45874
  # DEBUG this => D#376
  # DEBUG __str => &D.45874
  _1648 = MEM[(long unsigned int *)__i$_M_node_2020 + 40B];
  # DEBUG D#1 => D#376
  # DEBUG this => D#1
  # DEBUG __size => _1648
  # DEBUG D#1 => &D.45874
  # DEBUG this => D#1
  # DEBUG __osize => 15
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_2007 = MIN_EXPR <_1648, 15>;
  # DEBUG __len => D#358
  # DEBUG this => &D.45874
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  _1653 = MEM[(char * *)__i$_M_node_2020 + 32B];
  # DEBUG D#3 => D#376
  # DEBUG this => D#3
  # DEBUG __s1 => _1653
  # DEBUG __s2 => &D.45874.D.14356._M_local_buf
  # DEBUG __n => D#358
  __r_1654 = __builtin_memcmp (_1653, &D.45874.D.14356._M_local_buf, __len_2007);
  # DEBUG __r => NULL
  if (__r_1654 == 0)
    goto <bb 321>;
  else
    goto <bb 324>;

  <bb 321>:
  # DEBUG __n1 => _1648
  # DEBUG __n2 => 15
  _1655 = _1648 - 15;
  __d_1656 = (const difference_type) _1655;
  # DEBUG __d => __d_1656
  if (__d_1656 > 2147483647)
    goto <bb 325>;
  else
    goto <bb 322>;

  <bb 322>:
  if (__d_1656 < -2147483648)
    goto <bb 326>;
  else
    goto <bb 323>;

  <bb 323>:
  __r_1657 = (int) _1655;

  <bb 324>:
  # __r_1658 = PHI <__r_1654(320), __r_1657(323)>
  # DEBUG __r => __r_1658
  # DEBUG D#496 => {CLOBBER}
  # DEBUG __size => D#496
  # DEBUG D#497 => {CLOBBER}
  # DEBUG __osize => D#497
  if (__r_1658 >= 0)
    goto <bb 325>;
  else
    goto <bb 326>;

  <bb 325>:
  # DEBUG __r => NULL
  # DEBUG __y => __i$_M_node_2020
  __i$_M_node_1643 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_2020 + 16B];
  # DEBUG D#37 => __i$_M_node_2020
  # DEBUG __x => D#37
  # DEBUG __x => NULL
  goto <bb 317>;

  <bb 326>:
  # DEBUG __r => NULL
  __i$_M_node_1644 = MEM[(struct _Rb_tree_node_base * *)__i$_M_node_2020 + 24B];
  # DEBUG D#36 => __i$_M_node_2020
  # DEBUG __x => D#36
  # DEBUG __x => NULL
  goto <bb 317>;

  <bb 327>:
  # __i$_M_node_2421 = PHI <__i$_M_node_918(317)>
  # DEBUG this => NULL
  # DEBUG __x => __i$_M_node_2421
  # DEBUG __i$_M_node => __i$_M_node_2421
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#44 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#44
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__i
  # DEBUG __x => NULL
  if (__i$_M_node_2421 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 496>;
  else
    goto <bb 328>;

  <bb 328>:
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_2421
  # DEBUG D#144 => &MEM[(struct _Rb_tree_node *)__i$_M_node_2421]._M_value_field
  # DEBUG __r => D#144
  # DEBUG D#377 => &MEM[(struct pair &)__i$_M_node_2421 + 32].first
  # DEBUG D#35 => &gRoutingFunctionMap
  # DEBUG this => D#35
  # DEBUG D#34 => D#35
  # DEBUG D#33 => &D#34->_M_t
  # DEBUG D#32 => D#33
  # DEBUG this => D#32
  # DEBUG __x => &D.45874
  # DEBUG __y => D#377
  # DEBUG this => D#59
  # DEBUG __lhs => &D.45874
  # DEBUG __rhs => D#377
  # DEBUG this => &D.45874
  # DEBUG __str => D#377
  # DEBUG D#1 => &D.45874
  # DEBUG this => D#1
  # DEBUG __size => 15
  _1661 = MEM[(long unsigned int *)__i$_M_node_2421 + 40B];
  # DEBUG D#1 => D#377
  # DEBUG this => D#1
  # DEBUG __osize => _1661
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  if (_1661 <= 14)
    goto <bb 330>;
  else
    goto <bb 329>;

  <bb 329>:

  <bb 330>:
  # __len_1663 = PHI <_1661(328), 15(329)>
  # DEBUG __len => D#359
  # DEBUG this => D#377
  _1664 = MEM[(char * *)__i$_M_node_2421 + 32B];
  # DEBUG D#3 => D#377
  # DEBUG this => D#3
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG __s1 => &D.45874.D.14356._M_local_buf
  # DEBUG __s2 => _1664
  # DEBUG __n => D#359
  __r_1666 = __builtin_memcmp (&D.45874.D.14356._M_local_buf, _1664, __len_1663);
  # DEBUG __r => NULL
  if (__r_1666 == 0)
    goto <bb 331>;
  else
    goto <bb 334>;

  <bb 331>:
  # DEBUG __n1 => 15
  # DEBUG __n2 => _1661
  _1667 = 15 - _1661;
  __d_1668 = (const difference_type) _1667;
  # DEBUG __d => __d_1668
  if (__d_1668 > 2147483647)
    goto <bb 339>;
  else
    goto <bb 332>;

  <bb 332>:
  if (__d_1668 < -2147483648)
    goto <bb 335>;
  else
    goto <bb 333>;

  <bb 333>:
  __r_1669 = (int) _1667;

  <bb 334>:
  # __r_1670 = PHI <__r_1666(330), __r_1669(333)>
  # DEBUG __r => __r_1670
  # DEBUG D#502 => {CLOBBER}
  # DEBUG __size => D#502
  # DEBUG D#503 => {CLOBBER}
  # DEBUG __osize => D#503
  if (__r_1670 < 0)
    goto <bb 496>;
  else
    goto <bb 339>;

  <bb 335>:
  # __i$_M_node_1388 = PHI <__i$_M_node_2421(332), __i$_M_node_1383(496)>
  # DEBUG this => &D.58755
  # DEBUG __a => &D.45874
  # DEBUG __b => NULL
  # DEBUG this => &D.58755.first
  # DEBUG __str => &D.45874
  # DEBUG this => &D.45874
  # DEBUG D#113 => &D.45874._M_dataplus
  # DEBUG this => &D.58755.first
  # DEBUG D#114 => &MEM[(struct basic_string *)&D.58755]._M_dataplus
  # DEBUG D#43 => D#113
  # DEBUG this => D#114
  # DEBUG __dat => &MEM[(struct basic_string *)&D.58755].D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#114
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.58755]._M_p = &MEM[(struct basic_string *)&D.58755].D.14356._M_local_buf;
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG D#4 => &D.45874
  # DEBUG this => D#4
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG this => &D.58755.first
  # DEBUG __beg => &D.45874.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45874 + 31B]
  # DEBUG this => &D.58755.first
  # DEBUG __beg => &D.45874.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45874 + 31B]
  # DEBUG this => &D.58755.first
  # DEBUG __beg => &D.45874.D.14356._M_local_buf
  # DEBUG __end => &MEM[(void *)&D.45874 + 31B]
  # DEBUG __ptr => &D.45874.D.14356._M_local_buf
  # DEBUG __first => &D.45874.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45874 + 31B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => &D.45874.D.14356._M_local_buf
  # DEBUG __last => &MEM[(void *)&D.45874 + 31B]
  # DEBUG __dnew => 15
  # DEBUG D#3 => &D.58755.first
  # DEBUG this => D#3
  # DEBUG __p => &MEM[(struct basic_string *)&D.58755].D.14356._M_local_buf
  # DEBUG __k1 => &D.45874.D.14356._M_local_buf
  # DEBUG __k2 => &MEM[(void *)&D.45874 + 31B]
  # DEBUG __d => &MEM[(struct basic_string *)&D.58755].D.14356._M_local_buf
  # DEBUG __s => &D.45874.D.14356._M_local_buf
  # DEBUG __n => 15
  # DEBUG __s1 => &MEM[(struct basic_string *)&D.58755].D.14356._M_local_buf
  # DEBUG __s2 => &D.45874.D.14356._M_local_buf
  # DEBUG __n => 15
  __builtin_memcpy (&MEM[(struct basic_string *)&D.58755].D.14356._M_local_buf, &D.45874.D.14356._M_local_buf, 15);
  # DEBUG this => &D.58755.first
  # DEBUG __n => 15
  # DEBUG D#7 => &D.58755.first
  # DEBUG __length => 15
  # DEBUG this => D#7
  MEM[(size_type *)&D.58755 + 8B] = 15;
  # DEBUG D#3 => &D.58755.first
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.58755 + 31B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.58755 + 31] = 0;
  # DEBUG D#504 => {CLOBBER}
  # DEBUG __dnew => D#504
  D.58755.second = 0B;
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __position$_M_node => __i$_M_node_1388
  # DEBUG __x => &D.58755
  # DEBUG this => NULL
  # DEBUG __it => &__position
  # DEBUG this => &gRoutingFunctionMap._M_t
  MEM[(struct _Rb_tree_const_iterator *)&__pos] = __i$_M_node_1388;
  # DEBUG __x => &D.58755
  # DEBUG this => &__an
  # DEBUG __t => &gRoutingFunctionMap._M_t
  # DEBUG __an$_M_t => &gRoutingFunctionMap._M_t
  # DEBUG D#143 => &__an
  D.58753 = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)> > >::_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvPK6RouterPK4FlitiP9OutputSetbEESt10_Select1stISI_ESt4lessIS5_ESaISI_EE17_M_insert_unique_INSO_11_Alloc_nodeEEESt17_Rb_tree_iteratorISI_ESt23_Rb_tree_const_iteratorISI_ERKSI_RT_.isra.54.constprop (&gRoutingFunctionMap._M_t, __pos, &D.58755);

  <bb 336>:
  __i$_M_node_1618 = MEM[(struct _Rb_tree_iterator *)&D.58753];
  # DEBUG __i$_M_node => __i$_M_node_1618
  # DEBUG this => &D.58755
  # DEBUG D#56 => &D.58755.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1619 = MEM[(char * *)&D.58755];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.58755].D.14356._M_local_buf != _1619)
    goto <bb 337>;
  else
    goto <bb 338>;

  <bb 337>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1619
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1619
  # DEBUG this => D#45
  # DEBUG D.58709 => D#46
  operator delete (_1619);

  <bb 338>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.58755 ={v} {CLOBBER};
  pretmp_2060 = MEM[(char * *)&D.45874];

  <bb 339>:
  # __i$_M_node_1620 = PHI <__i$_M_node_2421(331), __i$_M_node_1618(338), __i$_M_node_2421(334)>
  # prephitmp_2061 = PHI <&D.45874.D.14356._M_local_buf(331), pretmp_2060(338), &D.45874.D.14356._M_local_buf(334)>
  # DEBUG __i$_M_node => __i$_M_node_1620
  # DEBUG this => &__i
  # DEBUG this => __i$_M_node_1620
  # DEBUG D#145 => &MEM[(struct _Rb_tree_node *)__i$_M_node_1620]._M_value_field
  # DEBUG __r => D#145
  # DEBUG D#147 => {CLOBBER}
  # DEBUG __i$_M_node => D#147
  MEM[(void (*mapped_type) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) &)__i$_M_node_1620 + 64] = min_adapt_torus;
  # DEBUG this => &D.45874
  # DEBUG this => &D.45874
  # DEBUG this => &D.45874
  # DEBUG D#510 => MEM[(char * *)&D.45874]
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG this => &D.45874
  if (&D.45874.D.14356._M_local_buf != prephitmp_2061)
    goto <bb 343>;
  else
    goto <bb 344>;

<L100>:
  # DEBUG this => &D.58755
  # DEBUG D#56 => &D.58755.first
  # DEBUG this => D#56
  # DEBUG this => D#56
  # DEBUG this => D#56
  _1622 = MEM[(char * *)&D.58755];
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  if (&MEM[(const struct basic_string *)&D.58755].D.14356._M_local_buf != _1622)
    goto <bb 341>;
  else
    goto <bb 342>;

  <bb 341>:
  # DEBUG D#54 => MEM[(struct basic_string *)D#56].D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => D#56
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => D#56
  # DEBUG this => D#3
  # DEBUG this => D#56
  # DEBUG D#51 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _1622
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _1622
  # DEBUG this => D#45
  # DEBUG D.58693 => D#46
  operator delete (_1622);

  <bb 342>:
  # DEBUG D#55 => &MEM[(struct basic_string *)D#56]._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.58755 ={v} {CLOBBER};
  resx 145

  <bb 343>:
  # DEBUG D#54 => D.45874.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45874
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG this => &D.45874
  # DEBUG D#51 => &D.45874._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => D#510
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => D#510
  # DEBUG this => D#45
  # DEBUG D.53831 => D#46
  operator delete (prephitmp_2061);

  <bb 344>:
  # DEBUG D#55 => &D.45874._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45874 ={v} {CLOBBER};
  # DEBUG this => &D.45873
  # DEBUG this => &D.45873
  # DEBUG D#30 => &D.45876
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45876
  # DEBUG this => &D.45877
  # DEBUG __s => "planar_adapt_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45877
  # DEBUG D#66 => &D.45877._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45877.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45877]._M_p = &D.45877.D.14356._M_local_buf;
  # DEBUG __s => "planar_adapt_mesh"
  # DEBUG this => &D.45877
  # DEBUG __beg => "planar_adapt_mesh"
  # DEBUG __end => &MEM[(void *)"planar_adapt_mesh" + 17B]
  # DEBUG this => &D.45877
  # DEBUG __beg => "planar_adapt_mesh"
  # DEBUG __end => &MEM[(void *)"planar_adapt_mesh" + 17B]
  # DEBUG this => &D.45877
  # DEBUG __beg => "planar_adapt_mesh"
  # DEBUG __end => &MEM[(void *)"planar_adapt_mesh" + 17B]
  # DEBUG __ptr => "planar_adapt_mesh"
  # DEBUG __first => "planar_adapt_mesh"
  # DEBUG __last => &MEM[(void *)"planar_adapt_mesh" + 17B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "planar_adapt_mesh"
  # DEBUG __last => &MEM[(void *)"planar_adapt_mesh" + 17B]
  __dnew = 17;
  _1693 = std::__cxx11::basic_string<char>::_M_create (&D.45877, &__dnew, 0);
  # DEBUG D#5 => &D.45877
  # DEBUG __p => _1693
  # DEBUG this => D#5
  MEM[(char * *)&D.45877] = _1693;
  __dnew.173_1694 = __dnew;
  # DEBUG D#6 => &D.45877
  # DEBUG __capacity => __dnew.173_1694
  # DEBUG this => D#6
  MEM[(size_type *)&D.45877 + 16B] = __dnew.173_1694;
  # DEBUG D#3 => &D.45877
  # DEBUG this => D#3
  # DEBUG __p => _1693
  # DEBUG __k1 => "planar_adapt_mesh"
  # DEBUG __k2 => &MEM[(void *)"planar_adapt_mesh" + 17B]
  # DEBUG __d => _1693
  # DEBUG __s => "planar_adapt_mesh"
  # DEBUG __n => 17
  # DEBUG __s1 => _1693
  # DEBUG __s2 => "planar_adapt_mesh"
  # DEBUG __n => 17
  __builtin_memcpy (_1693, "planar_adapt_mesh", 17);
  __dnew.173_1697 = __dnew;
  # DEBUG this => &D.45877
  # DEBUG __n => __dnew.173_1697
  # DEBUG D#7 => &D.45877
  # DEBUG __length => __dnew.173_1697
  # DEBUG this => D#7
  MEM[(size_type *)&D.45877 + 8B] = __dnew.173_1697;
  _1698 = MEM[(char * *)&D.45877];
  # DEBUG D#3 => &D.45877
  # DEBUG this => D#3
  _1699 = _1698 + __dnew.173_1697;
  # DEBUG __c1 => _1699
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1699] = 0;
  __dnew ={v} {CLOBBER};
  _233 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45877);

  <bb 345>:
  *_233 = planar_adapt_mesh;
  # DEBUG this => &D.45877
  # DEBUG this => &D.45877
  # DEBUG this => &D.45877
  _236 = MEM[(char * *)&D.45877];
  # DEBUG D#3 => &D.45877
  # DEBUG this => D#3
  # DEBUG this => &D.45877
  if (&D.45877.D.14356._M_local_buf != _236)
    goto <bb 346>;
  else
    goto <bb 347>;

  <bb 346>:
  # DEBUG D#54 => D.45877.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45877
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45877
  # DEBUG this => D#3
  # DEBUG this => &D.45877
  # DEBUG D#51 => &D.45877._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _236
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _236
  # DEBUG this => D#45
  # DEBUG D.53849 => D#46
  operator delete (_236);

  <bb 347>:
  # DEBUG D#55 => &D.45877._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45877 ={v} {CLOBBER};
  # DEBUG this => &D.45876
  # DEBUG this => &D.45876
  # DEBUG D#30 => &D.45879
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45879
  # DEBUG this => &D.45880
  # DEBUG __s => "valiant_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45880
  # DEBUG D#66 => &D.45880._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45880.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45880]._M_p = &D.45880.D.14356._M_local_buf;
  # DEBUG __s => "valiant_mesh"
  # DEBUG this => &D.45880
  # DEBUG __beg => "valiant_mesh"
  # DEBUG __end => &MEM[(void *)"valiant_mesh" + 12B]
  # DEBUG this => &D.45880
  # DEBUG __beg => "valiant_mesh"
  # DEBUG __end => &MEM[(void *)"valiant_mesh" + 12B]
  # DEBUG this => &D.45880
  # DEBUG __beg => "valiant_mesh"
  # DEBUG __end => &MEM[(void *)"valiant_mesh" + 12B]
  # DEBUG __ptr => "valiant_mesh"
  # DEBUG __first => "valiant_mesh"
  # DEBUG __last => &MEM[(void *)"valiant_mesh" + 12B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "valiant_mesh"
  # DEBUG __last => &MEM[(void *)"valiant_mesh" + 12B]
  # DEBUG __dnew => 12
  # DEBUG D#3 => &D.45880
  # DEBUG this => D#3
  # DEBUG __p => &D.45880.D.14356._M_local_buf
  # DEBUG __k1 => "valiant_mesh"
  # DEBUG __k2 => &MEM[(void *)"valiant_mesh" + 12B]
  # DEBUG __d => &D.45880.D.14356._M_local_buf
  # DEBUG __s => "valiant_mesh"
  # DEBUG __n => 12
  # DEBUG __s1 => &D.45880.D.14356._M_local_buf
  # DEBUG __s2 => "valiant_mesh"
  # DEBUG __n => 12
  __builtin_memcpy (&D.45880.D.14356._M_local_buf, "valiant_mesh", 12);
  # DEBUG this => &D.45880
  # DEBUG __n => 12
  # DEBUG D#7 => &D.45880
  # DEBUG __length => 12
  # DEBUG this => D#7
  MEM[(size_type *)&D.45880 + 8B] = 12;
  # DEBUG D#3 => &D.45880
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45880 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45880 + 28] = 0;
  # DEBUG D#505 => {CLOBBER}
  # DEBUG __dnew => D#505
  _240 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45880);

  <bb 348>:
  *_240 = valiant_mesh;
  # DEBUG this => &D.45880
  # DEBUG this => &D.45880
  # DEBUG this => &D.45880
  _243 = MEM[(char * *)&D.45880];
  # DEBUG D#3 => &D.45880
  # DEBUG this => D#3
  # DEBUG this => &D.45880
  if (&D.45880.D.14356._M_local_buf != _243)
    goto <bb 349>;
  else
    goto <bb 350>;

  <bb 349>:
  # DEBUG D#54 => D.45880.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45880
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45880
  # DEBUG this => D#3
  # DEBUG this => &D.45880
  # DEBUG D#51 => &D.45880._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _243
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _243
  # DEBUG this => D#45
  # DEBUG D.53867 => D#46
  operator delete (_243);

  <bb 350>:
  # DEBUG D#55 => &D.45880._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45880 ={v} {CLOBBER};
  # DEBUG this => &D.45879
  # DEBUG this => &D.45879
  # DEBUG D#30 => &D.45882
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45882
  # DEBUG this => &D.45883
  # DEBUG __s => "valiant_torus"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45883
  # DEBUG D#66 => &D.45883._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45883.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45883]._M_p = &D.45883.D.14356._M_local_buf;
  # DEBUG __s => "valiant_torus"
  # DEBUG this => &D.45883
  # DEBUG __beg => "valiant_torus"
  # DEBUG __end => &MEM[(void *)"valiant_torus" + 13B]
  # DEBUG this => &D.45883
  # DEBUG __beg => "valiant_torus"
  # DEBUG __end => &MEM[(void *)"valiant_torus" + 13B]
  # DEBUG this => &D.45883
  # DEBUG __beg => "valiant_torus"
  # DEBUG __end => &MEM[(void *)"valiant_torus" + 13B]
  # DEBUG __ptr => "valiant_torus"
  # DEBUG __first => "valiant_torus"
  # DEBUG __last => &MEM[(void *)"valiant_torus" + 13B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "valiant_torus"
  # DEBUG __last => &MEM[(void *)"valiant_torus" + 13B]
  # DEBUG __dnew => 13
  # DEBUG D#3 => &D.45883
  # DEBUG this => D#3
  # DEBUG __p => &D.45883.D.14356._M_local_buf
  # DEBUG __k1 => "valiant_torus"
  # DEBUG __k2 => &MEM[(void *)"valiant_torus" + 13B]
  # DEBUG __d => &D.45883.D.14356._M_local_buf
  # DEBUG __s => "valiant_torus"
  # DEBUG __n => 13
  # DEBUG __s1 => &D.45883.D.14356._M_local_buf
  # DEBUG __s2 => "valiant_torus"
  # DEBUG __n => 13
  __builtin_memcpy (&D.45883.D.14356._M_local_buf, "valiant_torus", 13);
  # DEBUG this => &D.45883
  # DEBUG __n => 13
  # DEBUG D#7 => &D.45883
  # DEBUG __length => 13
  # DEBUG this => D#7
  MEM[(size_type *)&D.45883 + 8B] = 13;
  # DEBUG D#3 => &D.45883
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45883 + 29B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45883 + 29] = 0;
  # DEBUG D#506 => {CLOBBER}
  # DEBUG __dnew => D#506
  _247 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45883);

  <bb 351>:
  *_247 = valiant_torus;
  # DEBUG this => &D.45883
  # DEBUG this => &D.45883
  # DEBUG this => &D.45883
  _250 = MEM[(char * *)&D.45883];
  # DEBUG D#3 => &D.45883
  # DEBUG this => D#3
  # DEBUG this => &D.45883
  if (&D.45883.D.14356._M_local_buf != _250)
    goto <bb 352>;
  else
    goto <bb 353>;

  <bb 352>:
  # DEBUG D#54 => D.45883.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45883
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45883
  # DEBUG this => D#3
  # DEBUG this => &D.45883
  # DEBUG D#51 => &D.45883._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _250
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _250
  # DEBUG this => D#45
  # DEBUG D.53885 => D#46
  operator delete (_250);

  <bb 353>:
  # DEBUG D#55 => &D.45883._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45883 ={v} {CLOBBER};
  # DEBUG this => &D.45882
  # DEBUG this => &D.45882
  # DEBUG D#30 => &D.45885
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45885
  # DEBUG this => &D.45886
  # DEBUG __s => "valiant_ni_torus"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45886
  # DEBUG D#66 => &D.45886._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45886.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45886]._M_p = &D.45886.D.14356._M_local_buf;
  # DEBUG __s => "valiant_ni_torus"
  # DEBUG this => &D.45886
  # DEBUG __beg => "valiant_ni_torus"
  # DEBUG __end => &MEM[(void *)"valiant_ni_torus" + 16B]
  # DEBUG this => &D.45886
  # DEBUG __beg => "valiant_ni_torus"
  # DEBUG __end => &MEM[(void *)"valiant_ni_torus" + 16B]
  # DEBUG this => &D.45886
  # DEBUG __beg => "valiant_ni_torus"
  # DEBUG __end => &MEM[(void *)"valiant_ni_torus" + 16B]
  # DEBUG __ptr => "valiant_ni_torus"
  # DEBUG __first => "valiant_ni_torus"
  # DEBUG __last => &MEM[(void *)"valiant_ni_torus" + 16B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "valiant_ni_torus"
  # DEBUG __last => &MEM[(void *)"valiant_ni_torus" + 16B]
  __dnew = 16;
  _1741 = std::__cxx11::basic_string<char>::_M_create (&D.45886, &__dnew, 0);
  # DEBUG D#5 => &D.45886
  # DEBUG __p => _1741
  # DEBUG this => D#5
  MEM[(char * *)&D.45886] = _1741;
  __dnew.173_1742 = __dnew;
  # DEBUG D#6 => &D.45886
  # DEBUG __capacity => __dnew.173_1742
  # DEBUG this => D#6
  MEM[(size_type *)&D.45886 + 16B] = __dnew.173_1742;
  # DEBUG D#3 => &D.45886
  # DEBUG this => D#3
  # DEBUG __p => _1741
  # DEBUG __k1 => "valiant_ni_torus"
  # DEBUG __k2 => &MEM[(void *)"valiant_ni_torus" + 16B]
  # DEBUG __d => _1741
  # DEBUG __s => "valiant_ni_torus"
  # DEBUG __n => 16
  # DEBUG __s1 => _1741
  # DEBUG __s2 => "valiant_ni_torus"
  # DEBUG __n => 16
  __builtin_memcpy (_1741, "valiant_ni_torus", 16);
  __dnew.173_1745 = __dnew;
  # DEBUG this => &D.45886
  # DEBUG __n => __dnew.173_1745
  # DEBUG D#7 => &D.45886
  # DEBUG __length => __dnew.173_1745
  # DEBUG this => D#7
  MEM[(size_type *)&D.45886 + 8B] = __dnew.173_1745;
  _1746 = MEM[(char * *)&D.45886];
  # DEBUG D#3 => &D.45886
  # DEBUG this => D#3
  _1747 = _1746 + __dnew.173_1745;
  # DEBUG __c1 => _1747
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1747] = 0;
  __dnew ={v} {CLOBBER};
  _254 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45886);

  <bb 354>:
  *_254 = valiant_ni_torus;
  # DEBUG this => &D.45886
  # DEBUG this => &D.45886
  # DEBUG this => &D.45886
  _257 = MEM[(char * *)&D.45886];
  # DEBUG D#3 => &D.45886
  # DEBUG this => D#3
  # DEBUG this => &D.45886
  if (&D.45886.D.14356._M_local_buf != _257)
    goto <bb 355>;
  else
    goto <bb 356>;

  <bb 355>:
  # DEBUG D#54 => D.45886.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45886
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45886
  # DEBUG this => D#3
  # DEBUG this => &D.45886
  # DEBUG D#51 => &D.45886._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _257
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _257
  # DEBUG this => D#45
  # DEBUG D.53903 => D#46
  operator delete (_257);

  <bb 356>:
  # DEBUG D#55 => &D.45886._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45886 ={v} {CLOBBER};
  # DEBUG this => &D.45885
  # DEBUG this => &D.45885
  # DEBUG D#30 => &D.45888
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45888
  # DEBUG this => &D.45889
  # DEBUG __s => "dest_tag_fly"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45889
  # DEBUG D#66 => &D.45889._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45889.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45889]._M_p = &D.45889.D.14356._M_local_buf;
  # DEBUG __s => "dest_tag_fly"
  # DEBUG this => &D.45889
  # DEBUG __beg => "dest_tag_fly"
  # DEBUG __end => &MEM[(void *)"dest_tag_fly" + 12B]
  # DEBUG this => &D.45889
  # DEBUG __beg => "dest_tag_fly"
  # DEBUG __end => &MEM[(void *)"dest_tag_fly" + 12B]
  # DEBUG this => &D.45889
  # DEBUG __beg => "dest_tag_fly"
  # DEBUG __end => &MEM[(void *)"dest_tag_fly" + 12B]
  # DEBUG __ptr => "dest_tag_fly"
  # DEBUG __first => "dest_tag_fly"
  # DEBUG __last => &MEM[(void *)"dest_tag_fly" + 12B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "dest_tag_fly"
  # DEBUG __last => &MEM[(void *)"dest_tag_fly" + 12B]
  # DEBUG __dnew => 12
  # DEBUG D#3 => &D.45889
  # DEBUG this => D#3
  # DEBUG __p => &D.45889.D.14356._M_local_buf
  # DEBUG __k1 => "dest_tag_fly"
  # DEBUG __k2 => &MEM[(void *)"dest_tag_fly" + 12B]
  # DEBUG __d => &D.45889.D.14356._M_local_buf
  # DEBUG __s => "dest_tag_fly"
  # DEBUG __n => 12
  # DEBUG __s1 => &D.45889.D.14356._M_local_buf
  # DEBUG __s2 => "dest_tag_fly"
  # DEBUG __n => 12
  __builtin_memcpy (&D.45889.D.14356._M_local_buf, "dest_tag_fly", 12);
  # DEBUG this => &D.45889
  # DEBUG __n => 12
  # DEBUG D#7 => &D.45889
  # DEBUG __length => 12
  # DEBUG this => D#7
  MEM[(size_type *)&D.45889 + 8B] = 12;
  # DEBUG D#3 => &D.45889
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45889 + 28B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45889 + 28] = 0;
  # DEBUG D#507 => {CLOBBER}
  # DEBUG __dnew => D#507
  _261 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45889);

  <bb 357>:
  *_261 = dest_tag_fly;
  # DEBUG this => &D.45889
  # DEBUG this => &D.45889
  # DEBUG this => &D.45889
  _264 = MEM[(char * *)&D.45889];
  # DEBUG D#3 => &D.45889
  # DEBUG this => D#3
  # DEBUG this => &D.45889
  if (&D.45889.D.14356._M_local_buf != _264)
    goto <bb 358>;
  else
    goto <bb 359>;

  <bb 358>:
  # DEBUG D#54 => D.45889.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45889
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45889
  # DEBUG this => D#3
  # DEBUG this => &D.45889
  # DEBUG D#51 => &D.45889._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _264
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _264
  # DEBUG this => D#45
  # DEBUG D.53921 => D#46
  operator delete (_264);

  <bb 359>:
  # DEBUG D#55 => &D.45889._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45889 ={v} {CLOBBER};
  # DEBUG this => &D.45888
  # DEBUG this => &D.45888
  # DEBUG D#30 => &D.45891
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45891
  # DEBUG this => &D.45892
  # DEBUG __s => "chaos_mesh"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45892
  # DEBUG D#66 => &D.45892._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45892.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45892]._M_p = &D.45892.D.14356._M_local_buf;
  # DEBUG __s => "chaos_mesh"
  # DEBUG this => &D.45892
  # DEBUG __beg => "chaos_mesh"
  # DEBUG __end => &MEM[(void *)"chaos_mesh" + 10B]
  # DEBUG this => &D.45892
  # DEBUG __beg => "chaos_mesh"
  # DEBUG __end => &MEM[(void *)"chaos_mesh" + 10B]
  # DEBUG this => &D.45892
  # DEBUG __beg => "chaos_mesh"
  # DEBUG __end => &MEM[(void *)"chaos_mesh" + 10B]
  # DEBUG __ptr => "chaos_mesh"
  # DEBUG __first => "chaos_mesh"
  # DEBUG __last => &MEM[(void *)"chaos_mesh" + 10B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "chaos_mesh"
  # DEBUG __last => &MEM[(void *)"chaos_mesh" + 10B]
  # DEBUG __dnew => 10
  # DEBUG D#3 => &D.45892
  # DEBUG this => D#3
  # DEBUG __p => &D.45892.D.14356._M_local_buf
  # DEBUG __k1 => "chaos_mesh"
  # DEBUG __k2 => &MEM[(void *)"chaos_mesh" + 10B]
  # DEBUG __d => &D.45892.D.14356._M_local_buf
  # DEBUG __s => "chaos_mesh"
  # DEBUG __n => 10
  # DEBUG __s1 => &D.45892.D.14356._M_local_buf
  # DEBUG __s2 => "chaos_mesh"
  # DEBUG __n => 10
  __builtin_memcpy (&D.45892.D.14356._M_local_buf, "chaos_mesh", 10);
  # DEBUG this => &D.45892
  # DEBUG __n => 10
  # DEBUG D#7 => &D.45892
  # DEBUG __length => 10
  # DEBUG this => D#7
  MEM[(size_type *)&D.45892 + 8B] = 10;
  # DEBUG D#3 => &D.45892
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45892 + 26B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45892 + 26] = 0;
  # DEBUG D#508 => {CLOBBER}
  # DEBUG __dnew => D#508
  _267 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45892);

  <bb 360>:
  *_267 = chaos_mesh;
  # DEBUG this => &D.45892
  # DEBUG this => &D.45892
  # DEBUG this => &D.45892
  _270 = MEM[(char * *)&D.45892];
  # DEBUG D#3 => &D.45892
  # DEBUG this => D#3
  # DEBUG this => &D.45892
  if (&D.45892.D.14356._M_local_buf != _270)
    goto <bb 361>;
  else
    goto <bb 362>;

  <bb 361>:
  # DEBUG D#54 => D.45892.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45892
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45892
  # DEBUG this => D#3
  # DEBUG this => &D.45892
  # DEBUG D#51 => &D.45892._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _270
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _270
  # DEBUG this => D#45
  # DEBUG D.53939 => D#46
  operator delete (_270);

  <bb 362>:
  # DEBUG D#55 => &D.45892._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45892 ={v} {CLOBBER};
  # DEBUG this => &D.45891
  # DEBUG this => &D.45891
  # DEBUG D#30 => &D.45894
  # DEBUG this => D#30
  # DEBUG D#29 => D#30
  # DEBUG this => D#29
  # DEBUG D#69 => &D.45894
  # DEBUG this => &D.45895
  # DEBUG __s => "chaos_torus"
  # DEBUG __a => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => &D.45895
  # DEBUG D#66 => &D.45895._M_dataplus
  # DEBUG D#43 => D#68
  # DEBUG this => D#66
  # DEBUG __dat => &D.45895.D.14356._M_local_buf
  # DEBUG __a => D#43
  # DEBUG D#42 => D#43
  # DEBUG D#40 => D#66
  # DEBUG D#41 => D#42
  # DEBUG this => D#40
  # DEBUG __a => D#41
  # DEBUG D#39 => D#41
  # DEBUG D#38 => D#40
  # DEBUG this => D#38
  # DEBUG D.51633 => D#39
  MEM[(struct _Alloc_hider *)&D.45895]._M_p = &D.45895.D.14356._M_local_buf;
  # DEBUG __s => "chaos_torus"
  # DEBUG this => &D.45895
  # DEBUG __beg => "chaos_torus"
  # DEBUG __end => &MEM[(void *)"chaos_torus" + 11B]
  # DEBUG this => &D.45895
  # DEBUG __beg => "chaos_torus"
  # DEBUG __end => &MEM[(void *)"chaos_torus" + 11B]
  # DEBUG this => &D.45895
  # DEBUG __beg => "chaos_torus"
  # DEBUG __end => &MEM[(void *)"chaos_torus" + 11B]
  # DEBUG __ptr => "chaos_torus"
  # DEBUG __first => "chaos_torus"
  # DEBUG __last => &MEM[(void *)"chaos_torus" + 11B]
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => "chaos_torus"
  # DEBUG __last => &MEM[(void *)"chaos_torus" + 11B]
  # DEBUG __dnew => 11
  # DEBUG D#3 => &D.45895
  # DEBUG this => D#3
  # DEBUG __p => &D.45895.D.14356._M_local_buf
  # DEBUG __k1 => "chaos_torus"
  # DEBUG __k2 => &MEM[(void *)"chaos_torus" + 11B]
  # DEBUG __d => &D.45895.D.14356._M_local_buf
  # DEBUG __s => "chaos_torus"
  # DEBUG __n => 11
  # DEBUG __s1 => &D.45895.D.14356._M_local_buf
  # DEBUG __s2 => "chaos_torus"
  # DEBUG __n => 11
  __builtin_memcpy (&D.45895.D.14356._M_local_buf, "chaos_torus", 11);
  # DEBUG this => &D.45895
  # DEBUG __n => 11
  # DEBUG D#7 => &D.45895
  # DEBUG __length => 11
  # DEBUG this => D#7
  MEM[(size_type *)&D.45895 + 8B] = 11;
  # DEBUG D#3 => &D.45895
  # DEBUG this => D#3
  # DEBUG __c1 => &MEM[(void *)&D.45895 + 27B]
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.45895 + 27] = 0;
  # DEBUG D#509 => {CLOBBER}
  # DEBUG __dnew => D#509
  _273 = std::map<std::__cxx11::basic_string<char>, void (*)(const Router*, const Flit*, int, OutputSet*, bool)>::operator[].constprop (&D.45895);

  <bb 363>:
  *_273 = chaos_torus;
  # DEBUG this => &D.45895
  # DEBUG this => &D.45895
  # DEBUG this => &D.45895
  _277 = MEM[(char * *)&D.45895];
  # DEBUG D#3 => &D.45895
  # DEBUG this => D#3
  # DEBUG this => &D.45895
  if (&D.45895.D.14356._M_local_buf != _277)
    goto <bb 364>;
  else
    goto <bb 365>;

  <bb 364>:
  # DEBUG D#54 => D.45895.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45895
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45895
  # DEBUG this => D#3
  # DEBUG this => &D.45895
  # DEBUG D#51 => &D.45895._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _277
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _277
  # DEBUG this => D#45
  # DEBUG D.53956 => D#46
  operator delete (_277);

  <bb 365>:
  # DEBUG D#55 => &D.45895._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45895 ={v} {CLOBBER};
  # DEBUG this => &D.45894
  # DEBUG this => &D.45894
  return;

<L24>:
  # DEBUG this => &D.45796
  # DEBUG this => &D.45796
  # DEBUG this => &D.45796
  _275 = MEM[(char * *)&D.45796];
  # DEBUG D#3 => &D.45796
  # DEBUG this => D#3
  # DEBUG this => &D.45796
  if (&D.45796.D.14356._M_local_buf != _275)
    goto <bb 367>;
  else
    goto <bb 368>;

  <bb 367>:
  # DEBUG D#54 => D.45796.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45796
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45796
  # DEBUG this => D#3
  # DEBUG this => &D.45796
  # DEBUG D#51 => &D.45796._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _275
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _275
  # DEBUG this => D#45
  # DEBUG D.53971 => D#46
  operator delete (_275);

  <bb 368>:
  # DEBUG D#55 => &D.45796._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45796 ={v} {CLOBBER};
  resx 2

<L26>:
  # DEBUG this => &D.45799
  # DEBUG this => &D.45799
  # DEBUG this => &D.45799
  _346 = MEM[(char * *)&D.45799];
  # DEBUG D#3 => &D.45799
  # DEBUG this => D#3
  # DEBUG this => &D.45799
  if (&D.45799.D.14356._M_local_buf != _346)
    goto <bb 370>;
  else
    goto <bb 371>;

  <bb 370>:
  # DEBUG D#54 => D.45799.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45799
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45799
  # DEBUG this => D#3
  # DEBUG this => &D.45799
  # DEBUG D#51 => &D.45799._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _346
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _346
  # DEBUG this => D#45
  # DEBUG D.53988 => D#46
  operator delete (_346);

  <bb 371>:
  # DEBUG D#55 => &D.45799._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45799 ={v} {CLOBBER};
  resx 6

<L28>:
  # DEBUG this => &D.45802
  # DEBUG this => &D.45802
  # DEBUG this => &D.45802
  _344 = MEM[(char * *)&D.45802];
  # DEBUG D#3 => &D.45802
  # DEBUG this => D#3
  # DEBUG this => &D.45802
  if (&D.45802.D.14356._M_local_buf != _344)
    goto <bb 373>;
  else
    goto <bb 374>;

  <bb 373>:
  # DEBUG D#54 => D.45802.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45802
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45802
  # DEBUG this => D#3
  # DEBUG this => &D.45802
  # DEBUG D#51 => &D.45802._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _344
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _344
  # DEBUG this => D#45
  # DEBUG D.54005 => D#46
  operator delete (_344);

  <bb 374>:
  # DEBUG D#55 => &D.45802._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45802 ={v} {CLOBBER};
  resx 10

<L30>:
  # DEBUG this => &D.45805
  # DEBUG this => &D.45805
  # DEBUG this => &D.45805
  _342 = MEM[(char * *)&D.45805];
  # DEBUG D#3 => &D.45805
  # DEBUG this => D#3
  # DEBUG this => &D.45805
  if (&D.45805.D.14356._M_local_buf != _342)
    goto <bb 376>;
  else
    goto <bb 377>;

  <bb 376>:
  # DEBUG D#54 => D.45805.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45805
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45805
  # DEBUG this => D#3
  # DEBUG this => &D.45805
  # DEBUG D#51 => &D.45805._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _342
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _342
  # DEBUG this => D#45
  # DEBUG D.54022 => D#46
  operator delete (_342);

  <bb 377>:
  # DEBUG D#55 => &D.45805._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45805 ={v} {CLOBBER};
  resx 14

<L32>:
  # DEBUG this => &D.45808
  # DEBUG this => &D.45808
  # DEBUG this => &D.45808
  _340 = MEM[(char * *)&D.45808];
  # DEBUG D#3 => &D.45808
  # DEBUG this => D#3
  # DEBUG this => &D.45808
  if (&D.45808.D.14356._M_local_buf != _340)
    goto <bb 379>;
  else
    goto <bb 380>;

  <bb 379>:
  # DEBUG D#54 => D.45808.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45808
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45808
  # DEBUG this => D#3
  # DEBUG this => &D.45808
  # DEBUG D#51 => &D.45808._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _340
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _340
  # DEBUG this => D#45
  # DEBUG D.54039 => D#46
  operator delete (_340);

  <bb 380>:
  # DEBUG D#55 => &D.45808._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45808 ={v} {CLOBBER};
  resx 18

<L34>:
  # DEBUG this => &D.45811
  # DEBUG this => &D.45811
  # DEBUG this => &D.45811
  _338 = MEM[(char * *)&D.45811];
  # DEBUG D#3 => &D.45811
  # DEBUG this => D#3
  # DEBUG this => &D.45811
  if (&D.45811.D.14356._M_local_buf != _338)
    goto <bb 382>;
  else
    goto <bb 383>;

  <bb 382>:
  # DEBUG D#54 => D.45811.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45811
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45811
  # DEBUG this => D#3
  # DEBUG this => &D.45811
  # DEBUG D#51 => &D.45811._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _338
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _338
  # DEBUG this => D#45
  # DEBUG D.54056 => D#46
  operator delete (_338);

  <bb 383>:
  # DEBUG D#55 => &D.45811._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45811 ={v} {CLOBBER};
  resx 22

<L36>:
  # DEBUG this => &D.45814
  # DEBUG this => &D.45814
  # DEBUG this => &D.45814
  _336 = MEM[(char * *)&D.45814];
  # DEBUG D#3 => &D.45814
  # DEBUG this => D#3
  # DEBUG this => &D.45814
  if (&D.45814.D.14356._M_local_buf != _336)
    goto <bb 385>;
  else
    goto <bb 386>;

  <bb 385>:
  # DEBUG D#54 => D.45814.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45814
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45814
  # DEBUG this => D#3
  # DEBUG this => &D.45814
  # DEBUG D#51 => &D.45814._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _336
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _336
  # DEBUG this => D#45
  # DEBUG D.54073 => D#46
  operator delete (_336);

  <bb 386>:
  # DEBUG D#55 => &D.45814._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45814 ={v} {CLOBBER};
  resx 26

<L38>:
  # DEBUG this => &D.45817
  # DEBUG this => &D.45817
  # DEBUG this => &D.45817
  _334 = MEM[(char * *)&D.45817];
  # DEBUG D#3 => &D.45817
  # DEBUG this => D#3
  # DEBUG this => &D.45817
  if (&D.45817.D.14356._M_local_buf != _334)
    goto <bb 388>;
  else
    goto <bb 389>;

  <bb 388>:
  # DEBUG D#54 => D.45817.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45817
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45817
  # DEBUG this => D#3
  # DEBUG this => &D.45817
  # DEBUG D#51 => &D.45817._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _334
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _334
  # DEBUG this => D#45
  # DEBUG D.54090 => D#46
  operator delete (_334);

  <bb 389>:
  # DEBUG D#55 => &D.45817._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45817 ={v} {CLOBBER};
  resx 30

<L40>:
  # DEBUG this => &D.45820
  # DEBUG this => &D.45820
  # DEBUG this => &D.45820
  _332 = MEM[(char * *)&D.45820];
  # DEBUG D#3 => &D.45820
  # DEBUG this => D#3
  # DEBUG this => &D.45820
  if (&D.45820.D.14356._M_local_buf != _332)
    goto <bb 391>;
  else
    goto <bb 392>;

  <bb 391>:
  # DEBUG D#54 => D.45820.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45820
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45820
  # DEBUG this => D#3
  # DEBUG this => &D.45820
  # DEBUG D#51 => &D.45820._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _332
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _332
  # DEBUG this => D#45
  # DEBUG D.54107 => D#46
  operator delete (_332);

  <bb 392>:
  # DEBUG D#55 => &D.45820._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45820 ={v} {CLOBBER};
  resx 34

<L42>:
  # DEBUG this => &D.45823
  # DEBUG this => &D.45823
  # DEBUG this => &D.45823
  _330 = MEM[(char * *)&D.45823];
  # DEBUG D#3 => &D.45823
  # DEBUG this => D#3
  # DEBUG this => &D.45823
  if (&D.45823.D.14356._M_local_buf != _330)
    goto <bb 394>;
  else
    goto <bb 395>;

  <bb 394>:
  # DEBUG D#54 => D.45823.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45823
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45823
  # DEBUG this => D#3
  # DEBUG this => &D.45823
  # DEBUG D#51 => &D.45823._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _330
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _330
  # DEBUG this => D#45
  # DEBUG D.54124 => D#46
  operator delete (_330);

  <bb 395>:
  # DEBUG D#55 => &D.45823._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45823 ={v} {CLOBBER};
  resx 38

<L44>:
  # DEBUG this => &D.45826
  # DEBUG this => &D.45826
  # DEBUG this => &D.45826
  _328 = MEM[(char * *)&D.45826];
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG this => &D.45826
  if (&D.45826.D.14356._M_local_buf != _328)
    goto <bb 397>;
  else
    goto <bb 398>;

  <bb 397>:
  # DEBUG D#54 => D.45826.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45826
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45826
  # DEBUG this => D#3
  # DEBUG this => &D.45826
  # DEBUG D#51 => &D.45826._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _328
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _328
  # DEBUG this => D#45
  # DEBUG D.54141 => D#46
  operator delete (_328);

  <bb 398>:
  # DEBUG D#55 => &D.45826._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45826 ={v} {CLOBBER};
  resx 42

<L46>:
  # DEBUG this => &D.45829
  # DEBUG this => &D.45829
  # DEBUG this => &D.45829
  _326 = MEM[(char * *)&D.45829];
  # DEBUG D#3 => &D.45829
  # DEBUG this => D#3
  # DEBUG this => &D.45829
  if (&D.45829.D.14356._M_local_buf != _326)
    goto <bb 400>;
  else
    goto <bb 401>;

  <bb 400>:
  # DEBUG D#54 => D.45829.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45829
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45829
  # DEBUG this => D#3
  # DEBUG this => &D.45829
  # DEBUG D#51 => &D.45829._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _326
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _326
  # DEBUG this => D#45
  # DEBUG D.54158 => D#46
  operator delete (_326);

  <bb 401>:
  # DEBUG D#55 => &D.45829._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45829 ={v} {CLOBBER};
  resx 46

<L48>:
  # DEBUG this => &D.45832
  # DEBUG this => &D.45832
  # DEBUG this => &D.45832
  _324 = MEM[(char * *)&D.45832];
  # DEBUG D#3 => &D.45832
  # DEBUG this => D#3
  # DEBUG this => &D.45832
  if (&D.45832.D.14356._M_local_buf != _324)
    goto <bb 403>;
  else
    goto <bb 404>;

  <bb 403>:
  # DEBUG D#54 => D.45832.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45832
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45832
  # DEBUG this => D#3
  # DEBUG this => &D.45832
  # DEBUG D#51 => &D.45832._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _324
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _324
  # DEBUG this => D#45
  # DEBUG D.54175 => D#46
  operator delete (_324);

  <bb 404>:
  # DEBUG D#55 => &D.45832._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45832 ={v} {CLOBBER};
  resx 50

<L50>:
  # DEBUG this => &D.45835
  # DEBUG this => &D.45835
  # DEBUG this => &D.45835
  _322 = MEM[(char * *)&D.45835];
  # DEBUG D#3 => &D.45835
  # DEBUG this => D#3
  # DEBUG this => &D.45835
  if (&D.45835.D.14356._M_local_buf != _322)
    goto <bb 406>;
  else
    goto <bb 407>;

  <bb 406>:
  # DEBUG D#54 => D.45835.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45835
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45835
  # DEBUG this => D#3
  # DEBUG this => &D.45835
  # DEBUG D#51 => &D.45835._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _322
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _322
  # DEBUG this => D#45
  # DEBUG D.54192 => D#46
  operator delete (_322);

  <bb 407>:
  # DEBUG D#55 => &D.45835._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45835 ={v} {CLOBBER};
  resx 54

<L52>:
  # DEBUG this => &D.45838
  # DEBUG this => &D.45838
  # DEBUG this => &D.45838
  _320 = MEM[(char * *)&D.45838];
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG this => &D.45838
  if (&D.45838.D.14356._M_local_buf != _320)
    goto <bb 409>;
  else
    goto <bb 410>;

  <bb 409>:
  # DEBUG D#54 => D.45838.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45838
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45838
  # DEBUG this => D#3
  # DEBUG this => &D.45838
  # DEBUG D#51 => &D.45838._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _320
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _320
  # DEBUG this => D#45
  # DEBUG D.54209 => D#46
  operator delete (_320);

  <bb 410>:
  # DEBUG D#55 => &D.45838._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45838 ={v} {CLOBBER};
  resx 58

<L54>:
  # DEBUG this => &D.45841
  # DEBUG this => &D.45841
  # DEBUG this => &D.45841
  _318 = MEM[(char * *)&D.45841];
  # DEBUG D#3 => &D.45841
  # DEBUG this => D#3
  # DEBUG this => &D.45841
  if (&D.45841.D.14356._M_local_buf != _318)
    goto <bb 412>;
  else
    goto <bb 413>;

  <bb 412>:
  # DEBUG D#54 => D.45841.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45841
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45841
  # DEBUG this => D#3
  # DEBUG this => &D.45841
  # DEBUG D#51 => &D.45841._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _318
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _318
  # DEBUG this => D#45
  # DEBUG D.54226 => D#46
  operator delete (_318);

  <bb 413>:
  # DEBUG D#55 => &D.45841._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45841 ={v} {CLOBBER};
  resx 62

<L101>:

<L56>:
  # DEBUG this => &D.45844
  # DEBUG this => &D.45844
  # DEBUG this => &D.45844
  _316 = MEM[(char * *)&D.45844];
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  # DEBUG this => &D.45844
  if (&D.45844.D.14356._M_local_buf != _316)
    goto <bb 416>;
  else
    goto <bb 417>;

  <bb 416>:
  # DEBUG D#54 => D.45844.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45844
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45844
  # DEBUG this => D#3
  # DEBUG this => &D.45844
  # DEBUG D#51 => &D.45844._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _316
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _316
  # DEBUG this => D#45
  # DEBUG D.54243 => D#46
  operator delete (_316);

  <bb 417>:
  # DEBUG D#55 => &D.45844._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45844 ={v} {CLOBBER};
  resx 66

<L58>:
  # DEBUG this => &D.45847
  # DEBUG this => &D.45847
  # DEBUG this => &D.45847
  _314 = MEM[(char * *)&D.45847];
  # DEBUG D#3 => &D.45847
  # DEBUG this => D#3
  # DEBUG this => &D.45847
  if (&D.45847.D.14356._M_local_buf != _314)
    goto <bb 419>;
  else
    goto <bb 420>;

  <bb 419>:
  # DEBUG D#54 => D.45847.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45847
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45847
  # DEBUG this => D#3
  # DEBUG this => &D.45847
  # DEBUG D#51 => &D.45847._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _314
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _314
  # DEBUG this => D#45
  # DEBUG D.54260 => D#46
  operator delete (_314);

  <bb 420>:
  # DEBUG D#55 => &D.45847._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45847 ={v} {CLOBBER};
  resx 70

<L103>:

<L60>:
  # DEBUG this => &D.45850
  # DEBUG this => &D.45850
  # DEBUG this => &D.45850
  _312 = MEM[(char * *)&D.45850];
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  # DEBUG this => &D.45850
  if (&D.45850.D.14356._M_local_buf != _312)
    goto <bb 423>;
  else
    goto <bb 424>;

  <bb 423>:
  # DEBUG D#54 => D.45850.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45850
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45850
  # DEBUG this => D#3
  # DEBUG this => &D.45850
  # DEBUG D#51 => &D.45850._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _312
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _312
  # DEBUG this => D#45
  # DEBUG D.54277 => D#46
  operator delete (_312);

  <bb 424>:
  # DEBUG D#55 => &D.45850._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45850 ={v} {CLOBBER};
  resx 74

<L62>:
  # DEBUG this => &D.45853
  # DEBUG this => &D.45853
  # DEBUG this => &D.45853
  _310 = MEM[(char * *)&D.45853];
  # DEBUG D#3 => &D.45853
  # DEBUG this => D#3
  # DEBUG this => &D.45853
  if (&D.45853.D.14356._M_local_buf != _310)
    goto <bb 426>;
  else
    goto <bb 427>;

  <bb 426>:
  # DEBUG D#54 => D.45853.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45853
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45853
  # DEBUG this => D#3
  # DEBUG this => &D.45853
  # DEBUG D#51 => &D.45853._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _310
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _310
  # DEBUG this => D#45
  # DEBUG D.54294 => D#46
  operator delete (_310);

  <bb 427>:
  # DEBUG D#55 => &D.45853._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45853 ={v} {CLOBBER};
  resx 78

<L64>:
  # DEBUG this => &D.45856
  # DEBUG this => &D.45856
  # DEBUG this => &D.45856
  _308 = MEM[(char * *)&D.45856];
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG this => &D.45856
  if (&D.45856.D.14356._M_local_buf != _308)
    goto <bb 429>;
  else
    goto <bb 430>;

  <bb 429>:
  # DEBUG D#54 => D.45856.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45856
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45856
  # DEBUG this => D#3
  # DEBUG this => &D.45856
  # DEBUG D#51 => &D.45856._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _308
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _308
  # DEBUG this => D#45
  # DEBUG D.54311 => D#46
  operator delete (_308);

  <bb 430>:
  # DEBUG D#55 => &D.45856._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45856 ={v} {CLOBBER};
  resx 82

<L105>:

<L66>:
  # DEBUG this => &D.45859
  # DEBUG this => &D.45859
  # DEBUG this => &D.45859
  _306 = MEM[(char * *)&D.45859];
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  # DEBUG this => &D.45859
  if (&D.45859.D.14356._M_local_buf != _306)
    goto <bb 433>;
  else
    goto <bb 434>;

  <bb 433>:
  # DEBUG D#54 => D.45859.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45859
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45859
  # DEBUG this => D#3
  # DEBUG this => &D.45859
  # DEBUG D#51 => &D.45859._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _306
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _306
  # DEBUG this => D#45
  # DEBUG D.54328 => D#46
  operator delete (_306);

  <bb 434>:
  # DEBUG D#55 => &D.45859._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45859 ={v} {CLOBBER};
  resx 86

<L107>:

<L68>:
  # DEBUG this => &D.45862
  # DEBUG this => &D.45862
  # DEBUG this => &D.45862
  _304 = MEM[(char * *)&D.45862];
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  # DEBUG this => &D.45862
  if (&D.45862.D.14356._M_local_buf != _304)
    goto <bb 437>;
  else
    goto <bb 438>;

  <bb 437>:
  # DEBUG D#54 => D.45862.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45862
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45862
  # DEBUG this => D#3
  # DEBUG this => &D.45862
  # DEBUG D#51 => &D.45862._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _304
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _304
  # DEBUG this => D#45
  # DEBUG D.54345 => D#46
  operator delete (_304);

  <bb 438>:
  # DEBUG D#55 => &D.45862._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45862 ={v} {CLOBBER};
  resx 90

<L70>:
  # DEBUG this => &D.45865
  # DEBUG this => &D.45865
  # DEBUG this => &D.45865
  _302 = MEM[(char * *)&D.45865];
  # DEBUG D#3 => &D.45865
  # DEBUG this => D#3
  # DEBUG this => &D.45865
  if (&D.45865.D.14356._M_local_buf != _302)
    goto <bb 440>;
  else
    goto <bb 441>;

  <bb 440>:
  # DEBUG D#54 => D.45865.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45865
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45865
  # DEBUG this => D#3
  # DEBUG this => &D.45865
  # DEBUG D#51 => &D.45865._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _302
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _302
  # DEBUG this => D#45
  # DEBUG D.54362 => D#46
  operator delete (_302);

  <bb 441>:
  # DEBUG D#55 => &D.45865._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45865 ={v} {CLOBBER};
  resx 94

<L72>:
  # DEBUG this => &D.45868
  # DEBUG this => &D.45868
  # DEBUG this => &D.45868
  _300 = MEM[(char * *)&D.45868];
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG this => &D.45868
  if (&D.45868.D.14356._M_local_buf != _300)
    goto <bb 443>;
  else
    goto <bb 444>;

  <bb 443>:
  # DEBUG D#54 => D.45868.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45868
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45868
  # DEBUG this => D#3
  # DEBUG this => &D.45868
  # DEBUG D#51 => &D.45868._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _300
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _300
  # DEBUG this => D#45
  # DEBUG D.54379 => D#46
  operator delete (_300);

  <bb 444>:
  # DEBUG D#55 => &D.45868._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45868 ={v} {CLOBBER};
  resx 98

<L74>:
  # DEBUG this => &D.45871
  # DEBUG this => &D.45871
  # DEBUG this => &D.45871
  _298 = MEM[(char * *)&D.45871];
  # DEBUG D#3 => &D.45871
  # DEBUG this => D#3
  # DEBUG this => &D.45871
  if (&D.45871.D.14356._M_local_buf != _298)
    goto <bb 446>;
  else
    goto <bb 447>;

  <bb 446>:
  # DEBUG D#54 => D.45871.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45871
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45871
  # DEBUG this => D#3
  # DEBUG this => &D.45871
  # DEBUG D#51 => &D.45871._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _298
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _298
  # DEBUG this => D#45
  # DEBUG D.54396 => D#46
  operator delete (_298);

  <bb 447>:
  # DEBUG D#55 => &D.45871._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45871 ={v} {CLOBBER};
  resx 102

<L76>:
  # DEBUG this => &D.45874
  # DEBUG this => &D.45874
  # DEBUG this => &D.45874
  _296 = MEM[(char * *)&D.45874];
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG this => &D.45874
  if (&D.45874.D.14356._M_local_buf != _296)
    goto <bb 449>;
  else
    goto <bb 450>;

  <bb 449>:
  # DEBUG D#54 => D.45874.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45874
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45874
  # DEBUG this => D#3
  # DEBUG this => &D.45874
  # DEBUG D#51 => &D.45874._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _296
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _296
  # DEBUG this => D#45
  # DEBUG D.54413 => D#46
  operator delete (_296);

  <bb 450>:
  # DEBUG D#55 => &D.45874._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45874 ={v} {CLOBBER};
  resx 106

<L78>:
  # DEBUG this => &D.45877
  # DEBUG this => &D.45877
  # DEBUG this => &D.45877
  _294 = MEM[(char * *)&D.45877];
  # DEBUG D#3 => &D.45877
  # DEBUG this => D#3
  # DEBUG this => &D.45877
  if (&D.45877.D.14356._M_local_buf != _294)
    goto <bb 452>;
  else
    goto <bb 453>;

  <bb 452>:
  # DEBUG D#54 => D.45877.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45877
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45877
  # DEBUG this => D#3
  # DEBUG this => &D.45877
  # DEBUG D#51 => &D.45877._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _294
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _294
  # DEBUG this => D#45
  # DEBUG D.54430 => D#46
  operator delete (_294);

  <bb 453>:
  # DEBUG D#55 => &D.45877._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45877 ={v} {CLOBBER};
  resx 110

<L80>:
  # DEBUG this => &D.45880
  # DEBUG this => &D.45880
  # DEBUG this => &D.45880
  _292 = MEM[(char * *)&D.45880];
  # DEBUG D#3 => &D.45880
  # DEBUG this => D#3
  # DEBUG this => &D.45880
  if (&D.45880.D.14356._M_local_buf != _292)
    goto <bb 455>;
  else
    goto <bb 456>;

  <bb 455>:
  # DEBUG D#54 => D.45880.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45880
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45880
  # DEBUG this => D#3
  # DEBUG this => &D.45880
  # DEBUG D#51 => &D.45880._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _292
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _292
  # DEBUG this => D#45
  # DEBUG D.54447 => D#46
  operator delete (_292);

  <bb 456>:
  # DEBUG D#55 => &D.45880._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45880 ={v} {CLOBBER};
  resx 114

<L82>:
  # DEBUG this => &D.45883
  # DEBUG this => &D.45883
  # DEBUG this => &D.45883
  _290 = MEM[(char * *)&D.45883];
  # DEBUG D#3 => &D.45883
  # DEBUG this => D#3
  # DEBUG this => &D.45883
  if (&D.45883.D.14356._M_local_buf != _290)
    goto <bb 458>;
  else
    goto <bb 459>;

  <bb 458>:
  # DEBUG D#54 => D.45883.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45883
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45883
  # DEBUG this => D#3
  # DEBUG this => &D.45883
  # DEBUG D#51 => &D.45883._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _290
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _290
  # DEBUG this => D#45
  # DEBUG D.54464 => D#46
  operator delete (_290);

  <bb 459>:
  # DEBUG D#55 => &D.45883._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45883 ={v} {CLOBBER};
  resx 118

<L84>:
  # DEBUG this => &D.45886
  # DEBUG this => &D.45886
  # DEBUG this => &D.45886
  _288 = MEM[(char * *)&D.45886];
  # DEBUG D#3 => &D.45886
  # DEBUG this => D#3
  # DEBUG this => &D.45886
  if (&D.45886.D.14356._M_local_buf != _288)
    goto <bb 461>;
  else
    goto <bb 462>;

  <bb 461>:
  # DEBUG D#54 => D.45886.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45886
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45886
  # DEBUG this => D#3
  # DEBUG this => &D.45886
  # DEBUG D#51 => &D.45886._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _288
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _288
  # DEBUG this => D#45
  # DEBUG D.54481 => D#46
  operator delete (_288);

  <bb 462>:
  # DEBUG D#55 => &D.45886._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45886 ={v} {CLOBBER};
  resx 122

<L86>:
  # DEBUG this => &D.45889
  # DEBUG this => &D.45889
  # DEBUG this => &D.45889
  _286 = MEM[(char * *)&D.45889];
  # DEBUG D#3 => &D.45889
  # DEBUG this => D#3
  # DEBUG this => &D.45889
  if (&D.45889.D.14356._M_local_buf != _286)
    goto <bb 464>;
  else
    goto <bb 465>;

  <bb 464>:
  # DEBUG D#54 => D.45889.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45889
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45889
  # DEBUG this => D#3
  # DEBUG this => &D.45889
  # DEBUG D#51 => &D.45889._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _286
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _286
  # DEBUG this => D#45
  # DEBUG D.54498 => D#46
  operator delete (_286);

  <bb 465>:
  # DEBUG D#55 => &D.45889._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45889 ={v} {CLOBBER};
  resx 126

<L88>:
  # DEBUG this => &D.45892
  # DEBUG this => &D.45892
  # DEBUG this => &D.45892
  _284 = MEM[(char * *)&D.45892];
  # DEBUG D#3 => &D.45892
  # DEBUG this => D#3
  # DEBUG this => &D.45892
  if (&D.45892.D.14356._M_local_buf != _284)
    goto <bb 467>;
  else
    goto <bb 468>;

  <bb 467>:
  # DEBUG D#54 => D.45892.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45892
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45892
  # DEBUG this => D#3
  # DEBUG this => &D.45892
  # DEBUG D#51 => &D.45892._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _284
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _284
  # DEBUG this => D#45
  # DEBUG D.54515 => D#46
  operator delete (_284);

  <bb 468>:
  # DEBUG D#55 => &D.45892._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45892 ={v} {CLOBBER};
  resx 130

<L90>:
  # DEBUG this => &D.45895
  # DEBUG this => &D.45895
  # DEBUG this => &D.45895
  _282 = MEM[(char * *)&D.45895];
  # DEBUG D#3 => &D.45895
  # DEBUG this => D#3
  # DEBUG this => &D.45895
  if (&D.45895.D.14356._M_local_buf != _282)
    goto <bb 470>;
  else
    goto <bb 471>;

  <bb 470>:
  # DEBUG D#54 => D.45895.D.14356._M_allocated_capacity
  # DEBUG D#53 => D#54
  # DEBUG this => &D.45895
  # DEBUG __size => D#53
  # DEBUG D#52 => D#53
  # DEBUG D#3 => &D.45895
  # DEBUG this => D#3
  # DEBUG this => &D.45895
  # DEBUG D#51 => &D.45895._M_dataplus
  # DEBUG D#49 => D#51
  # DEBUG D#50 => D#52 + 1
  # DEBUG __p => _282
  # DEBUG __a => D#49
  # DEBUG __n => D#50
  # DEBUG D#48 => D#50
  # DEBUG D#47 => D#49
  # DEBUG D#45 => D#47
  # DEBUG D#46 => D#48
  # DEBUG __p => _282
  # DEBUG this => D#45
  # DEBUG D.54532 => D#46
  operator delete (_282);

  <bb 471>:
  # DEBUG D#55 => &D.45895._M_dataplus
  # DEBUG this => D#55
  # DEBUG this => D#55
  # DEBUG this => D#55
  D.45895 ={v} {CLOBBER};
  resx 134

  <bb 472>:
  # __i$_M_node_1406 = PHI <__i$_M_node_2379(66), __i$_M_node_2379(59), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(48)>
  goto <bb 67>;

  <bb 473>:
  # __i$_M_node_789 = PHI <__i$_M_node_2381(103), __i$_M_node_2381(96), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(85)>
  goto <bb 104>;

  <bb 474>:
  pretmp_619 = MEM[(long unsigned int *)&D.45844 + 8B];
  pretmp_622 = MEM[(char * *)&D.45844];

  <bb 475>:
  # __i$_M_node_837 = PHI <__i$_M_node_2392(132), __i$_M_node_2392(127), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(474)>
  # prephitmp_620 = PHI <pretmp_550(132), pretmp_550(127), pretmp_619(474)>
  # prephitmp_623 = PHI <pretmp_543(132), pretmp_543(127), pretmp_622(474)>
  goto <bb 133>;

  <bb 476>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L109>:
  goto <bb 415> (<L56>);

  <bb 478>:
  # DEBUG __first => D#540
  # DEBUG __last => _1103
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => D#540
  # DEBUG __last => _1103
  __dnew = prephitmp_718;
  if (prephitmp_718 > 15)
    goto <bb 134>;
  else
    goto <bb 136>;

  <bb 479>:
  pretmp_2180 = MEM[(long unsigned int *)&D.45850 + 8B];
  pretmp_2182 = MEM[(char * *)&D.45850];

  <bb 480>:
  # __i$_M_node_1458 = PHI <__i$_M_node_2404(168), __i$_M_node_2404(163), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(479)>
  # prephitmp_2181 = PHI <pretmp_705(168), pretmp_705(163), pretmp_2180(479)>
  # prephitmp_2183 = PHI <pretmp_708(168), pretmp_708(163), pretmp_2182(479)>
  goto <bb 169>;

  <bb 481>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L110>:
  goto <bb 422> (<L60>);

  <bb 483>:
  # DEBUG __first => D#532
  # DEBUG __last => _1194
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => D#532
  # DEBUG __last => _1194
  __dnew = prephitmp_698;
  if (prephitmp_698 > 15)
    goto <bb 170>;
  else
    goto <bb 172>;

  <bb 484>:
  # __i$_M_node_1240 = PHI <__i$_M_node_2405(206), __i$_M_node_2405(199), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(188)>
  goto <bb 207>;

  <bb 485>:
  pretmp_633 = MEM[(long unsigned int *)&D.45859 + 8B];
  pretmp_635 = MEM[(char * *)&D.45859];

  <bb 486>:
  # __i$_M_node_898 = PHI <__i$_M_node_2406(232), __i$_M_node_2406(227), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(485)>
  # prephitmp_634 = PHI <pretmp_679(232), pretmp_679(227), pretmp_633(485)>
  # prephitmp_2119 = PHI <pretmp_682(232), pretmp_682(227), pretmp_635(485)>
  goto <bb 233>;

  <bb 487>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L111>:
  goto <bb 432> (<L66>);

  <bb 489>:
  # DEBUG __first => D#523
  # DEBUG __last => _1360
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => D#523
  # DEBUG __last => _1360
  __dnew = prephitmp_672;
  if (prephitmp_672 > 15)
    goto <bb 234>;
  else
    goto <bb 236>;

  <bb 490>:
  pretmp_2122 = MEM[(long unsigned int *)&D.45862 + 8B];
  pretmp_637 = MEM[(char * *)&D.45862];

  <bb 491>:
  # __i$_M_node_1137 = PHI <__i$_M_node_2407(265), __i$_M_node_2407(260), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(490)>
  # prephitmp_2123 = PHI <pretmp_665(265), pretmp_665(260), pretmp_2122(490)>
  # prephitmp_638 = PHI <pretmp_1978(265), pretmp_1978(260), pretmp_637(490)>
  goto <bb 266>;

  <bb 492>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L112>:
  goto <bb 436> (<L68>);

  <bb 494>:
  # DEBUG __first => D#515
  # DEBUG __last => _1435
  # DEBUG D#109 => &__first
  # DEBUG D.52744 => D#109
  # DEBUG __first => D#515
  # DEBUG __last => _1435
  __dnew = prephitmp_658;
  if (prephitmp_658 > 15)
    goto <bb 267>;
  else
    goto <bb 269>;

  <bb 495>:
  # __i$_M_node_1308 = PHI <__i$_M_node_2408(303), __i$_M_node_2408(296), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(285)>
  goto <bb 304>;

  <bb 496>:
  # __i$_M_node_1383 = PHI <__i$_M_node_2421(334), __i$_M_node_2421(327), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(316)>
  goto <bb 335>;

}


