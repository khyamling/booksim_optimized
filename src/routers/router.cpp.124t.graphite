
;; Function virtual void Router::Evaluate() (_ZN6Router8EvaluateEv, funcdef_no=2113, decl_uid=41982, cgraph_uid=495, symbol_order=501)


Pass statistics:
----------------

virtual void Router::Evaluate() (struct RouterD.33099 * const thisD.65875)
{
  doubleD.39 _4;
  doubleD.39 _5;
  doubleD.39 _6;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _9;
  intD.9 (*__vtbl_ptr_typeD.2760) () _10;
  doubleD.39 _12;
  doubleD.39 _13;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  _4 = this_3(D)->_partial_internal_cyclesD.39549;
  # VUSE <.MEM_2(D)>
  _5 = this_3(D)->_internal_speedupD.39548;
  _6 = _4 + _5;
  # .MEM_7 = VDEF <.MEM_2(D)>
  this_3(D)->_partial_internal_cyclesD.39549 = _6;
  if (_6 >= 1.0e+0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_16 = PHI <.MEM_7(2), .MEM_14(5)>
  # VUSE <.MEM_16>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_17 = PHI <.MEM_7(4), .MEM_14(6)>
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _9 = this_3(D)->D.42039.D.26862._vptr.ModuleD.26812;
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _10 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_9 + 48B];
  # .MEM_11 = VDEF <.MEM_17>
  # USE = nonlocal 
  # CLB = nonlocal 
  OBJ_TYPE_REF(_10;(struct RouterD.33099)this_3(D)->6) (this_3(D));
  # VUSE <.MEM_11>
  _12 = this_3(D)->_partial_internal_cyclesD.39549;
  _13 = _12 - 1.0e+0;
  # .MEM_14 = VDEF <.MEM_11>
  this_3(D)->_partial_internal_cyclesD.39549 = _13;
  if (_13 >= 1.0e+0)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 1, flags: (NEW)
;;    pred:       5 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



Updating SSA:
Registering new PHI nodes in block #5
Updating SSA information for statement this_3(D)->_partial_internal_cycles = _13;
Registering new PHI nodes in block #6
Registering new PHI nodes in block #7

DFA Statistics for virtual void Router::Evaluate()

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             17        136b
DEF operands                              7         56b
VUSE operands                             9         72b
VDEF operands                             3         24b
PHI nodes                                 3        312b
PHI arguments                             5        240b
---------------------------------------------------------
Total memory used by DFA/SSA data                  840b
---------------------------------------------------------

Average number of arguments per PHI node: 1.7 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_18 -> { .MEM_14 }
Incremental SSA update started at block: 5
Number of blocks in CFG: 8
Number of blocks to update: 3 ( 38%)
Affected blocks: 5 6 7


Creating dr for this_3(D)->_partial_internal_cycles
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 128
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 1024
Creating dr for this_3(D)->_internal_speedup
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 960
Creating dr for this_3(D)->_partial_internal_cycles
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 128
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 1024
Creating dr for this_3(D)->D.42039.D.26862._vptr.Module
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->D.42039.D.26862._vptr.Module
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
Creating dr for this_3(D)->D.42039.D.26862._vptr.Module
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->D.42039.D.26862._vptr.Module
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
Creating dr for this_3(D)->D.42039.D.26862._vptr.Module
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->D.42039.D.26862._vptr.Module
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
Creating dr for this_3(D)->D.42039.D.26862._vptr.Module
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->D.42039.D.26862._vptr.Module
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:9, LOOPS:1, CONDITIONS:2, STMTS:13)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # VUSE <.MEM_2(D)>
    _4 = this_3(D)->_partial_internal_cycles;
    # VUSE <.MEM_2(D)>
    _5 = this_3(D)->_internal_speedup;
    _6 = _4 + _5;
    # .MEM_7 = VDEF <.MEM_2(D)>
    this_3(D)->_partial_internal_cycles = _6;
    if (_6 >= 1.0e+0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_7 }, succs = {bb_8 })
  {
    <bb 3>:
    # .MEM_16 = PHI <.MEM_7(2), .MEM_18(7)>

  }
  bb_8 (preds = {bb_3 }, succs = {bb_1 })
  {
    <bb 8>:
    # VUSE <.MEM_16>
    return;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_5 }, succs = {bb_3 })
  {
    <bb 7>:
    # .MEM_18 = PHI <.MEM_14(5)>
    goto <bb 3>;

  }
  loop_1 (header = 5, latch = 6, niter = )
  {
    bb_5 (preds = {bb_4 bb_6 }, succs = {bb_6 bb_7 })
    {
      <bb 5>:
      # .MEM_17 = PHI <.MEM_7(4), .MEM_14(6)>
      # VUSE <.MEM_17>
      _9 = this_3(D)->D.42039.D.26862._vptr.Module;
      # VUSE <.MEM_17>
      _10 = MEM[(int (*__vtbl_ptr_type) () *)_9 + 48B];
      # .MEM_11 = VDEF <.MEM_17>
      OBJ_TYPE_REF(_10;(struct Router)this_3(D)->6) (this_3(D));
      # VUSE <.MEM_11>
      _12 = this_3(D)->_partial_internal_cycles;
      _13 = _12 - 1.0e+0;
      # .MEM_14 = VDEF <.MEM_11>
      this_3(D)->_partial_internal_cycles = _13;
      if (_13 >= 1.0e+0)
        goto <bb 6>;
      else
        goto <bb 7>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_5 })
    {
      <bb 6>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

virtual void Router::Evaluate() (struct RouterD.33099 * const thisD.65875)
{
  doubleD.39 _4;
  doubleD.39 _5;
  doubleD.39 _6;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _9;
  intD.9 (*__vtbl_ptr_typeD.2760) () _10;
  doubleD.39 _12;
  doubleD.39 _13;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  _4 = this_3(D)->_partial_internal_cyclesD.39549;
  # VUSE <.MEM_2(D)>
  _5 = this_3(D)->_internal_speedupD.39548;
  _6 = _4 + _5;
  # .MEM_7 = VDEF <.MEM_2(D)>
  this_3(D)->_partial_internal_cyclesD.39549 = _6;
  if (_6 >= 1.0e+0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 8, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU)
  # .MEM_16 = PHI <.MEM_7(2), .MEM_18(7)>
;;    succ:       8 [100.0%]  (FALLTHRU)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_16>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 7, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_17 = PHI <.MEM_7(4), .MEM_14(6)>
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _9 = this_3(D)->D.42039.D.26862._vptr.ModuleD.26812;
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _10 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_9 + 48B];
  # .MEM_11 = VDEF <.MEM_17>
  # USE = nonlocal 
  # CLB = nonlocal 
  OBJ_TYPE_REF(_10;(struct RouterD.33099)this_3(D)->6) (this_3(D));
  # VUSE <.MEM_11>
  _12 = this_3(D)->_partial_internal_cyclesD.39549;
  _13 = _12 - 1.0e+0;
  # .MEM_14 = VDEF <.MEM_11>
  this_3(D)->_partial_internal_cyclesD.39549 = _13;
  if (_13 >= 1.0e+0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_18 = PHI <.MEM_14(5)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 7, next block 1, flags: (NEW)
;;    pred:       5 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



;; Function void std::vector<bool, _Alloc>::_M_insert_aux(std::vector<bool, _Alloc>::iterator, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator] (_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb, funcdef_no=2291, decl_uid=41884, cgraph_uid=673, symbol_order=679)


Pass statistics:
----------------

void std::vector<bool, _Alloc>::_M_insert_aux(std::vector<bool, _Alloc>::iterator, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator] (struct vectorD.41049 * const thisD.41885, struct iteratorD.41532 __positionD.41886, boolD.2757 __xD.41887)
{
  struct _Bit_iteratorD.24805 D.76200;
  _DistanceD.69729 __nD.76178;
  _Bit_typeD.24655 * __first$_M_pD.76199;
  const unsigned intD.13 __first$8D.76198;
  _Bit_typeD.24655 * __result$_M_pD.76197;
  const unsigned intD.13 __result$8D.76196;
  struct _Bit_iteratorD.24805 __firstD.76174;
  struct _Bit_iteratorD.24805 __lastD.76175;
  struct _Bit_iteratorD.24805 __resultD.76176;
  unsigned intD.13 __it$D24857$_M_offsetD.76173;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76171;
  unsigned intD.13 __it$D24857$_M_offsetD.76170;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76168;
  unsigned intD.13 __it$D24857$_M_offsetD.76167;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76165;
  struct _Bit_iteratorD.24805 D.76164;
  struct _Bit_iteratorD.24805 __firstD.76158;
  struct _Bit_iteratorD.24805 __lastD.76157;
  struct _Bit_iteratorD.24805 __resultD.76156;
  struct _Bit_iteratorD.24805 D.76163;
  struct _Bit_iteratorD.24805 D.76140;
  _DistanceD.69791 __nD.76120;
  _Bit_typeD.24655 * __first$_M_pD.76139;
  const unsigned intD.13 __first$8D.76138;
  _Bit_typeD.24655 * __result$_M_pD.76137;
  const unsigned intD.13 __result$8D.76136;
  struct _Bit_const_iteratorD.24915 __firstD.76116;
  struct _Bit_const_iteratorD.24915 __lastD.76117;
  struct _Bit_iteratorD.24805 __resultD.76118;
  struct _Bit_iteratorD.24805 D.76115;
  struct _Bit_iteratorD.24805 __resultD.76098;
  struct _Bit_const_iteratorD.24915 __lastD.76099;
  struct _Bit_const_iteratorD.24915 __firstD.76100;
  struct _Bit_iteratorD.24805 D.76114;
  _Bit_typeD.24655 * __it$D24977$_M_pD.76113;
  unsigned intD.13 __it$D24977$_M_offsetD.76111;
  _Bit_typeD.24655 * __it$D24977$_M_pD.76110;
  unsigned intD.13 __it$D24977$_M_offsetD.76108;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76107;
  unsigned intD.13 __it$D24857$_M_offsetD.76105;
  const long unsigned intD.14 D.76091;
  const size_typeD.41526 __lenD.76076;
  size_typeD.41526 D.76090;
  size_typeD.41526 __nD.76074;
  _Bit_typeD.24655 * __last$D24977$_M_pD.76071;
  const ptrdiff_tD.2819 _NumD.76066;
  unsigned intD.13 __it$D24977$_M_offsetD.76069;
  struct _Bit_iteratorD.24805 D.76068;
  struct iteratorD.41532 D.76067;
  struct _Bit_iteratorD.24805 D.76043;
  difference_typeD.25510 __nD.76021;
  _Bit_typeD.24655 * __last$_M_pD.76042;
  const unsigned intD.13 __last$8D.76041;
  _Bit_typeD.24655 * __result$_M_pD.76040;
  unsigned intD.13 __result$_M_offsetD.76039;
  struct _Bit_iteratorD.24805 __firstD.76018;
  struct _Bit_iteratorD.24805 __lastD.76019;
  struct _Bit_iteratorD.24805 __resultD.76020;
  unsigned intD.13 __it$D24857$_M_offsetD.76017;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76015;
  unsigned intD.13 __it$D24857$_M_offsetD.76014;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76012;
  unsigned intD.13 __it$D24857$_M_offsetD.76011;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76009;
  struct _Bit_iteratorD.24805 D.76008;
  struct _Bit_iteratorD.24805 __firstD.76002;
  struct _Bit_iteratorD.24805 __lastD.76001;
  struct _Bit_iteratorD.24805 __resultD.76000;
  struct _Bit_iteratorD.24805 D.76007;
  _Bit_typeD.24655 * SR.574D.74508;
  unsigned intD.13 SR.563D.74497;
  _Bit_typeD.24655 * SR.562D.74496;
  unsigned intD.13 SR.561D.74495;
  _Bit_typeD.24655 * SR.560D.74494;
  unsigned intD.13 __i$8D.74471;
  _Bit_typeD.24655 * __iD.74470;
  unsigned intD.13 __position$8D.74465;
  _Bit_typeD.24655 * __positionD.74464;
  struct _Bit_iteratorD.24805 D.74417;
  difference_typeD.24724 __nD.74395;
  _Bit_typeD.24655 * __tmp$_M_pD.74397;
  unsigned intD.13 __tmp$_M_offsetD.74396;
  struct _Bit_iteratorD.24805 D.74381;
  struct iteratorD.41532 __iD.68282;
  long unsigned intD.14 prephitmp_11;
  unsigned intD.13 _12;
  long intD.12 _15;
  long unsigned intD.14 * _16;
  long unsigned intD.14 * const _22;
  unsigned intD.13 _23;
  _Bit_typeD.24655 * _25;
  long unsigned intD.14 _26;
  long unsigned intD.14 _27;
  long unsigned intD.14 _28;
  long unsigned intD.14 _29;
  long unsigned intD.14 _30;
  long unsigned intD.14 _31;
  _Bit_typeD.24655 prephitmp_35;
  _Bit_typeD.24655 pretmp_36;
  _Bit_typeD.24655 prephitmp_37;
  _Bit_typeD.24655 pretmp_38;
  long unsigned intD.14 prephitmp_39;
  long unsigned intD.14 * _47;
  long unsigned intD.14 _49;
  long unsigned intD.14 _51;
  long unsigned intD.14 _52;
  long unsigned intD.14 prephitmp_56;
  _Bit_typeD.24655 cstore_61;
  _Bit_typeD.24655 cstore_68;
  long unsigned intD.14 prephitmp_89;
  long intD.12 _91;
  long intD.12 _92;
  long intD.12 _93;
  long intD.12 _94;
  long intD.12 _96;
  long intD.12 _97;
  long unsigned intD.14 _113;
  long unsigned intD.14 _114;
  long unsigned intD.14 _116;
  long unsigned intD.14 _117;
  long unsigned intD.14 _118;
  long unsigned intD.14 _119;
  long unsigned intD.14 _120;
  long intD.12 _123;
  long intD.12 __last.46_125;
  long intD.12 __first.47_126;
  long intD.12 _127;
  long unsigned intD.14 _129;
  _Bit_typeD.24655 * _133;
  unsigned intD.13 _134;
  long intD.12 _136;
  long intD.12 _137;
  long intD.12 _138;
  long intD.12 _139;
  long intD.12 _140;
  long intD.12 _141;
  long intD.12 _142;
  ptrdiff_tD.2819 _143;
  long unsigned intD.14 _153;
  long unsigned intD.14 _172;
  long unsigned intD.14 _174;
  long unsigned intD.14 _175;
  long unsigned intD.14 prephitmp_176;
  long unsigned intD.14 _177;
  _Bit_typeD.24655 prephitmp_178;
  long unsigned intD.14 _180;
  long unsigned intD.14 _182;
  long unsigned intD.14 _183;
  long unsigned intD.14 * const _194;
  long unsigned intD.14 pretmp_195;
  long intD.12 _196;
  long intD.12 _198;
  long unsigned intD.14 _199;
  sizetype _200;
  long unsigned intD.14 * _201;
  long unsigned intD.14 _202;
  long intD.12 _212;
  long intD.12 _214;
  long intD.12 _215;
  long intD.12 _216;
  long intD.12 _217;
  unsigned intD.13 prephitmp_220;
  long unsigned intD.14 _222;
  long unsigned intD.14 pretmp_223;
  long unsigned intD.14 _224;
  long unsigned intD.14 _226;
  long unsigned intD.14 _227;
  long unsigned intD.14 _229;
  long unsigned intD.14 _230;
  long unsigned intD.14 _231;
  long unsigned intD.14 _232;
  long unsigned intD.14 _233;
  long unsigned intD.14 prephitmp_248;
  long unsigned intD.14 prephitmp_255;
  _Bit_typeD.24655 cstore_261;
  long unsigned intD.14 pretmp_268;
  _Bit_typeD.24655 cstore_283;
  unsigned intD.13 pretmp_294;
  unsigned intD.13 prephitmp_295;
  _Bit_typeD.24655 pretmp_296;
  _Bit_typeD.24655 prephitmp_297;
  long unsigned intD.14 pretmp_298;
  long unsigned intD.14 prephitmp_299;
  size_typeD.41526 pretmp_300;
  _Bit_typeD.24655 cstore_302;
  long unsigned intD.14 pretmp_304;
  size_tD.2818 pretmp_306;
  long unsigned intD.14 pretmp_308;

;;   basic block 2, loop depth 0, count 0, freq 965, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __position_18 = MEM[(struct _Bit_iteratorD.24805 *)&__positionD.41886];
  # DEBUG __positionD.74464 => __position_18
  # VUSE <.MEM_2(D)>
  __position$8_13 = MEM[(struct _Bit_iteratorD.24805 *)&__positionD.41886 + 8B];
  # DEBUG __position$8D.74465 => __position$8_13
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __last$_M_p_4 = this_3(D)->D.41946._M_implD.41472._M_finishD.41475.D.24857._M_pD.24729;
  # DEBUG D#263ptD.0 => &this_3(D)->D.41946._M_implD.41472
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _22 = MEM[(long unsigned intD.14 * *)this_3(D) + 32B];
  # DEBUG D#50ptD.0 => D#263ptD.0
  # DEBUG thisD.74361 => D#50ptD.0
  if (__last$_M_p_4 != _22)
    goto <bb 68>;
  else
    goto <bb 22>;
;;    succ:       68 [68.1%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [31.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       68 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_258 = PHI <__n_98(3), __n_121(14)>
  # __last$8_259 = PHI <__last$8_122(3), __last$8_104(14)>
  # PT = nonlocal escaped 
  # __last$_M_p_262 = PHI <__last$_M_p_4(3), __last$_M_p_112(14)>
  # RANGE [0, 63] NONZERO 63
  # __result$_M_offset_263 = PHI <__result$_M_offset_43(3), __result$_M_offset_110(14)>
  # PT = nonlocal escaped 
  # __result$_M_p_264 = PHI <__result$_M_p_154(3), __result$_M_p_115(14)>
  # .MEM_286 = PHI <.MEM_2(D)(3), .MEM_260(14)>
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_263
  # DEBUG __result$_M_pD.76040 => __result$_M_p_264
  # DEBUG __last$8D.76041 => __last$8_259
  # DEBUG __last$_M_pD.76042 => __last$_M_p_262
  # DEBUG __nD.76021 => __n_258
  # DEBUG thisD.76022 => &__lastD.76019
  # DEBUG D#21ptD.0 => &__lastD.76019.D.24857
  # DEBUG thisD.76023 => D#21ptD.0
  # DEBUG __last$8D.76041 => __last$8_259 + 4294967295
  if (__last$8_259 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __last$8_101 = __last$8_259 + 4294967295;
  pretmp_223 = 1 << __last$8_101;
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __last$8D.76041 => 63
  # PT = nonlocal escaped 
  __last$_M_p_103 = __last$_M_p_262 + 18446744073709551608;
  # DEBUG __last$_M_pD.76042 => __last$_M_p_103
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __last$_M_p_112 = PHI <__last$_M_p_262(5), __last$_M_p_103(6)>
  # RANGE [0, 4294967294]
  # __last$8_104 = PHI <__last$8_101(5), 63(6)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_248 = PHI <pretmp_223(5), 9223372036854775808(6)>
  # DEBUG __last$8D.76041 => __last$8_104
  # DEBUG __last$_M_pD.76042 => __last$_M_p_112
  # DEBUG thisD.76024 => D#15ptD.0
  # DEBUG thisD.76025 => D#15ptD.0
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __last$_M_p_112
  # DEBUG __yD.71518 => 1 << __last$8_104
  # DEBUG thisD.76026 => &__resultD.76020
  # DEBUG D#21ptD.0 => &__resultD.76020.D.24857
  # DEBUG thisD.76027 => D#21ptD.0
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_263 + 4294967295
  if (__result$_M_offset_263 == 0)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[63, 4294967294]
  __result$_M_offset_107 = __result$_M_offset_263 + 4294967295;
  pretmp_195 = 1 << __result$_M_offset_107;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$_M_offsetD.76039 => 63
  # PT = nonlocal escaped 
  __result$_M_p_109 = __result$_M_p_264 + 18446744073709551608;
  # DEBUG __result$_M_pD.76040 => __result$_M_p_109
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __result$_M_p_115 = PHI <__result$_M_p_264(8), __result$_M_p_109(9)>
  # RANGE [0, 63] NONZERO 63
  # __result$_M_offset_110 = PHI <__result$_M_offset_107(8), 63(9)>
  # RANGE [1, 9223372036854775808]
  # prephitmp_56 = PHI <pretmp_195(8), 9223372036854775808(9)>
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_110
  # DEBUG __result$_M_pD.76040 => __result$_M_p_115
  # DEBUG thisD.76028 => D#15ptD.0
  # DEBUG thisD.76029 => D#15ptD.0
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __result$_M_p_115
  # DEBUG __yD.71518 => 1 << __result$_M_offset_110
  # DEBUG thisD.76031 => NULL
  # DEBUG __xD.76030 => NULL
  # DEBUG thisD.76032 => NULL
  # VUSE <.MEM_286>
  _113 = *__last$_M_p_112;
  # RANGE [0, 18446744073709551615]
  _114 = _113 & prephitmp_248;
  # DEBUG thisD.76034 => NULL
  # DEBUG __xD.76033 => _114 != 0
  if (_114 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_286>
  _116 = *__result$_M_p_115;
  # RANGE [0, 18446744073709551615]
  _117 = prephitmp_56 | _116;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_286>
  _118 = *__result$_M_p_115;
  # RANGE [9223372036854775807, 18446744073709551614]
  _119 = ~prephitmp_56;
  # RANGE [0, 18446744073709551614]
  _120 = _118 & _119;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_261 = PHI <_117(11), _120(12)>
  # .MEM_260 = VDEF <.MEM_286>
  *__result$_M_p_115 = cstore_261;
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_121 = __n_258 + -1;
  # DEBUG __nD.76021 => __n_121
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_110
  # DEBUG __result$_M_pD.76040 => __result$_M_p_115
  # DEBUG __last$8D.76041 => __last$8_104
  # DEBUG __last$_M_pD.76042 => __last$_M_p_112
  # DEBUG __nD.76021 => __n_121
  if (__n_121 <= 0)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_246 = PHI <.MEM_260(13)>
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_293 = PHI <.MEM_246(15), .MEM_2(D)(68)>
  # DEBUG D#15ptD.0 => &__positionD.41886
  # DEBUG D#15ptD.0 => &__positionD.41886
  # DEBUG thisD.74372 => D#15ptD.0
  # DEBUG thisD.74371 => D#15ptD.0
  # RANGE [0, 18446744073709551615]
  _31 = 1 << __position$8_13;
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __position_18
  # DEBUG __yD.71518 => _31
  # DEBUG thisD.74366 => &D.68278
  # DEBUG __xD.74367 => __x_7(D)
  if (__x_7(D) != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_293>
  _26 = *__position_18;
  # RANGE [0, 18446744073709551615]
  _27 = _26 | _31;
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_293>
  _28 = *__position_18;
  # RANGE [0, 18446744073709551615]
  _29 = ~_31;
  # RANGE [0, 18446744073709551615]
  _30 = _28 & _29;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_61 = PHI <_27(17), _30(18)>
  # .MEM_60 = VDEF <.MEM_293>
  *__position_18 = cstore_61;
  # DEBUG D#273ptD.0 => &this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.74363 => D#273ptD.0
  # DEBUG D#16ptD.0 => &D#273ptD.0->D.24857
  # DEBUG thisD.74364 => D#16ptD.0
  if (__last$8_122 == 63)
    goto <bb 21>;
  else
    goto <bb 20>;
;;    succ:       21 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 648, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  _23 = __last$8_122 + 1;
  # .MEM_62 = VDEF <.MEM_60>
  MEM[(struct _Bit_iterator_baseD.24719 *)this_3(D) + 16B]._M_offsetD.24730 = _23;
  goto <bb 67>;
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 252, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_63 = VDEF <.MEM_60>
  MEM[(struct _Bit_iterator_baseD.24719 *)this_3(D) + 16B]._M_offsetD.24730 = 0;
  # PT = nonlocal escaped 
  _25 = __last$_M_p_4 + 8;
  # .MEM_64 = VDEF <.MEM_63>
  MEM[(struct _Bit_iterator_baseD.24719 *)this_3(D) + 16B]._M_pD.24729 = _25;
  goto <bb 67>;
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 65, maybe hot
;;   Invalid sum of incoming frequencies 308, should be 65
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       2 [31.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.76073 => this_3(D)
  # DEBUG __nD.76074 => 1
  # DEBUG __nD.76074 => 1
  # DEBUG __sD.76075 => "vector<bool>::_M_insert_aux"
  # DEBUG D#236ptD.0 => this_3(D)
  # DEBUG thisD.73688 => D#236ptD.0
  # DEBUG D#235ptD.0 => D#236ptD.0
  # DEBUG __isizeD.73689 => 9223372036854775744
  # DEBUG D#234ptD.0 => &D#235ptD.0->D.41946
  # DEBUG thisD.73671 => D#234ptD.0
  # DEBUG __aD.73661 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => D#232ptD.0
  # DEBUG thisD.73652 => D#231ptD.0
  # DEBUG __asizeD.73690 => NULL
  # DEBUG thisD.76079 => this_3(D)
  # DEBUG thisD.76080 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.76082 => NULL
  # DEBUG __xD.76081 => D#35ptD.0
  # VUSE <.MEM_2(D)>
  _12 = MEM[(const struct _Bit_iteratorD.24805 *)this_3(D)].D.24857._M_offsetD.24730;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _133 = MEM[(const struct _Bit_iteratorD.24805 *)this_3(D)].D.24857._M_pD.24729;
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.76083 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.76085 => NULL
  # DEBUG __xD.76084 => D#34ptD.0
  # VUSE <.MEM_2(D)>
  _134 = MEM[(const struct _Bit_iteratorD.24805 *)this_3(D) + 16B].D.24857._M_offsetD.24730;
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.76086 => D#11ptD.0
  # DEBUG __xD.76087 => D#11ptD.0
  # DEBUG __yD.76088 => D#12ptD.0
  # DEBUG __yD.76089 => D#12ptD.0
  _136 = (long intD.12) __last$_M_p_4;
  _137 = (long intD.12) _133;
  _138 = _136 - _137;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _139 = _138 * 8;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _140 = (long intD.12) _134;
  _141 = _139 + _140;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _142 = (long intD.12) _12;
  _143 = _141 - _142;
  # RANGE [0, 18446744073709551615]
  _144 = (const long unsigned intD.14) _143;
  if (_144 == 9223372036854775744)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_310 = VDEF <.MEM_2(D)>
  # USE = nonlocal null { D.76203 } (escaped heap)
  # CLB = nonlocal null { D.76203 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2860 ("vector<bool>::_M_insert_aux");
;;    succ:      

;;   basic block 24, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.73719 => this_3(D)
  # DEBUG thisD.73720 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.73722 => NULL
  # DEBUG __xD.73721 => D#35ptD.0
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.73723 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.73725 => NULL
  # DEBUG __xD.73724 => D#34ptD.0
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.73726 => D#11ptD.0
  # DEBUG __xD.73727 => D#11ptD.0
  # DEBUG __yD.73728 => D#12ptD.0
  # DEBUG __yD.73729 => D#12ptD.0
  # DEBUG thisD.73707 => this_3(D)
  # DEBUG thisD.73708 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.73710 => NULL
  # DEBUG __xD.73709 => D#35ptD.0
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.73711 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.73713 => NULL
  # DEBUG __xD.73712 => D#34ptD.0
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.73714 => D#11ptD.0
  # DEBUG __xD.73715 => D#11ptD.0
  # DEBUG __yD.73716 => D#12ptD.0
  # DEBUG __yD.73717 => D#12ptD.0
  # DEBUG __aD.76078 => &D.76091
  # DEBUG __bD.76077 => &__nD.76074
  if (_144 == 0)
    goto <bb 27>;
  else
    goto <bb 25>;
;;    succ:       27 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __len_149 = _144 + _144;
  # DEBUG __lenD.76076 => __len_149
  # DEBUG thisD.73692 => this_3(D)
  # DEBUG thisD.73693 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.73695 => NULL
  # DEBUG __xD.73694 => D#35ptD.0
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.73696 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.73698 => NULL
  # DEBUG __xD.73697 => D#34ptD.0
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.73699 => D#11ptD.0
  # DEBUG __xD.73700 => D#11ptD.0
  # DEBUG __yD.73701 => D#12ptD.0
  # DEBUG __yD.73702 => D#12ptD.0
  if (_144 > __len_149)
    goto <bb 28>;
  else
    goto <bb 26>;
;;    succ:       28 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 (FALSE_VALUE,EXECUTABLE)
  pretmp_300 = MIN_EXPR <__len_149, 9223372036854775744>;
  pretmp_304 = pretmp_300 + 63;
  pretmp_306 = pretmp_304 >> 6;
  pretmp_308 = pretmp_306 * 8;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # prephitmp_39 = PHI <pretmp_308(26), 8(24)>
  # DEBUG __lenD.76076 => NULL
  # DEBUG thisD.73692 => this_3(D)
  # DEBUG thisD.73693 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.73695 => NULL
  # DEBUG __xD.73694 => D#35ptD.0
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.73696 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.73698 => NULL
  # DEBUG __xD.73697 => D#34ptD.0
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.73699 => D#11ptD.0
  # DEBUG __xD.73700 => D#11ptD.0
  # DEBUG __yD.73701 => D#12ptD.0
  # DEBUG __yD.73702 => D#12ptD.0
  # DEBUG D#236ptD.0 => this_3(D)
  # DEBUG thisD.73731 => D#236ptD.0
  # DEBUG D#235ptD.0 => D#236ptD.0
  # DEBUG __isizeD.73732 => 9223372036854775744
  # DEBUG D#234ptD.0 => &D#235ptD.0->D.41946
  # DEBUG thisD.73671 => D#234ptD.0
  # DEBUG __aD.73661 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => D#232ptD.0
  # DEBUG thisD.73652 => D#231ptD.0
  # DEBUG __asizeD.73733 => NULL
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1152921504606846968] NONZERO 1152921504606846968
  # prephitmp_89 = PHI <1152921504606846968(25), prephitmp_39(27)>
  # DEBUG __lenD.68279 => NULL
  # DEBUG D#275ptD.0 => &this_3(D)->D.41946
  # DEBUG D#244ptD.0 => D#275ptD.0
  # DEBUG __nD.74399 => NULL
  # DEBUG thisD.74400 => D#244ptD.0
  # DEBUG D#243ptD.0 => D#244ptD.0
  # DEBUG __nD.74401 => NULL
  # DEBUG D#242ptD.0 => &D#243ptD.0->_M_implD.41472
  # DEBUG D#241ptD.0 => D#242ptD.0
  # DEBUG __nD.74403 => NULL
  # DEBUG __aD.74402 => D#241ptD.0
  # DEBUG D#240ptD.0 => D#241ptD.0
  # DEBUG D#238ptD.0 => D#240ptD.0
  # DEBUG D#239ptD.0 => 0B
  # DEBUG __nD.74406 => NULL
  # DEBUG thisD.74404 => D#238ptD.0
  # DEBUG D.74405 => D#239ptD.0
  # DEBUG D#237ptD.0 => D#238ptD.0
  # DEBUG D#231ptD.0 => D#237ptD.0
  # DEBUG thisD.73740 => D#231ptD.0
  # .MEM_65 = VDEF <.MEM_2(D)>
  # PT = { D.76203 } (escaped heap)
  # USE = nonlocal null { D.76203 } (escaped heap)
  # CLB = nonlocal null { D.76203 } (escaped heap)
  _47 = _ZnwmD.2764 (prephitmp_89);
  # DEBUG __qD.68280 => _47
  # DEBUG __rD.74462 => _47
  # DEBUG thisD.74456 => &__startD.68281
  # DEBUG __xD.74457 => NULL
  # DEBUG __yD.74458 => 0
  # DEBUG D#14ptD.0 => &__startD.68281.D.24857
  # DEBUG thisD.74461 => D#14ptD.0
  # DEBUG __xD.74460 => NULL
  # DEBUG __yD.74459 => 0
  # DEBUG thisD.71482 => D#14ptD.0
  # DEBUG __start$_M_pD.74468 => _47
  # DEBUG __start$_M_offsetD.74469 => 0
  # DEBUG thisD.74451 => &D.68285
  # DEBUG __xD.74452 => &__positionD.41886
  # DEBUG D#26ptD.0 => &D.68285.D.24977
  # DEBUG thisD.74455 => D#26ptD.0
  # DEBUG __xD.74454 => __position_18
  # DEBUG __yD.74453 => __position$8_13
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.74448 => this_3(D)
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  SR.574_66 = MEM[(struct vectorD.41049 *)this_3(D)];
  # DEBUG D#274ptD.0 => MEM[(struct vectorD.41049 *)this_3(D) + 8B]
  # DEBUG thisD.74443 => &D.68284
  # DEBUG __xD.74444 => &D.68283
  # DEBUG D#26ptD.0 => &D.68284.D.24977
  # DEBUG thisD.74447 => D#26ptD.0
  # DEBUG __xD.74446 => SR.574_66
  # DEBUG __yD.74445 => D#274ptD.0
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG D.74475 => D#274ptD.0
  # DEBUG D#259ptD.0 => this_3(D)
  # DEBUG D#260ptD.0 => D.68284
  # DEBUG D#261ptD.0 => D.68285
  # DEBUG D#261ptD.0 => D.68285
  # DEBUG D#262ptD.0 => __startD.68281
  # DEBUG thisD.76048 => D#259ptD.0
  # DEBUG __last$D24977$_M_pD.76071 => __position_18
  # DEBUG __firstD.76052 => SR.574_66
  # DEBUG __lastD.76051 => __position_18
  # DEBUG __resultD.76050 => _47
  # DEBUG __itD.74067 => __position_18
  # DEBUG __itD.72560 => __position_18
  # DEBUG __itD.74065 => SR.574_66
  # DEBUG __itD.72560 => SR.574_66
  # DEBUG __firstD.76055 => NULL
  # DEBUG __lastD.76054 => NULL
  # DEBUG __resultD.76053 => _47
  # DEBUG __itD.74047 => _47
  # DEBUG __itD.71796 => _47
  # DEBUG __itD.74045 => NULL
  # DEBUG __itD.71796 => NULL
  # DEBUG __itD.74043 => NULL
  # DEBUG __itD.71796 => NULL
  # DEBUG __firstD.76058 => NULL
  # DEBUG __lastD.76057 => NULL
  # DEBUG __resultD.76056 => _47
  # DEBUG __simpleD.76062 => 1
  # DEBUG __firstD.76065 => NULL
  # DEBUG __lastD.76064 => NULL
  # DEBUG __resultD.76063 => _47
  __last.46_125 = (long intD.12) __position_18;
  __first.47_126 = (long intD.12) SR.574_66;
  _127 = __last.46_125 - __first.47_126;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_128 = _127 /[ex] 8;
  # DEBUG _NumD.76066 => _Num_128
  if (_Num_128 != 0)
    goto <bb 30>;
  else
    goto <bb 29>;
;;    succ:       30 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_268 = (long unsigned intD.14) _127;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 25, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _129 = (long unsigned intD.14) _127;
  # .MEM_272 = VDEF <.MEM_65>
  # USE = nonlocal null { D.76203 } (escaped heap)
  # CLB = nonlocal null { D.76203 } (escaped heap)
  memmoveD.995 (_47, SR.574_66, _129);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_245 = PHI <.MEM_65(29), .MEM_272(30)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_11 = PHI <pretmp_268(29), _129(30)>
  # PT = { D.76203 } (escaped heap)
  __i_131 = _47 + prephitmp_11;
  # DEBUG __qD.76049 => __i_131
  # DEBUG thisD.74326 => NULL
  # DEBUG __xD.74325 => __i_131
  # DEBUG __yD.74324 => 0
  # DEBUG thisD.74329 => D#14ptD.0
  # DEBUG __xD.74328 => __i_131
  # DEBUG __yD.74327 => 0
  # DEBUG thisD.71482 => D#14ptD.0
  # DEBUG thisD.74332 => NULL
  # DEBUG __xD.74331 => __position_18
  # DEBUG __yD.74330 => 0
  # DEBUG thisD.74335 => D#25ptD.0
  # DEBUG __xD.74334 => __position_18
  # DEBUG __yD.74333 => 0
  # DEBUG thisD.71482 => D#25ptD.0
  # DEBUG D#257ptD.0 => __lastD.76072
  # DEBUG D#257ptD.0 => __lastD.76072
  # DEBUG __it$D24977$_M_pD.74344 => __position_18
  # DEBUG __it$D24977$_M_offsetD.76069 => __position$8_13
  # DEBUG __it$D24977$_M_pD.74347 => __position_18
  # DEBUG __it$D24977$_M_offsetD.74345 => 0
  # DEBUG __it$D24857$_M_pD.76107 => __i_131
  # DEBUG __it$D24857$_M_offsetD.76105 => 0
  # DEBUG __it$D24977$_M_pD.76110 => __position_18
  # DEBUG __it$D24977$_M_offsetD.76108 => __position$8_13
  # DEBUG __it$D24977$_M_pD.76113 => __position_18
  # DEBUG __it$D24977$_M_offsetD.76111 => 0
  # DEBUG __simpleD.76104 => 0
  # DEBUG __first$_M_pD.76139 => __position_18
  # DEBUG __first$8D.76138 => 0
  # DEBUG __result$_M_pD.76137 => __i_131
  # DEBUG __result$8D.76136 => 0
  # DEBUG D#11ptD.0 => &__lastD.76117.D.24977
  # DEBUG D#11ptD.0 => &__lastD.76117.D.24977
  # DEBUG D#12ptD.0 => &__firstD.76116.D.24977
  # DEBUG D#12ptD.0 => &__firstD.76116.D.24977
  # DEBUG __xD.76132 => D#11ptD.0
  # DEBUG __xD.76133 => D#11ptD.0
  # DEBUG __yD.76134 => D#12ptD.0
  # DEBUG __yD.76135 => D#12ptD.0
  # RANGE [0, 4294967295] NONZERO 4294967295
  __n_166 = (_DistanceD.69791) __position$8_13;
  # DEBUG __nD.76120 => NULL
  # DEBUG __result$8D.76136 => 0
  # DEBUG __result$_M_pD.76137 => __i_131
  # DEBUG __first$8D.76138 => 0
  # DEBUG __first$_M_pD.76139 => __position_18
  # DEBUG __nD.76120 => __n_166
  if (__n_166 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       31 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_245>
  pretmp_38 = *__i_131;
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       31 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_245>
  pretmp_36 = *__i_131;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 4294967295] NONZERO 4294967295
  # __n_265 = PHI <__n_166(33), __n_188(44)>
  # RANGE [0, 4294967295]
  # __first$8_266 = PHI <0(33), __first$8_190(44)>
  # PT = nonlocal 
  # __position_267 = PHI <__position_18(33), __position_189(44)>
  # RANGE [0, 4294967295]
  # __result$8_273 = PHI <0(33), __result$8_192(44)>
  # PT = { D.76203 } (escaped heap)
  # __i_275 = PHI <__i_131(33), __i_191(44)>
  # .MEM_288 = PHI <.MEM_245(33), .MEM_282(44)>
  # prephitmp_35 = PHI <pretmp_36(33), prephitmp_297(44)>
  # DEBUG __result$8D.76136 => __result$8_273
  # DEBUG __result$_M_pD.76137 => __i_275
  # DEBUG __first$8D.76138 => __first$8_266
  # DEBUG __first$_M_pD.76139 => __position_267
  # DEBUG __nD.76120 => __n_265
  # DEBUG D#27ptD.0 => &__firstD.76116
  # DEBUG D#27ptD.0 => &__firstD.76116
  # DEBUG thisD.76121 => D#27ptD.0
  # DEBUG thisD.76122 => D#27ptD.0
  # RANGE [0, 18446744073709551615]
  _172 = 1 << __first$8_266;
  # DEBUG thisD.71583 => NULL
  # DEBUG __xD.71582 => __position_267
  # DEBUG __yD.71581 => _172
  # DEBUG thisD.76123 => NULL
  # VUSE <.MEM_288>
  _174 = *__position_267;
  # RANGE [0, 18446744073709551615]
  _175 = _172 & _174;
  # DEBUG D#15ptD.0 => &__resultD.76118
  # DEBUG D#15ptD.0 => &__resultD.76118
  # DEBUG thisD.76124 => D#15ptD.0
  # DEBUG thisD.76125 => D#15ptD.0
  # RANGE [0, 18446744073709551615]
  _177 = 1 << __result$8_273;
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __i_275
  # DEBUG __yD.71518 => _177
  # DEBUG thisD.76127 => NULL
  # DEBUG __xD.76126 => _175 != 0
  if (_175 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 328, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _180 = prephitmp_35 | _177;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 328, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _182 = ~_177;
  # RANGE [0, 18446744073709551615]
  _183 = prephitmp_35 & _182;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_283 = PHI <_180(35), _183(36)>
  # .MEM_282 = VDEF <.MEM_288>
  *__i_275 = cstore_283;
  # DEBUG thisD.76128 => &__firstD.76116
  # DEBUG D#28ptD.0 => &__firstD.76116.D.24977
  # DEBUG thisD.76129 => D#28ptD.0
  # DEBUG __first$8D.76138 => __first$8_266 + 1
  if (__first$8_266 == 63)
    goto <bb 39>;
  else
    goto <bb 38>;
;;    succ:       39 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 472, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       37 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$8_184 = __first$8_266 + 1;
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$8D.76138 => 0
  # PT = nonlocal 
  __position_185 = __position_267 + 8;
  # DEBUG __first$_M_pD.76139 => __position_185
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_189 = PHI <__position_267(38), __position_185(39)>
  # RANGE [0, 4294967295]
  # __first$8_190 = PHI <__first$8_184(38), 0(39)>
  # DEBUG __first$8D.76138 => __first$8_190
  # DEBUG __first$_M_pD.76139 => __position_189
  # DEBUG thisD.76130 => &__resultD.76118
  # DEBUG D#16ptD.0 => &__resultD.76118.D.24857
  # DEBUG thisD.76131 => D#16ptD.0
  # DEBUG __result$8D.76136 => __result$8_273 + 1
  if (__result$8_273 == 63)
    goto <bb 42>;
  else
    goto <bb 41>;
;;    succ:       42 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 472, maybe hot
;;    prev block 40, next block 42, flags: (NEW)
;;    pred:       40 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __result$8_186 = __result$8_273 + 1;
  pretmp_294 = __result$8_186 + 1;
  pretmp_298 = 1 << __result$8_186;
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$8D.76136 => 0
  # PT = { D.76203 } (escaped heap)
  __i_187 = __i_275 + 8;
  # DEBUG __result$_M_pD.76137 => __i_187
  # VUSE <.MEM_282>
  pretmp_296 = MEM[(_Bit_typeD.24655 *)__i_275 + 8B];
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_191 = PHI <__i_275(41), __i_187(42)>
  # RANGE ~[64, 64]
  # __result$8_192 = PHI <__result$8_186(41), 0(42)>
  # prephitmp_295 = PHI <pretmp_294(41), 1(42)>
  # prephitmp_297 = PHI <cstore_283(41), pretmp_296(42)>
  # prephitmp_299 = PHI <pretmp_298(41), 1(42)>
  # DEBUG __result$8D.76136 => __result$8_192
  # DEBUG __result$_M_pD.76137 => __i_191
  # RANGE [0, 4294967294] NONZERO 4294967295
  __n_188 = __n_265 + -1;
  # DEBUG __nD.76120 => __n_188
  # DEBUG __result$8D.76136 => __result$8_192
  # DEBUG __result$_M_pD.76137 => __i_191
  # DEBUG __first$8D.76138 => __first$8_190
  # DEBUG __first$_M_pD.76139 => __position_189
  # DEBUG __nD.76120 => __n_188
  if (__n_188 == 0)
    goto <bb 45>;
  else
    goto <bb 44>;
;;    succ:       45 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 596, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       43 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_243 = PHI <__i_191(43)>
  # RANGE ~[64, 64]
  # __result$8_228 = PHI <__result$8_192(43)>
  # prephitmp_220 = PHI <prephitmp_295(43)>
  # prephitmp_178 = PHI <prephitmp_297(43)>
  # prephitmp_176 = PHI <prephitmp_299(43)>
  # DEBUG __iD.74470 => __i_243
  # DEBUG __i$8D.74471 => __result$8_228
  # DEBUG D#20ptD.0 => 0
  # DEBUG thisD.74435 => &__iD.68282
  # DEBUG D.74436 => D#20ptD.0
  # DEBUG __tmp$D24857$_M_pD.74441 => __i_243
  # DEBUG __tmp$D24857$_M_offsetD.74442 => __result$8_228
  # DEBUG D#19ptD.0 => &__iD.68282.D.24857
  # DEBUG thisD.74438 => D#19ptD.0
  # DEBUG __i$8D.74471 => __result$8_228 + 1
  if (__result$8_228 == 63)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [30.8%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [69.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [30.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __i$8D.74471 => 0
  # PT = { D.76203 } (escaped heap)
  __i_55 = __i_243 + 8;
  # DEBUG __iD.74470 => __i_55
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [69.2%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_21 = PHI <__i_243(45), __i_55(46), __i_131(32)>
  # RANGE [0, 4294967295]
  # __i$8_19 = PHI <prephitmp_220(45), 0(46), 1(32)>
  # PT = { D.76203 } (escaped heap)
  # __i_173 = PHI <__i_243(45), __i_243(46), __i_131(32)>
  # .MEM_170 = PHI <.MEM_282(45), .MEM_282(46), .MEM_245(32)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_255 = PHI <prephitmp_176(45), prephitmp_176(46), 1(32)>
  # prephitmp_37 = PHI <prephitmp_178(45), prephitmp_178(46), pretmp_38(32)>
  # DEBUG __i$8D.74471 => __i$8_19
  # DEBUG __iD.74470 => __i_21
  # DEBUG D#17ptD.0 => {CLOBBER}
  # DEBUG __tmp$D24857$_M_pD.74441 => D#17ptD.0
  # DEBUG D#18ptD.0 => {CLOBBER}
  # DEBUG __tmp$D24857$_M_offsetD.74442 => D#18ptD.0
  # DEBUG D#15ptD.0 => &D.68288
  # DEBUG D#15ptD.0 => &D.68288
  # DEBUG thisD.74432 => D#15ptD.0
  # DEBUG thisD.74431 => D#15ptD.0
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __i_173
  # DEBUG __yD.71518 => NULL
  # DEBUG thisD.74426 => &D.68289
  # DEBUG __xD.74427 => __x_7(D)
  if (__x_7(D) != 0)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _49 = prephitmp_37 | prephitmp_255;
  goto <bb 50>;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       47 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _51 = ~prephitmp_255;
  # RANGE [0, 18446744073709551615]
  _52 = prephitmp_37 & _51;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_68 = PHI <_49(48), _52(49)>
  # .MEM_67 = VDEF <.MEM_170>
  *__i_173 = cstore_68;
  # DEBUG thisD.74424 => this_3(D)
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  __it$D24857$_M_p_70 = MEM[(struct vectorD.41049 *)this_3(D) + 16B];
  # VUSE <.MEM_67>
  __it$D24857$_M_offset_71 = MEM[(struct vectorD.41049 *)this_3(D) + 24B];
  # DEBUG D#250ptD.0 => __positionD.41886
  # DEBUG D#250ptD.0 => __positionD.41886
  # DEBUG D#251ptD.0 => D.70632
  # DEBUG D#251ptD.0 => D.70632
  # DEBUG D#252ptD.0 => __iD.68282
  # DEBUG D#252ptD.0 => __iD.68282
  # DEBUG __it$D24857$_M_pD.74421 => __it$D24857$_M_p_70
  # DEBUG __it$D24857$_M_offsetD.74423 => __it$D24857$_M_offset_71
  # DEBUG __it$D24857$_M_pD.74418 => __position_18
  # DEBUG __it$D24857$_M_offsetD.74420 => __position$8_13
  # DEBUG __it$D24857$_M_pD.76171 => __i_21
  # DEBUG __it$D24857$_M_offsetD.76173 => __i$8_19
  # DEBUG __it$D24857$_M_pD.76168 => __it$D24857$_M_p_70
  # DEBUG __it$D24857$_M_offsetD.76170 => __it$D24857$_M_offset_71
  # DEBUG __it$D24857$_M_pD.76165 => __position_18
  # DEBUG __it$D24857$_M_offsetD.76167 => __position$8_13
  # DEBUG __simpleD.76162 => 0
  # DEBUG __first$_M_pD.76199 => __position_18
  # DEBUG __first$8D.76198 => __position$8_13
  # DEBUG __result$_M_pD.76197 => __i_21
  # DEBUG __result$8D.76196 => __i$8_19
  # DEBUG D#11ptD.0 => &__lastD.76175.D.24857
  # DEBUG D#11ptD.0 => &__lastD.76175.D.24857
  # DEBUG D#12ptD.0 => &__firstD.76174.D.24857
  # DEBUG D#12ptD.0 => &__firstD.76174.D.24857
  # DEBUG __xD.76192 => D#11ptD.0
  # DEBUG __xD.76193 => D#11ptD.0
  # DEBUG __yD.76194 => D#12ptD.0
  # DEBUG __yD.76195 => D#12ptD.0
  _212 = (long intD.12) __it$D24857$_M_p_70;
  _214 = _212 - __last.46_125;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _215 = _214 * 8;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _216 = (long intD.12) __it$D24857$_M_offset_71;
  _217 = _215 + _216;
  __n_219 = _217 - __n_166;
  # DEBUG __nD.76178 => NULL
  # DEBUG __result$8D.76196 => __i$8_19
  # DEBUG __result$_M_pD.76197 => __i_21
  # DEBUG __first$8D.76198 => __position$8_13
  # DEBUG __first$_M_pD.76199 => __position_18
  # DEBUG __nD.76178 => __n_219
  if (__n_219 <= 0)
    goto <bb 64>;
  else
    goto <bb 51>;
;;    succ:       64 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_277 = PHI <__n_219(51), __n_238(63)>
  # __position$8_278 = PHI <__position$8_13(51), __position$8_240(63)>
  # RANGE [0, 4294967295]
  # __i$8_279 = PHI <__i$8_19(51), __i$8_242(63)>
  # PT = nonlocal 
  # __position_281 = PHI <__position_18(51), __position_239(63)>
  # PT = { D.76203 } (escaped heap)
  # __i_284 = PHI <__i_21(51), __i_241(63)>
  # .MEM_290 = PHI <.MEM_67(51), .MEM_301(63)>
  # DEBUG __result$8D.76196 => __i$8_279
  # DEBUG __result$_M_pD.76197 => __i_284
  # DEBUG __first$8D.76198 => __position$8_278
  # DEBUG __first$_M_pD.76199 => __position_281
  # DEBUG __nD.76178 => __n_277
  # DEBUG D#15ptD.0 => &__firstD.76174
  # DEBUG D#15ptD.0 => &__firstD.76174
  # DEBUG thisD.76179 => D#15ptD.0
  # DEBUG thisD.76180 => D#15ptD.0
  # RANGE [0, 18446744073709551615]
  _222 = 1 << __position$8_278;
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __position_281
  # DEBUG __yD.71518 => _222
  # DEBUG D#15ptD.0 => &__resultD.76176
  # DEBUG D#15ptD.0 => &__resultD.76176
  # DEBUG thisD.76181 => D#15ptD.0
  # DEBUG thisD.76182 => D#15ptD.0
  # RANGE [0, 18446744073709551615]
  _224 = 1 << __i$8_279;
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __i_284
  # DEBUG __yD.71518 => _224
  # DEBUG thisD.76184 => NULL
  # DEBUG __xD.76183 => NULL
  # DEBUG thisD.76185 => NULL
  # VUSE <.MEM_290>
  _226 = *__position_281;
  # RANGE [0, 18446744073709551615]
  _227 = _222 & _226;
  # DEBUG thisD.76187 => NULL
  # DEBUG __xD.76186 => _227 != 0
  if (_227 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 328, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_290>
  _229 = *__i_284;
  # RANGE [0, 18446744073709551615]
  _230 = _224 | _229;
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 328, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_290>
  _231 = *__i_284;
  # RANGE [0, 18446744073709551615]
  _232 = ~_224;
  # RANGE [0, 18446744073709551615]
  _233 = _231 & _232;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_302 = PHI <_230(53), _233(54)>
  # .MEM_301 = VDEF <.MEM_290>
  *__i_284 = cstore_302;
  # DEBUG thisD.76188 => &__firstD.76174
  # DEBUG D#16ptD.0 => &__firstD.76174.D.24857
  # DEBUG thisD.76189 => D#16ptD.0
  # DEBUG __first$8D.76198 => __position$8_278 + 1
  if (__position$8_278 == 63)
    goto <bb 57>;
  else
    goto <bb 56>;
;;    succ:       57 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 1, count 0, freq 472, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       55 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __position$8_234 = __position$8_278 + 1;
  goto <bb 58>;
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       55 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$8D.76198 => 0
  # PT = nonlocal 
  __position_235 = __position_281 + 8;
  # DEBUG __first$_M_pD.76199 => __position_235
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_239 = PHI <__position_281(56), __position_235(57)>
  # RANGE ~[64, 64]
  # __position$8_240 = PHI <__position$8_234(56), 0(57)>
  # DEBUG __first$8D.76198 => __position$8_240
  # DEBUG __first$_M_pD.76199 => __position_239
  # DEBUG thisD.76190 => &__resultD.76176
  # DEBUG D#16ptD.0 => &__resultD.76176.D.24857
  # DEBUG thisD.76191 => D#16ptD.0
  # DEBUG __result$8D.76196 => __i$8_279 + 1
  if (__i$8_279 == 63)
    goto <bb 60>;
  else
    goto <bb 59>;
;;    succ:       60 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 59, loop depth 1, count 0, freq 472, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __i$8_236 = __i$8_279 + 1;
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       58 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$8D.76196 => 0
  # PT = { D.76203 } (escaped heap)
  __i_237 = __i_284 + 8;
  # DEBUG __result$_M_pD.76197 => __i_237
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_241 = PHI <__i_284(59), __i_237(60)>
  # RANGE [0, 4294967295]
  # __i$8_242 = PHI <__i$8_236(59), 0(60)>
  # DEBUG __result$8D.76196 => __i$8_242
  # DEBUG __result$_M_pD.76197 => __i_241
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_238 = __n_277 + -1;
  # DEBUG __nD.76178 => __n_238
  # DEBUG __result$8D.76196 => __i$8_242
  # DEBUG __result$_M_pD.76197 => __i_241
  # DEBUG __first$8D.76198 => __position$8_240
  # DEBUG __first$_M_pD.76199 => __position_239
  # DEBUG __nD.76178 => __n_238
  if (__n_238 <= 0)
    goto <bb 62>;
  else
    goto <bb 63>;
;;    succ:       62 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 61, next block 63, flags: (NEW)
;;    pred:       61 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_225 = PHI <__i_241(61)>
  # RANGE [0, 4294967295]
  # __i$8_221 = PHI <__i$8_242(61)>
  goto <bb 64>;
;;    succ:       64 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 1, count 0, freq 596, maybe hot
;;    prev block 62, next block 64, flags: (NEW)
;;    pred:       61 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 52>;
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       62 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  # __i$8_280 = PHI <__i$8_221(62), __i$8_19(50)>
  # PT = { D.76203 } (escaped heap)
  # __i_285 = PHI <__i_225(62), __i_21(50)>
  # .MEM_291 = PHI <.MEM_301(62), .MEM_67(50)>
  # .MEM_74 = VDEF <.MEM_291>
  MEM[(struct _Bit_iteratorD.24805 *)this_3(D) + 16B] = __i_285;
  # .MEM_75 = VDEF <.MEM_74>
  MEM[(struct _Bit_iteratorD.24805 *)this_3(D) + 24B] = __i$8_280;
  # DEBUG D#347ptD.0 => &this_3(D)->D.41946
  # DEBUG thisD.76141 => D#347ptD.0
  if (SR.574_66 != 0B)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#170ptD.0 => &D#347ptD.0->_M_implD.41472
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _194 = MEM[(long unsigned intD.14 * *)this_3(D) + 32B];
  # DEBUG D#50ptD.0 => D#170ptD.0
  # DEBUG thisD.76143 => D#50ptD.0
  _196 = (long intD.12) _194;
  _198 = _196 - __first.47_126;
  # DEBUG D#173ptD.0 => _198 /[ex] 8
  # DEBUG D#172ptD.0 => (const size_tD.2818) D#173ptD.0
  # DEBUG __nD.76142 => D#172ptD.0
  # RANGE [0, 18446744073709551615]
  _199 = (long unsigned intD.14) _198;
  # RANGE [0, 18446744073709551615]
  _200 = -_199;
  # PT = nonlocal escaped 
  _201 = _194 + _200;
  # DEBUG D#171ptD.0 => &D#347ptD.0->_M_implD.41472
  # DEBUG D#168ptD.0 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#172ptD.0
  # DEBUG __pD.76146 => _201
  # DEBUG __aD.76144 => D#168ptD.0
  # DEBUG __nD.76145 => D#169ptD.0
  # DEBUG D#167ptD.0 => D#169ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  # DEBUG D#165ptD.0 => D#167ptD.0
  # DEBUG __pD.76149 => _201
  # DEBUG thisD.76147 => D#164ptD.0
  # DEBUG D.76148 => D#165ptD.0
  # .MEM_309 = VDEF <.MEM_75>
  # USE = nonlocal null { D.76203 } (escaped heap)
  # CLB = nonlocal null { D.76203 } (escaped heap)
  _ZdlPvD.2766 (_201);
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [10.1%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_250 = PHI <.MEM_309(65), .MEM_75(64)>
  # DEBUG __nD.74408 => NULL
  # PT = { D.76203 } (escaped heap)
  _16 = _47 + prephitmp_89;
  # .MEM_17 = VDEF <.MEM_250>
  this_3(D)->D.41946._M_implD.41472._M_end_of_storageD.41476 = _16;
  # .MEM_76 = VDEF <.MEM_17>
  MEM[(struct _Bit_iteratorD.24805 *)this_3(D)] = _47;
  # .MEM_77 = VDEF <.MEM_76>
  MEM[(struct _Bit_iteratorD.24805 *)this_3(D) + 8B] = 0;
  # DEBUG D#265ptD.0 => {CLOBBER}
  # DEBUG __start$_M_pD.74468 => D#265ptD.0
  # DEBUG D#266ptD.0 => {CLOBBER}
  # DEBUG __start$_M_offsetD.74469 => D#266ptD.0
  # .MEM_20 = VDEF <.MEM_77>
  __iD.68282 ={v} {CLOBBER};
  # DEBUG D#267ptD.0 => {CLOBBER}
  # DEBUG __iD.74470 => D#267ptD.0
  # DEBUG D#268ptD.0 => {CLOBBER}
  # DEBUG __i$8D.74471 => D#268ptD.0
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 965, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_64(21), .MEM_20(66), .MEM_62(20)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 68, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 657, should be 900
;;    prev block 67, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [68.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#264ptD.0 => &this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.74388 => D#264ptD.0
  # DEBUG __iD.74389 => 1
  # DEBUG __tmp$_M_pD.74397 => __last$_M_p_4
  # VUSE <.MEM_2(D)>
  __last$8_122 = MEM[(const struct _Bit_iteratorD.24805 &)this_3(D) + 24];
  # DEBUG __tmp$_M_offsetD.74396 => __last$8_122
  # DEBUG thisD.74392 => &__tmpD.74390
  # DEBUG __iD.74391 => 1
  # DEBUG D#22ptD.0 => &__tmpD.74390.D.24857
  # DEBUG thisD.74394 => D#22ptD.0
  # DEBUG __iD.74393 => 1
  # RANGE [0, 4294967295] NONZERO 4294967295
  _123 = (long intD.12) __last$8_122;
  # RANGE [1, 4294967296] NONZERO 8589934591
  __n_24 = _123 + 1;
  # DEBUG __nD.74395 => __n_24
  # RANGE [0, 67108864] NONZERO 134217727
  _15 = __n_24 >> 6;
  # RANGE [0, 67108864] NONZERO 134217727
  _202 = (long unsigned intD.14) _15;
  # RANGE [0, 536870912] NONZERO 1073741816
  _153 = _202 * 8;
  # PT = nonlocal escaped 
  __result$_M_p_154 = __last$_M_p_4 + _153;
  # DEBUG __tmp$_M_pD.74397 => __result$_M_p_154
  # RANGE [0, 63] NONZERO 63
  __n_152 = __n_24 & 63;
  # DEBUG __nD.74395 => __n_152
  # DEBUG D#264ptD.0 => &this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.74388 => D#264ptD.0
  # DEBUG __iD.74389 => 1
  # DEBUG __tmp$_M_offsetD.74396 => __last$8_122
  # DEBUG thisD.74392 => &__tmpD.74390
  # DEBUG __iD.74391 => 1
  # DEBUG D#22ptD.0 => &__tmpD.74390.D.24857
  # DEBUG thisD.74394 => D#22ptD.0
  # DEBUG __iD.74393 => 1
  # DEBUG __tmp$_M_pD.74397 => __result$_M_p_154
  # DEBUG __nD.74395 => __n_152
  # DEBUG __tmp$_M_pD.74397 => __result$_M_p_154
  # DEBUG __nD.74395 => __n_152
  # RANGE [0, 63] NONZERO 63
  __result$_M_offset_43 = (unsigned intD.13) __n_152;
  # DEBUG __tmp$_M_offsetD.74396 => __result$_M_offset_43
  # DEBUG D#23ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_pD.74397 => D#23ptD.0
  # DEBUG D#24ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_offsetD.74396 => D#24ptD.0
  # DEBUG D#228ptD.0 => __positionD.41886
  # DEBUG D#228ptD.0 => __positionD.41886
  # DEBUG D#229ptD.0 => this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG D#229ptD.0 => this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG D#230ptD.0 => D.70627
  # DEBUG D#230ptD.0 => D.70627
  # DEBUG __it$D24857$_M_pD.74385 => __last$_M_p_4
  # DEBUG __it$D24857$_M_offsetD.74387 => __last$8_122
  # DEBUG __it$D24857$_M_pD.74382 => __position_18
  # DEBUG __it$D24857$_M_offsetD.74384 => __position$8_13
  # DEBUG __it$D24857$_M_pD.76015 => __result$_M_p_154
  # DEBUG __it$D24857$_M_offsetD.76017 => __result$_M_offset_43
  # DEBUG __it$D24857$_M_pD.76012 => __last$_M_p_4
  # DEBUG __it$D24857$_M_offsetD.76014 => __last$8_122
  # DEBUG __it$D24857$_M_pD.76009 => __position_18
  # DEBUG __it$D24857$_M_offsetD.76011 => __position$8_13
  # DEBUG __simpleD.76006 => 0
  # DEBUG __last$_M_pD.76042 => __last$_M_p_4
  # DEBUG __last$8D.76041 => __last$8_122
  # DEBUG __result$_M_pD.76040 => __result$_M_p_154
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_43
  # DEBUG D#11ptD.0 => &__lastD.76019.D.24857
  # DEBUG D#11ptD.0 => &__lastD.76019.D.24857
  # DEBUG D#12ptD.0 => &__firstD.76018.D.24857
  # DEBUG D#12ptD.0 => &__firstD.76018.D.24857
  # DEBUG __xD.76035 => D#11ptD.0
  # DEBUG __xD.76036 => D#11ptD.0
  # DEBUG __yD.76037 => D#12ptD.0
  # DEBUG __yD.76038 => D#12ptD.0
  _91 = (long intD.12) __last$_M_p_4;
  _92 = (long intD.12) __position_18;
  _93 = _91 - _92;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _94 = _93 * 8;
  _96 = _94 + _123;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _97 = (long intD.12) __position$8_13;
  __n_98 = _96 - _97;
  # DEBUG __nD.76021 => NULL
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_43
  # DEBUG __result$_M_pD.76040 => __result$_M_p_154
  # DEBUG __last$8D.76041 => __last$8_122
  # DEBUG __last$_M_pD.76042 => __last$_M_p_4
  # DEBUG __nD.76021 => __n_98
  if (__n_98 <= 0)
    goto <bb 16>;
  else
    goto <bb 3>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Bit_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator *)&__position]
Creating dr for MEM[(struct _Bit_iterator *)&__position + 8B]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator *)&__position + 8B]
Creating dr for this_3(D)->D.41946._M_impl._M_finish.D.24857._M_p
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 128
	Access function 3: 0
	Access function 4: 0
Creating dr for MEM[(long unsigned int * *)this_3(D) + 32B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int * *)this_3(D) + 32B]
Creating dr for MEM[(const struct _Bit_iterator &)this_3(D) + 24]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Bit_iterator &)this_3(D) + 24]
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__last$_M_p_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__last$_M_p_112
Creating dr for *__last$_M_p_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__last$_M_p_112
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Analyzing # of iterations of loop 1
  exit condition 0 < [__n_98 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) (__n_98 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 1
  exit condition 0 < [__n_98 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) (__n_98 + -1), bounded by 9223372036854775806
Creating dr for *__last$_M_p_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__last$_M_p_112
Creating dr for *__last$_M_p_112
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__last$_M_p_112
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Creating dr for *__result$_M_p_115
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__result$_M_p_115
Analyzing # of iterations of loop 1
  exit condition 0 < [__n_98 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) (__n_98 + -1), bounded by 9223372036854775806
Creating dr for *__position_18
analyze_innermost: success.
	base_address: __position_18
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__position_18
Creating dr for *__position_18
analyze_innermost: success.
	base_address: __position_18
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__position_18
Creating dr for *__position_18
analyze_innermost: success.
	base_address: __position_18
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__position_18
Creating dr for MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]._M_offset
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]
	Access function 0: 64
Creating dr for MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]._M_p
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]
	Access function 0: 0
Creating dr for MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]._M_offset
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]
	Access function 0: 64
Creating dr for MEM[(const struct _Bit_iterator *)this_3(D)].D.24857._M_offset
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Bit_iterator *)this_3(D)]
	Access function 0: 64
	Access function 1: 0
Creating dr for MEM[(const struct _Bit_iterator *)this_3(D)].D.24857._M_p
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Bit_iterator *)this_3(D)]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(const struct _Bit_iterator *)this_3(D) + 16B].D.24857._M_offset
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Bit_iterator *)this_3(D) + 16B]
	Access function 0: 64
	Access function 1: 0
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__i_131
analyze_innermost: success.
	base_address: _47 + prephitmp_11
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__i_131
Creating dr for *__i_131
analyze_innermost: success.
	base_address: _47 + prephitmp_11
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__i_131
Creating dr for *__position_267
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_267
Creating dr for *__position_267
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_267
Creating dr for *__position_267
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_267
Creating dr for *__position_267
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_267
Creating dr for *__i_275
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_275
Creating dr for *__i_275
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_275
Creating dr for MEM[(_Bit_type *)__i_275 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(_Bit_type *)__i_275 + 8B]
Creating dr for MEM[(_Bit_type *)__i_275 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(_Bit_type *)__i_275 + 8B]
Analyzing # of iterations of loop 2
  exit condition [(_Distance) __position$8_13 + -1, + , -1](no_overflow) != 0
  bounds on difference of bases: -9223372036854775806 ... 9223372036854775808
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) __position$8_13 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 2
  exit condition [(_Distance) __position$8_13 + -1, + , -1](no_overflow) != 0
  bounds on difference of bases: -9223372036854775806 ... 9223372036854775808
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) __position$8_13 + -1), bounded by 9223372036854775806
Creating dr for *__position_267
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_267
Creating dr for *__position_267
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_267
Creating dr for *__position_267
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_267
Creating dr for *__position_267
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_267
Creating dr for *__i_275
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_275
Creating dr for *__i_275
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_275
Creating dr for MEM[(_Bit_type *)__i_275 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(_Bit_type *)__i_275 + 8B]
Creating dr for MEM[(_Bit_type *)__i_275 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(_Bit_type *)__i_275 + 8B]
Analyzing # of iterations of loop 2
  exit condition [(_Distance) __position$8_13 + -1, + , -1](no_overflow) != 0
  bounds on difference of bases: -9223372036854775806 ... 9223372036854775808
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) __position$8_13 + -1), bounded by 9223372036854775806
Creating dr for *__i_173
analyze_innermost: success.
	base_address: __i_173
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__i_173
Creating dr for MEM[(struct vector *)this_3(D) + 16B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_3(D) + 16B]
Creating dr for MEM[(struct vector *)this_3(D) + 24B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_3(D) + 24B]
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__position_281
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_281
Creating dr for *__position_281
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_281
Creating dr for *__position_281
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_281
Creating dr for *__position_281
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_281
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Analyzing # of iterations of loop 3
  exit condition 0 < [__n_219 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) (__n_219 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 3
  exit condition 0 < [__n_219 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) (__n_219 + -1), bounded by 9223372036854775806
Creating dr for *__position_281
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_281
Creating dr for *__position_281
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_281
Creating dr for *__position_281
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_281
Creating dr for *__position_281
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__position_281
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Creating dr for *__i_284
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__i_284
Analyzing # of iterations of loop 3
  exit condition 0 < [__n_219 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) (__n_219 + -1), bounded by 9223372036854775806
Creating dr for MEM[(struct _Bit_iterator *)this_3(D) + 16B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator *)this_3(D) + 16B]
Creating dr for MEM[(struct _Bit_iterator *)this_3(D) + 24B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator *)this_3(D) + 24B]
Creating dr for MEM[(long unsigned int * *)this_3(D) + 32B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int * *)this_3(D) + 32B]
Creating dr for this_3(D)->D.41946._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 256
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Bit_iterator *)this_3(D)]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator *)this_3(D)]
Creating dr for MEM[(struct _Bit_iterator *)this_3(D) + 8B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Bit_iterator *)this_3(D) + 8B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:7, LOOPS:0, CONDITIONS:2, STMTS:27)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:4)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:4, LOOPS:0, CONDITIONS:1, STMTS:19)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:32)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:78, LOOPS:3, CONDITIONS:25, STMTS:731)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_68 bb_22 })
  {
    <bb 2>:
    # VUSE <.MEM_2(D)>
    __position_18 = MEM[(struct _Bit_iterator *)&__position];
    # DEBUG __position => __position_18
    # VUSE <.MEM_2(D)>
    __position$8_13 = MEM[(struct _Bit_iterator *)&__position + 8B];
    # DEBUG __position$8 => __position$8_13
    # VUSE <.MEM_2(D)>
    __last$_M_p_4 = this_3(D)->D.41946._M_impl._M_finish.D.24857._M_p;
    # DEBUG D#263 => &this_3(D)->D.41946._M_impl
    # VUSE <.MEM_2(D)>
    _22 = MEM[(long unsigned int * *)this_3(D) + 32B];
    # DEBUG D#50 => D#263
    # DEBUG this => D#50
    if (__last$_M_p_4 != _22)
      goto <bb 68>;
    else
      goto <bb 22>;

  }
  bb_3 (preds = {bb_68 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_15 (preds = {bb_13 }, succs = {bb_69 })
  {
    <bb 15>:
    # .MEM_246 = PHI <.MEM_260(13)>

  }
  bb_69 (preds = {bb_15 }, succs = {bb_16 })
  {
    <bb 69>:

  }
  bb_16 (preds = {bb_69 bb_68 }, succs = {bb_72 })
  {
    <bb 16>:
    # .MEM_293 = PHI <.MEM_246(69), .MEM_2(D)(68)>

  }
  bb_72 (preds = {bb_16 }, succs = {bb_17 bb_18 })
  {
    <bb 72>:
    # DEBUG D#15 => &__position
    # DEBUG D#15 => &__position
    # DEBUG this => D#15
    # DEBUG this => D#15
    _31 = 1 << __position$8_13;
    # DEBUG this => NULL
    # DEBUG __x => __position_18
    # DEBUG __y => _31
    # DEBUG this => &D.68278
    # DEBUG __x => __x_7(D)
    if (__x_7(D) != 0)
      goto <bb 17>;
    else
      goto <bb 18>;

  }
  bb_17 (preds = {bb_72 }, succs = {bb_19 })
  {
    <bb 17>:
    # VUSE <.MEM_293>
    _26 = *__position_18;
    _27 = _26 | _31;
    goto <bb 19>;

  }
  bb_18 (preds = {bb_72 }, succs = {bb_19 })
  {
    <bb 18>:
    # VUSE <.MEM_293>
    _28 = *__position_18;
    _29 = ~_31;
    _30 = _28 & _29;

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_21 bb_20 })
  {
    <bb 19>:
    # cstore_61 = PHI <_27(17), _30(18)>
    # .MEM_60 = VDEF <.MEM_293>
    *__position_18 = cstore_61;
    # DEBUG D#273 => &this_3(D)->D.41946._M_impl._M_finish
    # DEBUG this => D#273
    # DEBUG D#16 => &D#273->D.24857
    # DEBUG this => D#16
    if (__last$8_122 == 63)
      goto <bb 21>;
    else
      goto <bb 20>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_67 })
  {
    <bb 20>:
    _23 = __last$8_122 + 1;
    # .MEM_62 = VDEF <.MEM_60>
    MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]._M_offset = _23;
    goto <bb 67>;

  }
  bb_21 (preds = {bb_19 }, succs = {bb_67 })
  {
    <bb 21>:
    # .MEM_63 = VDEF <.MEM_60>
    MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]._M_offset = 0;
    _25 = __last$_M_p_4 + 8;
    # .MEM_64 = VDEF <.MEM_63>
    MEM[(struct _Bit_iterator_base *)this_3(D) + 16B]._M_p = _25;
    goto <bb 67>;

  }
  bb_22 (preds = {bb_2 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # DEBUG this => this_3(D)
    # DEBUG __n => 1
    # DEBUG __n => 1
    # DEBUG __s => "vector<bool>::_M_insert_aux"
    # DEBUG D#236 => this_3(D)
    # DEBUG this => D#236
    # DEBUG D#235 => D#236
    # DEBUG __isize => 9223372036854775744
    # DEBUG D#234 => &D#235->D.41946
    # DEBUG this => D#234
    # DEBUG __a => D#233
    # DEBUG D#232 => D#233
    # DEBUG D#231 => D#232
    # DEBUG this => D#231
    # DEBUG __asize => NULL
    # DEBUG this => this_3(D)
    # DEBUG this => this_3(D)
    # DEBUG D#35 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#35
    # VUSE <.MEM_2(D)>
    _12 = MEM[(const struct _Bit_iterator *)this_3(D)].D.24857._M_offset;
    # VUSE <.MEM_2(D)>
    _133 = MEM[(const struct _Bit_iterator *)this_3(D)].D.24857._M_p;
    # DEBUG this => D#26
    # DEBUG __x => _133
    # DEBUG __y => _12
    # DEBUG this => D#26
    # DEBUG this => this_3(D)
    # DEBUG D#34 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#34
    # VUSE <.MEM_2(D)>
    _134 = MEM[(const struct _Bit_iterator *)this_3(D) + 16B].D.24857._M_offset;
    # DEBUG this => D#26
    # DEBUG __x => __last$_M_p_4
    # DEBUG __y => _134
    # DEBUG this => D#26
    # DEBUG __x => D#11
    # DEBUG __x => D#11
    # DEBUG __y => D#12
    # DEBUG __y => D#12
    _136 = (long int) __last$_M_p_4;
    _137 = (long int) _133;
    _138 = _136 - _137;
    _139 = _138 * 8;
    _140 = (long int) _134;
    _141 = _139 + _140;
    _142 = (long int) _12;
    _143 = _141 - _142;
    _144 = (const long unsigned int) _143;
    if (_144 == 9223372036854775744)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 }, succs = {})
  {
    <bb 23>:
    # .MEM_310 = VDEF <.MEM_2(D)>
    std::__throw_length_error ("vector<bool>::_M_insert_aux");

  }
  bb_24 (preds = {bb_22 }, succs = {bb_27 bb_25 })
  {
    <bb 24>:
    # DEBUG this => this_3(D)
    # DEBUG this => this_3(D)
    # DEBUG D#35 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#35
    # DEBUG this => D#26
    # DEBUG __x => _133
    # DEBUG __y => _12
    # DEBUG this => D#26
    # DEBUG this => this_3(D)
    # DEBUG D#34 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#34
    # DEBUG this => D#26
    # DEBUG __x => __last$_M_p_4
    # DEBUG __y => _134
    # DEBUG this => D#26
    # DEBUG __x => D#11
    # DEBUG __x => D#11
    # DEBUG __y => D#12
    # DEBUG __y => D#12
    # DEBUG this => this_3(D)
    # DEBUG this => this_3(D)
    # DEBUG D#35 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#35
    # DEBUG this => D#26
    # DEBUG __x => _133
    # DEBUG __y => _12
    # DEBUG this => D#26
    # DEBUG this => this_3(D)
    # DEBUG D#34 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#34
    # DEBUG this => D#26
    # DEBUG __x => __last$_M_p_4
    # DEBUG __y => _134
    # DEBUG this => D#26
    # DEBUG __x => D#11
    # DEBUG __x => D#11
    # DEBUG __y => D#12
    # DEBUG __y => D#12
    # DEBUG __a => &D.76091
    # DEBUG __b => &__n
    if (_144 == 0)
      goto <bb 27>;
    else
      goto <bb 25>;

  }
  bb_25 (preds = {bb_24 }, succs = {bb_28 bb_26 })
  {
    <bb 25>:
    __len_149 = _144 + _144;
    # DEBUG __len => __len_149
    # DEBUG this => this_3(D)
    # DEBUG this => this_3(D)
    # DEBUG D#35 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#35
    # DEBUG this => D#26
    # DEBUG __x => _133
    # DEBUG __y => _12
    # DEBUG this => D#26
    # DEBUG this => this_3(D)
    # DEBUG D#34 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#34
    # DEBUG this => D#26
    # DEBUG __x => __last$_M_p_4
    # DEBUG __y => _134
    # DEBUG this => D#26
    # DEBUG __x => D#11
    # DEBUG __x => D#11
    # DEBUG __y => D#12
    # DEBUG __y => D#12
    if (_144 > __len_149)
      goto <bb 28>;
    else
      goto <bb 26>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    pretmp_300 = MIN_EXPR <__len_149, 9223372036854775744>;
    pretmp_304 = pretmp_300 + 63;
    pretmp_306 = pretmp_304 >> 6;
    pretmp_308 = pretmp_306 * 8;

  }
  bb_27 (preds = {bb_26 bb_24 }, succs = {bb_74 })
  {
    <bb 27>:
    # prephitmp_39 = PHI <pretmp_308(26), 8(24)>

  }
  bb_74 (preds = {bb_27 }, succs = {bb_28 })
  {
    <bb 74>:
    # DEBUG __len => NULL
    # DEBUG this => this_3(D)
    # DEBUG this => this_3(D)
    # DEBUG D#35 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __x => D#35
    # DEBUG this => D#26
    # DEBUG __x => _133
    # DEBUG __y => _12
    # DEBUG this => this_3(D)
    # DEBUG D#34 => &MEM[(const struct vector *)this_3(D)].D.41946._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#34
    # DEBUG this => D#26
    # DEBUG __x => __last$_M_p_4
    # DEBUG __y => _134
    # DEBUG this => D#26
    # DEBUG __x => D#11
    # DEBUG __x => D#11
    # DEBUG __y => D#12
    # DEBUG __y => D#12
    # DEBUG D#236 => this_3(D)
    # DEBUG this => D#236
    # DEBUG D#235 => D#236
    # DEBUG __isize => 9223372036854775744
    # DEBUG D#234 => &D#235->D.41946
    # DEBUG this => D#234
    # DEBUG __a => D#233
    # DEBUG D#232 => D#233
    # DEBUG D#231 => D#232
    # DEBUG this => D#231
    # DEBUG __asize => NULL

  }
  bb_28 (preds = {bb_25 bb_74 }, succs = {bb_30 bb_29 })
  {
    <bb 28>:
    # prephitmp_89 = PHI <1152921504606846968(25), prephitmp_39(74)>
    # DEBUG __len => NULL
    # DEBUG D#275 => &this_3(D)->D.41946
    # DEBUG D#244 => D#275
    # DEBUG __n => NULL
    # DEBUG this => D#244
    # DEBUG D#243 => D#244
    # DEBUG __n => NULL
    # DEBUG D#242 => &D#243->_M_impl
    # DEBUG D#241 => D#242
    # DEBUG __n => NULL
    # DEBUG __a => D#241
    # DEBUG D#240 => D#241
    # DEBUG D#238 => D#240
    # DEBUG D#239 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#238
    # DEBUG D.74405 => D#239
    # DEBUG D#237 => D#238
    # DEBUG D#231 => D#237
    # DEBUG this => D#231
    # .MEM_65 = VDEF <.MEM_2(D)>
    _47 = operator new (prephitmp_89);
    # DEBUG __q => _47
    # DEBUG __r => _47
    # DEBUG this => &__start
    # DEBUG __x => NULL
    # DEBUG __y => 0
    # DEBUG D#14 => &__start.D.24857
    # DEBUG this => D#14
    # DEBUG __x => NULL
    # DEBUG __y => 0
    # DEBUG this => D#14
    # DEBUG __start$_M_p => _47
    # DEBUG __start$_M_offset => 0
    # DEBUG this => &D.68285
    # DEBUG __x => &__position
    # DEBUG D#26 => &D.68285.D.24977
    # DEBUG this => D#26
    # DEBUG __x => __position_18
    # DEBUG __y => __position$8_13
    # DEBUG this => D#26
    # DEBUG this => this_3(D)
    # VUSE <.MEM_65>
    SR.574_66 = MEM[(struct vector *)this_3(D)];
    # DEBUG D#274 => MEM[(struct vector *)this_3(D) + 8B]
    # DEBUG this => &D.68284
    # DEBUG __x => &D.68283
    # DEBUG D#26 => &D.68284.D.24977
    # DEBUG this => D#26
    # DEBUG __x => SR.574_66
    # DEBUG __y => D#274
    # DEBUG this => D#26
    # DEBUG D.74475 => D#274
    # DEBUG D#259 => this_3(D)
    # DEBUG D#260 => D.68284
    # DEBUG D#261 => D.68285
    # DEBUG D#261 => D.68285
    # DEBUG D#262 => __start
    # DEBUG this => D#259
    # DEBUG __last$D24977$_M_p => __position_18
    # DEBUG __first => SR.574_66
    # DEBUG __last => __position_18
    # DEBUG __result => _47
    # DEBUG __it => __position_18
    # DEBUG __it => __position_18
    # DEBUG __it => SR.574_66
    # DEBUG __it => SR.574_66
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => _47
    # DEBUG __it => _47
    # DEBUG __it => _47
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => _47
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => _47
    __last.46_125 = (long int) __position_18;
    __first.47_126 = (long int) SR.574_66;
    _127 = __last.46_125 - __first.47_126;
    _Num_128 = _127 /[ex] 8;
    # DEBUG _Num => _Num_128
    if (_Num_128 != 0)
      goto <bb 30>;
    else
      goto <bb 29>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_31 })
  {
    <bb 29>:
    pretmp_268 = (long unsigned int) _127;
    goto <bb 31>;

  }
  bb_30 (preds = {bb_28 }, succs = {bb_31 })
  {
    <bb 30>:
    _129 = (long unsigned int) _127;
    # .MEM_272 = VDEF <.MEM_65>
    __builtin_memmove (_47, SR.574_66, _129);

  }
  bb_31 (preds = {bb_29 bb_30 }, succs = {bb_32 bb_33 })
  {
    <bb 31>:
    # .MEM_245 = PHI <.MEM_65(29), .MEM_272(30)>
    # prephitmp_11 = PHI <pretmp_268(29), _129(30)>
    __i_131 = _47 + prephitmp_11;
    # DEBUG __q => __i_131
    # DEBUG this => NULL
    # DEBUG __x => __i_131
    # DEBUG __y => 0
    # DEBUG this => D#14
    # DEBUG __x => __i_131
    # DEBUG __y => 0
    # DEBUG this => D#14
    # DEBUG this => NULL
    # DEBUG __x => __position_18
    # DEBUG __y => 0
    # DEBUG this => D#25
    # DEBUG __x => __position_18
    # DEBUG __y => 0
    # DEBUG this => D#25
    # DEBUG D#257 => __last
    # DEBUG D#257 => __last
    # DEBUG __it$D24977$_M_p => __position_18
    # DEBUG __it$D24977$_M_offset => __position$8_13
    # DEBUG __it$D24977$_M_p => __position_18
    # DEBUG __it$D24977$_M_offset => 0
    # DEBUG __it$D24857$_M_p => __i_131
    # DEBUG __it$D24857$_M_offset => 0
    # DEBUG __it$D24977$_M_p => __position_18
    # DEBUG __it$D24977$_M_offset => __position$8_13
    # DEBUG __it$D24977$_M_p => __position_18
    # DEBUG __it$D24977$_M_offset => 0
    # DEBUG __simple => 0
    # DEBUG __first$_M_p => __position_18
    # DEBUG __first$8 => 0
    # DEBUG __result$_M_p => __i_131
    # DEBUG __result$8 => 0
    # DEBUG D#11 => &__last.D.24977
    # DEBUG D#11 => &__last.D.24977
    # DEBUG D#12 => &__first.D.24977
    # DEBUG D#12 => &__first.D.24977
    # DEBUG __x => D#11
    # DEBUG __x => D#11
    # DEBUG __y => D#12
    # DEBUG __y => D#12
    __n_166 = (_Distance) __position$8_13;
    # DEBUG __n => NULL
    # DEBUG __result$8 => 0
    # DEBUG __result$_M_p => __i_131
    # DEBUG __first$8 => 0
    # DEBUG __first$_M_p => __position_18
    # DEBUG __n => __n_166
    if (__n_166 == 0)
      goto <bb 32>;
    else
      goto <bb 33>;

  }
  bb_32 (preds = {bb_31 }, succs = {bb_47 })
  {
    <bb 32>:
    # VUSE <.MEM_245>
    pretmp_38 = *__i_131;
    goto <bb 47>;

  }
  bb_33 (preds = {bb_31 }, succs = {bb_34 })
  {
    <bb 33>:
    # VUSE <.MEM_245>
    pretmp_36 = *__i_131;

  }
  bb_45 (preds = {bb_43 }, succs = {bb_71 })
  {
    <bb 45>:
    # __i_243 = PHI <__i_191(43)>
    # __result$8_228 = PHI <__result$8_192(43)>
    # prephitmp_220 = PHI <prephitmp_295(43)>
    # prephitmp_178 = PHI <prephitmp_297(43)>
    # prephitmp_176 = PHI <prephitmp_299(43)>

  }
  bb_71 (preds = {bb_45 }, succs = {bb_46 bb_47 })
  {
    <bb 71>:
    # DEBUG __i => __i_243
    # DEBUG __i$8 => __result$8_228
    # DEBUG D#20 => 0
    # DEBUG this => &__i
    # DEBUG D.74436 => D#20
    # DEBUG __tmp$D24857$_M_p => __i_243
    # DEBUG __tmp$D24857$_M_offset => __result$8_228
    # DEBUG D#19 => &__i.D.24857
    # DEBUG this => D#19
    # DEBUG __i$8 => __result$8_228 + 1
    if (__result$8_228 == 63)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_46 (preds = {bb_71 }, succs = {bb_47 })
  {
    <bb 46>:
    # DEBUG __i$8 => 0
    __i_55 = __i_243 + 8;
    # DEBUG __i => __i_55

  }
  bb_47 (preds = {bb_71 bb_46 bb_32 }, succs = {bb_73 })
  {
    <bb 47>:
    # __i_21 = PHI <__i_243(71), __i_55(46), __i_131(32)>
    # __i$8_19 = PHI <prephitmp_220(71), 0(46), 1(32)>
    # __i_173 = PHI <__i_243(71), __i_243(46), __i_131(32)>
    # .MEM_170 = PHI <.MEM_282(71), .MEM_282(46), .MEM_245(32)>
    # prephitmp_255 = PHI <prephitmp_176(71), prephitmp_176(46), 1(32)>
    # prephitmp_37 = PHI <prephitmp_178(71), prephitmp_178(46), pretmp_38(32)>

  }
  bb_73 (preds = {bb_47 }, succs = {bb_48 bb_49 })
  {
    <bb 73>:
    # DEBUG __i$8 => __i$8_19
    # DEBUG __i => __i_21
    # DEBUG D#17 => {CLOBBER}
    # DEBUG __tmp$D24857$_M_p => D#17
    # DEBUG D#18 => {CLOBBER}
    # DEBUG __tmp$D24857$_M_offset => D#18
    # DEBUG D#15 => &D.68288
    # DEBUG D#15 => &D.68288
    # DEBUG this => D#15
    # DEBUG this => D#15
    # DEBUG this => NULL
    # DEBUG __x => __i_173
    # DEBUG __y => NULL
    # DEBUG this => &D.68289
    # DEBUG __x => __x_7(D)
    if (__x_7(D) != 0)
      goto <bb 48>;
    else
      goto <bb 49>;

  }
  bb_48 (preds = {bb_73 }, succs = {bb_50 })
  {
    <bb 48>:
    _49 = prephitmp_37 | prephitmp_255;
    goto <bb 50>;

  }
  bb_49 (preds = {bb_73 }, succs = {bb_50 })
  {
    <bb 49>:
    _51 = ~prephitmp_255;
    _52 = prephitmp_37 & _51;

  }
  bb_50 (preds = {bb_48 bb_49 }, succs = {bb_77 })
  {
    <bb 50>:
    # cstore_68 = PHI <_49(48), _52(49)>

  }
  bb_77 (preds = {bb_50 }, succs = {bb_64 bb_51 })
  {
    <bb 77>:
    # .MEM_67 = VDEF <.MEM_170>
    *__i_173 = cstore_68;
    # DEBUG this => this_3(D)
    # VUSE <.MEM_67>
    __it$D24857$_M_p_70 = MEM[(struct vector *)this_3(D) + 16B];
    # VUSE <.MEM_67>
    __it$D24857$_M_offset_71 = MEM[(struct vector *)this_3(D) + 24B];
    # DEBUG D#250 => __position
    # DEBUG D#250 => __position
    # DEBUG D#251 => D.70632
    # DEBUG D#251 => D.70632
    # DEBUG D#252 => __i
    # DEBUG D#252 => __i
    # DEBUG __it$D24857$_M_p => __it$D24857$_M_p_70
    # DEBUG __it$D24857$_M_offset => __it$D24857$_M_offset_71
    # DEBUG __it$D24857$_M_p => __position_18
    # DEBUG __it$D24857$_M_offset => __position$8_13
    # DEBUG __it$D24857$_M_p => __i_21
    # DEBUG __it$D24857$_M_offset => __i$8_19
    # DEBUG __it$D24857$_M_p => __it$D24857$_M_p_70
    # DEBUG __it$D24857$_M_offset => __it$D24857$_M_offset_71
    # DEBUG __it$D24857$_M_p => __position_18
    # DEBUG __it$D24857$_M_offset => __position$8_13
    # DEBUG __simple => 0
    # DEBUG __first$_M_p => __position_18
    # DEBUG __first$8 => __position$8_13
    # DEBUG __result$_M_p => __i_21
    # DEBUG __result$8 => __i$8_19
    # DEBUG D#11 => &__last.D.24857
    # DEBUG D#11 => &__last.D.24857
    # DEBUG D#12 => &__first.D.24857
    # DEBUG D#12 => &__first.D.24857
    # DEBUG __x => D#11
    # DEBUG __x => D#11
    # DEBUG __y => D#12
    # DEBUG __y => D#12
    _212 = (long int) __it$D24857$_M_p_70;
    _214 = _212 - __last.46_125;
    _215 = _214 * 8;
    _216 = (long int) __it$D24857$_M_offset_71;
    _217 = _215 + _216;
    __n_219 = _217 - __n_166;
    # DEBUG __n => NULL
    # DEBUG __result$8 => __i$8_19
    # DEBUG __result$_M_p => __i_21
    # DEBUG __first$8 => __position$8_13
    # DEBUG __first$_M_p => __position_18
    # DEBUG __n => __n_219
    if (__n_219 <= 0)
      goto <bb 64>;
    else
      goto <bb 51>;

  }
  bb_51 (preds = {bb_77 }, succs = {bb_52 })
  {
    <bb 51>:

  }
  bb_62 (preds = {bb_61 }, succs = {bb_70 })
  {
    <bb 62>:
    # __i_225 = PHI <__i_241(61)>
    # __i$8_221 = PHI <__i$8_242(61)>

  }
  bb_70 (preds = {bb_62 }, succs = {bb_64 })
  {
    <bb 70>:
    goto <bb 64>;

  }
  bb_64 (preds = {bb_70 bb_77 }, succs = {bb_65 bb_66 })
  {
    <bb 64>:
    # __i$8_280 = PHI <__i$8_221(70), __i$8_19(77)>
    # __i_285 = PHI <__i_225(70), __i_21(77)>
    # .MEM_291 = PHI <.MEM_301(70), .MEM_67(77)>
    # .MEM_74 = VDEF <.MEM_291>
    MEM[(struct _Bit_iterator *)this_3(D) + 16B] = __i_285;
    # .MEM_75 = VDEF <.MEM_74>
    MEM[(struct _Bit_iterator *)this_3(D) + 24B] = __i$8_280;
    # DEBUG D#347 => &this_3(D)->D.41946
    # DEBUG this => D#347
    if (SR.574_66 != 0B)
      goto <bb 65>;
    else
      goto <bb 66>;

  }
  bb_65 (preds = {bb_64 }, succs = {bb_66 })
  {
    <bb 65>:
    # DEBUG D#170 => &D#347->_M_impl
    # VUSE <.MEM_75>
    _194 = MEM[(long unsigned int * *)this_3(D) + 32B];
    # DEBUG D#50 => D#170
    # DEBUG this => D#50
    _196 = (long int) _194;
    _198 = _196 - __first.47_126;
    # DEBUG D#173 => _198 /[ex] 8
    # DEBUG D#172 => (const size_t) D#173
    # DEBUG __n => D#172
    _199 = (long unsigned int) _198;
    _200 = -_199;
    _201 = _194 + _200;
    # DEBUG D#171 => &D#347->_M_impl
    # DEBUG D#168 => D#171
    # DEBUG D#169 => D#172
    # DEBUG __p => _201
    # DEBUG __a => D#168
    # DEBUG __n => D#169
    # DEBUG D#167 => D#169
    # DEBUG D#166 => D#168
    # DEBUG D#164 => D#166
    # DEBUG D#165 => D#167
    # DEBUG __p => _201
    # DEBUG this => D#164
    # DEBUG D.76148 => D#165
    # .MEM_309 = VDEF <.MEM_75>
    operator delete (_201);

  }
  bb_66 (preds = {bb_65 bb_64 }, succs = {bb_76 })
  {
    <bb 66>:
    # .MEM_250 = PHI <.MEM_309(65), .MEM_75(64)>
    # DEBUG __n => NULL
    _16 = _47 + prephitmp_89;
    # .MEM_17 = VDEF <.MEM_250>
    this_3(D)->D.41946._M_impl._M_end_of_storage = _16;
    # .MEM_76 = VDEF <.MEM_17>
    MEM[(struct _Bit_iterator *)this_3(D)] = _47;
    # .MEM_77 = VDEF <.MEM_76>
    MEM[(struct _Bit_iterator *)this_3(D) + 8B] = 0;
    # DEBUG D#265 => {CLOBBER}
    # DEBUG __start$_M_p => D#265
    # DEBUG D#266 => {CLOBBER}
    # DEBUG __start$_M_offset => D#266
    # .MEM_20 = VDEF <.MEM_77>
    __i ={v} {CLOBBER};
    # DEBUG D#267 => {CLOBBER}
    # DEBUG __i => D#267
    # DEBUG D#268 => {CLOBBER}
    # DEBUG __i$8 => D#268
    goto <bb 76>;

  }
  bb_67 (preds = {bb_21 bb_20 }, succs = {bb_76 })
  {
    <bb 67>:
    # .MEM_171 = PHI <.MEM_64(21), .MEM_62(20)>

  }
  bb_76 (preds = {bb_67 bb_66 }, succs = {bb_75 })
  {
    <bb 76>:
    # .MEM_1 = PHI <.MEM_171(67), .MEM_20(66)>

  }
  bb_75 (preds = {bb_76 }, succs = {bb_1 })
  {
    <bb 75>:
    # VUSE <.MEM_1>
    return;

  }
  bb_68 (preds = {bb_2 }, succs = {bb_16 bb_3 })
  {
    <bb 68>:
    # DEBUG D#264 => &this_3(D)->D.41946._M_impl._M_finish
    # DEBUG this => D#264
    # DEBUG __i => 1
    # DEBUG __tmp$_M_p => __last$_M_p_4
    # VUSE <.MEM_2(D)>
    __last$8_122 = MEM[(const struct _Bit_iterator &)this_3(D) + 24];
    # DEBUG __tmp$_M_offset => __last$8_122
    # DEBUG this => &__tmp
    # DEBUG __i => 1
    # DEBUG D#22 => &__tmp.D.24857
    # DEBUG this => D#22
    # DEBUG __i => 1
    _123 = (long int) __last$8_122;
    __n_24 = _123 + 1;
    # DEBUG __n => __n_24
    _15 = __n_24 >> 6;
    _202 = (long unsigned int) _15;
    _153 = _202 * 8;
    __result$_M_p_154 = __last$_M_p_4 + _153;
    # DEBUG __tmp$_M_p => __result$_M_p_154
    __n_152 = __n_24 & 63;
    # DEBUG __n => __n_152
    # DEBUG D#264 => &this_3(D)->D.41946._M_impl._M_finish
    # DEBUG this => D#264
    # DEBUG __i => 1
    # DEBUG __tmp$_M_offset => __last$8_122
    # DEBUG this => &__tmp
    # DEBUG __i => 1
    # DEBUG D#22 => &__tmp.D.24857
    # DEBUG this => D#22
    # DEBUG __i => 1
    # DEBUG __tmp$_M_p => __result$_M_p_154
    # DEBUG __n => __n_152
    # DEBUG __tmp$_M_p => __result$_M_p_154
    # DEBUG __n => __n_152
    __result$_M_offset_43 = (unsigned int) __n_152;
    # DEBUG __tmp$_M_offset => __result$_M_offset_43
    # DEBUG D#23 => {CLOBBER}
    # DEBUG __tmp$_M_p => D#23
    # DEBUG D#24 => {CLOBBER}
    # DEBUG __tmp$_M_offset => D#24
    # DEBUG D#228 => __position
    # DEBUG D#228 => __position
    # DEBUG D#229 => this_3(D)->D.41946._M_impl._M_finish
    # DEBUG D#229 => this_3(D)->D.41946._M_impl._M_finish
    # DEBUG D#230 => D.70627
    # DEBUG D#230 => D.70627
    # DEBUG __it$D24857$_M_p => __last$_M_p_4
    # DEBUG __it$D24857$_M_offset => __last$8_122
    # DEBUG __it$D24857$_M_p => __position_18
    # DEBUG __it$D24857$_M_offset => __position$8_13
    # DEBUG __it$D24857$_M_p => __result$_M_p_154
    # DEBUG __it$D24857$_M_offset => __result$_M_offset_43
    # DEBUG __it$D24857$_M_p => __last$_M_p_4
    # DEBUG __it$D24857$_M_offset => __last$8_122
    # DEBUG __it$D24857$_M_p => __position_18
    # DEBUG __it$D24857$_M_offset => __position$8_13
    # DEBUG __simple => 0
    # DEBUG __last$_M_p => __last$_M_p_4
    # DEBUG __last$8 => __last$8_122
    # DEBUG __result$_M_p => __result$_M_p_154
    # DEBUG __result$_M_offset => __result$_M_offset_43
    # DEBUG D#11 => &__last.D.24857
    # DEBUG D#11 => &__last.D.24857
    # DEBUG D#12 => &__first.D.24857
    # DEBUG D#12 => &__first.D.24857
    # DEBUG __x => D#11
    # DEBUG __x => D#11
    # DEBUG __y => D#12
    # DEBUG __y => D#12
    _91 = (long int) __last$_M_p_4;
    _92 = (long int) __position_18;
    _93 = _91 - _92;
    _94 = _93 * 8;
    _96 = _94 + _123;
    _97 = (long int) __position$8_13;
    __n_98 = _96 - _97;
    # DEBUG __n => NULL
    # DEBUG __result$_M_offset => __result$_M_offset_43
    # DEBUG __result$_M_p => __result$_M_p_154
    # DEBUG __last$8 => __last$8_122
    # DEBUG __last$_M_p => __last$_M_p_4
    # DEBUG __n => __n_98
    if (__n_98 <= 0)
      goto <bb 16>;
    else
      goto <bb 3>;

  }
  loop_1 (header = 4, latch = 14, niter = (unsigned long) (__n_98 + -1), upper_bound = 9223372036854775806)
  {
    bb_4 (preds = {bb_3 bb_14 }, succs = {bb_6 bb_5 })
    {
      <bb 4>:
      # __n_258 = PHI <__n_98(3), __n_121(14)>
      # __last$8_259 = PHI <__last$8_122(3), __last$8_104(14)>
      # __last$_M_p_262 = PHI <__last$_M_p_4(3), __last$_M_p_112(14)>
      # __result$_M_offset_263 = PHI <__result$_M_offset_43(3), __result$_M_offset_110(14)>
      # __result$_M_p_264 = PHI <__result$_M_p_154(3), __result$_M_p_115(14)>
      # .MEM_286 = PHI <.MEM_2(D)(3), .MEM_260(14)>
      # DEBUG __result$_M_offset => __result$_M_offset_263
      # DEBUG __result$_M_p => __result$_M_p_264
      # DEBUG __last$8 => __last$8_259
      # DEBUG __last$_M_p => __last$_M_p_262
      # DEBUG __n => __n_258
      # DEBUG this => &__last
      # DEBUG D#21 => &__last.D.24857
      # DEBUG this => D#21
      # DEBUG __last$8 => __last$8_259 + 4294967295
      if (__last$8_259 == 0)
        goto <bb 6>;
      else
        goto <bb 5>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_7 })
    {
      <bb 5>:
      __last$8_101 = __last$8_259 + 4294967295;
      pretmp_223 = 1 << __last$8_101;
      goto <bb 7>;

    }
    bb_6 (preds = {bb_4 }, succs = {bb_7 })
    {
      <bb 6>:
      # DEBUG __last$8 => 63
      __last$_M_p_103 = __last$_M_p_262 + 18446744073709551608;
      # DEBUG __last$_M_p => __last$_M_p_103

    }
    bb_7 (preds = {bb_5 bb_6 }, succs = {bb_9 bb_8 })
    {
      <bb 7>:
      # __last$_M_p_112 = PHI <__last$_M_p_262(5), __last$_M_p_103(6)>
      # __last$8_104 = PHI <__last$8_101(5), 63(6)>
      # prephitmp_248 = PHI <pretmp_223(5), 9223372036854775808(6)>
      # DEBUG __last$8 => __last$8_104
      # DEBUG __last$_M_p => __last$_M_p_112
      # DEBUG this => D#15
      # DEBUG this => D#15
      # DEBUG this => NULL
      # DEBUG __x => __last$_M_p_112
      # DEBUG __y => 1 << __last$8_104
      # DEBUG this => &__result
      # DEBUG D#21 => &__result.D.24857
      # DEBUG this => D#21
      # DEBUG __result$_M_offset => __result$_M_offset_263 + 4294967295
      if (__result$_M_offset_263 == 0)
        goto <bb 9>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_10 })
    {
      <bb 8>:
      __result$_M_offset_107 = __result$_M_offset_263 + 4294967295;
      pretmp_195 = 1 << __result$_M_offset_107;
      goto <bb 10>;

    }
    bb_9 (preds = {bb_7 }, succs = {bb_10 })
    {
      <bb 9>:
      # DEBUG __result$_M_offset => 63
      __result$_M_p_109 = __result$_M_p_264 + 18446744073709551608;
      # DEBUG __result$_M_p => __result$_M_p_109

    }
    bb_10 (preds = {bb_8 bb_9 }, succs = {bb_11 bb_12 })
    {
      <bb 10>:
      # __result$_M_p_115 = PHI <__result$_M_p_264(8), __result$_M_p_109(9)>
      # __result$_M_offset_110 = PHI <__result$_M_offset_107(8), 63(9)>
      # prephitmp_56 = PHI <pretmp_195(8), 9223372036854775808(9)>
      # DEBUG __result$_M_offset => __result$_M_offset_110
      # DEBUG __result$_M_p => __result$_M_p_115
      # DEBUG this => D#15
      # DEBUG this => D#15
      # DEBUG this => NULL
      # DEBUG __x => __result$_M_p_115
      # DEBUG __y => 1 << __result$_M_offset_110
      # DEBUG this => NULL
      # DEBUG __x => NULL
      # DEBUG this => NULL
      # VUSE <.MEM_286>
      _113 = *__last$_M_p_112;
      _114 = _113 & prephitmp_248;
      # DEBUG this => NULL
      # DEBUG __x => _114 != 0
      if (_114 != 0)
        goto <bb 11>;
      else
        goto <bb 12>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_13 })
    {
      <bb 11>:
      # VUSE <.MEM_286>
      _116 = *__result$_M_p_115;
      _117 = prephitmp_56 | _116;
      goto <bb 13>;

    }
    bb_12 (preds = {bb_10 }, succs = {bb_13 })
    {
      <bb 12>:
      # VUSE <.MEM_286>
      _118 = *__result$_M_p_115;
      _119 = ~prephitmp_56;
      _120 = _118 & _119;

    }
    bb_13 (preds = {bb_11 bb_12 }, succs = {bb_15 bb_14 })
    {
      <bb 13>:
      # cstore_261 = PHI <_117(11), _120(12)>
      # .MEM_260 = VDEF <.MEM_286>
      *__result$_M_p_115 = cstore_261;
      __n_121 = __n_258 + -1;
      # DEBUG __n => __n_121
      # DEBUG __result$_M_offset => __result$_M_offset_110
      # DEBUG __result$_M_p => __result$_M_p_115
      # DEBUG __last$8 => __last$8_104
      # DEBUG __last$_M_p => __last$_M_p_112
      # DEBUG __n => __n_121
      if (__n_121 <= 0)
        goto <bb 15>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_13 }, succs = {bb_4 })
    {
      <bb 14>:
      goto <bb 4>;

    }
  }
  loop_3 (header = 52, latch = 63, niter = (unsigned long) (__n_219 + -1), upper_bound = 9223372036854775806)
  {
    bb_52 (preds = {bb_51 bb_63 }, succs = {bb_53 bb_54 })
    {
      <bb 52>:
      # __n_277 = PHI <__n_219(51), __n_238(63)>
      # __position$8_278 = PHI <__position$8_13(51), __position$8_240(63)>
      # __i$8_279 = PHI <__i$8_19(51), __i$8_242(63)>
      # __position_281 = PHI <__position_18(51), __position_239(63)>
      # __i_284 = PHI <__i_21(51), __i_241(63)>
      # .MEM_290 = PHI <.MEM_67(51), .MEM_301(63)>
      # DEBUG __result$8 => __i$8_279
      # DEBUG __result$_M_p => __i_284
      # DEBUG __first$8 => __position$8_278
      # DEBUG __first$_M_p => __position_281
      # DEBUG __n => __n_277
      # DEBUG D#15 => &__first
      # DEBUG D#15 => &__first
      # DEBUG this => D#15
      # DEBUG this => D#15
      _222 = 1 << __position$8_278;
      # DEBUG this => NULL
      # DEBUG __x => __position_281
      # DEBUG __y => _222
      # DEBUG D#15 => &__result
      # DEBUG D#15 => &__result
      # DEBUG this => D#15
      # DEBUG this => D#15
      _224 = 1 << __i$8_279;
      # DEBUG this => NULL
      # DEBUG __x => __i_284
      # DEBUG __y => _224
      # DEBUG this => NULL
      # DEBUG __x => NULL
      # DEBUG this => NULL
      # VUSE <.MEM_290>
      _226 = *__position_281;
      _227 = _222 & _226;
      # DEBUG this => NULL
      # DEBUG __x => _227 != 0
      if (_227 != 0)
        goto <bb 53>;
      else
        goto <bb 54>;

    }
    bb_53 (preds = {bb_52 }, succs = {bb_55 })
    {
      <bb 53>:
      # VUSE <.MEM_290>
      _229 = *__i_284;
      _230 = _224 | _229;
      goto <bb 55>;

    }
    bb_54 (preds = {bb_52 }, succs = {bb_55 })
    {
      <bb 54>:
      # VUSE <.MEM_290>
      _231 = *__i_284;
      _232 = ~_224;
      _233 = _231 & _232;

    }
    bb_55 (preds = {bb_53 bb_54 }, succs = {bb_57 bb_56 })
    {
      <bb 55>:
      # cstore_302 = PHI <_230(53), _233(54)>
      # .MEM_301 = VDEF <.MEM_290>
      *__i_284 = cstore_302;
      # DEBUG this => &__first
      # DEBUG D#16 => &__first.D.24857
      # DEBUG this => D#16
      # DEBUG __first$8 => __position$8_278 + 1
      if (__position$8_278 == 63)
        goto <bb 57>;
      else
        goto <bb 56>;

    }
    bb_56 (preds = {bb_55 }, succs = {bb_58 })
    {
      <bb 56>:
      __position$8_234 = __position$8_278 + 1;
      goto <bb 58>;

    }
    bb_57 (preds = {bb_55 }, succs = {bb_58 })
    {
      <bb 57>:
      # DEBUG __first$8 => 0
      __position_235 = __position_281 + 8;
      # DEBUG __first$_M_p => __position_235

    }
    bb_58 (preds = {bb_56 bb_57 }, succs = {bb_60 bb_59 })
    {
      <bb 58>:
      # __position_239 = PHI <__position_281(56), __position_235(57)>
      # __position$8_240 = PHI <__position$8_234(56), 0(57)>
      # DEBUG __first$8 => __position$8_240
      # DEBUG __first$_M_p => __position_239
      # DEBUG this => &__result
      # DEBUG D#16 => &__result.D.24857
      # DEBUG this => D#16
      # DEBUG __result$8 => __i$8_279 + 1
      if (__i$8_279 == 63)
        goto <bb 60>;
      else
        goto <bb 59>;

    }
    bb_59 (preds = {bb_58 }, succs = {bb_61 })
    {
      <bb 59>:
      __i$8_236 = __i$8_279 + 1;
      goto <bb 61>;

    }
    bb_60 (preds = {bb_58 }, succs = {bb_61 })
    {
      <bb 60>:
      # DEBUG __result$8 => 0
      __i_237 = __i_284 + 8;
      # DEBUG __result$_M_p => __i_237

    }
    bb_61 (preds = {bb_59 bb_60 }, succs = {bb_62 bb_63 })
    {
      <bb 61>:
      # __i_241 = PHI <__i_284(59), __i_237(60)>
      # __i$8_242 = PHI <__i$8_236(59), 0(60)>
      # DEBUG __result$8 => __i$8_242
      # DEBUG __result$_M_p => __i_241
      __n_238 = __n_277 + -1;
      # DEBUG __n => __n_238
      # DEBUG __result$8 => __i$8_242
      # DEBUG __result$_M_p => __i_241
      # DEBUG __first$8 => __position$8_240
      # DEBUG __first$_M_p => __position_239
      # DEBUG __n => __n_238
      if (__n_238 <= 0)
        goto <bb 62>;
      else
        goto <bb 63>;

    }
    bb_63 (preds = {bb_61 }, succs = {bb_52 })
    {
      <bb 63>:
      goto <bb 52>;

    }
  }
  loop_2 (header = 34, latch = 44, niter = (unsigned long) ((_Distance) __position$8_13 + -1), upper_bound = 9223372036854775806)
  {
    bb_34 (preds = {bb_33 bb_44 }, succs = {bb_35 bb_36 })
    {
      <bb 34>:
      # __n_265 = PHI <__n_166(33), __n_188(44)>
      # __first$8_266 = PHI <0(33), __first$8_190(44)>
      # __position_267 = PHI <__position_18(33), __position_189(44)>
      # __result$8_273 = PHI <0(33), __result$8_192(44)>
      # __i_275 = PHI <__i_131(33), __i_191(44)>
      # .MEM_288 = PHI <.MEM_245(33), .MEM_282(44)>
      # prephitmp_35 = PHI <pretmp_36(33), prephitmp_297(44)>
      # DEBUG __result$8 => __result$8_273
      # DEBUG __result$_M_p => __i_275
      # DEBUG __first$8 => __first$8_266
      # DEBUG __first$_M_p => __position_267
      # DEBUG __n => __n_265
      # DEBUG D#27 => &__first
      # DEBUG D#27 => &__first
      # DEBUG this => D#27
      # DEBUG this => D#27
      _172 = 1 << __first$8_266;
      # DEBUG this => NULL
      # DEBUG __x => __position_267
      # DEBUG __y => _172
      # DEBUG this => NULL
      # VUSE <.MEM_288>
      _174 = *__position_267;
      _175 = _172 & _174;
      # DEBUG D#15 => &__result
      # DEBUG D#15 => &__result
      # DEBUG this => D#15
      # DEBUG this => D#15
      _177 = 1 << __result$8_273;
      # DEBUG this => NULL
      # DEBUG __x => __i_275
      # DEBUG __y => _177
      # DEBUG this => NULL
      # DEBUG __x => _175 != 0
      if (_175 != 0)
        goto <bb 35>;
      else
        goto <bb 36>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_37 })
    {
      <bb 35>:
      _180 = prephitmp_35 | _177;
      goto <bb 37>;

    }
    bb_36 (preds = {bb_34 }, succs = {bb_37 })
    {
      <bb 36>:
      _182 = ~_177;
      _183 = prephitmp_35 & _182;

    }
    bb_37 (preds = {bb_35 bb_36 }, succs = {bb_39 bb_38 })
    {
      <bb 37>:
      # cstore_283 = PHI <_180(35), _183(36)>
      # .MEM_282 = VDEF <.MEM_288>
      *__i_275 = cstore_283;
      # DEBUG this => &__first
      # DEBUG D#28 => &__first.D.24977
      # DEBUG this => D#28
      # DEBUG __first$8 => __first$8_266 + 1
      if (__first$8_266 == 63)
        goto <bb 39>;
      else
        goto <bb 38>;

    }
    bb_38 (preds = {bb_37 }, succs = {bb_40 })
    {
      <bb 38>:
      __first$8_184 = __first$8_266 + 1;
      goto <bb 40>;

    }
    bb_39 (preds = {bb_37 }, succs = {bb_40 })
    {
      <bb 39>:
      # DEBUG __first$8 => 0
      __position_185 = __position_267 + 8;
      # DEBUG __first$_M_p => __position_185

    }
    bb_40 (preds = {bb_38 bb_39 }, succs = {bb_42 bb_41 })
    {
      <bb 40>:
      # __position_189 = PHI <__position_267(38), __position_185(39)>
      # __first$8_190 = PHI <__first$8_184(38), 0(39)>
      # DEBUG __first$8 => __first$8_190
      # DEBUG __first$_M_p => __position_189
      # DEBUG this => &__result
      # DEBUG D#16 => &__result.D.24857
      # DEBUG this => D#16
      # DEBUG __result$8 => __result$8_273 + 1
      if (__result$8_273 == 63)
        goto <bb 42>;
      else
        goto <bb 41>;

    }
    bb_41 (preds = {bb_40 }, succs = {bb_43 })
    {
      <bb 41>:
      __result$8_186 = __result$8_273 + 1;
      pretmp_294 = __result$8_186 + 1;
      pretmp_298 = 1 << __result$8_186;
      goto <bb 43>;

    }
    bb_42 (preds = {bb_40 }, succs = {bb_43 })
    {
      <bb 42>:
      # DEBUG __result$8 => 0
      __i_187 = __i_275 + 8;
      # DEBUG __result$_M_p => __i_187
      # VUSE <.MEM_282>
      pretmp_296 = MEM[(_Bit_type *)__i_275 + 8B];

    }
    bb_43 (preds = {bb_41 bb_42 }, succs = {bb_45 bb_44 })
    {
      <bb 43>:
      # __i_191 = PHI <__i_275(41), __i_187(42)>
      # __result$8_192 = PHI <__result$8_186(41), 0(42)>
      # prephitmp_295 = PHI <pretmp_294(41), 1(42)>
      # prephitmp_297 = PHI <cstore_283(41), pretmp_296(42)>
      # prephitmp_299 = PHI <pretmp_298(41), 1(42)>
      # DEBUG __result$8 => __result$8_192
      # DEBUG __result$_M_p => __i_191
      __n_188 = __n_265 + -1;
      # DEBUG __n => __n_188
      # DEBUG __result$8 => __result$8_192
      # DEBUG __result$_M_p => __i_191
      # DEBUG __first$8 => __first$8_190
      # DEBUG __first$_M_p => __position_189
      # DEBUG __n => __n_188
      if (__n_188 == 0)
        goto <bb 45>;
      else
        goto <bb 44>;

    }
    bb_44 (preds = {bb_43 }, succs = {bb_34 })
    {
      <bb 44>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<bool, _Alloc>::_M_insert_aux(std::vector<bool, _Alloc>::iterator, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator] (struct vectorD.41049 * const thisD.41885, struct iteratorD.41532 __positionD.41886, boolD.2757 __xD.41887)
{
  struct _Bit_iteratorD.24805 D.76200;
  _DistanceD.69729 __nD.76178;
  _Bit_typeD.24655 * __first$_M_pD.76199;
  const unsigned intD.13 __first$8D.76198;
  _Bit_typeD.24655 * __result$_M_pD.76197;
  const unsigned intD.13 __result$8D.76196;
  struct _Bit_iteratorD.24805 __firstD.76174;
  struct _Bit_iteratorD.24805 __lastD.76175;
  struct _Bit_iteratorD.24805 __resultD.76176;
  unsigned intD.13 __it$D24857$_M_offsetD.76173;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76171;
  unsigned intD.13 __it$D24857$_M_offsetD.76170;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76168;
  unsigned intD.13 __it$D24857$_M_offsetD.76167;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76165;
  struct _Bit_iteratorD.24805 D.76164;
  struct _Bit_iteratorD.24805 __firstD.76158;
  struct _Bit_iteratorD.24805 __lastD.76157;
  struct _Bit_iteratorD.24805 __resultD.76156;
  struct _Bit_iteratorD.24805 D.76163;
  struct _Bit_iteratorD.24805 D.76140;
  _DistanceD.69791 __nD.76120;
  _Bit_typeD.24655 * __first$_M_pD.76139;
  const unsigned intD.13 __first$8D.76138;
  _Bit_typeD.24655 * __result$_M_pD.76137;
  const unsigned intD.13 __result$8D.76136;
  struct _Bit_const_iteratorD.24915 __firstD.76116;
  struct _Bit_const_iteratorD.24915 __lastD.76117;
  struct _Bit_iteratorD.24805 __resultD.76118;
  struct _Bit_iteratorD.24805 D.76115;
  struct _Bit_iteratorD.24805 __resultD.76098;
  struct _Bit_const_iteratorD.24915 __lastD.76099;
  struct _Bit_const_iteratorD.24915 __firstD.76100;
  struct _Bit_iteratorD.24805 D.76114;
  _Bit_typeD.24655 * __it$D24977$_M_pD.76113;
  unsigned intD.13 __it$D24977$_M_offsetD.76111;
  _Bit_typeD.24655 * __it$D24977$_M_pD.76110;
  unsigned intD.13 __it$D24977$_M_offsetD.76108;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76107;
  unsigned intD.13 __it$D24857$_M_offsetD.76105;
  const long unsigned intD.14 D.76091;
  const size_typeD.41526 __lenD.76076;
  size_typeD.41526 D.76090;
  size_typeD.41526 __nD.76074;
  _Bit_typeD.24655 * __last$D24977$_M_pD.76071;
  const ptrdiff_tD.2819 _NumD.76066;
  unsigned intD.13 __it$D24977$_M_offsetD.76069;
  struct _Bit_iteratorD.24805 D.76068;
  struct iteratorD.41532 D.76067;
  struct _Bit_iteratorD.24805 D.76043;
  difference_typeD.25510 __nD.76021;
  _Bit_typeD.24655 * __last$_M_pD.76042;
  const unsigned intD.13 __last$8D.76041;
  _Bit_typeD.24655 * __result$_M_pD.76040;
  unsigned intD.13 __result$_M_offsetD.76039;
  struct _Bit_iteratorD.24805 __firstD.76018;
  struct _Bit_iteratorD.24805 __lastD.76019;
  struct _Bit_iteratorD.24805 __resultD.76020;
  unsigned intD.13 __it$D24857$_M_offsetD.76017;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76015;
  unsigned intD.13 __it$D24857$_M_offsetD.76014;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76012;
  unsigned intD.13 __it$D24857$_M_offsetD.76011;
  _Bit_typeD.24655 * __it$D24857$_M_pD.76009;
  struct _Bit_iteratorD.24805 D.76008;
  struct _Bit_iteratorD.24805 __firstD.76002;
  struct _Bit_iteratorD.24805 __lastD.76001;
  struct _Bit_iteratorD.24805 __resultD.76000;
  struct _Bit_iteratorD.24805 D.76007;
  _Bit_typeD.24655 * SR.574D.74508;
  unsigned intD.13 SR.563D.74497;
  _Bit_typeD.24655 * SR.562D.74496;
  unsigned intD.13 SR.561D.74495;
  _Bit_typeD.24655 * SR.560D.74494;
  unsigned intD.13 __i$8D.74471;
  _Bit_typeD.24655 * __iD.74470;
  unsigned intD.13 __position$8D.74465;
  _Bit_typeD.24655 * __positionD.74464;
  struct _Bit_iteratorD.24805 D.74417;
  difference_typeD.24724 __nD.74395;
  _Bit_typeD.24655 * __tmp$_M_pD.74397;
  unsigned intD.13 __tmp$_M_offsetD.74396;
  struct _Bit_iteratorD.24805 D.74381;
  struct iteratorD.41532 __iD.68282;
  long unsigned intD.14 prephitmp_11;
  unsigned intD.13 _12;
  long intD.12 _15;
  long unsigned intD.14 * _16;
  long unsigned intD.14 * const _22;
  unsigned intD.13 _23;
  _Bit_typeD.24655 * _25;
  long unsigned intD.14 _26;
  long unsigned intD.14 _27;
  long unsigned intD.14 _28;
  long unsigned intD.14 _29;
  long unsigned intD.14 _30;
  long unsigned intD.14 _31;
  _Bit_typeD.24655 prephitmp_35;
  _Bit_typeD.24655 pretmp_36;
  _Bit_typeD.24655 prephitmp_37;
  _Bit_typeD.24655 pretmp_38;
  long unsigned intD.14 prephitmp_39;
  long unsigned intD.14 * _47;
  long unsigned intD.14 _49;
  long unsigned intD.14 _51;
  long unsigned intD.14 _52;
  long unsigned intD.14 prephitmp_56;
  _Bit_typeD.24655 cstore_61;
  _Bit_typeD.24655 cstore_68;
  long unsigned intD.14 prephitmp_89;
  long intD.12 _91;
  long intD.12 _92;
  long intD.12 _93;
  long intD.12 _94;
  long intD.12 _96;
  long intD.12 _97;
  long unsigned intD.14 _113;
  long unsigned intD.14 _114;
  long unsigned intD.14 _116;
  long unsigned intD.14 _117;
  long unsigned intD.14 _118;
  long unsigned intD.14 _119;
  long unsigned intD.14 _120;
  long intD.12 _123;
  long intD.12 __last.46_125;
  long intD.12 __first.47_126;
  long intD.12 _127;
  long unsigned intD.14 _129;
  _Bit_typeD.24655 * _133;
  unsigned intD.13 _134;
  long intD.12 _136;
  long intD.12 _137;
  long intD.12 _138;
  long intD.12 _139;
  long intD.12 _140;
  long intD.12 _141;
  long intD.12 _142;
  ptrdiff_tD.2819 _143;
  long unsigned intD.14 _153;
  long unsigned intD.14 _172;
  long unsigned intD.14 _174;
  long unsigned intD.14 _175;
  long unsigned intD.14 prephitmp_176;
  long unsigned intD.14 _177;
  _Bit_typeD.24655 prephitmp_178;
  long unsigned intD.14 _180;
  long unsigned intD.14 _182;
  long unsigned intD.14 _183;
  long unsigned intD.14 * const _194;
  long unsigned intD.14 pretmp_195;
  long intD.12 _196;
  long intD.12 _198;
  long unsigned intD.14 _199;
  sizetype _200;
  long unsigned intD.14 * _201;
  long unsigned intD.14 _202;
  long intD.12 _212;
  long intD.12 _214;
  long intD.12 _215;
  long intD.12 _216;
  long intD.12 _217;
  unsigned intD.13 prephitmp_220;
  long unsigned intD.14 _222;
  long unsigned intD.14 pretmp_223;
  long unsigned intD.14 _224;
  long unsigned intD.14 _226;
  long unsigned intD.14 _227;
  long unsigned intD.14 _229;
  long unsigned intD.14 _230;
  long unsigned intD.14 _231;
  long unsigned intD.14 _232;
  long unsigned intD.14 _233;
  long unsigned intD.14 prephitmp_248;
  long unsigned intD.14 prephitmp_255;
  _Bit_typeD.24655 cstore_261;
  long unsigned intD.14 pretmp_268;
  _Bit_typeD.24655 cstore_283;
  unsigned intD.13 pretmp_294;
  unsigned intD.13 prephitmp_295;
  _Bit_typeD.24655 pretmp_296;
  _Bit_typeD.24655 prephitmp_297;
  long unsigned intD.14 pretmp_298;
  long unsigned intD.14 prephitmp_299;
  size_typeD.41526 pretmp_300;
  _Bit_typeD.24655 cstore_302;
  long unsigned intD.14 pretmp_304;
  size_tD.2818 pretmp_306;
  long unsigned intD.14 pretmp_308;

;;   basic block 2, loop depth 0, count 0, freq 965, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __position_18 = MEM[(struct _Bit_iteratorD.24805 *)&__positionD.41886];
  # DEBUG __positionD.74464 => __position_18
  # VUSE <.MEM_2(D)>
  __position$8_13 = MEM[(struct _Bit_iteratorD.24805 *)&__positionD.41886 + 8B];
  # DEBUG __position$8D.74465 => __position$8_13
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __last$_M_p_4 = this_3(D)->D.41946._M_implD.41472._M_finishD.41475.D.24857._M_pD.24729;
  # DEBUG D#263ptD.0 => &this_3(D)->D.41946._M_implD.41472
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _22 = MEM[(long unsigned intD.14 * *)this_3(D) + 32B];
  # DEBUG D#50ptD.0 => D#263ptD.0
  # DEBUG thisD.74361 => D#50ptD.0
  if (__last$_M_p_4 != _22)
    goto <bb 68>;
  else
    goto <bb 22>;
;;    succ:       68 [68.1%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [31.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       68 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_258 = PHI <__n_98(3), __n_121(14)>
  # __last$8_259 = PHI <__last$8_122(3), __last$8_104(14)>
  # PT = nonlocal escaped 
  # __last$_M_p_262 = PHI <__last$_M_p_4(3), __last$_M_p_112(14)>
  # RANGE [0, 63] NONZERO 63
  # __result$_M_offset_263 = PHI <__result$_M_offset_43(3), __result$_M_offset_110(14)>
  # PT = nonlocal escaped 
  # __result$_M_p_264 = PHI <__result$_M_p_154(3), __result$_M_p_115(14)>
  # .MEM_286 = PHI <.MEM_2(D)(3), .MEM_260(14)>
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_263
  # DEBUG __result$_M_pD.76040 => __result$_M_p_264
  # DEBUG __last$8D.76041 => __last$8_259
  # DEBUG __last$_M_pD.76042 => __last$_M_p_262
  # DEBUG __nD.76021 => __n_258
  # DEBUG thisD.76022 => &__lastD.76019
  # DEBUG D#21ptD.0 => &__lastD.76019.D.24857
  # DEBUG thisD.76023 => D#21ptD.0
  # DEBUG __last$8D.76041 => __last$8_259 + 4294967295
  if (__last$8_259 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __last$8_101 = __last$8_259 + 4294967295;
  pretmp_223 = 1 << __last$8_101;
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __last$8D.76041 => 63
  # PT = nonlocal escaped 
  __last$_M_p_103 = __last$_M_p_262 + 18446744073709551608;
  # DEBUG __last$_M_pD.76042 => __last$_M_p_103
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __last$_M_p_112 = PHI <__last$_M_p_262(5), __last$_M_p_103(6)>
  # RANGE [0, 4294967294]
  # __last$8_104 = PHI <__last$8_101(5), 63(6)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_248 = PHI <pretmp_223(5), 9223372036854775808(6)>
  # DEBUG __last$8D.76041 => __last$8_104
  # DEBUG __last$_M_pD.76042 => __last$_M_p_112
  # DEBUG thisD.76024 => D#15ptD.0
  # DEBUG thisD.76025 => D#15ptD.0
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __last$_M_p_112
  # DEBUG __yD.71518 => 1 << __last$8_104
  # DEBUG thisD.76026 => &__resultD.76020
  # DEBUG D#21ptD.0 => &__resultD.76020.D.24857
  # DEBUG thisD.76027 => D#21ptD.0
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_263 + 4294967295
  if (__result$_M_offset_263 == 0)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[63, 4294967294]
  __result$_M_offset_107 = __result$_M_offset_263 + 4294967295;
  pretmp_195 = 1 << __result$_M_offset_107;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$_M_offsetD.76039 => 63
  # PT = nonlocal escaped 
  __result$_M_p_109 = __result$_M_p_264 + 18446744073709551608;
  # DEBUG __result$_M_pD.76040 => __result$_M_p_109
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __result$_M_p_115 = PHI <__result$_M_p_264(8), __result$_M_p_109(9)>
  # RANGE [0, 63] NONZERO 63
  # __result$_M_offset_110 = PHI <__result$_M_offset_107(8), 63(9)>
  # RANGE [1, 9223372036854775808]
  # prephitmp_56 = PHI <pretmp_195(8), 9223372036854775808(9)>
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_110
  # DEBUG __result$_M_pD.76040 => __result$_M_p_115
  # DEBUG thisD.76028 => D#15ptD.0
  # DEBUG thisD.76029 => D#15ptD.0
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __result$_M_p_115
  # DEBUG __yD.71518 => 1 << __result$_M_offset_110
  # DEBUG thisD.76031 => NULL
  # DEBUG __xD.76030 => NULL
  # DEBUG thisD.76032 => NULL
  # VUSE <.MEM_286>
  _113 = *__last$_M_p_112;
  # RANGE [0, 18446744073709551615]
  _114 = _113 & prephitmp_248;
  # DEBUG thisD.76034 => NULL
  # DEBUG __xD.76033 => _114 != 0
  if (_114 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_286>
  _116 = *__result$_M_p_115;
  # RANGE [0, 18446744073709551615]
  _117 = prephitmp_56 | _116;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_286>
  _118 = *__result$_M_p_115;
  # RANGE [9223372036854775807, 18446744073709551614]
  _119 = ~prephitmp_56;
  # RANGE [0, 18446744073709551614]
  _120 = _118 & _119;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_261 = PHI <_117(11), _120(12)>
  # .MEM_260 = VDEF <.MEM_286>
  *__result$_M_p_115 = cstore_261;
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_121 = __n_258 + -1;
  # DEBUG __nD.76021 => __n_121
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_110
  # DEBUG __result$_M_pD.76040 => __result$_M_p_115
  # DEBUG __last$8D.76041 => __last$8_104
  # DEBUG __last$_M_pD.76042 => __last$_M_p_112
  # DEBUG __nD.76021 => __n_121
  if (__n_121 <= 0)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 69, flags: (NEW)
;;    pred:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_246 = PHI <.MEM_260(13)>
;;    succ:       69 [100.0%]  (FALLTHRU)

;;   basic block 69, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 16, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU)
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 69, next block 72, flags: (NEW, REACHABLE)
;;    pred:       69 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_293 = PHI <.MEM_246(69), .MEM_2(D)(68)>
;;    succ:       72 [100.0%]  (FALLTHRU)

;;   basic block 72, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 17, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU)
  # DEBUG D#15ptD.0 => &__positionD.41886
  # DEBUG D#15ptD.0 => &__positionD.41886
  # DEBUG thisD.74372 => D#15ptD.0
  # DEBUG thisD.74371 => D#15ptD.0
  # RANGE [0, 18446744073709551615]
  _31 = 1 << __position$8_13;
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __position_18
  # DEBUG __yD.71518 => _31
  # DEBUG thisD.74366 => &D.68278
  # DEBUG __xD.74367 => __x_7(D)
  if (__x_7(D) != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 72, next block 18, flags: (NEW, REACHABLE)
;;    pred:       72 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_293>
  _26 = *__position_18;
  # RANGE [0, 18446744073709551615]
  _27 = _26 | _31;
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       72 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_293>
  _28 = *__position_18;
  # RANGE [0, 18446744073709551615]
  _29 = ~_31;
  # RANGE [0, 18446744073709551615]
  _30 = _28 & _29;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_61 = PHI <_27(17), _30(18)>
  # .MEM_60 = VDEF <.MEM_293>
  *__position_18 = cstore_61;
  # DEBUG D#273ptD.0 => &this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.74363 => D#273ptD.0
  # DEBUG D#16ptD.0 => &D#273ptD.0->D.24857
  # DEBUG thisD.74364 => D#16ptD.0
  if (__last$8_122 == 63)
    goto <bb 21>;
  else
    goto <bb 20>;
;;    succ:       21 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 648, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  _23 = __last$8_122 + 1;
  # .MEM_62 = VDEF <.MEM_60>
  MEM[(struct _Bit_iterator_baseD.24719 *)this_3(D) + 16B]._M_offsetD.24730 = _23;
  goto <bb 67>;
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 252, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       19 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_63 = VDEF <.MEM_60>
  MEM[(struct _Bit_iterator_baseD.24719 *)this_3(D) + 16B]._M_offsetD.24730 = 0;
  # PT = nonlocal escaped 
  _25 = __last$_M_p_4 + 8;
  # .MEM_64 = VDEF <.MEM_63>
  MEM[(struct _Bit_iterator_baseD.24719 *)this_3(D) + 16B]._M_pD.24729 = _25;
  goto <bb 67>;
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 65, maybe hot
;;   Invalid sum of incoming frequencies 308, should be 65
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       2 [31.9%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.76073 => this_3(D)
  # DEBUG __nD.76074 => 1
  # DEBUG __nD.76074 => 1
  # DEBUG __sD.76075 => "vector<bool>::_M_insert_aux"
  # DEBUG D#236ptD.0 => this_3(D)
  # DEBUG thisD.73688 => D#236ptD.0
  # DEBUG D#235ptD.0 => D#236ptD.0
  # DEBUG __isizeD.73689 => 9223372036854775744
  # DEBUG D#234ptD.0 => &D#235ptD.0->D.41946
  # DEBUG thisD.73671 => D#234ptD.0
  # DEBUG __aD.73661 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => D#232ptD.0
  # DEBUG thisD.73652 => D#231ptD.0
  # DEBUG __asizeD.73690 => NULL
  # DEBUG thisD.76079 => this_3(D)
  # DEBUG thisD.76080 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.76082 => NULL
  # DEBUG __xD.76081 => D#35ptD.0
  # VUSE <.MEM_2(D)>
  _12 = MEM[(const struct _Bit_iteratorD.24805 *)this_3(D)].D.24857._M_offsetD.24730;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _133 = MEM[(const struct _Bit_iteratorD.24805 *)this_3(D)].D.24857._M_pD.24729;
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.76083 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.76085 => NULL
  # DEBUG __xD.76084 => D#34ptD.0
  # VUSE <.MEM_2(D)>
  _134 = MEM[(const struct _Bit_iteratorD.24805 *)this_3(D) + 16B].D.24857._M_offsetD.24730;
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.76086 => D#11ptD.0
  # DEBUG __xD.76087 => D#11ptD.0
  # DEBUG __yD.76088 => D#12ptD.0
  # DEBUG __yD.76089 => D#12ptD.0
  _136 = (long intD.12) __last$_M_p_4;
  _137 = (long intD.12) _133;
  _138 = _136 - _137;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _139 = _138 * 8;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _140 = (long intD.12) _134;
  _141 = _139 + _140;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _142 = (long intD.12) _12;
  _143 = _141 - _142;
  # RANGE [0, 18446744073709551615]
  _144 = (const long unsigned intD.14) _143;
  if (_144 == 9223372036854775744)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_310 = VDEF <.MEM_2(D)>
  # USE = nonlocal null { D.76203 } (escaped heap)
  # CLB = nonlocal null { D.76203 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2860 ("vector<bool>::_M_insert_aux");
;;    succ:      

;;   basic block 24, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.73719 => this_3(D)
  # DEBUG thisD.73720 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.73722 => NULL
  # DEBUG __xD.73721 => D#35ptD.0
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.73723 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.73725 => NULL
  # DEBUG __xD.73724 => D#34ptD.0
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.73726 => D#11ptD.0
  # DEBUG __xD.73727 => D#11ptD.0
  # DEBUG __yD.73728 => D#12ptD.0
  # DEBUG __yD.73729 => D#12ptD.0
  # DEBUG thisD.73707 => this_3(D)
  # DEBUG thisD.73708 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.73710 => NULL
  # DEBUG __xD.73709 => D#35ptD.0
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.73711 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.73713 => NULL
  # DEBUG __xD.73712 => D#34ptD.0
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.73714 => D#11ptD.0
  # DEBUG __xD.73715 => D#11ptD.0
  # DEBUG __yD.73716 => D#12ptD.0
  # DEBUG __yD.73717 => D#12ptD.0
  # DEBUG __aD.76078 => &D.76091
  # DEBUG __bD.76077 => &__nD.76074
  if (_144 == 0)
    goto <bb 27>;
  else
    goto <bb 25>;
;;    succ:       27 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __len_149 = _144 + _144;
  # DEBUG __lenD.76076 => __len_149
  # DEBUG thisD.73692 => this_3(D)
  # DEBUG thisD.73693 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.73695 => NULL
  # DEBUG __xD.73694 => D#35ptD.0
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.73696 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.73698 => NULL
  # DEBUG __xD.73697 => D#34ptD.0
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.73699 => D#11ptD.0
  # DEBUG __xD.73700 => D#11ptD.0
  # DEBUG __yD.73701 => D#12ptD.0
  # DEBUG __yD.73702 => D#12ptD.0
  if (_144 > __len_149)
    goto <bb 28>;
  else
    goto <bb 26>;
;;    succ:       28 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 (FALSE_VALUE,EXECUTABLE)
  pretmp_300 = MIN_EXPR <__len_149, 9223372036854775744>;
  pretmp_304 = pretmp_300 + 63;
  pretmp_306 = pretmp_304 >> 6;
  pretmp_308 = pretmp_306 * 8;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 26, next block 74, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # prephitmp_39 = PHI <pretmp_308(26), 8(24)>
;;    succ:       74 [100.0%]  (FALLTHRU)

;;   basic block 74, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 27, next block 28, flags: (NEW)
;;    pred:       27 [100.0%]  (FALLTHRU)
  # DEBUG __lenD.76076 => NULL
  # DEBUG thisD.73692 => this_3(D)
  # DEBUG thisD.73693 => this_3(D)
  # DEBUG D#35ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_startD.41474
  # DEBUG thisD.73695 => NULL
  # DEBUG __xD.73694 => D#35ptD.0
  # DEBUG thisD.71710 => D#26ptD.0
  # DEBUG __xD.71709 => _133
  # DEBUG __yD.71708 => _12
  # DEBUG thisD.73696 => this_3(D)
  # DEBUG D#34ptD.0 => &MEM[(const struct vectorD.41049 *)this_3(D)].D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.73698 => NULL
  # DEBUG __xD.73697 => D#34ptD.0
  # DEBUG thisD.71702 => D#26ptD.0
  # DEBUG __xD.71701 => __last$_M_p_4
  # DEBUG __yD.71700 => _134
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG __xD.73699 => D#11ptD.0
  # DEBUG __xD.73700 => D#11ptD.0
  # DEBUG __yD.73701 => D#12ptD.0
  # DEBUG __yD.73702 => D#12ptD.0
  # DEBUG D#236ptD.0 => this_3(D)
  # DEBUG thisD.73731 => D#236ptD.0
  # DEBUG D#235ptD.0 => D#236ptD.0
  # DEBUG __isizeD.73732 => 9223372036854775744
  # DEBUG D#234ptD.0 => &D#235ptD.0->D.41946
  # DEBUG thisD.73671 => D#234ptD.0
  # DEBUG __aD.73661 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => D#232ptD.0
  # DEBUG thisD.73652 => D#231ptD.0
  # DEBUG __asizeD.73733 => NULL
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 74, next block 29, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1152921504606846968] NONZERO 1152921504606846968
  # prephitmp_89 = PHI <1152921504606846968(25), prephitmp_39(74)>
  # DEBUG __lenD.68279 => NULL
  # DEBUG D#275ptD.0 => &this_3(D)->D.41946
  # DEBUG D#244ptD.0 => D#275ptD.0
  # DEBUG __nD.74399 => NULL
  # DEBUG thisD.74400 => D#244ptD.0
  # DEBUG D#243ptD.0 => D#244ptD.0
  # DEBUG __nD.74401 => NULL
  # DEBUG D#242ptD.0 => &D#243ptD.0->_M_implD.41472
  # DEBUG D#241ptD.0 => D#242ptD.0
  # DEBUG __nD.74403 => NULL
  # DEBUG __aD.74402 => D#241ptD.0
  # DEBUG D#240ptD.0 => D#241ptD.0
  # DEBUG D#238ptD.0 => D#240ptD.0
  # DEBUG D#239ptD.0 => 0B
  # DEBUG __nD.74406 => NULL
  # DEBUG thisD.74404 => D#238ptD.0
  # DEBUG D.74405 => D#239ptD.0
  # DEBUG D#237ptD.0 => D#238ptD.0
  # DEBUG D#231ptD.0 => D#237ptD.0
  # DEBUG thisD.73740 => D#231ptD.0
  # .MEM_65 = VDEF <.MEM_2(D)>
  # PT = { D.76203 } (escaped heap)
  # USE = nonlocal null { D.76203 } (escaped heap)
  # CLB = nonlocal null { D.76203 } (escaped heap)
  _47 = _ZnwmD.2764 (prephitmp_89);
  # DEBUG __qD.68280 => _47
  # DEBUG __rD.74462 => _47
  # DEBUG thisD.74456 => &__startD.68281
  # DEBUG __xD.74457 => NULL
  # DEBUG __yD.74458 => 0
  # DEBUG D#14ptD.0 => &__startD.68281.D.24857
  # DEBUG thisD.74461 => D#14ptD.0
  # DEBUG __xD.74460 => NULL
  # DEBUG __yD.74459 => 0
  # DEBUG thisD.71482 => D#14ptD.0
  # DEBUG __start$_M_pD.74468 => _47
  # DEBUG __start$_M_offsetD.74469 => 0
  # DEBUG thisD.74451 => &D.68285
  # DEBUG __xD.74452 => &__positionD.41886
  # DEBUG D#26ptD.0 => &D.68285.D.24977
  # DEBUG thisD.74455 => D#26ptD.0
  # DEBUG __xD.74454 => __position_18
  # DEBUG __yD.74453 => __position$8_13
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG thisD.74448 => this_3(D)
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  SR.574_66 = MEM[(struct vectorD.41049 *)this_3(D)];
  # DEBUG D#274ptD.0 => MEM[(struct vectorD.41049 *)this_3(D) + 8B]
  # DEBUG thisD.74443 => &D.68284
  # DEBUG __xD.74444 => &D.68283
  # DEBUG D#26ptD.0 => &D.68284.D.24977
  # DEBUG thisD.74447 => D#26ptD.0
  # DEBUG __xD.74446 => SR.574_66
  # DEBUG __yD.74445 => D#274ptD.0
  # DEBUG thisD.71482 => D#26ptD.0
  # DEBUG D.74475 => D#274ptD.0
  # DEBUG D#259ptD.0 => this_3(D)
  # DEBUG D#260ptD.0 => D.68284
  # DEBUG D#261ptD.0 => D.68285
  # DEBUG D#261ptD.0 => D.68285
  # DEBUG D#262ptD.0 => __startD.68281
  # DEBUG thisD.76048 => D#259ptD.0
  # DEBUG __last$D24977$_M_pD.76071 => __position_18
  # DEBUG __firstD.76052 => SR.574_66
  # DEBUG __lastD.76051 => __position_18
  # DEBUG __resultD.76050 => _47
  # DEBUG __itD.74067 => __position_18
  # DEBUG __itD.72560 => __position_18
  # DEBUG __itD.74065 => SR.574_66
  # DEBUG __itD.72560 => SR.574_66
  # DEBUG __firstD.76055 => NULL
  # DEBUG __lastD.76054 => NULL
  # DEBUG __resultD.76053 => _47
  # DEBUG __itD.74047 => _47
  # DEBUG __itD.71796 => _47
  # DEBUG __itD.74045 => NULL
  # DEBUG __itD.71796 => NULL
  # DEBUG __itD.74043 => NULL
  # DEBUG __itD.71796 => NULL
  # DEBUG __firstD.76058 => NULL
  # DEBUG __lastD.76057 => NULL
  # DEBUG __resultD.76056 => _47
  # DEBUG __simpleD.76062 => 1
  # DEBUG __firstD.76065 => NULL
  # DEBUG __lastD.76064 => NULL
  # DEBUG __resultD.76063 => _47
  __last.46_125 = (long intD.12) __position_18;
  __first.47_126 = (long intD.12) SR.574_66;
  _127 = __last.46_125 - __first.47_126;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_128 = _127 /[ex] 8;
  # DEBUG _NumD.76066 => _Num_128
  if (_Num_128 != 0)
    goto <bb 30>;
  else
    goto <bb 29>;
;;    succ:       30 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_268 = (long unsigned intD.14) _127;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 25, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _129 = (long unsigned intD.14) _127;
  # .MEM_272 = VDEF <.MEM_65>
  # USE = nonlocal null { D.76203 } (escaped heap)
  # CLB = nonlocal null { D.76203 } (escaped heap)
  memmoveD.995 (_47, SR.574_66, _129);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_245 = PHI <.MEM_65(29), .MEM_272(30)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_11 = PHI <pretmp_268(29), _129(30)>
  # PT = { D.76203 } (escaped heap)
  __i_131 = _47 + prephitmp_11;
  # DEBUG __qD.76049 => __i_131
  # DEBUG thisD.74326 => NULL
  # DEBUG __xD.74325 => __i_131
  # DEBUG __yD.74324 => 0
  # DEBUG thisD.74329 => D#14ptD.0
  # DEBUG __xD.74328 => __i_131
  # DEBUG __yD.74327 => 0
  # DEBUG thisD.71482 => D#14ptD.0
  # DEBUG thisD.74332 => NULL
  # DEBUG __xD.74331 => __position_18
  # DEBUG __yD.74330 => 0
  # DEBUG thisD.74335 => D#25ptD.0
  # DEBUG __xD.74334 => __position_18
  # DEBUG __yD.74333 => 0
  # DEBUG thisD.71482 => D#25ptD.0
  # DEBUG D#257ptD.0 => __lastD.76072
  # DEBUG D#257ptD.0 => __lastD.76072
  # DEBUG __it$D24977$_M_pD.74344 => __position_18
  # DEBUG __it$D24977$_M_offsetD.76069 => __position$8_13
  # DEBUG __it$D24977$_M_pD.74347 => __position_18
  # DEBUG __it$D24977$_M_offsetD.74345 => 0
  # DEBUG __it$D24857$_M_pD.76107 => __i_131
  # DEBUG __it$D24857$_M_offsetD.76105 => 0
  # DEBUG __it$D24977$_M_pD.76110 => __position_18
  # DEBUG __it$D24977$_M_offsetD.76108 => __position$8_13
  # DEBUG __it$D24977$_M_pD.76113 => __position_18
  # DEBUG __it$D24977$_M_offsetD.76111 => 0
  # DEBUG __simpleD.76104 => 0
  # DEBUG __first$_M_pD.76139 => __position_18
  # DEBUG __first$8D.76138 => 0
  # DEBUG __result$_M_pD.76137 => __i_131
  # DEBUG __result$8D.76136 => 0
  # DEBUG D#11ptD.0 => &__lastD.76117.D.24977
  # DEBUG D#11ptD.0 => &__lastD.76117.D.24977
  # DEBUG D#12ptD.0 => &__firstD.76116.D.24977
  # DEBUG D#12ptD.0 => &__firstD.76116.D.24977
  # DEBUG __xD.76132 => D#11ptD.0
  # DEBUG __xD.76133 => D#11ptD.0
  # DEBUG __yD.76134 => D#12ptD.0
  # DEBUG __yD.76135 => D#12ptD.0
  # RANGE [0, 4294967295] NONZERO 4294967295
  __n_166 = (_DistanceD.69791) __position$8_13;
  # DEBUG __nD.76120 => NULL
  # DEBUG __result$8D.76136 => 0
  # DEBUG __result$_M_pD.76137 => __i_131
  # DEBUG __first$8D.76138 => 0
  # DEBUG __first$_M_pD.76139 => __position_18
  # DEBUG __nD.76120 => __n_166
  if (__n_166 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 6, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       31 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_245>
  pretmp_38 = *__i_131;
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       31 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_245>
  pretmp_36 = *__i_131;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 4294967295] NONZERO 4294967295
  # __n_265 = PHI <__n_166(33), __n_188(44)>
  # RANGE [0, 4294967295]
  # __first$8_266 = PHI <0(33), __first$8_190(44)>
  # PT = nonlocal 
  # __position_267 = PHI <__position_18(33), __position_189(44)>
  # RANGE [0, 4294967295]
  # __result$8_273 = PHI <0(33), __result$8_192(44)>
  # PT = { D.76203 } (escaped heap)
  # __i_275 = PHI <__i_131(33), __i_191(44)>
  # .MEM_288 = PHI <.MEM_245(33), .MEM_282(44)>
  # prephitmp_35 = PHI <pretmp_36(33), prephitmp_297(44)>
  # DEBUG __result$8D.76136 => __result$8_273
  # DEBUG __result$_M_pD.76137 => __i_275
  # DEBUG __first$8D.76138 => __first$8_266
  # DEBUG __first$_M_pD.76139 => __position_267
  # DEBUG __nD.76120 => __n_265
  # DEBUG D#27ptD.0 => &__firstD.76116
  # DEBUG D#27ptD.0 => &__firstD.76116
  # DEBUG thisD.76121 => D#27ptD.0
  # DEBUG thisD.76122 => D#27ptD.0
  # RANGE [0, 18446744073709551615]
  _172 = 1 << __first$8_266;
  # DEBUG thisD.71583 => NULL
  # DEBUG __xD.71582 => __position_267
  # DEBUG __yD.71581 => _172
  # DEBUG thisD.76123 => NULL
  # VUSE <.MEM_288>
  _174 = *__position_267;
  # RANGE [0, 18446744073709551615]
  _175 = _172 & _174;
  # DEBUG D#15ptD.0 => &__resultD.76118
  # DEBUG D#15ptD.0 => &__resultD.76118
  # DEBUG thisD.76124 => D#15ptD.0
  # DEBUG thisD.76125 => D#15ptD.0
  # RANGE [0, 18446744073709551615]
  _177 = 1 << __result$8_273;
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __i_275
  # DEBUG __yD.71518 => _177
  # DEBUG thisD.76127 => NULL
  # DEBUG __xD.76126 => _175 != 0
  if (_175 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 328, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _180 = prephitmp_35 | _177;
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 328, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _182 = ~_177;
  # RANGE [0, 18446744073709551615]
  _183 = prephitmp_35 & _182;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_283 = PHI <_180(35), _183(36)>
  # .MEM_282 = VDEF <.MEM_288>
  *__i_275 = cstore_283;
  # DEBUG thisD.76128 => &__firstD.76116
  # DEBUG D#28ptD.0 => &__firstD.76116.D.24977
  # DEBUG thisD.76129 => D#28ptD.0
  # DEBUG __first$8D.76138 => __first$8_266 + 1
  if (__first$8_266 == 63)
    goto <bb 39>;
  else
    goto <bb 38>;
;;    succ:       39 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 472, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       37 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$8_184 = __first$8_266 + 1;
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$8D.76138 => 0
  # PT = nonlocal 
  __position_185 = __position_267 + 8;
  # DEBUG __first$_M_pD.76139 => __position_185
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_189 = PHI <__position_267(38), __position_185(39)>
  # RANGE [0, 4294967295]
  # __first$8_190 = PHI <__first$8_184(38), 0(39)>
  # DEBUG __first$8D.76138 => __first$8_190
  # DEBUG __first$_M_pD.76139 => __position_189
  # DEBUG thisD.76130 => &__resultD.76118
  # DEBUG D#16ptD.0 => &__resultD.76118.D.24857
  # DEBUG thisD.76131 => D#16ptD.0
  # DEBUG __result$8D.76136 => __result$8_273 + 1
  if (__result$8_273 == 63)
    goto <bb 42>;
  else
    goto <bb 41>;
;;    succ:       42 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 472, maybe hot
;;    prev block 40, next block 42, flags: (NEW)
;;    pred:       40 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __result$8_186 = __result$8_273 + 1;
  pretmp_294 = __result$8_186 + 1;
  pretmp_298 = 1 << __result$8_186;
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$8D.76136 => 0
  # PT = { D.76203 } (escaped heap)
  __i_187 = __i_275 + 8;
  # DEBUG __result$_M_pD.76137 => __i_187
  # VUSE <.MEM_282>
  pretmp_296 = MEM[(_Bit_typeD.24655 *)__i_275 + 8B];
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_191 = PHI <__i_275(41), __i_187(42)>
  # RANGE ~[64, 64]
  # __result$8_192 = PHI <__result$8_186(41), 0(42)>
  # prephitmp_295 = PHI <pretmp_294(41), 1(42)>
  # prephitmp_297 = PHI <cstore_283(41), pretmp_296(42)>
  # prephitmp_299 = PHI <pretmp_298(41), 1(42)>
  # DEBUG __result$8D.76136 => __result$8_192
  # DEBUG __result$_M_pD.76137 => __i_191
  # RANGE [0, 4294967294] NONZERO 4294967295
  __n_188 = __n_265 + -1;
  # DEBUG __nD.76120 => __n_188
  # DEBUG __result$8D.76136 => __result$8_192
  # DEBUG __result$_M_pD.76137 => __i_191
  # DEBUG __first$8D.76138 => __first$8_190
  # DEBUG __first$_M_pD.76139 => __position_189
  # DEBUG __nD.76120 => __n_188
  if (__n_188 == 0)
    goto <bb 45>;
  else
    goto <bb 44>;
;;    succ:       45 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 596, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       43 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 44, next block 71, flags: (NEW, REACHABLE)
;;    pred:       43 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_243 = PHI <__i_191(43)>
  # RANGE ~[64, 64]
  # __result$8_228 = PHI <__result$8_192(43)>
  # prephitmp_220 = PHI <prephitmp_295(43)>
  # prephitmp_178 = PHI <prephitmp_297(43)>
  # prephitmp_176 = PHI <prephitmp_299(43)>
;;    succ:       71 [100.0%]  (FALLTHRU)

;;   basic block 71, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # DEBUG __iD.74470 => __i_243
  # DEBUG __i$8D.74471 => __result$8_228
  # DEBUG D#20ptD.0 => 0
  # DEBUG thisD.74435 => &__iD.68282
  # DEBUG D.74436 => D#20ptD.0
  # DEBUG __tmp$D24857$_M_pD.74441 => __i_243
  # DEBUG __tmp$D24857$_M_offsetD.74442 => __result$8_228
  # DEBUG D#19ptD.0 => &__iD.68282.D.24857
  # DEBUG thisD.74438 => D#19ptD.0
  # DEBUG __i$8D.74471 => __result$8_228 + 1
  if (__result$8_228 == 63)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [30.8%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [69.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 71, next block 47, flags: (NEW, REACHABLE)
;;    pred:       71 [30.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __i$8D.74471 => 0
  # PT = { D.76203 } (escaped heap)
  __i_55 = __i_243 + 8;
  # DEBUG __iD.74470 => __i_55
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 46, next block 73, flags: (NEW, REACHABLE)
;;    pred:       71 [69.2%]  (FALSE_VALUE,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_21 = PHI <__i_243(71), __i_55(46), __i_131(32)>
  # RANGE [0, 4294967295]
  # __i$8_19 = PHI <prephitmp_220(71), 0(46), 1(32)>
  # PT = { D.76203 } (escaped heap)
  # __i_173 = PHI <__i_243(71), __i_243(46), __i_131(32)>
  # .MEM_170 = PHI <.MEM_282(71), .MEM_282(46), .MEM_245(32)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_255 = PHI <prephitmp_176(71), prephitmp_176(46), 1(32)>
  # prephitmp_37 = PHI <prephitmp_178(71), prephitmp_178(46), pretmp_38(32)>
;;    succ:       73 [100.0%]  (FALLTHRU)

;;   basic block 73, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 47, next block 48, flags: (NEW)
;;    pred:       47 [100.0%]  (FALLTHRU)
  # DEBUG __i$8D.74471 => __i$8_19
  # DEBUG __iD.74470 => __i_21
  # DEBUG D#17ptD.0 => {CLOBBER}
  # DEBUG __tmp$D24857$_M_pD.74441 => D#17ptD.0
  # DEBUG D#18ptD.0 => {CLOBBER}
  # DEBUG __tmp$D24857$_M_offsetD.74442 => D#18ptD.0
  # DEBUG D#15ptD.0 => &D.68288
  # DEBUG D#15ptD.0 => &D.68288
  # DEBUG thisD.74432 => D#15ptD.0
  # DEBUG thisD.74431 => D#15ptD.0
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __i_173
  # DEBUG __yD.71518 => NULL
  # DEBUG thisD.74426 => &D.68289
  # DEBUG __xD.74427 => __x_7(D)
  if (__x_7(D) != 0)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 73, next block 49, flags: (NEW, REACHABLE)
;;    pred:       73 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _49 = prephitmp_37 | prephitmp_255;
  goto <bb 50>;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       73 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _51 = ~prephitmp_255;
  # RANGE [0, 18446744073709551615]
  _52 = prephitmp_37 & _51;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 64, maybe hot
;;    prev block 49, next block 77, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_68 = PHI <_49(48), _52(49)>
;;    succ:       77 [100.0%]  (FALLTHRU)

;;   basic block 77, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 50, next block 51, flags: (NEW)
;;    pred:       50 [100.0%]  (FALLTHRU)
  # .MEM_67 = VDEF <.MEM_170>
  *__i_173 = cstore_68;
  # DEBUG thisD.74424 => this_3(D)
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  __it$D24857$_M_p_70 = MEM[(struct vectorD.41049 *)this_3(D) + 16B];
  # VUSE <.MEM_67>
  __it$D24857$_M_offset_71 = MEM[(struct vectorD.41049 *)this_3(D) + 24B];
  # DEBUG D#250ptD.0 => __positionD.41886
  # DEBUG D#250ptD.0 => __positionD.41886
  # DEBUG D#251ptD.0 => D.70632
  # DEBUG D#251ptD.0 => D.70632
  # DEBUG D#252ptD.0 => __iD.68282
  # DEBUG D#252ptD.0 => __iD.68282
  # DEBUG __it$D24857$_M_pD.74421 => __it$D24857$_M_p_70
  # DEBUG __it$D24857$_M_offsetD.74423 => __it$D24857$_M_offset_71
  # DEBUG __it$D24857$_M_pD.74418 => __position_18
  # DEBUG __it$D24857$_M_offsetD.74420 => __position$8_13
  # DEBUG __it$D24857$_M_pD.76171 => __i_21
  # DEBUG __it$D24857$_M_offsetD.76173 => __i$8_19
  # DEBUG __it$D24857$_M_pD.76168 => __it$D24857$_M_p_70
  # DEBUG __it$D24857$_M_offsetD.76170 => __it$D24857$_M_offset_71
  # DEBUG __it$D24857$_M_pD.76165 => __position_18
  # DEBUG __it$D24857$_M_offsetD.76167 => __position$8_13
  # DEBUG __simpleD.76162 => 0
  # DEBUG __first$_M_pD.76199 => __position_18
  # DEBUG __first$8D.76198 => __position$8_13
  # DEBUG __result$_M_pD.76197 => __i_21
  # DEBUG __result$8D.76196 => __i$8_19
  # DEBUG D#11ptD.0 => &__lastD.76175.D.24857
  # DEBUG D#11ptD.0 => &__lastD.76175.D.24857
  # DEBUG D#12ptD.0 => &__firstD.76174.D.24857
  # DEBUG D#12ptD.0 => &__firstD.76174.D.24857
  # DEBUG __xD.76192 => D#11ptD.0
  # DEBUG __xD.76193 => D#11ptD.0
  # DEBUG __yD.76194 => D#12ptD.0
  # DEBUG __yD.76195 => D#12ptD.0
  _212 = (long intD.12) __it$D24857$_M_p_70;
  _214 = _212 - __last.46_125;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _215 = _214 * 8;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _216 = (long intD.12) __it$D24857$_M_offset_71;
  _217 = _215 + _216;
  __n_219 = _217 - __n_166;
  # DEBUG __nD.76178 => NULL
  # DEBUG __result$8D.76196 => __i$8_19
  # DEBUG __result$_M_pD.76197 => __i_21
  # DEBUG __first$8D.76198 => __position$8_13
  # DEBUG __first$_M_pD.76199 => __position_18
  # DEBUG __nD.76178 => __n_219
  if (__n_219 <= 0)
    goto <bb 64>;
  else
    goto <bb 51>;
;;    succ:       64 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 77, next block 52, flags: (NEW, REACHABLE)
;;    pred:       77 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_277 = PHI <__n_219(51), __n_238(63)>
  # __position$8_278 = PHI <__position$8_13(51), __position$8_240(63)>
  # RANGE [0, 4294967295]
  # __i$8_279 = PHI <__i$8_19(51), __i$8_242(63)>
  # PT = nonlocal 
  # __position_281 = PHI <__position_18(51), __position_239(63)>
  # PT = { D.76203 } (escaped heap)
  # __i_284 = PHI <__i_21(51), __i_241(63)>
  # .MEM_290 = PHI <.MEM_67(51), .MEM_301(63)>
  # DEBUG __result$8D.76196 => __i$8_279
  # DEBUG __result$_M_pD.76197 => __i_284
  # DEBUG __first$8D.76198 => __position$8_278
  # DEBUG __first$_M_pD.76199 => __position_281
  # DEBUG __nD.76178 => __n_277
  # DEBUG D#15ptD.0 => &__firstD.76174
  # DEBUG D#15ptD.0 => &__firstD.76174
  # DEBUG thisD.76179 => D#15ptD.0
  # DEBUG thisD.76180 => D#15ptD.0
  # RANGE [0, 18446744073709551615]
  _222 = 1 << __position$8_278;
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __position_281
  # DEBUG __yD.71518 => _222
  # DEBUG D#15ptD.0 => &__resultD.76176
  # DEBUG D#15ptD.0 => &__resultD.76176
  # DEBUG thisD.76181 => D#15ptD.0
  # DEBUG thisD.76182 => D#15ptD.0
  # RANGE [0, 18446744073709551615]
  _224 = 1 << __i$8_279;
  # DEBUG thisD.71520 => NULL
  # DEBUG __xD.71519 => __i_284
  # DEBUG __yD.71518 => _224
  # DEBUG thisD.76184 => NULL
  # DEBUG __xD.76183 => NULL
  # DEBUG thisD.76185 => NULL
  # VUSE <.MEM_290>
  _226 = *__position_281;
  # RANGE [0, 18446744073709551615]
  _227 = _222 & _226;
  # DEBUG thisD.76187 => NULL
  # DEBUG __xD.76186 => _227 != 0
  if (_227 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 328, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_290>
  _229 = *__i_284;
  # RANGE [0, 18446744073709551615]
  _230 = _224 | _229;
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 328, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_290>
  _231 = *__i_284;
  # RANGE [0, 18446744073709551615]
  _232 = ~_224;
  # RANGE [0, 18446744073709551615]
  _233 = _231 & _232;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_302 = PHI <_230(53), _233(54)>
  # .MEM_301 = VDEF <.MEM_290>
  *__i_284 = cstore_302;
  # DEBUG thisD.76188 => &__firstD.76174
  # DEBUG D#16ptD.0 => &__firstD.76174.D.24857
  # DEBUG thisD.76189 => D#16ptD.0
  # DEBUG __first$8D.76198 => __position$8_278 + 1
  if (__position$8_278 == 63)
    goto <bb 57>;
  else
    goto <bb 56>;
;;    succ:       57 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 1, count 0, freq 472, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       55 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __position$8_234 = __position$8_278 + 1;
  goto <bb 58>;
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       55 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$8D.76198 => 0
  # PT = nonlocal 
  __position_235 = __position_281 + 8;
  # DEBUG __first$_M_pD.76199 => __position_235
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_239 = PHI <__position_281(56), __position_235(57)>
  # RANGE ~[64, 64]
  # __position$8_240 = PHI <__position$8_234(56), 0(57)>
  # DEBUG __first$8D.76198 => __position$8_240
  # DEBUG __first$_M_pD.76199 => __position_239
  # DEBUG thisD.76190 => &__resultD.76176
  # DEBUG D#16ptD.0 => &__resultD.76176.D.24857
  # DEBUG thisD.76191 => D#16ptD.0
  # DEBUG __result$8D.76196 => __i$8_279 + 1
  if (__i$8_279 == 63)
    goto <bb 60>;
  else
    goto <bb 59>;
;;    succ:       60 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 59, loop depth 1, count 0, freq 472, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __i$8_236 = __i$8_279 + 1;
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 1, count 0, freq 183, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       58 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$8D.76196 => 0
  # PT = { D.76203 } (escaped heap)
  __i_237 = __i_284 + 8;
  # DEBUG __result$_M_pD.76197 => __i_237
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 1, count 0, freq 655, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_241 = PHI <__i_284(59), __i_237(60)>
  # RANGE [0, 4294967295]
  # __i$8_242 = PHI <__i$8_236(59), 0(60)>
  # DEBUG __result$8D.76196 => __i$8_242
  # DEBUG __result$_M_pD.76197 => __i_241
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_238 = __n_277 + -1;
  # DEBUG __nD.76178 => __n_238
  # DEBUG __result$8D.76196 => __i$8_242
  # DEBUG __result$_M_pD.76197 => __i_241
  # DEBUG __first$8D.76198 => __position$8_240
  # DEBUG __first$_M_pD.76199 => __position_239
  # DEBUG __nD.76178 => __n_238
  if (__n_238 <= 0)
    goto <bb 62>;
  else
    goto <bb 63>;
;;    succ:       62 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 61, next block 70, flags: (NEW)
;;    pred:       61 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.76203 } (escaped heap)
  # __i_225 = PHI <__i_241(61)>
  # RANGE [0, 4294967295]
  # __i$8_221 = PHI <__i$8_242(61)>
;;    succ:       70 [100.0%]  (FALLTHRU)

;;   basic block 70, loop depth 0, count 0, freq 59, maybe hot
;;    prev block 62, next block 63, flags: (NEW)
;;    pred:       62 [100.0%]  (FALLTHRU)
  goto <bb 64>;
;;    succ:       64 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 1, count 0, freq 596, maybe hot
;;    prev block 70, next block 64, flags: (NEW)
;;    pred:       61 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 52>;
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       70 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                77 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  # __i$8_280 = PHI <__i$8_221(70), __i$8_19(77)>
  # PT = { D.76203 } (escaped heap)
  # __i_285 = PHI <__i_225(70), __i_21(77)>
  # .MEM_291 = PHI <.MEM_301(70), .MEM_67(77)>
  # .MEM_74 = VDEF <.MEM_291>
  MEM[(struct _Bit_iteratorD.24805 *)this_3(D) + 16B] = __i_285;
  # .MEM_75 = VDEF <.MEM_74>
  MEM[(struct _Bit_iteratorD.24805 *)this_3(D) + 24B] = __i$8_280;
  # DEBUG D#347ptD.0 => &this_3(D)->D.41946
  # DEBUG thisD.76141 => D#347ptD.0
  if (SR.574_66 != 0B)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#170ptD.0 => &D#347ptD.0->_M_implD.41472
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _194 = MEM[(long unsigned intD.14 * *)this_3(D) + 32B];
  # DEBUG D#50ptD.0 => D#170ptD.0
  # DEBUG thisD.76143 => D#50ptD.0
  _196 = (long intD.12) _194;
  _198 = _196 - __first.47_126;
  # DEBUG D#173ptD.0 => _198 /[ex] 8
  # DEBUG D#172ptD.0 => (const size_tD.2818) D#173ptD.0
  # DEBUG __nD.76142 => D#172ptD.0
  # RANGE [0, 18446744073709551615]
  _199 = (long unsigned intD.14) _198;
  # RANGE [0, 18446744073709551615]
  _200 = -_199;
  # PT = nonlocal escaped 
  _201 = _194 + _200;
  # DEBUG D#171ptD.0 => &D#347ptD.0->_M_implD.41472
  # DEBUG D#168ptD.0 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#172ptD.0
  # DEBUG __pD.76146 => _201
  # DEBUG __aD.76144 => D#168ptD.0
  # DEBUG __nD.76145 => D#169ptD.0
  # DEBUG D#167ptD.0 => D#169ptD.0
  # DEBUG D#166ptD.0 => D#168ptD.0
  # DEBUG D#164ptD.0 => D#166ptD.0
  # DEBUG D#165ptD.0 => D#167ptD.0
  # DEBUG __pD.76149 => _201
  # DEBUG thisD.76147 => D#164ptD.0
  # DEBUG D.76148 => D#165ptD.0
  # .MEM_309 = VDEF <.MEM_75>
  # USE = nonlocal null { D.76203 } (escaped heap)
  # CLB = nonlocal null { D.76203 } (escaped heap)
  _ZdlPvD.2766 (_201);
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 65, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [10.1%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_250 = PHI <.MEM_309(65), .MEM_75(64)>
  # DEBUG __nD.74408 => NULL
  # PT = { D.76203 } (escaped heap)
  _16 = _47 + prephitmp_89;
  # .MEM_17 = VDEF <.MEM_250>
  this_3(D)->D.41946._M_implD.41472._M_end_of_storageD.41476 = _16;
  # .MEM_76 = VDEF <.MEM_17>
  MEM[(struct _Bit_iteratorD.24805 *)this_3(D)] = _47;
  # .MEM_77 = VDEF <.MEM_76>
  MEM[(struct _Bit_iteratorD.24805 *)this_3(D) + 8B] = 0;
  # DEBUG D#265ptD.0 => {CLOBBER}
  # DEBUG __start$_M_pD.74468 => D#265ptD.0
  # DEBUG D#266ptD.0 => {CLOBBER}
  # DEBUG __start$_M_offsetD.74469 => D#266ptD.0
  # .MEM_20 = VDEF <.MEM_77>
  __iD.68282 ={v} {CLOBBER};
  # DEBUG D#267ptD.0 => {CLOBBER}
  # DEBUG __iD.74470 => D#267ptD.0
  # DEBUG D#268ptD.0 => {CLOBBER}
  # DEBUG __i$8D.74471 => D#268ptD.0
  goto <bb 76>;
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 66, next block 76, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_171 = PHI <.MEM_64(21), .MEM_62(20)>
;;    succ:       76 [100.0%]  (FALLTHRU)

;;   basic block 76, loop depth 0, count 0, freq 965, maybe hot
;;    prev block 67, next block 75, flags: (NEW)
;;    pred:       67 [100.0%]  (FALLTHRU)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_171(67), .MEM_20(66)>
;;    succ:       75 [100.0%]  (FALLTHRU)

;;   basic block 75, loop depth 0, count 0, freq 965, maybe hot
;;    prev block 76, next block 68, flags: (NEW)
;;    pred:       76 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 68, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 657, should be 900
;;    prev block 75, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [68.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#264ptD.0 => &this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.74388 => D#264ptD.0
  # DEBUG __iD.74389 => 1
  # DEBUG __tmp$_M_pD.74397 => __last$_M_p_4
  # VUSE <.MEM_2(D)>
  __last$8_122 = MEM[(const struct _Bit_iteratorD.24805 &)this_3(D) + 24];
  # DEBUG __tmp$_M_offsetD.74396 => __last$8_122
  # DEBUG thisD.74392 => &__tmpD.74390
  # DEBUG __iD.74391 => 1
  # DEBUG D#22ptD.0 => &__tmpD.74390.D.24857
  # DEBUG thisD.74394 => D#22ptD.0
  # DEBUG __iD.74393 => 1
  # RANGE [0, 4294967295] NONZERO 4294967295
  _123 = (long intD.12) __last$8_122;
  # RANGE [1, 4294967296] NONZERO 8589934591
  __n_24 = _123 + 1;
  # DEBUG __nD.74395 => __n_24
  # RANGE [0, 67108864] NONZERO 134217727
  _15 = __n_24 >> 6;
  # RANGE [0, 67108864] NONZERO 134217727
  _202 = (long unsigned intD.14) _15;
  # RANGE [0, 536870912] NONZERO 1073741816
  _153 = _202 * 8;
  # PT = nonlocal escaped 
  __result$_M_p_154 = __last$_M_p_4 + _153;
  # DEBUG __tmp$_M_pD.74397 => __result$_M_p_154
  # RANGE [0, 63] NONZERO 63
  __n_152 = __n_24 & 63;
  # DEBUG __nD.74395 => __n_152
  # DEBUG D#264ptD.0 => &this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG thisD.74388 => D#264ptD.0
  # DEBUG __iD.74389 => 1
  # DEBUG __tmp$_M_offsetD.74396 => __last$8_122
  # DEBUG thisD.74392 => &__tmpD.74390
  # DEBUG __iD.74391 => 1
  # DEBUG D#22ptD.0 => &__tmpD.74390.D.24857
  # DEBUG thisD.74394 => D#22ptD.0
  # DEBUG __iD.74393 => 1
  # DEBUG __tmp$_M_pD.74397 => __result$_M_p_154
  # DEBUG __nD.74395 => __n_152
  # DEBUG __tmp$_M_pD.74397 => __result$_M_p_154
  # DEBUG __nD.74395 => __n_152
  # RANGE [0, 63] NONZERO 63
  __result$_M_offset_43 = (unsigned intD.13) __n_152;
  # DEBUG __tmp$_M_offsetD.74396 => __result$_M_offset_43
  # DEBUG D#23ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_pD.74397 => D#23ptD.0
  # DEBUG D#24ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_offsetD.74396 => D#24ptD.0
  # DEBUG D#228ptD.0 => __positionD.41886
  # DEBUG D#228ptD.0 => __positionD.41886
  # DEBUG D#229ptD.0 => this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG D#229ptD.0 => this_3(D)->D.41946._M_implD.41472._M_finishD.41475
  # DEBUG D#230ptD.0 => D.70627
  # DEBUG D#230ptD.0 => D.70627
  # DEBUG __it$D24857$_M_pD.74385 => __last$_M_p_4
  # DEBUG __it$D24857$_M_offsetD.74387 => __last$8_122
  # DEBUG __it$D24857$_M_pD.74382 => __position_18
  # DEBUG __it$D24857$_M_offsetD.74384 => __position$8_13
  # DEBUG __it$D24857$_M_pD.76015 => __result$_M_p_154
  # DEBUG __it$D24857$_M_offsetD.76017 => __result$_M_offset_43
  # DEBUG __it$D24857$_M_pD.76012 => __last$_M_p_4
  # DEBUG __it$D24857$_M_offsetD.76014 => __last$8_122
  # DEBUG __it$D24857$_M_pD.76009 => __position_18
  # DEBUG __it$D24857$_M_offsetD.76011 => __position$8_13
  # DEBUG __simpleD.76006 => 0
  # DEBUG __last$_M_pD.76042 => __last$_M_p_4
  # DEBUG __last$8D.76041 => __last$8_122
  # DEBUG __result$_M_pD.76040 => __result$_M_p_154
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_43
  # DEBUG D#11ptD.0 => &__lastD.76019.D.24857
  # DEBUG D#11ptD.0 => &__lastD.76019.D.24857
  # DEBUG D#12ptD.0 => &__firstD.76018.D.24857
  # DEBUG D#12ptD.0 => &__firstD.76018.D.24857
  # DEBUG __xD.76035 => D#11ptD.0
  # DEBUG __xD.76036 => D#11ptD.0
  # DEBUG __yD.76037 => D#12ptD.0
  # DEBUG __yD.76038 => D#12ptD.0
  _91 = (long intD.12) __last$_M_p_4;
  _92 = (long intD.12) __position_18;
  _93 = _91 - _92;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _94 = _93 * 8;
  _96 = _94 + _123;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _97 = (long intD.12) __position$8_13;
  __n_98 = _96 - _97;
  # DEBUG __nD.76021 => NULL
  # DEBUG __result$_M_offsetD.76039 => __result$_M_offset_43
  # DEBUG __result$_M_pD.76040 => __result$_M_p_154
  # DEBUG __last$8D.76041 => __last$8_122
  # DEBUG __last$_M_pD.76042 => __last$_M_p_4
  # DEBUG __nD.76021 => __n_98
  if (__n_98 <= 0)
    goto <bb 16>;
  else
    goto <bb 3>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

}


