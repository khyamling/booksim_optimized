
;; Function _ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _Allocator = std::allocator<Credit*>] (_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.332, funcdef_no=3832, decl_uid=88762, cgraph_uid=1762, symbol_order=3710)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _Allocator = std::allocator<Credit*>] (struct _Deque_iterator & restrict __first, struct _Deque_iterator & restrict __last, struct _Deque_iterator & restrict __result)
{
  struct Credit * * * SR.2216;
  struct Credit * * SR.2215;
  struct Credit * * SR.2214;
  struct Credit * * SR.2213;
  struct Credit * * * SR.2212;
  struct Credit * * SR.2211;
  struct Credit * * SR.2210;
  _Distance __n;
  struct _Deque_iterator D.90330;
  struct _Deque_iterator D.90329;
  struct _Deque_iterator D.90328;
  struct iterator_type D.90314;
  struct iterator_type D.90313;
  struct iterator_type D.90312;
  struct _Deque_iterator D.90290;
  struct iterator_type D.90289;
  struct iterator_type D.90288;
  struct _Deque_iterator D.90270;
  struct _Deque_iterator D.90269;
  struct _Deque_iterator D.90268;
  struct _Deque_iterator D.90258;
  struct _Deque_iterator D.90257;
  struct _Deque_iterator D.90256;
  struct _Deque_iterator D.90243;
  struct _Deque_iterator D.90242;
  struct _Deque_iterator D.90241;
  struct _Deque_iterator D.88776;
  struct _Deque_iterator D.88775;
  struct _Deque_iterator D.88774;
  struct Credit * * _3;
  struct Credit * * _4;
  struct Credit * * _5;
  struct Credit * * * _6;
  struct Credit * * _8;
  struct Credit * * _9;
  struct Credit * * * _11;
  struct Credit * * _13;
  struct Credit * * _15;
  struct Credit * * * _16;
  long int _106;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _114;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _121;
  long int _123;
  long int _124;
  long int _125;
  struct Credit * _130;
  struct Credit * * _132;
  struct Credit * * _135;
  struct Credit * * * _143;
  struct Credit * * _144;
  struct Credit * * _145;
  struct Credit * * * _147;
  struct Credit * * _148;
  struct Credit * * _149;

  <bb 2>:
  # DEBUG __alloc s=> __alloc
  # DEBUG D#1400 s=> __alloc
  # DEBUG this => &D.88776
  # DEBUG __x => __result_2(D)
  _3 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  # DEBUG this => &D.88775
  # DEBUG __x => __last_7(D)
  _8 = MEM[(const struct iterator &)__last_7(D)]._M_cur;
  _9 = MEM[(const struct iterator &)__last_7(D)]._M_first;
  _11 = MEM[(const struct iterator &)__last_7(D)]._M_node;
  # DEBUG this => &D.88774
  # DEBUG __x => __first_12(D)
  _13 = MEM[(const struct iterator &)__first_12(D)]._M_cur;
  _15 = MEM[(const struct iterator &)__first_12(D)]._M_last;
  _16 = MEM[(const struct iterator &)__first_12(D)]._M_node;
  # DEBUG D#1399 => D#1400
  # DEBUG __first => &D.88774
  # DEBUG __last => &D.88775
  # DEBUG __result => &D.88776
  # DEBUG D.90234 => D#1399
  # DEBUG this => &D.90241
  # DEBUG __x => &D.88776
  # DEBUG this => &D.90242
  # DEBUG __x => &D.88775
  # DEBUG this => &D.90243
  # DEBUG __x => &D.88774
  # DEBUG __first => &D.90243
  # DEBUG __last => &D.90242
  # DEBUG __result => &D.90241
  # DEBUG __assignable => 1
  # DEBUG this => &D.90258
  # DEBUG __x => &D.90241
  # DEBUG this => &D.90257
  # DEBUG __x => &D.90242
  # DEBUG this => &D.90256
  # DEBUG __x => &D.90243
  # DEBUG __first => &D.90256
  # DEBUG __last => &D.90257
  # DEBUG __result => &D.90258
  # DEBUG this => &D.90270
  # DEBUG __x => &D.90258
  # DEBUG this => &D.90269
  # DEBUG __x => &D.90257
  # DEBUG this => &D.90268
  # DEBUG __x => &D.90256
  # DEBUG __first => &D.90268
  # DEBUG __last => &D.90269
  # DEBUG __result => &D.90270
  # DEBUG this => &D.90290
  # DEBUG __x => &D.90270
  # DEBUG this => NULL
  # DEBUG __x => &D.90269
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90289
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.90268
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90288
  # DEBUG __x => NULL
  # DEBUG __first => &D.90288
  # DEBUG __last => &D.90289
  # DEBUG __result => &D.90290
  # DEBUG this => NULL
  # DEBUG __x => &D.90290
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90314
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.90289
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90313
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.90288
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90312
  # DEBUG __x => NULL
  # DEBUG __first => &D.90312
  # DEBUG __last => &D.90313
  # DEBUG __result => &D.90314
  # DEBUG __simple => 0
  # DEBUG this => &D.90330
  # DEBUG __x => &D.90314
  # DEBUG this => &D.90329
  # DEBUG __x => &D.90313
  # DEBUG this => &D.90328
  # DEBUG __x => &D.90312
  # DEBUG __first => &D.90328
  # DEBUG __last => &D.90329
  # DEBUG __result => &D.90330
  # DEBUG __x => &D.90329
  # DEBUG __y => &D.90328
  # DEBUG __size => 8
  _106 = (long int) _11;
  _108 = (long int) _16;
  _109 = _106 - _108;
  _110 = _109 /[ex] 8;
  _111 = _110 + -1;
  _112 = _111 * 64;
  _114 = (long int) _8;
  _116 = (long int) _9;
  _117 = _114 - _116;
  _118 = _117 /[ex] 8;
  _119 = _112 + _118;
  _121 = (long int) _15;
  _123 = (long int) _13;
  _124 = _121 - _123;
  _125 = _124 /[ex] 8;
  __n_126 = _119 + _125;
  # DEBUG __n => __n_126
  # DEBUG __n => __n_126
  if (__n_126 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_20 = PHI <__n_126(3), __n_137(9)>
  # SR.2210_235 = PHI <_13(3), SR.2210_234(9)>
  # SR.2211_233 = PHI <_15(3), SR.2211_232(9)>
  # SR.2212_231 = PHI <_16(3), SR.2212_230(9)>
  # SR.2213_229 = PHI <_3(3), SR.2213_227(9)>
  # SR.2214_224 = PHI <_4(3), SR.2214_223(9)>
  # SR.2215_216 = PHI <_5(3), SR.2215_215(9)>
  # SR.2216_213 = PHI <_6(3), SR.2216_150(9)>
  # DEBUG __n => __n_20
  # DEBUG D#130 => &D.90330
  # DEBUG this => D#130
  # DEBUG D#130 => &D.90328
  # DEBUG this => D#130
  _130 = *SR.2210_235;
  *SR.2213_229 = _130;
  # DEBUG this => &D.90328
  _132 = SR.2210_235 + 8;
  if (_132 == SR.2211_233)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.90328
  _143 = SR.2212_231 + 8;
  # DEBUG this => &D.90328
  # DEBUG __new_node => _143
  _144 = MEM[(struct Credit * * *)SR.2212_231 + 8B];
  # DEBUG __size => 8
  _145 = _144 + 512;

  <bb 6>:
  # SR.2210_234 = PHI <_132(4), _144(5)>
  # SR.2211_232 = PHI <SR.2211_233(4), _145(5)>
  # SR.2212_230 = PHI <SR.2212_231(4), _143(5)>
  # DEBUG this => &D.90330
  _135 = SR.2213_229 + 8;
  if (_135 == SR.2215_216)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.90330
  _147 = SR.2216_213 + 8;
  # DEBUG this => &D.90330
  # DEBUG __new_node => _147
  _148 = MEM[(struct Credit * * *)SR.2216_213 + 8B];
  # DEBUG __size => 8
  _149 = _148 + 512;

  <bb 8>:
  # SR.2213_227 = PHI <_135(6), _148(7)>
  # SR.2214_223 = PHI <SR.2214_224(6), _148(7)>
  # SR.2215_215 = PHI <SR.2215_216(6), _149(7)>
  # SR.2216_150 = PHI <SR.2216_213(6), _147(7)>
  __n_137 = __n_20 + -1;
  # DEBUG __n => __n_137
  # DEBUG __n => __n_137
  if (__n_137 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.2216_19 = PHI <SR.2216_150(8)>
  # SR.2215_18 = PHI <SR.2215_215(8)>
  # SR.2214_23 = PHI <SR.2214_223(8)>
  # SR.2213_10 = PHI <SR.2213_227(8)>

  <bb 12>:

  <bb 11>:
  # SR.2213_226 = PHI <SR.2213_10(12), _3(2)>
  # SR.2214_221 = PHI <SR.2214_23(12), _4(2)>
  # SR.2215_214 = PHI <SR.2215_18(12), _5(2)>
  # SR.2216_127 = PHI <SR.2216_19(12), _6(2)>
  # DEBUG this => _1(D)
  # DEBUG __x => &D.90330
  _1(D)->_M_cur = SR.2213_226;
  _1(D)->_M_first = SR.2214_221;
  _1(D)->_M_last = SR.2215_214;
  _1(D)->_M_node = SR.2216_127;
  D.90328 ={v} {CLOBBER};
  D.90329 ={v} {CLOBBER};
  D.90330 ={v} {CLOBBER};
  D.90312 ={v} {CLOBBER};
  D.90313 ={v} {CLOBBER};
  D.90314 ={v} {CLOBBER};
  D.90288 ={v} {CLOBBER};
  D.90289 ={v} {CLOBBER};
  D.90290 ={v} {CLOBBER};
  D.90268 ={v} {CLOBBER};
  D.90269 ={v} {CLOBBER};
  D.90270 ={v} {CLOBBER};
  D.90256 ={v} {CLOBBER};
  D.90257 ={v} {CLOBBER};
  D.90258 ={v} {CLOBBER};
  D.90243 ={v} {CLOBBER};
  D.90242 ={v} {CLOBBER};
  D.90241 ={v} {CLOBBER};
  D.88774 ={v} {CLOBBER};
  D.88775 ={v} {CLOBBER};
  D.88776 ={v} {CLOBBER};
  return _1(D);

}



;; Function _ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _Allocator = std::allocator<Flit*>] (_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.329, funcdef_no=3829, decl_uid=88025, cgraph_uid=1749, symbol_order=3595)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _Allocator = std::allocator<Flit*>] (struct _Deque_iterator & restrict __first, struct _Deque_iterator & restrict __last, struct _Deque_iterator & restrict __result)
{
  struct Flit * * * SR.2234;
  struct Flit * * SR.2233;
  struct Flit * * SR.2232;
  struct Flit * * SR.2231;
  struct Flit * * * SR.2230;
  struct Flit * * SR.2229;
  struct Flit * * SR.2228;
  _Distance __n;
  struct _Deque_iterator D.90479;
  struct _Deque_iterator D.90478;
  struct _Deque_iterator D.90477;
  struct iterator_type D.90463;
  struct iterator_type D.90462;
  struct iterator_type D.90461;
  struct _Deque_iterator D.90439;
  struct iterator_type D.90438;
  struct iterator_type D.90437;
  struct _Deque_iterator D.90419;
  struct _Deque_iterator D.90418;
  struct _Deque_iterator D.90417;
  struct _Deque_iterator D.90407;
  struct _Deque_iterator D.90406;
  struct _Deque_iterator D.90405;
  struct _Deque_iterator D.90392;
  struct _Deque_iterator D.90391;
  struct _Deque_iterator D.90390;
  struct _Deque_iterator D.88039;
  struct _Deque_iterator D.88038;
  struct _Deque_iterator D.88037;
  struct Flit * * _3;
  struct Flit * * _4;
  struct Flit * * _5;
  struct Flit * * * _6;
  struct Flit * * _8;
  struct Flit * * _9;
  struct Flit * * * _11;
  struct Flit * * _13;
  struct Flit * * _15;
  struct Flit * * * _16;
  long int _106;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _114;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _121;
  long int _123;
  long int _124;
  long int _125;
  struct Flit * _130;
  struct Flit * * _132;
  struct Flit * * _135;
  struct Flit * * * _143;
  struct Flit * * _144;
  struct Flit * * _145;
  struct Flit * * * _147;
  struct Flit * * _148;
  struct Flit * * _149;

  <bb 2>:
  # DEBUG __alloc s=> __alloc
  # DEBUG D#1360 s=> __alloc
  # DEBUG this => &D.88039
  # DEBUG __x => __result_2(D)
  _3 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  # DEBUG this => &D.88038
  # DEBUG __x => __last_7(D)
  _8 = MEM[(const struct iterator &)__last_7(D)]._M_cur;
  _9 = MEM[(const struct iterator &)__last_7(D)]._M_first;
  _11 = MEM[(const struct iterator &)__last_7(D)]._M_node;
  # DEBUG this => &D.88037
  # DEBUG __x => __first_12(D)
  _13 = MEM[(const struct iterator &)__first_12(D)]._M_cur;
  _15 = MEM[(const struct iterator &)__first_12(D)]._M_last;
  _16 = MEM[(const struct iterator &)__first_12(D)]._M_node;
  # DEBUG D#1359 => D#1360
  # DEBUG __first => &D.88037
  # DEBUG __last => &D.88038
  # DEBUG __result => &D.88039
  # DEBUG D.90383 => D#1359
  # DEBUG this => &D.90390
  # DEBUG __x => &D.88039
  # DEBUG this => &D.90391
  # DEBUG __x => &D.88038
  # DEBUG this => &D.90392
  # DEBUG __x => &D.88037
  # DEBUG __first => &D.90392
  # DEBUG __last => &D.90391
  # DEBUG __result => &D.90390
  # DEBUG __assignable => 1
  # DEBUG this => &D.90407
  # DEBUG __x => &D.90390
  # DEBUG this => &D.90406
  # DEBUG __x => &D.90391
  # DEBUG this => &D.90405
  # DEBUG __x => &D.90392
  # DEBUG __first => &D.90405
  # DEBUG __last => &D.90406
  # DEBUG __result => &D.90407
  # DEBUG this => &D.90419
  # DEBUG __x => &D.90407
  # DEBUG this => &D.90418
  # DEBUG __x => &D.90406
  # DEBUG this => &D.90417
  # DEBUG __x => &D.90405
  # DEBUG __first => &D.90417
  # DEBUG __last => &D.90418
  # DEBUG __result => &D.90419
  # DEBUG this => &D.90439
  # DEBUG __x => &D.90419
  # DEBUG this => NULL
  # DEBUG __x => &D.90418
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90438
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.90417
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90437
  # DEBUG __x => NULL
  # DEBUG __first => &D.90437
  # DEBUG __last => &D.90438
  # DEBUG __result => &D.90439
  # DEBUG this => NULL
  # DEBUG __x => &D.90439
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90463
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.90438
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90462
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.90437
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.90461
  # DEBUG __x => NULL
  # DEBUG __first => &D.90461
  # DEBUG __last => &D.90462
  # DEBUG __result => &D.90463
  # DEBUG __simple => 0
  # DEBUG this => &D.90479
  # DEBUG __x => &D.90463
  # DEBUG this => &D.90478
  # DEBUG __x => &D.90462
  # DEBUG this => &D.90477
  # DEBUG __x => &D.90461
  # DEBUG __first => &D.90477
  # DEBUG __last => &D.90478
  # DEBUG __result => &D.90479
  # DEBUG __x => &D.90478
  # DEBUG __y => &D.90477
  # DEBUG __size => 8
  _106 = (long int) _11;
  _108 = (long int) _16;
  _109 = _106 - _108;
  _110 = _109 /[ex] 8;
  _111 = _110 + -1;
  _112 = _111 * 64;
  _114 = (long int) _8;
  _116 = (long int) _9;
  _117 = _114 - _116;
  _118 = _117 /[ex] 8;
  _119 = _112 + _118;
  _121 = (long int) _15;
  _123 = (long int) _13;
  _124 = _121 - _123;
  _125 = _124 /[ex] 8;
  __n_126 = _119 + _125;
  # DEBUG __n => __n_126
  # DEBUG __n => __n_126
  if (__n_126 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_20 = PHI <__n_126(3), __n_137(9)>
  # SR.2228_235 = PHI <_13(3), SR.2228_234(9)>
  # SR.2229_233 = PHI <_15(3), SR.2229_232(9)>
  # SR.2230_231 = PHI <_16(3), SR.2230_230(9)>
  # SR.2231_229 = PHI <_3(3), SR.2231_227(9)>
  # SR.2232_224 = PHI <_4(3), SR.2232_223(9)>
  # SR.2233_216 = PHI <_5(3), SR.2233_215(9)>
  # SR.2234_213 = PHI <_6(3), SR.2234_150(9)>
  # DEBUG __n => __n_20
  # DEBUG D#119 => &D.90479
  # DEBUG this => D#119
  # DEBUG D#119 => &D.90477
  # DEBUG this => D#119
  _130 = *SR.2228_235;
  *SR.2231_229 = _130;
  # DEBUG this => &D.90477
  _132 = SR.2228_235 + 8;
  if (_132 == SR.2229_233)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.90477
  _143 = SR.2230_231 + 8;
  # DEBUG this => &D.90477
  # DEBUG __new_node => _143
  _144 = MEM[(struct Flit * * *)SR.2230_231 + 8B];
  # DEBUG __size => 8
  _145 = _144 + 512;

  <bb 6>:
  # SR.2228_234 = PHI <_132(4), _144(5)>
  # SR.2229_232 = PHI <SR.2229_233(4), _145(5)>
  # SR.2230_230 = PHI <SR.2230_231(4), _143(5)>
  # DEBUG this => &D.90479
  _135 = SR.2231_229 + 8;
  if (_135 == SR.2233_216)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.90479
  _147 = SR.2234_213 + 8;
  # DEBUG this => &D.90479
  # DEBUG __new_node => _147
  _148 = MEM[(struct Flit * * *)SR.2234_213 + 8B];
  # DEBUG __size => 8
  _149 = _148 + 512;

  <bb 8>:
  # SR.2231_227 = PHI <_135(6), _148(7)>
  # SR.2232_223 = PHI <SR.2232_224(6), _148(7)>
  # SR.2233_215 = PHI <SR.2233_216(6), _149(7)>
  # SR.2234_150 = PHI <SR.2234_213(6), _147(7)>
  __n_137 = __n_20 + -1;
  # DEBUG __n => __n_137
  # DEBUG __n => __n_137
  if (__n_137 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.2234_19 = PHI <SR.2234_150(8)>
  # SR.2233_18 = PHI <SR.2233_215(8)>
  # SR.2232_23 = PHI <SR.2232_223(8)>
  # SR.2231_10 = PHI <SR.2231_227(8)>

  <bb 12>:

  <bb 11>:
  # SR.2231_226 = PHI <SR.2231_10(12), _3(2)>
  # SR.2232_221 = PHI <SR.2232_23(12), _4(2)>
  # SR.2233_214 = PHI <SR.2233_18(12), _5(2)>
  # SR.2234_127 = PHI <SR.2234_19(12), _6(2)>
  # DEBUG this => _1(D)
  # DEBUG __x => &D.90479
  _1(D)->_M_cur = SR.2231_226;
  _1(D)->_M_first = SR.2232_221;
  _1(D)->_M_last = SR.2233_214;
  _1(D)->_M_node = SR.2234_127;
  D.90477 ={v} {CLOBBER};
  D.90478 ={v} {CLOBBER};
  D.90479 ={v} {CLOBBER};
  D.90461 ={v} {CLOBBER};
  D.90462 ={v} {CLOBBER};
  D.90463 ={v} {CLOBBER};
  D.90437 ={v} {CLOBBER};
  D.90438 ={v} {CLOBBER};
  D.90439 ={v} {CLOBBER};
  D.90417 ={v} {CLOBBER};
  D.90418 ={v} {CLOBBER};
  D.90419 ={v} {CLOBBER};
  D.90405 ={v} {CLOBBER};
  D.90406 ={v} {CLOBBER};
  D.90407 ={v} {CLOBBER};
  D.90392 ={v} {CLOBBER};
  D.90391 ={v} {CLOBBER};
  D.90390 ={v} {CLOBBER};
  D.88037 ={v} {CLOBBER};
  D.88038 ={v} {CLOBBER};
  D.88039 ={v} {CLOBBER};
  return _1(D);

}



;; Function PipelineFIFO<T>::~PipelineFIFO() [with T = Flit] (_ZN12PipelineFIFOI4FlitED2Ev, funcdef_no=2186, decl_uid=52555, cgraph_uid=646, symbol_order=647)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::~PipelineFIFO() [with T = Flit] (struct PipelineFIFO * const this)
{
  struct vector * __first;
  struct vector * _7;
  struct Module * * _9;
  char * const _10;
  const char * _11;
  char * const _12;
  const char * _13;
  struct Flit * * _16;
  struct vector * pretmp_25;
  struct vector * prephitmp_26;

  <bb 2>:
  this_2(D)->D.52558._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI4FlitE + 16B];
  # DEBUG D#1476 => &this_2(D)->_data
  # DEBUG this => D#1476
  # DEBUG D#587 => &D#1476->D.52514
  # DEBUG this => D#587
  _7 = MEM[(struct vector *)this_2(D) + 112B].D.52514._M_impl._M_finish;
  __first_14 = MEM[(struct vector *)this_2(D) + 112B].D.52514._M_impl._M_start;
  # DEBUG __first => __first_14
  # DEBUG __last => _7
  # DEBUG __first => __first_14
  if (_7 == __first_14)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_55 = PHI <__first_14(3), __first_17(7)>
  # DEBUG __first => __first_55
  # DEBUG __r => __first_55
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _16 = MEM[(struct _Vector_base *)__first_55]._M_impl._M_start;
  # DEBUG D#576 => (long int) _16
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _16
  # DEBUG __n => D#573
  if (_16 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _16
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _16
  # DEBUG this => D#565
  # DEBUG D.90594 => D#566
  operator delete (_16);

  <bb 6>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__first_55] ={v} {CLOBBER};
  __first_17 = __first_55 + 24;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (_7 == __first_17)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 18>:
  pretmp_25 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;

  <bb 9>:
  # prephitmp_26 = PHI <pretmp_25(18), __first_14(2)>
  # DEBUG D#588 => &D#1476->D.52514
  # DEBUG this => D#588
  # DEBUG D#564 => D#588->_M_impl._M_end_of_storage
  # DEBUG D#563 => (long int) D#564
  # DEBUG D#1477 => MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start
  # DEBUG D#562 => (long int) D#1477
  # DEBUG D#561 => D#563 - D#562
  # DEBUG D#560 => D#561 /[ex] 24
  # DEBUG D#557 => D#588
  # DEBUG D#558 => (long unsigned int) D#560
  # DEBUG __p => D#1477
  # DEBUG this => D#557
  # DEBUG __n => D#558
  # DEBUG D#556 => D#558
  # DEBUG D#555 => D#557
  if (prephitmp_26 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#554 => &D#555->_M_impl
  # DEBUG D#552 => D#554
  # DEBUG D#553 => D#556
  # DEBUG __p => D#1477
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => D#1477
  # DEBUG this => D#548
  # DEBUG D.90608 => D#549
  operator delete (prephitmp_26);

  <bb 11>:
  # DEBUG D#559 => &D#588->_M_impl
  # DEBUG this => D#559
  # DEBUG this => D#559
  # DEBUG this => D#559
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#1475 => &this_2(D)->D.52558
  # DEBUG this => D#1475
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#277 => &D#1475->_children
  # DEBUG this => D#277
  # DEBUG D#271 => &D#277->D.29566
  # DEBUG this => D#271
  # DEBUG D#274 => D#277->D.29566._M_impl._M_finish
  # DEBUG D#273 => D#277->D.29566._M_impl._M_start
  # DEBUG D#143 => D#273
  # DEBUG D#144 => D#274
  # DEBUG __first => D#143
  # DEBUG __last => D#144
  # DEBUG D.74504 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#141 => D#143
  # DEBUG D#139 => D#141
  # DEBUG D#140 => D#142
  # DEBUG __first => D#139
  # DEBUG __last => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG D.73747 => D#135
  # DEBUG D.73746 => D#136
  # DEBUG D#272 => &D#277->D.29566
  # DEBUG this => D#272
  # DEBUG D#270 => D#272->_M_impl._M_end_of_storage
  # DEBUG D#269 => (long int) D#270
  _9 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#268 => (long int) _9
  # DEBUG D#267 => D#269 - D#268
  # DEBUG D#266 => D#267 /[ex] 8
  # DEBUG D#263 => D#272
  # DEBUG D#264 => (long unsigned int) D#266
  # DEBUG __p => _9
  # DEBUG this => D#263
  # DEBUG __n => D#264
  # DEBUG D#262 => D#264
  # DEBUG D#261 => D#263
  if (_9 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#260 => &D#261->_M_impl
  # DEBUG D#258 => D#260
  # DEBUG D#259 => D#262
  # DEBUG __p => _9
  # DEBUG __a => D#258
  # DEBUG __n => D#259
  # DEBUG D#257 => D#259
  # DEBUG D#256 => D#258
  # DEBUG D#254 => D#256
  # DEBUG D#255 => D#257
  # DEBUG __p => _9
  # DEBUG this => D#254
  # DEBUG D.90539 => D#255
  operator delete (_9);

  <bb 13>:
  # DEBUG D#265 => &D#272->_M_impl
  # DEBUG this => D#265
  # DEBUG this => D#265
  # DEBUG this => D#265
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#276 => &D#1475->_fullname
  # DEBUG this => D#276
  # DEBUG this => D#276
  # DEBUG this => D#276
  _10 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  _11 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_10 != _11)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#276].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#276
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  # DEBUG D#249 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _10
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _10
  # DEBUG this => D#243
  # DEBUG D.90552 => D#244
  operator delete (_10);

  <bb 15>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#275 => &D#1475->_name
  # DEBUG this => D#275
  # DEBUG this => D#275
  # DEBUG this => D#275
  _12 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  _13 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_12 != _13)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#275].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#275
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  # DEBUG D#249 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _12
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _12
  # DEBUG this => D#243
  # DEBUG D.90567 => D#244
  operator delete (_12);

  <bb 17>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function PipelineFIFO<T>::~PipelineFIFO() [with T = Flit] (_ZN12PipelineFIFOI4FlitED0Ev, funcdef_no=2188, decl_uid=52549, cgraph_uid=648, symbol_order=649)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::~PipelineFIFO() [with T = Flit] (struct PipelineFIFO * const this)
{
  struct vector * __first;
  struct vector * _8;
  struct Module * * _10;
  char * const _11;
  const char * _12;
  char * const _13;
  const char * _14;
  struct Flit * * _17;
  struct vector * pretmp_26;
  struct vector * prephitmp_27;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.52558._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI4FlitE + 16B];
  # DEBUG D#1479 => &this_2(D)->_data
  # DEBUG this => D#1479
  # DEBUG D#587 => &D#1479->D.52514
  # DEBUG this => D#587
  _8 = MEM[(struct vector *)this_2(D) + 112B].D.52514._M_impl._M_finish;
  __first_15 = MEM[(struct vector *)this_2(D) + 112B].D.52514._M_impl._M_start;
  # DEBUG __first => __first_15
  # DEBUG __last => _8
  # DEBUG __first => __first_15
  if (_8 == __first_15)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_56 = PHI <__first_15(3), __first_18(7)>
  # DEBUG __first => __first_56
  # DEBUG __r => __first_56
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _17 = MEM[(struct _Vector_base *)__first_56]._M_impl._M_start;
  # DEBUG D#576 => (long int) _17
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _17
  # DEBUG __n => D#573
  if (_17 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _17
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _17
  # DEBUG this => D#565
  # DEBUG D.90696 => D#566
  operator delete (_17);

  <bb 6>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__first_56] ={v} {CLOBBER};
  __first_18 = __first_56 + 24;
  # DEBUG __first => __first_18
  # DEBUG __first => __first_18
  if (_8 == __first_18)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 18>:
  pretmp_26 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;

  <bb 9>:
  # prephitmp_27 = PHI <pretmp_26(18), __first_15(2)>
  # DEBUG D#588 => &D#1479->D.52514
  # DEBUG this => D#588
  # DEBUG D#564 => D#588->_M_impl._M_end_of_storage
  # DEBUG D#563 => (long int) D#564
  # DEBUG D#1480 => MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start
  # DEBUG D#562 => (long int) D#1480
  # DEBUG D#561 => D#563 - D#562
  # DEBUG D#560 => D#561 /[ex] 24
  # DEBUG D#557 => D#588
  # DEBUG D#558 => (long unsigned int) D#560
  # DEBUG __p => D#1480
  # DEBUG this => D#557
  # DEBUG __n => D#558
  # DEBUG D#556 => D#558
  # DEBUG D#555 => D#557
  if (prephitmp_27 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#554 => &D#555->_M_impl
  # DEBUG D#552 => D#554
  # DEBUG D#553 => D#556
  # DEBUG __p => D#1480
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => D#1480
  # DEBUG this => D#548
  # DEBUG D.90710 => D#549
  operator delete (prephitmp_27);

  <bb 11>:
  # DEBUG D#559 => &D#588->_M_impl
  # DEBUG this => D#559
  # DEBUG this => D#559
  # DEBUG this => D#559
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#1478 => &this_2(D)->D.52558
  # DEBUG this => D#1478
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#277 => &D#1478->_children
  # DEBUG this => D#277
  # DEBUG D#271 => &D#277->D.29566
  # DEBUG this => D#271
  # DEBUG D#274 => D#277->D.29566._M_impl._M_finish
  # DEBUG D#273 => D#277->D.29566._M_impl._M_start
  # DEBUG D#143 => D#273
  # DEBUG D#144 => D#274
  # DEBUG __first => D#143
  # DEBUG __last => D#144
  # DEBUG D.74504 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#141 => D#143
  # DEBUG D#139 => D#141
  # DEBUG D#140 => D#142
  # DEBUG __first => D#139
  # DEBUG __last => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG D.73747 => D#135
  # DEBUG D.73746 => D#136
  # DEBUG D#272 => &D#277->D.29566
  # DEBUG this => D#272
  # DEBUG D#270 => D#272->_M_impl._M_end_of_storage
  # DEBUG D#269 => (long int) D#270
  _10 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#268 => (long int) _10
  # DEBUG D#267 => D#269 - D#268
  # DEBUG D#266 => D#267 /[ex] 8
  # DEBUG D#263 => D#272
  # DEBUG D#264 => (long unsigned int) D#266
  # DEBUG __p => _10
  # DEBUG this => D#263
  # DEBUG __n => D#264
  # DEBUG D#262 => D#264
  # DEBUG D#261 => D#263
  if (_10 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#260 => &D#261->_M_impl
  # DEBUG D#258 => D#260
  # DEBUG D#259 => D#262
  # DEBUG __p => _10
  # DEBUG __a => D#258
  # DEBUG __n => D#259
  # DEBUG D#257 => D#259
  # DEBUG D#256 => D#258
  # DEBUG D#254 => D#256
  # DEBUG D#255 => D#257
  # DEBUG __p => _10
  # DEBUG this => D#254
  # DEBUG D.90641 => D#255
  operator delete (_10);

  <bb 13>:
  # DEBUG D#265 => &D#272->_M_impl
  # DEBUG this => D#265
  # DEBUG this => D#265
  # DEBUG this => D#265
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#276 => &D#1478->_fullname
  # DEBUG this => D#276
  # DEBUG this => D#276
  # DEBUG this => D#276
  _11 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  _12 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_11 != _12)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#276].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#276
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  # DEBUG D#249 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _11
  # DEBUG this => D#243
  # DEBUG D.90654 => D#244
  operator delete (_11);

  <bb 15>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#275 => &D#1478->_name
  # DEBUG this => D#275
  # DEBUG this => D#275
  # DEBUG this => D#275
  _13 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  _14 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_13 != _14)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#275].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#275
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  # DEBUG D#249 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _13
  # DEBUG this => D#243
  # DEBUG D.90669 => D#244
  operator delete (_13);

  <bb 17>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function int ChaosRouter::_InputForOutput(int) const (_ZNK11ChaosRouter15_InputForOutputEi, funcdef_no=2046, decl_uid=50355, cgraph_uid=506, symbol_order=507)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int ChaosRouter::_InputForOutput(int) const (const struct ChaosRouter * const this, int output)
{
  bool ready;
  int i;
  bool match;
  int input;
  int iftmp.249_6;
  int _8;
  int _11;
  long unsigned int _12;
  int _15;
  long int _17;
  struct OutputSet * _18;
  bool _21;
  struct OutputSet * * const _23;
  long int _24;
  long int _25;
  int _26;
  eQState * const _27;
  long unsigned int _28;
  const eQState & _29;
  eQState _30;
  long unsigned int _33;
  struct OutputSet * const & _34;
  int _41;
  unsigned int _46;
  const int prephitmp_54;
  const int pretmp_62;
  const int prephitmp_63;
  const int pretmp_64;
  const int prephitmp_65;

  <bb 2>:
  _11 = this_10(D)->D.50427._inputs;
  # DEBUG max => _11 + -1
  _17 = ran_next ();
  _24 = (long int) _11;
  _25 = _17 % _24;
  _26 = (int) _25;
  # DEBUG offset => _26
  # DEBUG match => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG match => 0
  # DEBUG input => input_13(D)
  _41 = this_10(D)->D.50427._inputs;
  if (_41 <= 0)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 3>:

  <bb 18>:
  goto <bb 14>;

  <bb 4>:
  if (match_3 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # input_53 = PHI <input_16(4)>
  goto <bb 14>;

  <bb 6>:
  goto <bb 8>;

  <bb 7>:

  <bb 8>:
  # i_38 = PHI <0(7), i_22(6)>
  # _8 = PHI <_41(7), prephitmp_65(6)>
  # prephitmp_54 = PHI <_41(7), prephitmp_65(6)>
  # DEBUG i => i_38
  # DEBUG match => 0
  # DEBUG input => input_13(D)
  _15 = _26 + i_38;
  input_16 = _15 % _8;
  # DEBUG input => input_16
  # DEBUG this => this_10(D)
  # DEBUG input => input_16
  # DEBUG ready => 0
  _12 = (long unsigned int) input_16;
  # DEBUG D#38 => &this_10(D)->_input_state
  _27 = MEM[(eQState * *)this_10(D) + 472B];
  # DEBUG D#37 => D#38
  # DEBUG __n => _12
  # DEBUG this => D#37
  _28 = _12 * 4;
  _29 = _27 + _28;
  _30 = *_29;
  # DEBUG D#39 => &this_10(D)->_input_state
  # DEBUG D#37 => D#39
  # DEBUG __n => _12
  # DEBUG this => D#37
  _46 = _30 + 4294967295;
  # DEBUG ready => _46 <= 1
  if (_46 <= 1)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 9>:
  # DEBUG ready => 1
  # DEBUG D#43 => &this_10(D)->_input_route
  _23 = MEM[(struct OutputSet * * *)this_10(D) + 288B];
  # DEBUG D#42 => D#43
  # DEBUG __n => _12
  # DEBUG this => D#42
  _33 = _12 * 8;
  _34 = _23 + _33;
  _18 = *_34;
  _21 = OutputSet::OutputEmpty (_18, output_19(D));
  if (_21 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  pretmp_62 = this_10(D)->D.50427._inputs;
  goto <bb 15>;

  <bb 11>:
  pretmp_64 = this_10(D)->D.50427._inputs;

  <bb 12>:
  # match_3 = PHI <0(16), 1(11)>
  # prephitmp_65 = PHI <prephitmp_63(16), pretmp_64(11)>
  # DEBUG match => match_3
  i_22 = i_38 + 1;
  # DEBUG i => i_22
  # DEBUG i => i_22
  # DEBUG match => match_3
  # DEBUG input => input_16
  if (i_22 >= prephitmp_65)
    goto <bb 13>;
  else
    goto <bb 4>;

  <bb 13>:
  # match_56 = PHI <match_3(12)>
  # input_55 = PHI <input_16(12)>
  if (match_56 != 0)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 14>:
  # iftmp.249_6 = PHI <input_55(13), -1(18), input_53(5)>

  <bb 17>:
  return iftmp.249_6;

  <bb 15>:
  # prephitmp_63 = PHI <prephitmp_54(8), pretmp_62(10)>

  <bb 16>:
  goto <bb 12>;

}



;; Function int ChaosRouter::_MultiQueueForOutput(int) const (_ZNK11ChaosRouter20_MultiQueueForOutputEi, funcdef_no=2047, decl_uid=50358, cgraph_uid=507, symbol_order=508)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int ChaosRouter::_MultiQueueForOutput(int) const (const struct ChaosRouter * const this, int output)
{
  char_type D.91172;
  char __c;
  char_type D.91169;
  char __c;
  char_type D.91166;
  struct basic_ostream & D.91160;
  int i;
  bool isfull;
  int mq_age;
  int mq_oldest;
  unsigned int _13;
  eQState _14;
  const eQState & _15;
  long unsigned int _24;
  struct OutputSet * const & _25;
  int _26;
  long unsigned int _27;
  eQState _28;
  struct OutputSet * _29;
  bool _32;
  int _33;
  const eQState & _35;
  bool _38;
  bool _39;
  const int & _40;
  int _42;
  long unsigned int _44;
  long unsigned int _45;
  eQState _46;
  int * const _48;
  int * const _49;
  struct OutputSet * * const _54;
  const int & _55;
  int _58;
  int _59;
  long int _60;
  long int _61;
  long int _62;
  int _63;
  long unsigned int _64;
  const eQState & _65;
  const struct __ctype_type * _68;
  int (*__vtbl_ptr_type) () * _69;
  long int _70;
  sizetype _71;
  struct basic_ios * _72;
  long unsigned int _73;
  struct basic_ostream & _75;
  long unsigned int _76;
  char _77;
  char_type _80;
  int (*__vtbl_ptr_type) () * _85;
  int (*__vtbl_ptr_type) () _86;
  unsigned int _89;
  void * PROF_90;
  char_type _92;
  int _98;
  bool _99;
  bool _105;
  bool _107;
  int _109;
  eQState * const _111;
  unsigned int _112;
  int _119;
  int pretmp_121;
  int pretmp_122;
  int prephitmp_123;
  eQState * const pretmp_134;
  eQState * const prephitmp_135;
  const int prephitmp_137;
  const int prephitmp_138;
  eQState * const pretmp_143;
  eQState * const pretmp_144;
  eQState * const pretmp_146;
  eQState * const prephitmp_147;
  eQState * const pretmp_148;
  eQState * const pretmp_149;
  eQState * const pretmp_150;
  eQState * const pretmp_151;
  int * const pretmp_153;
  int * const pretmp_155;
  const int pretmp_157;
  const int pretmp_158;
  const int pretmp_159;
  const int prephitmp_160;
  const eQState pretmp_161;
  const eQState pretmp_162;
  const eQState pretmp_163;
  const eQState pretmp_164;
  const eQState prephitmp_165;
  unsigned int pretmp_166;
  unsigned int pretmp_167;
  unsigned int pretmp_168;
  unsigned int pretmp_169;
  unsigned int prephitmp_170;
  const int pretmp_171;
  const int prephitmp_172;

  <bb 2>:
  # DEBUG mq_oldest => -1
  # DEBUG isfull => 1
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG isfull => 1
  # DEBUG mq_age => mq_age_20(D)
  # DEBUG mq_oldest => -1
  _98 = this_22(D)->_multi_queue_size;
  if (_98 <= 0)
    goto <bb 15>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_134 = MEM[(eQState * *)this_22(D) + 496B];

  <bb 4>:
  # mq_oldest_100 = PHI <-1(3), mq_oldest_2(13)>
  # mq_age_106 = PHI <mq_age_20(D)(3), mq_age_6(13)>
  # isfull_93 = PHI <1(3), isfull_8(13)>
  # mq_oldest_81 = PHI <0(3), mq_oldest_37(13)>
  # prephitmp_135 = PHI <pretmp_134(3), prephitmp_147(13)>
  # prephitmp_138 = PHI <_98(3), prephitmp_160(13)>
  # DEBUG i => mq_oldest_81
  # DEBUG isfull => isfull_93
  # DEBUG mq_age => mq_age_106
  # DEBUG mq_oldest => mq_oldest_100
  _24 = (long unsigned int) mq_oldest_81;
  # DEBUG D#44 => &this_22(D)->_multi_match
  _48 = MEM[(int * *)this_22(D) + 568B];
  # DEBUG D#28 => D#44
  # DEBUG __n => _24
  # DEBUG this => D#28
  _45 = _24 * 4;
  _40 = _48 + _45;
  _26 = *_40;
  if (_26 == -1)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_150 = prephitmp_135 + _45;
  pretmp_163 = MEM[(const eQState &)pretmp_150];
  pretmp_168 = pretmp_163 + 4294967295;
  goto <bb 10>;

  <bb 6>:
  # DEBUG D#45 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#45
  # DEBUG __n => _24
  # DEBUG this => D#37
  _35 = prephitmp_135 + _45;
  _28 = *_35;
  # DEBUG D#46 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#46
  # DEBUG __n => _24
  # DEBUG this => D#37
  _89 = _28 + 4294967295;
  if (_89 <= 1)
    goto <bb 29>;
  else
    goto <bb 10>;

  <bb 7>:
  if (mq_oldest_100 == -1)
    goto <bb 31>;
  else
    goto <bb 8>;

  <bb 8>:
  # DEBUG D#48 => &this_22(D)->_mq_age
  _49 = MEM[(int * *)this_22(D) + 592B];
  # DEBUG D#28 => D#48
  # DEBUG __n => _24
  # DEBUG this => D#28
  _55 = _49 + _45;
  _33 = *_55;
  if (_33 > mq_age_106)
    goto <bb 32>;
  else
    goto <bb 9>;

  <bb 9>:
  pretmp_144 = MEM[(eQState * *)this_22(D) + 496B];
  pretmp_149 = pretmp_144 + _45;
  pretmp_158 = this_22(D)->_multi_queue_size;
  pretmp_162 = MEM[(const eQState &)pretmp_149];
  pretmp_167 = pretmp_162 + 4294967295;

  <bb 10>:
  # mq_oldest_2 = PHI <mq_oldest_100(6), mq_oldest_81(37), mq_oldest_100(9), mq_oldest_100(5), mq_oldest_100(30)>
  # mq_age_6 = PHI <mq_age_106(6), prephitmp_172(37), mq_age_106(9), mq_age_106(5), mq_age_106(30)>
  # prephitmp_147 = PHI <prephitmp_135(6), pretmp_143(37), pretmp_144(9), prephitmp_135(5), pretmp_146(30)>
  # prephitmp_160 = PHI <prephitmp_138(6), pretmp_157(37), pretmp_158(9), prephitmp_138(5), pretmp_159(30)>
  # prephitmp_165 = PHI <_28(6), pretmp_161(37), pretmp_162(9), pretmp_163(5), pretmp_164(30)>
  # prephitmp_170 = PHI <_89(6), pretmp_166(37), pretmp_167(9), pretmp_168(5), pretmp_169(30)>
  # DEBUG mq_age => mq_age_6
  # DEBUG mq_oldest => mq_oldest_2
  # DEBUG D#50 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#50
  # DEBUG __n => _24
  # DEBUG this => D#37
  # DEBUG D#51 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#51
  # DEBUG __n => _24
  # DEBUG this => D#37
  # DEBUG D#52 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#52
  # DEBUG __n => _24
  # DEBUG this => D#37
  _99 = prephitmp_165 != 5;
  _107 = prephitmp_170 > 1;
  _105 = _99 & _107;
  if (_105 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # isfull_8 = PHI <isfull_93(11), 0(10)>
  # DEBUG isfull => isfull_8
  mq_oldest_37 = mq_oldest_81 + 1;
  # DEBUG i => mq_oldest_37
  # DEBUG i => mq_oldest_37
  # DEBUG isfull => isfull_8
  # DEBUG mq_age => mq_age_6
  # DEBUG mq_oldest => mq_oldest_2
  if (mq_oldest_37 >= prephitmp_160)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 4>;

  <bb 14>:
  # mq_oldest_141 = PHI <mq_oldest_2(12)>
  # isfull_140 = PHI <isfull_8(12)>
  # prephitmp_137 = PHI <prephitmp_160(12)>

  <bb 36>:
  _38 = mq_oldest_141 == -1;
  _39 = isfull_140 & _38;
  if (_39 != 0)
    goto <bb 15>;
  else
    goto <bb 28>;

  <bb 15>:
  # mq_oldest_12 = PHI <mq_oldest_141(36), -1(2)>
  # _119 = PHI <prephitmp_137(36), _98(2)>
  # DEBUG this => this_22(D)
  # DEBUG chan => output_30(D)
  _58 = this_22(D)->D.50427._outputs;
  _59 = _58 + -1;
  if (output_30(D) != _59)
    goto <bb 33>;
  else
    goto <bb 28>;

  <bb 16>:
  mq_oldest_103 = _63 % _109;
  # DEBUG m => mq_oldest_103
  _73 = (long unsigned int) mq_oldest_103;
  # DEBUG D#53 => &this_22(D)->_multi_state
  _111 = MEM[(eQState * *)this_22(D) + 496B];
  # DEBUG D#37 => D#53
  # DEBUG __n => _73
  # DEBUG this => D#37
  _76 = _73 * 4;
  _15 = _111 + _76;
  _14 = *_15;
  # DEBUG D#54 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#54
  # DEBUG __n => _73
  # DEBUG this => D#37
  _13 = _14 + 4294967295;
  if (_13 <= 1)
    goto <bb 20>;
  else
    goto <bb 34>;

  <bb 17>:
  _42 = i_47 + _63;
  mq_oldest_43 = _42 % _109;
  # DEBUG m => mq_oldest_43
  _44 = (long unsigned int) mq_oldest_43;
  # DEBUG D#53 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#53
  # DEBUG __n => _44
  # DEBUG this => D#37
  _64 = _44 * 4;
  _65 = _111 + _64;
  _46 = *_65;
  # DEBUG D#54 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#54
  # DEBUG __n => _44
  # DEBUG this => D#37
  _112 = _46 + 4294967295;
  if (_112 <= 1)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # mq_oldest_139 = PHI <mq_oldest_43(17)>
  goto <bb 20>;

  <bb 19>:
  goto <bb 35>;

  <bb 20>:
  # mq_oldest_3 = PHI <mq_oldest_12(35), mq_oldest_139(18), mq_oldest_12(33), mq_oldest_103(16)>
  # DEBUG mq_oldest => mq_oldest_3
  if (mq_oldest_3 == -1)
    goto <bb 21>;
  else
    goto <bb 28>;

  <bb 21>:
  # DEBUG __out => &cout
  # DEBUG __s => "write stall"
  # DEBUG __s => "write stall"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "write stall", 11);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _69 = cout._vptr.basic_ostream;
  _70 = MEM[(long int *)_69 + -24B];
  _71 = (sizetype) _70;
  _72 = &cout + _71;
  # DEBUG this => _72
  # DEBUG __c => 10
  _68 = MEM[(const struct basic_ios *)_72]._M_ctype;
  # DEBUG __f => _68
  if (_68 == 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  std::__throw_bad_cast ();

  <bb 23>:
  # DEBUG this => _68
  # DEBUG __c => 10
  _77 = MEM[(const struct ctype *)_68]._M_widen_ok;
  if (_77 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _80 = MEM[(const struct ctype *)_68]._M_widen[10];
  pretmp_121 = (int) _80;
  goto <bb 27>;

  <bb 25>:
  # DEBUG this => _68
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_68);
  _85 = MEM[(const struct ctype *)_68].D.18015._vptr.facet;
  _86 = MEM[(int (*__vtbl_ptr_type) () *)_85 + 48B];
  PROF_90 = [obj_type_ref] OBJ_TYPE_REF(_86;(const struct ctype)_68->6);
  if (PROF_90 == do_widen)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  _92 = OBJ_TYPE_REF(_86;(const struct ctype)_68->6) (_68, 10);
  pretmp_122 = (int) _92;

  <bb 27>:
  # prephitmp_123 = PHI <pretmp_121(24), 10(25), pretmp_122(26)>
  _75 = std::basic_ostream<char>::put (&cout, prephitmp_123);
  # DEBUG __os => _75
  std::basic_ostream<char>::flush (_75);

  <bb 28>:
  # mq_oldest_4 = PHI <mq_oldest_12(15), -1(27), mq_oldest_3(20), mq_oldest_141(36)>

  <bb 38>:
  # DEBUG mq_oldest => mq_oldest_4
  return mq_oldest_4;

  <bb 29>:
  # DEBUG D#47 => &this_22(D)->_mq_route
  _54 = MEM[(struct OutputSet * * *)this_22(D) + 312B];
  # DEBUG D#42 => D#47
  # DEBUG __n => _24
  # DEBUG this => D#42
  _27 = _24 * 8;
  _25 = _54 + _27;
  _29 = *_25;
  _32 = OutputSet::OutputEmpty (_29, output_30(D));
  if (_32 != 0)
    goto <bb 30>;
  else
    goto <bb 7>;

  <bb 30>:
  pretmp_146 = MEM[(eQState * *)this_22(D) + 496B];
  pretmp_151 = pretmp_146 + _45;
  pretmp_159 = this_22(D)->_multi_queue_size;
  pretmp_164 = MEM[(const eQState &)pretmp_151];
  pretmp_169 = pretmp_164 + 4294967295;
  goto <bb 10>;

  <bb 31>:
  pretmp_153 = MEM[(int * *)this_22(D) + 592B];
  pretmp_155 = pretmp_153 + _45;
  pretmp_171 = MEM[(const int &)pretmp_155];

  <bb 32>:
  # prephitmp_172 = PHI <pretmp_171(31), _33(8)>

  <bb 37>:
  # DEBUG mq_oldest => mq_oldest_81
  # DEBUG D#49 => &this_22(D)->_mq_age
  # DEBUG D#1501 => MEM[(int * *)this_22(D) + 592B]
  # DEBUG D#28 => D#49
  # DEBUG __n => _24
  # DEBUG this => D#28
  # DEBUG D#1500 => D#1501 + _45
  # DEBUG D#1499 => *D#1500
  # DEBUG mq_age => D#1499
  pretmp_143 = MEM[(eQState * *)this_22(D) + 496B];
  pretmp_148 = pretmp_143 + _45;
  pretmp_157 = this_22(D)->_multi_queue_size;
  pretmp_161 = MEM[(const eQState &)pretmp_148];
  pretmp_166 = pretmp_161 + 4294967295;
  goto <bb 10>;

  <bb 33>:
  # DEBUG max => _119 + -1
  _60 = ran_next ();
  _61 = (long int) _119;
  _62 = _60 % _61;
  _63 = (int) _62;
  # DEBUG r => _63
  # DEBUG i => 0
  # DEBUG i => 0
  _109 = this_22(D)->_multi_queue_size;
  if (_109 <= 0)
    goto <bb 20>;
  else
    goto <bb 16>;

  <bb 34>:

  <bb 35>:
  # i_87 = PHI <0(34), i_47(19)>
  # DEBUG i => i_87
  # DEBUG m => mq_oldest_103
  # DEBUG D#53 => &this_22(D)->_multi_state
  # DEBUG __n => _73
  # DEBUG this => D#37
  # DEBUG D#54 => &this_22(D)->_multi_state
  # DEBUG D#37 => D#54
  # DEBUG __n => _73
  # DEBUG this => D#37
  i_47 = i_87 + 1;
  # DEBUG i => i_47
  # DEBUG i => i_47
  if (i_47 >= _109)
    goto <bb 20>;
  else
    goto <bb 17>;

}



;; Function int ChaosRouter::_FindAvailMultiQueue() const (_ZNK11ChaosRouter20_FindAvailMultiQueueEv, funcdef_no=2048, decl_uid=50360, cgraph_uid=508, symbol_order=509)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
int ChaosRouter::_FindAvailMultiQueue() const (const struct ChaosRouter * const this)
{
  bool D.91231;
  int avail;
  int _3;
  unsigned int _8;
  unsigned int _11;
  _Bit_type * const _13;
  long unsigned int _14;
  long unsigned int _15;
  _Bit_type * _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _22;
  const struct queue & _23;
  struct Flit * * * _24;
  long int _25;
  struct Flit * * * _26;
  long int _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  struct Flit * * _32;
  long int _33;
  struct Flit * * _34;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct Flit * * _39;
  long int _40;
  struct Flit * * _41;
  long int _42;
  long int _43;
  long int _44;
  difference_type _45;
  size_type _46;
  struct queue * const pretmp_94;
  const int pretmp_97;
  long unsigned int pretmp_99;

  <bb 2>:
  # DEBUG avail => -1
  # DEBUG i => 0
  # DEBUG i => 0
  _3 = this_6(D)->_multi_queue_size;
  if (_3 <= 0)
    goto <bb 7>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_94 = MEM[(struct queue * *)this_6(D) + 400B];
  pretmp_97 = this_6(D)->_buffer_size;
  pretmp_99 = (long unsigned int) pretmp_97;

  <bb 4>:
  # avail_49 = PHI <0(3), avail_12(9)>
  # DEBUG i => avail_49
  # DEBUG this => this_6(D)
  # DEBUG mq => avail_49
  _20 = (long unsigned int) avail_49;
  # DEBUG D#104 => &this_6(D)->_multi_queue
  # DEBUG D#40 => D#104
  # DEBUG __n => _20
  # DEBUG this => D#40
  _22 = _20 * 80;
  _23 = pretmp_94 + _22;
  # DEBUG this => NULL
  # DEBUG this => D#102
  # DEBUG D#100 => &D#102->D.47197._M_impl._M_start
  # DEBUG D#101 => &D#102->D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _24 = MEM[(const struct _Deque_iterator &)_23 + 48]._M_node;
  _25 = (long int) _24;
  _26 = MEM[(const struct _Deque_iterator &)_23 + 16]._M_node;
  _27 = (long int) _26;
  _28 = _25 - _27;
  _29 = _28 /[ex] 8;
  _30 = _29 + -1;
  _31 = _30 * 64;
  _32 = MEM[(const struct _Deque_iterator &)_23 + 48]._M_cur;
  _33 = (long int) _32;
  _34 = MEM[(const struct _Deque_iterator &)_23 + 48]._M_first;
  _35 = (long int) _34;
  _36 = _33 - _35;
  _37 = _36 /[ex] 8;
  _38 = _31 + _37;
  _39 = MEM[(const struct _Deque_iterator &)_23 + 16]._M_last;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)_23 + 16]._M_cur;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = (size_type) _45;
  if (_46 >= pretmp_99)
    goto <bb 8>;
  else
    goto <bb 5>;

  <bb 5>:
  # DEBUG D#105 => &this_6(D)->_mq_matched
  _13 = MEM[(_Bit_type * *)this_6(D) + 656B];
  # DEBUG D#41 => D#105
  # DEBUG __n => _20
  # DEBUG this => D#41
  _11 = (unsigned int) _20;
  _8 = _11 & 63;
  _14 = _20 >> 6;
  _15 = _14 * 8;
  _16 = _13 + _15;
  # DEBUG this => NULL
  # DEBUG __x => _16
  # DEBUG __y => _8
  # DEBUG this => D#24
  # DEBUG __x => _16
  # DEBUG __y => _8
  # DEBUG this => D#24
  # DEBUG this => D#26
  # DEBUG this => D#26
  _17 = 1 << _8;
  # DEBUG this => NULL
  # DEBUG __x => _16
  # DEBUG __y => _17
  # DEBUG this => NULL
  _18 = *_16;
  _19 = _17 & _18;
  if (_19 == 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  # avail_129 = PHI <avail_49(5)>

  <bb 7>:
  # avail_1 = PHI <-1(8), avail_129(6), -1(2)>

  <bb 10>:
  # DEBUG avail => avail_1
  return avail_1;

  <bb 8>:
  avail_12 = avail_49 + 1;
  # DEBUG i => avail_12
  # DEBUG i => avail_12
  if (_3 <= avail_12)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

}



;; Function void ChaosRouter::_NextInterestingChannel() (_ZN11ChaosRouter23_NextInterestingChannelEv, funcdef_no=2049, decl_uid=50362, cgraph_uid=509, symbol_order=510)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void ChaosRouter::_NextInterestingChannel() (struct ChaosRouter * const this)
{
  char_type D.91306;
  char __c;
  char_type D.91303;
  char __c;
  char_type D.91300;
  struct basic_ostream & D.91294;
  bool D.91291;
  int avail;
  int D.91282;
  bool ready;
  int i;
  bool match;
  int input;
  int D.91273;
  int c;
  int mq_avail;
  int in_index;
  int mq_index;
  bool interesting;
  const struct string D.54963;
  const struct string D.54960;
  int _3;
  int _20;
  int _23;
  bool _26;
  bool _28;
  int _33;
  int _35;
  int _38;
  long unsigned int _39;
  unsigned int _40;
  long unsigned int _41;
  int _44;
  long unsigned int _45;
  unsigned int _46;
  long unsigned int _47;
  eQState _49;
  eQState _50;
  struct Flit * * const _51;
  const struct queue & _52;
  long unsigned int _54;
  struct Module * _56;
  char * const _59;
  char * const _61;
  struct Flit * * const _62;
  int _64;
  long unsigned int _65;
  struct queue * const _66;
  eQState _67;
  long unsigned int _68;
  long unsigned int _69;
  int _70;
  int _72;
  int _75;
  int _76;
  long unsigned int _79;
  int _81;
  int _83;
  long unsigned int _84;
  _Bit_type * _85;
  eQState _86;
  long unsigned int _87;
  long unsigned int _89;
  unsigned int _90;
  unsigned int _92;
  int _93;
  struct basic_ostream & _95;
  struct basic_ostream & _97;
  _Bit_type * const _98;
  struct Module * _100;
  char * const _103;
  long unsigned int _107;
  int _111;
  int _112;
  int _113;
  int _114;
  eQState * _118;
  eQState * _120;
  int * _121;
  int * _122;
  int * _123;
  _Bit_type * _124;
  _Bit_type * _125;
  long unsigned int _127;
  int & _128;
  long unsigned int _129;
  long unsigned int _130;
  unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;
  _Bit_type * _135;
  long unsigned int _136;
  eQState & _137;
  long unsigned int _138;
  int & _139;
  long unsigned int _140;
  long unsigned int _141;
  unsigned int _142;
  long unsigned int _143;
  long unsigned int _144;
  _Bit_type * _145;
  long unsigned int _146;
  long unsigned int _147;
  eQState & _148;
  int _150;
  long unsigned int _151;
  eQState & _152;
  long unsigned int _154;
  int & _165;
  char * const _166;
  const struct __ctype_type * _180;
  int _192;
  long int _193;
  long int _194;
  long int _195;
  int _196;
  int _200;
  long unsigned int _202;
  eQState * const _203;
  long unsigned int _204;
  const eQState & _205;
  eQState _206;
  struct OutputSet * * const _209;
  long unsigned int _210;
  struct OutputSet * const & _211;
  struct OutputSet * _212;
  bool _213;
  _Bit_type * const _223;
  unsigned int _224;
  unsigned int _225;
  long unsigned int _226;
  long unsigned int _227;
  _Bit_type * _228;
  long unsigned int _229;
  long unsigned int _230;
  long unsigned int _231;
  long unsigned int _235;
  long unsigned int _237;
  const struct queue & _238;
  struct Flit * * * _239;
  long int _240;
  struct Flit * * * _241;
  long int _242;
  long int _243;
  long int _244;
  long int _245;
  long int _246;
  struct Flit * * _247;
  long int _248;
  struct Flit * * _249;
  long int _250;
  long int _251;
  long int _252;
  long int _253;
  struct Flit * * _254;
  long int _255;
  struct Flit * * _256;
  long int _257;
  long int _258;
  long int _259;
  difference_type _260;
  size_type _261;
  unsigned int _264;
  int (*__vtbl_ptr_type) () * _265;
  long int _266;
  sizetype _267;
  struct basic_ios * _268;
  struct basic_ostream & _271;
  char _273;
  int _274;
  char_type _276;
  int (*__vtbl_ptr_type) () * _281;
  int (*__vtbl_ptr_type) () _282;
  eQState * _284;
  void * PROF_286;
  char_type _288;
  int _292;
  int _301;
  long unsigned int _306;
  eQState & _313;
  unsigned int _335;
  int pretmp_406;
  int pretmp_407;
  int prephitmp_408;
  struct queue * const pretmp_438;
  const int pretmp_441;
  long unsigned int pretmp_443;
  int pretmp_469;
  long unsigned int pretmp_471;
  _Bit_type * pretmp_473;
  _Bit_type * pretmp_475;
  _Bit_type pretmp_476;
  _Bit_type prephitmp_477;
  _Bit_type * prephitmp_478;
  long unsigned int pretmp_479;
  long unsigned int prephitmp_480;
  int pretmp_481;
  int pretmp_482;
  int prephitmp_483;
  int prephitmp_488;
  int pretmp_492;
  int prephitmp_493;
  long unsigned int pretmp_494;
  long unsigned int prephitmp_495;
  int prephitmp_499;
  int prephitmp_501;
  const int prephitmp_504;
  const int prephitmp_505;
  int prephitmp_506;
  int prephitmp_507;
  eQState * pretmp_514;
  eQState * pretmp_515;
  eQState * pretmp_516;
  eQState * prephitmp_517;
  const int pretmp_518;
  const int pretmp_519;
  const int pretmp_520;
  const int pretmp_521;
  const int prephitmp_522;
  long unsigned int _523;
  long unsigned int _524;
  _Bit_type * _526;
  long unsigned int _527;
  const int prephitmp_529;
  bool pretmp_537;
  bool pretmp_538;
  bool prephitmp_539;
  int prephitmp_540;
  int prephitmp_547;
  const int pretmp_548;
  const int prephitmp_549;
  const int pretmp_550;
  const int prephitmp_551;

  <bb 2>:
  # DEBUG interesting => 0
  # DEBUG mq_index => -1
  # DEBUG in_index => -1
  # DEBUG c => 0
  # DEBUG c => 0
  # DEBUG in_index => -1
  # DEBUG mq_index => -1
  # DEBUG interesting => 0
  _301 = this_18(D)->D.50427._inputs;
  if (_301 <= 0)
    goto <bb 40>;
  else
    goto <bb 5>;

  <bb 3>:
  if (interesting_308 != 0)
    goto <bb 25>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:

  <bb 6>:
  # mq_index_311 = PHI <-1(5), mq_index_298(4)>
  # in_index_334 = PHI <-1(5), in_index_330(4)>
  # c_317 = PHI <0(5), c_37(4)>
  # prephitmp_488 = PHI <_301(5), prephitmp_499(4)>
  # DEBUG c => c_317
  # DEBUG in_index => in_index_334
  # DEBUG mq_index => mq_index_311
  # DEBUG interesting => 0
  _20 = this_18(D)->_cur_channel;
  # DEBUG this => this_18(D)
  # DEBUG out => _20
  _107 = (long unsigned int) _20;
  # DEBUG D#64 => &MEM[(const struct ChaosRouter *)this_18(D)]._output_matched
  _98 = MEM[(_Bit_type * *)this_18(D) + 616B];
  # DEBUG D#41 => D#64
  # DEBUG __n => _107
  # DEBUG this => D#41
  _92 = (unsigned int) _107;
  _90 = _92 & 63;
  _89 = _107 >> 6;
  _87 = _89 * 8;
  _85 = _98 + _87;
  # DEBUG this => NULL
  # DEBUG __x => _85
  # DEBUG __y => _90
  # DEBUG this => D#24
  # DEBUG __x => _85
  # DEBUG __y => _90
  # DEBUG this => D#24
  # DEBUG this => D#26
  # DEBUG this => D#26
  _79 = 1 << _90;
  # DEBUG this => NULL
  # DEBUG __x => _85
  # DEBUG __y => _79
  # DEBUG this => NULL
  _69 = *_85;
  _68 = _69 & _79;
  if (_68 == 0)
    goto <bb 7>;
  else
    goto <bb 76>;

  <bb 7>:
  # DEBUG D#65 => &MEM[(const struct ChaosRouter *)this_18(D)]._output_frame
  _66 = MEM[(struct queue * *)this_18(D) + 376B];
  # DEBUG D#40 => D#65
  # DEBUG __n => _107
  # DEBUG this => D#40
  _54 = _107 * 80;
  _52 = _66 + _54;
  # DEBUG this => NULL
  # DEBUG this => D#63
  # DEBUG D#61 => &D#63->D.47197._M_impl._M_start
  # DEBUG D#62 => &D#63->D.47197._M_impl._M_finish
  _51 = MEM[(struct Flit * * *)_52 + 48B];
  # DEBUG D#59 => D#62
  _62 = MEM[(struct Flit * * *)_52 + 16B];
  # DEBUG D#60 => D#61
  # DEBUG __x => D#59
  # DEBUG __y => D#60
  if (_51 == _62)
    goto <bb 70>;
  else
    goto <bb 76>;

  <bb 8>:
  if (match_219 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 12>;

  <bb 10>:
  # input_531 = PHI <input_201(8)>
  # prephitmp_505 = PHI <prephitmp_551(8)>
  pretmp_538 = input_531 != -1;
  goto <bb 19>;

  <bb 11>:

  <bb 12>:
  # _292 = PHI <_274(11), prephitmp_551(9)>
  # i_272 = PHI <0(11), i_215(9)>
  # prephitmp_529 = PHI <_274(11), prephitmp_551(9)>
  # DEBUG i => i_272
  # DEBUG match => 0
  # DEBUG input => input_218(D)
  _200 = _196 + i_272;
  input_201 = _200 % _292;
  # DEBUG input => input_201
  # DEBUG this => this_18(D)
  # DEBUG input => input_201
  # DEBUG ready => 0
  _202 = (long unsigned int) input_201;
  # DEBUG D#38 => &MEM[(const struct ChaosRouter *)this_18(D)]._input_state
  _203 = MEM[(eQState * *)this_18(D) + 472B];
  # DEBUG D#37 => D#38
  # DEBUG __n => _202
  # DEBUG this => D#37
  _204 = _202 * 4;
  _205 = _203 + _204;
  _206 = *_205;
  # DEBUG D#39 => &MEM[(const struct ChaosRouter *)this_18(D)]._input_state
  # DEBUG D#37 => D#39
  # DEBUG __n => _202
  # DEBUG this => D#37
  _335 = _206 + 4294967295;
  # DEBUG ready => _335 <= 1
  if (_335 <= 1)
    goto <bb 13>;
  else
    goto <bb 71>;

  <bb 13>:
  # DEBUG ready => 1
  # DEBUG D#43 => &MEM[(const struct ChaosRouter *)this_18(D)]._input_route
  _209 = MEM[(struct OutputSet * * *)this_18(D) + 288B];
  # DEBUG D#42 => D#43
  # DEBUG __n => _202
  # DEBUG this => D#42
  _210 = _202 * 8;
  _211 = _209 + _210;
  _212 = *_211;
  _213 = OutputSet::OutputEmpty (_212, _23);
  if (_213 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  pretmp_548 = MEM[(const struct ChaosRouter *)this_18(D)].D.50427._inputs;
  goto <bb 71>;

  <bb 15>:
  pretmp_550 = MEM[(const struct ChaosRouter *)this_18(D)].D.50427._inputs;

  <bb 16>:
  # match_219 = PHI <1(15), 0(77)>
  # prephitmp_551 = PHI <pretmp_550(15), prephitmp_549(77)>
  # DEBUG match => match_219
  i_215 = i_272 + 1;
  # DEBUG i => i_215
  # DEBUG i => i_215
  # DEBUG match => match_219
  # DEBUG input => input_201
  if (i_215 >= prephitmp_551)
    goto <bb 17>;
  else
    goto <bb 8>;

  <bb 17>:
  # input_530 = PHI <input_201(16)>
  # match_528 = PHI <match_219(16)>
  # prephitmp_504 = PHI <prephitmp_551(16)>
  if (match_528 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  pretmp_537 = input_530 != -1;

  <bb 19>:
  # in_index_216 = PHI <-1(17), input_530(18), input_531(10), -1(70)>
  # prephitmp_539 = PHI <0(17), pretmp_537(18), pretmp_538(10), 0(70)>
  # prephitmp_540 = PHI <prephitmp_504(17), prephitmp_504(18), prephitmp_505(10), _274(70)>
  # DEBUG in_index => NULL
  _26 = mq_index_22 != -1;
  _28 = _26 | prephitmp_539;
  if (_28 != 0)
    goto <bb 22>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_492 = this_18(D)->_cur_channel;
  pretmp_494 = (long unsigned int) pretmp_492;
  goto <bb 76>;

  <bb 21>:
  # DEBUG interesting => 0
  _33 = prephitmp_493 + 1;
  _35 = _33 % prephitmp_547;
  this_18(D)->_cur_channel = _35;

  <bb 22>:
  # interesting_308 = PHI <1(19), 0(21), 1(76)>
  # mq_index_298 = PHI <mq_index_22(19), mq_index_198(21), mq_index_198(76)>
  # in_index_330 = PHI <in_index_216(19), in_index_199(21), in_index_199(76)>
  # prephitmp_499 = PHI <prephitmp_540(19), prephitmp_547(21), prephitmp_547(76)>
  c_37 = c_317 + 1;
  # DEBUG c => c_37
  # DEBUG c => c_37
  # DEBUG in_index => in_index_330
  # DEBUG mq_index => mq_index_298
  # DEBUG interesting => interesting_308
  if (c_37 >= prephitmp_499)
    goto <bb 23>;
  else
    goto <bb 3>;

  <bb 23>:
  # mq_index_512 = PHI <mq_index_298(22)>
  # interesting_510 = PHI <interesting_308(22)>
  # in_index_509 = PHI <in_index_330(22)>
  # prephitmp_507 = PHI <prephitmp_499(22)>
  if (interesting_510 != 0)
    goto <bb 26>;
  else
    goto <bb 24>;

  <bb 24>:
  pretmp_406 = this_18(D)->_read_stall;
  goto <bb 41>;

  <bb 25>:
  # mq_index_511 = PHI <mq_index_298(3)>
  # in_index_508 = PHI <in_index_330(3)>
  # prephitmp_506 = PHI <prephitmp_499(3)>

  <bb 26>:
  # mq_index_503 = PHI <mq_index_512(23), mq_index_511(25)>
  # in_index_502 = PHI <in_index_509(23), in_index_508(25)>
  # prephitmp_501 = PHI <prephitmp_507(23), prephitmp_506(25)>
  if (mq_index_503 != -1)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _38 = this_18(D)->_cur_channel;
  _39 = (long unsigned int) _38;
  # DEBUG D#505 => &this_18(D)->_output_matched
  _124 = MEM[(_Bit_type * *)this_18(D) + 616B];
  # DEBUG D#32 => D#505
  # DEBUG __n => _39
  # DEBUG this => D#32
  _40 = (unsigned int) _39;
  _132 = _40 & 63;
  _133 = _39 >> 6;
  _134 = _133 * 8;
  _135 = _124 + _134;
  # DEBUG this => NULL
  # DEBUG __x => _135
  # DEBUG __y => _132
  # DEBUG this => D#17
  # DEBUG __x => _135
  # DEBUG __y => _132
  # DEBUG this => D#17
  # DEBUG this => D#18
  # DEBUG this => D#18
  _136 = 1 << _132;
  # DEBUG this => NULL
  # DEBUG __x => _135
  # DEBUG __y => _136
  # DEBUG this => &D.54956
  # DEBUG __x => 1
  _129 = *_135;
  _130 = _129 | _136;
  *_135 = _130;
  _41 = (long unsigned int) mq_index_503;
  # DEBUG D#506 => &this_18(D)->_multi_match
  _121 = MEM[(int * *)this_18(D) + 568B];
  # DEBUG D#31 => D#506
  # DEBUG __n => _41
  # DEBUG this => D#31
  _127 = _41 * 4;
  _128 = _121 + _127;
  *_128 = _38;
  pretmp_514 = MEM[(eQState * *)this_18(D) + 472B];
  pretmp_518 = MEM[(const struct ChaosRouter *)this_18(D)].D.50427._inputs;
  goto <bb 38>;

  <bb 28>:
  if (in_index_502 != -1)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  pretmp_515 = MEM[(eQState * *)this_18(D) + 472B];
  goto <bb 38>;

  <bb 30>:
  _44 = this_18(D)->_cur_channel;
  _45 = (long unsigned int) _44;
  # DEBUG D#507 => &this_18(D)->_output_matched
  _125 = MEM[(_Bit_type * *)this_18(D) + 616B];
  # DEBUG D#32 => D#507
  # DEBUG __n => _45
  # DEBUG this => D#32
  _46 = (unsigned int) _45;
  _142 = _46 & 63;
  _143 = _45 >> 6;
  _144 = _143 * 8;
  _145 = _125 + _144;
  # DEBUG this => NULL
  # DEBUG __x => _145
  # DEBUG __y => _142
  # DEBUG this => D#17
  # DEBUG __x => _145
  # DEBUG __y => _142
  # DEBUG this => D#17
  # DEBUG this => D#18
  # DEBUG this => D#18
  _146 = 1 << _142;
  # DEBUG this => NULL
  # DEBUG __x => _145
  # DEBUG __y => _146
  # DEBUG this => &D.54957
  # DEBUG __x => 1
  _140 = *_145;
  _141 = _140 | _146;
  *_145 = _141;
  _47 = (long unsigned int) in_index_502;
  # DEBUG D#508 => &this_18(D)->_input_output_match
  _122 = MEM[(int * *)this_18(D) + 520B];
  # DEBUG D#31 => D#508
  # DEBUG __n => _47
  # DEBUG this => D#31
  _138 = _47 * 4;
  _139 = _122 + _138;
  *_139 = _44;
  # DEBUG D#509 => &this_18(D)->_input_state
  _118 = MEM[(eQState * *)this_18(D) + 472B];
  # DEBUG D#30 => D#509
  # DEBUG __n => _47
  # DEBUG this => D#30
  _137 = _118 + _138;
  _50 = *_137;
  if (_50 == 2)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#512 => &this_18(D)->_input_state
  # DEBUG D#30 => D#512
  # DEBUG __n => _47
  # DEBUG this => D#30
  *_137 = 3;
  pretmp_520 = MEM[(const struct ChaosRouter *)this_18(D)].D.50427._inputs;
  goto <bb 38>;

  <bb 32>:
  # DEBUG D#510 => &this_18(D)->_input_state
  # DEBUG D#30 => D#510
  # DEBUG __n => _47
  # DEBUG this => D#30
  if (_50 == 1)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#511 => &this_18(D)->_input_state
  # DEBUG D#30 => D#511
  # DEBUG __n => _47
  # DEBUG this => D#30
  *_137 = 4;
  pretmp_519 = MEM[(const struct ChaosRouter *)this_18(D)].D.50427._inputs;
  goto <bb 38>;

  <bb 34>:
  # DEBUG D#69 => &D.54959
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.54959
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.54960, "Tried to route input through crossbar that was not full or filling!");
  _56 = &this_18(D)->D.50427.D.43102.D.29663;
  Module::Error (_56, &D.54960);

  <bb 35>:
  # DEBUG this => &D.54960
  # DEBUG this => &D.54960
  # DEBUG this => &D.54960
  _59 = MEM[(char * *)&D.54960];
  # DEBUG D#1 => &D.54960
  # DEBUG this => D#1
  # DEBUG this => &D.54960
  if (&D.54960.D.11539._M_local_buf != _59)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#252 => D.54960.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54960
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54960
  # DEBUG this => D#1
  # DEBUG this => &D.54960
  # DEBUG D#249 => &D.54960._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _59
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _59
  # DEBUG this => D#243
  # DEBUG D.75790 => D#244
  operator delete (_59);

  <bb 37>:
  # DEBUG D#253 => &D.54960._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54960 ={v} {CLOBBER};
  # DEBUG this => &D.54959
  # DEBUG this => &D.54959
  pretmp_516 = MEM[(eQState * *)this_18(D) + 472B];
  pretmp_521 = MEM[(const struct ChaosRouter *)this_18(D)].D.50427._inputs;

  <bb 38>:
  # prephitmp_517 = PHI <pretmp_514(27), pretmp_515(29), _118(33), _118(31), pretmp_516(37)>
  # prephitmp_522 = PHI <pretmp_518(27), prephitmp_501(29), pretmp_519(33), pretmp_520(31), pretmp_521(37)>
  _64 = this_18(D)->_cur_channel;
  _65 = (long unsigned int) _64;
  # DEBUG D#513 => &this_18(D)->_input_state
  # DEBUG D#30 => D#513
  # DEBUG __n => _65
  # DEBUG this => D#30
  _147 = _65 * 4;
  _148 = prephitmp_517 + _147;
  _67 = *_148;
  # DEBUG D#514 => &this_18(D)->_input_state
  # DEBUG D#30 => D#514
  # DEBUG __n => _65
  # DEBUG this => D#30
  _264 = _67 + 4294967295;
  if (_264 <= 1)
    goto <bb 39>;
  else
    goto <bb 73>;

  <bb 39>:
  # DEBUG this => this_18(D)
  # DEBUG chan => _64
  _150 = prephitmp_522 + -1;
  if (_64 != _150)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 40>:
  pretmp_407 = this_18(D)->_read_stall;

  <bb 41>:
  # prephitmp_408 = PHI <pretmp_406(24), pretmp_407(40), _76(72)>
  if (prephitmp_408 > 0)
    goto <bb 42>;
  else
    goto <bb 63>;

  <bb 42>:
  # DEBUG i => 0
  _3 = MEM[(const struct ChaosRouter *)this_18(D)]._multi_queue_size;
  if (_3 <= 0)
    goto <bb 62>;
  else
    goto <bb 43>;

  <bb 43>:
  pretmp_438 = MEM[(struct queue * *)this_18(D) + 400B];
  pretmp_441 = MEM[(const struct ChaosRouter *)this_18(D)]._buffer_size;
  pretmp_443 = (long unsigned int) pretmp_441;

  <bb 44>:
  # mq_avail_291 = PHI <0(43), mq_avail_233(75)>
  # DEBUG i => mq_avail_291
  # DEBUG this => this_18(D)
  # DEBUG mq => mq_avail_291
  _235 = (long unsigned int) mq_avail_291;
  # DEBUG D#104 => &MEM[(const struct ChaosRouter *)this_18(D)]._multi_queue
  # DEBUG D#40 => D#104
  # DEBUG __n => _235
  # DEBUG this => D#40
  _237 = _235 * 80;
  _238 = pretmp_438 + _237;
  # DEBUG this => NULL
  # DEBUG this => D#102
  # DEBUG D#100 => &D#102->D.47197._M_impl._M_start
  # DEBUG D#101 => &D#102->D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _239 = MEM[(const struct _Deque_iterator &)_238 + 48]._M_node;
  _240 = (long int) _239;
  _241 = MEM[(const struct _Deque_iterator &)_238 + 16]._M_node;
  _242 = (long int) _241;
  _243 = _240 - _242;
  _244 = _243 /[ex] 8;
  _245 = _244 + -1;
  _246 = _245 * 64;
  _247 = MEM[(const struct _Deque_iterator &)_238 + 48]._M_cur;
  _248 = (long int) _247;
  _249 = MEM[(const struct _Deque_iterator &)_238 + 48]._M_first;
  _250 = (long int) _249;
  _251 = _248 - _250;
  _252 = _251 /[ex] 8;
  _253 = _246 + _252;
  _254 = MEM[(const struct _Deque_iterator &)_238 + 16]._M_last;
  _255 = (long int) _254;
  _256 = MEM[(const struct _Deque_iterator &)_238 + 16]._M_cur;
  _257 = (long int) _256;
  _258 = _255 - _257;
  _259 = _258 /[ex] 8;
  _260 = _253 + _259;
  _261 = (size_type) _260;
  if (_261 >= pretmp_443)
    goto <bb 74>;
  else
    goto <bb 45>;

  <bb 45>:
  # DEBUG D#105 => &MEM[(const struct ChaosRouter *)this_18(D)]._mq_matched
  _223 = MEM[(_Bit_type * *)this_18(D) + 656B];
  # DEBUG D#41 => D#105
  # DEBUG __n => _235
  # DEBUG this => D#41
  _224 = (unsigned int) _235;
  _225 = _224 & 63;
  _226 = _235 >> 6;
  _227 = _226 * 8;
  _228 = _223 + _227;
  # DEBUG this => NULL
  # DEBUG __x => _228
  # DEBUG __y => _225
  # DEBUG this => D#24
  # DEBUG __x => _228
  # DEBUG __y => _225
  # DEBUG this => D#24
  # DEBUG this => D#26
  # DEBUG this => D#26
  _229 = 1 << _225;
  # DEBUG this => NULL
  # DEBUG __x => _228
  # DEBUG __y => _229
  # DEBUG this => NULL
  _230 = *_228;
  _231 = _229 & _230;
  if (_231 == 0)
    goto <bb 46>;
  else
    goto <bb 74>;

  <bb 46>:
  # _527 = PHI <_227(45)>
  # _526 = PHI <_228(45)>
  # _524 = PHI <_229(45)>
  # _523 = PHI <_230(45)>
  # mq_avail_513 = PHI <mq_avail_291(45)>
  # DEBUG avail => mq_avail_513
  # DEBUG mq_avail => NULL
  if (mq_avail_513 != -1)
    goto <bb 47>;
  else
    goto <bb 62>;

  <bb 47>:
  _83 = this_18(D)->_cur_channel;
  _84 = (long unsigned int) _83;
  # DEBUG D#515 => &this_18(D)->_input_state
  _120 = MEM[(eQState * *)this_18(D) + 472B];
  # DEBUG D#30 => D#515
  # DEBUG __n => _84
  # DEBUG this => D#30
  _151 = _84 * 4;
  _152 = _120 + _151;
  _86 = *_152;
  if (_86 == 2)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#516 => &this_18(D)->_input_state
  # DEBUG D#30 => D#516
  # DEBUG __n => _84
  # DEBUG this => D#30
  *_152 = 3;
  goto <bb 61>;

  <bb 49>:
  # DEBUG D#517 => &this_18(D)->_input_state
  # DEBUG D#30 => D#517
  # DEBUG __n => _84
  # DEBUG this => D#30
  if (_86 == 1)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  # DEBUG D#518 => &this_18(D)->_input_state
  # DEBUG D#30 => D#518
  # DEBUG __n => _84
  # DEBUG this => D#30
  *_152 = 4;
  goto <bb 61>;

  <bb 51>:
  # DEBUG D#519 => &this_18(D)->_input_state
  # DEBUG D#30 => D#519
  # DEBUG __n => _84
  # DEBUG this => D#30
  _93 = (int) _86;
  # DEBUG __out => &cout
  # DEBUG __s => "Input "
  # DEBUG __s => "Input "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Input ", 6);
  _95 = std::basic_ostream<char>::operator<< (&cout, _83);
  # DEBUG __out => _95
  # DEBUG __s => " state = "
  # DEBUG __s => " state = "
  std::__ostream_insert<char, std::char_traits<char> > (_95, " state = ", 9);
  _97 = std::basic_ostream<char>::operator<< (_95, _93);
  # DEBUG this => _97
  # DEBUG __pf => endl
  # DEBUG __os => _97
  _265 = _97->_vptr.basic_ostream;
  _266 = MEM[(long int *)_265 + -24B];
  _267 = (sizetype) _266;
  _268 = _97 + _267;
  # DEBUG this => _268
  # DEBUG __c => 10
  _180 = MEM[(const struct basic_ios *)_268]._M_ctype;
  # DEBUG __f => _180
  if (_180 == 0B)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  std::__throw_bad_cast ();

  <bb 53>:
  # DEBUG this => _180
  # DEBUG __c => 10
  _273 = MEM[(const struct ctype *)_180]._M_widen_ok;
  if (_273 != 0)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  _276 = MEM[(const struct ctype *)_180]._M_widen[10];
  pretmp_481 = (int) _276;
  goto <bb 57>;

  <bb 55>:
  # DEBUG this => _180
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_180);
  _281 = MEM[(const struct ctype *)_180].D.18015._vptr.facet;
  _282 = MEM[(int (*__vtbl_ptr_type) () *)_281 + 48B];
  PROF_286 = [obj_type_ref] OBJ_TYPE_REF(_282;(const struct ctype)_180->6);
  if (PROF_286 == do_widen)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  _288 = OBJ_TYPE_REF(_282;(const struct ctype)_180->6) (_180, 10);
  pretmp_482 = (int) _288;

  <bb 57>:
  # prephitmp_483 = PHI <pretmp_481(54), 10(55), pretmp_482(56)>
  _271 = std::basic_ostream<char>::put (_97, prephitmp_483);
  # DEBUG __os => _271
  std::basic_ostream<char>::flush (_271);
  # DEBUG D#69 => &D.54962
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.54962
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.54963, "Tried to route input throught multi-queue that was not full or filling!");
  _100 = &this_18(D)->D.50427.D.43102.D.29663;
  Module::Error (_100, &D.54963);

  <bb 58>:
  # DEBUG this => &D.54963
  # DEBUG this => &D.54963
  # DEBUG this => &D.54963
  _103 = MEM[(char * *)&D.54963];
  # DEBUG D#1 => &D.54963
  # DEBUG this => D#1
  # DEBUG this => &D.54963
  if (&D.54963.D.11539._M_local_buf != _103)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#252 => D.54963.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54963
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54963
  # DEBUG this => D#1
  # DEBUG this => &D.54963
  # DEBUG D#249 => &D.54963._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _103
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _103
  # DEBUG this => D#243
  # DEBUG D.75850 => D#244
  operator delete (_103);

  <bb 60>:
  # DEBUG D#253 => &D.54963._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54963 ={v} {CLOBBER};
  # DEBUG this => &D.54962
  # DEBUG this => &D.54962
  pretmp_469 = this_18(D)->_cur_channel;
  pretmp_471 = (long unsigned int) pretmp_469;
  pretmp_473 = MEM[(_Bit_type * *)this_18(D) + 656B];
  pretmp_475 = pretmp_473 + _527;
  pretmp_476 = *pretmp_475;
  pretmp_479 = pretmp_471 * 4;

  <bb 61>:
  # prephitmp_477 = PHI <_523(48), _523(50), pretmp_476(60)>
  # prephitmp_478 = PHI <_526(48), _526(50), pretmp_475(60)>
  # prephitmp_480 = PHI <_151(48), _151(50), pretmp_479(60)>

  <bb 79>:
  # DEBUG D#1512 => this_18(D)->_cur_channel
  # DEBUG D#520 => &this_18(D)->_input_mq_match
  _123 = MEM[(int * *)this_18(D) + 544B];
  # DEBUG D#31 => D#520
  # DEBUG __n => (long unsigned int) D#1512
  # DEBUG this => D#31
  _165 = _123 + prephitmp_480;
  *_165 = mq_avail_513;
  # DEBUG D#521 => &this_18(D)->_mq_matched
  # DEBUG D#1511 => MEM[(_Bit_type * *)this_18(D) + 656B]
  # DEBUG D#32 => D#521
  # DEBUG __n => _235
  # DEBUG this => D#32
  # DEBUG D#1510 => D#1511 + _527
  # DEBUG this => NULL
  # DEBUG __x => D#1510
  # DEBUG __y => _225
  # DEBUG this => D#17
  # DEBUG __x => D#1510
  # DEBUG __y => _225
  # DEBUG this => D#17
  # DEBUG this => D#18
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __x => D#1510
  # DEBUG __y => _524
  # DEBUG this => &D.54964
  # DEBUG __x => 1
  _154 = _524 | prephitmp_477;
  *prephitmp_478 = _154;
  _111 = this_18(D)->_cur_channel;
  _112 = _111 + 1;
  _113 = this_18(D)->D.50427._inputs;
  _114 = _112 % _113;
  this_18(D)->_cur_channel = _114;
  this_18(D)->_read_stall = 0;
  goto <bb 63>;

  <bb 62>:

  <bb 80>:
  # DEBUG avail => NULL
  # DEBUG mq_avail => NULL
  _81 = prephitmp_408 + 1;
  this_18(D)->_read_stall = _81;

  <bb 63>:

  <bb 78>:
  return;

<L51>:
  # DEBUG this => &D.54960
  # DEBUG this => &D.54960
  # DEBUG this => &D.54960
  _166 = MEM[(char * *)&D.54960];
  # DEBUG D#1 => &D.54960
  # DEBUG this => D#1
  # DEBUG this => &D.54960
  if (&D.54960.D.11539._M_local_buf != _166)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  # DEBUG D#252 => D.54960.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54960
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54960
  # DEBUG this => D#1
  # DEBUG this => &D.54960
  # DEBUG D#249 => &D.54960._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _166
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _166
  # DEBUG this => D#243
  # DEBUG D.75879 => D#244
  operator delete (_166);

  <bb 66>:
  # DEBUG D#253 => &D.54960._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54960 ={v} {CLOBBER};
  resx 4

<L53>:
  # DEBUG this => &D.54963
  # DEBUG this => &D.54963
  # DEBUG this => &D.54963
  _61 = MEM[(char * *)&D.54963];
  # DEBUG D#1 => &D.54963
  # DEBUG this => D#1
  # DEBUG this => &D.54963
  if (&D.54963.D.11539._M_local_buf != _61)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  # DEBUG D#252 => D.54963.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54963
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54963
  # DEBUG this => D#1
  # DEBUG this => &D.54963
  # DEBUG D#249 => &D.54963._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _61
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _61
  # DEBUG this => D#243
  # DEBUG D.75896 => D#244
  operator delete (_61);

  <bb 69>:
  # DEBUG D#253 => &D.54963._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54963 ={v} {CLOBBER};
  resx 8

  <bb 70>:
  mq_index_22 = ChaosRouter::_MultiQueueForOutput (this_18(D), _20);
  # DEBUG mq_index => mq_index_22
  _23 = this_18(D)->_cur_channel;
  # DEBUG this => this_18(D)
  # DEBUG output => _23
  _192 = MEM[(const struct ChaosRouter *)this_18(D)].D.50427._inputs;
  # DEBUG max => _192 + -1
  _193 = ran_next ();
  _194 = (long int) _192;
  _195 = _193 % _194;
  _196 = (int) _195;
  # DEBUG offset => _196
  # DEBUG match => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG match => 0
  # DEBUG input => input_218(D)
  _274 = MEM[(const struct ChaosRouter *)this_18(D)].D.50427._inputs;
  if (_274 <= 0)
    goto <bb 19>;
  else
    goto <bb 11>;

  <bb 71>:
  # prephitmp_549 = PHI <pretmp_548(14), prephitmp_529(12)>

  <bb 77>:
  goto <bb 16>;

  <bb 72>:
  _75 = this_18(D)->_read_stall;
  _76 = _75 + 1;
  this_18(D)->_read_stall = _76;
  goto <bb 41>;

  <bb 73>:
  _70 = _64 + 1;
  _72 = _70 % prephitmp_522;
  this_18(D)->_cur_channel = _72;
  this_18(D)->_read_stall = 0;
  goto <bb 63>;

  <bb 74>:
  mq_avail_233 = mq_avail_291 + 1;
  # DEBUG i => mq_avail_233
  # DEBUG i => mq_avail_233
  if (_3 <= mq_avail_233)
    goto <bb 62>;
  else
    goto <bb 75>;

  <bb 75>:
  goto <bb 44>;

  <bb 76>:
  # mq_index_198 = PHI <mq_index_311(7), -1(20), mq_index_311(6)>
  # in_index_199 = PHI <in_index_334(7), -1(20), in_index_334(6)>
  # prephitmp_493 = PHI <_20(7), pretmp_492(20), _20(6)>
  # prephitmp_495 = PHI <_107(7), pretmp_494(20), _107(6)>
  # prephitmp_547 = PHI <prephitmp_488(7), prephitmp_540(20), prephitmp_488(6)>
  # DEBUG in_index => in_index_199
  # DEBUG mq_index => mq_index_198
  # DEBUG interesting => 0
  # DEBUG D#1513 => this_18(D)->_cur_channel
  # DEBUG D#504 => &this_18(D)->_input_state
  _284 = MEM[(eQState * *)this_18(D) + 472B];
  # DEBUG D#30 => D#504
  # DEBUG __n => (long unsigned int) D#1513
  # DEBUG this => D#30
  _306 = prephitmp_495 * 4;
  _313 = _284 + _306;
  _49 = *_313;
  if (_49 == 2)
    goto <bb 22>;
  else
    goto <bb 21>;

}



;; Function void ChaosRouter::_SendCredits() (_ZN11ChaosRouter12_SendCreditsEv, funcdef_no=2052, decl_uid=50368, cgraph_uid=512, symbol_order=513)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void ChaosRouter::_SendCredits() (struct ChaosRouter * const this)
{
  struct Credit * c;
  int input;
  long unsigned int _7;
  struct queue & _8;
  long unsigned int _9;
  struct Credit * * const _11;
  struct Credit * * const _12;
  struct Channel * _13;
  int (*__vtbl_ptr_type) () * _14;
  int (*__vtbl_ptr_type) () _15;
  struct Channel * * _18;
  struct queue * _19;
  long unsigned int _20;
  struct Channel * & _21;
  struct Credit * * _23;
  struct Credit * * _24;
  struct Credit * * _25;
  void * PROF_29;
  struct Credit * * _31;
  struct Credit * * * _32;
  struct Credit * * * _33;
  struct Credit * * _34;
  struct Credit * * _35;
  int _44;
  int prephitmp_61;
  int pretmp_63;
  int pretmp_64;
  int prephitmp_65;

  <bb 2>:
  # DEBUG input => 0
  # DEBUG input => 0
  _44 = this_5(D)->D.50427._inputs;
  if (_44 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # input_45 = PHI <0(4), input_17(13)>
  # prephitmp_61 = PHI <_44(4), prephitmp_65(13)>
  # DEBUG input => input_45
  _7 = (long unsigned int) input_45;
  # DEBUG D#636 => &this_5(D)->_credit_queue
  _19 = MEM[(struct queue * *)this_5(D) + 448B];
  # DEBUG D#55 => D#636
  # DEBUG __n => _7
  # DEBUG this => D#55
  _9 = _7 * 80;
  _8 = _19 + _9;
  # DEBUG this => NULL
  # DEBUG this => D#129
  # DEBUG D#127 => &D#129->D.53612._M_impl._M_start
  # DEBUG D#128 => &D#129->D.53612._M_impl._M_finish
  _12 = MEM[(struct Credit * * *)_8 + 48B];
  # DEBUG D#125 => D#128
  _11 = MEM[(struct Credit * * *)_8 + 16B];
  # DEBUG D#126 => D#127
  # DEBUG __x => D#125
  # DEBUG __y => D#126
  if (_11 != _12)
    goto <bb 6>;
  else
    goto <bb 12>;

  <bb 6>:
  # DEBUG D#637 => &this_5(D)->_credit_queue
  # DEBUG D#55 => D#637
  # DEBUG __n => _7
  # DEBUG this => D#55
  # DEBUG this => NULL
  # DEBUG this => D#134
  # DEBUG this => D#134
  # DEBUG D#80 => &D#134->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#133 => MEM[(const struct iterator &)D#134 + 16]._M_first
  # DEBUG D.73722 => D#133
  # DEBUG D#132 => MEM[(const struct iterator &)D#134 + 16]._M_last
  # DEBUG D.73723 => D#132
  # DEBUG D#131 => MEM[(const struct iterator &)D#134 + 16]._M_node
  # DEBUG D.73724 => D#131
  # DEBUG this => D#130
  c_10 = *_11;
  # DEBUG c => c_10
  # DEBUG D#638 => &this_5(D)->_credit_queue
  # DEBUG D#55 => D#638
  # DEBUG __n => _7
  # DEBUG this => D#55
  # DEBUG this => NULL
  # DEBUG D#1525 => &_8->c
  # DEBUG this => D#1525
  _23 = MEM[(struct deque *)_8].D.53612._M_impl._M_start._M_last;
  _24 = _23 + 18446744073709551608;
  if (_11 != _24)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#635 => D#1525->D.53612._M_impl._M_start._M_cur
  # DEBUG D#634 => &D#1525->D.53612._M_impl
  # DEBUG D#241 => D#634
  # DEBUG D#242 => D#635
  # DEBUG __a => D#241
  # DEBUG __p => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG this => D#237
  # DEBUG __p => D#238
  _25 = _11 + 8;
  MEM[(struct deque *)_8].D.53612._M_impl._M_start._M_cur = _25;
  goto <bb 9>;

  <bb 8>:
  # DEBUG this => D#1525
  # DEBUG this => D#1525
  # DEBUG D#633 => D#1525->D.53612._M_impl._M_start._M_cur
  # DEBUG D#630 => &D#1525->D.53612
  # DEBUG this => D#630
  # DEBUG D#242 => D#633
  # DEBUG __a => D#241
  # DEBUG __p => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG this => D#237
  # DEBUG __p => D#238
  _31 = MEM[(struct deque *)_8].D.53612._M_impl._M_start._M_first;
  # DEBUG D#632 => &D#1525->D.53612
  # DEBUG this => D#632
  # DEBUG __p => _31
  # DEBUG __size => 8
  # DEBUG D#629 => &D#632->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _31
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _31
  # DEBUG this => D#623
  # DEBUG D.91394 => D#624
  operator delete (_31);
  _32 = MEM[(struct deque *)_8].D.53612._M_impl._M_start._M_node;
  _33 = _32 + 8;
  # DEBUG D#631 => &D#1525->D.53612._M_impl._M_start
  # DEBUG this => D#631
  # DEBUG __new_node => _33
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_node = _33;
  _34 = MEM[(struct Credit * * *)_32 + 8B];
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_first = _34;
  # DEBUG __size => 8
  _35 = _34 + 512;
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_last = _35;
  MEM[(struct deque *)_8].D.53612._M_impl._M_start._M_cur = _34;

  <bb 9>:
  # DEBUG D#639 => &this_5(D)->D.50427._input_credits
  _18 = MEM[(struct Channel * * *)this_5(D) + 168B];
  # DEBUG D#35 => D#639
  # DEBUG __n => _7
  # DEBUG this => D#35
  _20 = _7 * 8;
  _21 = _18 + _20;
  _13 = *_21;
  _14 = _13->D.54869.D.29663._vptr.Module;
  _15 = MEM[(int (*__vtbl_ptr_type) () *)_14 + 48B];
  PROF_29 = [obj_type_ref] OBJ_TYPE_REF(_15;(struct Channel)_13->6);
  if (PROF_29 == Send)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => _13
  # DEBUG data => c_10
  _13->_input = c_10;
  pretmp_63 = this_5(D)->D.50427._inputs;
  goto <bb 12>;

  <bb 11>:
  OBJ_TYPE_REF(_15;(struct Channel)_13->6) (_13, c_10);
  pretmp_64 = this_5(D)->D.50427._inputs;

  <bb 12>:
  # prephitmp_65 = PHI <prephitmp_61(5), pretmp_63(10), pretmp_64(11)>
  input_17 = input_45 + 1;
  # DEBUG input => input_17
  # DEBUG input => input_17
  if (input_17 >= prephitmp_65)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 5>;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >] (_ZNSt6vectorISt5queueIP4FlitSt5dequeIS2_SaIS2_EEESaIS6_EED2Ev, funcdef_no=2109, decl_uid=48823, cgraph_uid=569, symbol_order=570)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >] (struct vector * const this)
{
  struct Flit * * * __nstart;
  struct queue * __first;
  struct queue * _4;
  struct Flit * * * pretmp_13;
  struct Flit * * * prephitmp_16;
  struct Flit * * * _20;
  struct Flit * * * _21;
  struct Flit * * * _22;
  struct Flit * * _25;
  struct queue * pretmp_31;
  struct queue * prephitmp_32;

  <bb 2>:
  # DEBUG D#621 => &this_1(D)->D.48826
  # DEBUG this => D#621
  _4 = this_1(D)->D.48826._M_impl._M_finish;
  __first_5 = this_1(D)->D.48826._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(12)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  # DEBUG D#1527 => &MEM[(struct deque *)__first_38].D.47197
  # DEBUG this => D#1527
  _20 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _21 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_finish._M_node;
  _22 = _21 + 8;
  __nstart_23 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_start._M_node;
  # DEBUG this => D#1527
  # DEBUG __nstart => __nstart_23
  # DEBUG __nfinish => _22
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_22 <= __nstart_23)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_43 = PHI <__nstart_23(6), __nstart_26(8)>
  # DEBUG __n => __nstart_43
  _25 = *__nstart_43;
  # DEBUG D#591 => D#1527
  # DEBUG __p => _25
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _25
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _25
  # DEBUG this => D#565
  # DEBUG D.91463 => D#566
  operator delete (_25);
  __nstart_26 = __nstart_43 + 8;
  # DEBUG __n => __nstart_26
  # DEBUG __n => __nstart_26
  if (_22 <= __nstart_26)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 18>:
  pretmp_13 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;

  <bb 10>:
  # prephitmp_16 = PHI <pretmp_13(18), _20(5)>
  # DEBUG D#605 => D#1527->_M_impl._M_map_size
  # DEBUG D#1529 => MEM[(struct _Deque_base *)__first_38]._M_impl._M_map
  # DEBUG D#603 => D#1527
  # DEBUG D#604 => D#605
  # DEBUG __p => D#1529
  # DEBUG this => D#603
  # DEBUG __n => D#604
  # DEBUG D#602 => D#604
  # DEBUG D#601 => D#603
  # DEBUG D#600 => D#601
  # DEBUG this => D#600
  # DEBUG D#599 => D#600
  # DEBUG this => D#599
  # DEBUG this => NULL
  # DEBUG D.76847 => NULL
  # DEBUG this => NULL
  # DEBUG D#465 => &__map_alloc
  # DEBUG D#466 => D#602
  # DEBUG __p => D#1529
  # DEBUG __a => D#465
  # DEBUG __n => D#466
  # DEBUG D#464 => D#466
  # DEBUG D#463 => D#465
  # DEBUG D#461 => D#463
  # DEBUG D#462 => D#464
  # DEBUG __p => D#1529
  # DEBUG this => D#461
  # DEBUG D.91473 => D#462
  operator delete (prephitmp_16);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#606 => &D#1527->_M_impl
  # DEBUG this => D#606
  # DEBUG this => D#606
  # DEBUG this => D#606
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 80;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 17>:
  pretmp_31 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 14>:
  # prephitmp_32 = PHI <pretmp_31(17), __first_5(2)>
  # DEBUG D#622 => &this_1(D)->D.48826
  # DEBUG this => D#622
  # DEBUG D#397 => D#622->_M_impl._M_end_of_storage
  # DEBUG D#396 => (long int) D#397
  # DEBUG D#1528 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#395 => (long int) D#1528
  # DEBUG D#394 => D#396 - D#395
  # DEBUG D#393 => D#394 /[ex] 80
  # DEBUG D#390 => D#622
  # DEBUG D#391 => (long unsigned int) D#393
  # DEBUG __p => D#1528
  # DEBUG this => D#390
  # DEBUG __n => D#391
  # DEBUG D#389 => D#391
  # DEBUG D#388 => D#390
  if (prephitmp_32 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#387 => &D#388->_M_impl
  # DEBUG D#385 => D#387
  # DEBUG D#386 => D#389
  # DEBUG __p => D#1528
  # DEBUG __a => D#385
  # DEBUG __n => D#386
  # DEBUG D#384 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#381 => D#383
  # DEBUG D#382 => D#384
  # DEBUG __p => D#1528
  # DEBUG this => D#381
  # DEBUG D.77018 => D#382
  operator delete (prephitmp_32);

  <bb 16>:
  # DEBUG D#392 => &D#622->_M_impl
  # DEBUG this => D#392
  # DEBUG this => D#392
  # DEBUG this => D#392
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >] (_ZNSt6vectorISt5queueIP6CreditSt5dequeIS2_SaIS2_EEESaIS6_EED2Ev, funcdef_no=2115, decl_uid=49574, cgraph_uid=575, symbol_order=576)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >] (struct vector * const this)
{
  struct Credit * * * __nstart;
  struct queue * __first;
  struct queue * _4;
  struct Credit * * * pretmp_13;
  struct Credit * * * prephitmp_16;
  struct Credit * * * _20;
  struct Credit * * * _21;
  struct Credit * * * _22;
  struct Credit * * _25;
  struct queue * pretmp_31;
  struct queue * prephitmp_32;

  <bb 2>:
  # DEBUG D#662 => &this_1(D)->D.49577
  # DEBUG this => D#662
  _4 = this_1(D)->D.49577._M_impl._M_finish;
  __first_5 = this_1(D)->D.49577._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(12)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  # DEBUG D#1531 => &MEM[(struct deque *)__first_38].D.53612
  # DEBUG this => D#1531
  _20 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _21 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_finish._M_node;
  _22 = _21 + 8;
  __nstart_23 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_start._M_node;
  # DEBUG this => D#1531
  # DEBUG __nstart => __nstart_23
  # DEBUG __nfinish => _22
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_22 <= __nstart_23)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_43 = PHI <__nstart_23(6), __nstart_26(8)>
  # DEBUG __n => __nstart_43
  _25 = *__nstart_43;
  # DEBUG this => D#1531
  # DEBUG __p => _25
  # DEBUG __size => 8
  # DEBUG D#629 => &D#1531->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _25
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _25
  # DEBUG this => D#623
  # DEBUG D.91537 => D#624
  operator delete (_25);
  __nstart_26 = __nstart_43 + 8;
  # DEBUG __n => __nstart_26
  # DEBUG __n => __nstart_26
  if (_22 <= __nstart_26)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 18>:
  pretmp_13 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;

  <bb 10>:
  # prephitmp_16 = PHI <pretmp_13(18), _20(5)>
  # DEBUG D#646 => D#1531->_M_impl._M_map_size
  # DEBUG D#1533 => MEM[(struct _Deque_base *)__first_38]._M_impl._M_map
  # DEBUG D#644 => D#1531
  # DEBUG D#645 => D#646
  # DEBUG __p => D#1533
  # DEBUG this => D#644
  # DEBUG __n => D#645
  # DEBUG D#643 => D#645
  # DEBUG D#642 => D#644
  # DEBUG D#641 => D#642
  # DEBUG this => D#641
  # DEBUG D#640 => D#641
  # DEBUG this => D#640
  # DEBUG this => NULL
  # DEBUG D.77171 => NULL
  # DEBUG this => NULL
  # DEBUG D#475 => &__map_alloc
  # DEBUG D#476 => D#643
  # DEBUG __p => D#1533
  # DEBUG __a => D#475
  # DEBUG __n => D#476
  # DEBUG D#474 => D#476
  # DEBUG D#473 => D#475
  # DEBUG D#471 => D#473
  # DEBUG D#472 => D#474
  # DEBUG __p => D#1533
  # DEBUG this => D#471
  # DEBUG D.91547 => D#472
  operator delete (prephitmp_16);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#647 => &D#1531->_M_impl
  # DEBUG this => D#647
  # DEBUG this => D#647
  # DEBUG this => D#647
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 80;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 17>:
  pretmp_31 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 14>:
  # prephitmp_32 = PHI <pretmp_31(17), __first_5(2)>
  # DEBUG D#663 => &this_1(D)->D.49577
  # DEBUG this => D#663
  # DEBUG D#416 => D#663->_M_impl._M_end_of_storage
  # DEBUG D#415 => (long int) D#416
  # DEBUG D#1532 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#414 => (long int) D#1532
  # DEBUG D#413 => D#415 - D#414
  # DEBUG D#412 => D#413 /[ex] 80
  # DEBUG D#409 => D#663
  # DEBUG D#410 => (long unsigned int) D#412
  # DEBUG __p => D#1532
  # DEBUG this => D#409
  # DEBUG __n => D#410
  # DEBUG D#408 => D#410
  # DEBUG D#407 => D#409
  if (prephitmp_32 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#406 => &D#407->_M_impl
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#408
  # DEBUG __p => D#1532
  # DEBUG __a => D#404
  # DEBUG __n => D#405
  # DEBUG D#403 => D#405
  # DEBUG D#402 => D#404
  # DEBUG D#400 => D#402
  # DEBUG D#401 => D#403
  # DEBUG __p => D#1532
  # DEBUG this => D#400
  # DEBUG D.77342 => D#401
  operator delete (prephitmp_32);

  <bb 16>:
  # DEBUG D#411 => &D#663->_M_impl
  # DEBUG this => D#411
  # DEBUG this => D#411
  # DEBUG this => D#411
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*] (_ZNSt8_Rb_treeIN9OutputSet11sSetElementES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E, funcdef_no=2232, decl_uid=32383, cgraph_uid=692, symbol_order=693)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#94 => __x_68
  # DEBUG __x => D#94
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#95 => __x_68
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_68
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_68
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_68
  # DEBUG this => D#480
  # DEBUG D.77527 => D#481
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#94 => __x_72
  # DEBUG __x => D#94
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#95 => __x_72
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_72
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_72
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_72
  # DEBUG this => D#480
  # DEBUG D.91594 => D#481
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#94 => __x_71
  # DEBUG __x => D#94
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#95 => __x_71
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_71
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_71
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_71
  # DEBUG this => D#480
  # DEBUG D.91607 => D#481
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#94 => __x_77
  # DEBUG __x => D#94
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#95 => __x_77
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_77
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_77
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_77
  # DEBUG this => D#480
  # DEBUG D.91620 => D#481
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#94 => __x_80
  # DEBUG __x => D#94
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#95 => __x_80
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_80
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_80
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_80
  # DEBUG this => D#480
  # DEBUG D.91633 => D#481
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#94 => __x_83
  # DEBUG __x => D#94
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#95 => __x_83
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_83
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_83
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_83
  # DEBUG this => D#480
  # DEBUG D.91646 => D#481
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#94 => __x_86
  # DEBUG __x => D#94
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#95 => __x_86
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_86
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_86
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_86
  # DEBUG this => D#480
  # DEBUG D.91659 => D#481
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#94 => __x_89
  # DEBUG __x => D#94
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#95 => __x_89
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_89
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_89
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_89
  # DEBUG this => D#480
  # DEBUG D.91672 => D#481
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#94 => __x_92
  # DEBUG __x => D#94
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#95 => __x_92
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_92
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_92
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_92
  # DEBUG this => D#480
  # DEBUG D.91685 => D#481
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt11_Deque_baseIP4FlitSaIS1_EED2Ev, funcdef_no=2389, decl_uid=46703, cgraph_uid=849, symbol_order=850)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct _Deque_base * const this)
{
  struct Flit * * * __nstart;
  struct Flit * * * _4;
  struct Flit * * * _5;
  struct Flit * * * _6;
  struct Flit * * _13;
  struct Flit * * * pretmp_16;
  struct Flit * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG D#591 => this_3(D)
  # DEBUG __p => _13
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _13
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _13
  # DEBUG this => D#565
  # DEBUG D.76907 => D#566
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#605 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#1535 => this_3(D)->_M_impl._M_map
  # DEBUG D#603 => this_3(D)
  # DEBUG D#604 => D#605
  # DEBUG __p => D#1535
  # DEBUG this => D#603
  # DEBUG __n => D#604
  # DEBUG D#602 => D#604
  # DEBUG D#601 => D#603
  # DEBUG D#600 => D#601
  # DEBUG this => D#600
  # DEBUG D#599 => D#600
  # DEBUG this => D#599
  # DEBUG this => NULL
  # DEBUG D.76847 => NULL
  # DEBUG this => NULL
  # DEBUG D#465 => &__map_alloc
  # DEBUG D#466 => D#602
  # DEBUG __p => D#1535
  # DEBUG __a => D#465
  # DEBUG __n => D#466
  # DEBUG D#464 => D#466
  # DEBUG D#463 => D#465
  # DEBUG D#461 => D#463
  # DEBUG D#462 => D#464
  # DEBUG __p => D#1535
  # DEBUG this => D#461
  # DEBUG D.76894 => D#462
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#606 => &this_3(D)->_M_impl
  # DEBUG this => D#606
  # DEBUG this => D#606
  # DEBUG this => D#606
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt11_Deque_baseIP6CreditSaIS1_EED2Ev, funcdef_no=2416, decl_uid=53118, cgraph_uid=876, symbol_order=877)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct _Deque_base * const this)
{
  struct Credit * * * __nstart;
  struct Credit * * * _4;
  struct Credit * * * _5;
  struct Credit * * * _6;
  struct Credit * * _13;
  struct Credit * * * pretmp_16;
  struct Credit * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => this_3(D)
  # DEBUG __p => _13
  # DEBUG __size => 8
  # DEBUG D#629 => &this_3(D)->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _13
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _13
  # DEBUG this => D#623
  # DEBUG D.77231 => D#624
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#646 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#1537 => this_3(D)->_M_impl._M_map
  # DEBUG D#644 => this_3(D)
  # DEBUG D#645 => D#646
  # DEBUG __p => D#1537
  # DEBUG this => D#644
  # DEBUG __n => D#645
  # DEBUG D#643 => D#645
  # DEBUG D#642 => D#644
  # DEBUG D#641 => D#642
  # DEBUG this => D#641
  # DEBUG D#640 => D#641
  # DEBUG this => D#640
  # DEBUG this => NULL
  # DEBUG D.77171 => NULL
  # DEBUG this => NULL
  # DEBUG D#475 => &__map_alloc
  # DEBUG D#476 => D#643
  # DEBUG __p => D#1537
  # DEBUG __a => D#475
  # DEBUG __n => D#476
  # DEBUG D#474 => D#476
  # DEBUG D#473 => D#475
  # DEBUG D#471 => D#473
  # DEBUG D#472 => D#474
  # DEBUG __p => D#1537
  # DEBUG this => D#471
  # DEBUG D.77218 => D#472
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#647 => &this_3(D)->_M_impl
  # DEBUG this => D#647
  # DEBUG this => D#647
  # DEBUG this => D#647
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ChaosRouter::~ChaosRouter() (_ZN11ChaosRouterD2Ev, funcdef_no=2034, decl_uid=50424, cgraph_uid=494, symbol_order=495)

Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is not innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
ChaosRouter::~ChaosRouter() (struct ChaosRouter * const this)
{
  struct Flit * * * __nstart;
  struct Flit * * * __nstart;
  struct Flit * * * __nstart;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct Credit * * * __nstart;
  struct queue * __first;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct vector * __first;
  int i;
  struct PipelineFIFO * _11;
  int (*__vtbl_ptr_type) () * _12;
  int (*__vtbl_ptr_type) () _13;
  struct _Bvector_base * _16;
  int * _17;
  int * _18;
  int * _19;
  int * _20;
  eQState * _21;
  eQState * _22;
  int * _23;
  struct vector * _24;
  struct OutputSet * * _26;
  struct vector * _27;
  struct vector * _29;
  struct vector * _31;
  struct OutputSet * * _33;
  struct Router * _35;
  long unsigned int _38;
  long unsigned int _39;
  struct OutputSet * _40;
  long unsigned int _44;
  struct OutputSet * _46;
  struct OutputSet * * _47;
  struct _Bvector_base * _50;
  int * _53;
  int * _54;
  int * _55;
  int * _56;
  eQState * _57;
  struct Credit * * * _59;
  eQState * _60;
  struct Flit * * * _62;
  struct queue * _64;
  struct queue * _66;
  int * _67;
  struct OutputSet * * _68;
  _Bit_type * _70;
  struct OutputSet * * _72;
  struct OutputSet * * _73;
  struct OutputSet * & _74;
  struct _Rep_type * _75;
  long unsigned int _77;
  struct OutputSet * & _78;
  struct _Rep_type * _79;
  int prephitmp_126;
  struct queue * pretmp_155;
  struct queue * prephitmp_156;
  struct queue * pretmp_160;
  struct queue * prephitmp_161;
  struct Flit * * * prephitmp_165;
  struct Credit * * * pretmp_169;
  _Bit_type * _171;
  struct Flit * * * prephitmp_172;
  struct Flit * * * pretmp_176;
  struct queue * _178;
  _Bit_type * _184;
  void * PROF_244;
  struct Module * * _248;
  char * const _249;
  const char * _250;
  char * const _251;
  const char * _252;
  struct vector * _253;
  struct Flit * * _256;
  struct vector * _258;
  struct _Rb_tree_node_base * _260;
  struct _Rb_tree_node_base * _263;
  long unsigned int * const _266;
  long int _268;
  long int _269;
  long int _270;
  long unsigned int _271;
  sizetype _272;
  long unsigned int * _273;
  long unsigned int * const _274;
  long int _276;
  long int _277;
  long int _278;
  long unsigned int _279;
  sizetype _280;
  long unsigned int * _281;
  struct Credit * * * _287;
  struct Credit * * * _288;
  struct Credit * * _291;
  struct queue * _294;
  struct Flit * * * _310;
  struct Flit * * * _311;
  struct Flit * * _314;
  struct Flit * * * _317;
  struct Flit * * * _318;
  struct Flit * * * _319;
  struct Flit * * _322;
  struct Flit * * * _325;
  struct Flit * * * _326;
  struct Flit * * * _327;
  struct Flit * * _330;
  struct Channel * * _334;
  struct FlitChannel * * _335;
  struct Channel * * _336;
  struct FlitChannel * * _337;
  long unsigned int * const _339;
  long int _341;
  long int _342;
  long int _343;
  long unsigned int _344;
  sizetype _345;
  long unsigned int * _346;
  struct Module * * _347;
  char * const _348;
  const char * _349;
  char * const _350;
  const char * _351;
  struct Credit * * * prephitmp_386;
  int prephitmp_395;
  int pretmp_400;
  int prephitmp_401;
  int pretmp_402;
  int prephitmp_405;
  struct Flit * * * prephitmp_426;
  struct Flit * * * pretmp_430;
  struct Flit * * * pretmp_444;
  struct queue * pretmp_468;
  struct queue * prephitmp_469;
  struct queue * pretmp_471;
  struct queue * prephitmp_472;
  int _539;
  int _544;

  <bb 2>:
  this_9(D)->D.50427.D.43102.D.29663._vptr.Module = &MEM[(void *)&_ZTV11ChaosRouter + 16B];
  _11 = this_9(D)->_crossbar_pipe;
  if (_11 != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 20>;

  <bb 4>:
  _12 = _11->D.52558._vptr.Module;
  _13 = MEM[(int (*__vtbl_ptr_type) () *)_12 + 8B];
  PROF_244 = [obj_type_ref] OBJ_TYPE_REF(_13;(struct PipelineFIFO)_11->1);
  if (PROF_244 == __deleting_dtor )
    goto <bb 5>;
  else
    goto <bb 21>;

  <bb 5>:
  # DEBUG this => _11
  # DEBUG this => _11
  _11->D.52558._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI4FlitE + 16B];
  # DEBUG D#1555 => &_11->_data
  # DEBUG this => D#1555
  # DEBUG D#587 => &D#1555->D.52514
  # DEBUG this => D#587
  _253 = MEM[(struct vector *)_11 + 112B].D.52514._M_impl._M_finish;
  __first_254 = MEM[(struct vector *)_11 + 112B].D.52514._M_impl._M_start;
  # DEBUG __first => __first_254
  # DEBUG __last => _253
  # DEBUG __first => __first_254
  if (_253 == __first_254)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#588 => &D#1555->D.52514
  # DEBUG this => D#588
  # DEBUG D#564 => D#588->_M_impl._M_end_of_storage
  # DEBUG D#563 => (long int) D#564
  _258 = MEM[(struct _Vector_base *)_11 + 112B]._M_impl._M_start;
  # DEBUG D#562 => (long int) _258
  # DEBUG D#561 => D#563 - D#562
  # DEBUG D#560 => D#561 /[ex] 24
  # DEBUG D#557 => D#588
  # DEBUG D#558 => (long unsigned int) D#560
  # DEBUG __p => _258
  # DEBUG this => D#557
  # DEBUG __n => D#558
  # DEBUG D#556 => D#558
  # DEBUG D#555 => D#557
  if (_258 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 7>:

  <bb 8>:
  # __first_601 = PHI <__first_254(7), __first_257(11)>
  # DEBUG __first => __first_601
  # DEBUG __r => __first_601
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _256 = MEM[(struct _Vector_base *)__first_601]._M_impl._M_start;
  # DEBUG D#576 => (long int) _256
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _256
  # DEBUG __n => D#573
  if (_256 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _256
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _256
  # DEBUG this => D#565
  # DEBUG D.91858 => D#566
  operator delete (_256);

  <bb 10>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__first_601] ={v} {CLOBBER};
  __first_257 = __first_601 + 24;
  # DEBUG __first => __first_257
  # DEBUG __first => __first_257
  if (_253 == __first_257)
    goto <bb 6>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 8>;

  <bb 12>:
  # DEBUG D#554 => &D#555->_M_impl
  # DEBUG D#552 => D#554
  # DEBUG D#553 => D#556
  # DEBUG __p => _258
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => _258
  # DEBUG this => D#548
  # DEBUG D.91872 => D#549
  operator delete (_258);

  <bb 13>:
  # DEBUG D#559 => &D#588->_M_impl
  # DEBUG this => D#559
  # DEBUG this => D#559
  # DEBUG this => D#559
  MEM[(struct  &)_11 + 112] ={v} {CLOBBER};
  # DEBUG D#1554 => &_11->D.52558
  # DEBUG this => D#1554
  MEM[(struct Module *)_11]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#277 => &D#1554->_children
  # DEBUG this => D#277
  # DEBUG D#271 => &D#277->D.29566
  # DEBUG this => D#271
  # DEBUG D#274 => D#277->D.29566._M_impl._M_finish
  # DEBUG D#273 => D#277->D.29566._M_impl._M_start
  # DEBUG D#143 => D#273
  # DEBUG D#144 => D#274
  # DEBUG __first => D#143
  # DEBUG __last => D#144
  # DEBUG D.74504 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#141 => D#143
  # DEBUG D#139 => D#141
  # DEBUG D#140 => D#142
  # DEBUG __first => D#139
  # DEBUG __last => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG D.73747 => D#135
  # DEBUG D.73746 => D#136
  # DEBUG D#272 => &D#277->D.29566
  # DEBUG this => D#272
  # DEBUG D#270 => D#272->_M_impl._M_end_of_storage
  # DEBUG D#269 => (long int) D#270
  _248 = MEM[(struct _Vector_base *)_11 + 72B]._M_impl._M_start;
  # DEBUG D#268 => (long int) _248
  # DEBUG D#267 => D#269 - D#268
  # DEBUG D#266 => D#267 /[ex] 8
  # DEBUG D#263 => D#272
  # DEBUG D#264 => (long unsigned int) D#266
  # DEBUG __p => _248
  # DEBUG this => D#263
  # DEBUG __n => D#264
  # DEBUG D#262 => D#264
  # DEBUG D#261 => D#263
  if (_248 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#260 => &D#261->_M_impl
  # DEBUG D#258 => D#260
  # DEBUG D#259 => D#262
  # DEBUG __p => _248
  # DEBUG __a => D#258
  # DEBUG __n => D#259
  # DEBUG D#257 => D#259
  # DEBUG D#256 => D#258
  # DEBUG D#254 => D#256
  # DEBUG D#255 => D#257
  # DEBUG __p => _248
  # DEBUG this => D#254
  # DEBUG D.91803 => D#255
  operator delete (_248);

  <bb 15>:
  # DEBUG D#265 => &D#272->_M_impl
  # DEBUG this => D#265
  # DEBUG this => D#265
  # DEBUG this => D#265
  MEM[(struct  &)_11 + 72] ={v} {CLOBBER};
  # DEBUG D#276 => &D#1554->_fullname
  # DEBUG this => D#276
  # DEBUG this => D#276
  # DEBUG this => D#276
  _249 = MEM[(char * *)_11 + 40B];
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  _250 = &MEM[(const struct basic_string *)_11 + 40B].D.11539._M_local_buf;
  if (_249 != _250)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#276].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#276
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  # DEBUG D#249 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _249
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _249
  # DEBUG this => D#243
  # DEBUG D.91816 => D#244
  operator delete (_249);

  <bb 17>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)_11 + 40] ={v} {CLOBBER};
  # DEBUG D#275 => &D#1554->_name
  # DEBUG this => D#275
  # DEBUG this => D#275
  # DEBUG this => D#275
  _251 = MEM[(char * *)_11 + 8B];
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  _252 = &MEM[(const struct basic_string *)_11 + 8B].D.11539._M_local_buf;
  if (_251 != _252)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#275].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#275
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  # DEBUG D#249 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _251
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _251
  # DEBUG this => D#243
  # DEBUG D.91831 => D#244
  operator delete (_251);

  <bb 19>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)_11] ={v} {CLOBBER};
  operator delete (_11);

  <bb 20>:
  # DEBUG i => 0
  _539 = this_9(D)->D.50427._inputs;
  if (_539 <= 0)
    goto <bb 22>;
  else
    goto <bb 24>;

  <bb 21>:
  OBJ_TYPE_REF(_13;(struct PipelineFIFO)_11->1) (_11);
  goto <bb 3>;

  <bb 22>:
  # DEBUG i => 0
  _544 = this_9(D)->_multi_queue_size;
  if (_544 <= 0)
    goto <bb 23>;
  else
    goto <bb 33>;

  <bb 23>:
  # DEBUG D#701 => &this_9(D)->_mq_matched
  # DEBUG this => D#701
  # DEBUG D#1541 => &MEM[(struct vector *)this_9(D) + 656B].D.43009
  # DEBUG this => D#1541
  # DEBUG this => D#1541
  _184 = MEM[(struct _Bvector_base *)this_9(D) + 656B]._M_impl._M_start.D.27293._M_p;
  if (_184 != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 24>:

  <bb 25>:
  # i_604 = PHI <0(24), i_42(32)>
  # prephitmp_126 = PHI <_539(24), prephitmp_401(32)>
  # DEBUG i => i_604
  _38 = (long unsigned int) i_604;
  # DEBUG D#681 => &this_9(D)->_input_route
  _72 = MEM[(struct OutputSet * * *)this_9(D) + 288B];
  # DEBUG D#29 => D#681
  # DEBUG __n => _38
  # DEBUG this => D#29
  _39 = _38 * 8;
  _74 = _72 + _39;
  _40 = *_74;
  if (_40 != 0B)
    goto <bb 26>;
  else
    goto <bb 31>;

  <bb 26>:
  # DEBUG this => _40
  # DEBUG D#680 => &_40->_outputs
  # DEBUG this => D#680
  _75 = &MEM[(struct set *)_40]._M_t;
  # DEBUG this => _75
  __x_76 = MEM[(struct _Rb_tree_node_base * *)_40 + 16B];
  # DEBUG D#57 => _75
  # DEBUG this => D#57
  # DEBUG this => _75
  # DEBUG __x => __x_76
  # DEBUG __x => __x_76
  if (__x_76 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG D#679 => &MEM[(struct _Rb_tree *)_75]._M_impl
  # DEBUG this => D#679
  # DEBUG this => D#679
  # DEBUG this => D#679
  MEM[(struct  &)_40] ={v} {CLOBBER};
  operator delete (_40);
  pretmp_400 = this_9(D)->D.50427._inputs;
  goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_602 = PHI <__x_76(28), __x_261(30)>
  # DEBUG __x => __x_602
  _260 = MEM[(struct _Rb_tree_node_base * *)__x_602 + 24B];
  # DEBUG D#94 => __x_602
  # DEBUG __x => D#94
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (_75, _260);
  __x_261 = MEM[(struct _Rb_tree_node_base * *)__x_602 + 16B];
  # DEBUG D#95 => __x_602
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => _75
  # DEBUG __p => __x_602
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_602
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_602
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_602
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_602
  # DEBUG this => D#480
  # DEBUG D.91888 => D#481
  operator delete (__x_602);
  # DEBUG __x => __x_261
  # DEBUG __x => __x_261
  if (__x_261 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  # prephitmp_401 = PHI <prephitmp_126(25), pretmp_400(27)>
  i_42 = i_604 + 1;
  # DEBUG i => i_42
  # DEBUG i => i_42
  if (i_42 >= prephitmp_401)
    goto <bb 22>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 25>;

  <bb 33>:

  <bb 34>:
  # i_603 = PHI <0(33), i_49(41)>
  # prephitmp_395 = PHI <_544(33), prephitmp_405(41)>
  # DEBUG i => i_603
  _44 = (long unsigned int) i_603;
  # DEBUG D#682 => &this_9(D)->_mq_route
  _73 = MEM[(struct OutputSet * * *)this_9(D) + 312B];
  # DEBUG D#29 => D#682
  # DEBUG __n => _44
  # DEBUG this => D#29
  _77 = _44 * 8;
  _78 = _73 + _77;
  _46 = *_78;
  if (_46 != 0B)
    goto <bb 35>;
  else
    goto <bb 40>;

  <bb 35>:
  # DEBUG this => _46
  # DEBUG D#680 => &_46->_outputs
  # DEBUG this => D#680
  _79 = &MEM[(struct set *)_46]._M_t;
  # DEBUG this => _79
  __x_80 = MEM[(struct _Rb_tree_node_base * *)_46 + 16B];
  # DEBUG D#57 => _79
  # DEBUG this => D#57
  # DEBUG this => _79
  # DEBUG __x => __x_80
  # DEBUG __x => __x_80
  if (__x_80 == 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#679 => &MEM[(struct _Rb_tree *)_79]._M_impl
  # DEBUG this => D#679
  # DEBUG this => D#679
  # DEBUG this => D#679
  MEM[(struct  &)_46] ={v} {CLOBBER};
  operator delete (_46);
  pretmp_402 = this_9(D)->_multi_queue_size;
  goto <bb 40>;

  <bb 37>:

  <bb 38>:
  # __x_597 = PHI <__x_80(37), __x_264(39)>
  # DEBUG __x => __x_597
  _263 = MEM[(struct _Rb_tree_node_base * *)__x_597 + 24B];
  # DEBUG D#94 => __x_597
  # DEBUG __x => D#94
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (_79, _263);
  __x_264 = MEM[(struct _Rb_tree_node_base * *)__x_597 + 16B];
  # DEBUG D#95 => __x_597
  # DEBUG __x => D#95
  # DEBUG __y => NULL
  # DEBUG D#678 => _79
  # DEBUG __p => __x_597
  # DEBUG this => D#678
  # DEBUG D#677 => D#678
  # DEBUG D#676 => D#678
  # DEBUG D#674 => D#676
  # DEBUG D#675 => __x_597
  # DEBUG this => D#674
  # DEBUG __p => D#675
  # DEBUG D#673 => D#674
  # DEBUG D#672 => D#675
  # DEBUG D#671 => D#675
  # DEBUG this => D#671
  # DEBUG D#670 => &D#672->_M_value_field
  # DEBUG __r => D#670
  # DEBUG D#669 => D#673
  # DEBUG this => D#669
  # DEBUG D#668 => D#669
  # DEBUG this => D#668
  # DEBUG this => NULL
  # DEBUG D.77465 => NULL
  # DEBUG this => NULL
  # DEBUG D#279 => D#670
  # DEBUG this => D#278
  # DEBUG __p => D#279
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#487 => D#677
  # DEBUG __p => __x_597
  # DEBUG this => D#487
  # DEBUG D#486 => D#487
  # DEBUG this => D#486
  # DEBUG D#485 => 1
  # DEBUG __p => __x_597
  # DEBUG __a => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  # DEBUG D#480 => D#482
  # DEBUG D#481 => D#483
  # DEBUG __p => __x_597
  # DEBUG this => D#480
  # DEBUG D.91901 => D#481
  operator delete (__x_597);
  # DEBUG __x => __x_264
  # DEBUG __x => __x_264
  if (__x_264 == 0B)
    goto <bb 36>;
  else
    goto <bb 39>;

  <bb 39>:
  goto <bb 38>;

  <bb 40>:
  # prephitmp_405 = PHI <prephitmp_395(34), pretmp_402(36)>
  i_49 = i_603 + 1;
  # DEBUG i => i_49
  # DEBUG i => i_49
  if (i_49 >= prephitmp_405)
    goto <bb 23>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 34>;

  <bb 42>:
  # DEBUG D#348 => &D#1541->_M_impl
  _274 = MEM[(long unsigned int * *)this_9(D) + 688B];
  # DEBUG D#219 => D#348
  # DEBUG this => D#219
  _276 = (long int) _274;
  _277 = (long int) _184;
  _278 = _276 - _277;
  # DEBUG D#351 => _278 /[ex] 8
  # DEBUG D#350 => (const size_t) D#351
  # DEBUG __n => D#350
  _279 = (long unsigned int) _278;
  _280 = -_279;
  _281 = _274 + _280;
  # DEBUG D#349 => &D#1541->_M_impl
  # DEBUG D#346 => D#349
  # DEBUG D#347 => D#350
  # DEBUG __p => _281
  # DEBUG __a => D#346
  # DEBUG __n => D#347
  # DEBUG D#345 => D#347
  # DEBUG D#344 => D#346
  # DEBUG D#342 => D#344
  # DEBUG D#343 => D#345
  # DEBUG __p => _281
  # DEBUG this => D#342
  # DEBUG D.91919 => D#343
  operator delete (_281);

  <bb 43>:
  # DEBUG D#352 => &D#1541->_M_impl
  # DEBUG this => D#352
  # DEBUG this => D#352
  # DEBUG this => D#352
  MEM[(struct  &)this_9(D) + 656] ={v} {CLOBBER};
  # DEBUG D#700 => &this_9(D)->_output_matched
  # DEBUG this => D#700
  # DEBUG D#1542 => &MEM[(struct vector *)this_9(D) + 616B].D.43009
  # DEBUG this => D#1542
  # DEBUG this => D#1542
  _171 = MEM[(struct _Bvector_base *)this_9(D) + 616B]._M_impl._M_start.D.27293._M_p;
  if (_171 != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG D#348 => &D#1542->_M_impl
  _266 = MEM[(long unsigned int * *)this_9(D) + 648B];
  # DEBUG D#219 => D#348
  # DEBUG this => D#219
  _268 = (long int) _266;
  _269 = (long int) _171;
  _270 = _268 - _269;
  # DEBUG D#351 => _270 /[ex] 8
  # DEBUG D#350 => (const size_t) D#351
  # DEBUG __n => D#350
  _271 = (long unsigned int) _270;
  _272 = -_271;
  _273 = _266 + _272;
  # DEBUG D#349 => &D#1542->_M_impl
  # DEBUG D#346 => D#349
  # DEBUG D#347 => D#350
  # DEBUG __p => _273
  # DEBUG __a => D#346
  # DEBUG __n => D#347
  # DEBUG D#345 => D#347
  # DEBUG D#344 => D#346
  # DEBUG D#342 => D#344
  # DEBUG D#343 => D#345
  # DEBUG __p => _273
  # DEBUG this => D#342
  # DEBUG D.91910 => D#343
  operator delete (_273);

  <bb 45>:
  # DEBUG D#352 => &D#1542->_M_impl
  # DEBUG this => D#352
  # DEBUG this => D#352
  # DEBUG this => D#352
  MEM[(struct  &)this_9(D) + 616] ={v} {CLOBBER};
  # DEBUG D#699 => &this_9(D)->_mq_age
  # DEBUG this => D#699
  # DEBUG D#296 => &D#699->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#699->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#699->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#699->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _53 = MEM[(struct _Vector_base *)this_9(D) + 592B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _53
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _53
  # DEBUG __n => D#290
  if (_53 != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _53
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _53
  # DEBUG this => D#282
  # DEBUG D.77704 => D#283
  operator delete (_53);

  <bb 47>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 592] ={v} {CLOBBER};
  # DEBUG D#698 => &this_9(D)->_multi_match
  # DEBUG this => D#698
  # DEBUG D#296 => &D#698->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#698->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#698->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#698->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _54 = MEM[(struct _Vector_base *)this_9(D) + 568B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _54
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _54
  # DEBUG __n => D#290
  if (_54 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _54
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _54
  # DEBUG this => D#282
  # DEBUG D.77689 => D#283
  operator delete (_54);

  <bb 49>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 568] ={v} {CLOBBER};
  # DEBUG D#696 => &this_9(D)->_input_mq_match
  # DEBUG this => D#696
  # DEBUG D#296 => &D#696->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#696->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#696->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#696->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _55 = MEM[(struct _Vector_base *)this_9(D) + 544B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _55
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _55
  # DEBUG __n => D#290
  if (_55 != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _55
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _55
  # DEBUG this => D#282
  # DEBUG D.77674 => D#283
  operator delete (_55);

  <bb 51>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 544] ={v} {CLOBBER};
  # DEBUG D#695 => &this_9(D)->_input_output_match
  # DEBUG this => D#695
  # DEBUG D#296 => &D#695->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#695->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#695->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#695->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _56 = MEM[(struct _Vector_base *)this_9(D) + 520B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _56
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _56
  # DEBUG __n => D#290
  if (_56 != 0B)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _56
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _56
  # DEBUG this => D#282
  # DEBUG D.77659 => D#283
  operator delete (_56);

  <bb 53>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 520] ={v} {CLOBBER};
  # DEBUG D#693 => &this_9(D)->_multi_state
  # DEBUG this => D#693
  # DEBUG D#433 => &D#693->D.50324
  # DEBUG this => D#433
  # DEBUG D#436 => D#693->D.50324._M_impl._M_finish
  # DEBUG D#435 => D#693->D.50324._M_impl._M_start
  # DEBUG __first => D#435
  # DEBUG __last => D#436
  # DEBUG D.75216 => NULL
  # DEBUG D#192 => D#435
  # DEBUG D#193 => D#436
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  # DEBUG D#434 => &D#693->D.50324
  # DEBUG this => D#434
  # DEBUG D#432 => D#434->_M_impl._M_end_of_storage
  # DEBUG D#431 => (long int) D#432
  _57 = MEM[(struct _Vector_base *)this_9(D) + 496B]._M_impl._M_start;
  # DEBUG D#430 => (long int) _57
  # DEBUG D#429 => D#431 - D#430
  # DEBUG D#428 => D#429 /[ex] 4
  # DEBUG D#427 => (long unsigned int) D#428
  # DEBUG this => D#434
  # DEBUG __p => _57
  # DEBUG __n => D#427
  if (_57 != 0B)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  # DEBUG D#425 => &D#434->_M_impl
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#427
  # DEBUG __p => _57
  # DEBUG __a => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#419 => D#421
  # DEBUG D#420 => D#422
  # DEBUG __p => _57
  # DEBUG this => D#419
  # DEBUG D.77644 => D#420
  operator delete (_57);

  <bb 55>:
  # DEBUG D#426 => &D#434->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)this_9(D) + 496] ={v} {CLOBBER};
  # DEBUG D#692 => &this_9(D)->_input_state
  # DEBUG this => D#692
  # DEBUG D#433 => &D#692->D.50324
  # DEBUG this => D#433
  # DEBUG D#436 => D#692->D.50324._M_impl._M_finish
  # DEBUG D#435 => D#692->D.50324._M_impl._M_start
  # DEBUG __first => D#435
  # DEBUG __last => D#436
  # DEBUG D.75216 => NULL
  # DEBUG D#192 => D#435
  # DEBUG D#193 => D#436
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  # DEBUG D#434 => &D#692->D.50324
  # DEBUG this => D#434
  # DEBUG D#432 => D#434->_M_impl._M_end_of_storage
  # DEBUG D#431 => (long int) D#432
  _60 = MEM[(struct _Vector_base *)this_9(D) + 472B]._M_impl._M_start;
  # DEBUG D#430 => (long int) _60
  # DEBUG D#429 => D#431 - D#430
  # DEBUG D#428 => D#429 /[ex] 4
  # DEBUG D#427 => (long unsigned int) D#428
  # DEBUG this => D#434
  # DEBUG __p => _60
  # DEBUG __n => D#427
  if (_60 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#425 => &D#434->_M_impl
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#427
  # DEBUG __p => _60
  # DEBUG __a => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#419 => D#421
  # DEBUG D#420 => D#422
  # DEBUG __p => _60
  # DEBUG this => D#419
  # DEBUG D.77629 => D#420
  operator delete (_60);

  <bb 57>:
  # DEBUG D#426 => &D#434->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)this_9(D) + 472] ={v} {CLOBBER};
  # DEBUG D#1553 => &this_9(D)->_credit_queue
  # DEBUG this => D#1553
  # DEBUG D#662 => &D#1553->D.49577
  # DEBUG this => D#662
  _178 = MEM[(struct vector *)this_9(D) + 448B].D.49577._M_impl._M_finish;
  __first_282 = MEM[(struct vector *)this_9(D) + 448B].D.49577._M_impl._M_start;
  # DEBUG __first => __first_282
  # DEBUG __last => _178
  # DEBUG __first => __first_282
  if (_178 == __first_282)
    goto <bb 69>;
  else
    goto <bb 58>;

  <bb 58>:

  <bb 59>:
  # __first_548 = PHI <__first_282(58), __first_285(67)>
  # DEBUG __first => __first_548
  # DEBUG __r => __first_548
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  # DEBUG D#1552 => &MEM[(struct deque *)__first_548].D.53612
  # DEBUG this => D#1552
  _59 = MEM[(struct _Deque_base *)__first_548]._M_impl._M_map;
  if (_59 != 0B)
    goto <bb 60>;
  else
    goto <bb 66>;

  <bb 60>:
  _287 = MEM[(struct _Deque_base *)__first_548]._M_impl._M_finish._M_node;
  _288 = _287 + 8;
  __nstart_289 = MEM[(struct _Deque_base *)__first_548]._M_impl._M_start._M_node;
  # DEBUG this => D#1552
  # DEBUG __nstart => __nstart_289
  # DEBUG __nfinish => _288
  # DEBUG __n => __nstart_289
  # DEBUG __n => __nstart_289
  if (_288 <= __nstart_289)
    goto <bb 65>;
  else
    goto <bb 61>;

  <bb 61>:

  <bb 62>:
  # __nstart_556 = PHI <__nstart_289(61), __nstart_292(63)>
  # DEBUG __n => __nstart_556
  _291 = *__nstart_556;
  # DEBUG this => D#1552
  # DEBUG __p => _291
  # DEBUG __size => 8
  # DEBUG D#629 => &D#1552->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _291
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _291
  # DEBUG this => D#623
  # DEBUG D.91962 => D#624
  operator delete (_291);
  __nstart_292 = __nstart_556 + 8;
  # DEBUG __n => __nstart_292
  # DEBUG __n => __nstart_292
  if (_288 <= __nstart_292)
    goto <bb 64>;
  else
    goto <bb 63>;

  <bb 63>:
  goto <bb 62>;

  <bb 64>:
  pretmp_169 = MEM[(struct _Deque_base *)__first_548]._M_impl._M_map;

  <bb 65>:
  # prephitmp_386 = PHI <pretmp_169(64), _59(60)>
  # DEBUG D#646 => D#1552->_M_impl._M_map_size
  # DEBUG D#1563 => MEM[(struct _Deque_base *)__first_548]._M_impl._M_map
  # DEBUG D#644 => D#1552
  # DEBUG D#645 => D#646
  # DEBUG __p => D#1563
  # DEBUG this => D#644
  # DEBUG __n => D#645
  # DEBUG D#643 => D#645
  # DEBUG D#642 => D#644
  # DEBUG D#641 => D#642
  # DEBUG this => D#641
  # DEBUG D#640 => D#641
  # DEBUG this => D#640
  # DEBUG this => NULL
  # DEBUG D.77171 => NULL
  # DEBUG this => NULL
  # DEBUG D#475 => &__map_alloc
  # DEBUG D#476 => D#643
  # DEBUG __p => D#1563
  # DEBUG __a => D#475
  # DEBUG __n => D#476
  # DEBUG D#474 => D#476
  # DEBUG D#473 => D#475
  # DEBUG D#471 => D#473
  # DEBUG D#472 => D#474
  # DEBUG __p => D#1563
  # DEBUG this => D#471
  # DEBUG D.91972 => D#472
  operator delete (prephitmp_386);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 66>:
  # DEBUG D#647 => &D#1552->_M_impl
  # DEBUG this => D#647
  # DEBUG this => D#647
  # DEBUG this => D#647
  MEM[(struct  &)__first_548] ={v} {CLOBBER};
  __first_285 = __first_548 + 80;
  # DEBUG __first => __first_285
  # DEBUG __first => __first_285
  if (_178 == __first_285)
    goto <bb 68>;
  else
    goto <bb 67>;

  <bb 67>:
  goto <bb 59>;

  <bb 68>:
  pretmp_155 = MEM[(struct _Vector_base *)this_9(D) + 448B]._M_impl._M_start;

  <bb 69>:
  # prephitmp_156 = PHI <pretmp_155(68), __first_282(57)>
  # DEBUG D#663 => &D#1553->D.49577
  # DEBUG this => D#663
  # DEBUG D#416 => D#663->_M_impl._M_end_of_storage
  # DEBUG D#415 => (long int) D#416
  # DEBUG D#1562 => MEM[(struct _Vector_base *)this_9(D) + 448B]._M_impl._M_start
  # DEBUG D#414 => (long int) D#1562
  # DEBUG D#413 => D#415 - D#414
  # DEBUG D#412 => D#413 /[ex] 80
  # DEBUG D#409 => D#663
  # DEBUG D#410 => (long unsigned int) D#412
  # DEBUG __p => D#1562
  # DEBUG this => D#409
  # DEBUG __n => D#410
  # DEBUG D#408 => D#410
  # DEBUG D#407 => D#409
  if (prephitmp_156 != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  # DEBUG D#406 => &D#407->_M_impl
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#408
  # DEBUG __p => D#1562
  # DEBUG __a => D#404
  # DEBUG __n => D#405
  # DEBUG D#403 => D#405
  # DEBUG D#402 => D#404
  # DEBUG D#400 => D#402
  # DEBUG D#401 => D#403
  # DEBUG __p => D#1562
  # DEBUG this => D#400
  # DEBUG D.91942 => D#401
  operator delete (prephitmp_156);

  <bb 71>:
  # DEBUG D#411 => &D#663->_M_impl
  # DEBUG this => D#411
  # DEBUG this => D#411
  # DEBUG this => D#411
  MEM[(struct  &)this_9(D) + 448] ={v} {CLOBBER};
  # DEBUG D#690 => &this_9(D)->_next_queue_cnt
  # DEBUG this => D#690
  # DEBUG D#296 => &D#690->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#690->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#690->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#690->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _67 = MEM[(struct _Vector_base *)this_9(D) + 424B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _67
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _67
  # DEBUG __n => D#290
  if (_67 != 0B)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _67
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _67
  # DEBUG this => D#282
  # DEBUG D.77614 => D#283
  operator delete (_67);

  <bb 73>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 424] ={v} {CLOBBER};
  # DEBUG D#1551 => &this_9(D)->_multi_queue
  # DEBUG this => D#1551
  # DEBUG D#621 => &D#1551->D.48826
  # DEBUG this => D#621
  _64 = MEM[(struct vector *)this_9(D) + 400B].D.48826._M_impl._M_finish;
  __first_305 = MEM[(struct vector *)this_9(D) + 400B].D.48826._M_impl._M_start;
  # DEBUG __first => __first_305
  # DEBUG __last => _64
  # DEBUG __first => __first_305
  if (_64 == __first_305)
    goto <bb 85>;
  else
    goto <bb 74>;

  <bb 74>:

  <bb 75>:
  # __first_596 = PHI <__first_305(74), __first_308(83)>
  # DEBUG __first => __first_596
  # DEBUG __r => __first_596
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  # DEBUG D#1550 => &MEM[(struct deque *)__first_596].D.47197
  # DEBUG this => D#1550
  _62 = MEM[(struct _Deque_base *)__first_596]._M_impl._M_map;
  if (_62 != 0B)
    goto <bb 76>;
  else
    goto <bb 82>;

  <bb 76>:
  _310 = MEM[(struct _Deque_base *)__first_596]._M_impl._M_finish._M_node;
  _311 = _310 + 8;
  __nstart_312 = MEM[(struct _Deque_base *)__first_596]._M_impl._M_start._M_node;
  # DEBUG this => D#1550
  # DEBUG __nstart => __nstart_312
  # DEBUG __nfinish => _311
  # DEBUG __n => __nstart_312
  # DEBUG __n => __nstart_312
  if (_311 <= __nstart_312)
    goto <bb 81>;
  else
    goto <bb 77>;

  <bb 77>:

  <bb 78>:
  # __nstart_580 = PHI <__nstart_312(77), __nstart_315(79)>
  # DEBUG __n => __nstart_580
  _314 = *__nstart_580;
  # DEBUG D#591 => D#1550
  # DEBUG __p => _314
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _314
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _314
  # DEBUG this => D#565
  # DEBUG D.92067 => D#566
  operator delete (_314);
  __nstart_315 = __nstart_580 + 8;
  # DEBUG __n => __nstart_315
  # DEBUG __n => __nstart_315
  if (_311 <= __nstart_315)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 78>;

  <bb 80>:
  pretmp_176 = MEM[(struct _Deque_base *)__first_596]._M_impl._M_map;

  <bb 81>:
  # prephitmp_165 = PHI <pretmp_176(80), _62(76)>
  # DEBUG D#605 => D#1550->_M_impl._M_map_size
  # DEBUG D#1561 => MEM[(struct _Deque_base *)__first_596]._M_impl._M_map
  # DEBUG D#603 => D#1550
  # DEBUG D#604 => D#605
  # DEBUG __p => D#1561
  # DEBUG this => D#603
  # DEBUG __n => D#604
  # DEBUG D#602 => D#604
  # DEBUG D#601 => D#603
  # DEBUG D#600 => D#601
  # DEBUG this => D#600
  # DEBUG D#599 => D#600
  # DEBUG this => D#599
  # DEBUG this => NULL
  # DEBUG D.76847 => NULL
  # DEBUG this => NULL
  # DEBUG D#465 => &__map_alloc
  # DEBUG D#466 => D#602
  # DEBUG __p => D#1561
  # DEBUG __a => D#465
  # DEBUG __n => D#466
  # DEBUG D#464 => D#466
  # DEBUG D#463 => D#465
  # DEBUG D#461 => D#463
  # DEBUG D#462 => D#464
  # DEBUG __p => D#1561
  # DEBUG this => D#461
  # DEBUG D.92077 => D#462
  operator delete (prephitmp_165);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 82>:
  # DEBUG D#606 => &D#1550->_M_impl
  # DEBUG this => D#606
  # DEBUG this => D#606
  # DEBUG this => D#606
  MEM[(struct  &)__first_596] ={v} {CLOBBER};
  __first_308 = __first_596 + 80;
  # DEBUG __first => __first_308
  # DEBUG __first => __first_308
  if (_64 == __first_308)
    goto <bb 84>;
  else
    goto <bb 83>;

  <bb 83>:
  goto <bb 75>;

  <bb 84>:
  pretmp_160 = MEM[(struct _Vector_base *)this_9(D) + 400B]._M_impl._M_start;

  <bb 85>:
  # prephitmp_161 = PHI <pretmp_160(84), __first_305(73)>
  # DEBUG D#622 => &D#1551->D.48826
  # DEBUG this => D#622
  # DEBUG D#397 => D#622->_M_impl._M_end_of_storage
  # DEBUG D#396 => (long int) D#397
  # DEBUG D#1560 => MEM[(struct _Vector_base *)this_9(D) + 400B]._M_impl._M_start
  # DEBUG D#395 => (long int) D#1560
  # DEBUG D#394 => D#396 - D#395
  # DEBUG D#393 => D#394 /[ex] 80
  # DEBUG D#390 => D#622
  # DEBUG D#391 => (long unsigned int) D#393
  # DEBUG __p => D#1560
  # DEBUG this => D#390
  # DEBUG __n => D#391
  # DEBUG D#389 => D#391
  # DEBUG D#388 => D#390
  if (prephitmp_161 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#387 => &D#388->_M_impl
  # DEBUG D#385 => D#387
  # DEBUG D#386 => D#389
  # DEBUG __p => D#1560
  # DEBUG __a => D#385
  # DEBUG __n => D#386
  # DEBUG D#384 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#381 => D#383
  # DEBUG D#382 => D#384
  # DEBUG __p => D#1560
  # DEBUG this => D#381
  # DEBUG D.92047 => D#382
  operator delete (prephitmp_161);

  <bb 87>:
  # DEBUG D#392 => &D#622->_M_impl
  # DEBUG this => D#392
  # DEBUG this => D#392
  # DEBUG this => D#392
  MEM[(struct  &)this_9(D) + 400] ={v} {CLOBBER};
  # DEBUG D#1549 => &this_9(D)->_output_frame
  # DEBUG this => D#1549
  # DEBUG D#621 => &D#1549->D.48826
  # DEBUG this => D#621
  _66 = MEM[(struct vector *)this_9(D) + 376B].D.48826._M_impl._M_finish;
  __first_300 = MEM[(struct vector *)this_9(D) + 376B].D.48826._M_impl._M_start;
  # DEBUG __first => __first_300
  # DEBUG __last => _66
  # DEBUG __first => __first_300
  if (_66 == __first_300)
    goto <bb 99>;
  else
    goto <bb 88>;

  <bb 88>:

  <bb 89>:
  # __first_595 = PHI <__first_300(88), __first_303(97)>
  # DEBUG __first => __first_595
  # DEBUG __r => __first_595
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  # DEBUG D#1548 => &MEM[(struct deque *)__first_595].D.47197
  # DEBUG this => D#1548
  _317 = MEM[(struct _Deque_base *)__first_595]._M_impl._M_map;
  if (_317 != 0B)
    goto <bb 90>;
  else
    goto <bb 96>;

  <bb 90>:
  _318 = MEM[(struct _Deque_base *)__first_595]._M_impl._M_finish._M_node;
  _319 = _318 + 8;
  __nstart_320 = MEM[(struct _Deque_base *)__first_595]._M_impl._M_start._M_node;
  # DEBUG this => D#1548
  # DEBUG __nstart => __nstart_320
  # DEBUG __nfinish => _319
  # DEBUG __n => __nstart_320
  # DEBUG __n => __nstart_320
  if (_319 <= __nstart_320)
    goto <bb 95>;
  else
    goto <bb 91>;

  <bb 91>:

  <bb 92>:
  # __nstart_579 = PHI <__nstart_320(91), __nstart_323(93)>
  # DEBUG __n => __nstart_579
  _322 = *__nstart_579;
  # DEBUG D#591 => D#1548
  # DEBUG __p => _322
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _322
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _322
  # DEBUG this => D#565
  # DEBUG D.92094 => D#566
  operator delete (_322);
  __nstart_323 = __nstart_579 + 8;
  # DEBUG __n => __nstart_323
  # DEBUG __n => __nstart_323
  if (_319 <= __nstart_323)
    goto <bb 94>;
  else
    goto <bb 93>;

  <bb 93>:
  goto <bb 92>;

  <bb 94>:
  pretmp_430 = MEM[(struct _Deque_base *)__first_595]._M_impl._M_map;

  <bb 95>:
  # prephitmp_172 = PHI <pretmp_430(94), _317(90)>
  # DEBUG D#605 => D#1548->_M_impl._M_map_size
  # DEBUG D#1559 => MEM[(struct _Deque_base *)__first_595]._M_impl._M_map
  # DEBUG D#603 => D#1548
  # DEBUG D#604 => D#605
  # DEBUG __p => D#1559
  # DEBUG this => D#603
  # DEBUG __n => D#604
  # DEBUG D#602 => D#604
  # DEBUG D#601 => D#603
  # DEBUG D#600 => D#601
  # DEBUG this => D#600
  # DEBUG D#599 => D#600
  # DEBUG this => D#599
  # DEBUG this => NULL
  # DEBUG D.76847 => NULL
  # DEBUG this => NULL
  # DEBUG D#465 => &__map_alloc
  # DEBUG D#466 => D#602
  # DEBUG __p => D#1559
  # DEBUG __a => D#465
  # DEBUG __n => D#466
  # DEBUG D#464 => D#466
  # DEBUG D#463 => D#465
  # DEBUG D#461 => D#463
  # DEBUG D#462 => D#464
  # DEBUG __p => D#1559
  # DEBUG this => D#461
  # DEBUG D.92104 => D#462
  operator delete (prephitmp_172);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 96>:
  # DEBUG D#606 => &D#1548->_M_impl
  # DEBUG this => D#606
  # DEBUG this => D#606
  # DEBUG this => D#606
  MEM[(struct  &)__first_595] ={v} {CLOBBER};
  __first_303 = __first_595 + 80;
  # DEBUG __first => __first_303
  # DEBUG __first => __first_303
  if (_66 == __first_303)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 89>;

  <bb 98>:
  pretmp_468 = MEM[(struct _Vector_base *)this_9(D) + 376B]._M_impl._M_start;

  <bb 99>:
  # prephitmp_469 = PHI <pretmp_468(98), __first_300(87)>
  # DEBUG D#622 => &D#1549->D.48826
  # DEBUG this => D#622
  # DEBUG D#397 => D#622->_M_impl._M_end_of_storage
  # DEBUG D#396 => (long int) D#397
  # DEBUG D#1558 => MEM[(struct _Vector_base *)this_9(D) + 376B]._M_impl._M_start
  # DEBUG D#395 => (long int) D#1558
  # DEBUG D#394 => D#396 - D#395
  # DEBUG D#393 => D#394 /[ex] 80
  # DEBUG D#390 => D#622
  # DEBUG D#391 => (long unsigned int) D#393
  # DEBUG __p => D#1558
  # DEBUG this => D#390
  # DEBUG __n => D#391
  # DEBUG D#389 => D#391
  # DEBUG D#388 => D#390
  if (prephitmp_469 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#387 => &D#388->_M_impl
  # DEBUG D#385 => D#387
  # DEBUG D#386 => D#389
  # DEBUG __p => D#1558
  # DEBUG __a => D#385
  # DEBUG __n => D#386
  # DEBUG D#384 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#381 => D#383
  # DEBUG D#382 => D#384
  # DEBUG __p => D#1558
  # DEBUG this => D#381
  # DEBUG D.92021 => D#382
  operator delete (prephitmp_469);

  <bb 101>:
  # DEBUG D#392 => &D#622->_M_impl
  # DEBUG this => D#392
  # DEBUG this => D#392
  # DEBUG this => D#392
  MEM[(struct  &)this_9(D) + 376] ={v} {CLOBBER};
  # DEBUG D#1547 => &this_9(D)->_input_frame
  # DEBUG this => D#1547
  # DEBUG D#621 => &D#1547->D.48826
  # DEBUG this => D#621
  _294 = MEM[(struct vector *)this_9(D) + 352B].D.48826._M_impl._M_finish;
  __first_295 = MEM[(struct vector *)this_9(D) + 352B].D.48826._M_impl._M_start;
  # DEBUG __first => __first_295
  # DEBUG __last => _294
  # DEBUG __first => __first_295
  if (_294 == __first_295)
    goto <bb 113>;
  else
    goto <bb 102>;

  <bb 102>:

  <bb 103>:
  # __first_582 = PHI <__first_295(102), __first_298(111)>
  # DEBUG __first => __first_582
  # DEBUG __r => __first_582
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  # DEBUG D#1546 => &MEM[(struct deque *)__first_582].D.47197
  # DEBUG this => D#1546
  _325 = MEM[(struct _Deque_base *)__first_582]._M_impl._M_map;
  if (_325 != 0B)
    goto <bb 104>;
  else
    goto <bb 110>;

  <bb 104>:
  _326 = MEM[(struct _Deque_base *)__first_582]._M_impl._M_finish._M_node;
  _327 = _326 + 8;
  __nstart_328 = MEM[(struct _Deque_base *)__first_582]._M_impl._M_start._M_node;
  # DEBUG this => D#1546
  # DEBUG __nstart => __nstart_328
  # DEBUG __nfinish => _327
  # DEBUG __n => __nstart_328
  # DEBUG __n => __nstart_328
  if (_327 <= __nstart_328)
    goto <bb 109>;
  else
    goto <bb 105>;

  <bb 105>:

  <bb 106>:
  # __nstart_581 = PHI <__nstart_328(105), __nstart_331(107)>
  # DEBUG __n => __nstart_581
  _330 = *__nstart_581;
  # DEBUG D#591 => D#1546
  # DEBUG __p => _330
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _330
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _330
  # DEBUG this => D#565
  # DEBUG D.92121 => D#566
  operator delete (_330);
  __nstart_331 = __nstart_581 + 8;
  # DEBUG __n => __nstart_331
  # DEBUG __n => __nstart_331
  if (_327 <= __nstart_331)
    goto <bb 108>;
  else
    goto <bb 107>;

  <bb 107>:
  goto <bb 106>;

  <bb 108>:
  pretmp_444 = MEM[(struct _Deque_base *)__first_582]._M_impl._M_map;

  <bb 109>:
  # prephitmp_426 = PHI <pretmp_444(108), _325(104)>
  # DEBUG D#605 => D#1546->_M_impl._M_map_size
  # DEBUG D#1557 => MEM[(struct _Deque_base *)__first_582]._M_impl._M_map
  # DEBUG D#603 => D#1546
  # DEBUG D#604 => D#605
  # DEBUG __p => D#1557
  # DEBUG this => D#603
  # DEBUG __n => D#604
  # DEBUG D#602 => D#604
  # DEBUG D#601 => D#603
  # DEBUG D#600 => D#601
  # DEBUG this => D#600
  # DEBUG D#599 => D#600
  # DEBUG this => D#599
  # DEBUG this => NULL
  # DEBUG D.76847 => NULL
  # DEBUG this => NULL
  # DEBUG D#465 => &__map_alloc
  # DEBUG D#466 => D#602
  # DEBUG __p => D#1557
  # DEBUG __a => D#465
  # DEBUG __n => D#466
  # DEBUG D#464 => D#466
  # DEBUG D#463 => D#465
  # DEBUG D#461 => D#463
  # DEBUG D#462 => D#464
  # DEBUG __p => D#1557
  # DEBUG this => D#461
  # DEBUG D.92131 => D#462
  operator delete (prephitmp_426);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 110>:
  # DEBUG D#606 => &D#1546->_M_impl
  # DEBUG this => D#606
  # DEBUG this => D#606
  # DEBUG this => D#606
  MEM[(struct  &)__first_582] ={v} {CLOBBER};
  __first_298 = __first_582 + 80;
  # DEBUG __first => __first_298
  # DEBUG __first => __first_298
  if (_294 == __first_298)
    goto <bb 112>;
  else
    goto <bb 111>;

  <bb 111>:
  goto <bb 103>;

  <bb 112>:
  pretmp_471 = MEM[(struct _Vector_base *)this_9(D) + 352B]._M_impl._M_start;

  <bb 113>:
  # prephitmp_472 = PHI <pretmp_471(112), __first_295(101)>
  # DEBUG D#622 => &D#1547->D.48826
  # DEBUG this => D#622
  # DEBUG D#397 => D#622->_M_impl._M_end_of_storage
  # DEBUG D#396 => (long int) D#397
  # DEBUG D#1556 => MEM[(struct _Vector_base *)this_9(D) + 352B]._M_impl._M_start
  # DEBUG D#395 => (long int) D#1556
  # DEBUG D#394 => D#396 - D#395
  # DEBUG D#393 => D#394 /[ex] 80
  # DEBUG D#390 => D#622
  # DEBUG D#391 => (long unsigned int) D#393
  # DEBUG __p => D#1556
  # DEBUG this => D#390
  # DEBUG __n => D#391
  # DEBUG D#389 => D#391
  # DEBUG D#388 => D#390
  if (prephitmp_472 != 0B)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  # DEBUG D#387 => &D#388->_M_impl
  # DEBUG D#385 => D#387
  # DEBUG D#386 => D#389
  # DEBUG __p => D#1556
  # DEBUG __a => D#385
  # DEBUG __n => D#386
  # DEBUG D#384 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#381 => D#383
  # DEBUG D#382 => D#384
  # DEBUG __p => D#1556
  # DEBUG this => D#381
  # DEBUG D.91995 => D#382
  operator delete (prephitmp_472);

  <bb 115>:
  # DEBUG D#392 => &D#622->_M_impl
  # DEBUG this => D#392
  # DEBUG this => D#392
  # DEBUG this => D#392
  MEM[(struct  &)this_9(D) + 352] ={v} {CLOBBER};
  # DEBUG D#689 => &this_9(D)->_mq_route
  # DEBUG this => D#689
  # DEBUG D#375 => &D#689->D.48066
  # DEBUG this => D#375
  # DEBUG D#378 => D#689->D.48066._M_impl._M_finish
  # DEBUG D#377 => D#689->D.48066._M_impl._M_start
  # DEBUG __first => D#377
  # DEBUG __last => D#378
  # DEBUG D.74999 => NULL
  # DEBUG D#182 => D#377
  # DEBUG D#183 => D#378
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  # DEBUG D#376 => &D#689->D.48066
  # DEBUG this => D#376
  # DEBUG D#374 => D#376->_M_impl._M_end_of_storage
  # DEBUG D#373 => (long int) D#374
  _68 = MEM[(struct _Vector_base *)this_9(D) + 312B]._M_impl._M_start;
  # DEBUG D#372 => (long int) _68
  # DEBUG D#371 => D#373 - D#372
  # DEBUG D#370 => D#371 /[ex] 8
  # DEBUG D#369 => (long unsigned int) D#370
  # DEBUG this => D#376
  # DEBUG __p => _68
  # DEBUG __n => D#369
  if (_68 != 0B)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#367 => &D#376->_M_impl
  # DEBUG D#365 => D#367
  # DEBUG D#366 => D#369
  # DEBUG __p => _68
  # DEBUG __a => D#365
  # DEBUG __n => D#366
  # DEBUG D#364 => D#366
  # DEBUG D#363 => D#365
  # DEBUG D#361 => D#363
  # DEBUG D#362 => D#364
  # DEBUG __p => _68
  # DEBUG this => D#361
  # DEBUG D.77599 => D#362
  operator delete (_68);

  <bb 117>:
  # DEBUG D#368 => &D#376->_M_impl
  # DEBUG this => D#368
  # DEBUG this => D#368
  # DEBUG this => D#368
  MEM[(struct  &)this_9(D) + 312] ={v} {CLOBBER};
  # DEBUG D#687 => &this_9(D)->_input_route
  # DEBUG this => D#687
  # DEBUG D#375 => &D#687->D.48066
  # DEBUG this => D#375
  # DEBUG D#378 => D#687->D.48066._M_impl._M_finish
  # DEBUG D#377 => D#687->D.48066._M_impl._M_start
  # DEBUG __first => D#377
  # DEBUG __last => D#378
  # DEBUG D.74999 => NULL
  # DEBUG D#182 => D#377
  # DEBUG D#183 => D#378
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  # DEBUG D#376 => &D#687->D.48066
  # DEBUG this => D#376
  # DEBUG D#374 => D#376->_M_impl._M_end_of_storage
  # DEBUG D#373 => (long int) D#374
  _47 = MEM[(struct _Vector_base *)this_9(D) + 288B]._M_impl._M_start;
  # DEBUG D#372 => (long int) _47
  # DEBUG D#371 => D#373 - D#372
  # DEBUG D#370 => D#371 /[ex] 8
  # DEBUG D#369 => (long unsigned int) D#370
  # DEBUG this => D#376
  # DEBUG __p => _47
  # DEBUG __n => D#369
  if (_47 != 0B)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  # DEBUG D#367 => &D#376->_M_impl
  # DEBUG D#365 => D#367
  # DEBUG D#366 => D#369
  # DEBUG __p => _47
  # DEBUG __a => D#365
  # DEBUG __n => D#366
  # DEBUG D#364 => D#366
  # DEBUG D#363 => D#365
  # DEBUG D#361 => D#363
  # DEBUG D#362 => D#364
  # DEBUG __p => _47
  # DEBUG this => D#361
  # DEBUG D.77584 => D#362
  operator delete (_47);

  <bb 119>:
  # DEBUG D#368 => &D#376->_M_impl
  # DEBUG this => D#368
  # DEBUG this => D#368
  # DEBUG this => D#368
  MEM[(struct  &)this_9(D) + 288] ={v} {CLOBBER};
  # DEBUG D#1545 => &this_9(D)->D.50427
  # DEBUG this => D#1545
  MEM[(struct Router *)this_9(D)].D.43102.D.29663._vptr.Module = &MEM[(void *)&_ZTV6Router + 16B];
  # DEBUG D#358 => &D#1545->_channel_faults
  # DEBUG this => D#358
  # DEBUG D#1543 => &MEM[(struct vector *)this_9(D) + 240B].D.43009
  # DEBUG this => D#1543
  # DEBUG this => D#1543
  _70 = MEM[(struct _Bvector_base *)this_9(D) + 240B]._M_impl._M_start.D.27293._M_p;
  if (_70 != 0B)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#348 => &D#1543->_M_impl
  _339 = MEM[(long unsigned int * *)this_9(D) + 272B];
  # DEBUG D#219 => D#348
  # DEBUG this => D#219
  _341 = (long int) _339;
  _342 = (long int) _70;
  _343 = _341 - _342;
  # DEBUG D#351 => _343 /[ex] 8
  # DEBUG D#350 => (const size_t) D#351
  # DEBUG __n => D#350
  _344 = (long unsigned int) _343;
  _345 = -_344;
  _346 = _339 + _345;
  # DEBUG D#349 => &D#1543->_M_impl
  # DEBUG D#346 => D#349
  # DEBUG D#347 => D#350
  # DEBUG __p => _346
  # DEBUG __a => D#346
  # DEBUG __n => D#347
  # DEBUG D#345 => D#347
  # DEBUG D#344 => D#346
  # DEBUG D#342 => D#344
  # DEBUG D#343 => D#345
  # DEBUG __p => _346
  # DEBUG this => D#342
  # DEBUG D.92207 => D#343
  operator delete (_346);

  <bb 121>:
  # DEBUG D#352 => &D#1543->_M_impl
  # DEBUG this => D#352
  # DEBUG this => D#352
  # DEBUG this => D#352
  MEM[(struct  &)this_9(D) + 240] ={v} {CLOBBER};
  # DEBUG D#357 => &D#1545->_output_credits
  # DEBUG this => D#357
  # DEBUG D#338 => &D#357->D.42106
  # DEBUG this => D#338
  # DEBUG D#341 => D#357->D.42106._M_impl._M_finish
  # DEBUG D#340 => D#357->D.42106._M_impl._M_start
  # DEBUG D#175 => D#340
  # DEBUG D#176 => D#341
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.74811 => D#177
  # DEBUG D#174 => D#176
  # DEBUG D#173 => D#175
  # DEBUG D#171 => D#173
  # DEBUG D#172 => D#174
  # DEBUG __first => D#171
  # DEBUG __last => D#172
  # DEBUG D#170 => D#172
  # DEBUG D#169 => D#171
  # DEBUG D#167 => D#169
  # DEBUG D#168 => D#170
  # DEBUG D.73867 => D#167
  # DEBUG D.73866 => D#168
  # DEBUG D#339 => &D#357->D.42106
  # DEBUG this => D#339
  # DEBUG D#337 => D#339->_M_impl._M_end_of_storage
  # DEBUG D#336 => (long int) D#337
  _334 = MEM[(struct _Vector_base *)this_9(D) + 216B]._M_impl._M_start;
  # DEBUG D#335 => (long int) _334
  # DEBUG D#334 => D#336 - D#335
  # DEBUG D#333 => D#334 /[ex] 8
  # DEBUG D#330 => D#339
  # DEBUG D#331 => (long unsigned int) D#333
  # DEBUG __p => _334
  # DEBUG this => D#330
  # DEBUG __n => D#331
  # DEBUG D#329 => D#331
  # DEBUG D#328 => D#330
  if (_334 != 0B)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  # DEBUG D#327 => &D#328->_M_impl
  # DEBUG D#325 => D#327
  # DEBUG D#326 => D#329
  # DEBUG __p => _334
  # DEBUG __a => D#325
  # DEBUG __n => D#326
  # DEBUG D#324 => D#326
  # DEBUG D#323 => D#325
  # DEBUG D#321 => D#323
  # DEBUG D#322 => D#324
  # DEBUG __p => _334
  # DEBUG this => D#321
  # DEBUG D.92149 => D#322
  operator delete (_334);

  <bb 123>:
  # DEBUG D#332 => &D#339->_M_impl
  # DEBUG this => D#332
  # DEBUG this => D#332
  # DEBUG this => D#332
  MEM[(struct  &)this_9(D) + 216] ={v} {CLOBBER};
  # DEBUG D#356 => &D#1545->_output_channels
  # DEBUG this => D#356
  # DEBUG D#317 => &D#356->D.41359
  # DEBUG this => D#317
  # DEBUG D#320 => D#356->D.41359._M_impl._M_finish
  # DEBUG D#319 => D#356->D.41359._M_impl._M_start
  # DEBUG D#164 => D#319
  # DEBUG D#165 => D#320
  # DEBUG __first => D#164
  # DEBUG __last => D#165
  # DEBUG D.74731 => D#166
  # DEBUG D#163 => D#165
  # DEBUG D#162 => D#164
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163
  # DEBUG __first => D#160
  # DEBUG __last => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG D.73829 => D#156
  # DEBUG D.73828 => D#157
  # DEBUG D#318 => &D#356->D.41359
  # DEBUG this => D#318
  # DEBUG D#316 => D#318->_M_impl._M_end_of_storage
  # DEBUG D#315 => (long int) D#316
  _335 = MEM[(struct _Vector_base *)this_9(D) + 192B]._M_impl._M_start;
  # DEBUG D#314 => (long int) _335
  # DEBUG D#313 => D#315 - D#314
  # DEBUG D#312 => D#313 /[ex] 8
  # DEBUG D#309 => D#318
  # DEBUG D#310 => (long unsigned int) D#312
  # DEBUG __p => _335
  # DEBUG this => D#309
  # DEBUG __n => D#310
  # DEBUG D#308 => D#310
  # DEBUG D#307 => D#309
  if (_335 != 0B)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  # DEBUG D#306 => &D#307->_M_impl
  # DEBUG D#304 => D#306
  # DEBUG D#305 => D#308
  # DEBUG __p => _335
  # DEBUG __a => D#304
  # DEBUG __n => D#305
  # DEBUG D#303 => D#305
  # DEBUG D#302 => D#304
  # DEBUG D#300 => D#302
  # DEBUG D#301 => D#303
  # DEBUG __p => _335
  # DEBUG this => D#300
  # DEBUG D.92164 => D#301
  operator delete (_335);

  <bb 125>:
  # DEBUG D#311 => &D#318->_M_impl
  # DEBUG this => D#311
  # DEBUG this => D#311
  # DEBUG this => D#311
  MEM[(struct  &)this_9(D) + 192] ={v} {CLOBBER};
  # DEBUG D#355 => &D#1545->_input_credits
  # DEBUG this => D#355
  # DEBUG D#338 => &D#355->D.42106
  # DEBUG this => D#338
  # DEBUG D#341 => D#355->D.42106._M_impl._M_finish
  # DEBUG D#340 => D#355->D.42106._M_impl._M_start
  # DEBUG D#175 => D#340
  # DEBUG D#176 => D#341
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.74811 => D#177
  # DEBUG D#174 => D#176
  # DEBUG D#173 => D#175
  # DEBUG D#171 => D#173
  # DEBUG D#172 => D#174
  # DEBUG __first => D#171
  # DEBUG __last => D#172
  # DEBUG D#170 => D#172
  # DEBUG D#169 => D#171
  # DEBUG D#167 => D#169
  # DEBUG D#168 => D#170
  # DEBUG D.73867 => D#167
  # DEBUG D.73866 => D#168
  # DEBUG D#339 => &D#355->D.42106
  # DEBUG this => D#339
  # DEBUG D#337 => D#339->_M_impl._M_end_of_storage
  # DEBUG D#336 => (long int) D#337
  _336 = MEM[(struct _Vector_base *)this_9(D) + 168B]._M_impl._M_start;
  # DEBUG D#335 => (long int) _336
  # DEBUG D#334 => D#336 - D#335
  # DEBUG D#333 => D#334 /[ex] 8
  # DEBUG D#330 => D#339
  # DEBUG D#331 => (long unsigned int) D#333
  # DEBUG __p => _336
  # DEBUG this => D#330
  # DEBUG __n => D#331
  # DEBUG D#329 => D#331
  # DEBUG D#328 => D#330
  if (_336 != 0B)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  # DEBUG D#327 => &D#328->_M_impl
  # DEBUG D#325 => D#327
  # DEBUG D#326 => D#329
  # DEBUG __p => _336
  # DEBUG __a => D#325
  # DEBUG __n => D#326
  # DEBUG D#324 => D#326
  # DEBUG D#323 => D#325
  # DEBUG D#321 => D#323
  # DEBUG D#322 => D#324
  # DEBUG __p => _336
  # DEBUG this => D#321
  # DEBUG D.92179 => D#322
  operator delete (_336);

  <bb 127>:
  # DEBUG D#332 => &D#339->_M_impl
  # DEBUG this => D#332
  # DEBUG this => D#332
  # DEBUG this => D#332
  MEM[(struct  &)this_9(D) + 168] ={v} {CLOBBER};
  # DEBUG D#354 => &D#1545->_input_channels
  # DEBUG this => D#354
  # DEBUG D#317 => &D#354->D.41359
  # DEBUG this => D#317
  # DEBUG D#320 => D#354->D.41359._M_impl._M_finish
  # DEBUG D#319 => D#354->D.41359._M_impl._M_start
  # DEBUG D#164 => D#319
  # DEBUG D#165 => D#320
  # DEBUG __first => D#164
  # DEBUG __last => D#165
  # DEBUG D.74731 => D#166
  # DEBUG D#163 => D#165
  # DEBUG D#162 => D#164
  # DEBUG D#160 => D#162
  # DEBUG D#161 => D#163
  # DEBUG __first => D#160
  # DEBUG __last => D#161
  # DEBUG D#159 => D#161
  # DEBUG D#158 => D#160
  # DEBUG D#156 => D#158
  # DEBUG D#157 => D#159
  # DEBUG D.73829 => D#156
  # DEBUG D.73828 => D#157
  # DEBUG D#318 => &D#354->D.41359
  # DEBUG this => D#318
  # DEBUG D#316 => D#318->_M_impl._M_end_of_storage
  # DEBUG D#315 => (long int) D#316
  _337 = MEM[(struct _Vector_base *)this_9(D) + 144B]._M_impl._M_start;
  # DEBUG D#314 => (long int) _337
  # DEBUG D#313 => D#315 - D#314
  # DEBUG D#312 => D#313 /[ex] 8
  # DEBUG D#309 => D#318
  # DEBUG D#310 => (long unsigned int) D#312
  # DEBUG __p => _337
  # DEBUG this => D#309
  # DEBUG __n => D#310
  # DEBUG D#308 => D#310
  # DEBUG D#307 => D#309
  if (_337 != 0B)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  # DEBUG D#306 => &D#307->_M_impl
  # DEBUG D#304 => D#306
  # DEBUG D#305 => D#308
  # DEBUG __p => _337
  # DEBUG __a => D#304
  # DEBUG __n => D#305
  # DEBUG D#303 => D#305
  # DEBUG D#302 => D#304
  # DEBUG D#300 => D#302
  # DEBUG D#301 => D#303
  # DEBUG __p => _337
  # DEBUG this => D#300
  # DEBUG D.92194 => D#301
  operator delete (_337);

  <bb 129>:
  # DEBUG D#311 => &D#318->_M_impl
  # DEBUG this => D#311
  # DEBUG this => D#311
  # DEBUG this => D#311
  MEM[(struct  &)this_9(D) + 144] ={v} {CLOBBER};
  # DEBUG D#353 => &D#1545->D.43102
  # DEBUG this => D#353
  # DEBUG D#1544 => &MEM[(struct TimedModule *)this_9(D)].D.29663
  # DEBUG this => D#1544
  MEM[(struct Module *)this_9(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#277 => &D#1544->_children
  # DEBUG this => D#277
  # DEBUG D#271 => &D#277->D.29566
  # DEBUG this => D#271
  # DEBUG D#274 => D#277->D.29566._M_impl._M_finish
  # DEBUG D#273 => D#277->D.29566._M_impl._M_start
  # DEBUG D#143 => D#273
  # DEBUG D#144 => D#274
  # DEBUG __first => D#143
  # DEBUG __last => D#144
  # DEBUG D.74504 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#141 => D#143
  # DEBUG D#139 => D#141
  # DEBUG D#140 => D#142
  # DEBUG __first => D#139
  # DEBUG __last => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG D.73747 => D#135
  # DEBUG D.73746 => D#136
  # DEBUG D#272 => &D#277->D.29566
  # DEBUG this => D#272
  # DEBUG D#270 => D#272->_M_impl._M_end_of_storage
  # DEBUG D#269 => (long int) D#270
  _347 = MEM[(struct _Vector_base *)this_9(D) + 72B]._M_impl._M_start;
  # DEBUG D#268 => (long int) _347
  # DEBUG D#267 => D#269 - D#268
  # DEBUG D#266 => D#267 /[ex] 8
  # DEBUG D#263 => D#272
  # DEBUG D#264 => (long unsigned int) D#266
  # DEBUG __p => _347
  # DEBUG this => D#263
  # DEBUG __n => D#264
  # DEBUG D#262 => D#264
  # DEBUG D#261 => D#263
  if (_347 != 0B)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#260 => &D#261->_M_impl
  # DEBUG D#258 => D#260
  # DEBUG D#259 => D#262
  # DEBUG __p => _347
  # DEBUG __a => D#258
  # DEBUG __n => D#259
  # DEBUG D#257 => D#259
  # DEBUG D#256 => D#258
  # DEBUG D#254 => D#256
  # DEBUG D#255 => D#257
  # DEBUG __p => _347
  # DEBUG this => D#254
  # DEBUG D.92220 => D#255
  operator delete (_347);

  <bb 131>:
  # DEBUG D#265 => &D#272->_M_impl
  # DEBUG this => D#265
  # DEBUG this => D#265
  # DEBUG this => D#265
  MEM[(struct  &)this_9(D) + 72] ={v} {CLOBBER};
  # DEBUG D#276 => &D#1544->_fullname
  # DEBUG this => D#276
  # DEBUG this => D#276
  # DEBUG this => D#276
  _348 = MEM[(char * *)this_9(D) + 40B];
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  _349 = &MEM[(const struct basic_string *)this_9(D) + 40B].D.11539._M_local_buf;
  if (_348 != _349)
    goto <bb 132>;
  else
    goto <bb 133>;

  <bb 132>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#276].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#276
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  # DEBUG D#249 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _348
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _348
  # DEBUG this => D#243
  # DEBUG D.92233 => D#244
  operator delete (_348);

  <bb 133>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)this_9(D) + 40] ={v} {CLOBBER};
  # DEBUG D#275 => &D#1544->_name
  # DEBUG this => D#275
  # DEBUG this => D#275
  # DEBUG this => D#275
  _350 = MEM[(char * *)this_9(D) + 8B];
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  _351 = &MEM[(const struct basic_string *)this_9(D) + 8B].D.11539._M_local_buf;
  if (_350 != _351)
    goto <bb 134>;
  else
    goto <bb 135>;

  <bb 134>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#275].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#275
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  # DEBUG D#249 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _350
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _350
  # DEBUG this => D#243
  # DEBUG D.92248 => D#244
  operator delete (_350);

  <bb 135>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)this_9(D)] ={v} {CLOBBER};
  return;

<L19>:
  # DEBUG D#704 => &this_9(D)->_mq_matched
  # DEBUG this => D#704
  _50 = &MEM[(struct vector *)this_9(D) + 656B].D.43009;
  # DEBUG this => _50
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_50);
  # DEBUG D#352 => &_50->_M_impl
  # DEBUG this => D#352
  # DEBUG this => D#352
  # DEBUG this => D#352
  MEM[(struct  &)this_9(D) + 656] ={v} {CLOBBER};
  resx 17

<L20>:
  # DEBUG D#703 => &this_9(D)->_output_matched
  # DEBUG this => D#703
  _16 = &MEM[(struct vector *)this_9(D) + 616B].D.43009;
  # DEBUG this => _16
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_16);
  # DEBUG D#352 => &_16->_M_impl
  # DEBUG this => D#352
  # DEBUG this => D#352
  # DEBUG this => D#352
  MEM[(struct  &)this_9(D) + 616] ={v} {CLOBBER};
  resx 16

<L21>:
  # DEBUG D#702 => &this_9(D)->_mq_age
  # DEBUG this => D#702
  # DEBUG D#296 => &D#702->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#702->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#702->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#702->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _17 = MEM[(struct _Vector_base *)this_9(D) + 592B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _17
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _17
  # DEBUG __n => D#290
  if (_17 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _17
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _17
  # DEBUG this => D#282
  # DEBUG D.77739 => D#283
  operator delete (_17);

  <bb 140>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 592] ={v} {CLOBBER};
  resx 15

<L22>:
  # DEBUG D#697 => &this_9(D)->_multi_match
  # DEBUG this => D#697
  # DEBUG D#296 => &D#697->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#697->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#697->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#697->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _18 = MEM[(struct _Vector_base *)this_9(D) + 568B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _18
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _18
  # DEBUG __n => D#290
  if (_18 != 0B)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 142>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _18
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _18
  # DEBUG this => D#282
  # DEBUG D.77754 => D#283
  operator delete (_18);

  <bb 143>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 568] ={v} {CLOBBER};
  resx 14

<L23>:
  # DEBUG D#694 => &this_9(D)->_input_mq_match
  # DEBUG this => D#694
  # DEBUG D#296 => &D#694->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#694->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#694->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#694->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _19 = MEM[(struct _Vector_base *)this_9(D) + 544B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _19
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _19
  # DEBUG __n => D#290
  if (_19 != 0B)
    goto <bb 145>;
  else
    goto <bb 146>;

  <bb 145>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _19
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _19
  # DEBUG this => D#282
  # DEBUG D.77769 => D#283
  operator delete (_19);

  <bb 146>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 544] ={v} {CLOBBER};
  resx 13

<L24>:
  # DEBUG D#691 => &this_9(D)->_input_output_match
  # DEBUG this => D#691
  # DEBUG D#296 => &D#691->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#691->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#691->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#691->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _20 = MEM[(struct _Vector_base *)this_9(D) + 520B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _20
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _20
  # DEBUG __n => D#290
  if (_20 != 0B)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _20
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _20
  # DEBUG this => D#282
  # DEBUG D.77784 => D#283
  operator delete (_20);

  <bb 149>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 520] ={v} {CLOBBER};
  resx 12

<L25>:
  # DEBUG D#688 => &this_9(D)->_multi_state
  # DEBUG this => D#688
  # DEBUG D#433 => &D#688->D.50324
  # DEBUG this => D#433
  # DEBUG D#436 => D#688->D.50324._M_impl._M_finish
  # DEBUG D#435 => D#688->D.50324._M_impl._M_start
  # DEBUG __first => D#435
  # DEBUG __last => D#436
  # DEBUG D.75216 => NULL
  # DEBUG D#192 => D#435
  # DEBUG D#193 => D#436
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  # DEBUG D#434 => &D#688->D.50324
  # DEBUG this => D#434
  # DEBUG D#432 => D#434->_M_impl._M_end_of_storage
  # DEBUG D#431 => (long int) D#432
  _21 = MEM[(struct _Vector_base *)this_9(D) + 496B]._M_impl._M_start;
  # DEBUG D#430 => (long int) _21
  # DEBUG D#429 => D#431 - D#430
  # DEBUG D#428 => D#429 /[ex] 4
  # DEBUG D#427 => (long unsigned int) D#428
  # DEBUG this => D#434
  # DEBUG __p => _21
  # DEBUG __n => D#427
  if (_21 != 0B)
    goto <bb 151>;
  else
    goto <bb 152>;

  <bb 151>:
  # DEBUG D#425 => &D#434->_M_impl
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#427
  # DEBUG __p => _21
  # DEBUG __a => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#419 => D#421
  # DEBUG D#420 => D#422
  # DEBUG __p => _21
  # DEBUG this => D#419
  # DEBUG D.77799 => D#420
  operator delete (_21);

  <bb 152>:
  # DEBUG D#426 => &D#434->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)this_9(D) + 496] ={v} {CLOBBER};
  resx 11

<L26>:
  # DEBUG D#686 => &this_9(D)->_input_state
  # DEBUG this => D#686
  # DEBUG D#433 => &D#686->D.50324
  # DEBUG this => D#433
  # DEBUG D#436 => D#686->D.50324._M_impl._M_finish
  # DEBUG D#435 => D#686->D.50324._M_impl._M_start
  # DEBUG __first => D#435
  # DEBUG __last => D#436
  # DEBUG D.75216 => NULL
  # DEBUG D#192 => D#435
  # DEBUG D#193 => D#436
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  # DEBUG D#434 => &D#686->D.50324
  # DEBUG this => D#434
  # DEBUG D#432 => D#434->_M_impl._M_end_of_storage
  # DEBUG D#431 => (long int) D#432
  _22 = MEM[(struct _Vector_base *)this_9(D) + 472B]._M_impl._M_start;
  # DEBUG D#430 => (long int) _22
  # DEBUG D#429 => D#431 - D#430
  # DEBUG D#428 => D#429 /[ex] 4
  # DEBUG D#427 => (long unsigned int) D#428
  # DEBUG this => D#434
  # DEBUG __p => _22
  # DEBUG __n => D#427
  if (_22 != 0B)
    goto <bb 154>;
  else
    goto <bb 155>;

  <bb 154>:
  # DEBUG D#425 => &D#434->_M_impl
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#427
  # DEBUG __p => _22
  # DEBUG __a => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#419 => D#421
  # DEBUG D#420 => D#422
  # DEBUG __p => _22
  # DEBUG this => D#419
  # DEBUG D.77814 => D#420
  operator delete (_22);

  <bb 155>:
  # DEBUG D#426 => &D#434->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)this_9(D) + 472] ={v} {CLOBBER};
  resx 10

<L27>:
  _24 = &this_9(D)->_credit_queue;
  std::vector<std::queue<Credit*> >::~vector (_24);
  resx 9

<L28>:
  # DEBUG D#685 => &this_9(D)->_next_queue_cnt
  # DEBUG this => D#685
  # DEBUG D#296 => &D#685->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#685->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#685->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#685->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _23 = MEM[(struct _Vector_base *)this_9(D) + 424B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _23
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _23
  # DEBUG __n => D#290
  if (_23 != 0B)
    goto <bb 158>;
  else
    goto <bb 159>;

  <bb 158>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _23
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _23
  # DEBUG this => D#282
  # DEBUG D.77829 => D#283
  operator delete (_23);

  <bb 159>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_9(D) + 424] ={v} {CLOBBER};
  resx 8

<L29>:
  _27 = &this_9(D)->_multi_queue;
  std::vector<std::queue<Flit*> >::~vector (_27);
  resx 7

<L30>:
  _29 = &this_9(D)->_output_frame;
  std::vector<std::queue<Flit*> >::~vector (_29);
  resx 6

<L31>:
  _31 = &this_9(D)->_input_frame;
  std::vector<std::queue<Flit*> >::~vector (_31);
  resx 5

<L32>:
  # DEBUG D#684 => &this_9(D)->_mq_route
  # DEBUG this => D#684
  # DEBUG D#375 => &D#684->D.48066
  # DEBUG this => D#375
  # DEBUG D#378 => D#684->D.48066._M_impl._M_finish
  # DEBUG D#377 => D#684->D.48066._M_impl._M_start
  # DEBUG __first => D#377
  # DEBUG __last => D#378
  # DEBUG D.74999 => NULL
  # DEBUG D#182 => D#377
  # DEBUG D#183 => D#378
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  # DEBUG D#376 => &D#684->D.48066
  # DEBUG this => D#376
  # DEBUG D#374 => D#376->_M_impl._M_end_of_storage
  # DEBUG D#373 => (long int) D#374
  _26 = MEM[(struct _Vector_base *)this_9(D) + 312B]._M_impl._M_start;
  # DEBUG D#372 => (long int) _26
  # DEBUG D#371 => D#373 - D#372
  # DEBUG D#370 => D#371 /[ex] 8
  # DEBUG D#369 => (long unsigned int) D#370
  # DEBUG this => D#376
  # DEBUG __p => _26
  # DEBUG __n => D#369
  if (_26 != 0B)
    goto <bb 164>;
  else
    goto <bb 165>;

  <bb 164>:
  # DEBUG D#367 => &D#376->_M_impl
  # DEBUG D#365 => D#367
  # DEBUG D#366 => D#369
  # DEBUG __p => _26
  # DEBUG __a => D#365
  # DEBUG __n => D#366
  # DEBUG D#364 => D#366
  # DEBUG D#363 => D#365
  # DEBUG D#361 => D#363
  # DEBUG D#362 => D#364
  # DEBUG __p => _26
  # DEBUG this => D#361
  # DEBUG D.77844 => D#362
  operator delete (_26);

  <bb 165>:
  # DEBUG D#368 => &D#376->_M_impl
  # DEBUG this => D#368
  # DEBUG this => D#368
  # DEBUG this => D#368
  MEM[(struct  &)this_9(D) + 312] ={v} {CLOBBER};
  resx 4

<L33>:
  # DEBUG D#683 => &this_9(D)->_input_route
  # DEBUG this => D#683
  # DEBUG D#375 => &D#683->D.48066
  # DEBUG this => D#375
  # DEBUG D#378 => D#683->D.48066._M_impl._M_finish
  # DEBUG D#377 => D#683->D.48066._M_impl._M_start
  # DEBUG __first => D#377
  # DEBUG __last => D#378
  # DEBUG D.74999 => NULL
  # DEBUG D#182 => D#377
  # DEBUG D#183 => D#378
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  # DEBUG D#376 => &D#683->D.48066
  # DEBUG this => D#376
  # DEBUG D#374 => D#376->_M_impl._M_end_of_storage
  # DEBUG D#373 => (long int) D#374
  _33 = MEM[(struct _Vector_base *)this_9(D) + 288B]._M_impl._M_start;
  # DEBUG D#372 => (long int) _33
  # DEBUG D#371 => D#373 - D#372
  # DEBUG D#370 => D#371 /[ex] 8
  # DEBUG D#369 => (long unsigned int) D#370
  # DEBUG this => D#376
  # DEBUG __p => _33
  # DEBUG __n => D#369
  if (_33 != 0B)
    goto <bb 167>;
  else
    goto <bb 168>;

  <bb 167>:
  # DEBUG D#367 => &D#376->_M_impl
  # DEBUG D#365 => D#367
  # DEBUG D#366 => D#369
  # DEBUG __p => _33
  # DEBUG __a => D#365
  # DEBUG __n => D#366
  # DEBUG D#364 => D#366
  # DEBUG D#363 => D#365
  # DEBUG D#361 => D#363
  # DEBUG D#362 => D#364
  # DEBUG __p => _33
  # DEBUG this => D#361
  # DEBUG D.77859 => D#362
  operator delete (_33);

  <bb 168>:
  # DEBUG D#368 => &D#376->_M_impl
  # DEBUG this => D#368
  # DEBUG this => D#368
  # DEBUG this => D#368
  MEM[(struct  &)this_9(D) + 288] ={v} {CLOBBER};
  resx 3

<L34>:
  _35 = &this_9(D)->D.50427;
  Router::~Router (_35);
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = OutputSet*; _Alloc = std::allocator<OutputSet*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<OutputSet**, std::vector<OutputSet*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = OutputSet**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = OutputSet*] (_ZNSt6vectorIP9OutputSetSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=2577, decl_uid=47989, cgraph_uid=1037, symbol_order=1038)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = OutputSet*; _Alloc = std::allocator<OutputSet*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<OutputSet**, std::vector<OutputSet*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = OutputSet**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = OutputSet*] (struct vector * const this, struct iterator __position, size_type __n, struct OutputSet * const & __x)
{
  const long unsigned int D.92394;
  const size_type __len;
  size_type D.92393;
  size_type __n;
  struct Flit * * D.92384;
  const ptrdiff_t _Num;
  struct Credit * * D.92375;
  struct OutputSet * * const __position;
  struct OutputSet * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct OutputSet * * __first;
  long unsigned int __n;
  struct OutputSet * * __first;
  const ptrdiff_t _Num;
  struct OutputSet * * __first;
  struct OutputSet * * __new_finish;
  const size_type __elems_after;
  struct OutputSet * __x_copy;
  struct OutputSet * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct Flit * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct OutputSet * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct OutputSet * * _41;
  struct OutputSet * * _43;
  long int _47;
  struct OutputSet * * _48;
  long int __first.25_49;
  struct OutputSet * * _53;
  struct OutputSet * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct OutputSet * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Credit * * _108;
  struct Flit * * _112;
  struct Flit * * iftmp.44_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct OutputSet * * prephitmp_146;
  struct OutputSet * * pretmp_147;
  struct Flit * * prephitmp_148;
  struct Flit * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct OutputSet * * pretmp_166;
  struct OutputSet * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct OutputSet * * pretmp_173;
  struct OutputSet * * prephitmp_174;

  <bb 2>:
  # DEBUG D#1576 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1576
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.48066._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.48066._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#108 => &this_4(D)->D.48066._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#108
  # DEBUG __lhs => &D.59114
  # DEBUG __rhs => &__position
  # DEBUG this => &D.59114
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#1198 => &this_4(D)->D.48066
  # DEBUG this => D#1198
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#1190
  # DEBUG D#1189 => D#1190
  # DEBUG D#1188 => D#1189
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.85680 => D#1188
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.25_49 = (long int) _41;
  _47 = _8 - __first.25_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.48066._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.48066._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#1576
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG __first => D#1576
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.25_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#545 => &__x_copy
  # DEBUG __first => D#1576
  # DEBUG __last => _48
  # DEBUG D#544 => D#545
  # DEBUG __value => D#544
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG D#441 => D#544
  # DEBUG __first => D#1576
  # DEBUG __last => _48
  # DEBUG __value => D#441
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#1576
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#1199 => &this_4(D)->D.48066
  # DEBUG this => D#1199
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#904 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#903 => D#904
  # DEBUG __x => D#903
  # DEBUG D.85765 => D#905
  # DEBUG D#902 => D#903
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#901 => D#902
  # DEBUG __x => D#901
  # DEBUG __assignable => 1
  # DEBUG D#900 => D#901
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#899 => D#900
  # DEBUG __x => D#899
  # DEBUG D#898 => D#899
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#897 => D#898
  # DEBUG __value => D#897
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#896 => D#897
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#896
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.48066._M_impl._M_finish = __first_125;
  # DEBUG D#1200 => &this_4(D)->D.48066
  # DEBUG this => D#1200
  # DEBUG this => &__position
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#1190
  # DEBUG D#1189 => D#1190
  # DEBUG D#1188 => D#1189
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.85727 => D#1188
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.48066._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.48066._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#545 => &__x_copy
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG D#544 => D#545
  # DEBUG __value => D#544
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG D#441 => D#544
  # DEBUG __first => D#1576
  # DEBUG __last => __first_7
  # DEBUG __value => D#441
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#1576
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#866 => this_4(D)
  # DEBUG this => D#866
  # DEBUG D#865 => D#866
  # DEBUG D#864 => &D#865->D.56618
  # DEBUG this => D#864
  # DEBUG __a => D#863
  # DEBUG D#862 => D#863
  # DEBUG D#837 => D#862
  # DEBUG this => D#837
  _17 = MEM[(struct Flit * * *)this_4(D)];
  # DEBUG D#109 => this_4(D)
  # DEBUG D#109 => this_4(D)
  # DEBUG this => D#109
  # DEBUG this => D#109
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#109 => this_4(D)
  # DEBUG D#109 => this_4(D)
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG D#109 => this_4(D)
  # DEBUG D#109 => this_4(D)
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG __a => &D.92394
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#109 => this_4(D)
  # DEBUG D#109 => this_4(D)
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG D#866 => this_4(D)
  # DEBUG this => D#866
  # DEBUG D#865 => D#866
  # DEBUG D#864 => &D#865->D.56618
  # DEBUG this => D#864
  # DEBUG __a => D#863
  # DEBUG D#862 => D#863
  # DEBUG D#837 => D#862
  # DEBUG this => D#837
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &this_4(D)->D.48066._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#208
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59147
  # DEBUG this => &__position
  # DEBUG this => &D.59147
  # DEBUG D#1211 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#1211
  # DEBUG D#1210 => &this_4(D)->D.48066
  # DEBUG D#732 => D#1210
  # DEBUG __n => NULL
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#842 => D#843
  # DEBUG __n => NULL
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#839
  # DEBUG D.92382 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.48066._M_impl._M_start;
  pretmp_147 = this_4(D)->D.48066._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.44_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1194 => &this_4(D)->D.48066
  # DEBUG this => D#1194
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.44_113 + _19;
  _56 = MEM[(struct OutputSet * const &)__x_21(D)];
  # DEBUG D#904 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#903 => D#904
  # DEBUG __x => D#903
  # DEBUG D.85882 => D#905
  # DEBUG D#902 => D#903
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#901 => D#902
  # DEBUG __x => D#901
  # DEBUG __assignable => 1
  # DEBUG D#900 => D#901
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#899 => D#900
  # DEBUG __x => D#899
  # DEBUG D#898 => D#899
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#897 => D#898
  # DEBUG __value => D#897
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#896 => D#897
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#896
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1195 => &this_4(D)->D.48066
  # DEBUG this => D#1195
  # DEBUG this => &__position
  # DEBUG D#1575 => this_4(D)->D.48066._M_impl._M_start
  # DEBUG __first => D#1575
  # DEBUG __last => D#1576
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1192
  # DEBUG D#1191 => D#1192
  # DEBUG D#1188 => D#1191
  # DEBUG __first => D#1575
  # DEBUG __last => D#1576
  # DEBUG __result => NULL
  # DEBUG D.85844 => D#1188
  # DEBUG __first => D#1575
  # DEBUG __last => D#1576
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1575
  # DEBUG __last => D#1576
  # DEBUG __result => NULL
  # DEBUG __first => D#1575
  # DEBUG __last => D#1576
  # DEBUG __result => NULL
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG __it => D#1575
  # DEBUG __it => D#1575
  # DEBUG __first => D#1575
  # DEBUG __last => D#1576
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG __it => D#1575
  # DEBUG __it => D#1575
  # DEBUG __first => D#1575
  # DEBUG __last => D#1576
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1575
  # DEBUG __last => D#1576
  # DEBUG __result => NULL
  # DEBUG D#1574 => (long int) D#1575
  # DEBUG D#1573 => _158 - D#1574
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.44_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#1572 => (long unsigned int) D#1573
  # DEBUG __new_finish => iftmp.44_113 + D#1572
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.44_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#1196 => &this_4(D)->D.48066
  # DEBUG this => D#1196
  # DEBUG D#1571 => this_4(D)->D.48066._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#1576
  # DEBUG __last => D#1571
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#1192
  # DEBUG D#1191 => D#1192
  # DEBUG D#1188 => D#1191
  # DEBUG __first => D#1576
  # DEBUG __last => D#1571
  # DEBUG __result => __new_finish_26
  # DEBUG D.85805 => D#1188
  # DEBUG __first => D#1576
  # DEBUG __last => D#1571
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#1576
  # DEBUG __last => D#1571
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#1576
  # DEBUG __last => D#1571
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#1571
  # DEBUG __it => D#1571
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG __first => D#1576
  # DEBUG __last => D#1571
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#1571
  # DEBUG __it => D#1571
  # DEBUG __it => D#1576
  # DEBUG __it => D#1576
  # DEBUG __first => D#1576
  # DEBUG __last => D#1571
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#1576
  # DEBUG __last => D#1571
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#1197 => &this_4(D)->D.48066
  # DEBUG this => D#1197
  # DEBUG D#1209 => this_4(D)->D.48066._M_impl._M_finish
  # DEBUG D#1208 => this_4(D)->D.48066._M_impl._M_start
  # DEBUG __first => D#1208
  # DEBUG __last => D#1209
  # DEBUG D.85798 => NULL
  # DEBUG D#182 => D#1208
  # DEBUG D#183 => D#1209
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  # DEBUG D#1207 => this_4(D)->D.48066._M_impl._M_end_of_storage
  # DEBUG D#1206 => (long int) D#1207
  # DEBUG D#1205 => (long int) D#1575
  # DEBUG D#1204 => D#1206 - D#1205
  # DEBUG D#1203 => D#1204 /[ex] 8
  # DEBUG D#1202 => (long unsigned int) D#1203
  # DEBUG D#1201 => &this_4(D)->D.48066
  # DEBUG this => D#1201
  # DEBUG __p => D#1575
  # DEBUG __n => D#1202
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#367 => &D#1201->_M_impl
  # DEBUG D#365 => D#367
  # DEBUG D#366 => D#1202
  # DEBUG __p => D#1575
  # DEBUG __a => D#365
  # DEBUG __n => D#366
  # DEBUG D#364 => D#366
  # DEBUG D#363 => D#365
  # DEBUG D#361 => D#363
  # DEBUG D#362 => D#364
  # DEBUG __p => D#1575
  # DEBUG this => D#361
  # DEBUG D.85794 => D#362
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.48066._M_impl._M_start = iftmp.44_113;
  this_4(D)->D.48066._M_impl._M_finish = _70;
  this_4(D)->D.48066._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &this_4(D)->D.48066._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#208
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59147
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.59147
  _143 = _144 - _116;
  # DEBUG D#1211 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#1211
  # DEBUG D#1210 => &this_4(D)->D.48066
  # DEBUG D#732 => D#1210
  # DEBUG __n => NULL
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#208 => &this_4(D)->D.48066._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#208
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59147
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.59147
  _150 = _151 - _116;
  # DEBUG D#1211 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#1211
  # DEBUG D#1210 => &this_4(D)->D.48066
  # DEBUG D#732 => D#1210
  # DEBUG __n => NULL
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::size_t = long unsigned int] (_ZNSt11_Deque_baseIP4FlitSaIS1_EE17_M_initialize_mapEm, funcdef_no=2624, decl_uid=46635, cgraph_uid=1084, symbol_order=1085)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::size_t = long unsigned int] (struct _Deque_base * const this, size_t __num_elements)
{
  struct Credit * * * __nstart;
  struct Flit * * * __nfinish;
  struct Flit * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.59252;
  const long unsigned int D.59253;
  long unsigned int _3;
  struct Flit * * * _8;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _20;
  struct Flit * * * _23;
  struct Flit * * _24;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  struct Flit * * _29;
  void * _31;
  struct Flit * * * _33;
  struct Flit * * _40;
  struct Flit * * _41;
  struct Flit * * _42;
  struct Credit * * _52;
  void * _54;
  struct Credit * * _56;
  long unsigned int _65;

  <bb 2>:
  # DEBUG __size => 8
  _3 = __num_elements_2(D) >> 6;
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodes => __num_nodes_4
  _5 = _3 + 3;
  # DEBUG __a => &D.59252
  # DEBUG __b => &D.59253
  _65 = MAX_EXPR <_5, 8>;
  this_10(D)->_M_impl._M_map_size = _65;
  # DEBUG D#742 => this_10(D)
  # DEBUG __n => D#1611
  # DEBUG this => D#742
  # DEBUG D#741 => D#742
  # DEBUG D#600 => D#741
  # DEBUG this => D#600
  # DEBUG D#599 => D#600
  # DEBUG this => D#599
  # DEBUG this => NULL
  # DEBUG D.76847 => NULL
  # DEBUG this => NULL
  # DEBUG D#740 => &__map_alloc
  # DEBUG __n => D#1611
  # DEBUG __a => D#740
  # DEBUG D#739 => D#740
  # DEBUG D#737 => D#739
  # DEBUG D#738 => 0B
  # DEBUG __n => D#1611
  # DEBUG this => D#737
  # DEBUG D.79525 => D#738
  # DEBUG D#736 => D#737
  # DEBUG D#735 => D#736
  # DEBUG this => D#735
  _26 = _65 * 8;
  _8 = operator new (_26);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = _8;
  _15 = this_10(D)->_M_impl._M_map_size;
  _16 = _15 - __num_nodes_4;
  _17 = _16 >> 1;
  _18 = _17 * 8;
  __nstart_19 = _8 + _18;
  # DEBUG __nstart => __nstart_19
  _20 = __num_nodes_4 * 8;
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinish => __nfinish_21
  # DEBUG D#854 => this_10(D)
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nfinish_21
  # DEBUG this => D#888
  # DEBUG __cur => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 13>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __cur => __nstart_75
  # DEBUG D#883 => D#884
  # DEBUG this => D#883
  # DEBUG D#882 => D#883
  # DEBUG __size => 8
  # DEBUG D#881 => &D#882->_M_impl
  # DEBUG D#880 => D#881
  # DEBUG __n => NULL
  # DEBUG __a => D#880
  # DEBUG D#879 => D#880
  # DEBUG D#877 => D#879
  # DEBUG D#878 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#877
  # DEBUG D.92511 => D#878
  # DEBUG D#876 => D#877
  # DEBUG D#875 => D#876
  # DEBUG this => D#875
  _52 = operator new (512);

  <bb 5>:
  MEM[(struct Credit * * *)__nstart_75] = _52;
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __cur => __nstart_53
  # DEBUG __cur => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 13>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  # __nstart_13 = PHI <__nstart_75(4)>
<L3>:
  _54 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_54);
  # DEBUG this => D#885
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nstart_13
  # DEBUG __n => __nstart_19
  # DEBUG __n => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __cxa_rethrow ();

  <bb 9>:

  <bb 10>:
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(11)>
  # DEBUG __n => __nstart_72
  _56 = MEM[(struct Credit * * *)__nstart_72];
  # DEBUG this => D#886
  # DEBUG __p => _56
  # DEBUG __size => 8
  # DEBUG D#629 => &D#887->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _56
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _56
  # DEBUG this => D#623
  # DEBUG D.92504 => D#624
  operator delete (_56);
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __n => __nstart_57
  # DEBUG __n => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

<L5>:
  __cxa_end_catch ();
  resx 7

  <bb 13>:
  # DEBUG D#857 => &this_10(D)->_M_impl._M_start
  # DEBUG this => D#857
  # DEBUG __new_node => __nstart_19
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
  _24 = *__nstart_19;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
  # DEBUG __size => 8
  _42 = _24 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#856 => &this_10(D)->_M_impl._M_finish
  # DEBUG this => D#856
  # DEBUG __new_node => _23
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
  _40 = MEM[(struct Flit * * *)__nfinish_21 + -8B];
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
  # DEBUG __size => 8
  _41 = _40 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
  this_10(D)->_M_impl._M_start._M_cur = _24;
  # DEBUG __size => 8
  _27 = __num_elements_2(D) & 63;
  _28 = _27 * 8;
  _29 = _40 + _28;
  this_10(D)->_M_impl._M_finish._M_cur = _29;
  return;

<L0>:
  _31 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_31);
  # DEBUG D#855 => this_10(D)->_M_impl._M_map_size
  _33 = this_10(D)->_M_impl._M_map;
  # DEBUG D#603 => this_10(D)
  # DEBUG D#604 => D#855
  # DEBUG __p => _33
  # DEBUG this => D#603
  # DEBUG __n => D#604
  # DEBUG D#602 => D#604
  # DEBUG D#601 => D#603
  # DEBUG D#600 => D#601
  # DEBUG this => D#600
  # DEBUG D#599 => D#600
  # DEBUG this => D#599
  # DEBUG this => NULL
  # DEBUG D.76847 => NULL
  # DEBUG this => NULL
  # DEBUG D#465 => &__map_alloc
  # DEBUG D#466 => D#602
  # DEBUG __p => _33
  # DEBUG __a => D#465
  # DEBUG __n => D#466
  # DEBUG D#464 => D#466
  # DEBUG D#463 => D#465
  # DEBUG D#461 => D#463
  # DEBUG D#462 => D#464
  # DEBUG __p => _33
  # DEBUG this => D#461
  # DEBUG D.79547 => D#462
  operator delete (_33);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = 0B;
  this_10(D)->_M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt5dequeIP4FlitSaIS1_EEC2ERKS3_, funcdef_no=2163, decl_uid=47168, cgraph_uid=623, symbol_order=624)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct deque * const this, const struct deque & __x)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.2536;
  struct Flit * * SR.2535;
  struct Flit * * SR.2534;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.92632;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.92607;
  struct _Deque_iterator D.92606;
  struct _Deque_iterator D.92605;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.92587;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.92573;
  struct _Deque_iterator D.92572;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.66343;
  struct _Deque_iterator D.66342;
  struct _Deque_iterator D.56724;
  struct _Deque_base * _7;
  struct Flit * * _9;
  struct Flit * * _10;
  struct Flit * * _13;
  struct Flit * * * _15;
  struct Flit * * _17;
  struct Flit * * * _18;
  struct Flit * * * _19;
  long int _20;
  struct Flit * * * _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  struct Flit * * _27;
  long int _28;
  struct Flit * * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  struct Flit * * _34;
  long int _35;
  struct Flit * * _36;
  long int _37;
  long int _38;
  long int _39;
  difference_type _40;
  size_type _41;
  long int _97;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _105;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _112;
  long int _114;
  long int _115;
  long int _116;
  struct Flit * _121;
  struct Flit * * _126;
  struct Flit * * * _138;
  struct Flit * * _139;
  struct Flit * * _140;

  <bb 2>:
  # DEBUG this => __x_2(D)
  # DEBUG D#100 => &__x_2(D)->D.47197._M_impl._M_start
  # DEBUG D#101 => &__x_2(D)->D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _19 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _20 = (long int) _19;
  _21 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _22 = (long int) _21;
  _23 = _20 - _22;
  _24 = _23 /[ex] 8;
  _25 = _24 + -1;
  _26 = _25 * 64;
  _27 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _28 = (long int) _27;
  _29 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _30 = (long int) _29;
  _31 = _28 - _30;
  _32 = _31 /[ex] 8;
  _33 = _26 + _32;
  _34 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _35 = (long int) _34;
  _36 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _37 = (long int) _36;
  _38 = _35 - _37;
  _39 = _38 /[ex] 8;
  _40 = _33 + _39;
  _41 = (size_type) _40;
  # DEBUG D#966 => &__x_2(D)->D.47197
  # DEBUG this => D#966
  # DEBUG __a => NULL
  _7 = &this_6(D)->D.47197;
  # DEBUG this => _7
  # DEBUG __a => NULL
  # DEBUG __num_elements => _41
  # DEBUG D#861 => &_7->_M_impl
  # DEBUG this => D#861
  # DEBUG __a => NULL
  # DEBUG this => D#861
  # DEBUG __a => NULL
  # DEBUG this => D#861
  # DEBUG D.75391 => NULL
  MEM[(struct _Deque_impl *)this_6(D)]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_6(D)]._M_map_size = 0;
  # DEBUG D#468 => &D#861->_M_start
  # DEBUG this => D#468
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_node = 0B;
  # DEBUG D#467 => &D#861->_M_finish
  # DEBUG this => D#467
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_7, _41);
  # DEBUG D#967 => &this_6(D)->D.47197
  # DEBUG this => D#967
  # DEBUG D#968 => &this_6(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.56724
  # DEBUG __x => D#968
  _9 = MEM[(const struct iterator &)this_6(D) + 16]._M_cur;
  _17 = MEM[(const struct iterator &)this_6(D) + 16]._M_last;
  _18 = MEM[(const struct iterator &)this_6(D) + 16]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#98 => &__x_2(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.66342
  # DEBUG __x => D#98
  _10 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#1612 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _15 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#99 => &__x_2(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.66343
  # DEBUG __x => D#99
  __first$_M_cur_8 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  # DEBUG D#1613 => MEM[(const struct iterator &)__x_2(D) + 16]._M_first
  __first$_M_last_4 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  __first$_M_node_3 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  # DEBUG __result => &D.56724
  # DEBUG D.92569 => D#965
  # DEBUG this => &D.92573
  # DEBUG __x => &D.56724
  # DEBUG __result => &D.92573
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.92573
  # DEBUG __result => NULL
  # DEBUG this => &D.92587
  # DEBUG __x => NULL
  # DEBUG __result => &D.92587
  # DEBUG this => &D.92607
  # DEBUG __x => &D.92587
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#1612
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#1612
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#1613
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#1613
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __result => &D.92607
  # DEBUG this => NULL
  # DEBUG __x => &D.92607
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#1612
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#1612
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#1613
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#1613
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __first => __first$_M_cur_8
  # DEBUG __first$8 => D#1613
  # DEBUG __first$16 => __first$_M_last_4
  # DEBUG __first$24 => __first$_M_node_3
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.92632
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_8
  # DEBUG __first$_M_first => D#1613
  # DEBUG __first$_M_last => __first$_M_last_4
  # DEBUG __first$_M_node => __first$_M_node_3
  # DEBUG __result => &D.92632
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _97 = (long int) _15;
  _99 = (long int) __first$_M_node_3;
  _100 = _97 - _99;
  _101 = _100 /[ex] 8;
  _102 = _101 + -1;
  _103 = _102 * 64;
  _105 = (long int) _10;
  _107 = (long int) _13;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _103 + _109;
  _112 = (long int) __first$_M_last_4;
  _114 = (long int) __first$_M_cur_8;
  _115 = _112 - _114;
  _116 = _115 /[ex] 8;
  __n_117 = _110 + _116;
  # DEBUG __n => __n_117
  # DEBUG __n => __n_117
  if (__n_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => &D.92572
  # DEBUG __x => &D.92632
  D.92632 ={v} {CLOBBER};
  D.92607 ={v} {CLOBBER};
  D.92587 ={v} {CLOBBER};
  D.92573 ={v} {CLOBBER};
  D.56724 ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __n_54 = PHI <__n_117(4), __n_128(10)>
  # SR.2534_198 = PHI <_9(4), SR.2534_197(10)>
  # SR.2535_195 = PHI <_17(4), SR.2535_194(10)>
  # SR.2536_193 = PHI <_18(4), SR.2536_192(10)>
  # __first$_M_cur_190 = PHI <__first$_M_cur_8(4), __first$_M_cur_189(10)>
  # __first$_M_last_186 = PHI <__first$_M_last_4(4), __first$_M_last_185(10)>
  # __first$_M_node_184 = PHI <__first$_M_node_3(4), __first$_M_node_182(10)>
  # DEBUG __first$_M_node => __first$_M_node_184
  # DEBUG __first$_M_last => __first$_M_last_186
  # DEBUG __first$_M_cur => __first$_M_cur_190
  # DEBUG __n => __n_54
  # DEBUG D#119 => &D.92632
  # DEBUG this => D#119
  # DEBUG D#66 => &__first
  # DEBUG this => D#66
  _121 = MEM[(struct Flit * const &)__first$_M_cur_190];
  *SR.2534_198 = _121;
  # DEBUG this => &__first
  __first$_M_cur_123 = __first$_M_cur_190 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_123
  if (__first$_M_cur_123 == __first$_M_last_186)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => &__first
  __first$_M_node_134 = __first$_M_node_184 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_134
  # DEBUG __first$_M_node => __first$_M_node_134
  __first$_M_cur_135 = MEM[(struct Flit * * *)__first$_M_node_184 + 8B];
  # DEBUG __size => 8
  __first$_M_last_136 = __first$_M_cur_135 + 512;
  # DEBUG __first$_M_last => __first$_M_last_136
  # DEBUG __first$_M_cur => __first$_M_cur_135

  <bb 7>:
  # __first$_M_cur_189 = PHI <__first$_M_cur_123(5), __first$_M_cur_135(6)>
  # __first$_M_last_185 = PHI <__first$_M_last_186(5), __first$_M_last_136(6)>
  # __first$_M_node_182 = PHI <__first$_M_node_184(5), __first$_M_node_134(6)>
  # DEBUG __first$_M_node => __first$_M_node_182
  # DEBUG __first$_M_last => __first$_M_last_185
  # DEBUG __first$_M_cur => __first$_M_cur_189
  # DEBUG this => &D.92632
  _126 = SR.2534_198 + 8;
  if (_126 == SR.2535_195)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &D.92632
  _138 = SR.2536_193 + 8;
  # DEBUG this => &D.92632
  # DEBUG __new_node => _138
  _139 = MEM[(struct Flit * * *)SR.2536_193 + 8B];
  # DEBUG __size => 8
  _140 = _139 + 512;

  <bb 9>:
  # SR.2534_197 = PHI <_126(7), _139(8)>
  # SR.2535_194 = PHI <SR.2535_195(7), _140(8)>
  # SR.2536_192 = PHI <SR.2536_193(7), _138(8)>
  __n_128 = __n_54 + -1;
  # DEBUG __n => __n_128
  # DEBUG __n => __n_128
  if (__n_128 <= 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 5>;

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::size_t = long unsigned int] (_ZNSt11_Deque_baseIP6CreditSaIS1_EE17_M_initialize_mapEm, funcdef_no=2642, decl_uid=53050, cgraph_uid=1102, symbol_order=1103)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::size_t = long unsigned int] (struct _Deque_base * const this, size_t __num_elements)
{
  struct Credit * * * __nstart;
  struct Credit * * * __nfinish;
  struct Credit * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.59568;
  const long unsigned int D.59569;
  long unsigned int _3;
  struct Credit * * * _8;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _20;
  struct Credit * * * _23;
  struct Credit * * _24;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  struct Credit * * _29;
  void * _31;
  struct Credit * * * _33;
  struct Credit * * _40;
  struct Credit * * _41;
  struct Credit * * _42;
  struct Credit * * _52;
  void * _54;
  struct Credit * * _56;
  long unsigned int _65;

  <bb 2>:
  # DEBUG __size => 8
  _3 = __num_elements_2(D) >> 6;
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodes => __num_nodes_4
  _5 = _3 + 3;
  # DEBUG __a => &D.59568
  # DEBUG __b => &D.59569
  _65 = MAX_EXPR <_5, 8>;
  this_10(D)->_M_impl._M_map_size = _65;
  # DEBUG D#772 => this_10(D)
  # DEBUG __n => D#1614
  # DEBUG this => D#772
  # DEBUG D#771 => D#772
  # DEBUG D#641 => D#771
  # DEBUG this => D#641
  # DEBUG D#640 => D#641
  # DEBUG this => D#640
  # DEBUG this => NULL
  # DEBUG D.77171 => NULL
  # DEBUG this => NULL
  # DEBUG D#770 => &__map_alloc
  # DEBUG __n => D#1614
  # DEBUG __a => D#770
  # DEBUG D#769 => D#770
  # DEBUG D#767 => D#769
  # DEBUG D#768 => 0B
  # DEBUG __n => D#1614
  # DEBUG this => D#767
  # DEBUG D.79867 => D#768
  # DEBUG D#766 => D#767
  # DEBUG D#765 => D#766
  # DEBUG this => D#765
  _26 = _65 * 8;
  _8 = operator new (_26);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = _8;
  _15 = this_10(D)->_M_impl._M_map_size;
  _16 = _15 - __num_nodes_4;
  _17 = _16 >> 1;
  _18 = _17 * 8;
  __nstart_19 = _8 + _18;
  # DEBUG __nstart => __nstart_19
  _20 = __num_nodes_4 * 8;
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinish => __nfinish_21
  # DEBUG D#888 => this_10(D)
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nfinish_21
  # DEBUG this => D#888
  # DEBUG __cur => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 13>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __cur => __nstart_75
  # DEBUG D#883 => D#884
  # DEBUG this => D#883
  # DEBUG D#882 => D#883
  # DEBUG __size => 8
  # DEBUG D#881 => &D#882->_M_impl
  # DEBUG D#880 => D#881
  # DEBUG __n => NULL
  # DEBUG __a => D#880
  # DEBUG D#879 => D#880
  # DEBUG D#877 => D#879
  # DEBUG D#878 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#877
  # DEBUG D.92699 => D#878
  # DEBUG D#876 => D#877
  # DEBUG D#875 => D#876
  # DEBUG this => D#875
  _52 = operator new (512);

  <bb 5>:
  *__nstart_75 = _52;
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __cur => __nstart_53
  # DEBUG __cur => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 13>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  # __nstart_13 = PHI <__nstart_75(4)>
<L3>:
  _54 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_54);
  # DEBUG this => D#885
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nstart_13
  # DEBUG __n => __nstart_19
  # DEBUG __n => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __cxa_rethrow ();

  <bb 9>:

  <bb 10>:
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(11)>
  # DEBUG __n => __nstart_72
  _56 = *__nstart_72;
  # DEBUG this => D#886
  # DEBUG __p => _56
  # DEBUG __size => 8
  # DEBUG D#629 => &D#887->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _56
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _56
  # DEBUG this => D#623
  # DEBUG D.92692 => D#624
  operator delete (_56);
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __n => __nstart_57
  # DEBUG __n => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

<L5>:
  __cxa_end_catch ();
  resx 7

  <bb 13>:
  # DEBUG D#891 => &this_10(D)->_M_impl._M_start
  # DEBUG this => D#891
  # DEBUG __new_node => __nstart_19
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
  _24 = *__nstart_19;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
  # DEBUG __size => 8
  _42 = _24 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#890 => &this_10(D)->_M_impl._M_finish
  # DEBUG this => D#890
  # DEBUG __new_node => _23
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
  _40 = MEM[(struct Credit * * *)__nfinish_21 + -8B];
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
  # DEBUG __size => 8
  _41 = _40 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
  this_10(D)->_M_impl._M_start._M_cur = _24;
  # DEBUG __size => 8
  _27 = __num_elements_2(D) & 63;
  _28 = _27 * 8;
  _29 = _40 + _28;
  this_10(D)->_M_impl._M_finish._M_cur = _29;
  return;

<L0>:
  _31 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_31);
  # DEBUG D#889 => this_10(D)->_M_impl._M_map_size
  _33 = this_10(D)->_M_impl._M_map;
  # DEBUG D#644 => this_10(D)
  # DEBUG D#645 => D#889
  # DEBUG __p => _33
  # DEBUG this => D#644
  # DEBUG __n => D#645
  # DEBUG D#643 => D#645
  # DEBUG D#642 => D#644
  # DEBUG D#641 => D#642
  # DEBUG this => D#641
  # DEBUG D#640 => D#641
  # DEBUG this => D#640
  # DEBUG this => NULL
  # DEBUG D.77171 => NULL
  # DEBUG this => NULL
  # DEBUG D#475 => &__map_alloc
  # DEBUG D#476 => D#643
  # DEBUG __p => _33
  # DEBUG __a => D#475
  # DEBUG __n => D#476
  # DEBUG D#474 => D#476
  # DEBUG D#473 => D#475
  # DEBUG D#471 => D#473
  # DEBUG D#472 => D#474
  # DEBUG __p => _33
  # DEBUG this => D#471
  # DEBUG D.79889 => D#472
  operator delete (_33);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = 0B;
  this_10(D)->_M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt5dequeIP6CreditSaIS1_EEC2ERKS3_, funcdef_no=2176, decl_uid=53583, cgraph_uid=636, symbol_order=637)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct deque * const this, const struct deque & __x)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.2565;
  struct Credit * * SR.2564;
  struct Credit * * SR.2563;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.92819;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.92794;
  struct _Deque_iterator D.92793;
  struct _Deque_iterator D.92792;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.92774;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.92760;
  struct _Deque_iterator D.92759;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.67609;
  struct _Deque_iterator D.67608;
  struct _Deque_iterator D.57025;
  struct _Deque_base * _7;
  struct Credit * * _9;
  struct Credit * * _10;
  struct Credit * * _13;
  struct Credit * * * _15;
  struct Credit * * _17;
  struct Credit * * * _18;
  struct Credit * * * _19;
  long int _20;
  struct Credit * * * _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  struct Credit * * _27;
  long int _28;
  struct Credit * * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  struct Credit * * _34;
  long int _35;
  struct Credit * * _36;
  long int _37;
  long int _38;
  long int _39;
  difference_type _40;
  size_type _41;
  long int _97;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _105;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _112;
  long int _114;
  long int _115;
  long int _116;
  struct Credit * _121;
  struct Credit * * _126;
  struct Credit * * * _138;
  struct Credit * * _139;
  struct Credit * * _140;

  <bb 2>:
  # DEBUG this => __x_2(D)
  # DEBUG D#214 => &__x_2(D)->D.53612._M_impl._M_start
  # DEBUG D#215 => &__x_2(D)->D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _19 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _20 = (long int) _19;
  _21 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _22 = (long int) _21;
  _23 = _20 - _22;
  _24 = _23 /[ex] 8;
  _25 = _24 + -1;
  _26 = _25 * 64;
  _27 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _28 = (long int) _27;
  _29 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _30 = (long int) _29;
  _31 = _28 - _30;
  _32 = _31 /[ex] 8;
  _33 = _26 + _32;
  _34 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _35 = (long int) _34;
  _36 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _37 = (long int) _36;
  _38 = _35 - _37;
  _39 = _38 /[ex] 8;
  _40 = _33 + _39;
  _41 = (size_type) _40;
  # DEBUG D#977 => &__x_2(D)->D.53612
  # DEBUG this => D#977
  # DEBUG __a => NULL
  _7 = &this_6(D)->D.53612;
  # DEBUG this => _7
  # DEBUG __a => NULL
  # DEBUG __num_elements => _41
  # DEBUG D#895 => &_7->_M_impl
  # DEBUG this => D#895
  # DEBUG __a => NULL
  # DEBUG this => D#895
  # DEBUG __a => NULL
  # DEBUG this => D#895
  # DEBUG D.75437 => NULL
  MEM[(struct _Deque_impl *)this_6(D)]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_6(D)]._M_map_size = 0;
  # DEBUG D#478 => &D#895->_M_start
  # DEBUG this => D#478
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_node = 0B;
  # DEBUG D#477 => &D#895->_M_finish
  # DEBUG this => D#477
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_7, _41);
  # DEBUG D#978 => &this_6(D)->D.53612
  # DEBUG this => D#978
  # DEBUG D#979 => &this_6(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.57025
  # DEBUG __x => D#979
  _9 = MEM[(const struct iterator &)this_6(D) + 16]._M_cur;
  _17 = MEM[(const struct iterator &)this_6(D) + 16]._M_last;
  _18 = MEM[(const struct iterator &)this_6(D) + 16]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#112 => &__x_2(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.67608
  # DEBUG __x => D#112
  _10 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#1615 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _15 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#113 => &__x_2(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.67609
  # DEBUG __x => D#113
  __first$_M_cur_8 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  # DEBUG D#1616 => MEM[(const struct iterator &)__x_2(D) + 16]._M_first
  __first$_M_last_4 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  __first$_M_node_3 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  # DEBUG __result => &D.57025
  # DEBUG D.92756 => D#976
  # DEBUG this => &D.92760
  # DEBUG __x => &D.57025
  # DEBUG __result => &D.92760
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.92760
  # DEBUG __result => NULL
  # DEBUG this => &D.92774
  # DEBUG __x => NULL
  # DEBUG __result => &D.92774
  # DEBUG this => &D.92794
  # DEBUG __x => &D.92774
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#1615
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#1615
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#1616
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#1616
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __result => &D.92794
  # DEBUG this => NULL
  # DEBUG __x => &D.92794
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#1615
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#1615
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#1616
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#1616
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __first => __first$_M_cur_8
  # DEBUG __first$8 => D#1616
  # DEBUG __first$16 => __first$_M_last_4
  # DEBUG __first$24 => __first$_M_node_3
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.92819
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_8
  # DEBUG __first$_M_first => D#1616
  # DEBUG __first$_M_last => __first$_M_last_4
  # DEBUG __first$_M_node => __first$_M_node_3
  # DEBUG __result => &D.92819
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _97 = (long int) _15;
  _99 = (long int) __first$_M_node_3;
  _100 = _97 - _99;
  _101 = _100 /[ex] 8;
  _102 = _101 + -1;
  _103 = _102 * 64;
  _105 = (long int) _10;
  _107 = (long int) _13;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _103 + _109;
  _112 = (long int) __first$_M_last_4;
  _114 = (long int) __first$_M_cur_8;
  _115 = _112 - _114;
  _116 = _115 /[ex] 8;
  __n_117 = _110 + _116;
  # DEBUG __n => __n_117
  # DEBUG __n => __n_117
  if (__n_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => &D.92759
  # DEBUG __x => &D.92819
  D.92819 ={v} {CLOBBER};
  D.92794 ={v} {CLOBBER};
  D.92774 ={v} {CLOBBER};
  D.92760 ={v} {CLOBBER};
  D.57025 ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __n_54 = PHI <__n_117(4), __n_128(10)>
  # SR.2563_198 = PHI <_9(4), SR.2563_197(10)>
  # SR.2564_195 = PHI <_17(4), SR.2564_194(10)>
  # SR.2565_193 = PHI <_18(4), SR.2565_192(10)>
  # __first$_M_cur_190 = PHI <__first$_M_cur_8(4), __first$_M_cur_189(10)>
  # __first$_M_last_186 = PHI <__first$_M_last_4(4), __first$_M_last_185(10)>
  # __first$_M_node_184 = PHI <__first$_M_node_3(4), __first$_M_node_182(10)>
  # DEBUG __first$_M_node => __first$_M_node_184
  # DEBUG __first$_M_last => __first$_M_last_186
  # DEBUG __first$_M_cur => __first$_M_cur_190
  # DEBUG __n => __n_54
  # DEBUG D#130 => &D.92819
  # DEBUG this => D#130
  # DEBUG D#975 => &__first
  # DEBUG this => D#975
  _121 = MEM[(struct Credit * const &)__first$_M_cur_190];
  *SR.2563_198 = _121;
  # DEBUG this => &__first
  __first$_M_cur_123 = __first$_M_cur_190 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_123
  if (__first$_M_cur_123 == __first$_M_last_186)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => &__first
  __first$_M_node_134 = __first$_M_node_184 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_134
  # DEBUG __first$_M_node => __first$_M_node_134
  __first$_M_cur_135 = MEM[(struct Credit * * *)__first$_M_node_184 + 8B];
  # DEBUG __size => 8
  __first$_M_last_136 = __first$_M_cur_135 + 512;
  # DEBUG __first$_M_last => __first$_M_last_136
  # DEBUG __first$_M_cur => __first$_M_cur_135

  <bb 7>:
  # __first$_M_cur_189 = PHI <__first$_M_cur_123(5), __first$_M_cur_135(6)>
  # __first$_M_last_185 = PHI <__first$_M_last_186(5), __first$_M_last_136(6)>
  # __first$_M_node_182 = PHI <__first$_M_node_184(5), __first$_M_node_134(6)>
  # DEBUG __first$_M_node => __first$_M_node_182
  # DEBUG __first$_M_last => __first$_M_last_185
  # DEBUG __first$_M_cur => __first$_M_cur_189
  # DEBUG this => &D.92819
  _126 = SR.2563_198 + 8;
  if (_126 == SR.2564_195)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &D.92819
  _138 = SR.2565_193 + 8;
  # DEBUG this => &D.92819
  # DEBUG __new_node => _138
  _139 = MEM[(struct Credit * * *)SR.2565_193 + 8B];
  # DEBUG __size => 8
  _140 = _139 + 512;

  <bb 9>:
  # SR.2563_197 = PHI <_126(7), _139(8)>
  # SR.2564_194 = PHI <SR.2564_195(7), _140(8)>
  # SR.2565_192 = PHI <SR.2565_193(7), _138(8)>
  __n_128 = __n_54 + -1;
  # DEBUG __n => __n_128
  # DEBUG __n => __n_128
  if (__n_128 <= 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 5>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = ChaosRouter::eQState; _Alloc = std::allocator<ChaosRouter::eQState>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<ChaosRouter::eQState*, std::vector<ChaosRouter::eQState> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = ChaosRouter::eQState*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = ChaosRouter::eQState] (_ZNSt6vectorIN11ChaosRouter7eQStateESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=2661, decl_uid=50247, cgraph_uid=1121, symbol_order=1122)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = ChaosRouter::eQState; _Alloc = std::allocator<ChaosRouter::eQState>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<ChaosRouter::eQState*, std::vector<ChaosRouter::eQState> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = ChaosRouter::eQState*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = ChaosRouter::eQState] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.92900;
  const size_type __len;
  size_type D.92899;
  size_type __n;
  eQState * D.92890;
  const ptrdiff_t _Num;
  int * D.92881;
  eQState * const __position;
  eQState * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  eQState * __first;
  long unsigned int __n;
  eQState * __first;
  const ptrdiff_t _Num;
  eQState * __first;
  eQState * __new_finish;
  const size_type __elems_after;
  eQState * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  int * const _16;
  long unsigned int _18;
  difference_type _21;
  long int _22;
  long unsigned int _24;
  long int _26;
  eQState * pretmp_28;
  eQState __x_copy.223_34;
  long unsigned int _37;
  long unsigned int _38;
  sizetype _39;
  eQState * _40;
  eQState * _42;
  long int _46;
  eQState * _47;
  long int __first.228_48;
  eQState * _52;
  long unsigned int _57;
  long int _64;
  long unsigned int _66;
  eQState * _68;
  long unsigned int _72;
  long unsigned int _75;
  long int _103;
  long unsigned int _105;
  sizetype _106;
  int * _107;
  eQState * _111;
  eQState * iftmp.233_112;
  bool _113;
  const eQState pretmp_114;
  long int _115;
  long int _116;
  long int _117;
  long unsigned int _119;
  long int prephitmp_120;
  long unsigned int _132;
  long int prephitmp_136;
  long int pretmp_137;
  bool _139;
  long int _140;
  long int _141;
  long int pretmp_142;
  long int pretmp_144;
  eQState * prephitmp_145;
  eQState * pretmp_146;
  eQState * prephitmp_147;
  eQState * pretmp_148;
  long int _149;
  long int _150;
  bool _151;
  long int _152;
  long int _155;
  long int _156;
  long int _157;
  long unsigned int _159;
  long unsigned int pretmp_161;
  long unsigned int prephitmp_162;
  long unsigned int pretmp_163;
  long unsigned int prephitmp_164;
  long unsigned int pretmp_165;
  long unsigned int prephitmp_166;
  eQState * pretmp_167;
  eQState * prephitmp_168;
  long unsigned int pretmp_169;
  long unsigned int prephitmp_170;
  eQState * pretmp_174;
  eQState * prephitmp_175;

  <bb 2>:
  # DEBUG D#1622 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1622
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_15 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.50324._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.50324._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy.223_34 = *__x_20(D);
  # DEBUG __x_copy => __x_copy.223_34
  # DEBUG this => this_4(D)
  # DEBUG D#115 => &this_4(D)->D.50324._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#115
  # DEBUG __lhs => &D.59886
  # DEBUG __rhs => &__position
  # DEBUG this => &D.59886
  # DEBUG this => &__position
  _26 = (long int) __position_15;
  _22 = _8 - _26;
  _21 = _22 /[ex] 4;
  __elems_after_36 = (const size_type) _21;
  # DEBUG __elems_after => __elems_after_36
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_36)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#1267 => &this_4(D)->D.50324
  # DEBUG this => D#1267
  _38 = __n_2(D) * 4;
  _39 = -_38;
  _40 = __first_7 + _39;
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#1259
  # DEBUG D#1258 => D#1259
  # DEBUG D#1257 => D#1258
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.87156 => D#1257
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _40
  # DEBUG __it => _40
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _40
  # DEBUG __it => _40
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.228_48 = (long int) _40;
  _46 = _8 - __first.228_48;
  _Num_44 = _46 /[ex] 4;
  # DEBUG _Num => _Num_44
  if (_Num_44 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _37 = (long unsigned int) _46;
  __builtin_memmove (__first_7, _40, _37);
  pretmp_174 = this_4(D)->D.50324._M_impl._M_finish;

  <bb 8>:
  # prephitmp_175 = PHI <__first_7(6), pretmp_174(7)>
  _42 = prephitmp_175 + _38;
  this_4(D)->D.50324._M_impl._M_finish = _42;
  # DEBUG this => &__position
  # DEBUG __first => D#1622
  # DEBUG __last => _40
  # DEBUG __result => __first_7
  # DEBUG __it => _40
  # DEBUG __it => _40
  # DEBUG __it => D#1622
  # DEBUG __it => D#1622
  # DEBUG __first => D#1622
  # DEBUG __last => _40
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _40
  # DEBUG __it => _40
  # DEBUG __it => D#1622
  # DEBUG __it => D#1622
  # DEBUG __first => D#1622
  # DEBUG __last => _40
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#1622
  # DEBUG __last => _40
  # DEBUG __result => __first_7
  _103 = __first.228_48 - _26;
  _Num_104 = _103 /[ex] 4;
  # DEBUG _Num => _Num_104
  if (_Num_104 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _105 = (long unsigned int) _103;
  _106 = -_105;
  _107 = __first_7 + _106;
  __builtin_memmove (_107, __position_15, _105);

  <bb 10>:
  # DEBUG this => &__position
  _47 = __position_15 + _38;
  # DEBUG this => &__position
  # DEBUG __first => D#1622
  # DEBUG __last => _47
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1622
  if (__position_15 == _47)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_108 = PHI <__position_15(11), __position_54(13)>
  # DEBUG __first => __position_108
  *__position_108 = __x_copy.223_34;
  __position_54 = __position_108 + 4;
  # DEBUG __first => __position_54
  # DEBUG __first => __position_54
  if (_47 == __position_54)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#1268 => &this_4(D)->D.50324
  # DEBUG this => D#1268
  __n_49 = __n_2(D) - __elems_after_36;
  # DEBUG __first => __first_7
  # DEBUG __n => __n_49
  # DEBUG __x => &__x_copy
  # DEBUG __niter => __n_49
  # DEBUG __first => __first_7
  if (__n_49 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_110 = PHI <__n_49(15), __n_61(18)>
  # __first_74 = PHI <__first_7(15), __first_62(18)>
  # DEBUG __niter => __n_110
  # DEBUG __first => __first_74
  *__first_74 = __x_copy.223_34;
  __n_61 = __n_110 + 18446744073709551615;
  # DEBUG __niter => __n_61
  __first_62 = __first_74 + 4;
  # DEBUG __first => __first_62
  # DEBUG __niter => __n_61
  # DEBUG __first => __first_62
  if (__n_61 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _159 = __n_49 * 4;
  __first_122 = __first_7 + _159;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_124 = PHI <__first_122(17), __first_7(14)>
  this_4(D)->D.50324._M_impl._M_finish = __first_124;
  # DEBUG D#1269 => &this_4(D)->D.50324
  # DEBUG this => D#1269
  # DEBUG this => &__position
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __alloc => D#1259
  # DEBUG D#1258 => D#1259
  # DEBUG D#1257 => D#1258
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG D.87201 => D#1257
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __assignable => 1
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1622
  # DEBUG __it => D#1622
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __it => __first_124
  # DEBUG __it => __first_124
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1622
  # DEBUG __it => D#1622
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __simple => 1
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG _Num => _21
  if (_21 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_169 = (long unsigned int) _22;
  goto <bb 22>;

  <bb 21>:
  _57 = (long unsigned int) _22;
  __builtin_memmove (__first_124, __position_15, _57);
  pretmp_167 = this_4(D)->D.50324._M_impl._M_finish;

  <bb 22>:
  # prephitmp_168 = PHI <__first_124(20), pretmp_167(21)>
  # prephitmp_170 = PHI <pretmp_169(20), _57(21)>
  _52 = prephitmp_168 + prephitmp_170;
  this_4(D)->D.50324._M_impl._M_finish = _52;
  # DEBUG this => &__position
  # DEBUG __first => D#1622
  # DEBUG __last => __first_7
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1622
  if (__first_7 == __position_15)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_109 = PHI <__position_15(23), __position_56(25)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy.223_34;
  __position_56 = __position_109 + 4;
  # DEBUG __first => __position_56
  # DEBUG __first => __position_56
  if (__first_7 == __position_56)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#710 => this_4(D)
  # DEBUG this => D#710
  # DEBUG D#709 => D#710
  # DEBUG D#708 => &D#709->D.35782
  # DEBUG this => D#708
  # DEBUG __a => D#707
  # DEBUG D#706 => D#707
  # DEBUG D#705 => D#706
  # DEBUG this => D#705
  _16 = MEM[(int * *)this_4(D)];
  # DEBUG D#67 => this_4(D)
  # DEBUG D#67 => this_4(D)
  # DEBUG this => D#67
  # DEBUG this => D#67
  _115 = (long int) _16;
  _116 = _8 - _115;
  _117 = _116 /[ex] 4;
  _118 = (const long unsigned int) _117;
  _119 = 4611686018427387903 - _118;
  if (__n_2(D) > _119)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#67 => this_4(D)
  # DEBUG D#67 => this_4(D)
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG D#67 => this_4(D)
  # DEBUG D#67 => this_4(D)
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG __a => &D.92900
  # DEBUG __b => &__n
  _75 = MAX_EXPR <__n_2(D), _118>;
  __len_123 = _75 + _118;
  # DEBUG __len => __len_123
  # DEBUG D#67 => this_4(D)
  # DEBUG D#67 => this_4(D)
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG D#710 => this_4(D)
  # DEBUG this => D#710
  # DEBUG D#709 => D#710
  # DEBUG D#708 => &D#709->D.35782
  # DEBUG this => D#708
  # DEBUG __a => D#707
  # DEBUG D#706 => D#707
  # DEBUG D#705 => D#706
  # DEBUG this => D#705
  _151 = __len_123 > 4611686018427387903;
  _139 = _118 > __len_123;
  _113 = _139 | _151;
  if (_113 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_165 = __len_123 * 4;

  <bb 30>:
  # _155 = PHI <_141(44), _150(29)>
  # _156 = PHI <_140(44), _149(29)>
  # prephitmp_166 = PHI <18446744073709551612(44), pretmp_165(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#217 => &this_4(D)->D.50324._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#217
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59919
  # DEBUG this => &__position
  # DEBUG this => &D.59919
  # DEBUG D#1280 => _156 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1280
  # DEBUG D#1279 => &this_4(D)->D.50324
  # DEBUG D#808 => D#1279
  # DEBUG __n => NULL
  # DEBUG this => D#808
  # DEBUG D#807 => D#808
  # DEBUG D#806 => &D#807->_M_impl
  # DEBUG D#805 => D#806
  # DEBUG __n => NULL
  # DEBUG __a => D#805
  # DEBUG D#804 => D#805
  # DEBUG D#802 => D#804
  # DEBUG D#803 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#802
  # DEBUG D.92888 => D#803
  # DEBUG D#801 => D#802
  # DEBUG D#795 => D#801
  # DEBUG this => D#795
  _111 = operator new (prephitmp_166);
  pretmp_28 = this_4(D)->D.50324._M_impl._M_start;
  pretmp_146 = this_4(D)->D.50324._M_impl._M_finish;
  pretmp_148 = _111 + prephitmp_166;
  pretmp_144 = (long int) pretmp_146;
  pretmp_142 = (long int) pretmp_28;
  pretmp_137 = _155 - pretmp_142;

  <bb 31>:
  # iftmp.233_112 = PHI <0B(45), _111(30)>
  # _157 = PHI <_150(45), _155(30)>
  # _152 = PHI <_149(45), _156(30)>
  # prephitmp_145 = PHI <_16(45), pretmp_28(30)>
  # prephitmp_147 = PHI <0B(45), pretmp_148(30)>
  # prephitmp_120 = PHI <_8(45), pretmp_144(30)>
  # prephitmp_136 = PHI <_149(45), pretmp_137(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1263 => &this_4(D)->D.50324
  # DEBUG this => D#1263
  _18 = (long unsigned int) _152;
  __first_19 = iftmp.233_112 + _18;
  # DEBUG __first => __first_19
  # DEBUG __n => __n_2(D)
  # DEBUG __x => __x_20(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_19
  pretmp_114 = MEM[(const eQState &)__x_20(D)];

  <bb 32>:
  # __n_131 = PHI <__n_78(33), __n_2(D)(31)>
  # __first_154 = PHI <__first_79(33), __first_19(31)>
  # DEBUG __niter => __n_131
  # DEBUG __first => __first_154
  *__first_154 = pretmp_114;
  __n_78 = __n_131 + 18446744073709551615;
  # DEBUG __niter => __n_78
  __first_79 = __first_154 + 4;
  # DEBUG __first => __first_79
  # DEBUG __niter => __n_78
  # DEBUG __first => __first_79
  if (__n_78 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1264 => &this_4(D)->D.50324
  # DEBUG this => D#1264
  # DEBUG this => &__position
  # DEBUG D#1621 => this_4(D)->D.50324._M_impl._M_start
  # DEBUG __first => D#1621
  # DEBUG __last => D#1622
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1261
  # DEBUG D#1260 => D#1261
  # DEBUG D#1257 => D#1260
  # DEBUG __first => D#1621
  # DEBUG __last => D#1622
  # DEBUG __result => NULL
  # DEBUG D.87316 => D#1257
  # DEBUG __first => D#1621
  # DEBUG __last => D#1622
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1621
  # DEBUG __last => D#1622
  # DEBUG __result => NULL
  # DEBUG __first => D#1621
  # DEBUG __last => D#1622
  # DEBUG __result => NULL
  # DEBUG __it => D#1622
  # DEBUG __it => D#1622
  # DEBUG __it => D#1621
  # DEBUG __it => D#1621
  # DEBUG __first => D#1621
  # DEBUG __last => D#1622
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1622
  # DEBUG __it => D#1622
  # DEBUG __it => D#1621
  # DEBUG __it => D#1621
  # DEBUG __first => D#1621
  # DEBUG __last => D#1622
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1621
  # DEBUG __last => D#1622
  # DEBUG __result => NULL
  # DEBUG D#1620 => (long int) D#1621
  # DEBUG D#1619 => _157 - D#1620
  _Num_71 = prephitmp_136 /[ex] 4;
  # DEBUG _Num => _Num_71
  if (_Num_71 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_161 = (long unsigned int) prephitmp_136;
  goto <bb 37>;

  <bb 36>:
  _72 = (long unsigned int) prephitmp_136;
  __builtin_memmove (iftmp.233_112, prephitmp_145, _72);

  <bb 37>:
  # prephitmp_162 = PHI <pretmp_161(35), _72(36)>
  # DEBUG D#1618 => (long unsigned int) D#1619
  # DEBUG __new_finish => iftmp.233_112 + D#1618
  _24 = __n_2(D) * 4;
  _132 = _24 + prephitmp_162;
  __new_finish_25 = iftmp.233_112 + _132;
  # DEBUG __new_finish => __new_finish_25
  # DEBUG D#1265 => &this_4(D)->D.50324
  # DEBUG this => D#1265
  # DEBUG D#1617 => this_4(D)->D.50324._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#1622
  # DEBUG __last => D#1617
  # DEBUG __result => __new_finish_25
  # DEBUG __alloc => D#1261
  # DEBUG D#1260 => D#1261
  # DEBUG D#1257 => D#1260
  # DEBUG __first => D#1622
  # DEBUG __last => D#1617
  # DEBUG __result => __new_finish_25
  # DEBUG D.87277 => D#1257
  # DEBUG __first => D#1622
  # DEBUG __last => D#1617
  # DEBUG __result => __new_finish_25
  # DEBUG __assignable => 1
  # DEBUG __first => D#1622
  # DEBUG __last => D#1617
  # DEBUG __result => __new_finish_25
  # DEBUG __first => D#1622
  # DEBUG __last => D#1617
  # DEBUG __result => __new_finish_25
  # DEBUG __it => D#1617
  # DEBUG __it => D#1617
  # DEBUG __it => D#1622
  # DEBUG __it => D#1622
  # DEBUG __first => D#1622
  # DEBUG __last => D#1617
  # DEBUG __result => __new_finish_25
  # DEBUG __it => __new_finish_25
  # DEBUG __it => __new_finish_25
  # DEBUG __it => D#1617
  # DEBUG __it => D#1617
  # DEBUG __it => D#1622
  # DEBUG __it => D#1622
  # DEBUG __first => D#1622
  # DEBUG __last => D#1617
  # DEBUG __result => __new_finish_25
  # DEBUG __simple => 1
  # DEBUG __first => D#1622
  # DEBUG __last => D#1617
  # DEBUG __result => __new_finish_25
  _64 = prephitmp_120 - _157;
  _Num_65 = _64 /[ex] 4;
  # DEBUG _Num => _Num_65
  if (_Num_65 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_163 = (long unsigned int) _64;
  goto <bb 40>;

  <bb 39>:
  _66 = (long unsigned int) _64;
  __builtin_memcpy (__new_finish_25, __position_15, _66);

  <bb 40>:
  # prephitmp_164 = PHI <pretmp_163(38), _66(39)>
  _68 = __new_finish_25 + prephitmp_164;
  # DEBUG __new_finish => _68
  # DEBUG D#1266 => &this_4(D)->D.50324
  # DEBUG this => D#1266
  # DEBUG D#1278 => this_4(D)->D.50324._M_impl._M_finish
  # DEBUG D#1277 => this_4(D)->D.50324._M_impl._M_start
  # DEBUG __first => D#1277
  # DEBUG __last => D#1278
  # DEBUG D.87270 => NULL
  # DEBUG D#192 => D#1277
  # DEBUG D#193 => D#1278
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  # DEBUG D#1276 => this_4(D)->D.50324._M_impl._M_end_of_storage
  # DEBUG D#1275 => (long int) D#1276
  # DEBUG D#1274 => (long int) D#1621
  # DEBUG D#1273 => D#1275 - D#1274
  # DEBUG D#1272 => D#1273 /[ex] 4
  # DEBUG D#1271 => (long unsigned int) D#1272
  # DEBUG D#1270 => &this_4(D)->D.50324
  # DEBUG this => D#1270
  # DEBUG __p => D#1621
  # DEBUG __n => D#1271
  if (prephitmp_145 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#425 => &D#1270->_M_impl
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#1271
  # DEBUG __p => D#1621
  # DEBUG __a => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#419 => D#421
  # DEBUG D#420 => D#422
  # DEBUG __p => D#1621
  # DEBUG this => D#419
  # DEBUG D.87266 => D#420
  operator delete (prephitmp_145);

  <bb 42>:
  this_4(D)->D.50324._M_impl._M_start = iftmp.233_112;
  this_4(D)->D.50324._M_impl._M_finish = _68;
  this_4(D)->D.50324._M_impl._M_end_of_storage = prephitmp_147;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#217 => &this_4(D)->D.50324._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#217
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59919
  # DEBUG this => &__position
  _141 = (long int) __position_15;
  # DEBUG this => &D.59919
  _140 = _141 - _115;
  # DEBUG D#1280 => _140 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1280
  # DEBUG D#1279 => &this_4(D)->D.50324
  # DEBUG D#808 => D#1279
  # DEBUG __n => NULL
  # DEBUG this => D#808
  # DEBUG D#807 => D#808
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#217 => &this_4(D)->D.50324._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#217
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59919
  # DEBUG this => &__position
  _150 = (long int) __position_15;
  # DEBUG this => &D.59919
  _149 = _150 - _115;
  # DEBUG D#1280 => _149 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1280
  # DEBUG D#1279 => &this_4(D)->D.50324
  # DEBUG D#808 => D#1279
  # DEBUG __n => NULL
  # DEBUG this => D#808
  # DEBUG D#807 => D#808
  if (__len_123 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=2665, decl_uid=35705, cgraph_uid=1125, symbol_order=1126)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.93028;
  const size_type __len;
  size_type D.93027;
  size_type __n;
  eQState * D.93018;
  const ptrdiff_t _Num;
  int * D.93009;
  int * const __position;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  int * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  int * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  int * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  int * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  int * _41;
  int * _43;
  long int _47;
  int * _48;
  long int __first.197_49;
  int * _53;
  const int _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  int * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  int * _108;
  eQState * _112;
  eQState * iftmp.233_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  int * prephitmp_146;
  int * pretmp_147;
  eQState * prephitmp_148;
  eQState * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  int * pretmp_166;
  int * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  int * pretmp_173;
  int * prephitmp_174;

  <bb 2>:
  # DEBUG D#1689 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1689
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.35782._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.35782._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#116 => &this_4(D)->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#116
  # DEBUG __lhs => &D.59933
  # DEBUG __rhs => &__position
  # DEBUG this => &D.59933
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 4;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#1174 => &this_4(D)->D.35782
  # DEBUG this => D#1174
  _39 = __n_2(D) * 4;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#1166
  # DEBUG D#1165 => D#1166
  # DEBUG D#1164 => D#1165
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.85093 => D#1164
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.197_49 = (long int) _41;
  _47 = _8 - __first.197_49;
  _Num_45 = _47 /[ex] 4;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.35782._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.35782._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#1689
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG __first => D#1689
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG __first => D#1689
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#1689
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.197_49 - _27;
  _Num_105 = _104 /[ex] 4;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#665 => &__x_copy
  # DEBUG __first => D#1689
  # DEBUG __last => _48
  # DEBUG D#664 => D#665
  # DEBUG __value => D#664
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG D#479 => D#664
  # DEBUG __first => D#1689
  # DEBUG __last => _48
  # DEBUG __value => D#479
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#1689
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 4;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#1175 => &this_4(D)->D.35782
  # DEBUG this => D#1175
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#930 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#929 => D#930
  # DEBUG __x => D#929
  # DEBUG D.85178 => D#931
  # DEBUG D#928 => D#929
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#927 => D#928
  # DEBUG __x => D#927
  # DEBUG __assignable => 1
  # DEBUG D#926 => D#927
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#925 => D#926
  # DEBUG __x => D#925
  # DEBUG D#924 => D#925
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#923 => D#924
  # DEBUG __value => D#923
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#922 => D#923
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#922
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 4;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 4;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.35782._M_impl._M_finish = __first_125;
  # DEBUG D#1176 => &this_4(D)->D.35782
  # DEBUG this => D#1176
  # DEBUG this => &__position
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#1166
  # DEBUG D#1165 => D#1166
  # DEBUG D#1164 => D#1165
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.85140 => D#1164
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.35782._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.35782._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#665 => &__x_copy
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG D#664 => D#665
  # DEBUG __value => D#664
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG D#479 => D#664
  # DEBUG __first => D#1689
  # DEBUG __last => __first_7
  # DEBUG __value => D#479
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#1689
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 4;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#710 => this_4(D)
  # DEBUG this => D#710
  # DEBUG D#709 => D#710
  # DEBUG D#708 => &D#709->D.35782
  # DEBUG this => D#708
  # DEBUG __a => D#707
  # DEBUG D#706 => D#707
  # DEBUG D#705 => D#706
  # DEBUG this => D#705
  _17 = MEM[(int * *)this_4(D)];
  # DEBUG D#67 => this_4(D)
  # DEBUG D#67 => this_4(D)
  # DEBUG this => D#67
  # DEBUG this => D#67
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 4;
  _119 = (const long unsigned int) _118;
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#67 => this_4(D)
  # DEBUG D#67 => this_4(D)
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG D#67 => this_4(D)
  # DEBUG D#67 => this_4(D)
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG __a => &D.93028
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#67 => this_4(D)
  # DEBUG D#67 => this_4(D)
  # DEBUG this => D#67
  # DEBUG this => D#67
  # DEBUG D#710 => this_4(D)
  # DEBUG this => D#710
  # DEBUG D#709 => D#710
  # DEBUG D#708 => &D#709->D.35782
  # DEBUG this => D#708
  # DEBUG __a => D#707
  # DEBUG D#706 => D#707
  # DEBUG D#705 => D#706
  # DEBUG this => D#705
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 4;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551612(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#218 => &this_4(D)->D.35782._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#218
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59966
  # DEBUG this => &__position
  # DEBUG this => &D.59966
  # DEBUG D#1187 => _157 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1187
  # DEBUG D#1186 => &this_4(D)->D.35782
  # DEBUG D#718 => D#1186
  # DEBUG __n => NULL
  # DEBUG this => D#808
  # DEBUG D#807 => D#808
  # DEBUG D#806 => &D#807->_M_impl
  # DEBUG D#805 => D#806
  # DEBUG __n => NULL
  # DEBUG __a => D#805
  # DEBUG D#804 => D#805
  # DEBUG D#802 => D#804
  # DEBUG D#803 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#802
  # DEBUG D.93016 => D#803
  # DEBUG D#801 => D#802
  # DEBUG D#795 => D#801
  # DEBUG this => D#795
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.35782._M_impl._M_start;
  pretmp_147 = this_4(D)->D.35782._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.233_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1170 => &this_4(D)->D.35782
  # DEBUG this => D#1170
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.233_113 + _19;
  _56 = MEM[(const int &)__x_21(D)];
  # DEBUG D#930 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#929 => D#930
  # DEBUG __x => D#929
  # DEBUG D.85295 => D#931
  # DEBUG D#928 => D#929
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#927 => D#928
  # DEBUG __x => D#927
  # DEBUG __assignable => 1
  # DEBUG D#926 => D#927
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#925 => D#926
  # DEBUG __x => D#925
  # DEBUG D#924 => D#925
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#923 => D#924
  # DEBUG __value => D#923
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#922 => D#923
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#922
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 4;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1171 => &this_4(D)->D.35782
  # DEBUG this => D#1171
  # DEBUG this => &__position
  # DEBUG D#1688 => this_4(D)->D.35782._M_impl._M_start
  # DEBUG __first => D#1688
  # DEBUG __last => D#1689
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1168
  # DEBUG D#1167 => D#1168
  # DEBUG D#1164 => D#1167
  # DEBUG __first => D#1688
  # DEBUG __last => D#1689
  # DEBUG __result => NULL
  # DEBUG D.85257 => D#1164
  # DEBUG __first => D#1688
  # DEBUG __last => D#1689
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1688
  # DEBUG __last => D#1689
  # DEBUG __result => NULL
  # DEBUG __first => D#1688
  # DEBUG __last => D#1689
  # DEBUG __result => NULL
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG __it => D#1688
  # DEBUG __it => D#1688
  # DEBUG __first => D#1688
  # DEBUG __last => D#1689
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG __it => D#1688
  # DEBUG __it => D#1688
  # DEBUG __first => D#1688
  # DEBUG __last => D#1689
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1688
  # DEBUG __last => D#1689
  # DEBUG __result => NULL
  # DEBUG D#1687 => (long int) D#1688
  # DEBUG D#1686 => _158 - D#1687
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.233_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#1685 => (long unsigned int) D#1686
  # DEBUG __new_finish => iftmp.233_113 + D#1685
  _25 = __n_2(D) * 4;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.233_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#1172 => &this_4(D)->D.35782
  # DEBUG this => D#1172
  # DEBUG D#1684 => this_4(D)->D.35782._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#1689
  # DEBUG __last => D#1684
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#1168
  # DEBUG D#1167 => D#1168
  # DEBUG D#1164 => D#1167
  # DEBUG __first => D#1689
  # DEBUG __last => D#1684
  # DEBUG __result => __new_finish_26
  # DEBUG D.85218 => D#1164
  # DEBUG __first => D#1689
  # DEBUG __last => D#1684
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#1689
  # DEBUG __last => D#1684
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#1689
  # DEBUG __last => D#1684
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#1684
  # DEBUG __it => D#1684
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG __first => D#1689
  # DEBUG __last => D#1684
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#1684
  # DEBUG __it => D#1684
  # DEBUG __it => D#1689
  # DEBUG __it => D#1689
  # DEBUG __first => D#1689
  # DEBUG __last => D#1684
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#1689
  # DEBUG __last => D#1684
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 4;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#1173 => &this_4(D)->D.35782
  # DEBUG this => D#1173
  # DEBUG D#1185 => this_4(D)->D.35782._M_impl._M_finish
  # DEBUG D#1184 => this_4(D)->D.35782._M_impl._M_start
  # DEBUG __first => D#1184
  # DEBUG __last => D#1185
  # DEBUG D.85211 => NULL
  # DEBUG D#150 => D#1184
  # DEBUG D#151 => D#1185
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#1183 => this_4(D)->D.35782._M_impl._M_end_of_storage
  # DEBUG D#1182 => (long int) D#1183
  # DEBUG D#1181 => (long int) D#1688
  # DEBUG D#1180 => D#1182 - D#1181
  # DEBUG D#1179 => D#1180 /[ex] 4
  # DEBUG D#1178 => (long unsigned int) D#1179
  # DEBUG D#1177 => &this_4(D)->D.35782
  # DEBUG this => D#1177
  # DEBUG __p => D#1688
  # DEBUG __n => D#1178
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#288 => &D#1177->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#1178
  # DEBUG __p => D#1688
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => D#1688
  # DEBUG this => D#282
  # DEBUG D.85207 => D#283
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.35782._M_impl._M_start = iftmp.233_113;
  this_4(D)->D.35782._M_impl._M_finish = _70;
  this_4(D)->D.35782._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#218 => &this_4(D)->D.35782._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#218
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59966
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.59966
  _143 = _144 - _116;
  # DEBUG D#1187 => _143 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1187
  # DEBUG D#1186 => &this_4(D)->D.35782
  # DEBUG D#718 => D#1186
  # DEBUG __n => NULL
  # DEBUG this => D#808
  # DEBUG D#807 => D#808
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#218 => &this_4(D)->D.35782._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#218
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59966
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.59966
  _150 = _151 - _116;
  # DEBUG D#1187 => _150 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1187
  # DEBUG D#1186 => &this_4(D)->D.35782
  # DEBUG D#718 => D#1186
  # DEBUG __n => NULL
  # DEBUG this => D#808
  # DEBUG D#807 => D#808
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb, funcdef_no=2668, decl_uid=42914, cgraph_uid=1128, symbol_order=1129)

Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 15 as candidate
loop 15 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 16 as candidate
loop 16 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 17 as candidate
loop 17 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (struct vector * const this, struct iterator __position, size_type __n, bool __x)
{
  const unsigned int __first$8;
  _Bit_type * __first;
  const unsigned int __last$_M_offset;
  _Bit_type * const __last$_M_p;
  unsigned int __last$D27293$_M_offset;
  _Bit_type * __last$D27293$_M_p;
  unsigned int __first$D27293$_M_offset;
  _Bit_type * __first$D27293$_M_p;
  unsigned int SR.2750;
  _Bit_type * SR.2749;
  const unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.2746;
  _Bit_type * SR.2745;
  unsigned int SR.2744;
  _Bit_type * SR.2743;
  unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.2740;
  _Bit_type * SR.2739;
  unsigned int SR.2738;
  _Bit_type * SR.2737;
  const unsigned int __first$8;
  const unsigned int __first$8;
  _Bit_type * __first;
  const unsigned int __last$_M_offset;
  _Bit_type * const __last$_M_p;
  unsigned int __last$D27293$_M_offset;
  _Bit_type * __last$D27293$_M_p;
  unsigned int __first$D27293$_M_offset;
  _Bit_type * __first;
  unsigned int SR.2727;
  _Bit_type * SR.2726;
  unsigned int SR.2725;
  _Bit_type * SR.2724;
  unsigned int __i$D27293$_M_offset;
  _Bit_type * __i$D27293$_M_p;
  unsigned int __position$8;
  _Bit_type * __position;
  struct _Bit_iterator D.93469;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  unsigned int __it$D27293$_M_offset;
  _Bit_type * __it$D27293$_M_p;
  unsigned int __it$D27293$_M_offset;
  _Bit_type * __it$D27293$_M_p;
  unsigned int __it$D27293$_M_offset;
  _Bit_type * __it$D27293$_M_p;
  struct _Bit_iterator D.93433;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.93432;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  struct _Bit_iterator D.93363;
  struct _Bit_iterator D.93362;
  long unsigned int * __first;
  _Bit_type * __first$D27293$_M_p;
  _Bit_type * __last$D27293$_M_p;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator D.93337;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.93312;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.93311;
  _Bit_type * __it$D27413$_M_p;
  unsigned int __it$D27413$_M_offset;
  _Bit_type * __it$D27413$_M_p;
  unsigned int __it$D27413$_M_offset;
  _Bit_type * __it$D27293$_M_p;
  unsigned int __it$D27293$_M_offset;
  const long unsigned int D.93288;
  const size_type __len;
  size_type D.93287;
  size_type __n;
  _Bit_type * __last$D27413$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D27413$_M_offset;
  struct _Bit_iterator D.93265;
  struct iterator D.93264;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  struct _Bit_iterator D.93194;
  struct _Bit_iterator D.93193;
  long unsigned int * __first;
  _Bit_type * __first$D27293$_M_p;
  _Bit_type * __last$D27293$_M_p;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator D.93168;
  difference_type __n;
  _Bit_type * __last$_M_p;
  const unsigned int __last$8;
  _Bit_type * __result$_M_p;
  unsigned int __result$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  unsigned int __it$D27293$_M_offset;
  _Bit_type * __it$D27293$_M_p;
  unsigned int __it$D27293$_M_offset;
  _Bit_type * __it$D27293$_M_p;
  unsigned int __it$D27293$_M_offset;
  _Bit_type * __it$D27293$_M_p;
  struct _Bit_iterator D.93133;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.93132;
  _Bit_type * SR.1518;
  unsigned int SR.1511;
  _Bit_type * SR.1510;
  unsigned int SR.1509;
  _Bit_type * SR.1508;
  unsigned int __i$8;
  _Bit_type * __i;
  unsigned int __position$8;
  _Bit_type * __position;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct _Bit_iterator D.80914;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct _Bit_iterator D.80876;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator __i;
  struct _Bit_iterator D.69196;
  struct _Bit_iterator D.69192;
  long unsigned int _7;
  long int __n.207_8;
  long unsigned int prephitmp_13;
  bool _15;
  long int __n.207_16;
  long unsigned int * _20;
  long int _25;
  long int _26;
  long int _27;
  long int _28;
  long int _29;
  ptrdiff_t _30;
  unsigned int _32;
  _Bit_type * _33;
  long unsigned int * const _34;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  ptrdiff_t _41;
  size_type _42;
  _Bit_type * _53;
  unsigned int _55;
  bool _56;
  long int _58;
  long unsigned int _59;
  long unsigned int _60;
  unsigned int _66;
  long int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int * _81;
  long int _89;
  long unsigned int _90;
  long unsigned int _91;
  unsigned int _97;
  long unsigned int _128;
  int _131;
  long int _133;
  long int _134;
  long int _135;
  long int _137;
  long int _138;
  long unsigned int pretmp_143;
  long unsigned int prephitmp_147;
  size_t pretmp_149;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  bool _164;
  long unsigned int prephitmp_165;
  long unsigned int pretmp_172;
  long unsigned int _180;
  long unsigned int _184;
  long unsigned int _185;
  long unsigned int _186;
  long unsigned int _193;
  long unsigned int _195;
  long unsigned int _196;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  bool _213;
  bool _214;
  bool _215;
  long unsigned int _222;
  long unsigned int _223;
  long unsigned int _224;
  bool _230;
  bool _232;
  long int __last.214_235;
  long int __first.215_236;
  long int _237;
  long unsigned int _239;
  bool _253;
  long unsigned int _255;
  int _257;
  long unsigned int _260;
  long unsigned int pretmp_269;
  long unsigned int _282;
  long unsigned int _284;
  long unsigned int _285;
  long unsigned int _287;
  long unsigned int _289;
  long unsigned int _290;
  long unsigned int _291;
  long unsigned int _292;
  long unsigned int _293;
  long unsigned int _304;
  long unsigned int _307;
  long unsigned int _308;
  long unsigned int _311;
  long unsigned int _313;
  bool _316;
  bool _318;
  bool _320;
  bool _322;
  long unsigned int _324;
  long unsigned int _325;
  long unsigned int _326;
  int _333;
  long unsigned int _343;
  long unsigned int _344;
  long unsigned int _345;
  long unsigned int _362;
  long unsigned int _363;
  long unsigned int _364;
  int _370;
  long unsigned int * const _373;
  long int _375;
  long int _376;
  long int _377;
  long unsigned int _378;
  sizetype _379;
  long unsigned int * _380;
  long int _391;
  long int _393;
  long int _394;
  long int _395;
  long int _396;
  long unsigned int _401;
  long unsigned int _403;
  long unsigned int _405;
  long unsigned int _406;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int _411;
  long unsigned int _412;
  long unsigned int pretmp_422;
  long unsigned int _423;
  long unsigned int _424;
  long unsigned int _426;
  long unsigned int _428;
  long int pretmp_437;
  long unsigned int prephitmp_439;
  long int prephitmp_444;
  long unsigned int _453;
  _Bit_type cstore_456;
  long unsigned int _457;
  long unsigned int _458;
  long unsigned int _459;
  bool _460;
  bool _463;
  bool _464;
  long unsigned int pretmp_487;
  _Bit_type cstore_499;
  long unsigned int _500;
  long unsigned int _501;
  long unsigned int _502;
  long unsigned int _503;
  bool _504;
  long unsigned int pretmp_522;
  long unsigned int _534;
  _Bit_type cstore_539;
  long unsigned int _549;
  bool _558;
  bool _559;
  bool _560;
  bool _561;
  bool _562;
  long unsigned int pretmp_563;
  bool _564;
  bool _565;
  bool _566;
  bool _567;
  bool _568;

  <bb 2>:
  # DEBUG D#1759 => MEM[(struct _Bit_iterator *)&__position]
  # DEBUG __position => D#1759
  # DEBUG D#1758 => MEM[(struct _Bit_iterator *)&__position + 8B]
  # DEBUG __position$8 => D#1758
  # DEBUG __position => D#1759
  # DEBUG __position$8 => D#1758
  if (__n_2(D) == 0)
    goto <bb 135>;
  else
    goto <bb 3>;

  <bb 3>:
  __first_525 = MEM[(struct _Bit_iterator *)&__position];
  __first$8_480 = MEM[(struct _Bit_iterator *)&__position + 8B];
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#118 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  _32 = MEM[(const struct _Bit_iterator *)this_4(D)].D.27293._M_offset;
  _33 = MEM[(const struct _Bit_iterator *)this_4(D)].D.27293._M_p;
  # DEBUG this => D#25
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#25
  # DEBUG D#220 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl
  _34 = MEM[(long unsigned int * *)this_4(D) + 32B];
  # DEBUG D#219 => D#220
  # DEBUG this => D#219
  # DEBUG this => NULL
  # DEBUG __x => _34
  # DEBUG __y => 0
  # DEBUG this => D#24
  # DEBUG __x => _34
  # DEBUG __y => 0
  # DEBUG this => D#24
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _36 = (long int) _34;
  _37 = (long int) _33;
  _38 = _36 - _37;
  _39 = _38 * 8;
  _40 = (long int) _32;
  _41 = _39 - _40;
  _42 = (size_type) _41;
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#118 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  # DEBUG this => D#25
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#25
  # DEBUG this => this_4(D)
  # DEBUG D#117 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  __last$8_6 = MEM[(const struct _Bit_iterator *)this_4(D) + 16B].D.27293._M_offset;
  __last$_M_p_5 = MEM[(const struct _Bit_iterator *)this_4(D) + 16B].D.27293._M_p;
  # DEBUG this => D#25
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _25 = (long int) __last$_M_p_5;
  _26 = _25 - _37;
  _27 = _26 * 8;
  _28 = (long int) __last$8_6;
  _29 = _27 + _28;
  _30 = _29 - _40;
  _31 = (const long unsigned int) _30;
  _7 = _42 - _31;
  if (__n_2(D) <= _7)
    goto <bb 4>;
  else
    goto <bb 59>;

  <bb 4>:
  __n.207_8 = (long int) __n_2(D);
  # DEBUG D#942 => &this_4(D)->D.43009._M_impl._M_finish
  # DEBUG this => D#942
  # DEBUG __i => __n.207_8
  # DEBUG __tmp$_M_p => __last$_M_p_5
  # DEBUG __tmp$_M_offset => __last$8_6
  # DEBUG this => &__tmp
  # DEBUG __i => __n.207_8
  # DEBUG D#21 => &__tmp.D.27293
  # DEBUG this => D#21
  # DEBUG __i => __n.207_8
  __n_68 = __n.207_8 + _28;
  # DEBUG __n => __n_68
  _69 = __n_68 / 64;
  _70 = (long unsigned int) _69;
  _71 = _70 * 8;
  __result$_M_p_72 = __last$_M_p_5 + _71;
  # DEBUG __tmp$_M_p => __result$_M_p_72
  __n_73 = __n_68 % 64;
  # DEBUG __n => __n_73
  if (__n_73 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __n_74 = __n_73 + 64;
  # DEBUG __n => __n_74
  __result$_M_p_75 = __result$_M_p_72 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __result$_M_p_75

  <bb 6>:
  # __n_76 = PHI <__n_73(4), __n_74(5)>
  # __result$_M_p_78 = PHI <__result$_M_p_72(4), __result$_M_p_75(5)>
  # DEBUG __tmp$_M_p => __result$_M_p_78
  # DEBUG __n => __n_76
  __result$_M_offset_77 = (unsigned int) __n_76;
  # DEBUG __tmp$_M_offset => __result$_M_offset_77
  # DEBUG D#22 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#22
  # DEBUG D#23 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#23
  # DEBUG this => this_4(D)
  # DEBUG D#812 => __position
  # DEBUG D#812 => __position
  # DEBUG D#813 => D.69191
  # DEBUG D#813 => D.69191
  # DEBUG D#814 => D.69190
  # DEBUG D#814 => D.69190
  # DEBUG __it$D27293$_M_p => __last$_M_p_5
  # DEBUG __it$D27293$_M_offset => __last$8_6
  # DEBUG __it$D27293$_M_p => D#1759
  # DEBUG __it$D27293$_M_offset => D#1758
  # DEBUG __it$D27293$_M_p => __result$_M_p_78
  # DEBUG __it$D27293$_M_offset => __result$_M_offset_77
  # DEBUG __it$D27293$_M_p => __last$_M_p_5
  # DEBUG __it$D27293$_M_offset => __last$8_6
  # DEBUG __it$D27293$_M_p => D#1759
  # DEBUG __it$D27293$_M_offset => D#1758
  # DEBUG __simple => 0
  # DEBUG __last$_M_p => __last$_M_p_5
  # DEBUG __last$8 => __last$8_6
  # DEBUG __result$_M_p => __result$_M_p_78
  # DEBUG __result$_M_offset => __result$_M_offset_77
  # DEBUG D#14 => &__last.D.27293
  # DEBUG D#14 => &__last.D.27293
  # DEBUG D#15 => &__first.D.27293
  # DEBUG D#15 => &__first.D.27293
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _133 = (long int) __first_525;
  _134 = _25 - _133;
  _135 = _134 * 8;
  _137 = _28 + _135;
  _138 = (long int) __first$8_480;
  __n_139 = _137 - _138;
  # DEBUG __n => NULL
  # DEBUG __result$_M_offset => __result$_M_offset_77
  # DEBUG __result$_M_p => __result$_M_p_78
  # DEBUG __last$8 => __last$8_6
  # DEBUG __last$_M_p => __last$_M_p_5
  # DEBUG __n => __n_139
  if (__n_139 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  # DEBUG __i => __n.207_8
  # DEBUG __tmp$_M_p => D#1759
  # DEBUG __tmp$_M_offset => D#1758
  # DEBUG this => &__tmp
  # DEBUG __i => __n.207_8
  # DEBUG D#21 => &__tmp.D.27293
  # DEBUG this => D#21
  # DEBUG __i => __n.207_8
  __n_57 = __n.207_8 + _138;
  # DEBUG __n => __n_57
  _58 = __n_57 / 64;
  _59 = (long unsigned int) _58;
  _60 = _59 * 8;
  __last$_M_p_61 = __first_525 + _60;
  # DEBUG __tmp$_M_p => __last$_M_p_61
  __n_62 = __n_57 % 64;
  # DEBUG __n => __n_62
  if (__n_62 < 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 8>:

  <bb 9>:
  # __n_461 = PHI <__n_139(8), __n_162(19)>
  # __last$8_462 = PHI <__last$8_6(8), __last$8_145(19)>
  # __last$_M_p_489 = PHI <__last$_M_p_5(8), __last$_M_p_153(19)>
  # __result$_M_offset_490 = PHI <__result$_M_offset_77(8), __result$_M_offset_151(19)>
  # __result$_M_p_491 = PHI <__result$_M_p_78(8), __result$_M_p_156(19)>
  # DEBUG __result$_M_offset => __result$_M_offset_490
  # DEBUG __result$_M_p => __result$_M_p_491
  # DEBUG __last$8 => __last$8_462
  # DEBUG __last$_M_p => __last$_M_p_489
  # DEBUG __n => __n_461
  # DEBUG this => &__last
  # DEBUG D#20 => &__last.D.27293
  # DEBUG this => D#20
  # DEBUG __last$8 => __last$8_462 + 4294967295
  if (__last$8_462 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  __last$8_142 = __last$8_462 + 4294967295;
  pretmp_487 = 1 << __last$8_142;
  goto <bb 12>;

  <bb 11>:
  # DEBUG __last$8 => 63
  __last$_M_p_144 = __last$_M_p_489 + 18446744073709551608;
  # DEBUG __last$_M_p => __last$_M_p_144

  <bb 12>:
  # __last$_M_p_153 = PHI <__last$_M_p_489(10), __last$_M_p_144(11)>
  # __last$8_145 = PHI <__last$8_142(10), 63(11)>
  # prephitmp_13 = PHI <pretmp_487(10), 9223372036854775808(11)>
  # DEBUG __last$8 => __last$8_145
  # DEBUG __last$_M_p => __last$_M_p_153
  # DEBUG this => D#18
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_153
  # DEBUG __y => 1 << __last$8_145
  # DEBUG this => &__result
  # DEBUG D#20 => &__result.D.27293
  # DEBUG this => D#20
  # DEBUG __result$_M_offset => __result$_M_offset_490 + 4294967295
  if (__result$_M_offset_490 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  __result$_M_offset_148 = __result$_M_offset_490 + 4294967295;
  pretmp_172 = 1 << __result$_M_offset_148;
  goto <bb 15>;

  <bb 14>:
  # DEBUG __result$_M_offset => 63
  __result$_M_p_150 = __result$_M_p_491 + 18446744073709551608;
  # DEBUG __result$_M_p => __result$_M_p_150

  <bb 15>:
  # __result$_M_p_156 = PHI <__result$_M_p_491(13), __result$_M_p_150(14)>
  # __result$_M_offset_151 = PHI <__result$_M_offset_148(13), 63(14)>
  # prephitmp_165 = PHI <pretmp_172(13), 9223372036854775808(14)>
  # DEBUG __result$_M_offset => __result$_M_offset_151
  # DEBUG __result$_M_p => __result$_M_p_156
  # DEBUG this => D#18
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_156
  # DEBUG __y => 1 << __result$_M_offset_151
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  _154 = *__last$_M_p_153;
  _155 = prephitmp_13 & _154;
  # DEBUG this => NULL
  # DEBUG __x => _155 != 0
  if (_155 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _157 = *__result$_M_p_156;
  _158 = _157 | prephitmp_165;
  goto <bb 18>;

  <bb 17>:
  _159 = *__result$_M_p_156;
  _160 = ~prephitmp_165;
  _161 = _159 & _160;

  <bb 18>:
  # cstore_456 = PHI <_158(16), _161(17)>
  *__result$_M_p_156 = cstore_456;
  __n_162 = __n_461 + -1;
  # DEBUG __n => __n_162
  # DEBUG __result$_M_offset => __result$_M_offset_151
  # DEBUG __result$_M_p => __result$_M_p_156
  # DEBUG __last$8 => __last$8_145
  # DEBUG __last$_M_p => __last$_M_p_153
  # DEBUG __n => __n_162
  if (__n_162 <= 0)
    goto <bb 7>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 9>;

  <bb 20>:
  __n_63 = __n_62 + 64;
  # DEBUG __n => __n_63
  __last$_M_p_64 = __last$_M_p_61 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_64

  <bb 21>:
  # __n_65 = PHI <__n_62(7), __n_63(20)>
  # __last$_M_p_67 = PHI <__last$_M_p_61(7), __last$_M_p_64(20)>
  # DEBUG __tmp$_M_p => __last$_M_p_67
  # DEBUG __n => __n_65
  _66 = (unsigned int) __n_65;
  # DEBUG __tmp$_M_offset => _66
  # DEBUG D#22 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#22
  # DEBUG D#23 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#23
  # DEBUG __first => D#1759
  # DEBUG __first$D27293$_M_offset => D#1758
  # DEBUG __last$D27293$_M_p => __last$_M_p_67
  # DEBUG __last$D27293$_M_offset => _66
  # DEBUG __x => &__x
  # DEBUG __first$D27293$_M_p => D#1759
  # DEBUG __last$D27293$_M_p => __last$_M_p_67
  if (__last$_M_p_67 != __first_525)
    goto <bb 30>;
  else
    goto <bb 22>;

  <bb 22>:
  if (__x_548(D) != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  goto <bb 53>;

  <bb 24>:

  <bb 25>:
  # __first_478 = PHI <__first_525(24), __first_446(29)>
  # __first$8_472 = PHI <__first$8_480(24), __first$8_443(29)>
  # DEBUG __first$_M_offset => __first$8_472
  # DEBUG __first$_M_p => __first_478
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG __first$_M_offset => __first$8_472
  # DEBUG __first$_M_p => __first_478
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  _464 = _66 == __first$8_472;
  _463 = __last$_M_p_67 == __first_478;
  _460 = _463 & _464;
  if (_460 != 0)
    goto <bb 55>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _459 = 1 << __first$8_472;
  # DEBUG this => NULL
  # DEBUG __x => __first_478
  # DEBUG __y => _459
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _458 = *__first_478;
  _457 = ~_459;
  _453 = _458 & _457;
  *__first_478 = _453;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __first$8_472 + 1
  if (__first$8_472 == 63)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  __first$8_448 = __first$8_472 + 1;
  goto <bb 29>;

  <bb 28>:
  # DEBUG __first$_M_offset => 0
  __first_447 = __first_478 + 8;
  # DEBUG __first$_M_p => __first_447

  <bb 29>:
  # __first_446 = PHI <__first_478(27), __first_447(28)>
  # __first$8_443 = PHI <__first$8_448(27), 0(28)>
  goto <bb 25>;

  <bb 30>:
  _257 = (int) __x_548(D);
  _333 = -_257;
  __first_166 = __first_525 + 8;
  # DEBUG D#93 => &D.93195
  # DEBUG __first => __first_166
  # DEBUG __last => __last$_M_p_67
  # DEBUG D#92 => D#93
  # DEBUG __value => D#92
  # DEBUG __it => __last$_M_p_67
  # DEBUG __it => __last$_M_p_67
  # DEBUG __it => __first_166
  # DEBUG __it => __first_166
  # DEBUG D#56 => D#92
  # DEBUG __first => __first_166
  # DEBUG __last => __last$_M_p_67
  # DEBUG __value => D#56
  # DEBUG __tmp => _333
  # DEBUG __first => __first_166
  if (__last$_M_p_67 == __first_166)
    goto <bb 31>;
  else
    goto <bb 39>;

  <bb 31>:
  # DEBUG this => &D.93194
  # DEBUG __x => __first_166
  # DEBUG __y => 0
  # DEBUG D#17 => &D.93194.D.27293
  # DEBUG this => D#17
  # DEBUG __x => __first_166
  # DEBUG __y => 0
  # DEBUG this => D#17
  # DEBUG __first => D#1759
  # DEBUG __first$8 => D#1758
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => D#1759
  # DEBUG __first$_M_offset => D#1758
  if (__x_548(D) != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  goto <bb 44>;

  <bb 33>:

  <bb 34>:
  # __first_550 = PHI <__first_525(33), __first_515(38)>
  # __first$8_542 = PHI <__first$8_480(33), __first$8_509(38)>
  # DEBUG __first$_M_offset => __first$8_542
  # DEBUG __first$_M_p => __first_550
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  _316 = __first$8_542 == 0;
  _253 = __first_166 == __first_550;
  _504 = _316 & _253;
  if (_504 != 0)
    goto <bb 136>;
  else
    goto <bb 35>;

  <bb 35>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _503 = 1 << __first$8_542;
  # DEBUG this => NULL
  # DEBUG __x => __first_550
  # DEBUG __y => _503
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _502 = *__first_550;
  _501 = ~_503;
  _500 = _502 & _501;
  *__first_550 = _500;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __first$8_542 + 1
  if (__first$8_542 == 63)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG __first$_M_offset => 0
  __first_523 = __first_550 + 8;
  # DEBUG __first$_M_p => __first_523
  goto <bb 38>;

  <bb 37>:
  __first$8_517 = __first$8_542 + 1;

  <bb 38>:
  # __first_515 = PHI <__first_523(36), __first_550(37)>
  # __first$8_509 = PHI <0(36), __first$8_517(37)>
  goto <bb 34>;

  <bb 39>:
  pretmp_269 = (long unsigned int) _333;

  <bb 40>:
  # __first_492 = PHI <__first_166(39), __first_170(41)>
  # DEBUG __first => __first_492
  *__first_492 = pretmp_269;
  __first_170 = __first_492 + 8;
  # DEBUG __first => __first_170
  # DEBUG __first => __first_170
  if (__last$_M_p_67 == __first_170)
    goto <bb 31>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 40>;

  <bb 42>:
  __first$8_209 = __first$8_200 + 1;

  <bb 43>:
  # __first_192 = PHI <__first_198(42), __first_210(45)>
  # __first$8_231 = PHI <__first$8_209(42), 0(45)>

  <bb 44>:
  # __first_198 = PHI <__first_192(43), __first_525(32)>
  # __first$8_200 = PHI <__first$8_231(43), __first$8_480(32)>
  # DEBUG __first$_M_offset => __first$8_200
  # DEBUG __first$_M_p => __first_198
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  _56 = __first$8_200 == 0;
  _164 = __first_166 == __first_198;
  _561 = _56 & _164;
  if (_561 != 0)
    goto <bb 136>;
  else
    goto <bb 145>;

  <bb 45>:
  # DEBUG __first$_M_offset => 0
  __first_210 = __first_198 + 8;
  # DEBUG __first$_M_p => __first_210
  goto <bb 43>;

  <bb 46>:
  __first$_M_offset_190 = __first$_M_offset_181 + 1;

  <bb 47>:
  # __last$_M_p_212 = PHI <__last$_M_p_179(46), __last$_M_p_191(50)>
  # __first$_M_offset_211 = PHI <__first$_M_offset_190(46), 0(50)>

  <bb 48>:
  # __last$_M_p_179 = PHI <__last$_M_p_212(47), __last$_M_p_67(137)>
  # __first$_M_offset_181 = PHI <__first$_M_offset_211(47), 0(137)>
  # DEBUG __first$_M_offset => __first$_M_offset_181
  # DEBUG __first$_M_p => __last$_M_p_179
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  if (__last$_M_p_67 == __last$_M_p_179)
    goto <bb 49>;
  else
    goto <bb 146>;

  <bb 49>:
  # DEBUG __first$_M_offset => __first$_M_offset_181
  # DEBUG __first$_M_p => __last$_M_p_179
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  if (_66 == __first$_M_offset_181)
    goto <bb 147>;
  else
    goto <bb 146>;

  <bb 50>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_191 = __last$_M_p_179 + 8;
  # DEBUG __first$_M_p => __last$_M_p_191
  goto <bb 47>;

  <bb 51>:
  __first$8_228 = __first$8_219 + 1;

  <bb 52>:
  # __first_352 = PHI <__first_217(51), __first_229(54)>
  # __first$8_351 = PHI <__first$8_228(51), 0(54)>

  <bb 53>:
  # __first_217 = PHI <__first_525(23), __first_352(52)>
  # __first$8_219 = PHI <__first$8_480(23), __first$8_351(52)>
  # DEBUG __first$_M_offset => __first$8_219
  # DEBUG __first$_M_p => __first_217
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG __first$_M_offset => __first$8_219
  # DEBUG __first$_M_p => __first_217
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  _562 = _66 == __first$8_219;
  _213 = __last$_M_p_67 == __first_217;
  _214 = _213 & _562;
  if (_214 != 0)
    goto <bb 55>;
  else
    goto <bb 148>;

  <bb 54>:
  # DEBUG __first$_M_offset => 0
  __first_229 = __first_217 + 8;
  # DEBUG __first$_M_p => __first_229
  goto <bb 52>;

  <bb 55>:
  # DEBUG D#951 => &this_4(D)->D.43009._M_impl._M_finish
  # DEBUG this => D#951
  # DEBUG __i => __n.207_8
  # DEBUG D#21 => &D#951->D.27293
  # DEBUG this => D#21
  # DEBUG __i => __n.207_8
  # DEBUG D#1757 => MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_offset
  # DEBUG D#1756 => (long int) D#1757
  # DEBUG D#1755 => __n.207_8 + D#1756
  # DEBUG __n => D#1755
  # DEBUG __n => D#1755 % 64
  if (__n_73 < 0)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_p = __result$_M_p_72;
  goto <bb 58>;

  <bb 57>:
  __n_52 = __n_73 + 64;
  # DEBUG __n => __n_52
  _53 = __result$_M_p_72 + 18446744073709551608;
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_p = _53;

  <bb 58>:
  # __n_54 = PHI <__n_73(56), __n_52(57)>
  # DEBUG __n => __n_54
  _55 = (unsigned int) __n_54;
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_offset = _55;
  goto <bb 135>;

  <bb 59>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector<bool>::_M_fill_insert"
  # DEBUG D#820 => this_4(D)
  # DEBUG this => D#820
  # DEBUG D#819 => D#820
  # DEBUG __isize => 9223372036854775744
  # DEBUG D#818 => &D#819->D.43009
  # DEBUG this => D#818
  # DEBUG __a => D#817
  # DEBUG D#816 => D#817
  # DEBUG D#815 => D#816
  # DEBUG this => D#815
  # DEBUG __asize => NULL
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#118 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  # DEBUG this => D#25
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#25
  # DEBUG this => this_4(D)
  # DEBUG D#117 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  # DEBUG this => D#25
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _255 = 9223372036854775744 - _31;
  if (__n_2(D) > _255)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  std::__throw_length_error ("vector<bool>::_M_fill_insert");

  <bb 61>:
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#118 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  # DEBUG this => D#25
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#25
  # DEBUG this => this_4(D)
  # DEBUG D#117 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  # DEBUG this => D#25
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#118 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  # DEBUG this => D#25
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#25
  # DEBUG this => this_4(D)
  # DEBUG D#117 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  # DEBUG this => D#25
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  # DEBUG __a => &D.93288
  # DEBUG __b => &__n
  _128 = MAX_EXPR <__n_2(D), _31>;
  __len_259 = _31 + _128;
  # DEBUG __len => __len_259
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#118 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  # DEBUG this => D#25
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#25
  # DEBUG this => this_4(D)
  # DEBUG D#117 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  # DEBUG this => D#25
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  # DEBUG D#820 => this_4(D)
  # DEBUG this => D#820
  # DEBUG D#819 => D#820
  # DEBUG __isize => 9223372036854775744
  # DEBUG D#818 => &D#819->D.43009
  # DEBUG this => D#818
  # DEBUG __a => D#817
  # DEBUG D#816 => D#817
  # DEBUG D#815 => D#816
  # DEBUG this => D#815
  # DEBUG __asize => NULL
  _564 = __len_259 > 9223372036854775744;
  _566 = _31 > __len_259;
  _565 = _564 | _566;
  if (_565 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  pretmp_143 = __len_259 + 63;
  pretmp_149 = pretmp_143 >> 6;
  pretmp_563 = pretmp_149 * 8;

  <bb 63>:
  # prephitmp_147 = PHI <1152921504606846968(61), pretmp_563(62)>
  # DEBUG __len => NULL
  # DEBUG D#953 => &this_4(D)->D.43009
  # DEBUG D#828 => D#953
  # DEBUG __n => NULL
  # DEBUG this => D#828
  # DEBUG D#827 => D#828
  # DEBUG __n => NULL
  # DEBUG D#826 => &D#827->_M_impl
  # DEBUG D#825 => D#826
  # DEBUG __n => NULL
  # DEBUG __a => D#825
  # DEBUG D#824 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#823 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#822
  # DEBUG D.80902 => D#823
  # DEBUG D#821 => D#822
  # DEBUG D#815 => D#821
  # DEBUG this => D#815
  _81 = operator new (prephitmp_147);
  # DEBUG __q => _81
  # DEBUG __r => _81
  # DEBUG this => &__start
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG D#17 => &__start.D.27293
  # DEBUG this => D#17
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#17
  # DEBUG __start$_M_p => _81
  # DEBUG __start$_M_offset => 0
  # DEBUG this => &D.59997
  # DEBUG __x => &__position
  # DEBUG D#25 => &D.59997.D.27413
  # DEBUG this => D#25
  # DEBUG __x => D#1759
  # DEBUG __y => D#1758
  # DEBUG this => D#25
  # DEBUG this => this_4(D)
  SR.1518_100 = MEM[(struct vector *)this_4(D)];
  # DEBUG D#952 => MEM[(struct vector *)this_4(D) + 8B]
  # DEBUG this => &D.59996
  # DEBUG __x => &D.59995
  # DEBUG D#25 => &D.59996.D.27413
  # DEBUG this => D#25
  # DEBUG __x => SR.1518_100
  # DEBUG __y => D#952
  # DEBUG this => D#25
  # DEBUG D.80975 => D#952
  # DEBUG D#938 => this_4(D)
  # DEBUG D#939 => D.59996
  # DEBUG D#940 => D.59997
  # DEBUG D#940 => D.59997
  # DEBUG D#941 => __start
  # DEBUG this => D#938
  # DEBUG __last$D27413$_M_p => D#1759
  # DEBUG __first => SR.1518_100
  # DEBUG __last => D#1759
  # DEBUG __result => _81
  # DEBUG __it => D#1759
  # DEBUG __it => D#1759
  # DEBUG __it => SR.1518_100
  # DEBUG __it => SR.1518_100
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  # DEBUG __it => _81
  # DEBUG __it => _81
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  __last.214_235 = (long int) __first_525;
  __first.215_236 = (long int) SR.1518_100;
  _237 = __last.214_235 - __first.215_236;
  _Num_238 = _237 /[ex] 8;
  # DEBUG _Num => _Num_238
  if (_Num_238 != 0)
    goto <bb 65>;
  else
    goto <bb 64>;

  <bb 64>:
  pretmp_422 = (long unsigned int) _237;
  goto <bb 66>;

  <bb 65>:
  _239 = (long unsigned int) _237;
  __builtin_memmove (_81, SR.1518_100, _239);

  <bb 66>:
  # prephitmp_439 = PHI <pretmp_422(64), _239(65)>
  __i$D27293$_M_p_241 = _81 + prephitmp_439;
  # DEBUG __q => __i$D27293$_M_p_241
  # DEBUG this => NULL
  # DEBUG __x => __i$D27293$_M_p_241
  # DEBUG __y => 0
  # DEBUG this => D#17
  # DEBUG __x => __i$D27293$_M_p_241
  # DEBUG __y => 0
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __x => D#1759
  # DEBUG __y => 0
  # DEBUG this => D#24
  # DEBUG __x => D#1759
  # DEBUG __y => 0
  # DEBUG this => D#24
  # DEBUG D#936 => __last
  # DEBUG D#936 => __last
  # DEBUG __it$D27413$_M_p => D#1759
  # DEBUG __it$D27413$_M_offset => D#1758
  # DEBUG __it$D27413$_M_p => D#1759
  # DEBUG __it$D27413$_M_offset => 0
  # DEBUG __it$D27293$_M_p => __i$D27293$_M_p_241
  # DEBUG __it$D27293$_M_offset => 0
  # DEBUG __it$D27413$_M_p => D#1759
  # DEBUG __it$D27413$_M_offset => D#1758
  # DEBUG __it$D27413$_M_p => D#1759
  # DEBUG __it$D27413$_M_offset => 0
  # DEBUG __result => __i$D27293$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG __simple => 0
  # DEBUG __result => __i$D27293$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG __first$_M_p => D#1759
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __i$D27293$_M_p_241
  # DEBUG __result$8 => 0
  # DEBUG D#14 => &__last.D.27413
  # DEBUG D#14 => &__last.D.27413
  # DEBUG D#15 => &__first.D.27413
  # DEBUG D#15 => &__first.D.27413
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  __n_276 = (_Distance) __first$8_480;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __i$D27293$_M_p_241
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => D#1759
  # DEBUG __n => __n_276
  if (__n_276 == 0)
    goto <bb 80>;
  else
    goto <bb 67>;

  <bb 67>:

  <bb 68>:
  # __n_495 = PHI <__n_276(67), __n_298(78)>
  # __first$8_496 = PHI <0(67), __first$8_300(78)>
  # __first_175 = PHI <__first_525(67), __first_299(78)>
  # __i$D27293$_M_offset_466 = PHI <0(67), __i$D27293$_M_offset_302(78)>
  # __i$D27293$_M_p_510 = PHI <__i$D27293$_M_p_241(67), __i$D27293$_M_p_301(78)>
  # DEBUG __result$8 => __i$D27293$_M_offset_466
  # DEBUG __result$_M_p => __i$D27293$_M_p_510
  # DEBUG __first$8 => __first$8_496
  # DEBUG __first$_M_p => __first_175
  # DEBUG __n => __n_495
  # DEBUG D#26 => &__first
  # DEBUG D#26 => &__first
  # DEBUG this => D#26
  # DEBUG this => D#26
  _282 = 1 << __first$8_496;
  # DEBUG this => NULL
  # DEBUG __x => __first_175
  # DEBUG __y => _282
  # DEBUG this => NULL
  _284 = *__first_175;
  _285 = _282 & _284;
  # DEBUG D#18 => &__result
  # DEBUG D#18 => &__result
  # DEBUG this => D#18
  # DEBUG this => D#18
  _287 = 1 << __i$D27293$_M_offset_466;
  # DEBUG this => NULL
  # DEBUG __x => __i$D27293$_M_p_510
  # DEBUG __y => _287
  # DEBUG this => NULL
  # DEBUG __x => _285 != 0
  if (_285 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _289 = *__i$D27293$_M_p_510;
  _290 = _287 | _289;
  goto <bb 71>;

  <bb 70>:
  _291 = *__i$D27293$_M_p_510;
  _292 = ~_287;
  _293 = _291 & _292;

  <bb 71>:
  # cstore_499 = PHI <_290(69), _293(70)>
  *__i$D27293$_M_p_510 = cstore_499;
  # DEBUG this => &__first
  # DEBUG D#27 => &__first.D.27413
  # DEBUG this => D#27
  # DEBUG __first$8 => __first$8_496 + 1
  if (__first$8_496 == 63)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 72>:
  __first$8_294 = __first$8_496 + 1;
  goto <bb 74>;

  <bb 73>:
  # DEBUG __first$8 => 0
  __first_295 = __first_175 + 8;
  # DEBUG __first$_M_p => __first_295

  <bb 74>:
  # __first_299 = PHI <__first_175(72), __first_295(73)>
  # __first$8_300 = PHI <__first$8_294(72), 0(73)>
  # DEBUG __first$8 => __first$8_300
  # DEBUG __first$_M_p => __first_299
  # DEBUG this => &__result
  # DEBUG D#19 => &__result.D.27293
  # DEBUG this => D#19
  # DEBUG __result$8 => __i$D27293$_M_offset_466 + 1
  if (__i$D27293$_M_offset_466 == 63)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  __i$D27293$_M_offset_296 = __i$D27293$_M_offset_466 + 1;
  goto <bb 77>;

  <bb 76>:
  # DEBUG __result$8 => 0
  __i$D27293$_M_p_297 = __i$D27293$_M_p_510 + 8;
  # DEBUG __result$_M_p => __i$D27293$_M_p_297

  <bb 77>:
  # __i$D27293$_M_p_301 = PHI <__i$D27293$_M_p_510(75), __i$D27293$_M_p_297(76)>
  # __i$D27293$_M_offset_302 = PHI <__i$D27293$_M_offset_296(75), 0(76)>
  # DEBUG __result$8 => __i$D27293$_M_offset_302
  # DEBUG __result$_M_p => __i$D27293$_M_p_301
  __n_298 = __n_495 + -1;
  # DEBUG __n => __n_298
  # DEBUG __result$8 => __i$D27293$_M_offset_302
  # DEBUG __result$_M_p => __i$D27293$_M_p_301
  # DEBUG __first$8 => __first$8_300
  # DEBUG __first$_M_p => __first_299
  # DEBUG __n => __n_298
  if (__n_298 == 0)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  goto <bb 68>;

  <bb 79>:
  # __i$D27293$_M_p_494 = PHI <__i$D27293$_M_p_301(77)>
  # __i$D27293$_M_offset_493 = PHI <__i$D27293$_M_offset_302(77)>
  pretmp_437 = (long int) __i$D27293$_M_offset_493;

  <bb 80>:
  # __i$D27293$_M_offset_315 = PHI <__i$D27293$_M_offset_493(79), 0(66)>
  # __i$D27293$_M_p_511 = PHI <__i$D27293$_M_p_494(79), __i$D27293$_M_p_241(66)>
  # prephitmp_444 = PHI <pretmp_437(79), 0(66)>
  # DEBUG __result => __i$D27293$_M_p_511
  # DEBUG __result$8 => __i$D27293$_M_offset_315
  # DEBUG __i$D27293$_M_p => __i$D27293$_M_p_511
  # DEBUG __i$D27293$_M_offset => __i$D27293$_M_offset_315
  # DEBUG __i => __i$D27293$_M_p_511
  # DEBUG __i$8 => __i$D27293$_M_offset_315
  __n.207_16 = (long int) __n_2(D);
  # DEBUG this => &__i
  # DEBUG __i => __n.207_16
  # DEBUG __tmp$_M_p => __i$D27293$_M_p_511
  # DEBUG __tmp$_M_offset => __i$D27293$_M_offset_315
  # DEBUG this => &__tmp
  # DEBUG __i => __n.207_16
  # DEBUG D#21 => &__tmp.D.27293
  # DEBUG this => D#21
  # DEBUG __i => __n.207_16
  __n_88 = __n.207_16 + prephitmp_444;
  # DEBUG __n => __n_88
  _89 = __n_88 / 64;
  _90 = (long unsigned int) _89;
  _91 = _90 * 8;
  __last$_M_p_92 = __i$D27293$_M_p_511 + _91;
  # DEBUG __tmp$_M_p => __last$_M_p_92
  __n_93 = __n_88 % 64;
  # DEBUG __n => __n_93
  if (__n_93 < 0)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  __n_94 = __n_93 + 64;
  # DEBUG __n => __n_94
  __last$_M_p_95 = __last$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_95

  <bb 82>:
  # __n_96 = PHI <__n_93(80), __n_94(81)>
  # __last$_M_p_98 = PHI <__last$_M_p_92(80), __last$_M_p_95(81)>
  # DEBUG __tmp$_M_p => __last$_M_p_98
  # DEBUG __n => __n_96
  _97 = (unsigned int) __n_96;
  # DEBUG __tmp$_M_offset => _97
  # DEBUG D#22 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#22
  # DEBUG D#23 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#23
  # DEBUG __first$D27293$_M_p => __i$D27293$_M_p_511
  # DEBUG __first$D27293$_M_offset => __i$D27293$_M_offset_315
  # DEBUG __last$D27293$_M_p => __last$_M_p_98
  # DEBUG __last$D27293$_M_offset => _97
  # DEBUG __x => &__x
  # DEBUG __first$D27293$_M_p => __i$D27293$_M_p_511
  # DEBUG __last$D27293$_M_p => __last$_M_p_98
  if (__last$_M_p_98 != __i$D27293$_M_p_511)
    goto <bb 91>;
  else
    goto <bb 83>;

  <bb 83>:
  if (__x_548(D) != 0)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  goto <bb 114>;

  <bb 85>:

  <bb 86>:
  # __i$D27293$_M_p_242 = PHI <__last$_M_p_98(85), __i$D27293$_M_p_136(90)>
  # __i$D27293$_M_offset_234 = PHI <__i$D27293$_M_offset_315(85), __i$D27293$_M_offset_132(90)>
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_234
  # DEBUG __first$_M_p => __i$D27293$_M_p_242
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_234
  # DEBUG __first$_M_p => __i$D27293$_M_p_242
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  _232 = _97 == __i$D27293$_M_offset_234;
  _230 = __last$_M_p_98 == __i$D27293$_M_p_242;
  _215 = _232 & _230;
  if (_215 != 0)
    goto <bb 116>;
  else
    goto <bb 87>;

  <bb 87>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _196 = 1 << __i$D27293$_M_offset_234;
  # DEBUG this => NULL
  # DEBUG __x => __i$D27293$_M_p_242
  # DEBUG __y => _196
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _195 = *__i$D27293$_M_p_242;
  _193 = ~_196;
  _180 = _195 & _193;
  *__i$D27293$_M_p_242 = _180;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_234 + 1
  if (__i$D27293$_M_offset_234 == 63)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  __i$D27293$_M_offset_163 = __i$D27293$_M_offset_234 + 1;
  goto <bb 90>;

  <bb 89>:
  # DEBUG __first$_M_offset => 0
  __i$D27293$_M_p_140 = __i$D27293$_M_p_242 + 8;
  # DEBUG __first$_M_p => __i$D27293$_M_p_140

  <bb 90>:
  # __i$D27293$_M_p_136 = PHI <__i$D27293$_M_p_242(88), __i$D27293$_M_p_140(89)>
  # __i$D27293$_M_offset_132 = PHI <__i$D27293$_M_offset_163(88), 0(89)>
  goto <bb 86>;

  <bb 91>:
  _131 = (int) __x_548(D);
  _370 = -_131;
  __first_306 = __i$D27293$_M_p_511 + 8;
  # DEBUG D#93 => &D.93364
  # DEBUG __first => __first_306
  # DEBUG __last => __last$_M_p_98
  # DEBUG D#92 => D#93
  # DEBUG __value => D#92
  # DEBUG __it => __last$_M_p_98
  # DEBUG __it => __last$_M_p_98
  # DEBUG __it => __first_306
  # DEBUG __it => __first_306
  # DEBUG D#56 => D#92
  # DEBUG __first => __first_306
  # DEBUG __last => __last$_M_p_98
  # DEBUG __value => D#56
  # DEBUG __tmp => _370
  # DEBUG __first => __first_306
  if (__last$_M_p_98 == __first_306)
    goto <bb 92>;
  else
    goto <bb 100>;

  <bb 92>:
  # DEBUG this => &D.93363
  # DEBUG __x => __first_306
  # DEBUG __y => 0
  # DEBUG D#17 => &D.93363.D.27293
  # DEBUG this => D#17
  # DEBUG __x => __first_306
  # DEBUG __y => 0
  # DEBUG this => D#17
  # DEBUG __first => __i$D27293$_M_p_511
  # DEBUG __first$8 => __i$D27293$_M_offset_315
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __i$D27293$_M_p_511
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_315
  if (__x_548(D) != 0)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  goto <bb 105>;

  <bb 94>:

  <bb 95>:
  # __i$D27293$_M_p_341 = PHI <__i$D27293$_M_p_511(94), __i$D27293$_M_p_265(99)>
  # __i$D27293$_M_offset_336 = PHI <__i$D27293$_M_offset_315(94), __i$D27293$_M_offset_264(99)>
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_336
  # DEBUG __first$_M_p => __i$D27293$_M_p_341
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  _322 = __i$D27293$_M_offset_336 == 0;
  _320 = __first_306 == __i$D27293$_M_p_341;
  _318 = _320 & _322;
  if (_318 != 0)
    goto <bb 149>;
  else
    goto <bb 96>;

  <bb 96>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _313 = 1 << __i$D27293$_M_offset_336;
  # DEBUG this => NULL
  # DEBUG __x => __i$D27293$_M_p_341
  # DEBUG __y => _313
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _311 = *__i$D27293$_M_p_341;
  _308 = ~_313;
  _307 = _311 & _308;
  *__i$D27293$_M_p_341 = _307;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_336 + 1
  if (__i$D27293$_M_offset_336 == 63)
    goto <bb 97>;
  else
    goto <bb 98>;

  <bb 97>:
  # DEBUG __first$_M_offset => 0
  __i$D27293$_M_p_268 = __i$D27293$_M_p_341 + 8;
  # DEBUG __first$_M_p => __i$D27293$_M_p_268
  goto <bb 99>;

  <bb 98>:
  __i$D27293$_M_offset_267 = __i$D27293$_M_offset_336 + 1;

  <bb 99>:
  # __i$D27293$_M_p_265 = PHI <__i$D27293$_M_p_268(97), __i$D27293$_M_p_341(98)>
  # __i$D27293$_M_offset_264 = PHI <0(97), __i$D27293$_M_offset_267(98)>
  goto <bb 95>;

  <bb 100>:
  pretmp_522 = (long unsigned int) _370;

  <bb 101>:
  # __first_171 = PHI <__first_306(100), __first_310(102)>
  # DEBUG __first => __first_171
  *__first_171 = pretmp_522;
  __first_310 = __first_171 + 8;
  # DEBUG __first => __first_310
  # DEBUG __first => __first_310
  if (__last$_M_p_98 == __first_310)
    goto <bb 92>;
  else
    goto <bb 102>;

  <bb 102>:
  goto <bb 101>;

  <bb 103>:
  __i$D27293$_M_offset_349 = __i$D27293$_M_offset_340 + 1;

  <bb 104>:
  # __i$D27293$_M_p_99 = PHI <__i$D27293$_M_p_338(103), __i$D27293$_M_p_350(106)>
  # __i$D27293$_M_offset_127 = PHI <__i$D27293$_M_offset_349(103), 0(106)>

  <bb 105>:
  # __i$D27293$_M_p_338 = PHI <__i$D27293$_M_p_99(104), __i$D27293$_M_p_511(93)>
  # __i$D27293$_M_offset_340 = PHI <__i$D27293$_M_offset_127(104), __i$D27293$_M_offset_315(93)>
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_340
  # DEBUG __first$_M_p => __i$D27293$_M_p_338
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  _568 = __i$D27293$_M_offset_340 == 0;
  _567 = __first_306 == __i$D27293$_M_p_338;
  _558 = _567 & _568;
  if (_558 != 0)
    goto <bb 149>;
  else
    goto <bb 158>;

  <bb 106>:
  # DEBUG __first$_M_offset => 0
  __i$D27293$_M_p_350 = __i$D27293$_M_p_338 + 8;
  # DEBUG __first$_M_p => __i$D27293$_M_p_350
  goto <bb 104>;

  <bb 107>:
  __first$_M_offset_330 = __first$_M_offset_321 + 1;

  <bb 108>:
  # __last$_M_p_332 = PHI <__last$_M_p_319(107), __last$_M_p_331(111)>
  # __first$_M_offset_371 = PHI <__first$_M_offset_330(107), 0(111)>

  <bb 109>:
  # __last$_M_p_319 = PHI <__last$_M_p_332(108), __last$_M_p_98(150)>
  # __first$_M_offset_321 = PHI <__first$_M_offset_371(108), 0(150)>
  # DEBUG __first$_M_offset => __first$_M_offset_321
  # DEBUG __first$_M_p => __last$_M_p_319
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  if (__last$_M_p_98 == __last$_M_p_319)
    goto <bb 110>;
  else
    goto <bb 160>;

  <bb 110>:
  # DEBUG __first$_M_offset => __first$_M_offset_321
  # DEBUG __first$_M_p => __last$_M_p_319
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  if (_97 == __first$_M_offset_321)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 111>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_331 = __last$_M_p_319 + 8;
  # DEBUG __first$_M_p => __last$_M_p_331
  goto <bb 108>;

  <bb 112>:
  __i$D27293$_M_offset_368 = __i$D27293$_M_offset_359 + 1;

  <bb 113>:
  # __i$D27293$_M_p_129 = PHI <__i$D27293$_M_p_357(112), __i$D27293$_M_p_369(115)>
  # __i$D27293$_M_offset_130 = PHI <__i$D27293$_M_offset_368(112), 0(115)>

  <bb 114>:
  # __i$D27293$_M_p_357 = PHI <__last$_M_p_98(84), __i$D27293$_M_p_129(113)>
  # __i$D27293$_M_offset_359 = PHI <__i$D27293$_M_offset_315(84), __i$D27293$_M_offset_130(113)>
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_359
  # DEBUG __first$_M_p => __i$D27293$_M_p_357
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_359
  # DEBUG __first$_M_p => __i$D27293$_M_p_357
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  _15 = _97 == __i$D27293$_M_offset_359;
  _560 = __last$_M_p_98 == __i$D27293$_M_p_357;
  _559 = _15 & _560;
  if (_559 != 0)
    goto <bb 116>;
  else
    goto <bb 161>;

  <bb 115>:
  # DEBUG __first$_M_offset => 0
  __i$D27293$_M_p_369 = __i$D27293$_M_p_357 + 8;
  # DEBUG __first$_M_p => __i$D27293$_M_p_369
  goto <bb 113>;

  <bb 116>:
  # DEBUG this => &__i
  # DEBUG __i => __n.207_16
  # DEBUG __tmp$_M_p => __i$D27293$_M_p_511
  # DEBUG __tmp$_M_offset => __i$D27293$_M_offset_315
  # DEBUG this => &__tmp
  # DEBUG __i => __n.207_16
  # DEBUG D#21 => &__tmp.D.27293
  # DEBUG this => D#21
  # DEBUG __i => __n.207_16
  # DEBUG __n => __n_88
  # DEBUG __tmp$_M_p => __last$_M_p_92
  # DEBUG __n => __n_93
  if (__n_93 < 0)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  __n_82 = __n_93 + 64;
  # DEBUG __n => __n_82
  __last$_M_p_83 = __last$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_83

  <bb 118>:
  # __n_84 = PHI <__n_93(116), __n_82(117)>
  # __last$_M_p_86 = PHI <__last$_M_p_92(116), __last$_M_p_83(117)>
  # DEBUG __tmp$_M_p => __last$_M_p_86
  # DEBUG __n => __n_84
  __result$8_85 = (const unsigned int) __n_84;
  # DEBUG __tmp$_M_offset => __result$8_85
  # DEBUG D#22 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#22
  # DEBUG D#23 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#23
  # DEBUG this => this_4(D)
  __it$D27293$_M_p_111 = MEM[(struct vector *)this_4(D) + 16B];
  __it$D27293$_M_offset_112 = MEM[(struct vector *)this_4(D) + 24B];
  # DEBUG D#834 => __position
  # DEBUG D#834 => __position
  # DEBUG D#835 => D.69198
  # DEBUG D#835 => D.69198
  # DEBUG D#836 => D.69197
  # DEBUG D#836 => D.69197
  # DEBUG __it$D27293$_M_p => __it$D27293$_M_p_111
  # DEBUG __it$D27293$_M_offset => __it$D27293$_M_offset_112
  # DEBUG __it$D27293$_M_p => D#1759
  # DEBUG __it$D27293$_M_offset => D#1758
  # DEBUG __it$D27293$_M_p => __last$_M_p_86
  # DEBUG __it$D27293$_M_offset => __result$8_85
  # DEBUG __it$D27293$_M_p => __it$D27293$_M_p_111
  # DEBUG __it$D27293$_M_offset => __it$D27293$_M_offset_112
  # DEBUG __it$D27293$_M_p => D#1759
  # DEBUG __it$D27293$_M_offset => D#1758
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => D#1759
  # DEBUG __first$8 => D#1758
  # DEBUG __result$_M_p => __last$_M_p_86
  # DEBUG __result$8 => __result$8_85
  # DEBUG D#14 => &__last.D.27293
  # DEBUG D#14 => &__last.D.27293
  # DEBUG D#15 => &__first.D.27293
  # DEBUG D#15 => &__first.D.27293
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _391 = (long int) __it$D27293$_M_p_111;
  _393 = _391 - __last.214_235;
  _394 = _393 * 8;
  _395 = (long int) __it$D27293$_M_offset_112;
  _396 = _394 + _395;
  __n_398 = _396 - __n_276;
  # DEBUG __n => NULL
  # DEBUG __result$8 => __result$8_85
  # DEBUG __result$_M_p => __last$_M_p_86
  # DEBUG __first$8 => D#1758
  # DEBUG __first$_M_p => D#1759
  # DEBUG __n => __n_398
  if (__n_398 <= 0)
    goto <bb 132>;
  else
    goto <bb 119>;

  <bb 119>:

  <bb 120>:
  # __n_470 = PHI <__n_398(119), __n_417(131)>
  # __first$8_471 = PHI <__first$8_480(119), __first$8_419(131)>
  # __result$8_473 = PHI <__result$8_85(119), __result$8_421(131)>
  # __first_530 = PHI <__first_525(119), __first_418(131)>
  # __last$_M_p_531 = PHI <__last$_M_p_86(119), __last$_M_p_420(131)>
  # DEBUG __result$8 => __result$8_473
  # DEBUG __result$_M_p => __last$_M_p_531
  # DEBUG __first$8 => __first$8_471
  # DEBUG __first$_M_p => __first_530
  # DEBUG __n => __n_470
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _401 = 1 << __first$8_471;
  # DEBUG this => NULL
  # DEBUG __x => __first_530
  # DEBUG __y => _401
  # DEBUG D#18 => &__result
  # DEBUG D#18 => &__result
  # DEBUG this => D#18
  # DEBUG this => D#18
  _403 = 1 << __result$8_473;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_531
  # DEBUG __y => _403
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  _405 = *__first_530;
  _406 = _401 & _405;
  # DEBUG this => NULL
  # DEBUG __x => _406 != 0
  if (_406 != 0)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  _408 = *__last$_M_p_531;
  _409 = _403 | _408;
  goto <bb 123>;

  <bb 122>:
  _410 = *__last$_M_p_531;
  _411 = ~_403;
  _412 = _410 & _411;

  <bb 123>:
  # cstore_539 = PHI <_409(121), _412(122)>
  *__last$_M_p_531 = cstore_539;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$8 => __first$8_471 + 1
  if (__first$8_471 == 63)
    goto <bb 125>;
  else
    goto <bb 124>;

  <bb 124>:
  __first$8_413 = __first$8_471 + 1;
  goto <bb 126>;

  <bb 125>:
  # DEBUG __first$8 => 0
  __first_414 = __first_530 + 8;
  # DEBUG __first$_M_p => __first_414

  <bb 126>:
  # __first_418 = PHI <__first_530(124), __first_414(125)>
  # __first$8_419 = PHI <__first$8_413(124), 0(125)>
  # DEBUG __first$8 => __first$8_419
  # DEBUG __first$_M_p => __first_418
  # DEBUG this => &__result
  # DEBUG D#19 => &__result.D.27293
  # DEBUG this => D#19
  # DEBUG __result$8 => __result$8_473 + 1
  if (__result$8_473 == 63)
    goto <bb 128>;
  else
    goto <bb 127>;

  <bb 127>:
  __result$8_415 = __result$8_473 + 1;
  goto <bb 129>;

  <bb 128>:
  # DEBUG __result$8 => 0
  __last$_M_p_416 = __last$_M_p_531 + 8;
  # DEBUG __result$_M_p => __last$_M_p_416

  <bb 129>:
  # __last$_M_p_420 = PHI <__last$_M_p_531(127), __last$_M_p_416(128)>
  # __result$8_421 = PHI <__result$8_415(127), 0(128)>
  # DEBUG __result$8 => __result$8_421
  # DEBUG __result$_M_p => __last$_M_p_420
  __n_417 = __n_470 + -1;
  # DEBUG __n => __n_417
  # DEBUG __result$8 => __result$8_421
  # DEBUG __result$_M_p => __last$_M_p_420
  # DEBUG __first$8 => __first$8_419
  # DEBUG __first$_M_p => __first_418
  # DEBUG __n => __n_417
  if (__n_417 <= 0)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # __last$_M_p_486 = PHI <__last$_M_p_420(129)>
  # __result$8_485 = PHI <__result$8_421(129)>
  goto <bb 132>;

  <bb 131>:
  goto <bb 120>;

  <bb 132>:
  # __result$8_529 = PHI <__result$8_485(130), __result$8_85(118)>
  # __last$_M_p_532 = PHI <__last$_M_p_486(130), __last$_M_p_86(118)>
  MEM[(struct _Bit_iterator *)this_4(D) + 16B] = __last$_M_p_532;
  MEM[(struct _Bit_iterator *)this_4(D) + 24B] = __result$8_529;
  # DEBUG D#1752 => &this_4(D)->D.43009
  # DEBUG this => D#1752
  if (SR.1518_100 != 0B)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#348 => &D#1752->_M_impl
  _373 = MEM[(long unsigned int * *)this_4(D) + 32B];
  # DEBUG D#219 => D#348
  # DEBUG this => D#219
  _375 = (long int) _373;
  _376 = (long int) SR.1518_100;
  _377 = _375 - _376;
  # DEBUG D#351 => _377 /[ex] 8
  # DEBUG D#350 => (const size_t) D#351
  # DEBUG __n => D#350
  _378 = (long unsigned int) _377;
  _379 = -_378;
  _380 = _373 + _379;
  # DEBUG D#349 => &D#1752->_M_impl
  # DEBUG D#346 => D#349
  # DEBUG D#347 => D#350
  # DEBUG __p => _380
  # DEBUG __a => D#346
  # DEBUG __n => D#347
  # DEBUG D#345 => D#347
  # DEBUG D#344 => D#346
  # DEBUG D#342 => D#344
  # DEBUG D#343 => D#345
  # DEBUG __p => _380
  # DEBUG this => D#342
  # DEBUG D.93417 => D#343
  operator delete (_380);

  <bb 134>:
  # DEBUG __n => NULL
  _20 = _81 + prephitmp_147;
  this_4(D)->D.43009._M_impl._M_end_of_storage = _20;
  MEM[(struct _Bit_iterator *)this_4(D)] = _81;
  MEM[(struct _Bit_iterator *)this_4(D) + 8B] = 0;
  # DEBUG D#943 => {CLOBBER}
  # DEBUG __start$_M_p => D#943
  # DEBUG D#944 => {CLOBBER}
  # DEBUG __start$_M_offset => D#944
  # DEBUG D#1753 => {CLOBBER}
  # DEBUG __i$D27293$_M_p => D#1753
  # DEBUG D#1754 => {CLOBBER}
  # DEBUG __i$D27293$_M_offset => D#1754
  # DEBUG D#945 => {CLOBBER}
  # DEBUG __i => D#945
  # DEBUG D#946 => {CLOBBER}
  # DEBUG __i$8 => D#946

  <bb 135>:
  return;

  <bb 136>:
  D.93194 ={v} {CLOBBER};
  # DEBUG this => &D.93193
  # DEBUG __x => __last$_M_p_67
  # DEBUG __y => 0
  # DEBUG D#17 => &D.93193.D.27293
  # DEBUG this => D#17
  # DEBUG __x => __last$_M_p_67
  # DEBUG __y => 0
  # DEBUG this => D#17
  # DEBUG __last$_M_p => __last$_M_p_67
  # DEBUG __last$_M_offset => _66
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __last$_M_p_67
  # DEBUG __first$_M_offset => 0
  if (__x_548(D) != 0)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  goto <bb 48>;

  <bb 138>:

  <bb 139>:
  # __last$_M_p_508 = PHI <__last$_M_p_67(138), __last$_M_p_553(144)>
  # __first$_M_offset_505 = PHI <0(138), __first$_M_offset_552(144)>
  # DEBUG __first$_M_offset => __first$_M_offset_505
  # DEBUG __first$_M_p => __last$_M_p_508
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  if (__last$_M_p_67 == __last$_M_p_508)
    goto <bb 140>;
  else
    goto <bb 141>;

  <bb 140>:
  # DEBUG __first$_M_offset => __first$_M_offset_505
  # DEBUG __first$_M_p => __last$_M_p_508
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  if (_66 == __first$_M_offset_505)
    goto <bb 147>;
  else
    goto <bb 141>;

  <bb 141>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _260 = 1 << __first$_M_offset_505;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_508
  # DEBUG __y => _260
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _534 = *__last$_M_p_508;
  _549 = ~_260;
  _304 = _534 & _549;
  *__last$_M_p_508 = _304;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __first$_M_offset_505 + 1
  if (__first$_M_offset_505 == 63)
    goto <bb 143>;
  else
    goto <bb 142>;

  <bb 142>:
  __first$_M_offset_173 = __first$_M_offset_505 + 1;
  goto <bb 144>;

  <bb 143>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_554 = __last$_M_p_508 + 8;
  # DEBUG __first$_M_p => __last$_M_p_554

  <bb 144>:
  # __last$_M_p_553 = PHI <__last$_M_p_508(142), __last$_M_p_554(143)>
  # __first$_M_offset_552 = PHI <__first$_M_offset_173(142), 0(143)>
  goto <bb 139>;

  <bb 145>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _203 = 1 << __first$8_200;
  # DEBUG this => NULL
  # DEBUG __x => __first_198
  # DEBUG __y => _203
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _204 = *__first_198;
  _205 = _203 | _204;
  *__first_198 = _205;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __first$8_200 + 1
  if (__first$8_200 == 63)
    goto <bb 45>;
  else
    goto <bb 42>;

  <bb 146>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _184 = 1 << __first$_M_offset_181;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_179
  # DEBUG __y => _184
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _185 = *__last$_M_p_179;
  _186 = _184 | _185;
  *__last$_M_p_179 = _186;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __first$_M_offset_181 + 1
  if (__first$_M_offset_181 == 63)
    goto <bb 50>;
  else
    goto <bb 46>;

  <bb 147>:
  D.93193 ={v} {CLOBBER};
  goto <bb 55>;

  <bb 148>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _222 = 1 << __first$8_219;
  # DEBUG this => NULL
  # DEBUG __x => __first_217
  # DEBUG __y => _222
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _223 = *__first_217;
  _224 = _222 | _223;
  *__first_217 = _224;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __first$8_219 + 1
  if (__first$8_219 == 63)
    goto <bb 54>;
  else
    goto <bb 51>;

  <bb 149>:
  D.93363 ={v} {CLOBBER};
  # DEBUG this => &D.93362
  # DEBUG __x => __last$_M_p_98
  # DEBUG __y => 0
  # DEBUG D#17 => &D.93362.D.27293
  # DEBUG this => D#17
  # DEBUG __x => __last$_M_p_98
  # DEBUG __y => 0
  # DEBUG this => D#17
  # DEBUG __last$_M_p => __last$_M_p_98
  # DEBUG __last$_M_offset => _97
  # DEBUG __x => __x_548(D)
  # DEBUG __first$_M_p => __last$_M_p_98
  # DEBUG __first$_M_offset => 0
  if (__x_548(D) != 0)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  goto <bb 109>;

  <bb 151>:

  <bb 152>:
  # __last$_M_p_435 = PHI <__last$_M_p_98(151), __last$_M_p_383(157)>
  # __first$_M_offset_434 = PHI <0(151), __first$_M_offset_374(157)>
  # DEBUG __first$_M_offset => __first$_M_offset_434
  # DEBUG __first$_M_p => __last$_M_p_435
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  if (__last$_M_p_98 == __last$_M_p_435)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  # DEBUG __first$_M_offset => __first$_M_offset_434
  # DEBUG __first$_M_p => __last$_M_p_435
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  # DEBUG this => &__first.D.27293
  # DEBUG __i => &__last.D.27293
  if (_97 == __first$_M_offset_434)
    goto <bb 159>;
  else
    goto <bb 154>;

  <bb 154>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _428 = 1 << __first$_M_offset_434;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_435
  # DEBUG __y => _428
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _426 = *__last$_M_p_435;
  _424 = ~_428;
  _423 = _426 & _424;
  *__last$_M_p_435 = _423;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __first$_M_offset_434 + 1
  if (__first$_M_offset_434 == 63)
    goto <bb 156>;
  else
    goto <bb 155>;

  <bb 155>:
  __first$_M_offset_399 = __first$_M_offset_434 + 1;
  goto <bb 157>;

  <bb 156>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_384 = __last$_M_p_435 + 8;
  # DEBUG __first$_M_p => __last$_M_p_384

  <bb 157>:
  # __last$_M_p_383 = PHI <__last$_M_p_435(155), __last$_M_p_384(156)>
  # __first$_M_offset_374 = PHI <__first$_M_offset_399(155), 0(156)>
  goto <bb 152>;

  <bb 158>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _343 = 1 << __i$D27293$_M_offset_340;
  # DEBUG this => NULL
  # DEBUG __x => __i$D27293$_M_p_338
  # DEBUG __y => _343
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _344 = *__i$D27293$_M_p_338;
  _345 = _343 | _344;
  *__i$D27293$_M_p_338 = _345;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_340 + 1
  if (__i$D27293$_M_offset_340 == 63)
    goto <bb 106>;
  else
    goto <bb 103>;

  <bb 159>:
  D.93362 ={v} {CLOBBER};
  goto <bb 116>;

  <bb 160>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _324 = 1 << __first$_M_offset_321;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_319
  # DEBUG __y => _324
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _325 = *__last$_M_p_319;
  _326 = _324 | _325;
  *__last$_M_p_319 = _326;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __first$_M_offset_321 + 1
  if (__first$_M_offset_321 == 63)
    goto <bb 111>;
  else
    goto <bb 107>;

  <bb 161>:
  # DEBUG D#18 => &__first
  # DEBUG D#18 => &__first
  # DEBUG this => D#18
  # DEBUG this => D#18
  _362 = 1 << __i$D27293$_M_offset_359;
  # DEBUG this => NULL
  # DEBUG __x => __i$D27293$_M_p_357
  # DEBUG __y => _362
  # DEBUG this => NULL
  # DEBUG __x => __x_548(D)
  _363 = *__i$D27293$_M_p_357;
  _364 = _362 | _363;
  *__i$D27293$_M_p_357 = _364;
  # DEBUG this => &__first
  # DEBUG D#19 => &__first.D.27293
  # DEBUG this => D#19
  # DEBUG __first$_M_offset => __i$D27293$_M_offset_359 + 1
  if (__i$D27293$_M_offset_359 == 63)
    goto <bb 115>;
  else
    goto <bb 112>;

}



;; Function virtual void ChaosRouter::ReadInputs() (_ZN11ChaosRouter10ReadInputsEv, funcdef_no=2037, decl_uid=50383, cgraph_uid=497, symbol_order=498)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void ChaosRouter::ReadInputs() (struct ChaosRouter * const this)
{
  size_type __dnew;
  struct Credit * D.94028;
  size_type __dnew;
  char_type D.93997;
  char __c;
  char_type D.93994;
  char __c;
  char_type D.93991;
  struct basic_ostream & D.93985;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  size_type __dnew;
  char_type D.93651;
  char __c;
  char_type D.93648;
  char __c;
  char_type D.93645;
  struct basic_ostream & D.93639;
  struct Flit * D.93612;
  int output;
  int input;
  struct Credit * c;
  struct Flit * f;
  const struct string D.54879;
  const struct string D.53830;
  const struct string D.53827;
  const struct string D.53823;
  const struct string D.53819;
  const struct string D.53816;
  const struct string D.53812;
  const struct string D.53808;
  const struct string D.53804;
  int _13;
  long unsigned int _14;
  struct FlitChannel * _15;
  struct Channel * _16;
  int (*__vtbl_ptr_type) () * _17;
  int (*__vtbl_ptr_type) () _18;
  bool _23;
  eQState & _24;
  long unsigned int _25;
  int _27;
  struct ostream * gWatchOut.237_28;
  struct basic_ostream & _30;
  const size_type _31;
  const size_type _32;
  struct basic_ostream & _35;
  eQState _37;
  bool _39;
  struct Module * _42;
  char * const _45;
  char * const _47;
  bool _48;
  struct basic_ostream & _49;
  char * const _51;
  eQState cstore_52;
  void (*<T7a35>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _53;
  long int _54;
  struct OutputSet * _55;
  struct Router * _56;
  bool _59;
  bool _60;
  struct basic_ostream & _62;
  long unsigned int _65;
  int (*__vtbl_ptr_type) () * _66;
  struct Module * _67;
  char * const _70;
  char * const _72;
  struct queue & _73;
  struct Module * _75;
  char * const _78;
  char * const _80;
  bool _82;
  bool _84;
  struct Module * _87;
  char * const _90;
  char * const _92;
  bool _94;
  long int _95;
  bool _97;
  struct Module * _99;
  char * const _102;
  char * const _104;
  struct Module * _107;
  char * const _110;
  char * const _112;
  bool _114;
  bool _115;
  struct basic_ostream & _116;
  struct Module * _118;
  char * const _121;
  char * const _123;
  char * const _125;
  struct Module * _127;
  char * const _130;
  char * const _132;
  int _134;
  long unsigned int _135;
  struct deque * _136;
  struct Channel * _137;
  int (*__vtbl_ptr_type) () * _138;
  int (*__vtbl_ptr_type) () _139;
  struct FlitChannel * & _142;
  int _143;
  int _144;
  long unsigned int _146;
  struct Module * _149;
  char * const _151;
  char * const _153;
  struct OutputSet * * _160;
  eQState * _161;
  int * _162;
  struct FlitChannel * * _163;
  struct queue * _164;
  struct Channel * * _165;
  struct OutputSet * & _166;
  long unsigned int _167;
  struct Channel * & _168;
  long unsigned int _169;
  int & _170;
  const struct __ctype_type * _194;
  const struct __ctype_type * _206;
  int pretmp_208;
  int pretmp_209;
  int prephitmp_210;
  int pretmp_211;
  int pretmp_218;
  int prephitmp_219;
  struct Flit * * * pretmp_220;
  struct Flit * * * prephitmp_221;
  struct Flit * * pretmp_228;
  struct Flit * * prephitmp_229;
  void * PROF_287;
  void * PROF_291;
  struct Flit * * _296;
  struct Flit * * _297;
  struct Flit * * _298;
  struct Flit * * _301;
  struct Flit * * _302;
  struct Flit * * _303;
  struct Flit * * * _305;
  struct Flit * * * _306;
  struct Flit * * _307;
  struct Flit * * _308;
  long unsigned int _310;
  struct Flit * * * _311;
  long int _312;
  struct Flit * * * _313;
  long int _314;
  long int _315;
  long int _316;
  long unsigned int _317;
  long unsigned int _318;
  int (*__vtbl_ptr_type) () * _319;
  long int _320;
  sizetype _321;
  struct basic_ios * _322;
  struct basic_ostream & _325;
  struct basic_ostream & _326;
  char _327;
  char_type _330;
  int (*__vtbl_ptr_type) () * _335;
  int (*__vtbl_ptr_type) () _336;
  void * PROF_340;
  char_type _342;
  char * _354;
  long unsigned int __dnew.4_355;
  long unsigned int __dnew.4_358;
  char * const _359;
  char * _360;
  char * _370;
  long unsigned int __dnew.4_371;
  long unsigned int __dnew.4_374;
  char * const _375;
  char * _376;
  char * _386;
  long unsigned int __dnew.4_387;
  long unsigned int __dnew.4_390;
  char * const _391;
  char * _392;
  char * _402;
  long unsigned int __dnew.4_403;
  long unsigned int __dnew.4_406;
  char * const _407;
  char * _408;
  char * _418;
  long unsigned int __dnew.4_419;
  long unsigned int __dnew.4_422;
  char * const _423;
  char * _424;
  char * _434;
  long unsigned int __dnew.4_435;
  long unsigned int __dnew.4_438;
  char * const _439;
  char * _440;
  int _446;
  char * _450;
  long unsigned int __dnew.4_451;
  long unsigned int __dnew.4_454;
  char * const _455;
  char * _456;
  long int _462;
  sizetype _463;
  struct basic_ios * _464;
  struct basic_ostream & _467;
  char _469;
  char_type _472;
  int (*__vtbl_ptr_type) () * _477;
  int (*__vtbl_ptr_type) () _478;
  void * PROF_482;
  char_type _484;
  char * _492;
  long unsigned int __dnew.4_493;
  long unsigned int __dnew.4_496;
  char * const _497;
  char * _498;
  int _506;
  char * _509;
  long unsigned int __dnew.4_510;
  long unsigned int __dnew.4_513;
  char * const _514;
  char * _515;

  <bb 2>:
  # DEBUG input => 0
  # DEBUG input => 0
  _446 = this_12(D)->D.50427._inputs;
  if (_446 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG output => 0
  _506 = this_12(D)->D.50427._outputs;
  if (_506 <= 0)
    goto <bb 4>;
  else
    goto <bb 82>;

  <bb 4>:
  # DEBUG D#1782 => {CLOBBER}
  # DEBUG f => D#1782
  return;

  <bb 5>:

  <bb 6>:
  # input_447 = PHI <0(5), input_133(81)>
  # DEBUG input => input_447
  _14 = (long unsigned int) input_447;
  # DEBUG D#995 => &this_12(D)->D.50427._input_channels
  _163 = MEM[(struct FlitChannel * * *)this_12(D) + 144B];
  # DEBUG D#33 => D#995
  # DEBUG __n => _14
  # DEBUG this => D#33
  _146 = _14 * 8;
  _142 = _163 + _146;
  _15 = *_142;
  _16 = &_15->D.35808;
  _17 = MEM[(struct Channel *)_15].D.35202.D.29663._vptr.Module;
  _18 = MEM[(int (*__vtbl_ptr_type) () *)_17 + 56B];
  PROF_287 = [obj_type_ref] OBJ_TYPE_REF(_18;(struct Channel)_16->7);
  if (PROF_287 == Receive)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => _16
  f_295 = MEM[(struct Channel *)_15]._output;
  goto <bb 9>;

  <bb 8>:
  f_289 = OBJ_TYPE_REF(_18;(struct Channel)_16->7) (_16);

  <bb 9>:
  # f_20 = PHI <f_289(8), f_295(7)>
  # DEBUG f => f_20
  if (f_20 != 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 80> (<L75>);

  <bb 11>:
  # DEBUG D#996 => &this_12(D)->_input_frame
  _164 = MEM[(struct queue * *)this_12(D) + 352B];
  # DEBUG D#34 => D#996
  # DEBUG __n => _14
  # DEBUG this => D#34
  _65 = _14 * 80;
  _73 = _164 + _65;
  # DEBUG this => NULL
  # DEBUG __x => &f
  # DEBUG D#1783 => &_73->c
  # DEBUG this => D#1783
  # DEBUG __x => &f
  _296 = MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_cur;
  _297 = MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_last;
  _298 = _297 + 18446744073709551608;
  if (_296 != _298)
    goto <bb 12>;
  else
    goto <bb 15>;

  <bb 12>:
  # DEBUG D#994 => &D#1783->D.47197._M_impl
  # DEBUG D#223 => D#994
  # DEBUG __p => _296
  # DEBUG __arg => &f
  # DEBUG __a => D#223
  # DEBUG D#222 => D#223
  # DEBUG D#221 => D#222
  # DEBUG __p => _296
  # DEBUG __val => &f
  # DEBUG this => D#221
  # DEBUG D#9 => 8
  # DEBUG __p => _296
  # DEBUG D.74231 => D#9
  if (_296 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  *_296 = f_20;
  pretmp_228 = MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_cur;

  <bb 14>:
  # prephitmp_229 = PHI <_296(12), pretmp_228(13)>
  _301 = prephitmp_229 + 8;
  MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_cur = _301;
  goto <bb 20>;

  <bb 15>:
  # DEBUG this => D#1783
  # DEBUG __t => &f
  # DEBUG this => D#1783
  # DEBUG __nodes_to_add => 1
  _310 = MEM[(struct deque *)_73].D.47197._M_impl._M_map_size;
  _311 = MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_node;
  _312 = (long int) _311;
  _313 = MEM[(struct deque *)_73].D.47197._M_impl._M_map;
  _314 = (long int) _313;
  _315 = _312 - _314;
  _316 = _315 /[ex] -8;
  _317 = (long unsigned int) _316;
  _318 = _310 + _317;
  if (_318 <= 1)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _136 = &_73->c;
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (_136, 1, 0);
  pretmp_220 = MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_node;

  <bb 17>:
  # prephitmp_221 = PHI <pretmp_220(16), _311(15)>
  # DEBUG D#993 => &D#1783->D.47197
  # DEBUG D#850 => D#993
  # DEBUG this => D#850
  # DEBUG D#849 => D#850
  # DEBUG __size => 8
  # DEBUG D#848 => &D#849->_M_impl
  # DEBUG D#842 => D#848
  # DEBUG __n => NULL
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#839
  # DEBUG D.93628 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  _302 = operator new (512);
  MEM[(struct Flit * * *)prephitmp_221 + 8B] = _302;
  _303 = MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_cur;
  # DEBUG D#992 => &D#1783->D.47197._M_impl
  # DEBUG D#221 => D#992
  # DEBUG __p => _303
  # DEBUG __val => &f
  # DEBUG this => D#221
  # DEBUG D#9 => 8
  # DEBUG __p => _303
  # DEBUG D.74231 => D#9
  if (_303 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  *_303 = f_20;

  <bb 19>:
  _305 = MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_node;
  _306 = _305 + 8;
  # DEBUG D#991 => &D#1783->D.47197._M_impl._M_finish
  # DEBUG this => D#991
  # DEBUG __new_node => _306
  MEM[(struct _Deque_iterator *)_73 + 48B]._M_node = _306;
  _307 = MEM[(struct Flit * * *)_305 + 8B];
  MEM[(struct _Deque_iterator *)_73 + 48B]._M_first = _307;
  # DEBUG __size => 8
  _308 = _307 + 512;
  MEM[(struct _Deque_iterator *)_73 + 48B]._M_last = _308;
  MEM[(struct deque *)_73].D.47197._M_impl._M_finish._M_cur = _307;

  <bb 20>:
  _23 = f_20->watch;
  if (_23 != 0)
    goto <bb 21>;
  else
    goto <bb 28>;

  <bb 21>:
  # DEBUG D#997 => &this_12(D)->D.50427.D.43102.D.29663
  # DEBUG this => D#997
  # DEBUG D#998 => &MEM[(const struct Module *)this_12(D)]._fullname
  # DEBUG D#999 => &this_12(D)->D.50427.D.43102.D.29663
  # DEBUG this => D#999
  # DEBUG D#1000 => &MEM[(const struct Module *)this_12(D)]._fullname
  _27 = GetSimTime ();
  gWatchOut.237_28 = gWatchOut;
  _30 = std::basic_ostream<char>::operator<< (gWatchOut.237_28, _27);
  # DEBUG __out => _30
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_30, " | ", 3);
  # DEBUG __os => _30
  # DEBUG __str => D#1000
  _31 = MEM[(long unsigned int *)this_12(D) + 48B];
  # DEBUG D#3 => D#1000
  # DEBUG this => D#3
  _95 = (long int) _31;
  # DEBUG this => D#1000
  _125 = MEM[(char * *)this_12(D) + 40B];
  # DEBUG D#1 => D#1000
  # DEBUG this => D#1
  _116 = std::__ostream_insert<char, std::char_traits<char> > (_30, _125, _95);
  # DEBUG __out => _116
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_116, " | ", 3);
  # DEBUG __out => _116
  # DEBUG __s => "Flit arriving at "
  # DEBUG __s => "Flit arriving at "
  std::__ostream_insert<char, std::char_traits<char> > (_116, "Flit arriving at ", 17);
  # DEBUG __os => _116
  # DEBUG __str => D#998
  _32 = MEM[(long unsigned int *)this_12(D) + 48B];
  # DEBUG D#3 => D#998
  # DEBUG this => D#3
  _54 = (long int) _32;
  # DEBUG this => D#998
  _51 = MEM[(char * *)this_12(D) + 40B];
  # DEBUG D#1 => D#998
  # DEBUG this => D#1
  _49 = std::__ostream_insert<char, std::char_traits<char> > (_116, _51, _54);
  # DEBUG __out => _49
  # DEBUG __s => " on channel "
  # DEBUG __s => " on channel "
  std::__ostream_insert<char, std::char_traits<char> > (_49, " on channel ", 12);
  _35 = std::basic_ostream<char>::operator<< (_49, input_447);
  # DEBUG this => _35
  # DEBUG __pf => endl
  # DEBUG __os => _35
  _319 = _35->_vptr.basic_ostream;
  _320 = MEM[(long int *)_319 + -24B];
  _321 = (sizetype) _320;
  _322 = _35 + _321;
  # DEBUG this => _322
  # DEBUG __c => 10
  _194 = MEM[(const struct basic_ios *)_322]._M_ctype;
  # DEBUG __f => _194
  if (_194 == 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  std::__throw_bad_cast ();

  <bb 23>:
  # DEBUG this => _194
  # DEBUG __c => 10
  _327 = MEM[(const struct ctype *)_194]._M_widen_ok;
  if (_327 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _330 = MEM[(const struct ctype *)_194]._M_widen[10];
  pretmp_211 = (int) _330;
  goto <bb 27>;

  <bb 25>:
  # DEBUG this => _194
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_194);
  _335 = MEM[(const struct ctype *)_194].D.18015._vptr.facet;
  _336 = MEM[(int (*__vtbl_ptr_type) () *)_335 + 48B];
  PROF_340 = [obj_type_ref] OBJ_TYPE_REF(_336;(const struct ctype)_194->6);
  if (PROF_340 == do_widen)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  _342 = OBJ_TYPE_REF(_336;(const struct ctype)_194->6) (_194, 10);
  pretmp_218 = (int) _342;

  <bb 27>:
  # prephitmp_219 = PHI <pretmp_211(24), 10(25), pretmp_218(26)>
  _325 = std::basic_ostream<char>::put (_35, prephitmp_219);
  # DEBUG __os => _325
  _326 = std::basic_ostream<char>::flush (_325);
  operator<< (_326, f_20);

  <bb 28>:
  # DEBUG D#1001 => &this_12(D)->_input_state
  _161 = MEM[(eQState * *)this_12(D) + 472B];
  # DEBUG D#30 => D#1001
  # DEBUG __n => _14
  # DEBUG this => D#30
  _25 = _14 * 4;
  _24 = _161 + _25;
  _37 = *_24;
  switch (_37) <default: <L75>, case 0: <L6>, case 1: <L13>, case 2: <L80>, case 3: <L21>, case 4: <L28>, case 5: <L35>>

<L6>:
  _39 = f_20->head;
  if (_39 != 0)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 30>:
  _48 = f_20->tail;
  if (_48 != 0)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # cstore_52 = PHI <2(30), 1(31)>
  *_24 = cstore_52;
  _53 = this_12(D)->_rf;
  # DEBUG D#1007 => &this_12(D)->_input_route
  _160 = MEM[(struct OutputSet * * *)this_12(D) + 288B];
  # DEBUG D#29 => D#1007
  # DEBUG __n => _14
  # DEBUG this => D#29
  _166 = _160 + _146;
  _55 = *_166;
  _56 = &this_12(D)->D.50427;
  _53 (_56, f_20, input_447, _55, 0);
  goto <bb 80> (<L75>);

  <bb 33>:
  operator<< (&cout, f_20);
  # DEBUG D#69 => &D.53803
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53803
  # DEBUG this => &D.53804
  # DEBUG __s => "Empty buffer received non-head flit!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53804
  # DEBUG D#500 => &D.53804._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53804.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53804]._M_p = &D.53804.D.11539._M_local_buf;
  # DEBUG __s => "Empty buffer received non-head flit!"
  # DEBUG this => &D.53804
  # DEBUG __beg => "Empty buffer received non-head flit!"
  # DEBUG __end => &MEM[(void *)"Empty buffer received non-head flit!" + 36B]
  # DEBUG this => &D.53804
  # DEBUG __beg => "Empty buffer received non-head flit!"
  # DEBUG __end => &MEM[(void *)"Empty buffer received non-head flit!" + 36B]
  # DEBUG this => &D.53804
  # DEBUG __beg => "Empty buffer received non-head flit!"
  # DEBUG __end => &MEM[(void *)"Empty buffer received non-head flit!" + 36B]
  # DEBUG __ptr => "Empty buffer received non-head flit!"
  # DEBUG __first => "Empty buffer received non-head flit!"
  # DEBUG __last => &MEM[(void *)"Empty buffer received non-head flit!" + 36B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Empty buffer received non-head flit!"
  # DEBUG __last => &MEM[(void *)"Empty buffer received non-head flit!" + 36B]
  __dnew = 36;
  _354 = std::__cxx11::basic_string<char>::_M_create (&D.53804, &__dnew, 0);
  # DEBUG D#6 => &D.53804
  # DEBUG __p => _354
  # DEBUG this => D#6
  MEM[(char * *)&D.53804] = _354;
  __dnew.4_355 = __dnew;
  # DEBUG D#7 => &D.53804
  # DEBUG __capacity => __dnew.4_355
  # DEBUG this => D#7
  MEM[(size_type *)&D.53804 + 16B] = __dnew.4_355;
  # DEBUG D#1 => &D.53804
  # DEBUG this => D#1
  # DEBUG __p => _354
  # DEBUG __k1 => "Empty buffer received non-head flit!"
  # DEBUG __k2 => &MEM[(void *)"Empty buffer received non-head flit!" + 36B]
  # DEBUG __d => _354
  # DEBUG __s => "Empty buffer received non-head flit!"
  # DEBUG __n => 36
  # DEBUG __s1 => _354
  # DEBUG __s2 => "Empty buffer received non-head flit!"
  # DEBUG __n => 36
  __builtin_memcpy (_354, "Empty buffer received non-head flit!", 36);
  __dnew.4_358 = __dnew;
  # DEBUG this => &D.53804
  # DEBUG __n => __dnew.4_358
  # DEBUG D#5 => &D.53804
  # DEBUG __length => __dnew.4_358
  # DEBUG this => D#5
  MEM[(size_type *)&D.53804 + 8B] = __dnew.4_358;
  _359 = MEM[(char * *)&D.53804];
  # DEBUG D#1 => &D.53804
  # DEBUG this => D#1
  _360 = _359 + __dnew.4_358;
  # DEBUG __c1 => _360
  # DEBUG __c2 => D#8
  MEM[(char_type &)_360] = 0;
  __dnew ={v} {CLOBBER};
  _42 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_42, &D.53804);

  <bb 34>:
  # DEBUG this => &D.53804
  # DEBUG this => &D.53804
  # DEBUG this => &D.53804
  _45 = MEM[(char * *)&D.53804];
  # DEBUG D#1 => &D.53804
  # DEBUG this => D#1
  # DEBUG this => &D.53804
  if (&D.53804.D.11539._M_local_buf != _45)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  # DEBUG D#252 => D.53804.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53804
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53804
  # DEBUG this => D#1
  # DEBUG this => &D.53804
  # DEBUG D#249 => &D.53804._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _45
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _45
  # DEBUG this => D#243
  # DEBUG D.82188 => D#244
  operator delete (_45);

  <bb 36>:
  # DEBUG D#253 => &D.53804._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53804 ={v} {CLOBBER};
  # DEBUG this => &D.53803
  # DEBUG this => &D.53803
  goto <bb 80> (<L75>);

<L13>:
  _114 = f_20->tail;
  if (_114 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#1004 => &this_12(D)->_input_state
  # DEBUG D#30 => D#1004
  # DEBUG __n => _14
  # DEBUG this => D#30
  *_24 = 2;
  goto <bb 80> (<L75>);

  <bb 39>:
  _115 = f_20->head;
  if (_115 != 0)
    goto <bb 40>;
  else
    goto <bb 10>;

  <bb 40>:
  # DEBUG D#69 => &D.53807
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53807
  # DEBUG this => &D.53808
  # DEBUG __s => "Input buffer received another head before previous tail!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53808
  # DEBUG D#500 => &D.53808._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53808.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53808]._M_p = &D.53808.D.11539._M_local_buf;
  # DEBUG __s => "Input buffer received another head before previous tail!"
  # DEBUG this => &D.53808
  # DEBUG __beg => "Input buffer received another head before previous tail!"
  # DEBUG __end => &MEM[(void *)"Input buffer received another head before previous tail!" + 56B]
  # DEBUG this => &D.53808
  # DEBUG __beg => "Input buffer received another head before previous tail!"
  # DEBUG __end => &MEM[(void *)"Input buffer received another head before previous tail!" + 56B]
  # DEBUG this => &D.53808
  # DEBUG __beg => "Input buffer received another head before previous tail!"
  # DEBUG __end => &MEM[(void *)"Input buffer received another head before previous tail!" + 56B]
  # DEBUG __ptr => "Input buffer received another head before previous tail!"
  # DEBUG __first => "Input buffer received another head before previous tail!"
  # DEBUG __last => &MEM[(void *)"Input buffer received another head before previous tail!" + 56B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Input buffer received another head before previous tail!"
  # DEBUG __last => &MEM[(void *)"Input buffer received another head before previous tail!" + 56B]
  __dnew = 56;
  _370 = std::__cxx11::basic_string<char>::_M_create (&D.53808, &__dnew, 0);
  # DEBUG D#6 => &D.53808
  # DEBUG __p => _370
  # DEBUG this => D#6
  MEM[(char * *)&D.53808] = _370;
  __dnew.4_371 = __dnew;
  # DEBUG D#7 => &D.53808
  # DEBUG __capacity => __dnew.4_371
  # DEBUG this => D#7
  MEM[(size_type *)&D.53808 + 16B] = __dnew.4_371;
  # DEBUG D#1 => &D.53808
  # DEBUG this => D#1
  # DEBUG __p => _370
  # DEBUG __k1 => "Input buffer received another head before previous tail!"
  # DEBUG __k2 => &MEM[(void *)"Input buffer received another head before previous tail!" + 56B]
  # DEBUG __d => _370
  # DEBUG __s => "Input buffer received another head before previous tail!"
  # DEBUG __n => 56
  # DEBUG __s1 => _370
  # DEBUG __s2 => "Input buffer received another head before previous tail!"
  # DEBUG __n => 56
  __builtin_memcpy (_370, "Input buffer received another head before previous tail!", 56);
  __dnew.4_374 = __dnew;
  # DEBUG this => &D.53808
  # DEBUG __n => __dnew.4_374
  # DEBUG D#5 => &D.53808
  # DEBUG __length => __dnew.4_374
  # DEBUG this => D#5
  MEM[(size_type *)&D.53808 + 8B] = __dnew.4_374;
  _375 = MEM[(char * *)&D.53808];
  # DEBUG D#1 => &D.53808
  # DEBUG this => D#1
  _376 = _375 + __dnew.4_374;
  # DEBUG __c1 => _376
  # DEBUG __c2 => D#8
  MEM[(char_type &)_376] = 0;
  __dnew ={v} {CLOBBER};
  _118 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_118, &D.53808);

  <bb 41>:
  # DEBUG this => &D.53808
  # DEBUG this => &D.53808
  # DEBUG this => &D.53808
  _121 = MEM[(char * *)&D.53808];
  # DEBUG D#1 => &D.53808
  # DEBUG this => D#1
  # DEBUG this => &D.53808
  if (&D.53808.D.11539._M_local_buf != _121)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#252 => D.53808.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53808
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53808
  # DEBUG this => D#1
  # DEBUG this => &D.53808
  # DEBUG D#249 => &D.53808._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _121
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _121
  # DEBUG this => D#243
  # DEBUG D.82210 => D#244
  operator delete (_121);

  <bb 43>:
  # DEBUG D#253 => &D.53808._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53808 ={v} {CLOBBER};
  # DEBUG this => &D.53807
  # DEBUG this => &D.53807
  goto <bb 80> (<L75>);

<L80>:
  # DEBUG D#69 => &D.53811
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53811
  # DEBUG this => &D.53812
  # DEBUG __s => "Received flit while full!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53812
  # DEBUG D#500 => &D.53812._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53812.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53812]._M_p = &D.53812.D.11539._M_local_buf;
  # DEBUG __s => "Received flit while full!"
  # DEBUG this => &D.53812
  # DEBUG __beg => "Received flit while full!"
  # DEBUG __end => &MEM[(void *)"Received flit while full!" + 25B]
  # DEBUG this => &D.53812
  # DEBUG __beg => "Received flit while full!"
  # DEBUG __end => &MEM[(void *)"Received flit while full!" + 25B]
  # DEBUG this => &D.53812
  # DEBUG __beg => "Received flit while full!"
  # DEBUG __end => &MEM[(void *)"Received flit while full!" + 25B]
  # DEBUG __ptr => "Received flit while full!"
  # DEBUG __first => "Received flit while full!"
  # DEBUG __last => &MEM[(void *)"Received flit while full!" + 25B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Received flit while full!"
  # DEBUG __last => &MEM[(void *)"Received flit while full!" + 25B]
  __dnew = 25;
  _386 = std::__cxx11::basic_string<char>::_M_create (&D.53812, &__dnew, 0);
  # DEBUG D#6 => &D.53812
  # DEBUG __p => _386
  # DEBUG this => D#6
  MEM[(char * *)&D.53812] = _386;
  __dnew.4_387 = __dnew;
  # DEBUG D#7 => &D.53812
  # DEBUG __capacity => __dnew.4_387
  # DEBUG this => D#7
  MEM[(size_type *)&D.53812 + 16B] = __dnew.4_387;
  # DEBUG D#1 => &D.53812
  # DEBUG this => D#1
  # DEBUG __p => _386
  # DEBUG __k1 => "Received flit while full!"
  # DEBUG __k2 => &MEM[(void *)"Received flit while full!" + 25B]
  # DEBUG __d => _386
  # DEBUG __s => "Received flit while full!"
  # DEBUG __n => 25
  # DEBUG __s1 => _386
  # DEBUG __s2 => "Received flit while full!"
  # DEBUG __n => 25
  __builtin_memcpy (_386, "Received flit while full!", 25);
  __dnew.4_390 = __dnew;
  # DEBUG this => &D.53812
  # DEBUG __n => __dnew.4_390
  # DEBUG D#5 => &D.53812
  # DEBUG __length => __dnew.4_390
  # DEBUG this => D#5
  MEM[(size_type *)&D.53812 + 8B] = __dnew.4_390;
  _391 = MEM[(char * *)&D.53812];
  # DEBUG D#1 => &D.53812
  # DEBUG this => D#1
  _392 = _391 + __dnew.4_390;
  # DEBUG __c1 => _392
  # DEBUG __c2 => D#8
  MEM[(char_type &)_392] = 0;
  __dnew ={v} {CLOBBER};
  _127 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_127, &D.53812);

  <bb 45>:
  # DEBUG this => &D.53812
  # DEBUG this => &D.53812
  # DEBUG this => &D.53812
  _130 = MEM[(char * *)&D.53812];
  # DEBUG D#1 => &D.53812
  # DEBUG this => D#1
  # DEBUG this => &D.53812
  if (&D.53812.D.11539._M_local_buf != _130)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # DEBUG D#252 => D.53812.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53812
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53812
  # DEBUG this => D#1
  # DEBUG this => &D.53812
  # DEBUG D#249 => &D.53812._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _130
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _130
  # DEBUG this => D#243
  # DEBUG D.82228 => D#244
  operator delete (_130);

  <bb 47>:
  # DEBUG D#253 => &D.53812._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53812 ={v} {CLOBBER};
  # DEBUG this => &D.53811
  # DEBUG this => &D.53811
  goto <bb 80> (<L75>);

<L21>:
  _94 = f_20->head;
  if (_94 != 0)
    goto <bb 49>;
  else
    goto <bb 54>;

  <bb 49>:
  # DEBUG D#1003 => &this_12(D)->_input_state
  # DEBUG D#30 => D#1003
  # DEBUG __n => _14
  # DEBUG this => D#30
  *_24 = 5;
  _97 = f_20->tail;
  if (_97 != 0)
    goto <bb 50>;
  else
    goto <bb 10>;

  <bb 50>:
  # DEBUG D#69 => &D.53815
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53815
  # DEBUG this => &D.53816
  # DEBUG __s => "Received single-flit packet in leaving state!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53816
  # DEBUG D#500 => &D.53816._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53816.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53816]._M_p = &D.53816.D.11539._M_local_buf;
  # DEBUG __s => "Received single-flit packet in leaving state!"
  # DEBUG this => &D.53816
  # DEBUG __beg => "Received single-flit packet in leaving state!"
  # DEBUG __end => &MEM[(void *)"Received single-flit packet in leaving state!" + 45B]
  # DEBUG this => &D.53816
  # DEBUG __beg => "Received single-flit packet in leaving state!"
  # DEBUG __end => &MEM[(void *)"Received single-flit packet in leaving state!" + 45B]
  # DEBUG this => &D.53816
  # DEBUG __beg => "Received single-flit packet in leaving state!"
  # DEBUG __end => &MEM[(void *)"Received single-flit packet in leaving state!" + 45B]
  # DEBUG __ptr => "Received single-flit packet in leaving state!"
  # DEBUG __first => "Received single-flit packet in leaving state!"
  # DEBUG __last => &MEM[(void *)"Received single-flit packet in leaving state!" + 45B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Received single-flit packet in leaving state!"
  # DEBUG __last => &MEM[(void *)"Received single-flit packet in leaving state!" + 45B]
  __dnew = 45;
  _402 = std::__cxx11::basic_string<char>::_M_create (&D.53816, &__dnew, 0);
  # DEBUG D#6 => &D.53816
  # DEBUG __p => _402
  # DEBUG this => D#6
  MEM[(char * *)&D.53816] = _402;
  __dnew.4_403 = __dnew;
  # DEBUG D#7 => &D.53816
  # DEBUG __capacity => __dnew.4_403
  # DEBUG this => D#7
  MEM[(size_type *)&D.53816 + 16B] = __dnew.4_403;
  # DEBUG D#1 => &D.53816
  # DEBUG this => D#1
  # DEBUG __p => _402
  # DEBUG __k1 => "Received single-flit packet in leaving state!"
  # DEBUG __k2 => &MEM[(void *)"Received single-flit packet in leaving state!" + 45B]
  # DEBUG __d => _402
  # DEBUG __s => "Received single-flit packet in leaving state!"
  # DEBUG __n => 45
  # DEBUG __s1 => _402
  # DEBUG __s2 => "Received single-flit packet in leaving state!"
  # DEBUG __n => 45
  __builtin_memcpy (_402, "Received single-flit packet in leaving state!", 45);
  __dnew.4_406 = __dnew;
  # DEBUG this => &D.53816
  # DEBUG __n => __dnew.4_406
  # DEBUG D#5 => &D.53816
  # DEBUG __length => __dnew.4_406
  # DEBUG this => D#5
  MEM[(size_type *)&D.53816 + 8B] = __dnew.4_406;
  _407 = MEM[(char * *)&D.53816];
  # DEBUG D#1 => &D.53816
  # DEBUG this => D#1
  _408 = _407 + __dnew.4_406;
  # DEBUG __c1 => _408
  # DEBUG __c2 => D#8
  MEM[(char_type &)_408] = 0;
  __dnew ={v} {CLOBBER};
  _99 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_99, &D.53816);

  <bb 51>:
  # DEBUG this => &D.53816
  # DEBUG this => &D.53816
  # DEBUG this => &D.53816
  _102 = MEM[(char * *)&D.53816];
  # DEBUG D#1 => &D.53816
  # DEBUG this => D#1
  # DEBUG this => &D.53816
  if (&D.53816.D.11539._M_local_buf != _102)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#252 => D.53816.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53816
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53816
  # DEBUG this => D#1
  # DEBUG this => &D.53816
  # DEBUG D#249 => &D.53816._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _102
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _102
  # DEBUG this => D#243
  # DEBUG D.82250 => D#244
  operator delete (_102);

  <bb 53>:
  # DEBUG D#253 => &D.53816._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53816 ={v} {CLOBBER};
  # DEBUG this => &D.53815
  # DEBUG this => &D.53815
  goto <bb 80> (<L75>);

  <bb 54>:
  operator<< (&cout, f_20);
  # DEBUG D#69 => &D.53818
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53818
  # DEBUG this => &D.53819
  # DEBUG __s => "Received non-head flit while packet leaving!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53819
  # DEBUG D#500 => &D.53819._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53819.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53819]._M_p = &D.53819.D.11539._M_local_buf;
  # DEBUG __s => "Received non-head flit while packet leaving!"
  # DEBUG this => &D.53819
  # DEBUG __beg => "Received non-head flit while packet leaving!"
  # DEBUG __end => &MEM[(void *)"Received non-head flit while packet leaving!" + 44B]
  # DEBUG this => &D.53819
  # DEBUG __beg => "Received non-head flit while packet leaving!"
  # DEBUG __end => &MEM[(void *)"Received non-head flit while packet leaving!" + 44B]
  # DEBUG this => &D.53819
  # DEBUG __beg => "Received non-head flit while packet leaving!"
  # DEBUG __end => &MEM[(void *)"Received non-head flit while packet leaving!" + 44B]
  # DEBUG __ptr => "Received non-head flit while packet leaving!"
  # DEBUG __first => "Received non-head flit while packet leaving!"
  # DEBUG __last => &MEM[(void *)"Received non-head flit while packet leaving!" + 44B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Received non-head flit while packet leaving!"
  # DEBUG __last => &MEM[(void *)"Received non-head flit while packet leaving!" + 44B]
  __dnew = 44;
  _418 = std::__cxx11::basic_string<char>::_M_create (&D.53819, &__dnew, 0);
  # DEBUG D#6 => &D.53819
  # DEBUG __p => _418
  # DEBUG this => D#6
  MEM[(char * *)&D.53819] = _418;
  __dnew.4_419 = __dnew;
  # DEBUG D#7 => &D.53819
  # DEBUG __capacity => __dnew.4_419
  # DEBUG this => D#7
  MEM[(size_type *)&D.53819 + 16B] = __dnew.4_419;
  # DEBUG D#1 => &D.53819
  # DEBUG this => D#1
  # DEBUG __p => _418
  # DEBUG __k1 => "Received non-head flit while packet leaving!"
  # DEBUG __k2 => &MEM[(void *)"Received non-head flit while packet leaving!" + 44B]
  # DEBUG __d => _418
  # DEBUG __s => "Received non-head flit while packet leaving!"
  # DEBUG __n => 44
  # DEBUG __s1 => _418
  # DEBUG __s2 => "Received non-head flit while packet leaving!"
  # DEBUG __n => 44
  __builtin_memcpy (_418, "Received non-head flit while packet leaving!", 44);
  __dnew.4_422 = __dnew;
  # DEBUG this => &D.53819
  # DEBUG __n => __dnew.4_422
  # DEBUG D#5 => &D.53819
  # DEBUG __length => __dnew.4_422
  # DEBUG this => D#5
  MEM[(size_type *)&D.53819 + 8B] = __dnew.4_422;
  _423 = MEM[(char * *)&D.53819];
  # DEBUG D#1 => &D.53819
  # DEBUG this => D#1
  _424 = _423 + __dnew.4_422;
  # DEBUG __c1 => _424
  # DEBUG __c2 => D#8
  MEM[(char_type &)_424] = 0;
  __dnew ={v} {CLOBBER};
  _107 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_107, &D.53819);

  <bb 55>:
  # DEBUG this => &D.53819
  # DEBUG this => &D.53819
  # DEBUG this => &D.53819
  _110 = MEM[(char * *)&D.53819];
  # DEBUG D#1 => &D.53819
  # DEBUG this => D#1
  # DEBUG this => &D.53819
  if (&D.53819.D.11539._M_local_buf != _110)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#252 => D.53819.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53819
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53819
  # DEBUG this => D#1
  # DEBUG this => &D.53819
  # DEBUG D#249 => &D.53819._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _110
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _110
  # DEBUG this => D#243
  # DEBUG D.82268 => D#244
  operator delete (_110);

  <bb 57>:
  # DEBUG D#253 => &D.53819._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53819 ={v} {CLOBBER};
  # DEBUG this => &D.53818
  # DEBUG this => &D.53818
  goto <bb 80> (<L75>);

<L28>:
  _82 = f_20->tail;
  if (_82 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#1002 => &this_12(D)->_input_state
  # DEBUG D#30 => D#1002
  # DEBUG __n => _14
  # DEBUG this => D#30
  *_24 = 3;

  <bb 60>:
  _84 = f_20->head;
  if (_84 != 0)
    goto <bb 61>;
  else
    goto <bb 10>;

  <bb 61>:
  operator<< (&cout, f_20);
  # DEBUG D#69 => &D.53822
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53822
  # DEBUG this => &D.53823
  # DEBUG __s => "Received head flit in cut through buffer!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53823
  # DEBUG D#500 => &D.53823._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53823.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53823]._M_p = &D.53823.D.11539._M_local_buf;
  # DEBUG __s => "Received head flit in cut through buffer!"
  # DEBUG this => &D.53823
  # DEBUG __beg => "Received head flit in cut through buffer!"
  # DEBUG __end => &MEM[(void *)"Received head flit in cut through buffer!" + 41B]
  # DEBUG this => &D.53823
  # DEBUG __beg => "Received head flit in cut through buffer!"
  # DEBUG __end => &MEM[(void *)"Received head flit in cut through buffer!" + 41B]
  # DEBUG this => &D.53823
  # DEBUG __beg => "Received head flit in cut through buffer!"
  # DEBUG __end => &MEM[(void *)"Received head flit in cut through buffer!" + 41B]
  # DEBUG __ptr => "Received head flit in cut through buffer!"
  # DEBUG __first => "Received head flit in cut through buffer!"
  # DEBUG __last => &MEM[(void *)"Received head flit in cut through buffer!" + 41B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Received head flit in cut through buffer!"
  # DEBUG __last => &MEM[(void *)"Received head flit in cut through buffer!" + 41B]
  __dnew = 41;
  _434 = std::__cxx11::basic_string<char>::_M_create (&D.53823, &__dnew, 0);
  # DEBUG D#6 => &D.53823
  # DEBUG __p => _434
  # DEBUG this => D#6
  MEM[(char * *)&D.53823] = _434;
  __dnew.4_435 = __dnew;
  # DEBUG D#7 => &D.53823
  # DEBUG __capacity => __dnew.4_435
  # DEBUG this => D#7
  MEM[(size_type *)&D.53823 + 16B] = __dnew.4_435;
  # DEBUG D#1 => &D.53823
  # DEBUG this => D#1
  # DEBUG __p => _434
  # DEBUG __k1 => "Received head flit in cut through buffer!"
  # DEBUG __k2 => &MEM[(void *)"Received head flit in cut through buffer!" + 41B]
  # DEBUG __d => _434
  # DEBUG __s => "Received head flit in cut through buffer!"
  # DEBUG __n => 41
  # DEBUG __s1 => _434
  # DEBUG __s2 => "Received head flit in cut through buffer!"
  # DEBUG __n => 41
  __builtin_memcpy (_434, "Received head flit in cut through buffer!", 41);
  __dnew.4_438 = __dnew;
  # DEBUG this => &D.53823
  # DEBUG __n => __dnew.4_438
  # DEBUG D#5 => &D.53823
  # DEBUG __length => __dnew.4_438
  # DEBUG this => D#5
  MEM[(size_type *)&D.53823 + 8B] = __dnew.4_438;
  _439 = MEM[(char * *)&D.53823];
  # DEBUG D#1 => &D.53823
  # DEBUG this => D#1
  _440 = _439 + __dnew.4_438;
  # DEBUG __c1 => _440
  # DEBUG __c2 => D#8
  MEM[(char_type &)_440] = 0;
  __dnew ={v} {CLOBBER};
  _87 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_87, &D.53823);

  <bb 62>:
  # DEBUG this => &D.53823
  # DEBUG this => &D.53823
  # DEBUG this => &D.53823
  _90 = MEM[(char * *)&D.53823];
  # DEBUG D#1 => &D.53823
  # DEBUG this => D#1
  # DEBUG this => &D.53823
  if (&D.53823.D.11539._M_local_buf != _90)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#252 => D.53823.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53823
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53823
  # DEBUG this => D#1
  # DEBUG this => &D.53823
  # DEBUG D#249 => &D.53823._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _90
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _90
  # DEBUG this => D#243
  # DEBUG D.82290 => D#244
  operator delete (_90);

  <bb 64>:
  # DEBUG D#253 => &D.53823._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53823 ={v} {CLOBBER};
  # DEBUG this => &D.53822
  # DEBUG this => &D.53822
  goto <bb 80> (<L75>);

<L35>:
  _59 = f_20->head;
  if (_59 != 0)
    goto <bb 66>;
  else
    goto <bb 70>;

  <bb 66>:
  # DEBUG D#69 => &D.53826
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53826
  # DEBUG this => &D.53827
  # DEBUG __s => "Shared buffer received another head!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53827
  # DEBUG D#500 => &D.53827._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53827.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53827]._M_p = &D.53827.D.11539._M_local_buf;
  # DEBUG __s => "Shared buffer received another head!"
  # DEBUG this => &D.53827
  # DEBUG __beg => "Shared buffer received another head!"
  # DEBUG __end => &MEM[(void *)"Shared buffer received another head!" + 36B]
  # DEBUG this => &D.53827
  # DEBUG __beg => "Shared buffer received another head!"
  # DEBUG __end => &MEM[(void *)"Shared buffer received another head!" + 36B]
  # DEBUG this => &D.53827
  # DEBUG __beg => "Shared buffer received another head!"
  # DEBUG __end => &MEM[(void *)"Shared buffer received another head!" + 36B]
  # DEBUG __ptr => "Shared buffer received another head!"
  # DEBUG __first => "Shared buffer received another head!"
  # DEBUG __last => &MEM[(void *)"Shared buffer received another head!" + 36B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Shared buffer received another head!"
  # DEBUG __last => &MEM[(void *)"Shared buffer received another head!" + 36B]
  __dnew = 36;
  _450 = std::__cxx11::basic_string<char>::_M_create (&D.53827, &__dnew, 0);
  # DEBUG D#6 => &D.53827
  # DEBUG __p => _450
  # DEBUG this => D#6
  MEM[(char * *)&D.53827] = _450;
  __dnew.4_451 = __dnew;
  # DEBUG D#7 => &D.53827
  # DEBUG __capacity => __dnew.4_451
  # DEBUG this => D#7
  MEM[(size_type *)&D.53827 + 16B] = __dnew.4_451;
  # DEBUG D#1 => &D.53827
  # DEBUG this => D#1
  # DEBUG __p => _450
  # DEBUG __k1 => "Shared buffer received another head!"
  # DEBUG __k2 => &MEM[(void *)"Shared buffer received another head!" + 36B]
  # DEBUG __d => _450
  # DEBUG __s => "Shared buffer received another head!"
  # DEBUG __n => 36
  # DEBUG __s1 => _450
  # DEBUG __s2 => "Shared buffer received another head!"
  # DEBUG __n => 36
  __builtin_memcpy (_450, "Shared buffer received another head!", 36);
  __dnew.4_454 = __dnew;
  # DEBUG this => &D.53827
  # DEBUG __n => __dnew.4_454
  # DEBUG D#5 => &D.53827
  # DEBUG __length => __dnew.4_454
  # DEBUG this => D#5
  MEM[(size_type *)&D.53827 + 8B] = __dnew.4_454;
  _455 = MEM[(char * *)&D.53827];
  # DEBUG D#1 => &D.53827
  # DEBUG this => D#1
  _456 = _455 + __dnew.4_454;
  # DEBUG __c1 => _456
  # DEBUG __c2 => D#8
  MEM[(char_type &)_456] = 0;
  __dnew ={v} {CLOBBER};
  _75 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_75, &D.53827);

  <bb 67>:
  # DEBUG this => &D.53827
  # DEBUG this => &D.53827
  # DEBUG this => &D.53827
  _78 = MEM[(char * *)&D.53827];
  # DEBUG D#1 => &D.53827
  # DEBUG this => D#1
  # DEBUG this => &D.53827
  if (&D.53827.D.11539._M_local_buf != _78)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  # DEBUG D#252 => D.53827.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53827
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53827
  # DEBUG this => D#1
  # DEBUG this => &D.53827
  # DEBUG D#249 => &D.53827._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _78
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _78
  # DEBUG this => D#243
  # DEBUG D.82308 => D#244
  operator delete (_78);

  <bb 69>:
  # DEBUG D#253 => &D.53827._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53827 ={v} {CLOBBER};
  # DEBUG this => &D.53826
  # DEBUG this => &D.53826
  goto <bb 80> (<L75>);

  <bb 70>:
  _60 = f_20->tail;
  if (_60 != 0)
    goto <bb 71>;
  else
    goto <bb 10>;

  <bb 71>:
  # DEBUG __out => &cout
  # DEBUG __s => "Input "
  # DEBUG __s => "Input "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Input ", 6);
  _62 = std::basic_ostream<char>::operator<< (&cout, input_447);
  # DEBUG this => _62
  # DEBUG __pf => endl
  # DEBUG __os => _62
  _66 = _62->_vptr.basic_ostream;
  _462 = MEM[(long int *)_66 + -24B];
  _463 = (sizetype) _462;
  _464 = _62 + _463;
  # DEBUG this => _464
  # DEBUG __c => 10
  _206 = MEM[(const struct basic_ios *)_464]._M_ctype;
  # DEBUG __f => _206
  if (_206 == 0B)
    goto <bb 22>;
  else
    goto <bb 72>;

  <bb 72>:
  # DEBUG this => _206
  # DEBUG __c => 10
  _469 = MEM[(const struct ctype *)_206]._M_widen_ok;
  if (_469 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  _472 = MEM[(const struct ctype *)_206]._M_widen[10];
  pretmp_208 = (int) _472;
  goto <bb 76>;

  <bb 74>:
  # DEBUG this => _206
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_206);
  _477 = MEM[(const struct ctype *)_206].D.18015._vptr.facet;
  _478 = MEM[(int (*__vtbl_ptr_type) () *)_477 + 48B];
  PROF_482 = [obj_type_ref] OBJ_TYPE_REF(_478;(const struct ctype)_206->6);
  if (PROF_482 == do_widen)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  _484 = OBJ_TYPE_REF(_478;(const struct ctype)_206->6) (_206, 10);
  pretmp_209 = (int) _484;

  <bb 76>:
  # prephitmp_210 = PHI <pretmp_208(73), 10(74), pretmp_209(75)>
  _467 = std::basic_ostream<char>::put (_62, prephitmp_210);
  # DEBUG __os => _467
  std::basic_ostream<char>::flush (_467);
  operator<< (&cout, f_20);
  # DEBUG D#69 => &D.53829
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53829
  # DEBUG this => &D.53830
  # DEBUG __s => "Shared buffer received another tail!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53830
  # DEBUG D#500 => &D.53830._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53830.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53830]._M_p = &D.53830.D.11539._M_local_buf;
  # DEBUG __s => "Shared buffer received another tail!"
  # DEBUG this => &D.53830
  # DEBUG __beg => "Shared buffer received another tail!"
  # DEBUG __end => &MEM[(void *)"Shared buffer received another tail!" + 36B]
  # DEBUG this => &D.53830
  # DEBUG __beg => "Shared buffer received another tail!"
  # DEBUG __end => &MEM[(void *)"Shared buffer received another tail!" + 36B]
  # DEBUG this => &D.53830
  # DEBUG __beg => "Shared buffer received another tail!"
  # DEBUG __end => &MEM[(void *)"Shared buffer received another tail!" + 36B]
  # DEBUG __ptr => "Shared buffer received another tail!"
  # DEBUG __first => "Shared buffer received another tail!"
  # DEBUG __last => &MEM[(void *)"Shared buffer received another tail!" + 36B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Shared buffer received another tail!"
  # DEBUG __last => &MEM[(void *)"Shared buffer received another tail!" + 36B]
  __dnew = 36;
  _492 = std::__cxx11::basic_string<char>::_M_create (&D.53830, &__dnew, 0);
  # DEBUG D#6 => &D.53830
  # DEBUG __p => _492
  # DEBUG this => D#6
  MEM[(char * *)&D.53830] = _492;
  __dnew.4_493 = __dnew;
  # DEBUG D#7 => &D.53830
  # DEBUG __capacity => __dnew.4_493
  # DEBUG this => D#7
  MEM[(size_type *)&D.53830 + 16B] = __dnew.4_493;
  # DEBUG D#1 => &D.53830
  # DEBUG this => D#1
  # DEBUG __p => _492
  # DEBUG __k1 => "Shared buffer received another tail!"
  # DEBUG __k2 => &MEM[(void *)"Shared buffer received another tail!" + 36B]
  # DEBUG __d => _492
  # DEBUG __s => "Shared buffer received another tail!"
  # DEBUG __n => 36
  # DEBUG __s1 => _492
  # DEBUG __s2 => "Shared buffer received another tail!"
  # DEBUG __n => 36
  __builtin_memcpy (_492, "Shared buffer received another tail!", 36);
  __dnew.4_496 = __dnew;
  # DEBUG this => &D.53830
  # DEBUG __n => __dnew.4_496
  # DEBUG D#5 => &D.53830
  # DEBUG __length => __dnew.4_496
  # DEBUG this => D#5
  MEM[(size_type *)&D.53830 + 8B] = __dnew.4_496;
  _497 = MEM[(char * *)&D.53830];
  # DEBUG D#1 => &D.53830
  # DEBUG this => D#1
  _498 = _497 + __dnew.4_496;
  # DEBUG __c1 => _498
  # DEBUG __c2 => D#8
  MEM[(char_type &)_498] = 0;
  __dnew ={v} {CLOBBER};
  _67 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_67, &D.53830);

  <bb 77>:
  # DEBUG this => &D.53830
  # DEBUG this => &D.53830
  # DEBUG this => &D.53830
  _70 = MEM[(char * *)&D.53830];
  # DEBUG D#1 => &D.53830
  # DEBUG this => D#1
  # DEBUG this => &D.53830
  if (&D.53830.D.11539._M_local_buf != _70)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#252 => D.53830.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53830
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53830
  # DEBUG this => D#1
  # DEBUG this => &D.53830
  # DEBUG D#249 => &D.53830._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _70
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _70
  # DEBUG this => D#243
  # DEBUG D.82333 => D#244
  operator delete (_70);

  <bb 79>:
  # DEBUG D#253 => &D.53830._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53830 ={v} {CLOBBER};
  # DEBUG this => &D.53829
  # DEBUG this => &D.53829

<L75>:
  input_133 = input_447 + 1;
  # DEBUG input => input_133
  # DEBUG input => input_133
  _13 = this_12(D)->D.50427._inputs;
  if (_13 <= input_133)
    goto <bb 3>;
  else
    goto <bb 81>;

  <bb 81>:
  goto <bb 6>;

  <bb 82>:

  <bb 83>:
  # output_414 = PHI <0(82), output_158(94)>
  # DEBUG output => output_414
  _135 = (long unsigned int) output_414;
  # DEBUG D#1008 => &this_12(D)->D.50427._output_credits
  _165 = MEM[(struct Channel * * *)this_12(D) + 216B];
  # DEBUG D#35 => D#1008
  # DEBUG __n => _135
  # DEBUG this => D#35
  _167 = _135 * 8;
  _168 = _165 + _167;
  _137 = *_168;
  _138 = _137->D.54869.D.29663._vptr.Module;
  _139 = MEM[(int (*__vtbl_ptr_type) () *)_138 + 56B];
  PROF_291 = [obj_type_ref] OBJ_TYPE_REF(_139;(struct Channel)_137->7);
  if (PROF_291 == Receive)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  # DEBUG this => _137
  c_499 = _137->_output;
  goto <bb 86>;

  <bb 85>:
  c_293 = OBJ_TYPE_REF(_139;(struct Channel)_137->7) (_137);

  <bb 86>:
  # c_141 = PHI <c_293(85), c_499(84)>
  # DEBUG c => c_141
  if (c_141 != 0B)
    goto <bb 87>;
  else
    goto <bb 93>;

  <bb 87>:
  # DEBUG D#1009 => &this_12(D)->_next_queue_cnt
  _162 = MEM[(int * *)this_12(D) + 424B];
  # DEBUG D#31 => D#1009
  # DEBUG __n => _135
  # DEBUG this => D#31
  _169 = _135 * 4;
  _170 = _162 + _169;
  _143 = *_170;
  _144 = _143 + -1;
  *_170 = _144;
  # DEBUG D#1010 => &this_12(D)->_next_queue_cnt
  # DEBUG D#31 => D#1010
  # DEBUG __n => _135
  # DEBUG this => D#31
  if (_144 < 0)
    goto <bb 88>;
  else
    goto <bb 92>;

  <bb 88>:
  # DEBUG D#69 => &D.54878
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.54878
  # DEBUG this => &D.54879
  # DEBUG __s => "Next queue count fell below zero!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.54879
  # DEBUG D#500 => &D.54879._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.54879.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.54879]._M_p = &D.54879.D.11539._M_local_buf;
  # DEBUG __s => "Next queue count fell below zero!"
  # DEBUG this => &D.54879
  # DEBUG __beg => "Next queue count fell below zero!"
  # DEBUG __end => &MEM[(void *)"Next queue count fell below zero!" + 33B]
  # DEBUG this => &D.54879
  # DEBUG __beg => "Next queue count fell below zero!"
  # DEBUG __end => &MEM[(void *)"Next queue count fell below zero!" + 33B]
  # DEBUG this => &D.54879
  # DEBUG __beg => "Next queue count fell below zero!"
  # DEBUG __end => &MEM[(void *)"Next queue count fell below zero!" + 33B]
  # DEBUG __ptr => "Next queue count fell below zero!"
  # DEBUG __first => "Next queue count fell below zero!"
  # DEBUG __last => &MEM[(void *)"Next queue count fell below zero!" + 33B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Next queue count fell below zero!"
  # DEBUG __last => &MEM[(void *)"Next queue count fell below zero!" + 33B]
  __dnew = 33;
  _509 = std::__cxx11::basic_string<char>::_M_create (&D.54879, &__dnew, 0);
  # DEBUG D#6 => &D.54879
  # DEBUG __p => _509
  # DEBUG this => D#6
  MEM[(char * *)&D.54879] = _509;
  __dnew.4_510 = __dnew;
  # DEBUG D#7 => &D.54879
  # DEBUG __capacity => __dnew.4_510
  # DEBUG this => D#7
  MEM[(size_type *)&D.54879 + 16B] = __dnew.4_510;
  # DEBUG D#1 => &D.54879
  # DEBUG this => D#1
  # DEBUG __p => _509
  # DEBUG __k1 => "Next queue count fell below zero!"
  # DEBUG __k2 => &MEM[(void *)"Next queue count fell below zero!" + 33B]
  # DEBUG __d => _509
  # DEBUG __s => "Next queue count fell below zero!"
  # DEBUG __n => 33
  # DEBUG __s1 => _509
  # DEBUG __s2 => "Next queue count fell below zero!"
  # DEBUG __n => 33
  __builtin_memcpy (_509, "Next queue count fell below zero!", 33);
  __dnew.4_513 = __dnew;
  # DEBUG this => &D.54879
  # DEBUG __n => __dnew.4_513
  # DEBUG D#5 => &D.54879
  # DEBUG __length => __dnew.4_513
  # DEBUG this => D#5
  MEM[(size_type *)&D.54879 + 8B] = __dnew.4_513;
  _514 = MEM[(char * *)&D.54879];
  # DEBUG D#1 => &D.54879
  # DEBUG this => D#1
  _515 = _514 + __dnew.4_513;
  # DEBUG __c1 => _515
  # DEBUG __c2 => D#8
  MEM[(char_type &)_515] = 0;
  __dnew ={v} {CLOBBER};
  _149 = &this_12(D)->D.50427.D.43102.D.29663;
  Module::Error (_149, &D.54879);

  <bb 89>:
  # DEBUG this => &D.54879
  # DEBUG this => &D.54879
  # DEBUG this => &D.54879
  _153 = MEM[(char * *)&D.54879];
  # DEBUG D#1 => &D.54879
  # DEBUG this => D#1
  # DEBUG this => &D.54879
  if (&D.54879.D.11539._M_local_buf != _153)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  # DEBUG D#252 => D.54879.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54879
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54879
  # DEBUG this => D#1
  # DEBUG this => &D.54879
  # DEBUG D#249 => &D.54879._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _153
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _153
  # DEBUG this => D#243
  # DEBUG D.82363 => D#244
  operator delete (_153);

  <bb 91>:
  # DEBUG D#253 => &D.54879._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54879 ={v} {CLOBBER};
  # DEBUG this => &D.54878
  # DEBUG this => &D.54878

  <bb 92>:
  Credit::Free (c_141);

  <bb 93>:
  output_158 = output_414 + 1;
  # DEBUG output => output_158
  # DEBUG output => output_158
  _134 = this_12(D)->D.50427._outputs;
  if (_134 <= output_158)
    goto <bb 4>;
  else
    goto <bb 94>;

  <bb 94>:
  goto <bb 83>;

<L56>:
  # DEBUG this => &D.53804
  # DEBUG this => &D.53804
  # DEBUG this => &D.53804
  _151 = MEM[(char * *)&D.53804];
  # DEBUG D#1 => &D.53804
  # DEBUG this => D#1
  # DEBUG this => &D.53804
  if (&D.53804.D.11539._M_local_buf != _151)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#252 => D.53804.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53804
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53804
  # DEBUG this => D#1
  # DEBUG this => &D.53804
  # DEBUG D#249 => &D.53804._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _151
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _151
  # DEBUG this => D#243
  # DEBUG D.82378 => D#244
  operator delete (_151);

  <bb 97>:
  # DEBUG D#253 => &D.53804._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53804 ={v} {CLOBBER};
  resx 3

<L58>:
  # DEBUG this => &D.53808
  # DEBUG this => &D.53808
  # DEBUG this => &D.53808
  _47 = MEM[(char * *)&D.53808];
  # DEBUG D#1 => &D.53808
  # DEBUG this => D#1
  # DEBUG this => &D.53808
  if (&D.53808.D.11539._M_local_buf != _47)
    goto <bb 99>;
  else
    goto <bb 100>;

  <bb 99>:
  # DEBUG D#252 => D.53808.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53808
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53808
  # DEBUG this => D#1
  # DEBUG this => &D.53808
  # DEBUG D#249 => &D.53808._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _47
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _47
  # DEBUG this => D#243
  # DEBUG D.82395 => D#244
  operator delete (_47);

  <bb 100>:
  # DEBUG D#253 => &D.53808._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53808 ={v} {CLOBBER};
  resx 7

<L60>:
  # DEBUG this => &D.53812
  # DEBUG this => &D.53812
  # DEBUG this => &D.53812
  _123 = MEM[(char * *)&D.53812];
  # DEBUG D#1 => &D.53812
  # DEBUG this => D#1
  # DEBUG this => &D.53812
  if (&D.53812.D.11539._M_local_buf != _123)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  # DEBUG D#252 => D.53812.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53812
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53812
  # DEBUG this => D#1
  # DEBUG this => &D.53812
  # DEBUG D#249 => &D.53812._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _123
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _123
  # DEBUG this => D#243
  # DEBUG D.82412 => D#244
  operator delete (_123);

  <bb 103>:
  # DEBUG D#253 => &D.53812._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53812 ={v} {CLOBBER};
  resx 11

<L62>:
  # DEBUG this => &D.53816
  # DEBUG this => &D.53816
  # DEBUG this => &D.53816
  _132 = MEM[(char * *)&D.53816];
  # DEBUG D#1 => &D.53816
  # DEBUG this => D#1
  # DEBUG this => &D.53816
  if (&D.53816.D.11539._M_local_buf != _132)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#252 => D.53816.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53816
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53816
  # DEBUG this => D#1
  # DEBUG this => &D.53816
  # DEBUG D#249 => &D.53816._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _132
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _132
  # DEBUG this => D#243
  # DEBUG D.82429 => D#244
  operator delete (_132);

  <bb 106>:
  # DEBUG D#253 => &D.53816._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53816 ={v} {CLOBBER};
  resx 15

<L64>:
  # DEBUG this => &D.53819
  # DEBUG this => &D.53819
  # DEBUG this => &D.53819
  _104 = MEM[(char * *)&D.53819];
  # DEBUG D#1 => &D.53819
  # DEBUG this => D#1
  # DEBUG this => &D.53819
  if (&D.53819.D.11539._M_local_buf != _104)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  # DEBUG D#252 => D.53819.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53819
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53819
  # DEBUG this => D#1
  # DEBUG this => &D.53819
  # DEBUG D#249 => &D.53819._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _104
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _104
  # DEBUG this => D#243
  # DEBUG D.82446 => D#244
  operator delete (_104);

  <bb 109>:
  # DEBUG D#253 => &D.53819._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53819 ={v} {CLOBBER};
  resx 19

<L66>:
  # DEBUG this => &D.53823
  # DEBUG this => &D.53823
  # DEBUG this => &D.53823
  _112 = MEM[(char * *)&D.53823];
  # DEBUG D#1 => &D.53823
  # DEBUG this => D#1
  # DEBUG this => &D.53823
  if (&D.53823.D.11539._M_local_buf != _112)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  # DEBUG D#252 => D.53823.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53823
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53823
  # DEBUG this => D#1
  # DEBUG this => &D.53823
  # DEBUG D#249 => &D.53823._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _112
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _112
  # DEBUG this => D#243
  # DEBUG D.82463 => D#244
  operator delete (_112);

  <bb 112>:
  # DEBUG D#253 => &D.53823._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53823 ={v} {CLOBBER};
  resx 23

<L68>:
  # DEBUG this => &D.53827
  # DEBUG this => &D.53827
  # DEBUG this => &D.53827
  _92 = MEM[(char * *)&D.53827];
  # DEBUG D#1 => &D.53827
  # DEBUG this => D#1
  # DEBUG this => &D.53827
  if (&D.53827.D.11539._M_local_buf != _92)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  # DEBUG D#252 => D.53827.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53827
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53827
  # DEBUG this => D#1
  # DEBUG this => &D.53827
  # DEBUG D#249 => &D.53827._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _92
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _92
  # DEBUG this => D#243
  # DEBUG D.82480 => D#244
  operator delete (_92);

  <bb 115>:
  # DEBUG D#253 => &D.53827._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53827 ={v} {CLOBBER};
  resx 27

<L70>:
  # DEBUG this => &D.53830
  # DEBUG this => &D.53830
  # DEBUG this => &D.53830
  _80 = MEM[(char * *)&D.53830];
  # DEBUG D#1 => &D.53830
  # DEBUG this => D#1
  # DEBUG this => &D.53830
  if (&D.53830.D.11539._M_local_buf != _80)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # DEBUG D#252 => D.53830.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53830
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53830
  # DEBUG this => D#1
  # DEBUG this => &D.53830
  # DEBUG D#249 => &D.53830._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _80
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _80
  # DEBUG this => D#243
  # DEBUG D.82497 => D#244
  operator delete (_80);

  <bb 118>:
  # DEBUG D#253 => &D.53830._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53830 ={v} {CLOBBER};
  resx 31

<L72>:
  # DEBUG this => &D.54879
  # DEBUG this => &D.54879
  # DEBUG this => &D.54879
  _72 = MEM[(char * *)&D.54879];
  # DEBUG D#1 => &D.54879
  # DEBUG this => D#1
  # DEBUG this => &D.54879
  if (&D.54879.D.11539._M_local_buf != _72)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#252 => D.54879.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54879
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54879
  # DEBUG this => D#1
  # DEBUG this => &D.54879
  # DEBUG D#249 => &D.54879._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _72
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _72
  # DEBUG this => D#243
  # DEBUG D.82514 => D#244
  operator delete (_72);

  <bb 121>:
  # DEBUG D#253 => &D.54879._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54879 ={v} {CLOBBER};
  resx 35

}



;; Function void ChaosRouter::_SendFlits() (_ZN11ChaosRouter10_SendFlitsEv, funcdef_no=2051, decl_uid=50366, cgraph_uid=511, symbol_order=512)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void ChaosRouter::_SendFlits() (struct ChaosRouter * const this)
{
  struct Flit * f;
  int output;
  int _8;
  struct PipelineFIFO * _9;
  struct Flit * & _12;
  int _14;
  int _15;
  long unsigned int _17;
  int _18;
  int _19;
  struct Flit * * _20;
  struct vector & _21;
  long unsigned int _22;
  struct FlitChannel * _23;
  int (*__vtbl_ptr_type) () * _24;
  int (*__vtbl_ptr_type) () _25;
  struct vector * _26;
  long unsigned int _27;
  struct Flit * _28;
  long unsigned int _30;
  int _31;
  int _32;
  int _33;
  int * _37;
  int * _38;
  struct FlitChannel * * _39;
  struct queue * _40;
  struct queue * _41;
  struct queue * _43;
  struct deque * _44;
  long unsigned int _45;
  struct queue & _46;
  long unsigned int _47;
  int & _48;
  struct Flit * * const _49;
  struct Flit * * const _50;
  long unsigned int _51;
  struct queue & _52;
  long unsigned int _56;
  struct FlitChannel * & _57;
  int & _58;
  int _59;
  struct Flit * * _60;
  struct Flit * * _61;
  struct Flit * * _62;
  struct Flit * * _63;
  struct queue & _64;
  struct Flit * * _69;
  struct Flit * * _70;
  struct Flit * * _71;
  struct Flit * * _74;
  struct Flit * * _75;
  struct Flit * * _76;
  struct Flit * * * _78;
  struct Flit * * * _79;
  struct Flit * * _80;
  struct Flit * * _81;
  long unsigned int _83;
  struct Flit * * * _84;
  long int _85;
  struct Flit * * * _86;
  long int _87;
  long int _88;
  long int _89;
  long unsigned int _90;
  long unsigned int _91;
  struct Flit * * _92;
  struct Flit * * * _93;
  struct Flit * * * _94;
  struct Flit * * _95;
  struct Flit * * _96;
  struct Flit * * * pretmp_173;
  struct Flit * * * prephitmp_174;
  struct Flit * * pretmp_175;
  struct Flit * * prephitmp_176;

  <bb 2>:
  # DEBUG output => 0
  # DEBUG output => 0
  _59 = this_7(D)->D.50427._outputs;
  if (_59 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # output_2 = PHI <0(4), output_36(22)>
  # DEBUG output => output_2
  _9 = this_7(D)->_crossbar_pipe;
  # DEBUG this => _9
  # DEBUG lane => output_2
  _31 = _9->_pipe_ptr;
  _30 = (long unsigned int) _31;
  _27 = (long unsigned int) output_2;
  # DEBUG D#91 => &_9->_data
  _26 = MEM[(struct vector * *)_9 + 112B];
  # DEBUG D#71 => D#91
  # DEBUG __n => _27
  # DEBUG this => D#71
  _22 = _27 * 24;
  _21 = _26 + _22;
  _20 = MEM[(struct Flit * * *)_21];
  # DEBUG __n => _30
  # DEBUG this => D#88
  _17 = _30 * 8;
  _12 = _20 + _17;
  f_10 = *_12;
  # DEBUG f => f_10
  if (f_10 != 0B)
    goto <bb 6>;
  else
    goto <bb 16>;

  <bb 6>:
  # DEBUG D#1011 => &this_7(D)->_output_frame
  _40 = MEM[(struct queue * *)this_7(D) + 376B];
  # DEBUG D#34 => D#1011
  # DEBUG __n => _27
  # DEBUG this => D#34
  _45 = _27 * 80;
  _46 = _40 + _45;
  # DEBUG this => NULL
  # DEBUG __x => &f
  # DEBUG D#1789 => &_46->c
  # DEBUG this => D#1789
  # DEBUG __x => &f
  _69 = MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_cur;
  _70 = MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_last;
  _71 = _70 + 18446744073709551608;
  if (_69 != _71)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  # DEBUG D#994 => &D#1789->D.47197._M_impl
  # DEBUG D#223 => D#994
  # DEBUG __p => _69
  # DEBUG __arg => &f
  # DEBUG __a => D#223
  # DEBUG D#222 => D#223
  # DEBUG D#221 => D#222
  # DEBUG __p => _69
  # DEBUG __val => &f
  # DEBUG this => D#221
  # DEBUG D#9 => 8
  # DEBUG __p => _69
  # DEBUG D.74231 => D#9
  if (_69 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  *_69 = f_10;
  pretmp_175 = MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_cur;

  <bb 9>:
  # prephitmp_176 = PHI <_69(7), pretmp_175(8)>
  _74 = prephitmp_176 + 8;
  MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_cur = _74;
  goto <bb 15>;

  <bb 10>:
  # DEBUG this => D#1789
  # DEBUG __t => &f
  # DEBUG this => D#1789
  # DEBUG __nodes_to_add => 1
  _83 = MEM[(struct deque *)_46].D.47197._M_impl._M_map_size;
  _84 = MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_node;
  _85 = (long int) _84;
  _86 = MEM[(struct deque *)_46].D.47197._M_impl._M_map;
  _87 = (long int) _86;
  _88 = _85 - _87;
  _89 = _88 /[ex] -8;
  _90 = (long unsigned int) _89;
  _91 = _83 + _90;
  if (_91 <= 1)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _44 = &_46->c;
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (_44, 1, 0);
  pretmp_173 = MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_node;

  <bb 12>:
  # prephitmp_174 = PHI <pretmp_173(11), _84(10)>
  # DEBUG D#993 => &D#1789->D.47197
  # DEBUG D#850 => D#993
  # DEBUG this => D#850
  # DEBUG D#849 => D#850
  # DEBUG __size => 8
  # DEBUG D#848 => &D#849->_M_impl
  # DEBUG D#842 => D#848
  # DEBUG __n => NULL
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#839
  # DEBUG D.94166 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  _75 = operator new (512);
  MEM[(struct Flit * * *)prephitmp_174 + 8B] = _75;
  _76 = MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_cur;
  # DEBUG D#992 => &D#1789->D.47197._M_impl
  # DEBUG D#221 => D#992
  # DEBUG __p => _76
  # DEBUG __val => &f
  # DEBUG this => D#221
  # DEBUG D#9 => 8
  # DEBUG __p => _76
  # DEBUG D.74231 => D#9
  if (_76 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  *_76 = f_10;

  <bb 14>:
  _78 = MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_node;
  _79 = _78 + 8;
  # DEBUG D#991 => &D#1789->D.47197._M_impl._M_finish
  # DEBUG this => D#991
  # DEBUG __new_node => _79
  MEM[(struct _Deque_iterator *)_46 + 48B]._M_node = _79;
  _80 = MEM[(struct Flit * * *)_78 + 8B];
  MEM[(struct _Deque_iterator *)_46 + 48B]._M_first = _80;
  # DEBUG __size => 8
  _81 = _80 + 512;
  MEM[(struct _Deque_iterator *)_46 + 48B]._M_last = _81;
  MEM[(struct deque *)_46].D.47197._M_impl._M_finish._M_cur = _80;

  <bb 15>:
  _14 = f_10->hops;
  _15 = _14 + 1;
  f_10->hops = _15;

  <bb 16>:
  # DEBUG D#1012 => &this_7(D)->_next_queue_cnt
  _37 = MEM[(int * *)this_7(D) + 424B];
  # DEBUG D#31 => D#1012
  # DEBUG __n => _27
  # DEBUG this => D#31
  _47 = _27 * 4;
  _48 = _37 + _47;
  _18 = *_48;
  _19 = this_7(D)->_buffer_size;
  if (_18 < _19)
    goto <bb 17>;
  else
    goto <bb 21>;

  <bb 17>:
  # DEBUG D#1013 => &this_7(D)->_output_frame
  _41 = MEM[(struct queue * *)this_7(D) + 376B];
  # DEBUG D#34 => D#1013
  # DEBUG __n => _27
  # DEBUG this => D#34
  _51 = _27 * 80;
  _52 = _41 + _51;
  # DEBUG this => NULL
  # DEBUG this => D#63
  # DEBUG D#61 => &D#63->D.47197._M_impl._M_start
  # DEBUG D#62 => &D#63->D.47197._M_impl._M_finish
  _49 = MEM[(struct Flit * * *)_52 + 48B];
  # DEBUG D#59 => D#62
  _50 = MEM[(struct Flit * * *)_52 + 16B];
  # DEBUG D#60 => D#61
  # DEBUG __x => D#59
  # DEBUG __y => D#60
  if (_49 != _50)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 18>:
  # DEBUG D#597 => D#1788->D.47197._M_impl._M_start._M_cur
  # DEBUG D#596 => &D#1788->D.47197._M_impl
  # DEBUG D#228 => D#596
  # DEBUG D#229 => D#597
  # DEBUG __a => D#228
  # DEBUG __p => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG this => D#224
  # DEBUG __p => D#225
  _63 = _60 + 8;
  MEM[(struct deque *)_64].D.47197._M_impl._M_start._M_cur = _63;
  goto <bb 20>;

  <bb 19>:
  # DEBUG this => D#1788
  # DEBUG this => D#1788
  # DEBUG D#595 => D#1788->D.47197._M_impl._M_start._M_cur
  # DEBUG D#592 => &D#1788->D.47197
  # DEBUG this => D#592
  # DEBUG D#229 => D#595
  # DEBUG __a => D#228
  # DEBUG __p => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG this => D#224
  # DEBUG __p => D#225
  _92 = MEM[(struct deque *)_64].D.47197._M_impl._M_start._M_first;
  # DEBUG D#594 => &D#1788->D.47197
  # DEBUG D#591 => D#594
  # DEBUG __p => _92
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _92
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _92
  # DEBUG this => D#565
  # DEBUG D.94184 => D#566
  operator delete (_92);
  _93 = MEM[(struct deque *)_64].D.47197._M_impl._M_start._M_node;
  _94 = _93 + 8;
  # DEBUG D#593 => &D#1788->D.47197._M_impl._M_start
  # DEBUG this => D#593
  # DEBUG __new_node => _94
  MEM[(struct _Deque_iterator *)_64 + 16B]._M_node = _94;
  _95 = MEM[(struct Flit * * *)_93 + 8B];
  MEM[(struct _Deque_iterator *)_64 + 16B]._M_first = _95;
  # DEBUG __size => 8
  _96 = _95 + 512;
  MEM[(struct _Deque_iterator *)_64 + 16B]._M_last = _96;
  MEM[(struct deque *)_64].D.47197._M_impl._M_start._M_cur = _95;

  <bb 20>:
  # DEBUG D#1017 => &this_7(D)->_next_queue_cnt
  _38 = MEM[(int * *)this_7(D) + 424B];
  # DEBUG D#31 => D#1017
  # DEBUG __n => _27
  # DEBUG this => D#31
  _58 = _38 + _47;
  _32 = *_58;
  _33 = _32 + 1;
  *_58 = _33;

  <bb 21>:
  # DEBUG D#1787 => {CLOBBER}
  # DEBUG f => D#1787
  output_36 = output_2 + 1;
  # DEBUG output => output_36
  # DEBUG output => output_36
  _8 = this_7(D)->D.50427._outputs;
  if (_8 <= output_36)
    goto <bb 3>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 5>;

  <bb 23>:
  # DEBUG D#1014 => &this_7(D)->D.50427._output_channels
  _39 = MEM[(struct FlitChannel * * *)this_7(D) + 192B];
  # DEBUG D#33 => D#1014
  # DEBUG __n => _27
  # DEBUG this => D#33
  _56 = _27 * 8;
  _57 = _39 + _56;
  _23 = *_57;
  _24 = _23->D.35808.D.35202.D.29663._vptr.Module;
  _25 = MEM[(int (*__vtbl_ptr_type) () *)_24 + 48B];
  # DEBUG D#1015 => &this_7(D)->_output_frame
  # DEBUG D#34 => D#1015
  # DEBUG __n => _27
  # DEBUG this => D#34
  # DEBUG this => NULL
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#73 => &D#123->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#122 => MEM[(const struct iterator &)D#123 + 16]._M_first
  # DEBUG D.73667 => D#122
  # DEBUG D#121 => MEM[(const struct iterator &)D#123 + 16]._M_last
  # DEBUG D.73668 => D#121
  # DEBUG D#120 => MEM[(const struct iterator &)D#123 + 16]._M_node
  # DEBUG D.73669 => D#120
  # DEBUG this => D#119
  _28 = *_50;
  OBJ_TYPE_REF(_25;(struct FlitChannel)_23->6) (_23, _28);
  # DEBUG D#1016 => &this_7(D)->_output_frame
  _43 = MEM[(struct queue * *)this_7(D) + 376B];
  # DEBUG D#34 => D#1016
  # DEBUG __n => _27
  # DEBUG this => D#34
  _64 = _43 + _51;
  # DEBUG this => NULL
  # DEBUG D#1788 => &_64->c
  # DEBUG this => D#1788
  _60 = MEM[(struct deque *)_64].D.47197._M_impl._M_start._M_cur;
  _61 = MEM[(struct deque *)_64].D.47197._M_impl._M_start._M_last;
  _62 = _61 + 18446744073709551608;
  if (_60 != _62)
    goto <bb 18>;
  else
    goto <bb 19>;

}



;; Function virtual void ChaosRouter::WriteOutputs() (_ZN11ChaosRouter12WriteOutputsEv, funcdef_no=2039, decl_uid=50385, cgraph_uid=499, symbol_order=500)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void ChaosRouter::WriteOutputs() (struct ChaosRouter * const this)
{
  struct Credit * c;
  int input;
  struct Credit * * _4;
  long unsigned int _7;
  struct queue * _8;
  long unsigned int _9;
  struct queue & _10;
  struct Credit * * const _11;
  struct Credit * * const _12;
  struct Credit * * _15;
  struct Credit * * _16;
  struct Credit * * _17;
  struct Channel * * _18;
  long unsigned int _19;
  struct Channel * & _20;
  struct Channel * _21;
  int (*__vtbl_ptr_type) () * _22;
  int (*__vtbl_ptr_type) () _23;
  void * PROF_25;
  struct Credit * * * _27;
  struct Credit * * * _28;
  struct Credit * * _29;
  struct Credit * * _30;
  int _44;
  int prephitmp_61;
  int pretmp_63;
  int pretmp_64;
  int prephitmp_65;

  <bb 2>:
  ChaosRouter::_SendFlits (this_2(D));
  # DEBUG this => this_2(D)
  # DEBUG input => 0
  _44 = this_2(D)->D.50427._inputs;
  if (_44 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # input_45 = PHI <0(4), input_24(13)>
  # prephitmp_61 = PHI <_44(4), prephitmp_65(13)>
  # DEBUG input => input_45
  _7 = (long unsigned int) input_45;
  # DEBUG D#636 => &this_2(D)->_credit_queue
  _8 = MEM[(struct queue * *)this_2(D) + 448B];
  # DEBUG D#55 => D#636
  # DEBUG __n => _7
  # DEBUG this => D#55
  _9 = _7 * 80;
  _10 = _8 + _9;
  # DEBUG this => NULL
  # DEBUG this => D#129
  # DEBUG D#127 => &D#129->D.53612._M_impl._M_start
  # DEBUG D#128 => &D#129->D.53612._M_impl._M_finish
  _11 = MEM[(struct Credit * * *)_10 + 48B];
  # DEBUG D#125 => D#128
  _12 = MEM[(struct Credit * * *)_10 + 16B];
  # DEBUG D#126 => D#127
  # DEBUG __x => D#125
  # DEBUG __y => D#126
  if (_11 != _12)
    goto <bb 6>;
  else
    goto <bb 12>;

  <bb 6>:
  # DEBUG D#637 => &this_2(D)->_credit_queue
  # DEBUG D#55 => D#637
  # DEBUG __n => _7
  # DEBUG this => D#55
  # DEBUG this => NULL
  # DEBUG this => D#134
  # DEBUG this => D#134
  # DEBUG D#80 => &D#134->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#133 => MEM[(const struct iterator &)D#134 + 16]._M_first
  # DEBUG D.73722 => D#133
  # DEBUG D#132 => MEM[(const struct iterator &)D#134 + 16]._M_last
  # DEBUG D.73723 => D#132
  # DEBUG D#131 => MEM[(const struct iterator &)D#134 + 16]._M_node
  # DEBUG D.73724 => D#131
  # DEBUG this => D#130
  c_13 = *_12;
  # DEBUG c => c_13
  # DEBUG D#638 => &this_2(D)->_credit_queue
  # DEBUG D#55 => D#638
  # DEBUG __n => _7
  # DEBUG this => D#55
  # DEBUG this => NULL
  # DEBUG D#1791 => &_10->c
  # DEBUG this => D#1791
  _15 = MEM[(struct deque *)_10].D.53612._M_impl._M_start._M_last;
  _16 = _15 + 18446744073709551608;
  if (_12 != _16)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#635 => D#1791->D.53612._M_impl._M_start._M_cur
  # DEBUG D#634 => &D#1791->D.53612._M_impl
  # DEBUG D#241 => D#634
  # DEBUG D#242 => D#635
  # DEBUG __a => D#241
  # DEBUG __p => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG this => D#237
  # DEBUG __p => D#238
  _17 = _12 + 8;
  MEM[(struct deque *)_10].D.53612._M_impl._M_start._M_cur = _17;
  goto <bb 9>;

  <bb 8>:
  # DEBUG this => D#1791
  # DEBUG this => D#1791
  # DEBUG D#633 => D#1791->D.53612._M_impl._M_start._M_cur
  # DEBUG D#630 => &D#1791->D.53612
  # DEBUG this => D#630
  # DEBUG D#242 => D#633
  # DEBUG __a => D#241
  # DEBUG __p => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG this => D#237
  # DEBUG __p => D#238
  _4 = MEM[(struct deque *)_10].D.53612._M_impl._M_start._M_first;
  # DEBUG D#632 => &D#1791->D.53612
  # DEBUG this => D#632
  # DEBUG __p => _4
  # DEBUG __size => 8
  # DEBUG D#629 => &D#632->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _4
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _4
  # DEBUG this => D#623
  # DEBUG D.94241 => D#624
  operator delete (_4);
  _27 = MEM[(struct deque *)_10].D.53612._M_impl._M_start._M_node;
  _28 = _27 + 8;
  # DEBUG D#631 => &D#1791->D.53612._M_impl._M_start
  # DEBUG this => D#631
  # DEBUG __new_node => _28
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_node = _28;
  _29 = MEM[(struct Credit * * *)_27 + 8B];
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_first = _29;
  # DEBUG __size => 8
  _30 = _29 + 512;
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_last = _30;
  MEM[(struct deque *)_10].D.53612._M_impl._M_start._M_cur = _29;

  <bb 9>:
  # DEBUG D#639 => &this_2(D)->D.50427._input_credits
  _18 = MEM[(struct Channel * * *)this_2(D) + 168B];
  # DEBUG D#35 => D#639
  # DEBUG __n => _7
  # DEBUG this => D#35
  _19 = _7 * 8;
  _20 = _18 + _19;
  _21 = *_20;
  _22 = _21->D.54869.D.29663._vptr.Module;
  _23 = MEM[(int (*__vtbl_ptr_type) () *)_22 + 48B];
  PROF_25 = [obj_type_ref] OBJ_TYPE_REF(_23;(struct Channel)_21->6);
  if (PROF_25 == Send)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => _21
  # DEBUG data => c_13
  _21->_input = c_13;
  pretmp_63 = this_2(D)->D.50427._inputs;
  goto <bb 12>;

  <bb 11>:
  OBJ_TYPE_REF(_23;(struct Channel)_21->6) (_21, c_13);
  pretmp_64 = this_2(D)->D.50427._inputs;

  <bb 12>:
  # prephitmp_65 = PHI <prephitmp_61(5), pretmp_63(10), pretmp_64(11)>
  input_24 = input_45 + 1;
  # DEBUG input => input_24
  # DEBUG input => input_24
  if (input_24 >= prephitmp_65)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 5>;

}



;; Function void ChaosRouter::_OutputAdvance() (_ZN11ChaosRouter14_OutputAdvanceEv, funcdef_no=2050, decl_uid=50364, cgraph_uid=510, symbol_order=511)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void ChaosRouter::_OutputAdvance() (struct ChaosRouter * const this)
{
  struct _Rb_tree_node_base * SR.2846;
  struct _Rb_tree_node_base * SR.2845;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  size_type __dnew;
  char_type D.94647;
  char __c;
  char_type D.94644;
  char __c;
  char_type D.94641;
  struct basic_ostream & D.94635;
  size_type __dnew;
  char_type D.94571;
  char __c;
  char_type D.94568;
  char __c;
  char_type D.94565;
  struct basic_ostream & D.94559;
  size_type __dnew;
  char_type D.94514;
  char __c;
  char_type D.94511;
  char __c;
  char_type D.94508;
  struct basic_ostream & D.94502;
  bool __insert_left;
  struct iterator D.94467;
  struct pair D.94440;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct _Rb_tree_node_base * SR.1710;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * __res$first;
  struct pair __res;
  struct iterator D.94410;
  struct pair D.94409;
  char_type D.94372;
  char __c;
  char_type D.94369;
  char __c;
  char_type D.94366;
  char_type D.94360;
  char __c;
  char_type D.94357;
  char __c;
  char_type D.94354;
  struct basic_ostream & D.94348;
  struct basic_ostream & D.94345;
  bool D.94318;
  char_type D.94309;
  char __c;
  char_type D.94306;
  char __c;
  char_type D.94303;
  struct basic_ostream & D.94297;
  struct pair __p;
  int l;
  int m;
  int i;
  static const char __PRETTY_FUNCTION__[35] = "void ChaosRouter::_OutputAdvance()";
  bool advanced;
  struct Credit * c;
  struct Flit * f2;
  struct Flit * f;
  const struct string D.55108;
  const struct string D.55104;
  const struct string D.55100;
  const value_type D.54984;
  const struct string D.54983;
  const struct string D.54979;
  struct queue * _1;
  int prephitmp_6;
  struct PipelineFIFO * _22;
  long unsigned int _24;
  int _25;
  int _26;
  struct basic_ostream & _27;
  char * const _28;
  long int _29;
  bool _32;
  long unsigned int _33;
  unsigned int _34;
  struct PipelineFIFO * _35;
  bool _37;
  int _39;
  struct ostream * gWatchOut.275_40;
  struct basic_ostream & _42;
  const size_type _43;
  struct basic_ostream & _45;
  const size_type _46;
  struct Flit * & _50;
  long unsigned int _52;
  bool _53;
  void (*<T7a35>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _54;
  struct Flit * * _56;
  struct OutputSet * _57;
  struct Router * _58;
  struct vector & _60;
  long unsigned int _62;
  eQState _63;
  long unsigned int _65;
  int _67;
  char * const _72;
  char * const _74;
  struct vector * _75;
  bool _78;
  unsigned int _80;
  eQState _81;
  long unsigned int _82;
  _Bit_type * _83;
  long unsigned int _85;
  struct Module * _87;
  struct deque * _89;
  char * const _91;
  char * const _93;
  long unsigned int _96;
  bool _98;
  eQState _99;
  int _100;
  unsigned int _101;
  long unsigned int _102;
  int _104;
  struct ostream * gWatchOut.275_105;
  struct basic_ostream & _107;
  const size_type _108;
  const size_type _109;
  struct queue & _111;
  struct basic_ostream & _113;
  long unsigned int _116;
  bool _118;
  eQState _119;
  long unsigned int _120;
  void (*<T7a35>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _127;
  struct OutputSet * _129;
  struct Router * _130;
  struct deque * _140;
  int _143;
  long unsigned int _144;
  int _146;
  eQState _147;
  int _148;
  struct basic_ostream & _150;
  int (*__vtbl_ptr_type) () * _152;
  struct Module * _153;
  struct Flit * * const _155;
  char * const _157;
  char * const _159;
  int & _165;
  int _166;
  struct PipelineFIFO * _168;
  bool _170;
  int _172;
  struct ostream * gWatchOut.275_173;
  struct basic_ostream & _175;
  const size_type _176;
  struct basic_ostream & _178;
  const size_type _179;
  bool _183;
  int & _184;
  eQState _185;
  struct Flit * & _187;
  struct Module * _191;
  char * const _194;
  char * const _196;
  long unsigned int _197;
  bool _200;
  struct Flit * * _201;
  int _202;
  long unsigned int _203;
  unsigned int _204;
  struct vector & _205;
  long unsigned int _207;
  eQState _208;
  long unsigned int _209;
  int _213;
  struct basic_ostream & _215;
  int (*__vtbl_ptr_type) () * _219;
  struct Module * _220;
  char * const _223;
  struct vector * _227;
  int _231;
  int _232;
  struct OutputSet * * _237;
  struct OutputSet * * _238;
  eQState * _239;
  eQState * _240;
  eQState * _241;
  eQState * _242;
  eQState * _243;
  eQState * _244;
  eQState * _245;
  int * _246;
  int * _247;
  int * _249;
  int * _250;
  int * _251;
  int * _252;
  int * _253;
  int * _254;
  int * _255;
  _Bit_type * _256;
  _Bit_type * _257;
  _Bit_type * _258;
  struct queue * _261;
  struct queue * _262;
  struct queue * _263;
  struct queue * _264;
  struct queue * _265;
  struct queue * _266;
  long int _267;
  char * const _268;
  struct basic_ostream & _269;
  long unsigned int _271;
  struct OutputSet * & _272;
  eQState & _273;
  long unsigned int _274;
  int & _275;
  long unsigned int _276;
  eQState & _277;
  long unsigned int _282;
  long unsigned int _283;
  long unsigned int _284;
  unsigned int _285;
  long unsigned int _286;
  long unsigned int _287;
  _Bit_type * _288;
  long unsigned int _289;
  struct queue & _291;
  long unsigned int _292;
  eQState & _293;
  long int _294;
  char * const _295;
  struct basic_ostream & _296;
  long int _297;
  char * const _298;
  struct basic_ostream & _299;
  struct Flit * * _300;
  struct Flit * * _301;
  struct Flit * * _302;
  struct Flit * * _303;
  struct queue & _304;
  eQState & _305;
  long unsigned int _306;
  struct OutputSet * & _307;
  struct Flit * * _308;
  struct queue & _309;
  int & _310;
  int & _311;
  struct queue & _312;
  struct queue & _313;
  long unsigned int _314;
  int & _315;
  struct Flit * * const _316;
  struct Flit * * const _317;
  long unsigned int _318;
  struct queue & _319;
  eQState & _320;
  struct Flit * * const _321;
  struct queue & _322;
  int _323;
  long unsigned int _324;
  long unsigned int _325;
  struct vector * _326;
  long unsigned int _327;
  struct vector & _328;
  struct Flit * * _329;
  long unsigned int _330;
  struct Flit * & _331;
  int & _332;
  long unsigned int _333;
  struct Flit * * _334;
  struct Flit * * _335;
  struct Flit * * _336;
  long int _337;
  char * const _338;
  struct basic_ostream & _339;
  long int _340;
  char * const _341;
  struct basic_ostream & _342;
  eQState & _343;
  eQState & _344;
  long unsigned int _349;
  long unsigned int _350;
  long unsigned int _351;
  unsigned int _352;
  long unsigned int _353;
  long unsigned int _354;
  _Bit_type * _355;
  long unsigned int _356;
  int & _357;
  int & _358;
  char * const _359;
  const struct __ctype_type * _368;
  const struct __ctype_type * _396;
  int (*__vtbl_ptr_type) () * _398;
  struct Credit * * _399;
  struct _Rb_tree_node_base * _401;
  const struct __ctype_type * _405;
  int (*__vtbl_ptr_type) () * _416;
  const struct __ctype_type * _425;
  const struct __ctype_type * _438;
  int (*__vtbl_ptr_type) () * _449;
  long int _450;
  sizetype _451;
  struct basic_ios * _452;
  struct basic_ostream & _455;
  struct basic_ostream & _456;
  char _457;
  char_type _460;
  struct _Rb_tree_node_base * const _462;
  int (*__vtbl_ptr_type) () * _465;
  int (*__vtbl_ptr_type) () _466;
  int _468;
  void * PROF_470;
  char_type _472;
  long unsigned int _475;
  struct queue * const _476;
  long unsigned int _477;
  const struct queue & _478;
  struct Flit * * * _479;
  long int _480;
  struct Flit * * * _481;
  long int _482;
  long int _483;
  long int _484;
  long int _485;
  long int _486;
  struct Flit * * _487;
  long int _488;
  struct Flit * * _489;
  long int _490;
  long int _491;
  long int _492;
  long int _493;
  struct Flit * * _494;
  long int _495;
  struct Flit * * _496;
  long int _497;
  long int _498;
  long int _499;
  difference_type _500;
  size_type _501;
  int _502;
  long unsigned int _503;
  struct Flit * * _505;
  struct Flit * * _506;
  struct Flit * * _507;
  struct Flit * * _510;
  struct Flit * * _511;
  struct Flit * * _512;
  int pretmp_513;
  struct Flit * * * _514;
  struct Flit * * * _515;
  struct Flit * * _516;
  struct Flit * * _517;
  long unsigned int _519;
  struct Flit * * * _520;
  long int _521;
  struct Flit * * * _522;
  long int _523;
  long int _524;
  long int _525;
  long unsigned int _526;
  long unsigned int _527;
  int (*__vtbl_ptr_type) () * _528;
  long int _529;
  sizetype _530;
  struct basic_ios * _531;
  struct Flit * * const _532;
  struct basic_ostream & _534;
  struct basic_ostream & _535;
  long int _536;
  sizetype _537;
  struct basic_ios * _538;
  struct basic_ostream & _541;
  struct basic_ostream & _542;
  char _543;
  char_type _546;
  int (*__vtbl_ptr_type) () * _551;
  int (*__vtbl_ptr_type) () _552;
  void * PROF_556;
  char_type _558;
  const struct __ctype_type * _561;
  char _562;
  char_type _565;
  int (*__vtbl_ptr_type) () * _570;
  int (*__vtbl_ptr_type) () _571;
  struct queue * _573;
  void * PROF_575;
  char_type _577;
  struct Flit * * _580;
  struct Flit * * * _581;
  struct Flit * * * _582;
  struct Flit * * _583;
  struct Flit * * _584;
  struct Credit * * _585;
  struct Credit * * _586;
  struct Credit * * _589;
  int prephitmp_594;
  const int _595;
  struct _Rb_tree_node_base * _597;
  struct _Rb_tree_node_base * _598;
  struct _Rb_tree_node_base * _600;
  long unsigned int pretmp_605;
  long unsigned int prephitmp_610;
  const int _611;
  struct _Rb_tree_node * _612;
  int pretmp_614;
  long unsigned int _618;
  long unsigned int _619;
  struct Credit * * _621;
  struct Credit * * _622;
  struct Credit * * * _624;
  struct Credit * * * _625;
  struct Credit * * _626;
  struct Credit * * _627;
  int pretmp_628;
  long unsigned int _629;
  struct Credit * * * _630;
  long int _631;
  struct Credit * * * _632;
  long int _633;
  long int _634;
  long int _635;
  long unsigned int _636;
  long unsigned int _637;
  long unsigned int _641;
  long int _643;
  sizetype _644;
  struct basic_ios * _645;
  struct basic_ostream & _648;
  int _649;
  char _650;
  char_type _653;
  int (*__vtbl_ptr_type) () * _658;
  int (*__vtbl_ptr_type) () _659;
  void * PROF_663;
  char_type _665;
  char * _673;
  long unsigned int __dnew.4_674;
  long unsigned int __dnew.4_677;
  char * const _678;
  char * _679;
  struct Flit * * _680;
  struct Flit * * * _681;
  struct Flit * * * _682;
  struct Flit * * _683;
  struct Flit * * _684;
  long int _685;
  sizetype _686;
  struct basic_ios * _687;
  struct basic_ostream & _690;
  struct basic_ostream & _691;
  char _692;
  char_type _695;
  long unsigned int _697;
  int (*__vtbl_ptr_type) () * _700;
  int (*__vtbl_ptr_type) () _701;
  void * PROF_705;
  char_type _707;
  struct Credit * * * prephitmp_708;
  struct Credit * * pretmp_710;
  struct Credit * * prephitmp_711;
  struct Flit * * const _715;
  struct Flit * * const _716;
  char * _719;
  long unsigned int __dnew.4_720;
  long unsigned int __dnew.4_723;
  char * const _724;
  char * _725;
  int pretmp_726;
  int prephitmp_728;
  long int _731;
  sizetype _732;
  struct basic_ios * _733;
  struct basic_ostream & _736;
  char _738;
  int pretmp_740;
  char_type _741;
  int prephitmp_742;
  const int pretmp_745;
  int (*__vtbl_ptr_type) () * _746;
  int (*__vtbl_ptr_type) () _747;
  const int prephitmp_748;
  void * PROF_751;
  char_type _753;
  char * _761;
  long unsigned int __dnew.4_762;
  long unsigned int __dnew.4_765;
  char * const _766;
  char * _767;
  struct Flit * * const _772;
  struct queue & _804;
  int _812;
  struct Credit * * * pretmp_879;
  struct Flit * * const _881;
  int pretmp_898;
  int pretmp_939;
  int pretmp_940;
  int prephitmp_941;
  int pretmp_942;
  int pretmp_943;
  int prephitmp_944;
  struct Flit * * * pretmp_945;
  struct Flit * * * prephitmp_946;
  struct Flit * * pretmp_947;
  struct Flit * * prephitmp_948;
  const int _973;
  int pretmp_981;
  int pretmp_982;
  int prephitmp_983;
  int pretmp_984;
  int pretmp_985;
  int prephitmp_986;
  int pretmp_987;
  int pretmp_988;
  int prephitmp_989;
  long unsigned int pretmp_991;
  long unsigned int pretmp_992;

  <bb 2>:
  _22 = this_21(D)->_crossbar_pipe;
  # DEBUG this => _22
  # DEBUG val => 0B
  # DEBUG l => 0
  # DEBUG l => 0
  _649 = _22->_lanes;
  if (_649 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG i => 0
  _468 = this_21(D)->D.50427._inputs;
  if (_468 <= 0)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 4>:
  pretmp_513 = _22->_pipe_ptr;
  pretmp_991 = (long unsigned int) pretmp_513;
  pretmp_992 = pretmp_991 * 8;

  <bb 5>:
  # l_613 = PHI <0(4), l_186(6)>
  # DEBUG l => l_613
  # DEBUG D#1801 => _22->_pipe_ptr
  _209 = (long unsigned int) l_613;
  # DEBUG D#89 => &_22->_data
  _227 = MEM[(struct vector * *)_22 + 112B];
  # DEBUG D#71 => D#89
  # DEBUG __n => _209
  # DEBUG this => D#71
  _207 = _209 * 24;
  _205 = _227 + _207;
  _201 = MEM[(struct Flit * * *)_205];
  # DEBUG __n => (long unsigned int) D#1801
  # DEBUG this => D#88
  _187 = _201 + pretmp_992;
  *_187 = 0B;
  l_186 = l_613 + 1;
  # DEBUG l => l_186
  # DEBUG l => l_186
  if (l_186 >= _649)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:
  # DEBUG m => 0
  _812 = this_21(D)->_multi_queue_size;
  if (_812 <= 0)
    goto <bb 8>;
  else
    goto <bb 94>;

  <bb 8>:
  # DEBUG D#1795 => {CLOBBER}
  # DEBUG f => D#1795
  # DEBUG D#1796 => {CLOBBER}
  # DEBUG c => D#1796
  return;

  <bb 9>:

  <bb 10>:
  # i_669 = PHI <0(9), i_142(93)>
  # prephitmp_594 = PHI <_468(9), prephitmp_728(93)>
  # DEBUG i => i_669
  _24 = (long unsigned int) i_669;
  # DEBUG D#1049 => &this_21(D)->_input_output_match
  _246 = MEM[(int * *)this_21(D) + 520B];
  # DEBUG D#31 => D#1049
  # DEBUG __n => _24
  # DEBUG this => D#31
  _197 = _24 * 4;
  _184 = _246 + _197;
  _25 = *_184;
  if (_25 != -1)
    goto <bb 161>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG D#1050 => &this_21(D)->_input_mq_match
  _247 = MEM[(int * *)this_21(D) + 544B];
  # DEBUG D#31 => D#1050
  # DEBUG __n => _24
  # DEBUG this => D#31
  _165 = _247 + _197;
  _26 = *_165;
  if (_26 != -1)
    goto <bb 163>;
  else
    goto <bb 92>;

  <bb 12>:
  # DEBUG D#1054 => &this_21(D)->_input_output_match
  # DEBUG D#31 => D#1054
  # DEBUG __n => _24
  # DEBUG this => D#31
  _33 = (long unsigned int) _25;
  # DEBUG D#1055 => &this_21(D)->_output_matched
  _256 = MEM[(_Bit_type * *)this_21(D) + 616B];
  # DEBUG D#32 => D#1055
  # DEBUG __n => _33
  # DEBUG this => D#32
  _34 = (unsigned int) _33;
  _101 = _34 & 63;
  _96 = _33 >> 6;
  _85 = _96 * 8;
  _83 = _256 + _85;
  # DEBUG this => NULL
  # DEBUG __x => _83
  # DEBUG __y => _101
  # DEBUG this => D#17
  # DEBUG __x => _83
  # DEBUG __y => _101
  # DEBUG this => D#17
  # DEBUG this => D#18
  # DEBUG this => D#18
  _82 = 1 << _101;
  # DEBUG this => NULL
  # DEBUG __x => _83
  # DEBUG __y => _82
  # DEBUG this => &D.54976
  # DEBUG __x => 0
  _120 = *_83;
  _116 = ~_82;
  _102 = _116 & _120;
  *_83 = _102;

  <bb 13>:
  # prephitmp_610 = PHI <pretmp_605(160), _33(12)>
  # DEBUG D#1056 => &this_21(D)->_input_output_match
  # DEBUG D#31 => D#1056
  # DEBUG __n => _24
  # DEBUG this => D#31
  _35 = this_21(D)->_crossbar_pipe;
  # DEBUG this => _35
  # DEBUG val => f_750
  # DEBUG lane => _25
  _67 = _35->_pipe_ptr;
  _65 = (long unsigned int) _67;
  # DEBUG D#90 => &_35->_data
  _75 = MEM[(struct vector * *)_35 + 112B];
  # DEBUG D#71 => D#90
  # DEBUG __n => (long unsigned int) _25
  # DEBUG this => D#71
  _62 = prephitmp_610 * 24;
  _60 = _75 + _62;
  _56 = MEM[(struct Flit * * *)_60];
  # DEBUG __n => _65
  # DEBUG this => D#88
  _52 = _65 * 8;
  _50 = _56 + _52;
  *_50 = f_750;
  _37 = f_750->watch;
  if (_37 != 0)
    goto <bb 14>;
  else
    goto <bb 158>;

  <bb 14>:
  # DEBUG D#1057 => &this_21(D)->D.50427.D.43102.D.29663
  # DEBUG this => D#1057
  # DEBUG D#1058 => &MEM[(const struct Module *)this_21(D)]._fullname
  # DEBUG D#1059 => &this_21(D)->D.50427.D.43102.D.29663
  # DEBUG this => D#1059
  # DEBUG D#1060 => &MEM[(const struct Module *)this_21(D)]._fullname
  _39 = GetSimTime ();
  gWatchOut.275_40 = gWatchOut;
  _42 = std::basic_ostream<char>::operator<< (gWatchOut.275_40, _39);
  # DEBUG __out => _42
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_42, " | ", 3);
  # DEBUG __os => _42
  # DEBUG __str => D#1060
  _43 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1060
  # DEBUG this => D#3
  _29 = (long int) _43;
  # DEBUG this => D#1060
  _28 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1060
  # DEBUG this => D#1
  _27 = std::__ostream_insert<char, std::char_traits<char> > (_42, _28, _29);
  # DEBUG __out => _27
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_27, " | ", 3);
  # DEBUG __out => _27
  # DEBUG __s => "Flit traversing crossbar from input queue "
  # DEBUG __s => "Flit traversing crossbar from input queue "
  std::__ostream_insert<char, std::char_traits<char> > (_27, "Flit traversing crossbar from input queue ", 42);
  _45 = std::basic_ostream<char>::operator<< (_27, i_669);
  # DEBUG __out => _45
  # DEBUG __s => " at "
  # DEBUG __s => " at "
  std::__ostream_insert<char, std::char_traits<char> > (_45, " at ", 4);
  # DEBUG __os => _45
  # DEBUG __str => D#1058
  _46 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1058
  # DEBUG this => D#3
  _267 = (long int) _46;
  # DEBUG this => D#1058
  _268 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1058
  # DEBUG this => D#1
  _269 = std::__ostream_insert<char, std::char_traits<char> > (_45, _268, _267);
  # DEBUG this => _269
  # DEBUG __pf => endl
  # DEBUG __os => _269
  _449 = _269->_vptr.basic_ostream;
  _450 = MEM[(long int *)_449 + -24B];
  _451 = (sizetype) _450;
  _452 = _269 + _451;
  # DEBUG this => _452
  # DEBUG __c => 10
  _368 = MEM[(const struct basic_ios *)_452]._M_ctype;
  # DEBUG __f => _368
  if (_368 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  std::__throw_bad_cast ();

  <bb 16>:
  # DEBUG this => _368
  # DEBUG __c => 10
  _457 = MEM[(const struct ctype *)_368]._M_widen_ok;
  if (_457 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _460 = MEM[(const struct ctype *)_368]._M_widen[10];
  pretmp_614 = (int) _460;
  goto <bb 20>;

  <bb 18>:
  # DEBUG this => _368
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_368);
  _465 = MEM[(const struct ctype *)_368].D.18015._vptr.facet;
  _466 = MEM[(int (*__vtbl_ptr_type) () *)_465 + 48B];
  PROF_470 = [obj_type_ref] OBJ_TYPE_REF(_466;(const struct ctype)_368->6);
  if (PROF_470 == do_widen)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  _472 = OBJ_TYPE_REF(_466;(const struct ctype)_368->6) (_368, 10);
  pretmp_628 = (int) _472;

  <bb 20>:
  # prephitmp_6 = PHI <pretmp_614(17), 10(18), pretmp_628(19)>
  _455 = std::basic_ostream<char>::put (_269, prephitmp_6);
  # DEBUG __os => _455
  _456 = std::basic_ostream<char>::flush (_455);
  operator<< (_456, f_750);
  goto <bb 158>;

  <bb 21>:
  f_4 = *_532;
  # DEBUG D#1062 => &this_21(D)->_input_mq_match
  # DEBUG D#31 => D#1062
  # DEBUG __n => _24
  # DEBUG this => D#31
  # DEBUG mq => _26
  _53 = f_4->head;
  if (_53 != 0)
    goto <bb 22>;
  else
    goto <bb 30>;

  <bb 22>:
  _54 = this_21(D)->_rf;
  # DEBUG D#1063 => &this_21(D)->_mq_route
  _237 = MEM[(struct OutputSet * * *)this_21(D) + 312B];
  # DEBUG D#29 => D#1063
  # DEBUG __n => _475
  # DEBUG this => D#29
  _271 = _475 * 8;
  _272 = _237 + _271;
  _57 = *_272;
  _58 = &this_21(D)->D.50427;
  _54 (_58, f_4, i_669, _57, 0);
  # DEBUG D#1064 => &this_21(D)->_mq_age
  _249 = MEM[(int * *)this_21(D) + 592B];
  # DEBUG D#31 => D#1064
  # DEBUG __n => _475
  # DEBUG this => D#31
  _274 = _475 * 4;
  _275 = _249 + _274;
  *_275 = 0;
  # DEBUG D#1065 => &this_21(D)->_multi_state
  _239 = MEM[(eQState * *)this_21(D) + 496B];
  # DEBUG D#30 => D#1065
  # DEBUG __n => _475
  # DEBUG this => D#30
  _273 = _239 + _274;
  _63 = *_273;
  if (_63 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#1068 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1068
  # DEBUG __n => _475
  # DEBUG this => D#30
  *_273 = 1;
  goto <bb 30>;

  <bb 24>:
  # DEBUG D#1066 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1066
  # DEBUG __n => _475
  # DEBUG this => D#30
  if (_63 == 3)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#1067 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1067
  # DEBUG __n => _475
  # DEBUG this => D#30
  *_273 = 5;
  goto <bb 30>;

  <bb 26>:
  # DEBUG D#69 => &D.54978
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.54978
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.54979, "Multi-queue received head while not empty or leaving!");
  Module::Error (_58, &D.54979);

  <bb 27>:
  # DEBUG this => &D.54979
  # DEBUG this => &D.54979
  # DEBUG this => &D.54979
  _72 = MEM[(char * *)&D.54979];
  # DEBUG D#1 => &D.54979
  # DEBUG this => D#1
  # DEBUG this => &D.54979
  if (&D.54979.D.11539._M_local_buf != _72)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG D#252 => D.54979.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54979
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54979
  # DEBUG this => D#1
  # DEBUG this => &D.54979
  # DEBUG D#249 => &D.54979._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _72
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _72
  # DEBUG this => D#243
  # DEBUG D.83148 => D#244
  operator delete (_72);

  <bb 29>:
  # DEBUG D#253 => &D.54979._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54979 ={v} {CLOBBER};
  # DEBUG this => &D.54978
  # DEBUG this => &D.54978

  <bb 30>:
  _78 = f_4->tail;
  if (_78 != 0)
    goto <bb 31>;
  else
    goto <bb 39>;

  <bb 31>:
  # DEBUG D#1069 => &this_21(D)->_mq_matched
  _257 = MEM[(_Bit_type * *)this_21(D) + 656B];
  # DEBUG D#32 => D#1069
  # DEBUG __n => _475
  # DEBUG this => D#32
  _80 = (unsigned int) _475;
  _285 = _80 & 63;
  _286 = _475 >> 6;
  _287 = _286 * 8;
  _288 = _257 + _287;
  # DEBUG this => NULL
  # DEBUG __x => _288
  # DEBUG __y => _285
  # DEBUG this => D#17
  # DEBUG __x => _288
  # DEBUG __y => _285
  # DEBUG this => D#17
  # DEBUG this => D#18
  # DEBUG this => D#18
  _289 = 1 << _285;
  # DEBUG this => NULL
  # DEBUG __x => _288
  # DEBUG __y => _289
  # DEBUG this => &D.54980
  # DEBUG __x => 0
  _282 = *_288;
  _283 = ~_289;
  _284 = _282 & _283;
  *_288 = _284;
  # DEBUG D#1070 => &this_21(D)->_multi_state
  _240 = MEM[(eQState * *)this_21(D) + 496B];
  # DEBUG D#30 => D#1070
  # DEBUG __n => _475
  # DEBUG this => D#30
  _276 = _475 * 4;
  _277 = _240 + _276;
  _81 = *_277;
  if (_81 == 1)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # DEBUG D#1073 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1073
  # DEBUG __n => _475
  # DEBUG this => D#30
  *_277 = 2;
  goto <bb 39>;

  <bb 33>:
  # DEBUG D#1071 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1071
  # DEBUG __n => _475
  # DEBUG this => D#30
  if (_81 == 4)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#1072 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1072
  # DEBUG __n => _475
  # DEBUG this => D#30
  *_277 = 3;
  goto <bb 39>;

  <bb 35>:
  # DEBUG D#69 => &D.54982
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.54982
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.54983, "Multi-queue received tail while not filling or cutting-through!");
  _87 = &this_21(D)->D.50427.D.43102.D.29663;
  Module::Error (_87, &D.54983);

  <bb 36>:
  # DEBUG this => &D.54983
  # DEBUG this => &D.54983
  # DEBUG this => &D.54983
  _91 = MEM[(char * *)&D.54983];
  # DEBUG D#1 => &D.54983
  # DEBUG this => D#1
  # DEBUG this => &D.54983
  if (&D.54983.D.11539._M_local_buf != _91)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#252 => D.54983.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54983
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54983
  # DEBUG this => D#1
  # DEBUG this => &D.54983
  # DEBUG D#249 => &D.54983._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _91
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _91
  # DEBUG this => D#243
  # DEBUG D.83192 => D#244
  operator delete (_91);

  <bb 38>:
  # DEBUG D#253 => &D.54983._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54983 ={v} {CLOBBER};
  # DEBUG this => &D.54982
  # DEBUG this => &D.54982

  <bb 39>:
  # DEBUG D#1074 => &this_21(D)->_multi_queue
  _261 = MEM[(struct queue * *)this_21(D) + 400B];
  # DEBUG D#34 => D#1074
  # DEBUG __n => _475
  # DEBUG this => D#34
  _291 = _261 + _477;
  # DEBUG this => NULL
  # DEBUG __x => &f
  # DEBUG D#1804 => &_291->c
  # DEBUG this => D#1804
  # DEBUG __x => &f
  _505 = MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_cur;
  _506 = MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_last;
  _507 = _506 + 18446744073709551608;
  if (_505 != _507)
    goto <bb 40>;
  else
    goto <bb 43>;

  <bb 40>:
  # DEBUG D#994 => &D#1804->D.47197._M_impl
  # DEBUG D#223 => D#994
  # DEBUG __p => _505
  # DEBUG __arg => &f
  # DEBUG __a => D#223
  # DEBUG D#222 => D#223
  # DEBUG D#221 => D#222
  # DEBUG __p => _505
  # DEBUG __val => &f
  # DEBUG this => D#221
  # DEBUG D#9 => 8
  # DEBUG __p => _505
  # DEBUG D.74231 => D#9
  if (_505 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  *_505 = f_4;
  pretmp_947 = MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_cur;

  <bb 42>:
  # prephitmp_948 = PHI <_505(40), pretmp_947(41)>
  _510 = prephitmp_948 + 8;
  MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_cur = _510;
  goto <bb 48>;

  <bb 43>:
  # DEBUG this => D#1804
  # DEBUG __t => &f
  # DEBUG this => D#1804
  # DEBUG __nodes_to_add => 1
  _519 = MEM[(struct deque *)_291].D.47197._M_impl._M_map_size;
  _520 = MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_node;
  _521 = (long int) _520;
  _522 = MEM[(struct deque *)_291].D.47197._M_impl._M_map;
  _523 = (long int) _522;
  _524 = _521 - _523;
  _525 = _524 /[ex] -8;
  _526 = (long unsigned int) _525;
  _527 = _519 + _526;
  if (_527 <= 1)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  _89 = &_291->c;
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (_89, 1, 0);
  pretmp_945 = MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_node;

  <bb 45>:
  # prephitmp_946 = PHI <pretmp_945(44), _520(43)>
  # DEBUG D#993 => &D#1804->D.47197
  # DEBUG D#850 => D#993
  # DEBUG this => D#850
  # DEBUG D#849 => D#850
  # DEBUG __size => 8
  # DEBUG D#848 => &D#849->_M_impl
  # DEBUG D#842 => D#848
  # DEBUG __n => NULL
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#839
  # DEBUG D.94334 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  _511 = operator new (512);
  MEM[(struct Flit * * *)prephitmp_946 + 8B] = _511;
  _512 = MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_cur;
  # DEBUG D#992 => &D#1804->D.47197._M_impl
  # DEBUG D#221 => D#992
  # DEBUG __p => _512
  # DEBUG __val => &f
  # DEBUG this => D#221
  # DEBUG D#9 => 8
  # DEBUG __p => _512
  # DEBUG D.74231 => D#9
  if (_512 != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  *_512 = f_4;

  <bb 47>:
  _514 = MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_node;
  _515 = _514 + 8;
  # DEBUG D#991 => &D#1804->D.47197._M_impl._M_finish
  # DEBUG this => D#991
  # DEBUG __new_node => _515
  MEM[(struct _Deque_iterator *)_291 + 48B]._M_node = _515;
  _516 = MEM[(struct Flit * * *)_514 + 8B];
  MEM[(struct _Deque_iterator *)_291 + 48B]._M_first = _516;
  # DEBUG __size => 8
  _517 = _516 + 512;
  MEM[(struct _Deque_iterator *)_291 + 48B]._M_last = _517;
  MEM[(struct deque *)_291].D.47197._M_impl._M_finish._M_cur = _516;

  <bb 48>:
  _98 = f_4->watch;
  if (_98 != 0)
    goto <bb 49>;
  else
    goto <bb 158>;

  <bb 49>:
  # DEBUG D#1075 => &this_21(D)->_multi_state
  _241 = MEM[(eQState * *)this_21(D) + 496B];
  # DEBUG D#30 => D#1075
  # DEBUG __n => _475
  # DEBUG this => D#30
  _292 = _475 * 4;
  _293 = _241 + _292;
  _99 = *_293;
  _100 = (int) _99;
  # DEBUG D#1076 => &this_21(D)->D.50427.D.43102.D.29663
  # DEBUG this => D#1076
  # DEBUG D#1077 => &MEM[(const struct Module *)this_21(D)]._fullname
  # DEBUG D#1078 => &this_21(D)->D.50427.D.43102.D.29663
  # DEBUG this => D#1078
  # DEBUG D#1079 => &MEM[(const struct Module *)this_21(D)]._fullname
  _104 = GetSimTime ();
  gWatchOut.275_105 = gWatchOut;
  _107 = std::basic_ostream<char>::operator<< (gWatchOut.275_105, _104);
  # DEBUG __out => _107
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_107, " | ", 3);
  # DEBUG __os => _107
  # DEBUG __str => D#1079
  _108 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1079
  # DEBUG this => D#3
  _294 = (long int) _108;
  # DEBUG this => D#1079
  _295 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1079
  # DEBUG this => D#1
  _296 = std::__ostream_insert<char, std::char_traits<char> > (_107, _295, _294);
  # DEBUG __out => _296
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_296, " | ", 3);
  # DEBUG __out => _296
  # DEBUG __s => "Flit stored in multiqueue at "
  # DEBUG __s => "Flit stored in multiqueue at "
  std::__ostream_insert<char, std::char_traits<char> > (_296, "Flit stored in multiqueue at ", 29);
  # DEBUG __os => _296
  # DEBUG __str => D#1077
  _109 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1077
  # DEBUG this => D#3
  _297 = (long int) _109;
  # DEBUG this => D#1077
  _298 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1077
  # DEBUG this => D#1
  _299 = std::__ostream_insert<char, std::char_traits<char> > (_296, _298, _297);
  # DEBUG this => _299
  # DEBUG __pf => endl
  # DEBUG __os => _299
  _398 = _299->_vptr.basic_ostream;
  _536 = MEM[(long int *)_398 + -24B];
  _537 = (sizetype) _536;
  _538 = _299 + _537;
  # DEBUG this => _538
  # DEBUG __c => 10
  _396 = MEM[(const struct basic_ios *)_538]._M_ctype;
  # DEBUG __f => _396
  if (_396 == 0B)
    goto <bb 15>;
  else
    goto <bb 50>;

  <bb 50>:
  # DEBUG this => _396
  # DEBUG __c => 10
  _543 = MEM[(const struct ctype *)_396]._M_widen_ok;
  if (_543 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  _546 = MEM[(const struct ctype *)_396]._M_widen[10];
  pretmp_939 = (int) _546;
  goto <bb 54>;

  <bb 52>:
  # DEBUG this => _396
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_396);
  _551 = MEM[(const struct ctype *)_396].D.18015._vptr.facet;
  _552 = MEM[(int (*__vtbl_ptr_type) () *)_551 + 48B];
  PROF_556 = [obj_type_ref] OBJ_TYPE_REF(_552;(const struct ctype)_396->6);
  if (PROF_556 == do_widen)
    goto <bb 54>;
  else
    goto <bb 53>;

  <bb 53>:
  _558 = OBJ_TYPE_REF(_552;(const struct ctype)_396->6) (_396, 10);
  pretmp_940 = (int) _558;

  <bb 54>:
  # prephitmp_941 = PHI <pretmp_939(51), 10(52), pretmp_940(53)>
  _541 = std::basic_ostream<char>::put (_299, prephitmp_941);
  # DEBUG __os => _541
  _542 = std::basic_ostream<char>::flush (_541);
  # DEBUG __out => NULL
  # DEBUG __s => "State = "
  # DEBUG __s => "State = "
  std::__ostream_insert<char, std::char_traits<char> > (_542, "State = ", 8);
  _113 = std::basic_ostream<char>::operator<< (_542, _100);
  # DEBUG this => _113
  # DEBUG __pf => endl
  # DEBUG __os => _113
  _528 = _113->_vptr.basic_ostream;
  _529 = MEM[(long int *)_528 + -24B];
  _530 = (sizetype) _529;
  _531 = _113 + _530;
  # DEBUG this => _531
  # DEBUG __c => 10
  _561 = MEM[(const struct basic_ios *)_531]._M_ctype;
  # DEBUG __f => _561
  if (_561 == 0B)
    goto <bb 15>;
  else
    goto <bb 55>;

  <bb 55>:
  # DEBUG this => _561
  # DEBUG __c => 10
  _562 = MEM[(const struct ctype *)_561]._M_widen_ok;
  if (_562 != 0)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  _565 = MEM[(const struct ctype *)_561]._M_widen[10];
  pretmp_942 = (int) _565;
  goto <bb 59>;

  <bb 57>:
  # DEBUG this => _561
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_561);
  _570 = MEM[(const struct ctype *)_561].D.18015._vptr.facet;
  _571 = MEM[(int (*__vtbl_ptr_type) () *)_570 + 48B];
  PROF_575 = [obj_type_ref] OBJ_TYPE_REF(_571;(const struct ctype)_561->6);
  if (PROF_575 == do_widen)
    goto <bb 59>;
  else
    goto <bb 58>;

  <bb 58>:
  _577 = OBJ_TYPE_REF(_571;(const struct ctype)_561->6) (_561, 10);
  pretmp_943 = (int) _577;

  <bb 59>:
  # prephitmp_944 = PHI <pretmp_942(56), 10(57), pretmp_943(58)>
  _534 = std::basic_ostream<char>::put (_113, prephitmp_944);
  # DEBUG __os => _534
  _535 = std::basic_ostream<char>::flush (_534);
  operator<< (_535, f_4);
  goto <bb 158>;

  <bb 60>:
  # DEBUG D#597 => D#1800->D.47197._M_impl._M_start._M_cur
  # DEBUG D#596 => &D#1800->D.47197._M_impl
  # DEBUG D#228 => D#596
  # DEBUG D#229 => D#597
  # DEBUG __a => D#228
  # DEBUG __p => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG this => D#224
  # DEBUG __p => D#225
  _303 = _300 + 8;
  MEM[(struct deque *)_304].D.47197._M_impl._M_start._M_cur = _303;
  goto <bb 62>;

  <bb 61>:
  # DEBUG this => D#1800
  # DEBUG this => D#1800
  # DEBUG D#595 => D#1800->D.47197._M_impl._M_start._M_cur
  # DEBUG D#592 => &D#1800->D.47197
  # DEBUG this => D#592
  # DEBUG D#229 => D#595
  # DEBUG __a => D#228
  # DEBUG __p => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG this => D#224
  # DEBUG __p => D#225
  _580 = MEM[(struct deque *)_304].D.47197._M_impl._M_start._M_first;
  # DEBUG D#594 => &D#1800->D.47197
  # DEBUG D#591 => D#594
  # DEBUG __p => _580
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _580
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _580
  # DEBUG this => D#565
  # DEBUG D.94382 => D#566
  operator delete (_580);
  _581 = MEM[(struct deque *)_304].D.47197._M_impl._M_start._M_node;
  _582 = _581 + 8;
  # DEBUG D#593 => &D#1800->D.47197._M_impl._M_start
  # DEBUG this => D#593
  # DEBUG __new_node => _582
  MEM[(struct _Deque_iterator *)_304 + 16B]._M_node = _582;
  _583 = MEM[(struct Flit * * *)_581 + 8B];
  MEM[(struct _Deque_iterator *)_304 + 16B]._M_first = _583;
  # DEBUG __size => 8
  _584 = _583 + 512;
  MEM[(struct _Deque_iterator *)_304 + 16B]._M_last = _584;
  MEM[(struct deque *)_304].D.47197._M_impl._M_start._M_cur = _583;

  <bb 62>:
  _118 = f_880->tail;
  if (_118 != 0)
    goto <bb 63>;
  else
    goto <bb 68>;

  <bb 63>:
  # DEBUG D#1081 => &this_21(D)->_input_state
  _242 = MEM[(eQState * *)this_21(D) + 472B];
  # DEBUG D#30 => D#1081
  # DEBUG __n => _24
  # DEBUG this => D#30
  _305 = _242 + _197;
  _119 = *_305;
  if (_119 == 3)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  # DEBUG D#1082 => &this_21(D)->_input_state
  # DEBUG D#30 => D#1082
  # DEBUG __n => _24
  # DEBUG this => D#30
  *_305 = 0;
  goto <bb 67>;

  <bb 65>:
  # DEBUG D#1083 => &this_21(D)->_input_state
  # DEBUG D#30 => D#1083
  # DEBUG __n => _24
  # DEBUG this => D#30
  if (_119 == 5)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#1084 => &this_21(D)->_input_state
  # DEBUG D#30 => D#1084
  # DEBUG __n => _24
  # DEBUG this => D#30
  *_305 = 1;
  # DEBUG D#1085 => &this_21(D)->_input_frame
  _263 = MEM[(struct queue * *)this_21(D) + 352B];
  # DEBUG D#34 => D#1085
  # DEBUG __n => _24
  # DEBUG this => D#34
  _309 = _263 + _697;
  # DEBUG this => NULL
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#73 => &D#123->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  _308 = MEM[(const struct iterator &)_309 + 16]._M_cur;
  # DEBUG D#122 => MEM[(const struct iterator &)D#123 + 16]._M_first
  # DEBUG D.73667 => D#122
  # DEBUG D#121 => MEM[(const struct iterator &)D#123 + 16]._M_last
  # DEBUG D.73668 => D#121
  # DEBUG D#120 => MEM[(const struct iterator &)D#123 + 16]._M_node
  # DEBUG D.73669 => D#120
  # DEBUG this => D#119
  f2_126 = *_308;
  # DEBUG f2 => f2_126
  _127 = this_21(D)->_rf;
  # DEBUG D#1086 => &this_21(D)->_input_route
  _238 = MEM[(struct OutputSet * * *)this_21(D) + 288B];
  # DEBUG D#29 => D#1086
  # DEBUG __n => _24
  # DEBUG this => D#29
  _306 = _24 * 8;
  _307 = _238 + _306;
  _129 = *_307;
  _130 = &this_21(D)->D.50427;
  _127 (_130, f2_126, i_669, _129, 0);

  <bb 67>:
  # DEBUG D#1087 => &this_21(D)->_input_output_match
  _250 = MEM[(int * *)this_21(D) + 520B];
  # DEBUG D#31 => D#1087
  # DEBUG __n => _24
  # DEBUG this => D#31
  _311 = _250 + _197;
  *_311 = -1;
  # DEBUG D#1088 => &this_21(D)->_input_mq_match
  _251 = MEM[(int * *)this_21(D) + 544B];
  # DEBUG D#31 => D#1088
  # DEBUG __n => _24
  # DEBUG this => D#31
  _310 = _251 + _197;
  *_310 = -1;

  <bb 68>:
  c_137 = Credit::New ();
  # DEBUG c => c_137
  # DEBUG D#1089 => &c_137->vc
  # DEBUG this => D#1089
  # DEBUG __x => &D.54984
  # DEBUG D#1799 => &MEM[(struct set *)c_137]._M_t
  # DEBUG this => D#1799
  # DEBUG __v => &D.54984
  # DEBUG __x => &D.54984
  # DEBUG this => D#124
  # DEBUG this => D#1799
  # DEBUG __k => &D.54984
  _401 = MEM[(struct _Rb_tree_node_base * *)c_137 + 16B];
  # DEBUG D#58 => D#1799
  # DEBUG this => D#58
  # DEBUG __x => NULL
  # DEBUG this => D#1799
  __j$_M_node_592 = &MEM[(struct _Rb_tree *)c_137]._M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_592
  # DEBUG __x => _401
  if (_401 == 0B)
    goto <bb 76>;
  else
    goto <bb 71>;

  <bb 69>:
  # _462 = PHI <_597(73), _598(74)>
  # DEBUG __comp => _595 > 0
  # DEBUG __y => __j$_M_node_836
  # DEBUG __x => _462
  if (_462 == 0B)
    goto <bb 75>;
  else
    goto <bb 70>;

  <bb 70>:
  goto <bb 72>;

  <bb 71>:

  <bb 72>:
  # __j$_M_node_836 = PHI <_401(71), _462(70)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_836
  # DEBUG __y => __j$_M_node_836
  # DEBUG __x => __j$_M_node_836
  # DEBUG __x => __j$_M_node_836
  # DEBUG this => __j$_M_node_836
  # DEBUG D#867 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_836]._M_value_field
  # DEBUG __r => D#867
  # DEBUG __x => D#867
  # DEBUG this => D#124
  # DEBUG D#871 => &MEM[(struct _Rb_tree *)D#1799]._M_impl._M_key_compare
  # DEBUG D#230 => D#871
  # DEBUG D#231 => &D.54984
  _595 = MEM[(const int &)__j$_M_node_836 + 32];
  # DEBUG D#232 => D#867
  # DEBUG this => D#230
  # DEBUG __x => D#231
  # DEBUG __y => D#232
  # DEBUG __comp => NULL
  if (_595 > 0)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  _597 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_836 + 16B];
  # DEBUG D#97 => __j$_M_node_836
  # DEBUG __x => D#97
  goto <bb 69>;

  <bb 74>:
  _598 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_836 + 24B];
  # DEBUG D#96 => __j$_M_node_836
  # DEBUG __x => D#96
  goto <bb 69>;

  <bb 75>:
  # _973 = PHI <_595(69)>
  # __j$_M_node_972 = PHI <__j$_M_node_836(69)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_972
  # DEBUG __j$_M_node => __j$_M_node_972
  if (_973 > 0)
    goto <bb 76>;
  else
    goto <bb 78>;

  <bb 76>:
  # __j$_M_node_780 = PHI <__j$_M_node_972(75), __j$_M_node_592(68)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_780
  # DEBUG __j$_M_node => __j$_M_node_780
  _600 = MEM[(struct _Rb_tree_node_base * *)c_137 + 24B];
  # DEBUG D#233 => D#1799
  # DEBUG this => D#233
  # DEBUG this => NULL
  # DEBUG __x => _600
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_600 == __j$_M_node_780)
    goto <bb 79>;
  else
    goto <bb 77>;

  <bb 77>:
  # DEBUG this => &__j
  __j$_M_node_602 = std::_Rb_tree_decrement (__j$_M_node_780);
  # DEBUG __j$_M_node => __j$_M_node_602
  pretmp_745 = MEM[(const int &)__j$_M_node_602 + 32];

  <bb 78>:
  # __j$_M_node_508 = PHI <__j$_M_node_972(75), __j$_M_node_780(77)>
  # prephitmp_748 = PHI <_973(75), pretmp_745(77)>
  # DEBUG __j$_M_node => NULL
  # DEBUG __x => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __r => D#868
  # DEBUG __x => D#868
  # DEBUG this => D#124
  # DEBUG D#870 => &MEM[(struct _Rb_tree *)D#1799]._M_impl._M_key_compare
  # DEBUG D#230 => D#870
  # DEBUG D#231 => D#868
  # DEBUG D#232 => &D.54984
  # DEBUG this => D#230
  # DEBUG __x => D#231
  # DEBUG __y => D#232
  if (prephitmp_748 < 0)
    goto <bb 79>;
  else
    goto <bb 83>;

  <bb 79>:
  # __res$8_829 = PHI <_600(76), __j$_M_node_508(78)>
  # DEBUG D#869 => {CLOBBER}
  # DEBUG __j$_M_node => D#869
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$8_829
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$8_829
  if (__res$8_829 != 0B)
    goto <bb 80>;
  else
    goto <bb 83>;

  <bb 80>:
  # DEBUG this => &__an
  # DEBUG __t => D#1799
  # DEBUG __an$_M_t => D#1799
  # DEBUG D#1035 => &__an
  # DEBUG this => D#1799
  # DEBUG __x => 0B
  # DEBUG __p => __res$8_829
  # DEBUG __v => &D.54984
  # DEBUG __node_gen => D#1035
  # DEBUG D#1034 => D#1035
  # DEBUG this => D#1799
  if (__j$_M_node_592 == __res$8_829)
    goto <bb 82>;
  else
    goto <bb 81>;

  <bb 81>:
  # DEBUG __x => __res$8_829
  # DEBUG __x => __res$8_829
  # DEBUG this => __res$8_829
  # DEBUG D#1032 => &MEM[(const struct _Rb_tree_node *)__res$8_829]._M_value_field
  # DEBUG __r => D#1032
  # DEBUG __x => D#1032
  # DEBUG this => D#124
  # DEBUG __x => &D.54984
  # DEBUG this => D#124
  # DEBUG D#1033 => &MEM[(struct _Rb_tree *)D#1799]._M_impl._M_key_compare
  # DEBUG D#230 => D#1033
  _611 = MEM[(const int &)__res$8_829 + 32];
  # DEBUG D#232 => D#1032
  # DEBUG this => D#230
  # DEBUG __x => D#231
  # DEBUG __y => D#232
  __insert_left_606 = _611 > 0;
  pretmp_740 = (int) __insert_left_606;

  <bb 82>:
  # prephitmp_742 = PHI <pretmp_740(81), 1(80)>
  # DEBUG __insert_left => NULL
  # DEBUG D#1031 => D#1034
  # DEBUG __arg => &D.54984
  # DEBUG this => D#1031
  # DEBUG D#1030 => D#1031
  # DEBUG D#1029 => D#1030->_M_t
  # DEBUG D#1028 => D#1029
  # DEBUG __x => &D.54984
  # DEBUG this => D#1028
  # DEBUG D#1027 => D#1028
  # DEBUG D#1026 => D#1028
  # DEBUG D#1025 => D#1026
  # DEBUG this => D#1025
  # DEBUG D#1024 => D#1025
  # DEBUG this => D#1024
  # DEBUG __n => 1
  # DEBUG __a => D#1023
  # DEBUG D#1022 => D#1023
  # DEBUG D#1020 => D#1022
  # DEBUG D#1021 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1020
  # DEBUG D.94457 => D#1021
  # DEBUG D#1019 => D#1020
  # DEBUG D#1018 => D#1019
  # DEBUG this => D#1018
  _612 = operator new (40);
  # DEBUG __tmp => _612
  # DEBUG D#874 => D#1027
  # DEBUG __node => _612
  # DEBUG __x => &D.54984
  # DEBUG this => D#874
  # DEBUG D#873 => D#874
  # DEBUG this => _612
  # DEBUG D#1797 => &_612->_M_value_field
  # DEBUG __r => D#1797
  # DEBUG D#489 => D#873
  # DEBUG this => D#489
  # DEBUG D#488 => D#489
  # DEBUG this => D#488
  # DEBUG this => NULL
  # DEBUG D.75514 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#1797
  # DEBUG __val => &D.54984
  # DEBUG this => D#872
  # DEBUG D#9 => 4
  # DEBUG __p => D#1797
  # DEBUG D.79711 => D#9
  MEM[(int *)_612 + 32B] = 0;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _612
  std::_Rb_tree_insert_and_rebalance (prephitmp_742, _612, __res$8_829, __j$_M_node_592);
  _618 = MEM[(struct _Rb_tree *)c_137]._M_impl._M_node_count;
  _619 = _618 + 1;
  MEM[(struct _Rb_tree *)c_137]._M_impl._M_node_count = _619;
  # DEBUG this => NULL
  # DEBUG __x => _612
  # DEBUG this => NULL
  # DEBUG __a => &D.94410
  # DEBUG __b => NULL
  D.94410 ={v} {CLOBBER};

  <bb 83>:
  # DEBUG D#1038 => {CLOBBER}
  # DEBUG __res$first => D#1038
  # DEBUG D#1039 => {CLOBBER}
  # DEBUG __res$second => D#1039
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#1117 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#1116 => MEM[(const bool &)&__p + 8]
  # DEBUG D#1115 => VIEW_CONVERT_EXPR<unsigned char>(D#1116)
  __p ={v} {CLOBBER};
  # DEBUG D.83597 => D#1117
  # DEBUG D.83598 => D#1115
  # DEBUG D#1090 => &this_21(D)->_credit_queue
  _266 = MEM[(struct queue * *)this_21(D) + 448B];
  # DEBUG D#55 => D#1090
  # DEBUG __n => _24
  # DEBUG this => D#55
  _313 = _266 + _697;
  # DEBUG this => NULL
  # DEBUG __x => &c
  # DEBUG D#1803 => &_313->c
  # DEBUG this => D#1803
  # DEBUG __x => &c
  _399 = MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_cur;
  _585 = MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_last;
  _586 = _585 + 18446744073709551608;
  if (_399 != _586)
    goto <bb 84>;
  else
    goto <bb 87>;

  <bb 84>:
  # DEBUG D#1048 => &D#1803->D.53612._M_impl
  # DEBUG D#236 => D#1048
  # DEBUG __p => _399
  # DEBUG __arg => &c
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _399
  # DEBUG __val => &c
  # DEBUG this => D#234
  # DEBUG D#9 => 8
  # DEBUG __p => _399
  # DEBUG D.74306 => D#9
  if (_399 != 0B)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  *_399 = c_137;
  pretmp_710 = MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_cur;

  <bb 86>:
  # prephitmp_711 = PHI <_399(84), pretmp_710(85)>
  _589 = prephitmp_711 + 8;
  MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_cur = _589;
  pretmp_726 = this_21(D)->D.50427._inputs;
  goto <bb 92>;

  <bb 87>:
  # DEBUG this => D#1803
  # DEBUG __t => &c
  # DEBUG this => D#1803
  # DEBUG __nodes_to_add => 1
  _629 = MEM[(struct deque *)_313].D.53612._M_impl._M_map_size;
  _630 = MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_node;
  _631 = (long int) _630;
  _632 = MEM[(struct deque *)_313].D.53612._M_impl._M_map;
  _633 = (long int) _632;
  _634 = _631 - _633;
  _635 = _634 /[ex] -8;
  _636 = (long unsigned int) _635;
  _637 = _629 + _636;
  if (_637 <= 1)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  _140 = &_313->c;
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (_140, 1, 0);
  pretmp_879 = MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_node;

  <bb 89>:
  # prephitmp_708 = PHI <pretmp_879(88), _630(87)>
  # DEBUG D#1047 => &D#1803->D.53612
  # DEBUG D#883 => D#1047
  # DEBUG this => D#883
  # DEBUG D#882 => D#883
  # DEBUG __size => 8
  # DEBUG D#881 => &D#882->_M_impl
  # DEBUG D#880 => D#881
  # DEBUG __n => NULL
  # DEBUG __a => D#880
  # DEBUG D#879 => D#880
  # DEBUG D#877 => D#879
  # DEBUG D#878 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#877
  # DEBUG D.94475 => D#878
  # DEBUG D#876 => D#877
  # DEBUG D#875 => D#876
  # DEBUG this => D#875
  _621 = operator new (512);
  MEM[(struct Credit * * *)prephitmp_708 + 8B] = _621;
  _622 = MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_cur;
  # DEBUG D#1046 => &D#1803->D.53612._M_impl
  # DEBUG D#234 => D#1046
  # DEBUG __p => _622
  # DEBUG __val => &c
  # DEBUG this => D#234
  # DEBUG D#9 => 8
  # DEBUG __p => _622
  # DEBUG D.74306 => D#9
  if (_622 != 0B)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  *_622 = c_137;

  <bb 91>:
  _624 = MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_node;
  _625 = _624 + 8;
  # DEBUG D#1045 => &D#1803->D.53612._M_impl._M_finish
  # DEBUG this => D#1045
  # DEBUG __new_node => _625
  MEM[(struct _Deque_iterator *)_313 + 48B]._M_node = _625;
  _626 = MEM[(struct Credit * * *)_624 + 8B];
  MEM[(struct _Deque_iterator *)_313 + 48B]._M_first = _626;
  # DEBUG __size => 8
  _627 = _626 + 512;
  MEM[(struct _Deque_iterator *)_313 + 48B]._M_last = _627;
  MEM[(struct deque *)_313].D.53612._M_impl._M_finish._M_cur = _626;
  pretmp_898 = this_21(D)->D.50427._inputs;

  <bb 92>:
  # prephitmp_728 = PHI <prephitmp_594(163), pretmp_898(91), prephitmp_594(162), pretmp_726(86), prephitmp_594(11), prephitmp_594(161)>
  i_142 = i_669 + 1;
  # DEBUG i => i_142
  # DEBUG i => i_142
  if (i_142 >= prephitmp_728)
    goto <bb 7>;
  else
    goto <bb 93>;

  <bb 93>:
  goto <bb 10>;

  <bb 94>:

  <bb 95>:
  # m_670 = PHI <0(94), m_234(142)>
  # DEBUG m => m_670
  _144 = (long unsigned int) m_670;
  # DEBUG D#1091 => &this_21(D)->_multi_match
  _252 = MEM[(int * *)this_21(D) + 568B];
  # DEBUG D#31 => D#1091
  # DEBUG __n => _144
  # DEBUG this => D#31
  _314 = _144 * 4;
  _315 = _252 + _314;
  _146 = *_315;
  if (_146 != -1)
    goto <bb 97>;
  else
    goto <bb 96>;

  <bb 96>:
  goto <bb 141>;

  <bb 97>:
  # DEBUG D#1092 => &this_21(D)->_multi_queue
  _264 = MEM[(struct queue * *)this_21(D) + 400B];
  # DEBUG D#34 => D#1092
  # DEBUG __n => _144
  # DEBUG this => D#34
  _318 = _144 * 80;
  _319 = _264 + _318;
  # DEBUG this => NULL
  # DEBUG this => D#63
  # DEBUG D#61 => &D#63->D.47197._M_impl._M_start
  # DEBUG D#62 => &D#63->D.47197._M_impl._M_finish
  _316 = MEM[(struct Flit * * *)_319 + 48B];
  # DEBUG D#59 => D#62
  _317 = MEM[(struct Flit * * *)_319 + 16B];
  # DEBUG D#60 => D#61
  # DEBUG __x => D#59
  # DEBUG __y => D#60
  if (_316 == _317)
    goto <bb 98>;
  else
    goto <bb 108>;

  <bb 98>:
  # DEBUG D#1093 => &this_21(D)->_multi_state
  _243 = MEM[(eQState * *)this_21(D) + 496B];
  # DEBUG D#30 => D#1093
  # DEBUG __n => _144
  # DEBUG this => D#30
  _320 = _243 + _314;
  _147 = *_320;
  _148 = (int) _147;
  # DEBUG __out => &cout
  # DEBUG __s => "State = "
  # DEBUG __s => "State = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "State = ", 8);
  _150 = std::basic_ostream<char>::operator<< (&cout, _148);
  # DEBUG this => _150
  # DEBUG __pf => endl
  # DEBUG __os => _150
  _152 = _150->_vptr.basic_ostream;
  _643 = MEM[(long int *)_152 + -24B];
  _644 = (sizetype) _643;
  _645 = _150 + _644;
  # DEBUG this => _645
  # DEBUG __c => 10
  _405 = MEM[(const struct basic_ios *)_645]._M_ctype;
  # DEBUG __f => _405
  if (_405 == 0B)
    goto <bb 15>;
  else
    goto <bb 99>;

  <bb 99>:
  # DEBUG this => _405
  # DEBUG __c => 10
  _650 = MEM[(const struct ctype *)_405]._M_widen_ok;
  if (_650 != 0)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  _653 = MEM[(const struct ctype *)_405]._M_widen[10];
  pretmp_987 = (int) _653;
  goto <bb 103>;

  <bb 101>:
  # DEBUG this => _405
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_405);
  _658 = MEM[(const struct ctype *)_405].D.18015._vptr.facet;
  _659 = MEM[(int (*__vtbl_ptr_type) () *)_658 + 48B];
  PROF_663 = [obj_type_ref] OBJ_TYPE_REF(_659;(const struct ctype)_405->6);
  if (PROF_663 == do_widen)
    goto <bb 103>;
  else
    goto <bb 102>;

  <bb 102>:
  _665 = OBJ_TYPE_REF(_659;(const struct ctype)_405->6) (_405, 10);
  pretmp_988 = (int) _665;

  <bb 103>:
  # prephitmp_989 = PHI <pretmp_987(100), 10(101), pretmp_988(102)>
  _648 = std::basic_ostream<char>::put (_150, prephitmp_989);
  # DEBUG __os => _648
  std::basic_ostream<char>::flush (_648);
  # DEBUG D#69 => &D.55099
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.55099
  # DEBUG this => &D.55100
  # DEBUG __s => "Multi queue empty, but matched!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.55100
  # DEBUG D#500 => &D.55100._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.55100.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.55100]._M_p = &D.55100.D.11539._M_local_buf;
  # DEBUG __s => "Multi queue empty, but matched!"
  # DEBUG this => &D.55100
  # DEBUG __beg => "Multi queue empty, but matched!"
  # DEBUG __end => &MEM[(void *)"Multi queue empty, but matched!" + 31B]
  # DEBUG this => &D.55100
  # DEBUG __beg => "Multi queue empty, but matched!"
  # DEBUG __end => &MEM[(void *)"Multi queue empty, but matched!" + 31B]
  # DEBUG this => &D.55100
  # DEBUG __beg => "Multi queue empty, but matched!"
  # DEBUG __end => &MEM[(void *)"Multi queue empty, but matched!" + 31B]
  # DEBUG __ptr => "Multi queue empty, but matched!"
  # DEBUG __first => "Multi queue empty, but matched!"
  # DEBUG __last => &MEM[(void *)"Multi queue empty, but matched!" + 31B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Multi queue empty, but matched!"
  # DEBUG __last => &MEM[(void *)"Multi queue empty, but matched!" + 31B]
  __dnew = 31;
  _673 = std::__cxx11::basic_string<char>::_M_create (&D.55100, &__dnew, 0);
  # DEBUG D#6 => &D.55100
  # DEBUG __p => _673
  # DEBUG this => D#6
  MEM[(char * *)&D.55100] = _673;
  __dnew.4_674 = __dnew;
  # DEBUG D#7 => &D.55100
  # DEBUG __capacity => __dnew.4_674
  # DEBUG this => D#7
  MEM[(size_type *)&D.55100 + 16B] = __dnew.4_674;
  # DEBUG D#1 => &D.55100
  # DEBUG this => D#1
  # DEBUG __p => _673
  # DEBUG __k1 => "Multi queue empty, but matched!"
  # DEBUG __k2 => &MEM[(void *)"Multi queue empty, but matched!" + 31B]
  # DEBUG __d => _673
  # DEBUG __s => "Multi queue empty, but matched!"
  # DEBUG __n => 31
  # DEBUG __s1 => _673
  # DEBUG __s2 => "Multi queue empty, but matched!"
  # DEBUG __n => 31
  __builtin_memcpy (_673, "Multi queue empty, but matched!", 31);
  __dnew.4_677 = __dnew;
  # DEBUG this => &D.55100
  # DEBUG __n => __dnew.4_677
  # DEBUG D#5 => &D.55100
  # DEBUG __length => __dnew.4_677
  # DEBUG this => D#5
  MEM[(size_type *)&D.55100 + 8B] = __dnew.4_677;
  _678 = MEM[(char * *)&D.55100];
  # DEBUG D#1 => &D.55100
  # DEBUG this => D#1
  _679 = _678 + __dnew.4_677;
  # DEBUG __c1 => _679
  # DEBUG __c2 => D#8
  MEM[(char_type &)_679] = 0;
  __dnew ={v} {CLOBBER};
  _153 = &this_21(D)->D.50427.D.43102.D.29663;
  Module::Error (_153, &D.55100);

  <bb 104>:
  # DEBUG this => &D.55100
  # DEBUG this => &D.55100
  # DEBUG this => &D.55100
  _157 = MEM[(char * *)&D.55100];
  # DEBUG D#1 => &D.55100
  # DEBUG this => D#1
  # DEBUG this => &D.55100
  if (&D.55100.D.11539._M_local_buf != _157)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#252 => D.55100.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.55100
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.55100
  # DEBUG this => D#1
  # DEBUG this => &D.55100
  # DEBUG D#249 => &D.55100._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _157
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _157
  # DEBUG this => D#243
  # DEBUG D.83335 => D#244
  operator delete (_157);

  <bb 106>:
  # DEBUG D#253 => &D.55100._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.55100 ={v} {CLOBBER};
  # DEBUG this => &D.55099
  # DEBUG this => &D.55099
  # DEBUG D#1094 => &this_21(D)->_multi_queue
  _265 = MEM[(struct queue * *)this_21(D) + 400B];
  # DEBUG D#34 => D#1094
  # DEBUG __n => _144
  # DEBUG this => D#34
  _322 = _265 + _318;
  # DEBUG this => NULL
  # DEBUG this => D#63
  # DEBUG D#61 => &D#63->D.47197._M_impl._M_start
  # DEBUG D#62 => &D#63->D.47197._M_impl._M_finish
  _155 = MEM[(struct Flit * * *)_322 + 48B];
  # DEBUG D#59 => D#62
  _321 = MEM[(struct Flit * * *)_322 + 16B];
  # DEBUG D#60 => D#61
  # DEBUG __x => D#59
  # DEBUG __y => D#60
  if (_155 == _321)
    goto <bb 107>;
  else
    goto <bb 108>;

  <bb 107>:
  __assert_fail ("!_multi_queue[m].empty( )", "routers/chaos_router.cpp", 596, &__PRETTY_FUNCTION__);

  <bb 108>:
  # _881 = PHI <_321(106), _317(97)>
  # _804 = PHI <_322(106), _319(97)>
  # DEBUG D#1094 => &this_21(D)->_multi_queue
  # DEBUG __n => _144
  # DEBUG this => D#34
  # DEBUG this => NULL
  # DEBUG this => D#63
  # DEBUG D#61 => &D#63->D.47197._M_impl._M_start
  # DEBUG D#62 => &D#63->D.47197._M_impl._M_finish
  # DEBUG D#59 => D#62
  # DEBUG D#60 => D#61
  # DEBUG __x => D#59
  # DEBUG __y => D#60
  # DEBUG D#1095 => &this_21(D)->_multi_queue
  # DEBUG D#34 => D#1095
  # DEBUG __n => _144
  # DEBUG this => D#34
  # DEBUG this => NULL
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#73 => &D#123->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#122 => MEM[(const struct iterator &)D#123 + 16]._M_first
  # DEBUG D.73667 => D#122
  # DEBUG D#121 => MEM[(const struct iterator &)D#123 + 16]._M_last
  # DEBUG D.73668 => D#121
  # DEBUG D#120 => MEM[(const struct iterator &)D#123 + 16]._M_node
  # DEBUG D.73669 => D#120
  # DEBUG this => D#119
  f_162 = *_881;
  # DEBUG f => f_162
  # DEBUG D#1096 => &this_21(D)->_multi_queue
  # DEBUG D#34 => D#1096
  # DEBUG __n => _144
  # DEBUG this => D#34
  # DEBUG this => NULL
  # DEBUG D#1798 => &_804->c
  # DEBUG this => D#1798
  _334 = MEM[(struct deque *)_804].D.47197._M_impl._M_start._M_last;
  _335 = _334 + 18446744073709551608;
  if (_335 != _881)
    goto <bb 109>;
  else
    goto <bb 110>;

  <bb 109>:
  # DEBUG D#597 => D#1798->D.47197._M_impl._M_start._M_cur
  # DEBUG D#596 => &D#1798->D.47197._M_impl
  # DEBUG D#228 => D#596
  # DEBUG D#229 => D#597
  # DEBUG __a => D#228
  # DEBUG __p => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG this => D#224
  # DEBUG __p => D#225
  _336 = _881 + 8;
  MEM[(struct deque *)_804].D.47197._M_impl._M_start._M_cur = _336;
  goto <bb 111>;

  <bb 110>:
  # DEBUG this => D#1798
  # DEBUG this => D#1798
  # DEBUG D#595 => D#1798->D.47197._M_impl._M_start._M_cur
  # DEBUG D#592 => &D#1798->D.47197
  # DEBUG this => D#592
  # DEBUG D#229 => D#595
  # DEBUG __a => D#228
  # DEBUG __p => D#229
  # DEBUG D#227 => D#229
  # DEBUG D#226 => D#228
  # DEBUG D#224 => D#226
  # DEBUG D#225 => D#227
  # DEBUG this => D#224
  # DEBUG __p => D#225
  _680 = MEM[(struct deque *)_804].D.47197._M_impl._M_start._M_first;
  # DEBUG D#594 => &D#1798->D.47197
  # DEBUG D#591 => D#594
  # DEBUG __p => _680
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _680
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _680
  # DEBUG this => D#565
  # DEBUG D.94553 => D#566
  operator delete (_680);
  _681 = MEM[(struct deque *)_804].D.47197._M_impl._M_start._M_node;
  _682 = _681 + 8;
  # DEBUG D#593 => &D#1798->D.47197._M_impl._M_start
  # DEBUG this => D#593
  # DEBUG __new_node => _682
  MEM[(struct _Deque_iterator *)_804 + 16B]._M_node = _682;
  _683 = MEM[(struct Flit * * *)_681 + 8B];
  MEM[(struct _Deque_iterator *)_804 + 16B]._M_first = _683;
  # DEBUG __size => 8
  _684 = _683 + 512;
  MEM[(struct _Deque_iterator *)_804 + 16B]._M_last = _684;
  MEM[(struct deque *)_804].D.47197._M_impl._M_start._M_cur = _683;

  <bb 111>:
  # DEBUG D#1097 => &this_21(D)->_multi_match
  _253 = MEM[(int * *)this_21(D) + 568B];
  # DEBUG D#31 => D#1097
  # DEBUG __n => _144
  # DEBUG this => D#31
  _332 = _253 + _314;
  _166 = *_332;
  _168 = this_21(D)->_crossbar_pipe;
  # DEBUG this => _168
  # DEBUG val => f_162
  # DEBUG lane => _166
  _323 = _168->_pipe_ptr;
  _324 = (long unsigned int) _323;
  _325 = (long unsigned int) _166;
  # DEBUG D#90 => &_168->_data
  _326 = MEM[(struct vector * *)_168 + 112B];
  # DEBUG D#71 => D#90
  # DEBUG __n => _325
  # DEBUG this => D#71
  _327 = _325 * 24;
  _328 = _326 + _327;
  _329 = MEM[(struct Flit * * *)_328];
  # DEBUG __n => _324
  # DEBUG this => D#88
  _330 = _324 * 8;
  _331 = _329 + _330;
  *_331 = f_162;
  _170 = f_162->watch;
  if (_170 != 0)
    goto <bb 112>;
  else
    goto <bb 118>;

  <bb 112>:
  # DEBUG D#1098 => &this_21(D)->D.50427.D.43102.D.29663
  # DEBUG this => D#1098
  # DEBUG D#1099 => &MEM[(const struct Module *)this_21(D)]._fullname
  # DEBUG D#1100 => &this_21(D)->D.50427.D.43102.D.29663
  # DEBUG this => D#1100
  # DEBUG D#1101 => &MEM[(const struct Module *)this_21(D)]._fullname
  _172 = GetSimTime ();
  gWatchOut.275_173 = gWatchOut;
  _175 = std::basic_ostream<char>::operator<< (gWatchOut.275_173, _172);
  # DEBUG __out => _175
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_175, " | ", 3);
  # DEBUG __os => _175
  # DEBUG __str => D#1101
  _176 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1101
  # DEBUG this => D#3
  _337 = (long int) _176;
  # DEBUG this => D#1101
  _338 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1101
  # DEBUG this => D#1
  _339 = std::__ostream_insert<char, std::char_traits<char> > (_175, _338, _337);
  # DEBUG __out => _339
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_339, " | ", 3);
  # DEBUG __out => _339
  # DEBUG __s => "Flit traversing crossbar from multiqueue slot "
  # DEBUG __s => "Flit traversing crossbar from multiqueue slot "
  std::__ostream_insert<char, std::char_traits<char> > (_339, "Flit traversing crossbar from multiqueue slot ", 46);
  _178 = std::basic_ostream<char>::operator<< (_339, m_670);
  # DEBUG __out => _178
  # DEBUG __s => " at "
  # DEBUG __s => " at "
  std::__ostream_insert<char, std::char_traits<char> > (_178, " at ", 4);
  # DEBUG __os => _178
  # DEBUG __str => D#1099
  _179 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1099
  # DEBUG this => D#3
  _340 = (long int) _179;
  # DEBUG this => D#1099
  _341 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1099
  # DEBUG this => D#1
  _342 = std::__ostream_insert<char, std::char_traits<char> > (_178, _341, _340);
  # DEBUG this => _342
  # DEBUG __pf => endl
  # DEBUG __os => _342
  _416 = _342->_vptr.basic_ostream;
  _685 = MEM[(long int *)_416 + -24B];
  _686 = (sizetype) _685;
  _687 = _342 + _686;
  # DEBUG this => _687
  # DEBUG __c => 10
  _425 = MEM[(const struct basic_ios *)_687]._M_ctype;
  # DEBUG __f => _425
  if (_425 == 0B)
    goto <bb 15>;
  else
    goto <bb 113>;

  <bb 113>:
  # DEBUG this => _425
  # DEBUG __c => 10
  _692 = MEM[(const struct ctype *)_425]._M_widen_ok;
  if (_692 != 0)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  _695 = MEM[(const struct ctype *)_425]._M_widen[10];
  pretmp_984 = (int) _695;
  goto <bb 117>;

  <bb 115>:
  # DEBUG this => _425
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_425);
  _700 = MEM[(const struct ctype *)_425].D.18015._vptr.facet;
  _701 = MEM[(int (*__vtbl_ptr_type) () *)_700 + 48B];
  PROF_705 = [obj_type_ref] OBJ_TYPE_REF(_701;(const struct ctype)_425->6);
  if (PROF_705 == do_widen)
    goto <bb 117>;
  else
    goto <bb 116>;

  <bb 116>:
  _707 = OBJ_TYPE_REF(_701;(const struct ctype)_425->6) (_425, 10);
  pretmp_985 = (int) _707;

  <bb 117>:
  # prephitmp_986 = PHI <pretmp_984(114), 10(115), pretmp_985(116)>
  _690 = std::basic_ostream<char>::put (_342, prephitmp_986);
  # DEBUG __os => _690
  _691 = std::basic_ostream<char>::flush (_690);
  operator<< (_691, f_162);

  <bb 118>:
  _183 = f_162->head;
  if (_183 != 0)
    goto <bb 119>;
  else
    goto <bb 127>;

  <bb 119>:
  # DEBUG D#1102 => &this_21(D)->_multi_state
  _244 = MEM[(eQState * *)this_21(D) + 496B];
  # DEBUG D#30 => D#1102
  # DEBUG __n => _144
  # DEBUG this => D#30
  _343 = _244 + _314;
  _185 = *_343;
  if (_185 == 1)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#1105 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1105
  # DEBUG __n => _144
  # DEBUG this => D#30
  *_343 = 4;
  goto <bb 127>;

  <bb 121>:
  # DEBUG D#1103 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1103
  # DEBUG __n => _144
  # DEBUG this => D#30
  if (_185 == 2)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  # DEBUG D#1104 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1104
  # DEBUG __n => _144
  # DEBUG this => D#30
  *_343 = 3;
  goto <bb 127>;

  <bb 123>:
  # DEBUG D#69 => &D.55103
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.55103
  # DEBUG this => &D.55104
  # DEBUG __s => "Multi-queue sent head while not filling or full!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.55104
  # DEBUG D#500 => &D.55104._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.55104.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.55104]._M_p = &D.55104.D.11539._M_local_buf;
  # DEBUG __s => "Multi-queue sent head while not filling or full!"
  # DEBUG this => &D.55104
  # DEBUG __beg => "Multi-queue sent head while not filling or full!"
  # DEBUG __end => &MEM[(void *)"Multi-queue sent head while not filling or full!" + 48B]
  # DEBUG this => &D.55104
  # DEBUG __beg => "Multi-queue sent head while not filling or full!"
  # DEBUG __end => &MEM[(void *)"Multi-queue sent head while not filling or full!" + 48B]
  # DEBUG this => &D.55104
  # DEBUG __beg => "Multi-queue sent head while not filling or full!"
  # DEBUG __end => &MEM[(void *)"Multi-queue sent head while not filling or full!" + 48B]
  # DEBUG __ptr => "Multi-queue sent head while not filling or full!"
  # DEBUG __first => "Multi-queue sent head while not filling or full!"
  # DEBUG __last => &MEM[(void *)"Multi-queue sent head while not filling or full!" + 48B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Multi-queue sent head while not filling or full!"
  # DEBUG __last => &MEM[(void *)"Multi-queue sent head while not filling or full!" + 48B]
  __dnew = 48;
  _719 = std::__cxx11::basic_string<char>::_M_create (&D.55104, &__dnew, 0);
  # DEBUG D#6 => &D.55104
  # DEBUG __p => _719
  # DEBUG this => D#6
  MEM[(char * *)&D.55104] = _719;
  __dnew.4_720 = __dnew;
  # DEBUG D#7 => &D.55104
  # DEBUG __capacity => __dnew.4_720
  # DEBUG this => D#7
  MEM[(size_type *)&D.55104 + 16B] = __dnew.4_720;
  # DEBUG D#1 => &D.55104
  # DEBUG this => D#1
  # DEBUG __p => _719
  # DEBUG __k1 => "Multi-queue sent head while not filling or full!"
  # DEBUG __k2 => &MEM[(void *)"Multi-queue sent head while not filling or full!" + 48B]
  # DEBUG __d => _719
  # DEBUG __s => "Multi-queue sent head while not filling or full!"
  # DEBUG __n => 48
  # DEBUG __s1 => _719
  # DEBUG __s2 => "Multi-queue sent head while not filling or full!"
  # DEBUG __n => 48
  __builtin_memcpy (_719, "Multi-queue sent head while not filling or full!", 48);
  __dnew.4_723 = __dnew;
  # DEBUG this => &D.55104
  # DEBUG __n => __dnew.4_723
  # DEBUG D#5 => &D.55104
  # DEBUG __length => __dnew.4_723
  # DEBUG this => D#5
  MEM[(size_type *)&D.55104 + 8B] = __dnew.4_723;
  _724 = MEM[(char * *)&D.55104];
  # DEBUG D#1 => &D.55104
  # DEBUG this => D#1
  _725 = _724 + __dnew.4_723;
  # DEBUG __c1 => _725
  # DEBUG __c2 => D#8
  MEM[(char_type &)_725] = 0;
  __dnew ={v} {CLOBBER};
  _191 = &this_21(D)->D.50427.D.43102.D.29663;
  Module::Error (_191, &D.55104);

  <bb 124>:
  # DEBUG this => &D.55104
  # DEBUG this => &D.55104
  # DEBUG this => &D.55104
  _194 = MEM[(char * *)&D.55104];
  # DEBUG D#1 => &D.55104
  # DEBUG this => D#1
  # DEBUG this => &D.55104
  if (&D.55104.D.11539._M_local_buf != _194)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 125>:
  # DEBUG D#252 => D.55104.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.55104
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.55104
  # DEBUG this => D#1
  # DEBUG this => &D.55104
  # DEBUG D#249 => &D.55104._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _194
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _194
  # DEBUG this => D#243
  # DEBUG D.83434 => D#244
  operator delete (_194);

  <bb 126>:
  # DEBUG D#253 => &D.55104._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.55104 ={v} {CLOBBER};
  # DEBUG this => &D.55103
  # DEBUG this => &D.55103

  <bb 127>:
  _200 = f_162->tail;
  if (_200 != 0)
    goto <bb 128>;
  else
    goto <bb 96>;

  <bb 128>:
  # DEBUG D#1106 => &this_21(D)->_multi_match
  _254 = MEM[(int * *)this_21(D) + 568B];
  # DEBUG D#31 => D#1106
  # DEBUG __n => _144
  # DEBUG this => D#31
  _357 = _254 + _314;
  _202 = *_357;
  _203 = (long unsigned int) _202;
  # DEBUG D#1107 => &this_21(D)->_output_matched
  _258 = MEM[(_Bit_type * *)this_21(D) + 616B];
  # DEBUG D#32 => D#1107
  # DEBUG __n => _203
  # DEBUG this => D#32
  _204 = (unsigned int) _203;
  _352 = _204 & 63;
  _353 = _203 >> 6;
  _354 = _353 * 8;
  _355 = _258 + _354;
  # DEBUG this => NULL
  # DEBUG __x => _355
  # DEBUG __y => _352
  # DEBUG this => D#17
  # DEBUG __x => _355
  # DEBUG __y => _352
  # DEBUG this => D#17
  # DEBUG this => D#18
  # DEBUG this => D#18
  _356 = 1 << _352;
  # DEBUG this => NULL
  # DEBUG __x => _355
  # DEBUG __y => _356
  # DEBUG this => &D.55105
  # DEBUG __x => 0
  _349 = *_355;
  _350 = ~_356;
  _351 = _349 & _350;
  *_355 = _351;
  # DEBUG D#1108 => &this_21(D)->_multi_match
  # DEBUG D#31 => D#1108
  # DEBUG __n => _144
  # DEBUG this => D#31
  *_357 = -1;
  # DEBUG D#1109 => &this_21(D)->_multi_state
  _245 = MEM[(eQState * *)this_21(D) + 496B];
  # DEBUG D#30 => D#1109
  # DEBUG __n => _144
  # DEBUG this => D#30
  _344 = _245 + _314;
  _208 = *_344;
  if (_208 == 5)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 129>:
  # DEBUG D#1113 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1113
  # DEBUG __n => _144
  # DEBUG this => D#30
  *_344 = 1;
  goto <bb 141>;

  <bb 130>:
  # DEBUG D#1110 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1110
  # DEBUG __n => _144
  # DEBUG this => D#30
  if (_208 == 3)
    goto <bb 131>;
  else
    goto <bb 132>;

  <bb 131>:
  # DEBUG D#1111 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1111
  # DEBUG __n => _144
  # DEBUG this => D#30
  *_344 = 0;
  goto <bb 141>;

  <bb 132>:
  # DEBUG D#1112 => &this_21(D)->_multi_state
  # DEBUG D#30 => D#1112
  # DEBUG __n => _144
  # DEBUG this => D#30
  _213 = (int) _208;
  # DEBUG __out => &cout
  # DEBUG __s => "State = "
  # DEBUG __s => "State = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "State = ", 8);
  _215 = std::basic_ostream<char>::operator<< (&cout, _213);
  # DEBUG this => _215
  # DEBUG __pf => endl
  # DEBUG __os => _215
  _219 = _215->_vptr.basic_ostream;
  _731 = MEM[(long int *)_219 + -24B];
  _732 = (sizetype) _731;
  _733 = _215 + _732;
  # DEBUG this => _733
  # DEBUG __c => 10
  _438 = MEM[(const struct basic_ios *)_733]._M_ctype;
  # DEBUG __f => _438
  if (_438 == 0B)
    goto <bb 15>;
  else
    goto <bb 133>;

  <bb 133>:
  # DEBUG this => _438
  # DEBUG __c => 10
  _738 = MEM[(const struct ctype *)_438]._M_widen_ok;
  if (_738 != 0)
    goto <bb 134>;
  else
    goto <bb 135>;

  <bb 134>:
  _741 = MEM[(const struct ctype *)_438]._M_widen[10];
  pretmp_981 = (int) _741;
  goto <bb 137>;

  <bb 135>:
  # DEBUG this => _438
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_438);
  _746 = MEM[(const struct ctype *)_438].D.18015._vptr.facet;
  _747 = MEM[(int (*__vtbl_ptr_type) () *)_746 + 48B];
  PROF_751 = [obj_type_ref] OBJ_TYPE_REF(_747;(const struct ctype)_438->6);
  if (PROF_751 == do_widen)
    goto <bb 137>;
  else
    goto <bb 136>;

  <bb 136>:
  _753 = OBJ_TYPE_REF(_747;(const struct ctype)_438->6) (_438, 10);
  pretmp_982 = (int) _753;

  <bb 137>:
  # prephitmp_983 = PHI <pretmp_981(134), 10(135), pretmp_982(136)>
  _736 = std::basic_ostream<char>::put (_215, prephitmp_983);
  # DEBUG __os => _736
  std::basic_ostream<char>::flush (_736);
  operator<< (&cout, f_162);
  # DEBUG D#69 => &D.55107
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.55107
  # DEBUG this => &D.55108
  # DEBUG __s => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.55108
  # DEBUG D#500 => &D.55108._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.55108.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.55108]._M_p = &D.55108.D.11539._M_local_buf;
  # DEBUG __s => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG this => &D.55108
  # DEBUG __beg => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __end => &MEM[(void *)"Multi-queue sent tail while not leaving or shared!" + 50B]
  # DEBUG this => &D.55108
  # DEBUG __beg => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __end => &MEM[(void *)"Multi-queue sent tail while not leaving or shared!" + 50B]
  # DEBUG this => &D.55108
  # DEBUG __beg => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __end => &MEM[(void *)"Multi-queue sent tail while not leaving or shared!" + 50B]
  # DEBUG __ptr => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __first => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __last => &MEM[(void *)"Multi-queue sent tail while not leaving or shared!" + 50B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __last => &MEM[(void *)"Multi-queue sent tail while not leaving or shared!" + 50B]
  __dnew = 50;
  _761 = std::__cxx11::basic_string<char>::_M_create (&D.55108, &__dnew, 0);
  # DEBUG D#6 => &D.55108
  # DEBUG __p => _761
  # DEBUG this => D#6
  MEM[(char * *)&D.55108] = _761;
  __dnew.4_762 = __dnew;
  # DEBUG D#7 => &D.55108
  # DEBUG __capacity => __dnew.4_762
  # DEBUG this => D#7
  MEM[(size_type *)&D.55108 + 16B] = __dnew.4_762;
  # DEBUG D#1 => &D.55108
  # DEBUG this => D#1
  # DEBUG __p => _761
  # DEBUG __k1 => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __k2 => &MEM[(void *)"Multi-queue sent tail while not leaving or shared!" + 50B]
  # DEBUG __d => _761
  # DEBUG __s => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __n => 50
  # DEBUG __s1 => _761
  # DEBUG __s2 => "Multi-queue sent tail while not leaving or shared!"
  # DEBUG __n => 50
  __builtin_memcpy (_761, "Multi-queue sent tail while not leaving or shared!", 50);
  __dnew.4_765 = __dnew;
  # DEBUG this => &D.55108
  # DEBUG __n => __dnew.4_765
  # DEBUG D#5 => &D.55108
  # DEBUG __length => __dnew.4_765
  # DEBUG this => D#5
  MEM[(size_type *)&D.55108 + 8B] = __dnew.4_765;
  _766 = MEM[(char * *)&D.55108];
  # DEBUG D#1 => &D.55108
  # DEBUG this => D#1
  _767 = _766 + __dnew.4_765;
  # DEBUG __c1 => _767
  # DEBUG __c2 => D#8
  MEM[(char_type &)_767] = 0;
  __dnew ={v} {CLOBBER};
  _220 = &this_21(D)->D.50427.D.43102.D.29663;
  Module::Error (_220, &D.55108);

  <bb 138>:
  # DEBUG this => &D.55108
  # DEBUG this => &D.55108
  # DEBUG this => &D.55108
  _223 = MEM[(char * *)&D.55108];
  # DEBUG D#1 => &D.55108
  # DEBUG this => D#1
  # DEBUG this => &D.55108
  if (&D.55108.D.11539._M_local_buf != _223)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  # DEBUG D#252 => D.55108.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.55108
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.55108
  # DEBUG this => D#1
  # DEBUG this => &D.55108
  # DEBUG D#249 => &D.55108._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _223
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _223
  # DEBUG this => D#243
  # DEBUG D.83497 => D#244
  operator delete (_223);

  <bb 140>:
  # DEBUG D#253 => &D.55108._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.55108 ={v} {CLOBBER};
  # DEBUG this => &D.55107
  # DEBUG this => &D.55107

  <bb 141>:
  # DEBUG D#1114 => &this_21(D)->_mq_age
  _255 = MEM[(int * *)this_21(D) + 592B];
  # DEBUG D#31 => D#1114
  # DEBUG __n => _144
  # DEBUG this => D#31
  _358 = _255 + _314;
  _231 = *_358;
  _232 = _231 + 1;
  *_358 = _232;
  m_234 = m_670 + 1;
  # DEBUG m => m_234
  # DEBUG m => m_234
  _143 = this_21(D)->_multi_queue_size;
  if (_143 <= m_234)
    goto <bb 8>;
  else
    goto <bb 142>;

  <bb 142>:
  goto <bb 95>;

<L88>:
  # DEBUG this => &D.54979
  # DEBUG this => &D.54979
  # DEBUG this => &D.54979
  _359 = MEM[(char * *)&D.54979];
  # DEBUG D#1 => &D.54979
  # DEBUG this => D#1
  # DEBUG this => &D.54979
  if (&D.54979.D.11539._M_local_buf != _359)
    goto <bb 144>;
  else
    goto <bb 145>;

  <bb 144>:
  # DEBUG D#252 => D.54979.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54979
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54979
  # DEBUG this => D#1
  # DEBUG this => &D.54979
  # DEBUG D#249 => &D.54979._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _359
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _359
  # DEBUG this => D#243
  # DEBUG D.83516 => D#244
  operator delete (_359);

  <bb 145>:
  # DEBUG D#253 => &D.54979._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54979 ={v} {CLOBBER};
  resx 4

<L90>:
  # DEBUG this => &D.54983
  # DEBUG this => &D.54983
  # DEBUG this => &D.54983
  _74 = MEM[(char * *)&D.54983];
  # DEBUG D#1 => &D.54983
  # DEBUG this => D#1
  # DEBUG this => &D.54983
  if (&D.54983.D.11539._M_local_buf != _74)
    goto <bb 147>;
  else
    goto <bb 148>;

  <bb 147>:
  # DEBUG D#252 => D.54983.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.54983
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.54983
  # DEBUG this => D#1
  # DEBUG this => &D.54983
  # DEBUG D#249 => &D.54983._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _74
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _74
  # DEBUG this => D#243
  # DEBUG D.83533 => D#244
  operator delete (_74);

  <bb 148>:
  # DEBUG D#253 => &D.54983._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.54983 ={v} {CLOBBER};
  resx 9

<L93>:
  # DEBUG this => &D.55100
  # DEBUG this => &D.55100
  # DEBUG this => &D.55100
  _93 = MEM[(char * *)&D.55100];
  # DEBUG D#1 => &D.55100
  # DEBUG this => D#1
  # DEBUG this => &D.55100
  if (&D.55100.D.11539._M_local_buf != _93)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  # DEBUG D#252 => D.55100.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.55100
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.55100
  # DEBUG this => D#1
  # DEBUG this => &D.55100
  # DEBUG D#249 => &D.55100._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _93
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _93
  # DEBUG this => D#243
  # DEBUG D.83550 => D#244
  operator delete (_93);

  <bb 151>:
  # DEBUG D#253 => &D.55100._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.55100 ={v} {CLOBBER};
  resx 15

<L95>:
  # DEBUG this => &D.55104
  # DEBUG this => &D.55104
  # DEBUG this => &D.55104
  _159 = MEM[(char * *)&D.55104];
  # DEBUG D#1 => &D.55104
  # DEBUG this => D#1
  # DEBUG this => &D.55104
  if (&D.55104.D.11539._M_local_buf != _159)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  # DEBUG D#252 => D.55104.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.55104
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.55104
  # DEBUG this => D#1
  # DEBUG this => &D.55104
  # DEBUG D#249 => &D.55104._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _159
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _159
  # DEBUG this => D#243
  # DEBUG D.83567 => D#244
  operator delete (_159);

  <bb 154>:
  # DEBUG D#253 => &D.55104._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.55104 ={v} {CLOBBER};
  resx 19

<L97>:
  # DEBUG this => &D.55108
  # DEBUG this => &D.55108
  # DEBUG this => &D.55108
  _196 = MEM[(char * *)&D.55108];
  # DEBUG D#1 => &D.55108
  # DEBUG this => D#1
  # DEBUG this => &D.55108
  if (&D.55108.D.11539._M_local_buf != _196)
    goto <bb 156>;
  else
    goto <bb 157>;

  <bb 156>:
  # DEBUG D#252 => D.55108.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.55108
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.55108
  # DEBUG this => D#1
  # DEBUG this => &D.55108
  # DEBUG D#249 => &D.55108._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _196
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _196
  # DEBUG this => D#243
  # DEBUG D.83584 => D#244
  operator delete (_196);

  <bb 157>:
  # DEBUG D#253 => &D.55108._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.55108 ={v} {CLOBBER};
  resx 24

  <bb 158>:
  # f_880 = PHI <f_750(13), f_4(48), f_4(59), f_750(20)>
  # _697 = PHI <_333(13), _641(48), _641(59), _333(20)>
  # DEBUG advanced => 1
  # DEBUG advanced => 1
  # DEBUG D#1080 => &this_21(D)->_input_frame
  _262 = MEM[(struct queue * *)this_21(D) + 352B];
  # DEBUG D#34 => D#1080
  # DEBUG __n => _24
  # DEBUG this => D#34
  _304 = _262 + _697;
  # DEBUG this => NULL
  # DEBUG D#1800 => &_304->c
  # DEBUG this => D#1800
  _300 = MEM[(struct deque *)_304].D.47197._M_impl._M_start._M_cur;
  _301 = MEM[(struct deque *)_304].D.47197._M_impl._M_start._M_last;
  _302 = _301 + 18446744073709551608;
  if (_300 != _302)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 159>:
  # DEBUG advanced => 0
  # DEBUG D#1052 => &this_21(D)->_input_frame
  # DEBUG D#34 => D#1052
  # DEBUG __n => _24
  # DEBUG this => D#34
  # DEBUG this => NULL
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#73 => &D#123->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#122 => MEM[(const struct iterator &)D#123 + 16]._M_first
  # DEBUG D.73667 => D#122
  # DEBUG D#121 => MEM[(const struct iterator &)D#123 + 16]._M_last
  # DEBUG D.73668 => D#121
  # DEBUG D#120 => MEM[(const struct iterator &)D#123 + 16]._M_node
  # DEBUG D.73669 => D#120
  # DEBUG this => D#119
  f_750 = *_716;
  # DEBUG f => f_750
  # DEBUG D#1053 => &this_21(D)->_input_output_match
  # DEBUG D#31 => D#1053
  # DEBUG __n => _24
  # DEBUG this => D#31
  # DEBUG advanced => 0
  # DEBUG D#1052 => &this_21(D)->_input_frame
  # DEBUG D#34 => D#1052
  # DEBUG __n => _24
  # DEBUG this => D#34
  # DEBUG this => NULL
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#73 => &D#123->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#122 => MEM[(const struct iterator &)D#123 + 16]._M_first
  # DEBUG D.73667 => D#122
  # DEBUG D#121 => MEM[(const struct iterator &)D#123 + 16]._M_last
  # DEBUG D.73668 => D#121
  # DEBUG D#120 => MEM[(const struct iterator &)D#123 + 16]._M_node
  # DEBUG D.73669 => D#120
  # DEBUG this => D#119
  # DEBUG f => f_750
  # DEBUG D#1053 => &this_21(D)->_input_output_match
  # DEBUG D#31 => D#1053
  # DEBUG __n => _24
  # DEBUG this => D#31
  _32 = f_750->tail;
  if (_32 != 0)
    goto <bb 12>;
  else
    goto <bb 160>;

  <bb 160>:
  pretmp_605 = (long unsigned int) _25;
  goto <bb 13>;

  <bb 161>:
  # DEBUG D#1051 => &this_21(D)->_input_frame
  _573 = MEM[(struct queue * *)this_21(D) + 352B];
  # DEBUG D#34 => D#1051
  # DEBUG __n => _24
  # DEBUG this => D#34
  _333 = _24 * 80;
  _312 = _573 + _333;
  # DEBUG this => NULL
  # DEBUG this => D#63
  # DEBUG D#61 => &D#63->D.47197._M_impl._M_start
  # DEBUG D#62 => &D#63->D.47197._M_impl._M_finish
  _715 = MEM[(struct Flit * * *)_312 + 48B];
  # DEBUG D#59 => D#62
  _716 = MEM[(struct Flit * * *)_312 + 16B];
  # DEBUG D#60 => D#61
  # DEBUG __x => D#59
  # DEBUG __y => D#60
  if (_715 != _716)
    goto <bb 159>;
  else
    goto <bb 92>;

  <bb 162>:
  # DEBUG advanced => 0
  # DEBUG D#1052 => &this_21(D)->_input_frame
  # DEBUG D#34 => D#1052
  # DEBUG __n => _24
  # DEBUG this => D#34
  # DEBUG this => NULL
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#73 => &D#123->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#122 => MEM[(const struct iterator &)D#123 + 16]._M_first
  # DEBUG D.73667 => D#122
  # DEBUG D#121 => MEM[(const struct iterator &)D#123 + 16]._M_last
  # DEBUG D.73668 => D#121
  # DEBUG D#120 => MEM[(const struct iterator &)D#123 + 16]._M_node
  # DEBUG D.73669 => D#120
  # DEBUG this => D#119
  # DEBUG D#1802 => *_532
  # DEBUG f => D#1802
  # DEBUG D#1053 => &this_21(D)->_input_output_match
  # DEBUG D#31 => D#1053
  # DEBUG __n => _24
  # DEBUG this => D#31
  # DEBUG advanced => 0
  # DEBUG D#1052 => &this_21(D)->_input_frame
  # DEBUG D#34 => D#1052
  # DEBUG __n => _24
  # DEBUG this => D#34
  # DEBUG this => NULL
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#73 => &D#123->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#122 => MEM[(const struct iterator &)D#123 + 16]._M_first
  # DEBUG D.73667 => D#122
  # DEBUG D#121 => MEM[(const struct iterator &)D#123 + 16]._M_last
  # DEBUG D.73668 => D#121
  # DEBUG D#120 => MEM[(const struct iterator &)D#123 + 16]._M_node
  # DEBUG D.73669 => D#120
  # DEBUG this => D#119
  # DEBUG f => D#1802
  # DEBUG D#1053 => &this_21(D)->_input_output_match
  # DEBUG D#31 => D#1053
  # DEBUG __n => _24
  # DEBUG this => D#31
  # DEBUG D#1061 => &this_21(D)->_input_mq_match
  # DEBUG D#31 => D#1061
  # DEBUG __n => _24
  # DEBUG this => D#31
  # DEBUG this => this_21(D)
  # DEBUG mq => _26
  _475 = (long unsigned int) _26;
  # DEBUG D#104 => &MEM[(const struct ChaosRouter *)this_21(D)]._multi_queue
  _476 = MEM[(struct queue * *)this_21(D) + 400B];
  # DEBUG D#40 => D#104
  # DEBUG __n => _475
  # DEBUG this => D#40
  _477 = _475 * 80;
  _478 = _476 + _477;
  # DEBUG this => NULL
  # DEBUG this => D#102
  # DEBUG D#100 => &D#102->D.47197._M_impl._M_start
  # DEBUG D#101 => &D#102->D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _479 = MEM[(const struct _Deque_iterator &)_478 + 48]._M_node;
  _480 = (long int) _479;
  _481 = MEM[(const struct _Deque_iterator &)_478 + 16]._M_node;
  _482 = (long int) _481;
  _483 = _480 - _482;
  _484 = _483 /[ex] 8;
  _485 = _484 + -1;
  _486 = _485 * 64;
  _487 = MEM[(const struct _Deque_iterator &)_478 + 48]._M_cur;
  _488 = (long int) _487;
  _489 = MEM[(const struct _Deque_iterator &)_478 + 48]._M_first;
  _490 = (long int) _489;
  _491 = _488 - _490;
  _492 = _491 /[ex] 8;
  _493 = _486 + _492;
  _494 = MEM[(const struct _Deque_iterator &)_478 + 16]._M_last;
  _495 = (long int) _494;
  _496 = MEM[(const struct _Deque_iterator &)_478 + 16]._M_cur;
  _497 = (long int) _496;
  _498 = _495 - _497;
  _499 = _498 /[ex] 8;
  _500 = _493 + _499;
  _501 = (size_type) _500;
  _502 = MEM[(const struct ChaosRouter *)this_21(D)]._buffer_size;
  _503 = (long unsigned int) _502;
  if (_501 >= _503)
    goto <bb 92>;
  else
    goto <bb 21>;

  <bb 163>:
  # DEBUG D#1051 => &this_21(D)->_input_frame
  _1 = MEM[(struct queue * *)this_21(D) + 352B];
  # DEBUG D#34 => D#1051
  # DEBUG __n => _24
  # DEBUG this => D#34
  _641 = _24 * 80;
  _111 = _1 + _641;
  # DEBUG this => NULL
  # DEBUG this => D#63
  # DEBUG D#61 => &D#63->D.47197._M_impl._M_start
  # DEBUG D#62 => &D#63->D.47197._M_impl._M_finish
  _772 = MEM[(struct Flit * * *)_111 + 48B];
  # DEBUG D#59 => D#62
  _532 = MEM[(struct Flit * * *)_111 + 16B];
  # DEBUG D#60 => D#61
  # DEBUG __x => D#59
  # DEBUG __y => D#60
  if (_532 != _772)
    goto <bb 162>;
  else
    goto <bb 92>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Flit*>*; _ForwardIterator = std::queue<Flit*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5queueIP4FlitSt5dequeIS4_SaIS4_EEES9_EET0_T_SB_SA_, funcdef_no=3291, decl_uid=62458, cgraph_uid=1751, symbol_order=1752)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Flit*>*; _ForwardIterator = std::queue<Flit*>*; bool _TrivialValueTypes = false] (struct queue * __first, struct queue * __last, struct queue * __result)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.2874;
  struct Flit * * SR.2873;
  struct Flit * * SR.2872;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.94929;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.94904;
  struct _Deque_iterator D.94903;
  struct _Deque_iterator D.94902;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.94884;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.94870;
  struct _Deque_iterator D.94869;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.94862;
  struct _Deque_iterator D.94861;
  struct _Deque_iterator D.94860;
  void * _12;
  struct _Deque_base * _18;
  struct Flit * * * _25;
  long int _26;
  struct Flit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Flit * * _33;
  long int _34;
  struct Flit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Flit * * _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Flit * * _49;
  struct Flit * * _51;
  struct Flit * * * _52;
  struct Flit * * _53;
  struct Flit * * _54;
  struct Flit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Flit * _117;
  struct Flit * * _122;
  struct Flit * * * _134;
  struct Flit * * _135;
  struct Flit * * _136;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_154 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_155 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_155
  # DEBUG __first => __first_154
  # DEBUG __r => __result_155
  # DEBUG __p => NULL
  # DEBUG __value => __first_154
  # DEBUG D#9 => 80
  # DEBUG __p => NULL
  # DEBUG D.81439 => D#9
  if (__result_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.81448 => __first_154
  # DEBUG D#1818 => &MEM[(const struct queue &)__first_154].c
  # DEBUG D#1820 => &__result_155->c
  # DEBUG this => D#1820
  # DEBUG __x => D#1818
  # DEBUG this => D#1818
  # DEBUG D#100 => &D#1818->D.47197._M_impl._M_start
  # DEBUG D#101 => &D#1818->D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#966 => &D#1818->D.47197
  # DEBUG this => D#966
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__result_155].D.47197;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#861 => &_48->_M_impl
  # DEBUG this => D#861
  # DEBUG __a => NULL
  # DEBUG this => D#861
  # DEBUG __a => NULL
  # DEBUG this => D#861
  # DEBUG D.75391 => NULL
  MEM[(struct _Deque_impl *)__result_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__result_155]._M_map_size = 0;
  # DEBUG D#468 => &D#861->_M_start
  # DEBUG this => D#468
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_node = 0B;
  # DEBUG D#467 => &D#861->_M_finish
  # DEBUG this => D#467
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#967 => &D#1820->D.47197
  # DEBUG this => D#967
  # DEBUG D#968 => &D#1820->D.47197._M_impl._M_start
  # DEBUG this => &D.94860
  # DEBUG __x => D#968
  _49 = MEM[(const struct iterator &)__result_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__result_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__result_155 + 16]._M_node;
  # DEBUG this => D#1818
  # DEBUG D#98 => &D#1818->D.47197._M_impl._M_finish
  # DEBUG this => &D.94861
  # DEBUG __x => D#98
  _53 = MEM[(const struct iterator &)__first_154 + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__first_154 + 48]._M_first;
  # DEBUG D#1819 => MEM[(const struct iterator &)__first_154 + 48]._M_last
  _56 = MEM[(const struct iterator &)__first_154 + 48]._M_node;
  # DEBUG this => D#1818
  # DEBUG D#99 => &D#1818->D.47197._M_impl._M_start
  # DEBUG this => &D.94862
  # DEBUG __x => D#99
  __first$_M_cur_57 = MEM[(const struct iterator &)__first_154 + 16]._M_cur;
  # DEBUG D#1821 => MEM[(const struct iterator &)__first_154 + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__first_154 + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__first_154 + 16]._M_node;
  # DEBUG __result => &D.94860
  # DEBUG D.94866 => D#965
  # DEBUG this => &D.94870
  # DEBUG __x => &D.94860
  # DEBUG __result => &D.94870
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.94870
  # DEBUG __result => NULL
  # DEBUG this => &D.94884
  # DEBUG __x => NULL
  # DEBUG __result => &D.94884
  # DEBUG this => &D.94904
  # DEBUG __x => &D.94884
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#1819
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#1819
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#1821
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#1821
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.94904
  # DEBUG this => NULL
  # DEBUG __x => &D.94904
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#1819
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#1819
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#1821
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#1821
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#1821
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.94929
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#1821
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.94929
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.94869
  # DEBUG __x => &D.94929
  D.94929 ={v} {CLOBBER};
  D.94904 ={v} {CLOBBER};
  D.94884 ={v} {CLOBBER};
  D.94870 ={v} {CLOBBER};
  D.94860 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.2872_217 = PHI <_49(8), SR.2872_216(14)>
  # SR.2873_214 = PHI <_51(8), SR.2873_213(14)>
  # SR.2874_212 = PHI <_52(8), SR.2874_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#119 => &D.94929
  # DEBUG this => D#119
  # DEBUG D#66 => &__first
  # DEBUG this => D#66
  _117 = MEM[(struct Flit * const &)__first$_M_cur_209];
  *SR.2872_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Flit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.94929
  _122 = SR.2872_217 + 8;
  if (_122 == SR.2873_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.94929
  _134 = SR.2874_212 + 8;
  # DEBUG this => &D.94929
  # DEBUG __new_node => _134
  _135 = MEM[(struct Flit * * *)SR.2874_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.2872_216 = PHI <_122(11), _135(12)>
  # SR.2873_213 = PHI <SR.2873_214(11), _136(12)>
  # SR.2874_211 = PHI <SR.2874_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __first_10 = __first_154 + 80;
  # DEBUG __first => __first_10
  __result_11 = __result_155 + 80;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_194 = PHI <__result_11(15)>

  <bb 18>:
  # __result_156 = PHI <__result_194(17), __result_4(D)(2)>
  return __result_156;

  # __result_193 = PHI <__result_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_158 = PHI <__result_4(D)(21), __result_19(23)>
  # DEBUG __first => __result_158
  # DEBUG __r => __result_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  _18 = &MEM[(struct deque *)__result_158].D.47197;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_18);
  MEM[(struct  &)__result_158] ={v} {CLOBBER};
  __result_19 = __result_158 + 80;
  # DEBUG __first => __result_19
  # DEBUG __first => __result_19
  if (__result_19 == __result_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Flit*] (_ZSt4copyIP4FlitESt15_Deque_iteratorIT_RS3_PS3_ES2_IS3_RKS3_PS7_ESA_S6_, funcdef_no=3294, decl_uid=62488, cgraph_uid=1754, symbol_order=1755)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Flit*] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.95015;
  const difference_type __offset;
  struct _Self & D.95008;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.63098;
  const long int D.63099;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  struct Flit * * * _22;
  long unsigned int __clen.84_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  struct Flit * * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.83_56;
  long int _57;
  struct Flit * * * _65;
  struct Flit * * _73;
  long int _74;
  long int _75;
  long int _76;
  struct Flit * * _81;
  long int iftmp.89_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.89_87;
  struct Flit * * * _88;
  long int iftmp.89_89;
  long unsigned int __node_offset.91_90;
  long unsigned int _91;
  struct Flit * * * _92;
  struct Flit * * _93;
  struct Flit * * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  struct Flit * * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.79_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.79_115;
  long int iftmp.79_117;
  long unsigned int __node_offset.81_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  struct Flit * * pretmp_214;
  struct Flit * * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  struct Flit * * const prephitmp_227;
  struct Flit * * const pretmp_228;
  struct Flit * * const prephitmp_229;
  struct Flit * * const prephitmp_230;
  struct Flit * * const prephitmp_238;
  struct Flit * * const prephitmp_239;
  struct Flit * * const prephitmp_240;
  struct Flit * * const pretmp_241;
  struct Flit * * const prephitmp_242;
  struct Flit * * const pretmp_243;
  struct Flit * * const prephitmp_244;
  struct Flit * * const pretmp_245;
  struct Flit * * const prephitmp_246;
  struct Flit * * pretmp_247;
  struct Flit * * prephitmp_248;
  struct Flit * * pretmp_249;
  struct Flit * * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 64;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 8;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.83_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#1825 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 8;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 8;
  # DEBUG __a => &D.63098
  # DEBUG __b => &D.63099
  _30 = MIN_EXPR <_12, __len.83_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#1823
  __clen.84_26 = (long unsigned int) __clen_59;
  _27 = __clen.84_26 * 8;
  # DEBUG D#1826 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#1826
  # DEBUG __result => D#1825
  # DEBUG __it => D#1826
  # DEBUG __it => D#1826
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#1826
  # DEBUG __result => D#1825
  # DEBUG __it => D#1825
  # DEBUG __it => D#1825
  # DEBUG __it => D#1826
  # DEBUG __it => D#1826
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#1826
  # DEBUG __result => D#1825
  # DEBUG __simple => 1
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#1826
  # DEBUG __result => D#1825
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 8;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#1823
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 8;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 8
  _143 = (unsigned long) __offset_105;
  if (_143 <= 63)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 8
  iftmp.79_110 = __offset_105 >> 6;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 8
  _113 = _112 >> 6;
  _114 = (long int) _113;
  iftmp.79_115 = ~_114;

  <bb 11>:
  # iftmp.79_117 = PHI <iftmp.79_110(9), iftmp.79_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.79_117
  __node_offset.81_118 = (long unsigned int) iftmp.79_117;
  _119 = __node_offset.81_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 8
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 8
  _123 = iftmp.79_117 * 64;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 8;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#1823
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 8;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 8
  _144 = (unsigned long) __offset_77;
  if (_144 <= 63)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 8
  iftmp.89_82 = __offset_77 >> 6;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 8
  _85 = _84 >> 6;
  _86 = (long int) _85;
  iftmp.89_87 = ~_86;

  <bb 15>:
  # iftmp.89_89 = PHI <iftmp.89_82(13), iftmp.89_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.89_89
  _88 = *__result_6(D)._M_node;
  __node_offset.91_90 = (long unsigned int) iftmp.89_89;
  _91 = __node_offset.91_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 8
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 8
  _95 = iftmp.89_89 * 64;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 8;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.83_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#1824 => {CLOBBER}
  # DEBUG __len => D#1824
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Credit*>*; _ForwardIterator = std::queue<Credit*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5queueIP6CreditSt5dequeIS4_SaIS4_EEES9_EET0_T_SB_SA_, funcdef_no=3304, decl_uid=62570, cgraph_uid=1764, symbol_order=1765)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Credit*>*; _ForwardIterator = std::queue<Credit*>*; bool _TrivialValueTypes = false] (struct queue * __first, struct queue * __last, struct queue * __result)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.2924;
  struct Credit * * SR.2923;
  struct Credit * * SR.2922;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.95122;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.95097;
  struct _Deque_iterator D.95096;
  struct _Deque_iterator D.95095;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.95077;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.95063;
  struct _Deque_iterator D.95062;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.95055;
  struct _Deque_iterator D.95054;
  struct _Deque_iterator D.95053;
  void * _12;
  struct _Deque_base * _18;
  struct Credit * * * _25;
  long int _26;
  struct Credit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Credit * * _33;
  long int _34;
  struct Credit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Credit * * _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Credit * * _49;
  struct Credit * * _51;
  struct Credit * * * _52;
  struct Credit * * _53;
  struct Credit * * _54;
  struct Credit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Credit * _117;
  struct Credit * * _122;
  struct Credit * * * _134;
  struct Credit * * _135;
  struct Credit * * _136;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_154 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_155 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_155
  # DEBUG __first => __first_154
  # DEBUG __r => __result_155
  # DEBUG __p => NULL
  # DEBUG __value => __first_154
  # DEBUG D#9 => 80
  # DEBUG __p => NULL
  # DEBUG D.81789 => D#9
  if (__result_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.81798 => __first_154
  # DEBUG D#1827 => &MEM[(const struct queue &)__first_154].c
  # DEBUG D#1829 => &__result_155->c
  # DEBUG this => D#1829
  # DEBUG __x => D#1827
  # DEBUG this => D#1827
  # DEBUG D#214 => &D#1827->D.53612._M_impl._M_start
  # DEBUG D#215 => &D#1827->D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#977 => &D#1827->D.53612
  # DEBUG this => D#977
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__result_155].D.53612;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#895 => &_48->_M_impl
  # DEBUG this => D#895
  # DEBUG __a => NULL
  # DEBUG this => D#895
  # DEBUG __a => NULL
  # DEBUG this => D#895
  # DEBUG D.75437 => NULL
  MEM[(struct _Deque_impl *)__result_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__result_155]._M_map_size = 0;
  # DEBUG D#478 => &D#895->_M_start
  # DEBUG this => D#478
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_node = 0B;
  # DEBUG D#477 => &D#895->_M_finish
  # DEBUG this => D#477
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#978 => &D#1829->D.53612
  # DEBUG this => D#978
  # DEBUG D#979 => &D#1829->D.53612._M_impl._M_start
  # DEBUG this => &D.95053
  # DEBUG __x => D#979
  _49 = MEM[(const struct iterator &)__result_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__result_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__result_155 + 16]._M_node;
  # DEBUG this => D#1827
  # DEBUG D#112 => &D#1827->D.53612._M_impl._M_finish
  # DEBUG this => &D.95054
  # DEBUG __x => D#112
  _53 = MEM[(const struct iterator &)__first_154 + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__first_154 + 48]._M_first;
  # DEBUG D#1828 => MEM[(const struct iterator &)__first_154 + 48]._M_last
  _56 = MEM[(const struct iterator &)__first_154 + 48]._M_node;
  # DEBUG this => D#1827
  # DEBUG D#113 => &D#1827->D.53612._M_impl._M_start
  # DEBUG this => &D.95055
  # DEBUG __x => D#113
  __first$_M_cur_57 = MEM[(const struct iterator &)__first_154 + 16]._M_cur;
  # DEBUG D#1830 => MEM[(const struct iterator &)__first_154 + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__first_154 + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__first_154 + 16]._M_node;
  # DEBUG __result => &D.95053
  # DEBUG D.95059 => D#976
  # DEBUG this => &D.95063
  # DEBUG __x => &D.95053
  # DEBUG __result => &D.95063
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.95063
  # DEBUG __result => NULL
  # DEBUG this => &D.95077
  # DEBUG __x => NULL
  # DEBUG __result => &D.95077
  # DEBUG this => &D.95097
  # DEBUG __x => &D.95077
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#1828
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#1828
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#1830
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#1830
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.95097
  # DEBUG this => NULL
  # DEBUG __x => &D.95097
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#1828
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#1828
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#1830
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#1830
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#1830
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.95122
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#1830
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.95122
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.95062
  # DEBUG __x => &D.95122
  D.95122 ={v} {CLOBBER};
  D.95097 ={v} {CLOBBER};
  D.95077 ={v} {CLOBBER};
  D.95063 ={v} {CLOBBER};
  D.95053 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.2922_217 = PHI <_49(8), SR.2922_216(14)>
  # SR.2923_214 = PHI <_51(8), SR.2923_213(14)>
  # SR.2924_212 = PHI <_52(8), SR.2924_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#130 => &D.95122
  # DEBUG this => D#130
  # DEBUG D#975 => &__first
  # DEBUG this => D#975
  _117 = MEM[(struct Credit * const &)__first$_M_cur_209];
  *SR.2922_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Credit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.95122
  _122 = SR.2922_217 + 8;
  if (_122 == SR.2923_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.95122
  _134 = SR.2924_212 + 8;
  # DEBUG this => &D.95122
  # DEBUG __new_node => _134
  _135 = MEM[(struct Credit * * *)SR.2924_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.2922_216 = PHI <_122(11), _135(12)>
  # SR.2923_213 = PHI <SR.2923_214(11), _136(12)>
  # SR.2924_211 = PHI <SR.2924_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __first_10 = __first_154 + 80;
  # DEBUG __first => __first_10
  __result_11 = __result_155 + 80;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_194 = PHI <__result_11(15)>

  <bb 18>:
  # __result_156 = PHI <__result_194(17), __result_4(D)(2)>
  return __result_156;

  # __result_193 = PHI <__result_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_158 = PHI <__result_4(D)(21), __result_19(23)>
  # DEBUG __first => __result_158
  # DEBUG __r => __result_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  _18 = &MEM[(struct deque *)__result_158].D.53612;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_18);
  MEM[(struct  &)__result_158] ={v} {CLOBBER};
  __result_19 = __result_158 + 80;
  # DEBUG __first => __result_19
  # DEBUG __first => __result_19
  if (__result_19 == __result_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Credit*] (_ZSt4copyIP6CreditESt15_Deque_iteratorIT_RS3_PS3_ES2_IS3_RKS3_PS7_ESA_S6_, funcdef_no=3307, decl_uid=62600, cgraph_uid=1767, symbol_order=1768)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Credit*] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.95208;
  const difference_type __offset;
  struct _Self & D.95201;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.63194;
  const long int D.63195;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  struct Credit * * * _22;
  long unsigned int __clen.142_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  struct Credit * * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.141_56;
  long int _57;
  struct Credit * * * _65;
  struct Credit * * _73;
  long int _74;
  long int _75;
  long int _76;
  struct Credit * * _81;
  long int iftmp.150_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.150_87;
  struct Credit * * * _88;
  long int iftmp.150_89;
  long unsigned int __node_offset.152_90;
  long unsigned int _91;
  struct Credit * * * _92;
  struct Credit * * _93;
  struct Credit * * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  struct Credit * * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.137_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.137_115;
  long int iftmp.137_117;
  long unsigned int __node_offset.139_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  struct Credit * * pretmp_214;
  struct Credit * * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  struct Credit * * const prephitmp_227;
  struct Credit * * const pretmp_228;
  struct Credit * * const prephitmp_229;
  struct Credit * * const prephitmp_230;
  struct Credit * * const prephitmp_238;
  struct Credit * * const prephitmp_239;
  struct Credit * * const prephitmp_240;
  struct Credit * * const pretmp_241;
  struct Credit * * const prephitmp_242;
  struct Credit * * const pretmp_243;
  struct Credit * * const prephitmp_244;
  struct Credit * * const pretmp_245;
  struct Credit * * const prephitmp_246;
  struct Credit * * pretmp_247;
  struct Credit * * prephitmp_248;
  struct Credit * * pretmp_249;
  struct Credit * * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 64;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 8;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.141_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#1834 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 8;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 8;
  # DEBUG __a => &D.63194
  # DEBUG __b => &D.63195
  _30 = MIN_EXPR <_12, __len.141_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#1832
  __clen.142_26 = (long unsigned int) __clen_59;
  _27 = __clen.142_26 * 8;
  # DEBUG D#1835 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#1835
  # DEBUG __result => D#1834
  # DEBUG __it => D#1835
  # DEBUG __it => D#1835
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#1835
  # DEBUG __result => D#1834
  # DEBUG __it => D#1834
  # DEBUG __it => D#1834
  # DEBUG __it => D#1835
  # DEBUG __it => D#1835
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 8;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#1832
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 8;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 8
  _143 = (unsigned long) __offset_105;
  if (_143 <= 63)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 8
  iftmp.137_110 = __offset_105 >> 6;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 8
  _113 = _112 >> 6;
  _114 = (long int) _113;
  iftmp.137_115 = ~_114;

  <bb 11>:
  # iftmp.137_117 = PHI <iftmp.137_110(9), iftmp.137_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.137_117
  __node_offset.139_118 = (long unsigned int) iftmp.137_117;
  _119 = __node_offset.139_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 8
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 8
  _123 = iftmp.137_117 * 64;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 8;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#1832
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 8;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 8
  _144 = (unsigned long) __offset_77;
  if (_144 <= 63)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 8
  iftmp.150_82 = __offset_77 >> 6;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 8
  _85 = _84 >> 6;
  _86 = (long int) _85;
  iftmp.150_87 = ~_86;

  <bb 15>:
  # iftmp.150_89 = PHI <iftmp.150_82(13), iftmp.150_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.150_89
  _88 = *__result_6(D)._M_node;
  __node_offset.152_90 = (long unsigned int) iftmp.150_89;
  _91 = __node_offset.152_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 8
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 8
  _95 = iftmp.150_89 * 64;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 8;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.141_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#1833 => {CLOBBER}
  # DEBUG __len => D#1833
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Flit*, std::allocator<Flit*> >*; _ForwardIterator = std::vector<Flit*, std::allocator<Flit*> >*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIP4FlitSaIS4_EES7_EET0_T_S9_S8_, funcdef_no=3344, decl_uid=62936, cgraph_uid=1804, symbol_order=1805)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Flit*, std::allocator<Flit*> >*; _ForwardIterator = std::vector<Flit*, std::allocator<Flit*> >*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct Flit * * D.95274;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct Flit * * _8;
  void * _12;
  long unsigned int _20;
  struct Flit * * const _27;
  struct Flit * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct Flit * * _36;
  struct Flit * * const _37;
  struct Flit * * const _38;
  long int __last.46_39;
  long int __first.47_40;
  long int _41;
  long unsigned int _43;
  struct Flit * * _45;
  struct Flit * * _46;
  struct Flit * * iftmp.44_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#9 => 24
  # DEBUG __p => NULL
  # DEBUG D.83878 => D#9
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#1119 => &MEM[(const struct vector *)__first_71].D.56618
  # DEBUG this => D#1119
  # DEBUG __a => NULL
  _27 = MEM[(struct Flit * * *)__first_71];
  # DEBUG D#109 => __first_71
  _28 = MEM[(struct Flit * * *)__first_71 + 8B];
  # DEBUG D#109 => __first_71
  # DEBUG this => D#109
  # DEBUG this => D#109
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#1121 => &__result_70->D.56618
  # DEBUG this => D#1121
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#847 => &D#1121->_M_impl
  # DEBUG this => D#847
  # DEBUG __a => NULL
  # DEBUG this => D#847
  # DEBUG __a => NULL
  # DEBUG this => D#847
  # DEBUG D.75391 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#1121
  # DEBUG __n => NULL
  # DEBUG D#845 => D#1121
  # DEBUG __n => _33
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#842 => D#843
  # DEBUG __n => _33
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#839
  # DEBUG D.95272 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.44_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.44_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.44_47;
  _36 = iftmp.44_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#1120 => &__result_70->D.56618
  # DEBUG this => D#1120
  _37 = MEM[(struct Flit * * *)__first_71 + 8B];
  # DEBUG D#209 => __first_71
  # DEBUG this => D#209
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct Flit * * *)__first_71];
  # DEBUG D#210 => __first_71
  # DEBUG this => D#210
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.95236 => D#1118
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.46_39 = (long int) _37;
  __first.47_40 = (long int) _38;
  _41 = __last.46_39 - __first.47_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.44_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.44_47 + prephitmp_2;
  __result_70->D.56618._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#576 => (long int) _8
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _8
  # DEBUG __n => D#573
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _8
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _8
  # DEBUG this => D#565
  # DEBUG D.83903 => D#566
  operator delete (_8);

  <bb 25>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Flit*, std::allocator<Flit*> >; _Alloc = std::allocator<std::vector<Flit*, std::allocator<Flit*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<std::vector<Flit*, std::allocator<Flit*> >, std::allocator<std::vector<Flit*, std::allocator<Flit*> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Flit*, std::allocator<Flit*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Flit*, std::allocator<Flit*> >] (_ZNSt6vectorIS_IP4FlitSaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=2820, decl_uid=52437, cgraph_uid=1280, symbol_order=1281)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Flit*, std::allocator<Flit*> >; _Alloc = std::allocator<std::vector<Flit*, std::allocator<Flit*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<std::vector<Flit*, std::allocator<Flit*> >, std::allocator<std::vector<Flit*, std::allocator<Flit*> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Flit*, std::allocator<Flit*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Flit*, std::allocator<Flit*> >] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct Flit * * D.95534;
  const ptrdiff_t _Num;
  const long unsigned int D.95484;
  const size_type __len;
  size_type D.95483;
  size_type __n;
  struct vector * D.95474;
  struct vector * D.95462;
  struct vector * __first;
  long unsigned int __n;
  struct Flit * * D.95434;
  const ptrdiff_t _Num;
  struct vector * D.95381;
  struct vector * __first;
  long unsigned int __n;
  struct Flit * * D.95353;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct Flit * * const _17;
  struct vector * prephitmp_18;
  struct vector * _20;
  struct vector * const _23;
  bool _24;
  long int __last.49_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long int pretmp_52;
  long unsigned int _55;
  struct Flit * * const prephitmp_56;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  long int pretmp_66;
  struct vector * _67;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct Flit * * _85;
  long int _87;
  long unsigned int prephitmp_88;
  long unsigned int _90;
  struct vector * _91;
  struct Flit * * _92;
  struct Flit * * _94;
  struct Flit * * _95;
  struct Flit * * _98;
  struct Flit * * const pretmp_100;
  struct Flit * * const _138;
  struct Flit * * const _153;
  struct Flit * * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  struct Flit * * _162;
  struct Flit * * _171;
  struct Flit * * _172;
  struct Flit * * iftmp.44_173;
  void * _178;
  struct Flit * * _180;
  struct Flit * * const _182;
  long int _183;
  long int _184;
  long int _185;
  long int _186;
  size_type _187;
  const ptrdiff_t pretmp_188;
  struct Flit * * _190;
  struct Flit * * const _191;
  struct Flit * * const _192;
  long int __last.46_193;
  long int __first.47_194;
  long int _195;
  long unsigned int _197;
  struct Flit * * _199;
  long unsigned int _200;
  struct Flit * * _201;
  struct Flit * * iftmp.44_202;
  long unsigned int pretmp_203;
  long unsigned int prephitmp_204;
  void * _207;
  struct Flit * * _209;
  struct vector * _211;
  long int _215;
  long int _216;
  long int _217;
  long unsigned int _219;
  long int pretmp_220;
  struct Flit * * const pretmp_222;
  struct vector * pretmp_224;
  struct Flit * * const _225;
  long int _226;
  long int _227;
  long int _228;
  long int _229;
  size_type _230;
  struct Flit * * _233;
  struct Flit * * _242;
  long unsigned int _243;
  struct Flit * * _244;
  struct Flit * * iftmp.44_245;
  struct Flit * * const pretmp_284;
  const ptrdiff_t prephitmp_317;
  struct vector * const prephitmp_323;
  long int pretmp_324;
  const ptrdiff_t prephitmp_327;
  struct Flit * * const prephitmp_329;
  long int pretmp_331;
  bool _332;
  long int _333;
  const ptrdiff_t pretmp_336;
  difference_type _337;
  long int _339;
  difference_type _340;
  long int _341;
  long int pretmp_343;
  struct Flit * * const pretmp_344;
  long unsigned int pretmp_345;
  long unsigned int prephitmp_346;
  long unsigned int prephitmp_347;
  struct vector * const pretmp_348;
  long unsigned int pretmp_349;
  long int prephitmp_350;
  long int pretmp_351;
  long int _355;
  long int _356;
  bool _358;
  long unsigned int pretmp_370;
  long unsigned int prephitmp_371;
  long unsigned int pretmp_372;
  long unsigned int prephitmp_373;
  long unsigned int pretmp_374;
  long unsigned int prephitmp_375;
  long unsigned int pretmp_378;
  long unsigned int prephitmp_379;

  <bb 2>:
  # DEBUG D#1849 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1849
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 102>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.52514._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.52514._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 61>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1119 => &MEM[(const struct vector *)__x_28(D)].D.56618
  # DEBUG this => D#1119
  # DEBUG __a => NULL
  _153 = MEM[(struct Flit * * *)__x_28(D)];
  # DEBUG D#109 => __x_28(D)
  _154 = MEM[(struct Flit * * *)__x_28(D) + 8B];
  # DEBUG D#109 => __x_28(D)
  # DEBUG this => D#109
  # DEBUG this => D#109
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 8;
  _159 = (size_type) _158;
  # DEBUG D#1121 => &__x_copy.D.56618
  # DEBUG this => D#1121
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#847 => &D#1121->_M_impl
  # DEBUG this => D#847
  # DEBUG __a => NULL
  # DEBUG this => D#847
  # DEBUG __a => NULL
  # DEBUG this => D#847
  # DEBUG D.75391 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#1121
  # DEBUG __n => NULL
  # DEBUG D#845 => D#1121
  # DEBUG __n => _159
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_345 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#842 => D#843
  # DEBUG __n => _159
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#839
  # DEBUG D.95351 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  if (_159 > 2305843009213693951)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_348 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_351 = (long int) pretmp_348;
  pretmp_344 = MEM[(struct Flit * * *)__x_28(D) + 8B];
  pretmp_284 = MEM[(struct Flit * * *)__x_28(D)];
  pretmp_331 = (long int) pretmp_344;
  pretmp_343 = (long int) pretmp_284;
  pretmp_324 = pretmp_331 - pretmp_343;
  pretmp_188 = pretmp_324 /[ex] 8;
  pretmp_370 = (long unsigned int) pretmp_324;

  <bb 9>:
  # iftmp.44_173 = PHI <0B(5), _172(8)>
  # prephitmp_323 = PHI <_12(5), pretmp_348(8)>
  # prephitmp_350 = PHI <_13(5), pretmp_351(8)>
  # prephitmp_346 = PHI <pretmp_345(5), _55(8)>
  # prephitmp_329 = PHI <_153(5), pretmp_284(8)>
  # prephitmp_317 = PHI <_158(5), pretmp_188(8)>
  # prephitmp_371 = PHI <pretmp_345(5), pretmp_370(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.44_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.44_173;
  _162 = iftmp.44_173 + prephitmp_346;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#1120 => &__x_copy.D.56618
  # DEBUG this => D#1120
  # DEBUG D#1842 => MEM[(struct Flit * * *)__x_28(D) + 8B]
  # DEBUG D#209 => __x_28(D)
  # DEBUG this => D#209
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#1841 => MEM[(struct Flit * * *)__x_28(D)]
  # DEBUG D#210 => __x_28(D)
  # DEBUG this => D#210
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#1841
  # DEBUG __last => D#1842
  # DEBUG __result => NULL
  # DEBUG D.95315 => D#1118
  # DEBUG __first => D#1841
  # DEBUG __last => D#1842
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1841
  # DEBUG __last => D#1842
  # DEBUG __result => NULL
  # DEBUG __first => D#1841
  # DEBUG __last => D#1842
  # DEBUG __result => NULL
  # DEBUG __it => D#1842
  # DEBUG __it$_M_current => D#1842
  # DEBUG __it => D#1841
  # DEBUG __it$_M_current => D#1841
  # DEBUG __first => D#1841
  # DEBUG __last => D#1842
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1842
  # DEBUG __it => D#1842
  # DEBUG this => NULL
  # DEBUG __it => D#1841
  # DEBUG __it => D#1841
  # DEBUG this => NULL
  # DEBUG __first => D#1841
  # DEBUG __last => D#1842
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1841
  # DEBUG __last => D#1842
  # DEBUG __result => NULL
  # DEBUG D#1840 => (long int) D#1842
  # DEBUG D#1839 => (long int) D#1841
  # DEBUG D#1838 => D#1840 - D#1839
  # DEBUG _Num => D#1838 /[ex] 8
  if (prephitmp_317 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.44_173, prephitmp_329, prephitmp_371);

  <bb 11>:
  _171 = iftmp.44_173 + prephitmp_371;
  __x_copy.D.56618._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#211 => &this_9(D)->D.52514._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#211
  # DEBUG D#1837 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.60679
  # DEBUG __rhs => &__position
  # DEBUG this => &D.60679
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_350 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#1837
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  # DEBUG D#1230 => &this_9(D)->D.52514
  # DEBUG this => D#1230
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_323 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#1837
  # DEBUG __result => D#1837
  # DEBUG __alloc => D#1124
  # DEBUG D#1123 => D#1124
  # DEBUG D#1122 => D#1123
  # DEBUG __first => __last_61
  # DEBUG __last => D#1837
  # DEBUG __result => D#1837
  # DEBUG D.86249 => D#1122
  # DEBUG __first => __last_61
  # DEBUG __last => D#1837
  # DEBUG __result => D#1837
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<Flit*, std::allocator<Flit*> >*> (__last_61, prephitmp_323, prephitmp_323);

  <bb 13>:
  _62 = this_9(D)->D.52514._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.52514._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#1849
  # DEBUG __last => __last_61
  # DEBUG __result => D#1837
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1849
  # DEBUG __it => D#1849
  # DEBUG __first => D#1849
  # DEBUG __last => __last_61
  # DEBUG __result => D#1837
  # DEBUG __it => D#1837
  # DEBUG __it => D#1837
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1849
  # DEBUG __it => D#1849
  # DEBUG __first => D#1849
  # DEBUG __last => __last_61
  # DEBUG __result => D#1837
  # DEBUG __simple => 0
  # DEBUG __first => D#1849
  # DEBUG __last => __last_61
  # DEBUG __result => D#1837
  __last.49_25 = (long int) __last_61;
  _78 = __last.49_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#1837
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#1849
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1849
  if (__position_22 == _67)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 15>:

  <bb 16>:
  # __old_finish_366 = PHI <prephitmp_323(15), __old_finish_65(19)>
  # __last_367 = PHI <__last_61(15), __last_68(19)>
  # __n_361 = PHI <__n_73(15), __n_58(19)>
  # DEBUG __n => __n_361
  # DEBUG __result => __old_finish_366
  # DEBUG __last => __last_367
  __last_68 = __last_367 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_366 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<Flit*, std::allocator<Flit*> >::operator= (__old_finish_65, __last_68);
  goto <bb 18>;

<L26>:
  goto <bb 104> (<L10>);

  <bb 18>:
  __n_58 = __n_361 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 16>;

  <bb 20>:
  # DEBUG this => &__x_copy
  # DEBUG D#579 => &__x_copy.D.56618
  # DEBUG this => D#579
  # DEBUG D#582 => __x_copy.D.56618._M_impl._M_finish
  # DEBUG D#581 => __x_copy.D.56618._M_impl._M_start
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG D#580 => &__x_copy.D.56618
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#576 => (long int) _85
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _85
  # DEBUG __n => D#573
  if (_85 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 21>:

  <bb 22>:
  # __position_365 = PHI <__position_22(21), __position_81(25)>
  # DEBUG __first => __position_365
  std::vector<Flit*, std::allocator<Flit*> >::operator= (__position_365, &__x_copy);
  goto <bb 24>;

<L27>:
  goto <bb 104> (<L10>);

  <bb 24>:
  __position_81 = __position_365 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 22>;

  <bb 26>:
  # DEBUG D#1231 => &this_9(D)->D.52514
  # DEBUG this => D#1231
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#1837
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.86295 => D#1127
  # DEBUG __first => D#1837
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#1837
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#1837
  # DEBUG __cur => D#1837
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 42>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # __n_360 = PHI <__n_70(27), __n_176(41)>
  # __old_finish_290 = PHI <prephitmp_323(27), __old_finish_177(41)>
  # DEBUG __cur => __old_finish_290
  # DEBUG __n => __n_360
  # DEBUG __r => __old_finish_290
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#9 => 24
  # DEBUG __p => NULL
  # DEBUG D.83878 => D#9
  if (__old_finish_290 != 0B)
    goto <bb 29>;
  else
    goto <bb 39>;

  <bb 29>:
  # DEBUG this => __old_finish_290
  # DEBUG __x => &__x_copy
  # DEBUG D#1119 => &__x_copy.D.56618
  # DEBUG this => D#1119
  # DEBUG __a => NULL
  _138 = MEM[(struct Flit * * *)&__x_copy];
  # DEBUG D#109 => &__x_copy
  _182 = MEM[(struct Flit * * *)&__x_copy + 8B];
  # DEBUG D#109 => &__x_copy
  # DEBUG this => D#109
  # DEBUG this => D#109
  _183 = (long int) _182;
  _184 = (long int) _138;
  _185 = _183 - _184;
  _186 = _185 /[ex] 8;
  _187 = (size_type) _186;
  # DEBUG D#1121 => &__old_finish_290->D.56618
  # DEBUG this => D#1121
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#847 => &D#1121->_M_impl
  # DEBUG this => D#847
  # DEBUG __a => NULL
  # DEBUG this => D#847
  # DEBUG __a => NULL
  # DEBUG this => D#847
  # DEBUG D.75391 => NULL
  MEM[(struct _Vector_impl *)__old_finish_290]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_end_of_storage = 0B;
  # DEBUG this => D#1121
  # DEBUG __n => NULL
  # DEBUG D#845 => D#1121
  # DEBUG __n => _187
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  if (_187 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  pretmp_372 = (long unsigned int) _185;
  goto <bb 35>;

  <bb 31>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#842 => D#843
  # DEBUG __n => _187
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => _187
  # DEBUG this => D#839
  # DEBUG D.95432 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  if (_187 > 2305843009213693951)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # __old_finish_213 = PHI <__old_finish_290(31)>
  std::__throw_bad_alloc ();

  <bb 33>:
  _200 = (long unsigned int) _185;
  _201 = operator new (_200);
  goto <bb 35>;

  # __old_finish_175 = PHI <__old_finish_290(33)>
<L29>:
  goto <bb 45> (<L19>);

  <bb 35>:
  # iftmp.44_202 = PHI <0B(30), _201(33)>
  # prephitmp_373 = PHI <pretmp_372(30), _200(33)>
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_start = iftmp.44_202;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_finish = iftmp.44_202;
  _190 = iftmp.44_202 + prephitmp_373;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_end_of_storage = _190;
  # DEBUG D#1120 => &__old_finish_290->D.56618
  # DEBUG this => D#1120
  _191 = MEM[(struct Flit * * *)&__x_copy + 8B];
  # DEBUG D#209 => &__x_copy
  # DEBUG this => D#209
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _192 = MEM[(struct Flit * * *)&__x_copy];
  # DEBUG D#210 => &__x_copy
  # DEBUG this => D#210
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG D.95396 => D#1118
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => _191
  # DEBUG __it$_M_current => _191
  # DEBUG __it => _192
  # DEBUG __it$_M_current => _192
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _191
  # DEBUG __it => _191
  # DEBUG this => NULL
  # DEBUG __it => _192
  # DEBUG __it => _192
  # DEBUG this => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  __last.46_193 = (long int) _191;
  __first.47_194 = (long int) _192;
  _195 = __last.46_193 - __first.47_194;
  _Num_196 = _195 /[ex] 8;
  # DEBUG _Num => _Num_196
  if (_Num_196 != 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  pretmp_374 = (long unsigned int) _195;
  goto <bb 38>;

  <bb 37>:
  _197 = (long unsigned int) _195;
  __builtin_memmove (iftmp.44_202, _192, _197);

  <bb 38>:
  # prephitmp_375 = PHI <pretmp_374(36), _197(37)>
  _199 = iftmp.44_202 + prephitmp_375;
  __old_finish_290->D.56618._M_impl._M_finish = _199;

  <bb 39>:
  __n_176 = __n_360 + 18446744073709551615;
  # DEBUG __n => __n_176
  __old_finish_177 = __old_finish_290 + 24;
  # DEBUG __cur => __old_finish_177
  # DEBUG __cur => __old_finish_177
  # DEBUG __n => __n_176
  if (__n_176 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # __old_finish_221 = PHI <__old_finish_177(39)>
  goto <bb 42>;

  <bb 41>:
  goto <bb 28>;

  <bb 42>:
  # __old_finish_19 = PHI <__old_finish_221(40), prephitmp_323(26)>
  this_9(D)->D.52514._M_impl._M_finish = __old_finish_19;
  # DEBUG D#1232 => &this_9(D)->D.52514
  # DEBUG this => D#1232
  # DEBUG this => &__position
  # DEBUG __first => D#1849
  # DEBUG __last => D#1837
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1124
  # DEBUG D#1123 => D#1124
  # DEBUG D#1122 => D#1123
  # DEBUG __first => D#1849
  # DEBUG __last => D#1837
  # DEBUG __result => NULL
  # DEBUG D.86308 => D#1122
  # DEBUG __first => D#1849
  # DEBUG __last => D#1837
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<Flit*, std::allocator<Flit*> >*> (__position_22, prephitmp_323, __old_finish_19);
  goto <bb 53>;

<L30>:
  goto <bb 104> (<L10>);

<L28>:

  # __old_finish_151 = PHI <__old_finish_175(34), __old_finish_213(44)>
<L19>:
  _178 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_178);
  # DEBUG __first => D#1837
  # DEBUG __last => __old_finish_151
  # DEBUG __first => D#1837
  # DEBUG __last => __old_finish_151

  <bb 46>:
  # __old_finish_179 = PHI <prephitmp_323(45), __old_finish_181(49)>
  # DEBUG __first => __old_finish_179
  if (__old_finish_179 == __old_finish_151)
    goto <bb 50>;
  else
    goto <bb 47>;

  <bb 47>:
  # DEBUG __r => __old_finish_179
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _180 = MEM[(struct _Vector_base *)__old_finish_179]._M_impl._M_start;
  # DEBUG D#576 => (long int) _180
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _180
  # DEBUG __n => D#573
  if (_180 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _180
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _180
  # DEBUG this => D#565
  # DEBUG D.95374 => D#566
  operator delete (_180);

  <bb 49>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__old_finish_179] ={v} {CLOBBER};
  __old_finish_181 = __old_finish_179 + 24;
  # DEBUG __first => __old_finish_181
  goto <bb 46>;

  <bb 50>:
  __cxa_rethrow ();

<L21>:
  __cxa_end_catch ();
  resx 13

<L31>:
  goto <bb 104> (<L10>);

  <bb 53>:
  _74 = this_9(D)->D.52514._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.52514._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#1849
  # DEBUG __last => D#1837
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1849
  if (__position_22 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 54>;

  <bb 54>:

  <bb 55>:
  # __position_362 = PHI <__position_22(54), __position_84(58)>
  # DEBUG __first => __position_362
  std::vector<Flit*, std::allocator<Flit*> >::operator= (__position_362, &__x_copy);
  goto <bb 57>;

<L32>:
  goto <bb 104> (<L10>);

  <bb 57>:
  __position_84 = __position_362 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 55>;

  <bb 59>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _85
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _85
  # DEBUG this => D#565
  # DEBUG D.86341 => D#566
  operator delete (_85);

  <bb 60>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  __x_copy ={v} {CLOBBER};
  goto <bb 102>;

  <bb 61>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#912 => this_9(D)
  # DEBUG this => D#912
  # DEBUG D#911 => D#912
  # DEBUG D#910 => &D#911->D.52514
  # DEBUG this => D#910
  # DEBUG __a => D#909
  # DEBUG D#908 => D#909
  # DEBUG D#907 => D#908
  # DEBUG this => D#907
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#110 => this_9(D)
  # DEBUG D#110 => this_9(D)
  # DEBUG this => D#110
  # DEBUG this => D#110
  _215 = (long int) _23;
  _216 = _13 - _215;
  _217 = _216 /[ex] 24;
  _218 = (const long unsigned int) _217;
  _219 = 768614336404564650 - _218;
  if (__n_7(D) > _219)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 63>:
  # DEBUG D#110 => this_9(D)
  # DEBUG D#110 => this_9(D)
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG D#110 => this_9(D)
  # DEBUG D#110 => this_9(D)
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG __a => &D.95484
  # DEBUG __b => &__n
  _90 = MAX_EXPR <__n_7(D), _218>;
  __len_223 = _90 + _218;
  # DEBUG __len => __len_223
  # DEBUG D#110 => this_9(D)
  # DEBUG D#110 => this_9(D)
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG D#912 => this_9(D)
  # DEBUG this => D#912
  # DEBUG D#911 => D#912
  # DEBUG D#910 => &D#911->D.52514
  # DEBUG this => D#910
  # DEBUG __a => D#909
  # DEBUG D#908 => D#909
  # DEBUG D#907 => D#908
  # DEBUG this => D#907
  _332 = __len_223 > 768614336404564650;
  _358 = _218 > __len_223;
  _24 = _332 | _358;
  if (_24 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 64>:
  pretmp_349 = __len_223 * 24;

  <bb 65>:
  # __elems_before_268 = PHI <__elems_before_338(123), __elems_before_326(64)>
  # _355 = PHI <_339(123), _87(64)>
  # prephitmp_347 = PHI <18446744073709551600(123), pretmp_349(64)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#455 => &this_9(D)->D.52514._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#455
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.60712
  # DEBUG this => &__position
  # DEBUG this => &D.60712
  # DEBUG __elems_before => __elems_before_268
  # DEBUG D#1242 => &this_9(D)->D.52514
  # DEBUG D#920 => D#1242
  # DEBUG __n => NULL
  # DEBUG this => D#920
  # DEBUG D#919 => D#920
  # DEBUG D#918 => &D#919->_M_impl
  # DEBUG D#917 => D#918
  # DEBUG __n => NULL
  # DEBUG __a => D#917
  # DEBUG D#916 => D#917
  # DEBUG D#914 => D#916
  # DEBUG D#915 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#914
  # DEBUG D.95472 => D#915
  # DEBUG D#913 => D#914
  # DEBUG D#907 => D#913
  # DEBUG this => D#907
  _211 = operator new (prephitmp_347);

  <bb 66>:
  # __new_finish_212 = PHI <0B(124), _211(65)>
  # __elems_before_357 = PHI <__elems_before_326(124), __elems_before_268(65)>
  # _356 = PHI <_87(124), _355(65)>
  # prephitmp_88 = PHI <0(124), prephitmp_347(65)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1226 => &this_9(D)->D.52514
  # DEBUG this => D#1226
  _26 = (long unsigned int) _356;
  __first_27 = __new_finish_212 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.86349 => D#1127
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 67>:
  # __n_369 = PHI <__n_205(79), __n_7(D)(66)>
  # __first_368 = PHI <__first_206(79), __first_27(66)>
  # DEBUG __cur => __first_368
  # DEBUG __n => __n_369
  # DEBUG __r => __first_368
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#9 => 24
  # DEBUG __p => NULL
  # DEBUG D.83878 => D#9
  if (__first_368 != 0B)
    goto <bb 68>;
  else
    goto <bb 78>;

  <bb 68>:
  # DEBUG this => __first_368
  # DEBUG __x => __x_28(D)
  # DEBUG D#1119 => &MEM[(const struct vector *)__x_28(D)].D.56618
  # DEBUG this => D#1119
  # DEBUG __a => NULL
  _17 = MEM[(struct Flit * * *)__x_28(D)];
  # DEBUG D#109 => __x_28(D)
  _225 = MEM[(struct Flit * * *)__x_28(D) + 8B];
  # DEBUG D#109 => __x_28(D)
  # DEBUG this => D#109
  # DEBUG this => D#109
  _226 = (long int) _225;
  _227 = (long int) _17;
  _228 = _226 - _227;
  _229 = _228 /[ex] 8;
  _230 = (size_type) _229;
  # DEBUG D#1121 => &__first_368->D.56618
  # DEBUG this => D#1121
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#847 => &D#1121->_M_impl
  # DEBUG this => D#847
  # DEBUG __a => NULL
  # DEBUG this => D#847
  # DEBUG __a => NULL
  # DEBUG this => D#847
  # DEBUG D.75391 => NULL
  MEM[(struct _Vector_impl *)__first_368]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_end_of_storage = 0B;
  # DEBUG this => D#1121
  # DEBUG __n => NULL
  # DEBUG D#845 => D#1121
  # DEBUG __n => _230
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  if (_230 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:
  pretmp_203 = (long unsigned int) _228;
  goto <bb 75>;

  <bb 70>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#842 => D#843
  # DEBUG __n => _230
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => _230
  # DEBUG this => D#839
  # DEBUG D.95532 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  if (_230 > 2305843009213693951)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # __first_174 = PHI <__first_368(70)>
  std::__throw_bad_alloc ();

  <bb 72>:
  _243 = (long unsigned int) _228;
  _244 = operator new (_243);
  goto <bb 74>;

  # __first_152 = PHI <__first_368(72)>
<L34>:
  goto <bb 82> (<L22>);

  <bb 74>:
  pretmp_222 = MEM[(struct Flit * * *)__x_28(D) + 8B];
  pretmp_100 = MEM[(struct Flit * * *)__x_28(D)];
  pretmp_220 = (long int) pretmp_222;
  pretmp_52 = (long int) pretmp_100;
  pretmp_66 = pretmp_220 - pretmp_52;
  pretmp_336 = pretmp_66 /[ex] 8;
  pretmp_378 = (long unsigned int) pretmp_66;

  <bb 75>:
  # iftmp.44_245 = PHI <0B(69), _244(74)>
  # prephitmp_56 = PHI <_17(69), pretmp_100(74)>
  # prephitmp_327 = PHI <_229(69), pretmp_336(74)>
  # prephitmp_204 = PHI <pretmp_203(69), _243(74)>
  # prephitmp_379 = PHI <pretmp_203(69), pretmp_378(74)>
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_start = iftmp.44_245;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_finish = iftmp.44_245;
  _233 = iftmp.44_245 + prephitmp_204;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_end_of_storage = _233;
  # DEBUG D#1120 => &__first_368->D.56618
  # DEBUG this => D#1120
  # DEBUG D#1848 => MEM[(struct Flit * * *)__x_28(D) + 8B]
  # DEBUG D#209 => __x_28(D)
  # DEBUG this => D#209
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#1847 => MEM[(struct Flit * * *)__x_28(D)]
  # DEBUG D#210 => __x_28(D)
  # DEBUG this => D#210
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#1847
  # DEBUG __last => D#1848
  # DEBUG __result => NULL
  # DEBUG D.95496 => D#1118
  # DEBUG __first => D#1847
  # DEBUG __last => D#1848
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#1847
  # DEBUG __last => D#1848
  # DEBUG __result => NULL
  # DEBUG __first => D#1847
  # DEBUG __last => D#1848
  # DEBUG __result => NULL
  # DEBUG __it => D#1848
  # DEBUG __it$_M_current => D#1848
  # DEBUG __it => D#1847
  # DEBUG __it$_M_current => D#1847
  # DEBUG __first => D#1847
  # DEBUG __last => D#1848
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#1848
  # DEBUG __it => D#1848
  # DEBUG this => NULL
  # DEBUG __it => D#1847
  # DEBUG __it => D#1847
  # DEBUG this => NULL
  # DEBUG __first => D#1847
  # DEBUG __last => D#1848
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#1847
  # DEBUG __last => D#1848
  # DEBUG __result => NULL
  # DEBUG D#1846 => (long int) D#1848
  # DEBUG D#1845 => (long int) D#1847
  # DEBUG D#1844 => D#1846 - D#1845
  # DEBUG _Num => D#1844 /[ex] 8
  if (prephitmp_327 != 0)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  __builtin_memmove (iftmp.44_245, prephitmp_56, prephitmp_379);

  <bb 77>:
  _242 = iftmp.44_245 + prephitmp_379;
  __first_368->D.56618._M_impl._M_finish = _242;

  <bb 78>:
  __n_205 = __n_369 + 18446744073709551615;
  # DEBUG __n => __n_205
  __first_206 = __first_368 + 24;
  # DEBUG __cur => __first_206
  # DEBUG __cur => __first_206
  # DEBUG __n => __n_205
  if (__n_205 == 0)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 67>;

  <bb 80>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1227 => &this_9(D)->D.52514
  # DEBUG this => D#1227
  # DEBUG this => &__position
  _31 = this_9(D)->D.52514._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#1849
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1126
  # DEBUG D#1125 => D#1126
  # DEBUG D#1122 => D#1125
  # DEBUG __first => _31
  # DEBUG __last => D#1849
  # DEBUG __result => NULL
  # DEBUG D.86370 => D#1122
  # DEBUG __first => _31
  # DEBUG __last => D#1849
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<Flit*, std::allocator<Flit*> >*> (_31, __position_22, __new_finish_212);
  goto <bb 90>;

<L33>:

  # __first_150 = PHI <__first_152(73), __first_174(81)>
<L22>:
  _207 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_207);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150

  <bb 83>:
  # __first_208 = PHI <__first_27(82), __first_210(86)>
  # DEBUG __first => __first_208
  if (__first_208 == __first_150)
    goto <bb 87>;
  else
    goto <bb 84>;

  <bb 84>:
  # DEBUG __r => __first_208
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _209 = MEM[(struct _Vector_base *)__first_208]._M_impl._M_start;
  # DEBUG D#576 => (long int) _209
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _209
  # DEBUG __n => D#573
  if (_209 != 0B)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _209
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _209
  # DEBUG this => D#565
  # DEBUG D.95455 => D#566
  operator delete (_209);

  <bb 86>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__first_208] ={v} {CLOBBER};
  __first_210 = __first_208 + 24;
  # DEBUG __first => __first_210
  goto <bb 83>;

  <bb 87>:
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 16

<L36>:
  goto <bb 108> (<L13>);

  <bb 90>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#1228 => &this_9(D)->D.52514
  # DEBUG this => D#1228
  _35 = this_9(D)->D.52514._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#1849
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1126
  # DEBUG D#1125 => D#1126
  # DEBUG D#1122 => D#1125
  # DEBUG __first => D#1849
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.86389 => D#1122
  # DEBUG __first => D#1849
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<Flit*, std::allocator<Flit*> >*> (__position_22, _35, __new_finish_33);
  goto <bb 92>;

<L37>:
  goto <bb 108> (<L13>);

  <bb 92>:
  # DEBUG __new_finish => _91
  # DEBUG D#1229 => &this_9(D)->D.52514
  # DEBUG this => D#1229
  _37 = this_9(D)->D.52514._M_impl._M_finish;
  __first_38 = this_9(D)->D.52514._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 99>;
  else
    goto <bb 93>;

  <bb 93>:

  <bb 94>:
  # __first_86 = PHI <__first_38(93), __first_93(97)>
  # DEBUG __first => __first_86
  # DEBUG __r => __first_86
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _92 = MEM[(struct _Vector_base *)__first_86]._M_impl._M_start;
  # DEBUG D#576 => (long int) _92
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _92
  # DEBUG __n => D#573
  if (_92 != 0B)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _92
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _92
  # DEBUG this => D#565
  # DEBUG D.86433 => D#566
  operator delete (_92);

  <bb 96>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__first_86] ={v} {CLOBBER};
  __first_93 = __first_86 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 94>;

  <bb 98>:
  pretmp_224 = this_9(D)->D.52514._M_impl._M_start;

  <bb 99>:
  # prephitmp_18 = PHI <pretmp_224(98), __first_38(92)>
  # DEBUG D#1240 => this_9(D)->D.52514._M_impl._M_end_of_storage
  # DEBUG D#1239 => (long int) D#1240
  # DEBUG D#1843 => this_9(D)->D.52514._M_impl._M_start
  # DEBUG D#1238 => (long int) D#1843
  # DEBUG D#1237 => D#1239 - D#1238
  # DEBUG D#1236 => D#1237 /[ex] 24
  # DEBUG D#1235 => &this_9(D)->D.52514
  # DEBUG D#557 => D#1235
  # DEBUG D#558 => (long unsigned int) D#1236
  # DEBUG __p => D#1843
  # DEBUG this => D#557
  # DEBUG __n => D#558
  # DEBUG D#556 => D#558
  # DEBUG D#555 => D#557
  if (prephitmp_18 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#554 => &D#555->_M_impl
  # DEBUG D#552 => D#554
  # DEBUG D#553 => D#556
  # DEBUG __p => D#1843
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => D#1843
  # DEBUG this => D#548
  # DEBUG D.86412 => D#549
  operator delete (prephitmp_18);

  <bb 101>:
  this_9(D)->D.52514._M_impl._M_start = __new_finish_212;
  this_9(D)->D.52514._M_impl._M_finish = _91;
  _44 = __new_finish_212 + prephitmp_88;
  this_9(D)->D.52514._M_impl._M_end_of_storage = _44;

  <bb 102>:
  return;

<L25>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#579 => &__x_copy.D.56618
  # DEBUG this => D#579
  # DEBUG D#582 => __x_copy.D.56618._M_impl._M_finish
  # DEBUG D#581 => __x_copy.D.56618._M_impl._M_start
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG D#580 => &__x_copy.D.56618
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#576 => (long int) _94
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _94
  # DEBUG __n => D#573
  if (_94 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _94
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _94
  # DEBUG this => D#565
  # DEBUG D.86450 => D#566
  operator delete (_94);

  <bb 106>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  resx 2

<L35>:

  # __new_finish_1 = PHI <__new_finish_212(89), 0B(107), __new_finish_33(91)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 110>;
  else
    goto <bb 109>;

  <bb 109>:
  goto <bb 115>;

  <bb 110>:
  # DEBUG D#1233 => &this_9(D)->D.52514
  # DEBUG this => D#1233
  _49 = __n_7(D) + __elems_before_357;
  _50 = _49 * 24;
  _51 = __new_finish_212 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 111>:
  # __first_80 = PHI <__first_27(110), __first_96(114)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 119>;
  else
    goto <bb 112>;

  <bb 112>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#576 => (long int) _95
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _95
  # DEBUG __n => D#573
  if (_95 != 0B)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _95
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _95
  # DEBUG this => D#565
  # DEBUG D.86474 => D#566
  operator delete (_95);

  <bb 114>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 111>;

  <bb 115>:
  # __new_finish_97 = PHI <__new_finish_212(109), __new_finish_99(118)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 119>;
  else
    goto <bb 116>;

  <bb 116>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#576 => (long int) _98
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _98
  # DEBUG __n => D#573
  if (_98 != 0B)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _98
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _98
  # DEBUG this => D#565
  # DEBUG D.86500 => D#566
  operator delete (_98);

  <bb 118>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 115>;

  <bb 119>:
  # DEBUG D#1241 => &this_9(D)->D.52514
  # DEBUG D#557 => D#1241
  # DEBUG __p => NULL
  # DEBUG this => D#557
  # DEBUG __n => D#558
  # DEBUG D#556 => D#558
  # DEBUG D#555 => D#557
  if (__new_finish_212 != 0B)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#554 => &D#555->_M_impl
  # DEBUG D#552 => D#554
  # DEBUG D#553 => D#556
  # DEBUG __p => NULL
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => NULL
  # DEBUG this => D#548
  # DEBUG D.86515 => D#549
  operator delete (__new_finish_212);

  <bb 121>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 123>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#455 => &this_9(D)->D.52514._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#455
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.60712
  # DEBUG this => &__position
  _341 = (long int) __position_22;
  # DEBUG this => &D.60712
  _339 = _341 - _215;
  _340 = _339 /[ex] 24;
  __elems_before_338 = (const size_type) _340;
  # DEBUG __elems_before => __elems_before_338
  # DEBUG D#1242 => &this_9(D)->D.52514
  # DEBUG D#920 => D#1242
  # DEBUG __n => NULL
  # DEBUG this => D#920
  # DEBUG D#919 => D#920
  goto <bb 65>;

  <bb 124>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#455 => &this_9(D)->D.52514._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#455
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.60712
  # DEBUG this => &__position
  _333 = (long int) __position_22;
  # DEBUG this => &D.60712
  _87 = _333 - _215;
  _337 = _87 /[ex] 24;
  __elems_before_326 = (const size_type) _337;
  # DEBUG __elems_before => __elems_before_326
  # DEBUG D#1242 => &this_9(D)->D.52514
  # DEBUG D#920 => D#1242
  # DEBUG __n => NULL
  # DEBUG this => D#920
  # DEBUG D#919 => D#920
  if (__len_223 != 0)
    goto <bb 64>;
  else
    goto <bb 66>;

}



;; Function PipelineFIFO<T>::PipelineFIFO(Module*, const string&, int, int) [with T = Flit; std::__cxx11::string = std::__cxx11::basic_string<char>] (_ZN12PipelineFIFOI4FlitEC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, funcdef_no=2151, decl_uid=52543, cgraph_uid=611, symbol_order=612)

Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::PipelineFIFO(Module*, const string&, int, int) [with T = Flit; std::__cxx11::string = std::__cxx11::basic_string<char>] (struct PipelineFIFO * const this, struct Module * parent, const struct string & name, int lanes, int depth)
{
  struct vector * __first;
  struct Flit * * D.95941;
  const long unsigned int D.95932;
  const size_type __len;
  size_type D.95931;
  size_type __n;
  const ptrdiff_t _Num;
  struct Credit * * D.95922;
  struct Flit * __x_copy;
  const size_type __elems_after;
  struct Flit * * __new_finish;
  struct Flit * * __first;
  const ptrdiff_t _Num;
  struct Flit * * __first;
  long unsigned int __n;
  struct Flit * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Flit * * __first;
  struct Flit * * const __position;
  struct iterator __position;
  size_type __n;
  struct Flit * __x;
  struct iterator __position;
  struct iterator __position;
  struct vector * __pos;
  int l;
  struct value_type D.56626;
  struct Module * _5;
  int _16;
  long unsigned int _19;
  long unsigned int _20;
  struct vector * _21;
  struct Flit * * const _22;
  int _25;
  long unsigned int _26;
  long unsigned int _27;
  struct vector & _28;
  struct Module * * _33;
  int prephitmp_34;
  struct vector * _35;
  struct Flit * * _36;
  long unsigned int _59;
  struct vector * prephitmp_60;
  long unsigned int pretmp_64;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long unsigned int _76;
  struct Flit * * _77;
  struct Flit * * _78;
  long int _79;
  long int _82;
  long int _83;
  long unsigned int _84;
  bool _91;
  int pretmp_92;
  int prephitmp_94;
  int pretmp_98;
  long unsigned int pretmp_100;
  long unsigned int prephitmp_101;
  int _104;
  long unsigned int _105;
  struct Flit * * _106;
  long unsigned int _113;
  struct vector * pretmp_122;
  struct Flit * * prephitmp_123;
  struct Flit * * _126;
  long int __first.47_127;
  long int _128;
  long unsigned int _130;
  long unsigned int _133;
  struct Flit * * _135;
  long int __last.46_136;
  long int _137;
  long unsigned int _139;
  struct Flit * * _141;
  struct Flit * * _142;
  int pretmp_147;
  struct Flit * * prephitmp_149;
  long unsigned int prephitmp_151;
  long unsigned int _162;
  struct Flit * * pretmp_165;
  struct Flit * * _169;
  struct Flit * * iftmp.44_170;
  struct vector * _171;
  struct Flit * * _174;
  char * const _177;
  const char * _178;
  char * const _179;
  const char * _180;
  struct Flit * * pretmp_184;
  bool _187;
  sizetype _207;
  sizetype _215;
  long unsigned int pretmp_216;
  long unsigned int prephitmp_218;
  long int _219;
  bool _221;
  long int _223;
  long int _229;
  long unsigned int _266;

  <bb 2>:
  _5 = &this_4(D)->D.52558;
  Module::Module (_5, parent_7(D), name_8(D));
  this_4(D)->D.52558._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI4FlitE + 16B];
  this_4(D)->_lanes = lanes_11(D);
  this_4(D)->_depth = depth_13(D);
  # DEBUG D#1244 => &this_4(D)->_data
  # DEBUG this => D#1244
  # DEBUG D#547 => &D#1244->D.52514
  # DEBUG this => D#547
  # DEBUG D#546 => &D#547->_M_impl
  # DEBUG this => D#546
  # DEBUG this => D#546
  # DEBUG this => D#546
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_end_of_storage = 0B;
  _16 = depth_13(D) + 1;
  this_4(D)->_pipe_len = _16;
  this_4(D)->_pipe_ptr = 0;
  # DEBUG this => &D.56626
  # DEBUG D#458 => &D.56626.D.56618
  # DEBUG this => D#458
  # DEBUG D#457 => &D#458->_M_impl
  # DEBUG this => D#457
  # DEBUG this => D#457
  # DEBUG this => D#457
  MEM[(struct _Vector_impl *)&D.56626]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.56626]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.56626]._M_end_of_storage = 0B;
  _20 = (long unsigned int) lanes_11(D);
  # DEBUG D#1860 => &this_4(D)->_data
  # DEBUG this => D#1860
  # DEBUG __new_size => _20
  # DEBUG __x => &D.56626
  # DEBUG D#110 => D#1860
  # DEBUG D#110 => D#1860
  # DEBUG this => D#110
  # DEBUG this => D#110
  if (_20 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#110 => D#1860
  # DEBUG D#110 => D#1860
  # DEBUG this => D#110
  # DEBUG this => D#110
  # DEBUG this => D#1860
  # DEBUG D#211 => &D#1860->D.52514._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#211
  # DEBUG this => D#1860
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _20
  # DEBUG __x => &D.56626
  _21 = &this_4(D)->_data;
  std::vector<std::vector<Flit*, std::allocator<Flit*> >, std::allocator<std::vector<Flit*, std::allocator<Flit*> > > >::_M_fill_insert (_21, __position, _20, &D.56626);

  <bb 4>:
  pretmp_165 = MEM[(struct _Vector_base *)&D.56626]._M_impl._M_start;

  <bb 5>:
  # prephitmp_123 = PHI <0B(2), pretmp_165(4)>
  # DEBUG this => &D.56626
  # DEBUG D#579 => &D.56626.D.56618
  # DEBUG this => D#579
  # DEBUG D#582 => D.56626.D.56618._M_impl._M_finish
  # DEBUG D#581 => D.56626.D.56618._M_impl._M_start
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG D#580 => &D.56626.D.56618
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  # DEBUG D#1859 => MEM[(struct _Vector_base *)&D.56626]._M_impl._M_start
  # DEBUG D#576 => (long int) D#1859
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => D#1859
  # DEBUG __n => D#573
  if (prephitmp_123 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => D#1859
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => D#1859
  # DEBUG this => D#565
  # DEBUG D.86596 => D#566
  operator delete (prephitmp_123);

  <bb 7>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  D.56626 ={v} {CLOBBER};
  # DEBUG l => 0
  # DEBUG l => 0
  _104 = this_4(D)->_lanes;
  if (_104 <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  return;

  <bb 9>:

  <bb 10>:
  # l_58 = PHI <0(9), l_30(31)>
  # prephitmp_34 = PHI <_104(9), prephitmp_94(31)>
  # DEBUG l => l_58
  _25 = this_4(D)->_pipe_len;
  _26 = (long unsigned int) _25;
  _27 = (long unsigned int) l_58;
  # DEBUG D#1243 => &this_4(D)->_data
  _35 = MEM[(struct vector * *)this_4(D) + 112B];
  # DEBUG D#71 => D#1243
  # DEBUG __n => _27
  # DEBUG this => D#71
  _19 = _27 * 24;
  _28 = _35 + _19;
  # DEBUG this => _28
  # DEBUG __new_size => _26
  # DEBUG __x => 0B
  # DEBUG __x => 0B
  _22 = MEM[(struct Flit * * *)_28];
  # DEBUG D#109 => _28
  __first_69 = MEM[(struct Flit * * *)_28 + 8B];
  # DEBUG D#109 => _28
  # DEBUG this => D#109
  # DEBUG this => D#109
  _70 = (long int) __first_69;
  _71 = (long int) _22;
  _72 = _70 - _71;
  _73 = _72 /[ex] 8;
  _74 = (const long unsigned int) _73;
  if (_26 > _74)
    goto <bb 11>;
  else
    goto <bb 28>;

  <bb 11>:
  # DEBUG D#109 => _28
  # DEBUG D#109 => _28
  # DEBUG this => D#109
  # DEBUG this => D#109
  __n_75 = _26 - _74;
  # DEBUG this => _28
  # DEBUG D#212 => &_28->D.56618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#212
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __x => &__x
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __x => &__x
  # DEBUG __position => __first_69
  _78 = _28->D.56618._M_impl._M_end_of_storage;
  _79 = (long int) _78;
  _82 = _79 - _70;
  _83 = _82 /[ex] 8;
  _84 = (long unsigned int) _83;
  if (__n_75 <= _84)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _215 = __n_75 * 8;
  __builtin_memset (__first_69, 0, _215);
  _266 = __n_75 * 8;
  __first_255 = __first_69 + _266;
  _28->D.56618._M_impl._M_finish = __first_255;
  # DEBUG D#1152 => &_28->D.56618
  # DEBUG this => D#1152
  # DEBUG this => &__position
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_255
  # DEBUG __alloc => D#1142
  # DEBUG D#1141 => D#1142
  # DEBUG D#1140 => D#1141
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_255
  # DEBUG D.95717 => D#1140
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_255
  # DEBUG __assignable => 1
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_255
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_255
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_255
  # DEBUG __it => __first_255
  # DEBUG __it => __first_255
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_255
  # DEBUG __simple => 1
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_255
  # DEBUG _Num => 0
  # DEBUG this => &__position
  # DEBUG D#734 => &__x_copy
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG D#733 => D#734
  # DEBUG __value => D#733
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG D#598 => D#733
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __value => D#598
  # DEBUG __tmp => 0B
  # DEBUG __first => __first_69
  pretmp_98 = this_4(D)->_lanes;
  goto <bb 30>;

  <bb 13>:
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __n => __n_75
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#866 => _28
  # DEBUG this => D#866
  # DEBUG D#865 => D#866
  # DEBUG D#864 => &D#865->D.56618
  # DEBUG this => D#864
  # DEBUG __a => D#863
  # DEBUG D#862 => D#863
  # DEBUG D#837 => D#862
  # DEBUG this => D#837
  # DEBUG D#109 => _28
  # DEBUG D#109 => _28
  # DEBUG this => D#109
  # DEBUG this => D#109
  _162 = 2305843009213693951 - _74;
  if (__n_75 > _162)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 15>:
  # DEBUG D#109 => _28
  # DEBUG D#109 => _28
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG D#109 => _28
  # DEBUG D#109 => _28
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG __a => &D.95932
  # DEBUG __b => &__n
  _59 = MAX_EXPR <_74, __n_75>;
  __len_166 = _59 + _74;
  # DEBUG __len => __len_166
  # DEBUG D#109 => _28
  # DEBUG D#109 => _28
  # DEBUG this => D#109
  # DEBUG this => D#109
  # DEBUG D#866 => _28
  # DEBUG this => D#866
  # DEBUG D#865 => D#866
  # DEBUG D#864 => &D#865->D.56618
  # DEBUG this => D#864
  # DEBUG __a => D#863
  # DEBUG D#862 => D#863
  # DEBUG D#837 => D#862
  # DEBUG this => D#837
  _187 = __len_166 > 2305843009213693951;
  _221 = _74 > __len_166;
  _91 = _187 | _221;
  if (_91 != 0)
    goto <bb 16>;
  else
    goto <bb 54>;

  <bb 16>:
  # prephitmp_151 = PHI <18446744073709551608(15), pretmp_100(55)>
  # DEBUG __len => NULL
  # DEBUG this => _28
  # DEBUG D#456 => &_28->D.56618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#456
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#1163 => _72 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#1163
  # DEBUG D#1162 => &_28->D.56618
  # DEBUG D#845 => D#1162
  # DEBUG __n => NULL
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#842 => D#843
  # DEBUG __n => NULL
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#839
  # DEBUG D.95939 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  _169 = operator new (prephitmp_151);
  goto <bb 18>;

<L7>:
  goto <bb 37> (<L4>);

  <bb 18>:
  pretmp_184 = _169 + prephitmp_151;

  <bb 19>:
  # iftmp.44_170 = PHI <0B(54), _169(18)>
  # prephitmp_149 = PHI <0B(54), pretmp_184(18)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1146 => &_28->D.56618
  # DEBUG this => D#1146
  # DEBUG D#1862 => (long unsigned int) _72
  # DEBUG D#1861 => iftmp.44_170 + D#1862
  # DEBUG D#963 => &__x
  # DEBUG __first => D#1861
  # DEBUG __n => __n_75
  # DEBUG D#962 => D#963
  # DEBUG __x => D#962
  # DEBUG D.95807 => D#964
  # DEBUG D#961 => D#962
  # DEBUG __first => D#1861
  # DEBUG __n => __n_75
  # DEBUG D#960 => D#961
  # DEBUG __x => D#960
  # DEBUG __assignable => 1
  # DEBUG D#959 => D#960
  # DEBUG __first => D#1861
  # DEBUG __n => __n_75
  # DEBUG D#958 => D#959
  # DEBUG __x => D#958
  # DEBUG D#957 => D#958
  # DEBUG __first => D#1861
  # DEBUG __n => __n_75
  # DEBUG D#956 => D#957
  # DEBUG __value => D#956
  # DEBUG __it => D#1861
  # DEBUG __it => D#1861
  # DEBUG D#955 => D#956
  # DEBUG __first => D#1861
  # DEBUG __n => __n_75
  # DEBUG __value => D#955
  # DEBUG __tmp => 0B
  # DEBUG __niter => __n_75
  # DEBUG __niter => __n_75
  # DEBUG __first => D#1861
  _207 = __n_75 * 8;
  _223 = (long int) __first_69;
  _229 = (long int) _22;
  _219 = _223 - _229;
  _105 = (long unsigned int) _219;
  _106 = iftmp.44_170 + _105;
  __builtin_memset (_106, 0, _207);
  # DEBUG __new_finish => 0B
  # DEBUG D#1147 => &_28->D.56618
  # DEBUG this => D#1147
  # DEBUG this => &__position
  _126 = _28->D.56618._M_impl._M_start;
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1144
  # DEBUG D#1143 => D#1144
  # DEBUG D#1140 => D#1143
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG D.95830 => D#1140
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  __first.47_127 = (long int) _126;
  _128 = _70 - __first.47_127;
  _Num_129 = _128 /[ex] 8;
  # DEBUG _Num => _Num_129
  if (_Num_129 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_216 = (long unsigned int) _128;
  goto <bb 22>;

  <bb 21>:
  _130 = (long unsigned int) _128;
  __builtin_memmove (iftmp.44_170, _126, _130);

  <bb 22>:
  # prephitmp_101 = PHI <pretmp_216(20), _130(21)>
  # DEBUG D#1858 => (long unsigned int) _128
  # DEBUG __new_finish => iftmp.44_170 + D#1858
  _133 = __n_75 * 8;
  _113 = prephitmp_101 + _133;
  __new_finish_134 = iftmp.44_170 + _113;
  # DEBUG __new_finish => __new_finish_134
  # DEBUG D#1148 => &_28->D.56618
  # DEBUG this => D#1148
  _135 = _28->D.56618._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __alloc => D#1144
  # DEBUG D#1143 => D#1144
  # DEBUG D#1140 => D#1143
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG D.95864 => D#1140
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __assignable => 1
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __it => _135
  # DEBUG __it => _135
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __it => __new_finish_134
  # DEBUG __it => __new_finish_134
  # DEBUG __it => _135
  # DEBUG __it => _135
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __simple => 1
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  __last.46_136 = (long int) _135;
  _137 = __last.46_136 - _70;
  _Num_138 = _137 /[ex] 8;
  # DEBUG _Num => _Num_138
  if (_Num_138 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  pretmp_64 = (long unsigned int) _137;
  goto <bb 25>;

  <bb 24>:
  _139 = (long unsigned int) _137;
  __builtin_memmove (__new_finish_134, __first_69, _139);

  <bb 25>:
  # prephitmp_218 = PHI <pretmp_64(23), _139(24)>
  _141 = __new_finish_134 + prephitmp_218;
  # DEBUG __new_finish => _141
  # DEBUG D#1149 => &_28->D.56618
  # DEBUG this => D#1149
  # DEBUG D#1161 => _28->D.56618._M_impl._M_finish
  # DEBUG D#1160 => _28->D.56618._M_impl._M_start
  # DEBUG __first => D#1160
  # DEBUG __last => D#1161
  # DEBUG D.84587 => NULL
  # DEBUG D#449 => D#1160
  # DEBUG D#450 => D#1161
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG D#1159 => _28->D.56618._M_impl._M_end_of_storage
  # DEBUG D#1158 => (long int) D#1159
  _142 = _28->D.56618._M_impl._M_start;
  # DEBUG D#1157 => (long int) _142
  # DEBUG D#1156 => D#1158 - D#1157
  # DEBUG D#1155 => D#1156 /[ex] 8
  # DEBUG D#1154 => (long unsigned int) D#1155
  # DEBUG D#1153 => &_28->D.56618
  # DEBUG this => D#1153
  # DEBUG __p => _142
  # DEBUG __n => D#1154
  if (_142 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#571 => &D#1153->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#1154
  # DEBUG __p => _142
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _142
  # DEBUG this => D#565
  # DEBUG D.95902 => D#566
  operator delete (_142);

  <bb 27>:
  _28->D.56618._M_impl._M_start = iftmp.44_170;
  _28->D.56618._M_impl._M_finish = _141;
  _28->D.56618._M_impl._M_end_of_storage = prephitmp_149;
  pretmp_92 = this_4(D)->_lanes;
  goto <bb 30>;

  <bb 28>:
  # DEBUG D#109 => _28
  # DEBUG D#109 => _28
  # DEBUG this => D#109
  # DEBUG this => D#109
  if (_26 < _74)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _76 = _26 * 8;
  _77 = _22 + _76;
  # DEBUG D#454 => _28
  # DEBUG __pos => _77
  # DEBUG D#453 => D#454
  # DEBUG this => D#453
  # DEBUG D#451 => &D#453->D.56618
  # DEBUG this => D#451
  # DEBUG D#452 => D#453->D.56618._M_impl._M_finish
  # DEBUG __first => _77
  # DEBUG __last => D#452
  # DEBUG D.75315 => NULL
  # DEBUG D#449 => _77
  # DEBUG D#450 => D#452
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  MEM[(struct Flit * * *)_28 + 8B] = _77;
  pretmp_147 = this_4(D)->_lanes;

  <bb 30>:
  # prephitmp_94 = PHI <prephitmp_34(28), pretmp_98(12), pretmp_147(29), pretmp_92(27)>
  l_30 = l_58 + 1;
  # DEBUG l => l_30
  # DEBUG l => l_30
  if (l_30 >= prephitmp_94)
    goto <bb 8>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 10>;

<L3>:
  # DEBUG this => &D.56626
  # DEBUG D#579 => &D.56626.D.56618
  # DEBUG this => D#579
  # DEBUG D#582 => D.56626.D.56618._M_impl._M_finish
  # DEBUG D#581 => D.56626.D.56618._M_impl._M_start
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG D#580 => &D.56626.D.56618
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _36 = MEM[(struct _Vector_base *)&D.56626]._M_impl._M_start;
  # DEBUG D#576 => (long int) _36
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _36
  # DEBUG __n => D#573
  if (_36 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _36
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _36
  # DEBUG this => D#565
  # DEBUG D.86615 => D#566
  operator delete (_36);

  <bb 34>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  D.56626 ={v} {CLOBBER};
  resx 3

<L8>:
  goto <bb 37> (<L4>);

<L6>:

<L4>:
  # DEBUG this => D#1860
  # DEBUG D#587 => &D#1860->D.52514
  # DEBUG this => D#587
  _171 = MEM[(struct vector *)this_4(D) + 112B].D.52514._M_impl._M_finish;
  __first_172 = MEM[(struct vector *)this_4(D) + 112B].D.52514._M_impl._M_start;
  # DEBUG __first => __first_172
  # DEBUG __last => _171
  # DEBUG __first => __first_172
  if (_171 == __first_172)
    goto <bb 44>;
  else
    goto <bb 38>;

  <bb 38>:

  <bb 39>:
  # __first_57 = PHI <__first_172(38), __first_175(42)>
  # DEBUG __first => __first_57
  # DEBUG __r => __first_57
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#579
  # DEBUG __first => D#581
  # DEBUG __last => D#582
  # DEBUG D.76538 => NULL
  # DEBUG D#449 => D#581
  # DEBUG D#450 => D#582
  # DEBUG __first => D#449
  # DEBUG __last => D#450
  # DEBUG D#448 => D#450
  # DEBUG D#447 => D#449
  # DEBUG D#445 => D#447
  # DEBUG D#446 => D#448
  # DEBUG D.75299 => D#445
  # DEBUG D.75298 => D#446
  # DEBUG this => D#580
  # DEBUG D#578 => D#580->_M_impl._M_end_of_storage
  # DEBUG D#577 => (long int) D#578
  _174 = MEM[(struct _Vector_base *)__first_57]._M_impl._M_start;
  # DEBUG D#576 => (long int) _174
  # DEBUG D#575 => D#577 - D#576
  # DEBUG D#574 => D#575 /[ex] 8
  # DEBUG D#573 => (long unsigned int) D#574
  # DEBUG this => D#580
  # DEBUG __p => _174
  # DEBUG __n => D#573
  if (_174 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG D#571 => &D#580->_M_impl
  # DEBUG D#569 => D#571
  # DEBUG D#570 => D#573
  # DEBUG __p => _174
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _174
  # DEBUG this => D#565
  # DEBUG D.95962 => D#566
  operator delete (_174);

  <bb 41>:
  # DEBUG D#572 => &D#580->_M_impl
  # DEBUG this => D#572
  # DEBUG this => D#572
  # DEBUG this => D#572
  MEM[(struct  &)__first_57] ={v} {CLOBBER};
  __first_175 = __first_57 + 24;
  # DEBUG __first => __first_175
  # DEBUG __first => __first_175
  if (_171 == __first_175)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 39>;

  <bb 43>:
  pretmp_122 = MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start;

  <bb 44>:
  # prephitmp_60 = PHI <pretmp_122(43), __first_172(37)>
  # DEBUG D#588 => &D#1860->D.52514
  # DEBUG this => D#588
  # DEBUG D#564 => D#588->_M_impl._M_end_of_storage
  # DEBUG D#563 => (long int) D#564
  # DEBUG D#1857 => MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start
  # DEBUG D#562 => (long int) D#1857
  # DEBUG D#561 => D#563 - D#562
  # DEBUG D#560 => D#561 /[ex] 24
  # DEBUG D#557 => D#588
  # DEBUG D#558 => (long unsigned int) D#560
  # DEBUG __p => D#1857
  # DEBUG this => D#557
  # DEBUG __n => D#558
  # DEBUG D#556 => D#558
  # DEBUG D#555 => D#557
  if (prephitmp_60 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#554 => &D#555->_M_impl
  # DEBUG D#552 => D#554
  # DEBUG D#553 => D#556
  # DEBUG __p => D#1857
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => D#1857
  # DEBUG this => D#548
  # DEBUG D.95976 => D#549
  operator delete (prephitmp_60);

  <bb 46>:
  # DEBUG D#559 => &D#588->_M_impl
  # DEBUG this => D#559
  # DEBUG this => D#559
  # DEBUG this => D#559
  MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
  resx 2

<L5>:
  # DEBUG this => _5
  MEM[(struct Module *)this_4(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#277 => &_5->_children
  # DEBUG this => D#277
  # DEBUG D#271 => &D#277->D.29566
  # DEBUG this => D#271
  # DEBUG D#274 => D#277->D.29566._M_impl._M_finish
  # DEBUG D#273 => D#277->D.29566._M_impl._M_start
  # DEBUG D#143 => D#273
  # DEBUG D#144 => D#274
  # DEBUG __first => D#143
  # DEBUG __last => D#144
  # DEBUG D.74504 => D#145
  # DEBUG D#142 => D#144
  # DEBUG D#141 => D#143
  # DEBUG D#139 => D#141
  # DEBUG D#140 => D#142
  # DEBUG __first => D#139
  # DEBUG __last => D#140
  # DEBUG D#138 => D#140
  # DEBUG D#137 => D#139
  # DEBUG D#135 => D#137
  # DEBUG D#136 => D#138
  # DEBUG D.73747 => D#135
  # DEBUG D.73746 => D#136
  # DEBUG D#272 => &D#277->D.29566
  # DEBUG this => D#272
  # DEBUG D#270 => D#272->_M_impl._M_end_of_storage
  # DEBUG D#269 => (long int) D#270
  _33 = MEM[(struct _Vector_base *)this_4(D) + 72B]._M_impl._M_start;
  # DEBUG D#268 => (long int) _33
  # DEBUG D#267 => D#269 - D#268
  # DEBUG D#266 => D#267 /[ex] 8
  # DEBUG D#263 => D#272
  # DEBUG D#264 => (long unsigned int) D#266
  # DEBUG __p => _33
  # DEBUG this => D#263
  # DEBUG __n => D#264
  # DEBUG D#262 => D#264
  # DEBUG D#261 => D#263
  if (_33 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#260 => &D#261->_M_impl
  # DEBUG D#258 => D#260
  # DEBUG D#259 => D#262
  # DEBUG __p => _33
  # DEBUG __a => D#258
  # DEBUG __n => D#259
  # DEBUG D#257 => D#259
  # DEBUG D#256 => D#258
  # DEBUG D#254 => D#256
  # DEBUG D#255 => D#257
  # DEBUG __p => _33
  # DEBUG this => D#254
  # DEBUG D.95992 => D#255
  operator delete (_33);

  <bb 49>:
  # DEBUG D#265 => &D#272->_M_impl
  # DEBUG this => D#265
  # DEBUG this => D#265
  # DEBUG this => D#265
  MEM[(struct  &)this_4(D) + 72] ={v} {CLOBBER};
  # DEBUG D#276 => &_5->_fullname
  # DEBUG this => D#276
  # DEBUG this => D#276
  # DEBUG this => D#276
  _177 = MEM[(char * *)this_4(D) + 40B];
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  _178 = &MEM[(const struct basic_string *)this_4(D) + 40B].D.11539._M_local_buf;
  if (_177 != _178)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#276].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#276
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#276
  # DEBUG this => D#1
  # DEBUG this => D#276
  # DEBUG D#249 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _177
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _177
  # DEBUG this => D#243
  # DEBUG D.96005 => D#244
  operator delete (_177);

  <bb 51>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#276]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)this_4(D) + 40] ={v} {CLOBBER};
  # DEBUG D#275 => &_5->_name
  # DEBUG this => D#275
  # DEBUG this => D#275
  # DEBUG this => D#275
  _179 = MEM[(char * *)this_4(D) + 8B];
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  _180 = &MEM[(const struct basic_string *)this_4(D) + 8B].D.11539._M_local_buf;
  if (_179 != _180)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # DEBUG D#252 => MEM[(struct basic_string *)D#275].D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => D#275
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => D#275
  # DEBUG this => D#1
  # DEBUG this => D#275
  # DEBUG D#249 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _179
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _179
  # DEBUG this => D#243
  # DEBUG D.96020 => D#244
  operator delete (_179);

  <bb 53>:
  # DEBUG D#253 => &MEM[(struct basic_string *)D#275]._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  resx 1

  <bb 54>:
  # DEBUG __len => NULL
  # DEBUG this => _28
  # DEBUG D#456 => &_28->D.56618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#456
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#1163 => _72 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#1163
  # DEBUG D#1162 => &_28->D.56618
  # DEBUG D#845 => D#1162
  # DEBUG __n => __len_166
  # DEBUG this => D#845
  # DEBUG D#844 => D#845
  if (__len_166 != 0)
    goto <bb 55>;
  else
    goto <bb 19>;

  <bb 55>:
  pretmp_100 = __len_166 * 8;
  goto <bb 16>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE24_M_new_elements_at_frontEm, funcdef_no=3435, decl_uid=47137, cgraph_uid=1895, symbol_order=1896)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Flit * * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  struct Flit * * * _14;
  struct Flit * * _16;
  struct Flit * * * _17;
  long unsigned int _18;
  sizetype _19;
  struct Flit * * * _20;
  void * _23;
  struct Flit * * * _25;
  long unsigned int _26;
  sizetype _27;
  struct Flit * * * _28;
  struct Flit * * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct Flit * * _39;
  long int _40;
  struct Flit * * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  struct Flit * * _46;
  long int _47;
  struct Flit * * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  struct Flit * * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#1283 => this_6(D)
  # DEBUG this => D#1283
  # DEBUG D#1282 => D#1283
  # DEBUG D#1281 => &D#1282->D.47197
  # DEBUG this => D#1281
  # DEBUG __a => D#863
  # DEBUG D#862 => D#863
  # DEBUG D#837 => D#862
  # DEBUG this => D#837
  # DEBUG this => this_6(D)
  # DEBUG D#100 => &MEM[(const struct deque *)this_6(D)].D.47197._M_impl._M_start
  # DEBUG D#101 => &MEM[(const struct deque *)this_6(D)].D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 64;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 8;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 2305843009213693951 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 8
  _13 = __new_elems_11(D) + 63;
  # DEBUG __size => 8
  __new_nodes_15 = _13 >> 6;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.47197._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.47197._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#1287 => &this_6(D)->D.47197
  # DEBUG D#850 => D#1287
  # DEBUG this => D#850
  # DEBUG D#849 => D#850
  # DEBUG __size => 8
  # DEBUG D#848 => &D#849->_M_impl
  # DEBUG D#842 => D#848
  # DEBUG __n => NULL
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#839
  # DEBUG D.87476 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.47197._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#1286 => &this_6(D)->D.47197
  # DEBUG D#591 => D#1286
  # DEBUG __p => _29
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _29
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _29
  # DEBUG this => D#565
  # DEBUG D.87486 => D#566
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE23_M_new_elements_at_backEm, funcdef_no=3437, decl_uid=47140, cgraph_uid=1897, symbol_order=1898)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Flit * * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  struct Flit * * * _13;
  struct Flit * * * _16;
  long unsigned int _17;
  struct Flit * * * _18;
  void * _21;
  struct Flit * * * _23;
  long unsigned int _24;
  struct Flit * * * _25;
  struct Flit * * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  struct Flit * * _35;
  long int _36;
  struct Flit * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  struct Flit * * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  struct Flit * * _50;
  long unsigned int _53;
  long unsigned int _54;
  struct Flit * * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#1283 => this_6(D)
  # DEBUG this => D#1283
  # DEBUG D#1282 => D#1283
  # DEBUG D#1281 => &D#1282->D.47197
  # DEBUG this => D#1281
  # DEBUG __a => D#863
  # DEBUG D#862 => D#863
  # DEBUG D#837 => D#862
  # DEBUG this => D#837
  # DEBUG this => this_6(D)
  # DEBUG D#100 => &MEM[(const struct deque *)this_6(D)].D.47197._M_impl._M_start
  # DEBUG D#101 => &MEM[(const struct deque *)this_6(D)].D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 64;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 2305843009213693951 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 8
  _12 = __new_elems_10(D) + 63;
  # DEBUG __size => 8
  __new_nodes_14 = _12 >> 6;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.47197._M_impl._M_map_size;
  _57 = this_6(D)->D.47197._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.47197._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#1285 => &this_6(D)->D.47197
  # DEBUG D#850 => D#1285
  # DEBUG this => D#850
  # DEBUG D#849 => D#850
  # DEBUG __size => 8
  # DEBUG D#848 => &D#849->_M_impl
  # DEBUG D#842 => D#848
  # DEBUG __n => NULL
  # DEBUG __a => D#842
  # DEBUG D#841 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#840 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#839
  # DEBUG D.87445 => D#840
  # DEBUG D#838 => D#839
  # DEBUG D#837 => D#838
  # DEBUG this => D#837
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.47197._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#1284 => &this_6(D)->D.47197
  # DEBUG D#591 => D#1284
  # DEBUG __p => _26
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _26
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _26
  # DEBUG this => D#565
  # DEBUG D.87455 => D#566
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE13_M_insert_auxISt15_Deque_iteratorIS1_RKS1_PS6_EEEvS5_IS1_RS1_PS1_ET_SD_m, funcdef_no=3421, decl_uid=63744, cgraph_uid=1881, symbol_order=1882)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3248;
  struct Flit * * SR.3247;
  struct Flit * * SR.3246;
  struct Flit * * SR.3245;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __last$24;
  struct Flit * * __last$8;
  struct Flit * * __last;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last1$_M_node;
  struct Flit * * __last1$_M_last;
  struct Flit * * __last1$_M_first;
  struct Flit * * __last1$_M_cur;
  struct Flit * * * __first1$_M_node;
  struct Flit * * __first1$_M_last;
  struct Flit * * __first1$_M_first;
  struct Flit * * __first1$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * SR.3194;
  struct Flit * * SR.3193;
  struct Flit * * SR.3192;
  struct Flit * * * SR.3191;
  struct Flit * * SR.3190;
  struct Flit * * SR.3189;
  struct Flit * * SR.3188;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3176;
  struct Flit * * SR.3175;
  struct Flit * * SR.3174;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __last$24;
  struct Flit * * __last$8;
  struct Flit * * __last;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last2$_M_node;
  struct Flit * * __last2$_M_last;
  struct Flit * * __last2$_M_first;
  struct Flit * * __last2$_M_cur;
  struct Flit * * * __first2$_M_node;
  struct Flit * * __first2$_M_last;
  struct Flit * * __first2$_M_first;
  struct Flit * * __first2$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * SR.3114;
  struct Flit * * SR.3113;
  struct Flit * * SR.3112;
  struct Flit * * SR.3111;
  struct Flit * * * __new_finish$_M_node;
  struct Flit * * __new_finish$_M_last;
  struct Flit * * __new_finish$_M_first;
  struct Flit * * __new_finish$_M_cur;
  struct Flit * * * SR.3106;
  struct Flit * * SR.3105;
  struct Flit * * SR.3104;
  struct Flit * * SR.3103;
  struct Flit * * * __new_start$_M_node;
  struct Flit * * __new_start$_M_last;
  struct Flit * * __new_start$_M_first;
  struct Flit * * __new_start$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.96566;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.96541;
  struct _Deque_iterator D.96540;
  struct _Deque_iterator D.96539;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.96521;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.96507;
  struct _Deque_iterator D.96506;
  struct _Deque_iterator D.96505;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.96504;
  struct _Deque_iterator D.96503;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  const ptrdiff_t _Num;
  struct Credit * * D.96481;
  const difference_type __offset;
  struct _Self & D.96463;
  const difference_type __offset;
  struct _Self & D.96456;
  difference_type __len;
  difference_type __llen;
  struct Flit * * __lend;
  difference_type __rlen;
  struct Flit * * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  const difference_type __offset;
  struct _Self & D.96426;
  struct _Self __tmp;
  struct _Deque_iterator D.96410;
  struct _Deque_iterator D.96409;
  struct _Deque_iterator D.96408;
  struct _Deque_iterator D.96407;
  const difference_type __offset;
  struct _Self & D.96397;
  const difference_type __offset;
  struct _Self & D.96390;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.96345;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.96320;
  struct _Deque_iterator D.96319;
  struct _Deque_iterator D.96318;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.96300;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.96286;
  struct _Deque_iterator D.96285;
  struct _Deque_iterator D.96284;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.96283;
  struct _Deque_iterator D.96282;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  const difference_type __offset;
  struct _Self & D.96260;
  const difference_type __offset;
  struct _Self & D.96253;
  struct _Self __tmp;
  struct _Deque_iterator D.96239;
  struct _Deque_iterator D.96238;
  struct _Deque_iterator D.96237;
  struct _Deque_iterator D.96236;
  struct _Self __tmp;
  const difference_type __offset;
  struct _Self & D.96217;
  const difference_type __offset;
  struct _Self & D.96210;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.63961;
  struct _Deque_iterator D.63955;
  struct _Deque_iterator D.63956;
  struct _Deque_iterator D.63957;
  struct _Deque_iterator D.63942;
  struct _Deque_iterator D.63936;
  struct _Deque_iterator D.63937;
  struct _Deque_iterator D.63938;
  struct _Deque_iterator D.63924;
  struct _Deque_iterator D.63925;
  struct _Deque_iterator D.63926;
  struct _Self D.63921;
  struct _Deque_iterator D.63914;
  struct _Deque_iterator D.63906;
  struct _Deque_iterator D.63907;
  struct _Deque_iterator D.63910;
  struct _Self D.63890;
  struct _Deque_iterator D.63886;
  struct _Deque_iterator D.63887;
  struct _Deque_iterator D.63888;
  struct _Deque_iterator D.63874;
  struct _Deque_iterator D.63875;
  struct _Deque_iterator D.63876;
  struct _Self D.63866;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.105_10;
  struct Flit * * _28;
  struct Flit * * _29;
  long int _38;
  struct Flit * * _42;
  struct Flit * * _48;
  struct Flit * * _57;
  long int _62;
  struct Flit * * _71;
  struct Flit * * _75;
  struct Flit * * * _80;
  struct Flit * * _82;
  struct Flit * * _88;
  long int _93;
  long int _94;
  struct Flit * * _95;
  long int _96;
  struct Flit * * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  struct Flit * * * _104;
  long int _105;
  struct Flit * * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  struct Flit * * _112;
  long int _113;
  struct Flit * * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  struct Flit * * _119;
  long int _120;
  struct Flit * * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  struct Flit * * _133;
  struct Flit * * _134;
  struct Flit * * * _135;
  struct Flit * * _145;
  struct Flit * * _146;
  struct Flit * * * _147;
  struct Flit * * _148;
  struct Flit * * _149;
  struct Flit * * * _150;
  struct Flit * * _157;
  struct Flit * * _161;
  struct Flit * * * _162;
  struct Flit * * const pretmp_170;
  struct Flit * * const prephitmp_171;
  struct Flit * * _172;
  struct Flit * * _173;
  struct Flit * * _174;
  struct Flit * * * _175;
  struct Flit * * _176;
  struct Flit * * _177;
  struct Flit * * * _178;
  struct Flit * * _179;
  struct Flit * * _180;
  struct Flit * * * _181;
  struct Flit * * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.92_284;
  long int _289;
  long unsigned int __n.88_303;
  long unsigned int _304;
  long int iftmp.89_306;
  long unsigned int _308;
  long unsigned int _309;
  long int _310;
  long int iftmp.89_311;
  long int iftmp.89_313;
  long unsigned int __node_offset.91_314;
  long unsigned int _315;
  long int _319;
  long int _320;
  long unsigned int _321;
  long unsigned int _322;
  long unsigned int _333;
  long int iftmp.89_335;
  long unsigned int _337;
  long unsigned int _338;
  long int _339;
  long int iftmp.89_340;
  long int iftmp.89_342;
  long unsigned int __node_offset.91_343;
  long unsigned int _344;
  long int _348;
  long int _349;
  long unsigned int _350;
  long unsigned int _351;
  struct Flit * * _353;
  long int _382;
  long int _384;
  long int _385;
  long int _386;
  long unsigned int _390;
  long int iftmp.89_392;
  long unsigned int _394;
  long unsigned int _395;
  long int _396;
  long int iftmp.89_397;
  long int iftmp.89_399;
  long unsigned int __node_offset.91_400;
  long unsigned int _401;
  long int _405;
  long int _406;
  long unsigned int _407;
  long unsigned int _408;
  long int _411;
  long int _413;
  long int _414;
  long int _415;
  long unsigned int __n.88_418;
  long unsigned int _419;
  long int iftmp.89_421;
  long unsigned int _423;
  long unsigned int _424;
  long int _425;
  long int iftmp.89_426;
  long int iftmp.89_428;
  long unsigned int __node_offset.91_429;
  long unsigned int _430;
  long int _434;
  long int _435;
  long unsigned int _436;
  long unsigned int _437;
  struct Flit * * _451;
  struct Flit * * _453;
  struct Flit * * * _454;
  struct Flit * * const pretmp_464;
  long int _483;
  long int _485;
  long int _486;
  long int _487;
  long int _488;
  long int _489;
  long int _491;
  long int _493;
  long int _494;
  long int _495;
  long int _496;
  unsigned long _497;
  long int _498;
  long int _500;
  long int _501;
  long int _502;
  long int pretmp_505;
  long int prephitmp_506;
  struct Flit * _507;
  unsigned long _508;
  unsigned long _511;
  struct Flit * * _512;
  long int prephitmp_513;
  struct Flit * * * _524;
  struct Flit * * _525;
  struct Flit * * _526;
  long int __len.109_529;
  long int _531;
  long int _537;
  unsigned long _538;
  unsigned long _539;
  long int _540;
  long int _541;
  long int _542;
  long unsigned int _544;
  long int __n.103_545;
  unsigned long _555;
  unsigned long _557;
  unsigned long _563;
  long unsigned int _564;
  long int iftmp.89_566;
  long unsigned int _568;
  long unsigned int _569;
  long int _570;
  long int iftmp.89_571;
  unsigned long _572;
  long int iftmp.89_573;
  long unsigned int __node_offset.91_574;
  long unsigned int _575;
  long int _579;
  long int _580;
  long unsigned int _581;
  long unsigned int _582;
  long unsigned int __n.88_592;
  long unsigned int _593;
  long int iftmp.89_595;
  long unsigned int _597;
  long unsigned int _598;
  long int _599;
  long int iftmp.89_600;
  long int iftmp.89_602;
  long unsigned int __node_offset.91_603;
  long unsigned int _604;
  long int _608;
  long int _609;
  long unsigned int _610;
  long unsigned int _611;
  long int _628;
  long int _634;
  long int _636;
  long int _637;
  long int _638;
  long unsigned int __n.88_641;
  long unsigned int _642;
  long int iftmp.89_644;
  long int prephitmp_645;
  long unsigned int _646;
  long unsigned int _647;
  long int _648;
  long int iftmp.89_649;
  long int iftmp.89_651;
  long unsigned int __node_offset.91_652;
  long unsigned int _653;
  long int _657;
  long int _658;
  long unsigned int _659;
  long unsigned int _660;
  long int _663;
  long int _665;
  long int _666;
  long int _667;
  long int _668;
  long int _669;
  long int _671;
  long int _674;
  long int _675;
  long int _676;
  long int _678;
  long int _680;
  long int _681;
  long int _682;
  struct Flit * * * const pretmp_685;
  long int _686;
  struct Flit * * * const prephitmp_687;
  long int _688;
  long int _689;
  long int _692;
  long int _694;
  long int _695;
  struct Flit * * _698;
  struct Flit * * _701;
  long unsigned int __clen.118_709;
  long unsigned int _710;
  sizetype _711;
  struct Flit * * _713;
  long int _715;
  struct Flit * * const pretmp_721;
  struct Flit * * const prephitmp_722;
  struct Flit * * const pretmp_723;
  struct Flit * * const prephitmp_724;
  struct Flit * * const pretmp_725;
  struct Flit * * const prephitmp_726;
  long unsigned int __n.88_729;
  long unsigned int _730;
  struct Flit * * _731;
  long int iftmp.89_732;
  long int pretmp_733;
  long unsigned int _734;
  long unsigned int _735;
  long int _736;
  long int iftmp.89_737;
  long int prephitmp_738;
  long int iftmp.89_739;
  long unsigned int __node_offset.91_740;
  long unsigned int _741;
  struct Flit * * * _742;
  struct Flit * * _743;
  long int _745;
  long int _746;
  long unsigned int _747;
  long unsigned int _748;
  struct Flit * * _749;
  long unsigned int __n.78_758;
  long unsigned int _759;
  long int iftmp.79_761;
  struct Flit * * * const pretmp_762;
  long unsigned int _763;
  long unsigned int _764;
  long int _765;
  long int iftmp.79_766;
  struct Flit * * * const prephitmp_767;
  long int iftmp.79_768;
  long unsigned int __node_offset.81_769;
  long unsigned int _770;
  long int _774;
  long int _775;
  long unsigned int _776;
  long unsigned int _777;
  long int __first.182_780;
  long int _781;
  long unsigned int _783;
  sizetype _784;
  struct Credit * * _785;
  long int _833;
  long int _835;
  long int _836;
  long int _837;
  long int _838;
  long int _839;
  long int _841;
  long int _843;
  long int _844;
  long int _845;
  long int _846;
  long int _848;
  long int _850;
  long int _851;
  long int _852;
  struct Flit * _857;
  struct Flit * * _862;
  long int pretmp_863;
  struct Flit * * * _874;
  struct Flit * * _875;
  struct Flit * * _876;
  long int _881;
  long int pretmp_929;
  struct Flit * * const pretmp_1011;
  struct Flit * * const prephitmp_1012;
  struct Flit * * const prephitmp_1013;
  struct Flit * * const pretmp_1018;
  struct Flit * * const prephitmp_1019;
  struct Flit * * const pretmp_1020;
  struct Flit * * const prephitmp_1021;
  struct Flit * * * const pretmp_1022;
  struct Flit * * * const prephitmp_1027;
  long int pretmp_1028;
  long int pretmp_1030;
  long int pretmp_1099;
  long int pretmp_1118;
  long int pretmp_1137;
  long int pretmp_1160;

  <bb 2>:
  # DEBUG D#1362 => &this_4(D)->D.47197._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#1362
  # DEBUG __size => 8
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 64;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 8;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 8;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#100 => &MEM[(const struct deque *)this_4(D)].D.47197._M_impl._M_start
  # DEBUG D#101 => &MEM[(const struct deque *)this_4(D)].D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 64;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 8;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.105_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.105_10)
    goto <bb 3>;
  else
    goto <bb 33>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.47197._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 8;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_721 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_723 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_725 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_762 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  pretmp_929 = (long int) pretmp_721;
  pretmp_1099 = (long int) pretmp_723;
  pretmp_1118 = pretmp_929 - pretmp_1099;
  pretmp_733 = pretmp_1118 /[ex] 8;

  <bb 5>:
  # prephitmp_722 = PHI <_121(3), pretmp_721(4)>
  # prephitmp_724 = PHI <_278(3), pretmp_723(4)>
  # prephitmp_726 = PHI <_119(3), pretmp_725(4)>
  # prephitmp_767 = PHI <_106(3), pretmp_762(4)>
  # prephitmp_738 = PHI <_281(3), pretmp_733(4)>
  __n.92_284 = (long int) __n_11(D);
  # DEBUG D#1871 => &this_4(D)->D.47197._M_impl._M_start
  # DEBUG this => D#1871
  # DEBUG __n => __n.92_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#1871
  # DEBUG D#1901 => MEM[(const struct iterator &)this_4(D) + 16]._M_cur
  # DEBUG D#1900 => MEM[(const struct iterator &)this_4(D) + 16]._M_first
  # DEBUG __tmp$_M_first => D#1900
  # DEBUG D#1899 => MEM[(const struct iterator &)this_4(D) + 16]._M_last
  # DEBUG __tmp$_M_last => D#1899
  # DEBUG D#1898 => MEM[(const struct iterator &)this_4(D) + 16]._M_node
  # DEBUG __tmp$_M_node => D#1898
  # DEBUG this => &__tmp
  # DEBUG __n => __n.92_284
  _289 = -__n.92_284;
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  __offset_301 = prephitmp_738 - __n.92_284;
  # DEBUG __offset => __offset_301
  # DEBUG __size => 8
  _572 = (unsigned long) __offset_301;
  if (_572 <= 63)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 6>:
  # DEBUG __size => 8
  iftmp.89_306 = __offset_301 >> 6;
  goto <bb 8>;

  <bb 7>:
  _308 = ~_572;
  # DEBUG __size => 8
  _309 = _308 >> 6;
  _310 = (long int) _309;
  iftmp.89_311 = ~_310;

  <bb 8>:
  # iftmp.89_313 = PHI <iftmp.89_306(6), iftmp.89_311(7)>
  # DEBUG __node_offset => iftmp.89_313
  __node_offset.91_314 = (long unsigned int) iftmp.89_313;
  _315 = __node_offset.91_314 * 8;
  __new_start$_M_node_316 = prephitmp_767 + _315;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_start$_M_node_316
  # DEBUG __tmp$_M_node => __new_start$_M_node_316
  __new_start$_M_first_317 = *__new_start$_M_node_316;
  # DEBUG __tmp$_M_first => __new_start$_M_first_317
  # DEBUG __size => 8
  __new_start$_M_last_318 = __new_start$_M_first_317 + 512;
  # DEBUG __tmp$_M_last => __new_start$_M_last_318
  # DEBUG __size => 8
  _319 = iftmp.89_313 * 64;
  _320 = __offset_301 - _319;
  _321 = (long unsigned int) _320;
  _322 = _321 * 8;
  __new_start$_M_cur_323 = __new_start$_M_first_317 + _322;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_323

  <bb 9>:
  # __new_start$_M_cur_1062 = PHI <__new_start$_M_cur_305(78), __new_start$_M_cur_323(8)>
  # __new_start$_M_first_964 = PHI <prephitmp_724(78), __new_start$_M_first_317(8)>
  # __new_start$_M_last_933 = PHI <prephitmp_726(78), __new_start$_M_last_318(8)>
  # __new_start$_M_node_918 = PHI <prephitmp_767(78), __new_start$_M_node_316(8)>
  # DEBUG __tmp$_M_node => __new_start$_M_node_918
  # DEBUG __tmp$_M_last => __new_start$_M_last_933
  # DEBUG __tmp$_M_first => __new_start$_M_first_964
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_1062
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_1062
  # DEBUG __new_start$_M_first => __new_start$_M_first_964
  # DEBUG __new_start$_M_last => __new_start$_M_last_933
  # DEBUG __new_start$_M_node => __new_start$_M_node_918
  __tmp ={v} {CLOBBER};
  # DEBUG D#1363 => &this_4(D)->D.47197._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#1363
  # DEBUG __old_start$_M_cur => D#1901
  # DEBUG __old_start$_M_first => D#1900
  # DEBUG __old_start$_M_last => D#1899
  # DEBUG __old_start$_M_node => D#1898
  # DEBUG D#1872 => &this_4(D)->D.47197._M_impl._M_start
  # DEBUG this => D#1872
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#1872
  # DEBUG __tmp$_M_first => D#1900
  # DEBUG __tmp$_M_last => D#1899
  # DEBUG __tmp$_M_node => D#1898
  # DEBUG this => &__tmp
  # DEBUG __n => _125
  __offset_330 = _125 + prephitmp_738;
  # DEBUG __offset => __offset_330
  # DEBUG __size => 8
  _563 = (unsigned long) __offset_330;
  if (_563 <= 63)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 10>:
  # DEBUG __size => 8
  iftmp.89_335 = __offset_330 >> 6;
  goto <bb 12>;

  <bb 11>:
  _337 = ~_563;
  # DEBUG __size => 8
  _338 = _337 >> 6;
  _339 = (long int) _338;
  iftmp.89_340 = ~_339;

  <bb 12>:
  # iftmp.89_342 = PHI <iftmp.89_335(10), iftmp.89_340(11)>
  # DEBUG __node_offset => iftmp.89_342
  __node_offset.91_343 = (long unsigned int) iftmp.89_342;
  _344 = __node_offset.91_343 * 8;
  SR.3106_345 = prephitmp_767 + _344;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.3106_345
  # DEBUG __tmp$_M_node => SR.3106_345
  SR.3104_346 = *SR.3106_345;
  # DEBUG __tmp$_M_first => SR.3104_346
  # DEBUG __size => 8
  SR.3105_347 = SR.3104_346 + 512;
  # DEBUG __tmp$_M_last => SR.3105_347
  # DEBUG __size => 8
  _348 = iftmp.89_342 * 64;
  _349 = __offset_330 - _348;
  _350 = (long unsigned int) _349;
  _351 = _350 * 8;
  SR.3103_352 = SR.3104_346 + _351;
  # DEBUG __tmp$_M_cur => SR.3103_352

  <bb 13>:
  # SR.3103_1130 = PHI <SR.3103_334(80), SR.3103_352(12)>
  # SR.3104_1124 = PHI <prephitmp_724(80), SR.3104_346(12)>
  # SR.3105_1092 = PHI <prephitmp_726(80), SR.3105_347(12)>
  # SR.3106_1077 = PHI <prephitmp_767(80), SR.3106_345(12)>
  # DEBUG __tmp$_M_node => SR.3106_1077
  # DEBUG __tmp$_M_last => SR.3105_1092
  # DEBUG __tmp$_M_first => SR.3104_1124
  # DEBUG __tmp$_M_cur => SR.3103_1130
  # DEBUG this => &D.63866
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.3103_1130;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.3104_1124;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.3105_1092;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.3106_1077;
  if (_125 >= __n.92_284)
    goto <bb 14>;
  else
    goto <bb 23>;

  <bb 14>:
  # DEBUG this => D#1872
  # DEBUG __n => __n.92_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#1872
  _29 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp$_M_first_374 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  # DEBUG __tmp$_M_first => __tmp$_M_first_374
  __tmp$_M_last_375 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  # DEBUG __tmp$_M_last => __tmp$_M_last_375
  __tmp$_M_node_376 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __tmp$_M_node => __tmp$_M_node_376
  # DEBUG this => &__tmp
  # DEBUG __n => __n.92_284
  _382 = (long int) _29;
  _384 = (long int) __tmp$_M_first_374;
  _385 = _382 - _384;
  _386 = _385 /[ex] 8;
  __offset_387 = __n.92_284 + _386;
  # DEBUG __offset => __offset_387
  # DEBUG __size => 8
  _555 = (unsigned long) __offset_387;
  if (_555 <= 63)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 15>:
  # DEBUG __size => 8
  iftmp.89_392 = __offset_387 >> 6;
  goto <bb 17>;

  <bb 16>:
  _394 = ~_555;
  # DEBUG __size => 8
  _395 = _394 >> 6;
  _396 = (long int) _395;
  iftmp.89_397 = ~_396;

  <bb 17>:
  # iftmp.89_399 = PHI <iftmp.89_392(15), iftmp.89_397(16)>
  # DEBUG __node_offset => iftmp.89_399
  __node_offset.91_400 = (long unsigned int) iftmp.89_399;
  _401 = __node_offset.91_400 * 8;
  __tmp$_M_node_402 = __tmp$_M_node_376 + _401;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_402
  # DEBUG __tmp$_M_node => __tmp$_M_node_402
  __tmp$_M_first_403 = *__tmp$_M_node_402;
  # DEBUG __tmp$_M_first => __tmp$_M_first_403
  # DEBUG __size => 8
  __tmp$_M_last_404 = __tmp$_M_first_403 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_404
  # DEBUG __size => 8
  _405 = iftmp.89_399 * 64;
  _406 = __offset_387 - _405;
  _407 = (long unsigned int) _406;
  _408 = _407 * 8;
  __tmp$_M_cur_409 = __tmp$_M_first_403 + _408;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_409

  <bb 18>:
  # __tmp$_M_cur_1202 = PHI <__tmp$_M_cur_391(82), __tmp$_M_cur_409(17)>
  # __tmp$_M_first_1201 = PHI <__tmp$_M_first_374(82), __tmp$_M_first_403(17)>
  # __tmp$_M_last_1200 = PHI <__tmp$_M_last_375(82), __tmp$_M_last_404(17)>
  # __tmp$_M_node_1199 = PHI <__tmp$_M_node_376(82), __tmp$_M_node_402(17)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_1199
  # DEBUG __tmp$_M_last => __tmp$_M_last_1200
  # DEBUG __tmp$_M_first => __tmp$_M_first_1201
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_1202
  # DEBUG this => &__start_n
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  # DEBUG D#1364 => &this_4(D)->D.47197
  # DEBUG this => D#1364
  # DEBUG this => &D.63876
  # DEBUG __x => &__new_start
  D.63876._M_cur = __new_start$_M_cur_1062;
  D.63876._M_first = __new_start$_M_first_964;
  D.63876._M_last = __new_start$_M_last_933;
  D.63876._M_node = __new_start$_M_node_918;
  # DEBUG this => &D.63875
  # DEBUG __x => &__start_n
  D.63875._M_cur = __tmp$_M_cur_1202;
  D.63875._M_first = __tmp$_M_first_1201;
  D.63875._M_last = __tmp$_M_last_1200;
  D.63875._M_node = __tmp$_M_node_1199;
  # DEBUG D#1365 => &this_4(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.63874
  # DEBUG __x => D#1365
  D.63874._M_cur = _29;
  D.63874._M_first = __tmp$_M_first_374;
  D.63874._M_last = __tmp$_M_last_375;
  D.63874._M_node = __tmp$_M_node_376;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.329 (&D.63874, &D.63875, &D.63876);
  D.63874 ={v} {CLOBBER};
  D.63875 ={v} {CLOBBER};
  D.63876 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_1062;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_964;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_933;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_918;
  # DEBUG this => &D.63888
  # DEBUG __x => &__old_start
  # DEBUG this => &D.63887
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.63886
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.63886
  # DEBUG __last => &D.63887
  # DEBUG __result => &D.63888
  # DEBUG this => &D.96239
  # DEBUG __x => &D.63888
  D.96239._M_cur = prephitmp_722;
  D.96239._M_first = prephitmp_724;
  D.96239._M_last = prephitmp_726;
  D.96239._M_node = prephitmp_767;
  # DEBUG this => &D.96238
  # DEBUG __x => &D.63887
  D.96238._M_cur = _28;
  D.96238._M_first = _133;
  D.96238._M_last = _134;
  D.96238._M_node = _135;
  # DEBUG this => &D.96237
  # DEBUG __x => &D.63886
  D.96237._M_cur = __tmp$_M_cur_1202;
  D.96237._M_first = __tmp$_M_first_1201;
  D.96237._M_last = __tmp$_M_last_1200;
  D.96237._M_node = __tmp$_M_node_1199;
  D.96236 = std::copy<Flit*> (D.96237, D.96238, &D.96239); [return slot optimization]
  D.96237 ={v} {CLOBBER};
  D.96238 ={v} {CLOBBER};
  D.96239 ={v} {CLOBBER};
  D.63886 ={v} {CLOBBER};
  D.63887 ={v} {CLOBBER};
  D.63888 ={v} {CLOBBER};
  # DEBUG this => __pos_6(D)
  # DEBUG __n => __n.92_284
  # DEBUG this => &__tmp
  # DEBUG __x => __pos_6(D)
  _353 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  __tmp$_M_first_354 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  # DEBUG __tmp$_M_first => __tmp$_M_first_354
  __tmp$_M_last_355 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  # DEBUG __tmp$_M_last => __tmp$_M_last_355
  __tmp$_M_node_356 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __tmp$_M_node => __tmp$_M_node_356
  # DEBUG this => &__tmp
  # DEBUG __n => __n.92_284
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  _411 = (long int) _353;
  _413 = (long int) __tmp$_M_first_354;
  _414 = _411 - _413;
  _415 = _414 /[ex] 8;
  __offset_416 = _415 - __n.92_284;
  # DEBUG __offset => __offset_416
  # DEBUG __size => 8
  _557 = (unsigned long) __offset_416;
  if (_557 <= 63)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 19>:
  # DEBUG __size => 8
  iftmp.89_421 = __offset_416 >> 6;
  goto <bb 21>;

  <bb 20>:
  _423 = ~_557;
  # DEBUG __size => 8
  _424 = _423 >> 6;
  _425 = (long int) _424;
  iftmp.89_426 = ~_425;

  <bb 21>:
  # iftmp.89_428 = PHI <iftmp.89_421(19), iftmp.89_426(20)>
  # DEBUG __node_offset => iftmp.89_428
  __node_offset.91_429 = (long unsigned int) iftmp.89_428;
  _430 = __node_offset.91_429 * 8;
  __tmp$_M_node_431 = __tmp$_M_node_356 + _430;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_431
  # DEBUG __tmp$_M_node => __tmp$_M_node_431
  __tmp$_M_first_432 = *__tmp$_M_node_431;
  # DEBUG __tmp$_M_first => __tmp$_M_first_432
  # DEBUG __size => 8
  __tmp$_M_last_433 = __tmp$_M_first_432 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_433
  # DEBUG __size => 8
  _434 = iftmp.89_428 * 64;
  _435 = __offset_416 - _434;
  _436 = (long unsigned int) _435;
  _437 = _436 * 8;
  __tmp$_M_cur_438 = __tmp$_M_first_432 + _437;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_438

  <bb 22>:
  # __tmp$_M_cur_903 = PHI <__tmp$_M_cur_420(84), __tmp$_M_cur_438(21)>
  # __tmp$_M_first_92 = PHI <__tmp$_M_first_354(84), __tmp$_M_first_432(21)>
  # __tmp$_M_last_87 = PHI <__tmp$_M_last_355(84), __tmp$_M_last_433(21)>
  # __tmp$_M_node_1203 = PHI <__tmp$_M_node_356(84), __tmp$_M_node_431(21)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_1203
  # DEBUG __tmp$_M_last => __tmp$_M_last_87
  # DEBUG __tmp$_M_first => __tmp$_M_first_92
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_903
  # DEBUG this => &D.63890
  # DEBUG __x => NULL
  D.63890._M_cur = __tmp$_M_cur_903;
  D.63890._M_first = __tmp$_M_first_92;
  D.63890._M_last = __tmp$_M_last_87;
  D.63890._M_node = __tmp$_M_node_1203;
  __tmp ={v} {CLOBBER};
  std::copy<Flit*> (__first, __last, &D.63890);
  D.63890 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 32>;

  <bb 23>:
  __mid = __first;
  _38 = __n.92_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#1245 => &__mid
  # DEBUG D.87509 => D#1245
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>::operator+= (&__mid, _38);
  # DEBUG D#1366 => &this_4(D)->D.47197
  # DEBUG this => D#1366
  # DEBUG D#1876 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.63910
  # DEBUG __x => &__new_start
  # DEBUG this => &D.63907
  # DEBUG __x => __pos_6(D)
  _42 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _148 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _149 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _150 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG D#1367 => &this_4(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.63906
  # DEBUG __x => D#1367
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _145 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.63906
  # DEBUG __last1 => &D.63907
  __first$_M_cur_932 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first2$_M_cur => __first$_M_cur_932
  # DEBUG D#1891 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first2$_M_first => D#1891
  __first$_M_last_930 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first2$_M_last => __first$_M_last_930
  __first$_M_node_17 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first2$_M_node => __first$_M_node_17
  __last_16 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __last2$_M_cur => __last_16
  __last$8_927 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __last2$_M_first => __last$8_927
  # DEBUG D#1890 => MEM[(struct _Deque_iterator *)&__mid + 16B]
  # DEBUG __last2$_M_last => D#1890
  __last$24_925 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __last2$_M_node => __last$24_925
  # DEBUG __result => &D.63910
  # DEBUG __alloc => D#1876
  # DEBUG this => &D.96286
  # DEBUG __x => &D.63910
  D.96286._M_cur = __new_start$_M_cur_1062;
  D.96286._M_first = __new_start$_M_first_964;
  D.96286._M_last = __new_start$_M_last_933;
  D.96286._M_node = __new_start$_M_node_918;
  # DEBUG this => &D.96285
  # DEBUG __x => &D.63907
  D.96285._M_cur = _42;
  D.96285._M_first = _148;
  D.96285._M_last = _149;
  D.96285._M_node = _150;
  # DEBUG this => &D.96284
  # DEBUG __x => &D.63906
  D.96284._M_cur = _48;
  D.96284._M_first = _145;
  D.96284._M_last = _146;
  D.96284._M_node = _147;
  # DEBUG D#1361 => D#1876
  __mid = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.329 (&D.96284, &D.96285, &D.96286); [return slot optimization]
  D.96284 ={v} {CLOBBER};
  D.96285 ={v} {CLOBBER};
  D.96286 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  _451 = __mid._M_cur;
  _453 = __mid._M_last;
  _454 = __mid._M_node;
  # DEBUG D#965 => D#1876
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#1891
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_17
  # DEBUG __last$_M_cur => __last_16
  # DEBUG __last$_M_first => __last$8_927
  # DEBUG __last$_M_last => D#1890
  # DEBUG __last$_M_node => __last$24_925
  # DEBUG __result => NULL
  # DEBUG D.96276 => D#965
  # DEBUG this => &D.96283
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#1891
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_17
  # DEBUG __last$_M_cur => __last_16
  # DEBUG __last$_M_first => __last$8_927
  # DEBUG __last$_M_last => D#1890
  # DEBUG __last$_M_node => __last$24_925
  # DEBUG __result => &D.96283
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.96283
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#1891
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_17
  # DEBUG __last$_M_cur => __last_16
  # DEBUG __last$_M_first => __last$8_927
  # DEBUG __last$_M_last => D#1890
  # DEBUG __last$_M_node => __last$24_925
  # DEBUG __result => NULL
  # DEBUG this => &D.96300
  # DEBUG __x => NULL
  # DEBUG __first => __first$_M_cur_932
  # DEBUG __first$8 => D#1891
  # DEBUG __first$16 => __first$_M_last_930
  # DEBUG __first$24 => __first$_M_node_17
  # DEBUG __last => __last_16
  # DEBUG __last$8 => __last$8_927
  # DEBUG __last$_M_last => D#1890
  # DEBUG __last$24 => __last$24_925
  # DEBUG __result => &D.96300
  # DEBUG this => &D.96320
  # DEBUG __x => &D.96300
  # DEBUG __it => __last_16
  # DEBUG __it$8 => __last$8_927
  # DEBUG D#1875 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#1875
  # DEBUG __it$24 => __last$24_925
  # DEBUG __it$_M_cur => __last_16
  # DEBUG __it$_M_first => __last$8_927
  # DEBUG __it$_M_last => D#1875
  # DEBUG __it$_M_node => __last$24_925
  # DEBUG __it => __first$_M_cur_932
  # DEBUG __it$8 => D#1891
  # DEBUG __it$16 => __first$_M_last_930
  # DEBUG __it$24 => __first$_M_node_17
  # DEBUG __it$_M_cur => __first$_M_cur_932
  # DEBUG __it$_M_first => D#1891
  # DEBUG __it$_M_last => __first$_M_last_930
  # DEBUG __it$_M_node => __first$_M_node_17
  # DEBUG __result => &D.96320
  # DEBUG this => NULL
  # DEBUG __x => &D.96320
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_16
  # DEBUG __it$8 => __last$8_927
  # DEBUG __it$16 => D#1875
  # DEBUG __it$24 => __last$24_925
  # DEBUG __it$_M_cur => __last_16
  # DEBUG __it$_M_first => __last$8_927
  # DEBUG __it$_M_last => D#1875
  # DEBUG __it$_M_node => __last$24_925
  # DEBUG __it => __first$_M_cur_932
  # DEBUG __it$8 => D#1891
  # DEBUG __it$16 => __first$_M_last_930
  # DEBUG __it$24 => __first$_M_node_17
  # DEBUG __it$_M_cur => __first$_M_cur_932
  # DEBUG __it$_M_first => D#1891
  # DEBUG __it$_M_last => __first$_M_last_930
  # DEBUG __it$_M_node => __first$_M_node_17
  # DEBUG __first => __first$_M_cur_932
  # DEBUG __first$8 => D#1891
  # DEBUG __first$16 => __first$_M_last_930
  # DEBUG __first$24 => __first$_M_node_17
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.96345
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#1891
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_17
  # DEBUG __result => &D.96345
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _483 = (long int) __last$24_925;
  _485 = (long int) __first$_M_node_17;
  _486 = _483 - _485;
  _487 = _486 /[ex] 8;
  _488 = _487 + -1;
  _489 = _488 * 64;
  _491 = (long int) __last_16;
  _493 = (long int) __last$8_927;
  _494 = _491 - _493;
  _495 = _494 /[ex] 8;
  _496 = _489 + _495;
  _498 = (long int) __first$_M_last_930;
  _500 = (long int) __first$_M_cur_932;
  _501 = _498 - _500;
  _502 = _501 /[ex] 8;
  __n_503 = _496 + _502;
  # DEBUG __n => __n_503
  # DEBUG __n => __n_503
  if (__n_503 <= 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG this => &D.96282
  # DEBUG __x => &D.96345
  D.96345 ={v} {CLOBBER};
  D.96320 ={v} {CLOBBER};
  D.96300 ={v} {CLOBBER};
  D.96283 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.63906 ={v} {CLOBBER};
  D.63907 ={v} {CLOBBER};
  D.63910 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_1062;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_964;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_933;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_918;
  # DEBUG this => &D.63914
  # DEBUG __x => &__old_start
  D.63914._M_cur = prephitmp_722;
  D.63914._M_first = prephitmp_724;
  D.63914._M_last = prephitmp_726;
  D.63914._M_node = prephitmp_767;
  std::copy<Flit*> (__mid, __last, &D.63914);
  D.63914 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __n_527 = PHI <__n_503(25), __n_514(31)>
  # SR.3174_1198 = PHI <_451(25), SR.3174_1197(31)>
  # SR.3175_1195 = PHI <_453(25), SR.3175_1194(31)>
  # SR.3176_1191 = PHI <_454(25), SR.3176_1190(31)>
  # __first$_M_cur_1189 = PHI <__first$_M_cur_932(25), __first$_M_cur_1188(31)>
  # __first$_M_last_1187 = PHI <__first$_M_last_930(25), __first$_M_last_1182(31)>
  # __first$_M_node_1181 = PHI <__first$_M_node_17(25), __first$_M_node_1180(31)>
  # DEBUG __first$_M_node => __first$_M_node_1181
  # DEBUG __first$_M_last => __first$_M_last_1187
  # DEBUG __first$_M_cur => __first$_M_cur_1189
  # DEBUG __n => __n_527
  # DEBUG D#119 => &D.96345
  # DEBUG this => D#119
  # DEBUG D#66 => &__first
  # DEBUG this => D#66
  _507 = MEM[(struct Flit * const &)__first$_M_cur_1189];
  *SR.3174_1198 = _507;
  # DEBUG this => &__first
  __first$_M_cur_509 = __first$_M_cur_1189 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_509
  if (__first$_M_cur_509 == __first$_M_last_1187)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG this => &__first
  __first$_M_node_520 = __first$_M_node_1181 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_520
  # DEBUG __first$_M_node => __first$_M_node_520
  __first$_M_cur_521 = MEM[(struct Flit * * *)__first$_M_node_1181 + 8B];
  # DEBUG __size => 8
  __first$_M_last_522 = __first$_M_cur_521 + 512;
  # DEBUG __first$_M_last => __first$_M_last_522
  # DEBUG __first$_M_cur => __first$_M_cur_521

  <bb 28>:
  # __first$_M_cur_1188 = PHI <__first$_M_cur_509(26), __first$_M_cur_521(27)>
  # __first$_M_last_1182 = PHI <__first$_M_last_1187(26), __first$_M_last_522(27)>
  # __first$_M_node_1180 = PHI <__first$_M_node_1181(26), __first$_M_node_520(27)>
  # DEBUG __first$_M_node => __first$_M_node_1180
  # DEBUG __first$_M_last => __first$_M_last_1182
  # DEBUG __first$_M_cur => __first$_M_cur_1188
  # DEBUG this => &D.96345
  _512 = SR.3174_1198 + 8;
  if (_512 == SR.3175_1195)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG this => &D.96345
  _524 = SR.3176_1191 + 8;
  # DEBUG this => &D.96345
  # DEBUG __new_node => _524
  _525 = MEM[(struct Flit * * *)SR.3176_1191 + 8B];
  # DEBUG __size => 8
  _526 = _525 + 512;

  <bb 30>:
  # SR.3174_1197 = PHI <_512(28), _525(29)>
  # SR.3175_1194 = PHI <SR.3175_1195(28), _526(29)>
  # SR.3176_1190 = PHI <SR.3176_1191(28), _524(29)>
  __n_514 = __n_527 + -1;
  # DEBUG __n => __n_514
  # DEBUG __n => __n_514
  if (__n_514 <= 0)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  # DEBUG D#1882 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#1882
  # DEBUG D#1883 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#1883
  # DEBUG D#1884 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#1884
  # DEBUG D#1885 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#1885
  return;

  <bb 33>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.47197._M_impl._M_finish._M_last;
  _537 = (long int) _57;
  _540 = _537 - _96;
  _541 = _540 /[ex] 8;
  _542 = _541 + -1;
  __vacancies_543 = (const size_type) _542;
  # DEBUG __vacancies => __vacancies_543
  if (__n_11(D) > __vacancies_543)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _544 = __n_11(D) - __vacancies_543;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_back (this_4(D), _544);
  pretmp_170 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_1018 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_1020 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_1022 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  pretmp_1028 = (long int) pretmp_170;
  pretmp_1030 = (long int) pretmp_1018;
  pretmp_1137 = pretmp_1028 - pretmp_1030;
  pretmp_505 = pretmp_1137 /[ex] 8;

  <bb 35>:
  # prephitmp_171 = PHI <_95(33), pretmp_170(34)>
  # prephitmp_1019 = PHI <_97(33), pretmp_1018(34)>
  # prephitmp_1021 = PHI <_57(33), pretmp_1020(34)>
  # prephitmp_1027 = PHI <_80(33), pretmp_1022(34)>
  # prephitmp_506 = PHI <_100(33), pretmp_505(34)>
  __n.103_545 = (long int) __n_11(D);
  # DEBUG D#1873 => &this_4(D)->D.47197._M_impl._M_finish
  # DEBUG this => D#1873
  # DEBUG __n => __n.103_545
  # DEBUG this => &__tmp
  # DEBUG __x => D#1873
  # DEBUG D#1897 => MEM[(const struct iterator &)this_4(D) + 48]._M_cur
  # DEBUG D#1896 => MEM[(const struct iterator &)this_4(D) + 48]._M_first
  # DEBUG __tmp$_M_first => D#1896
  # DEBUG D#1895 => MEM[(const struct iterator &)this_4(D) + 48]._M_last
  # DEBUG __tmp$_M_last => D#1895
  # DEBUG D#1894 => MEM[(const struct iterator &)this_4(D) + 48]._M_node
  # DEBUG __tmp$_M_node => D#1894
  # DEBUG this => &__tmp
  # DEBUG __n => __n.103_545
  __offset_561 = prephitmp_506 + __n.103_545;
  # DEBUG __offset => __offset_561
  # DEBUG __size => 8
  _538 = (unsigned long) __offset_561;
  if (_538 <= 63)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 36>:
  # DEBUG __size => 8
  iftmp.89_566 = __offset_561 >> 6;
  goto <bb 38>;

  <bb 37>:
  _568 = ~_538;
  # DEBUG __size => 8
  _569 = _568 >> 6;
  _570 = (long int) _569;
  iftmp.89_571 = ~_570;

  <bb 38>:
  # iftmp.89_573 = PHI <iftmp.89_566(36), iftmp.89_571(37)>
  # DEBUG __node_offset => iftmp.89_573
  __node_offset.91_574 = (long unsigned int) iftmp.89_573;
  _575 = __node_offset.91_574 * 8;
  __new_finish$_M_node_576 = prephitmp_1027 + _575;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_finish$_M_node_576
  # DEBUG __tmp$_M_node => __new_finish$_M_node_576
  __new_finish$_M_first_577 = *__new_finish$_M_node_576;
  # DEBUG __tmp$_M_first => __new_finish$_M_first_577
  # DEBUG __size => 8
  __new_finish$_M_last_578 = __new_finish$_M_first_577 + 512;
  # DEBUG __tmp$_M_last => __new_finish$_M_last_578
  # DEBUG __size => 8
  _579 = iftmp.89_573 * 64;
  _580 = __offset_561 - _579;
  _581 = (long unsigned int) _580;
  _582 = _581 * 8;
  __new_finish$_M_cur_583 = __new_finish$_M_first_577 + _582;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_583

  <bb 39>:
  # __new_finish$_M_cur_1157 = PHI <__new_finish$_M_cur_565(86), __new_finish$_M_cur_583(38)>
  # __new_finish$_M_first_1156 = PHI <prephitmp_1019(86), __new_finish$_M_first_577(38)>
  # __new_finish$_M_last_1155 = PHI <prephitmp_1021(86), __new_finish$_M_last_578(38)>
  # __new_finish$_M_node_1150 = PHI <prephitmp_1027(86), __new_finish$_M_node_576(38)>
  # DEBUG __tmp$_M_node => __new_finish$_M_node_1150
  # DEBUG __tmp$_M_last => __new_finish$_M_last_1155
  # DEBUG __tmp$_M_first => __new_finish$_M_first_1156
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_1157
  # DEBUG this => &__new_finish
  # DEBUG __x => NULL
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_1157
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_1156
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_1155
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_1150
  __tmp ={v} {CLOBBER};
  # DEBUG D#1368 => &this_4(D)->D.47197._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#1368
  # DEBUG __old_finish$_M_cur => D#1897
  # DEBUG __old_finish$_M_first => D#1896
  # DEBUG __old_finish$_M_last => D#1895
  # DEBUG __old_finish$_M_node => D#1894
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#1874 => &this_4(D)->D.47197._M_impl._M_finish
  # DEBUG this => D#1874
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#1874
  # DEBUG __tmp$_M_first => D#1896
  # DEBUG __tmp$_M_last => D#1895
  # DEBUG __tmp$_M_node => D#1894
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __n => -__elemsafter_55
  __offset_590 = prephitmp_506 - __elemsafter_55;
  # DEBUG __offset => __offset_590
  # DEBUG __size => 8
  _539 = (unsigned long) __offset_590;
  if (_539 <= 63)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 40>:
  # DEBUG __size => 8
  iftmp.89_595 = __offset_590 >> 6;
  goto <bb 42>;

  <bb 41>:
  _597 = ~_539;
  # DEBUG __size => 8
  _598 = _597 >> 6;
  _599 = (long int) _598;
  iftmp.89_600 = ~_599;

  <bb 42>:
  # iftmp.89_602 = PHI <iftmp.89_595(40), iftmp.89_600(41)>
  # DEBUG __node_offset => iftmp.89_602
  __node_offset.91_603 = (long unsigned int) iftmp.89_602;
  _604 = __node_offset.91_603 * 8;
  SR.3114_605 = prephitmp_1027 + _604;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.3114_605
  # DEBUG __tmp$_M_node => SR.3114_605
  SR.3112_606 = *SR.3114_605;
  # DEBUG __tmp$_M_first => SR.3112_606
  # DEBUG __size => 8
  SR.3113_607 = SR.3112_606 + 512;
  # DEBUG __tmp$_M_last => SR.3113_607
  # DEBUG __size => 8
  _608 = iftmp.89_602 * 64;
  _609 = __offset_590 - _608;
  _610 = (long unsigned int) _609;
  _611 = _610 * 8;
  SR.3111_612 = SR.3112_606 + _611;
  # DEBUG __tmp$_M_cur => SR.3111_612

  <bb 43>:
  # SR.3111_1179 = PHI <SR.3111_594(88), SR.3111_612(42)>
  # SR.3112_1164 = PHI <prephitmp_1019(88), SR.3112_606(42)>
  # SR.3113_1163 = PHI <prephitmp_1021(88), SR.3113_607(42)>
  # SR.3114_1158 = PHI <prephitmp_1027(88), SR.3114_605(42)>
  # DEBUG __tmp$_M_node => SR.3114_1158
  # DEBUG __tmp$_M_last => SR.3113_1163
  # DEBUG __tmp$_M_first => SR.3112_1164
  # DEBUG __tmp$_M_cur => SR.3111_1179
  # DEBUG this => &D.63921
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.3111_1179;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.3112_1164;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.3113_1163;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.3114_1158;
  if (__elemsafter_55 > __n.103_545)
    goto <bb 44>;
  else
    goto <bb 68>;

  <bb 44>:
  # DEBUG this => D#1874
  # DEBUG __n => __n.103_545
  # DEBUG this => &__tmp
  # DEBUG __x => D#1874
  _71 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  SR.3189_625 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __tmp$_M_first => SR.3189_625
  SR.3190_626 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __tmp$_M_last => SR.3190_626
  SR.3191_627 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __tmp$_M_node => SR.3191_627
  # DEBUG this => &__tmp
  # DEBUG __n => __n.103_545
  # DEBUG this => &__tmp
  # DEBUG __n => -__n.103_545
  _634 = (long int) _71;
  _636 = (long int) SR.3189_625;
  _637 = _634 - _636;
  _638 = _637 /[ex] 8;
  __offset_639 = _638 - __n.103_545;
  # DEBUG __offset => __offset_639
  # DEBUG __size => 8
  _511 = (unsigned long) __offset_639;
  if (_511 <= 63)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 45>:
  # DEBUG __size => 8
  iftmp.89_644 = __offset_639 >> 6;
  goto <bb 47>;

  <bb 46>:
  _646 = ~_511;
  # DEBUG __size => 8
  _647 = _646 >> 6;
  _648 = (long int) _647;
  iftmp.89_649 = ~_648;

  <bb 47>:
  # iftmp.89_651 = PHI <iftmp.89_644(45), iftmp.89_649(46)>
  # DEBUG __node_offset => iftmp.89_651
  __node_offset.91_652 = (long unsigned int) iftmp.89_651;
  _653 = __node_offset.91_652 * 8;
  SR.3191_654 = SR.3191_627 + _653;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.3191_654
  # DEBUG __tmp$_M_node => SR.3191_654
  SR.3189_655 = *SR.3191_654;
  # DEBUG __tmp$_M_first => SR.3189_655
  # DEBUG __size => 8
  SR.3190_656 = SR.3189_655 + 512;
  # DEBUG __tmp$_M_last => SR.3190_656
  # DEBUG __size => 8
  _657 = iftmp.89_651 * 64;
  _658 = __offset_639 - _657;
  _659 = (long unsigned int) _658;
  _660 = _659 * 8;
  SR.3188_661 = SR.3189_655 + _660;
  # DEBUG __tmp$_M_cur => SR.3188_661
  pretmp_863 = (long int) SR.3189_655;

  <bb 48>:
  # SR.3188_1126 = PHI <SR.3188_643(90), SR.3188_661(47)>
  # SR.3189_1125 = PHI <SR.3189_625(90), SR.3189_655(47)>
  # SR.3190_1116 = PHI <SR.3190_626(90), SR.3190_656(47)>
  # SR.3191_1110 = PHI <SR.3191_627(90), SR.3191_654(47)>
  # prephitmp_645 = PHI <_636(90), pretmp_863(47)>
  # DEBUG __tmp$_M_node => SR.3191_1110
  # DEBUG __tmp$_M_last => SR.3190_1116
  # DEBUG __tmp$_M_first => SR.3189_1125
  # DEBUG __tmp$_M_cur => SR.3188_1126
  # DEBUG this => &__finish_n
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  # DEBUG D#1369 => &this_4(D)->D.47197
  # DEBUG this => D#1369
  # DEBUG D#1370 => &this_4(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.63926
  # DEBUG __x => D#1370
  D.63926._M_cur = _71;
  D.63926._M_first = SR.3189_625;
  D.63926._M_last = SR.3190_626;
  D.63926._M_node = SR.3191_627;
  # DEBUG D#1371 => &this_4(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.63925
  # DEBUG __x => D#1371
  D.63925._M_cur = _71;
  D.63925._M_first = SR.3189_625;
  D.63925._M_last = SR.3190_626;
  D.63925._M_node = SR.3191_627;
  # DEBUG this => &D.63924
  # DEBUG __x => &__finish_n
  D.63924._M_cur = SR.3188_1126;
  D.63924._M_first = SR.3189_1125;
  D.63924._M_last = SR.3190_1116;
  D.63924._M_node = SR.3191_1110;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.329 (&D.63924, &D.63925, &D.63926);
  D.63924 ={v} {CLOBBER};
  D.63925 ={v} {CLOBBER};
  D.63926 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_1157;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_1156;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_1155;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_1150;
  # DEBUG this => &D.63938
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.63937
  # DEBUG __x => &__finish_n
  # DEBUG this => &D.63936
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.63936
  # DEBUG __last => &D.63937
  # DEBUG __result => &D.63938
  # DEBUG this => &D.96410
  # DEBUG __x => &D.63938
  # DEBUG this => &D.96409
  # DEBUG __x => &D.63937
  # DEBUG this => &D.96408
  # DEBUG __x => &D.63936
  # DEBUG __last$_M_cur => SR.3188_1126
  # DEBUG __last$_M_first => SR.3189_1125
  # DEBUG __last$_M_last => SR.3190_1116
  # DEBUG __last$_M_node => SR.3191_1110
  # DEBUG __result => &D.96410
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _663 = (long int) SR.3191_1110;
  _665 = (long int) _162;
  _666 = _663 - _665;
  _667 = _666 /[ex] 8;
  _668 = _667 + -1;
  _669 = _668 * 64;
  _671 = (long int) SR.3188_1126;
  _674 = _671 - prephitmp_645;
  _675 = _674 /[ex] 8;
  _676 = _669 + _675;
  _678 = (long int) _161;
  _680 = (long int) _75;
  _681 = _678 - _680;
  _682 = _681 /[ex] 8;
  __len_683 = _676 + _682;
  # DEBUG __len => __len_683
  if (__len_683 <= 0)
    goto <bb 67>;
  else
    goto <bb 49>;

  <bb 49>:

  <bb 50>:
  # __len.109_529 = PHI <__len_683(49), __len_716(65)>
  # __rend_1149 = PHI <prephitmp_171(49), SR.3192_1145(65)>
  # SR.3193_1134 = PHI <prephitmp_1019(49), SR.3193_1132(65)>
  # SR.3194_1131 = PHI <prephitmp_1027(49), SR.3194_1128(65)>
  # SR.3188_1109 = PHI <SR.3188_1126(49), SR.3188_1108(65)>
  # SR.3189_1107 = PHI <SR.3189_1125(49), SR.3189_1106(65)>
  # SR.3191_1104 = PHI <SR.3191_1110(49), SR.3191_1103(65)>
  # DEBUG __last$_M_node => SR.3191_1104
  # DEBUG __last$_M_first => SR.3189_1107
  # DEBUG __last$_M_cur => SR.3188_1109
  _686 = (long int) SR.3188_1109;
  _688 = (long int) SR.3189_1107;
  _689 = _686 - _688;
  __llen_690 = _689 /[ex] 8;
  # DEBUG __llen => __llen_690
  # DEBUG __lend => SR.3188_1109
  _692 = (long int) __rend_1149;
  _694 = (long int) SR.3193_1134;
  _695 = _692 - _694;
  __rlen_696 = _695 /[ex] 8;
  # DEBUG __rlen => __rlen_696
  # DEBUG __rend => __rend_1149
  if (__llen_690 == 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG __size => 8
  # DEBUG __llen => 64
  _698 = MEM[(struct Flit * * *)SR.3191_1104 + -8B];
  SR.3188_699 = _698 + 512;
  # DEBUG __lend => SR.3188_699
  pretmp_1160 = (long int) SR.3188_699;

  <bb 52>:
  # SR.3188_712 = PHI <SR.3188_1109(50), SR.3188_699(51)>
  # __llen_1143 = PHI <__llen_690(50), 64(51)>
  # prephitmp_513 = PHI <_686(50), pretmp_1160(51)>
  # DEBUG __llen => __llen_1143
  # DEBUG __lend => SR.3188_712
  if (__rlen_696 == 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG __size => 8
  # DEBUG __rlen => 64
  _701 = MEM[(struct Flit * * *)SR.3194_1131 + -8B];
  __rend_702 = _701 + 512;
  # DEBUG __rend => __rend_702

  <bb 54>:
  # __rend_714 = PHI <__rend_1149(52), __rend_702(53)>
  # __rlen_1138 = PHI <__rlen_696(52), 64(53)>
  # DEBUG __rlen => __rlen_1138
  # DEBUG __rend => __rend_714
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _881 = MIN_EXPR <__len.109_529, __llen_1143>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_499 = MIN_EXPR <_881, __rlen_1138>;
  # DEBUG __clen => D#1870
  __clen.118_709 = (long unsigned int) __clen_499;
  _710 = __clen.118_709 * 8;
  _711 = -_710;
  _713 = SR.3188_712 + _711;
  # DEBUG __first => _713
  # DEBUG __last => SR.3188_712
  # DEBUG __result => __rend_714
  # DEBUG __it => SR.3188_712
  # DEBUG __it => SR.3188_712
  # DEBUG __it => _713
  # DEBUG __it => _713
  # DEBUG __first => _713
  # DEBUG __last => SR.3188_712
  # DEBUG __result => __rend_714
  # DEBUG __it => __rend_714
  # DEBUG __it => __rend_714
  # DEBUG __it => SR.3188_712
  # DEBUG __it => SR.3188_712
  # DEBUG __it => _713
  # DEBUG __it => _713
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.182_780 = (long int) _713;
  _781 = prephitmp_513 - __first.182_780;
  _Num_782 = _781 /[ex] 8;
  # DEBUG _Num => _Num_782
  if (_Num_782 != 0)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  _783 = (long unsigned int) _781;
  _784 = -_783;
  _785 = __rend_714 + _784;
  __builtin_memmove (_785, _713, _783);

  <bb 56>:
  # DEBUG this => &__last
  # DEBUG __n => D#1870
  _715 = -__clen_499;
  # DEBUG this => &__last
  # DEBUG __n => _715
  __offset_756 = __llen_690 - __clen_499;
  # DEBUG __offset => __offset_756
  # DEBUG __size => 8
  _508 = (unsigned long) __offset_756;
  if (_508 <= 63)
    goto <bb 92>;
  else
    goto <bb 93>;

  <bb 57>:
  # DEBUG __size => 8
  iftmp.79_761 = __offset_756 >> 6;
  goto <bb 59>;

  <bb 58>:
  _763 = ~_508;
  # DEBUG __size => 8
  _764 = _763 >> 6;
  _765 = (long int) _764;
  iftmp.79_766 = ~_765;

  <bb 59>:
  # iftmp.79_768 = PHI <iftmp.79_761(57), iftmp.79_766(58)>
  # DEBUG __node_offset => iftmp.79_768
  __node_offset.81_769 = (long unsigned int) iftmp.79_768;
  _770 = __node_offset.81_769 * 8;
  SR.3191_771 = SR.3191_1104 + _770;
  # DEBUG this => &__last
  # DEBUG __new_node => SR.3191_771
  # DEBUG __last$_M_node => SR.3191_771
  SR.3189_772 = *SR.3191_771;
  # DEBUG __last$_M_first => SR.3189_772
  # DEBUG __size => 8
  # DEBUG __size => 8
  _774 = iftmp.79_768 * 64;
  _775 = __offset_756 - _774;
  _776 = (long unsigned int) _775;
  _777 = _776 * 8;
  SR.3188_778 = SR.3189_772 + _777;
  # DEBUG __last$_M_cur => SR.3188_778

  <bb 60>:
  # SR.3188_1108 = PHI <SR.3188_760(92), SR.3188_778(59)>
  # SR.3189_1106 = PHI <SR.3189_1107(92), SR.3189_772(59)>
  # SR.3191_1103 = PHI <SR.3191_1104(92), SR.3191_771(59)>
  # DEBUG __last$_M_node => SR.3191_1103
  # DEBUG __last$_M_first => SR.3189_1106
  # DEBUG __last$_M_cur => SR.3188_1108
  # DEBUG this => &D.96410
  # DEBUG __n => D#1870
  # DEBUG this => &D.96410
  # DEBUG __n => _715
  __offset_727 = __rlen_696 - __clen_499;
  # DEBUG __offset => __offset_727
  # DEBUG __size => 8
  _497 = (unsigned long) __offset_727;
  if (_497 <= 63)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 61>:
  # DEBUG __size => 8
  iftmp.89_732 = __offset_727 >> 6;
  goto <bb 63>;

  <bb 62>:
  _734 = ~_497;
  # DEBUG __size => 8
  _735 = _734 >> 6;
  _736 = (long int) _735;
  iftmp.89_737 = ~_736;

  <bb 63>:
  # iftmp.89_739 = PHI <iftmp.89_732(61), iftmp.89_737(62)>
  # DEBUG __node_offset => iftmp.89_739
  __node_offset.91_740 = (long unsigned int) iftmp.89_739;
  _741 = __node_offset.91_740 * 8;
  _742 = SR.3194_1131 + _741;
  # DEBUG this => &D.96410
  # DEBUG __new_node => _742
  _743 = *_742;
  # DEBUG __size => 8
  # DEBUG __size => 8
  _745 = iftmp.89_739 * 64;
  _746 = __offset_727 - _745;
  _747 = (long unsigned int) _746;
  _748 = _747 * 8;
  _749 = _743 + _748;

  <bb 64>:
  # SR.3192_1145 = PHI <_731(94), _749(63)>
  # SR.3193_1132 = PHI <SR.3193_1134(94), _743(63)>
  # SR.3194_1128 = PHI <SR.3194_1131(94), _742(63)>
  __len_716 = __len.109_529 - __clen_499;
  # DEBUG __len => __len_716
  # DEBUG D#1879 => {CLOBBER}
  # DEBUG __llen => D#1879
  # DEBUG D#1880 => {CLOBBER}
  # DEBUG __rlen => D#1880
  if (__len_716 <= 0)
    goto <bb 66>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 50>;

  <bb 66>:
  pretmp_1011 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_464 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_685 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 67>:
  # prephitmp_1012 = PHI <pretmp_1011(66), _75(48)>
  # prephitmp_1013 = PHI <pretmp_464(66), _161(48)>
  # prephitmp_687 = PHI <pretmp_685(66), _162(48)>
  # DEBUG this => &D.96407
  # DEBUG __x => &D.96410
  # DEBUG D#1881 => {CLOBBER}
  # DEBUG __len => D#1881
  D.96408 ={v} {CLOBBER};
  D.96410 ={v} {CLOBBER};
  D.63936 ={v} {CLOBBER};
  D.63937 ={v} {CLOBBER};
  D.63938 ={v} {CLOBBER};
  # DEBUG this => &D.63942
  # DEBUG __x => __pos_6(D)
  D.63942._M_cur = prephitmp_1012;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.63942._M_first = _157;
  D.63942._M_last = prephitmp_1013;
  D.63942._M_node = prephitmp_687;
  std::copy<Flit*> (__first, __last, &D.63942);
  D.63942 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 32>;

  <bb 68>:
  __mid = __first;
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#1245 => &__mid
  # DEBUG D.87509 => D#1245
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>::operator+= (&__mid, __elemsafter_55);
  # DEBUG D#1372 => &this_4(D)->D.47197
  # DEBUG this => D#1372
  # DEBUG D#1878 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#1373 => &this_4(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.63957
  # DEBUG __x => D#1373
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#1374 => &this_4(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.63956
  # DEBUG __x => D#1374
  # DEBUG this => &D.63955
  # DEBUG __x => __pos_6(D)
  _88 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _176 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _177 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _178 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  __first$_M_cur_241 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first1$_M_cur => __first$_M_cur_241
  # DEBUG D#1893 => MEM[(struct _Deque_iterator *)&__mid + 8B]
  # DEBUG __first1$_M_first => D#1893
  __first$_M_last_243 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first1$_M_last => __first$_M_last_243
  __first$_M_node_160 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first1$_M_node => __first$_M_node_160
  __last_244 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last_244
  __last$8_245 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last$8_245
  # DEBUG D#1892 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last1$_M_last => D#1892
  __last$24_1105 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last$24_1105
  # DEBUG __first2 => &D.63955
  # DEBUG __last2 => &D.63956
  # DEBUG __result => &D.63957
  # DEBUG __alloc => D#1878
  # DEBUG this => NULL
  # DEBUG __x => &D.63957
  # DEBUG D#965 => D#1878
  # DEBUG __first$_M_cur => __first$_M_cur_241
  # DEBUG __first$_M_first => D#1893
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_160
  # DEBUG __last$_M_cur => __last_244
  # DEBUG __last$_M_first => __last$8_245
  # DEBUG __last$_M_last => D#1892
  # DEBUG __last$_M_node => __last$24_1105
  # DEBUG __result => NULL
  # DEBUG D.96491 => D#965
  # DEBUG this => &D.96504
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_241
  # DEBUG __first$_M_first => D#1893
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_160
  # DEBUG __last$_M_cur => __last_244
  # DEBUG __last$_M_first => __last$8_245
  # DEBUG __last$_M_last => D#1892
  # DEBUG __last$_M_node => __last$24_1105
  # DEBUG __result => &D.96504
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.96504
  # DEBUG __first$_M_cur => __first$_M_cur_241
  # DEBUG __first$_M_first => D#1893
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_160
  # DEBUG __last$_M_cur => __last_244
  # DEBUG __last$_M_first => __last$8_245
  # DEBUG __last$_M_last => D#1892
  # DEBUG __last$_M_node => __last$24_1105
  # DEBUG __result => NULL
  # DEBUG this => &D.96521
  # DEBUG __x => NULL
  # DEBUG __first => __first$_M_cur_241
  # DEBUG __first$8 => D#1893
  # DEBUG __first$16 => __first$_M_last_243
  # DEBUG __first$24 => __first$_M_node_160
  # DEBUG __last => __last_244
  # DEBUG __last$8 => __last$8_245
  # DEBUG __last$_M_last => D#1892
  # DEBUG __last$24 => __last$24_1105
  # DEBUG __result => &D.96521
  # DEBUG this => &D.96541
  # DEBUG __x => &D.96521
  # DEBUG __it => __last_244
  # DEBUG __it$8 => __last$8_245
  # DEBUG D#1877 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#1877
  # DEBUG __it$24 => __last$24_1105
  # DEBUG __it$_M_cur => __last_244
  # DEBUG __it$_M_first => __last$8_245
  # DEBUG __it$_M_last => D#1877
  # DEBUG __it$_M_node => __last$24_1105
  # DEBUG __it => __first$_M_cur_241
  # DEBUG __it$8 => D#1893
  # DEBUG __it$16 => __first$_M_last_243
  # DEBUG __it$24 => __first$_M_node_160
  # DEBUG __it$_M_cur => __first$_M_cur_241
  # DEBUG __it$_M_first => D#1893
  # DEBUG __it$_M_last => __first$_M_last_243
  # DEBUG __it$_M_node => __first$_M_node_160
  # DEBUG __result => &D.96541
  # DEBUG this => NULL
  # DEBUG __x => &D.96541
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_244
  # DEBUG __it$8 => __last$8_245
  # DEBUG __it$16 => D#1877
  # DEBUG __it$24 => __last$24_1105
  # DEBUG __it$_M_cur => __last_244
  # DEBUG __it$_M_first => __last$8_245
  # DEBUG __it$_M_last => D#1877
  # DEBUG __it$_M_node => __last$24_1105
  # DEBUG __it => __first$_M_cur_241
  # DEBUG __it$8 => D#1893
  # DEBUG __it$16 => __first$_M_last_243
  # DEBUG __it$24 => __first$_M_node_160
  # DEBUG __it$_M_cur => __first$_M_cur_241
  # DEBUG __it$_M_first => D#1893
  # DEBUG __it$_M_last => __first$_M_last_243
  # DEBUG __it$_M_node => __first$_M_node_160
  # DEBUG __first => __first$_M_cur_241
  # DEBUG __first$8 => D#1893
  # DEBUG __first$16 => __first$_M_last_243
  # DEBUG __first$24 => __first$_M_node_160
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.96566
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_241
  # DEBUG __first$_M_first => D#1893
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_160
  # DEBUG __result => &D.96566
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _833 = (long int) __last$24_1105;
  _835 = (long int) __first$_M_node_160;
  _836 = _833 - _835;
  _837 = _836 /[ex] 8;
  _838 = _837 + -1;
  _839 = _838 * 64;
  _841 = (long int) __last_244;
  _843 = (long int) __last$8_245;
  _844 = _841 - _843;
  _845 = _844 /[ex] 8;
  _846 = _839 + _845;
  _848 = (long int) __first$_M_last_243;
  _850 = (long int) __first$_M_cur_241;
  _851 = _848 - _850;
  _852 = _851 /[ex] 8;
  __n_853 = _846 + _852;
  # DEBUG __n => __n_853
  # DEBUG __n => __n_853
  if (__n_853 <= 0)
    goto <bb 77>;
  else
    goto <bb 69>;

  <bb 69>:

  <bb 70>:
  # __n_528 = PHI <__n_853(69), __n_864(76)>
  # SR.3245_68 = PHI <_82(69), SR.3245_1096(76)>
  # SR.3246_1094 = PHI <_179(69), SR.3246_1093(76)>
  # SR.3247_1090 = PHI <_180(69), SR.3247_1089(76)>
  # SR.3248_58 = PHI <_181(69), SR.3248_1086(76)>
  # __first$_M_cur_1084 = PHI <__first$_M_cur_241(69), __first$_M_cur_1083(76)>
  # __first$_M_last_1081 = PHI <__first$_M_last_243(69), __first$_M_last_1080(76)>
  # __first$_M_node_1079 = PHI <__first$_M_node_160(69), __first$_M_node_1078(76)>
  # DEBUG __first$_M_node => __first$_M_node_1079
  # DEBUG __first$_M_last => __first$_M_last_1081
  # DEBUG __first$_M_cur => __first$_M_cur_1084
  # DEBUG __n => __n_528
  # DEBUG D#119 => &D.96566
  # DEBUG this => D#119
  # DEBUG D#66 => &__first
  # DEBUG this => D#66
  _857 = MEM[(struct Flit * const &)__first$_M_cur_1084];
  *SR.3245_68 = _857;
  # DEBUG this => &__first
  __first$_M_cur_859 = __first$_M_cur_1084 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_859
  if (__first$_M_cur_859 == __first$_M_last_1081)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # DEBUG this => &__first
  __first$_M_node_870 = __first$_M_node_1079 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_870
  # DEBUG __first$_M_node => __first$_M_node_870
  __first$_M_cur_871 = MEM[(struct Flit * * *)__first$_M_node_1079 + 8B];
  # DEBUG __size => 8
  __first$_M_last_872 = __first$_M_cur_871 + 512;
  # DEBUG __first$_M_last => __first$_M_last_872
  # DEBUG __first$_M_cur => __first$_M_cur_871

  <bb 72>:
  # __first$_M_cur_1083 = PHI <__first$_M_cur_859(70), __first$_M_cur_871(71)>
  # __first$_M_last_1080 = PHI <__first$_M_last_1081(70), __first$_M_last_872(71)>
  # __first$_M_node_1078 = PHI <__first$_M_node_1079(70), __first$_M_node_870(71)>
  # DEBUG __first$_M_node => __first$_M_node_1078
  # DEBUG __first$_M_last => __first$_M_last_1080
  # DEBUG __first$_M_cur => __first$_M_cur_1083
  # DEBUG this => &D.96566
  _862 = SR.3245_68 + 8;
  if (_862 == SR.3247_1090)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG this => &D.96566
  _874 = SR.3248_58 + 8;
  # DEBUG this => &D.96566
  # DEBUG __new_node => _874
  _875 = MEM[(struct Flit * * *)SR.3248_58 + 8B];
  # DEBUG __size => 8
  _876 = _875 + 512;

  <bb 74>:
  # SR.3245_1096 = PHI <_862(72), _875(73)>
  # SR.3246_1093 = PHI <SR.3246_1094(72), _875(73)>
  # SR.3247_1089 = PHI <SR.3247_1090(72), _876(73)>
  # SR.3248_1086 = PHI <SR.3248_58(72), _874(73)>
  __n_864 = __n_528 + -1;
  # DEBUG __n => __n_864
  # DEBUG __n => __n_864
  if (__n_864 <= 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  # SR.3248_1141 = PHI <SR.3248_1086(74)>
  # SR.3247_1140 = PHI <SR.3247_1089(74)>
  # SR.3246_1139 = PHI <SR.3246_1093(74)>
  # SR.3245_1127 = PHI <SR.3245_1096(74)>
  goto <bb 77>;

  <bb 76>:
  goto <bb 70>;

  <bb 77>:
  # SR.3245_1095 = PHI <SR.3245_1127(75), _82(68)>
  # SR.3246_1091 = PHI <SR.3246_1139(75), _179(68)>
  # SR.3247_59 = PHI <SR.3247_1140(75), _180(68)>
  # SR.3248_1085 = PHI <SR.3248_1141(75), _181(68)>
  # DEBUG this => &__mid
  # DEBUG __x => &D.96566
  D.96566 ={v} {CLOBBER};
  D.96541 ={v} {CLOBBER};
  D.96521 ={v} {CLOBBER};
  D.96504 ={v} {CLOBBER};
  # DEBUG this => &D.96507
  # DEBUG __x => &__mid
  D.96507._M_cur = SR.3245_1095;
  D.96507._M_first = SR.3246_1091;
  D.96507._M_last = SR.3247_59;
  D.96507._M_node = SR.3248_1085;
  # DEBUG this => &D.96506
  # DEBUG __x => &D.63956
  D.96506._M_cur = _82;
  D.96506._M_first = _179;
  D.96506._M_last = _180;
  D.96506._M_node = _181;
  # DEBUG this => &D.96505
  # DEBUG __x => &D.63955
  D.96505._M_cur = _88;
  D.96505._M_first = _176;
  D.96505._M_last = _177;
  D.96505._M_node = _178;
  # DEBUG D#1361 => D#1878
  D.96503 = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.329 (&D.96505, &D.96506, &D.96507); [return slot optimization]
  D.96505 ={v} {CLOBBER};
  D.96506 ={v} {CLOBBER};
  D.96507 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.63955 ={v} {CLOBBER};
  D.63956 ={v} {CLOBBER};
  D.63957 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_1157;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_1156;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_1155;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_1150;
  # DEBUG this => &D.63961
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.63961._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.63961._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.63961._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.63961._M_node = _175;
  std::copy<Flit*> (__first, __mid, &D.63961);
  D.63961 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 32>;

  <bb 78>:
  __n.88_303 = (long unsigned int) _289;
  _304 = __n.88_303 * 8;
  __new_start$_M_cur_305 = prephitmp_722 + _304;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_305
  goto <bb 9>;

  <bb 79>:
  if (__offset_301 > 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 80>:
  _333 = __elemsbefore.105_10 * 8;
  SR.3103_334 = prephitmp_722 + _333;
  # DEBUG __tmp$_M_cur => SR.3103_334
  goto <bb 13>;

  <bb 81>:
  if (__offset_330 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 82>:
  _390 = __n_11(D) * 8;
  __tmp$_M_cur_391 = _29 + _390;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_391
  goto <bb 18>;

  <bb 83>:
  if (__offset_387 > 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 84>:
  __n.88_418 = (long unsigned int) _289;
  _419 = __n.88_418 * 8;
  __tmp$_M_cur_420 = _353 + _419;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_420
  goto <bb 22>;

  <bb 85>:
  if (__offset_416 > 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 86>:
  _564 = __n_11(D) * 8;
  __new_finish$_M_cur_565 = prephitmp_171 + _564;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_565
  goto <bb 39>;

  <bb 87>:
  if (__offset_561 > 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 88>:
  _531 = -__elemsafter_55;
  __n.88_592 = (long unsigned int) _531;
  _593 = __n.88_592 * 8;
  SR.3111_594 = prephitmp_171 + _593;
  # DEBUG __tmp$_M_cur => SR.3111_594
  goto <bb 43>;

  <bb 89>:
  if (__offset_590 > 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 90>:
  _628 = -__n.103_545;
  __n.88_641 = (long unsigned int) _628;
  _642 = __n.88_641 * 8;
  SR.3188_643 = _71 + _642;
  # DEBUG __tmp$_M_cur => SR.3188_643
  goto <bb 48>;

  <bb 91>:
  if (__offset_639 > 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 92>:
  __n.78_758 = (long unsigned int) _715;
  _759 = __n.78_758 * 8;
  SR.3188_760 = SR.3188_1109 + _759;
  # DEBUG __last$_M_cur => SR.3188_760
  goto <bb 60>;

  <bb 93>:
  if (__offset_756 > 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 94>:
  __n.88_729 = (long unsigned int) _715;
  _730 = __n.88_729 * 8;
  _731 = __rend_1149 + _730;
  goto <bb 64>;

  <bb 95>:
  if (__offset_727 > 0)
    goto <bb 61>;
  else
    goto <bb 62>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt5dequeIP4FlitSaIS1_EEaSERKS3_, funcdef_no=3204, decl_uid=46776, cgraph_uid=1664, symbol_order=1665)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct deque * const this, const struct deque & __x)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3380;
  struct Flit * * SR.3379;
  struct Flit * * SR.3378;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * __first$8;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3357;
  struct Flit * * SR.3356;
  struct Flit * * SR.3355;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * __first$8;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __new_finish$_M_node;
  struct Flit * * __new_finish$_M_last;
  struct Flit * * __new_finish$_M_first;
  struct Flit * * __new_finish$_M_cur;
  struct Flit * * * __new_start$_M_node;
  struct Flit * * __new_start$_M_last;
  struct Flit * * __new_start$_M_first;
  struct Flit * * __new_start$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3313;
  struct Flit * * SR.3312;
  struct Flit * * SR.3311;
  struct Flit * * SR.3310;
  struct Flit * * * __mid$_M_node;
  struct Flit * * __mid$_M_last;
  struct Flit * * __mid$_M_first;
  struct Flit * * __mid$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97062;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.97037;
  struct _Deque_iterator D.97036;
  struct _Deque_iterator D.97035;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97017;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.96993;
  struct _Deque_iterator D.96992;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.96966;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.96941;
  struct _Deque_iterator D.96940;
  struct _Deque_iterator D.96939;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.96921;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.96895;
  struct _Deque_iterator D.96894;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.96887;
  struct _Deque_iterator D.96886;
  struct iterator D.96885;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.96873;
  const difference_type __offset;
  struct _Self & D.96868;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.96858;
  struct iterator D.96857;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Flit * * * __nstart;
  struct const_iterator __mid;
  struct iterator D.62507;
  struct _Deque_iterator D.66669;
  struct _Deque_iterator D.66668;
  struct _Deque_iterator D.62499;
  struct const_iterator D.62495;
  struct _Deque_iterator D.66665;
  struct _Deque_iterator D.66664;
  struct _Deque_iterator D.62492;
  struct _Deque_iterator D.62493;
  long int _5;
  struct Flit * * * _6;
  struct Flit * * _13;
  struct Flit * * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  struct Flit * * _28;
  long int _29;
  struct Flit * * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  struct Flit * * * _43;
  long int _44;
  struct Flit * * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  struct Flit * * _51;
  long int _52;
  struct Flit * * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  struct Flit * * _58;
  long int _59;
  struct Flit * * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  struct Flit * * _66;
  struct Flit * * _67;
  struct Flit * * _68;
  struct Flit * * _70;
  struct Flit * * _72;
  struct Flit * * * _74;
  struct Flit * * _78;
  long int pretmp_82;
  struct Flit * * const prephitmp_96;
  struct Flit * * const pretmp_97;
  struct Flit * * * _114;
  struct Flit * * * _115;
  struct Flit * * * _116;
  struct Flit * * _119;
  long int _126;
  long int _127;
  long int _128;
  long unsigned int _132;
  long int iftmp.79_134;
  struct Flit * * const pretmp_135;
  long unsigned int _136;
  long unsigned int _137;
  long int _138;
  long int iftmp.79_139;
  long int iftmp.79_141;
  long unsigned int __node_offset.81_142;
  long unsigned int _143;
  long int _147;
  long int _148;
  long unsigned int _149;
  long unsigned int _150;
  long int prephitmp_152;
  long int pretmp_153;
  long int prephitmp_154;
  long int _158;
  long int _160;
  long int _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  long int _167;
  long int _168;
  long int _170;
  long int _171;
  long int _172;
  struct Flit * * _176;
  struct Flit * * _182;
  struct Flit * * _184;
  struct Flit * * * _185;
  long int _194;
  struct Flit * * _195;
  long int _196;
  long int _197;
  long int _198;
  long unsigned int _200;
  struct Flit * * _205;
  struct Flit * * * _206;
  long int _207;
  struct _Self & _208;
  struct Flit * _266;
  struct Flit * * _271;
  struct Flit * * * _283;
  struct Flit * * _284;
  struct Flit * * _285;
  long int _291;
  long int _293;
  long int _294;
  long int _295;
  long int _296;
  long unsigned int _298;
  struct Flit * * _302;
  struct Flit * * * _304;
  struct _Self & _305;
  unsigned long _313;
  struct Flit * * const prephitmp_360;
  struct Flit * _363;
  struct Flit * * _368;
  struct Flit * * * _380;
  struct Flit * * _381;
  struct Flit * * _382;
  struct Flit * * const pretmp_390;
  struct Flit * * const prephitmp_557;
  struct Flit * * const pretmp_558;
  struct Flit * * const prephitmp_561;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 37>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#100 => &MEM[(const struct deque *)this_3(D)].D.47197._M_impl._M_start
  # DEBUG D#101 => &MEM[(const struct deque *)this_3(D)].D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 64;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 8;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 8;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#100 => &__x_2(D)->D.47197._M_impl._M_start
  # DEBUG D#101 => &__x_2(D)->D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.3313_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.3313_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 64;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 8;
  _34 = _27 + _33;
  SR.3312_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.3312_35;
  SR.3310_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.3310_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#1381 => &this_3(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.62492
  # DEBUG __x => D#1381
  D.62492._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.62492._M_first = _68;
  D.62492._M_last = _58;
  D.62492._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#98 => &__x_2(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.66664
  # DEBUG __x => D#98
  D.66664._M_cur = _28;
  D.66664._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.66664._M_last = _67;
  D.66664._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#99 => &__x_2(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.66665
  # DEBUG __x => D#99
  D.66665._M_cur = SR.3310_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.66665._M_first = _66;
  D.66665._M_last = SR.3312_35;
  D.66665._M_node = SR.3313_22;
  D.62493 = std::copy<Flit*> (D.66665, D.66664, &D.62492); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.62493
  # DEBUG D#743 => &this_3(D)->D.47197
  # DEBUG this => D#743
  # DEBUG this => this_3(D)
  # DEBUG D#72 => &this_3(D)->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#750 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.78269 => D#750
  # DEBUG D#749 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.78270 => D#749
  # DEBUG D#748 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.78271 => D#748
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.78272 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.62493
  # DEBUG D#747 => MEM[(const struct iterator &)&D.62493]._M_cur
  # DEBUG D.78273 => D#747
  # DEBUG D#746 => MEM[(const struct iterator &)&D.62493]._M_first
  # DEBUG D.78274 => D#746
  # DEBUG D#745 => MEM[(const struct iterator &)&D.62493]._M_last
  # DEBUG D.78275 => D#745
  _115 = MEM[(const struct iterator &)&D.62493]._M_node;
  # DEBUG D.78276 => _115
  # DEBUG D#74 => this_3(D)
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.78258 => D#77
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#744 => &this_3(D)->D.47197
  # DEBUG this => D#744
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.47197._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.62493];
  D.62493 ={v} {CLOBBER};
  D.62492 ={v} {CLOBBER};
  goto <bb 37>;

  <bb 6>:

  <bb 7>:
  # __nstart_98 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_98
  _119 = *__nstart_98;
  # DEBUG D#591 => D#744
  # DEBUG __p => _119
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _119
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _119
  # DEBUG this => D#565
  # DEBUG D.96841 => D#566
  operator delete (_119);
  __nstart_120 = __nstart_98 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#99 => &__x_2(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.62495
  # DEBUG __x => D#99
  SR.3311_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.62495
  # DEBUG __n => _64
  # DEBUG __tmp$_M_cur => SR.3310_37
  # DEBUG __tmp$_M_first => SR.3311_81
  # DEBUG __tmp$_M_last => SR.3312_35
  # DEBUG __tmp$_M_node => SR.3313_22
  # DEBUG this => &__tmp
  # DEBUG __n => _64
  _126 = (long int) SR.3311_81;
  _127 = _38 - _126;
  _128 = _127 /[ex] 8;
  __offset_129 = _64 + _128;
  # DEBUG __offset => __offset_129
  # DEBUG __size => 8
  _313 = (unsigned long) __offset_129;
  if (_313 <= 63)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 10>:
  # DEBUG __size => 8
  iftmp.79_134 = __offset_129 >> 6;
  goto <bb 12>;

  <bb 11>:
  _136 = ~_313;
  # DEBUG __size => 8
  _137 = _136 >> 6;
  _138 = (long int) _137;
  iftmp.79_139 = ~_138;

  <bb 12>:
  # iftmp.79_141 = PHI <iftmp.79_134(10), iftmp.79_139(11)>
  # DEBUG __node_offset => iftmp.79_141
  __node_offset.81_142 = (long unsigned int) iftmp.79_141;
  _143 = __node_offset.81_142 * 8;
  __tmp$_M_node_144 = SR.3313_22 + _143;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_144
  # DEBUG __tmp$_M_node => __tmp$_M_node_144
  __tmp$_M_first_145 = *__tmp$_M_node_144;
  # DEBUG __tmp$_M_first => __tmp$_M_first_145
  # DEBUG __size => 8
  __tmp$_M_last_146 = __tmp$_M_first_145 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_146
  # DEBUG __size => 8
  _147 = iftmp.79_141 * 64;
  _148 = __offset_129 - _147;
  _149 = (long unsigned int) _148;
  _150 = _149 * 8;
  __tmp$_M_cur_151 = __tmp$_M_first_145 + _150;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_151
  pretmp_82 = (long int) __tmp$_M_node_144;
  pretmp_153 = (long int) __tmp$_M_last_146;

  <bb 13>:
  # __tmp$_M_cur_395 = PHI <__tmp$_M_cur_133(38), __tmp$_M_cur_151(12)>
  # __tmp$_M_first_16 = PHI <SR.3311_81(38), __tmp$_M_first_145(12)>
  # __tmp$_M_last_494 = PHI <SR.3312_35(38), __tmp$_M_last_146(12)>
  # __tmp$_M_node_493 = PHI <SR.3313_22(38), __tmp$_M_node_144(12)>
  # prephitmp_152 = PHI <_23(38), pretmp_82(12)>
  # prephitmp_154 = PHI <_36(38), pretmp_153(12)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_493
  # DEBUG __tmp$_M_last => __tmp$_M_last_494
  # DEBUG __tmp$_M_first => __tmp$_M_first_16
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_395
  # DEBUG __mid$_M_cur => __tmp$_M_cur_395
  # DEBUG __mid$_M_first => __tmp$_M_first_16
  # DEBUG __mid$_M_last => __tmp$_M_last_494
  # DEBUG __mid$_M_node => __tmp$_M_node_493
  # DEBUG D#1907 => {CLOBBER}
  # DEBUG __tmp$_M_cur => D#1907
  # DEBUG D#1908 => {CLOBBER}
  # DEBUG __tmp$_M_first => D#1908
  # DEBUG D#1909 => {CLOBBER}
  # DEBUG __tmp$_M_last => D#1909
  # DEBUG D#1910 => {CLOBBER}
  # DEBUG __tmp$_M_node => D#1910
  # DEBUG D#1379 => &this_3(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.62499
  # DEBUG __x => D#1379
  D.62499._M_cur = _60;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.62499._M_first = _78;
  D.62499._M_last = _58;
  D.62499._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#99 => &__x_2(D)->D.47197._M_impl._M_start
  # DEBUG this => &D.66668
  # DEBUG __x => D#99
  D.66668._M_cur = SR.3310_37;
  D.66668._M_first = SR.3311_81;
  D.66668._M_last = SR.3312_35;
  D.66668._M_node = SR.3313_22;
  MEM[(struct _Deque_iterator *)&__mid] = __tmp$_M_cur_395;
  MEM[(struct _Deque_iterator *)&__mid + 8B] = __tmp$_M_first_16;
  MEM[(struct _Deque_iterator *)&__mid + 16B] = __tmp$_M_last_494;
  MEM[(struct _Deque_iterator *)&__mid + 24B] = __tmp$_M_node_493;
  std::copy<Flit*> (D.66668, __mid, &D.62499);
  D.62499 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#98 => &__x_2(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.66669
  # DEBUG __x => D#98
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#1906 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#1380 => &this_3(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.62507
  # DEBUG __x => D#1380
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.62507
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG this => NULL
  # DEBUG __x => &D.62507
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG this => &D.96857
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.96857
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG D#1249 => __first
  # DEBUG D#1249 => __first
  # DEBUG D#1249 => __first
  # DEBUG D#1250 => __last
  # DEBUG D#1250 => __last
  # DEBUG D#1250 => __last
  # DEBUG D.86656 => D#1245
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 8
  _158 = (long int) _74;
  _160 = _158 - prephitmp_152;
  _161 = _160 /[ex] 8;
  _162 = _161 + -1;
  _163 = _162 * 64;
  _164 = (long int) _13;
  _165 = (long int) _72;
  _166 = _164 - _165;
  _167 = _166 /[ex] 8;
  _168 = _163 + _167;
  _170 = (long int) __tmp$_M_cur_395;
  _171 = prephitmp_154 - _170;
  _172 = _171 /[ex] 8;
  __n_173 = _168 + _172;
  __n_174 = (const size_type) __n_173;
  # DEBUG __n => __n_174
  _176 = this_3(D)->D.47197._M_impl._M_start._M_cur;
  if (_17 == _176)
    goto <bb 14>;
  else
    goto <bb 25>;

  <bb 14>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _194 = (long int) _17;
  _195 = this_3(D)->D.47197._M_impl._M_start._M_first;
  _196 = (long int) _195;
  _197 = _194 - _196;
  _198 = _197 /[ex] 8;
  __vacancies_199 = (const size_type) _198;
  # DEBUG __vacancies => __vacancies_199
  if (__n_174 > __vacancies_199)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _200 = __n_174 - __vacancies_199;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_front (this_3(D), _200);
  pretmp_390 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_97 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;

  <bb 16>:
  # prephitmp_360 = PHI <_176(14), pretmp_390(15)>
  # prephitmp_96 = PHI <_195(14), pretmp_97(15)>
  # DEBUG D#1905 => &this_3(D)->D.47197._M_impl._M_start
  # DEBUG this => D#1905
  # DEBUG __n => __n_173
  # DEBUG this => &__tmp
  # DEBUG __x => D#1905
  __tmp._M_cur = prephitmp_360;
  __tmp._M_first = prephitmp_96;
  _205 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  __tmp._M_last = _205;
  _206 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  __tmp._M_node = _206;
  # DEBUG this => &__tmp
  # DEBUG __n => __n_173
  _207 = -__n_173;
  _208 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, _207);
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  __new_start$_M_cur_209 = MEM[(const struct iterator &)_208]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_209
  __new_start$_M_first_210 = MEM[(const struct iterator &)_208]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_210
  __new_start$_M_last_211 = MEM[(const struct iterator &)_208]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_211
  __new_start$_M_node_212 = MEM[(const struct iterator &)_208]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_212
  __tmp ={v} {CLOBBER};
  # DEBUG D#1375 => &this_3(D)->D.47197
  # DEBUG this => D#1375
  # DEBUG this => &D.96887
  # DEBUG __x => &__new_start
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.96887
  # DEBUG D.96891 => D#965
  # DEBUG this => &D.96895
  # DEBUG __x => &D.96887
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.96895
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.96895
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => NULL
  # DEBUG this => &D.96921
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$8 => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.96921
  # DEBUG this => &D.96941
  # DEBUG __x => &D.96921
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1906
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1906
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_395
  # DEBUG __it$8 => __tmp$_M_first_16
  # DEBUG __it$16 => __tmp$_M_last_494
  # DEBUG __it$24 => __tmp$_M_node_493
  # DEBUG __it$_M_cur => __tmp$_M_cur_395
  # DEBUG __it$_M_first => __tmp$_M_first_16
  # DEBUG __it$_M_last => __tmp$_M_last_494
  # DEBUG __it$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.96941
  # DEBUG this => NULL
  # DEBUG __x => &D.96941
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1906
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1906
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_395
  # DEBUG __it$8 => __tmp$_M_first_16
  # DEBUG __it$16 => __tmp$_M_last_494
  # DEBUG __it$24 => __tmp$_M_node_493
  # DEBUG __it$_M_cur => __tmp$_M_cur_395
  # DEBUG __it$_M_first => __tmp$_M_first_16
  # DEBUG __it$_M_last => __tmp$_M_last_494
  # DEBUG __it$_M_node => __tmp$_M_node_493
  # DEBUG __first => __tmp$_M_cur_395
  # DEBUG __first$8 => __tmp$_M_first_16
  # DEBUG __first$16 => __tmp$_M_last_494
  # DEBUG __first$24 => __tmp$_M_node_493
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.96966
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.96966
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  # DEBUG __n => __n_173
  # DEBUG __n => __n_173
  if (__n_173 <= 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG this => &D.96894
  # DEBUG __x => &D.96966
  D.96966 ={v} {CLOBBER};
  D.96941 ={v} {CLOBBER};
  D.96921 ={v} {CLOBBER};
  D.96895 ={v} {CLOBBER};
  D.96887 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_209;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_210;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_211;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_212;
  # DEBUG D#1915 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#1915
  # DEBUG D#1916 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#1916
  # DEBUG D#1917 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#1917
  # DEBUG D#1918 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#1918
  goto <bb 36>;

  <bb 18>:

  <bb 19>:
  # __n_69 = PHI <__n_173(18), __n_273(24)>
  # SR.3355_483 = PHI <__new_start$_M_cur_209(18), SR.3355_482(24)>
  # SR.3356_480 = PHI <__new_start$_M_last_211(18), SR.3356_479(24)>
  # SR.3357_478 = PHI <__new_start$_M_node_212(18), SR.3357_477(24)>
  # __mid$_M_cur_475 = PHI <__tmp$_M_cur_395(18), __mid$_M_cur_474(24)>
  # __mid$_M_last_471 = PHI <__tmp$_M_last_494(18), __mid$_M_last_470(24)>
  # __mid$_M_node_469 = PHI <__tmp$_M_node_493(18), __mid$_M_node_467(24)>
  # DEBUG __first$_M_node => __mid$_M_node_469
  # DEBUG __first$_M_last => __mid$_M_last_471
  # DEBUG __first$_M_cur => __mid$_M_cur_475
  # DEBUG __n => __n_69
  # DEBUG D#119 => &D.96966
  # DEBUG this => D#119
  # DEBUG D#66 => &__first
  # DEBUG this => D#66
  _266 = MEM[(struct Flit * const &)__mid$_M_cur_475];
  *SR.3355_483 = _266;
  # DEBUG this => &__first
  __mid$_M_cur_268 = __mid$_M_cur_475 + 8;
  # DEBUG __first$_M_cur => __mid$_M_cur_268
  if (__mid$_M_cur_268 == __mid$_M_last_471)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG this => &__first
  __mid$_M_node_279 = __mid$_M_node_469 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __mid$_M_node_279
  # DEBUG __first$_M_node => __mid$_M_node_279
  __mid$_M_cur_280 = MEM[(struct Flit * * *)__mid$_M_node_469 + 8B];
  # DEBUG __size => 8
  __mid$_M_last_281 = __mid$_M_cur_280 + 512;
  # DEBUG __first$_M_last => __mid$_M_last_281
  # DEBUG __first$_M_cur => __mid$_M_cur_280

  <bb 21>:
  # __mid$_M_cur_474 = PHI <__mid$_M_cur_268(19), __mid$_M_cur_280(20)>
  # __mid$_M_last_470 = PHI <__mid$_M_last_471(19), __mid$_M_last_281(20)>
  # __mid$_M_node_467 = PHI <__mid$_M_node_469(19), __mid$_M_node_279(20)>
  # DEBUG __first$_M_node => __mid$_M_node_467
  # DEBUG __first$_M_last => __mid$_M_last_470
  # DEBUG __first$_M_cur => __mid$_M_cur_474
  # DEBUG this => &D.96966
  _271 = SR.3355_483 + 8;
  if (_271 == SR.3356_480)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG this => &D.96966
  _283 = SR.3357_478 + 8;
  # DEBUG this => &D.96966
  # DEBUG __new_node => _283
  _284 = MEM[(struct Flit * * *)SR.3357_478 + 8B];
  # DEBUG __size => 8
  _285 = _284 + 512;

  <bb 23>:
  # SR.3355_482 = PHI <_271(21), _284(22)>
  # SR.3356_479 = PHI <SR.3356_480(21), _285(22)>
  # SR.3357_477 = PHI <SR.3357_478(21), _283(22)>
  __n_273 = __n_69 + -1;
  # DEBUG __n => __n_273
  # DEBUG __n => __n_273
  if (__n_273 <= 0)
    goto <bb 17>;
  else
    goto <bb 24>;

  <bb 24>:
  goto <bb 19>;

  <bb 25>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _291 = (long int) _70;
  _293 = (long int) _17;
  _294 = _291 - _293;
  _295 = _294 /[ex] 8;
  _296 = _295 + -1;
  __vacancies_297 = (const size_type) _296;
  # DEBUG __vacancies => __vacancies_297
  if (__n_174 > __vacancies_297)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _298 = __n_174 - __vacancies_297;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_back (this_3(D), _298);
  pretmp_135 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_558 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;

  <bb 27>:
  # prephitmp_561 = PHI <_17(25), pretmp_135(26)>
  # prephitmp_557 = PHI <_70(25), pretmp_558(26)>
  # DEBUG D#1904 => &this_3(D)->D.47197._M_impl._M_finish
  # DEBUG this => D#1904
  # DEBUG __n => __n_173
  # DEBUG this => &__tmp
  # DEBUG __x => D#1904
  __tmp._M_cur = prephitmp_561;
  _302 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  __tmp._M_first = _302;
  __tmp._M_last = prephitmp_557;
  _304 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  __tmp._M_node = _304;
  _305 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, __n_173);
  # DEBUG this => &__new_finish
  # DEBUG __x => _305
  __new_finish$_M_cur_306 = MEM[(const struct iterator &)_305]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_306
  __new_finish$_M_first_307 = MEM[(const struct iterator &)_305]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_307
  __new_finish$_M_last_308 = MEM[(const struct iterator &)_305]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_308
  __new_finish$_M_node_309 = MEM[(const struct iterator &)_305]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_309
  __tmp ={v} {CLOBBER};
  # DEBUG D#1376 => &this_3(D)->D.47197
  # DEBUG this => D#1376
  # DEBUG D#1377 => &this_3(D)->D.47197._M_impl._M_finish
  # DEBUG this => &D.96886
  # DEBUG __x => D#1377
  _182 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  _184 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  _185 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.96886
  # DEBUG D.96989 => D#965
  # DEBUG this => &D.96993
  # DEBUG __x => &D.96886
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.96993
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.96993
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => NULL
  # DEBUG this => &D.97017
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$8 => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.97017
  # DEBUG this => &D.97037
  # DEBUG __x => &D.97017
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1906
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1906
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_395
  # DEBUG __it$8 => __tmp$_M_first_16
  # DEBUG __it$16 => __tmp$_M_last_494
  # DEBUG __it$24 => __tmp$_M_node_493
  # DEBUG __it$_M_cur => __tmp$_M_cur_395
  # DEBUG __it$_M_first => __tmp$_M_first_16
  # DEBUG __it$_M_last => __tmp$_M_last_494
  # DEBUG __it$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.97037
  # DEBUG this => NULL
  # DEBUG __x => &D.97037
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1906
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1906
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_395
  # DEBUG __it$8 => __tmp$_M_first_16
  # DEBUG __it$16 => __tmp$_M_last_494
  # DEBUG __it$24 => __tmp$_M_node_493
  # DEBUG __it$_M_cur => __tmp$_M_cur_395
  # DEBUG __it$_M_first => __tmp$_M_first_16
  # DEBUG __it$_M_last => __tmp$_M_last_494
  # DEBUG __it$_M_node => __tmp$_M_node_493
  # DEBUG __first => __tmp$_M_cur_395
  # DEBUG __first$8 => __tmp$_M_first_16
  # DEBUG __first$16 => __tmp$_M_last_494
  # DEBUG __first$24 => __tmp$_M_node_493
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.97062
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.97062
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  # DEBUG __n => __n_173
  # DEBUG __n => __n_173
  if (__n_173 <= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG this => &D.96992
  # DEBUG __x => &D.97062
  D.97062 ={v} {CLOBBER};
  D.97037 ={v} {CLOBBER};
  D.97017 ={v} {CLOBBER};
  D.96993 ={v} {CLOBBER};
  D.96886 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_306;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_307;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_308;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_309;
  # DEBUG D#1911 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#1911
  # DEBUG D#1912 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#1912
  # DEBUG D#1913 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#1913
  # DEBUG D#1914 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#1914
  goto <bb 36>;

  <bb 29>:

  <bb 30>:
  # __n_99 = PHI <__n_173(29), __n_370(35)>
  # SR.3378_462 = PHI <_182(29), SR.3378_461(35)>
  # SR.3379_460 = PHI <_184(29), SR.3379_459(35)>
  # SR.3380_443 = PHI <_185(29), SR.3380_437(35)>
  # __mid$_M_cur_435 = PHI <__tmp$_M_cur_395(29), __mid$_M_cur_429(35)>
  # __mid$_M_last_423 = PHI <__tmp$_M_last_494(29), __mid$_M_last_422(35)>
  # __mid$_M_node_421 = PHI <__tmp$_M_node_493(29), __mid$_M_node_420(35)>
  # DEBUG __first$_M_node => __mid$_M_node_421
  # DEBUG __first$_M_last => __mid$_M_last_423
  # DEBUG __first$_M_cur => __mid$_M_cur_435
  # DEBUG __n => __n_99
  # DEBUG D#119 => &D.97062
  # DEBUG this => D#119
  # DEBUG D#66 => &__first
  # DEBUG this => D#66
  _363 = MEM[(struct Flit * const &)__mid$_M_cur_435];
  *SR.3378_462 = _363;
  # DEBUG this => &__first
  __mid$_M_cur_365 = __mid$_M_cur_435 + 8;
  # DEBUG __first$_M_cur => __mid$_M_cur_365
  if (__mid$_M_cur_365 == __mid$_M_last_423)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG this => &__first
  __mid$_M_node_376 = __mid$_M_node_421 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __mid$_M_node_376
  # DEBUG __first$_M_node => __mid$_M_node_376
  __mid$_M_cur_377 = MEM[(struct Flit * * *)__mid$_M_node_421 + 8B];
  # DEBUG __size => 8
  __mid$_M_last_378 = __mid$_M_cur_377 + 512;
  # DEBUG __first$_M_last => __mid$_M_last_378
  # DEBUG __first$_M_cur => __mid$_M_cur_377

  <bb 32>:
  # __mid$_M_cur_429 = PHI <__mid$_M_cur_365(30), __mid$_M_cur_377(31)>
  # __mid$_M_last_422 = PHI <__mid$_M_last_423(30), __mid$_M_last_378(31)>
  # __mid$_M_node_420 = PHI <__mid$_M_node_421(30), __mid$_M_node_376(31)>
  # DEBUG __first$_M_node => __mid$_M_node_420
  # DEBUG __first$_M_last => __mid$_M_last_422
  # DEBUG __first$_M_cur => __mid$_M_cur_429
  # DEBUG this => &D.97062
  _368 = SR.3378_462 + 8;
  if (_368 == SR.3379_460)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG this => &D.97062
  _380 = SR.3380_443 + 8;
  # DEBUG this => &D.97062
  # DEBUG __new_node => _380
  _381 = MEM[(struct Flit * * *)SR.3380_443 + 8B];
  # DEBUG __size => 8
  _382 = _381 + 512;

  <bb 34>:
  # SR.3378_461 = PHI <_368(32), _381(33)>
  # SR.3379_459 = PHI <SR.3379_460(32), _382(33)>
  # SR.3380_437 = PHI <SR.3380_443(32), _380(33)>
  __n_370 = __n_99 + -1;
  # DEBUG __n => __n_370
  # DEBUG __n => __n_370
  if (__n_370 <= 0)
    goto <bb 28>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 30>;

  <bb 36>:
  D.96857 ={v} {CLOBBER};
  D.62507 ={v} {CLOBBER};
  # DEBUG D#1919 => {CLOBBER}
  # DEBUG __mid$_M_cur => D#1919
  # DEBUG D#1920 => {CLOBBER}
  # DEBUG __mid$_M_first => D#1920
  # DEBUG D#1921 => {CLOBBER}
  # DEBUG __mid$_M_last => D#1921
  # DEBUG D#1922 => {CLOBBER}
  # DEBUG __mid$_M_node => D#1922

  <bb 37>:
  return this_3(D);

  <bb 38>:
  _132 = _65 * 8;
  __tmp$_M_cur_133 = SR.3310_37 + _132;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_133
  goto <bb 13>;

  <bb 39>:
  if (__offset_129 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Flit*>*, std::vector<std::queue<Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Flit*>] (_ZNSt6vectorISt5queueIP4FlitSt5dequeIS2_SaIS2_EEESaIS6_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS6_S8_EEmRKS6_, funcdef_no=2635, decl_uid=48749, cgraph_uid=1095, symbol_order=1096)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Flit*>*, std::vector<std::queue<Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Flit*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3420;
  struct Flit * * SR.3419;
  struct Flit * * SR.3418;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __nstart;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97360;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.97335;
  struct _Deque_iterator D.97334;
  struct _Deque_iterator D.97333;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97315;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.97301;
  struct _Deque_iterator D.97300;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.97293;
  struct _Deque_iterator D.97292;
  struct _Deque_iterator D.97291;
  const long unsigned int D.97270;
  const size_type __len;
  size_type D.97269;
  size_type __n;
  struct queue * D.97260;
  struct queue * D.97248;
  struct queue * __first;
  long unsigned int __n;
  struct queue * D.97228;
  struct queue * __first;
  long unsigned int __n;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct Flit * * * _17;
  long unsigned int _18;
  long int _19;
  struct queue * _20;
  long int __last.72_21;
  struct queue * const _24;
  bool _25;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct queue * _32;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _38;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  const struct deque * _52;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _62;
  struct queue * _63;
  struct queue * _67;
  long unsigned int prephitmp_68;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  long int _85;
  struct deque * _87;
  struct queue * prephitmp_89;
  struct queue * pretmp_91;
  struct queue * _94;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  void * _127;
  difference_type _138;
  struct deque * _139;
  void * _142;
  struct _Deque_base * _144;
  struct Flit * * * prephitmp_147;
  void * _151;
  struct _Deque_base * _153;
  struct queue * _155;
  long int _159;
  long int _160;
  long int _161;
  long unsigned int _163;
  long int _169;
  struct Flit * * * _170;
  long int _171;
  long int _172;
  long int _173;
  long int _174;
  long int _175;
  struct Flit * * _176;
  long int _177;
  struct Flit * * _178;
  long int _179;
  long int _180;
  long int _181;
  long int _182;
  struct Flit * * _183;
  long int _184;
  struct Flit * * _185;
  long int _186;
  long int _187;
  long int _188;
  difference_type _189;
  size_type _190;
  struct _Deque_base * _191;
  struct Flit * * _192;
  struct Flit * * _194;
  struct Flit * * * _195;
  struct Flit * * _196;
  struct Flit * * _197;
  struct Flit * * * _199;
  long int _214;
  difference_type _220;
  long int _224;
  long int _225;
  bool _236;
  long int _237;
  long int _239;
  long int _240;
  long int _241;
  long int _242;
  long int _243;
  long int _245;
  long int _247;
  long int _248;
  long int _249;
  long int _250;
  long int _252;
  long unsigned int prephitmp_253;
  long int _254;
  long int _255;
  long int _256;
  struct Flit * _261;
  long unsigned int pretmp_262;
  struct Flit * * _266;
  struct Flit * * * _278;
  struct Flit * * _279;
  struct Flit * * _280;
  struct Flit * * * _281;
  struct Flit * * * _282;
  struct Flit * * * _283;
  struct Flit * * _286;
  struct Flit * * * pretmp_303;
  bool _306;
  long int _415;

  <bb 2>:
  # DEBUG D#1934 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#1934
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 84>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.48826._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.48826._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 41>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.88331 => __x_29(D)
  _52 = &MEM[(const struct queue &)__x_29(D)].c;
  std::deque<Flit*, std::allocator<Flit*> >::deque (&__x_copy.c, _52);
  # DEBUG this => this_9(D)
  # DEBUG D#111 => &this_9(D)->D.48826._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#111
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.59511
  # DEBUG __rhs => &__position
  # DEBUG this => &D.59511
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#1386 => &this_9(D)->D.48826
  # DEBUG this => D#1386
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#971
  # DEBUG D#970 => D#971
  # DEBUG D#969 => D#970
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.88344 => D#969
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__last_61, __old_finish_26, __old_finish_26);

  <bb 6>:
  _62 = this_9(D)->D.48826._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.48826._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#1934
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1934
  # DEBUG __it => D#1934
  # DEBUG __first => D#1934
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#1934
  # DEBUG __it => D#1934
  # DEBUG __first => D#1934
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#1934
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.72_21 = (long int) __last_61;
  _73 = __last.72_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#1934
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1934
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_334 = PHI <__old_finish_26(8), __old_finish_58(12)>
  # __last_335 = PHI <__last_61(8), __last_66(12)>
  # __n_336 = PHI <__n_72(8), __n_81(12)>
  # DEBUG __n => __n_336
  # DEBUG __result => __old_finish_334
  # DEBUG __last => __last_335
  __last_66 = __last_335 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_334 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.88374 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_80, _56);
  goto <bb 11>;

<L27>:
  goto <bb 86> (<L10>);

  <bb 11>:
  __n_81 = __n_336 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#616 => &__x_copy.c
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.47197);
  __x_copy ={v} {CLOBBER};
  goto <bb 84>;

  <bb 14>:

  <bb 15>:
  # __position_338 = PHI <__position_23(14), __position_84(18)>
  # DEBUG __first => __position_338
  # DEBUG this => __position_338
  # DEBUG D.88385 => &__x_copy
  _83 = &__position_338->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_83, &__x_copy.c);
  goto <bb 17>;

<L28>:
  goto <bb 86> (<L10>);

  <bb 17>:
  __position_84 = __position_338 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#1387 => &this_9(D)->D.48826
  # DEBUG this => D#1387
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.88394 => D#974
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => __old_finish_26
  # DEBUG __cur => __old_finish_26
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 26>;
  else
    goto <bb 20>;

  <bb 20>:

  <bb 21>:
  # __n_349 = PHI <__n_70(20), __n_140(24)>
  # __old_finish_350 = PHI <__old_finish_26(20), __old_finish_141(24)>
  # DEBUG __cur => __old_finish_350
  # DEBUG __n => __n_349
  # DEBUG __r => __old_finish_350
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#9 => 80
  # DEBUG __p => NULL
  # DEBUG D.81439 => D#9
  if (__old_finish_350 != 0B)
    goto <bb 25>;
  else
    goto <bb 22>;

  <bb 22>:
  __n_140 = __n_349 + 18446744073709551615;
  # DEBUG __n => __n_140
  __old_finish_141 = __old_finish_350 + 80;
  # DEBUG __cur => __old_finish_141
  # DEBUG __cur => __old_finish_141
  # DEBUG __n => __n_140
  if (__n_140 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # __old_finish_298 = PHI <__old_finish_141(22)>
  goto <bb 26>;

  <bb 24>:
  goto <bb 21>;

  <bb 25>:
  # DEBUG this => NULL
  # DEBUG D.97226 => &__x_copy
  _139 = &__old_finish_350->c;
  std::deque<Flit*, std::allocator<Flit*> >::deque (_139, &__x_copy.c);
  goto <bb 22>;

  <bb 26>:
  # __old_finish_351 = PHI <__old_finish_298(23), __old_finish_26(19)>
  this_9(D)->D.48826._M_impl._M_finish = __old_finish_351;
  # DEBUG D#1388 => &this_9(D)->D.48826
  # DEBUG this => D#1388
  # DEBUG this => &__position
  # DEBUG __first => D#1934
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG __alloc => D#971
  # DEBUG D#970 => D#971
  # DEBUG D#969 => D#970
  # DEBUG __first => D#1934
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG D.88407 => D#969
  # DEBUG __first => D#1934
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__position_23, __old_finish_26, __old_finish_351);
  goto <bb 35>;

<L29>:
  goto <bb 86> (<L10>);

  # __old_finish_295 = PHI <__old_finish_350(25)>
<L19>:
  _142 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_142);
  # DEBUG __first => __old_finish_26
  # DEBUG __last => __old_finish_295
  # DEBUG __first => __old_finish_26
  # DEBUG __last => __old_finish_295
  # DEBUG __first => __old_finish_26
  if (__old_finish_26 == __old_finish_295)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  __cxa_rethrow ();

  <bb 30>:

  <bb 31>:
  # __old_finish_352 = PHI <__old_finish_26(30), __old_finish_145(32)>
  # DEBUG __first => __old_finish_352
  # DEBUG __r => __old_finish_352
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  _144 = &MEM[(struct deque *)__old_finish_352].D.47197;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_144);
  MEM[(struct  &)__old_finish_352] ={v} {CLOBBER};
  __old_finish_145 = __old_finish_352 + 80;
  # DEBUG __first => __old_finish_145
  # DEBUG __first => __old_finish_145
  if (__old_finish_145 == __old_finish_295)
    goto <bb 29>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 31>;

<L21>:
  __cxa_end_catch ();
  resx 13

<L30>:
  goto <bb 86> (<L10>);

  <bb 35>:
  _74 = this_9(D)->D.48826._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.48826._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#1934
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#1934
  if (__position_23 == __old_finish_26)
    goto <bb 13>;
  else
    goto <bb 36>;

  <bb 36>:

  <bb 37>:
  # __position_339 = PHI <__position_23(36), __position_88(40)>
  # DEBUG __first => __position_339
  # DEBUG this => __position_339
  # DEBUG D.88428 => &__x_copy
  _87 = &__position_339->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_87, &__x_copy.c);
  goto <bb 39>;

<L31>:
  goto <bb 86> (<L10>);

  <bb 39>:
  __position_88 = __position_339 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 13>;
  else
    goto <bb 40>;

  <bb 40>:
  goto <bb 37>;

  <bb 41>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#786 => this_9(D)
  # DEBUG this => D#786
  # DEBUG D#785 => D#786
  # DEBUG D#784 => &D#785->D.49577
  # DEBUG this => D#784
  # DEBUG __a => D#783
  # DEBUG D#782 => D#783
  # DEBUG D#781 => D#782
  # DEBUG this => D#781
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#85 => this_9(D)
  # DEBUG D#85 => this_9(D)
  # DEBUG this => D#85
  # DEBUG this => D#85
  _159 = (long int) _24;
  _160 = _13 - _159;
  _161 = _160 /[ex] 80;
  _162 = (const long unsigned int) _161;
  _163 = 230584300921369395 - _162;
  if (__n_7(D) > _163)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 43>:
  # DEBUG D#85 => this_9(D)
  # DEBUG D#85 => this_9(D)
  # DEBUG this => D#85
  # DEBUG this => D#85
  # DEBUG D#85 => this_9(D)
  # DEBUG D#85 => this_9(D)
  # DEBUG this => D#85
  # DEBUG this => D#85
  # DEBUG __a => &D.97270
  # DEBUG __b => &__n
  _18 = MAX_EXPR <__n_7(D), _162>;
  __len_167 = _18 + _162;
  # DEBUG __len => __len_167
  # DEBUG D#85 => this_9(D)
  # DEBUG D#85 => this_9(D)
  # DEBUG this => D#85
  # DEBUG this => D#85
  # DEBUG D#786 => this_9(D)
  # DEBUG this => D#786
  # DEBUG D#785 => D#786
  # DEBUG D#784 => &D#785->D.49577
  # DEBUG this => D#784
  # DEBUG __a => D#783
  # DEBUG D#782 => D#783
  # DEBUG D#781 => D#782
  # DEBUG this => D#781
  _25 = __len_167 > 230584300921369395;
  _236 = _162 > __len_167;
  _306 = _25 | _236;
  if (_306 != 0)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 44>:
  pretmp_262 = __len_167 * 80;

  <bb 45>:
  # __elems_before_305 = PHI <__elems_before_221(101), __elems_before_216(44)>
  # _19 = PHI <_225(101), _85(44)>
  # prephitmp_253 = PHI <18446744073709551600(101), pretmp_262(44)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#213 => &this_9(D)->D.48826._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#213
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59544
  # DEBUG this => &__position
  # DEBUG this => &D.59544
  # DEBUG __elems_before => __elems_before_305
  # DEBUG D#1398 => &this_9(D)->D.48826
  # DEBUG D#764 => D#1398
  # DEBUG __n => NULL
  # DEBUG this => D#794
  # DEBUG D#793 => D#794
  # DEBUG D#792 => &D#793->_M_impl
  # DEBUG D#791 => D#792
  # DEBUG __n => NULL
  # DEBUG __a => D#791
  # DEBUG D#790 => D#791
  # DEBUG D#788 => D#790
  # DEBUG D#789 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#788
  # DEBUG D.97258 => D#789
  # DEBUG D#787 => D#788
  # DEBUG D#781 => D#787
  # DEBUG this => D#781
  _155 = operator new (prephitmp_253);

  <bb 46>:
  # __new_finish_156 = PHI <0B(102), _155(45)>
  # __elems_before_235 = PHI <__elems_before_216(102), __elems_before_305(45)>
  # _415 = PHI <_85(102), _19(45)>
  # prephitmp_68 = PHI <0(102), prephitmp_253(45)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1382 => &this_9(D)->D.48826
  # DEBUG this => D#1382
  _27 = (long unsigned int) _415;
  __first_28 = __new_finish_156 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.88437 => D#974
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __cur => __first_28
  # DEBUG __n => __n_7(D)

  <bb 47>:
  # __n_400 = PHI <__n_149(59), __n_7(D)(46)>
  # __first_213 = PHI <__first_150(59), __first_28(46)>
  # DEBUG __cur => __first_213
  # DEBUG __n => __n_400
  # DEBUG __r => __first_213
  # DEBUG __p => NULL
  # DEBUG __value => __x_29(D)
  # DEBUG D#9 => 80
  # DEBUG __p => NULL
  # DEBUG D.81439 => D#9
  if (__first_213 != 0B)
    goto <bb 48>;
  else
    goto <bb 58>;

  <bb 48>:
  # DEBUG this => NULL
  # DEBUG D.97246 => __x_29(D)
  # DEBUG D#1927 => &MEM[(const struct queue &)__x_29(D)].c
  # DEBUG D#1930 => &__first_213->c
  # DEBUG this => D#1930
  # DEBUG __x => D#1927
  # DEBUG this => D#1927
  # DEBUG D#100 => &D#1927->D.47197._M_impl._M_start
  # DEBUG D#101 => &D#1927->D.47197._M_impl._M_finish
  # DEBUG __x => D#101
  # DEBUG __y => D#100
  # DEBUG __size => 8
  _17 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_node;
  _169 = (long int) _17;
  _170 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_node;
  _171 = (long int) _170;
  _172 = _169 - _171;
  _173 = _172 /[ex] 8;
  _174 = _173 + -1;
  _175 = _174 * 64;
  _176 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_cur;
  _177 = (long int) _176;
  _178 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_first;
  _179 = (long int) _178;
  _180 = _177 - _179;
  _181 = _180 /[ex] 8;
  _182 = _175 + _181;
  _183 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_last;
  _184 = (long int) _183;
  _185 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_cur;
  _186 = (long int) _185;
  _187 = _184 - _186;
  _188 = _187 /[ex] 8;
  _189 = _182 + _188;
  _190 = (size_type) _189;
  # DEBUG D#966 => &D#1927->D.47197
  # DEBUG this => D#966
  # DEBUG __a => NULL
  _191 = &MEM[(struct deque *)__first_213].D.47197;
  # DEBUG this => _191
  # DEBUG __a => NULL
  # DEBUG __num_elements => _190
  # DEBUG D#861 => &_191->_M_impl
  # DEBUG this => D#861
  # DEBUG __a => NULL
  # DEBUG this => D#861
  # DEBUG __a => NULL
  # DEBUG this => D#861
  # DEBUG D.75391 => NULL
  MEM[(struct _Deque_impl *)__first_213]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_213]._M_map_size = 0;
  # DEBUG D#468 => &D#861->_M_start
  # DEBUG this => D#468
  MEM[(struct _Deque_iterator *)__first_213 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_213 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_213 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_213 + 16B]._M_node = 0B;
  # DEBUG D#467 => &D#861->_M_finish
  # DEBUG this => D#467
  MEM[(struct _Deque_iterator *)__first_213 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_213 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_213 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_213 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_191, _190);

  <bb 49>:
  # DEBUG D#967 => &D#1930->D.47197
  # DEBUG this => D#967
  # DEBUG D#968 => &D#1930->D.47197._M_impl._M_start
  # DEBUG this => &D.97291
  # DEBUG __x => D#968
  _192 = MEM[(const struct iterator &)__first_213 + 16]._M_cur;
  _194 = MEM[(const struct iterator &)__first_213 + 16]._M_last;
  _195 = MEM[(const struct iterator &)__first_213 + 16]._M_node;
  # DEBUG this => D#1927
  # DEBUG D#98 => &D#1927->D.47197._M_impl._M_finish
  # DEBUG this => &D.97292
  # DEBUG __x => D#98
  _196 = MEM[(const struct iterator &)__x_29(D) + 48]._M_cur;
  _197 = MEM[(const struct iterator &)__x_29(D) + 48]._M_first;
  # DEBUG D#1929 => MEM[(const struct iterator &)__x_29(D) + 48]._M_last
  _199 = MEM[(const struct iterator &)__x_29(D) + 48]._M_node;
  # DEBUG this => D#1927
  # DEBUG D#99 => &D#1927->D.47197._M_impl._M_start
  # DEBUG this => &D.97293
  # DEBUG __x => D#99
  __first$_M_cur_200 = MEM[(const struct iterator &)__x_29(D) + 16]._M_cur;
  # DEBUG D#1931 => MEM[(const struct iterator &)__x_29(D) + 16]._M_first
  __first$_M_last_202 = MEM[(const struct iterator &)__x_29(D) + 16]._M_last;
  __first$_M_node_203 = MEM[(const struct iterator &)__x_29(D) + 16]._M_node;
  # DEBUG __result => &D.97291
  # DEBUG D.97297 => D#965
  # DEBUG this => &D.97301
  # DEBUG __x => &D.97291
  # DEBUG __result => &D.97301
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.97301
  # DEBUG __result => NULL
  # DEBUG this => &D.97315
  # DEBUG __x => NULL
  # DEBUG __result => &D.97315
  # DEBUG this => &D.97335
  # DEBUG __x => &D.97315
  # DEBUG __it => _196
  # DEBUG __it$8 => _197
  # DEBUG __it$16 => D#1929
  # DEBUG __it$24 => _199
  # DEBUG __it$_M_cur => _196
  # DEBUG __it$_M_first => _197
  # DEBUG __it$_M_last => D#1929
  # DEBUG __it$_M_node => _199
  # DEBUG __it => __first$_M_cur_200
  # DEBUG __it$8 => D#1931
  # DEBUG __it$16 => __first$_M_last_202
  # DEBUG __it$24 => __first$_M_node_203
  # DEBUG __it$_M_cur => __first$_M_cur_200
  # DEBUG __it$_M_first => D#1931
  # DEBUG __it$_M_last => __first$_M_last_202
  # DEBUG __it$_M_node => __first$_M_node_203
  # DEBUG __result => &D.97335
  # DEBUG this => NULL
  # DEBUG __x => &D.97335
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _196
  # DEBUG __it$8 => _197
  # DEBUG __it$16 => D#1929
  # DEBUG __it$24 => _199
  # DEBUG __it$_M_cur => _196
  # DEBUG __it$_M_first => _197
  # DEBUG __it$_M_last => D#1929
  # DEBUG __it$_M_node => _199
  # DEBUG __it => __first$_M_cur_200
  # DEBUG __it$8 => D#1931
  # DEBUG __it$16 => __first$_M_last_202
  # DEBUG __it$24 => __first$_M_node_203
  # DEBUG __it$_M_cur => __first$_M_cur_200
  # DEBUG __it$_M_first => D#1931
  # DEBUG __it$_M_last => __first$_M_last_202
  # DEBUG __it$_M_node => __first$_M_node_203
  # DEBUG __first => __first$_M_cur_200
  # DEBUG __first$8 => D#1931
  # DEBUG __first$16 => __first$_M_last_202
  # DEBUG __first$24 => __first$_M_node_203
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.97360
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_200
  # DEBUG __first$_M_first => D#1931
  # DEBUG __first$_M_last => __first$_M_last_202
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __result => &D.97360
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _237 = (long int) _199;
  _239 = (long int) __first$_M_node_203;
  _240 = _237 - _239;
  _241 = _240 /[ex] 8;
  _242 = _241 + -1;
  _243 = _242 * 64;
  _245 = (long int) _196;
  _247 = (long int) _197;
  _248 = _245 - _247;
  _249 = _248 /[ex] 8;
  _250 = _243 + _249;
  _252 = (long int) __first$_M_last_202;
  _254 = (long int) __first$_M_cur_200;
  _255 = _252 - _254;
  _256 = _255 /[ex] 8;
  __n_257 = _250 + _256;
  # DEBUG __n => __n_257
  # DEBUG __n => __n_257
  if (__n_257 <= 0)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  # DEBUG this => &D.97300
  # DEBUG __x => &D.97360
  D.97360 ={v} {CLOBBER};
  D.97335 ={v} {CLOBBER};
  D.97315 ={v} {CLOBBER};
  D.97301 ={v} {CLOBBER};
  D.97291 ={v} {CLOBBER};
  goto <bb 58>;

  <bb 51>:

  <bb 52>:
  # __n_354 = PHI <__n_257(51), __n_268(57)>
  # SR.3418_384 = PHI <_192(51), SR.3418_383(57)>
  # SR.3419_381 = PHI <_194(51), SR.3419_380(57)>
  # SR.3420_379 = PHI <_195(51), SR.3420_378(57)>
  # __first$_M_cur_376 = PHI <__first$_M_cur_200(51), __first$_M_cur_375(57)>
  # __first$_M_last_372 = PHI <__first$_M_last_202(51), __first$_M_last_371(57)>
  # __first$_M_node_370 = PHI <__first$_M_node_203(51), __first$_M_node_368(57)>
  # DEBUG __first$_M_node => __first$_M_node_370
  # DEBUG __first$_M_last => __first$_M_last_372
  # DEBUG __first$_M_cur => __first$_M_cur_376
  # DEBUG __n => __n_354
  # DEBUG D#119 => &D.97360
  # DEBUG this => D#119
  # DEBUG D#66 => &__first
  # DEBUG this => D#66
  _261 = MEM[(struct Flit * const &)__first$_M_cur_376];
  *SR.3418_384 = _261;
  # DEBUG this => &__first
  __first$_M_cur_263 = __first$_M_cur_376 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_263
  if (__first$_M_cur_263 == __first$_M_last_372)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG this => &__first
  __first$_M_node_274 = __first$_M_node_370 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_274
  # DEBUG __first$_M_node => __first$_M_node_274
  __first$_M_cur_275 = MEM[(struct Flit * * *)__first$_M_node_370 + 8B];
  # DEBUG __size => 8
  __first$_M_last_276 = __first$_M_cur_275 + 512;
  # DEBUG __first$_M_last => __first$_M_last_276
  # DEBUG __first$_M_cur => __first$_M_cur_275

  <bb 54>:
  # __first$_M_cur_375 = PHI <__first$_M_cur_263(52), __first$_M_cur_275(53)>
  # __first$_M_last_371 = PHI <__first$_M_last_372(52), __first$_M_last_276(53)>
  # __first$_M_node_368 = PHI <__first$_M_node_370(52), __first$_M_node_274(53)>
  # DEBUG __first$_M_node => __first$_M_node_368
  # DEBUG __first$_M_last => __first$_M_last_371
  # DEBUG __first$_M_cur => __first$_M_cur_375
  # DEBUG this => &D.97360
  _266 = SR.3418_384 + 8;
  if (_266 == SR.3419_381)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  # DEBUG this => &D.97360
  _278 = SR.3420_379 + 8;
  # DEBUG this => &D.97360
  # DEBUG __new_node => _278
  _279 = MEM[(struct Flit * * *)SR.3420_379 + 8B];
  # DEBUG __size => 8
  _280 = _279 + 512;

  <bb 56>:
  # SR.3418_383 = PHI <_266(54), _279(55)>
  # SR.3419_380 = PHI <SR.3419_381(54), _280(55)>
  # SR.3420_378 = PHI <SR.3420_379(54), _278(55)>
  __n_268 = __n_354 + -1;
  # DEBUG __n => __n_268
  # DEBUG __n => __n_268
  if (__n_268 <= 0)
    goto <bb 50>;
  else
    goto <bb 57>;

  <bb 57>:
  goto <bb 52>;

  <bb 58>:
  __n_149 = __n_400 + 18446744073709551615;
  # DEBUG __n => __n_149
  __first_150 = __first_213 + 80;
  # DEBUG __cur => __first_150
  # DEBUG __cur => __first_150
  # DEBUG __n => __n_149
  if (__n_149 == 0)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 47>;

  <bb 60>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1383 => &this_9(D)->D.48826
  # DEBUG this => D#1383
  # DEBUG this => &__position
  _32 = this_9(D)->D.48826._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#1934
  # DEBUG __result => NULL
  # DEBUG __alloc => D#973
  # DEBUG D#972 => D#973
  # DEBUG D#969 => D#972
  # DEBUG __first => _32
  # DEBUG __last => D#1934
  # DEBUG __result => NULL
  # DEBUG D.88458 => D#969
  # DEBUG __first => _32
  # DEBUG __last => D#1934
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (_32, __position_23, __new_finish_156);
  goto <bb 67>;

  # __first_297 = PHI <__first_213(48)>
<L22>:
  _151 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_151);
  # DEBUG __first => __first_28
  # DEBUG __last => __first_297
  # DEBUG __first => __first_28
  # DEBUG __last => __first_297
  # DEBUG __first => __first_28
  if (__first_28 == __first_297)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  __cxa_rethrow ();

  <bb 63>:

  <bb 64>:
  # __first_353 = PHI <__first_28(63), __first_154(65)>
  # DEBUG __first => __first_353
  # DEBUG __r => __first_353
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  _153 = &MEM[(struct deque *)__first_353].D.47197;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_153);
  MEM[(struct  &)__first_353] ={v} {CLOBBER};
  __first_154 = __first_353 + 80;
  # DEBUG __first => __first_154
  # DEBUG __first => __first_154
  if (__first_154 == __first_297)
    goto <bb 62>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 64>;

<L24>:
  __cxa_end_catch ();
  resx 16

  <bb 67>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 80;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#1384 => &this_9(D)->D.48826
  # DEBUG this => D#1384
  _36 = this_9(D)->D.48826._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#1934
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#973
  # DEBUG D#972 => D#973
  # DEBUG D#969 => D#972
  # DEBUG __first => D#1934
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.88477 => D#969
  # DEBUG __first => D#1934
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _94 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__position_23, _36, __new_finish_34);
  goto <bb 69>;

<L33>:
  goto <bb 88> (<L13>);

  <bb 69>:
  # DEBUG __new_finish => _94
  # DEBUG D#1385 => &this_9(D)->D.48826
  # DEBUG this => D#1385
  _38 = this_9(D)->D.48826._M_impl._M_finish;
  __first_39 = this_9(D)->D.48826._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 81>;
  else
    goto <bb 70>;

  <bb 70>:

  <bb 71>:
  # __first_331 = PHI <__first_39(70), __first_96(79)>
  # DEBUG __first => __first_331
  # DEBUG __r => __first_331
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  # DEBUG D#1928 => &MEM[(struct deque *)__first_331].D.47197
  # DEBUG this => D#1928
  _281 = MEM[(struct _Deque_base *)__first_331]._M_impl._M_map;
  if (_281 != 0B)
    goto <bb 72>;
  else
    goto <bb 78>;

  <bb 72>:
  _282 = MEM[(struct _Deque_base *)__first_331]._M_impl._M_finish._M_node;
  _283 = _282 + 8;
  __nstart_284 = MEM[(struct _Deque_base *)__first_331]._M_impl._M_start._M_node;
  # DEBUG this => D#1928
  # DEBUG __nstart => __nstart_284
  # DEBUG __nfinish => _283
  # DEBUG __n => __nstart_284
  # DEBUG __n => __nstart_284
  if (_283 <= __nstart_284)
    goto <bb 77>;
  else
    goto <bb 73>;

  <bb 73>:

  <bb 74>:
  # __nstart_355 = PHI <__nstart_284(73), __nstart_287(75)>
  # DEBUG __n => __nstart_355
  _286 = *__nstart_355;
  # DEBUG D#591 => D#1928
  # DEBUG __p => _286
  # DEBUG this => D#591
  # DEBUG D#590 => D#591
  # DEBUG __size => 8
  # DEBUG D#589 => &D#590->_M_impl
  # DEBUG D#569 => D#589
  # DEBUG __p => _286
  # DEBUG __a => D#569
  # DEBUG __n => D#570
  # DEBUG D#568 => D#570
  # DEBUG D#567 => D#569
  # DEBUG D#565 => D#567
  # DEBUG D#566 => D#568
  # DEBUG __p => _286
  # DEBUG this => D#565
  # DEBUG D.97395 => D#566
  operator delete (_286);
  __nstart_287 = __nstart_355 + 8;
  # DEBUG __n => __nstart_287
  # DEBUG __n => __nstart_287
  if (_283 <= __nstart_287)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  goto <bb 74>;

  <bb 76>:
  pretmp_303 = MEM[(struct _Deque_base *)__first_331]._M_impl._M_map;

  <bb 77>:
  # prephitmp_147 = PHI <pretmp_303(76), _281(72)>
  # DEBUG D#605 => D#1928->_M_impl._M_map_size
  # DEBUG D#1933 => MEM[(struct _Deque_base *)__first_331]._M_impl._M_map
  # DEBUG D#603 => D#1928
  # DEBUG D#604 => D#605
  # DEBUG __p => D#1933
  # DEBUG this => D#603
  # DEBUG __n => D#604
  # DEBUG D#602 => D#604
  # DEBUG D#601 => D#603
  # DEBUG D#600 => D#601
  # DEBUG this => D#600
  # DEBUG D#599 => D#600
  # DEBUG this => D#599
  # DEBUG this => NULL
  # DEBUG D.76847 => NULL
  # DEBUG this => NULL
  # DEBUG D#465 => &__map_alloc
  # DEBUG D#466 => D#602
  # DEBUG __p => D#1933
  # DEBUG __a => D#465
  # DEBUG __n => D#466
  # DEBUG D#464 => D#466
  # DEBUG D#463 => D#465
  # DEBUG D#461 => D#463
  # DEBUG D#462 => D#464
  # DEBUG __p => D#1933
  # DEBUG this => D#461
  # DEBUG D.97405 => D#462
  operator delete (prephitmp_147);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 78>:
  # DEBUG D#606 => &D#1928->_M_impl
  # DEBUG this => D#606
  # DEBUG this => D#606
  # DEBUG this => D#606
  MEM[(struct  &)__first_331] ={v} {CLOBBER};
  __first_96 = __first_331 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 71>;

  <bb 80>:
  pretmp_91 = this_9(D)->D.48826._M_impl._M_start;

  <bb 81>:
  # prephitmp_89 = PHI <pretmp_91(80), __first_39(69)>
  # DEBUG D#1396 => this_9(D)->D.48826._M_impl._M_end_of_storage
  # DEBUG D#1395 => (long int) D#1396
  # DEBUG D#1932 => this_9(D)->D.48826._M_impl._M_start
  # DEBUG D#1394 => (long int) D#1932
  # DEBUG D#1393 => D#1395 - D#1394
  # DEBUG D#1392 => D#1393 /[ex] 80
  # DEBUG D#1391 => &this_9(D)->D.48826
  # DEBUG D#390 => D#1391
  # DEBUG D#391 => (long unsigned int) D#1392
  # DEBUG __p => D#1932
  # DEBUG this => D#390
  # DEBUG __n => D#391
  # DEBUG D#389 => D#391
  # DEBUG D#388 => D#390
  if (prephitmp_89 != 0B)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG D#387 => &D#388->_M_impl
  # DEBUG D#385 => D#387
  # DEBUG D#386 => D#389
  # DEBUG __p => D#1932
  # DEBUG __a => D#385
  # DEBUG __n => D#386
  # DEBUG D#384 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#381 => D#383
  # DEBUG D#382 => D#384
  # DEBUG __p => D#1932
  # DEBUG this => D#381
  # DEBUG D.88500 => D#382
  operator delete (prephitmp_89);

  <bb 83>:
  this_9(D)->D.48826._M_impl._M_start = __new_finish_156;
  this_9(D)->D.48826._M_impl._M_finish = _94;
  _45 = __new_finish_156 + prephitmp_68;
  this_9(D)->D.48826._M_impl._M_end_of_storage = _45;

  <bb 84>:
  return;

<L26>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#616 => &__x_copy.c
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.47197);
  resx 2

<L32>:

  # __new_finish_1 = PHI <__new_finish_34(68), 0B(87)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 91>;
  else
    goto <bb 89>;

  <bb 89>:
  # DEBUG __first => __new_finish_156
  if (__new_finish_1 == __new_finish_156)
    goto <bb 90>;
  else
    goto <bb 95>;

  <bb 90>:
  # DEBUG D#1397 => &this_9(D)->D.48826
  # DEBUG D#390 => D#1397
  # DEBUG __p => NULL
  # DEBUG this => D#390
  # DEBUG __n => D#391
  # DEBUG D#389 => D#391
  # DEBUG D#388 => D#390
  if (__new_finish_156 != 0B)
    goto <bb 98>;
  else
    goto <bb 99>;

  <bb 91>:
  # DEBUG D#1389 => &this_9(D)->D.48826
  # DEBUG this => D#1389
  _49 = __n_7(D) + __elems_before_235;
  _50 = _49 * 80;
  _51 = __new_finish_156 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51
  # DEBUG __first => __first_28
  if (__first_28 == _51)
    goto <bb 90>;
  else
    goto <bb 92>;

  <bb 92>:

  <bb 93>:
  # __first_337 = PHI <__first_28(92), __first_98(94)>
  # DEBUG __first => __first_337
  # DEBUG __r => __first_337
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  _97 = &MEM[(struct deque *)__first_337].D.47197;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_97);
  MEM[(struct  &)__first_337] ={v} {CLOBBER};
  __first_98 = __first_337 + 80;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_51 == __first_98)
    goto <bb 90>;
  else
    goto <bb 94>;

  <bb 94>:
  goto <bb 93>;

  <bb 95>:

  <bb 96>:
  # __new_finish_340 = PHI <__new_finish_156(95), __new_finish_101(97)>
  # DEBUG __first => __new_finish_340
  # DEBUG __r => __new_finish_340
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  _100 = &MEM[(struct deque *)__new_finish_340].D.47197;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_340] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_340 + 80;
  # DEBUG __first => __new_finish_101
  # DEBUG __first => __new_finish_101
  if (__new_finish_1 == __new_finish_101)
    goto <bb 90>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 96>;

  <bb 98>:
  # DEBUG D#387 => &D#388->_M_impl
  # DEBUG D#385 => D#387
  # DEBUG D#386 => D#389
  # DEBUG __p => NULL
  # DEBUG __a => D#385
  # DEBUG __n => D#386
  # DEBUG D#384 => D#386
  # DEBUG D#383 => D#385
  # DEBUG D#381 => D#383
  # DEBUG D#382 => D#384
  # DEBUG __p => NULL
  # DEBUG this => D#381
  # DEBUG D.88551 => D#382
  operator delete (__new_finish_156);

  <bb 99>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 101>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#213 => &this_9(D)->D.48826._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#213
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59544
  # DEBUG this => &__position
  _224 = (long int) __position_23;
  # DEBUG this => &D.59544
  _225 = _224 - _159;
  _220 = _225 /[ex] 80;
  __elems_before_221 = (const size_type) _220;
  # DEBUG __elems_before => __elems_before_221
  # DEBUG D#1398 => &this_9(D)->D.48826
  # DEBUG D#764 => D#1398
  # DEBUG __n => NULL
  # DEBUG this => D#794
  # DEBUG D#793 => D#794
  goto <bb 45>;

  <bb 102>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#213 => &this_9(D)->D.48826._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#213
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59544
  # DEBUG this => &__position
  _214 = (long int) __position_23;
  # DEBUG this => &D.59544
  _85 = _214 - _159;
  _138 = _85 /[ex] 80;
  __elems_before_216 = (const size_type) _138;
  # DEBUG __elems_before => __elems_before_216
  # DEBUG D#1398 => &this_9(D)->D.48826
  # DEBUG D#764 => D#1398
  # DEBUG __n => NULL
  # DEBUG this => D#794
  # DEBUG D#793 => D#794
  if (__len_167 != 0)
    goto <bb 44>;
  else
    goto <bb 46>;

<L25>:
  # DEBUG __new_finish => __new_finish_156
  _127 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_127);
  if (__new_finish_156 == 0B)
    goto <bb 91>;
  else
    goto <bb 90>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE24_M_new_elements_at_frontEm, funcdef_no=3448, decl_uid=53552, cgraph_uid=1908, symbol_order=1909)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Credit * * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  struct Credit * * * _14;
  struct Credit * * _16;
  struct Credit * * * _17;
  long unsigned int _18;
  sizetype _19;
  struct Credit * * * _20;
  void * _23;
  struct Credit * * * _25;
  long unsigned int _26;
  sizetype _27;
  struct Credit * * * _28;
  struct Credit * * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct Credit * * _39;
  long int _40;
  struct Credit * * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  struct Credit * * _46;
  long int _47;
  struct Credit * * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  struct Credit * * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#1294 => this_6(D)
  # DEBUG this => D#1294
  # DEBUG D#1293 => D#1294
  # DEBUG D#1292 => &D#1293->D.53612
  # DEBUG this => D#1292
  # DEBUG __a => D#1291
  # DEBUG D#1290 => D#1291
  # DEBUG D#875 => D#1290
  # DEBUG this => D#875
  # DEBUG this => this_6(D)
  # DEBUG D#214 => &MEM[(const struct deque *)this_6(D)].D.53612._M_impl._M_start
  # DEBUG D#215 => &MEM[(const struct deque *)this_6(D)].D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 64;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 8;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 2305843009213693951 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 8
  _13 = __new_elems_11(D) + 63;
  # DEBUG __size => 8
  __new_nodes_15 = _13 >> 6;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.53612._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.53612._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#1296 => &this_6(D)->D.53612
  # DEBUG D#883 => D#1296
  # DEBUG this => D#883
  # DEBUG D#882 => D#883
  # DEBUG __size => 8
  # DEBUG D#881 => &D#882->_M_impl
  # DEBUG D#880 => D#881
  # DEBUG __n => NULL
  # DEBUG __a => D#880
  # DEBUG D#879 => D#880
  # DEBUG D#877 => D#879
  # DEBUG D#878 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#877
  # DEBUG D.87605 => D#878
  # DEBUG D#876 => D#877
  # DEBUG D#875 => D#876
  # DEBUG this => D#875
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.53612._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#1295 => &this_6(D)->D.53612
  # DEBUG this => D#1295
  # DEBUG __p => _29
  # DEBUG __size => 8
  # DEBUG D#629 => &D#1295->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _29
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _29
  # DEBUG this => D#623
  # DEBUG D.87615 => D#624
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE23_M_new_elements_at_backEm, funcdef_no=3450, decl_uid=53555, cgraph_uid=1910, symbol_order=1911)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Credit * * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  struct Credit * * * _13;
  struct Credit * * * _16;
  long unsigned int _17;
  struct Credit * * * _18;
  void * _21;
  struct Credit * * * _23;
  long unsigned int _24;
  struct Credit * * * _25;
  struct Credit * * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  struct Credit * * _35;
  long int _36;
  struct Credit * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  struct Credit * * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  struct Credit * * _50;
  long unsigned int _53;
  long unsigned int _54;
  struct Credit * * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#1294 => this_6(D)
  # DEBUG this => D#1294
  # DEBUG D#1293 => D#1294
  # DEBUG D#1292 => &D#1293->D.53612
  # DEBUG this => D#1292
  # DEBUG __a => D#1291
  # DEBUG D#1290 => D#1291
  # DEBUG D#875 => D#1290
  # DEBUG this => D#875
  # DEBUG this => this_6(D)
  # DEBUG D#214 => &MEM[(const struct deque *)this_6(D)].D.53612._M_impl._M_start
  # DEBUG D#215 => &MEM[(const struct deque *)this_6(D)].D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 64;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 2305843009213693951 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 8
  _12 = __new_elems_10(D) + 63;
  # DEBUG __size => 8
  __new_nodes_14 = _12 >> 6;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.53612._M_impl._M_map_size;
  _57 = this_6(D)->D.53612._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.53612._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#1298 => &this_6(D)->D.53612
  # DEBUG D#883 => D#1298
  # DEBUG this => D#883
  # DEBUG D#882 => D#883
  # DEBUG __size => 8
  # DEBUG D#881 => &D#882->_M_impl
  # DEBUG D#880 => D#881
  # DEBUG __n => NULL
  # DEBUG __a => D#880
  # DEBUG D#879 => D#880
  # DEBUG D#877 => D#879
  # DEBUG D#878 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#877
  # DEBUG D.87633 => D#878
  # DEBUG D#876 => D#877
  # DEBUG D#875 => D#876
  # DEBUG this => D#875
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.53612._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#1297 => &this_6(D)->D.53612
  # DEBUG this => D#1297
  # DEBUG __p => _26
  # DEBUG __size => 8
  # DEBUG D#629 => &D#1297->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _26
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _26
  # DEBUG this => D#623
  # DEBUG D.87643 => D#624
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE13_M_insert_auxISt15_Deque_iteratorIS1_RKS1_PS6_EEEvS5_IS1_RS1_PS1_ET_SD_m, funcdef_no=3428, decl_uid=63793, cgraph_uid=1888, symbol_order=1889)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3685;
  struct Credit * * SR.3684;
  struct Credit * * SR.3683;
  struct Credit * * SR.3682;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __last$24;
  struct Credit * * __last$8;
  struct Credit * * __last;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last1$_M_node;
  struct Credit * * __last1$_M_last;
  struct Credit * * __last1$_M_first;
  struct Credit * * __last1$_M_cur;
  struct Credit * * * __first1$_M_node;
  struct Credit * * __first1$_M_last;
  struct Credit * * __first1$_M_first;
  struct Credit * * __first1$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * SR.3631;
  struct Credit * * SR.3630;
  struct Credit * * SR.3629;
  struct Credit * * * SR.3628;
  struct Credit * * SR.3627;
  struct Credit * * SR.3626;
  struct Credit * * SR.3625;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3613;
  struct Credit * * SR.3612;
  struct Credit * * SR.3611;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __last$24;
  struct Credit * * __last$8;
  struct Credit * * __last;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last2$_M_node;
  struct Credit * * __last2$_M_last;
  struct Credit * * __last2$_M_first;
  struct Credit * * __last2$_M_cur;
  struct Credit * * * __first2$_M_node;
  struct Credit * * __first2$_M_last;
  struct Credit * * __first2$_M_first;
  struct Credit * * __first2$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * SR.3551;
  struct Credit * * SR.3550;
  struct Credit * * SR.3549;
  struct Credit * * SR.3548;
  struct Credit * * * __new_finish$_M_node;
  struct Credit * * __new_finish$_M_last;
  struct Credit * * __new_finish$_M_first;
  struct Credit * * __new_finish$_M_cur;
  struct Credit * * * SR.3543;
  struct Credit * * SR.3542;
  struct Credit * * SR.3541;
  struct Credit * * SR.3540;
  struct Credit * * * __new_start$_M_node;
  struct Credit * * __new_start$_M_last;
  struct Credit * * __new_start$_M_first;
  struct Credit * * __new_start$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97967;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.97942;
  struct _Deque_iterator D.97941;
  struct _Deque_iterator D.97940;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97922;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.97908;
  struct _Deque_iterator D.97907;
  struct _Deque_iterator D.97906;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97905;
  struct _Deque_iterator D.97904;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  const ptrdiff_t _Num;
  struct Credit * * D.97882;
  const difference_type __offset;
  struct _Self & D.97864;
  const difference_type __offset;
  struct _Self & D.97857;
  difference_type __len;
  difference_type __llen;
  struct Credit * * __lend;
  difference_type __rlen;
  struct Credit * * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  const difference_type __offset;
  struct _Self & D.97827;
  struct _Self __tmp;
  struct _Deque_iterator D.97811;
  struct _Deque_iterator D.97810;
  struct _Deque_iterator D.97809;
  struct _Deque_iterator D.97808;
  const difference_type __offset;
  struct _Self & D.97798;
  const difference_type __offset;
  struct _Self & D.97791;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97746;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.97721;
  struct _Deque_iterator D.97720;
  struct _Deque_iterator D.97719;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97701;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.97687;
  struct _Deque_iterator D.97686;
  struct _Deque_iterator D.97685;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.97684;
  struct _Deque_iterator D.97683;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  const difference_type __offset;
  struct _Self & D.97661;
  const difference_type __offset;
  struct _Self & D.97654;
  struct _Self __tmp;
  struct _Deque_iterator D.97640;
  struct _Deque_iterator D.97639;
  struct _Deque_iterator D.97638;
  struct _Deque_iterator D.97637;
  struct _Self __tmp;
  const difference_type __offset;
  struct _Self & D.97618;
  const difference_type __offset;
  struct _Self & D.97611;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.64102;
  struct _Deque_iterator D.64096;
  struct _Deque_iterator D.64097;
  struct _Deque_iterator D.64098;
  struct _Deque_iterator D.64083;
  struct _Deque_iterator D.64077;
  struct _Deque_iterator D.64078;
  struct _Deque_iterator D.64079;
  struct _Deque_iterator D.64065;
  struct _Deque_iterator D.64066;
  struct _Deque_iterator D.64067;
  struct _Self D.64062;
  struct _Deque_iterator D.64055;
  struct _Deque_iterator D.64047;
  struct _Deque_iterator D.64048;
  struct _Deque_iterator D.64051;
  struct _Self D.64031;
  struct _Deque_iterator D.64027;
  struct _Deque_iterator D.64028;
  struct _Deque_iterator D.64029;
  struct _Deque_iterator D.64015;
  struct _Deque_iterator D.64016;
  struct _Deque_iterator D.64017;
  struct _Self D.64007;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.166_10;
  struct Credit * * _28;
  struct Credit * * _29;
  long int _38;
  struct Credit * * _42;
  struct Credit * * _48;
  struct Credit * * _57;
  long int _62;
  struct Credit * * _71;
  struct Credit * * _75;
  struct Credit * * * _80;
  struct Credit * * _82;
  struct Credit * * _88;
  long int _93;
  long int _94;
  struct Credit * * _95;
  long int _96;
  struct Credit * * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  struct Credit * * * _104;
  long int _105;
  struct Credit * * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  struct Credit * * _112;
  long int _113;
  struct Credit * * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  struct Credit * * _119;
  long int _120;
  struct Credit * * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  struct Credit * * _133;
  struct Credit * * _134;
  struct Credit * * * _135;
  struct Credit * * _145;
  struct Credit * * _146;
  struct Credit * * * _147;
  struct Credit * * _148;
  struct Credit * * _149;
  struct Credit * * * _150;
  struct Credit * * _157;
  struct Credit * * _161;
  struct Credit * * * _162;
  struct Credit * * const pretmp_170;
  struct Credit * * const prephitmp_171;
  struct Credit * * _172;
  struct Credit * * _173;
  struct Credit * * _174;
  struct Credit * * * _175;
  struct Credit * * _176;
  struct Credit * * _177;
  struct Credit * * * _178;
  struct Credit * * _179;
  struct Credit * * _180;
  struct Credit * * * _181;
  struct Credit * * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.153_284;
  long int _289;
  long unsigned int __n.149_303;
  long unsigned int _304;
  long int iftmp.150_306;
  long unsigned int _308;
  long unsigned int _309;
  long int _310;
  long int iftmp.150_311;
  long int iftmp.150_313;
  long unsigned int __node_offset.152_314;
  long unsigned int _315;
  long int _319;
  long int _320;
  long unsigned int _321;
  long unsigned int _322;
  long unsigned int _333;
  long int iftmp.150_335;
  long unsigned int _337;
  long unsigned int _338;
  long int _339;
  long int iftmp.150_340;
  long int iftmp.150_342;
  long unsigned int __node_offset.152_343;
  long unsigned int _344;
  long int _348;
  long int _349;
  long unsigned int _350;
  long unsigned int _351;
  struct Credit * * _353;
  long int _382;
  long int _384;
  long int _385;
  long int _386;
  long unsigned int _390;
  long int iftmp.150_392;
  long unsigned int _394;
  long unsigned int _395;
  long int _396;
  long int iftmp.150_397;
  long int iftmp.150_399;
  long unsigned int __node_offset.152_400;
  long unsigned int _401;
  long int _405;
  long int _406;
  long unsigned int _407;
  long unsigned int _408;
  long int _411;
  long int _413;
  long int _414;
  long int _415;
  long unsigned int __n.149_418;
  long unsigned int _419;
  long int iftmp.150_421;
  long unsigned int _423;
  long unsigned int _424;
  long int _425;
  long int iftmp.150_426;
  long int iftmp.150_428;
  long unsigned int __node_offset.152_429;
  long unsigned int _430;
  long int _434;
  long int _435;
  long unsigned int _436;
  long unsigned int _437;
  struct Credit * * _451;
  struct Credit * * _453;
  struct Credit * * * _454;
  struct Credit * * const pretmp_464;
  long int _483;
  long int _485;
  long int _486;
  long int _487;
  long int _488;
  long int _489;
  long int _491;
  long int _493;
  long int _494;
  long int _495;
  long int _496;
  unsigned long _497;
  long int _498;
  long int _500;
  long int _501;
  long int _502;
  long int pretmp_505;
  long int prephitmp_506;
  struct Credit * _507;
  unsigned long _508;
  unsigned long _511;
  struct Credit * * _512;
  long int prephitmp_513;
  struct Credit * * * _524;
  struct Credit * * _525;
  struct Credit * * _526;
  long int __len.170_529;
  long int _531;
  long int _537;
  unsigned long _538;
  unsigned long _539;
  long int _540;
  long int _541;
  long int _542;
  long unsigned int _544;
  long int __n.164_545;
  unsigned long _555;
  unsigned long _557;
  unsigned long _563;
  long unsigned int _564;
  long int iftmp.150_566;
  long unsigned int _568;
  long unsigned int _569;
  long int _570;
  long int iftmp.150_571;
  unsigned long _572;
  long int iftmp.150_573;
  long unsigned int __node_offset.152_574;
  long unsigned int _575;
  long int _579;
  long int _580;
  long unsigned int _581;
  long unsigned int _582;
  long unsigned int __n.149_592;
  long unsigned int _593;
  long int iftmp.150_595;
  long unsigned int _597;
  long unsigned int _598;
  long int _599;
  long int iftmp.150_600;
  long int iftmp.150_602;
  long unsigned int __node_offset.152_603;
  long unsigned int _604;
  long int _608;
  long int _609;
  long unsigned int _610;
  long unsigned int _611;
  long int _628;
  long int _634;
  long int _636;
  long int _637;
  long int _638;
  long unsigned int __n.149_641;
  long unsigned int _642;
  long int iftmp.150_644;
  long int prephitmp_645;
  long unsigned int _646;
  long unsigned int _647;
  long int _648;
  long int iftmp.150_649;
  long int iftmp.150_651;
  long unsigned int __node_offset.152_652;
  long unsigned int _653;
  long int _657;
  long int _658;
  long unsigned int _659;
  long unsigned int _660;
  long int _663;
  long int _665;
  long int _666;
  long int _667;
  long int _668;
  long int _669;
  long int _671;
  long int _674;
  long int _675;
  long int _676;
  long int _678;
  long int _680;
  long int _681;
  long int _682;
  struct Credit * * * const pretmp_685;
  long int _686;
  struct Credit * * * const prephitmp_687;
  long int _688;
  long int _689;
  long int _692;
  long int _694;
  long int _695;
  struct Credit * * _698;
  struct Credit * * _701;
  long unsigned int __clen.179_709;
  long unsigned int _710;
  sizetype _711;
  struct Credit * * _713;
  long int _715;
  struct Credit * * const pretmp_721;
  struct Credit * * const prephitmp_722;
  struct Credit * * const pretmp_723;
  struct Credit * * const prephitmp_724;
  struct Credit * * const pretmp_725;
  struct Credit * * const prephitmp_726;
  long unsigned int __n.149_729;
  long unsigned int _730;
  struct Credit * * _731;
  long int iftmp.150_732;
  long int pretmp_733;
  long unsigned int _734;
  long unsigned int _735;
  long int _736;
  long int iftmp.150_737;
  long int prephitmp_738;
  long int iftmp.150_739;
  long unsigned int __node_offset.152_740;
  long unsigned int _741;
  struct Credit * * * _742;
  struct Credit * * _743;
  long int _745;
  long int _746;
  long unsigned int _747;
  long unsigned int _748;
  struct Credit * * _749;
  long unsigned int __n.136_758;
  long unsigned int _759;
  long int iftmp.137_761;
  struct Credit * * * const pretmp_762;
  long unsigned int _763;
  long unsigned int _764;
  long int _765;
  long int iftmp.137_766;
  struct Credit * * * const prephitmp_767;
  long int iftmp.137_768;
  long unsigned int __node_offset.139_769;
  long unsigned int _770;
  long int _774;
  long int _775;
  long unsigned int _776;
  long unsigned int _777;
  long int __first.182_780;
  long int _781;
  long unsigned int _783;
  sizetype _784;
  struct Credit * * _785;
  long int _833;
  long int _835;
  long int _836;
  long int _837;
  long int _838;
  long int _839;
  long int _841;
  long int _843;
  long int _844;
  long int _845;
  long int _846;
  long int _848;
  long int _850;
  long int _851;
  long int _852;
  struct Credit * _857;
  struct Credit * * _862;
  long int pretmp_863;
  struct Credit * * * _874;
  struct Credit * * _875;
  struct Credit * * _876;
  long int _881;
  long int pretmp_929;
  struct Credit * * const pretmp_1011;
  struct Credit * * const prephitmp_1012;
  struct Credit * * const prephitmp_1013;
  struct Credit * * const pretmp_1018;
  struct Credit * * const prephitmp_1019;
  struct Credit * * const pretmp_1020;
  struct Credit * * const prephitmp_1021;
  struct Credit * * * const pretmp_1022;
  struct Credit * * * const prephitmp_1027;
  long int pretmp_1028;
  long int pretmp_1030;
  long int pretmp_1099;
  long int pretmp_1118;
  long int pretmp_1137;
  long int pretmp_1160;

  <bb 2>:
  # DEBUG D#1402 => &this_4(D)->D.53612._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#1402
  # DEBUG __size => 8
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 64;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 8;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 8;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#214 => &MEM[(const struct deque *)this_4(D)].D.53612._M_impl._M_start
  # DEBUG D#215 => &MEM[(const struct deque *)this_4(D)].D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 64;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 8;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.166_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.166_10)
    goto <bb 3>;
  else
    goto <bb 33>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.53612._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 8;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_721 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_723 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_725 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_762 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  pretmp_929 = (long int) pretmp_721;
  pretmp_1099 = (long int) pretmp_723;
  pretmp_1118 = pretmp_929 - pretmp_1099;
  pretmp_733 = pretmp_1118 /[ex] 8;

  <bb 5>:
  # prephitmp_722 = PHI <_121(3), pretmp_721(4)>
  # prephitmp_724 = PHI <_278(3), pretmp_723(4)>
  # prephitmp_726 = PHI <_119(3), pretmp_725(4)>
  # prephitmp_767 = PHI <_106(3), pretmp_762(4)>
  # prephitmp_738 = PHI <_281(3), pretmp_733(4)>
  __n.153_284 = (long int) __n_11(D);
  # DEBUG D#1947 => &this_4(D)->D.53612._M_impl._M_start
  # DEBUG this => D#1947
  # DEBUG __n => __n.153_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#1947
  # DEBUG D#1977 => MEM[(const struct iterator &)this_4(D) + 16]._M_cur
  # DEBUG D#1976 => MEM[(const struct iterator &)this_4(D) + 16]._M_first
  # DEBUG __tmp$_M_first => D#1976
  # DEBUG D#1975 => MEM[(const struct iterator &)this_4(D) + 16]._M_last
  # DEBUG __tmp$_M_last => D#1975
  # DEBUG D#1974 => MEM[(const struct iterator &)this_4(D) + 16]._M_node
  # DEBUG __tmp$_M_node => D#1974
  # DEBUG this => &__tmp
  # DEBUG __n => __n.153_284
  _289 = -__n.153_284;
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  __offset_301 = prephitmp_738 - __n.153_284;
  # DEBUG __offset => __offset_301
  # DEBUG __size => 8
  _572 = (unsigned long) __offset_301;
  if (_572 <= 63)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 6>:
  # DEBUG __size => 8
  iftmp.150_306 = __offset_301 >> 6;
  goto <bb 8>;

  <bb 7>:
  _308 = ~_572;
  # DEBUG __size => 8
  _309 = _308 >> 6;
  _310 = (long int) _309;
  iftmp.150_311 = ~_310;

  <bb 8>:
  # iftmp.150_313 = PHI <iftmp.150_306(6), iftmp.150_311(7)>
  # DEBUG __node_offset => iftmp.150_313
  __node_offset.152_314 = (long unsigned int) iftmp.150_313;
  _315 = __node_offset.152_314 * 8;
  __new_start$_M_node_316 = prephitmp_767 + _315;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_start$_M_node_316
  # DEBUG __tmp$_M_node => __new_start$_M_node_316
  __new_start$_M_first_317 = *__new_start$_M_node_316;
  # DEBUG __tmp$_M_first => __new_start$_M_first_317
  # DEBUG __size => 8
  __new_start$_M_last_318 = __new_start$_M_first_317 + 512;
  # DEBUG __tmp$_M_last => __new_start$_M_last_318
  # DEBUG __size => 8
  _319 = iftmp.150_313 * 64;
  _320 = __offset_301 - _319;
  _321 = (long unsigned int) _320;
  _322 = _321 * 8;
  __new_start$_M_cur_323 = __new_start$_M_first_317 + _322;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_323

  <bb 9>:
  # __new_start$_M_cur_1062 = PHI <__new_start$_M_cur_305(78), __new_start$_M_cur_323(8)>
  # __new_start$_M_first_964 = PHI <prephitmp_724(78), __new_start$_M_first_317(8)>
  # __new_start$_M_last_933 = PHI <prephitmp_726(78), __new_start$_M_last_318(8)>
  # __new_start$_M_node_918 = PHI <prephitmp_767(78), __new_start$_M_node_316(8)>
  # DEBUG __tmp$_M_node => __new_start$_M_node_918
  # DEBUG __tmp$_M_last => __new_start$_M_last_933
  # DEBUG __tmp$_M_first => __new_start$_M_first_964
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_1062
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_1062
  # DEBUG __new_start$_M_first => __new_start$_M_first_964
  # DEBUG __new_start$_M_last => __new_start$_M_last_933
  # DEBUG __new_start$_M_node => __new_start$_M_node_918
  __tmp ={v} {CLOBBER};
  # DEBUG D#1403 => &this_4(D)->D.53612._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#1403
  # DEBUG __old_start$_M_cur => D#1977
  # DEBUG __old_start$_M_first => D#1976
  # DEBUG __old_start$_M_last => D#1975
  # DEBUG __old_start$_M_node => D#1974
  # DEBUG D#1948 => &this_4(D)->D.53612._M_impl._M_start
  # DEBUG this => D#1948
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#1948
  # DEBUG __tmp$_M_first => D#1976
  # DEBUG __tmp$_M_last => D#1975
  # DEBUG __tmp$_M_node => D#1974
  # DEBUG this => &__tmp
  # DEBUG __n => _125
  __offset_330 = _125 + prephitmp_738;
  # DEBUG __offset => __offset_330
  # DEBUG __size => 8
  _563 = (unsigned long) __offset_330;
  if (_563 <= 63)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 10>:
  # DEBUG __size => 8
  iftmp.150_335 = __offset_330 >> 6;
  goto <bb 12>;

  <bb 11>:
  _337 = ~_563;
  # DEBUG __size => 8
  _338 = _337 >> 6;
  _339 = (long int) _338;
  iftmp.150_340 = ~_339;

  <bb 12>:
  # iftmp.150_342 = PHI <iftmp.150_335(10), iftmp.150_340(11)>
  # DEBUG __node_offset => iftmp.150_342
  __node_offset.152_343 = (long unsigned int) iftmp.150_342;
  _344 = __node_offset.152_343 * 8;
  SR.3543_345 = prephitmp_767 + _344;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.3543_345
  # DEBUG __tmp$_M_node => SR.3543_345
  SR.3541_346 = *SR.3543_345;
  # DEBUG __tmp$_M_first => SR.3541_346
  # DEBUG __size => 8
  SR.3542_347 = SR.3541_346 + 512;
  # DEBUG __tmp$_M_last => SR.3542_347
  # DEBUG __size => 8
  _348 = iftmp.150_342 * 64;
  _349 = __offset_330 - _348;
  _350 = (long unsigned int) _349;
  _351 = _350 * 8;
  SR.3540_352 = SR.3541_346 + _351;
  # DEBUG __tmp$_M_cur => SR.3540_352

  <bb 13>:
  # SR.3540_1130 = PHI <SR.3540_334(80), SR.3540_352(12)>
  # SR.3541_1124 = PHI <prephitmp_724(80), SR.3541_346(12)>
  # SR.3542_1092 = PHI <prephitmp_726(80), SR.3542_347(12)>
  # SR.3543_1077 = PHI <prephitmp_767(80), SR.3543_345(12)>
  # DEBUG __tmp$_M_node => SR.3543_1077
  # DEBUG __tmp$_M_last => SR.3542_1092
  # DEBUG __tmp$_M_first => SR.3541_1124
  # DEBUG __tmp$_M_cur => SR.3540_1130
  # DEBUG this => &D.64007
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.3540_1130;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.3541_1124;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.3542_1092;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.3543_1077;
  if (_125 >= __n.153_284)
    goto <bb 14>;
  else
    goto <bb 23>;

  <bb 14>:
  # DEBUG this => D#1948
  # DEBUG __n => __n.153_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#1948
  _29 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp$_M_first_374 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  # DEBUG __tmp$_M_first => __tmp$_M_first_374
  __tmp$_M_last_375 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  # DEBUG __tmp$_M_last => __tmp$_M_last_375
  __tmp$_M_node_376 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __tmp$_M_node => __tmp$_M_node_376
  # DEBUG this => &__tmp
  # DEBUG __n => __n.153_284
  _382 = (long int) _29;
  _384 = (long int) __tmp$_M_first_374;
  _385 = _382 - _384;
  _386 = _385 /[ex] 8;
  __offset_387 = __n.153_284 + _386;
  # DEBUG __offset => __offset_387
  # DEBUG __size => 8
  _555 = (unsigned long) __offset_387;
  if (_555 <= 63)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 15>:
  # DEBUG __size => 8
  iftmp.150_392 = __offset_387 >> 6;
  goto <bb 17>;

  <bb 16>:
  _394 = ~_555;
  # DEBUG __size => 8
  _395 = _394 >> 6;
  _396 = (long int) _395;
  iftmp.150_397 = ~_396;

  <bb 17>:
  # iftmp.150_399 = PHI <iftmp.150_392(15), iftmp.150_397(16)>
  # DEBUG __node_offset => iftmp.150_399
  __node_offset.152_400 = (long unsigned int) iftmp.150_399;
  _401 = __node_offset.152_400 * 8;
  __tmp$_M_node_402 = __tmp$_M_node_376 + _401;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_402
  # DEBUG __tmp$_M_node => __tmp$_M_node_402
  __tmp$_M_first_403 = *__tmp$_M_node_402;
  # DEBUG __tmp$_M_first => __tmp$_M_first_403
  # DEBUG __size => 8
  __tmp$_M_last_404 = __tmp$_M_first_403 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_404
  # DEBUG __size => 8
  _405 = iftmp.150_399 * 64;
  _406 = __offset_387 - _405;
  _407 = (long unsigned int) _406;
  _408 = _407 * 8;
  __tmp$_M_cur_409 = __tmp$_M_first_403 + _408;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_409

  <bb 18>:
  # __tmp$_M_cur_1202 = PHI <__tmp$_M_cur_391(82), __tmp$_M_cur_409(17)>
  # __tmp$_M_first_1201 = PHI <__tmp$_M_first_374(82), __tmp$_M_first_403(17)>
  # __tmp$_M_last_1200 = PHI <__tmp$_M_last_375(82), __tmp$_M_last_404(17)>
  # __tmp$_M_node_1199 = PHI <__tmp$_M_node_376(82), __tmp$_M_node_402(17)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_1199
  # DEBUG __tmp$_M_last => __tmp$_M_last_1200
  # DEBUG __tmp$_M_first => __tmp$_M_first_1201
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_1202
  # DEBUG this => &__start_n
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  # DEBUG D#1404 => &this_4(D)->D.53612
  # DEBUG this => D#1404
  # DEBUG this => &D.64017
  # DEBUG __x => &__new_start
  D.64017._M_cur = __new_start$_M_cur_1062;
  D.64017._M_first = __new_start$_M_first_964;
  D.64017._M_last = __new_start$_M_last_933;
  D.64017._M_node = __new_start$_M_node_918;
  # DEBUG this => &D.64016
  # DEBUG __x => &__start_n
  D.64016._M_cur = __tmp$_M_cur_1202;
  D.64016._M_first = __tmp$_M_first_1201;
  D.64016._M_last = __tmp$_M_last_1200;
  D.64016._M_node = __tmp$_M_node_1199;
  # DEBUG D#1405 => &this_4(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.64015
  # DEBUG __x => D#1405
  D.64015._M_cur = _29;
  D.64015._M_first = __tmp$_M_first_374;
  D.64015._M_last = __tmp$_M_last_375;
  D.64015._M_node = __tmp$_M_node_376;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.332 (&D.64015, &D.64016, &D.64017);
  D.64015 ={v} {CLOBBER};
  D.64016 ={v} {CLOBBER};
  D.64017 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_1062;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_964;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_933;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_918;
  # DEBUG this => &D.64029
  # DEBUG __x => &__old_start
  # DEBUG this => &D.64028
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.64027
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.64027
  # DEBUG __last => &D.64028
  # DEBUG __result => &D.64029
  # DEBUG this => &D.97640
  # DEBUG __x => &D.64029
  D.97640._M_cur = prephitmp_722;
  D.97640._M_first = prephitmp_724;
  D.97640._M_last = prephitmp_726;
  D.97640._M_node = prephitmp_767;
  # DEBUG this => &D.97639
  # DEBUG __x => &D.64028
  D.97639._M_cur = _28;
  D.97639._M_first = _133;
  D.97639._M_last = _134;
  D.97639._M_node = _135;
  # DEBUG this => &D.97638
  # DEBUG __x => &D.64027
  D.97638._M_cur = __tmp$_M_cur_1202;
  D.97638._M_first = __tmp$_M_first_1201;
  D.97638._M_last = __tmp$_M_last_1200;
  D.97638._M_node = __tmp$_M_node_1199;
  D.97637 = std::copy<Credit*> (D.97638, D.97639, &D.97640); [return slot optimization]
  D.97638 ={v} {CLOBBER};
  D.97639 ={v} {CLOBBER};
  D.97640 ={v} {CLOBBER};
  D.64027 ={v} {CLOBBER};
  D.64028 ={v} {CLOBBER};
  D.64029 ={v} {CLOBBER};
  # DEBUG this => __pos_6(D)
  # DEBUG __n => __n.153_284
  # DEBUG this => &__tmp
  # DEBUG __x => __pos_6(D)
  _353 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  __tmp$_M_first_354 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  # DEBUG __tmp$_M_first => __tmp$_M_first_354
  __tmp$_M_last_355 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  # DEBUG __tmp$_M_last => __tmp$_M_last_355
  __tmp$_M_node_356 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __tmp$_M_node => __tmp$_M_node_356
  # DEBUG this => &__tmp
  # DEBUG __n => __n.153_284
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  _411 = (long int) _353;
  _413 = (long int) __tmp$_M_first_354;
  _414 = _411 - _413;
  _415 = _414 /[ex] 8;
  __offset_416 = _415 - __n.153_284;
  # DEBUG __offset => __offset_416
  # DEBUG __size => 8
  _557 = (unsigned long) __offset_416;
  if (_557 <= 63)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 19>:
  # DEBUG __size => 8
  iftmp.150_421 = __offset_416 >> 6;
  goto <bb 21>;

  <bb 20>:
  _423 = ~_557;
  # DEBUG __size => 8
  _424 = _423 >> 6;
  _425 = (long int) _424;
  iftmp.150_426 = ~_425;

  <bb 21>:
  # iftmp.150_428 = PHI <iftmp.150_421(19), iftmp.150_426(20)>
  # DEBUG __node_offset => iftmp.150_428
  __node_offset.152_429 = (long unsigned int) iftmp.150_428;
  _430 = __node_offset.152_429 * 8;
  __tmp$_M_node_431 = __tmp$_M_node_356 + _430;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_431
  # DEBUG __tmp$_M_node => __tmp$_M_node_431
  __tmp$_M_first_432 = *__tmp$_M_node_431;
  # DEBUG __tmp$_M_first => __tmp$_M_first_432
  # DEBUG __size => 8
  __tmp$_M_last_433 = __tmp$_M_first_432 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_433
  # DEBUG __size => 8
  _434 = iftmp.150_428 * 64;
  _435 = __offset_416 - _434;
  _436 = (long unsigned int) _435;
  _437 = _436 * 8;
  __tmp$_M_cur_438 = __tmp$_M_first_432 + _437;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_438

  <bb 22>:
  # __tmp$_M_cur_903 = PHI <__tmp$_M_cur_420(84), __tmp$_M_cur_438(21)>
  # __tmp$_M_first_92 = PHI <__tmp$_M_first_354(84), __tmp$_M_first_432(21)>
  # __tmp$_M_last_87 = PHI <__tmp$_M_last_355(84), __tmp$_M_last_433(21)>
  # __tmp$_M_node_1203 = PHI <__tmp$_M_node_356(84), __tmp$_M_node_431(21)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_1203
  # DEBUG __tmp$_M_last => __tmp$_M_last_87
  # DEBUG __tmp$_M_first => __tmp$_M_first_92
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_903
  # DEBUG this => &D.64031
  # DEBUG __x => NULL
  D.64031._M_cur = __tmp$_M_cur_903;
  D.64031._M_first = __tmp$_M_first_92;
  D.64031._M_last = __tmp$_M_last_87;
  D.64031._M_node = __tmp$_M_node_1203;
  __tmp ={v} {CLOBBER};
  std::copy<Credit*> (__first, __last, &D.64031);
  D.64031 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 32>;

  <bb 23>:
  __mid = __first;
  _38 = __n.153_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#1251 => &__mid
  # DEBUG D.87532 => D#1251
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>::operator+= (&__mid, _38);
  # DEBUG D#1406 => &this_4(D)->D.53612
  # DEBUG this => D#1406
  # DEBUG D#1952 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.64051
  # DEBUG __x => &__new_start
  # DEBUG this => &D.64048
  # DEBUG __x => __pos_6(D)
  _42 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _148 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _149 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _150 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG D#1407 => &this_4(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.64047
  # DEBUG __x => D#1407
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _145 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.64047
  # DEBUG __last1 => &D.64048
  __first$_M_cur_932 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first2$_M_cur => __first$_M_cur_932
  # DEBUG D#1967 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first2$_M_first => D#1967
  __first$_M_last_930 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first2$_M_last => __first$_M_last_930
  __first$_M_node_17 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first2$_M_node => __first$_M_node_17
  __last_16 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __last2$_M_cur => __last_16
  __last$8_927 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __last2$_M_first => __last$8_927
  # DEBUG D#1966 => MEM[(struct _Deque_iterator *)&__mid + 16B]
  # DEBUG __last2$_M_last => D#1966
  __last$24_925 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __last2$_M_node => __last$24_925
  # DEBUG __result => &D.64051
  # DEBUG __alloc => D#1952
  # DEBUG this => &D.97687
  # DEBUG __x => &D.64051
  D.97687._M_cur = __new_start$_M_cur_1062;
  D.97687._M_first = __new_start$_M_first_964;
  D.97687._M_last = __new_start$_M_last_933;
  D.97687._M_node = __new_start$_M_node_918;
  # DEBUG this => &D.97686
  # DEBUG __x => &D.64048
  D.97686._M_cur = _42;
  D.97686._M_first = _148;
  D.97686._M_last = _149;
  D.97686._M_node = _150;
  # DEBUG this => &D.97685
  # DEBUG __x => &D.64047
  D.97685._M_cur = _48;
  D.97685._M_first = _145;
  D.97685._M_last = _146;
  D.97685._M_node = _147;
  # DEBUG D#1401 => D#1952
  __mid = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.332 (&D.97685, &D.97686, &D.97687); [return slot optimization]
  D.97685 ={v} {CLOBBER};
  D.97686 ={v} {CLOBBER};
  D.97687 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  _451 = __mid._M_cur;
  _453 = __mid._M_last;
  _454 = __mid._M_node;
  # DEBUG D#976 => D#1952
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#1967
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_17
  # DEBUG __last$_M_cur => __last_16
  # DEBUG __last$_M_first => __last$8_927
  # DEBUG __last$_M_last => D#1966
  # DEBUG __last$_M_node => __last$24_925
  # DEBUG __result => NULL
  # DEBUG D.97677 => D#976
  # DEBUG this => &D.97684
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#1967
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_17
  # DEBUG __last$_M_cur => __last_16
  # DEBUG __last$_M_first => __last$8_927
  # DEBUG __last$_M_last => D#1966
  # DEBUG __last$_M_node => __last$24_925
  # DEBUG __result => &D.97684
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.97684
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#1967
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_17
  # DEBUG __last$_M_cur => __last_16
  # DEBUG __last$_M_first => __last$8_927
  # DEBUG __last$_M_last => D#1966
  # DEBUG __last$_M_node => __last$24_925
  # DEBUG __result => NULL
  # DEBUG this => &D.97701
  # DEBUG __x => NULL
  # DEBUG __first => __first$_M_cur_932
  # DEBUG __first$8 => D#1967
  # DEBUG __first$16 => __first$_M_last_930
  # DEBUG __first$24 => __first$_M_node_17
  # DEBUG __last => __last_16
  # DEBUG __last$8 => __last$8_927
  # DEBUG __last$_M_last => D#1966
  # DEBUG __last$24 => __last$24_925
  # DEBUG __result => &D.97701
  # DEBUG this => &D.97721
  # DEBUG __x => &D.97701
  # DEBUG __it => __last_16
  # DEBUG __it$8 => __last$8_927
  # DEBUG D#1951 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#1951
  # DEBUG __it$24 => __last$24_925
  # DEBUG __it$_M_cur => __last_16
  # DEBUG __it$_M_first => __last$8_927
  # DEBUG __it$_M_last => D#1951
  # DEBUG __it$_M_node => __last$24_925
  # DEBUG __it => __first$_M_cur_932
  # DEBUG __it$8 => D#1967
  # DEBUG __it$16 => __first$_M_last_930
  # DEBUG __it$24 => __first$_M_node_17
  # DEBUG __it$_M_cur => __first$_M_cur_932
  # DEBUG __it$_M_first => D#1967
  # DEBUG __it$_M_last => __first$_M_last_930
  # DEBUG __it$_M_node => __first$_M_node_17
  # DEBUG __result => &D.97721
  # DEBUG this => NULL
  # DEBUG __x => &D.97721
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_16
  # DEBUG __it$8 => __last$8_927
  # DEBUG __it$16 => D#1951
  # DEBUG __it$24 => __last$24_925
  # DEBUG __it$_M_cur => __last_16
  # DEBUG __it$_M_first => __last$8_927
  # DEBUG __it$_M_last => D#1951
  # DEBUG __it$_M_node => __last$24_925
  # DEBUG __it => __first$_M_cur_932
  # DEBUG __it$8 => D#1967
  # DEBUG __it$16 => __first$_M_last_930
  # DEBUG __it$24 => __first$_M_node_17
  # DEBUG __it$_M_cur => __first$_M_cur_932
  # DEBUG __it$_M_first => D#1967
  # DEBUG __it$_M_last => __first$_M_last_930
  # DEBUG __it$_M_node => __first$_M_node_17
  # DEBUG __first => __first$_M_cur_932
  # DEBUG __first$8 => D#1967
  # DEBUG __first$16 => __first$_M_last_930
  # DEBUG __first$24 => __first$_M_node_17
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.97746
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#1967
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_17
  # DEBUG __result => &D.97746
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _483 = (long int) __last$24_925;
  _485 = (long int) __first$_M_node_17;
  _486 = _483 - _485;
  _487 = _486 /[ex] 8;
  _488 = _487 + -1;
  _489 = _488 * 64;
  _491 = (long int) __last_16;
  _493 = (long int) __last$8_927;
  _494 = _491 - _493;
  _495 = _494 /[ex] 8;
  _496 = _489 + _495;
  _498 = (long int) __first$_M_last_930;
  _500 = (long int) __first$_M_cur_932;
  _501 = _498 - _500;
  _502 = _501 /[ex] 8;
  __n_503 = _496 + _502;
  # DEBUG __n => __n_503
  # DEBUG __n => __n_503
  if (__n_503 <= 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG this => &D.97683
  # DEBUG __x => &D.97746
  D.97746 ={v} {CLOBBER};
  D.97721 ={v} {CLOBBER};
  D.97701 ={v} {CLOBBER};
  D.97684 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.64047 ={v} {CLOBBER};
  D.64048 ={v} {CLOBBER};
  D.64051 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_1062;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_964;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_933;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_918;
  # DEBUG this => &D.64055
  # DEBUG __x => &__old_start
  D.64055._M_cur = prephitmp_722;
  D.64055._M_first = prephitmp_724;
  D.64055._M_last = prephitmp_726;
  D.64055._M_node = prephitmp_767;
  std::copy<Credit*> (__mid, __last, &D.64055);
  D.64055 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __n_527 = PHI <__n_503(25), __n_514(31)>
  # SR.3611_1198 = PHI <_451(25), SR.3611_1197(31)>
  # SR.3612_1195 = PHI <_453(25), SR.3612_1194(31)>
  # SR.3613_1191 = PHI <_454(25), SR.3613_1190(31)>
  # __first$_M_cur_1189 = PHI <__first$_M_cur_932(25), __first$_M_cur_1188(31)>
  # __first$_M_last_1187 = PHI <__first$_M_last_930(25), __first$_M_last_1182(31)>
  # __first$_M_node_1181 = PHI <__first$_M_node_17(25), __first$_M_node_1180(31)>
  # DEBUG __first$_M_node => __first$_M_node_1181
  # DEBUG __first$_M_last => __first$_M_last_1187
  # DEBUG __first$_M_cur => __first$_M_cur_1189
  # DEBUG __n => __n_527
  # DEBUG D#130 => &D.97746
  # DEBUG this => D#130
  # DEBUG D#975 => &__first
  # DEBUG this => D#975
  _507 = MEM[(struct Credit * const &)__first$_M_cur_1189];
  *SR.3611_1198 = _507;
  # DEBUG this => &__first
  __first$_M_cur_509 = __first$_M_cur_1189 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_509
  if (__first$_M_cur_509 == __first$_M_last_1187)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG this => &__first
  __first$_M_node_520 = __first$_M_node_1181 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_520
  # DEBUG __first$_M_node => __first$_M_node_520
  __first$_M_cur_521 = MEM[(struct Credit * * *)__first$_M_node_1181 + 8B];
  # DEBUG __size => 8
  __first$_M_last_522 = __first$_M_cur_521 + 512;
  # DEBUG __first$_M_last => __first$_M_last_522
  # DEBUG __first$_M_cur => __first$_M_cur_521

  <bb 28>:
  # __first$_M_cur_1188 = PHI <__first$_M_cur_509(26), __first$_M_cur_521(27)>
  # __first$_M_last_1182 = PHI <__first$_M_last_1187(26), __first$_M_last_522(27)>
  # __first$_M_node_1180 = PHI <__first$_M_node_1181(26), __first$_M_node_520(27)>
  # DEBUG __first$_M_node => __first$_M_node_1180
  # DEBUG __first$_M_last => __first$_M_last_1182
  # DEBUG __first$_M_cur => __first$_M_cur_1188
  # DEBUG this => &D.97746
  _512 = SR.3611_1198 + 8;
  if (_512 == SR.3612_1195)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG this => &D.97746
  _524 = SR.3613_1191 + 8;
  # DEBUG this => &D.97746
  # DEBUG __new_node => _524
  _525 = MEM[(struct Credit * * *)SR.3613_1191 + 8B];
  # DEBUG __size => 8
  _526 = _525 + 512;

  <bb 30>:
  # SR.3611_1197 = PHI <_512(28), _525(29)>
  # SR.3612_1194 = PHI <SR.3612_1195(28), _526(29)>
  # SR.3613_1190 = PHI <SR.3613_1191(28), _524(29)>
  __n_514 = __n_527 + -1;
  # DEBUG __n => __n_514
  # DEBUG __n => __n_514
  if (__n_514 <= 0)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  # DEBUG D#1958 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#1958
  # DEBUG D#1959 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#1959
  # DEBUG D#1960 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#1960
  # DEBUG D#1961 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#1961
  return;

  <bb 33>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.53612._M_impl._M_finish._M_last;
  _537 = (long int) _57;
  _540 = _537 - _96;
  _541 = _540 /[ex] 8;
  _542 = _541 + -1;
  __vacancies_543 = (const size_type) _542;
  # DEBUG __vacancies => __vacancies_543
  if (__n_11(D) > __vacancies_543)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _544 = __n_11(D) - __vacancies_543;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_back (this_4(D), _544);
  pretmp_170 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_1018 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_1020 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_1022 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  pretmp_1028 = (long int) pretmp_170;
  pretmp_1030 = (long int) pretmp_1018;
  pretmp_1137 = pretmp_1028 - pretmp_1030;
  pretmp_505 = pretmp_1137 /[ex] 8;

  <bb 35>:
  # prephitmp_171 = PHI <_95(33), pretmp_170(34)>
  # prephitmp_1019 = PHI <_97(33), pretmp_1018(34)>
  # prephitmp_1021 = PHI <_57(33), pretmp_1020(34)>
  # prephitmp_1027 = PHI <_80(33), pretmp_1022(34)>
  # prephitmp_506 = PHI <_100(33), pretmp_505(34)>
  __n.164_545 = (long int) __n_11(D);
  # DEBUG D#1949 => &this_4(D)->D.53612._M_impl._M_finish
  # DEBUG this => D#1949
  # DEBUG __n => __n.164_545
  # DEBUG this => &__tmp
  # DEBUG __x => D#1949
  # DEBUG D#1973 => MEM[(const struct iterator &)this_4(D) + 48]._M_cur
  # DEBUG D#1972 => MEM[(const struct iterator &)this_4(D) + 48]._M_first
  # DEBUG __tmp$_M_first => D#1972
  # DEBUG D#1971 => MEM[(const struct iterator &)this_4(D) + 48]._M_last
  # DEBUG __tmp$_M_last => D#1971
  # DEBUG D#1970 => MEM[(const struct iterator &)this_4(D) + 48]._M_node
  # DEBUG __tmp$_M_node => D#1970
  # DEBUG this => &__tmp
  # DEBUG __n => __n.164_545
  __offset_561 = prephitmp_506 + __n.164_545;
  # DEBUG __offset => __offset_561
  # DEBUG __size => 8
  _538 = (unsigned long) __offset_561;
  if (_538 <= 63)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 36>:
  # DEBUG __size => 8
  iftmp.150_566 = __offset_561 >> 6;
  goto <bb 38>;

  <bb 37>:
  _568 = ~_538;
  # DEBUG __size => 8
  _569 = _568 >> 6;
  _570 = (long int) _569;
  iftmp.150_571 = ~_570;

  <bb 38>:
  # iftmp.150_573 = PHI <iftmp.150_566(36), iftmp.150_571(37)>
  # DEBUG __node_offset => iftmp.150_573
  __node_offset.152_574 = (long unsigned int) iftmp.150_573;
  _575 = __node_offset.152_574 * 8;
  __new_finish$_M_node_576 = prephitmp_1027 + _575;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_finish$_M_node_576
  # DEBUG __tmp$_M_node => __new_finish$_M_node_576
  __new_finish$_M_first_577 = *__new_finish$_M_node_576;
  # DEBUG __tmp$_M_first => __new_finish$_M_first_577
  # DEBUG __size => 8
  __new_finish$_M_last_578 = __new_finish$_M_first_577 + 512;
  # DEBUG __tmp$_M_last => __new_finish$_M_last_578
  # DEBUG __size => 8
  _579 = iftmp.150_573 * 64;
  _580 = __offset_561 - _579;
  _581 = (long unsigned int) _580;
  _582 = _581 * 8;
  __new_finish$_M_cur_583 = __new_finish$_M_first_577 + _582;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_583

  <bb 39>:
  # __new_finish$_M_cur_1157 = PHI <__new_finish$_M_cur_565(86), __new_finish$_M_cur_583(38)>
  # __new_finish$_M_first_1156 = PHI <prephitmp_1019(86), __new_finish$_M_first_577(38)>
  # __new_finish$_M_last_1155 = PHI <prephitmp_1021(86), __new_finish$_M_last_578(38)>
  # __new_finish$_M_node_1150 = PHI <prephitmp_1027(86), __new_finish$_M_node_576(38)>
  # DEBUG __tmp$_M_node => __new_finish$_M_node_1150
  # DEBUG __tmp$_M_last => __new_finish$_M_last_1155
  # DEBUG __tmp$_M_first => __new_finish$_M_first_1156
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_1157
  # DEBUG this => &__new_finish
  # DEBUG __x => NULL
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_1157
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_1156
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_1155
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_1150
  __tmp ={v} {CLOBBER};
  # DEBUG D#1408 => &this_4(D)->D.53612._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#1408
  # DEBUG __old_finish$_M_cur => D#1973
  # DEBUG __old_finish$_M_first => D#1972
  # DEBUG __old_finish$_M_last => D#1971
  # DEBUG __old_finish$_M_node => D#1970
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#1950 => &this_4(D)->D.53612._M_impl._M_finish
  # DEBUG this => D#1950
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#1950
  # DEBUG __tmp$_M_first => D#1972
  # DEBUG __tmp$_M_last => D#1971
  # DEBUG __tmp$_M_node => D#1970
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __n => -__elemsafter_55
  __offset_590 = prephitmp_506 - __elemsafter_55;
  # DEBUG __offset => __offset_590
  # DEBUG __size => 8
  _539 = (unsigned long) __offset_590;
  if (_539 <= 63)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 40>:
  # DEBUG __size => 8
  iftmp.150_595 = __offset_590 >> 6;
  goto <bb 42>;

  <bb 41>:
  _597 = ~_539;
  # DEBUG __size => 8
  _598 = _597 >> 6;
  _599 = (long int) _598;
  iftmp.150_600 = ~_599;

  <bb 42>:
  # iftmp.150_602 = PHI <iftmp.150_595(40), iftmp.150_600(41)>
  # DEBUG __node_offset => iftmp.150_602
  __node_offset.152_603 = (long unsigned int) iftmp.150_602;
  _604 = __node_offset.152_603 * 8;
  SR.3551_605 = prephitmp_1027 + _604;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.3551_605
  # DEBUG __tmp$_M_node => SR.3551_605
  SR.3549_606 = *SR.3551_605;
  # DEBUG __tmp$_M_first => SR.3549_606
  # DEBUG __size => 8
  SR.3550_607 = SR.3549_606 + 512;
  # DEBUG __tmp$_M_last => SR.3550_607
  # DEBUG __size => 8
  _608 = iftmp.150_602 * 64;
  _609 = __offset_590 - _608;
  _610 = (long unsigned int) _609;
  _611 = _610 * 8;
  SR.3548_612 = SR.3549_606 + _611;
  # DEBUG __tmp$_M_cur => SR.3548_612

  <bb 43>:
  # SR.3548_1179 = PHI <SR.3548_594(88), SR.3548_612(42)>
  # SR.3549_1164 = PHI <prephitmp_1019(88), SR.3549_606(42)>
  # SR.3550_1163 = PHI <prephitmp_1021(88), SR.3550_607(42)>
  # SR.3551_1158 = PHI <prephitmp_1027(88), SR.3551_605(42)>
  # DEBUG __tmp$_M_node => SR.3551_1158
  # DEBUG __tmp$_M_last => SR.3550_1163
  # DEBUG __tmp$_M_first => SR.3549_1164
  # DEBUG __tmp$_M_cur => SR.3548_1179
  # DEBUG this => &D.64062
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.3548_1179;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.3549_1164;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.3550_1163;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.3551_1158;
  if (__elemsafter_55 > __n.164_545)
    goto <bb 44>;
  else
    goto <bb 68>;

  <bb 44>:
  # DEBUG this => D#1950
  # DEBUG __n => __n.164_545
  # DEBUG this => &__tmp
  # DEBUG __x => D#1950
  _71 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  SR.3626_625 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __tmp$_M_first => SR.3626_625
  SR.3627_626 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __tmp$_M_last => SR.3627_626
  SR.3628_627 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __tmp$_M_node => SR.3628_627
  # DEBUG this => &__tmp
  # DEBUG __n => __n.164_545
  # DEBUG this => &__tmp
  # DEBUG __n => -__n.164_545
  _634 = (long int) _71;
  _636 = (long int) SR.3626_625;
  _637 = _634 - _636;
  _638 = _637 /[ex] 8;
  __offset_639 = _638 - __n.164_545;
  # DEBUG __offset => __offset_639
  # DEBUG __size => 8
  _511 = (unsigned long) __offset_639;
  if (_511 <= 63)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 45>:
  # DEBUG __size => 8
  iftmp.150_644 = __offset_639 >> 6;
  goto <bb 47>;

  <bb 46>:
  _646 = ~_511;
  # DEBUG __size => 8
  _647 = _646 >> 6;
  _648 = (long int) _647;
  iftmp.150_649 = ~_648;

  <bb 47>:
  # iftmp.150_651 = PHI <iftmp.150_644(45), iftmp.150_649(46)>
  # DEBUG __node_offset => iftmp.150_651
  __node_offset.152_652 = (long unsigned int) iftmp.150_651;
  _653 = __node_offset.152_652 * 8;
  SR.3628_654 = SR.3628_627 + _653;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.3628_654
  # DEBUG __tmp$_M_node => SR.3628_654
  SR.3626_655 = *SR.3628_654;
  # DEBUG __tmp$_M_first => SR.3626_655
  # DEBUG __size => 8
  SR.3627_656 = SR.3626_655 + 512;
  # DEBUG __tmp$_M_last => SR.3627_656
  # DEBUG __size => 8
  _657 = iftmp.150_651 * 64;
  _658 = __offset_639 - _657;
  _659 = (long unsigned int) _658;
  _660 = _659 * 8;
  SR.3625_661 = SR.3626_655 + _660;
  # DEBUG __tmp$_M_cur => SR.3625_661
  pretmp_863 = (long int) SR.3626_655;

  <bb 48>:
  # SR.3625_1126 = PHI <SR.3625_643(90), SR.3625_661(47)>
  # SR.3626_1125 = PHI <SR.3626_625(90), SR.3626_655(47)>
  # SR.3627_1116 = PHI <SR.3627_626(90), SR.3627_656(47)>
  # SR.3628_1110 = PHI <SR.3628_627(90), SR.3628_654(47)>
  # prephitmp_645 = PHI <_636(90), pretmp_863(47)>
  # DEBUG __tmp$_M_node => SR.3628_1110
  # DEBUG __tmp$_M_last => SR.3627_1116
  # DEBUG __tmp$_M_first => SR.3626_1125
  # DEBUG __tmp$_M_cur => SR.3625_1126
  # DEBUG this => &__finish_n
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  # DEBUG D#1409 => &this_4(D)->D.53612
  # DEBUG this => D#1409
  # DEBUG D#1410 => &this_4(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.64067
  # DEBUG __x => D#1410
  D.64067._M_cur = _71;
  D.64067._M_first = SR.3626_625;
  D.64067._M_last = SR.3627_626;
  D.64067._M_node = SR.3628_627;
  # DEBUG D#1411 => &this_4(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.64066
  # DEBUG __x => D#1411
  D.64066._M_cur = _71;
  D.64066._M_first = SR.3626_625;
  D.64066._M_last = SR.3627_626;
  D.64066._M_node = SR.3628_627;
  # DEBUG this => &D.64065
  # DEBUG __x => &__finish_n
  D.64065._M_cur = SR.3625_1126;
  D.64065._M_first = SR.3626_1125;
  D.64065._M_last = SR.3627_1116;
  D.64065._M_node = SR.3628_1110;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.332 (&D.64065, &D.64066, &D.64067);
  D.64065 ={v} {CLOBBER};
  D.64066 ={v} {CLOBBER};
  D.64067 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_1157;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_1156;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_1155;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_1150;
  # DEBUG this => &D.64079
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.64078
  # DEBUG __x => &__finish_n
  # DEBUG this => &D.64077
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.64077
  # DEBUG __last => &D.64078
  # DEBUG __result => &D.64079
  # DEBUG this => &D.97811
  # DEBUG __x => &D.64079
  # DEBUG this => &D.97810
  # DEBUG __x => &D.64078
  # DEBUG this => &D.97809
  # DEBUG __x => &D.64077
  # DEBUG __last$_M_cur => SR.3625_1126
  # DEBUG __last$_M_first => SR.3626_1125
  # DEBUG __last$_M_last => SR.3627_1116
  # DEBUG __last$_M_node => SR.3628_1110
  # DEBUG __result => &D.97811
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _663 = (long int) SR.3628_1110;
  _665 = (long int) _162;
  _666 = _663 - _665;
  _667 = _666 /[ex] 8;
  _668 = _667 + -1;
  _669 = _668 * 64;
  _671 = (long int) SR.3625_1126;
  _674 = _671 - prephitmp_645;
  _675 = _674 /[ex] 8;
  _676 = _669 + _675;
  _678 = (long int) _161;
  _680 = (long int) _75;
  _681 = _678 - _680;
  _682 = _681 /[ex] 8;
  __len_683 = _676 + _682;
  # DEBUG __len => __len_683
  if (__len_683 <= 0)
    goto <bb 67>;
  else
    goto <bb 49>;

  <bb 49>:

  <bb 50>:
  # __len.170_529 = PHI <__len_683(49), __len_716(65)>
  # __rend_1149 = PHI <prephitmp_171(49), SR.3629_1145(65)>
  # SR.3630_1134 = PHI <prephitmp_1019(49), SR.3630_1132(65)>
  # SR.3631_1131 = PHI <prephitmp_1027(49), SR.3631_1128(65)>
  # SR.3625_1109 = PHI <SR.3625_1126(49), SR.3625_1108(65)>
  # SR.3626_1107 = PHI <SR.3626_1125(49), SR.3626_1106(65)>
  # SR.3628_1104 = PHI <SR.3628_1110(49), SR.3628_1103(65)>
  # DEBUG __last$_M_node => SR.3628_1104
  # DEBUG __last$_M_first => SR.3626_1107
  # DEBUG __last$_M_cur => SR.3625_1109
  _686 = (long int) SR.3625_1109;
  _688 = (long int) SR.3626_1107;
  _689 = _686 - _688;
  __llen_690 = _689 /[ex] 8;
  # DEBUG __llen => __llen_690
  # DEBUG __lend => SR.3625_1109
  _692 = (long int) __rend_1149;
  _694 = (long int) SR.3630_1134;
  _695 = _692 - _694;
  __rlen_696 = _695 /[ex] 8;
  # DEBUG __rlen => __rlen_696
  # DEBUG __rend => __rend_1149
  if (__llen_690 == 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG __size => 8
  # DEBUG __llen => 64
  _698 = MEM[(struct Credit * * *)SR.3628_1104 + -8B];
  SR.3625_699 = _698 + 512;
  # DEBUG __lend => SR.3625_699
  pretmp_1160 = (long int) SR.3625_699;

  <bb 52>:
  # SR.3625_712 = PHI <SR.3625_1109(50), SR.3625_699(51)>
  # __llen_1143 = PHI <__llen_690(50), 64(51)>
  # prephitmp_513 = PHI <_686(50), pretmp_1160(51)>
  # DEBUG __llen => __llen_1143
  # DEBUG __lend => SR.3625_712
  if (__rlen_696 == 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG __size => 8
  # DEBUG __rlen => 64
  _701 = MEM[(struct Credit * * *)SR.3631_1131 + -8B];
  __rend_702 = _701 + 512;
  # DEBUG __rend => __rend_702

  <bb 54>:
  # __rend_714 = PHI <__rend_1149(52), __rend_702(53)>
  # __rlen_1138 = PHI <__rlen_696(52), 64(53)>
  # DEBUG __rlen => __rlen_1138
  # DEBUG __rend => __rend_714
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _881 = MIN_EXPR <__len.170_529, __llen_1143>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_499 = MIN_EXPR <_881, __rlen_1138>;
  # DEBUG __clen => D#1946
  __clen.179_709 = (long unsigned int) __clen_499;
  _710 = __clen.179_709 * 8;
  _711 = -_710;
  _713 = SR.3625_712 + _711;
  # DEBUG __first => _713
  # DEBUG __last => SR.3625_712
  # DEBUG __result => __rend_714
  # DEBUG __it => SR.3625_712
  # DEBUG __it => SR.3625_712
  # DEBUG __it => _713
  # DEBUG __it => _713
  # DEBUG __first => _713
  # DEBUG __last => SR.3625_712
  # DEBUG __result => __rend_714
  # DEBUG __it => __rend_714
  # DEBUG __it => __rend_714
  # DEBUG __it => SR.3625_712
  # DEBUG __it => SR.3625_712
  # DEBUG __it => _713
  # DEBUG __it => _713
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.182_780 = (long int) _713;
  _781 = prephitmp_513 - __first.182_780;
  _Num_782 = _781 /[ex] 8;
  # DEBUG _Num => _Num_782
  if (_Num_782 != 0)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  _783 = (long unsigned int) _781;
  _784 = -_783;
  _785 = __rend_714 + _784;
  __builtin_memmove (_785, _713, _783);

  <bb 56>:
  # DEBUG this => &__last
  # DEBUG __n => D#1946
  _715 = -__clen_499;
  # DEBUG this => &__last
  # DEBUG __n => _715
  __offset_756 = __llen_690 - __clen_499;
  # DEBUG __offset => __offset_756
  # DEBUG __size => 8
  _508 = (unsigned long) __offset_756;
  if (_508 <= 63)
    goto <bb 92>;
  else
    goto <bb 93>;

  <bb 57>:
  # DEBUG __size => 8
  iftmp.137_761 = __offset_756 >> 6;
  goto <bb 59>;

  <bb 58>:
  _763 = ~_508;
  # DEBUG __size => 8
  _764 = _763 >> 6;
  _765 = (long int) _764;
  iftmp.137_766 = ~_765;

  <bb 59>:
  # iftmp.137_768 = PHI <iftmp.137_761(57), iftmp.137_766(58)>
  # DEBUG __node_offset => iftmp.137_768
  __node_offset.139_769 = (long unsigned int) iftmp.137_768;
  _770 = __node_offset.139_769 * 8;
  SR.3628_771 = SR.3628_1104 + _770;
  # DEBUG this => &__last
  # DEBUG __new_node => SR.3628_771
  # DEBUG __last$_M_node => SR.3628_771
  SR.3626_772 = *SR.3628_771;
  # DEBUG __last$_M_first => SR.3626_772
  # DEBUG __size => 8
  # DEBUG __size => 8
  _774 = iftmp.137_768 * 64;
  _775 = __offset_756 - _774;
  _776 = (long unsigned int) _775;
  _777 = _776 * 8;
  SR.3625_778 = SR.3626_772 + _777;
  # DEBUG __last$_M_cur => SR.3625_778

  <bb 60>:
  # SR.3625_1108 = PHI <SR.3625_760(92), SR.3625_778(59)>
  # SR.3626_1106 = PHI <SR.3626_1107(92), SR.3626_772(59)>
  # SR.3628_1103 = PHI <SR.3628_1104(92), SR.3628_771(59)>
  # DEBUG __last$_M_node => SR.3628_1103
  # DEBUG __last$_M_first => SR.3626_1106
  # DEBUG __last$_M_cur => SR.3625_1108
  # DEBUG this => &D.97811
  # DEBUG __n => D#1946
  # DEBUG this => &D.97811
  # DEBUG __n => _715
  __offset_727 = __rlen_696 - __clen_499;
  # DEBUG __offset => __offset_727
  # DEBUG __size => 8
  _497 = (unsigned long) __offset_727;
  if (_497 <= 63)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 61>:
  # DEBUG __size => 8
  iftmp.150_732 = __offset_727 >> 6;
  goto <bb 63>;

  <bb 62>:
  _734 = ~_497;
  # DEBUG __size => 8
  _735 = _734 >> 6;
  _736 = (long int) _735;
  iftmp.150_737 = ~_736;

  <bb 63>:
  # iftmp.150_739 = PHI <iftmp.150_732(61), iftmp.150_737(62)>
  # DEBUG __node_offset => iftmp.150_739
  __node_offset.152_740 = (long unsigned int) iftmp.150_739;
  _741 = __node_offset.152_740 * 8;
  _742 = SR.3631_1131 + _741;
  # DEBUG this => &D.97811
  # DEBUG __new_node => _742
  _743 = *_742;
  # DEBUG __size => 8
  # DEBUG __size => 8
  _745 = iftmp.150_739 * 64;
  _746 = __offset_727 - _745;
  _747 = (long unsigned int) _746;
  _748 = _747 * 8;
  _749 = _743 + _748;

  <bb 64>:
  # SR.3629_1145 = PHI <_731(94), _749(63)>
  # SR.3630_1132 = PHI <SR.3630_1134(94), _743(63)>
  # SR.3631_1128 = PHI <SR.3631_1131(94), _742(63)>
  __len_716 = __len.170_529 - __clen_499;
  # DEBUG __len => __len_716
  # DEBUG D#1955 => {CLOBBER}
  # DEBUG __llen => D#1955
  # DEBUG D#1956 => {CLOBBER}
  # DEBUG __rlen => D#1956
  if (__len_716 <= 0)
    goto <bb 66>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 50>;

  <bb 66>:
  pretmp_1011 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_464 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_685 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 67>:
  # prephitmp_1012 = PHI <pretmp_1011(66), _75(48)>
  # prephitmp_1013 = PHI <pretmp_464(66), _161(48)>
  # prephitmp_687 = PHI <pretmp_685(66), _162(48)>
  # DEBUG this => &D.97808
  # DEBUG __x => &D.97811
  # DEBUG D#1957 => {CLOBBER}
  # DEBUG __len => D#1957
  D.97809 ={v} {CLOBBER};
  D.97811 ={v} {CLOBBER};
  D.64077 ={v} {CLOBBER};
  D.64078 ={v} {CLOBBER};
  D.64079 ={v} {CLOBBER};
  # DEBUG this => &D.64083
  # DEBUG __x => __pos_6(D)
  D.64083._M_cur = prephitmp_1012;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.64083._M_first = _157;
  D.64083._M_last = prephitmp_1013;
  D.64083._M_node = prephitmp_687;
  std::copy<Credit*> (__first, __last, &D.64083);
  D.64083 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 32>;

  <bb 68>:
  __mid = __first;
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#1251 => &__mid
  # DEBUG D.87532 => D#1251
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>::operator+= (&__mid, __elemsafter_55);
  # DEBUG D#1412 => &this_4(D)->D.53612
  # DEBUG this => D#1412
  # DEBUG D#1954 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#1413 => &this_4(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.64098
  # DEBUG __x => D#1413
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#1414 => &this_4(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.64097
  # DEBUG __x => D#1414
  # DEBUG this => &D.64096
  # DEBUG __x => __pos_6(D)
  _88 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _176 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _177 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _178 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  __first$_M_cur_241 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first1$_M_cur => __first$_M_cur_241
  # DEBUG D#1969 => MEM[(struct _Deque_iterator *)&__mid + 8B]
  # DEBUG __first1$_M_first => D#1969
  __first$_M_last_243 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first1$_M_last => __first$_M_last_243
  __first$_M_node_160 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first1$_M_node => __first$_M_node_160
  __last_244 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last_244
  __last$8_245 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last$8_245
  # DEBUG D#1968 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last1$_M_last => D#1968
  __last$24_1105 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last$24_1105
  # DEBUG __first2 => &D.64096
  # DEBUG __last2 => &D.64097
  # DEBUG __result => &D.64098
  # DEBUG __alloc => D#1954
  # DEBUG this => NULL
  # DEBUG __x => &D.64098
  # DEBUG D#976 => D#1954
  # DEBUG __first$_M_cur => __first$_M_cur_241
  # DEBUG __first$_M_first => D#1969
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_160
  # DEBUG __last$_M_cur => __last_244
  # DEBUG __last$_M_first => __last$8_245
  # DEBUG __last$_M_last => D#1968
  # DEBUG __last$_M_node => __last$24_1105
  # DEBUG __result => NULL
  # DEBUG D.97892 => D#976
  # DEBUG this => &D.97905
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_241
  # DEBUG __first$_M_first => D#1969
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_160
  # DEBUG __last$_M_cur => __last_244
  # DEBUG __last$_M_first => __last$8_245
  # DEBUG __last$_M_last => D#1968
  # DEBUG __last$_M_node => __last$24_1105
  # DEBUG __result => &D.97905
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.97905
  # DEBUG __first$_M_cur => __first$_M_cur_241
  # DEBUG __first$_M_first => D#1969
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_160
  # DEBUG __last$_M_cur => __last_244
  # DEBUG __last$_M_first => __last$8_245
  # DEBUG __last$_M_last => D#1968
  # DEBUG __last$_M_node => __last$24_1105
  # DEBUG __result => NULL
  # DEBUG this => &D.97922
  # DEBUG __x => NULL
  # DEBUG __first => __first$_M_cur_241
  # DEBUG __first$8 => D#1969
  # DEBUG __first$16 => __first$_M_last_243
  # DEBUG __first$24 => __first$_M_node_160
  # DEBUG __last => __last_244
  # DEBUG __last$8 => __last$8_245
  # DEBUG __last$_M_last => D#1968
  # DEBUG __last$24 => __last$24_1105
  # DEBUG __result => &D.97922
  # DEBUG this => &D.97942
  # DEBUG __x => &D.97922
  # DEBUG __it => __last_244
  # DEBUG __it$8 => __last$8_245
  # DEBUG D#1953 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#1953
  # DEBUG __it$24 => __last$24_1105
  # DEBUG __it$_M_cur => __last_244
  # DEBUG __it$_M_first => __last$8_245
  # DEBUG __it$_M_last => D#1953
  # DEBUG __it$_M_node => __last$24_1105
  # DEBUG __it => __first$_M_cur_241
  # DEBUG __it$8 => D#1969
  # DEBUG __it$16 => __first$_M_last_243
  # DEBUG __it$24 => __first$_M_node_160
  # DEBUG __it$_M_cur => __first$_M_cur_241
  # DEBUG __it$_M_first => D#1969
  # DEBUG __it$_M_last => __first$_M_last_243
  # DEBUG __it$_M_node => __first$_M_node_160
  # DEBUG __result => &D.97942
  # DEBUG this => NULL
  # DEBUG __x => &D.97942
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_244
  # DEBUG __it$8 => __last$8_245
  # DEBUG __it$16 => D#1953
  # DEBUG __it$24 => __last$24_1105
  # DEBUG __it$_M_cur => __last_244
  # DEBUG __it$_M_first => __last$8_245
  # DEBUG __it$_M_last => D#1953
  # DEBUG __it$_M_node => __last$24_1105
  # DEBUG __it => __first$_M_cur_241
  # DEBUG __it$8 => D#1969
  # DEBUG __it$16 => __first$_M_last_243
  # DEBUG __it$24 => __first$_M_node_160
  # DEBUG __it$_M_cur => __first$_M_cur_241
  # DEBUG __it$_M_first => D#1969
  # DEBUG __it$_M_last => __first$_M_last_243
  # DEBUG __it$_M_node => __first$_M_node_160
  # DEBUG __first => __first$_M_cur_241
  # DEBUG __first$8 => D#1969
  # DEBUG __first$16 => __first$_M_last_243
  # DEBUG __first$24 => __first$_M_node_160
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.97967
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_241
  # DEBUG __first$_M_first => D#1969
  # DEBUG __first$_M_last => __first$_M_last_243
  # DEBUG __first$_M_node => __first$_M_node_160
  # DEBUG __result => &D.97967
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _833 = (long int) __last$24_1105;
  _835 = (long int) __first$_M_node_160;
  _836 = _833 - _835;
  _837 = _836 /[ex] 8;
  _838 = _837 + -1;
  _839 = _838 * 64;
  _841 = (long int) __last_244;
  _843 = (long int) __last$8_245;
  _844 = _841 - _843;
  _845 = _844 /[ex] 8;
  _846 = _839 + _845;
  _848 = (long int) __first$_M_last_243;
  _850 = (long int) __first$_M_cur_241;
  _851 = _848 - _850;
  _852 = _851 /[ex] 8;
  __n_853 = _846 + _852;
  # DEBUG __n => __n_853
  # DEBUG __n => __n_853
  if (__n_853 <= 0)
    goto <bb 77>;
  else
    goto <bb 69>;

  <bb 69>:

  <bb 70>:
  # __n_528 = PHI <__n_853(69), __n_864(76)>
  # SR.3682_68 = PHI <_82(69), SR.3682_1096(76)>
  # SR.3683_1094 = PHI <_179(69), SR.3683_1093(76)>
  # SR.3684_1090 = PHI <_180(69), SR.3684_1089(76)>
  # SR.3685_58 = PHI <_181(69), SR.3685_1086(76)>
  # __first$_M_cur_1084 = PHI <__first$_M_cur_241(69), __first$_M_cur_1083(76)>
  # __first$_M_last_1081 = PHI <__first$_M_last_243(69), __first$_M_last_1080(76)>
  # __first$_M_node_1079 = PHI <__first$_M_node_160(69), __first$_M_node_1078(76)>
  # DEBUG __first$_M_node => __first$_M_node_1079
  # DEBUG __first$_M_last => __first$_M_last_1081
  # DEBUG __first$_M_cur => __first$_M_cur_1084
  # DEBUG __n => __n_528
  # DEBUG D#130 => &D.97967
  # DEBUG this => D#130
  # DEBUG D#975 => &__first
  # DEBUG this => D#975
  _857 = MEM[(struct Credit * const &)__first$_M_cur_1084];
  *SR.3682_68 = _857;
  # DEBUG this => &__first
  __first$_M_cur_859 = __first$_M_cur_1084 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_859
  if (__first$_M_cur_859 == __first$_M_last_1081)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # DEBUG this => &__first
  __first$_M_node_870 = __first$_M_node_1079 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_870
  # DEBUG __first$_M_node => __first$_M_node_870
  __first$_M_cur_871 = MEM[(struct Credit * * *)__first$_M_node_1079 + 8B];
  # DEBUG __size => 8
  __first$_M_last_872 = __first$_M_cur_871 + 512;
  # DEBUG __first$_M_last => __first$_M_last_872
  # DEBUG __first$_M_cur => __first$_M_cur_871

  <bb 72>:
  # __first$_M_cur_1083 = PHI <__first$_M_cur_859(70), __first$_M_cur_871(71)>
  # __first$_M_last_1080 = PHI <__first$_M_last_1081(70), __first$_M_last_872(71)>
  # __first$_M_node_1078 = PHI <__first$_M_node_1079(70), __first$_M_node_870(71)>
  # DEBUG __first$_M_node => __first$_M_node_1078
  # DEBUG __first$_M_last => __first$_M_last_1080
  # DEBUG __first$_M_cur => __first$_M_cur_1083
  # DEBUG this => &D.97967
  _862 = SR.3682_68 + 8;
  if (_862 == SR.3684_1090)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG this => &D.97967
  _874 = SR.3685_58 + 8;
  # DEBUG this => &D.97967
  # DEBUG __new_node => _874
  _875 = MEM[(struct Credit * * *)SR.3685_58 + 8B];
  # DEBUG __size => 8
  _876 = _875 + 512;

  <bb 74>:
  # SR.3682_1096 = PHI <_862(72), _875(73)>
  # SR.3683_1093 = PHI <SR.3683_1094(72), _875(73)>
  # SR.3684_1089 = PHI <SR.3684_1090(72), _876(73)>
  # SR.3685_1086 = PHI <SR.3685_58(72), _874(73)>
  __n_864 = __n_528 + -1;
  # DEBUG __n => __n_864
  # DEBUG __n => __n_864
  if (__n_864 <= 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  # SR.3685_1141 = PHI <SR.3685_1086(74)>
  # SR.3684_1140 = PHI <SR.3684_1089(74)>
  # SR.3683_1139 = PHI <SR.3683_1093(74)>
  # SR.3682_1127 = PHI <SR.3682_1096(74)>
  goto <bb 77>;

  <bb 76>:
  goto <bb 70>;

  <bb 77>:
  # SR.3682_1095 = PHI <SR.3682_1127(75), _82(68)>
  # SR.3683_1091 = PHI <SR.3683_1139(75), _179(68)>
  # SR.3684_59 = PHI <SR.3684_1140(75), _180(68)>
  # SR.3685_1085 = PHI <SR.3685_1141(75), _181(68)>
  # DEBUG this => &__mid
  # DEBUG __x => &D.97967
  D.97967 ={v} {CLOBBER};
  D.97942 ={v} {CLOBBER};
  D.97922 ={v} {CLOBBER};
  D.97905 ={v} {CLOBBER};
  # DEBUG this => &D.97908
  # DEBUG __x => &__mid
  D.97908._M_cur = SR.3682_1095;
  D.97908._M_first = SR.3683_1091;
  D.97908._M_last = SR.3684_59;
  D.97908._M_node = SR.3685_1085;
  # DEBUG this => &D.97907
  # DEBUG __x => &D.64097
  D.97907._M_cur = _82;
  D.97907._M_first = _179;
  D.97907._M_last = _180;
  D.97907._M_node = _181;
  # DEBUG this => &D.97906
  # DEBUG __x => &D.64096
  D.97906._M_cur = _88;
  D.97906._M_first = _176;
  D.97906._M_last = _177;
  D.97906._M_node = _178;
  # DEBUG D#1401 => D#1954
  D.97904 = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.332 (&D.97906, &D.97907, &D.97908); [return slot optimization]
  D.97906 ={v} {CLOBBER};
  D.97907 ={v} {CLOBBER};
  D.97908 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.64096 ={v} {CLOBBER};
  D.64097 ={v} {CLOBBER};
  D.64098 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_1157;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_1156;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_1155;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_1150;
  # DEBUG this => &D.64102
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.64102._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.64102._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.64102._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.64102._M_node = _175;
  std::copy<Credit*> (__first, __mid, &D.64102);
  D.64102 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 32>;

  <bb 78>:
  __n.149_303 = (long unsigned int) _289;
  _304 = __n.149_303 * 8;
  __new_start$_M_cur_305 = prephitmp_722 + _304;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_305
  goto <bb 9>;

  <bb 79>:
  if (__offset_301 > 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 80>:
  _333 = __elemsbefore.166_10 * 8;
  SR.3540_334 = prephitmp_722 + _333;
  # DEBUG __tmp$_M_cur => SR.3540_334
  goto <bb 13>;

  <bb 81>:
  if (__offset_330 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 82>:
  _390 = __n_11(D) * 8;
  __tmp$_M_cur_391 = _29 + _390;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_391
  goto <bb 18>;

  <bb 83>:
  if (__offset_387 > 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 84>:
  __n.149_418 = (long unsigned int) _289;
  _419 = __n.149_418 * 8;
  __tmp$_M_cur_420 = _353 + _419;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_420
  goto <bb 22>;

  <bb 85>:
  if (__offset_416 > 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 86>:
  _564 = __n_11(D) * 8;
  __new_finish$_M_cur_565 = prephitmp_171 + _564;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_565
  goto <bb 39>;

  <bb 87>:
  if (__offset_561 > 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 88>:
  _531 = -__elemsafter_55;
  __n.149_592 = (long unsigned int) _531;
  _593 = __n.149_592 * 8;
  SR.3548_594 = prephitmp_171 + _593;
  # DEBUG __tmp$_M_cur => SR.3548_594
  goto <bb 43>;

  <bb 89>:
  if (__offset_590 > 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 90>:
  _628 = -__n.164_545;
  __n.149_641 = (long unsigned int) _628;
  _642 = __n.149_641 * 8;
  SR.3625_643 = _71 + _642;
  # DEBUG __tmp$_M_cur => SR.3625_643
  goto <bb 48>;

  <bb 91>:
  if (__offset_639 > 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 92>:
  __n.136_758 = (long unsigned int) _715;
  _759 = __n.136_758 * 8;
  SR.3625_760 = SR.3625_1109 + _759;
  # DEBUG __last$_M_cur => SR.3625_760
  goto <bb 60>;

  <bb 93>:
  if (__offset_756 > 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 94>:
  __n.149_729 = (long unsigned int) _715;
  _730 = __n.149_729 * 8;
  _731 = __rend_1149 + _730;
  goto <bb 64>;

  <bb 95>:
  if (__offset_727 > 0)
    goto <bb 61>;
  else
    goto <bb 62>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt5dequeIP6CreditSaIS1_EEaSERKS3_, funcdef_no=3220, decl_uid=53191, cgraph_uid=1680, symbol_order=1681)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct deque * const this, const struct deque & __x)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3817;
  struct Credit * * SR.3816;
  struct Credit * * SR.3815;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * __first$8;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3794;
  struct Credit * * SR.3793;
  struct Credit * * SR.3792;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * __first$8;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __new_finish$_M_node;
  struct Credit * * __new_finish$_M_last;
  struct Credit * * __new_finish$_M_first;
  struct Credit * * __new_finish$_M_cur;
  struct Credit * * * __new_start$_M_node;
  struct Credit * * __new_start$_M_last;
  struct Credit * * __new_start$_M_first;
  struct Credit * * __new_start$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3750;
  struct Credit * * SR.3749;
  struct Credit * * SR.3748;
  struct Credit * * SR.3747;
  struct Credit * * * __mid$_M_node;
  struct Credit * * __mid$_M_last;
  struct Credit * * __mid$_M_first;
  struct Credit * * __mid$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.98462;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98437;
  struct _Deque_iterator D.98436;
  struct _Deque_iterator D.98435;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.98417;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.98393;
  struct _Deque_iterator D.98392;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.98366;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98341;
  struct _Deque_iterator D.98340;
  struct _Deque_iterator D.98339;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.98321;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.98295;
  struct _Deque_iterator D.98294;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98287;
  struct _Deque_iterator D.98286;
  struct iterator D.98285;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.98273;
  const difference_type __offset;
  struct _Self & D.98268;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.98258;
  struct iterator D.98257;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Credit * * * __nstart;
  struct const_iterator __mid;
  struct iterator D.62619;
  struct _Deque_iterator D.67939;
  struct _Deque_iterator D.67938;
  struct _Deque_iterator D.62611;
  struct const_iterator D.62607;
  struct _Deque_iterator D.67935;
  struct _Deque_iterator D.67934;
  struct _Deque_iterator D.62604;
  struct _Deque_iterator D.62605;
  long int _5;
  struct Credit * * * _6;
  struct Credit * * _13;
  struct Credit * * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  struct Credit * * _28;
  long int _29;
  struct Credit * * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  struct Credit * * * _43;
  long int _44;
  struct Credit * * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  struct Credit * * _51;
  long int _52;
  struct Credit * * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  struct Credit * * _58;
  long int _59;
  struct Credit * * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  struct Credit * * _66;
  struct Credit * * _67;
  struct Credit * * _68;
  struct Credit * * _70;
  struct Credit * * _72;
  struct Credit * * * _74;
  struct Credit * * _78;
  long int pretmp_82;
  struct Credit * * const prephitmp_96;
  struct Credit * * const pretmp_97;
  struct Credit * * * _114;
  struct Credit * * * _115;
  struct Credit * * * _116;
  struct Credit * * _119;
  long int _126;
  long int _127;
  long int _128;
  long unsigned int _132;
  long int iftmp.137_134;
  struct Credit * * const pretmp_135;
  long unsigned int _136;
  long unsigned int _137;
  long int _138;
  long int iftmp.137_139;
  long int iftmp.137_141;
  long unsigned int __node_offset.139_142;
  long unsigned int _143;
  long int _147;
  long int _148;
  long unsigned int _149;
  long unsigned int _150;
  long int prephitmp_152;
  long int pretmp_153;
  long int prephitmp_154;
  long int _158;
  long int _160;
  long int _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  long int _167;
  long int _168;
  long int _170;
  long int _171;
  long int _172;
  struct Credit * * _176;
  struct Credit * * _182;
  struct Credit * * _184;
  struct Credit * * * _185;
  long int _194;
  struct Credit * * _195;
  long int _196;
  long int _197;
  long int _198;
  long unsigned int _200;
  struct Credit * * _205;
  struct Credit * * * _206;
  long int _207;
  struct _Self & _208;
  struct Credit * _266;
  struct Credit * * _271;
  struct Credit * * * _283;
  struct Credit * * _284;
  struct Credit * * _285;
  long int _291;
  long int _293;
  long int _294;
  long int _295;
  long int _296;
  long unsigned int _298;
  struct Credit * * _302;
  struct Credit * * * _304;
  struct _Self & _305;
  unsigned long _313;
  struct Credit * * const prephitmp_360;
  struct Credit * _363;
  struct Credit * * _368;
  struct Credit * * * _380;
  struct Credit * * _381;
  struct Credit * * _382;
  struct Credit * * const pretmp_390;
  struct Credit * * const prephitmp_557;
  struct Credit * * const pretmp_558;
  struct Credit * * const prephitmp_561;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 37>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#214 => &MEM[(const struct deque *)this_3(D)].D.53612._M_impl._M_start
  # DEBUG D#215 => &MEM[(const struct deque *)this_3(D)].D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 64;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 8;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 8;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#214 => &__x_2(D)->D.53612._M_impl._M_start
  # DEBUG D#215 => &__x_2(D)->D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.3750_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.3750_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 64;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 8;
  _34 = _27 + _33;
  SR.3749_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.3749_35;
  SR.3747_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.3747_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#1421 => &this_3(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.62604
  # DEBUG __x => D#1421
  D.62604._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.62604._M_first = _68;
  D.62604._M_last = _58;
  D.62604._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#112 => &__x_2(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.67934
  # DEBUG __x => D#112
  D.67934._M_cur = _28;
  D.67934._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.67934._M_last = _67;
  D.67934._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#113 => &__x_2(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.67935
  # DEBUG __x => D#113
  D.67935._M_cur = SR.3747_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.67935._M_first = _66;
  D.67935._M_last = SR.3749_35;
  D.67935._M_node = SR.3750_22;
  D.62605 = std::copy<Credit*> (D.67935, D.67934, &D.62604); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.62605
  # DEBUG D#773 => &this_3(D)->D.53612
  # DEBUG this => D#773
  # DEBUG this => this_3(D)
  # DEBUG D#79 => &this_3(D)->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#780 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.78489 => D#780
  # DEBUG D#779 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.78490 => D#779
  # DEBUG D#778 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.78491 => D#778
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.78492 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.62605
  # DEBUG D#777 => MEM[(const struct iterator &)&D.62605]._M_cur
  # DEBUG D.78493 => D#777
  # DEBUG D#776 => MEM[(const struct iterator &)&D.62605]._M_first
  # DEBUG D.78494 => D#776
  # DEBUG D#775 => MEM[(const struct iterator &)&D.62605]._M_last
  # DEBUG D.78495 => D#775
  _115 = MEM[(const struct iterator &)&D.62605]._M_node;
  # DEBUG D.78496 => _115
  # DEBUG D#81 => this_3(D)
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.78478 => D#84
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#774 => &this_3(D)->D.53612
  # DEBUG this => D#774
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.53612._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.62605];
  D.62605 ={v} {CLOBBER};
  D.62604 ={v} {CLOBBER};
  goto <bb 37>;

  <bb 6>:

  <bb 7>:
  # __nstart_98 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_98
  _119 = *__nstart_98;
  # DEBUG this => D#774
  # DEBUG __p => _119
  # DEBUG __size => 8
  # DEBUG D#629 => &D#774->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _119
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _119
  # DEBUG this => D#623
  # DEBUG D.98241 => D#624
  operator delete (_119);
  __nstart_120 = __nstart_98 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#113 => &__x_2(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.62607
  # DEBUG __x => D#113
  SR.3748_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.62607
  # DEBUG __n => _64
  # DEBUG __tmp$_M_cur => SR.3747_37
  # DEBUG __tmp$_M_first => SR.3748_81
  # DEBUG __tmp$_M_last => SR.3749_35
  # DEBUG __tmp$_M_node => SR.3750_22
  # DEBUG this => &__tmp
  # DEBUG __n => _64
  _126 = (long int) SR.3748_81;
  _127 = _38 - _126;
  _128 = _127 /[ex] 8;
  __offset_129 = _64 + _128;
  # DEBUG __offset => __offset_129
  # DEBUG __size => 8
  _313 = (unsigned long) __offset_129;
  if (_313 <= 63)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 10>:
  # DEBUG __size => 8
  iftmp.137_134 = __offset_129 >> 6;
  goto <bb 12>;

  <bb 11>:
  _136 = ~_313;
  # DEBUG __size => 8
  _137 = _136 >> 6;
  _138 = (long int) _137;
  iftmp.137_139 = ~_138;

  <bb 12>:
  # iftmp.137_141 = PHI <iftmp.137_134(10), iftmp.137_139(11)>
  # DEBUG __node_offset => iftmp.137_141
  __node_offset.139_142 = (long unsigned int) iftmp.137_141;
  _143 = __node_offset.139_142 * 8;
  __tmp$_M_node_144 = SR.3750_22 + _143;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_144
  # DEBUG __tmp$_M_node => __tmp$_M_node_144
  __tmp$_M_first_145 = *__tmp$_M_node_144;
  # DEBUG __tmp$_M_first => __tmp$_M_first_145
  # DEBUG __size => 8
  __tmp$_M_last_146 = __tmp$_M_first_145 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_146
  # DEBUG __size => 8
  _147 = iftmp.137_141 * 64;
  _148 = __offset_129 - _147;
  _149 = (long unsigned int) _148;
  _150 = _149 * 8;
  __tmp$_M_cur_151 = __tmp$_M_first_145 + _150;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_151
  pretmp_82 = (long int) __tmp$_M_node_144;
  pretmp_153 = (long int) __tmp$_M_last_146;

  <bb 13>:
  # __tmp$_M_cur_395 = PHI <__tmp$_M_cur_133(38), __tmp$_M_cur_151(12)>
  # __tmp$_M_first_16 = PHI <SR.3748_81(38), __tmp$_M_first_145(12)>
  # __tmp$_M_last_494 = PHI <SR.3749_35(38), __tmp$_M_last_146(12)>
  # __tmp$_M_node_493 = PHI <SR.3750_22(38), __tmp$_M_node_144(12)>
  # prephitmp_152 = PHI <_23(38), pretmp_82(12)>
  # prephitmp_154 = PHI <_36(38), pretmp_153(12)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_493
  # DEBUG __tmp$_M_last => __tmp$_M_last_494
  # DEBUG __tmp$_M_first => __tmp$_M_first_16
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_395
  # DEBUG __mid$_M_cur => __tmp$_M_cur_395
  # DEBUG __mid$_M_first => __tmp$_M_first_16
  # DEBUG __mid$_M_last => __tmp$_M_last_494
  # DEBUG __mid$_M_node => __tmp$_M_node_493
  # DEBUG D#1983 => {CLOBBER}
  # DEBUG __tmp$_M_cur => D#1983
  # DEBUG D#1984 => {CLOBBER}
  # DEBUG __tmp$_M_first => D#1984
  # DEBUG D#1985 => {CLOBBER}
  # DEBUG __tmp$_M_last => D#1985
  # DEBUG D#1986 => {CLOBBER}
  # DEBUG __tmp$_M_node => D#1986
  # DEBUG D#1419 => &this_3(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.62611
  # DEBUG __x => D#1419
  D.62611._M_cur = _60;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.62611._M_first = _78;
  D.62611._M_last = _58;
  D.62611._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#113 => &__x_2(D)->D.53612._M_impl._M_start
  # DEBUG this => &D.67938
  # DEBUG __x => D#113
  D.67938._M_cur = SR.3747_37;
  D.67938._M_first = SR.3748_81;
  D.67938._M_last = SR.3749_35;
  D.67938._M_node = SR.3750_22;
  MEM[(struct _Deque_iterator *)&__mid] = __tmp$_M_cur_395;
  MEM[(struct _Deque_iterator *)&__mid + 8B] = __tmp$_M_first_16;
  MEM[(struct _Deque_iterator *)&__mid + 16B] = __tmp$_M_last_494;
  MEM[(struct _Deque_iterator *)&__mid + 24B] = __tmp$_M_node_493;
  std::copy<Credit*> (D.67938, __mid, &D.62611);
  D.62611 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#112 => &__x_2(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.67939
  # DEBUG __x => D#112
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#1982 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#1420 => &this_3(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.62619
  # DEBUG __x => D#1420
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.62619
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG this => NULL
  # DEBUG __x => &D.62619
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG this => &D.98257
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.98257
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG D#1255 => __first
  # DEBUG D#1255 => __first
  # DEBUG D#1255 => __first
  # DEBUG D#1256 => __last
  # DEBUG D#1256 => __last
  # DEBUG D#1256 => __last
  # DEBUG D.86804 => D#1251
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 8
  _158 = (long int) _74;
  _160 = _158 - prephitmp_152;
  _161 = _160 /[ex] 8;
  _162 = _161 + -1;
  _163 = _162 * 64;
  _164 = (long int) _13;
  _165 = (long int) _72;
  _166 = _164 - _165;
  _167 = _166 /[ex] 8;
  _168 = _163 + _167;
  _170 = (long int) __tmp$_M_cur_395;
  _171 = prephitmp_154 - _170;
  _172 = _171 /[ex] 8;
  __n_173 = _168 + _172;
  __n_174 = (const size_type) __n_173;
  # DEBUG __n => __n_174
  _176 = this_3(D)->D.53612._M_impl._M_start._M_cur;
  if (_17 == _176)
    goto <bb 14>;
  else
    goto <bb 25>;

  <bb 14>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _194 = (long int) _17;
  _195 = this_3(D)->D.53612._M_impl._M_start._M_first;
  _196 = (long int) _195;
  _197 = _194 - _196;
  _198 = _197 /[ex] 8;
  __vacancies_199 = (const size_type) _198;
  # DEBUG __vacancies => __vacancies_199
  if (__n_174 > __vacancies_199)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _200 = __n_174 - __vacancies_199;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_front (this_3(D), _200);
  pretmp_390 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_97 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;

  <bb 16>:
  # prephitmp_360 = PHI <_176(14), pretmp_390(15)>
  # prephitmp_96 = PHI <_195(14), pretmp_97(15)>
  # DEBUG D#1981 => &this_3(D)->D.53612._M_impl._M_start
  # DEBUG this => D#1981
  # DEBUG __n => __n_173
  # DEBUG this => &__tmp
  # DEBUG __x => D#1981
  __tmp._M_cur = prephitmp_360;
  __tmp._M_first = prephitmp_96;
  _205 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  __tmp._M_last = _205;
  _206 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  __tmp._M_node = _206;
  # DEBUG this => &__tmp
  # DEBUG __n => __n_173
  _207 = -__n_173;
  _208 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, _207);
  # DEBUG this => &__new_start
  # DEBUG __x => _208
  __new_start$_M_cur_209 = MEM[(const struct iterator &)_208]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_209
  __new_start$_M_first_210 = MEM[(const struct iterator &)_208]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_210
  __new_start$_M_last_211 = MEM[(const struct iterator &)_208]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_211
  __new_start$_M_node_212 = MEM[(const struct iterator &)_208]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_212
  __tmp ={v} {CLOBBER};
  # DEBUG D#1415 => &this_3(D)->D.53612
  # DEBUG this => D#1415
  # DEBUG this => &D.98287
  # DEBUG __x => &__new_start
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98287
  # DEBUG D.98291 => D#976
  # DEBUG this => &D.98295
  # DEBUG __x => &D.98287
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98295
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.98295
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => NULL
  # DEBUG this => &D.98321
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$8 => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98321
  # DEBUG this => &D.98341
  # DEBUG __x => &D.98321
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1982
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1982
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_395
  # DEBUG __it$8 => __tmp$_M_first_16
  # DEBUG __it$16 => __tmp$_M_last_494
  # DEBUG __it$24 => __tmp$_M_node_493
  # DEBUG __it$_M_cur => __tmp$_M_cur_395
  # DEBUG __it$_M_first => __tmp$_M_first_16
  # DEBUG __it$_M_last => __tmp$_M_last_494
  # DEBUG __it$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98341
  # DEBUG this => NULL
  # DEBUG __x => &D.98341
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1982
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1982
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_395
  # DEBUG __it$8 => __tmp$_M_first_16
  # DEBUG __it$16 => __tmp$_M_last_494
  # DEBUG __it$24 => __tmp$_M_node_493
  # DEBUG __it$_M_cur => __tmp$_M_cur_395
  # DEBUG __it$_M_first => __tmp$_M_first_16
  # DEBUG __it$_M_last => __tmp$_M_last_494
  # DEBUG __it$_M_node => __tmp$_M_node_493
  # DEBUG __first => __tmp$_M_cur_395
  # DEBUG __first$8 => __tmp$_M_first_16
  # DEBUG __first$16 => __tmp$_M_last_494
  # DEBUG __first$24 => __tmp$_M_node_493
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.98366
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98366
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  # DEBUG __n => __n_173
  # DEBUG __n => __n_173
  if (__n_173 <= 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG this => &D.98294
  # DEBUG __x => &D.98366
  D.98366 ={v} {CLOBBER};
  D.98341 ={v} {CLOBBER};
  D.98321 ={v} {CLOBBER};
  D.98295 ={v} {CLOBBER};
  D.98287 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_209;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_210;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_211;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_212;
  # DEBUG D#1991 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#1991
  # DEBUG D#1992 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#1992
  # DEBUG D#1993 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#1993
  # DEBUG D#1994 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#1994
  goto <bb 36>;

  <bb 18>:

  <bb 19>:
  # __n_69 = PHI <__n_173(18), __n_273(24)>
  # SR.3792_483 = PHI <__new_start$_M_cur_209(18), SR.3792_482(24)>
  # SR.3793_480 = PHI <__new_start$_M_last_211(18), SR.3793_479(24)>
  # SR.3794_478 = PHI <__new_start$_M_node_212(18), SR.3794_477(24)>
  # __mid$_M_cur_475 = PHI <__tmp$_M_cur_395(18), __mid$_M_cur_474(24)>
  # __mid$_M_last_471 = PHI <__tmp$_M_last_494(18), __mid$_M_last_470(24)>
  # __mid$_M_node_469 = PHI <__tmp$_M_node_493(18), __mid$_M_node_467(24)>
  # DEBUG __first$_M_node => __mid$_M_node_469
  # DEBUG __first$_M_last => __mid$_M_last_471
  # DEBUG __first$_M_cur => __mid$_M_cur_475
  # DEBUG __n => __n_69
  # DEBUG D#130 => &D.98366
  # DEBUG this => D#130
  # DEBUG D#975 => &__first
  # DEBUG this => D#975
  _266 = MEM[(struct Credit * const &)__mid$_M_cur_475];
  *SR.3792_483 = _266;
  # DEBUG this => &__first
  __mid$_M_cur_268 = __mid$_M_cur_475 + 8;
  # DEBUG __first$_M_cur => __mid$_M_cur_268
  if (__mid$_M_cur_268 == __mid$_M_last_471)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG this => &__first
  __mid$_M_node_279 = __mid$_M_node_469 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __mid$_M_node_279
  # DEBUG __first$_M_node => __mid$_M_node_279
  __mid$_M_cur_280 = MEM[(struct Credit * * *)__mid$_M_node_469 + 8B];
  # DEBUG __size => 8
  __mid$_M_last_281 = __mid$_M_cur_280 + 512;
  # DEBUG __first$_M_last => __mid$_M_last_281
  # DEBUG __first$_M_cur => __mid$_M_cur_280

  <bb 21>:
  # __mid$_M_cur_474 = PHI <__mid$_M_cur_268(19), __mid$_M_cur_280(20)>
  # __mid$_M_last_470 = PHI <__mid$_M_last_471(19), __mid$_M_last_281(20)>
  # __mid$_M_node_467 = PHI <__mid$_M_node_469(19), __mid$_M_node_279(20)>
  # DEBUG __first$_M_node => __mid$_M_node_467
  # DEBUG __first$_M_last => __mid$_M_last_470
  # DEBUG __first$_M_cur => __mid$_M_cur_474
  # DEBUG this => &D.98366
  _271 = SR.3792_483 + 8;
  if (_271 == SR.3793_480)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG this => &D.98366
  _283 = SR.3794_478 + 8;
  # DEBUG this => &D.98366
  # DEBUG __new_node => _283
  _284 = MEM[(struct Credit * * *)SR.3794_478 + 8B];
  # DEBUG __size => 8
  _285 = _284 + 512;

  <bb 23>:
  # SR.3792_482 = PHI <_271(21), _284(22)>
  # SR.3793_479 = PHI <SR.3793_480(21), _285(22)>
  # SR.3794_477 = PHI <SR.3794_478(21), _283(22)>
  __n_273 = __n_69 + -1;
  # DEBUG __n => __n_273
  # DEBUG __n => __n_273
  if (__n_273 <= 0)
    goto <bb 17>;
  else
    goto <bb 24>;

  <bb 24>:
  goto <bb 19>;

  <bb 25>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _291 = (long int) _70;
  _293 = (long int) _17;
  _294 = _291 - _293;
  _295 = _294 /[ex] 8;
  _296 = _295 + -1;
  __vacancies_297 = (const size_type) _296;
  # DEBUG __vacancies => __vacancies_297
  if (__n_174 > __vacancies_297)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _298 = __n_174 - __vacancies_297;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_back (this_3(D), _298);
  pretmp_135 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_558 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;

  <bb 27>:
  # prephitmp_561 = PHI <_17(25), pretmp_135(26)>
  # prephitmp_557 = PHI <_70(25), pretmp_558(26)>
  # DEBUG D#1980 => &this_3(D)->D.53612._M_impl._M_finish
  # DEBUG this => D#1980
  # DEBUG __n => __n_173
  # DEBUG this => &__tmp
  # DEBUG __x => D#1980
  __tmp._M_cur = prephitmp_561;
  _302 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  __tmp._M_first = _302;
  __tmp._M_last = prephitmp_557;
  _304 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  __tmp._M_node = _304;
  _305 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, __n_173);
  # DEBUG this => &__new_finish
  # DEBUG __x => _305
  __new_finish$_M_cur_306 = MEM[(const struct iterator &)_305]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_306
  __new_finish$_M_first_307 = MEM[(const struct iterator &)_305]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_307
  __new_finish$_M_last_308 = MEM[(const struct iterator &)_305]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_308
  __new_finish$_M_node_309 = MEM[(const struct iterator &)_305]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_309
  __tmp ={v} {CLOBBER};
  # DEBUG D#1416 => &this_3(D)->D.53612
  # DEBUG this => D#1416
  # DEBUG D#1417 => &this_3(D)->D.53612._M_impl._M_finish
  # DEBUG this => &D.98286
  # DEBUG __x => D#1417
  _182 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  _184 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  _185 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98286
  # DEBUG D.98389 => D#976
  # DEBUG this => &D.98393
  # DEBUG __x => &D.98286
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98393
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.98393
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => NULL
  # DEBUG this => &D.98417
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$8 => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98417
  # DEBUG this => &D.98437
  # DEBUG __x => &D.98417
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1982
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1982
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_395
  # DEBUG __it$8 => __tmp$_M_first_16
  # DEBUG __it$16 => __tmp$_M_last_494
  # DEBUG __it$24 => __tmp$_M_node_493
  # DEBUG __it$_M_cur => __tmp$_M_cur_395
  # DEBUG __it$_M_first => __tmp$_M_first_16
  # DEBUG __it$_M_last => __tmp$_M_last_494
  # DEBUG __it$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98437
  # DEBUG this => NULL
  # DEBUG __x => &D.98437
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _13
  # DEBUG __it$8 => _72
  # DEBUG __it$16 => D#1982
  # DEBUG __it$24 => _74
  # DEBUG __it$_M_cur => _13
  # DEBUG __it$_M_first => _72
  # DEBUG __it$_M_last => D#1982
  # DEBUG __it$_M_node => _74
  # DEBUG __it => __tmp$_M_cur_395
  # DEBUG __it$8 => __tmp$_M_first_16
  # DEBUG __it$16 => __tmp$_M_last_494
  # DEBUG __it$24 => __tmp$_M_node_493
  # DEBUG __it$_M_cur => __tmp$_M_cur_395
  # DEBUG __it$_M_first => __tmp$_M_first_16
  # DEBUG __it$_M_last => __tmp$_M_last_494
  # DEBUG __it$_M_node => __tmp$_M_node_493
  # DEBUG __first => __tmp$_M_cur_395
  # DEBUG __first$8 => __tmp$_M_first_16
  # DEBUG __first$16 => __tmp$_M_last_494
  # DEBUG __first$24 => __tmp$_M_node_493
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.98462
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_395
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_494
  # DEBUG __first$_M_node => __tmp$_M_node_493
  # DEBUG __result => &D.98462
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  # DEBUG __n => __n_173
  # DEBUG __n => __n_173
  if (__n_173 <= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG this => &D.98392
  # DEBUG __x => &D.98462
  D.98462 ={v} {CLOBBER};
  D.98437 ={v} {CLOBBER};
  D.98417 ={v} {CLOBBER};
  D.98393 ={v} {CLOBBER};
  D.98286 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_306;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_307;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_308;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_309;
  # DEBUG D#1987 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#1987
  # DEBUG D#1988 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#1988
  # DEBUG D#1989 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#1989
  # DEBUG D#1990 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#1990
  goto <bb 36>;

  <bb 29>:

  <bb 30>:
  # __n_99 = PHI <__n_173(29), __n_370(35)>
  # SR.3815_462 = PHI <_182(29), SR.3815_461(35)>
  # SR.3816_460 = PHI <_184(29), SR.3816_459(35)>
  # SR.3817_443 = PHI <_185(29), SR.3817_437(35)>
  # __mid$_M_cur_435 = PHI <__tmp$_M_cur_395(29), __mid$_M_cur_429(35)>
  # __mid$_M_last_423 = PHI <__tmp$_M_last_494(29), __mid$_M_last_422(35)>
  # __mid$_M_node_421 = PHI <__tmp$_M_node_493(29), __mid$_M_node_420(35)>
  # DEBUG __first$_M_node => __mid$_M_node_421
  # DEBUG __first$_M_last => __mid$_M_last_423
  # DEBUG __first$_M_cur => __mid$_M_cur_435
  # DEBUG __n => __n_99
  # DEBUG D#130 => &D.98462
  # DEBUG this => D#130
  # DEBUG D#975 => &__first
  # DEBUG this => D#975
  _363 = MEM[(struct Credit * const &)__mid$_M_cur_435];
  *SR.3815_462 = _363;
  # DEBUG this => &__first
  __mid$_M_cur_365 = __mid$_M_cur_435 + 8;
  # DEBUG __first$_M_cur => __mid$_M_cur_365
  if (__mid$_M_cur_365 == __mid$_M_last_423)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG this => &__first
  __mid$_M_node_376 = __mid$_M_node_421 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __mid$_M_node_376
  # DEBUG __first$_M_node => __mid$_M_node_376
  __mid$_M_cur_377 = MEM[(struct Credit * * *)__mid$_M_node_421 + 8B];
  # DEBUG __size => 8
  __mid$_M_last_378 = __mid$_M_cur_377 + 512;
  # DEBUG __first$_M_last => __mid$_M_last_378
  # DEBUG __first$_M_cur => __mid$_M_cur_377

  <bb 32>:
  # __mid$_M_cur_429 = PHI <__mid$_M_cur_365(30), __mid$_M_cur_377(31)>
  # __mid$_M_last_422 = PHI <__mid$_M_last_423(30), __mid$_M_last_378(31)>
  # __mid$_M_node_420 = PHI <__mid$_M_node_421(30), __mid$_M_node_376(31)>
  # DEBUG __first$_M_node => __mid$_M_node_420
  # DEBUG __first$_M_last => __mid$_M_last_422
  # DEBUG __first$_M_cur => __mid$_M_cur_429
  # DEBUG this => &D.98462
  _368 = SR.3815_462 + 8;
  if (_368 == SR.3816_460)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG this => &D.98462
  _380 = SR.3817_443 + 8;
  # DEBUG this => &D.98462
  # DEBUG __new_node => _380
  _381 = MEM[(struct Credit * * *)SR.3817_443 + 8B];
  # DEBUG __size => 8
  _382 = _381 + 512;

  <bb 34>:
  # SR.3815_461 = PHI <_368(32), _381(33)>
  # SR.3816_459 = PHI <SR.3816_460(32), _382(33)>
  # SR.3817_437 = PHI <SR.3817_443(32), _380(33)>
  __n_370 = __n_99 + -1;
  # DEBUG __n => __n_370
  # DEBUG __n => __n_370
  if (__n_370 <= 0)
    goto <bb 28>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 30>;

  <bb 36>:
  D.98257 ={v} {CLOBBER};
  D.62619 ={v} {CLOBBER};
  # DEBUG D#1995 => {CLOBBER}
  # DEBUG __mid$_M_cur => D#1995
  # DEBUG D#1996 => {CLOBBER}
  # DEBUG __mid$_M_first => D#1996
  # DEBUG D#1997 => {CLOBBER}
  # DEBUG __mid$_M_last => D#1997
  # DEBUG D#1998 => {CLOBBER}
  # DEBUG __mid$_M_node => D#1998

  <bb 37>:
  return this_3(D);

  <bb 38>:
  _132 = _65 * 8;
  __tmp$_M_cur_133 = SR.3747_37 + _132;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_133
  goto <bb 13>;

  <bb 39>:
  if (__offset_129 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Credit*>*, std::vector<std::queue<Credit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Credit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Credit*>] (_ZNSt6vectorISt5queueIP6CreditSt5dequeIS2_SaIS2_EEESaIS6_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS6_S8_EEmRKS6_, funcdef_no=2657, decl_uid=49500, cgraph_uid=1117, symbol_order=1118)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is not innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Credit*>*, std::vector<std::queue<Credit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Credit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Credit*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3867;
  struct Credit * * SR.3866;
  struct Credit * * SR.3865;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3857;
  struct Credit * * SR.3856;
  struct Credit * * SR.3855;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __nstart;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.98869;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98844;
  struct _Deque_iterator D.98843;
  struct _Deque_iterator D.98842;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.98824;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98810;
  struct _Deque_iterator D.98809;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98802;
  struct _Deque_iterator D.98801;
  struct _Deque_iterator D.98800;
  const long unsigned int D.98779;
  const size_type __len;
  size_type D.98778;
  size_type __n;
  struct queue * D.98769;
  struct queue * D.98757;
  struct queue * __first;
  long unsigned int __n;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.98721;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98696;
  struct _Deque_iterator D.98695;
  struct _Deque_iterator D.98694;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.98676;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98662;
  struct _Deque_iterator D.98661;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.98654;
  struct _Deque_iterator D.98653;
  struct _Deque_iterator D.98652;
  struct queue * D.98628;
  struct queue * __first;
  long unsigned int __n;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct Credit * * * _17;
  long unsigned int _18;
  struct queue * _20;
  long int __last.130_21;
  struct queue * const _24;
  bool _25;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct queue * _32;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _38;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  const struct deque * _52;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _62;
  struct queue * _63;
  struct queue * _67;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  struct deque * _87;
  struct queue * _94;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  struct Credit * * * _127;
  void * _142;
  struct _Deque_base * _144;
  long int _146;
  struct Credit * * * _147;
  long int _148;
  long int _149;
  long int _150;
  long int _151;
  long int _152;
  struct Credit * * _153;
  long int _154;
  struct Credit * * _155;
  long int _156;
  long int _157;
  long int _158;
  long int _159;
  struct Credit * * _160;
  long int _161;
  struct Credit * * _162;
  long int _163;
  long int _164;
  long int _165;
  difference_type _166;
  size_type _167;
  struct _Deque_base * _168;
  struct Credit * * _169;
  struct Credit * * _171;
  struct Credit * * * _172;
  struct Credit * * _173;
  struct Credit * * _174;
  struct Credit * * * _176;
  long int _186;
  long int _187;
  long int _188;
  difference_type _189;
  long int _214;
  long int _216;
  long int _217;
  long int _218;
  long int _219;
  long int _220;
  long int _222;
  long int _224;
  long int _225;
  long int _226;
  long int _227;
  long int _229;
  long int _231;
  long int _232;
  long int _233;
  struct Credit * _238;
  struct Credit * * _243;
  struct Credit * * * _255;
  struct Credit * * _256;
  struct Credit * * _257;
  void * _264;
  struct _Deque_base * _266;
  struct queue * _268;
  long int _272;
  long int _273;
  long int _274;
  long unsigned int _276;
  long int _282;
  struct Credit * * * _283;
  long int _284;
  long int _285;
  long int _286;
  long int _287;
  long int _288;
  struct Credit * * _289;
  long int _290;
  struct Credit * * _291;
  long int _292;
  long int _293;
  long int _294;
  long int _295;
  struct Credit * * _296;
  long int _297;
  struct Credit * * _298;
  long int _299;
  long int _300;
  long int _301;
  difference_type _302;
  size_type _303;
  struct _Deque_base * _304;
  struct Credit * * _305;
  struct Credit * * _307;
  struct Credit * * * _308;
  struct Credit * * _309;
  struct Credit * * _310;
  struct Credit * * * _312;
  long int _327;
  difference_type _333;
  long int _337;
  long int _338;
  long int _350;
  long int _352;
  long int _353;
  long int _354;
  long int _355;
  long int _356;
  long int _358;
  bool _359;
  long int _360;
  long int _361;
  long int _362;
  long int _363;
  long int _365;
  long int _367;
  long int _368;
  long int _369;
  struct Credit * _374;
  struct Credit * * _379;
  struct Credit * * * _391;
  struct Credit * * _392;
  struct Credit * * _393;
  struct Credit * * * _394;
  struct Credit * * * _395;
  struct Credit * * * _396;
  struct Credit * * _399;
  long unsigned int prephitmp_411;
  bool _422;
  void * _451;
  struct queue * pretmp_454;
  struct queue * prephitmp_455;
  struct Credit * * * pretmp_458;
  struct Credit * * * prephitmp_459;
  long unsigned int pretmp_462;
  long unsigned int prephitmp_463;

  <bb 2>:
  # DEBUG D#2013 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#2013
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 93>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.49577._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.49577._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 50>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.89068 => __x_29(D)
  _52 = &MEM[(const struct queue &)__x_29(D)].c;
  std::deque<Credit*, std::allocator<Credit*> >::deque (&__x_copy.c, _52);
  # DEBUG this => this_9(D)
  # DEBUG D#114 => &this_9(D)->D.49577._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#114
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.59839
  # DEBUG __rhs => &__position
  # DEBUG this => &D.59839
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#1426 => &this_9(D)->D.49577
  # DEBUG this => D#1426
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#982
  # DEBUG D#981 => D#982
  # DEBUG D#980 => D#981
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.89081 => D#980
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__last_61, __old_finish_26, __old_finish_26);

  <bb 6>:
  _62 = this_9(D)->D.49577._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.49577._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#2013
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#2013
  # DEBUG __it => D#2013
  # DEBUG __first => D#2013
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#2013
  # DEBUG __it => D#2013
  # DEBUG __first => D#2013
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#2013
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.130_21 = (long int) __last_61;
  _73 = __last.130_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#2013
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#2013
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_553 = PHI <__old_finish_26(8), __old_finish_58(12)>
  # __last_554 = PHI <__last_61(8), __last_66(12)>
  # __n_555 = PHI <__n_72(8), __n_81(12)>
  # DEBUG __n => __n_555
  # DEBUG __result => __old_finish_553
  # DEBUG __last => __last_554
  __last_66 = __last_554 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_553 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.89111 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_80, _56);
  goto <bb 11>;

<L27>:
  goto <bb 95> (<L10>);

  <bb 11>:
  __n_81 = __n_555 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#657 => &__x_copy.c
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.53612);
  __x_copy ={v} {CLOBBER};
  goto <bb 93>;

  <bb 14>:

  <bb 15>:
  # __position_557 = PHI <__position_23(14), __position_84(18)>
  # DEBUG __first => __position_557
  # DEBUG this => __position_557
  # DEBUG D.89122 => &__x_copy
  _83 = &__position_557->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_83, &__x_copy.c);
  goto <bb 17>;

<L28>:
  goto <bb 95> (<L10>);

  <bb 17>:
  __position_84 = __position_557 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#1427 => &this_9(D)->D.49577
  # DEBUG this => D#1427
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.89131 => D#985
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __old_finish_26
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => __old_finish_26
  # DEBUG __cur => __old_finish_26
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 35>;
  else
    goto <bb 20>;

  <bb 20>:

  <bb 21>:
  # __n_568 = PHI <__n_70(20), __n_140(34)>
  # __old_finish_569 = PHI <__old_finish_26(20), __old_finish_141(34)>
  # DEBUG __cur => __old_finish_569
  # DEBUG __n => __n_568
  # DEBUG __r => __old_finish_569
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#9 => 80
  # DEBUG __p => NULL
  # DEBUG D.81789 => D#9
  if (__old_finish_569 != 0B)
    goto <bb 22>;
  else
    goto <bb 32>;

  <bb 22>:
  # DEBUG this => NULL
  # DEBUG D.98626 => &__x_copy
  # DEBUG D#2008 => &__old_finish_569->c
  # DEBUG this => D#2008
  # DEBUG __x => &__x_copy.c
  # DEBUG this => &__x_copy.c
  # DEBUG D#214 => &MEM[(const struct deque *)&__x_copy].D.53612._M_impl._M_start
  # DEBUG D#215 => &MEM[(const struct deque *)&__x_copy].D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _127 = MEM[(const struct _Deque_iterator &)&__x_copy + 48]._M_node;
  _146 = (long int) _127;
  _147 = MEM[(const struct _Deque_iterator &)&__x_copy + 16]._M_node;
  _148 = (long int) _147;
  _149 = _146 - _148;
  _150 = _149 /[ex] 8;
  _151 = _150 + -1;
  _152 = _151 * 64;
  _153 = MEM[(const struct _Deque_iterator &)&__x_copy + 48]._M_cur;
  _154 = (long int) _153;
  _155 = MEM[(const struct _Deque_iterator &)&__x_copy + 48]._M_first;
  _156 = (long int) _155;
  _157 = _154 - _156;
  _158 = _157 /[ex] 8;
  _159 = _152 + _158;
  _160 = MEM[(const struct _Deque_iterator &)&__x_copy + 16]._M_last;
  _161 = (long int) _160;
  _162 = MEM[(const struct _Deque_iterator &)&__x_copy + 16]._M_cur;
  _163 = (long int) _162;
  _164 = _161 - _163;
  _165 = _164 /[ex] 8;
  _166 = _159 + _165;
  _167 = (size_type) _166;
  # DEBUG D#977 => &MEM[(const struct deque *)&__x_copy].D.53612
  # DEBUG this => D#977
  # DEBUG __a => NULL
  _168 = &MEM[(struct deque *)__old_finish_569].D.53612;
  # DEBUG this => _168
  # DEBUG __a => NULL
  # DEBUG __num_elements => _167
  # DEBUG D#895 => &_168->_M_impl
  # DEBUG this => D#895
  # DEBUG __a => NULL
  # DEBUG this => D#895
  # DEBUG __a => NULL
  # DEBUG this => D#895
  # DEBUG D.75437 => NULL
  MEM[(struct _Deque_impl *)__old_finish_569]._M_map = 0B;
  MEM[(struct _Deque_impl *)__old_finish_569]._M_map_size = 0;
  # DEBUG D#478 => &D#895->_M_start
  # DEBUG this => D#478
  MEM[(struct _Deque_iterator *)__old_finish_569 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_569 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_569 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_569 + 16B]._M_node = 0B;
  # DEBUG D#477 => &D#895->_M_finish
  # DEBUG this => D#477
  MEM[(struct _Deque_iterator *)__old_finish_569 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_569 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_569 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__old_finish_569 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_168, _167);

  <bb 23>:
  # DEBUG D#978 => &D#2008->D.53612
  # DEBUG this => D#978
  # DEBUG D#979 => &D#2008->D.53612._M_impl._M_start
  # DEBUG this => &D.98652
  # DEBUG __x => D#979
  _169 = MEM[(const struct iterator &)__old_finish_569 + 16]._M_cur;
  _171 = MEM[(const struct iterator &)__old_finish_569 + 16]._M_last;
  _172 = MEM[(const struct iterator &)__old_finish_569 + 16]._M_node;
  # DEBUG this => &__x_copy.c
  # DEBUG D#112 => &MEM[(const struct deque *)&__x_copy].D.53612._M_impl._M_finish
  # DEBUG this => &D.98653
  # DEBUG __x => D#112
  _173 = MEM[(const struct iterator &)&__x_copy + 48]._M_cur;
  _174 = MEM[(const struct iterator &)&__x_copy + 48]._M_first;
  # DEBUG D#2007 => MEM[(const struct iterator &)&__x_copy + 48]._M_last
  _176 = MEM[(const struct iterator &)&__x_copy + 48]._M_node;
  # DEBUG this => &__x_copy.c
  # DEBUG D#113 => &MEM[(const struct deque *)&__x_copy].D.53612._M_impl._M_start
  # DEBUG this => &D.98654
  # DEBUG __x => D#113
  __first$_M_cur_177 = MEM[(const struct iterator &)&__x_copy + 16]._M_cur;
  # DEBUG D#2010 => MEM[(const struct iterator &)&__x_copy + 16]._M_first
  __first$_M_last_179 = MEM[(const struct iterator &)&__x_copy + 16]._M_last;
  __first$_M_node_180 = MEM[(const struct iterator &)&__x_copy + 16]._M_node;
  # DEBUG __result => &D.98652
  # DEBUG D.98658 => D#976
  # DEBUG this => &D.98662
  # DEBUG __x => &D.98652
  # DEBUG __result => &D.98662
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.98662
  # DEBUG __result => NULL
  # DEBUG this => &D.98676
  # DEBUG __x => NULL
  # DEBUG __result => &D.98676
  # DEBUG this => &D.98696
  # DEBUG __x => &D.98676
  # DEBUG __it => _173
  # DEBUG __it$8 => _174
  # DEBUG __it$16 => D#2007
  # DEBUG __it$24 => _176
  # DEBUG __it$_M_cur => _173
  # DEBUG __it$_M_first => _174
  # DEBUG __it$_M_last => D#2007
  # DEBUG __it$_M_node => _176
  # DEBUG __it => __first$_M_cur_177
  # DEBUG __it$8 => D#2010
  # DEBUG __it$16 => __first$_M_last_179
  # DEBUG __it$24 => __first$_M_node_180
  # DEBUG __it$_M_cur => __first$_M_cur_177
  # DEBUG __it$_M_first => D#2010
  # DEBUG __it$_M_last => __first$_M_last_179
  # DEBUG __it$_M_node => __first$_M_node_180
  # DEBUG __result => &D.98696
  # DEBUG this => NULL
  # DEBUG __x => &D.98696
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _173
  # DEBUG __it$8 => _174
  # DEBUG __it$16 => D#2007
  # DEBUG __it$24 => _176
  # DEBUG __it$_M_cur => _173
  # DEBUG __it$_M_first => _174
  # DEBUG __it$_M_last => D#2007
  # DEBUG __it$_M_node => _176
  # DEBUG __it => __first$_M_cur_177
  # DEBUG __it$8 => D#2010
  # DEBUG __it$16 => __first$_M_last_179
  # DEBUG __it$24 => __first$_M_node_180
  # DEBUG __it$_M_cur => __first$_M_cur_177
  # DEBUG __it$_M_first => D#2010
  # DEBUG __it$_M_last => __first$_M_last_179
  # DEBUG __it$_M_node => __first$_M_node_180
  # DEBUG __first => __first$_M_cur_177
  # DEBUG __first$8 => D#2010
  # DEBUG __first$16 => __first$_M_last_179
  # DEBUG __first$24 => __first$_M_node_180
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.98721
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_177
  # DEBUG __first$_M_first => D#2010
  # DEBUG __first$_M_last => __first$_M_last_179
  # DEBUG __first$_M_node => __first$_M_node_180
  # DEBUG __result => &D.98721
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _214 = (long int) _176;
  _216 = (long int) __first$_M_node_180;
  _217 = _214 - _216;
  _218 = _217 /[ex] 8;
  _219 = _218 + -1;
  _220 = _219 * 64;
  _222 = (long int) _173;
  _224 = (long int) _174;
  _225 = _222 - _224;
  _226 = _225 /[ex] 8;
  _227 = _220 + _226;
  _229 = (long int) __first$_M_last_179;
  _231 = (long int) __first$_M_cur_177;
  _232 = _229 - _231;
  _233 = _232 /[ex] 8;
  __n_234 = _227 + _233;
  # DEBUG __n => __n_234
  # DEBUG __n => __n_234
  if (__n_234 <= 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG this => &D.98661
  # DEBUG __x => &D.98721
  D.98721 ={v} {CLOBBER};
  D.98696 ={v} {CLOBBER};
  D.98676 ={v} {CLOBBER};
  D.98662 ={v} {CLOBBER};
  D.98652 ={v} {CLOBBER};
  goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __n_572 = PHI <__n_234(25), __n_245(31)>
  # SR.3855_500 = PHI <_169(25), SR.3855_499(31)>
  # SR.3856_497 = PHI <_171(25), SR.3856_496(31)>
  # SR.3857_495 = PHI <_172(25), SR.3857_494(31)>
  # __first$_M_cur_492 = PHI <__first$_M_cur_177(25), __first$_M_cur_491(31)>
  # __first$_M_last_488 = PHI <__first$_M_last_179(25), __first$_M_last_487(31)>
  # __first$_M_node_486 = PHI <__first$_M_node_180(25), __first$_M_node_484(31)>
  # DEBUG __first$_M_node => __first$_M_node_486
  # DEBUG __first$_M_last => __first$_M_last_488
  # DEBUG __first$_M_cur => __first$_M_cur_492
  # DEBUG __n => __n_572
  # DEBUG D#130 => &D.98721
  # DEBUG this => D#130
  # DEBUG D#975 => &__first
  # DEBUG this => D#975
  _238 = MEM[(struct Credit * const &)__first$_M_cur_492];
  *SR.3855_500 = _238;
  # DEBUG this => &__first
  __first$_M_cur_240 = __first$_M_cur_492 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_240
  if (__first$_M_cur_240 == __first$_M_last_488)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  # DEBUG this => &__first
  __first$_M_node_251 = __first$_M_node_486 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_251
  # DEBUG __first$_M_node => __first$_M_node_251
  __first$_M_cur_252 = MEM[(struct Credit * * *)__first$_M_node_486 + 8B];
  # DEBUG __size => 8
  __first$_M_last_253 = __first$_M_cur_252 + 512;
  # DEBUG __first$_M_last => __first$_M_last_253
  # DEBUG __first$_M_cur => __first$_M_cur_252

  <bb 28>:
  # __first$_M_cur_491 = PHI <__first$_M_cur_240(26), __first$_M_cur_252(27)>
  # __first$_M_last_487 = PHI <__first$_M_last_488(26), __first$_M_last_253(27)>
  # __first$_M_node_484 = PHI <__first$_M_node_486(26), __first$_M_node_251(27)>
  # DEBUG __first$_M_node => __first$_M_node_484
  # DEBUG __first$_M_last => __first$_M_last_487
  # DEBUG __first$_M_cur => __first$_M_cur_491
  # DEBUG this => &D.98721
  _243 = SR.3855_500 + 8;
  if (_243 == SR.3856_497)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  # DEBUG this => &D.98721
  _255 = SR.3857_495 + 8;
  # DEBUG this => &D.98721
  # DEBUG __new_node => _255
  _256 = MEM[(struct Credit * * *)SR.3857_495 + 8B];
  # DEBUG __size => 8
  _257 = _256 + 512;

  <bb 30>:
  # SR.3855_499 = PHI <_243(28), _256(29)>
  # SR.3856_496 = PHI <SR.3856_497(28), _257(29)>
  # SR.3857_494 = PHI <SR.3857_495(28), _255(29)>
  __n_245 = __n_572 + -1;
  # DEBUG __n => __n_245
  # DEBUG __n => __n_245
  if (__n_245 <= 0)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  __n_140 = __n_568 + 18446744073709551615;
  # DEBUG __n => __n_140
  __old_finish_141 = __old_finish_569 + 80;
  # DEBUG __cur => __old_finish_141
  # DEBUG __cur => __old_finish_141
  # DEBUG __n => __n_140
  if (__n_140 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # __old_finish_448 = PHI <__old_finish_141(32)>
  goto <bb 35>;

  <bb 34>:
  goto <bb 21>;

  <bb 35>:
  # __old_finish_570 = PHI <__old_finish_448(33), __old_finish_26(19)>
  this_9(D)->D.49577._M_impl._M_finish = __old_finish_570;
  # DEBUG D#1428 => &this_9(D)->D.49577
  # DEBUG this => D#1428
  # DEBUG this => &__position
  # DEBUG __first => D#2013
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG __alloc => D#982
  # DEBUG D#981 => D#982
  # DEBUG D#980 => D#981
  # DEBUG __first => D#2013
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG D.89144 => D#980
  # DEBUG __first => D#2013
  # DEBUG __last => __old_finish_26
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__position_23, __old_finish_26, __old_finish_570);
  goto <bb 44>;

<L29>:
  goto <bb 95> (<L10>);

  # __old_finish_446 = PHI <__old_finish_569(22)>
<L19>:
  _142 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_142);
  # DEBUG __first => __old_finish_26
  # DEBUG __last => __old_finish_446
  # DEBUG __first => __old_finish_26
  # DEBUG __last => __old_finish_446
  # DEBUG __first => __old_finish_26
  if (__old_finish_26 == __old_finish_446)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  __cxa_rethrow ();

  <bb 39>:

  <bb 40>:
  # __old_finish_571 = PHI <__old_finish_26(39), __old_finish_145(41)>
  # DEBUG __first => __old_finish_571
  # DEBUG __r => __old_finish_571
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  _144 = &MEM[(struct deque *)__old_finish_571].D.53612;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_144);
  MEM[(struct  &)__old_finish_571] ={v} {CLOBBER};
  __old_finish_145 = __old_finish_571 + 80;
  # DEBUG __first => __old_finish_145
  # DEBUG __first => __old_finish_145
  if (__old_finish_145 == __old_finish_446)
    goto <bb 38>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 40>;

<L21>:
  __cxa_end_catch ();
  resx 13

<L30>:
  goto <bb 95> (<L10>);

  <bb 44>:
  _74 = this_9(D)->D.49577._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.49577._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#2013
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#2013
  if (__position_23 == __old_finish_26)
    goto <bb 13>;
  else
    goto <bb 45>;

  <bb 45>:

  <bb 46>:
  # __position_558 = PHI <__position_23(45), __position_88(49)>
  # DEBUG __first => __position_558
  # DEBUG this => __position_558
  # DEBUG D.89165 => &__x_copy
  _87 = &__position_558->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_87, &__x_copy.c);
  goto <bb 48>;

<L31>:
  goto <bb 95> (<L10>);

  <bb 48>:
  __position_88 = __position_558 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 13>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 46>;

  <bb 50>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#786 => this_9(D)
  # DEBUG this => D#786
  # DEBUG D#785 => D#786
  # DEBUG D#784 => &D#785->D.49577
  # DEBUG this => D#784
  # DEBUG __a => D#783
  # DEBUG D#782 => D#783
  # DEBUG D#781 => D#782
  # DEBUG this => D#781
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#85 => this_9(D)
  # DEBUG D#85 => this_9(D)
  # DEBUG this => D#85
  # DEBUG this => D#85
  _272 = (long int) _24;
  _273 = _13 - _272;
  _274 = _273 /[ex] 80;
  _275 = (const long unsigned int) _274;
  _276 = 230584300921369395 - _275;
  if (__n_7(D) > _276)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 52>:
  # DEBUG D#85 => this_9(D)
  # DEBUG D#85 => this_9(D)
  # DEBUG this => D#85
  # DEBUG this => D#85
  # DEBUG D#85 => this_9(D)
  # DEBUG D#85 => this_9(D)
  # DEBUG this => D#85
  # DEBUG this => D#85
  # DEBUG __a => &D.98779
  # DEBUG __b => &__n
  _18 = MAX_EXPR <__n_7(D), _275>;
  __len_280 = _18 + _275;
  # DEBUG __len => __len_280
  # DEBUG D#85 => this_9(D)
  # DEBUG D#85 => this_9(D)
  # DEBUG this => D#85
  # DEBUG this => D#85
  # DEBUG D#786 => this_9(D)
  # DEBUG this => D#786
  # DEBUG D#785 => D#786
  # DEBUG D#784 => &D#785->D.49577
  # DEBUG this => D#784
  # DEBUG __a => D#783
  # DEBUG D#782 => D#783
  # DEBUG D#781 => D#782
  # DEBUG this => D#781
  _25 = __len_280 > 230584300921369395;
  _359 = _275 > __len_280;
  _422 = _25 | _359;
  if (_422 != 0)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 53>:
  pretmp_462 = __len_280 * 80;

  <bb 54>:
  # __elems_before_421 = PHI <__elems_before_334(110), __elems_before_329(53)>
  # _186 = PHI <_338(110), _188(53)>
  # prephitmp_463 = PHI <18446744073709551600(110), pretmp_462(53)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#216 => &this_9(D)->D.49577._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59872
  # DEBUG this => &__position
  # DEBUG this => &D.59872
  # DEBUG __elems_before => __elems_before_421
  # DEBUG D#1438 => &this_9(D)->D.49577
  # DEBUG D#794 => D#1438
  # DEBUG __n => NULL
  # DEBUG this => D#794
  # DEBUG D#793 => D#794
  # DEBUG D#792 => &D#793->_M_impl
  # DEBUG D#791 => D#792
  # DEBUG __n => NULL
  # DEBUG __a => D#791
  # DEBUG D#790 => D#791
  # DEBUG D#788 => D#790
  # DEBUG D#789 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#788
  # DEBUG D.98767 => D#789
  # DEBUG D#787 => D#788
  # DEBUG D#781 => D#787
  # DEBUG this => D#781
  _268 = operator new (prephitmp_463);

  <bb 55>:
  # __new_finish_269 = PHI <0B(111), _268(54)>
  # __elems_before_357 = PHI <__elems_before_329(111), __elems_before_421(54)>
  # _187 = PHI <_188(111), _186(54)>
  # prephitmp_411 = PHI <0(111), prephitmp_463(54)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1422 => &this_9(D)->D.49577
  # DEBUG this => D#1422
  _27 = (long unsigned int) _187;
  __first_28 = __new_finish_269 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.89174 => D#985
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __cur => __first_28
  # DEBUG __n => __n_7(D)

  <bb 56>:
  # __n_185 = PHI <__n_262(68), __n_7(D)(55)>
  # __first_326 = PHI <__first_263(68), __first_28(55)>
  # DEBUG __cur => __first_326
  # DEBUG __n => __n_185
  # DEBUG __r => __first_326
  # DEBUG __p => NULL
  # DEBUG __value => __x_29(D)
  # DEBUG D#9 => 80
  # DEBUG __p => NULL
  # DEBUG D.81789 => D#9
  if (__first_326 != 0B)
    goto <bb 57>;
  else
    goto <bb 67>;

  <bb 57>:
  # DEBUG this => NULL
  # DEBUG D.98755 => __x_29(D)
  # DEBUG D#2003 => &MEM[(const struct queue &)__x_29(D)].c
  # DEBUG D#2006 => &__first_326->c
  # DEBUG this => D#2006
  # DEBUG __x => D#2003
  # DEBUG this => D#2003
  # DEBUG D#214 => &D#2003->D.53612._M_impl._M_start
  # DEBUG D#215 => &D#2003->D.53612._M_impl._M_finish
  # DEBUG __x => D#215
  # DEBUG __y => D#214
  # DEBUG __size => 8
  _17 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_node;
  _282 = (long int) _17;
  _283 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_node;
  _284 = (long int) _283;
  _285 = _282 - _284;
  _286 = _285 /[ex] 8;
  _287 = _286 + -1;
  _288 = _287 * 64;
  _289 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_cur;
  _290 = (long int) _289;
  _291 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_first;
  _292 = (long int) _291;
  _293 = _290 - _292;
  _294 = _293 /[ex] 8;
  _295 = _288 + _294;
  _296 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_last;
  _297 = (long int) _296;
  _298 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_cur;
  _299 = (long int) _298;
  _300 = _297 - _299;
  _301 = _300 /[ex] 8;
  _302 = _295 + _301;
  _303 = (size_type) _302;
  # DEBUG D#977 => &D#2003->D.53612
  # DEBUG this => D#977
  # DEBUG __a => NULL
  _304 = &MEM[(struct deque *)__first_326].D.53612;
  # DEBUG this => _304
  # DEBUG __a => NULL
  # DEBUG __num_elements => _303
  # DEBUG D#895 => &_304->_M_impl
  # DEBUG this => D#895
  # DEBUG __a => NULL
  # DEBUG this => D#895
  # DEBUG __a => NULL
  # DEBUG this => D#895
  # DEBUG D.75437 => NULL
  MEM[(struct _Deque_impl *)__first_326]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_326]._M_map_size = 0;
  # DEBUG D#478 => &D#895->_M_start
  # DEBUG this => D#478
  MEM[(struct _Deque_iterator *)__first_326 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_326 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_326 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_326 + 16B]._M_node = 0B;
  # DEBUG D#477 => &D#895->_M_finish
  # DEBUG this => D#477
  MEM[(struct _Deque_iterator *)__first_326 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_326 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_326 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_326 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_304, _303);

  <bb 58>:
  # DEBUG D#978 => &D#2006->D.53612
  # DEBUG this => D#978
  # DEBUG D#979 => &D#2006->D.53612._M_impl._M_start
  # DEBUG this => &D.98800
  # DEBUG __x => D#979
  _305 = MEM[(const struct iterator &)__first_326 + 16]._M_cur;
  _307 = MEM[(const struct iterator &)__first_326 + 16]._M_last;
  _308 = MEM[(const struct iterator &)__first_326 + 16]._M_node;
  # DEBUG this => D#2003
  # DEBUG D#112 => &D#2003->D.53612._M_impl._M_finish
  # DEBUG this => &D.98801
  # DEBUG __x => D#112
  _309 = MEM[(const struct iterator &)__x_29(D) + 48]._M_cur;
  _310 = MEM[(const struct iterator &)__x_29(D) + 48]._M_first;
  # DEBUG D#2005 => MEM[(const struct iterator &)__x_29(D) + 48]._M_last
  _312 = MEM[(const struct iterator &)__x_29(D) + 48]._M_node;
  # DEBUG this => D#2003
  # DEBUG D#113 => &D#2003->D.53612._M_impl._M_start
  # DEBUG this => &D.98802
  # DEBUG __x => D#113
  __first$_M_cur_313 = MEM[(const struct iterator &)__x_29(D) + 16]._M_cur;
  # DEBUG D#2009 => MEM[(const struct iterator &)__x_29(D) + 16]._M_first
  __first$_M_last_315 = MEM[(const struct iterator &)__x_29(D) + 16]._M_last;
  __first$_M_node_316 = MEM[(const struct iterator &)__x_29(D) + 16]._M_node;
  # DEBUG __result => &D.98800
  # DEBUG D.98806 => D#976
  # DEBUG this => &D.98810
  # DEBUG __x => &D.98800
  # DEBUG __result => &D.98810
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.98810
  # DEBUG __result => NULL
  # DEBUG this => &D.98824
  # DEBUG __x => NULL
  # DEBUG __result => &D.98824
  # DEBUG this => &D.98844
  # DEBUG __x => &D.98824
  # DEBUG __it => _309
  # DEBUG __it$8 => _310
  # DEBUG __it$16 => D#2005
  # DEBUG __it$24 => _312
  # DEBUG __it$_M_cur => _309
  # DEBUG __it$_M_first => _310
  # DEBUG __it$_M_last => D#2005
  # DEBUG __it$_M_node => _312
  # DEBUG __it => __first$_M_cur_313
  # DEBUG __it$8 => D#2009
  # DEBUG __it$16 => __first$_M_last_315
  # DEBUG __it$24 => __first$_M_node_316
  # DEBUG __it$_M_cur => __first$_M_cur_313
  # DEBUG __it$_M_first => D#2009
  # DEBUG __it$_M_last => __first$_M_last_315
  # DEBUG __it$_M_node => __first$_M_node_316
  # DEBUG __result => &D.98844
  # DEBUG this => NULL
  # DEBUG __x => &D.98844
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _309
  # DEBUG __it$8 => _310
  # DEBUG __it$16 => D#2005
  # DEBUG __it$24 => _312
  # DEBUG __it$_M_cur => _309
  # DEBUG __it$_M_first => _310
  # DEBUG __it$_M_last => D#2005
  # DEBUG __it$_M_node => _312
  # DEBUG __it => __first$_M_cur_313
  # DEBUG __it$8 => D#2009
  # DEBUG __it$16 => __first$_M_last_315
  # DEBUG __it$24 => __first$_M_node_316
  # DEBUG __it$_M_cur => __first$_M_cur_313
  # DEBUG __it$_M_first => D#2009
  # DEBUG __it$_M_last => __first$_M_last_315
  # DEBUG __it$_M_node => __first$_M_node_316
  # DEBUG __first => __first$_M_cur_313
  # DEBUG __first$8 => D#2009
  # DEBUG __first$16 => __first$_M_last_315
  # DEBUG __first$24 => __first$_M_node_316
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.98869
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_313
  # DEBUG __first$_M_first => D#2009
  # DEBUG __first$_M_last => __first$_M_last_315
  # DEBUG __first$_M_node => __first$_M_node_316
  # DEBUG __result => &D.98869
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _350 = (long int) _312;
  _352 = (long int) __first$_M_node_316;
  _353 = _350 - _352;
  _354 = _353 /[ex] 8;
  _355 = _354 + -1;
  _356 = _355 * 64;
  _358 = (long int) _309;
  _360 = (long int) _310;
  _361 = _358 - _360;
  _362 = _361 /[ex] 8;
  _363 = _356 + _362;
  _365 = (long int) __first$_M_last_315;
  _367 = (long int) __first$_M_cur_313;
  _368 = _365 - _367;
  _369 = _368 /[ex] 8;
  __n_370 = _363 + _369;
  # DEBUG __n => __n_370
  # DEBUG __n => __n_370
  if (__n_370 <= 0)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG this => &D.98809
  # DEBUG __x => &D.98869
  D.98869 ={v} {CLOBBER};
  D.98844 ={v} {CLOBBER};
  D.98824 ={v} {CLOBBER};
  D.98810 ={v} {CLOBBER};
  D.98800 ={v} {CLOBBER};
  goto <bb 67>;

  <bb 60>:

  <bb 61>:
  # __n_574 = PHI <__n_370(60), __n_381(66)>
  # SR.3865_479 = PHI <_305(60), SR.3865_478(66)>
  # SR.3866_477 = PHI <_307(60), SR.3866_476(66)>
  # SR.3867_601 = PHI <_308(60), SR.3867_600(66)>
  # __first$_M_cur_598 = PHI <__first$_M_cur_313(60), __first$_M_cur_597(66)>
  # __first$_M_last_596 = PHI <__first$_M_last_315(60), __first$_M_last_595(66)>
  # __first$_M_node_593 = PHI <__first$_M_node_316(60), __first$_M_node_592(66)>
  # DEBUG __first$_M_node => __first$_M_node_593
  # DEBUG __first$_M_last => __first$_M_last_596
  # DEBUG __first$_M_cur => __first$_M_cur_598
  # DEBUG __n => __n_574
  # DEBUG D#130 => &D.98869
  # DEBUG this => D#130
  # DEBUG D#975 => &__first
  # DEBUG this => D#975
  _374 = MEM[(struct Credit * const &)__first$_M_cur_598];
  *SR.3865_479 = _374;
  # DEBUG this => &__first
  __first$_M_cur_376 = __first$_M_cur_598 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_376
  if (__first$_M_cur_376 == __first$_M_last_596)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG this => &__first
  __first$_M_node_387 = __first$_M_node_593 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_387
  # DEBUG __first$_M_node => __first$_M_node_387
  __first$_M_cur_388 = MEM[(struct Credit * * *)__first$_M_node_593 + 8B];
  # DEBUG __size => 8
  __first$_M_last_389 = __first$_M_cur_388 + 512;
  # DEBUG __first$_M_last => __first$_M_last_389
  # DEBUG __first$_M_cur => __first$_M_cur_388

  <bb 63>:
  # __first$_M_cur_597 = PHI <__first$_M_cur_376(61), __first$_M_cur_388(62)>
  # __first$_M_last_595 = PHI <__first$_M_last_596(61), __first$_M_last_389(62)>
  # __first$_M_node_592 = PHI <__first$_M_node_593(61), __first$_M_node_387(62)>
  # DEBUG __first$_M_node => __first$_M_node_592
  # DEBUG __first$_M_last => __first$_M_last_595
  # DEBUG __first$_M_cur => __first$_M_cur_597
  # DEBUG this => &D.98869
  _379 = SR.3865_479 + 8;
  if (_379 == SR.3866_477)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  # DEBUG this => &D.98869
  _391 = SR.3867_601 + 8;
  # DEBUG this => &D.98869
  # DEBUG __new_node => _391
  _392 = MEM[(struct Credit * * *)SR.3867_601 + 8B];
  # DEBUG __size => 8
  _393 = _392 + 512;

  <bb 65>:
  # SR.3865_478 = PHI <_379(63), _392(64)>
  # SR.3866_476 = PHI <SR.3866_477(63), _393(64)>
  # SR.3867_600 = PHI <SR.3867_601(63), _391(64)>
  __n_381 = __n_574 + -1;
  # DEBUG __n => __n_381
  # DEBUG __n => __n_381
  if (__n_381 <= 0)
    goto <bb 59>;
  else
    goto <bb 66>;

  <bb 66>:
  goto <bb 61>;

  <bb 67>:
  __n_262 = __n_185 + 18446744073709551615;
  # DEBUG __n => __n_262
  __first_263 = __first_326 + 80;
  # DEBUG __cur => __first_263
  # DEBUG __cur => __first_263
  # DEBUG __n => __n_262
  if (__n_262 == 0)
    goto <bb 69>;
  else
    goto <bb 68>;

  <bb 68>:
  goto <bb 56>;

  <bb 69>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1423 => &this_9(D)->D.49577
  # DEBUG this => D#1423
  # DEBUG this => &__position
  _32 = this_9(D)->D.49577._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#2013
  # DEBUG __result => NULL
  # DEBUG __alloc => D#984
  # DEBUG D#983 => D#984
  # DEBUG D#980 => D#983
  # DEBUG __first => _32
  # DEBUG __last => D#2013
  # DEBUG __result => NULL
  # DEBUG D.89195 => D#980
  # DEBUG __first => _32
  # DEBUG __last => D#2013
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (_32, __position_23, __new_finish_269);
  goto <bb 76>;

  # __first_447 = PHI <__first_326(57)>
<L22>:
  _264 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_264);
  # DEBUG __first => __first_28
  # DEBUG __last => __first_447
  # DEBUG __first => __first_28
  # DEBUG __last => __first_447
  # DEBUG __first => __first_28
  if (__first_28 == __first_447)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  __cxa_rethrow ();

  <bb 72>:

  <bb 73>:
  # __first_573 = PHI <__first_28(72), __first_267(74)>
  # DEBUG __first => __first_573
  # DEBUG __r => __first_573
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  _266 = &MEM[(struct deque *)__first_573].D.53612;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_266);
  MEM[(struct  &)__first_573] ={v} {CLOBBER};
  __first_267 = __first_573 + 80;
  # DEBUG __first => __first_267
  # DEBUG __first => __first_267
  if (__first_267 == __first_447)
    goto <bb 71>;
  else
    goto <bb 74>;

  <bb 74>:
  goto <bb 73>;

<L24>:
  __cxa_end_catch ();
  resx 16

  <bb 76>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 80;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#1424 => &this_9(D)->D.49577
  # DEBUG this => D#1424
  _36 = this_9(D)->D.49577._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#2013
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#984
  # DEBUG D#983 => D#984
  # DEBUG D#980 => D#983
  # DEBUG __first => D#2013
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.89214 => D#980
  # DEBUG __first => D#2013
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _94 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__position_23, _36, __new_finish_34);
  goto <bb 78>;

<L33>:
  goto <bb 97> (<L13>);

  <bb 78>:
  # DEBUG __new_finish => _94
  # DEBUG D#1425 => &this_9(D)->D.49577
  # DEBUG this => D#1425
  _38 = this_9(D)->D.49577._M_impl._M_finish;
  __first_39 = this_9(D)->D.49577._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 90>;
  else
    goto <bb 79>;

  <bb 79>:

  <bb 80>:
  # __first_550 = PHI <__first_39(79), __first_96(88)>
  # DEBUG __first => __first_550
  # DEBUG __r => __first_550
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  # DEBUG D#2004 => &MEM[(struct deque *)__first_550].D.53612
  # DEBUG this => D#2004
  _394 = MEM[(struct _Deque_base *)__first_550]._M_impl._M_map;
  if (_394 != 0B)
    goto <bb 81>;
  else
    goto <bb 87>;

  <bb 81>:
  _395 = MEM[(struct _Deque_base *)__first_550]._M_impl._M_finish._M_node;
  _396 = _395 + 8;
  __nstart_397 = MEM[(struct _Deque_base *)__first_550]._M_impl._M_start._M_node;
  # DEBUG this => D#2004
  # DEBUG __nstart => __nstart_397
  # DEBUG __nfinish => _396
  # DEBUG __n => __nstart_397
  # DEBUG __n => __nstart_397
  if (_396 <= __nstart_397)
    goto <bb 86>;
  else
    goto <bb 82>;

  <bb 82>:

  <bb 83>:
  # __nstart_575 = PHI <__nstart_397(82), __nstart_400(84)>
  # DEBUG __n => __nstart_575
  _399 = *__nstart_575;
  # DEBUG this => D#2004
  # DEBUG __p => _399
  # DEBUG __size => 8
  # DEBUG D#629 => &D#2004->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _399
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _399
  # DEBUG this => D#623
  # DEBUG D.98904 => D#624
  operator delete (_399);
  __nstart_400 = __nstart_575 + 8;
  # DEBUG __n => __nstart_400
  # DEBUG __n => __nstart_400
  if (_396 <= __nstart_400)
    goto <bb 85>;
  else
    goto <bb 84>;

  <bb 84>:
  goto <bb 83>;

  <bb 85>:
  pretmp_458 = MEM[(struct _Deque_base *)__first_550]._M_impl._M_map;

  <bb 86>:
  # prephitmp_459 = PHI <pretmp_458(85), _394(81)>
  # DEBUG D#646 => D#2004->_M_impl._M_map_size
  # DEBUG D#2012 => MEM[(struct _Deque_base *)__first_550]._M_impl._M_map
  # DEBUG D#644 => D#2004
  # DEBUG D#645 => D#646
  # DEBUG __p => D#2012
  # DEBUG this => D#644
  # DEBUG __n => D#645
  # DEBUG D#643 => D#645
  # DEBUG D#642 => D#644
  # DEBUG D#641 => D#642
  # DEBUG this => D#641
  # DEBUG D#640 => D#641
  # DEBUG this => D#640
  # DEBUG this => NULL
  # DEBUG D.77171 => NULL
  # DEBUG this => NULL
  # DEBUG D#475 => &__map_alloc
  # DEBUG D#476 => D#643
  # DEBUG __p => D#2012
  # DEBUG __a => D#475
  # DEBUG __n => D#476
  # DEBUG D#474 => D#476
  # DEBUG D#473 => D#475
  # DEBUG D#471 => D#473
  # DEBUG D#472 => D#474
  # DEBUG __p => D#2012
  # DEBUG this => D#471
  # DEBUG D.98914 => D#472
  operator delete (prephitmp_459);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 87>:
  # DEBUG D#647 => &D#2004->_M_impl
  # DEBUG this => D#647
  # DEBUG this => D#647
  # DEBUG this => D#647
  MEM[(struct  &)__first_550] ={v} {CLOBBER};
  __first_96 = __first_550 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 80>;

  <bb 89>:
  pretmp_454 = this_9(D)->D.49577._M_impl._M_start;

  <bb 90>:
  # prephitmp_455 = PHI <pretmp_454(89), __first_39(78)>
  # DEBUG D#1436 => this_9(D)->D.49577._M_impl._M_end_of_storage
  # DEBUG D#1435 => (long int) D#1436
  # DEBUG D#2011 => this_9(D)->D.49577._M_impl._M_start
  # DEBUG D#1434 => (long int) D#2011
  # DEBUG D#1433 => D#1435 - D#1434
  # DEBUG D#1432 => D#1433 /[ex] 80
  # DEBUG D#1431 => &this_9(D)->D.49577
  # DEBUG D#409 => D#1431
  # DEBUG D#410 => (long unsigned int) D#1432
  # DEBUG __p => D#2011
  # DEBUG this => D#409
  # DEBUG __n => D#410
  # DEBUG D#408 => D#410
  # DEBUG D#407 => D#409
  if (prephitmp_455 != 0B)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  # DEBUG D#406 => &D#407->_M_impl
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#408
  # DEBUG __p => D#2011
  # DEBUG __a => D#404
  # DEBUG __n => D#405
  # DEBUG D#403 => D#405
  # DEBUG D#402 => D#404
  # DEBUG D#400 => D#402
  # DEBUG D#401 => D#403
  # DEBUG __p => D#2011
  # DEBUG this => D#400
  # DEBUG D.89237 => D#401
  operator delete (prephitmp_455);

  <bb 92>:
  this_9(D)->D.49577._M_impl._M_start = __new_finish_269;
  this_9(D)->D.49577._M_impl._M_finish = _94;
  _45 = __new_finish_269 + prephitmp_411;
  this_9(D)->D.49577._M_impl._M_end_of_storage = _45;

  <bb 93>:
  return;

<L26>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#657 => &__x_copy.c
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.53612);
  resx 2

<L32>:

  # __new_finish_1 = PHI <__new_finish_34(77), 0B(96)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 100>;
  else
    goto <bb 98>;

  <bb 98>:
  # DEBUG __first => __new_finish_269
  if (__new_finish_1 == __new_finish_269)
    goto <bb 99>;
  else
    goto <bb 104>;

  <bb 99>:
  # DEBUG D#1437 => &this_9(D)->D.49577
  # DEBUG D#409 => D#1437
  # DEBUG __p => NULL
  # DEBUG this => D#409
  # DEBUG __n => D#410
  # DEBUG D#408 => D#410
  # DEBUG D#407 => D#409
  if (__new_finish_269 != 0B)
    goto <bb 107>;
  else
    goto <bb 108>;

  <bb 100>:
  # DEBUG D#1429 => &this_9(D)->D.49577
  # DEBUG this => D#1429
  _49 = __n_7(D) + __elems_before_357;
  _50 = _49 * 80;
  _51 = __new_finish_269 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51
  # DEBUG __first => __first_28
  if (__first_28 == _51)
    goto <bb 99>;
  else
    goto <bb 101>;

  <bb 101>:

  <bb 102>:
  # __first_556 = PHI <__first_28(101), __first_98(103)>
  # DEBUG __first => __first_556
  # DEBUG __r => __first_556
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  _97 = &MEM[(struct deque *)__first_556].D.53612;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_97);
  MEM[(struct  &)__first_556] ={v} {CLOBBER};
  __first_98 = __first_556 + 80;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_51 == __first_98)
    goto <bb 99>;
  else
    goto <bb 103>;

  <bb 103>:
  goto <bb 102>;

  <bb 104>:

  <bb 105>:
  # __new_finish_559 = PHI <__new_finish_269(104), __new_finish_101(106)>
  # DEBUG __first => __new_finish_559
  # DEBUG __r => __new_finish_559
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  _100 = &MEM[(struct deque *)__new_finish_559].D.53612;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_559] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_559 + 80;
  # DEBUG __first => __new_finish_101
  # DEBUG __first => __new_finish_101
  if (__new_finish_1 == __new_finish_101)
    goto <bb 99>;
  else
    goto <bb 106>;

  <bb 106>:
  goto <bb 105>;

  <bb 107>:
  # DEBUG D#406 => &D#407->_M_impl
  # DEBUG D#404 => D#406
  # DEBUG D#405 => D#408
  # DEBUG __p => NULL
  # DEBUG __a => D#404
  # DEBUG __n => D#405
  # DEBUG D#403 => D#405
  # DEBUG D#402 => D#404
  # DEBUG D#400 => D#402
  # DEBUG D#401 => D#403
  # DEBUG __p => NULL
  # DEBUG this => D#400
  # DEBUG D.89288 => D#401
  operator delete (__new_finish_269);

  <bb 108>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 110>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#216 => &this_9(D)->D.49577._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59872
  # DEBUG this => &__position
  _337 = (long int) __position_23;
  # DEBUG this => &D.59872
  _338 = _337 - _272;
  _333 = _338 /[ex] 80;
  __elems_before_334 = (const size_type) _333;
  # DEBUG __elems_before => __elems_before_334
  # DEBUG D#1438 => &this_9(D)->D.49577
  # DEBUG D#794 => D#1438
  # DEBUG __n => NULL
  # DEBUG this => D#794
  # DEBUG D#793 => D#794
  goto <bb 54>;

  <bb 111>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#216 => &this_9(D)->D.49577._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.59872
  # DEBUG this => &__position
  _327 = (long int) __position_23;
  # DEBUG this => &D.59872
  _188 = _327 - _272;
  _189 = _188 /[ex] 80;
  __elems_before_329 = (const size_type) _189;
  # DEBUG __elems_before => __elems_before_329
  # DEBUG D#1438 => &this_9(D)->D.49577
  # DEBUG D#794 => D#1438
  # DEBUG __n => NULL
  # DEBUG this => D#794
  # DEBUG D#793 => D#794
  if (__len_280 != 0)
    goto <bb 53>;
  else
    goto <bb 55>;

<L25>:
  # DEBUG __new_finish => __new_finish_269
  _451 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_451);
  if (__new_finish_269 == 0B)
    goto <bb 100>;
  else
    goto <bb 99>;

}



;; Function ChaosRouter::ChaosRouter(const Configuration&, Module*, const string&, int, int, int) (_ZN11ChaosRouterC2ERK13ConfigurationP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiii, funcdef_no=2031, decl_uid=50410, cgraph_uid=491, symbol_order=492)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
ChaosRouter::ChaosRouter(const Configuration&, Module*, const string&, int, int, int) (struct ChaosRouter * const this, const struct Configuration & config, struct Module * parent, const struct string & name, int id, int inputs, int outputs)
{
  struct _Rb_tree_node_base * SR.3970;
  struct _Rb_tree_node_base * SR.3969;
  struct iterator __position;
  value_type __x;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator __position;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator __position;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct Credit * * * __nstart;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  size_type __dnew;
  struct iterator __position;
  struct OutputSet * __x;
  struct iterator __position;
  struct OutputSet * __x;
  struct basic_string & D.99275;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.99235;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.99220;
  struct iterator D.99205;
  struct _Rb_tree_node * __y;
  struct basic_string & D.99149;
  size_type __dnew;
  struct _Rb_tree_node_base * SR.2180;
  struct iterator D.89485;
  struct string rf;
  int i;
  struct deque D.53762;
  struct value_type D.53761;
  struct deque D.53760;
  struct value_type D.53759;
  struct deque D.53758;
  struct value_type D.53757;
  struct deque D.53756;
  struct value_type D.53755;
  const struct string D.53752;
  struct basic_string D.53744;
  const struct string D.53738;
  struct string D.53737;
  struct basic_string D.53736;
  const struct string D.53741;
  struct string D.53740;
  const struct string D.53733;
  const struct string D.53731;
  const struct string D.53729;
  const struct string D.53727;
  static const char __PRETTY_FUNCTION__[86] = "ChaosRouter::ChaosRouter(const Configuration&, Module*, const string&, int, int, int)";
  static const char __PRETTY_FUNCTION__[86] = "ChaosRouter::ChaosRouter(const Configuration&, Module*, const string&, int, int, int)";
  struct Router * _21;
  long unsigned int _31;
  struct OutputSet * & _32;
  struct _Rb_tree_node_base * _33;
  long unsigned int _34;
  struct OutputSet * & _35;
  long unsigned int _36;
  char * const _41;
  char * const _43;
  long unsigned int _44;
  int _47;
  char * const _50;
  int _54;
  struct vector * pretmp_55;
  char * const _57;
  unsigned int _58;
  int _61;
  char * const _64;
  long unsigned int _67;
  long unsigned int _70;
  struct vector * pretmp_73;
  struct vector * pretmp_74;
  char * const _75;
  char * const _77;
  char * const _79;
  char * const _81;
  char * const _83;
  char * const _85;
  const size_type _86;
  struct vector * pretmp_87;
  char * const _90;
  long unsigned int _92;
  void (*<T7a35>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _93;
  int _95;
  long unsigned int _96;
  struct vector * _97;
  struct OutputSet * * const _98;
  int _99;
  void * _101;
  long unsigned int _107;
  int _110;
  long unsigned int _111;
  struct vector * _112;
  struct vector * pretmp_113;
  int _114;
  void * _116;
  long unsigned int _122;
  void * _129;
  int _130;
  int _131;
  char * const _136;
  int _137;
  long unsigned int _138;
  struct vector * _139;
  struct queue * const _140;
  int _143;
  long unsigned int _144;
  struct vector * _145;
  struct queue * const _146;
  int _149;
  long unsigned int _150;
  struct vector * _151;
  struct queue * const _152;
  int _155;
  long unsigned int _156;
  struct vector * _157;
  struct Credit * * * _158;
  int _162;
  long unsigned int _163;
  struct vector * _164;
  int * const _165;
  struct vector * _168;
  int * const _169;
  struct vector * _172;
  unsigned int _173;
  int _174;
  long unsigned int _175;
  struct vector * _176;
  int * const _177;
  struct vector * _180;
  int * const _181;
  int _182;
  long unsigned int _183;
  struct vector * _184;
  int * const _185;
  struct vector * _188;
  unsigned int _189;
  struct vector * _192;
  eQState * const _193;
  struct vector * _196;
  int _198;
  long unsigned int _199;
  struct _Rb_tree_node_base * _202;
  unsigned int _204;
  struct vector * prephitmp_205;
  char * const _207;
  char * const _210;
  char * const _221;
  char * const _223;
  char * const _226;
  char * const _227;
  char * const _230;
  char * const _232;
  char * const _235;
  char * const _237;
  int * _241;
  int * _242;
  int * _243;
  int * _244;
  eQState * _245;
  eQState * _246;
  int * _247;
  struct OutputSet * * _250;
  struct OutputSet * * _257;
  struct OutputSet * * _260;
  struct OutputSet * * _261;
  _Bit_type * _265;
  long unsigned int _266;
  int & _267;
  long unsigned int _268;
  eQState & _269;
  char * const _270;
  const size_type _398;
  struct vector * pretmp_486;
  struct vector * prephitmp_629;
  struct vector * pretmp_630;
  struct vector * pretmp_631;
  struct _Rb_tree_node_base * cstore_635;
  struct vector * pretmp_642;
  struct vector * pretmp_643;
  struct vector * pretmp_644;
  struct vector * pretmp_645;
  char * const _646;
  const size_type _647;
  char * _648;
  char * const _649;
  const size_type _650;
  struct vector * pretmp_651;
  struct vector * pretmp_653;
  char * const _654;
  const size_type _655;
  char * _656;
  const size_type _657;
  char * const _658;
  char * const _659;
  int prephitmp_662;
  struct vector * pretmp_663;
  char * const _675;
  long unsigned int _677;
  const size_type _683;
  char * const _686;
  long unsigned int _689;
  struct vector * pretmp_694;
  struct vector * pretmp_695;
  long unsigned int _697;
  const size_type _698;
  char * const _699;
  char * const _700;
  long unsigned int _701;
  struct OutputSet * * const _703;
  struct OutputSet * * const _704;
  long int _705;
  long int _706;
  long int _707;
  long int _708;
  size_type _709;
  long unsigned int _710;
  long unsigned int _711;
  struct OutputSet * * _712;
  struct OutputSet * * const _713;
  long int _714;
  long int _715;
  long int _716;
  long int _717;
  size_type _718;
  long unsigned int _719;
  long unsigned int _720;
  struct OutputSet * * _721;
  struct vector * pretmp_722;
  struct vector * pretmp_723;
  char * _730;
  long unsigned int __dnew.4_731;
  struct vector * pretmp_733;
  long unsigned int __dnew.4_734;
  char * const _735;
  char * _736;
  struct queue * const _737;
  struct queue * const _738;
  long int _739;
  long int _740;
  long int _741;
  long int _742;
  size_type _743;
  long unsigned int _744;
  long unsigned int _745;
  struct _Deque_base * _748;
  struct queue * const _750;
  long int _751;
  long int _752;
  long int _753;
  long int _754;
  size_type _755;
  long unsigned int _756;
  long unsigned int _757;
  struct _Deque_base * _760;
  struct queue * const _762;
  long int _763;
  long int _764;
  long int _765;
  long int _766;
  size_type _767;
  long unsigned int _768;
  long unsigned int _769;
  struct _Deque_base * _772;
  struct queue * const _774;
  long int _775;
  long int _776;
  long int _777;
  long int _778;
  size_type _779;
  long unsigned int _780;
  long unsigned int _781;
  struct Credit * * * _786;
  struct Credit * * * _787;
  struct Credit * * _790;
  eQState * const _793;
  eQState * const _794;
  long int _795;
  long int _796;
  long int _797;
  long int _798;
  size_type _799;
  long unsigned int _800;
  long unsigned int _801;
  eQState * _802;
  int * const _803;
  long int _804;
  long int _805;
  long int _806;
  long int _807;
  size_type _808;
  long unsigned int _809;
  long unsigned int _810;
  int * _811;
  int * const _812;
  long int _813;
  long int _814;
  long int _815;
  long int _816;
  size_type _817;
  long unsigned int _818;
  long unsigned int _819;
  int * _820;
  _Bit_type * _821;
  unsigned int _822;
  _Bit_type * _823;
  long int _824;
  long int _825;
  long int _826;
  long int _827;
  long int _828;
  long int _829;
  long int _830;
  ptrdiff_t _831;
  size_type _832;
  long int __new_size.205_833;
  long int _835;
  long unsigned int _836;
  long unsigned int _837;
  unsigned int _843;
  long unsigned int _845;
  struct vector * pretmp_846;
  int * const _847;
  long int _848;
  long int _849;
  long int _850;
  long int _851;
  size_type _852;
  long unsigned int _853;
  long unsigned int _854;
  int * _855;
  int * const _856;
  long int _857;
  long int _858;
  long int _859;
  long int _860;
  size_type _861;
  long unsigned int _862;
  long unsigned int _863;
  int * _864;
  int * const _865;
  long int _866;
  long int _867;
  long int _868;
  long int _869;
  size_type _870;
  long unsigned int _871;
  long unsigned int _872;
  int * _873;
  _Bit_type * _874;
  unsigned int _875;
  _Bit_type * _876;
  long int _877;
  long int _878;
  long int _879;
  long int _880;
  long int _881;
  long int _882;
  long int _883;
  ptrdiff_t _884;
  size_type _885;
  long int __new_size.205_886;
  long int _888;
  long unsigned int _889;
  long unsigned int _890;
  unsigned int _896;
  long unsigned int _898;
  struct vector * pretmp_899;
  eQState * const _900;
  long int _901;
  long int _902;
  long int _903;
  long int _904;
  size_type _905;
  long unsigned int _906;
  long unsigned int _907;
  eQState * _908;
  struct vector * pretmp_914;
  struct vector * pretmp_941;
  struct vector * pretmp_949;
  struct vector * prephitmp_957;
  struct vector * pretmp_962;
  struct vector * pretmp_1063;
  struct vector * pretmp_1064;
  struct vector * pretmp_1065;
  struct vector * pretmp_1066;
  struct vector * pretmp_1067;
  struct vector * pretmp_1068;
  struct vector * pretmp_1069;
  struct vector * pretmp_1070;
  struct vector * pretmp_1071;
  struct vector * pretmp_1072;
  struct vector * prephitmp_1074;
  struct vector * pretmp_1075;
  struct vector * pretmp_1076;
  struct vector * pretmp_1077;
  int pretmp_1080;
  struct vector * pretmp_1102;
  struct vector * pretmp_1103;
  struct vector * pretmp_1115;
  struct vector * pretmp_1116;
  int pretmp_1117;
  struct vector * pretmp_1119;
  struct vector * pretmp_1120;
  struct vector * pretmp_1121;
  struct vector * pretmp_1122;
  struct vector * pretmp_1123;
  struct vector * pretmp_1124;
  struct vector * pretmp_1125;
  struct vector * pretmp_1126;
  struct vector * pretmp_1127;
  struct vector * pretmp_1128;
  struct vector * pretmp_1129;
  struct vector * pretmp_1130;
  struct vector * pretmp_1131;
  struct vector * pretmp_1132;
  struct vector * pretmp_1133;
  struct vector * prephitmp_1134;
  struct vector * pretmp_1135;
  struct vector * pretmp_1136;
  struct vector * pretmp_1137;
  struct vector * pretmp_1138;
  struct vector * pretmp_1139;
  struct vector * pretmp_1140;
  struct vector * pretmp_1141;
  struct vector * pretmp_1142;
  struct vector * pretmp_1143;
  struct vector * pretmp_1144;
  struct vector * pretmp_1145;
  struct vector * pretmp_1146;
  struct vector * pretmp_1147;
  struct vector * pretmp_1148;
  struct vector * pretmp_1149;
  struct vector * pretmp_1151;
  struct vector * pretmp_1152;
  struct vector * pretmp_1153;
  struct vector * pretmp_1154;
  struct vector * pretmp_1155;
  struct vector * pretmp_1156;
  struct vector * pretmp_1157;
  struct vector * prephitmp_1158;
  struct vector * pretmp_1159;
  struct vector * pretmp_1161;
  struct vector * pretmp_1162;
  struct vector * pretmp_1163;
  struct vector * pretmp_1164;
  struct vector * pretmp_1165;
  struct vector * pretmp_1166;
  struct vector * pretmp_1167;
  struct vector * pretmp_1168;
  int prephitmp_1169;
  struct vector * pretmp_1171;
  int pretmp_1188;
  int prephitmp_1189;
  struct vector * pretmp_1190;
  struct vector * prephitmp_1191;
  struct vector * pretmp_1192;
  struct vector * prephitmp_1193;
  struct vector * pretmp_1194;
  struct vector * prephitmp_1195;
  struct vector * pretmp_1196;
  struct vector * prephitmp_1197;
  int pretmp_1198;
  long unsigned int pretmp_1200;
  long unsigned int prephitmp_1201;
  int pretmp_1209;
  long unsigned int pretmp_1211;
  long unsigned int prephitmp_1212;
  int pretmp_1243;
  long unsigned int pretmp_1245;
  long unsigned int prephitmp_1246;
  int pretmp_1265;
  int prephitmp_1266;
  long unsigned int pretmp_1267;
  long unsigned int prephitmp_1268;
  int pretmp_1282;
  int prephitmp_1283;
  long unsigned int pretmp_1284;
  long unsigned int prephitmp_1285;
  int pretmp_1301;
  int prephitmp_1302;
  long unsigned int pretmp_1303;
  long unsigned int prephitmp_1304;
  int pretmp_1307;
  int prephitmp_1308;
  eQState * pretmp_1322;
  int * pretmp_1324;
  _Bit_type * pretmp_1326;
  struct Credit * * * pretmp_1336;
  struct Credit * * * prephitmp_1337;
  const size_type pretmp_1344;
  const size_type prephitmp_1345;
  const size_type pretmp_1346;
  char * const pretmp_1348;
  struct vector * pretmp_1356;
  struct vector * pretmp_1357;
  struct vector * pretmp_1358;
  struct vector * pretmp_1359;
  struct vector * pretmp_1360;
  struct vector * pretmp_1361;
  struct vector * pretmp_1362;
  struct vector * pretmp_1363;
  struct vector * pretmp_1364;
  struct vector * prephitmp_1365;
  struct vector * pretmp_1366;
  struct vector * pretmp_1367;
  struct vector * pretmp_1368;
  struct vector * pretmp_1369;
  struct vector * pretmp_1370;
  struct vector * pretmp_1371;
  struct vector * pretmp_1372;
  struct vector * pretmp_1373;
  struct vector * pretmp_1374;
  struct vector * prephitmp_1375;
  struct vector * pretmp_1376;
  struct vector * pretmp_1377;
  struct vector * pretmp_1378;
  struct vector * pretmp_1379;
  struct vector * pretmp_1380;
  struct vector * pretmp_1381;
  struct vector * pretmp_1382;
  struct vector * pretmp_1383;
  struct vector * pretmp_1384;
  struct vector * prephitmp_1385;
  struct vector * pretmp_1386;
  struct vector * pretmp_1387;
  struct vector * pretmp_1388;
  struct vector * pretmp_1389;
  struct vector * pretmp_1390;
  struct vector * pretmp_1391;
  struct vector * pretmp_1392;
  struct vector * pretmp_1393;
  struct vector * pretmp_1394;
  struct vector * prephitmp_1395;
  struct vector * pretmp_1396;
  struct vector * pretmp_1397;
  struct vector * pretmp_1398;
  struct vector * pretmp_1399;
  struct vector * pretmp_1400;
  struct vector * pretmp_1401;
  struct vector * pretmp_1402;
  struct vector * pretmp_1403;
  struct vector * pretmp_1404;
  struct vector * prephitmp_1405;
  struct vector * pretmp_1406;
  struct vector * pretmp_1407;
  struct vector * pretmp_1408;
  struct vector * pretmp_1409;
  struct vector * pretmp_1410;
  struct vector * pretmp_1411;
  struct vector * pretmp_1412;
  struct vector * pretmp_1413;
  struct vector * pretmp_1414;
  struct vector * prephitmp_1415;

  <bb 2>:
  _21 = &this_20(D)->D.50427;
  Router::Router (_21, config_23(D), parent_24(D), name_25(D), id_26(D), inputs_27(D), outputs_28(D));
  this_20(D)->D.50427.D.43102.D.29663._vptr.Module = &MEM[(void *)&_ZTV11ChaosRouter + 16B];
  # DEBUG D#1472 => &this_20(D)->_input_route
  # DEBUG this => D#1472
  # DEBUG D#360 => &D#1472->D.48066
  # DEBUG this => D#360
  # DEBUG D#359 => &D#360->_M_impl
  # DEBUG this => D#359
  # DEBUG this => D#359
  # DEBUG this => D#359
  MEM[(struct _Vector_impl *)this_20(D) + 288B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 288B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 288B]._M_end_of_storage = 0B;
  # DEBUG D#1471 => &this_20(D)->_mq_route
  # DEBUG this => D#1471
  # DEBUG D#360 => &D#1471->D.48066
  # DEBUG this => D#360
  # DEBUG D#359 => &D#360->_M_impl
  # DEBUG this => D#359
  # DEBUG this => D#359
  # DEBUG this => D#359
  MEM[(struct _Vector_impl *)this_20(D) + 312B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 312B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 312B]._M_end_of_storage = 0B;
  # DEBUG D#1470 => &this_20(D)->_input_frame
  # DEBUG this => D#1470
  # DEBUG D#380 => &D#1470->D.48826
  # DEBUG this => D#380
  # DEBUG D#379 => &D#380->_M_impl
  # DEBUG this => D#379
  # DEBUG this => D#379
  # DEBUG this => D#379
  MEM[(struct _Vector_impl *)this_20(D) + 352B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 352B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 352B]._M_end_of_storage = 0B;
  # DEBUG D#1469 => &this_20(D)->_output_frame
  # DEBUG this => D#1469
  # DEBUG D#380 => &D#1469->D.48826
  # DEBUG this => D#380
  # DEBUG D#379 => &D#380->_M_impl
  # DEBUG this => D#379
  # DEBUG this => D#379
  # DEBUG this => D#379
  MEM[(struct _Vector_impl *)this_20(D) + 376B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 376B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 376B]._M_end_of_storage = 0B;
  # DEBUG D#1468 => &this_20(D)->_multi_queue
  # DEBUG this => D#1468
  # DEBUG D#380 => &D#1468->D.48826
  # DEBUG this => D#380
  # DEBUG D#379 => &D#380->_M_impl
  # DEBUG this => D#379
  # DEBUG this => D#379
  # DEBUG this => D#379
  MEM[(struct _Vector_impl *)this_20(D) + 400B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 400B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 400B]._M_end_of_storage = 0B;
  # DEBUG D#1467 => &this_20(D)->_next_queue_cnt
  # DEBUG this => D#1467
  # DEBUG D#281 => &D#1467->D.35782
  # DEBUG this => D#281
  # DEBUG D#280 => &D#281->_M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct _Vector_impl *)this_20(D) + 424B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 424B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 424B]._M_end_of_storage = 0B;
  # DEBUG D#1466 => &this_20(D)->_credit_queue
  # DEBUG this => D#1466
  # DEBUG D#399 => &D#1466->D.49577
  # DEBUG this => D#399
  # DEBUG D#398 => &D#399->_M_impl
  # DEBUG this => D#398
  # DEBUG this => D#398
  # DEBUG this => D#398
  MEM[(struct _Vector_impl *)this_20(D) + 448B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 448B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 448B]._M_end_of_storage = 0B;
  # DEBUG D#1465 => &this_20(D)->_input_state
  # DEBUG this => D#1465
  # DEBUG D#418 => &D#1465->D.50324
  # DEBUG this => D#418
  # DEBUG D#417 => &D#418->_M_impl
  # DEBUG this => D#417
  # DEBUG this => D#417
  # DEBUG this => D#417
  MEM[(struct _Vector_impl *)this_20(D) + 472B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 472B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 472B]._M_end_of_storage = 0B;
  # DEBUG D#1464 => &this_20(D)->_multi_state
  # DEBUG this => D#1464
  # DEBUG D#418 => &D#1464->D.50324
  # DEBUG this => D#418
  # DEBUG D#417 => &D#418->_M_impl
  # DEBUG this => D#417
  # DEBUG this => D#417
  # DEBUG this => D#417
  MEM[(struct _Vector_impl *)this_20(D) + 496B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 496B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 496B]._M_end_of_storage = 0B;
  # DEBUG D#1463 => &this_20(D)->_input_output_match
  # DEBUG this => D#1463
  # DEBUG D#281 => &D#1463->D.35782
  # DEBUG this => D#281
  # DEBUG D#280 => &D#281->_M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct _Vector_impl *)this_20(D) + 520B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 520B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 520B]._M_end_of_storage = 0B;
  # DEBUG D#1462 => &this_20(D)->_input_mq_match
  # DEBUG this => D#1462
  # DEBUG D#281 => &D#1462->D.35782
  # DEBUG this => D#281
  # DEBUG D#280 => &D#281->_M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct _Vector_impl *)this_20(D) + 544B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 544B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 544B]._M_end_of_storage = 0B;
  # DEBUG D#1461 => &this_20(D)->_multi_match
  # DEBUG this => D#1461
  # DEBUG D#281 => &D#1461->D.35782
  # DEBUG this => D#281
  # DEBUG D#280 => &D#281->_M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct _Vector_impl *)this_20(D) + 568B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 568B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 568B]._M_end_of_storage = 0B;
  # DEBUG D#1460 => &this_20(D)->_mq_age
  # DEBUG this => D#1460
  # DEBUG D#281 => &D#1460->D.35782
  # DEBUG this => D#281
  # DEBUG D#280 => &D#281->_M_impl
  # DEBUG this => D#280
  # DEBUG this => D#280
  # DEBUG this => D#280
  MEM[(struct _Vector_impl *)this_20(D) + 592B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 592B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_20(D) + 592B]._M_end_of_storage = 0B;
  # DEBUG D#1459 => &this_20(D)->_output_matched
  # DEBUG this => D#1459
  # DEBUG D#440 => &D#1459->D.43009
  # DEBUG this => D#440
  # DEBUG D#439 => &D#440->_M_impl
  # DEBUG this => D#439
  # DEBUG this => D#439
  # DEBUG this => D#439
  # DEBUG D#438 => &D#439->_M_start
  # DEBUG this => D#438
  # DEBUG D#16 => &D#438->D.27293
  # DEBUG this => D#16
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#16
  MEM[(struct _Bit_iterator_base *)this_20(D) + 616B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)this_20(D) + 616B]._M_offset = 0;
  # DEBUG D#437 => &D#439->_M_finish
  # DEBUG this => D#437
  # DEBUG D#16 => &D#437->D.27293
  # DEBUG this => D#16
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#16
  MEM[(struct _Bit_iterator_base *)this_20(D) + 632B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)this_20(D) + 632B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)this_20(D) + 616B]._M_end_of_storage = 0B;
  # DEBUG D#1458 => &this_20(D)->_mq_matched
  # DEBUG this => D#1458
  # DEBUG D#440 => &D#1458->D.43009
  # DEBUG this => D#440
  # DEBUG D#439 => &D#440->_M_impl
  # DEBUG this => D#439
  # DEBUG this => D#439
  # DEBUG this => D#439
  # DEBUG D#438 => &D#439->_M_start
  # DEBUG this => D#438
  # DEBUG D#16 => &D#438->D.27293
  # DEBUG this => D#16
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#16
  MEM[(struct _Bit_iterator_base *)this_20(D) + 656B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)this_20(D) + 656B]._M_offset = 0;
  # DEBUG D#437 => &D#439->_M_finish
  # DEBUG this => D#437
  # DEBUG D#16 => &D#437->D.27293
  # DEBUG this => D#16
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#16
  MEM[(struct _Bit_iterator_base *)this_20(D) + 672B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)this_20(D) + 672B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)this_20(D) + 656B]._M_end_of_storage = 0B;
  if (inputs_27(D) != outputs_28(D))
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 3>:
  # DEBUG D#69 => &D.53728
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53728
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.53727, "Chaos router must have equal number of input and output ports");

  <bb 4>:
  Module::Error (_21, &D.53727);

  <bb 5>:
  # DEBUG this => &D.53727
  # DEBUG this => &D.53727
  # DEBUG this => &D.53727
  _41 = MEM[(char * *)&D.53727];
  # DEBUG D#1 => &D.53727
  # DEBUG this => D#1
  # DEBUG this => &D.53727
  if (&D.53727.D.11539._M_local_buf != _41)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#252 => D.53727.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53727
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53727
  # DEBUG this => D#1
  # DEBUG this => &D.53727
  # DEBUG D#249 => &D.53727._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _41
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _41
  # DEBUG this => D#243
  # DEBUG D.89412 => D#244
  operator delete (_41);

  <bb 7>:
  # DEBUG D#253 => &D.53727._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53727 ={v} {CLOBBER};
  # DEBUG this => &D.53728
  # DEBUG this => &D.53728

  <bb 8>:
  # DEBUG D#69 => &D.53730
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53730
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.53729, "vc_buf_size");
  goto <bb 10>;

<L73>:
  pretmp_1363 = &this_20(D)->_input_frame;
  pretmp_1373 = &this_20(D)->_output_frame;
  pretmp_1383 = &this_20(D)->_multi_queue;
  pretmp_1393 = &this_20(D)->_credit_queue;
  pretmp_1403 = &this_20(D)->_output_matched;
  pretmp_1413 = &this_20(D)->_mq_matched;
  goto <bb 314> (<L52>);

  <bb 10>:
  _47 = Configuration::GetInt (config_23(D), &D.53729);

  <bb 11>:
  this_20(D)->_buffer_size = _47;
  # DEBUG this => &D.53729
  # DEBUG this => &D.53729
  # DEBUG this => &D.53729
  _50 = MEM[(char * *)&D.53729];
  # DEBUG D#1 => &D.53729
  # DEBUG this => D#1
  # DEBUG this => &D.53729
  if (&D.53729.D.11539._M_local_buf != _50)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#252 => D.53729.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53729
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53729
  # DEBUG this => D#1
  # DEBUG this => &D.53729
  # DEBUG D#249 => &D.53729._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _50
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _50
  # DEBUG this => D#243
  # DEBUG D.89431 => D#244
  operator delete (_50);
  pretmp_1080 = this_20(D)->_buffer_size;

  <bb 13>:
  # prephitmp_1169 = PHI <_47(11), pretmp_1080(12)>
  # DEBUG D#253 => &D.53729._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53729 ={v} {CLOBBER};
  # DEBUG this => &D.53730
  # DEBUG this => &D.53730
  # DEBUG D#69 => &D.53732
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53732
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.53731, "const_flits_per_packet");
  goto <bb 15>;

<L74>:
  pretmp_1359 = &this_20(D)->_input_frame;
  pretmp_1369 = &this_20(D)->_output_frame;
  pretmp_1379 = &this_20(D)->_multi_queue;
  pretmp_1389 = &this_20(D)->_credit_queue;
  pretmp_1399 = &this_20(D)->_output_matched;
  pretmp_1409 = &this_20(D)->_mq_matched;
  goto <bb 314> (<L52>);

  <bb 15>:
  _54 = Configuration::GetInt (config_23(D), &D.53731);

  <bb 16>:
  if (_54 > prephitmp_1169)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("_buffer_size >= config.GetInt( \"const_flits_per_packet\" )", "routers/chaos_router.cpp", 53, &__PRETTY_FUNCTION__);

  <bb 18>:
  # DEBUG this => &D.53731
  # DEBUG this => &D.53731
  # DEBUG this => &D.53731
  _57 = MEM[(char * *)&D.53731];
  # DEBUG D#1 => &D.53731
  # DEBUG this => D#1
  # DEBUG this => &D.53731
  if (&D.53731.D.11539._M_local_buf != _57)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#252 => D.53731.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53731
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53731
  # DEBUG this => D#1
  # DEBUG this => &D.53731
  # DEBUG D#249 => &D.53731._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _57
  # DEBUG this => D#243
  # DEBUG D.89449 => D#244
  operator delete (_57);

  <bb 20>:
  # DEBUG D#253 => &D.53731._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53731 ={v} {CLOBBER};
  # DEBUG this => &D.53732
  # DEBUG this => &D.53732
  # DEBUG D#69 => &D.53734
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53734
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.53733, "multi_queue_size");
  goto <bb 22>;

<L75>:
  pretmp_1357 = &this_20(D)->_input_frame;
  pretmp_1367 = &this_20(D)->_output_frame;
  pretmp_1377 = &this_20(D)->_multi_queue;
  pretmp_1387 = &this_20(D)->_credit_queue;
  pretmp_1397 = &this_20(D)->_output_matched;
  pretmp_1407 = &this_20(D)->_mq_matched;
  goto <bb 314> (<L52>);

  <bb 22>:
  _61 = Configuration::GetInt (config_23(D), &D.53733);

  <bb 23>:
  this_20(D)->_multi_queue_size = _61;
  # DEBUG this => &D.53733
  # DEBUG this => &D.53733
  # DEBUG this => &D.53733
  _64 = MEM[(char * *)&D.53733];
  # DEBUG D#1 => &D.53733
  # DEBUG this => D#1
  # DEBUG this => &D.53733
  if (&D.53733.D.11539._M_local_buf != _64)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#252 => D.53733.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53733
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53733
  # DEBUG this => D#1
  # DEBUG this => &D.53733
  # DEBUG D#249 => &D.53733._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _64
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _64
  # DEBUG this => D#243
  # DEBUG D.89467 => D#244
  operator delete (_64);

  <bb 25>:
  # DEBUG D#253 => &D.53733._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53733 ={v} {CLOBBER};
  # DEBUG this => &D.53734
  # DEBUG this => &D.53734
  this_20(D)->_cur_channel = 0;
  this_20(D)->_read_stall = 0;
  # DEBUG D#69 => &D.53742
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53742
  # DEBUG this => &D.53741
  # DEBUG __s => "topology"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53741
  # DEBUG D#500 => &D.53741._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53741.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53741]._M_p = &D.53741.D.11539._M_local_buf;
  # DEBUG __s => "topology"
  # DEBUG this => &D.53741
  # DEBUG __beg => "topology"
  # DEBUG __end => &MEM[(void *)"topology" + 8B]
  # DEBUG this => &D.53741
  # DEBUG __beg => "topology"
  # DEBUG __end => &MEM[(void *)"topology" + 8B]
  # DEBUG this => &D.53741
  # DEBUG __beg => "topology"
  # DEBUG __end => &MEM[(void *)"topology" + 8B]
  # DEBUG __ptr => "topology"
  # DEBUG __first => "topology"
  # DEBUG __last => &MEM[(void *)"topology" + 8B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "topology"
  # DEBUG __last => &MEM[(void *)"topology" + 8B]
  # DEBUG __dnew => 8
  # DEBUG D#1 => &D.53741
  # DEBUG this => D#1
  # DEBUG __p => &D.53741.D.11539._M_local_buf
  # DEBUG __k1 => "topology"
  # DEBUG __k2 => &MEM[(void *)"topology" + 8B]
  # DEBUG __d => &D.53741.D.11539._M_local_buf
  # DEBUG __s => "topology"
  # DEBUG __n => 8
  # DEBUG __s1 => &D.53741.D.11539._M_local_buf
  # DEBUG __s2 => "topology"
  # DEBUG __n => 8
  __builtin_memcpy (&D.53741.D.11539._M_local_buf, "topology", 8);
  # DEBUG this => &D.53741
  # DEBUG __n => 8
  # DEBUG D#5 => &D.53741
  # DEBUG __length => 8
  # DEBUG this => D#5
  MEM[(size_type *)&D.53741 + 8B] = 8;
  # DEBUG D#1 => &D.53741
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(void *)&D.53741 + 24B]
  # DEBUG __c2 => D#8
  MEM[(char_type &)&D.53741 + 24] = 0;
  # DEBUG D#2028 => {CLOBBER}
  # DEBUG __dnew => D#2028
  D.53740 = Configuration::GetStr (config_23(D), &D.53741); [return slot optimization]

  <bb 26>:
  # DEBUG D#69 => &D.53739
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53739
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.139 (&D.53738, "routing_function");

  <bb 27>:
  D.53737 = Configuration::GetStr (config_23(D), &D.53738); [return slot optimization]

  <bb 28>:
  # DEBUG __lhs => &D.53737
  # DEBUG __rhs => "_"
  # DEBUG this => &D.53736
  # DEBUG __str => &D.53737
  # DEBUG this => &D.53737
  # DEBUG D#533 => &D.53737._M_dataplus
  # DEBUG this => &D.53736
  # DEBUG D#534 => &D.53736._M_dataplus
  # DEBUG D#203 => D#533
  # DEBUG this => D#534
  # DEBUG __dat => &D.53736.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#534
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53736]._M_p = &D.53736.D.11539._M_local_buf;
  _646 = MEM[(char * *)&D.53737];
  # DEBUG D#1 => &D.53737
  # DEBUG this => D#1
  _647 = MEM[(long unsigned int *)&D.53737 + 8B];
  # DEBUG D#2 => &D.53737
  # DEBUG this => D#2
  _648 = _646 + _647;
  # DEBUG D#1 => &D.53737
  # DEBUG this => D#1
  # DEBUG this => &D.53736
  # DEBUG __beg => _646
  # DEBUG __end => _648
  # DEBUG this => &D.53736
  # DEBUG __beg => _646
  # DEBUG __end => _648
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.145 (&D.53736, _646, _648);

  <bb 29>:
  # DEBUG this => &D.53736
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  # DEBUG __n => NULL
  # DEBUG this => &D.53736
  # DEBUG __n1 => 0
  # DEBUG __n2 => NULL
  # DEBUG __s => "basic_string::append"
  # DEBUG D#528 => &D.53736
  # DEBUG this => D#528
  # DEBUG D#527 => D#528
  # DEBUG D#526 => D#528
  # DEBUG this => D#526
  # DEBUG D#525 => &D#527->_M_dataplus
  # DEBUG D#524 => D#525
  # DEBUG __a => D#524
  # DEBUG D#523 => D#524
  # DEBUG D#522 => D#523
  # DEBUG this => D#522
  _650 = MEM[(long unsigned int *)&D.53736 + 8B];
  # DEBUG D#3 => &D.53736
  # DEBUG this => D#3
  if (_650 == 9223372036854775807)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_length_error ("basic_string::append");

  <bb 31>:
  std::__cxx11::basic_string<char>::_M_append (&D.53736, "_", 1);
  goto <bb 33>;

<L81>:
  goto <bb 35> (<L69>);

  <bb 33>:
  # DEBUG __lhs => &D.53736
  # DEBUG __rhs => &D.53740
  # DEBUG this => &rf
  # DEBUG __str => &D.53736
  # DEBUG this => &D.53736
  # DEBUG D#533 => &D.53736._M_dataplus
  # DEBUG this => &rf
  # DEBUG D#534 => &rf._M_dataplus
  # DEBUG D#203 => D#533
  # DEBUG this => D#534
  # DEBUG __dat => &rf.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#534
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&rf]._M_p = &rf.D.11539._M_local_buf;
  _654 = MEM[(char * *)&D.53736];
  # DEBUG D#1 => &D.53736
  # DEBUG this => D#1
  _655 = MEM[(long unsigned int *)&D.53736 + 8B];
  # DEBUG D#2 => &D.53736
  # DEBUG this => D#2
  _656 = _654 + _655;
  # DEBUG D#1 => &D.53736
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG __beg => _654
  # DEBUG __end => _656
  # DEBUG this => &rf
  # DEBUG __beg => _654
  # DEBUG __end => _656
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.145 (&rf, _654, _656);
  goto <bb 39>;

<L80>:

<L69>:
  # DEBUG this => &D.53736
  # DEBUG this => &D.53736
  # DEBUG this => &D.53736
  _649 = MEM[(char * *)&D.53736];
  # DEBUG D#1 => &D.53736
  # DEBUG this => D#1
  # DEBUG this => &D.53736
  if (&D.53736.D.11539._M_local_buf != _649)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#252 => D.53736.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53736
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53736
  # DEBUG this => D#1
  # DEBUG this => &D.53736
  # DEBUG D#249 => &D.53736._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _649
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _649
  # DEBUG this => D#243
  # DEBUG D.99124 => D#244
  operator delete (_649);

  <bb 37>:
  # DEBUG D#253 => &D.53736._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  resx 109

<L83>:
  goto <bb 258> (<L27>);

  <bb 39>:
  # DEBUG this => &rf
  # DEBUG __str => &D.53740
  _657 = MEM[(long unsigned int *)&D.53740 + 8B];
  # DEBUG D#3 => &D.53740
  # DEBUG this => D#3
  _658 = MEM[(char * *)&D.53740];
  # DEBUG D#1 => &D.53740
  # DEBUG this => D#1
  std::__cxx11::basic_string<char>::_M_append (&rf, _658, _657);
  goto <bb 44>;

<L70>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _659 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _659)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#252 => rf.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &rf
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#249 => &rf._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _659
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _659
  # DEBUG this => D#243
  # DEBUG D.99162 => D#244
  operator delete (_659);

  <bb 42>:
  # DEBUG D#253 => &rf._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  resx 110

<L84>:
  goto <bb 253> (<L25>);

  <bb 44>:
  # DEBUG this => &D.53736
  # DEBUG this => &D.53736
  # DEBUG this => &D.53736
  _77 = MEM[(char * *)&D.53736];
  # DEBUG D#1 => &D.53736
  # DEBUG this => D#1
  # DEBUG this => &D.53736
  if (&D.53736.D.11539._M_local_buf != _77)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#252 => D.53736.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53736
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53736
  # DEBUG this => D#1
  # DEBUG this => &D.53736
  # DEBUG D#249 => &D.53736._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _77
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _77
  # DEBUG this => D#243
  # DEBUG D.89558 => D#244
  operator delete (_77);

  <bb 46>:
  # DEBUG D#253 => &D.53736._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53736 ={v} {CLOBBER};
  # DEBUG this => &D.53737
  # DEBUG this => &D.53737
  # DEBUG this => &D.53737
  _79 = MEM[(char * *)&D.53737];
  # DEBUG D#1 => &D.53737
  # DEBUG this => D#1
  # DEBUG this => &D.53737
  if (&D.53737.D.11539._M_local_buf != _79)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#252 => D.53737.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53737
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53737
  # DEBUG this => D#1
  # DEBUG this => &D.53737
  # DEBUG D#249 => &D.53737._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _79
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _79
  # DEBUG this => D#243
  # DEBUG D.89543 => D#244
  operator delete (_79);

  <bb 48>:
  # DEBUG D#253 => &D.53737._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53737 ={v} {CLOBBER};
  # DEBUG this => &D.53738
  # DEBUG this => &D.53738
  # DEBUG this => &D.53738
  _81 = MEM[(char * *)&D.53738];
  # DEBUG D#1 => &D.53738
  # DEBUG this => D#1
  # DEBUG this => &D.53738
  if (&D.53738.D.11539._M_local_buf != _81)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG D#252 => D.53738.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53738
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53738
  # DEBUG this => D#1
  # DEBUG this => &D.53738
  # DEBUG D#249 => &D.53738._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _81
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _81
  # DEBUG this => D#243
  # DEBUG D.89528 => D#244
  operator delete (_81);

  <bb 50>:
  # DEBUG D#253 => &D.53738._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53738 ={v} {CLOBBER};
  # DEBUG this => &D.53739
  # DEBUG this => &D.53739
  # DEBUG this => &D.53740
  # DEBUG this => &D.53740
  # DEBUG this => &D.53740
  _83 = MEM[(char * *)&D.53740];
  # DEBUG D#1 => &D.53740
  # DEBUG this => D#1
  # DEBUG this => &D.53740
  if (&D.53740.D.11539._M_local_buf != _83)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#252 => D.53740.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53740
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53740
  # DEBUG this => D#1
  # DEBUG this => &D.53740
  # DEBUG D#249 => &D.53740._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _83
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _83
  # DEBUG this => D#243
  # DEBUG D.89511 => D#244
  operator delete (_83);

  <bb 52>:
  # DEBUG D#253 => &D.53740._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53740 ={v} {CLOBBER};
  # DEBUG this => &D.53741
  # DEBUG this => &D.53741
  # DEBUG this => &D.53741
  _85 = MEM[(char * *)&D.53741];
  # DEBUG D#1 => &D.53741
  # DEBUG this => D#1
  # DEBUG this => &D.53741
  if (&D.53741.D.11539._M_local_buf != _85)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG D#252 => D.53741.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53741
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53741
  # DEBUG this => D#1
  # DEBUG this => &D.53741
  # DEBUG D#249 => &D.53741._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _85
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _85
  # DEBUG this => D#243
  # DEBUG D.89496 => D#244
  operator delete (_85);

  <bb 54>:
  # DEBUG D#253 => &D.53741._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53741 ={v} {CLOBBER};
  # DEBUG this => &D.53742
  # DEBUG this => &D.53742
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &rf
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &rf
  # DEBUG this => &gRoutingFunctionMap._M_t
  __y_660 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#106 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#106
  # DEBUG D#541 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &rf
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __y_660
  if (__y_660 == 0B)
    goto <bb 56>;
  else
    goto <bb 55>;

  <bb 55>:
  pretmp_1346 = MEM[(long unsigned int *)&rf + 8B];
  pretmp_1348 = MEM[(char * *)&rf];
  goto <bb 59>;

  <bb 56>:
  pretmp_1344 = MEM[(long unsigned int *)&rf + 8B];
  goto <bb 72>;

  <bb 57>:
  # __y_670 = PHI <__y_664(64), __y_665(65)>
  # __y_669 = PHI <__y_1088(64), __y_639(65)>
  # DEBUG __y => __y_669
  # DEBUG __x => __y_670
  if (__y_670 == 0B)
    goto <bb 66>;
  else
    goto <bb 58>;

  <bb 58>:

  <bb 59>:
  # __y_1088 = PHI <__y_660(55), __y_670(58)>
  # __y_639 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(55), __y_669(58)>
  # DEBUG __y => __y_639
  # DEBUG __x => __y_1088
  # DEBUG __x => __y_1088
  # DEBUG __x => __y_1088
  # DEBUG this => __y_1088
  # DEBUG D#536 => &MEM[(const struct _Rb_tree_node *)__y_1088]._M_value_field
  # DEBUG __r => D#536
  # DEBUG __x => D#536
  # DEBUG this => D#207
  # DEBUG D#2025 => &MEM[(const struct pair &)__y_1088 + 32].first
  # DEBUG D#539 => &D#540->_M_impl._M_key_compare
  # DEBUG D#538 => D#539
  # DEBUG __x => D#2025
  # DEBUG __y => &rf
  # DEBUG this => D#538
  # DEBUG __lhs => D#2025
  # DEBUG __rhs => &rf
  # DEBUG this => D#2025
  # DEBUG __str => &rf
  _398 = MEM[(long unsigned int *)__y_1088 + 40B];
  # DEBUG D#3 => D#2025
  # DEBUG this => D#3
  # DEBUG __size => _398
  # DEBUG D#2053 => MEM[(long unsigned int *)&rf + 8B]
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  # DEBUG __osize => D#2053
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1093 = MIN_EXPR <_398, pretmp_1346>;
  # DEBUG __len => D#2023
  # DEBUG this => &rf
  # DEBUG D#2052 => MEM[(char * *)&rf]
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  _675 = MEM[(char * *)__y_1088 + 32B];
  # DEBUG D#1 => D#2025
  # DEBUG this => D#1
  # DEBUG __s1 => _675
  # DEBUG __s2 => D#2052
  # DEBUG __n => D#2023
  __r_676 = __builtin_memcmp (_675, pretmp_1348, __len_1093);
  # DEBUG __r => NULL
  if (__r_676 == 0)
    goto <bb 60>;
  else
    goto <bb 63>;

  <bb 60>:
  # DEBUG __n1 => _398
  # DEBUG __n2 => D#2053
  _677 = _398 - pretmp_1346;
  __d_678 = (const difference_type) _677;
  # DEBUG __d => __d_678
  if (__d_678 > 2147483647)
    goto <bb 64>;
  else
    goto <bb 61>;

  <bb 61>:
  if (__d_678 < -2147483648)
    goto <bb 65>;
  else
    goto <bb 62>;

  <bb 62>:
  __r_679 = (int) _677;

  <bb 63>:
  # __r_680 = PHI <__r_676(59), __r_679(62)>
  # DEBUG __r => __r_680
  # DEBUG D#2033 => {CLOBBER}
  # DEBUG __size => D#2033
  # DEBUG D#2034 => {CLOBBER}
  # DEBUG __osize => D#2034
  if (__r_680 >= 0)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  # DEBUG __r => NULL
  # DEBUG __y => __y_1088
  __y_664 = MEM[(struct _Rb_tree_node_base * *)__y_1088 + 16B];
  # DEBUG D#205 => __y_1088
  # DEBUG __x => D#205
  # DEBUG __x => NULL
  goto <bb 57>;

  <bb 65>:
  # DEBUG __r => NULL
  __y_665 = MEM[(struct _Rb_tree_node_base * *)__y_1088 + 24B];
  # DEBUG D#206 => __y_1088
  # DEBUG __x => D#206
  # DEBUG __x => NULL
  goto <bb 57>;

  <bb 66>:
  # __y_1312 = PHI <__y_669(57)>
  # DEBUG this => NULL
  # DEBUG __x => __y_1312
  # DEBUG __j$_M_node => __y_1312
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_1312 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 72>;
  else
    goto <bb 67>;

  <bb 67>:
  # DEBUG __x => __y_1312
  # DEBUG __x => __y_1312
  # DEBUG this => __y_1312
  # DEBUG D#537 => &MEM[(const struct _Rb_tree_node *)__y_1312]._M_value_field
  # DEBUG __r => D#537
  # DEBUG __x => D#537
  # DEBUG this => D#207
  # DEBUG D#2026 => &MEM[(const struct pair &)__y_1312 + 32].first
  # DEBUG D#543 => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_key_compare
  # DEBUG D#538 => D#543
  # DEBUG __x => &rf
  # DEBUG __y => D#2026
  # DEBUG this => D#538
  # DEBUG __lhs => &rf
  # DEBUG __rhs => D#2026
  # DEBUG this => &rf
  # DEBUG __str => D#2026
  # DEBUG D#2051 => MEM[(long unsigned int *)&rf + 8B]
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  # DEBUG __size => D#2051
  _683 = MEM[(long unsigned int *)__y_1312 + 40B];
  # DEBUG D#3 => D#2026
  # DEBUG this => D#3
  # DEBUG __osize => _683
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_725 = MIN_EXPR <_683, pretmp_1346>;
  # DEBUG __len => D#2024
  # DEBUG this => D#2026
  _686 = MEM[(char * *)__y_1312 + 32B];
  # DEBUG D#1 => D#2026
  # DEBUG this => D#1
  # DEBUG D#2050 => MEM[(char * *)&rf]
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG __s1 => D#2050
  # DEBUG __s2 => _686
  # DEBUG __n => D#2024
  __r_688 = __builtin_memcmp (pretmp_1348, _686, __len_725);
  # DEBUG __r => NULL
  if (__r_688 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;

  <bb 68>:
  # DEBUG __n1 => D#2051
  # DEBUG __n2 => _683
  _689 = pretmp_1346 - _683;
  __d_690 = (const difference_type) _689;
  # DEBUG __d => __d_690
  if (__d_690 > 2147483647)
    goto <bb 88>;
  else
    goto <bb 69>;

  <bb 69>:
  if (__d_690 < -2147483648)
    goto <bb 72>;
  else
    goto <bb 70>;

  <bb 70>:
  __r_691 = (int) _689;

  <bb 71>:
  # __r_692 = PHI <__r_688(67), __r_691(70)>
  # DEBUG __r => __r_692
  # DEBUG D#2039 => {CLOBBER}
  # DEBUG __size => D#2039
  # DEBUG D#2040 => {CLOBBER}
  # DEBUG __osize => D#2040
  if (__r_692 < 0)
    goto <bb 72>;
  else
    goto <bb 88>;

  <bb 72>:
  # prephitmp_1345 = PHI <pretmp_1346(66), pretmp_1346(71), pretmp_1346(69), pretmp_1344(56)>
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG D#542 => {CLOBBER}
  # DEBUG __j$_M_node => D#542
  # DEBUG rf_iter$_M_node => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#107 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#107
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &rf_iter
  # DEBUG __x => &D.53743
  # DEBUG D#542 => {CLOBBER}
  # DEBUG __j$_M_node => D#542
  # DEBUG rf_iter$_M_node => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#107 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#107
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &rf_iter
  # DEBUG __x => &D.53743
  # DEBUG __lhs => "Invalid routing function: "
  # DEBUG __rhs => &rf
  # DEBUG __s => "Invalid routing function: "
  # DEBUG __len => NULL
  # DEBUG this => &D.53744
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG this => &D.53744
  # DEBUG D#204 => &D.53744._M_dataplus
  # DEBUG this => D#204
  # DEBUG __dat => &D.53744.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#204
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53744]._M_p = &D.53744.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.53744
  # DEBUG __n => 0
  # DEBUG D#5 => &D.53744
  # DEBUG __length => 0
  # DEBUG this => D#5
  MEM[(size_type *)&D.53744 + 8B] = 0;
  # DEBUG D#1 => &D.53744
  # DEBUG this => D#1
  # DEBUG __c1 => &D.53744.D.11539._M_local_buf
  # DEBUG __c2 => D#8
  MEM[(char_type &)&D.53744 + 16] = 0;
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  _697 = prephitmp_1345 + 26;
  std::__cxx11::basic_string<char>::reserve (&D.53744, _697);

  <bb 73>:
  # DEBUG this => &D.53744
  # DEBUG __s => "Invalid routing function: "
  # DEBUG __n => 26
  # DEBUG this => &D.53744
  # DEBUG __n1 => 0
  # DEBUG __n2 => 26
  # DEBUG __s => "basic_string::append"
  # DEBUG D#528 => &D.53744
  # DEBUG this => D#528
  # DEBUG D#527 => D#528
  # DEBUG D#526 => D#528
  # DEBUG this => D#526
  # DEBUG D#525 => &D#527->_M_dataplus
  # DEBUG D#524 => D#525
  # DEBUG __a => D#524
  # DEBUG D#523 => D#524
  # DEBUG D#522 => D#523
  # DEBUG this => D#522
  _86 = MEM[(long unsigned int *)&D.53744 + 8B];
  # DEBUG D#3 => &D.53744
  # DEBUG this => D#3
  _701 = 9223372036854775807 - _86;
  if (_701 <= 25)
    goto <bb 74>;
  else
    goto <bb 76>;

  <bb 74>:
  std::__throw_length_error ("basic_string::append");

<L86>:
  goto <bb 81> (<L71>);

  <bb 76>:
  std::__cxx11::basic_string<char>::_M_append (&D.53744, "Invalid routing function: ", 26);
  goto <bb 78>;

<L87>:
  goto <bb 81> (<L71>);

  <bb 78>:
  # DEBUG this => &D.53744
  # DEBUG __str => &rf
  _698 = MEM[(long unsigned int *)&rf + 8B];
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  _699 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  std::__cxx11::basic_string<char>::_M_append (&D.53744, _699, _698);
  goto <bb 84>;

<L88>:
  goto <bb 81> (<L71>);

<L85>:

<L71>:
  # DEBUG this => &D.53744
  # DEBUG this => &D.53744
  # DEBUG this => &D.53744
  _700 = MEM[(char * *)&D.53744];
  # DEBUG D#1 => &D.53744
  # DEBUG this => D#1
  # DEBUG this => &D.53744
  if (&D.53744.D.11539._M_local_buf != _700)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG D#252 => D.53744.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53744
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53744
  # DEBUG this => D#1
  # DEBUG this => &D.53744
  # DEBUG D#249 => &D.53744._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _700
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _700
  # DEBUG this => D#243
  # DEBUG D.99251 => D#244
  operator delete (_700);

  <bb 83>:
  # DEBUG D#253 => &D.53744._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  resx 111

  <bb 84>:
  Module::Error (_21, &D.53744);

  <bb 85>:
  # DEBUG this => &D.53744
  # DEBUG this => &D.53744
  # DEBUG this => &D.53744
  _75 = MEM[(char * *)&D.53744];
  # DEBUG D#1 => &D.53744
  # DEBUG this => D#1
  # DEBUG this => &D.53744
  if (&D.53744.D.11539._M_local_buf != _75)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#252 => D.53744.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53744
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53744
  # DEBUG this => D#1
  # DEBUG this => &D.53744
  # DEBUG D#249 => &D.53744._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _75
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _75
  # DEBUG this => D#243
  # DEBUG D.89573 => D#244
  operator delete (_75);

  <bb 87>:
  # DEBUG D#253 => &D.53744._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53744 ={v} {CLOBBER};

  <bb 88>:
  # cstore_635 = PHI <__y_1312(71), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(87), __y_1312(68)>
  # DEBUG this => &rf_iter
  # DEBUG this => cstore_635
  # DEBUG D#1439 => &MEM[(struct _Rb_tree_node *)cstore_635]._M_value_field
  # DEBUG __r => D#1439
  _93 = MEM[(struct pair *)cstore_635 + 32B].second;
  this_20(D)->_rf = _93;
  _95 = this_20(D)->D.50427._inputs;
  _96 = (long unsigned int) _95;
  # DEBUG D#2062 => &this_20(D)->_input_route
  # DEBUG this => D#2062
  # DEBUG __new_size => _96
  __x = 0B;
  # DEBUG __x => __x
  _703 = MEM[(struct OutputSet * * *)this_20(D) + 288B];
  # DEBUG D#70 => D#2062
  _704 = MEM[(struct OutputSet * * *)this_20(D) + 296B];
  # DEBUG D#70 => D#2062
  # DEBUG this => D#70
  # DEBUG this => D#70
  _705 = (long int) _704;
  _706 = (long int) _703;
  _707 = _705 - _706;
  _708 = _707 /[ex] 8;
  _709 = (size_type) _708;
  if (_96 > _709)
    goto <bb 89>;
  else
    goto <bb 92>;

  <bb 89>:
  # DEBUG D#70 => D#2062
  # DEBUG D#70 => D#2062
  # DEBUG this => D#70
  # DEBUG this => D#70
  _710 = _96 - _709;
  # DEBUG this => D#2062
  # DEBUG D#108 => &D#2062->D.48066._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#108
  # DEBUG this => D#2062
  MEM[(struct __normal_iterator *)&__position] = _704;
  # DEBUG __n => _710
  # DEBUG __x => &__x
  _97 = &this_20(D)->_input_route;
  std::vector<OutputSet*>::_M_fill_insert (_97, __position, _710, &__x);
  goto <bb 91>;

<L90>:
  pretmp_1075 = &this_20(D)->_input_frame;
  pretmp_1069 = &this_20(D)->_output_frame;
  pretmp_1156 = &this_20(D)->_multi_queue;
  pretmp_1148 = &this_20(D)->_credit_queue;
  pretmp_1140 = &this_20(D)->_output_matched;
  pretmp_1128 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 91>:
  pretmp_1117 = this_20(D)->D.50427._inputs;
  goto <bb 94>;

  <bb 92>:
  # DEBUG D#70 => D#2062
  # DEBUG D#70 => D#2062
  # DEBUG this => D#70
  # DEBUG this => D#70
  if (_96 < _709)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  _711 = _96 * 8;
  _712 = _703 + _711;
  # DEBUG D#187 => D#2062
  # DEBUG __pos => _712
  # DEBUG D#186 => D#187
  # DEBUG this => D#186
  # DEBUG D#184 => &D#186->D.48066
  # DEBUG this => D#184
  # DEBUG D#185 => D#186->D.48066._M_impl._M_finish
  # DEBUG __first => _712
  # DEBUG __last => D#185
  # DEBUG D.73927 => NULL
  # DEBUG D#182 => _712
  # DEBUG D#183 => D#185
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  MEM[(struct OutputSet * * *)this_20(D) + 296B] = _712;

  <bb 94>:
  # prephitmp_662 = PHI <pretmp_1117(91), _95(93), _95(92)>
  # DEBUG i => 0
  if (prephitmp_662 <= 0)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  _110 = this_20(D)->_multi_queue_size;
  _111 = (long unsigned int) _110;
  # DEBUG D#2061 => &this_20(D)->_mq_route
  # DEBUG this => D#2061
  # DEBUG __new_size => _111
  __x = 0B;
  # DEBUG __x => __x
  _98 = MEM[(struct OutputSet * * *)this_20(D) + 312B];
  # DEBUG D#70 => D#2061
  _713 = MEM[(struct OutputSet * * *)this_20(D) + 320B];
  # DEBUG D#70 => D#2061
  # DEBUG this => D#70
  # DEBUG this => D#70
  _714 = (long int) _713;
  _715 = (long int) _98;
  _716 = _714 - _715;
  _717 = _716 /[ex] 8;
  _718 = (size_type) _717;
  if (_111 > _718)
    goto <bb 101>;
  else
    goto <bb 104>;

  <bb 96>:

  <bb 97>:
  # i_1092 = PHI <0(96), i_109(100)>
  # DEBUG i => i_1092
  _101 = operator new (48);
  goto <bb 99>;

<L91>:
  pretmp_1168 = &this_20(D)->_input_frame;
  pretmp_1164 = &this_20(D)->_output_frame;
  pretmp_1067 = &this_20(D)->_multi_queue;
  pretmp_899 = &this_20(D)->_credit_queue;
  pretmp_695 = &this_20(D)->_output_matched;
  pretmp_1131 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 99>:
  MEM[(struct OutputSet *)_101]._outputs._M_t._M_impl._M_header._M_color = 0;
  MEM[(struct OutputSet *)_101]._outputs._M_t._M_impl._M_header._M_parent = 0B;
  MEM[(struct OutputSet *)_101]._outputs._M_t._M_impl._M_node_count = 0;
  # DEBUG this => _101
  # DEBUG D#444 => &MEM[(struct OutputSet *)_101]._outputs
  # DEBUG this => D#444
  # DEBUG D#443 => &D#444->_M_t
  # DEBUG this => D#443
  # DEBUG D#442 => &MEM[(struct _Rb_tree *)D#443]._M_impl
  # DEBUG this => D#442
  # DEBUG this => D#442
  # DEBUG this => D#442
  # DEBUG this => D#442
  _33 = &MEM[(struct _Rb_tree_impl *)_101]._M_header;
  MEM[(struct _Rb_tree_impl *)_101]._M_header._M_left = _33;
  MEM[(struct _Rb_tree_impl *)_101]._M_header._M_right = _33;
  _107 = (long unsigned int) i_1092;
  # DEBUG D#1440 => &this_20(D)->_input_route
  _260 = MEM[(struct OutputSet * * *)this_20(D) + 288B];
  # DEBUG D#29 => D#1440
  # DEBUG __n => _107
  # DEBUG this => D#29
  _31 = _107 * 8;
  _32 = _260 + _31;
  *_32 = _101;
  i_109 = i_1092 + 1;
  # DEBUG i => i_109
  # DEBUG i => i_109
  _99 = this_20(D)->D.50427._inputs;
  if (_99 <= i_109)
    goto <bb 95>;
  else
    goto <bb 100>;

  <bb 100>:
  goto <bb 97>;

  <bb 101>:
  # DEBUG D#70 => D#2061
  # DEBUG D#70 => D#2061
  # DEBUG this => D#70
  # DEBUG this => D#70
  _719 = _111 - _718;
  # DEBUG this => D#2061
  # DEBUG D#108 => &D#2061->D.48066._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#108
  # DEBUG this => D#2061
  MEM[(struct __normal_iterator *)&__position] = _713;
  # DEBUG __n => _719
  # DEBUG __x => &__x
  _112 = &this_20(D)->_mq_route;
  std::vector<OutputSet*>::_M_fill_insert (_112, __position, _719, &__x);
  goto <bb 103>;

<L92>:
  pretmp_1077 = &this_20(D)->_input_frame;
  pretmp_1071 = &this_20(D)->_output_frame;
  pretmp_949 = &this_20(D)->_multi_queue;
  pretmp_663 = &this_20(D)->_credit_queue;
  pretmp_74 = &this_20(D)->_output_matched;
  pretmp_1129 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 103>:
  pretmp_1188 = this_20(D)->_multi_queue_size;
  goto <bb 106>;

  <bb 104>:
  # DEBUG D#70 => D#2061
  # DEBUG D#70 => D#2061
  # DEBUG this => D#70
  # DEBUG this => D#70
  if (_111 < _718)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  _720 = _111 * 8;
  _721 = _98 + _720;
  # DEBUG D#187 => D#2061
  # DEBUG __pos => _721
  # DEBUG D#186 => D#187
  # DEBUG this => D#186
  # DEBUG D#184 => &D#186->D.48066
  # DEBUG this => D#184
  # DEBUG D#185 => D#186->D.48066._M_impl._M_finish
  # DEBUG __first => _721
  # DEBUG __last => D#185
  # DEBUG D.73927 => NULL
  # DEBUG D#182 => _721
  # DEBUG D#183 => D#185
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  MEM[(struct OutputSet * * *)this_20(D) + 320B] = _721;

  <bb 106>:
  # prephitmp_1189 = PHI <pretmp_1188(103), _110(105), _110(104)>
  # DEBUG i => 0
  if (prephitmp_1189 <= 0)
    goto <bb 107>;
  else
    goto <bb 108>;

  <bb 107>:
  # DEBUG D#69 => &D.53753
  # DEBUG this => D#69
  # DEBUG D#68 => D#69
  # DEBUG this => D#68
  # DEBUG D#503 => &D.53753
  # DEBUG this => &D.53752
  # DEBUG __s => "crossbar_pipeline"
  # DEBUG __a => D#503
  # DEBUG D#502 => D#503
  # DEBUG this => &D.53752
  # DEBUG D#500 => &D.53752._M_dataplus
  # DEBUG D#203 => D#502
  # DEBUG this => D#500
  # DEBUG __dat => &D.53752.D.11539._M_local_buf
  # DEBUG __a => D#203
  # DEBUG D#202 => D#203
  # DEBUG D#200 => D#500
  # DEBUG D#201 => D#202
  # DEBUG this => D#200
  # DEBUG __a => D#201
  # DEBUG D#199 => D#201
  # DEBUG D#198 => D#200
  # DEBUG this => D#198
  # DEBUG D.73998 => D#199
  MEM[(struct _Alloc_hider *)&D.53752]._M_p = &D.53752.D.11539._M_local_buf;
  # DEBUG __s => "crossbar_pipeline"
  # DEBUG this => &D.53752
  # DEBUG __beg => "crossbar_pipeline"
  # DEBUG __end => &MEM[(void *)"crossbar_pipeline" + 17B]
  # DEBUG this => &D.53752
  # DEBUG __beg => "crossbar_pipeline"
  # DEBUG __end => &MEM[(void *)"crossbar_pipeline" + 17B]
  # DEBUG this => &D.53752
  # DEBUG __beg => "crossbar_pipeline"
  # DEBUG __end => &MEM[(void *)"crossbar_pipeline" + 17B]
  # DEBUG __ptr => "crossbar_pipeline"
  # DEBUG __first => "crossbar_pipeline"
  # DEBUG __last => &MEM[(void *)"crossbar_pipeline" + 17B]
  # DEBUG D#529 => &__first
  # DEBUG D.76024 => D#529
  # DEBUG __first => "crossbar_pipeline"
  # DEBUG __last => &MEM[(void *)"crossbar_pipeline" + 17B]
  __dnew = 17;
  _730 = std::__cxx11::basic_string<char>::_M_create (&D.53752, &__dnew, 0);
  goto <bb 114>;

  <bb 108>:

  <bb 109>:
  # i_1114 = PHI <0(108), i_125(112)>
  # DEBUG i => i_1114
  _116 = operator new (48);
  goto <bb 111>;

<L93>:
  pretmp_1167 = &this_20(D)->_input_frame;
  pretmp_1163 = &this_20(D)->_output_frame;
  pretmp_1154 = &this_20(D)->_multi_queue;
  pretmp_1146 = &this_20(D)->_credit_queue;
  pretmp_941 = &this_20(D)->_output_matched;
  pretmp_1142 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 111>:
  MEM[(struct OutputSet *)_116]._outputs._M_t._M_impl._M_header._M_color = 0;
  MEM[(struct OutputSet *)_116]._outputs._M_t._M_impl._M_header._M_parent = 0B;
  MEM[(struct OutputSet *)_116]._outputs._M_t._M_impl._M_node_count = 0;
  # DEBUG this => _116
  # DEBUG D#444 => &MEM[(struct OutputSet *)_116]._outputs
  # DEBUG this => D#444
  # DEBUG D#443 => &D#444->_M_t
  # DEBUG this => D#443
  # DEBUG D#442 => &MEM[(struct _Rb_tree *)D#443]._M_impl
  # DEBUG this => D#442
  # DEBUG this => D#442
  # DEBUG this => D#442
  # DEBUG this => D#442
  _202 = &MEM[(struct _Rb_tree_impl *)_116]._M_header;
  MEM[(struct _Rb_tree_impl *)_116]._M_header._M_left = _202;
  MEM[(struct _Rb_tree_impl *)_116]._M_header._M_right = _202;
  _122 = (long unsigned int) i_1114;
  # DEBUG D#1441 => &this_20(D)->_mq_route
  _261 = MEM[(struct OutputSet * * *)this_20(D) + 312B];
  # DEBUG D#29 => D#1441
  # DEBUG __n => _122
  # DEBUG this => D#29
  _34 = _122 * 8;
  _35 = _261 + _34;
  *_35 = _116;
  i_125 = i_1114 + 1;
  # DEBUG i => i_125
  # DEBUG i => i_125
  _114 = this_20(D)->_multi_queue_size;
  if (_114 <= i_125)
    goto <bb 107>;
  else
    goto <bb 112>;

  <bb 112>:
  goto <bb 109>;

<L94>:
  pretmp_1166 = &this_20(D)->_input_frame;
  pretmp_1159 = &this_20(D)->_output_frame;
  pretmp_1064 = &this_20(D)->_multi_queue;
  pretmp_113 = &this_20(D)->_credit_queue;
  pretmp_1103 = &this_20(D)->_output_matched;
  pretmp_630 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 114>:
  # DEBUG D#6 => &D.53752
  # DEBUG __p => _730
  # DEBUG this => D#6
  MEM[(char * *)&D.53752] = _730;
  __dnew.4_731 = __dnew;
  # DEBUG D#7 => &D.53752
  # DEBUG __capacity => __dnew.4_731
  # DEBUG this => D#7
  MEM[(size_type *)&D.53752 + 16B] = __dnew.4_731;
  # DEBUG D#1 => &D.53752
  # DEBUG this => D#1
  # DEBUG __p => _730
  # DEBUG __k1 => "crossbar_pipeline"
  # DEBUG __k2 => &MEM[(void *)"crossbar_pipeline" + 17B]
  # DEBUG __d => _730
  # DEBUG __s => "crossbar_pipeline"
  # DEBUG __n => 17
  # DEBUG __s1 => _730
  # DEBUG __s2 => "crossbar_pipeline"
  # DEBUG __n => 17
  __builtin_memcpy (_730, "crossbar_pipeline", 17);
  __dnew.4_734 = __dnew;
  # DEBUG this => &D.53752
  # DEBUG __n => __dnew.4_734
  # DEBUG D#5 => &D.53752
  # DEBUG __length => __dnew.4_734
  # DEBUG this => D#5
  MEM[(size_type *)&D.53752 + 8B] = __dnew.4_734;
  _735 = MEM[(char * *)&D.53752];
  # DEBUG D#1 => &D.53752
  # DEBUG this => D#1
  _736 = _735 + __dnew.4_734;
  # DEBUG __c1 => _736
  # DEBUG __c2 => D#8
  MEM[(char_type &)_736] = 0;
  __dnew ={v} {CLOBBER};
  _129 = operator new (136);

  <bb 115>:
  _130 = this_20(D)->D.50427._crossbar_delay;
  _131 = this_20(D)->D.50427._outputs;
  PipelineFIFO<Flit>::PipelineFIFO (_129, _21, &D.53752, _131, _130);

  <bb 116>:
  this_20(D)->_crossbar_pipe = _129;
  # DEBUG this => &D.53752
  # DEBUG this => &D.53752
  # DEBUG this => &D.53752
  _136 = MEM[(char * *)&D.53752];
  # DEBUG D#1 => &D.53752
  # DEBUG this => D#1
  # DEBUG this => &D.53752
  if (&D.53752.D.11539._M_local_buf != _136)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # DEBUG D#252 => D.53752.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53752
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53752
  # DEBUG this => D#1
  # DEBUG this => &D.53752
  # DEBUG D#249 => &D.53752._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _136
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _136
  # DEBUG this => D#243
  # DEBUG D.89617 => D#244
  operator delete (_136);

  <bb 118>:
  # DEBUG D#253 => &D.53752._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53752 ={v} {CLOBBER};
  # DEBUG this => &D.53753
  # DEBUG this => &D.53753
  # DEBUG this => &D.53756
  # DEBUG this => &D.53756.D.47197
  # DEBUG D#859 => &MEM[(struct _Deque_base *)&D.53756]._M_impl
  # DEBUG this => D#859
  # DEBUG this => D#859
  # DEBUG this => D#859
  MEM[(struct _Deque_impl *)&D.53756]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.53756]._M_map_size = 0;
  # DEBUG D#460 => &D#859->_M_start
  # DEBUG this => D#460
  MEM[(struct _Deque_iterator *)&D.53756 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.53756 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.53756 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.53756 + 16B]._M_node = 0B;
  # DEBUG D#459 => &D#859->_M_finish
  # DEBUG this => D#459
  MEM[(struct _Deque_iterator *)&D.53756 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.53756 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.53756 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.53756 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (&D.53756.D.47197, 0);
  goto <bb 120>;

<L96>:
  pretmp_1076 = &this_20(D)->_input_frame;
  pretmp_1070 = &this_20(D)->_output_frame;
  pretmp_1155 = &this_20(D)->_multi_queue;
  pretmp_1147 = &this_20(D)->_credit_queue;
  pretmp_87 = &this_20(D)->_output_matched;
  pretmp_1143 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 120>:
  # DEBUG this => &D.53755
  # DEBUG __c => &D.53756
  std::deque<Flit*, std::allocator<Flit*> >::deque (&D.53755.c, &D.53756);

  <bb 121>:
  _137 = this_20(D)->D.50427._inputs;
  _138 = (long unsigned int) _137;
  _139 = &this_20(D)->_input_frame;
  # DEBUG this => _139
  # DEBUG __new_size => _138
  # DEBUG __x => &D.53755
  _737 = MEM[(struct queue * *)this_20(D) + 352B];
  # DEBUG D#78 => _139
  _738 = MEM[(struct queue * *)this_20(D) + 360B];
  # DEBUG D#78 => _139
  # DEBUG this => D#78
  # DEBUG this => D#78
  _739 = (long int) _738;
  _740 = (long int) _737;
  _741 = _739 - _740;
  _742 = _741 /[ex] 80;
  _743 = (size_type) _742;
  if (_138 > _743)
    goto <bb 122>;
  else
    goto <bb 124>;

  <bb 122>:
  # DEBUG D#78 => _139
  # DEBUG D#78 => _139
  # DEBUG this => D#78
  # DEBUG this => D#78
  _744 = _138 - _743;
  # DEBUG this => _139
  # DEBUG D#111 => &_139->D.48826._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#111
  # DEBUG this => _139
  MEM[(struct __normal_iterator *)&__position] = _738;
  # DEBUG __n => _744
  # DEBUG __x => &D.53755
  std::vector<std::queue<Flit*> >::_M_fill_insert (_139, __position, _744, &D.53755);

  <bb 123>:
  goto <bb 130>;

  <bb 124>:
  # DEBUG D#78 => _139
  # DEBUG D#78 => _139
  # DEBUG this => D#78
  # DEBUG this => D#78
  if (_138 < _743)
    goto <bb 125>;
  else
    goto <bb 123>;

  <bb 125>:
  _745 = _138 * 80;
  __pos_746 = _737 + _745;
  # DEBUG D#620 => _139
  # DEBUG __pos => __pos_746
  # DEBUG D#619 => D#620
  # DEBUG this => D#619
  # DEBUG D#618 => &D#619->D.48826
  # DEBUG this => D#618
  # DEBUG __first => __pos_746
  # DEBUG __last => _738
  # DEBUG __first => __pos_746
  if (_738 == __pos_746)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  MEM[(struct queue * *)this_20(D) + 360B] = __pos_746;
  goto <bb 130>;

  <bb 127>:

  <bb 128>:
  # __pos_1180 = PHI <__pos_746(127), __pos_749(129)>
  # DEBUG __first => __pos_1180
  # DEBUG __r => __pos_1180
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  _748 = &MEM[(struct deque *)__pos_1180].D.47197;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_748);
  MEM[(struct  &)__pos_1180] ={v} {CLOBBER};
  __pos_749 = __pos_1180 + 80;
  # DEBUG __first => __pos_749
  # DEBUG __first => __pos_749
  if (_738 == __pos_749)
    goto <bb 126>;
  else
    goto <bb 129>;

  <bb 129>:
  goto <bb 128>;

  <bb 130>:
  # DEBUG this => &D.53755
  # DEBUG D#616 => &D.53755.c
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.53755].D.47197);
  D.53755 ={v} {CLOBBER};
  # DEBUG this => &D.53756
  # DEBUG D#607 => &D.53756.D.47197
  # DEBUG this => D#607
  # DEBUG this => &D.53756
  # DEBUG D#72 => &D.53756.D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)&D.53756 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)&D.53756 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)&D.53756 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)&D.53756 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => &D.53756
  # DEBUG D#73 => &D.53756.D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)&D.53756 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)&D.53756 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)&D.53756 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)&D.53756 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => &D.53756
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.53756.D.47197);
  D.53756 ={v} {CLOBBER};
  # DEBUG this => &D.53758
  # DEBUG this => &D.53758.D.47197
  # DEBUG D#859 => &MEM[(struct _Deque_base *)&D.53758]._M_impl
  # DEBUG this => D#859
  # DEBUG this => D#859
  # DEBUG this => D#859
  MEM[(struct _Deque_impl *)&D.53758]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.53758]._M_map_size = 0;
  # DEBUG D#460 => &D#859->_M_start
  # DEBUG this => D#460
  MEM[(struct _Deque_iterator *)&D.53758 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.53758 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.53758 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.53758 + 16B]._M_node = 0B;
  # DEBUG D#459 => &D#859->_M_finish
  # DEBUG this => D#459
  MEM[(struct _Deque_iterator *)&D.53758 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.53758 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.53758 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.53758 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (&D.53758.D.47197, 0);
  goto <bb 132>;

<L98>:
  pretmp_1161 = &this_20(D)->_output_frame;
  pretmp_1153 = &this_20(D)->_multi_queue;
  pretmp_1145 = &this_20(D)->_credit_queue;
  pretmp_1139 = &this_20(D)->_output_matched;
  pretmp_1125 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 132>:
  # DEBUG this => &D.53757
  # DEBUG __c => &D.53758
  std::deque<Flit*, std::allocator<Flit*> >::deque (&D.53757.c, &D.53758);

  <bb 133>:
  _143 = this_20(D)->D.50427._outputs;
  _144 = (long unsigned int) _143;
  _145 = &this_20(D)->_output_frame;
  # DEBUG this => _145
  # DEBUG __new_size => _144
  # DEBUG __x => &D.53757
  _140 = MEM[(struct queue * *)this_20(D) + 376B];
  # DEBUG D#78 => _145
  _750 = MEM[(struct queue * *)this_20(D) + 384B];
  # DEBUG D#78 => _145
  # DEBUG this => D#78
  # DEBUG this => D#78
  _751 = (long int) _750;
  _752 = (long int) _140;
  _753 = _751 - _752;
  _754 = _753 /[ex] 80;
  _755 = (size_type) _754;
  if (_144 > _755)
    goto <bb 134>;
  else
    goto <bb 136>;

  <bb 134>:
  # DEBUG D#78 => _145
  # DEBUG D#78 => _145
  # DEBUG this => D#78
  # DEBUG this => D#78
  _756 = _144 - _755;
  # DEBUG this => _145
  # DEBUG D#111 => &_145->D.48826._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#111
  # DEBUG this => _145
  MEM[(struct __normal_iterator *)&__position] = _750;
  # DEBUG __n => _756
  # DEBUG __x => &D.53757
  std::vector<std::queue<Flit*> >::_M_fill_insert (_145, __position, _756, &D.53757);

  <bb 135>:
  goto <bb 142>;

  <bb 136>:
  # DEBUG D#78 => _145
  # DEBUG D#78 => _145
  # DEBUG this => D#78
  # DEBUG this => D#78
  if (_144 < _755)
    goto <bb 137>;
  else
    goto <bb 135>;

  <bb 137>:
  _757 = _144 * 80;
  __pos_758 = _140 + _757;
  # DEBUG D#620 => _145
  # DEBUG __pos => __pos_758
  # DEBUG D#619 => D#620
  # DEBUG this => D#619
  # DEBUG D#618 => &D#619->D.48826
  # DEBUG this => D#618
  # DEBUG __first => __pos_758
  # DEBUG __last => _750
  # DEBUG __first => __pos_758
  if (_750 == __pos_758)
    goto <bb 138>;
  else
    goto <bb 139>;

  <bb 138>:
  MEM[(struct queue * *)this_20(D) + 384B] = __pos_758;
  goto <bb 142>;

  <bb 139>:

  <bb 140>:
  # __pos_940 = PHI <__pos_758(139), __pos_761(141)>
  # DEBUG __first => __pos_940
  # DEBUG __r => __pos_940
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  _760 = &MEM[(struct deque *)__pos_940].D.47197;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_760);
  MEM[(struct  &)__pos_940] ={v} {CLOBBER};
  __pos_761 = __pos_940 + 80;
  # DEBUG __first => __pos_761
  # DEBUG __first => __pos_761
  if (_750 == __pos_761)
    goto <bb 138>;
  else
    goto <bb 141>;

  <bb 141>:
  goto <bb 140>;

  <bb 142>:
  # DEBUG this => &D.53757
  # DEBUG D#616 => &D.53757.c
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.53757].D.47197);
  D.53757 ={v} {CLOBBER};
  # DEBUG this => &D.53758
  # DEBUG D#607 => &D.53758.D.47197
  # DEBUG this => D#607
  # DEBUG this => &D.53758
  # DEBUG D#72 => &D.53758.D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)&D.53758 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)&D.53758 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)&D.53758 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)&D.53758 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => &D.53758
  # DEBUG D#73 => &D.53758.D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)&D.53758 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)&D.53758 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)&D.53758 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)&D.53758 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => &D.53758
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.53758.D.47197);
  D.53758 ={v} {CLOBBER};
  # DEBUG this => &D.53760
  # DEBUG this => &D.53760.D.47197
  # DEBUG D#859 => &MEM[(struct _Deque_base *)&D.53760]._M_impl
  # DEBUG this => D#859
  # DEBUG this => D#859
  # DEBUG this => D#859
  MEM[(struct _Deque_impl *)&D.53760]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.53760]._M_map_size = 0;
  # DEBUG D#460 => &D#859->_M_start
  # DEBUG this => D#460
  MEM[(struct _Deque_iterator *)&D.53760 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.53760 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.53760 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.53760 + 16B]._M_node = 0B;
  # DEBUG D#459 => &D#859->_M_finish
  # DEBUG this => D#459
  MEM[(struct _Deque_iterator *)&D.53760 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.53760 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.53760 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.53760 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (&D.53760.D.47197, 0);
  goto <bb 144>;

<L100>:
  pretmp_1065 = &this_20(D)->_multi_queue;
  pretmp_733 = &this_20(D)->_credit_queue;
  pretmp_653 = &this_20(D)->_output_matched;
  pretmp_1127 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 144>:
  # DEBUG this => &D.53759
  # DEBUG __c => &D.53760
  std::deque<Flit*, std::allocator<Flit*> >::deque (&D.53759.c, &D.53760);

  <bb 145>:
  _149 = this_20(D)->_multi_queue_size;
  _150 = (long unsigned int) _149;
  _151 = &this_20(D)->_multi_queue;
  # DEBUG this => _151
  # DEBUG __new_size => _150
  # DEBUG __x => &D.53759
  _146 = MEM[(struct queue * *)this_20(D) + 400B];
  # DEBUG D#78 => _151
  _762 = MEM[(struct queue * *)this_20(D) + 408B];
  # DEBUG D#78 => _151
  # DEBUG this => D#78
  # DEBUG this => D#78
  _763 = (long int) _762;
  _764 = (long int) _146;
  _765 = _763 - _764;
  _766 = _765 /[ex] 80;
  _767 = (size_type) _766;
  if (_150 > _767)
    goto <bb 146>;
  else
    goto <bb 148>;

  <bb 146>:
  # DEBUG D#78 => _151
  # DEBUG D#78 => _151
  # DEBUG this => D#78
  # DEBUG this => D#78
  _768 = _150 - _767;
  # DEBUG this => _151
  # DEBUG D#111 => &_151->D.48826._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#111
  # DEBUG this => _151
  MEM[(struct __normal_iterator *)&__position] = _762;
  # DEBUG __n => _768
  # DEBUG __x => &D.53759
  std::vector<std::queue<Flit*> >::_M_fill_insert (_151, __position, _768, &D.53759);

  <bb 147>:
  goto <bb 154>;

  <bb 148>:
  # DEBUG D#78 => _151
  # DEBUG D#78 => _151
  # DEBUG this => D#78
  # DEBUG this => D#78
  if (_150 < _767)
    goto <bb 149>;
  else
    goto <bb 147>;

  <bb 149>:
  _769 = _150 * 80;
  __pos_770 = _146 + _769;
  # DEBUG D#620 => _151
  # DEBUG __pos => __pos_770
  # DEBUG D#619 => D#620
  # DEBUG this => D#619
  # DEBUG D#618 => &D#619->D.48826
  # DEBUG this => D#618
  # DEBUG __first => __pos_770
  # DEBUG __last => _762
  # DEBUG __first => __pos_770
  if (_762 == __pos_770)
    goto <bb 150>;
  else
    goto <bb 151>;

  <bb 150>:
  MEM[(struct queue * *)this_20(D) + 408B] = __pos_770;
  goto <bb 154>;

  <bb 151>:

  <bb 152>:
  # __pos_1085 = PHI <__pos_770(151), __pos_773(153)>
  # DEBUG __first => __pos_1085
  # DEBUG __r => __pos_1085
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  _772 = &MEM[(struct deque *)__pos_1085].D.47197;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_772);
  MEM[(struct  &)__pos_1085] ={v} {CLOBBER};
  __pos_773 = __pos_1085 + 80;
  # DEBUG __first => __pos_773
  # DEBUG __first => __pos_773
  if (_762 == __pos_773)
    goto <bb 150>;
  else
    goto <bb 153>;

  <bb 153>:
  goto <bb 152>;

  <bb 154>:
  # DEBUG this => &D.53759
  # DEBUG D#616 => &D.53759.c
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.53759].D.47197);
  D.53759 ={v} {CLOBBER};
  # DEBUG this => &D.53760
  # DEBUG D#607 => &D.53760.D.47197
  # DEBUG this => D#607
  # DEBUG this => &D.53760
  # DEBUG D#72 => &D.53760.D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)&D.53760 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)&D.53760 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)&D.53760 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)&D.53760 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => &D.53760
  # DEBUG D#73 => &D.53760.D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)&D.53760 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)&D.53760 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)&D.53760 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)&D.53760 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => &D.53760
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.53760.D.47197);
  D.53760 ={v} {CLOBBER};
  # DEBUG this => &D.53762
  # DEBUG this => &D.53762.D.53612
  # DEBUG D#893 => &MEM[(struct _Deque_base *)&D.53762]._M_impl
  # DEBUG this => D#893
  # DEBUG this => D#893
  # DEBUG this => D#893
  MEM[(struct _Deque_impl *)&D.53762]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.53762]._M_map_size = 0;
  # DEBUG D#470 => &D#893->_M_start
  # DEBUG this => D#470
  MEM[(struct _Deque_iterator *)&D.53762 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.53762 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.53762 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.53762 + 16B]._M_node = 0B;
  # DEBUG D#469 => &D#893->_M_finish
  # DEBUG this => D#469
  MEM[(struct _Deque_iterator *)&D.53762 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.53762 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.53762 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.53762 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (&D.53762.D.53612, 0);
  goto <bb 156>;

<L102>:
  pretmp_1144 = &this_20(D)->_credit_queue;
  pretmp_1138 = &this_20(D)->_output_matched;
  pretmp_1126 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 156>:
  # DEBUG this => &D.53761
  # DEBUG __c => &D.53762
  std::deque<Credit*, std::allocator<Credit*> >::deque (&D.53761.c, &D.53762);

  <bb 157>:
  _155 = this_20(D)->D.50427._inputs;
  _156 = (long unsigned int) _155;
  _157 = &this_20(D)->_credit_queue;
  # DEBUG this => _157
  # DEBUG __new_size => _156
  # DEBUG __x => &D.53761
  _152 = MEM[(struct queue * *)this_20(D) + 448B];
  # DEBUG D#85 => _157
  _774 = MEM[(struct queue * *)this_20(D) + 456B];
  # DEBUG D#85 => _157
  # DEBUG this => D#85
  # DEBUG this => D#85
  _775 = (long int) _774;
  _776 = (long int) _152;
  _777 = _775 - _776;
  _778 = _777 /[ex] 80;
  _779 = (size_type) _778;
  if (_156 > _779)
    goto <bb 158>;
  else
    goto <bb 160>;

  <bb 158>:
  # DEBUG D#85 => _157
  # DEBUG D#85 => _157
  # DEBUG this => D#85
  # DEBUG this => D#85
  _780 = _156 - _779;
  # DEBUG this => _157
  # DEBUG D#114 => &_157->D.49577._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#114
  # DEBUG this => _157
  MEM[(struct __normal_iterator *)&__position] = _774;
  # DEBUG __n => _780
  # DEBUG __x => &D.53761
  std::vector<std::queue<Credit*> >::_M_fill_insert (_157, __position, _780, &D.53761);

  <bb 159>:
  goto <bb 173>;

  <bb 160>:
  # DEBUG D#85 => _157
  # DEBUG D#85 => _157
  # DEBUG this => D#85
  # DEBUG this => D#85
  if (_156 < _779)
    goto <bb 161>;
  else
    goto <bb 159>;

  <bb 161>:
  _781 = _156 * 80;
  __pos_782 = _152 + _781;
  # DEBUG D#661 => _157
  # DEBUG __pos => __pos_782
  # DEBUG D#660 => D#661
  # DEBUG this => D#660
  # DEBUG D#659 => &D#660->D.49577
  # DEBUG this => D#659
  # DEBUG __first => __pos_782
  # DEBUG __last => _774
  # DEBUG __first => __pos_782
  if (_774 == __pos_782)
    goto <bb 162>;
  else
    goto <bb 163>;

  <bb 162>:
  MEM[(struct queue * *)this_20(D) + 456B] = __pos_782;
  goto <bb 173>;

  <bb 163>:

  <bb 164>:
  # __pos_1177 = PHI <__pos_782(163), __pos_785(172)>
  # DEBUG __first => __pos_1177
  # DEBUG __r => __pos_1177
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  # DEBUG D#2027 => &MEM[(struct deque *)__pos_1177].D.53612
  # DEBUG this => D#2027
  _158 = MEM[(struct _Deque_base *)__pos_1177]._M_impl._M_map;
  if (_158 != 0B)
    goto <bb 165>;
  else
    goto <bb 171>;

  <bb 165>:
  _786 = MEM[(struct _Deque_base *)__pos_1177]._M_impl._M_finish._M_node;
  _787 = _786 + 8;
  __nstart_788 = MEM[(struct _Deque_base *)__pos_1177]._M_impl._M_start._M_node;
  # DEBUG this => D#2027
  # DEBUG __nstart => __nstart_788
  # DEBUG __nfinish => _787
  # DEBUG __n => __nstart_788
  # DEBUG __n => __nstart_788
  if (_787 <= __nstart_788)
    goto <bb 170>;
  else
    goto <bb 166>;

  <bb 166>:

  <bb 167>:
  # __nstart_1087 = PHI <__nstart_788(166), __nstart_791(168)>
  # DEBUG __n => __nstart_1087
  _790 = *__nstart_1087;
  # DEBUG this => D#2027
  # DEBUG __p => _790
  # DEBUG __size => 8
  # DEBUG D#629 => &D#2027->_M_impl
  # DEBUG D#627 => D#629
  # DEBUG __p => _790
  # DEBUG __a => D#627
  # DEBUG __n => D#628
  # DEBUG D#626 => D#628
  # DEBUG D#625 => D#627
  # DEBUG D#623 => D#625
  # DEBUG D#624 => D#626
  # DEBUG __p => _790
  # DEBUG this => D#623
  # DEBUG D.99446 => D#624
  operator delete (_790);
  __nstart_791 = __nstart_1087 + 8;
  # DEBUG __n => __nstart_791
  # DEBUG __n => __nstart_791
  if (_787 <= __nstart_791)
    goto <bb 169>;
  else
    goto <bb 168>;

  <bb 168>:
  goto <bb 167>;

  <bb 169>:
  pretmp_1336 = MEM[(struct _Deque_base *)__pos_1177]._M_impl._M_map;

  <bb 170>:
  # prephitmp_1337 = PHI <pretmp_1336(169), _158(165)>
  # DEBUG D#646 => D#2027->_M_impl._M_map_size
  # DEBUG D#2049 => MEM[(struct _Deque_base *)__pos_1177]._M_impl._M_map
  # DEBUG D#644 => D#2027
  # DEBUG D#645 => D#646
  # DEBUG __p => D#2049
  # DEBUG this => D#644
  # DEBUG __n => D#645
  # DEBUG D#643 => D#645
  # DEBUG D#642 => D#644
  # DEBUG D#641 => D#642
  # DEBUG this => D#641
  # DEBUG D#640 => D#641
  # DEBUG this => D#640
  # DEBUG this => NULL
  # DEBUG D.77171 => NULL
  # DEBUG this => NULL
  # DEBUG D#475 => &__map_alloc
  # DEBUG D#476 => D#643
  # DEBUG __p => D#2049
  # DEBUG __a => D#475
  # DEBUG __n => D#476
  # DEBUG D#474 => D#476
  # DEBUG D#473 => D#475
  # DEBUG D#471 => D#473
  # DEBUG D#472 => D#474
  # DEBUG __p => D#2049
  # DEBUG this => D#471
  # DEBUG D.99456 => D#472
  operator delete (prephitmp_1337);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 171>:
  # DEBUG D#647 => &D#2027->_M_impl
  # DEBUG this => D#647
  # DEBUG this => D#647
  # DEBUG this => D#647
  MEM[(struct  &)__pos_1177] ={v} {CLOBBER};
  __pos_785 = __pos_1177 + 80;
  # DEBUG __first => __pos_785
  # DEBUG __first => __pos_785
  if (_774 == __pos_785)
    goto <bb 162>;
  else
    goto <bb 172>;

  <bb 172>:
  goto <bb 164>;

  <bb 173>:
  # DEBUG this => &D.53761
  # DEBUG D#657 => &D.53761.c
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&D.53761].D.53612);
  D.53761 ={v} {CLOBBER};
  # DEBUG this => &D.53762
  # DEBUG D#648 => &D.53762.D.53612
  # DEBUG this => D#648
  # DEBUG this => &D.53762
  # DEBUG D#79 => &D.53762.D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)&D.53762 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)&D.53762 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)&D.53762 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)&D.53762 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => &D.53762
  # DEBUG D#80 => &D.53762.D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)&D.53762 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)&D.53762 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)&D.53762 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)&D.53762 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => &D.53762
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&D.53762.D.53612);
  D.53762 ={v} {CLOBBER};
  _162 = this_20(D)->D.50427._inputs;
  _163 = (long unsigned int) _162;
  # DEBUG D#2060 => &this_20(D)->_input_state
  # DEBUG this => D#2060
  # DEBUG __new_size => _163
  __x = 0;
  # DEBUG __x => __x
  _793 = MEM[(eQState * *)this_20(D) + 472B];
  # DEBUG D#86 => D#2060
  _794 = MEM[(eQState * *)this_20(D) + 480B];
  # DEBUG D#86 => D#2060
  # DEBUG this => D#86
  # DEBUG this => D#86
  _795 = (long int) _794;
  _796 = (long int) _793;
  _797 = _795 - _796;
  _798 = _797 /[ex] 4;
  _799 = (size_type) _798;
  if (_163 > _799)
    goto <bb 174>;
  else
    goto <bb 177>;

  <bb 174>:
  # DEBUG D#86 => D#2060
  # DEBUG D#86 => D#2060
  # DEBUG this => D#86
  # DEBUG this => D#86
  _800 = _163 - _799;
  # DEBUG this => D#2060
  # DEBUG D#115 => &D#2060->D.50324._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#115
  # DEBUG this => D#2060
  MEM[(struct __normal_iterator *)&__position] = _794;
  # DEBUG __n => _800
  # DEBUG __x => &__x
  _164 = &this_20(D)->_input_state;
  std::vector<ChaosRouter::eQState>::_M_fill_insert (_164, __position, _800, &__x);
  goto <bb 176>;

<L104>:
  pretmp_651 = &this_20(D)->_output_matched;
  pretmp_1124 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 176>:
  pretmp_1198 = this_20(D)->D.50427._inputs;
  pretmp_1200 = (long unsigned int) pretmp_1198;
  goto <bb 179>;

  <bb 177>:
  # DEBUG D#86 => D#2060
  # DEBUG D#86 => D#2060
  # DEBUG this => D#86
  # DEBUG this => D#86
  if (_163 < _799)
    goto <bb 178>;
  else
    goto <bb 179>;

  <bb 178>:
  _801 = _163 * 4;
  _802 = _793 + _801;
  # DEBUG D#197 => D#2060
  # DEBUG __pos => _802
  # DEBUG D#196 => D#197
  # DEBUG this => D#196
  # DEBUG D#194 => &D#196->D.50324
  # DEBUG this => D#194
  # DEBUG D#195 => D#196->D.50324._M_impl._M_finish
  # DEBUG __first => _802
  # DEBUG __last => D#195
  # DEBUG D.73983 => NULL
  # DEBUG D#192 => _802
  # DEBUG D#193 => D#195
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  MEM[(eQState * *)this_20(D) + 480B] = _802;

  <bb 179>:
  # prephitmp_1201 = PHI <_163(177), pretmp_1200(176), _163(178)>
  # DEBUG D#2048 => this_20(D)->D.50427._inputs
  # DEBUG D#2059 => &this_20(D)->_input_output_match
  # DEBUG this => D#2059
  # DEBUG __new_size => (long unsigned int) D#2048
  __x = -1;
  # DEBUG __x => __x
  _165 = MEM[(int * *)this_20(D) + 520B];
  # DEBUG D#67 => D#2059
  _803 = MEM[(int * *)this_20(D) + 528B];
  # DEBUG D#67 => D#2059
  # DEBUG this => D#67
  # DEBUG this => D#67
  _804 = (long int) _803;
  _805 = (long int) _165;
  _806 = _804 - _805;
  _807 = _806 /[ex] 4;
  _808 = (size_type) _807;
  if (_808 < prephitmp_1201)
    goto <bb 180>;
  else
    goto <bb 183>;

  <bb 180>:
  # DEBUG D#67 => D#2059
  # DEBUG D#67 => D#2059
  # DEBUG this => D#67
  # DEBUG this => D#67
  _809 = prephitmp_1201 - _808;
  # DEBUG this => D#2059
  # DEBUG D#116 => &D#2059->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#116
  # DEBUG this => D#2059
  MEM[(struct __normal_iterator *)&__position] = _803;
  # DEBUG __n => _809
  # DEBUG __x => &__x
  _168 = &this_20(D)->_input_output_match;
  std::vector<int>::_M_fill_insert (_168, __position, _809, &__x);
  goto <bb 182>;

<L105>:
  pretmp_1137 = &this_20(D)->_output_matched;
  pretmp_1121 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 182>:
  pretmp_1209 = this_20(D)->D.50427._inputs;
  pretmp_1211 = (long unsigned int) pretmp_1209;
  goto <bb 185>;

  <bb 183>:
  # DEBUG D#67 => D#2059
  # DEBUG D#67 => D#2059
  # DEBUG this => D#67
  # DEBUG this => D#67
  if (_808 > prephitmp_1201)
    goto <bb 184>;
  else
    goto <bb 185>;

  <bb 184>:
  _810 = prephitmp_1201 * 4;
  _811 = _165 + _810;
  # DEBUG D#155 => D#2059
  # DEBUG __pos => _811
  # DEBUG D#154 => D#155
  # DEBUG this => D#154
  # DEBUG D#152 => &D#154->D.35782
  # DEBUG this => D#152
  # DEBUG D#153 => D#154->D.35782._M_impl._M_finish
  # DEBUG __first => _811
  # DEBUG __last => D#153
  # DEBUG D.73801 => NULL
  # DEBUG D#150 => _811
  # DEBUG D#151 => D#153
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  MEM[(int * *)this_20(D) + 528B] = _811;

  <bb 185>:
  # prephitmp_1212 = PHI <prephitmp_1201(183), pretmp_1211(182), prephitmp_1201(184)>
  # DEBUG D#2047 => this_20(D)->D.50427._inputs
  # DEBUG D#2058 => &this_20(D)->_input_mq_match
  # DEBUG this => D#2058
  # DEBUG __new_size => (long unsigned int) D#2047
  __x = -1;
  # DEBUG __x => __x
  _169 = MEM[(int * *)this_20(D) + 544B];
  # DEBUG D#67 => D#2058
  _812 = MEM[(int * *)this_20(D) + 552B];
  # DEBUG D#67 => D#2058
  # DEBUG this => D#67
  # DEBUG this => D#67
  _813 = (long int) _812;
  _814 = (long int) _169;
  _815 = _813 - _814;
  _816 = _815 /[ex] 4;
  _817 = (size_type) _816;
  if (_817 < prephitmp_1212)
    goto <bb 186>;
  else
    goto <bb 189>;

  <bb 186>:
  # DEBUG D#67 => D#2058
  # DEBUG D#67 => D#2058
  # DEBUG this => D#67
  # DEBUG this => D#67
  _818 = prephitmp_1212 - _817;
  # DEBUG this => D#2058
  # DEBUG D#116 => &D#2058->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#116
  # DEBUG this => D#2058
  MEM[(struct __normal_iterator *)&__position] = _812;
  # DEBUG __n => _818
  # DEBUG __x => &__x
  _172 = &this_20(D)->_input_mq_match;
  std::vector<int>::_M_fill_insert (_172, __position, _818, &__x);
  goto <bb 188>;

<L106>:
  pretmp_1102 = &this_20(D)->_output_matched;
  pretmp_1115 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 188>:
  goto <bb 191>;

  <bb 189>:
  # DEBUG D#67 => D#2058
  # DEBUG D#67 => D#2058
  # DEBUG this => D#67
  # DEBUG this => D#67
  if (_817 > prephitmp_1212)
    goto <bb 190>;
  else
    goto <bb 188>;

  <bb 190>:
  _819 = prephitmp_1212 * 4;
  _820 = _169 + _819;
  # DEBUG D#155 => D#2058
  # DEBUG __pos => _820
  # DEBUG D#154 => D#155
  # DEBUG this => D#154
  # DEBUG D#152 => &D#154->D.35782
  # DEBUG this => D#152
  # DEBUG D#153 => D#154->D.35782._M_impl._M_finish
  # DEBUG __first => _820
  # DEBUG __last => D#153
  # DEBUG D.73801 => NULL
  # DEBUG D#150 => _820
  # DEBUG D#151 => D#153
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  MEM[(int * *)this_20(D) + 552B] = _820;

  <bb 191>:
  _174 = this_20(D)->D.50427._outputs;
  _175 = (long unsigned int) _174;
  _176 = &this_20(D)->_output_matched;
  # DEBUG this => _176
  # DEBUG __new_size => _175
  # DEBUG __x => 0
  # DEBUG this => _176
  # DEBUG this => _176
  # DEBUG D#118 => &MEM[(const struct vector *)_176].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  _173 = MEM[(const struct _Bit_iterator *)this_20(D) + 616B].D.27293._M_offset;
  _821 = MEM[(const struct _Bit_iterator *)this_20(D) + 616B].D.27293._M_p;
  # DEBUG this => D#25
  # DEBUG __x => _821
  # DEBUG __y => _173
  # DEBUG this => D#25
  # DEBUG this => _176
  # DEBUG D#117 => &MEM[(const struct vector *)_176].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  _822 = MEM[(const struct _Bit_iterator *)this_20(D) + 632B].D.27293._M_offset;
  _823 = MEM[(const struct _Bit_iterator *)this_20(D) + 632B].D.27293._M_p;
  # DEBUG this => D#25
  # DEBUG __x => _823
  # DEBUG __y => _822
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _824 = (long int) _823;
  _825 = (long int) _821;
  _826 = _824 - _825;
  _827 = _826 * 8;
  _828 = (long int) _822;
  _829 = _827 + _828;
  _830 = (long int) _173;
  _831 = _829 - _830;
  _832 = (size_type) _831;
  if (_175 < _832)
    goto <bb 192>;
  else
    goto <bb 195>;

  <bb 192>:
  __new_size.205_833 = (long int) _174;
  # DEBUG this => _176
  # DEBUG this => NULL
  # DEBUG __i => __new_size.205_833
  # DEBUG __tmp$_M_p => _821
  # DEBUG __tmp$_M_offset => _173
  # DEBUG this => &__tmp
  # DEBUG __i => __new_size.205_833
  # DEBUG D#21 => &__tmp.D.27293
  # DEBUG this => D#21
  # DEBUG __i => __new_size.205_833
  __n_834 = _830 + __new_size.205_833;
  # DEBUG __n => __n_834
  _835 = __n_834 / 64;
  _836 = (long unsigned int) _835;
  _837 = _836 * 8;
  __tmp$_M_p_838 = _821 + _837;
  # DEBUG __tmp$_M_p => __tmp$_M_p_838
  __n_839 = __n_834 % 64;
  # DEBUG __n => __n_839
  if (__n_839 < 0)
    goto <bb 193>;
  else
    goto <bb 194>;

  <bb 193>:
  __n_840 = __n_839 + 64;
  # DEBUG __n => __n_840
  __tmp$_M_p_841 = __tmp$_M_p_838 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_841

  <bb 194>:
  # __n_842 = PHI <__n_839(192), __n_840(193)>
  # __tmp$_M_p_844 = PHI <__tmp$_M_p_838(192), __tmp$_M_p_841(193)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_844
  # DEBUG __n => __n_842
  _843 = (unsigned int) __n_842;
  # DEBUG __tmp$_M_offset => _843
  # DEBUG D#22 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#22
  # DEBUG D#23 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#23
  # DEBUG this => _176
  MEM[(struct _Bit_iterator *)this_20(D) + 632B] = __tmp$_M_p_844;
  MEM[(struct _Bit_iterator *)this_20(D) + 640B] = _843;
  goto <bb 198>;

  <bb 195>:
  # DEBUG this => _176
  # DEBUG this => _176
  # DEBUG D#118 => &MEM[(const struct vector *)_176].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  # DEBUG this => D#25
  # DEBUG __x => _821
  # DEBUG __y => _173
  # DEBUG this => D#25
  # DEBUG this => _176
  # DEBUG D#117 => &MEM[(const struct vector *)_176].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  # DEBUG this => D#25
  # DEBUG __x => _823
  # DEBUG __y => _822
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _845 = _175 - _832;
  # DEBUG this => _176
  # DEBUG D#954 => &__x
  # DEBUG this => _176
  MEM[(struct _Bit_iterator *)&__position] = _823;
  MEM[(struct _Bit_iterator *)&__position + 8B] = _822;
  # DEBUG __n => _845
  # DEBUG __x => D#954
  std::vector<bool>::_M_fill_insert (_176, __position, _845, 0);
  goto <bb 197>;

<L107>:
  pretmp_1122 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 197>:
  pretmp_1243 = this_20(D)->D.50427._outputs;
  pretmp_1245 = (long unsigned int) pretmp_1243;

  <bb 198>:
  # prephitmp_1246 = PHI <pretmp_1245(197), _175(194)>
  # DEBUG D#2046 => this_20(D)->D.50427._outputs
  # DEBUG D#2057 => &this_20(D)->_next_queue_cnt
  # DEBUG this => D#2057
  # DEBUG __new_size => (long unsigned int) D#2046
  __x = 0;
  # DEBUG __x => __x
  _177 = MEM[(int * *)this_20(D) + 424B];
  # DEBUG D#67 => D#2057
  _847 = MEM[(int * *)this_20(D) + 432B];
  # DEBUG D#67 => D#2057
  # DEBUG this => D#67
  # DEBUG this => D#67
  _848 = (long int) _847;
  _849 = (long int) _177;
  _850 = _848 - _849;
  _851 = _850 /[ex] 4;
  _852 = (size_type) _851;
  if (_852 < prephitmp_1246)
    goto <bb 199>;
  else
    goto <bb 202>;

  <bb 199>:
  # DEBUG D#67 => D#2057
  # DEBUG D#67 => D#2057
  # DEBUG this => D#67
  # DEBUG this => D#67
  _853 = prephitmp_1246 - _852;
  # DEBUG this => D#2057
  # DEBUG D#116 => &D#2057->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#116
  # DEBUG this => D#2057
  MEM[(struct __normal_iterator *)&__position] = _847;
  # DEBUG __n => _853
  # DEBUG __x => &__x
  _180 = &this_20(D)->_next_queue_cnt;
  std::vector<int>::_M_fill_insert (_180, __position, _853, &__x);
  goto <bb 201>;

<L108>:
  pretmp_1116 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 201>:
  goto <bb 204>;

  <bb 202>:
  # DEBUG D#67 => D#2057
  # DEBUG D#67 => D#2057
  # DEBUG this => D#67
  # DEBUG this => D#67
  if (_852 > prephitmp_1246)
    goto <bb 203>;
  else
    goto <bb 201>;

  <bb 203>:
  _854 = prephitmp_1246 * 4;
  _855 = _177 + _854;
  # DEBUG D#155 => D#2057
  # DEBUG __pos => _855
  # DEBUG D#154 => D#155
  # DEBUG this => D#154
  # DEBUG D#152 => &D#154->D.35782
  # DEBUG this => D#152
  # DEBUG D#153 => D#154->D.35782._M_impl._M_finish
  # DEBUG __first => _855
  # DEBUG __last => D#153
  # DEBUG D.73801 => NULL
  # DEBUG D#150 => _855
  # DEBUG D#151 => D#153
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  MEM[(int * *)this_20(D) + 432B] = _855;

  <bb 204>:
  _182 = this_20(D)->_multi_queue_size;
  _183 = (long unsigned int) _182;
  # DEBUG D#2056 => &this_20(D)->_multi_match
  # DEBUG this => D#2056
  # DEBUG __new_size => _183
  __x = -1;
  # DEBUG __x => __x
  _181 = MEM[(int * *)this_20(D) + 568B];
  # DEBUG D#67 => D#2056
  _856 = MEM[(int * *)this_20(D) + 576B];
  # DEBUG D#67 => D#2056
  # DEBUG this => D#67
  # DEBUG this => D#67
  _857 = (long int) _856;
  _858 = (long int) _181;
  _859 = _857 - _858;
  _860 = _859 /[ex] 4;
  _861 = (size_type) _860;
  if (_183 > _861)
    goto <bb 205>;
  else
    goto <bb 208>;

  <bb 205>:
  # DEBUG D#67 => D#2056
  # DEBUG D#67 => D#2056
  # DEBUG this => D#67
  # DEBUG this => D#67
  _862 = _183 - _861;
  # DEBUG this => D#2056
  # DEBUG D#116 => &D#2056->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#116
  # DEBUG this => D#2056
  MEM[(struct __normal_iterator *)&__position] = _856;
  # DEBUG __n => _862
  # DEBUG __x => &__x
  _184 = &this_20(D)->_multi_match;
  std::vector<int>::_M_fill_insert (_184, __position, _862, &__x);
  goto <bb 207>;

<L109>:
  pretmp_1119 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 207>:
  pretmp_1265 = this_20(D)->_multi_queue_size;
  pretmp_1267 = (long unsigned int) pretmp_1265;
  goto <bb 210>;

  <bb 208>:
  # DEBUG D#67 => D#2056
  # DEBUG D#67 => D#2056
  # DEBUG this => D#67
  # DEBUG this => D#67
  if (_183 < _861)
    goto <bb 209>;
  else
    goto <bb 210>;

  <bb 209>:
  _863 = _183 * 4;
  _864 = _181 + _863;
  # DEBUG D#155 => D#2056
  # DEBUG __pos => _864
  # DEBUG D#154 => D#155
  # DEBUG this => D#154
  # DEBUG D#152 => &D#154->D.35782
  # DEBUG this => D#152
  # DEBUG D#153 => D#154->D.35782._M_impl._M_finish
  # DEBUG __first => _864
  # DEBUG __last => D#153
  # DEBUG D.73801 => NULL
  # DEBUG D#150 => _864
  # DEBUG D#151 => D#153
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  MEM[(int * *)this_20(D) + 576B] = _864;

  <bb 210>:
  # prephitmp_1266 = PHI <_182(208), pretmp_1265(207), _182(209)>
  # prephitmp_1268 = PHI <_183(208), pretmp_1267(207), _183(209)>
  # DEBUG D#2045 => this_20(D)->_multi_queue_size
  # DEBUG D#2055 => &this_20(D)->_mq_age
  # DEBUG this => D#2055
  # DEBUG __new_size => (long unsigned int) D#2045
  __x = 0;
  # DEBUG __x => __x
  _185 = MEM[(int * *)this_20(D) + 592B];
  # DEBUG D#67 => D#2055
  _865 = MEM[(int * *)this_20(D) + 600B];
  # DEBUG D#67 => D#2055
  # DEBUG this => D#67
  # DEBUG this => D#67
  _866 = (long int) _865;
  _867 = (long int) _185;
  _868 = _866 - _867;
  _869 = _868 /[ex] 4;
  _870 = (size_type) _869;
  if (_870 < prephitmp_1268)
    goto <bb 211>;
  else
    goto <bb 214>;

  <bb 211>:
  # DEBUG D#67 => D#2055
  # DEBUG D#67 => D#2055
  # DEBUG this => D#67
  # DEBUG this => D#67
  _871 = prephitmp_1268 - _870;
  # DEBUG this => D#2055
  # DEBUG D#116 => &D#2055->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#116
  # DEBUG this => D#2055
  MEM[(struct __normal_iterator *)&__position] = _865;
  # DEBUG __n => _871
  # DEBUG __x => &__x
  _188 = &this_20(D)->_mq_age;
  std::vector<int>::_M_fill_insert (_188, __position, _871, &__x);
  goto <bb 213>;

<L110>:
  pretmp_631 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

  <bb 213>:
  pretmp_1282 = this_20(D)->_multi_queue_size;
  pretmp_1284 = (long unsigned int) pretmp_1282;
  goto <bb 216>;

  <bb 214>:
  # DEBUG D#67 => D#2055
  # DEBUG D#67 => D#2055
  # DEBUG this => D#67
  # DEBUG this => D#67
  if (_870 > prephitmp_1268)
    goto <bb 215>;
  else
    goto <bb 216>;

  <bb 215>:
  _872 = prephitmp_1268 * 4;
  _873 = _185 + _872;
  # DEBUG D#155 => D#2055
  # DEBUG __pos => _873
  # DEBUG D#154 => D#155
  # DEBUG this => D#154
  # DEBUG D#152 => &D#154->D.35782
  # DEBUG this => D#152
  # DEBUG D#153 => D#154->D.35782._M_impl._M_finish
  # DEBUG __first => _873
  # DEBUG __last => D#153
  # DEBUG D.73801 => NULL
  # DEBUG D#150 => _873
  # DEBUG D#151 => D#153
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  MEM[(int * *)this_20(D) + 600B] = _873;

  <bb 216>:
  # prephitmp_1283 = PHI <prephitmp_1266(214), pretmp_1282(213), prephitmp_1266(215)>
  # prephitmp_1285 = PHI <prephitmp_1268(214), pretmp_1284(213), prephitmp_1268(215)>
  # DEBUG D#2044 => this_20(D)->_multi_queue_size
  _192 = &this_20(D)->_mq_matched;
  # DEBUG this => _192
  # DEBUG __new_size => (long unsigned int) D#2044
  # DEBUG __x => 0
  # DEBUG this => _192
  # DEBUG this => _192
  # DEBUG D#118 => &MEM[(const struct vector *)_192].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  _189 = MEM[(const struct _Bit_iterator *)this_20(D) + 656B].D.27293._M_offset;
  _874 = MEM[(const struct _Bit_iterator *)this_20(D) + 656B].D.27293._M_p;
  # DEBUG this => D#25
  # DEBUG __x => _874
  # DEBUG __y => _189
  # DEBUG this => D#25
  # DEBUG this => _192
  # DEBUG D#117 => &MEM[(const struct vector *)_192].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  _875 = MEM[(const struct _Bit_iterator *)this_20(D) + 672B].D.27293._M_offset;
  _876 = MEM[(const struct _Bit_iterator *)this_20(D) + 672B].D.27293._M_p;
  # DEBUG this => D#25
  # DEBUG __x => _876
  # DEBUG __y => _875
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _877 = (long int) _876;
  _878 = (long int) _874;
  _879 = _877 - _878;
  _880 = _879 * 8;
  _881 = (long int) _875;
  _882 = _880 + _881;
  _883 = (long int) _189;
  _884 = _882 - _883;
  _885 = (size_type) _884;
  if (_885 > prephitmp_1285)
    goto <bb 217>;
  else
    goto <bb 220>;

  <bb 217>:
  __new_size.205_886 = (long int) prephitmp_1283;
  # DEBUG this => _192
  # DEBUG this => NULL
  # DEBUG __i => __new_size.205_886
  # DEBUG __tmp$_M_p => _874
  # DEBUG __tmp$_M_offset => _189
  # DEBUG this => &__tmp
  # DEBUG __i => __new_size.205_886
  # DEBUG D#21 => &__tmp.D.27293
  # DEBUG this => D#21
  # DEBUG __i => __new_size.205_886
  __n_887 = _883 + __new_size.205_886;
  # DEBUG __n => __n_887
  _888 = __n_887 / 64;
  _889 = (long unsigned int) _888;
  _890 = _889 * 8;
  __tmp$_M_p_891 = _874 + _890;
  # DEBUG __tmp$_M_p => __tmp$_M_p_891
  __n_892 = __n_887 % 64;
  # DEBUG __n => __n_892
  if (__n_892 < 0)
    goto <bb 218>;
  else
    goto <bb 219>;

  <bb 218>:
  __n_893 = __n_892 + 64;
  # DEBUG __n => __n_893
  __tmp$_M_p_894 = __tmp$_M_p_891 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_894

  <bb 219>:
  # __n_895 = PHI <__n_892(217), __n_893(218)>
  # __tmp$_M_p_897 = PHI <__tmp$_M_p_891(217), __tmp$_M_p_894(218)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_897
  # DEBUG __n => __n_895
  _896 = (unsigned int) __n_895;
  # DEBUG __tmp$_M_offset => _896
  # DEBUG D#22 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#22
  # DEBUG D#23 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#23
  # DEBUG this => _192
  MEM[(struct _Bit_iterator *)this_20(D) + 672B] = __tmp$_M_p_897;
  MEM[(struct _Bit_iterator *)this_20(D) + 680B] = _896;
  goto <bb 223>;

  <bb 220>:
  # DEBUG this => _192
  # DEBUG this => _192
  # DEBUG D#118 => &MEM[(const struct vector *)_192].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#118
  # DEBUG this => D#25
  # DEBUG __x => _874
  # DEBUG __y => _189
  # DEBUG this => D#25
  # DEBUG this => _192
  # DEBUG D#117 => &MEM[(const struct vector *)_192].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#117
  # DEBUG this => D#25
  # DEBUG __x => _876
  # DEBUG __y => _875
  # DEBUG this => D#25
  # DEBUG __x => D#14
  # DEBUG __x => D#14
  # DEBUG __y => D#15
  # DEBUG __y => D#15
  _898 = prephitmp_1285 - _885;
  # DEBUG this => _192
  # DEBUG D#954 => &__x
  # DEBUG this => _192
  MEM[(struct _Bit_iterator *)&__position] = _876;
  MEM[(struct _Bit_iterator *)&__position + 8B] = _875;
  # DEBUG __n => _898
  # DEBUG __x => D#954
  std::vector<bool>::_M_fill_insert (_192, __position, _898, 0);
  goto <bb 222>;

<L111>:
  goto <bb 309> (<L51>);

  <bb 222>:
  pretmp_1301 = this_20(D)->_multi_queue_size;
  pretmp_1303 = (long unsigned int) pretmp_1301;

  <bb 223>:
  # prephitmp_1302 = PHI <pretmp_1301(222), prephitmp_1283(219)>
  # prephitmp_1304 = PHI <pretmp_1303(222), prephitmp_1285(219)>
  # DEBUG D#2043 => this_20(D)->_multi_queue_size
  # DEBUG D#2054 => &this_20(D)->_multi_state
  # DEBUG this => D#2054
  # DEBUG __new_size => (long unsigned int) D#2043
  __x = 0;
  # DEBUG __x => __x
  _193 = MEM[(eQState * *)this_20(D) + 496B];
  # DEBUG D#86 => D#2054
  _900 = MEM[(eQState * *)this_20(D) + 504B];
  # DEBUG D#86 => D#2054
  # DEBUG this => D#86
  # DEBUG this => D#86
  _901 = (long int) _900;
  _902 = (long int) _193;
  _903 = _901 - _902;
  _904 = _903 /[ex] 4;
  _905 = (size_type) _904;
  if (_905 < prephitmp_1304)
    goto <bb 224>;
  else
    goto <bb 227>;

  <bb 224>:
  # DEBUG D#86 => D#2054
  # DEBUG D#86 => D#2054
  # DEBUG this => D#86
  # DEBUG this => D#86
  _906 = prephitmp_1304 - _905;
  # DEBUG this => D#2054
  # DEBUG D#115 => &D#2054->D.50324._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#115
  # DEBUG this => D#2054
  MEM[(struct __normal_iterator *)&__position] = _900;
  # DEBUG __n => _906
  # DEBUG __x => &__x
  _196 = &this_20(D)->_multi_state;
  std::vector<ChaosRouter::eQState>::_M_fill_insert (_196, __position, _906, &__x);
  goto <bb 226>;

<L112>:
  goto <bb 309> (<L51>);

  <bb 226>:
  pretmp_1307 = this_20(D)->_multi_queue_size;
  goto <bb 229>;

  <bb 227>:
  # DEBUG D#86 => D#2054
  # DEBUG D#86 => D#2054
  # DEBUG this => D#86
  # DEBUG this => D#86
  if (_905 > prephitmp_1304)
    goto <bb 228>;
  else
    goto <bb 229>;

  <bb 228>:
  _907 = prephitmp_1304 * 4;
  _908 = _193 + _907;
  # DEBUG D#197 => D#2054
  # DEBUG __pos => _908
  # DEBUG D#196 => D#197
  # DEBUG this => D#196
  # DEBUG D#194 => &D#196->D.50324
  # DEBUG this => D#194
  # DEBUG D#195 => D#196->D.50324._M_impl._M_finish
  # DEBUG __first => _908
  # DEBUG __last => D#195
  # DEBUG D.73983 => NULL
  # DEBUG D#192 => _908
  # DEBUG D#193 => D#195
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  MEM[(eQState * *)this_20(D) + 504B] = _908;

  <bb 229>:
  # prephitmp_1308 = PHI <pretmp_1307(226), prephitmp_1302(228), prephitmp_1302(227)>
  # DEBUG i => 0
  if (prephitmp_1308 <= 0)
    goto <bb 230>;
  else
    goto <bb 231>;

  <bb 230>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _270 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _270)
    goto <bb 234>;
  else
    goto <bb 235>;

  <bb 231>:
  pretmp_1322 = MEM[(eQState * *)this_20(D) + 496B];
  pretmp_1324 = MEM[(int * *)this_20(D) + 568B];
  pretmp_1326 = MEM[(_Bit_type * *)this_20(D) + 656B];

  <bb 232>:
  # i_1113 = PHI <0(231), i_206(233)>
  # DEBUG i => i_1113
  _199 = (long unsigned int) i_1113;
  # DEBUG D#1442 => &this_20(D)->_multi_state
  # DEBUG D#30 => D#1442
  # DEBUG __n => _199
  # DEBUG this => D#30
  _268 = _199 * 4;
  _269 = pretmp_1322 + _268;
  *_269 = 0;
  # DEBUG D#1443 => &this_20(D)->_multi_match
  # DEBUG D#31 => D#1443
  # DEBUG __n => _199
  # DEBUG this => D#31
  _267 = pretmp_1324 + _268;
  *_267 = -1;
  # DEBUG D#1444 => &this_20(D)->_mq_matched
  # DEBUG D#32 => D#1444
  # DEBUG __n => _199
  # DEBUG this => D#32
  _204 = (unsigned int) _199;
  _58 = _204 & 63;
  _44 = _199 >> 6;
  _36 = _44 * 8;
  _265 = pretmp_1326 + _36;
  # DEBUG this => NULL
  # DEBUG __x => _265
  # DEBUG __y => _58
  # DEBUG this => D#17
  # DEBUG __x => _265
  # DEBUG __y => _58
  # DEBUG this => D#17
  # DEBUG this => D#18
  # DEBUG this => D#18
  _266 = 1 << _58;
  # DEBUG this => NULL
  # DEBUG __x => _265
  # DEBUG __y => _266
  # DEBUG this => &D.53764
  # DEBUG __x => 0
  _92 = *_265;
  _70 = ~_266;
  _67 = _70 & _92;
  *_265 = _67;
  i_206 = i_1113 + 1;
  # DEBUG i => i_206
  # DEBUG i => i_206
  _198 = this_20(D)->_multi_queue_size;
  if (_198 <= i_206)
    goto <bb 230>;
  else
    goto <bb 233>;

  <bb 233>:
  goto <bb 232>;

  <bb 234>:
  # DEBUG D#252 => rf.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &rf
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#249 => &rf._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _270
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _270
  # DEBUG this => D#243
  # DEBUG D.89685 => D#244
  operator delete (_270);

  <bb 235>:
  # DEBUG D#253 => &rf._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  rf ={v} {CLOBBER};
  # DEBUG D#1445 => {CLOBBER}
  # DEBUG rf_iter$_M_node => D#1445
  return;

<L17>:
  # DEBUG this => &D.53727
  # DEBUG this => &D.53727
  # DEBUG this => &D.53727
  _207 = MEM[(char * *)&D.53727];
  # DEBUG D#1 => &D.53727
  # DEBUG this => D#1
  # DEBUG this => &D.53727
  if (&D.53727.D.11539._M_local_buf != _207)
    goto <bb 237>;
  else
    goto <bb 238>;

  <bb 237>:
  # DEBUG D#252 => D.53727.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53727
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53727
  # DEBUG this => D#1
  # DEBUG this => &D.53727
  # DEBUG D#249 => &D.53727._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _207
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _207
  # DEBUG this => D#243
  # DEBUG D.89700 => D#244
  operator delete (_207);

  <bb 238>:
  # DEBUG D#253 => &D.53727._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53727 ={v} {CLOBBER};
  resx 19

<L113>:
  pretmp_1362 = &this_20(D)->_input_frame;
  pretmp_1372 = &this_20(D)->_output_frame;
  pretmp_1382 = &this_20(D)->_multi_queue;
  pretmp_1392 = &this_20(D)->_credit_queue;
  pretmp_1402 = &this_20(D)->_output_matched;
  pretmp_1412 = &this_20(D)->_mq_matched;
  goto <bb 314> (<L52>);

<L19>:
  # DEBUG this => &D.53729
  # DEBUG this => &D.53729
  # DEBUG this => &D.53729
  _43 = MEM[(char * *)&D.53729];
  # DEBUG D#1 => &D.53729
  # DEBUG this => D#1
  # DEBUG this => &D.53729
  if (&D.53729.D.11539._M_local_buf != _43)
    goto <bb 241>;
  else
    goto <bb 242>;

  <bb 241>:
  # DEBUG D#252 => D.53729.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53729
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53729
  # DEBUG this => D#1
  # DEBUG this => &D.53729
  # DEBUG D#249 => &D.53729._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _43
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _43
  # DEBUG this => D#243
  # DEBUG D.89717 => D#244
  operator delete (_43);

  <bb 242>:
  # DEBUG D#253 => &D.53729._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53729 ={v} {CLOBBER};
  resx 23

<L114>:
  pretmp_1364 = &this_20(D)->_input_frame;
  pretmp_1374 = &this_20(D)->_output_frame;
  pretmp_1384 = &this_20(D)->_multi_queue;
  pretmp_1394 = &this_20(D)->_credit_queue;
  pretmp_1404 = &this_20(D)->_output_matched;
  pretmp_1414 = &this_20(D)->_mq_matched;
  goto <bb 314> (<L52>);

<L21>:
  # DEBUG this => &D.53731
  # DEBUG this => &D.53731
  # DEBUG this => &D.53731
  _237 = MEM[(char * *)&D.53731];
  # DEBUG D#1 => &D.53731
  # DEBUG this => D#1
  # DEBUG this => &D.53731
  if (&D.53731.D.11539._M_local_buf != _237)
    goto <bb 245>;
  else
    goto <bb 246>;

  <bb 245>:
  # DEBUG D#252 => D.53731.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53731
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53731
  # DEBUG this => D#1
  # DEBUG this => &D.53731
  # DEBUG D#249 => &D.53731._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _237
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _237
  # DEBUG this => D#243
  # DEBUG D.89734 => D#244
  operator delete (_237);

  <bb 246>:
  # DEBUG D#253 => &D.53731._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53731 ={v} {CLOBBER};
  resx 27

<L115>:
  pretmp_1356 = &this_20(D)->_input_frame;
  pretmp_1366 = &this_20(D)->_output_frame;
  pretmp_1376 = &this_20(D)->_multi_queue;
  pretmp_1386 = &this_20(D)->_credit_queue;
  pretmp_1396 = &this_20(D)->_output_matched;
  pretmp_1406 = &this_20(D)->_mq_matched;
  goto <bb 314> (<L52>);

<L23>:
  # DEBUG this => &D.53733
  # DEBUG this => &D.53733
  # DEBUG this => &D.53733
  _235 = MEM[(char * *)&D.53733];
  # DEBUG D#1 => &D.53733
  # DEBUG this => D#1
  # DEBUG this => &D.53733
  if (&D.53733.D.11539._M_local_buf != _235)
    goto <bb 249>;
  else
    goto <bb 250>;

  <bb 249>:
  # DEBUG D#252 => D.53733.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53733
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53733
  # DEBUG this => D#1
  # DEBUG this => &D.53733
  # DEBUG D#249 => &D.53733._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _235
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _235
  # DEBUG this => D#243
  # DEBUG D.89751 => D#244
  operator delete (_235);

  <bb 250>:
  # DEBUG D#253 => &D.53733._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53733 ={v} {CLOBBER};
  resx 31

<L116>:
  pretmp_1358 = &this_20(D)->_input_frame;
  pretmp_1368 = &this_20(D)->_output_frame;
  pretmp_1378 = &this_20(D)->_multi_queue;
  pretmp_1388 = &this_20(D)->_credit_queue;
  pretmp_1398 = &this_20(D)->_output_matched;
  pretmp_1408 = &this_20(D)->_mq_matched;
  goto <bb 314> (<L52>);

<L82>:

<L25>:
  # DEBUG this => &D.53736
  # DEBUG this => &D.53736
  # DEBUG this => &D.53736
  _232 = MEM[(char * *)&D.53736];
  # DEBUG D#1 => &D.53736
  # DEBUG this => D#1
  # DEBUG this => &D.53736
  if (&D.53736.D.11539._M_local_buf != _232)
    goto <bb 254>;
  else
    goto <bb 255>;

  <bb 254>:
  # DEBUG D#252 => D.53736.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53736
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53736
  # DEBUG this => D#1
  # DEBUG this => &D.53736
  # DEBUG D#249 => &D.53736._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _232
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _232
  # DEBUG this => D#243
  # DEBUG D.89768 => D#244
  operator delete (_232);

  <bb 255>:
  # DEBUG D#253 => &D.53736._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53736 ={v} {CLOBBER};
  resx 40

<L117>:
  goto <bb 258> (<L27>);

<L79>:

<L27>:
  # DEBUG this => &D.53737
  # DEBUG this => &D.53737
  # DEBUG this => &D.53737
  _221 = MEM[(char * *)&D.53737];
  # DEBUG D#1 => &D.53737
  # DEBUG this => D#1
  # DEBUG this => &D.53737
  if (&D.53737.D.11539._M_local_buf != _221)
    goto <bb 259>;
  else
    goto <bb 260>;

  <bb 259>:
  # DEBUG D#252 => D.53737.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53737
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53737
  # DEBUG this => D#1
  # DEBUG this => &D.53737
  # DEBUG D#249 => &D.53737._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _221
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _221
  # DEBUG this => D#243
  # DEBUG D.89783 => D#244
  operator delete (_221);

  <bb 260>:
  # DEBUG D#253 => &D.53737._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53737 ={v} {CLOBBER};
  resx 39

<L118>:
  goto <bb 263> (<L29>);

<L78>:

<L29>:
  # DEBUG this => &D.53738
  # DEBUG this => &D.53738
  # DEBUG this => &D.53738
  _223 = MEM[(char * *)&D.53738];
  # DEBUG D#1 => &D.53738
  # DEBUG this => D#1
  # DEBUG this => &D.53738
  if (&D.53738.D.11539._M_local_buf != _223)
    goto <bb 264>;
  else
    goto <bb 265>;

  <bb 264>:
  # DEBUG D#252 => D.53738.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53738
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53738
  # DEBUG this => D#1
  # DEBUG this => &D.53738
  # DEBUG D#249 => &D.53738._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _223
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _223
  # DEBUG this => D#243
  # DEBUG D.89798 => D#244
  operator delete (_223);

  <bb 265>:
  # DEBUG D#253 => &D.53738._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53738 ={v} {CLOBBER};
  resx 38

<L119>:
  goto <bb 268> (<L31>);

<L77>:

<L31>:
  # DEBUG this => &D.53739
  # DEBUG this => &D.53739
  # DEBUG this => &D.53740
  # DEBUG this => &D.53740
  # DEBUG this => &D.53740
  _226 = MEM[(char * *)&D.53740];
  # DEBUG D#1 => &D.53740
  # DEBUG this => D#1
  # DEBUG this => &D.53740
  if (&D.53740.D.11539._M_local_buf != _226)
    goto <bb 269>;
  else
    goto <bb 270>;

  <bb 269>:
  # DEBUG D#252 => D.53740.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53740
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53740
  # DEBUG this => D#1
  # DEBUG this => &D.53740
  # DEBUG D#249 => &D.53740._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _226
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _226
  # DEBUG this => D#243
  # DEBUG D.89815 => D#244
  operator delete (_226);

  <bb 270>:
  # DEBUG D#253 => &D.53740._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53740 ={v} {CLOBBER};
  resx 36

<L120>:
  goto <bb 273> (<L34>);

<L76>:

<L34>:
  # DEBUG this => &D.53741
  # DEBUG this => &D.53741
  # DEBUG this => &D.53741
  _227 = MEM[(char * *)&D.53741];
  # DEBUG D#1 => &D.53741
  # DEBUG this => D#1
  # DEBUG this => &D.53741
  if (&D.53741.D.11539._M_local_buf != _227)
    goto <bb 274>;
  else
    goto <bb 275>;

  <bb 274>:
  # DEBUG D#252 => D.53741.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53741
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53741
  # DEBUG this => D#1
  # DEBUG this => &D.53741
  # DEBUG D#249 => &D.53741._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _227
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _227
  # DEBUG this => D#243
  # DEBUG D.89830 => D#244
  operator delete (_227);

  <bb 275>:
  # DEBUG D#253 => &D.53741._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53741 ={v} {CLOBBER};
  resx 35

<L121>:
  pretmp_1360 = &this_20(D)->_input_frame;
  pretmp_1370 = &this_20(D)->_output_frame;
  pretmp_1380 = &this_20(D)->_multi_queue;
  pretmp_1390 = &this_20(D)->_credit_queue;
  pretmp_1400 = &this_20(D)->_output_matched;
  pretmp_1410 = &this_20(D)->_mq_matched;
  goto <bb 314> (<L52>);

<L37>:
  # DEBUG this => &D.53744
  # DEBUG this => &D.53744
  # DEBUG this => &D.53744
  _230 = MEM[(char * *)&D.53744];
  # DEBUG D#1 => &D.53744
  # DEBUG this => D#1
  # DEBUG this => &D.53744
  if (&D.53744.D.11539._M_local_buf != _230)
    goto <bb 278>;
  else
    goto <bb 279>;

  <bb 278>:
  # DEBUG D#252 => D.53744.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53744
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53744
  # DEBUG this => D#1
  # DEBUG this => &D.53744
  # DEBUG D#249 => &D.53744._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _230
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _230
  # DEBUG this => D#243
  # DEBUG D.89847 => D#244
  operator delete (_230);

  <bb 279>:
  # DEBUG D#253 => &D.53744._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53744 ={v} {CLOBBER};
  resx 62

<L122>:
  pretmp_1072 = &this_20(D)->_input_frame;
  pretmp_1162 = &this_20(D)->_output_frame;
  pretmp_1152 = &this_20(D)->_multi_queue;
  pretmp_723 = &this_20(D)->_credit_queue;
  pretmp_73 = &this_20(D)->_output_matched;
  pretmp_1123 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

<L40>:
  operator delete (_129);
  resx 70

<L123>:
  goto <bb 284> (<L41>);

<L95>:

<L41>:
  # DEBUG this => &D.53752
  # DEBUG this => &D.53752
  # DEBUG this => &D.53752
  _90 = MEM[(char * *)&D.53752];
  # DEBUG D#1 => &D.53752
  # DEBUG this => D#1
  # DEBUG this => &D.53752
  if (&D.53752.D.11539._M_local_buf != _90)
    goto <bb 285>;
  else
    goto <bb 286>;

  <bb 285>:
  # DEBUG D#252 => D.53752.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &D.53752
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &D.53752
  # DEBUG this => D#1
  # DEBUG this => &D.53752
  # DEBUG D#249 => &D.53752._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _90
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _90
  # DEBUG this => D#243
  # DEBUG D.89862 => D#244
  operator delete (_90);

  <bb 286>:
  # DEBUG D#253 => &D.53752._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  D.53752 ={v} {CLOBBER};
  resx 69

<L124>:
  pretmp_642 = &this_20(D)->_input_frame;
  pretmp_644 = &this_20(D)->_output_frame;
  pretmp_1063 = &this_20(D)->_multi_queue;
  pretmp_722 = &this_20(D)->_credit_queue;
  pretmp_645 = &this_20(D)->_output_matched;
  pretmp_1120 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

<L43>:
  # DEBUG this => &D.53755
  # DEBUG D#616 => &D.53755.c
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.53755].D.47197);
  D.53755 ={v} {CLOBBER};
  resx 75

<L125>:
  goto <bb 291> (<L44>);

<L97>:
  pretmp_1190 = &this_20(D)->_input_frame;

  # prephitmp_1191 = PHI <pretmp_1190(290), _139(289)>
<L44>:
  # DEBUG this => &D.53756
  # DEBUG D#607 => &D.53756.D.47197
  # DEBUG this => D#607
  # DEBUG this => &D.53756
  # DEBUG D#72 => &D.53756.D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)&D.53756 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)&D.53756 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)&D.53756 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)&D.53756 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => &D.53756
  # DEBUG D#73 => &D.53756.D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)&D.53756 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)&D.53756 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)&D.53756 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)&D.53756 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => &D.53756
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.53756.D.47197);
  D.53756 ={v} {CLOBBER};
  resx 74

<L126>:
  pretmp_643 = &this_20(D)->_output_frame;
  pretmp_1068 = &this_20(D)->_multi_queue;
  pretmp_55 = &this_20(D)->_credit_queue;
  pretmp_486 = &this_20(D)->_output_matched;
  pretmp_1130 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

<L45>:
  # DEBUG this => &D.53757
  # DEBUG D#616 => &D.53757.c
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.53757].D.47197);
  D.53757 ={v} {CLOBBER};
  resx 79

<L127>:
  goto <bb 296> (<L46>);

<L99>:
  pretmp_1192 = &this_20(D)->_output_frame;

  # prephitmp_1193 = PHI <pretmp_1192(295), _145(294)>
<L46>:
  # DEBUG this => &D.53758
  # DEBUG D#607 => &D.53758.D.47197
  # DEBUG this => D#607
  # DEBUG this => &D.53758
  # DEBUG D#72 => &D.53758.D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)&D.53758 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)&D.53758 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)&D.53758 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)&D.53758 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => &D.53758
  # DEBUG D#73 => &D.53758.D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)&D.53758 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)&D.53758 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)&D.53758 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)&D.53758 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => &D.53758
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.53758.D.47197);
  D.53758 ={v} {CLOBBER};
  resx 78

<L128>:
  pretmp_1157 = &this_20(D)->_multi_queue;
  pretmp_1149 = &this_20(D)->_credit_queue;
  pretmp_1141 = &this_20(D)->_output_matched;
  pretmp_1133 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

<L47>:
  # DEBUG this => &D.53759
  # DEBUG D#616 => &D.53759.c
  # DEBUG this => D#616
  # DEBUG D#607 => &D#616->D.47197
  # DEBUG this => D#607
  # DEBUG this => D#616
  # DEBUG D#72 => &D#616->D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)D#616 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)D#616 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)D#616 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)D#616 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => D#616
  # DEBUG D#73 => &D#616->D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)D#616 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)D#616 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)D#616 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)D#616 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => D#616
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.53759].D.47197);
  D.53759 ={v} {CLOBBER};
  resx 83

<L129>:
  goto <bb 301> (<L48>);

<L101>:
  pretmp_1194 = &this_20(D)->_multi_queue;

  # prephitmp_1195 = PHI <pretmp_1194(300), _151(299)>
<L48>:
  # DEBUG this => &D.53760
  # DEBUG D#607 => &D.53760.D.47197
  # DEBUG this => D#607
  # DEBUG this => &D.53760
  # DEBUG D#72 => &D.53760.D.47197._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#615 => MEM[(const struct iterator &)&D.53760 + 48]._M_cur
  # DEBUG D.76929 => D#615
  # DEBUG D#614 => MEM[(const struct iterator &)&D.53760 + 48]._M_first
  # DEBUG D.76930 => D#614
  # DEBUG D#613 => MEM[(const struct iterator &)&D.53760 + 48]._M_last
  # DEBUG D.76931 => D#613
  # DEBUG D#612 => MEM[(const struct iterator &)&D.53760 + 48]._M_node
  # DEBUG D.76932 => D#612
  # DEBUG this => &D.53760
  # DEBUG D#73 => &D.53760.D.47197._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#611 => MEM[(const struct iterator &)&D.53760 + 16]._M_cur
  # DEBUG D.76925 => D#611
  # DEBUG D#610 => MEM[(const struct iterator &)&D.53760 + 16]._M_first
  # DEBUG D.76926 => D#610
  # DEBUG D#609 => MEM[(const struct iterator &)&D.53760 + 16]._M_last
  # DEBUG D.76927 => D#609
  # DEBUG D#608 => MEM[(const struct iterator &)&D.53760 + 16]._M_node
  # DEBUG D.76928 => D#608
  # DEBUG D#74 => &D.53760
  # DEBUG this => D#74
  # DEBUG __first => D#75
  # DEBUG __last => D#76
  # DEBUG D.76913 => D#77
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.53760.D.47197);
  D.53760 ={v} {CLOBBER};
  resx 82

<L130>:
  pretmp_1151 = &this_20(D)->_credit_queue;
  pretmp_962 = &this_20(D)->_output_matched;
  pretmp_1135 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

<L49>:
  # DEBUG this => &D.53761
  # DEBUG D#657 => &D.53761.c
  # DEBUG this => D#657
  # DEBUG D#648 => &D#657->D.53612
  # DEBUG this => D#648
  # DEBUG this => D#657
  # DEBUG D#79 => &D#657->D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)D#657 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)D#657 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)D#657 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)D#657 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => D#657
  # DEBUG D#80 => &D#657->D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)D#657 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)D#657 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)D#657 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)D#657 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => D#657
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&D.53761].D.53612);
  D.53761 ={v} {CLOBBER};
  resx 87

<L131>:
  goto <bb 306> (<L50>);

<L103>:
  pretmp_1196 = &this_20(D)->_credit_queue;

  # prephitmp_1197 = PHI <pretmp_1196(305), _157(304)>
<L50>:
  # DEBUG this => &D.53762
  # DEBUG D#648 => &D.53762.D.53612
  # DEBUG this => D#648
  # DEBUG this => &D.53762
  # DEBUG D#79 => &D.53762.D.53612._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#79
  # DEBUG D#656 => MEM[(const struct iterator &)&D.53762 + 48]._M_cur
  # DEBUG D.77253 => D#656
  # DEBUG D#655 => MEM[(const struct iterator &)&D.53762 + 48]._M_first
  # DEBUG D.77254 => D#655
  # DEBUG D#654 => MEM[(const struct iterator &)&D.53762 + 48]._M_last
  # DEBUG D.77255 => D#654
  # DEBUG D#653 => MEM[(const struct iterator &)&D.53762 + 48]._M_node
  # DEBUG D.77256 => D#653
  # DEBUG this => &D.53762
  # DEBUG D#80 => &D.53762.D.53612._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#80
  # DEBUG D#652 => MEM[(const struct iterator &)&D.53762 + 16]._M_cur
  # DEBUG D.77249 => D#652
  # DEBUG D#651 => MEM[(const struct iterator &)&D.53762 + 16]._M_first
  # DEBUG D.77250 => D#651
  # DEBUG D#650 => MEM[(const struct iterator &)&D.53762 + 16]._M_last
  # DEBUG D.77251 => D#650
  # DEBUG D#649 => MEM[(const struct iterator &)&D.53762 + 16]._M_node
  # DEBUG D.77252 => D#649
  # DEBUG D#81 => &D.53762
  # DEBUG this => D#81
  # DEBUG __first => D#82
  # DEBUG __last => D#83
  # DEBUG D.77237 => D#84
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&D.53762.D.53612);
  D.53762 ={v} {CLOBBER};
  resx 86

<L132>:
  pretmp_914 = &this_20(D)->_output_matched;
  pretmp_1136 = &this_20(D)->_mq_matched;
  goto <bb 309> (<L51>);

<L89>:
  pretmp_1171 = &this_20(D)->_input_frame;
  pretmp_1165 = &this_20(D)->_output_frame;
  pretmp_1066 = &this_20(D)->_multi_queue;
  pretmp_846 = &this_20(D)->_credit_queue;
  pretmp_694 = &this_20(D)->_output_matched;
  pretmp_1132 = &this_20(D)->_mq_matched;

  # prephitmp_1074 = PHI <_139(307), _139(302), pretmp_1171(308), _139(297), prephitmp_1191(292), pretmp_1075(90), pretmp_1168(98), pretmp_1077(102), pretmp_1167(110), pretmp_1076(119), pretmp_642(287), _139(131), _139(225), _139(143), _139(221), _139(155), pretmp_1072(280), _139(175), _139(181), _139(187), _139(196), _139(200), _139(206), _139(212), pretmp_1166(113)>
  # prephitmp_1158 = PHI <_145(307), _145(302), pretmp_1165(308), prephitmp_1193(297), pretmp_643(292), pretmp_1069(90), pretmp_1164(98), pretmp_1071(102), pretmp_1163(110), pretmp_1070(119), pretmp_644(287), pretmp_1161(131), _145(225), _145(143), _145(221), _145(155), pretmp_1162(280), _145(175), _145(181), _145(187), _145(196), _145(200), _145(206), _145(212), pretmp_1159(113)>
  # prephitmp_957 = PHI <_151(307), prephitmp_1195(302), pretmp_1066(308), pretmp_1157(297), pretmp_1068(292), pretmp_1156(90), pretmp_1067(98), pretmp_949(102), pretmp_1154(110), pretmp_1155(119), pretmp_1063(287), pretmp_1153(131), _151(225), pretmp_1065(143), _151(221), _151(155), pretmp_1152(280), _151(175), _151(181), _151(187), _151(196), _151(200), _151(206), _151(212), pretmp_1064(113)>
  # prephitmp_205 = PHI <prephitmp_1197(307), pretmp_1151(302), pretmp_846(308), pretmp_1149(297), pretmp_55(292), pretmp_1148(90), pretmp_899(98), pretmp_663(102), pretmp_1146(110), pretmp_1147(119), pretmp_722(287), pretmp_1145(131), _157(225), pretmp_733(143), _157(221), pretmp_1144(155), pretmp_723(280), _157(175), _157(181), _157(187), _157(196), _157(200), _157(206), _157(212), pretmp_113(113)>
  # prephitmp_1134 = PHI <pretmp_914(307), pretmp_962(302), pretmp_694(308), pretmp_1141(297), pretmp_486(292), pretmp_1140(90), pretmp_695(98), pretmp_74(102), pretmp_941(110), pretmp_87(119), pretmp_645(287), pretmp_1139(131), _176(225), pretmp_653(143), _176(221), pretmp_1138(155), pretmp_73(280), pretmp_651(175), pretmp_1137(181), pretmp_1102(187), _176(196), _176(200), _176(206), _176(212), pretmp_1103(113)>
  # prephitmp_629 = PHI <pretmp_1136(307), pretmp_1135(302), pretmp_1132(308), pretmp_1133(297), pretmp_1130(292), pretmp_1128(90), pretmp_1131(98), pretmp_1129(102), pretmp_1142(110), pretmp_1143(119), pretmp_1120(287), pretmp_1125(131), _192(225), pretmp_1127(143), _192(221), pretmp_1126(155), pretmp_1123(280), pretmp_1124(175), pretmp_1121(181), pretmp_1115(187), pretmp_1122(196), pretmp_1116(200), pretmp_1119(206), pretmp_631(212), pretmp_630(113)>
<L51>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _210 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _210)
    goto <bb 310>;
  else
    goto <bb 311>;

  <bb 310>:
  # DEBUG D#252 => rf.D.11539._M_allocated_capacity
  # DEBUG D#251 => D#252
  # DEBUG this => &rf
  # DEBUG __size => D#251
  # DEBUG D#250 => D#251
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#249 => &rf._M_dataplus
  # DEBUG D#247 => D#249
  # DEBUG D#248 => D#250 + 1
  # DEBUG __p => _210
  # DEBUG __a => D#247
  # DEBUG __n => D#248
  # DEBUG D#246 => D#248
  # DEBUG D#245 => D#247
  # DEBUG D#243 => D#245
  # DEBUG D#244 => D#246
  # DEBUG __p => _210
  # DEBUG this => D#243
  # DEBUG D.89891 => D#244
  operator delete (_210);

  <bb 311>:
  # DEBUG D#253 => &rf._M_dataplus
  # DEBUG this => D#253
  # DEBUG this => D#253
  # DEBUG this => D#253
  resx 60

<L133>:
  goto <bb 314> (<L52>);

<L72>:
  pretmp_1361 = &this_20(D)->_input_frame;
  pretmp_1371 = &this_20(D)->_output_frame;
  pretmp_1381 = &this_20(D)->_multi_queue;
  pretmp_1391 = &this_20(D)->_credit_queue;
  pretmp_1401 = &this_20(D)->_output_matched;
  pretmp_1411 = &this_20(D)->_mq_matched;

  # prephitmp_1365 = PHI <prephitmp_1074(312), pretmp_1356(247), pretmp_1357(21), pretmp_1358(251), pretmp_1359(14), pretmp_1360(276), pretmp_1361(313), pretmp_1362(239), pretmp_1363(9), pretmp_1364(243)>
  # prephitmp_1375 = PHI <prephitmp_1158(312), pretmp_1366(247), pretmp_1367(21), pretmp_1368(251), pretmp_1369(14), pretmp_1370(276), pretmp_1371(313), pretmp_1372(239), pretmp_1373(9), pretmp_1374(243)>
  # prephitmp_1385 = PHI <prephitmp_957(312), pretmp_1376(247), pretmp_1377(21), pretmp_1378(251), pretmp_1379(14), pretmp_1380(276), pretmp_1381(313), pretmp_1382(239), pretmp_1383(9), pretmp_1384(243)>
  # prephitmp_1395 = PHI <prephitmp_205(312), pretmp_1386(247), pretmp_1387(21), pretmp_1388(251), pretmp_1389(14), pretmp_1390(276), pretmp_1391(313), pretmp_1392(239), pretmp_1393(9), pretmp_1394(243)>
  # prephitmp_1405 = PHI <prephitmp_1134(312), pretmp_1396(247), pretmp_1397(21), pretmp_1398(251), pretmp_1399(14), pretmp_1400(276), pretmp_1401(313), pretmp_1402(239), pretmp_1403(9), pretmp_1404(243)>
  # prephitmp_1415 = PHI <prephitmp_629(312), pretmp_1406(247), pretmp_1407(21), pretmp_1408(251), pretmp_1409(14), pretmp_1410(276), pretmp_1411(313), pretmp_1412(239), pretmp_1413(9), pretmp_1414(243)>
<L52>:
  # DEBUG D#1446 => {CLOBBER}
  # DEBUG rf_iter$_M_node => D#1446
  rf ={v} {CLOBBER};
  # DEBUG D#1457 => &this_20(D)->_mq_matched
  # DEBUG this => D#1457
  # DEBUG D#2042 => &MEM[(struct vector *)this_20(D) + 656B].D.43009
  # DEBUG this => D#2042
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (prephitmp_1415);
  # DEBUG D#352 => &D#2042->_M_impl
  # DEBUG this => D#352
  # DEBUG this => D#352
  # DEBUG this => D#352
  MEM[(struct  &)this_20(D) + 656] ={v} {CLOBBER};
  resx 16

<L54>:
  # DEBUG D#1456 => &this_20(D)->_output_matched
  # DEBUG this => D#1456
  # DEBUG D#2041 => &MEM[(struct vector *)this_20(D) + 616B].D.43009
  # DEBUG this => D#2041
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (prephitmp_1405);
  # DEBUG D#352 => &D#2041->_M_impl
  # DEBUG this => D#352
  # DEBUG this => D#352
  # DEBUG this => D#352
  MEM[(struct  &)this_20(D) + 616] ={v} {CLOBBER};
  resx 15

<L55>:
  # DEBUG D#1455 => &this_20(D)->_mq_age
  # DEBUG this => D#1455
  # DEBUG D#296 => &D#1455->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#1455->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#1455->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#1455->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _241 = MEM[(struct _Vector_base *)this_20(D) + 592B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _241
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _241
  # DEBUG __n => D#290
  if (_241 != 0B)
    goto <bb 317>;
  else
    goto <bb 318>;

  <bb 317>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _241
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _241
  # DEBUG this => D#282
  # DEBUG D.89918 => D#283
  operator delete (_241);

  <bb 318>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_20(D) + 592] ={v} {CLOBBER};
  resx 14

<L56>:
  # DEBUG D#1454 => &this_20(D)->_multi_match
  # DEBUG this => D#1454
  # DEBUG D#296 => &D#1454->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#1454->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#1454->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#1454->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _242 = MEM[(struct _Vector_base *)this_20(D) + 568B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _242
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _242
  # DEBUG __n => D#290
  if (_242 != 0B)
    goto <bb 320>;
  else
    goto <bb 321>;

  <bb 320>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _242
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _242
  # DEBUG this => D#282
  # DEBUG D.89933 => D#283
  operator delete (_242);

  <bb 321>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_20(D) + 568] ={v} {CLOBBER};
  resx 13

<L57>:
  # DEBUG D#1453 => &this_20(D)->_input_mq_match
  # DEBUG this => D#1453
  # DEBUG D#296 => &D#1453->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#1453->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#1453->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#1453->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _243 = MEM[(struct _Vector_base *)this_20(D) + 544B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _243
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _243
  # DEBUG __n => D#290
  if (_243 != 0B)
    goto <bb 323>;
  else
    goto <bb 324>;

  <bb 323>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _243
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _243
  # DEBUG this => D#282
  # DEBUG D.89948 => D#283
  operator delete (_243);

  <bb 324>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_20(D) + 544] ={v} {CLOBBER};
  resx 12

<L58>:
  # DEBUG D#1452 => &this_20(D)->_input_output_match
  # DEBUG this => D#1452
  # DEBUG D#296 => &D#1452->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#1452->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#1452->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#1452->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _244 = MEM[(struct _Vector_base *)this_20(D) + 520B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _244
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _244
  # DEBUG __n => D#290
  if (_244 != 0B)
    goto <bb 326>;
  else
    goto <bb 327>;

  <bb 326>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _244
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _244
  # DEBUG this => D#282
  # DEBUG D.89963 => D#283
  operator delete (_244);

  <bb 327>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_20(D) + 520] ={v} {CLOBBER};
  resx 11

<L59>:
  # DEBUG D#1451 => &this_20(D)->_multi_state
  # DEBUG this => D#1451
  # DEBUG D#433 => &D#1451->D.50324
  # DEBUG this => D#433
  # DEBUG D#436 => D#1451->D.50324._M_impl._M_finish
  # DEBUG D#435 => D#1451->D.50324._M_impl._M_start
  # DEBUG __first => D#435
  # DEBUG __last => D#436
  # DEBUG D.75216 => NULL
  # DEBUG D#192 => D#435
  # DEBUG D#193 => D#436
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  # DEBUG D#434 => &D#1451->D.50324
  # DEBUG this => D#434
  # DEBUG D#432 => D#434->_M_impl._M_end_of_storage
  # DEBUG D#431 => (long int) D#432
  _245 = MEM[(struct _Vector_base *)this_20(D) + 496B]._M_impl._M_start;
  # DEBUG D#430 => (long int) _245
  # DEBUG D#429 => D#431 - D#430
  # DEBUG D#428 => D#429 /[ex] 4
  # DEBUG D#427 => (long unsigned int) D#428
  # DEBUG this => D#434
  # DEBUG __p => _245
  # DEBUG __n => D#427
  if (_245 != 0B)
    goto <bb 329>;
  else
    goto <bb 330>;

  <bb 329>:
  # DEBUG D#425 => &D#434->_M_impl
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#427
  # DEBUG __p => _245
  # DEBUG __a => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#419 => D#421
  # DEBUG D#420 => D#422
  # DEBUG __p => _245
  # DEBUG this => D#419
  # DEBUG D.89978 => D#420
  operator delete (_245);

  <bb 330>:
  # DEBUG D#426 => &D#434->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)this_20(D) + 496] ={v} {CLOBBER};
  resx 10

<L60>:
  # DEBUG D#1450 => &this_20(D)->_input_state
  # DEBUG this => D#1450
  # DEBUG D#433 => &D#1450->D.50324
  # DEBUG this => D#433
  # DEBUG D#436 => D#1450->D.50324._M_impl._M_finish
  # DEBUG D#435 => D#1450->D.50324._M_impl._M_start
  # DEBUG __first => D#435
  # DEBUG __last => D#436
  # DEBUG D.75216 => NULL
  # DEBUG D#192 => D#435
  # DEBUG D#193 => D#436
  # DEBUG __first => D#192
  # DEBUG __last => D#193
  # DEBUG D#191 => D#193
  # DEBUG D#190 => D#192
  # DEBUG D#188 => D#190
  # DEBUG D#189 => D#191
  # DEBUG D.73967 => D#188
  # DEBUG D.73966 => D#189
  # DEBUG D#434 => &D#1450->D.50324
  # DEBUG this => D#434
  # DEBUG D#432 => D#434->_M_impl._M_end_of_storage
  # DEBUG D#431 => (long int) D#432
  _246 = MEM[(struct _Vector_base *)this_20(D) + 472B]._M_impl._M_start;
  # DEBUG D#430 => (long int) _246
  # DEBUG D#429 => D#431 - D#430
  # DEBUG D#428 => D#429 /[ex] 4
  # DEBUG D#427 => (long unsigned int) D#428
  # DEBUG this => D#434
  # DEBUG __p => _246
  # DEBUG __n => D#427
  if (_246 != 0B)
    goto <bb 332>;
  else
    goto <bb 333>;

  <bb 332>:
  # DEBUG D#425 => &D#434->_M_impl
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#427
  # DEBUG __p => _246
  # DEBUG __a => D#423
  # DEBUG __n => D#424
  # DEBUG D#422 => D#424
  # DEBUG D#421 => D#423
  # DEBUG D#419 => D#421
  # DEBUG D#420 => D#422
  # DEBUG __p => _246
  # DEBUG this => D#419
  # DEBUG D.89993 => D#420
  operator delete (_246);

  <bb 333>:
  # DEBUG D#426 => &D#434->_M_impl
  # DEBUG this => D#426
  # DEBUG this => D#426
  # DEBUG this => D#426
  MEM[(struct  &)this_20(D) + 472] ={v} {CLOBBER};
  resx 9

<L61>:
  std::vector<std::queue<Credit*> >::~vector (prephitmp_1395);
  resx 8

<L62>:
  # DEBUG D#1449 => &this_20(D)->_next_queue_cnt
  # DEBUG this => D#1449
  # DEBUG D#296 => &D#1449->D.35782
  # DEBUG this => D#296
  # DEBUG D#299 => D#1449->D.35782._M_impl._M_finish
  # DEBUG D#298 => D#1449->D.35782._M_impl._M_start
  # DEBUG __first => D#298
  # DEBUG __last => D#299
  # DEBUG D.74653 => NULL
  # DEBUG D#150 => D#298
  # DEBUG D#151 => D#299
  # DEBUG __first => D#150
  # DEBUG __last => D#151
  # DEBUG D#149 => D#151
  # DEBUG D#148 => D#150
  # DEBUG D#146 => D#148
  # DEBUG D#147 => D#149
  # DEBUG D.73785 => D#146
  # DEBUG D.73784 => D#147
  # DEBUG D#297 => &D#1449->D.35782
  # DEBUG this => D#297
  # DEBUG D#295 => D#297->_M_impl._M_end_of_storage
  # DEBUG D#294 => (long int) D#295
  _247 = MEM[(struct _Vector_base *)this_20(D) + 424B]._M_impl._M_start;
  # DEBUG D#293 => (long int) _247
  # DEBUG D#292 => D#294 - D#293
  # DEBUG D#291 => D#292 /[ex] 4
  # DEBUG D#290 => (long unsigned int) D#291
  # DEBUG this => D#297
  # DEBUG __p => _247
  # DEBUG __n => D#290
  if (_247 != 0B)
    goto <bb 336>;
  else
    goto <bb 337>;

  <bb 336>:
  # DEBUG D#288 => &D#297->_M_impl
  # DEBUG D#286 => D#288
  # DEBUG D#287 => D#290
  # DEBUG __p => _247
  # DEBUG __a => D#286
  # DEBUG __n => D#287
  # DEBUG D#285 => D#287
  # DEBUG D#284 => D#286
  # DEBUG D#282 => D#284
  # DEBUG D#283 => D#285
  # DEBUG __p => _247
  # DEBUG this => D#282
  # DEBUG D.90008 => D#283
  operator delete (_247);

  <bb 337>:
  # DEBUG D#289 => &D#297->_M_impl
  # DEBUG this => D#289
  # DEBUG this => D#289
  # DEBUG this => D#289
  MEM[(struct  &)this_20(D) + 424] ={v} {CLOBBER};
  resx 7

<L63>:
  std::vector<std::queue<Flit*> >::~vector (prephitmp_1385);
  resx 6

<L64>:
  std::vector<std::queue<Flit*> >::~vector (prephitmp_1375);
  resx 5

<L65>:
  std::vector<std::queue<Flit*> >::~vector (prephitmp_1365);
  resx 4

<L66>:
  # DEBUG D#1448 => &this_20(D)->_mq_route
  # DEBUG this => D#1448
  # DEBUG D#375 => &D#1448->D.48066
  # DEBUG this => D#375
  # DEBUG D#378 => D#1448->D.48066._M_impl._M_finish
  # DEBUG D#377 => D#1448->D.48066._M_impl._M_start
  # DEBUG __first => D#377
  # DEBUG __last => D#378
  # DEBUG D.74999 => NULL
  # DEBUG D#182 => D#377
  # DEBUG D#183 => D#378
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  # DEBUG D#376 => &D#1448->D.48066
  # DEBUG this => D#376
  # DEBUG D#374 => D#376->_M_impl._M_end_of_storage
  # DEBUG D#373 => (long int) D#374
  _250 = MEM[(struct _Vector_base *)this_20(D) + 312B]._M_impl._M_start;
  # DEBUG D#372 => (long int) _250
  # DEBUG D#371 => D#373 - D#372
  # DEBUG D#370 => D#371 /[ex] 8
  # DEBUG D#369 => (long unsigned int) D#370
  # DEBUG this => D#376
  # DEBUG __p => _250
  # DEBUG __n => D#369
  if (_250 != 0B)
    goto <bb 342>;
  else
    goto <bb 343>;

  <bb 342>:
  # DEBUG D#367 => &D#376->_M_impl
  # DEBUG D#365 => D#367
  # DEBUG D#366 => D#369
  # DEBUG __p => _250
  # DEBUG __a => D#365
  # DEBUG __n => D#366
  # DEBUG D#364 => D#366
  # DEBUG D#363 => D#365
  # DEBUG D#361 => D#363
  # DEBUG D#362 => D#364
  # DEBUG __p => _250
  # DEBUG this => D#361
  # DEBUG D.90023 => D#362
  operator delete (_250);

  <bb 343>:
  # DEBUG D#368 => &D#376->_M_impl
  # DEBUG this => D#368
  # DEBUG this => D#368
  # DEBUG this => D#368
  MEM[(struct  &)this_20(D) + 312] ={v} {CLOBBER};
  resx 3

<L67>:
  # DEBUG D#1447 => &this_20(D)->_input_route
  # DEBUG this => D#1447
  # DEBUG D#375 => &D#1447->D.48066
  # DEBUG this => D#375
  # DEBUG D#378 => D#1447->D.48066._M_impl._M_finish
  # DEBUG D#377 => D#1447->D.48066._M_impl._M_start
  # DEBUG __first => D#377
  # DEBUG __last => D#378
  # DEBUG D.74999 => NULL
  # DEBUG D#182 => D#377
  # DEBUG D#183 => D#378
  # DEBUG __first => D#182
  # DEBUG __last => D#183
  # DEBUG D#181 => D#183
  # DEBUG D#180 => D#182
  # DEBUG D#178 => D#180
  # DEBUG D#179 => D#181
  # DEBUG D.73911 => D#178
  # DEBUG D.73910 => D#179
  # DEBUG D#376 => &D#1447->D.48066
  # DEBUG this => D#376
  # DEBUG D#374 => D#376->_M_impl._M_end_of_storage
  # DEBUG D#373 => (long int) D#374
  _257 = MEM[(struct _Vector_base *)this_20(D) + 288B]._M_impl._M_start;
  # DEBUG D#372 => (long int) _257
  # DEBUG D#371 => D#373 - D#372
  # DEBUG D#370 => D#371 /[ex] 8
  # DEBUG D#369 => (long unsigned int) D#370
  # DEBUG this => D#376
  # DEBUG __p => _257
  # DEBUG __n => D#369
  if (_257 != 0B)
    goto <bb 345>;
  else
    goto <bb 346>;

  <bb 345>:
  # DEBUG D#367 => &D#376->_M_impl
  # DEBUG D#365 => D#367
  # DEBUG D#366 => D#369
  # DEBUG __p => _257
  # DEBUG __a => D#365
  # DEBUG __n => D#366
  # DEBUG D#364 => D#366
  # DEBUG D#363 => D#365
  # DEBUG D#361 => D#363
  # DEBUG D#362 => D#364
  # DEBUG __p => _257
  # DEBUG this => D#361
  # DEBUG D.90038 => D#362
  operator delete (_257);

  <bb 346>:
  # DEBUG D#368 => &D#376->_M_impl
  # DEBUG this => D#368
  # DEBUG this => D#368
  # DEBUG this => D#368
  MEM[(struct  &)this_20(D) + 288] ={v} {CLOBBER};
  resx 2

<L68>:
  Router::~Router (_21);
  resx 1

}


