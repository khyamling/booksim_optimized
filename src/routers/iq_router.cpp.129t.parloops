
;; Function virtual void IQRouter::Display(std::ostream&) const (_ZNK8IQRouter7DisplayERSo, funcdef_no=2255, decl_uid=51747, cgraph_uid=700, symbol_order=701)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void IQRouter::Display(std::ostream&) const (const struct IQRouter * const this, struct ostream & os)
{
  int input;
  int _5;
  long unsigned int _6;
  struct Buffer * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;
  struct Buffer * * const _13;
  long unsigned int _14;
  struct Buffer * const & _15;
  int _17;

  <bb 2>:
  # DEBUG input => 0
  # DEBUG input => 0
  _17 = this_4(D)->D.51790._inputs;
  if (_17 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # input_19 = PHI <0(4), input_12(6)>
  # DEBUG input => input_19
  _6 = (long unsigned int) input_19;
  # DEBUG D#77 => &this_4(D)->_buf
  _13 = MEM[(struct Buffer * * *)this_4(D) + 880B];
  # DEBUG D#76 => D#77
  # DEBUG __n => _6
  # DEBUG this => D#76
  _14 = _6 * 8;
  _15 = _13 + _14;
  _7 = *_15;
  _8 = _7->D.55900._vptr.Module;
  _9 = MEM[(int (*__vtbl_ptr_type) () *)_8 + 16B];
  OBJ_TYPE_REF(_9;(const struct Buffer)_7->2) (_7, os_10(D));
  input_12 = input_19 + 1;
  # DEBUG input => input_12
  # DEBUG input => input_12
  _5 = this_4(D)->D.51790._inputs;
  if (_5 <= input_12)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_create_nodes(std::_Deque_base<_Tp, _Alloc>::_Map_pointer, std::_Deque_base<_Tp, _Alloc>::_Map_pointer) [with _Tp = std::pair<int, std::pair<Flit*, std::pair<int, int> > >; _Alloc = std::allocator<std::pair<int, std::pair<Flit*, std::pair<int, int> > > >] (_ZNSt11_Deque_baseISt4pairIiS0_IP4FlitS0_IiiEEESaIS5_EE15_M_create_nodesEPPS5_S9_.isra.302, funcdef_no=4727, decl_uid=100252, cgraph_uid=2413, symbol_order=4497)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_create_nodes(std::_Deque_base<_Tp, _Alloc>::_Map_pointer, std::_Deque_base<_Tp, _Alloc>::_Map_pointer) [with _Tp = std::pair<int, std::pair<Flit*, std::pair<int, int> > >; _Alloc = std::allocator<std::pair<int, std::pair<Flit*, std::pair<int, int> > > >] (struct pair * * __nstart, struct pair * * __nfinish)
{
  struct pair * _3;
  void * _5;
  struct pair * _7;

  <bb 2>:
  # DEBUG this s=> this
  # DEBUG __cur => __nstart_9(D)
  if (__nfinish_2(D) <= __nstart_9(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __nstart_21 = PHI <__nstart_9(D)(4), __nstart_4(7)>
  # DEBUG __cur => __nstart_21
  # DEBUG D#1104 => D#1105
  # DEBUG this => D#1104
  # DEBUG D#1103 => D#1104
  # DEBUG __size => 24
  # DEBUG D#1102 => &D#1103->_M_impl
  # DEBUG D#1101 => D#1102
  # DEBUG __n => NULL
  # DEBUG __a => D#1101
  # DEBUG D#1100 => D#1101
  # DEBUG D#1098 => D#1100
  # DEBUG D#1099 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1098
  # DEBUG D.100276 => D#1099
  # DEBUG D#1097 => D#1098
  # DEBUG D#1096 => D#1097
  # DEBUG this => D#1096
  _3 = operator new (504);

  <bb 6>:
  *__nstart_21 = _3;
  __nstart_4 = __nstart_21 + 8;
  # DEBUG __cur => __nstart_4
  # DEBUG __cur => __nstart_4
  if (__nfinish_2(D) <= __nstart_4)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 5>;

  # __nstart_19 = PHI <__nstart_21(5)>
<L0>:
  _5 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_5);
  # DEBUG D#787 => D#1106
  # DEBUG __nstart => __nstart_9(D)
  # DEBUG __nfinish => __nstart_19
  # DEBUG this => D#787
  # DEBUG __n => __nstart_9(D)
  if (__nstart_9(D) >= __nstart_19)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __cxa_rethrow ();

  <bb 10>:

  <bb 11>:
  # __nstart_24 = PHI <__nstart_9(D)(10), __nstart_8(12)>
  # DEBUG __n => __nstart_24
  _7 = *__nstart_24;
  # DEBUG this => D#785
  # DEBUG __p => _7
  # DEBUG __size => 24
  # DEBUG D#784 => &D#786->_M_impl
  # DEBUG D#782 => D#784
  # DEBUG __p => _7
  # DEBUG __a => D#782
  # DEBUG __n => D#783
  # DEBUG D#781 => D#783
  # DEBUG D#780 => D#782
  # DEBUG D#778 => D#780
  # DEBUG D#779 => D#781
  # DEBUG __p => _7
  # DEBUG this => D#778
  # DEBUG D.100269 => D#779
  operator delete (_7);
  __nstart_8 = __nstart_24 + 8;
  # DEBUG __n => __nstart_8
  # DEBUG __n => __nstart_8
  if (__nstart_8 >= __nstart_19)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 11>;

<L2>:
  __cxa_end_catch ();
  resx 2

}



;; Function _ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _Allocator = std::allocator<Flit*>] (_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.485, funcdef_no=4910, decl_uid=115134, cgraph_uid=2644, symbol_order=6252)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _Allocator = std::allocator<Flit*>] (struct _Deque_iterator & restrict __first, struct _Deque_iterator & restrict __last, struct _Deque_iterator & restrict __result)
{
  struct Flit * * * SR.3183;
  struct Flit * * SR.3182;
  struct Flit * * SR.3181;
  struct Flit * * SR.3180;
  struct Flit * * * SR.3179;
  struct Flit * * SR.3178;
  struct Flit * * SR.3177;
  _Distance __n;
  struct _Deque_iterator D.118872;
  struct _Deque_iterator D.118871;
  struct _Deque_iterator D.118870;
  struct iterator_type D.118856;
  struct iterator_type D.118855;
  struct iterator_type D.118854;
  struct _Deque_iterator D.118832;
  struct iterator_type D.118831;
  struct iterator_type D.118830;
  struct _Deque_iterator D.118812;
  struct _Deque_iterator D.118811;
  struct _Deque_iterator D.118810;
  struct _Deque_iterator D.118800;
  struct _Deque_iterator D.118799;
  struct _Deque_iterator D.118798;
  struct _Deque_iterator D.118785;
  struct _Deque_iterator D.118784;
  struct _Deque_iterator D.118783;
  struct _Deque_iterator D.115148;
  struct _Deque_iterator D.115147;
  struct _Deque_iterator D.115146;
  struct Flit * * _3;
  struct Flit * * _4;
  struct Flit * * _5;
  struct Flit * * * _6;
  struct Flit * * _8;
  struct Flit * * _9;
  struct Flit * * * _11;
  struct Flit * * _13;
  struct Flit * * _15;
  struct Flit * * * _16;
  long int _106;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _114;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _121;
  long int _123;
  long int _124;
  long int _125;
  struct Flit * _130;
  struct Flit * * _132;
  struct Flit * * _135;
  struct Flit * * * _143;
  struct Flit * * _144;
  struct Flit * * _145;
  struct Flit * * * _147;
  struct Flit * * _148;
  struct Flit * * _149;

  <bb 2>:
  # DEBUG __alloc s=> __alloc
  # DEBUG D#2151 s=> __alloc
  # DEBUG this => &D.115148
  # DEBUG __x => __result_2(D)
  _3 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  # DEBUG this => &D.115147
  # DEBUG __x => __last_7(D)
  _8 = MEM[(const struct iterator &)__last_7(D)]._M_cur;
  _9 = MEM[(const struct iterator &)__last_7(D)]._M_first;
  _11 = MEM[(const struct iterator &)__last_7(D)]._M_node;
  # DEBUG this => &D.115146
  # DEBUG __x => __first_12(D)
  _13 = MEM[(const struct iterator &)__first_12(D)]._M_cur;
  _15 = MEM[(const struct iterator &)__first_12(D)]._M_last;
  _16 = MEM[(const struct iterator &)__first_12(D)]._M_node;
  # DEBUG D#2150 => D#2151
  # DEBUG __first => &D.115146
  # DEBUG __last => &D.115147
  # DEBUG __result => &D.115148
  # DEBUG D.118776 => D#2150
  # DEBUG this => &D.118783
  # DEBUG __x => &D.115148
  # DEBUG this => &D.118784
  # DEBUG __x => &D.115147
  # DEBUG this => &D.118785
  # DEBUG __x => &D.115146
  # DEBUG __first => &D.118785
  # DEBUG __last => &D.118784
  # DEBUG __result => &D.118783
  # DEBUG __assignable => 1
  # DEBUG this => &D.118800
  # DEBUG __x => &D.118783
  # DEBUG this => &D.118799
  # DEBUG __x => &D.118784
  # DEBUG this => &D.118798
  # DEBUG __x => &D.118785
  # DEBUG __first => &D.118798
  # DEBUG __last => &D.118799
  # DEBUG __result => &D.118800
  # DEBUG this => &D.118812
  # DEBUG __x => &D.118800
  # DEBUG this => &D.118811
  # DEBUG __x => &D.118799
  # DEBUG this => &D.118810
  # DEBUG __x => &D.118798
  # DEBUG __first => &D.118810
  # DEBUG __last => &D.118811
  # DEBUG __result => &D.118812
  # DEBUG this => &D.118832
  # DEBUG __x => &D.118812
  # DEBUG this => NULL
  # DEBUG __x => &D.118811
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.118831
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.118810
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.118830
  # DEBUG __x => NULL
  # DEBUG __first => &D.118830
  # DEBUG __last => &D.118831
  # DEBUG __result => &D.118832
  # DEBUG this => NULL
  # DEBUG __x => &D.118832
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.118856
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.118831
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.118855
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.118830
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.118854
  # DEBUG __x => NULL
  # DEBUG __first => &D.118854
  # DEBUG __last => &D.118855
  # DEBUG __result => &D.118856
  # DEBUG __simple => 0
  # DEBUG this => &D.118872
  # DEBUG __x => &D.118856
  # DEBUG this => &D.118871
  # DEBUG __x => &D.118855
  # DEBUG this => &D.118870
  # DEBUG __x => &D.118854
  # DEBUG __first => &D.118870
  # DEBUG __last => &D.118871
  # DEBUG __result => &D.118872
  # DEBUG __x => &D.118871
  # DEBUG __y => &D.118870
  # DEBUG __size => 8
  _106 = (long int) _11;
  _108 = (long int) _16;
  _109 = _106 - _108;
  _110 = _109 /[ex] 8;
  _111 = _110 + -1;
  _112 = _111 * 64;
  _114 = (long int) _8;
  _116 = (long int) _9;
  _117 = _114 - _116;
  _118 = _117 /[ex] 8;
  _119 = _112 + _118;
  _121 = (long int) _15;
  _123 = (long int) _13;
  _124 = _121 - _123;
  _125 = _124 /[ex] 8;
  __n_126 = _119 + _125;
  # DEBUG __n => __n_126
  # DEBUG __n => __n_126
  if (__n_126 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_20 = PHI <__n_126(3), __n_137(9)>
  # SR.3177_235 = PHI <_13(3), SR.3177_234(9)>
  # SR.3178_233 = PHI <_15(3), SR.3178_232(9)>
  # SR.3179_231 = PHI <_16(3), SR.3179_230(9)>
  # SR.3180_229 = PHI <_3(3), SR.3180_227(9)>
  # SR.3181_224 = PHI <_4(3), SR.3181_223(9)>
  # SR.3182_216 = PHI <_5(3), SR.3182_215(9)>
  # SR.3183_213 = PHI <_6(3), SR.3183_150(9)>
  # DEBUG __n => __n_20
  # DEBUG D#308 => &D.118872
  # DEBUG this => D#308
  # DEBUG D#308 => &D.118870
  # DEBUG this => D#308
  _130 = *SR.3177_235;
  *SR.3180_229 = _130;
  # DEBUG this => &D.118870
  _132 = SR.3177_235 + 8;
  if (_132 == SR.3178_233)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.118870
  _143 = SR.3179_231 + 8;
  # DEBUG this => &D.118870
  # DEBUG __new_node => _143
  _144 = MEM[(struct Flit * * *)SR.3179_231 + 8B];
  # DEBUG __size => 8
  _145 = _144 + 512;

  <bb 6>:
  # SR.3177_234 = PHI <_132(4), _144(5)>
  # SR.3178_232 = PHI <SR.3178_233(4), _145(5)>
  # SR.3179_230 = PHI <SR.3179_231(4), _143(5)>
  # DEBUG this => &D.118872
  _135 = SR.3180_229 + 8;
  if (_135 == SR.3182_216)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.118872
  _147 = SR.3183_213 + 8;
  # DEBUG this => &D.118872
  # DEBUG __new_node => _147
  _148 = MEM[(struct Flit * * *)SR.3183_213 + 8B];
  # DEBUG __size => 8
  _149 = _148 + 512;

  <bb 8>:
  # SR.3180_227 = PHI <_135(6), _148(7)>
  # SR.3181_223 = PHI <SR.3181_224(6), _148(7)>
  # SR.3182_215 = PHI <SR.3182_216(6), _149(7)>
  # SR.3183_150 = PHI <SR.3183_213(6), _147(7)>
  __n_137 = __n_20 + -1;
  # DEBUG __n => __n_137
  # DEBUG __n => __n_137
  if (__n_137 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.3183_19 = PHI <SR.3183_150(8)>
  # SR.3182_18 = PHI <SR.3182_215(8)>
  # SR.3181_23 = PHI <SR.3181_223(8)>
  # SR.3180_10 = PHI <SR.3180_227(8)>

  <bb 12>:

  <bb 11>:
  # SR.3180_226 = PHI <SR.3180_10(12), _3(2)>
  # SR.3181_221 = PHI <SR.3181_23(12), _4(2)>
  # SR.3182_214 = PHI <SR.3182_18(12), _5(2)>
  # SR.3183_127 = PHI <SR.3183_19(12), _6(2)>
  # DEBUG this => _1(D)
  # DEBUG __x => &D.118872
  _1(D)->_M_cur = SR.3180_226;
  _1(D)->_M_first = SR.3181_221;
  _1(D)->_M_last = SR.3182_214;
  _1(D)->_M_node = SR.3183_127;
  D.118870 ={v} {CLOBBER};
  D.118871 ={v} {CLOBBER};
  D.118872 ={v} {CLOBBER};
  D.118854 ={v} {CLOBBER};
  D.118855 ={v} {CLOBBER};
  D.118856 ={v} {CLOBBER};
  D.118830 ={v} {CLOBBER};
  D.118831 ={v} {CLOBBER};
  D.118832 ={v} {CLOBBER};
  D.118810 ={v} {CLOBBER};
  D.118811 ={v} {CLOBBER};
  D.118812 ={v} {CLOBBER};
  D.118798 ={v} {CLOBBER};
  D.118799 ={v} {CLOBBER};
  D.118800 ={v} {CLOBBER};
  D.118785 ={v} {CLOBBER};
  D.118784 ={v} {CLOBBER};
  D.118783 ={v} {CLOBBER};
  D.115146 ={v} {CLOBBER};
  D.115147 ={v} {CLOBBER};
  D.115148 ={v} {CLOBBER};
  return _1(D);

}



;; Function _ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _Allocator = std::allocator<Credit*>] (_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.488, funcdef_no=4913, decl_uid=115871, cgraph_uid=2657, symbol_order=6367)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _Allocator = std::allocator<Credit*>] (struct _Deque_iterator & restrict __first, struct _Deque_iterator & restrict __last, struct _Deque_iterator & restrict __result)
{
  struct Credit * * * SR.3200;
  struct Credit * * SR.3199;
  struct Credit * * SR.3198;
  struct Credit * * SR.3197;
  struct Credit * * * SR.3196;
  struct Credit * * SR.3195;
  struct Credit * * SR.3194;
  _Distance __n;
  struct _Deque_iterator D.119020;
  struct _Deque_iterator D.119019;
  struct _Deque_iterator D.119018;
  struct iterator_type D.119004;
  struct iterator_type D.119003;
  struct iterator_type D.119002;
  struct _Deque_iterator D.118980;
  struct iterator_type D.118979;
  struct iterator_type D.118978;
  struct _Deque_iterator D.118960;
  struct _Deque_iterator D.118959;
  struct _Deque_iterator D.118958;
  struct _Deque_iterator D.118948;
  struct _Deque_iterator D.118947;
  struct _Deque_iterator D.118946;
  struct _Deque_iterator D.118933;
  struct _Deque_iterator D.118932;
  struct _Deque_iterator D.118931;
  struct _Deque_iterator D.115885;
  struct _Deque_iterator D.115884;
  struct _Deque_iterator D.115883;
  struct Credit * * _3;
  struct Credit * * _4;
  struct Credit * * _5;
  struct Credit * * * _6;
  struct Credit * * _8;
  struct Credit * * _9;
  struct Credit * * * _11;
  struct Credit * * _13;
  struct Credit * * _15;
  struct Credit * * * _16;
  long int _106;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _114;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _121;
  long int _123;
  long int _124;
  long int _125;
  struct Credit * _130;
  struct Credit * * _132;
  struct Credit * * _135;
  struct Credit * * * _143;
  struct Credit * * _144;
  struct Credit * * _145;
  struct Credit * * * _147;
  struct Credit * * _148;
  struct Credit * * _149;

  <bb 2>:
  # DEBUG __alloc s=> __alloc
  # DEBUG D#2191 s=> __alloc
  # DEBUG this => &D.115885
  # DEBUG __x => __result_2(D)
  _3 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  # DEBUG this => &D.115884
  # DEBUG __x => __last_7(D)
  _8 = MEM[(const struct iterator &)__last_7(D)]._M_cur;
  _9 = MEM[(const struct iterator &)__last_7(D)]._M_first;
  _11 = MEM[(const struct iterator &)__last_7(D)]._M_node;
  # DEBUG this => &D.115883
  # DEBUG __x => __first_12(D)
  _13 = MEM[(const struct iterator &)__first_12(D)]._M_cur;
  _15 = MEM[(const struct iterator &)__first_12(D)]._M_last;
  _16 = MEM[(const struct iterator &)__first_12(D)]._M_node;
  # DEBUG D#2190 => D#2191
  # DEBUG __first => &D.115883
  # DEBUG __last => &D.115884
  # DEBUG __result => &D.115885
  # DEBUG D.118924 => D#2190
  # DEBUG this => &D.118931
  # DEBUG __x => &D.115885
  # DEBUG this => &D.118932
  # DEBUG __x => &D.115884
  # DEBUG this => &D.118933
  # DEBUG __x => &D.115883
  # DEBUG __first => &D.118933
  # DEBUG __last => &D.118932
  # DEBUG __result => &D.118931
  # DEBUG __assignable => 1
  # DEBUG this => &D.118948
  # DEBUG __x => &D.118931
  # DEBUG this => &D.118947
  # DEBUG __x => &D.118932
  # DEBUG this => &D.118946
  # DEBUG __x => &D.118933
  # DEBUG __first => &D.118946
  # DEBUG __last => &D.118947
  # DEBUG __result => &D.118948
  # DEBUG this => &D.118960
  # DEBUG __x => &D.118948
  # DEBUG this => &D.118959
  # DEBUG __x => &D.118947
  # DEBUG this => &D.118958
  # DEBUG __x => &D.118946
  # DEBUG __first => &D.118958
  # DEBUG __last => &D.118959
  # DEBUG __result => &D.118960
  # DEBUG this => &D.118980
  # DEBUG __x => &D.118960
  # DEBUG this => NULL
  # DEBUG __x => &D.118959
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.118979
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.118958
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.118978
  # DEBUG __x => NULL
  # DEBUG __first => &D.118978
  # DEBUG __last => &D.118979
  # DEBUG __result => &D.118980
  # DEBUG this => NULL
  # DEBUG __x => &D.118980
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.119004
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.118979
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.119003
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.118978
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.119002
  # DEBUG __x => NULL
  # DEBUG __first => &D.119002
  # DEBUG __last => &D.119003
  # DEBUG __result => &D.119004
  # DEBUG __simple => 0
  # DEBUG this => &D.119020
  # DEBUG __x => &D.119004
  # DEBUG this => &D.119019
  # DEBUG __x => &D.119003
  # DEBUG this => &D.119018
  # DEBUG __x => &D.119002
  # DEBUG __first => &D.119018
  # DEBUG __last => &D.119019
  # DEBUG __result => &D.119020
  # DEBUG __x => &D.119019
  # DEBUG __y => &D.119018
  # DEBUG __size => 8
  _106 = (long int) _11;
  _108 = (long int) _16;
  _109 = _106 - _108;
  _110 = _109 /[ex] 8;
  _111 = _110 + -1;
  _112 = _111 * 64;
  _114 = (long int) _8;
  _116 = (long int) _9;
  _117 = _114 - _116;
  _118 = _117 /[ex] 8;
  _119 = _112 + _118;
  _121 = (long int) _15;
  _123 = (long int) _13;
  _124 = _121 - _123;
  _125 = _124 /[ex] 8;
  __n_126 = _119 + _125;
  # DEBUG __n => __n_126
  # DEBUG __n => __n_126
  if (__n_126 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_20 = PHI <__n_126(3), __n_137(9)>
  # SR.3194_235 = PHI <_13(3), SR.3194_234(9)>
  # SR.3195_233 = PHI <_15(3), SR.3195_232(9)>
  # SR.3196_231 = PHI <_16(3), SR.3196_230(9)>
  # SR.3197_229 = PHI <_3(3), SR.3197_227(9)>
  # SR.3198_224 = PHI <_4(3), SR.3198_223(9)>
  # SR.3199_216 = PHI <_5(3), SR.3199_215(9)>
  # SR.3200_213 = PHI <_6(3), SR.3200_150(9)>
  # DEBUG __n => __n_20
  # DEBUG D#318 => &D.119020
  # DEBUG this => D#318
  # DEBUG D#318 => &D.119018
  # DEBUG this => D#318
  _130 = *SR.3194_235;
  *SR.3197_229 = _130;
  # DEBUG this => &D.119018
  _132 = SR.3194_235 + 8;
  if (_132 == SR.3195_233)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.119018
  _143 = SR.3196_231 + 8;
  # DEBUG this => &D.119018
  # DEBUG __new_node => _143
  _144 = MEM[(struct Credit * * *)SR.3196_231 + 8B];
  # DEBUG __size => 8
  _145 = _144 + 512;

  <bb 6>:
  # SR.3194_234 = PHI <_132(4), _144(5)>
  # SR.3195_232 = PHI <SR.3195_233(4), _145(5)>
  # SR.3196_230 = PHI <SR.3196_231(4), _143(5)>
  # DEBUG this => &D.119020
  _135 = SR.3197_229 + 8;
  if (_135 == SR.3199_216)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.119020
  _147 = SR.3200_213 + 8;
  # DEBUG this => &D.119020
  # DEBUG __new_node => _147
  _148 = MEM[(struct Credit * * *)SR.3200_213 + 8B];
  # DEBUG __size => 8
  _149 = _148 + 512;

  <bb 8>:
  # SR.3197_227 = PHI <_135(6), _148(7)>
  # SR.3198_223 = PHI <SR.3198_224(6), _148(7)>
  # SR.3199_215 = PHI <SR.3199_216(6), _149(7)>
  # SR.3200_150 = PHI <SR.3200_213(6), _147(7)>
  __n_137 = __n_20 + -1;
  # DEBUG __n => __n_137
  # DEBUG __n => __n_137
  if (__n_137 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.3200_19 = PHI <SR.3200_150(8)>
  # SR.3199_18 = PHI <SR.3199_215(8)>
  # SR.3198_23 = PHI <SR.3198_223(8)>
  # SR.3197_10 = PHI <SR.3197_227(8)>

  <bb 12>:

  <bb 11>:
  # SR.3197_226 = PHI <SR.3197_10(12), _3(2)>
  # SR.3198_221 = PHI <SR.3198_23(12), _4(2)>
  # SR.3199_214 = PHI <SR.3199_18(12), _5(2)>
  # SR.3200_127 = PHI <SR.3200_19(12), _6(2)>
  # DEBUG this => _1(D)
  # DEBUG __x => &D.119020
  _1(D)->_M_cur = SR.3197_226;
  _1(D)->_M_first = SR.3198_221;
  _1(D)->_M_last = SR.3199_214;
  _1(D)->_M_node = SR.3200_127;
  D.119018 ={v} {CLOBBER};
  D.119019 ={v} {CLOBBER};
  D.119020 ={v} {CLOBBER};
  D.119002 ={v} {CLOBBER};
  D.119003 ={v} {CLOBBER};
  D.119004 ={v} {CLOBBER};
  D.118978 ={v} {CLOBBER};
  D.118979 ={v} {CLOBBER};
  D.118980 ={v} {CLOBBER};
  D.118958 ={v} {CLOBBER};
  D.118959 ={v} {CLOBBER};
  D.118960 ={v} {CLOBBER};
  D.118946 ={v} {CLOBBER};
  D.118947 ={v} {CLOBBER};
  D.118948 ={v} {CLOBBER};
  D.118933 ={v} {CLOBBER};
  D.118932 ={v} {CLOBBER};
  D.118931 ={v} {CLOBBER};
  D.115883 ={v} {CLOBBER};
  D.115884 ={v} {CLOBBER};
  D.115885 ={v} {CLOBBER};
  return _1(D);

}



;; Function virtual std::vector<int> IQRouter::UsedCredits() const (_ZNK8IQRouter11UsedCreditsEv, funcdef_no=2258, decl_uid=51755, cgraph_uid=703, symbol_order=704)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual std::vector<int> IQRouter::UsedCredits() const (const struct IQRouter * const this)
{
  int D.119117;
  static const char __PRETTY_FUNCTION__[41] = "int BufferState::OccupancyFor(int) const";
  int * D.119112;
  int * __first;
  size_type __n;
  int v;
  int o;
  const value_type D.65825;
  long unsigned int _6;
  int _9;
  int _10;
  int _11;
  long unsigned int _14;
  int & _16;
  struct BufferState * const & _19;
  int _21;
  long unsigned int _22;
  const int pretmp_24;
  const int prephitmp_25;
  struct BufferState * * const _31;
  int & _34;
  long unsigned int _35;
  int _39;
  int * _44;
  int _46;
  long unsigned int _47;
  long unsigned int _49;
  const int & _50;
  int _51;
  sizetype _60;
  sizetype _61;
  long unsigned int _67;
  long unsigned int _70;
  long unsigned int _71;
  struct BufferState * _72;
  int _73;
  long unsigned int _79;
  long unsigned int _82;
  int & _84;
  int * _90;
  int * const pretmp_93;
  const int pretmp_95;
  long unsigned int _96;
  int * _97;

  <bb 2>:
  # DEBUG this => &D.65827
  # DEBUG this => &D.65827
  _9 = this_8(D)->D.51790._outputs;
  _10 = this_8(D)->_vcs;
  _11 = _9 * _10;
  __n_12 = (size_type) _11;
  # DEBUG this => result_13(D)
  # DEBUG __n => __n_12
  # DEBUG __value => &D.65825
  # DEBUG __a => &D.65827
  # DEBUG D#1413 => &result_13(D)->D.35433
  # DEBUG this => D#1413
  # DEBUG __n => __n_12
  # DEBUG __a => &D.65827
  # DEBUG D#967 => &D#1413->_M_impl
  # DEBUG this => D#967
  # DEBUG __a => &D.65827
  # DEBUG this => D#967
  # DEBUG __a => &D.65827
  # DEBUG this => D#967
  # DEBUG D.96655 => &D.65827
  MEM[(struct _Vector_impl *)result_13(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)result_13(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)result_13(D)]._M_end_of_storage = 0B;
  # DEBUG this => D#1413
  # DEBUG __n => __n_12
  # DEBUG D#965 => D#1413
  # DEBUG __n => __n_12
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (__n_12 != 0)
    goto <bb 3>;
  else
    goto <bb 22>;

  <bb 3>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => __n_12
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => __n_12
  # DEBUG this => D#959
  # DEBUG D.119110 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (__n_12 > 4611686018427387903)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  std::__throw_bad_alloc ();

  <bb 5>:
  _14 = __n_12 * 4;
  _44 = operator new (_14);
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_start = _44;
  _90 = _44 + _14;
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_end_of_storage = _90;
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65825
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119085 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __niter => __n_12
  # DEBUG __first => _44
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65825
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119085 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __first => _44
  _61 = (sizetype) _11;
  _60 = _61 * 4;
  __builtin_memset (_44, 0, _60);

  <bb 8>:
  _82 = (long unsigned int) _11;
  _79 = _82 * 4;
  __first_80 = _44 + _79;
  pretmp_24 = this_8(D)->D.51790._outputs;

  <bb 9>:
  # __first_87 = PHI <__first_80(8), 0B(22)>
  # __first_53 = PHI <_44(8), 0B(22)>
  # prephitmp_25 = PHI <pretmp_24(8), _9(22)>
  MEM[(int * *)result_13(D) + 8B] = __first_87;
  # DEBUG this => &D.65827
  # DEBUG this => &D.65827
  # DEBUG o => 0
  # DEBUG o => 0
  if (prephitmp_25 <= 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:

  <bb 23>:
  return result_13(D);

  <bb 11>:
  pretmp_95 = this_8(D)->_vcs;

  <bb 12>:
  # o_77 = PHI <0(11), o_30(14)>
  # DEBUG o => o_77
  # DEBUG v => 0
  if (pretmp_95 <= 0)
    goto <bb 13>;
  else
    goto <bb 15>;

  <bb 13>:
  o_30 = o_77 + 1;
  # DEBUG o => o_30
  # DEBUG o => o_30
  if (prephitmp_25 <= o_30)
    goto <bb 10>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 12>;

  <bb 15>:
  _39 = o_77 * pretmp_95;
  _71 = (long unsigned int) _39;
  # DEBUG D#55 => result_13(D)
  # DEBUG __n => _71
  # DEBUG this => D#55
  _70 = _71 * 4;
  _16 = __first_53 + _70;
  _35 = (long unsigned int) o_77;
  # DEBUG D#1414 => &this_8(D)->_next_buf
  _31 = MEM[(struct BufferState * * *)this_8(D) + 904B];
  # DEBUG D#83 => D#1414
  # DEBUG __n => _35
  # DEBUG this => D#83
  _67 = _35 * 8;
  _19 = _31 + _67;
  _72 = *_19;
  # DEBUG this => _72
  # DEBUG vc => 0
  _73 = MEM[(const struct BufferState *)_72]._vcs;
  if (_73 <= 0)
    goto <bb 16>;
  else
    goto <bb 20>;

  <bb 16>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "./buffer_state.hpp", 225, &__PRETTY_FUNCTION__);

  <bb 17>:
  _21 = v_29 + _39;
  _22 = (long unsigned int) _21;
  # DEBUG D#55 => result_13(D)
  # DEBUG __n => _22
  # DEBUG this => D#55
  _6 = _22 * 4;
  _34 = __first_53 + _6;
  # DEBUG D#1414 => &this_8(D)->_next_buf
  # DEBUG D#83 => D#1414
  # DEBUG __n => _35
  # DEBUG this => D#83
  # DEBUG this => _72
  # DEBUG vc => v_29
  if (v_29 < 0)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 18>:
  _46 = MEM[(const struct BufferState *)_72]._vcs;
  if (v_29 >= _46)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 21>;

  <bb 20>:
  pretmp_93 = MEM[(int * *)_72 + 112B];

  <bb 21>:
  # v_78 = PHI <0(20), v_29(19)>
  # _84 = PHI <_16(20), _34(19)>
  # DEBUG v => v_78
  # DEBUG D#55 => result_13(D)
  # DEBUG __n => _71
  # DEBUG this => D#55
  # DEBUG D#1414 => &this_8(D)->_next_buf
  # DEBUG D#83 => D#1414
  # DEBUG __n => _35
  # DEBUG this => D#83
  # DEBUG this => _72
  # DEBUG vc => v_78
  _47 = (long unsigned int) v_78;
  # DEBUG D#52 => &MEM[(const struct BufferState *)_72]._vc_occupancy
  # DEBUG D#48 => D#52
  # DEBUG __n => _47
  # DEBUG this => D#48
  _49 = _47 * 4;
  _50 = pretmp_93 + _49;
  _51 = *_50;
  *_84 = _51;
  v_29 = v_78 + 1;
  # DEBUG v => v_29
  # DEBUG v => v_29
  if (v_29 >= pretmp_95)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 22>:
  _96 = __n_12 * 4;
  _97 = (int *) _96;
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_end_of_storage = _97;
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65825
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119085 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __niter => __n_12
  # DEBUG __first => 0B
  goto <bb 9>;

}



;; Function virtual std::vector<int> IQRouter::MaxCredits() const (_ZNK8IQRouter10MaxCreditsEv, funcdef_no=2260, decl_uid=51759, cgraph_uid=705, symbol_order=706)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual std::vector<int> IQRouter::MaxCredits() const (const struct IQRouter * const this)
{
  int * D.119192;
  int * __first;
  size_type __n;
  int v;
  int o;
  const value_type D.65855;
  int _6;
  int _9;
  int _10;
  int _11;
  long unsigned int _14;
  const int pretmp_15;
  int _18;
  int _20;
  int _21;
  long unsigned int _22;
  int (*__vtbl_ptr_type) () _23;
  int (*__vtbl_ptr_type) () * _25;
  struct BufferState * _26;
  int * _31;
  struct BufferPolicy * const _32;
  int * _33;
  struct BufferState * * const _34;
  struct BufferState * const & _36;
  long unsigned int _37;
  int & _38;
  int * _46;
  int * _51;
  const int prephitmp_60;
  int _66;
  int _73;
  long unsigned int _84;
  int * _85;
  const int prephitmp_87;
  sizetype _95;
  sizetype _96;
  long unsigned int _97;
  long unsigned int _98;
  const int prephitmp_99;
  long unsigned int pretmp_100;
  long unsigned int pretmp_101;
  const int pretmp_104;
  const int prephitmp_105;
  const int pretmp_106;
  const int prephitmp_107;

  <bb 2>:
  # DEBUG this => &D.65857
  # DEBUG this => &D.65857
  _9 = this_8(D)->D.51790._outputs;
  _10 = this_8(D)->_vcs;
  _11 = _9 * _10;
  __n_12 = (size_type) _11;
  # DEBUG this => result_13(D)
  # DEBUG __n => __n_12
  # DEBUG __value => &D.65855
  # DEBUG __a => &D.65857
  # DEBUG D#1413 => &result_13(D)->D.35433
  # DEBUG this => D#1413
  # DEBUG __n => __n_12
  # DEBUG __a => &D.65857
  # DEBUG D#967 => &D#1413->_M_impl
  # DEBUG this => D#967
  # DEBUG __a => &D.65857
  # DEBUG this => D#967
  # DEBUG __a => &D.65857
  # DEBUG this => D#967
  # DEBUG D.96655 => &D.65857
  MEM[(struct _Vector_impl *)result_13(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)result_13(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)result_13(D)]._M_end_of_storage = 0B;
  # DEBUG this => D#1413
  # DEBUG __n => __n_12
  # DEBUG D#965 => D#1413
  # DEBUG __n => __n_12
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (__n_12 != 0)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 3>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => __n_12
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => __n_12
  # DEBUG this => D#959
  # DEBUG D.119190 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (__n_12 > 4611686018427387903)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  std::__throw_bad_alloc ();

  <bb 5>:
  _14 = __n_12 * 4;
  _51 = operator new (_14);
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_start = _51;
  _46 = _51 + _14;
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_end_of_storage = _46;
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65855
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119165 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __niter => __n_12
  # DEBUG __first => _51
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65855
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119165 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __first => _51
  _96 = (sizetype) _11;
  _95 = _96 * 4;
  __builtin_memset (_51, 0, _95);

  <bb 8>:
  _98 = (long unsigned int) _11;
  _97 = _98 * 4;
  __first_102 = _51 + _97;
  pretmp_15 = this_8(D)->D.51790._outputs;

  <bb 9>:
  # __first_76 = PHI <__first_102(8), 0B(23)>
  # prephitmp_60 = PHI <pretmp_15(8), _9(23)>
  MEM[(int * *)result_13(D) + 8B] = __first_76;
  # DEBUG this => &D.65857
  # DEBUG this => &D.65857
  # DEBUG o => 0
  # DEBUG o => 0
  if (prephitmp_60 <= 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:

  <bb 24>:
  return result_13(D);

  <bb 11>:
  pretmp_104 = this_8(D)->_vcs;

  <bb 12>:
  # o_40 = PHI <0(11), o_30(19)>
  # prephitmp_87 = PHI <prephitmp_60(11), prephitmp_107(19)>
  # prephitmp_105 = PHI <pretmp_104(11), prephitmp_99(19)>
  # DEBUG o => o_40
  # DEBUG v => 0
  if (prephitmp_105 <= 0)
    goto <bb 18>;
  else
    goto <bb 13>;

  <bb 13>:
  pretmp_100 = (long unsigned int) o_40;
  pretmp_101 = pretmp_100 * 8;

  <bb 14>:
  # v_39 = PHI <0(13), v_28(16)>
  # _73 = PHI <prephitmp_105(13), _18(16)>
  # DEBUG v => v_39
  _20 = o_40 * _73;
  _21 = _20 + v_39;
  _22 = (long unsigned int) _21;
  _33 = MEM[(int * *)result_13(D)];
  # DEBUG D#55 => result_13(D)
  # DEBUG __n => _22
  # DEBUG this => D#55
  _37 = _22 * 4;
  _38 = _33 + _37;
  # DEBUG D#1416 => &this_8(D)->_next_buf
  _34 = MEM[(struct BufferState * * *)this_8(D) + 904B];
  # DEBUG D#83 => D#1416
  # DEBUG __n => (long unsigned int) o_40
  # DEBUG this => D#83
  _36 = _34 + pretmp_101;
  _26 = *_36;
  _32 = MEM[(struct BufferPolicy * *)_26 + 144B];
  # DEBUG D#34 => _26
  # DEBUG vc => v_39
  # DEBUG this => D#34
  _25 = _32->D.55980._vptr.Module;
  _23 = MEM[(int (*__vtbl_ptr_type) () *)_25 + 72B];
  _6 = OBJ_TYPE_REF(_23;(const struct BufferPolicy)_32->9) (_32, v_39);

  <bb 15>:
  *_38 = _6;
  v_28 = v_39 + 1;
  # DEBUG v => v_28
  # DEBUG v => v_28
  _18 = this_8(D)->_vcs;
  if (_18 <= v_28)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 14>;

  <bb 17>:
  # _66 = PHI <_18(15)>
  pretmp_106 = this_8(D)->D.51790._outputs;

  <bb 18>:
  # prephitmp_99 = PHI <_66(17), prephitmp_105(12)>
  # prephitmp_107 = PHI <pretmp_106(17), prephitmp_87(12)>
  o_30 = o_40 + 1;
  # DEBUG o => o_30
  # DEBUG o => o_30
  if (o_30 >= prephitmp_107)
    goto <bb 10>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 12>;

<L9>:
  # DEBUG this => result_13(D)
  # DEBUG D#628 => &result_13(D)->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => result_13(D)->D.35433._M_impl._M_finish
  # DEBUG D#630 => result_13(D)->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &result_13(D)->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _31 = MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_start;
  # DEBUG D#625 => (long int) _31
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _31
  # DEBUG __n => D#622
  if (_31 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _31
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _31
  # DEBUG this => D#614
  # DEBUG D.103190 => D#615
  operator delete (_31);

  <bb 22>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  resx 7

  <bb 23>:
  _84 = __n_12 * 4;
  _85 = (int *) _84;
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_end_of_storage = _85;
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65855
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119165 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __niter => __n_12
  # DEBUG __first => 0B
  goto <bb 9>;

}



;; Function virtual std::vector<int> IQRouter::FreeCredits() const (_ZNK8IQRouter11FreeCreditsEv, funcdef_no=2259, decl_uid=51757, cgraph_uid=704, symbol_order=705)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual std::vector<int> IQRouter::FreeCredits() const (const struct IQRouter * const this)
{
  int * D.119265;
  int * __first;
  size_type __n;
  int v;
  int o;
  const value_type D.65840;
  int _6;
  int _9;
  int _10;
  int _11;
  long unsigned int _14;
  const int pretmp_15;
  int _18;
  int _20;
  int _21;
  long unsigned int _22;
  int (*__vtbl_ptr_type) () _23;
  int (*__vtbl_ptr_type) () * _25;
  struct BufferState * _26;
  int * _31;
  struct BufferPolicy * const _32;
  int * _33;
  struct BufferState * * const _34;
  struct BufferState * const & _36;
  long unsigned int _37;
  int & _38;
  int * _46;
  int * _51;
  const int prephitmp_60;
  int _66;
  int _73;
  long unsigned int _84;
  int * _85;
  const int prephitmp_87;
  sizetype _95;
  sizetype _96;
  long unsigned int _97;
  long unsigned int _98;
  const int prephitmp_99;
  long unsigned int pretmp_100;
  long unsigned int pretmp_101;
  const int pretmp_104;
  const int prephitmp_105;
  const int pretmp_106;
  const int prephitmp_107;

  <bb 2>:
  # DEBUG this => &D.65842
  # DEBUG this => &D.65842
  _9 = this_8(D)->D.51790._outputs;
  _10 = this_8(D)->_vcs;
  _11 = _9 * _10;
  __n_12 = (size_type) _11;
  # DEBUG this => result_13(D)
  # DEBUG __n => __n_12
  # DEBUG __value => &D.65840
  # DEBUG __a => &D.65842
  # DEBUG D#1413 => &result_13(D)->D.35433
  # DEBUG this => D#1413
  # DEBUG __n => __n_12
  # DEBUG __a => &D.65842
  # DEBUG D#967 => &D#1413->_M_impl
  # DEBUG this => D#967
  # DEBUG __a => &D.65842
  # DEBUG this => D#967
  # DEBUG __a => &D.65842
  # DEBUG this => D#967
  # DEBUG D.96655 => &D.65842
  MEM[(struct _Vector_impl *)result_13(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)result_13(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)result_13(D)]._M_end_of_storage = 0B;
  # DEBUG this => D#1413
  # DEBUG __n => __n_12
  # DEBUG D#965 => D#1413
  # DEBUG __n => __n_12
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (__n_12 != 0)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 3>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => __n_12
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => __n_12
  # DEBUG this => D#959
  # DEBUG D.119263 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (__n_12 > 4611686018427387903)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  std::__throw_bad_alloc ();

  <bb 5>:
  _14 = __n_12 * 4;
  _51 = operator new (_14);
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_start = _51;
  _46 = _51 + _14;
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_end_of_storage = _46;
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65840
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119238 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __niter => __n_12
  # DEBUG __first => _51
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65840
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119238 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __first => _51
  _96 = (sizetype) _11;
  _95 = _96 * 4;
  __builtin_memset (_51, 0, _95);

  <bb 8>:
  _98 = (long unsigned int) _11;
  _97 = _98 * 4;
  __first_102 = _51 + _97;
  pretmp_15 = this_8(D)->D.51790._outputs;

  <bb 9>:
  # __first_76 = PHI <__first_102(8), 0B(23)>
  # prephitmp_60 = PHI <pretmp_15(8), _9(23)>
  MEM[(int * *)result_13(D) + 8B] = __first_76;
  # DEBUG this => &D.65842
  # DEBUG this => &D.65842
  # DEBUG o => 0
  # DEBUG o => 0
  if (prephitmp_60 <= 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:

  <bb 24>:
  return result_13(D);

  <bb 11>:
  pretmp_104 = this_8(D)->_vcs;

  <bb 12>:
  # o_40 = PHI <0(11), o_30(19)>
  # prephitmp_87 = PHI <prephitmp_60(11), prephitmp_107(19)>
  # prephitmp_105 = PHI <pretmp_104(11), prephitmp_99(19)>
  # DEBUG o => o_40
  # DEBUG v => 0
  if (prephitmp_105 <= 0)
    goto <bb 18>;
  else
    goto <bb 13>;

  <bb 13>:
  pretmp_100 = (long unsigned int) o_40;
  pretmp_101 = pretmp_100 * 8;

  <bb 14>:
  # v_39 = PHI <0(13), v_28(16)>
  # _73 = PHI <prephitmp_105(13), _18(16)>
  # DEBUG v => v_39
  _20 = o_40 * _73;
  _21 = _20 + v_39;
  _22 = (long unsigned int) _21;
  _33 = MEM[(int * *)result_13(D)];
  # DEBUG D#55 => result_13(D)
  # DEBUG __n => _22
  # DEBUG this => D#55
  _37 = _22 * 4;
  _38 = _33 + _37;
  # DEBUG D#1415 => &this_8(D)->_next_buf
  _34 = MEM[(struct BufferState * * *)this_8(D) + 904B];
  # DEBUG D#83 => D#1415
  # DEBUG __n => (long unsigned int) o_40
  # DEBUG this => D#83
  _36 = _34 + pretmp_101;
  _26 = *_36;
  _32 = MEM[(struct BufferPolicy * *)_26 + 144B];
  # DEBUG D#33 => _26
  # DEBUG vc => v_39
  # DEBUG this => D#33
  _25 = _32->D.55980._vptr.Module;
  _23 = MEM[(int (*__vtbl_ptr_type) () *)_25 + 64B];
  _6 = OBJ_TYPE_REF(_23;(const struct BufferPolicy)_32->8) (_32, v_39);

  <bb 15>:
  *_38 = _6;
  v_28 = v_39 + 1;
  # DEBUG v => v_28
  # DEBUG v => v_28
  _18 = this_8(D)->_vcs;
  if (_18 <= v_28)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 14>;

  <bb 17>:
  # _66 = PHI <_18(15)>
  pretmp_106 = this_8(D)->D.51790._outputs;

  <bb 18>:
  # prephitmp_99 = PHI <_66(17), prephitmp_105(12)>
  # prephitmp_107 = PHI <pretmp_106(17), prephitmp_87(12)>
  o_30 = o_40 + 1;
  # DEBUG o => o_30
  # DEBUG o => o_30
  if (o_30 >= prephitmp_107)
    goto <bb 10>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 12>;

<L9>:
  # DEBUG this => result_13(D)
  # DEBUG D#628 => &result_13(D)->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => result_13(D)->D.35433._M_impl._M_finish
  # DEBUG D#630 => result_13(D)->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &result_13(D)->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _31 = MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_start;
  # DEBUG D#625 => (long int) _31
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _31
  # DEBUG __n => D#622
  if (_31 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _31
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _31
  # DEBUG this => D#614
  # DEBUG D.103157 => D#615
  operator delete (_31);

  <bb 22>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  resx 7

  <bb 23>:
  _84 = __n_12 * 4;
  _85 = (int *) _84;
  MEM[(struct _Vector_base *)result_13(D)]._M_impl._M_end_of_storage = _85;
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1407 => result_13(D)
  # DEBUG D#1408 => &D.65840
  # DEBUG __n => __n_12
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.119238 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_12
  # DEBUG __value => D#1394
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_12
  # DEBUG __niter => __n_12
  # DEBUG __first => 0B
  goto <bb 9>;

}



;; Function bool IQRouter::_ReceiveFlits() (_ZN8IQRouter13_ReceiveFlitsEv, funcdef_no=2238, decl_uid=51681, cgraph_uid=683, symbol_order=684)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
bool IQRouter::_ReceiveFlits() (struct IQRouter * const this)
{
  struct _Rb_tree_node_base * SR.3255;
  struct _Rb_tree_node_base * SR.3254;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  struct Flit * SR.3251;
  const int SR.3250;
  bool __insert_left;
  struct iterator D.119720;
  struct pair D.119693;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct pair D.119666;
  struct iterator D.119665;
  struct pair __res;
  struct _Rb_tree_node_base * __res$first;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * SR.2285;
  char_type D.119644;
  char __c;
  char_type D.119641;
  char __c;
  char_type D.119638;
  struct basic_ostream & D.119632;
  struct Flit * D.119629;
  struct pair D.106945;
  int input;
  bool activity;
  const struct value_type D.64111;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  struct FlitChannel * _12;
  struct Channel * _13;
  int (*__vtbl_ptr_type) () * _14;
  int (*__vtbl_ptr_type) () _15;
  bool _18;
  int _19;
  int _21;
  struct ostream * gWatchOut.267_22;
  struct basic_ostream & _24;
  const size_type _25;
  struct basic_ostream & _27;
  struct basic_ostream & _29;
  struct FlitChannel * * _32;
  struct FlitChannel * & _33;
  long int _34;
  char * const _35;
  struct basic_ostream & _36;
  const struct __ctype_type * _44;
  int prephitmp_45;
  struct _Rb_tree_node_base * _47;
  void * PROF_48;
  int pretmp_49;
  struct Flit * const _50;
  struct Flit * _52;
  int (*__vtbl_ptr_type) () * _53;
  long int _54;
  sizetype _55;
  struct basic_ios * _56;
  struct basic_ostream & _59;
  int _60;
  char _61;
  int pretmp_63;
  char_type _64;
  int pretmp_65;
  const int pretmp_68;
  int (*__vtbl_ptr_type) () * _69;
  int (*__vtbl_ptr_type) () _70;
  void * PROF_74;
  char_type _76;
  const int prephitmp_77;
  int prephitmp_85;
  const int _86;
  struct _Rb_tree_node_base * _88;
  struct _Rb_tree_node_base * _89;
  struct _Rb_tree_node_base * _91;
  const int _102;
  struct _Rb_tree_node * _103;
  long unsigned int _108;
  long unsigned int _109;
  struct _Rb_tree_node_base * const _110;
  const int _126;

  <bb 2>:
  # DEBUG activity => 0
  # DEBUG input => 0
  # DEBUG input => 0
  # DEBUG activity => 0
  _60 = this_8(D)->D.51790._inputs;
  if (_60 <= 0)
    goto <bb 35>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # activity_104 = PHI <0(3), activity_2(34)>
  # SR.3250_138 = PHI <0(3), SR.3250_31(34)>
  # DEBUG input => SR.3250_138
  # DEBUG activity => activity_104
  _10 = (long unsigned int) SR.3250_138;
  # DEBUG D#1577 => &this_8(D)->D.51790._input_channels
  _32 = MEM[(struct FlitChannel * * *)this_8(D) + 144B];
  # DEBUG D#62 => D#1577
  # DEBUG __n => _10
  # DEBUG this => D#62
  _11 = _10 * 8;
  _33 = _32 + _11;
  _12 = *_33;
  _13 = &_12->D.35459;
  _14 = MEM[(struct Channel *)_12].D.34853.D.31271._vptr.Module;
  _15 = MEM[(int (*__vtbl_ptr_type) () *)_14 + 56B];
  PROF_48 = [obj_type_ref] OBJ_TYPE_REF(_15;(struct Channel)_13->7);
  if (PROF_48 == Receive)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => _13
  _52 = MEM[(struct Channel *)_12]._output;
  goto <bb 7>;

  <bb 6>:
  _50 = OBJ_TYPE_REF(_15;(struct Channel)_13->7) (_13);

  <bb 7>:
  # SR.3251_17 = PHI <_50(6), _52(5)>
  # DEBUG f => SR.3251_17
  if (SR.3251_17 != 0B)
    goto <bb 8>;
  else
    goto <bb 32>;

  <bb 8>:
  _18 = SR.3251_17->watch;
  if (_18 != 0)
    goto <bb 9>;
  else
    goto <bb 16>;

  <bb 9>:
  _19 = SR.3251_17->id;
  # DEBUG D#1578 => &this_8(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1578
  _21 = GetSimTime ();
  gWatchOut.267_22 = gWatchOut;
  _24 = std::basic_ostream<char>::operator<< (gWatchOut.267_22, _21);
  # DEBUG __out => _24
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_24, " | ", 3);
  # DEBUG __os => _24
  # DEBUG __str => NULL
  _25 = MEM[(long unsigned int *)this_8(D) + 48B];
  # DEBUG this => D#3
  _34 = (long int) _25;
  # DEBUG this => NULL
  _35 = MEM[(char * *)this_8(D) + 40B];
  # DEBUG this => D#1
  _36 = std::__ostream_insert<char, std::char_traits<char> > (_24, _35, _34);
  # DEBUG __out => _36
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_36, " | ", 3);
  # DEBUG __out => _36
  # DEBUG __s => "Received flit "
  # DEBUG __s => "Received flit "
  std::__ostream_insert<char, std::char_traits<char> > (_36, "Received flit ", 14);
  _27 = std::basic_ostream<char>::operator<< (_36, _19);
  # DEBUG __out => _27
  # DEBUG __s => " from channel at input "
  # DEBUG __s => " from channel at input "
  std::__ostream_insert<char, std::char_traits<char> > (_27, " from channel at input ", 23);
  _29 = std::basic_ostream<char>::operator<< (_27, SR.3250_138);
  # DEBUG __out => _29
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_29, ".", 1);
  # DEBUG this => _29
  # DEBUG __pf => endl
  # DEBUG __os => _29
  _53 = _29->_vptr.basic_ostream;
  _54 = MEM[(long int *)_53 + -24B];
  _55 = (sizetype) _54;
  _56 = _29 + _55;
  # DEBUG this => _56
  # DEBUG __c => 10
  _44 = MEM[(const struct basic_ios *)_56]._M_ctype;
  # DEBUG __f => _44
  if (_44 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  std::__throw_bad_cast ();

  <bb 11>:
  # DEBUG this => _44
  # DEBUG __c => 10
  _61 = MEM[(const struct ctype *)_44]._M_widen_ok;
  if (_61 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _64 = MEM[(const struct ctype *)_44]._M_widen[10];
  pretmp_65 = (int) _64;
  goto <bb 15>;

  <bb 13>:
  # DEBUG this => _44
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_44);
  _69 = MEM[(const struct ctype *)_44].D.24721._vptr.facet;
  _70 = MEM[(int (*__vtbl_ptr_type) () *)_69 + 48B];
  PROF_74 = [obj_type_ref] OBJ_TYPE_REF(_70;(const struct ctype)_44->6);
  if (PROF_74 == do_widen)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  _76 = OBJ_TYPE_REF(_70;(const struct ctype)_44->6) (_44, 10);
  pretmp_63 = (int) _76;

  <bb 15>:
  # prephitmp_85 = PHI <pretmp_65(12), 10(13), pretmp_63(14)>
  _59 = std::basic_ostream<char>::put (_29, prephitmp_85);
  # DEBUG __os => _59
  std::basic_ostream<char>::flush (_59);

  <bb 16>:
  # DEBUG __x => SR.3250_138
  # DEBUG __y => SR.3251_17
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG this => &D.64111
  # DEBUG __p => &D.64039
  # DEBUG D#1579 => &this_8(D)->_in_queue_flits
  # DEBUG this => D#1579
  # DEBUG __x => &D.64111
  # DEBUG D#2316 => &MEM[(struct map *)this_8(D) + 304B]._M_t
  # DEBUG this => D#2316
  # DEBUG __v => &D.64111
  # DEBUG __x => &D.64111
  # DEBUG this => D#224
  # DEBUG this => D#2316
  # DEBUG __k => &D.64111.first
  _47 = MEM[(struct _Rb_tree_node_base * *)this_8(D) + 320B];
  # DEBUG D#99 => D#2316
  # DEBUG this => D#99
  # DEBUG __x => NULL
  # DEBUG this => D#2316
  __j$_M_node_83 = &MEM[(struct _Rb_tree *)this_8(D) + 304B]._M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_83
  # DEBUG __x => _47
  if (_47 == 0B)
    goto <bb 24>;
  else
    goto <bb 19>;

  <bb 17>:
  # _110 = PHI <_88(21), _89(22)>
  # DEBUG __comp => _86 > SR.3250_138
  # DEBUG __y => __j$_M_node_113
  # DEBUG __x => _110
  if (_110 == 0B)
    goto <bb 23>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 20>;

  <bb 19>:

  <bb 20>:
  # __j$_M_node_113 = PHI <_47(19), _110(18)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_113
  # DEBUG __y => __j$_M_node_113
  # DEBUG __x => __j$_M_node_113
  # DEBUG __x => __j$_M_node_113
  # DEBUG this => __j$_M_node_113
  # DEBUG D#723 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_113]._M_value_field
  # DEBUG __r => D#723
  # DEBUG __x => D#723
  # DEBUG this => D#224
  # DEBUG D#725 => &MEM[(const struct pair &)__j$_M_node_113 + 32].first
  # DEBUG D#729 => &MEM[(struct _Rb_tree *)D#2316]._M_impl._M_key_compare
  # DEBUG D#287 => D#729
  # DEBUG D#288 => &D.64111.first
  _86 = MEM[(const int &)__j$_M_node_113 + 32];
  # DEBUG D#289 => D#725
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  # DEBUG __comp => NULL
  if (_86 > SR.3250_138)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _88 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_113 + 16B];
  # DEBUG D#207 => __j$_M_node_113
  # DEBUG __x => D#207
  goto <bb 17>;

  <bb 22>:
  _89 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_113 + 24B];
  # DEBUG D#206 => __j$_M_node_113
  # DEBUG __x => D#206
  goto <bb 17>;

  <bb 23>:
  # _126 = PHI <_86(17)>
  # __j$_M_node_116 = PHI <__j$_M_node_113(17)>

  <bb 36>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_116
  # DEBUG __j$_M_node => __j$_M_node_116
  if (_126 > SR.3250_138)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:
  # __j$_M_node_119 = PHI <__j$_M_node_116(36), __j$_M_node_83(16)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_119
  # DEBUG __j$_M_node => __j$_M_node_119
  _91 = MEM[(struct _Rb_tree_node_base * *)this_8(D) + 328B];
  # DEBUG D#225 => D#2316
  # DEBUG this => D#225
  # DEBUG this => NULL
  # DEBUG __x => _91
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_91 == __j$_M_node_119)
    goto <bb 27>;
  else
    goto <bb 25>;

  <bb 25>:
  # DEBUG this => &__j
  __j$_M_node_93 = std::_Rb_tree_decrement (__j$_M_node_119);
  # DEBUG __j$_M_node => __j$_M_node_93
  pretmp_68 = MEM[(const int &)__j$_M_node_93 + 32];

  <bb 26>:
  # __j$_M_node_145 = PHI <__j$_M_node_116(36), __j$_M_node_119(25)>
  # prephitmp_77 = PHI <_126(36), pretmp_68(25)>
  # DEBUG __j$_M_node => NULL
  # DEBUG __x => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __r => D#724
  # DEBUG __x => D#724
  # DEBUG this => D#224
  # DEBUG D#728 => &MEM[(struct _Rb_tree *)D#2316]._M_impl._M_key_compare
  # DEBUG D#287 => D#728
  # DEBUG D#288 => D#726
  # DEBUG D#289 => &D.64111.first
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (prephitmp_77 < SR.3250_138)
    goto <bb 27>;
  else
    goto <bb 31>;

  <bb 27>:
  # __res$8_134 = PHI <_91(24), __j$_M_node_145(26)>
  # DEBUG D#727 => {CLOBBER}
  # DEBUG __j$_M_node => D#727
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$8_134
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$8_134
  if (__res$8_134 != 0B)
    goto <bb 28>;
  else
    goto <bb 31>;

  <bb 28>:
  # DEBUG this => &__an
  # DEBUG __t => D#2316
  # DEBUG __an$_M_t => D#2316
  # DEBUG D#1572 => &__an
  # DEBUG this => D#2316
  # DEBUG __x => 0B
  # DEBUG __p => __res$8_134
  # DEBUG __v => &D.64111
  # DEBUG __node_gen => D#1572
  # DEBUG D#1571 => D#1572
  # DEBUG this => D#2316
  if (__j$_M_node_83 == __res$8_134)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  # DEBUG __x => __res$8_134
  # DEBUG __x => __res$8_134
  # DEBUG this => __res$8_134
  # DEBUG D#724 => &MEM[(const struct _Rb_tree_node *)__res$8_134]._M_value_field
  # DEBUG __r => D#724
  # DEBUG __x => D#724
  # DEBUG this => D#224
  # DEBUG D#1569 => &MEM[(const struct pair &)__res$8_134 + 32].first
  # DEBUG __x => &D.64111
  # DEBUG this => D#224
  # DEBUG D#1570 => &MEM[(struct _Rb_tree *)D#2316]._M_impl._M_key_compare
  # DEBUG D#287 => D#1570
  _102 = MEM[(const int &)__res$8_134 + 32];
  # DEBUG D#289 => D#1569
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  __insert_left_105 = _102 > SR.3250_138;
  pretmp_49 = (int) __insert_left_105;

  <bb 30>:
  # prephitmp_45 = PHI <pretmp_49(29), 1(28)>
  # DEBUG __insert_left => NULL
  # DEBUG D#1568 => D#1571
  # DEBUG __arg => &D.64111
  # DEBUG this => D#1568
  # DEBUG D#1567 => D#1568
  # DEBUG D#1566 => D#1567->_M_t
  # DEBUG D#1565 => D#1566
  # DEBUG __x => &D.64111
  # DEBUG this => D#1565
  # DEBUG D#1564 => D#1565
  # DEBUG D#1563 => D#1565
  # DEBUG D#1562 => D#1563
  # DEBUG this => D#1562
  # DEBUG D#1561 => D#1562
  # DEBUG this => D#1561
  # DEBUG __n => 1
  # DEBUG __a => D#1560
  # DEBUG D#1559 => D#1560
  # DEBUG D#1557 => D#1559
  # DEBUG D#1558 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1557
  # DEBUG D.119710 => D#1558
  # DEBUG D#1556 => D#1557
  # DEBUG D#1555 => D#1556
  # DEBUG this => D#1555
  _103 = operator new (48);
  # DEBUG __tmp => _103
  # DEBUG D#1341 => D#1564
  # DEBUG __node => _103
  # DEBUG __x => &D.64111
  # DEBUG this => D#1341
  # DEBUG D#1340 => D#1341
  # DEBUG this => _103
  # DEBUG D#2315 => &_103->_M_value_field
  # DEBUG __r => D#2315
  # DEBUG D#1123 => D#1340
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2315
  # DEBUG __val => &D.64111
  # DEBUG this => D#1339
  # DEBUG D#12 => 16
  # DEBUG __p => D#2315
  # DEBUG D.102238 => D#12
  MEM[(struct pair *)_103 + 32B] = SR.3250_138;
  MEM[(struct pair *)_103 + 40B] = SR.3251_17;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _103
  std::_Rb_tree_insert_and_rebalance (prephitmp_45, _103, __res$8_134, __j$_M_node_83);
  _108 = MEM[(struct _Rb_tree *)this_8(D) + 304B]._M_impl._M_node_count;
  _109 = _108 + 1;
  MEM[(struct _Rb_tree *)this_8(D) + 304B]._M_impl._M_node_count = _109;
  # DEBUG this => NULL
  # DEBUG __x => _103
  # DEBUG this => NULL
  # DEBUG __a => &D.119665
  # DEBUG __b => NULL
  D.119665 ={v} {CLOBBER};

  <bb 31>:

  <bb 37>:
  # DEBUG D#1575 => {CLOBBER}
  # DEBUG __res$first => D#1575
  # DEBUG D#1576 => {CLOBBER}
  # DEBUG __res$second => D#1576
  # DEBUG activity => 1

  <bb 32>:
  # activity_2 = PHI <activity_104(7), 1(37)>
  # DEBUG activity => activity_2
  SR.3250_31 = SR.3250_138 + 1;
  # DEBUG input => SR.3250_31
  # DEBUG input => SR.3250_31
  # DEBUG activity => activity_2
  _9 = this_8(D)->D.51790._inputs;
  if (_9 <= SR.3250_31)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # activity_127 = PHI <activity_2(32)>
  goto <bb 35>;

  <bb 34>:
  goto <bb 4>;

  <bb 35>:
  # activity_137 = PHI <activity_127(33), 0(2)>

  <bb 38>:
  return activity_137;

}



;; Function bool IQRouter::_ReceiveCredits() (_ZN8IQRouter15_ReceiveCreditsEv, funcdef_no=2239, decl_uid=51683, cgraph_uid=684, symbol_order=685)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
bool IQRouter::_ReceiveCredits() (struct IQRouter * const this)
{
  int SR.3264;
  struct Credit * SR.3263;
  int SR.3262;
  const ptrdiff_t _Num;
  struct Credit * * D.119872;
  const size_type __old_num_nodes;
  const size_type __new_num_nodes;
  struct pair * * __new_nstart;
  size_type __new_map_size;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  size_type __nodes_to_add;
  struct Credit * D.119764;
  int output;
  bool activity;
  struct pair D.64351;
  int _9;
  long unsigned int _10;
  struct Channel * _12;
  int (*__vtbl_ptr_type) () * _13;
  int (*__vtbl_ptr_type) () _14;
  int _18;
  int _19;
  long unsigned int _23;
  struct Channel * * _25;
  long unsigned int _26;
  struct Channel * & _27;
  void * PROF_29;
  struct Credit * const _31;
  struct Credit * _33;
  struct pair * _34;
  struct pair * _35;
  struct pair * _36;
  struct pair * _37;
  struct pair * _38;
  struct pair * _39;
  struct pair * * _40;
  struct pair * * _41;
  struct pair * _42;
  struct pair * _43;
  long unsigned int _45;
  struct pair * * _46;
  long int _47;
  struct pair * * _48;
  long int _49;
  long int _50;
  long int _51;
  long unsigned int _52;
  long unsigned int _53;
  struct pair * * prephitmp_55;
  struct pair * * _56;
  long int _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int pretmp_62;
  long unsigned int _65;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  struct pair * * _74;
  long int __last.282_75;
  long int _76;
  long unsigned int _78;
  long unsigned int _79;
  struct pair * * _81;
  int _82;
  long unsigned int _85;
  long unsigned int _87;
  struct pair * * _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _91;
  struct pair * * _96;
  struct pair * * _97;
  struct pair * * _98;
  long int __last.282_99;
  long int __first.283_100;
  long int _101;
  long unsigned int _103;
  struct pair * * _104;
  struct pair * _106;
  struct pair * _107;
  sizetype _109;
  struct pair * * _110;
  struct pair * _111;
  struct pair * _112;
  long int __last.216_113;
  long int _115;
  long unsigned int _117;
  struct Credit * * _119;
  long unsigned int pretmp_164;
  long unsigned int pretmp_165;
  long unsigned int prephitmp_166;

  <bb 2>:
  # DEBUG activity => 0
  # DEBUG output => 0
  # DEBUG output => 0
  # DEBUG activity => 0
  _82 = this_8(D)->D.51790._outputs;
  if (_82 <= 0)
    goto <bb 35>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # activity_120 = PHI <0(3), activity_2(34)>
  # SR.3264_122 = PHI <0(3), SR.3264_24(34)>
  # DEBUG output => SR.3264_122
  # DEBUG activity => activity_120
  _10 = (long unsigned int) SR.3264_122;
  # DEBUG D#1449 => &this_8(D)->D.51790._output_credits
  _25 = MEM[(struct Channel * * *)this_8(D) + 216B];
  # DEBUG D#63 => D#1449
  # DEBUG __n => _10
  # DEBUG this => D#63
  _26 = _10 * 8;
  _27 = _25 + _26;
  _12 = *_27;
  _13 = _12->D.63957.D.31271._vptr.Module;
  _14 = MEM[(int (*__vtbl_ptr_type) () *)_13 + 56B];
  PROF_29 = [obj_type_ref] OBJ_TYPE_REF(_14;(struct Channel)_12->7);
  if (PROF_29 == Receive)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => _12
  _33 = _12->_output;
  goto <bb 7>;

  <bb 6>:
  _31 = OBJ_TYPE_REF(_14;(struct Channel)_12->7) (_12);

  <bb 7>:
  # SR.3263_16 = PHI <_31(6), _33(5)>
  # DEBUG c => SR.3263_16
  if (SR.3263_16 != 0B)
    goto <bb 8>;
  else
    goto <bb 32>;

  <bb 8>:
  # DEBUG __x => SR.3263_16
  # DEBUG __y => SR.3264_122
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  _18 = GetSimTime ();
  _19 = this_8(D)->D.51790._credit_delay;
  SR.3262_20 = _18 + _19;
  # DEBUG __x => SR.3262_20
  # DEBUG __y$first => SR.3263_16
  # DEBUG __y$second => SR.3264_122
  # DEBUG this => &D.64351
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG D#2321 => &this_8(D)->_proc_credits
  # DEBUG this => D#2321
  # DEBUG __x => &D.64351
  _34 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_finish._M_cur;
  _35 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_finish._M_last;
  _36 = _35 + 18446744073709551592;
  if (_34 != _36)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 9>:
  # DEBUG D#1448 => &D#2321->D.44092._M_impl
  # DEBUG D#230 => D#1448
  # DEBUG __p => _34
  # DEBUG __arg => &D.64351
  # DEBUG __a => D#230
  # DEBUG D#229 => D#230
  # DEBUG D#228 => D#229
  # DEBUG __p => _34
  # DEBUG __val => &D.64351
  # DEBUG this => D#228
  # DEBUG D#12 => 24
  # DEBUG __p => _34
  # DEBUG D.93757 => D#12
  if (_34 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  MEM[(struct pair *)_34] = SR.3262_20;
  MEM[(struct pair *)_34 + 8B] = SR.3263_16;
  MEM[(struct pair *)_34 + 16B] = SR.3264_122;

  <bb 11>:

  <bb 37>:
  _37 = _34 + 24;
  MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_finish._M_cur = _37;
  goto <bb 31>;

  <bb 12>:
  # DEBUG this => D#2321
  # DEBUG __t => &D.64351
  # DEBUG this => D#2321
  # DEBUG __nodes_to_add => 1
  _45 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_map_size;
  _46 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_finish._M_node;
  _47 = (long int) _46;
  _48 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_map;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] -8;
  _52 = (long unsigned int) _51;
  _53 = _45 + _52;
  if (_53 <= 1)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 13>:
  # DEBUG this => D#2321
  # DEBUG __nodes_to_add => 1
  # DEBUG __nodes_to_add => 1
  # DEBUG __add_at_front => 0
  _56 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_start._M_node;
  _57 = (long int) _56;
  _58 = _47 - _57;
  _59 = _58 /[ex] 8;
  _60 = _59 + 1;
  __old_num_nodes_61 = (const size_type) _60;
  # DEBUG __old_num_nodes => __old_num_nodes_61
  __new_num_nodes_63 = __old_num_nodes_61 + 1;
  # DEBUG __new_num_nodes => __new_num_nodes_63
  _65 = __new_num_nodes_63 * 2;
  if (_45 > _65)
    goto <bb 14>;
  else
    goto <bb 21>;

  <bb 14>:
  _67 = _45 - __new_num_nodes_63;
  _68 = _67 >> 1;
  _69 = _68 * 8;
  __new_nstart_73 = _48 + _69;
  # DEBUG __new_nstart => __new_nstart_73
  if (_56 > __new_nstart_73)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  _74 = _46 + 8;
  # DEBUG __first => _56
  # DEBUG __last => _74
  # DEBUG __result => __new_nstart_73
  # DEBUG __it => _74
  # DEBUG __it => _74
  # DEBUG __it => _56
  # DEBUG __it => _56
  # DEBUG __first => _56
  # DEBUG __last => _74
  # DEBUG __result => __new_nstart_73
  # DEBUG __it => __new_nstart_73
  # DEBUG __it => __new_nstart_73
  # DEBUG __it => _74
  # DEBUG __it => _74
  # DEBUG __it => _56
  # DEBUG __it => _56
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __last.282_75 = (long int) _74;
  _76 = __last.282_75 - _57;
  _Num_77 = _76 /[ex] 8;
  # DEBUG _Num => _Num_77
  if (_Num_77 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  pretmp_165 = __old_num_nodes_61 * 8;
  goto <bb 27>;

  <bb 17>:
  _78 = (long unsigned int) _76;
  __builtin_memmove (__new_nstart_73, _56, _78);
  pretmp_62 = __old_num_nodes_61 * 8;
  goto <bb 27>;

  <bb 18>:
  _79 = __old_num_nodes_61 * 8;
  # DEBUG D#2322 => __new_nstart_73 + _79
  _81 = _46 + 8;
  # DEBUG __first => _56
  # DEBUG __last => _81
  # DEBUG __result => D#2322
  # DEBUG __it => _81
  # DEBUG __it => _81
  # DEBUG __it => _56
  # DEBUG __it => _56
  # DEBUG __first => _56
  # DEBUG __last => _81
  # DEBUG __result => D#2322
  # DEBUG __it => D#2322
  # DEBUG __it => D#2322
  # DEBUG __it => _81
  # DEBUG __it => _81
  # DEBUG __it => _56
  # DEBUG __it => _56
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __last.216_113 = (long int) _81;
  _115 = __last.216_113 - _57;
  _Num_116 = _115 /[ex] 8;
  # DEBUG _Num => _Num_116
  if (_Num_116 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _117 = (long unsigned int) _115;
  _23 = _79 - _117;
  _119 = __new_nstart_73 + _23;
  __builtin_memmove (_119, _56, _117);

  <bb 20>:

  <bb 38>:
  goto <bb 27>;

  <bb 21>:
  # DEBUG D#2320 => &MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_map_size
  # DEBUG __a => D#2320
  # DEBUG __b => &__nodes_to_add
  if (_45 == 0)
    goto <bb 36>;
  else
    goto <bb 22>;

  <bb 22>:
  _85 = _45 + _45;
  __new_map_size_86 = _85 + 2;
  # DEBUG __new_map_size => __new_map_size_86
  # DEBUG D#1442 => &D#2321->D.44092
  # DEBUG D#1143 => D#1442
  # DEBUG __n => __new_map_size_86
  # DEBUG this => D#1143
  # DEBUG D#1142 => D#1143
  # DEBUG D#841 => D#1142
  # DEBUG this => D#841
  # DEBUG D#840 => D#841
  # DEBUG this => D#840
  # DEBUG this => NULL
  # DEBUG D.97702 => NULL
  # DEBUG this => NULL
  # DEBUG D#1141 => &__map_alloc
  # DEBUG __n => __new_map_size_86
  # DEBUG __a => D#1141
  # DEBUG D#1140 => D#1141
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => 0B
  # DEBUG __n => __new_map_size_86
  # DEBUG this => D#1138
  # DEBUG D.119853 => D#1139
  # DEBUG D#1137 => D#1138
  # DEBUG D#1136 => D#1137
  # DEBUG this => D#1136
  if (__new_map_size_86 > 2305843009213693951)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  std::__throw_bad_alloc ();

  <bb 24>:
  # __new_map_size_160 = PHI <__new_map_size_86(22), __new_map_size_155(36)>
  # DEBUG __new_map_size => __new_map_size_160
  # DEBUG D#1442 => &D#2321->D.44092
  # DEBUG D#1143 => D#1442
  # DEBUG __n => __new_map_size_160
  # DEBUG this => D#1143
  # DEBUG D#1142 => D#1143
  # DEBUG D#841 => D#1142
  # DEBUG this => D#841
  # DEBUG D#840 => D#841
  # DEBUG this => D#840
  # DEBUG this => NULL
  # DEBUG D.97702 => NULL
  # DEBUG this => NULL
  # DEBUG D#1141 => &__map_alloc
  # DEBUG __n => __new_map_size_160
  # DEBUG __a => D#1141
  # DEBUG D#1140 => D#1141
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => 0B
  # DEBUG __n => __new_map_size_160
  # DEBUG this => D#1138
  # DEBUG D.119853 => D#1139
  # DEBUG D#1137 => D#1138
  # DEBUG D#1136 => D#1137
  # DEBUG this => D#1136
  _87 = __new_map_size_160 * 8;
  _88 = operator new (_87);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  # DEBUG __new_map => _88
  _89 = __new_map_size_160 - __new_num_nodes_63;
  _90 = _89 >> 1;
  _91 = _90 * 8;
  __new_nstart_95 = _88 + _91;
  # DEBUG __new_nstart => __new_nstart_95
  _96 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_finish._M_node;
  _97 = _96 + 8;
  _98 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_start._M_node;
  # DEBUG __first => _98
  # DEBUG __last => _97
  # DEBUG __result => __new_nstart_95
  # DEBUG __it => _97
  # DEBUG __it => _97
  # DEBUG __it => _98
  # DEBUG __it => _98
  # DEBUG __first => _98
  # DEBUG __last => _97
  # DEBUG __result => __new_nstart_95
  # DEBUG __it => __new_nstart_95
  # DEBUG __it => __new_nstart_95
  # DEBUG __it => _97
  # DEBUG __it => _97
  # DEBUG __it => _98
  # DEBUG __it => _98
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __last.282_99 = (long int) _97;
  __first.283_100 = (long int) _98;
  _101 = __last.282_99 - __first.283_100;
  _Num_102 = _101 /[ex] 8;
  # DEBUG _Num => _Num_102
  if (_Num_102 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  _103 = (long unsigned int) _101;
  __builtin_memmove (__new_nstart_95, _98, _103);

  <bb 26>:
  # DEBUG D#1441 => D#2321->D.44092._M_impl._M_map_size
  _104 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_map;
  # DEBUG D#1440 => &D#2321->D.44092
  # DEBUG D#844 => D#1440
  # DEBUG D#845 => D#1441
  # DEBUG __p => _104
  # DEBUG this => D#844
  # DEBUG __n => D#845
  # DEBUG D#843 => D#845
  # DEBUG D#842 => D#844
  # DEBUG D#841 => D#842
  # DEBUG this => D#841
  # DEBUG D#840 => D#841
  # DEBUG this => D#840
  # DEBUG this => NULL
  # DEBUG D.97702 => NULL
  # DEBUG this => NULL
  # DEBUG D#544 => &__map_alloc
  # DEBUG D#545 => D#843
  # DEBUG __p => _104
  # DEBUG __a => D#544
  # DEBUG __n => D#545
  # DEBUG D#543 => D#545
  # DEBUG D#542 => D#544
  # DEBUG D#540 => D#542
  # DEBUG D#541 => D#543
  # DEBUG __p => _104
  # DEBUG this => D#540
  # DEBUG D.119843 => D#541
  operator delete (_104);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_map = _88;
  MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_map_size = __new_map_size_160;
  pretmp_164 = __old_num_nodes_61 * 8;

  <bb 27>:
  # __new_nstart_105 = PHI <__new_nstart_73(17), __new_nstart_73(38), __new_nstart_95(26), __new_nstart_73(16)>
  # prephitmp_166 = PHI <pretmp_62(17), _79(38), pretmp_164(26), pretmp_165(16)>

  <bb 39>:
  # DEBUG __new_nstart => __new_nstart_105
  # DEBUG D#1444 => &D#2321->D.44092._M_impl._M_start
  # DEBUG this => D#1444
  # DEBUG __new_node => __new_nstart_105
  MEM[(struct _Deque_iterator *)this_8(D) + 368B]._M_node = __new_nstart_105;
  _106 = *__new_nstart_105;
  MEM[(struct _Deque_iterator *)this_8(D) + 368B]._M_first = _106;
  # DEBUG __size => 24
  _107 = _106 + 504;
  MEM[(struct _Deque_iterator *)this_8(D) + 368B]._M_last = _107;
  _109 = prephitmp_166 + 18446744073709551608;
  _110 = __new_nstart_105 + _109;
  # DEBUG D#1443 => &D#2321->D.44092._M_impl._M_finish
  # DEBUG this => D#1443
  # DEBUG __new_node => _110
  MEM[(struct _Deque_iterator *)this_8(D) + 400B]._M_node = _110;
  _111 = *_110;
  MEM[(struct _Deque_iterator *)this_8(D) + 400B]._M_first = _111;
  # DEBUG __size => 24
  _112 = _111 + 504;
  MEM[(struct _Deque_iterator *)this_8(D) + 400B]._M_last = _112;

  <bb 28>:
  # prephitmp_55 = PHI <_110(39), _46(12)>
  # DEBUG D#1447 => &D#2321->D.44092
  # DEBUG D#1068 => D#1447
  # DEBUG this => D#1068
  # DEBUG D#1067 => D#1068
  # DEBUG __size => 24
  # DEBUG D#1066 => &D#1067->_M_impl
  # DEBUG D#1065 => D#1066
  # DEBUG __n => NULL
  # DEBUG __a => D#1065
  # DEBUG D#1064 => D#1065
  # DEBUG D#1062 => D#1064
  # DEBUG D#1063 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1062
  # DEBUG D.119780 => D#1063
  # DEBUG D#1061 => D#1062
  # DEBUG D#1060 => D#1061
  # DEBUG this => D#1060
  _38 = operator new (504);
  MEM[(struct pair * *)prephitmp_55 + 8B] = _38;
  _39 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_finish._M_cur;
  # DEBUG D#1446 => &D#2321->D.44092._M_impl
  # DEBUG D#228 => D#1446
  # DEBUG __p => _39
  # DEBUG __val => &D.64351
  # DEBUG this => D#228
  # DEBUG D#12 => 24
  # DEBUG __p => _39
  # DEBUG D.93757 => D#12
  if (_39 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  MEM[(struct pair *)_39] = SR.3262_20;
  MEM[(struct pair *)_39 + 8B] = SR.3263_16;
  MEM[(struct pair *)_39 + 16B] = SR.3264_122;

  <bb 30>:

  <bb 40>:
  _40 = MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_finish._M_node;
  _41 = _40 + 8;
  # DEBUG D#1445 => &D#2321->D.44092._M_impl._M_finish
  # DEBUG this => D#1445
  # DEBUG __new_node => _41
  MEM[(struct _Deque_iterator *)this_8(D) + 400B]._M_node = _41;
  _42 = MEM[(struct pair * *)_40 + 8B];
  MEM[(struct _Deque_iterator *)this_8(D) + 400B]._M_first = _42;
  # DEBUG __size => 24
  _43 = _42 + 504;
  MEM[(struct _Deque_iterator *)this_8(D) + 400B]._M_last = _43;
  MEM[(struct deque *)this_8(D) + 352B].D.44092._M_impl._M_finish._M_cur = _42;

  <bb 31>:

  <bb 41>:
  # DEBUG activity => 1

  <bb 32>:
  # activity_2 = PHI <activity_120(7), 1(41)>
  # DEBUG activity => activity_2
  SR.3264_24 = SR.3264_122 + 1;
  # DEBUG output => SR.3264_24
  # DEBUG output => SR.3264_24
  # DEBUG activity => activity_2
  _9 = this_8(D)->D.51790._outputs;
  if (_9 <= SR.3264_24)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # activity_158 = PHI <activity_2(32)>
  goto <bb 35>;

  <bb 34>:
  goto <bb 4>;

  <bb 35>:
  # activity_121 = PHI <activity_158(33), 0(2)>

  <bb 42>:
  return activity_121;

  <bb 36>:
  __new_map_size_155 = _45 + 3;
  # DEBUG __new_map_size => __new_map_size_155
  # DEBUG D#1442 => &D#2321->D.44092
  # DEBUG D#1143 => D#1442
  # DEBUG __n => __new_map_size_155
  # DEBUG this => D#1143
  # DEBUG D#1142 => D#1143
  # DEBUG D#841 => D#1142
  # DEBUG this => D#841
  # DEBUG D#840 => D#841
  # DEBUG this => D#840
  # DEBUG this => NULL
  # DEBUG D.97702 => NULL
  # DEBUG this => NULL
  # DEBUG D#1141 => &__map_alloc
  # DEBUG __n => __new_map_size_155
  # DEBUG __a => D#1141
  # DEBUG D#1140 => D#1141
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => 0B
  # DEBUG __n => __new_map_size_155
  # DEBUG this => D#1138
  # DEBUG D.119853 => D#1139
  # DEBUG D#1137 => D#1138
  # DEBUG D#1136 => D#1137
  # DEBUG this => D#1136
  goto <bb 24>;

}



;; Function void IQRouter::_RouteEvaluate() (_ZN8IQRouter14_RouteEvaluateEv, funcdef_no=2241, decl_uid=51694, cgraph_uid=686, symbol_order=687)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void IQRouter::_RouteEvaluate() (struct IQRouter * const this)
{
  struct pair * * iter$_M_node;
  struct pair * iter$_M_last;
  struct pair * iter$_M_cur;
  char_type D.119919;
  char __c;
  char_type D.119916;
  char __c;
  char_type D.119913;
  struct basic_ostream & D.119907;
  const struct Buffer * const cur_buf;
  const int vc;
  const int input;
  const int time;
  struct iterator iter;
  static const char __PRETTY_FUNCTION__[32] = "void IQRouter::_RouteEvaluate()";
  int _5;
  int pretmp_6;
  int _9;
  int _10;
  int _11;
  int _12;
  struct pair * _14;
  int _16;
  int _18;
  long unsigned int _19;
  int _24;
  bool _25;
  bool _26;
  int _27;
  int _30;
  struct ostream * gWatchOut.316_31;
  struct basic_ostream & _33;
  const size_type _34;
  struct basic_ostream & _36;
  struct basic_ostream & _38;
  struct basic_ostream & _40;
  struct Buffer * * _52;
  long unsigned int _54;
  struct VC * * const _55;
  long unsigned int _56;
  struct VC * const & _57;
  struct VC * _58;
  struct Flit * * const _59;
  struct Flit * * const _60;
  long unsigned int _61;
  struct Buffer * & _62;
  const eVCState _63;
  struct Flit * iftmp.304_64;
  int prephitmp_65;
  long int _66;
  char * const _67;
  struct basic_ostream & _68;
  int pretmp_71;
  const struct __ctype_type * _82;
  int (*__vtbl_ptr_type) () * _85;
  long int _86;
  sizetype _87;
  struct basic_ios * _88;
  struct basic_ostream & _91;
  char _93;
  char_type _96;
  int (*__vtbl_ptr_type) () * _101;
  int (*__vtbl_ptr_type) () _102;
  void * PROF_106;
  char_type _108;

  <bb 2>:
  _5 = this_4(D)->_routing_delay;
  if (_5 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("_routing_delay", "routers/iq_router.cpp", 463, &__PRETTY_FUNCTION__);

  <bb 4>:
  # DEBUG D#243 => &this_4(D)->_route_vcs
  # DEBUG this => D#243
  # DEBUG D#64 => &D#243->D.45014._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#64
  iter$_M_cur_28 = MEM[(const struct iterator &)this_4(D) + 448]._M_cur;
  # DEBUG iter$_M_cur => iter$_M_cur_28
  iter$_M_last_22 = MEM[(const struct iterator &)this_4(D) + 448]._M_last;
  # DEBUG iter$_M_last => iter$_M_last_22
  iter$_M_node_21 = MEM[(const struct iterator &)this_4(D) + 448]._M_node;
  # DEBUG iter$_M_node => iter$_M_node_21

  <bb 5>:
  # iter$_M_cur_127 = PHI <iter$_M_cur_28(4), iter$_M_cur_113(34)>
  # iter$_M_last_124 = PHI <iter$_M_last_22(4), iter$_M_last_114(34)>
  # iter$_M_node_83 = PHI <iter$_M_node_21(4), iter$_M_node_112(34)>

  <bb 36>:
  # DEBUG iter$_M_node => iter$_M_node_83
  # DEBUG iter$_M_last => iter$_M_last_124
  # DEBUG iter$_M_cur => iter$_M_cur_127

  <bb 6>:
  # iter$_M_cur_126 = PHI <iter$_M_cur_127(36), iter$_M_cur_69(33)>
  # DEBUG iter$_M_cur => iter$_M_cur_126
  # DEBUG D#247 => &this_4(D)->_route_vcs
  # DEBUG this => D#247
  # DEBUG D#65 => &D#247->D.45014._M_impl._M_finish
  # DEBUG this => &D.64723
  # DEBUG __x => D#65
  _14 = MEM[(const struct iterator &)this_4(D) + 480]._M_cur;
  # DEBUG D#250 => MEM[(const struct iterator &)this_4(D) + 480]._M_first
  # DEBUG D.93954 => D#250
  # DEBUG D#249 => MEM[(const struct iterator &)this_4(D) + 480]._M_last
  # DEBUG D.93955 => D#249
  # DEBUG D#248 => MEM[(const struct iterator &)this_4(D) + 480]._M_node
  # DEBUG D.93956 => D#248
  # DEBUG __x => &iter
  # DEBUG __y => &D.64723
  # DEBUG D#143 => &iter
  # DEBUG D#144 => &D.64723
  # DEBUG __x => D#143
  # DEBUG __y => D#144
  if (_14 != iter$_M_cur_126)
    goto <bb 7>;
  else
    goto <bb 35>;

  <bb 7>:
  # DEBUG D#66 => &iter
  # DEBUG this => D#66
  time_7 = iter$_M_cur_126->first;
  # DEBUG time => time_7
  if (time_7 >= 0)
    goto <bb 35>;
  else
    goto <bb 8>;

  <bb 8>:
  # DEBUG D#66 => &iter
  # DEBUG this => D#66
  _9 = GetSimTime ();
  _10 = this_4(D)->_routing_delay;
  _11 = _9 + _10;
  _12 = _11 + -1;
  iter$_M_cur_126->first = _12;
  # DEBUG D#66 => &iter
  # DEBUG this => D#66
  input_15 = iter$_M_cur_126->second.first;
  # DEBUG input => input_15
  if (input_15 < 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  _16 = this_4(D)->D.51790._inputs;
  if (input_15 >= _16)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 476, &__PRETTY_FUNCTION__);

  <bb 11>:
  # DEBUG D#66 => &iter
  # DEBUG this => D#66
  vc_17 = iter$_M_cur_126->second.second;
  # DEBUG vc => vc_17
  if (vc_17 < 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  _18 = this_4(D)->_vcs;
  if (vc_17 >= _18)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 478, &__PRETTY_FUNCTION__);

  <bb 14>:
  _19 = (long unsigned int) input_15;
  # DEBUG D#244 => &this_4(D)->_buf
  _52 = MEM[(struct Buffer * * *)this_4(D) + 880B];
  # DEBUG D#53 => D#244
  # DEBUG __n => _19
  # DEBUG this => D#53
  _61 = _19 * 8;
  _62 = _52 + _61;
  cur_buf_20 = *_62;
  # DEBUG cur_buf => cur_buf_20
  # DEBUG this => cur_buf_20
  # DEBUG vc => vc_17
  _54 = (long unsigned int) vc_17;
  # DEBUG D#96 => &cur_buf_20->_vc
  _55 = MEM[(struct VC * * *)cur_buf_20 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _54
  # DEBUG this => D#42
  _56 = _54 * 8;
  _57 = _55 + _56;
  _58 = *_57;
  # DEBUG this => _58
  # DEBUG D#95 => &MEM[(const struct VC *)_58]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _59 = MEM[(struct Flit * * *)_58 + 144B];
  # DEBUG D#91 => D#94
  _60 = MEM[(struct Flit * * *)_58 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_59 == _60)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 481, &__PRETTY_FUNCTION__);

  <bb 16>:
  # DEBUG this => cur_buf_20
  # DEBUG vc => vc_17
  # DEBUG D#43 => &cur_buf_20->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _54
  # DEBUG this => D#42
  _63 = MEM[(eVCState *)_58 + 176B];
  # DEBUG D#21 => _58
  # DEBUG this => D#21
  if (_63 != 1)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("cur_buf->GetState(vc) == VC::routing", "routers/iq_router.cpp", 482, &__PRETTY_FUNCTION__);

  <bb 18>:
  # DEBUG this => cur_buf_20
  # DEBUG vc => vc_17
  # DEBUG D#186 => &cur_buf_20->_vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _54
  # DEBUG this => D#42
  # DEBUG this => _58
  # DEBUG D#184 => &MEM[(const struct VC *)_58]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_58]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_64 = MEM[(struct Flit * const &)_60];
  # DEBUG f => iftmp.304_64
  if (iftmp.304_64 == 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 485, &__PRETTY_FUNCTION__);

  <bb 20>:
  _24 = MEM[(const struct Flit *)iftmp.304_64].vc;
  if (vc_17 != _24)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 486, &__PRETTY_FUNCTION__);

  <bb 22>:
  _25 = MEM[(const struct Flit *)iftmp.304_64].head;
  if (_25 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 487, &__PRETTY_FUNCTION__);

  <bb 24>:
  _26 = MEM[(const struct Flit *)iftmp.304_64].watch;
  if (_26 != 0)
    goto <bb 25>;
  else
    goto <bb 32>;

  <bb 25>:
  _27 = MEM[(const struct Flit *)iftmp.304_64].id;
  # DEBUG D#245 => &this_4(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#245
  # DEBUG D#246 => &MEM[(const struct Module *)this_4(D)]._fullname
  _30 = GetSimTime ();
  gWatchOut.316_31 = gWatchOut;
  _33 = std::basic_ostream<char>::operator<< (gWatchOut.316_31, _30);
  # DEBUG __out => _33
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_33, " | ", 3);
  # DEBUG __os => _33
  # DEBUG __str => D#246
  _34 = MEM[(long unsigned int *)this_4(D) + 48B];
  # DEBUG D#3 => D#246
  # DEBUG this => D#3
  _66 = (long int) _34;
  # DEBUG this => D#246
  _67 = MEM[(char * *)this_4(D) + 40B];
  # DEBUG D#1 => D#246
  # DEBUG this => D#1
  _68 = std::__ostream_insert<char, std::char_traits<char> > (_33, _67, _66);
  # DEBUG __out => _68
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_68, " | ", 3);
  # DEBUG __out => _68
  # DEBUG __s => "Beginning routing for VC "
  # DEBUG __s => "Beginning routing for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_68, "Beginning routing for VC ", 25);
  _36 = std::basic_ostream<char>::operator<< (_68, vc_17);
  # DEBUG __out => _36
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_36, " at input ", 10);
  _38 = std::basic_ostream<char>::operator<< (_36, input_15);
  # DEBUG __out => _38
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_38, " (front: ", 9);
  _40 = std::basic_ostream<char>::operator<< (_38, _27);
  # DEBUG __out => _40
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_40, ").", 2);
  # DEBUG this => _40
  # DEBUG __pf => endl
  # DEBUG __os => _40
  _85 = _40->_vptr.basic_ostream;
  _86 = MEM[(long int *)_85 + -24B];
  _87 = (sizetype) _86;
  _88 = _40 + _87;
  # DEBUG this => _88
  # DEBUG __c => 10
  _82 = MEM[(const struct basic_ios *)_88]._M_ctype;
  # DEBUG __f => _82
  if (_82 == 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  std::__throw_bad_cast ();

  <bb 27>:
  # DEBUG this => _82
  # DEBUG __c => 10
  _93 = MEM[(const struct ctype *)_82]._M_widen_ok;
  if (_93 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _96 = MEM[(const struct ctype *)_82]._M_widen[10];
  pretmp_71 = (int) _96;
  goto <bb 31>;

  <bb 29>:
  # DEBUG this => _82
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_82);
  _101 = MEM[(const struct ctype *)_82].D.24721._vptr.facet;
  _102 = MEM[(int (*__vtbl_ptr_type) () *)_101 + 48B];
  PROF_106 = [obj_type_ref] OBJ_TYPE_REF(_102;(const struct ctype)_82->6);
  if (PROF_106 == do_widen)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  _108 = OBJ_TYPE_REF(_102;(const struct ctype)_82->6) (_82, 10);
  pretmp_6 = (int) _108;

  <bb 31>:
  # prephitmp_65 = PHI <pretmp_71(28), 10(29), pretmp_6(30)>
  _91 = std::basic_ostream<char>::put (_40, prephitmp_65);
  # DEBUG __os => _91
  std::basic_ostream<char>::flush (_91);

  <bb 32>:
  # DEBUG this => &iter
  iter$_M_cur_69 = iter$_M_cur_126 + 12;
  # DEBUG iter$_M_cur => iter$_M_cur_69
  if (iter$_M_cur_69 == iter$_M_last_124)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 6>;

  <bb 34>:
  # DEBUG this => &iter
  iter$_M_node_112 = iter$_M_node_83 + 8;
  # DEBUG this => &iter
  # DEBUG __new_node => iter$_M_node_112
  # DEBUG iter$_M_node => iter$_M_node_112
  iter$_M_cur_113 = MEM[(struct pair * *)iter$_M_node_83 + 8B];
  # DEBUG __size => 12
  iter$_M_last_114 = iter$_M_cur_113 + 504;
  # DEBUG iter$_M_last => iter$_M_last_114
  # DEBUG iter$_M_cur => iter$_M_cur_113
  goto <bb 5>;

  <bb 35>:
  iter ={v} {CLOBBER};
  return;

}



;; Function void IQRouter::_SWHoldEvaluate() (_ZN8IQRouter15_SWHoldEvaluateEv, funcdef_no=2245, decl_uid=51698, cgraph_uid=690, symbol_order=691)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void IQRouter::_SWHoldEvaluate() (struct IQRouter * const this)
{
  struct pair * * iter$_M_node;
  struct pair * iter$_M_last;
  struct pair * iter$_M_cur;
  char_type D.120006;
  char __c;
  char_type D.120003;
  char __c;
  char_type D.120000;
  struct basic_ostream & D.119994;
  char_type D.119991;
  char __c;
  char_type D.119988;
  char __c;
  char_type D.119985;
  struct basic_ostream & D.119979;
  const struct BufferState * const dest_buf;
  const int expanded_output;
  const int expanded_input;
  const struct Buffer * const cur_buf;
  const int vc;
  const int input;
  const int time;
  struct iterator iter;
  static const char __PRETTY_FUNCTION__[33] = "void IQRouter::_SWHoldEvaluate()";
  const int iftmp.354_1;
  bool _9;
  struct Flit * * const _11;
  struct Flit * * const _12;
  struct VC * _14;
  int _16;
  struct VC * const & _18;
  int _20;
  long unsigned int _21;
  int _23;
  struct VC * * const _24;
  int _25;
  long unsigned int _26;
  long unsigned int _27;
  int _29;
  bool _30;
  int _31;
  int _33;
  struct ostream * gWatchOut.352_34;
  struct basic_ostream & _36;
  const size_type _37;
  struct basic_ostream & _39;
  struct basic_ostream & _41;
  struct basic_ostream & _43;
  int _44;
  int _45;
  int _46;
  long unsigned int _48;
  int _49;
  int _50;
  int _51;
  int _52;
  int _53;
  int _54;
  struct pair * _56;
  int _57;
  long unsigned int _58;
  bool _60;
  int _61;
  int _62;
  int _63;
  int _64;
  int _66;
  struct ostream * gWatchOut.352_67;
  struct basic_ostream & _69;
  const size_type _70;
  struct basic_ostream & _72;
  struct basic_ostream & _74;
  struct basic_ostream & _76;
  struct basic_ostream & _78;
  const int iftmp.354_81;
  const int iftmp.354_82;
  bool _84;
  int _85;
  int _86;
  int _87;
  int _88;
  int _91;
  struct ostream * gWatchOut.352_92;
  struct basic_ostream & _94;
  const size_type _95;
  struct basic_ostream & _97;
  struct basic_ostream & _99;
  struct basic_ostream & _101;
  struct basic_ostream & _103;
  const int _120;
  const int _121;
  struct BufferPolicy * const _122;
  struct Buffer * * _123;
  struct BufferState * * _124;
  int * _125;
  int * _126;
  int pretmp_127;
  long unsigned int _130;
  struct Buffer * & _131;
  const eVCState _132;
  struct Flit * iftmp.304_133;
  long int _135;
  char * const _136;
  struct basic_ostream & _137;
  long unsigned int _138;
  int & _139;
  struct VC * * const _140;
  struct VC * const & _141;
  struct VC * _142;
  const int _143;
  const int _144;
  int & _145;
  int (*__vtbl_ptr_type) () * _146;
  int (*__vtbl_ptr_type) () _147;
  bool _148;
  long unsigned int _149;
  struct BufferState * & _150;
  long int _151;
  char * const _152;
  struct basic_ostream & _153;
  long int _154;
  char * const _155;
  struct basic_ostream & _156;
  const struct __ctype_type * _171;
  const struct __ctype_type * _181;
  int (*__vtbl_ptr_type) () * _193;
  long int _194;
  sizetype _195;
  struct basic_ios * _196;
  struct basic_ostream & _199;
  char _201;
  char_type _204;
  int (*__vtbl_ptr_type) () * _209;
  int (*__vtbl_ptr_type) () _210;
  void * PROF_214;
  char_type _216;
  int (*__vtbl_ptr_type) () * _219;
  long int _220;
  sizetype _221;
  struct basic_ios * _222;
  struct basic_ostream & _225;
  char _227;
  char_type _230;
  int pretmp_234;
  int (*__vtbl_ptr_type) () * _235;
  int (*__vtbl_ptr_type) () _236;
  int pretmp_237;
  int pretmp_238;
  int prephitmp_239;
  void * PROF_240;
  int prephitmp_241;
  char_type _242;

  <bb 2>:
  _9 = this_8(D)->_hold_switch_for_packet;
  if (_9 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("_hold_switch_for_packet", "routers/iq_router.cpp", 933, &__PRETTY_FUNCTION__);

  <bb 4>:
  # DEBUG D#257 => &this_8(D)->_sw_hold_vcs
  # DEBUG this => D#257
  # DEBUG D#67 => &D#257->D.45936._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#67
  iter$_M_cur_104 = MEM[(const struct iterator &)this_8(D) + 608]._M_cur;
  # DEBUG iter$_M_cur => iter$_M_cur_104
  iter$_M_last_80 = MEM[(const struct iterator &)this_8(D) + 608]._M_last;
  # DEBUG iter$_M_last => iter$_M_last_80
  iter$_M_node_79 = MEM[(const struct iterator &)this_8(D) + 608]._M_node;
  # DEBUG iter$_M_node => iter$_M_node_79

  <bb 5>:
  # iter$_M_cur_271 = PHI <iter$_M_cur_104(4), iter$_M_cur_247(61)>
  # iter$_M_last_268 = PHI <iter$_M_last_80(4), iter$_M_last_248(61)>
  # iter$_M_node_191 = PHI <iter$_M_node_79(4), iter$_M_node_246(61)>

  <bb 65>:
  # DEBUG iter$_M_node => iter$_M_node_191
  # DEBUG iter$_M_last => iter$_M_last_268
  # DEBUG iter$_M_cur => iter$_M_cur_271

  <bb 6>:
  # iter$_M_cur_270 = PHI <iter$_M_cur_271(65), iter$_M_cur_158(60)>
  # DEBUG iter$_M_cur => iter$_M_cur_270
  # DEBUG D#268 => &this_8(D)->_sw_hold_vcs
  # DEBUG this => D#268
  # DEBUG D#68 => &D#268->D.45936._M_impl._M_finish
  # DEBUG this => &D.64981
  # DEBUG __x => D#68
  _56 = MEM[(const struct iterator &)this_8(D) + 640]._M_cur;
  # DEBUG D#271 => MEM[(const struct iterator &)this_8(D) + 640]._M_first
  # DEBUG D.94182 => D#271
  # DEBUG D#270 => MEM[(const struct iterator &)this_8(D) + 640]._M_last
  # DEBUG D.94183 => D#270
  # DEBUG D#269 => MEM[(const struct iterator &)this_8(D) + 640]._M_node
  # DEBUG D.94184 => D#269
  # DEBUG __x => &iter
  # DEBUG __y => &D.64981
  # DEBUG D#147 => &iter
  # DEBUG D#148 => &D.64981
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_56 != iter$_M_cur_270)
    goto <bb 7>;
  else
    goto <bb 62>;

  <bb 7>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  time_13 = iter$_M_cur_270->first;
  # DEBUG time => time_13
  if (time_13 >= 0)
    goto <bb 62>;
  else
    goto <bb 8>;

  <bb 8>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _16 = GetSimTime ();
  iter$_M_cur_270->first = _16;
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  input_19 = iter$_M_cur_270->second.first.first;
  # DEBUG input => input_19
  if (input_19 < 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  _20 = this_8(D)->D.51790._inputs;
  if (input_19 >= _20)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 946, &__PRETTY_FUNCTION__);

  <bb 11>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  vc_22 = iter$_M_cur_270->second.first.second;
  # DEBUG vc => vc_22
  if (vc_22 < 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  _23 = this_8(D)->_vcs;
  if (vc_22 >= _23)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 948, &__PRETTY_FUNCTION__);

  <bb 14>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _25 = iter$_M_cur_270->second.second;
  if (_25 != -1)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __assert_fail ("iter->second.second == -1", "routers/iq_router.cpp", 950, &__PRETTY_FUNCTION__);

  <bb 16>:
  _26 = (long unsigned int) input_19;
  # DEBUG D#258 => &this_8(D)->_buf
  _123 = MEM[(struct Buffer * * *)this_8(D) + 880B];
  # DEBUG D#53 => D#258
  # DEBUG __n => _26
  # DEBUG this => D#53
  _130 = _26 * 8;
  _131 = _123 + _130;
  cur_buf_28 = *_131;
  # DEBUG cur_buf => cur_buf_28
  # DEBUG this => cur_buf_28
  # DEBUG vc => vc_22
  _27 = (long unsigned int) vc_22;
  # DEBUG D#96 => &cur_buf_28->_vc
  _24 = MEM[(struct VC * * *)cur_buf_28 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _27
  # DEBUG this => D#42
  _21 = _27 * 8;
  _18 = _24 + _21;
  _14 = *_18;
  # DEBUG this => _14
  # DEBUG D#95 => &MEM[(const struct VC *)_14]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _12 = MEM[(struct Flit * * *)_14 + 144B];
  # DEBUG D#91 => D#94
  _11 = MEM[(struct Flit * * *)_14 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_11 == _12)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 953, &__PRETTY_FUNCTION__);

  <bb 18>:
  # DEBUG this => cur_buf_28
  # DEBUG vc => vc_22
  # DEBUG D#43 => &cur_buf_28->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _27
  # DEBUG this => D#42
  _132 = MEM[(eVCState *)_14 + 176B];
  # DEBUG D#21 => _14
  # DEBUG this => D#21
  if (_132 != 3)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  __assert_fail ("cur_buf->GetState(vc) == VC::active", "routers/iq_router.cpp", 954, &__PRETTY_FUNCTION__);

  <bb 20>:
  # DEBUG this => cur_buf_28
  # DEBUG vc => vc_22
  # DEBUG D#186 => &cur_buf_28->_vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _27
  # DEBUG this => D#42
  # DEBUG this => _14
  # DEBUG D#184 => &MEM[(const struct VC *)_14]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_14]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_133 = MEM[(struct Flit * const &)_11];
  # DEBUG f => iftmp.304_133
  if (iftmp.304_133 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 957, &__PRETTY_FUNCTION__);

  <bb 22>:
  _29 = MEM[(const struct Flit *)iftmp.304_133].vc;
  if (vc_22 != _29)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 958, &__PRETTY_FUNCTION__);

  <bb 24>:
  _30 = MEM[(const struct Flit *)iftmp.304_133].watch;
  if (_30 != 0)
    goto <bb 25>;
  else
    goto <bb 32>;

  <bb 25>:
  _31 = MEM[(const struct Flit *)iftmp.304_133].id;
  # DEBUG D#259 => &this_8(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#259
  # DEBUG D#260 => &MEM[(const struct Module *)this_8(D)]._fullname
  _33 = GetSimTime ();
  gWatchOut.352_34 = gWatchOut;
  _36 = std::basic_ostream<char>::operator<< (gWatchOut.352_34, _33);
  # DEBUG __out => _36
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_36, " | ", 3);
  # DEBUG __os => _36
  # DEBUG __str => D#260
  _37 = MEM[(long unsigned int *)this_8(D) + 48B];
  # DEBUG D#3 => D#260
  # DEBUG this => D#3
  _135 = (long int) _37;
  # DEBUG this => D#260
  _136 = MEM[(char * *)this_8(D) + 40B];
  # DEBUG D#1 => D#260
  # DEBUG this => D#1
  _137 = std::__ostream_insert<char, std::char_traits<char> > (_36, _136, _135);
  # DEBUG __out => _137
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_137, " | ", 3);
  # DEBUG __out => _137
  # DEBUG __s => "Beginning held switch allocation for VC "
  # DEBUG __s => "Beginning held switch allocation for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_137, "Beginning held switch allocation for VC ", 40);
  _39 = std::basic_ostream<char>::operator<< (_137, vc_22);
  # DEBUG __out => _39
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_39, " at input ", 10);
  _41 = std::basic_ostream<char>::operator<< (_39, input_19);
  # DEBUG __out => _41
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_41, " (front: ", 9);
  _43 = std::basic_ostream<char>::operator<< (_41, _31);
  # DEBUG __out => _43
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_43, ").", 2);
  # DEBUG this => _43
  # DEBUG __pf => endl
  # DEBUG __os => _43
  _193 = _43->_vptr.basic_ostream;
  _194 = MEM[(long int *)_193 + -24B];
  _195 = (sizetype) _194;
  _196 = _43 + _195;
  # DEBUG this => _196
  # DEBUG __c => 10
  _171 = MEM[(const struct basic_ios *)_196]._M_ctype;
  # DEBUG __f => _171
  if (_171 == 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  std::__throw_bad_cast ();

  <bb 27>:
  # DEBUG this => _171
  # DEBUG __c => 10
  _201 = MEM[(const struct ctype *)_171]._M_widen_ok;
  if (_201 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _204 = MEM[(const struct ctype *)_171]._M_widen[10];
  pretmp_234 = (int) _204;
  goto <bb 31>;

  <bb 29>:
  # DEBUG this => _171
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_171);
  _209 = MEM[(const struct ctype *)_171].D.24721._vptr.facet;
  _210 = MEM[(int (*__vtbl_ptr_type) () *)_209 + 48B];
  PROF_214 = [obj_type_ref] OBJ_TYPE_REF(_210;(const struct ctype)_171->6);
  if (PROF_214 == do_widen)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  _216 = OBJ_TYPE_REF(_210;(const struct ctype)_171->6) (_171, 10);
  pretmp_237 = (int) _216;

  <bb 31>:
  # prephitmp_241 = PHI <pretmp_234(28), 10(29), pretmp_237(30)>
  _199 = std::basic_ostream<char>::put (_43, prephitmp_241);
  # DEBUG __os => _199
  std::basic_ostream<char>::flush (_199);

  <bb 32>:
  _44 = this_8(D)->D.51790._input_speedup;
  _45 = input_19 * _44;
  _46 = vc_22 % _44;
  expanded_input_47 = _45 + _46;
  # DEBUG expanded_input => expanded_input_47
  _48 = (long unsigned int) expanded_input_47;
  # DEBUG D#261 => &this_8(D)->_switch_hold_vc
  _125 = MEM[(int * *)this_8(D) + 1120B];
  # DEBUG D#55 => D#261
  # DEBUG __n => _48
  # DEBUG this => D#55
  _138 = _48 * 4;
  _139 = _125 + _138;
  _49 = *_139;
  if (vc_22 != _49)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  __assert_fail ("_switch_hold_vc[expanded_input] == vc", "routers/iq_router.cpp", 969, &__PRETTY_FUNCTION__);

  <bb 34>:
  # DEBUG this => cur_buf_28
  # DEBUG vc => vc_22
  # DEBUG D#46 => &cur_buf_28->_vc
  _140 = MEM[(struct VC * * *)cur_buf_28 + 104B];
  # DEBUG D#42 => D#46
  # DEBUG __n => _27
  # DEBUG this => D#42
  _141 = _140 + _21;
  _142 = *_141;
  _143 = MEM[(int *)_142 + 192B];
  # DEBUG D#22 => _142
  # DEBUG this => D#22
  # DEBUG match_port => _143
  if (_143 < 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  _50 = this_8(D)->D.51790._outputs;
  if (_50 <= _143)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  __assert_fail ("(match_port >= 0) && (match_port < _outputs)", "routers/iq_router.cpp", 972, &__PRETTY_FUNCTION__);

  <bb 37>:
  # DEBUG this => cur_buf_28
  # DEBUG vc => vc_22
  # DEBUG D#47 => &cur_buf_28->_vc
  # DEBUG D#42 => D#47
  # DEBUG __n => _27
  # DEBUG this => D#42
  _144 = MEM[(int *)_142 + 196B];
  # DEBUG D#23 => _142
  # DEBUG this => D#23
  # DEBUG match_vc => _144
  if (_144 < 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  _51 = this_8(D)->_vcs;
  if (_51 <= _144)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  __assert_fail ("(match_vc >= 0) && (match_vc < _vcs)", "routers/iq_router.cpp", 974, &__PRETTY_FUNCTION__);

  <bb 40>:
  _52 = this_8(D)->D.51790._output_speedup;
  _53 = _52 * _143;
  _54 = input_19 % _52;
  expanded_output_55 = _53 + _54;
  # DEBUG expanded_output => expanded_output_55
  # DEBUG D#262 => &this_8(D)->_switch_hold_in
  _126 = MEM[(int * *)this_8(D) + 1072B];
  # DEBUG D#55 => D#262
  # DEBUG __n => _48
  # DEBUG this => D#55
  _145 = _126 + _138;
  _57 = *_145;
  if (expanded_output_55 != _57)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  __assert_fail ("_switch_hold_in[expanded_input] == expanded_output", "routers/iq_router.cpp", 977, &__PRETTY_FUNCTION__);

  <bb 42>:
  _58 = (long unsigned int) _143;
  # DEBUG D#263 => &this_8(D)->_next_buf
  _124 = MEM[(struct BufferState * * *)this_8(D) + 904B];
  # DEBUG D#54 => D#263
  # DEBUG __n => _58
  # DEBUG this => D#54
  _149 = _58 * 8;
  _150 = _124 + _149;
  dest_buf_59 = *_150;
  # DEBUG dest_buf => dest_buf_59
  _122 = MEM[(struct BufferPolicy * *)dest_buf_59 + 144B];
  # DEBUG D#32 => dest_buf_59
  # DEBUG vc => _144
  # DEBUG this => D#32
  _146 = _122->D.55980._vptr.Module;
  _147 = MEM[(int (*__vtbl_ptr_type) () *)_146 + 56B];
  _148 = OBJ_TYPE_REF(_147;(const struct BufferPolicy)_122->7) (_122, _144);
  if (_148 != 0)
    goto <bb 43>;
  else
    goto <bb 56>;

  <bb 43>:
  _60 = MEM[(const struct Flit *)iftmp.304_133].watch;
  if (_60 != 0)
    goto <bb 44>;
  else
    goto <bb 50>;

  <bb 44>:
  _61 = this_8(D)->D.51790._output_speedup;
  _62 = expanded_output_55 % _61;
  _63 = this_8(D)->D.51790._input_speedup;
  _64 = expanded_input_47 % _63;
  # DEBUG D#264 => &this_8(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#264
  # DEBUG D#265 => &MEM[(const struct Module *)this_8(D)]._fullname
  _66 = GetSimTime ();
  gWatchOut.352_67 = gWatchOut;
  _69 = std::basic_ostream<char>::operator<< (gWatchOut.352_67, _66);
  # DEBUG __out => _69
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_69, " | ", 3);
  # DEBUG __os => _69
  # DEBUG __str => D#265
  _70 = MEM[(long unsigned int *)this_8(D) + 48B];
  # DEBUG D#3 => D#265
  # DEBUG this => D#3
  _151 = (long int) _70;
  # DEBUG this => D#265
  _152 = MEM[(char * *)this_8(D) + 40B];
  # DEBUG D#1 => D#265
  # DEBUG this => D#1
  _153 = std::__ostream_insert<char, std::char_traits<char> > (_69, _152, _151);
  # DEBUG __out => _153
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_153, " | ", 3);
  # DEBUG __out => _153
  # DEBUG __s => "  Unable to reuse held connection from input "
  # DEBUG __s => "  Unable to reuse held connection from input "
  std::__ostream_insert<char, std::char_traits<char> > (_153, "  Unable to reuse held connection from input ", 45);
  _72 = std::basic_ostream<char>::operator<< (_153, input_19);
  # DEBUG __out => _72
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_72, ".", 1);
  _74 = std::basic_ostream<char>::operator<< (_72, _64);
  # DEBUG __out => _74
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_74, " to output ", 11);
  _76 = std::basic_ostream<char>::operator<< (_74, _143);
  # DEBUG __out => _76
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_76, ".", 1);
  _78 = std::basic_ostream<char>::operator<< (_76, _62);
  # DEBUG __out => _78
  # DEBUG __s => ": No credit available."
  # DEBUG __s => ": No credit available."
  std::__ostream_insert<char, std::char_traits<char> > (_78, ": No credit available.", 22);
  # DEBUG this => _78
  # DEBUG __pf => endl
  # DEBUG __os => _78
  _219 = _78->_vptr.basic_ostream;
  _220 = MEM[(long int *)_219 + -24B];
  _221 = (sizetype) _220;
  _222 = _78 + _221;
  # DEBUG this => _222
  # DEBUG __c => 10
  _181 = MEM[(const struct basic_ios *)_222]._M_ctype;
  # DEBUG __f => _181
  if (_181 == 0B)
    goto <bb 26>;
  else
    goto <bb 45>;

  <bb 45>:
  # DEBUG this => _181
  # DEBUG __c => 10
  _227 = MEM[(const struct ctype *)_181]._M_widen_ok;
  if (_227 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  _230 = MEM[(const struct ctype *)_181]._M_widen[10];
  pretmp_238 = (int) _230;
  goto <bb 49>;

  <bb 47>:
  # DEBUG this => _181
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_181);
  _235 = MEM[(const struct ctype *)_181].D.24721._vptr.facet;
  _236 = MEM[(int (*__vtbl_ptr_type) () *)_235 + 48B];
  PROF_240 = [obj_type_ref] OBJ_TYPE_REF(_236;(const struct ctype)_181->6);
  if (PROF_240 == do_widen)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 48>:
  _242 = OBJ_TYPE_REF(_236;(const struct ctype)_181->6) (_181, 10);
  pretmp_127 = (int) _242;

  <bb 49>:
  # prephitmp_239 = PHI <pretmp_238(46), 10(47), pretmp_127(48)>
  _225 = std::basic_ostream<char>::put (_78, prephitmp_239);
  # DEBUG __os => _225
  std::basic_ostream<char>::flush (_225);

  <bb 50>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _120 = MEM[(int *)dest_buf_59 + 100B];
  # DEBUG D#27 => dest_buf_59
  _121 = MEM[(int *)dest_buf_59 + 104B];
  # DEBUG D#27 => dest_buf_59
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (_120 < _121)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#28 => _120
  # DEBUG D#29 => _121
  BufferState::_ZNK11BufferState6IsFullEv.isra.23.part.24 ();

  <bb 52>:
  if (_120 == _121)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  iftmp.354_81 = STALL_BUFFER_FULL;
  goto <bb 55>;

  <bb 54>:
  iftmp.354_82 = STALL_BUFFER_RESERVED;

  <bb 55>:
  # iftmp.354_1 = PHI <iftmp.354_81(53), iftmp.354_82(54)>

  <bb 63>:
  iter$_M_cur_270->second.second = iftmp.354_1;
  goto <bb 59>;

  <bb 56>:
  _84 = MEM[(const struct Flit *)iftmp.304_133].watch;
  if (_84 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  _85 = this_8(D)->D.51790._output_speedup;
  _86 = expanded_output_55 % _85;
  _87 = this_8(D)->D.51790._input_speedup;
  _88 = expanded_input_47 % _87;
  # DEBUG D#266 => &this_8(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#266
  # DEBUG D#267 => &MEM[(const struct Module *)this_8(D)]._fullname
  _91 = GetSimTime ();
  gWatchOut.352_92 = gWatchOut;
  _94 = std::basic_ostream<char>::operator<< (gWatchOut.352_92, _91);
  # DEBUG __out => _94
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_94, " | ", 3);
  # DEBUG __os => _94
  # DEBUG __str => D#267
  _95 = MEM[(long unsigned int *)this_8(D) + 48B];
  # DEBUG D#3 => D#267
  # DEBUG this => D#3
  _154 = (long int) _95;
  # DEBUG this => D#267
  _155 = MEM[(char * *)this_8(D) + 40B];
  # DEBUG D#1 => D#267
  # DEBUG this => D#1
  _156 = std::__ostream_insert<char, std::char_traits<char> > (_94, _155, _154);
  # DEBUG __out => _156
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_156, " | ", 3);
  # DEBUG __out => _156
  # DEBUG __s => "  Reusing held connection from input "
  # DEBUG __s => "  Reusing held connection from input "
  std::__ostream_insert<char, std::char_traits<char> > (_156, "  Reusing held connection from input ", 37);
  _97 = std::basic_ostream<char>::operator<< (_156, input_19);
  # DEBUG __out => _97
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_97, ".", 1);
  _99 = std::basic_ostream<char>::operator<< (_97, _88);
  # DEBUG __out => _99
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_99, " to output ", 11);
  _101 = std::basic_ostream<char>::operator<< (_99, _143);
  # DEBUG __out => _101
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_101, ".", 1);
  _103 = std::basic_ostream<char>::operator<< (_101, _86);
  # DEBUG __out => _103
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_103, ".", 1);
  # DEBUG this => _103
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_103);

  <bb 58>:

  <bb 64>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  iter$_M_cur_270->second.second = expanded_output_55;

  <bb 59>:
  # DEBUG this => &iter
  iter$_M_cur_158 = iter$_M_cur_270 + 16;
  # DEBUG iter$_M_cur => iter$_M_cur_158
  if (iter$_M_cur_158 == iter$_M_last_268)
    goto <bb 61>;
  else
    goto <bb 60>;

  <bb 60>:
  goto <bb 6>;

  <bb 61>:
  # DEBUG this => &iter
  iter$_M_node_246 = iter$_M_node_191 + 8;
  # DEBUG this => &iter
  # DEBUG __new_node => iter$_M_node_246
  # DEBUG iter$_M_node => iter$_M_node_246
  iter$_M_cur_247 = MEM[(struct pair * *)iter$_M_node_191 + 8B];
  # DEBUG __size => 16
  iter$_M_last_248 = iter$_M_cur_247 + 512;
  # DEBUG iter$_M_last => iter$_M_last_248
  # DEBUG iter$_M_cur => iter$_M_cur_247
  goto <bb 5>;

  <bb 62>:
  iter ={v} {CLOBBER};
  return;

}



;; Function void IQRouter::_SwitchEvaluate() (_ZN8IQRouter15_SwitchEvaluateEv, funcdef_no=2250, decl_uid=51702, cgraph_uid=695, symbol_order=696)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void IQRouter::_SwitchEvaluate() (struct IQRouter * const this)
{
  struct pair * * iter$_M_node;
  struct pair * iter$_M_last;
  struct pair * iter$_M_cur;
  char_type D.120156;
  char __c;
  char_type D.120153;
  char __c;
  char_type D.120150;
  struct basic_ostream & D.120144;
  const int expanded_output;
  const int expanded_input;
  const struct Flit * const f;
  const int time;
  struct iterator iter;
  static const char __PRETTY_FUNCTION__[33] = "void IQRouter::_SwitchEvaluate()";
  int pretmp_5;
  struct pair * _6;
  int _9;
  int _10;
  int _11;
  int _12;
  int prephitmp_18;
  bool _20;
  int _21;
  int _22;
  int _23;
  int _24;
  int _25;
  int _26;
  int _27;
  int _30;
  struct ostream * gWatchOut.478_31;
  struct basic_ostream & _33;
  const size_type _34;
  struct basic_ostream & _36;
  struct basic_ostream & _38;
  struct basic_ostream & _40;
  struct basic_ostream & _42;
  struct basic_ostream & _44;
  long int _50;
  char * const _51;
  struct basic_ostream & _52;
  int pretmp_55;
  const struct __ctype_type * _68;
  int (*__vtbl_ptr_type) () * _71;
  long int _72;
  sizetype _73;
  struct basic_ios * _74;
  struct basic_ostream & _77;
  char _79;
  char_type _82;
  int (*__vtbl_ptr_type) () * _87;
  int (*__vtbl_ptr_type) () _88;
  void * PROF_92;
  char_type _94;

  <bb 2>:
  # DEBUG D#295 => &this_3(D)->_crossbar_flits
  # DEBUG this => D#295
  # DEBUG D#72 => &D#295->D.46860._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#72
  iter$_M_cur_28 = MEM[(const struct iterator &)this_3(D) + 768]._M_cur;
  # DEBUG iter$_M_cur => iter$_M_cur_28
  iter$_M_last_16 = MEM[(const struct iterator &)this_3(D) + 768]._M_last;
  # DEBUG iter$_M_last => iter$_M_last_16
  iter$_M_node_14 = MEM[(const struct iterator &)this_3(D) + 768]._M_node;
  # DEBUG iter$_M_node => iter$_M_node_14

  <bb 3>:
  # iter$_M_cur_113 = PHI <iter$_M_cur_28(2), iter$_M_cur_99(18)>
  # iter$_M_last_110 = PHI <iter$_M_last_16(2), iter$_M_last_100(18)>
  # iter$_M_node_69 = PHI <iter$_M_node_14(2), iter$_M_node_98(18)>

  <bb 20>:
  # DEBUG iter$_M_node => iter$_M_node_69
  # DEBUG iter$_M_last => iter$_M_last_110
  # DEBUG iter$_M_cur => iter$_M_cur_113

  <bb 4>:
  # iter$_M_cur_112 = PHI <iter$_M_cur_113(20), iter$_M_cur_53(17)>
  # DEBUG iter$_M_cur => iter$_M_cur_112
  # DEBUG D#298 => &this_3(D)->_crossbar_flits
  # DEBUG this => D#298
  # DEBUG D#73 => &D#298->D.46860._M_impl._M_finish
  # DEBUG this => &D.65679
  # DEBUG __x => D#73
  _6 = MEM[(const struct iterator &)this_3(D) + 800]._M_cur;
  # DEBUG D#301 => MEM[(const struct iterator &)this_3(D) + 800]._M_first
  # DEBUG D.94462 => D#301
  # DEBUG D#300 => MEM[(const struct iterator &)this_3(D) + 800]._M_last
  # DEBUG D.94463 => D#300
  # DEBUG D#299 => MEM[(const struct iterator &)this_3(D) + 800]._M_node
  # DEBUG D.94464 => D#299
  # DEBUG __x => &iter
  # DEBUG __y => &D.65679
  # DEBUG D#151 => &iter
  # DEBUG D#152 => &D.65679
  # DEBUG __x => D#151
  # DEBUG __y => D#152
  if (_6 != iter$_M_cur_112)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#74 => &iter
  # DEBUG this => D#74
  time_7 = iter$_M_cur_112->first;
  # DEBUG time => time_7
  if (time_7 >= 0)
    goto <bb 19>;
  else
    goto <bb 6>;

  <bb 6>:
  # DEBUG D#74 => &iter
  # DEBUG this => D#74
  _9 = GetSimTime ();
  _10 = this_3(D)->D.51790._crossbar_delay;
  _11 = _9 + _10;
  _12 = _11 + -1;
  iter$_M_cur_112->first = _12;
  # DEBUG D#74 => &iter
  # DEBUG this => D#74
  f_15 = iter$_M_cur_112->second.first;
  # DEBUG f => f_15
  if (f_15 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("f", "routers/iq_router.cpp", 2148, &__PRETTY_FUNCTION__);

  <bb 8>:
  # DEBUG D#74 => &iter
  # DEBUG this => D#74
  # DEBUG D#2349 => iter$_M_cur_112->second.second.first
  # DEBUG expanded_input => D#2349
  # DEBUG D#74 => &iter
  # DEBUG this => D#74
  # DEBUG D#2348 => iter$_M_cur_112->second.second.second
  # DEBUG expanded_output => D#2348
  _20 = f_15->watch;
  if (_20 != 0)
    goto <bb 9>;
  else
    goto <bb 16>;

  <bb 9>:
  expanded_input_17 = iter$_M_cur_112->second.second.first;
  expanded_output_19 = iter$_M_cur_112->second.second.second;
  _21 = this_3(D)->D.51790._output_speedup;
  _22 = expanded_output_19 % _21;
  _23 = expanded_output_19 / _21;
  _24 = this_3(D)->D.51790._input_speedup;
  _25 = expanded_input_17 % _24;
  _26 = expanded_input_17 / _24;
  _27 = f_15->id;
  # DEBUG D#296 => &this_3(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#296
  # DEBUG D#297 => &MEM[(const struct Module *)this_3(D)]._fullname
  _30 = GetSimTime ();
  gWatchOut.478_31 = gWatchOut;
  _33 = std::basic_ostream<char>::operator<< (gWatchOut.478_31, _30);
  # DEBUG __out => _33
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_33, " | ", 3);
  # DEBUG __os => _33
  # DEBUG __str => D#297
  _34 = MEM[(long unsigned int *)this_3(D) + 48B];
  # DEBUG D#3 => D#297
  # DEBUG this => D#3
  _50 = (long int) _34;
  # DEBUG this => D#297
  _51 = MEM[(char * *)this_3(D) + 40B];
  # DEBUG D#1 => D#297
  # DEBUG this => D#1
  _52 = std::__ostream_insert<char, std::char_traits<char> > (_33, _51, _50);
  # DEBUG __out => _52
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_52, " | ", 3);
  # DEBUG __out => _52
  # DEBUG __s => "Beginning crossbar traversal for flit "
  # DEBUG __s => "Beginning crossbar traversal for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_52, "Beginning crossbar traversal for flit ", 38);
  _36 = std::basic_ostream<char>::operator<< (_52, _27);
  # DEBUG __out => _36
  # DEBUG __s => " from input "
  # DEBUG __s => " from input "
  std::__ostream_insert<char, std::char_traits<char> > (_36, " from input ", 12);
  _38 = std::basic_ostream<char>::operator<< (_36, _26);
  # DEBUG __out => _38
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_38, ".", 1);
  _40 = std::basic_ostream<char>::operator<< (_38, _25);
  # DEBUG __out => _40
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_40, " to output ", 11);
  _42 = std::basic_ostream<char>::operator<< (_40, _23);
  # DEBUG __out => _42
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_42, ".", 1);
  _44 = std::basic_ostream<char>::operator<< (_42, _22);
  # DEBUG __out => _44
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_44, ".", 1);
  # DEBUG this => _44
  # DEBUG __pf => endl
  # DEBUG __os => _44
  _71 = _44->_vptr.basic_ostream;
  _72 = MEM[(long int *)_71 + -24B];
  _73 = (sizetype) _72;
  _74 = _44 + _73;
  # DEBUG this => _74
  # DEBUG __c => 10
  _68 = MEM[(const struct basic_ios *)_74]._M_ctype;
  # DEBUG __f => _68
  if (_68 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  std::__throw_bad_cast ();

  <bb 11>:
  # DEBUG this => _68
  # DEBUG __c => 10
  _79 = MEM[(const struct ctype *)_68]._M_widen_ok;
  if (_79 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _82 = MEM[(const struct ctype *)_68]._M_widen[10];
  pretmp_55 = (int) _82;
  goto <bb 15>;

  <bb 13>:
  # DEBUG this => _68
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_68);
  _87 = MEM[(const struct ctype *)_68].D.24721._vptr.facet;
  _88 = MEM[(int (*__vtbl_ptr_type) () *)_87 + 48B];
  PROF_92 = [obj_type_ref] OBJ_TYPE_REF(_88;(const struct ctype)_68->6);
  if (PROF_92 == do_widen)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  _94 = OBJ_TYPE_REF(_88;(const struct ctype)_68->6) (_68, 10);
  pretmp_5 = (int) _94;

  <bb 15>:
  # prephitmp_18 = PHI <pretmp_55(12), 10(13), pretmp_5(14)>
  _77 = std::basic_ostream<char>::put (_44, prephitmp_18);
  # DEBUG __os => _77
  std::basic_ostream<char>::flush (_77);

  <bb 16>:
  # DEBUG this => &iter
  iter$_M_cur_53 = iter$_M_cur_112 + 24;
  # DEBUG iter$_M_cur => iter$_M_cur_53
  if (iter$_M_cur_53 == iter$_M_last_110)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # DEBUG this => &iter
  iter$_M_node_98 = iter$_M_node_69 + 8;
  # DEBUG this => &iter
  # DEBUG __new_node => iter$_M_node_98
  # DEBUG iter$_M_node => iter$_M_node_98
  iter$_M_cur_99 = MEM[(struct pair * *)iter$_M_node_69 + 8B];
  # DEBUG __size => 24
  iter$_M_last_100 = iter$_M_cur_99 + 504;
  # DEBUG iter$_M_last => iter$_M_last_100
  # DEBUG iter$_M_cur => iter$_M_cur_99
  goto <bb 3>;

  <bb 19>:
  iter ={v} {CLOBBER};
  return;

}



;; Function void IQRouter::_SendFlits() (_ZN8IQRouter10_SendFlitsEv, funcdef_no=2253, decl_uid=51716, cgraph_uid=698, symbol_order=699)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void IQRouter::_SendFlits() (struct IQRouter * const this)
{
  char_type D.120254;
  char __c;
  char_type D.120251;
  char __c;
  char_type D.120248;
  char_type D.120242;
  char __c;
  char_type D.120239;
  char __c;
  char_type D.120236;
  struct basic_ostream & D.120230;
  struct basic_ostream & D.120227;
  char_type D.120224;
  char __c;
  char_type D.120221;
  char __c;
  char_type D.120218;
  struct basic_ostream & D.120212;
  struct Flit * const f;
  int output;
  static const char __PRETTY_FUNCTION__[28] = "void IQRouter::_SendFlits()";
  long unsigned int _9;
  struct queue & _10;
  long unsigned int _11;
  bool _13;
  int _14;
  struct Flit * * const _15;
  int _17;
  struct ostream * gWatchOut.491_18;
  struct basic_ostream & _20;
  const size_type _21;
  struct basic_ostream & _23;
  struct basic_ostream & _25;
  bool gTrace.492_26;
  struct basic_ostream & _28;
  struct Flit * * const _30;
  struct FlitChannel * _31;
  int (*__vtbl_ptr_type) () * _32;
  int (*__vtbl_ptr_type) () _33;
  struct FlitChannel * * _37;
  struct queue * _38;
  struct Flit * * _40;
  struct Flit * * _41;
  struct Flit * * _42;
  long int _43;
  char * const _44;
  struct basic_ostream & _45;
  long unsigned int _46;
  struct FlitChannel * & _47;
  int (*__vtbl_ptr_type) () * _49;
  const struct __ctype_type * _57;
  const struct __ctype_type * _59;
  int (*__vtbl_ptr_type) () * _61;
  struct Flit * * _62;
  struct Flit * * * _63;
  struct Flit * * * _64;
  struct Flit * * _65;
  struct Flit * * _66;
  long int _67;
  sizetype _68;
  struct basic_ios * _69;
  struct basic_ostream & _72;
  char _74;
  char_type _77;
  int (*__vtbl_ptr_type) () * _82;
  int (*__vtbl_ptr_type) () _83;
  void * PROF_87;
  char_type _89;
  int (*__vtbl_ptr_type) () * _92;
  long int _93;
  sizetype _94;
  struct basic_ios * _95;
  struct basic_ostream & _98;
  int _99;
  long int _100;
  sizetype _101;
  struct basic_ios * _102;
  struct basic_ostream & _105;
  struct basic_ostream & _106;
  char _107;
  char_type _110;
  int prephitmp_111;
  int (*__vtbl_ptr_type) () * _115;
  int (*__vtbl_ptr_type) () _116;
  int pretmp_117;
  void * PROF_120;
  int pretmp_121;
  char_type _122;
  int pretmp_123;
  int prephitmp_124;
  const struct __ctype_type * _125;
  char _126;
  int prephitmp_127;
  int pretmp_128;
  char_type _129;
  int pretmp_130;
  int prephitmp_133;
  int (*__vtbl_ptr_type) () * _134;
  int (*__vtbl_ptr_type) () _135;
  int pretmp_136;
  void * PROF_139;
  int prephitmp_140;
  char_type _141;
  int pretmp_163;

  <bb 2>:
  # DEBUG output => 0
  # DEBUG output => 0
  _99 = this_7(D)->D.51790._outputs;
  if (_99 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:

  <bb 34>:
  return;

  <bb 4>:

  <bb 5>:
  # output_70 = PHI <0(4), output_36(33)>
  # prephitmp_111 = PHI <_99(4), prephitmp_140(33)>
  # DEBUG output => output_70
  _9 = (long unsigned int) output_70;
  # DEBUG D#988 => &this_7(D)->_output_buffer
  _38 = MEM[(struct queue * *)this_7(D) + 1016B];
  # DEBUG D#71 => D#988
  # DEBUG __n => _9
  # DEBUG this => D#71
  _11 = _9 * 80;
  _10 = _38 + _11;
  # DEBUG this => NULL
  # DEBUG this => D#97
  # DEBUG D#93 => &D#97->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#97->D.54933._M_impl._M_finish
  _30 = MEM[(struct Flit * * *)_10 + 48B];
  # DEBUG D#91 => D#94
  _15 = MEM[(struct Flit * * *)_10 + 16B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_15 != _30)
    goto <bb 6>;
  else
    goto <bb 32>;

  <bb 6>:
  # DEBUG D#989 => &this_7(D)->_output_buffer
  # DEBUG D#71 => D#989
  # DEBUG __n => _9
  # DEBUG this => D#71
  # DEBUG this => NULL
  # DEBUG this => D#312
  # DEBUG this => D#312
  # DEBUG D#126 => &D#312->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#311 => MEM[(const struct iterator &)D#312 + 16]._M_first
  # DEBUG D.94506 => D#311
  # DEBUG D#310 => MEM[(const struct iterator &)D#312 + 16]._M_last
  # DEBUG D.94507 => D#310
  # DEBUG D#309 => MEM[(const struct iterator &)D#312 + 16]._M_node
  # DEBUG D.94508 => D#309
  # DEBUG this => D#308
  f_12 = *_15;
  # DEBUG f => f_12
  if (f_12 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("f", "routers/iq_router.cpp", 2244, &__PRETTY_FUNCTION__);

  <bb 8>:
  # DEBUG D#990 => &this_7(D)->_output_buffer
  # DEBUG D#71 => D#990
  # DEBUG __n => _9
  # DEBUG this => D#71
  # DEBUG this => NULL
  # DEBUG D#2350 => &_10->c
  # DEBUG this => D#2350
  _40 = MEM[(struct deque *)_10].D.54933._M_impl._M_start._M_last;
  _41 = _40 + 18446744073709551608;
  if (_15 != _41)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#987 => D#2350->D.54933._M_impl._M_start._M_cur
  # DEBUG D#986 => &D#2350->D.54933._M_impl
  # DEBUG D#421 => D#986
  # DEBUG D#422 => D#987
  # DEBUG __a => D#421
  # DEBUG __p => D#422
  # DEBUG D#420 => D#422
  # DEBUG D#419 => D#421
  # DEBUG D#417 => D#419
  # DEBUG D#418 => D#420
  # DEBUG this => D#417
  # DEBUG __p => D#418
  _42 = _15 + 8;
  MEM[(struct deque *)_10].D.54933._M_impl._M_start._M_cur = _42;
  goto <bb 11>;

  <bb 10>:
  # DEBUG this => D#2350
  # DEBUG this => D#2350
  # DEBUG D#985 => D#2350->D.54933._M_impl._M_start._M_cur
  # DEBUG D#982 => &D#2350->D.54933
  # DEBUG this => D#982
  # DEBUG D#422 => D#985
  # DEBUG __a => D#421
  # DEBUG __p => D#422
  # DEBUG D#420 => D#422
  # DEBUG D#419 => D#421
  # DEBUG D#417 => D#419
  # DEBUG D#418 => D#420
  # DEBUG this => D#417
  # DEBUG __p => D#418
  _62 = MEM[(struct deque *)_10].D.54933._M_impl._M_start._M_first;
  # DEBUG D#984 => &D#2350->D.54933
  # DEBUG D#981 => D#984
  # DEBUG __p => _62
  # DEBUG this => D#981
  # DEBUG D#980 => D#981
  # DEBUG __size => 8
  # DEBUG D#979 => &D#980->_M_impl
  # DEBUG D#977 => D#979
  # DEBUG __p => _62
  # DEBUG __a => D#977
  # DEBUG __n => D#978
  # DEBUG D#976 => D#978
  # DEBUG D#975 => D#977
  # DEBUG D#973 => D#975
  # DEBUG D#974 => D#976
  # DEBUG __p => _62
  # DEBUG this => D#973
  # DEBUG D.120206 => D#974
  operator delete (_62);
  _63 = MEM[(struct deque *)_10].D.54933._M_impl._M_start._M_node;
  _64 = _63 + 8;
  # DEBUG D#983 => &D#2350->D.54933._M_impl._M_start
  # DEBUG this => D#983
  # DEBUG __new_node => _64
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_node = _64;
  _65 = MEM[(struct Flit * * *)_63 + 8B];
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_first = _65;
  # DEBUG __size => 8
  _66 = _65 + 512;
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_last = _66;
  MEM[(struct deque *)_10].D.54933._M_impl._M_start._M_cur = _65;

  <bb 11>:
  _13 = f_12->watch;
  if (_13 != 0)
    goto <bb 12>;
  else
    goto <bb 19>;

  <bb 12>:
  _14 = f_12->id;
  # DEBUG D#991 => &this_7(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#991
  _17 = GetSimTime ();
  gWatchOut.491_18 = gWatchOut;
  _20 = std::basic_ostream<char>::operator<< (gWatchOut.491_18, _17);
  # DEBUG __out => _20
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_20, " | ", 3);
  # DEBUG __os => _20
  # DEBUG __str => NULL
  _21 = MEM[(long unsigned int *)this_7(D) + 48B];
  # DEBUG this => D#3
  _43 = (long int) _21;
  # DEBUG this => NULL
  _44 = MEM[(char * *)this_7(D) + 40B];
  # DEBUG this => D#1
  _45 = std::__ostream_insert<char, std::char_traits<char> > (_20, _44, _43);
  # DEBUG __out => _45
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_45, " | ", 3);
  # DEBUG __out => _45
  # DEBUG __s => "Sending flit "
  # DEBUG __s => "Sending flit "
  std::__ostream_insert<char, std::char_traits<char> > (_45, "Sending flit ", 13);
  _23 = std::basic_ostream<char>::operator<< (_45, _14);
  # DEBUG __out => _23
  # DEBUG __s => " to channel at output "
  # DEBUG __s => " to channel at output "
  std::__ostream_insert<char, std::char_traits<char> > (_23, " to channel at output ", 22);
  _25 = std::basic_ostream<char>::operator<< (_23, output_70);
  # DEBUG __out => _25
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_25, ".", 1);
  # DEBUG this => _25
  # DEBUG __pf => endl
  # DEBUG __os => _25
  _49 = _25->_vptr.basic_ostream;
  _67 = MEM[(long int *)_49 + -24B];
  _68 = (sizetype) _67;
  _69 = _25 + _68;
  # DEBUG this => _69
  # DEBUG __c => 10
  _57 = MEM[(const struct basic_ios *)_69]._M_ctype;
  # DEBUG __f => _57
  if (_57 == 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  std::__throw_bad_cast ();

  <bb 14>:
  # DEBUG this => _57
  # DEBUG __c => 10
  _74 = MEM[(const struct ctype *)_57]._M_widen_ok;
  if (_74 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _77 = MEM[(const struct ctype *)_57]._M_widen[10];
  pretmp_128 = (int) _77;
  goto <bb 18>;

  <bb 16>:
  # DEBUG this => _57
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_57);
  _82 = MEM[(const struct ctype *)_57].D.24721._vptr.facet;
  _83 = MEM[(int (*__vtbl_ptr_type) () *)_82 + 48B];
  PROF_87 = [obj_type_ref] OBJ_TYPE_REF(_83;(const struct ctype)_57->6);
  if (PROF_87 == do_widen)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  _89 = OBJ_TYPE_REF(_83;(const struct ctype)_57->6) (_57, 10);
  pretmp_130 = (int) _89;

  <bb 18>:
  # prephitmp_133 = PHI <pretmp_128(15), 10(16), pretmp_130(17)>
  _72 = std::basic_ostream<char>::put (_25, prephitmp_133);
  # DEBUG __os => _72
  std::basic_ostream<char>::flush (_72);

  <bb 19>:
  gTrace.492_26 = gTrace;
  if (gTrace.492_26 != 0)
    goto <bb 20>;
  else
    goto <bb 31>;

  <bb 20>:
  # DEBUG __out => &cout
  # DEBUG __s => "Outport "
  # DEBUG __s => "Outport "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Outport ", 8);
  _28 = std::basic_ostream<char>::operator<< (&cout, output_70);
  # DEBUG this => _28
  # DEBUG __pf => endl
  # DEBUG __os => _28
  _61 = _28->_vptr.basic_ostream;
  _100 = MEM[(long int *)_61 + -24B];
  _101 = (sizetype) _100;
  _102 = _28 + _101;
  # DEBUG this => _102
  # DEBUG __c => 10
  _59 = MEM[(const struct basic_ios *)_102]._M_ctype;
  # DEBUG __f => _59
  if (_59 == 0B)
    goto <bb 13>;
  else
    goto <bb 21>;

  <bb 21>:
  # DEBUG this => _59
  # DEBUG __c => 10
  _107 = MEM[(const struct ctype *)_59]._M_widen_ok;
  if (_107 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _110 = MEM[(const struct ctype *)_59]._M_widen[10];
  pretmp_117 = (int) _110;
  goto <bb 25>;

  <bb 23>:
  # DEBUG this => _59
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_59);
  _115 = MEM[(const struct ctype *)_59].D.24721._vptr.facet;
  _116 = MEM[(int (*__vtbl_ptr_type) () *)_115 + 48B];
  PROF_120 = [obj_type_ref] OBJ_TYPE_REF(_116;(const struct ctype)_59->6);
  if (PROF_120 == do_widen)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  _122 = OBJ_TYPE_REF(_116;(const struct ctype)_59->6) (_59, 10);
  pretmp_121 = (int) _122;

  <bb 25>:
  # prephitmp_124 = PHI <pretmp_117(22), 10(23), pretmp_121(24)>
  _105 = std::basic_ostream<char>::put (_28, prephitmp_124);
  # DEBUG __os => _105
  _106 = std::basic_ostream<char>::flush (_105);
  # DEBUG __out => NULL
  # DEBUG __s => "Stop Mark"
  # DEBUG __s => "Stop Mark"
  std::__ostream_insert<char, std::char_traits<char> > (_106, "Stop Mark", 9);
  # DEBUG this => NULL
  # DEBUG __pf => endl
  # DEBUG __os => NULL
  _92 = _106->_vptr.basic_ostream;
  _93 = MEM[(long int *)_92 + -24B];
  _94 = (sizetype) _93;
  _95 = _106 + _94;
  # DEBUG this => _95
  # DEBUG __c => 10
  _125 = MEM[(const struct basic_ios *)_95]._M_ctype;
  # DEBUG __f => _125
  if (_125 == 0B)
    goto <bb 13>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG this => _125
  # DEBUG __c => 10
  _126 = MEM[(const struct ctype *)_125]._M_widen_ok;
  if (_126 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _129 = MEM[(const struct ctype *)_125]._M_widen[10];
  pretmp_163 = (int) _129;
  goto <bb 30>;

  <bb 28>:
  # DEBUG this => _125
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_125);
  _134 = MEM[(const struct ctype *)_125].D.24721._vptr.facet;
  _135 = MEM[(int (*__vtbl_ptr_type) () *)_134 + 48B];
  PROF_139 = [obj_type_ref] OBJ_TYPE_REF(_135;(const struct ctype)_125->6);
  if (PROF_139 == do_widen)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  _141 = OBJ_TYPE_REF(_135;(const struct ctype)_125->6) (_125, 10);
  pretmp_123 = (int) _141;

  <bb 30>:
  # prephitmp_127 = PHI <pretmp_163(27), 10(28), pretmp_123(29)>
  _98 = std::basic_ostream<char>::put (_106, prephitmp_127);
  # DEBUG __os => _98
  std::basic_ostream<char>::flush (_98);

  <bb 31>:
  # DEBUG D#992 => &this_7(D)->D.51790._output_channels
  _37 = MEM[(struct FlitChannel * * *)this_7(D) + 192B];
  # DEBUG D#62 => D#992
  # DEBUG __n => _9
  # DEBUG this => D#62
  _46 = _9 * 8;
  _47 = _37 + _46;
  _31 = *_47;
  _32 = _31->D.35459.D.34853.D.31271._vptr.Module;
  _33 = MEM[(int (*__vtbl_ptr_type) () *)_32 + 48B];
  OBJ_TYPE_REF(_33;(struct FlitChannel)_31->6) (_31, f_12);
  pretmp_136 = this_7(D)->D.51790._outputs;

  <bb 32>:
  # prephitmp_140 = PHI <prephitmp_111(5), pretmp_136(31)>
  output_36 = output_70 + 1;
  # DEBUG output => output_36
  # DEBUG output => output_36
  if (output_36 >= prephitmp_140)
    goto <bb 3>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 5>;

}



;; Function void IQRouter::_SendCredits() (_ZN8IQRouter12_SendCreditsEv, funcdef_no=2254, decl_uid=51718, cgraph_uid=699, symbol_order=700)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void IQRouter::_SendCredits() (struct IQRouter * const this)
{
  struct Credit * const c;
  int input;
  long unsigned int _7;
  struct queue & _8;
  long unsigned int _9;
  struct Credit * * const _11;
  struct Credit * * const _12;
  struct Channel * _13;
  int (*__vtbl_ptr_type) () * _14;
  int (*__vtbl_ptr_type) () _15;
  struct Credit * * _17;
  struct Channel * * _19;
  struct queue * _20;
  long unsigned int _21;
  struct Channel * & _22;
  struct Credit * * _24;
  struct Credit * * _25;
  struct Credit * * _26;
  void * PROF_30;
  struct Credit * * * _32;
  struct Credit * * * _33;
  struct Credit * * _34;
  struct Credit * * _35;
  int _46;
  int prephitmp_61;
  int pretmp_63;
  int pretmp_64;
  int prephitmp_65;

  <bb 2>:
  # DEBUG input => 0
  # DEBUG input => 0
  _46 = this_5(D)->D.51790._inputs;
  if (_46 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:

  <bb 16>:
  return;

  <bb 4>:

  <bb 5>:
  # input_45 = PHI <0(4), input_18(15)>
  # prephitmp_61 = PHI <_46(4), prephitmp_65(15)>
  # DEBUG input => input_45
  _7 = (long unsigned int) input_45;
  # DEBUG D#1030 => &this_5(D)->_credit_buffer
  _20 = MEM[(struct queue * *)this_5(D) + 1040B];
  # DEBUG D#75 => D#1030
  # DEBUG __n => _7
  # DEBUG this => D#75
  _9 = _7 * 80;
  _8 = _20 + _9;
  # DEBUG this => NULL
  # DEBUG this => D#317
  # DEBUG D#315 => &D#317->D.62618._M_impl._M_start
  # DEBUG D#316 => &D#317->D.62618._M_impl._M_finish
  _12 = MEM[(struct Credit * * *)_8 + 48B];
  # DEBUG D#313 => D#316
  _11 = MEM[(struct Credit * * *)_8 + 16B];
  # DEBUG D#314 => D#315
  # DEBUG __x => D#313
  # DEBUG __y => D#314
  if (_11 != _12)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#1031 => &this_5(D)->_credit_buffer
  # DEBUG D#75 => D#1031
  # DEBUG __n => _7
  # DEBUG this => D#75
  # DEBUG this => NULL
  # DEBUG this => D#322
  # DEBUG this => D#322
  # DEBUG D#133 => &D#322->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#321 => MEM[(const struct iterator &)D#322 + 16]._M_first
  # DEBUG D.94551 => D#321
  # DEBUG D#320 => MEM[(const struct iterator &)D#322 + 16]._M_last
  # DEBUG D.94552 => D#320
  # DEBUG D#319 => MEM[(const struct iterator &)D#322 + 16]._M_node
  # DEBUG D.94553 => D#319
  # DEBUG this => D#318
  c_10 = *_11;
  # DEBUG c => c_10
  if (c_10 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#1034 => this_5(D)
  # DEBUG D#1035 => D#1034
  # DEBUG this => D#1035
  __assert_fail ("c", "routers/iq_router.cpp", 2269, &__PRETTY_FUNCTION__);

  <bb 8>:
  # DEBUG D#1032 => &this_5(D)->_credit_buffer
  # DEBUG D#75 => D#1032
  # DEBUG __n => _7
  # DEBUG this => D#75
  # DEBUG this => NULL
  # DEBUG D#2352 => &_8->c
  # DEBUG this => D#2352
  _24 = MEM[(struct deque *)_8].D.62618._M_impl._M_start._M_last;
  _25 = _24 + 18446744073709551608;
  if (_11 != _25)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG D#1029 => D#2352->D.62618._M_impl._M_start._M_cur
  # DEBUG D#1028 => &D#2352->D.62618._M_impl
  # DEBUG D#427 => D#1028
  # DEBUG D#428 => D#1029
  # DEBUG __a => D#427
  # DEBUG __p => D#428
  # DEBUG D#426 => D#428
  # DEBUG D#425 => D#427
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#426
  # DEBUG this => D#423
  # DEBUG __p => D#424
  _26 = _11 + 8;
  MEM[(struct deque *)_8].D.62618._M_impl._M_start._M_cur = _26;
  goto <bb 11>;

  <bb 10>:
  # DEBUG this => D#2352
  # DEBUG this => D#2352
  # DEBUG D#1027 => D#2352->D.62618._M_impl._M_start._M_cur
  # DEBUG D#1024 => &D#2352->D.62618
  # DEBUG this => D#1024
  # DEBUG D#428 => D#1027
  # DEBUG __a => D#427
  # DEBUG __p => D#428
  # DEBUG D#426 => D#428
  # DEBUG D#425 => D#427
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#426
  # DEBUG this => D#423
  # DEBUG __p => D#424
  _17 = MEM[(struct deque *)_8].D.62618._M_impl._M_start._M_first;
  # DEBUG D#1026 => &D#2352->D.62618
  # DEBUG this => D#1026
  # DEBUG __p => _17
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#1026->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _17
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _17
  # DEBUG this => D#1017
  # DEBUG D.120326 => D#1018
  operator delete (_17);
  _32 = MEM[(struct deque *)_8].D.62618._M_impl._M_start._M_node;
  _33 = _32 + 8;
  # DEBUG D#1025 => &D#2352->D.62618._M_impl._M_start
  # DEBUG this => D#1025
  # DEBUG __new_node => _33
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_node = _33;
  _34 = MEM[(struct Credit * * *)_32 + 8B];
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_first = _34;
  # DEBUG __size => 8
  _35 = _34 + 512;
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_last = _35;
  MEM[(struct deque *)_8].D.62618._M_impl._M_start._M_cur = _34;

  <bb 11>:
  # DEBUG D#1033 => &this_5(D)->D.51790._input_credits
  _19 = MEM[(struct Channel * * *)this_5(D) + 168B];
  # DEBUG D#63 => D#1033
  # DEBUG __n => _7
  # DEBUG this => D#63
  _21 = _7 * 8;
  _22 = _19 + _21;
  _13 = *_22;
  _14 = _13->D.63957.D.31271._vptr.Module;
  _15 = MEM[(int (*__vtbl_ptr_type) () *)_14 + 48B];
  PROF_30 = [obj_type_ref] OBJ_TYPE_REF(_15;(struct Channel)_13->6);
  if (PROF_30 == Send)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => _13
  # DEBUG data => c_10
  _13->_input = c_10;
  pretmp_63 = this_5(D)->D.51790._inputs;
  goto <bb 14>;

  <bb 13>:
  OBJ_TYPE_REF(_15;(struct Channel)_13->6) (_13, c_10);
  pretmp_64 = this_5(D)->D.51790._inputs;

  <bb 14>:
  # prephitmp_65 = PHI <prephitmp_61(5), pretmp_63(12), pretmp_64(13)>
  input_18 = input_45 + 1;
  # DEBUG input => input_18
  # DEBUG input => input_18
  if (input_18 >= prephitmp_65)
    goto <bb 3>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 5>;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >] (_ZNSt6vectorISt5queueIP4FlitSt5dequeIS2_SaIS2_EEESaIS6_EED2Ev, funcdef_no=2367, decl_uid=50173, cgraph_uid=812, symbol_order=813)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >] (struct vector * const this)
{
  struct Flit * * * __nstart;
  struct queue * __first;
  struct queue * _4;
  struct Flit * * * pretmp_13;
  struct Flit * * * prephitmp_16;
  struct Flit * * * _20;
  struct Flit * * * _21;
  struct Flit * * * _22;
  struct Flit * * _25;
  struct queue * pretmp_31;
  struct queue * prephitmp_32;

  <bb 2>:
  # DEBUG D#1015 => &this_1(D)->D.50176
  # DEBUG this => D#1015
  _4 = this_1(D)->D.50176._M_impl._M_finish;
  __first_5 = this_1(D)->D.50176._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(12)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  # DEBUG D#2355 => &MEM[(struct deque *)__first_38].D.54933
  # DEBUG this => D#2355
  _20 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _21 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_finish._M_node;
  _22 = _21 + 8;
  __nstart_23 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_start._M_node;
  # DEBUG this => D#2355
  # DEBUG __nstart => __nstart_23
  # DEBUG __nfinish => _22
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_22 <= __nstart_23)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_43 = PHI <__nstart_23(6), __nstart_26(8)>
  # DEBUG __n => __nstart_43
  _25 = *__nstart_43;
  # DEBUG D#981 => D#2355
  # DEBUG __p => _25
  # DEBUG this => D#981
  # DEBUG D#980 => D#981
  # DEBUG __size => 8
  # DEBUG D#979 => &D#980->_M_impl
  # DEBUG D#977 => D#979
  # DEBUG __p => _25
  # DEBUG __a => D#977
  # DEBUG __n => D#978
  # DEBUG D#976 => D#978
  # DEBUG D#975 => D#977
  # DEBUG D#973 => D#975
  # DEBUG D#974 => D#976
  # DEBUG __p => _25
  # DEBUG this => D#973
  # DEBUG D.120398 => D#974
  operator delete (_25);
  __nstart_26 = __nstart_43 + 8;
  # DEBUG __n => __nstart_26
  # DEBUG __n => __nstart_26
  if (_22 <= __nstart_26)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 18>:
  pretmp_13 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;

  <bb 10>:
  # prephitmp_16 = PHI <pretmp_13(18), _20(5)>
  # DEBUG D#999 => D#2355->_M_impl._M_map_size
  # DEBUG D#2357 => MEM[(struct _Deque_base *)__first_38]._M_impl._M_map
  # DEBUG D#997 => D#2355
  # DEBUG D#998 => D#999
  # DEBUG __p => D#2357
  # DEBUG this => D#997
  # DEBUG __n => D#998
  # DEBUG D#996 => D#998
  # DEBUG D#995 => D#997
  # DEBUG D#994 => D#995
  # DEBUG this => D#994
  # DEBUG D#993 => D#994
  # DEBUG this => D#993
  # DEBUG this => NULL
  # DEBUG D.99274 => NULL
  # DEBUG this => NULL
  # DEBUG D#709 => &__map_alloc
  # DEBUG D#710 => D#996
  # DEBUG __p => D#2357
  # DEBUG __a => D#709
  # DEBUG __n => D#710
  # DEBUG D#708 => D#710
  # DEBUG D#707 => D#709
  # DEBUG D#705 => D#707
  # DEBUG D#706 => D#708
  # DEBUG __p => D#2357
  # DEBUG this => D#705
  # DEBUG D.120408 => D#706
  operator delete (prephitmp_16);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#1000 => &D#2355->_M_impl
  # DEBUG this => D#1000
  # DEBUG this => D#1000
  # DEBUG this => D#1000
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 80;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 17>:
  pretmp_31 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 14>:
  # prephitmp_32 = PHI <pretmp_31(17), __first_5(2)>
  # DEBUG D#1016 => &this_1(D)->D.50176
  # DEBUG this => D#1016
  # DEBUG D#653 => D#1016->_M_impl._M_end_of_storage
  # DEBUG D#652 => (long int) D#653
  # DEBUG D#2356 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#651 => (long int) D#2356
  # DEBUG D#650 => D#652 - D#651
  # DEBUG D#649 => D#650 /[ex] 80
  # DEBUG D#646 => D#1016
  # DEBUG D#647 => (long unsigned int) D#649
  # DEBUG __p => D#2356
  # DEBUG this => D#646
  # DEBUG __n => D#647
  # DEBUG D#645 => D#647
  # DEBUG D#644 => D#646
  if (prephitmp_32 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#643 => &D#644->_M_impl
  # DEBUG D#641 => D#643
  # DEBUG D#642 => D#645
  # DEBUG __p => D#2356
  # DEBUG __a => D#641
  # DEBUG __n => D#642
  # DEBUG D#640 => D#642
  # DEBUG D#639 => D#641
  # DEBUG D#637 => D#639
  # DEBUG D#638 => D#640
  # DEBUG __p => D#2356
  # DEBUG this => D#637
  # DEBUG D.99445 => D#638
  operator delete (prephitmp_32);

  <bb 16>:
  # DEBUG D#648 => &D#1016->_M_impl
  # DEBUG this => D#648
  # DEBUG this => D#648
  # DEBUG this => D#648
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >] (_ZNSt6vectorISt5queueIP6CreditSt5dequeIS2_SaIS2_EEESaIS6_EED2Ev, funcdef_no=2373, decl_uid=50921, cgraph_uid=818, symbol_order=819)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >] (struct vector * const this)
{
  struct Credit * * * __nstart;
  struct queue * __first;
  struct queue * _4;
  struct Credit * * * pretmp_13;
  struct Credit * * * prephitmp_16;
  struct Credit * * * _20;
  struct Credit * * * _21;
  struct Credit * * * _22;
  struct Credit * * _25;
  struct queue * pretmp_31;
  struct queue * prephitmp_32;

  <bb 2>:
  # DEBUG D#1058 => &this_1(D)->D.50924
  # DEBUG this => D#1058
  _4 = this_1(D)->D.50924._M_impl._M_finish;
  __first_5 = this_1(D)->D.50924._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(12)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  # DEBUG D#2359 => &MEM[(struct deque *)__first_38].D.62618
  # DEBUG this => D#2359
  _20 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _21 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_finish._M_node;
  _22 = _21 + 8;
  __nstart_23 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_start._M_node;
  # DEBUG this => D#2359
  # DEBUG __nstart => __nstart_23
  # DEBUG __nfinish => _22
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_22 <= __nstart_23)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_43 = PHI <__nstart_23(6), __nstart_26(8)>
  # DEBUG __n => __nstart_43
  _25 = *__nstart_43;
  # DEBUG this => D#2359
  # DEBUG __p => _25
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#2359->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _25
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _25
  # DEBUG this => D#1017
  # DEBUG D.120472 => D#1018
  operator delete (_25);
  __nstart_26 = __nstart_43 + 8;
  # DEBUG __n => __nstart_26
  # DEBUG __n => __nstart_26
  if (_22 <= __nstart_26)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 18>:
  pretmp_13 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;

  <bb 10>:
  # prephitmp_16 = PHI <pretmp_13(18), _20(5)>
  # DEBUG D#1042 => D#2359->_M_impl._M_map_size
  # DEBUG D#2361 => MEM[(struct _Deque_base *)__first_38]._M_impl._M_map
  # DEBUG D#1040 => D#2359
  # DEBUG D#1041 => D#1042
  # DEBUG __p => D#2361
  # DEBUG this => D#1040
  # DEBUG __n => D#1041
  # DEBUG D#1039 => D#1041
  # DEBUG D#1038 => D#1040
  # DEBUG D#1037 => D#1038
  # DEBUG this => D#1037
  # DEBUG D#1036 => D#1037
  # DEBUG this => D#1036
  # DEBUG this => NULL
  # DEBUG D.99630 => NULL
  # DEBUG this => NULL
  # DEBUG D#719 => &__map_alloc
  # DEBUG D#720 => D#1039
  # DEBUG __p => D#2361
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => D#2361
  # DEBUG this => D#715
  # DEBUG D.120482 => D#716
  operator delete (prephitmp_16);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#1043 => &D#2359->_M_impl
  # DEBUG this => D#1043
  # DEBUG this => D#1043
  # DEBUG this => D#1043
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 80;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 17>:
  pretmp_31 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 14>:
  # prephitmp_32 = PHI <pretmp_31(17), __first_5(2)>
  # DEBUG D#1059 => &this_1(D)->D.50924
  # DEBUG this => D#1059
  # DEBUG D#672 => D#1059->_M_impl._M_end_of_storage
  # DEBUG D#671 => (long int) D#672
  # DEBUG D#2360 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#670 => (long int) D#2360
  # DEBUG D#669 => D#671 - D#670
  # DEBUG D#668 => D#669 /[ex] 80
  # DEBUG D#665 => D#1059
  # DEBUG D#666 => (long unsigned int) D#668
  # DEBUG __p => D#2360
  # DEBUG this => D#665
  # DEBUG __n => D#666
  # DEBUG D#664 => D#666
  # DEBUG D#663 => D#665
  if (prephitmp_32 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#662 => &D#663->_M_impl
  # DEBUG D#660 => D#662
  # DEBUG D#661 => D#664
  # DEBUG __p => D#2360
  # DEBUG __a => D#660
  # DEBUG __n => D#661
  # DEBUG D#659 => D#661
  # DEBUG D#658 => D#660
  # DEBUG D#656 => D#658
  # DEBUG D#657 => D#659
  # DEBUG __p => D#2360
  # DEBUG this => D#656
  # DEBUG D.99801 => D#657
  operator delete (prephitmp_32);

  <bb 16>:
  # DEBUG D#667 => &D#1059->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >] (_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev, funcdef_no=2379, decl_uid=51673, cgraph_uid=824, symbol_order=825)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >] (struct vector * const this)
{
  struct vector * __first;
  struct vector * _4;
  int * _8;
  struct vector * pretmp_14;
  struct vector * prephitmp_15;

  <bb 2>:
  # DEBUG D#696 => &this_1(D)->D.51676
  # DEBUG this => D#696
  _4 = this_1(D)->D.51676._M_impl._M_finish;
  __first_5 = this_1(D)->D.51676._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_26 = PHI <__first_5(3), __first_9(7)>
  # DEBUG __first => __first_26
  # DEBUG __r => __first_26
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _8 = MEM[(struct _Vector_base *)__first_26]._M_impl._M_start;
  # DEBUG D#625 => (long int) _8
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _8
  # DEBUG __n => D#622
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _8
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _8
  # DEBUG this => D#614
  # DEBUG D.96603 => D#615
  operator delete (_8);

  <bb 6>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__first_26] ={v} {CLOBBER};
  __first_9 = __first_26 + 24;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 12>:
  pretmp_14 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 9>:
  # prephitmp_15 = PHI <pretmp_14(12), __first_5(2)>
  # DEBUG D#697 => &this_1(D)->D.51676
  # DEBUG this => D#697
  # DEBUG D#691 => D#697->_M_impl._M_end_of_storage
  # DEBUG D#690 => (long int) D#691
  # DEBUG D#2363 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#689 => (long int) D#2363
  # DEBUG D#688 => D#690 - D#689
  # DEBUG D#687 => D#688 /[ex] 24
  # DEBUG D#684 => D#697
  # DEBUG D#685 => (long unsigned int) D#687
  # DEBUG __p => D#2363
  # DEBUG this => D#684
  # DEBUG __n => D#685
  # DEBUG D#683 => D#685
  # DEBUG D#682 => D#684
  if (prephitmp_15 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#681 => &D#682->_M_impl
  # DEBUG D#679 => D#681
  # DEBUG D#680 => D#683
  # DEBUG __p => D#2363
  # DEBUG __a => D#679
  # DEBUG __n => D#680
  # DEBUG D#678 => D#680
  # DEBUG D#677 => D#679
  # DEBUG D#675 => D#677
  # DEBUG D#676 => D#678
  # DEBUG __p => D#2363
  # DEBUG this => D#675
  # DEBUG D.96579 => D#676
  operator delete (prephitmp_15);

  <bb 11>:
  # DEBUG D#686 => &D#697->_M_impl
  # DEBUG this => D#686
  # DEBUG this => D#686
  # DEBUG this => D#686
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*] (_ZNSt8_Rb_treeIN9OutputSet11sSetElementES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E, funcdef_no=2602, decl_uid=32034, cgraph_uid=1047, symbol_order=1048)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#175 => __x_68
  # DEBUG __x => D#175
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#176 => __x_68
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_68
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_68
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_68
  # DEBUG this => D#820
  # DEBUG D.100356 => D#821
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#175 => __x_72
  # DEBUG __x => D#175
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#176 => __x_72
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_72
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_72
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_72
  # DEBUG this => D#820
  # DEBUG D.120649 => D#821
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#175 => __x_71
  # DEBUG __x => D#175
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#176 => __x_71
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_71
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_71
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_71
  # DEBUG this => D#820
  # DEBUG D.120662 => D#821
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#175 => __x_77
  # DEBUG __x => D#175
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#176 => __x_77
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_77
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_77
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_77
  # DEBUG this => D#820
  # DEBUG D.120675 => D#821
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#175 => __x_80
  # DEBUG __x => D#175
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#176 => __x_80
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_80
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_80
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_80
  # DEBUG this => D#820
  # DEBUG D.120688 => D#821
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#175 => __x_83
  # DEBUG __x => D#175
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#176 => __x_83
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_83
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_83
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_83
  # DEBUG this => D#820
  # DEBUG D.120701 => D#821
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#175 => __x_86
  # DEBUG __x => D#175
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#176 => __x_86
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_86
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_86
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_86
  # DEBUG this => D#820
  # DEBUG D.120714 => D#821
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#175 => __x_89
  # DEBUG __x => D#175
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#176 => __x_89
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_89
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_89
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_89
  # DEBUG this => D#820
  # DEBUG D.120727 => D#821
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#175 => __x_92
  # DEBUG __x => D#175
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#176 => __x_92
  # DEBUG __x => D#176
  # DEBUG __y => NULL
  # DEBUG D#1119 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#1119
  # DEBUG D#1118 => D#1119
  # DEBUG D#1117 => D#1119
  # DEBUG D#1116 => D#1119
  # DEBUG D#1114 => D#1116
  # DEBUG D#1115 => __x_92
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1117
  # DEBUG __p => __x_92
  # DEBUG this => D#1118
  # DEBUG D#825 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#824
  # DEBUG __n => D#825
  # DEBUG D#823 => D#825
  # DEBUG D#822 => D#824
  # DEBUG D#820 => D#822
  # DEBUG D#821 => D#823
  # DEBUG __p => __x_92
  # DEBUG this => D#820
  # DEBUG D.120740 => D#821
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Flit*> >*] (_ZNSt8_Rb_treeIiSt4pairIKiP4FlitESt10_Select1stIS4_ESt4lessIiESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E, funcdef_no=2641, decl_uid=42686, cgraph_uid=1086, symbol_order=1087)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Flit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Flit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Flit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Flit*> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#206 => __x_68
  # DEBUG __x => D#206
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#207 => __x_68
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_68
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_68
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_68
  # DEBUG this => D#834
  # DEBUG D.100450 => D#835
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#206 => __x_72
  # DEBUG __x => D#206
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#207 => __x_72
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_72
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_72
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_72
  # DEBUG this => D#834
  # DEBUG D.120772 => D#835
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#206 => __x_71
  # DEBUG __x => D#206
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#207 => __x_71
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_71
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_71
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_71
  # DEBUG this => D#834
  # DEBUG D.120785 => D#835
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#206 => __x_77
  # DEBUG __x => D#206
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#207 => __x_77
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_77
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_77
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_77
  # DEBUG this => D#834
  # DEBUG D.120798 => D#835
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#206 => __x_80
  # DEBUG __x => D#206
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#207 => __x_80
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_80
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_80
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_80
  # DEBUG this => D#834
  # DEBUG D.120811 => D#835
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#206 => __x_83
  # DEBUG __x => D#206
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#207 => __x_83
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_83
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_83
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_83
  # DEBUG this => D#834
  # DEBUG D.120824 => D#835
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#206 => __x_86
  # DEBUG __x => D#206
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#207 => __x_86
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_86
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_86
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_86
  # DEBUG this => D#834
  # DEBUG D.120837 => D#835
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#206 => __x_89
  # DEBUG __x => D#206
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#207 => __x_89
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_89
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_89
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_89
  # DEBUG this => D#834
  # DEBUG D.120850 => D#835
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#206 => __x_92
  # DEBUG __x => D#206
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#207 => __x_92
  # DEBUG __x => D#207
  # DEBUG __y => NULL
  # DEBUG D#1133 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#1133
  # DEBUG D#1132 => D#1133
  # DEBUG D#1131 => D#1133
  # DEBUG D#1130 => D#1133
  # DEBUG D#1128 => D#1130
  # DEBUG D#1129 => __x_92
  # DEBUG this => D#1128
  # DEBUG __p => D#1129
  # DEBUG D#1127 => D#1128
  # DEBUG D#1126 => D#1129
  # DEBUG D#1125 => D#1129
  # DEBUG this => D#1125
  # DEBUG D#1124 => &D#1126->_M_value_field
  # DEBUG __r => D#1124
  # DEBUG D#1123 => D#1127
  # DEBUG this => D#1123
  # DEBUG D#1122 => D#1123
  # DEBUG this => D#1122
  # DEBUG this => NULL
  # DEBUG D.100388 => NULL
  # DEBUG this => NULL
  # DEBUG D#537 => D#1124
  # DEBUG this => D#536
  # DEBUG __p => D#537
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1131
  # DEBUG __p => __x_92
  # DEBUG this => D#1132
  # DEBUG D#839 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#838
  # DEBUG __n => D#839
  # DEBUG D#837 => D#839
  # DEBUG D#836 => D#838
  # DEBUG D#834 => D#836
  # DEBUG D#835 => D#837
  # DEBUG __p => __x_92
  # DEBUG this => D#834
  # DEBUG D.120863 => D#835
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, std::pair<Credit*, int> >; _Alloc = std::allocator<std::pair<int, std::pair<Credit*, int> > >] (_ZNSt11_Deque_baseISt4pairIiS0_IP6CreditiEESaIS4_EED2Ev, funcdef_no=2650, decl_uid=43598, cgraph_uid=1095, symbol_order=1096)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, std::pair<Credit*, int> >; _Alloc = std::allocator<std::pair<int, std::pair<Credit*, int> > >] (struct _Deque_base * const this)
{
  struct pair * * __nstart;
  struct pair * * _4;
  struct pair * * _5;
  struct pair * * _6;
  struct pair * _13;
  struct pair * * pretmp_16;
  struct pair * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG D#739 => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG this => D#739
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => D#737
  # DEBUG __p => _13
  # DEBUG __size => 24
  # DEBUG D#736 => &D#738->_M_impl
  # DEBUG D#734 => D#736
  # DEBUG __p => _13
  # DEBUG __a => D#734
  # DEBUG __n => D#735
  # DEBUG D#733 => D#735
  # DEBUG D#732 => D#734
  # DEBUG D#730 => D#732
  # DEBUG D#731 => D#733
  # DEBUG __p => _13
  # DEBUG this => D#730
  # DEBUG D.97762 => D#731
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#846 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2366 => this_3(D)->_M_impl._M_map
  # DEBUG D#844 => this_3(D)
  # DEBUG D#845 => D#846
  # DEBUG __p => D#2366
  # DEBUG this => D#844
  # DEBUG __n => D#845
  # DEBUG D#843 => D#845
  # DEBUG D#842 => D#844
  # DEBUG D#841 => D#842
  # DEBUG this => D#841
  # DEBUG D#840 => D#841
  # DEBUG this => D#840
  # DEBUG this => NULL
  # DEBUG D.97702 => NULL
  # DEBUG this => NULL
  # DEBUG D#544 => &__map_alloc
  # DEBUG D#545 => D#843
  # DEBUG __p => D#2366
  # DEBUG __a => D#544
  # DEBUG __n => D#545
  # DEBUG D#543 => D#545
  # DEBUG D#542 => D#544
  # DEBUG D#540 => D#542
  # DEBUG D#541 => D#543
  # DEBUG __p => D#2366
  # DEBUG this => D#540
  # DEBUG D.97749 => D#541
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#847 => &this_3(D)->_M_impl
  # DEBUG this => D#847
  # DEBUG this => D#847
  # DEBUG this => D#847
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, std::pair<int, int> >; _Alloc = std::allocator<std::pair<int, std::pair<int, int> > >] (_ZNSt11_Deque_baseISt4pairIiS0_IiiEESaIS2_EED2Ev, funcdef_no=2666, decl_uid=44520, cgraph_uid=1111, symbol_order=1112)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, std::pair<int, int> >; _Alloc = std::allocator<std::pair<int, std::pair<int, int> > >] (struct _Deque_base * const this)
{
  struct pair * * __nstart;
  struct pair * * _4;
  struct pair * * _5;
  struct pair * * _6;
  struct pair * _13;
  struct pair * * pretmp_16;
  struct pair * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG D#755 => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG this => D#755
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => D#753
  # DEBUG __p => _13
  # DEBUG __size => 12
  # DEBUG D#752 => &D#754->_M_impl
  # DEBUG D#750 => D#752
  # DEBUG __p => _13
  # DEBUG __a => D#750
  # DEBUG __n => D#751
  # DEBUG D#749 => D#751
  # DEBUG D#748 => D#750
  # DEBUG D#746 => D#748
  # DEBUG D#747 => D#749
  # DEBUG __p => _13
  # DEBUG this => D#746
  # DEBUG D.97853 => D#747
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#863 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2368 => this_3(D)->_M_impl._M_map
  # DEBUG D#861 => this_3(D)
  # DEBUG D#862 => D#863
  # DEBUG __p => D#2368
  # DEBUG this => D#861
  # DEBUG __n => D#862
  # DEBUG D#860 => D#862
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#859
  # DEBUG this => D#858
  # DEBUG D#857 => D#858
  # DEBUG this => D#857
  # DEBUG this => NULL
  # DEBUG D.97793 => NULL
  # DEBUG this => NULL
  # DEBUG D#552 => &__map_alloc
  # DEBUG D#553 => D#860
  # DEBUG __p => D#2368
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => D#2368
  # DEBUG this => D#548
  # DEBUG D.97840 => D#549
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#864 => &this_3(D)->_M_impl
  # DEBUG this => D#864
  # DEBUG this => D#864
  # DEBUG this => D#864
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, std::pair<std::pair<int, int>, int> >; _Alloc = std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > >] (_ZNSt11_Deque_baseISt4pairIiS0_IS0_IiiEiEESaIS3_EED2Ev, funcdef_no=2677, decl_uid=45442, cgraph_uid=1122, symbol_order=1123)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, std::pair<std::pair<int, int>, int> >; _Alloc = std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > >] (struct _Deque_base * const this)
{
  struct pair * * __nstart;
  struct pair * * _4;
  struct pair * * _5;
  struct pair * * _6;
  struct pair * _13;
  struct pair * * pretmp_16;
  struct pair * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG D#771 => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG this => D#771
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => D#769
  # DEBUG __p => _13
  # DEBUG __size => 16
  # DEBUG D#768 => &D#770->_M_impl
  # DEBUG D#766 => D#768
  # DEBUG __p => _13
  # DEBUG __a => D#766
  # DEBUG __n => D#767
  # DEBUG D#765 => D#767
  # DEBUG D#764 => D#766
  # DEBUG D#762 => D#764
  # DEBUG D#763 => D#765
  # DEBUG __p => _13
  # DEBUG this => D#762
  # DEBUG D.97944 => D#763
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#880 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2370 => this_3(D)->_M_impl._M_map
  # DEBUG D#878 => this_3(D)
  # DEBUG D#879 => D#880
  # DEBUG __p => D#2370
  # DEBUG this => D#878
  # DEBUG __n => D#879
  # DEBUG D#877 => D#879
  # DEBUG D#876 => D#878
  # DEBUG D#875 => D#876
  # DEBUG this => D#875
  # DEBUG D#874 => D#875
  # DEBUG this => D#874
  # DEBUG this => NULL
  # DEBUG D.97884 => NULL
  # DEBUG this => NULL
  # DEBUG D#560 => &__map_alloc
  # DEBUG D#561 => D#877
  # DEBUG __p => D#2370
  # DEBUG __a => D#560
  # DEBUG __n => D#561
  # DEBUG D#559 => D#561
  # DEBUG D#558 => D#560
  # DEBUG D#556 => D#558
  # DEBUG D#557 => D#559
  # DEBUG __p => D#2370
  # DEBUG this => D#556
  # DEBUG D.97931 => D#557
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#881 => &this_3(D)->_M_impl
  # DEBUG this => D#881
  # DEBUG this => D#881
  # DEBUG this => D#881
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, std::pair<Flit*, std::pair<int, int> > >; _Alloc = std::allocator<std::pair<int, std::pair<Flit*, std::pair<int, int> > > >] (_ZNSt11_Deque_baseISt4pairIiS0_IP4FlitS0_IiiEEESaIS5_EED2Ev, funcdef_no=2688, decl_uid=46366, cgraph_uid=1133, symbol_order=1134)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = std::pair<int, std::pair<Flit*, std::pair<int, int> > >; _Alloc = std::allocator<std::pair<int, std::pair<Flit*, std::pair<int, int> > > >] (struct _Deque_base * const this)
{
  struct pair * * __nstart;
  struct pair * * _4;
  struct pair * * _5;
  struct pair * * _6;
  struct pair * _13;
  struct pair * * pretmp_16;
  struct pair * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG D#787 => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG this => D#787
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => D#785
  # DEBUG __p => _13
  # DEBUG __size => 24
  # DEBUG D#784 => &D#786->_M_impl
  # DEBUG D#782 => D#784
  # DEBUG __p => _13
  # DEBUG __a => D#782
  # DEBUG __n => D#783
  # DEBUG D#781 => D#783
  # DEBUG D#780 => D#782
  # DEBUG D#778 => D#780
  # DEBUG D#779 => D#781
  # DEBUG __p => _13
  # DEBUG this => D#778
  # DEBUG D.98035 => D#779
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#897 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2372 => this_3(D)->_M_impl._M_map
  # DEBUG D#895 => this_3(D)
  # DEBUG D#896 => D#897
  # DEBUG __p => D#2372
  # DEBUG this => D#895
  # DEBUG __n => D#896
  # DEBUG D#894 => D#896
  # DEBUG D#893 => D#895
  # DEBUG D#892 => D#893
  # DEBUG this => D#892
  # DEBUG D#891 => D#892
  # DEBUG this => D#891
  # DEBUG this => NULL
  # DEBUG D.97975 => NULL
  # DEBUG this => NULL
  # DEBUG D#568 => &__map_alloc
  # DEBUG D#569 => D#894
  # DEBUG __p => D#2372
  # DEBUG __a => D#568
  # DEBUG __n => D#569
  # DEBUG D#567 => D#569
  # DEBUG D#566 => D#568
  # DEBUG D#564 => D#566
  # DEBUG D#565 => D#567
  # DEBUG __p => D#2372
  # DEBUG this => D#564
  # DEBUG D.98022 => D#565
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#898 => &this_3(D)->_M_impl
  # DEBUG this => D#898
  # DEBUG this => D#898
  # DEBUG this => D#898
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Credit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Credit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Credit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Credit*> >*] (_ZNSt8_Rb_treeIiSt4pairIKiP6CreditESt10_Select1stIS4_ESt4lessIiESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E, funcdef_no=2698, decl_uid=47443, cgraph_uid=1143, symbol_order=1144)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, Credit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Credit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Credit*> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, Credit*> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node * __x;
  struct _Rb_tree_node_base * _39;

  <bb 2>:
  # DEBUG __x => __x_3(D)
  if (__x_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_68 = PHI <__x_3(D)(4), __x_9(38)>
  # DEBUG __x => __x_68
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 24B];
  # DEBUG D#208 => __x_68
  # DEBUG __x => D#208
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_8
  # DEBUG __x => __x_8
  if (__x_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __x_9 = MEM[(struct _Rb_tree_node_base * *)__x_68 + 16B];
  # DEBUG D#209 => __x_68
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_68
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_68
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_68
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_68
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_68
  # DEBUG this => D#908
  # DEBUG D.100985 => D#909
  operator delete (__x_68);
  # DEBUG __x => __x_9
  # DEBUG __x => __x_9
  if (__x_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 38>;

  <bb 7>:

  <bb 8>:
  # __x_72 = PHI <__x_8(7), __x_13(37)>
  # DEBUG __x => __x_72
  __x_12 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 24B];
  # DEBUG D#208 => __x_72
  # DEBUG __x => D#208
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_12
  # DEBUG __x => __x_12
  if (__x_12 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __x_13 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#209 => __x_72
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_72
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_72
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_72
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_72
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_72
  # DEBUG this => D#908
  # DEBUG D.121025 => D#909
  operator delete (__x_72);
  # DEBUG __x => __x_13
  # DEBUG __x => __x_13
  if (__x_13 == 0B)
    goto <bb 6>;
  else
    goto <bb 37>;

  <bb 10>:

  <bb 11>:
  # __x_71 = PHI <__x_12(10), __x_16(36)>
  # DEBUG __x => __x_71
  __x_15 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 24B];
  # DEBUG D#208 => __x_71
  # DEBUG __x => D#208
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_15
  # DEBUG __x => __x_15
  if (__x_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __x_16 = MEM[(struct _Rb_tree_node_base * *)__x_71 + 16B];
  # DEBUG D#209 => __x_71
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_71
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_71
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_71
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_71
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_71
  # DEBUG this => D#908
  # DEBUG D.121038 => D#909
  operator delete (__x_71);
  # DEBUG __x => __x_16
  # DEBUG __x => __x_16
  if (__x_16 == 0B)
    goto <bb 9>;
  else
    goto <bb 36>;

  <bb 13>:

  <bb 14>:
  # __x_77 = PHI <__x_15(13), __x_20(35)>
  # DEBUG __x => __x_77
  __x_19 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 24B];
  # DEBUG D#208 => __x_77
  # DEBUG __x => D#208
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_19
  # DEBUG __x => __x_19
  if (__x_19 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __x_20 = MEM[(struct _Rb_tree_node_base * *)__x_77 + 16B];
  # DEBUG D#209 => __x_77
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_77
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_77
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_77
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_77
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_77
  # DEBUG this => D#908
  # DEBUG D.121051 => D#909
  operator delete (__x_77);
  # DEBUG __x => __x_20
  # DEBUG __x => __x_20
  if (__x_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 35>;

  <bb 16>:

  <bb 17>:
  # __x_80 = PHI <__x_19(16), __x_24(34)>
  # DEBUG __x => __x_80
  __x_23 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 24B];
  # DEBUG D#208 => __x_80
  # DEBUG __x => D#208
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_23
  # DEBUG __x => __x_23
  if (__x_23 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __x_24 = MEM[(struct _Rb_tree_node_base * *)__x_80 + 16B];
  # DEBUG D#209 => __x_80
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_80
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_80
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_80
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_80
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_80
  # DEBUG this => D#908
  # DEBUG D.121064 => D#909
  operator delete (__x_80);
  # DEBUG __x => __x_24
  # DEBUG __x => __x_24
  if (__x_24 == 0B)
    goto <bb 15>;
  else
    goto <bb 34>;

  <bb 19>:

  <bb 20>:
  # __x_83 = PHI <__x_23(19), __x_28(33)>
  # DEBUG __x => __x_83
  __x_27 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 24B];
  # DEBUG D#208 => __x_83
  # DEBUG __x => D#208
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_27
  # DEBUG __x => __x_27
  if (__x_27 == 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __x_28 = MEM[(struct _Rb_tree_node_base * *)__x_83 + 16B];
  # DEBUG D#209 => __x_83
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_83
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_83
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_83
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_83
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_83
  # DEBUG this => D#908
  # DEBUG D.121077 => D#909
  operator delete (__x_83);
  # DEBUG __x => __x_28
  # DEBUG __x => __x_28
  if (__x_28 == 0B)
    goto <bb 18>;
  else
    goto <bb 33>;

  <bb 22>:

  <bb 23>:
  # __x_86 = PHI <__x_27(22), __x_32(32)>
  # DEBUG __x => __x_86
  __x_31 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 24B];
  # DEBUG D#208 => __x_86
  # DEBUG __x => D#208
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_31
  # DEBUG __x => __x_31
  if (__x_31 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_86 + 16B];
  # DEBUG D#209 => __x_86
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_86
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_86
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_86
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_86
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_86
  # DEBUG this => D#908
  # DEBUG D.121090 => D#909
  operator delete (__x_86);
  # DEBUG __x => __x_32
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 21>;
  else
    goto <bb 32>;

  <bb 25>:

  <bb 26>:
  # __x_89 = PHI <__x_31(25), __x_36(31)>
  # DEBUG __x => __x_89
  __x_35 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 24B];
  # DEBUG D#208 => __x_89
  # DEBUG __x => D#208
  # DEBUG this => this_6(D)
  # DEBUG __x => __x_35
  # DEBUG __x => __x_35
  if (__x_35 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __x_36 = MEM[(struct _Rb_tree_node_base * *)__x_89 + 16B];
  # DEBUG D#209 => __x_89
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_89
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_89
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_89
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_89
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_89
  # DEBUG this => D#908
  # DEBUG D.121103 => D#909
  operator delete (__x_89);
  # DEBUG __x => __x_36
  # DEBUG __x => __x_36
  if (__x_36 == 0B)
    goto <bb 24>;
  else
    goto <bb 31>;

  <bb 28>:

  <bb 29>:
  # __x_92 = PHI <__x_35(28), __x_40(30)>
  # DEBUG __x => __x_92
  _39 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 24B];
  # DEBUG D#208 => __x_92
  # DEBUG __x => D#208
  std::_Rb_tree<int, std::pair<const int, Credit*>, std::_Select1st<std::pair<const int, Credit*> >, std::less<int>, std::allocator<std::pair<const int, Credit*> > >::_M_erase (this_6(D), _39);
  __x_40 = MEM[(struct _Rb_tree_node_base * *)__x_92 + 16B];
  # DEBUG D#209 => __x_92
  # DEBUG __x => D#209
  # DEBUG __y => NULL
  # DEBUG D#1199 => this_6(D)
  # DEBUG __p => __x_92
  # DEBUG this => D#1199
  # DEBUG D#1198 => D#1199
  # DEBUG D#1197 => D#1199
  # DEBUG D#1196 => D#1199
  # DEBUG D#1194 => D#1196
  # DEBUG D#1195 => __x_92
  # DEBUG this => D#1194
  # DEBUG __p => D#1195
  # DEBUG D#1193 => D#1194
  # DEBUG D#1192 => D#1195
  # DEBUG D#1191 => D#1195
  # DEBUG this => D#1191
  # DEBUG D#1190 => &D#1192->_M_value_field
  # DEBUG __r => D#1190
  # DEBUG D#1189 => D#1193
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG D#573 => D#1190
  # DEBUG this => D#572
  # DEBUG __p => D#573
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1197
  # DEBUG __p => __x_92
  # DEBUG this => D#1198
  # DEBUG D#913 => 1
  # DEBUG __p => __x_92
  # DEBUG __a => D#912
  # DEBUG __n => D#913
  # DEBUG D#911 => D#913
  # DEBUG D#910 => D#912
  # DEBUG D#908 => D#910
  # DEBUG D#909 => D#911
  # DEBUG __p => __x_92
  # DEBUG this => D#908
  # DEBUG D.121116 => D#909
  operator delete (__x_92);
  # DEBUG __x => __x_40
  # DEBUG __x => __x_40
  if (__x_40 == 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 29>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 23>;

  <bb 33>:
  goto <bb 20>;

  <bb 34>:
  goto <bb 17>;

  <bb 35>:
  goto <bb 14>;

  <bb 36>:
  goto <bb 11>;

  <bb 37>:
  goto <bb 8>;

  <bb 38>:
  goto <bb 5>;

}



;; Function IQRouter::~IQRouter() (_ZN8IQRouterD2Ev, funcdef_no=2231, decl_uid=51787, cgraph_uid=676, symbol_order=677)

Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
IQRouter::~IQRouter() (struct IQRouter * const this)
{
  struct pair * * __nstart;
  struct pair * * __nstart;
  struct pair * * __nstart;
  struct Flit * * * __nstart;
  struct Credit * * * __nstart;
  struct queue * __first;
  struct queue * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  int j;
  int i;
  bool gPrintActivity.248_17;
  struct basic_ostream & _18;
  struct BufferMonitor * _20;
  struct ostream & _22;
  const size_type _24;
  char * const _25;
  int _26;
  int _28;
  struct SwitchMonitor * _30;
  struct ostream & _32;
  long unsigned int _34;
  long int _35;
  struct Buffer * _36;
  int (*__vtbl_ptr_type) () * _37;
  int (*__vtbl_ptr_type) () _38;
  long unsigned int _42;
  const size_type _43;
  struct BufferState * _44;
  int (*__vtbl_ptr_type) () * _45;
  int (*__vtbl_ptr_type) () _46;
  struct Allocator * _49;
  int (*__vtbl_ptr_type) () * _50;
  int (*__vtbl_ptr_type) () _51;
  struct Allocator * _53;
  int (*__vtbl_ptr_type) () * _54;
  int (*__vtbl_ptr_type) () _55;
  int (*__vtbl_ptr_type) () * _58;
  int (*__vtbl_ptr_type) () _59;
  struct BufferMonitor * _61;
  struct vector * _62;
  struct SwitchMonitor * _64;
  struct _Rep_type * _65;
  struct queue * _68;
  struct vector * _70;
  struct vector * _72;
  int * _73;
  int * _74;
  int * _75;
  struct Credit * * * _77;
  struct queue * _79;
  int * _80;
  int * _81;
  int * _82;
  struct BufferState * * _83;
  struct Buffer * * _84;
  struct _Rep_type * _85;
  struct _Deque_base * _87;
  struct _Deque_base * _88;
  struct _Deque_base * _89;
  struct pair * * _93;
  struct vector * _95;
  struct vector * _97;
  struct vector * _99;
  int * _101;
  int * _102;
  int * _103;
  struct vector * _104;
  struct vector * _106;
  int * _108;
  struct BufferState * * _109;
  struct Buffer * * _110;
  struct _Rep_type * _111;
  struct _Deque_base * _112;
  struct _Deque_base * _113;
  struct _Deque_base * _114;
  struct _Deque_base * _115;
  struct _Deque_base * _116;
  struct _Deque_base * _117;
  struct _Rep_type * _118;
  struct Router * _120;
  struct Buffer * * _122;
  struct BufferState * * _123;
  long int _124;
  char * const _125;
  struct basic_ostream & _126;
  long unsigned int _127;
  struct Buffer * & _128;
  long unsigned int _129;
  struct BufferState * & _130;
  int * _131;
  struct _Rb_tree_node_base * _132;
  struct _Rb_tree_node_base * _133;
  struct _Rb_tree_node_base * _134;
  struct _Rb_tree_node_base * _135;
  struct Flit * * * pretmp_161;
  struct Flit * * * prephitmp_162;
  _Bit_type * _215;
  struct pair * * _223;
  struct pair * * _225;
  int prephitmp_260;
  struct vector * pretmp_279;
  struct vector * prephitmp_294;
  struct vector * pretmp_296;
  struct vector * prephitmp_297;
  int * _299;
  int * _300;
  int * _303;
  int * _308;
  int * _313;
  struct Credit * * * _326;
  struct Credit * * * _327;
  struct Credit * * _330;
  struct Flit * * * _333;
  struct Flit * * * _334;
  struct Flit * * * _335;
  struct Flit * * _338;
  struct Channel * * _342;
  struct FlitChannel * * _343;
  struct Channel * * _344;
  struct FlitChannel * * _345;
  struct pair * * _347;
  struct pair * * _348;
  struct pair * _351;
  struct pair * * _354;
  struct pair * * _355;
  struct pair * _358;
  struct pair * * _361;
  struct pair * * _362;
  struct pair * _365;
  long unsigned int * const _368;
  long int _370;
  long int _371;
  long int _372;
  long unsigned int _373;
  sizetype _374;
  long unsigned int * _375;
  struct Module * * _376;
  char * const _377;
  const char * _378;
  char * const _379;
  const char * _380;
  struct Credit * * * pretmp_415;
  struct Credit * * * prephitmp_416;
  int prephitmp_424;
  struct pair * * prephitmp_428;
  int pretmp_434;
  int prephitmp_435;
  int pretmp_436;
  int prephitmp_437;
  struct pair * * pretmp_440;
  struct pair * * prephitmp_441;
  struct pair * * pretmp_443;
  struct pair * * pretmp_453;
  struct pair * * prephitmp_454;
  struct queue * prephitmp_465;
  struct queue * pretmp_467;
  struct queue * prephitmp_468;
  struct vector * pretmp_480;
  struct vector * prephitmp_481;
  struct queue * pretmp_483;
  struct Allocator * _591;
  int _624;
  int _635;

  <bb 2>:
  this_15(D)->D.51790.D.42039.D.31271._vptr.Module = &MEM[(void *)&_ZTV8IQRouter + 16B];
  gPrintActivity.248_17 = gPrintActivity;
  if (gPrintActivity.248_17 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG i => 0
  _624 = this_15(D)->D.51790._inputs;
  if (_624 <= 0)
    goto <bb 31>;
  else
    goto <bb 33>;

  <bb 4>:
  # DEBUG D#1201 => &this_15(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1201
  # DEBUG __os => &cout
  # DEBUG __str => NULL
  _43 = MEM[(long unsigned int *)this_15(D) + 16B];
  # DEBUG this => D#3
  _35 = (long int) _43;
  # DEBUG this => NULL
  _25 = MEM[(char * *)this_15(D) + 8B];
  # DEBUG this => D#1
  _18 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _25, _35);

  <bb 5>:
  # DEBUG __out => _18
  # DEBUG __s => ".bufferMonitor:"
  # DEBUG __s => ".bufferMonitor:"
  std::__ostream_insert<char, std::char_traits<char> > (_18, ".bufferMonitor:", 15);
  goto <bb 7>;

<L60>:
  goto <bb 172> (<L37>);

  <bb 7>:
  # DEBUG this => _18
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_18);
  goto <bb 9>;

<L61>:
  goto <bb 172> (<L37>);

  <bb 9>:
  _20 = this_15(D)->_bufferMonitor;
  _22 = operator<< (&cout, _20);
  goto <bb 11>;

<L62>:
  goto <bb 172> (<L37>);

  <bb 11>:
  # DEBUG this => _22
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_22);
  goto <bb 13>;

<L63>:
  goto <bb 172> (<L37>);

  <bb 13>:
  # DEBUG D#1202 => &this_15(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1202
  # DEBUG __os => &cout
  # DEBUG __str => NULL
  _24 = MEM[(long unsigned int *)this_15(D) + 16B];
  # DEBUG this => D#3
  _124 = (long int) _24;
  # DEBUG this => NULL
  _125 = MEM[(char * *)this_15(D) + 8B];
  # DEBUG this => D#1
  _126 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _125, _124);
  goto <bb 15>;

<L64>:
  goto <bb 172> (<L37>);

  <bb 15>:
  # DEBUG __out => _126
  # DEBUG __s => ".switchMonitor:"
  # DEBUG __s => ".switchMonitor:"
  std::__ostream_insert<char, std::char_traits<char> > (_126, ".switchMonitor:", 15);
  goto <bb 17>;

<L65>:
  goto <bb 172> (<L37>);

  <bb 17>:
  # DEBUG this => _126
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_126);
  goto <bb 19>;

<L66>:
  goto <bb 172> (<L37>);

  <bb 19>:
  _26 = this_15(D)->D.51790._inputs;
  # DEBUG __out => &cout
  # DEBUG __s => "Inputs="
  # DEBUG __s => "Inputs="
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Inputs=", 7);
  goto <bb 21>;

<L67>:
  goto <bb 172> (<L37>);

  <bb 21>:
  std::basic_ostream<char>::operator<< (&cout, _26);
  goto <bb 23>;

<L68>:
  goto <bb 172> (<L37>);

  <bb 23>:
  _28 = this_15(D)->D.51790._outputs;
  # DEBUG __out => &cout
  # DEBUG __s => "Outputs="
  # DEBUG __s => "Outputs="
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Outputs=", 8);
  goto <bb 25>;

<L69>:
  goto <bb 172> (<L37>);

  <bb 25>:
  std::basic_ostream<char>::operator<< (&cout, _28);
  goto <bb 27>;

<L70>:
  goto <bb 172> (<L37>);

  <bb 27>:
  _30 = this_15(D)->_switchMonitor;
  _32 = operator<< (&cout, _30);
  goto <bb 29>;

<L71>:
  goto <bb 172> (<L37>);

  <bb 29>:
  # DEBUG this => _32
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_32);
  goto <bb 3>;

<L72>:
  goto <bb 172> (<L37>);

  <bb 31>:
  # DEBUG j => 0
  _635 = this_15(D)->D.51790._outputs;
  if (_635 <= 0)
    goto <bb 32>;
  else
    goto <bb 40>;

  <bb 32>:
  _49 = this_15(D)->_vc_allocator;
  if (_49 != 0B)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 33>:

  <bb 34>:
  # i_623 = PHI <0(33), i_40(39)>
  # prephitmp_260 = PHI <_624(33), prephitmp_435(39)>
  # DEBUG i => i_623
  _34 = (long unsigned int) i_623;
  # DEBUG D#1203 => &this_15(D)->_buf
  _122 = MEM[(struct Buffer * * *)this_15(D) + 880B];
  # DEBUG D#53 => D#1203
  # DEBUG __n => _34
  # DEBUG this => D#53
  _127 = _34 * 8;
  _128 = _122 + _127;
  _36 = *_128;
  if (_36 != 0B)
    goto <bb 35>;
  else
    goto <bb 38>;

  <bb 35>:
  _37 = _36->D.55900._vptr.Module;
  _38 = MEM[(int (*__vtbl_ptr_type) () *)_37 + 8B];
  OBJ_TYPE_REF(_38;(struct Buffer)_36->1) (_36);
  goto <bb 37>;

<L73>:
  goto <bb 172> (<L37>);

  <bb 37>:
  pretmp_434 = this_15(D)->D.51790._inputs;

  <bb 38>:
  # prephitmp_435 = PHI <prephitmp_260(34), pretmp_434(37)>
  i_40 = i_623 + 1;
  # DEBUG i => i_40
  # DEBUG i => i_40
  if (i_40 >= prephitmp_435)
    goto <bb 31>;
  else
    goto <bb 39>;

  <bb 39>:
  goto <bb 34>;

  <bb 40>:

  <bb 41>:
  # j_622 = PHI <0(40), j_48(46)>
  # prephitmp_424 = PHI <_635(40), prephitmp_437(46)>
  # DEBUG j => j_622
  _42 = (long unsigned int) j_622;
  # DEBUG D#1204 => &this_15(D)->_next_buf
  _123 = MEM[(struct BufferState * * *)this_15(D) + 904B];
  # DEBUG D#54 => D#1204
  # DEBUG __n => _42
  # DEBUG this => D#54
  _129 = _42 * 8;
  _130 = _123 + _129;
  _44 = *_130;
  if (_44 != 0B)
    goto <bb 42>;
  else
    goto <bb 45>;

  <bb 42>:
  _45 = _44->D.57173._vptr.Module;
  _46 = MEM[(int (*__vtbl_ptr_type) () *)_45 + 8B];
  OBJ_TYPE_REF(_46;(struct BufferState)_44->1) (_44);
  goto <bb 44>;

<L74>:
  goto <bb 172> (<L37>);

  <bb 44>:
  pretmp_436 = this_15(D)->D.51790._outputs;

  <bb 45>:
  # prephitmp_437 = PHI <prephitmp_424(41), pretmp_436(44)>
  j_48 = j_622 + 1;
  # DEBUG j => j_48
  # DEBUG j => j_48
  if (j_48 >= prephitmp_437)
    goto <bb 32>;
  else
    goto <bb 46>;

  <bb 46>:
  goto <bb 41>;

  <bb 47>:
  _53 = this_15(D)->_sw_allocator;
  if (_53 != 0B)
    goto <bb 50>;
  else
    goto <bb 207>;

  <bb 48>:
  _50 = _49->D.58179._vptr.Module;
  _51 = MEM[(int (*__vtbl_ptr_type) () *)_50 + 8B];
  OBJ_TYPE_REF(_51;(struct Allocator)_49->1) (_49);
  goto <bb 47>;

<L75>:
  goto <bb 172> (<L37>);

  <bb 50>:
  _54 = _53->D.58179._vptr.Module;
  _55 = MEM[(int (*__vtbl_ptr_type) () *)_54 + 8B];
  OBJ_TYPE_REF(_55;(struct Allocator)_53->1) (_53);
  goto <bb 207>;

<L76>:
  goto <bb 172> (<L37>);

  <bb 52>:
  _58 = _591->D.58179._vptr.Module;
  _59 = MEM[(int (*__vtbl_ptr_type) () *)_58 + 8B];
  OBJ_TYPE_REF(_59;(struct Allocator)_591->1) (_591);
  goto <bb 54>;

<L77>:
  goto <bb 172> (<L37>);

  <bb 54>:
  _61 = this_15(D)->_bufferMonitor;
  if (_61 != 0B)
    goto <bb 55>;
  else
    goto <bb 60>;

  <bb 55>:
  # DEBUG this => _61
  # DEBUG D#633 => &_61->_writes
  # DEBUG this => D#633
  # DEBUG D#628 => &D#633->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#633->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#633->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#633->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _299 = MEM[(struct _Vector_base *)_61 + 40B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _299
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _299
  # DEBUG __n => D#622
  if (_299 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _299
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _299
  # DEBUG this => D#614
  # DEBUG D.121132 => D#615
  operator delete (_299);

  <bb 57>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)_61 + 40] ={v} {CLOBBER};
  # DEBUG D#632 => &_61->_reads
  # DEBUG this => D#632
  # DEBUG D#628 => &D#632->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#632->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#632->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#632->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _300 = MEM[(struct _Vector_base *)_61 + 16B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _300
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _300
  # DEBUG __n => D#622
  if (_300 != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _300
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _300
  # DEBUG this => D#614
  # DEBUG D.121147 => D#615
  operator delete (_300);

  <bb 59>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)_61] ={v} {CLOBBER};
  operator delete (_61);

  <bb 60>:
  _64 = this_15(D)->_switchMonitor;
  if (_64 != 0B)
    goto <bb 61>;
  else
    goto <bb 64>;

  <bb 61>:
  # DEBUG this => _64
  # DEBUG D#634 => &_64->_event
  # DEBUG this => D#634
  # DEBUG D#628 => &D#634->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#634->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#634->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#634->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _131 = MEM[(struct _Vector_base *)_64 + 16B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _131
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _131
  # DEBUG __n => D#622
  if (_131 != 0B)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _131
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _131
  # DEBUG this => D#614
  # DEBUG D.101063 => D#615
  operator delete (_131);

  <bb 63>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)_64] ={v} {CLOBBER};
  operator delete (_64);

  <bb 64>:
  # DEBUG D#2386 => &this_15(D)->_noq_next_vc_end
  # DEBUG this => D#2386
  # DEBUG D#696 => &D#2386->D.51676
  # DEBUG this => D#696
  _70 = MEM[(struct vector *)this_15(D) + 1200B].D.51676._M_impl._M_finish;
  __first_311 = MEM[(struct vector *)this_15(D) + 1200B].D.51676._M_impl._M_start;
  # DEBUG __first => __first_311
  # DEBUG __last => _70
  # DEBUG __first => __first_311
  if (_70 == __first_311)
    goto <bb 71>;
  else
    goto <bb 65>;

  <bb 65>:

  <bb 66>:
  # __first_625 = PHI <__first_311(65), __first_314(69)>
  # DEBUG __first => __first_625
  # DEBUG __r => __first_625
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _313 = MEM[(struct _Vector_base *)__first_625]._M_impl._M_start;
  # DEBUG D#625 => (long int) _313
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _313
  # DEBUG __n => D#622
  if (_313 != 0B)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _313
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _313
  # DEBUG this => D#614
  # DEBUG D.121250 => D#615
  operator delete (_313);

  <bb 68>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__first_625] ={v} {CLOBBER};
  __first_314 = __first_625 + 24;
  # DEBUG __first => __first_314
  # DEBUG __first => __first_314
  if (_70 == __first_314)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:
  goto <bb 66>;

  <bb 70>:
  pretmp_279 = MEM[(struct _Vector_base *)this_15(D) + 1200B]._M_impl._M_start;

  <bb 71>:
  # prephitmp_294 = PHI <pretmp_279(70), __first_311(64)>
  # DEBUG D#697 => &D#2386->D.51676
  # DEBUG this => D#697
  # DEBUG D#691 => D#697->_M_impl._M_end_of_storage
  # DEBUG D#690 => (long int) D#691
  # DEBUG D#2396 => MEM[(struct _Vector_base *)this_15(D) + 1200B]._M_impl._M_start
  # DEBUG D#689 => (long int) D#2396
  # DEBUG D#688 => D#690 - D#689
  # DEBUG D#687 => D#688 /[ex] 24
  # DEBUG D#684 => D#697
  # DEBUG D#685 => (long unsigned int) D#687
  # DEBUG __p => D#2396
  # DEBUG this => D#684
  # DEBUG __n => D#685
  # DEBUG D#683 => D#685
  # DEBUG D#682 => D#684
  if (prephitmp_294 != 0B)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # DEBUG D#681 => &D#682->_M_impl
  # DEBUG D#679 => D#681
  # DEBUG D#680 => D#683
  # DEBUG __p => D#2396
  # DEBUG __a => D#679
  # DEBUG __n => D#680
  # DEBUG D#678 => D#680
  # DEBUG D#677 => D#679
  # DEBUG D#675 => D#677
  # DEBUG D#676 => D#678
  # DEBUG __p => D#2396
  # DEBUG this => D#675
  # DEBUG D.121264 => D#676
  operator delete (prephitmp_294);

  <bb 73>:
  # DEBUG D#686 => &D#697->_M_impl
  # DEBUG this => D#686
  # DEBUG this => D#686
  # DEBUG this => D#686
  MEM[(struct  &)this_15(D) + 1200] ={v} {CLOBBER};
  # DEBUG D#2385 => &this_15(D)->_noq_next_vc_start
  # DEBUG this => D#2385
  # DEBUG D#696 => &D#2385->D.51676
  # DEBUG this => D#696
  _72 = MEM[(struct vector *)this_15(D) + 1176B].D.51676._M_impl._M_finish;
  __first_306 = MEM[(struct vector *)this_15(D) + 1176B].D.51676._M_impl._M_start;
  # DEBUG __first => __first_306
  # DEBUG __last => _72
  # DEBUG __first => __first_306
  if (_72 == __first_306)
    goto <bb 80>;
  else
    goto <bb 74>;

  <bb 74>:

  <bb 75>:
  # __first_594 = PHI <__first_306(74), __first_309(78)>
  # DEBUG __first => __first_594
  # DEBUG __r => __first_594
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _308 = MEM[(struct _Vector_base *)__first_594]._M_impl._M_start;
  # DEBUG D#625 => (long int) _308
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _308
  # DEBUG __n => D#622
  if (_308 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _308
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _308
  # DEBUG this => D#614
  # DEBUG D.121211 => D#615
  operator delete (_308);

  <bb 77>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__first_594] ={v} {CLOBBER};
  __first_309 = __first_594 + 24;
  # DEBUG __first => __first_309
  # DEBUG __first => __first_309
  if (_72 == __first_309)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  goto <bb 75>;

  <bb 79>:
  pretmp_296 = MEM[(struct _Vector_base *)this_15(D) + 1176B]._M_impl._M_start;

  <bb 80>:
  # prephitmp_297 = PHI <pretmp_296(79), __first_306(73)>
  # DEBUG D#697 => &D#2385->D.51676
  # DEBUG this => D#697
  # DEBUG D#691 => D#697->_M_impl._M_end_of_storage
  # DEBUG D#690 => (long int) D#691
  # DEBUG D#2395 => MEM[(struct _Vector_base *)this_15(D) + 1176B]._M_impl._M_start
  # DEBUG D#689 => (long int) D#2395
  # DEBUG D#688 => D#690 - D#689
  # DEBUG D#687 => D#688 /[ex] 24
  # DEBUG D#684 => D#697
  # DEBUG D#685 => (long unsigned int) D#687
  # DEBUG __p => D#2395
  # DEBUG this => D#684
  # DEBUG __n => D#685
  # DEBUG D#683 => D#685
  # DEBUG D#682 => D#684
  if (prephitmp_297 != 0B)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  # DEBUG D#681 => &D#682->_M_impl
  # DEBUG D#679 => D#681
  # DEBUG D#680 => D#683
  # DEBUG __p => D#2395
  # DEBUG __a => D#679
  # DEBUG __n => D#680
  # DEBUG D#678 => D#680
  # DEBUG D#677 => D#679
  # DEBUG D#675 => D#677
  # DEBUG D#676 => D#678
  # DEBUG __p => D#2395
  # DEBUG this => D#675
  # DEBUG D.121225 => D#676
  operator delete (prephitmp_297);

  <bb 82>:
  # DEBUG D#686 => &D#697->_M_impl
  # DEBUG this => D#686
  # DEBUG this => D#686
  # DEBUG this => D#686
  MEM[(struct  &)this_15(D) + 1176] ={v} {CLOBBER};
  # DEBUG D#2384 => &this_15(D)->_noq_next_output_port
  # DEBUG this => D#2384
  # DEBUG D#696 => &D#2384->D.51676
  # DEBUG this => D#696
  _62 = MEM[(struct vector *)this_15(D) + 1152B].D.51676._M_impl._M_finish;
  __first_301 = MEM[(struct vector *)this_15(D) + 1152B].D.51676._M_impl._M_start;
  # DEBUG __first => __first_301
  # DEBUG __last => _62
  # DEBUG __first => __first_301
  if (_62 == __first_301)
    goto <bb 89>;
  else
    goto <bb 83>;

  <bb 83>:

  <bb 84>:
  # __first_565 = PHI <__first_301(83), __first_304(87)>
  # DEBUG __first => __first_565
  # DEBUG __r => __first_565
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _303 = MEM[(struct _Vector_base *)__first_565]._M_impl._M_start;
  # DEBUG D#625 => (long int) _303
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _303
  # DEBUG __n => D#622
  if (_303 != 0B)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _303
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _303
  # DEBUG this => D#614
  # DEBUG D.121172 => D#615
  operator delete (_303);

  <bb 86>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__first_565] ={v} {CLOBBER};
  __first_304 = __first_565 + 24;
  # DEBUG __first => __first_304
  # DEBUG __first => __first_304
  if (_62 == __first_304)
    goto <bb 88>;
  else
    goto <bb 87>;

  <bb 87>:
  goto <bb 84>;

  <bb 88>:
  pretmp_480 = MEM[(struct _Vector_base *)this_15(D) + 1152B]._M_impl._M_start;

  <bb 89>:
  # prephitmp_481 = PHI <pretmp_480(88), __first_301(82)>
  # DEBUG D#697 => &D#2384->D.51676
  # DEBUG this => D#697
  # DEBUG D#691 => D#697->_M_impl._M_end_of_storage
  # DEBUG D#690 => (long int) D#691
  # DEBUG D#2394 => MEM[(struct _Vector_base *)this_15(D) + 1152B]._M_impl._M_start
  # DEBUG D#689 => (long int) D#2394
  # DEBUG D#688 => D#690 - D#689
  # DEBUG D#687 => D#688 /[ex] 24
  # DEBUG D#684 => D#697
  # DEBUG D#685 => (long unsigned int) D#687
  # DEBUG __p => D#2394
  # DEBUG this => D#684
  # DEBUG __n => D#685
  # DEBUG D#683 => D#685
  # DEBUG D#682 => D#684
  if (prephitmp_481 != 0B)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  # DEBUG D#681 => &D#682->_M_impl
  # DEBUG D#679 => D#681
  # DEBUG D#680 => D#683
  # DEBUG __p => D#2394
  # DEBUG __a => D#679
  # DEBUG __n => D#680
  # DEBUG D#678 => D#680
  # DEBUG D#677 => D#679
  # DEBUG D#675 => D#677
  # DEBUG D#676 => D#678
  # DEBUG __p => D#2394
  # DEBUG this => D#675
  # DEBUG D.121186 => D#676
  operator delete (prephitmp_481);

  <bb 91>:
  # DEBUG D#686 => &D#697->_M_impl
  # DEBUG this => D#686
  # DEBUG this => D#686
  # DEBUG this => D#686
  MEM[(struct  &)this_15(D) + 1152] ={v} {CLOBBER};
  # DEBUG D#1231 => &this_15(D)->_switch_hold_vc
  # DEBUG this => D#1231
  # DEBUG D#628 => &D#1231->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1231->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1231->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1231->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _74 = MEM[(struct _Vector_base *)this_15(D) + 1120B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _74
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _74
  # DEBUG __n => D#622
  if (_74 != 0B)
    goto <bb 92>;
  else
    goto <bb 93>;

  <bb 92>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _74
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _74
  # DEBUG this => D#614
  # DEBUG D.101184 => D#615
  operator delete (_74);

  <bb 93>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 1120] ={v} {CLOBBER};
  # DEBUG D#1230 => &this_15(D)->_switch_hold_out
  # DEBUG this => D#1230
  # DEBUG D#628 => &D#1230->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1230->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1230->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1230->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _75 = MEM[(struct _Vector_base *)this_15(D) + 1096B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _75
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _75
  # DEBUG __n => D#622
  if (_75 != 0B)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _75
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _75
  # DEBUG this => D#614
  # DEBUG D.101169 => D#615
  operator delete (_75);

  <bb 95>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 1096] ={v} {CLOBBER};
  # DEBUG D#1229 => &this_15(D)->_switch_hold_in
  # DEBUG this => D#1229
  # DEBUG D#628 => &D#1229->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1229->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1229->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1229->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _80 = MEM[(struct _Vector_base *)this_15(D) + 1072B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _80
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _80
  # DEBUG __n => D#622
  if (_80 != 0B)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _80
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _80
  # DEBUG this => D#614
  # DEBUG D.101154 => D#615
  operator delete (_80);

  <bb 97>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 1072] ={v} {CLOBBER};
  # DEBUG D#2383 => &this_15(D)->_credit_buffer
  # DEBUG this => D#2383
  # DEBUG D#1058 => &D#2383->D.50924
  # DEBUG this => D#1058
  _79 = MEM[(struct vector *)this_15(D) + 1040B].D.50924._M_impl._M_finish;
  __first_321 = MEM[(struct vector *)this_15(D) + 1040B].D.50924._M_impl._M_start;
  # DEBUG __first => __first_321
  # DEBUG __last => _79
  # DEBUG __first => __first_321
  if (_79 == __first_321)
    goto <bb 109>;
  else
    goto <bb 98>;

  <bb 98>:

  <bb 99>:
  # __first_566 = PHI <__first_321(98), __first_324(107)>
  # DEBUG __first => __first_566
  # DEBUG __r => __first_566
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  # DEBUG D#2382 => &MEM[(struct deque *)__first_566].D.62618
  # DEBUG this => D#2382
  _77 = MEM[(struct _Deque_base *)__first_566]._M_impl._M_map;
  if (_77 != 0B)
    goto <bb 100>;
  else
    goto <bb 106>;

  <bb 100>:
  _326 = MEM[(struct _Deque_base *)__first_566]._M_impl._M_finish._M_node;
  _327 = _326 + 8;
  __nstart_328 = MEM[(struct _Deque_base *)__first_566]._M_impl._M_start._M_node;
  # DEBUG this => D#2382
  # DEBUG __nstart => __nstart_328
  # DEBUG __nfinish => _327
  # DEBUG __n => __nstart_328
  # DEBUG __n => __nstart_328
  if (_327 <= __nstart_328)
    goto <bb 105>;
  else
    goto <bb 101>;

  <bb 101>:

  <bb 102>:
  # __nstart_627 = PHI <__nstart_328(101), __nstart_331(103)>
  # DEBUG __n => __nstart_627
  _330 = *__nstart_627;
  # DEBUG this => D#2382
  # DEBUG __p => _330
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#2382->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _330
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _330
  # DEBUG this => D#1017
  # DEBUG D.121336 => D#1018
  operator delete (_330);
  __nstart_331 = __nstart_627 + 8;
  # DEBUG __n => __nstart_331
  # DEBUG __n => __nstart_331
  if (_327 <= __nstart_331)
    goto <bb 104>;
  else
    goto <bb 103>;

  <bb 103>:
  goto <bb 102>;

  <bb 104>:
  pretmp_415 = MEM[(struct _Deque_base *)__first_566]._M_impl._M_map;

  <bb 105>:
  # prephitmp_416 = PHI <pretmp_415(104), _77(100)>
  # DEBUG D#1042 => D#2382->_M_impl._M_map_size
  # DEBUG D#2393 => MEM[(struct _Deque_base *)__first_566]._M_impl._M_map
  # DEBUG D#1040 => D#2382
  # DEBUG D#1041 => D#1042
  # DEBUG __p => D#2393
  # DEBUG this => D#1040
  # DEBUG __n => D#1041
  # DEBUG D#1039 => D#1041
  # DEBUG D#1038 => D#1040
  # DEBUG D#1037 => D#1038
  # DEBUG this => D#1037
  # DEBUG D#1036 => D#1037
  # DEBUG this => D#1036
  # DEBUG this => NULL
  # DEBUG D.99630 => NULL
  # DEBUG this => NULL
  # DEBUG D#719 => &__map_alloc
  # DEBUG D#720 => D#1039
  # DEBUG __p => D#2393
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => D#2393
  # DEBUG this => D#715
  # DEBUG D.121346 => D#716
  operator delete (prephitmp_416);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 106>:
  # DEBUG D#1043 => &D#2382->_M_impl
  # DEBUG this => D#1043
  # DEBUG this => D#1043
  # DEBUG this => D#1043
  MEM[(struct  &)__first_566] ={v} {CLOBBER};
  __first_324 = __first_566 + 80;
  # DEBUG __first => __first_324
  # DEBUG __first => __first_324
  if (_79 == __first_324)
    goto <bb 108>;
  else
    goto <bb 107>;

  <bb 107>:
  goto <bb 99>;

  <bb 108>:
  pretmp_483 = MEM[(struct _Vector_base *)this_15(D) + 1040B]._M_impl._M_start;

  <bb 109>:
  # prephitmp_465 = PHI <pretmp_483(108), __first_321(97)>
  # DEBUG D#1059 => &D#2383->D.50924
  # DEBUG this => D#1059
  # DEBUG D#672 => D#1059->_M_impl._M_end_of_storage
  # DEBUG D#671 => (long int) D#672
  # DEBUG D#2392 => MEM[(struct _Vector_base *)this_15(D) + 1040B]._M_impl._M_start
  # DEBUG D#670 => (long int) D#2392
  # DEBUG D#669 => D#671 - D#670
  # DEBUG D#668 => D#669 /[ex] 80
  # DEBUG D#665 => D#1059
  # DEBUG D#666 => (long unsigned int) D#668
  # DEBUG __p => D#2392
  # DEBUG this => D#665
  # DEBUG __n => D#666
  # DEBUG D#664 => D#666
  # DEBUG D#663 => D#665
  if (prephitmp_465 != 0B)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  # DEBUG D#662 => &D#663->_M_impl
  # DEBUG D#660 => D#662
  # DEBUG D#661 => D#664
  # DEBUG __p => D#2392
  # DEBUG __a => D#660
  # DEBUG __n => D#661
  # DEBUG D#659 => D#661
  # DEBUG D#658 => D#660
  # DEBUG D#656 => D#658
  # DEBUG D#657 => D#659
  # DEBUG __p => D#2392
  # DEBUG this => D#656
  # DEBUG D.121316 => D#657
  operator delete (prephitmp_465);

  <bb 111>:
  # DEBUG D#667 => &D#1059->_M_impl
  # DEBUG this => D#667
  # DEBUG this => D#667
  # DEBUG this => D#667
  MEM[(struct  &)this_15(D) + 1040] ={v} {CLOBBER};
  # DEBUG D#2381 => &this_15(D)->_output_buffer
  # DEBUG this => D#2381
  # DEBUG D#1015 => &D#2381->D.50176
  # DEBUG this => D#1015
  _68 = MEM[(struct vector *)this_15(D) + 1016B].D.50176._M_impl._M_finish;
  __first_316 = MEM[(struct vector *)this_15(D) + 1016B].D.50176._M_impl._M_start;
  # DEBUG __first => __first_316
  # DEBUG __last => _68
  # DEBUG __first => __first_316
  if (_68 == __first_316)
    goto <bb 123>;
  else
    goto <bb 112>;

  <bb 112>:

  <bb 113>:
  # __first_626 = PHI <__first_316(112), __first_319(121)>
  # DEBUG __first => __first_626
  # DEBUG __r => __first_626
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  # DEBUG D#2380 => &MEM[(struct deque *)__first_626].D.54933
  # DEBUG this => D#2380
  _333 = MEM[(struct _Deque_base *)__first_626]._M_impl._M_map;
  if (_333 != 0B)
    goto <bb 114>;
  else
    goto <bb 120>;

  <bb 114>:
  _334 = MEM[(struct _Deque_base *)__first_626]._M_impl._M_finish._M_node;
  _335 = _334 + 8;
  __nstart_336 = MEM[(struct _Deque_base *)__first_626]._M_impl._M_start._M_node;
  # DEBUG this => D#2380
  # DEBUG __nstart => __nstart_336
  # DEBUG __nfinish => _335
  # DEBUG __n => __nstart_336
  # DEBUG __n => __nstart_336
  if (_335 <= __nstart_336)
    goto <bb 119>;
  else
    goto <bb 115>;

  <bb 115>:

  <bb 116>:
  # __nstart_628 = PHI <__nstart_336(115), __nstart_339(117)>
  # DEBUG __n => __nstart_628
  _338 = *__nstart_628;
  # DEBUG D#981 => D#2380
  # DEBUG __p => _338
  # DEBUG this => D#981
  # DEBUG D#980 => D#981
  # DEBUG __size => 8
  # DEBUG D#979 => &D#980->_M_impl
  # DEBUG D#977 => D#979
  # DEBUG __p => _338
  # DEBUG __a => D#977
  # DEBUG __n => D#978
  # DEBUG D#976 => D#978
  # DEBUG D#975 => D#977
  # DEBUG D#973 => D#975
  # DEBUG D#974 => D#976
  # DEBUG __p => _338
  # DEBUG this => D#973
  # DEBUG D.121363 => D#974
  operator delete (_338);
  __nstart_339 = __nstart_628 + 8;
  # DEBUG __n => __nstart_339
  # DEBUG __n => __nstart_339
  if (_335 <= __nstart_339)
    goto <bb 118>;
  else
    goto <bb 117>;

  <bb 117>:
  goto <bb 116>;

  <bb 118>:
  pretmp_161 = MEM[(struct _Deque_base *)__first_626]._M_impl._M_map;

  <bb 119>:
  # prephitmp_162 = PHI <pretmp_161(118), _333(114)>
  # DEBUG D#999 => D#2380->_M_impl._M_map_size
  # DEBUG D#2391 => MEM[(struct _Deque_base *)__first_626]._M_impl._M_map
  # DEBUG D#997 => D#2380
  # DEBUG D#998 => D#999
  # DEBUG __p => D#2391
  # DEBUG this => D#997
  # DEBUG __n => D#998
  # DEBUG D#996 => D#998
  # DEBUG D#995 => D#997
  # DEBUG D#994 => D#995
  # DEBUG this => D#994
  # DEBUG D#993 => D#994
  # DEBUG this => D#993
  # DEBUG this => NULL
  # DEBUG D.99274 => NULL
  # DEBUG this => NULL
  # DEBUG D#709 => &__map_alloc
  # DEBUG D#710 => D#996
  # DEBUG __p => D#2391
  # DEBUG __a => D#709
  # DEBUG __n => D#710
  # DEBUG D#708 => D#710
  # DEBUG D#707 => D#709
  # DEBUG D#705 => D#707
  # DEBUG D#706 => D#708
  # DEBUG __p => D#2391
  # DEBUG this => D#705
  # DEBUG D.121373 => D#706
  operator delete (prephitmp_162);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 120>:
  # DEBUG D#1000 => &D#2380->_M_impl
  # DEBUG this => D#1000
  # DEBUG this => D#1000
  # DEBUG this => D#1000
  MEM[(struct  &)__first_626] ={v} {CLOBBER};
  __first_319 = __first_626 + 80;
  # DEBUG __first => __first_319
  # DEBUG __first => __first_319
  if (_68 == __first_319)
    goto <bb 122>;
  else
    goto <bb 121>;

  <bb 121>:
  goto <bb 113>;

  <bb 122>:
  pretmp_467 = MEM[(struct _Vector_base *)this_15(D) + 1016B]._M_impl._M_start;

  <bb 123>:
  # prephitmp_468 = PHI <pretmp_467(122), __first_316(111)>
  # DEBUG D#1016 => &D#2381->D.50176
  # DEBUG this => D#1016
  # DEBUG D#653 => D#1016->_M_impl._M_end_of_storage
  # DEBUG D#652 => (long int) D#653
  # DEBUG D#2390 => MEM[(struct _Vector_base *)this_15(D) + 1016B]._M_impl._M_start
  # DEBUG D#651 => (long int) D#2390
  # DEBUG D#650 => D#652 - D#651
  # DEBUG D#649 => D#650 /[ex] 80
  # DEBUG D#646 => D#1016
  # DEBUG D#647 => (long unsigned int) D#649
  # DEBUG __p => D#2390
  # DEBUG this => D#646
  # DEBUG __n => D#647
  # DEBUG D#645 => D#647
  # DEBUG D#644 => D#646
  if (prephitmp_468 != 0B)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  # DEBUG D#643 => &D#644->_M_impl
  # DEBUG D#641 => D#643
  # DEBUG D#642 => D#645
  # DEBUG __p => D#2390
  # DEBUG __a => D#641
  # DEBUG __n => D#642
  # DEBUG D#640 => D#642
  # DEBUG D#639 => D#641
  # DEBUG D#637 => D#639
  # DEBUG D#638 => D#640
  # DEBUG __p => D#2390
  # DEBUG this => D#637
  # DEBUG D.121290 => D#638
  operator delete (prephitmp_468);

  <bb 125>:
  # DEBUG D#648 => &D#1016->_M_impl
  # DEBUG this => D#648
  # DEBUG this => D#648
  # DEBUG this => D#648
  MEM[(struct  &)this_15(D) + 1016] ={v} {CLOBBER};
  # DEBUG D#1227 => &this_15(D)->_sw_rr_offset
  # DEBUG this => D#1227
  # DEBUG D#628 => &D#1227->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1227->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1227->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1227->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _81 = MEM[(struct _Vector_base *)this_15(D) + 976B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _81
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _81
  # DEBUG __n => D#622
  if (_81 != 0B)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _81
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _81
  # DEBUG this => D#614
  # DEBUG D.101139 => D#615
  operator delete (_81);

  <bb 127>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 976] ={v} {CLOBBER};
  # DEBUG D#1226 => &this_15(D)->_vc_rr_offset
  # DEBUG this => D#1226
  # DEBUG D#628 => &D#1226->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1226->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1226->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1226->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _82 = MEM[(struct _Vector_base *)this_15(D) + 952B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _82
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _82
  # DEBUG __n => D#622
  if (_82 != 0B)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _82
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _82
  # DEBUG this => D#614
  # DEBUG D.101124 => D#615
  operator delete (_82);

  <bb 129>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 952] ={v} {CLOBBER};
  # DEBUG D#1224 => &this_15(D)->_next_buf
  # DEBUG this => D#1224
  # DEBUG D#610 => &D#1224->D.49421
  # DEBUG this => D#610
  # DEBUG D#613 => D#1224->D.49421._M_impl._M_finish
  # DEBUG D#612 => D#1224->D.49421._M_impl._M_start
  # DEBUG __first => D#612
  # DEBUG __last => D#613
  # DEBUG D.96077 => NULL
  # DEBUG D#370 => D#612
  # DEBUG D#371 => D#613
  # DEBUG __first => D#370
  # DEBUG __last => D#371
  # DEBUG D#369 => D#371
  # DEBUG D#368 => D#370
  # DEBUG D#366 => D#368
  # DEBUG D#367 => D#369
  # DEBUG D.94777 => D#366
  # DEBUG D.94776 => D#367
  # DEBUG D#611 => &D#1224->D.49421
  # DEBUG this => D#611
  # DEBUG D#609 => D#611->_M_impl._M_end_of_storage
  # DEBUG D#608 => (long int) D#609
  _83 = MEM[(struct _Vector_base *)this_15(D) + 904B]._M_impl._M_start;
  # DEBUG D#607 => (long int) _83
  # DEBUG D#606 => D#608 - D#607
  # DEBUG D#605 => D#606 /[ex] 8
  # DEBUG D#604 => (long unsigned int) D#605
  # DEBUG this => D#611
  # DEBUG __p => _83
  # DEBUG __n => D#604
  if (_83 != 0B)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#602 => &D#611->_M_impl
  # DEBUG D#600 => D#602
  # DEBUG D#601 => D#604
  # DEBUG __p => _83
  # DEBUG __a => D#600
  # DEBUG __n => D#601
  # DEBUG D#599 => D#601
  # DEBUG D#598 => D#600
  # DEBUG D#596 => D#598
  # DEBUG D#597 => D#599
  # DEBUG __p => _83
  # DEBUG this => D#596
  # DEBUG D.101109 => D#597
  operator delete (_83);

  <bb 131>:
  # DEBUG D#603 => &D#611->_M_impl
  # DEBUG this => D#603
  # DEBUG this => D#603
  # DEBUG this => D#603
  MEM[(struct  &)this_15(D) + 904] ={v} {CLOBBER};
  # DEBUG D#1223 => &this_15(D)->_buf
  # DEBUG this => D#1223
  # DEBUG D#590 => &D#1223->D.48674
  # DEBUG this => D#590
  # DEBUG D#593 => D#1223->D.48674._M_impl._M_finish
  # DEBUG D#592 => D#1223->D.48674._M_impl._M_start
  # DEBUG __first => D#592
  # DEBUG __last => D#593
  # DEBUG D.96002 => NULL
  # DEBUG D#360 => D#592
  # DEBUG D#361 => D#593
  # DEBUG __first => D#360
  # DEBUG __last => D#361
  # DEBUG D#359 => D#361
  # DEBUG D#358 => D#360
  # DEBUG D#356 => D#358
  # DEBUG D#357 => D#359
  # DEBUG D.94733 => D#356
  # DEBUG D.94732 => D#357
  # DEBUG D#591 => &D#1223->D.48674
  # DEBUG this => D#591
  # DEBUG D#589 => D#591->_M_impl._M_end_of_storage
  # DEBUG D#588 => (long int) D#589
  _84 = MEM[(struct _Vector_base *)this_15(D) + 880B]._M_impl._M_start;
  # DEBUG D#587 => (long int) _84
  # DEBUG D#586 => D#588 - D#587
  # DEBUG D#585 => D#586 /[ex] 8
  # DEBUG D#584 => (long unsigned int) D#585
  # DEBUG this => D#591
  # DEBUG __p => _84
  # DEBUG __n => D#584
  if (_84 != 0B)
    goto <bb 132>;
  else
    goto <bb 133>;

  <bb 132>:
  # DEBUG D#582 => &D#591->_M_impl
  # DEBUG D#580 => D#582
  # DEBUG D#581 => D#584
  # DEBUG __p => _84
  # DEBUG __a => D#580
  # DEBUG __n => D#581
  # DEBUG D#579 => D#581
  # DEBUG D#578 => D#580
  # DEBUG D#576 => D#578
  # DEBUG D#577 => D#579
  # DEBUG __p => _84
  # DEBUG this => D#576
  # DEBUG D.101094 => D#577
  operator delete (_84);

  <bb 133>:
  # DEBUG D#583 => &D#591->_M_impl
  # DEBUG this => D#583
  # DEBUG this => D#583
  # DEBUG this => D#583
  MEM[(struct  &)this_15(D) + 880] ={v} {CLOBBER};
  # DEBUG D#1221 => &this_15(D)->_out_queue_credits
  # DEBUG this => D#1221
  _85 = &MEM[(struct map *)this_15(D) + 832B]._M_t;
  # DEBUG this => _85
  _133 = MEM[(struct _Rb_tree_node_base * *)this_15(D) + 848B];
  # DEBUG D#118 => _85
  # DEBUG this => D#118
  std::_Rb_tree<int, std::pair<const int, Credit*>, std::_Select1st<std::pair<const int, Credit*> >, std::less<int>, std::allocator<std::pair<const int, Credit*> > >::_M_erase (_85, _133);
  # DEBUG D#1200 => &MEM[(struct _Rb_tree *)_85]._M_impl
  # DEBUG this => D#1200
  # DEBUG this => D#1200
  # DEBUG this => D#1200
  MEM[(struct  &)this_15(D) + 832] ={v} {CLOBBER};
  # DEBUG D#1220 => &this_15(D)->_crossbar_flits
  # DEBUG this => D#1220
  # DEBUG D#899 => &D#1220->D.46860
  # DEBUG this => D#899
  # DEBUG this => D#1220
  # DEBUG D#73 => &D#1220->D.46860._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#907 => MEM[(const struct iterator &)D#1220 + 48]._M_cur
  # DEBUG D.98057 => D#907
  # DEBUG D#906 => MEM[(const struct iterator &)D#1220 + 48]._M_first
  # DEBUG D.98058 => D#906
  # DEBUG D#905 => MEM[(const struct iterator &)D#1220 + 48]._M_last
  # DEBUG D.98059 => D#905
  # DEBUG D#904 => MEM[(const struct iterator &)D#1220 + 48]._M_node
  # DEBUG D.98060 => D#904
  # DEBUG this => D#1220
  # DEBUG D#72 => &D#1220->D.46860._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#903 => MEM[(const struct iterator &)D#1220 + 16]._M_cur
  # DEBUG D.98053 => D#903
  # DEBUG D#902 => MEM[(const struct iterator &)D#1220 + 16]._M_first
  # DEBUG D.98054 => D#902
  # DEBUG D#901 => MEM[(const struct iterator &)D#1220 + 16]._M_last
  # DEBUG D.98055 => D#901
  # DEBUG D#900 => MEM[(const struct iterator &)D#1220 + 16]._M_node
  # DEBUG D.98056 => D#900
  # DEBUG D#114 => D#1220
  # DEBUG this => D#114
  # DEBUG __first => D#115
  # DEBUG __last => D#116
  # DEBUG D.98041 => D#117
  # DEBUG D#2379 => &MEM[(struct deque *)this_15(D) + 752B].D.46860
  # DEBUG this => D#2379
  _223 = MEM[(struct _Deque_base *)this_15(D) + 752B]._M_impl._M_map;
  if (_223 != 0B)
    goto <bb 134>;
  else
    goto <bb 140>;

  <bb 134>:
  _361 = MEM[(struct _Deque_base *)this_15(D) + 752B]._M_impl._M_finish._M_node;
  _362 = _361 + 8;
  __nstart_363 = MEM[(struct _Deque_base *)this_15(D) + 752B]._M_impl._M_start._M_node;
  # DEBUG D#787 => D#2379
  # DEBUG __nstart => __nstart_363
  # DEBUG __nfinish => _362
  # DEBUG this => D#787
  # DEBUG __n => __nstart_363
  if (_362 <= __nstart_363)
    goto <bb 139>;
  else
    goto <bb 135>;

  <bb 135>:

  <bb 136>:
  # __nstart_630 = PHI <__nstart_363(135), __nstart_366(137)>
  # DEBUG __n => __nstart_630
  _365 = *__nstart_630;
  # DEBUG this => D#785
  # DEBUG __p => _365
  # DEBUG __size => 24
  # DEBUG D#784 => &D#786->_M_impl
  # DEBUG D#782 => D#784
  # DEBUG __p => _365
  # DEBUG __a => D#782
  # DEBUG __n => D#783
  # DEBUG D#781 => D#783
  # DEBUG D#780 => D#782
  # DEBUG D#778 => D#780
  # DEBUG D#779 => D#781
  # DEBUG __p => _365
  # DEBUG this => D#778
  # DEBUG D.121511 => D#779
  operator delete (_365);
  __nstart_366 = __nstart_630 + 8;
  # DEBUG __n => __nstart_366
  # DEBUG __n => __nstart_366
  if (_362 <= __nstart_366)
    goto <bb 138>;
  else
    goto <bb 137>;

  <bb 137>:
  goto <bb 136>;

  <bb 138>:
  pretmp_443 = MEM[(struct _Deque_base *)this_15(D) + 752B]._M_impl._M_map;

  <bb 139>:
  # prephitmp_428 = PHI <pretmp_443(138), _223(134)>
  # DEBUG D#897 => D#2379->_M_impl._M_map_size
  # DEBUG D#2389 => MEM[(struct _Deque_base *)this_15(D) + 752B]._M_impl._M_map
  # DEBUG D#895 => D#2379
  # DEBUG D#896 => D#897
  # DEBUG __p => D#2389
  # DEBUG this => D#895
  # DEBUG __n => D#896
  # DEBUG D#894 => D#896
  # DEBUG D#893 => D#895
  # DEBUG D#892 => D#893
  # DEBUG this => D#892
  # DEBUG D#891 => D#892
  # DEBUG this => D#891
  # DEBUG this => NULL
  # DEBUG D.97975 => NULL
  # DEBUG this => NULL
  # DEBUG D#568 => &__map_alloc
  # DEBUG D#569 => D#894
  # DEBUG __p => D#2389
  # DEBUG __a => D#568
  # DEBUG __n => D#569
  # DEBUG D#567 => D#569
  # DEBUG D#566 => D#568
  # DEBUG D#564 => D#566
  # DEBUG D#565 => D#567
  # DEBUG __p => D#2389
  # DEBUG this => D#564
  # DEBUG D.121521 => D#565
  operator delete (prephitmp_428);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 140>:
  # DEBUG D#898 => &D#2379->_M_impl
  # DEBUG this => D#898
  # DEBUG this => D#898
  # DEBUG this => D#898
  MEM[(struct  &)this_15(D) + 752] ={v} {CLOBBER};
  # DEBUG D#1219 => &this_15(D)->_sw_alloc_vcs
  # DEBUG this => D#1219
  # DEBUG D#882 => &D#1219->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#1219
  # DEBUG D#68 => &D#1219->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#1219 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#1219 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#1219 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#1219 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#1219
  # DEBUG D#67 => &D#1219->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#1219 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#1219 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#1219 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#1219 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#1219
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  _87 = &MEM[(struct deque *)this_15(D) + 672B].D.45936;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_87);
  MEM[(struct  &)this_15(D) + 672] ={v} {CLOBBER};
  # DEBUG D#1218 => &this_15(D)->_sw_hold_vcs
  # DEBUG this => D#1218
  # DEBUG D#882 => &D#1218->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#1218
  # DEBUG D#68 => &D#1218->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#1218 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#1218 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#1218 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#1218 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#1218
  # DEBUG D#67 => &D#1218->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#1218 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#1218 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#1218 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#1218 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#1218
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  _88 = &MEM[(struct deque *)this_15(D) + 592B].D.45936;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_88);
  MEM[(struct  &)this_15(D) + 592] ={v} {CLOBBER};
  # DEBUG D#1217 => &this_15(D)->_vc_alloc_vcs
  # DEBUG this => D#1217
  # DEBUG D#882 => &D#1217->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#1217
  # DEBUG D#68 => &D#1217->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#1217 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#1217 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#1217 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#1217 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#1217
  # DEBUG D#67 => &D#1217->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#1217 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#1217 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#1217 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#1217 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#1217
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  _89 = &MEM[(struct deque *)this_15(D) + 512B].D.45936;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_89);
  MEM[(struct  &)this_15(D) + 512] ={v} {CLOBBER};
  # DEBUG D#1216 => &this_15(D)->_route_vcs
  # DEBUG this => D#1216
  # DEBUG D#865 => &D#1216->D.45014
  # DEBUG this => D#865
  # DEBUG this => D#1216
  # DEBUG D#65 => &D#1216->D.45014._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#65
  # DEBUG D#873 => MEM[(const struct iterator &)D#1216 + 48]._M_cur
  # DEBUG D.97875 => D#873
  # DEBUG D#872 => MEM[(const struct iterator &)D#1216 + 48]._M_first
  # DEBUG D.97876 => D#872
  # DEBUG D#871 => MEM[(const struct iterator &)D#1216 + 48]._M_last
  # DEBUG D.97877 => D#871
  # DEBUG D#870 => MEM[(const struct iterator &)D#1216 + 48]._M_node
  # DEBUG D.97878 => D#870
  # DEBUG this => D#1216
  # DEBUG D#64 => &D#1216->D.45014._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#64
  # DEBUG D#869 => MEM[(const struct iterator &)D#1216 + 16]._M_cur
  # DEBUG D.97871 => D#869
  # DEBUG D#868 => MEM[(const struct iterator &)D#1216 + 16]._M_first
  # DEBUG D.97872 => D#868
  # DEBUG D#867 => MEM[(const struct iterator &)D#1216 + 16]._M_last
  # DEBUG D.97873 => D#867
  # DEBUG D#866 => MEM[(const struct iterator &)D#1216 + 16]._M_node
  # DEBUG D.97874 => D#866
  # DEBUG D#106 => D#1216
  # DEBUG this => D#106
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D.97859 => D#109
  # DEBUG D#2378 => &MEM[(struct deque *)this_15(D) + 432B].D.45014
  # DEBUG this => D#2378
  _225 = MEM[(struct _Deque_base *)this_15(D) + 432B]._M_impl._M_map;
  if (_225 != 0B)
    goto <bb 141>;
  else
    goto <bb 147>;

  <bb 141>:
  _354 = MEM[(struct _Deque_base *)this_15(D) + 432B]._M_impl._M_finish._M_node;
  _355 = _354 + 8;
  __nstart_356 = MEM[(struct _Deque_base *)this_15(D) + 432B]._M_impl._M_start._M_node;
  # DEBUG D#755 => D#2378
  # DEBUG __nstart => __nstart_356
  # DEBUG __nfinish => _355
  # DEBUG this => D#755
  # DEBUG __n => __nstart_356
  if (_355 <= __nstart_356)
    goto <bb 146>;
  else
    goto <bb 142>;

  <bb 142>:

  <bb 143>:
  # __nstart_629 = PHI <__nstart_356(142), __nstart_359(144)>
  # DEBUG __n => __nstart_629
  _358 = *__nstart_629;
  # DEBUG this => D#753
  # DEBUG __p => _358
  # DEBUG __size => 12
  # DEBUG D#752 => &D#754->_M_impl
  # DEBUG D#750 => D#752
  # DEBUG __p => _358
  # DEBUG __a => D#750
  # DEBUG __n => D#751
  # DEBUG D#749 => D#751
  # DEBUG D#748 => D#750
  # DEBUG D#746 => D#748
  # DEBUG D#747 => D#749
  # DEBUG __p => _358
  # DEBUG this => D#746
  # DEBUG D.121484 => D#747
  operator delete (_358);
  __nstart_359 = __nstart_629 + 8;
  # DEBUG __n => __nstart_359
  # DEBUG __n => __nstart_359
  if (_355 <= __nstart_359)
    goto <bb 145>;
  else
    goto <bb 144>;

  <bb 144>:
  goto <bb 143>;

  <bb 145>:
  pretmp_440 = MEM[(struct _Deque_base *)this_15(D) + 432B]._M_impl._M_map;

  <bb 146>:
  # prephitmp_441 = PHI <pretmp_440(145), _225(141)>
  # DEBUG D#863 => D#2378->_M_impl._M_map_size
  # DEBUG D#2388 => MEM[(struct _Deque_base *)this_15(D) + 432B]._M_impl._M_map
  # DEBUG D#861 => D#2378
  # DEBUG D#862 => D#863
  # DEBUG __p => D#2388
  # DEBUG this => D#861
  # DEBUG __n => D#862
  # DEBUG D#860 => D#862
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#859
  # DEBUG this => D#858
  # DEBUG D#857 => D#858
  # DEBUG this => D#857
  # DEBUG this => NULL
  # DEBUG D.97793 => NULL
  # DEBUG this => NULL
  # DEBUG D#552 => &__map_alloc
  # DEBUG D#553 => D#860
  # DEBUG __p => D#2388
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => D#2388
  # DEBUG this => D#548
  # DEBUG D.121494 => D#549
  operator delete (prephitmp_441);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 147>:
  # DEBUG D#864 => &D#2378->_M_impl
  # DEBUG this => D#864
  # DEBUG this => D#864
  # DEBUG this => D#864
  MEM[(struct  &)this_15(D) + 432] ={v} {CLOBBER};
  # DEBUG D#1215 => &this_15(D)->_proc_credits
  # DEBUG this => D#1215
  # DEBUG D#848 => &D#1215->D.44092
  # DEBUG this => D#848
  # DEBUG this => D#1215
  # DEBUG D#100 => &D#1215->D.44092._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#100
  # DEBUG D#856 => MEM[(const struct iterator &)D#1215 + 48]._M_cur
  # DEBUG D.97784 => D#856
  # DEBUG D#855 => MEM[(const struct iterator &)D#1215 + 48]._M_first
  # DEBUG D.97785 => D#855
  # DEBUG D#854 => MEM[(const struct iterator &)D#1215 + 48]._M_last
  # DEBUG D.97786 => D#854
  # DEBUG D#853 => MEM[(const struct iterator &)D#1215 + 48]._M_node
  # DEBUG D.97787 => D#853
  # DEBUG this => D#1215
  # DEBUG D#101 => &D#1215->D.44092._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#101
  # DEBUG D#852 => MEM[(const struct iterator &)D#1215 + 16]._M_cur
  # DEBUG D.97780 => D#852
  # DEBUG D#851 => MEM[(const struct iterator &)D#1215 + 16]._M_first
  # DEBUG D.97781 => D#851
  # DEBUG D#850 => MEM[(const struct iterator &)D#1215 + 16]._M_last
  # DEBUG D.97782 => D#850
  # DEBUG D#849 => MEM[(const struct iterator &)D#1215 + 16]._M_node
  # DEBUG D.97783 => D#849
  # DEBUG D#102 => D#1215
  # DEBUG this => D#102
  # DEBUG __first => D#103
  # DEBUG __last => D#104
  # DEBUG D.97768 => D#105
  # DEBUG D#2377 => &MEM[(struct deque *)this_15(D) + 352B].D.44092
  # DEBUG this => D#2377
  _93 = MEM[(struct _Deque_base *)this_15(D) + 352B]._M_impl._M_map;
  if (_93 != 0B)
    goto <bb 148>;
  else
    goto <bb 154>;

  <bb 148>:
  _347 = MEM[(struct _Deque_base *)this_15(D) + 352B]._M_impl._M_finish._M_node;
  _348 = _347 + 8;
  __nstart_349 = MEM[(struct _Deque_base *)this_15(D) + 352B]._M_impl._M_start._M_node;
  # DEBUG D#739 => D#2377
  # DEBUG __nstart => __nstart_349
  # DEBUG __nfinish => _348
  # DEBUG this => D#739
  # DEBUG __n => __nstart_349
  if (_348 <= __nstart_349)
    goto <bb 153>;
  else
    goto <bb 149>;

  <bb 149>:

  <bb 150>:
  # __nstart_567 = PHI <__nstart_349(149), __nstart_352(151)>
  # DEBUG __n => __nstart_567
  _351 = *__nstart_567;
  # DEBUG this => D#737
  # DEBUG __p => _351
  # DEBUG __size => 24
  # DEBUG D#736 => &D#738->_M_impl
  # DEBUG D#734 => D#736
  # DEBUG __p => _351
  # DEBUG __a => D#734
  # DEBUG __n => D#735
  # DEBUG D#733 => D#735
  # DEBUG D#732 => D#734
  # DEBUG D#730 => D#732
  # DEBUG D#731 => D#733
  # DEBUG __p => _351
  # DEBUG this => D#730
  # DEBUG D.121457 => D#731
  operator delete (_351);
  __nstart_352 = __nstart_567 + 8;
  # DEBUG __n => __nstart_352
  # DEBUG __n => __nstart_352
  if (_348 <= __nstart_352)
    goto <bb 152>;
  else
    goto <bb 151>;

  <bb 151>:
  goto <bb 150>;

  <bb 152>:
  pretmp_453 = MEM[(struct _Deque_base *)this_15(D) + 352B]._M_impl._M_map;

  <bb 153>:
  # prephitmp_454 = PHI <pretmp_453(152), _93(148)>
  # DEBUG D#846 => D#2377->_M_impl._M_map_size
  # DEBUG D#2387 => MEM[(struct _Deque_base *)this_15(D) + 352B]._M_impl._M_map
  # DEBUG D#844 => D#2377
  # DEBUG D#845 => D#846
  # DEBUG __p => D#2387
  # DEBUG this => D#844
  # DEBUG __n => D#845
  # DEBUG D#843 => D#845
  # DEBUG D#842 => D#844
  # DEBUG D#841 => D#842
  # DEBUG this => D#841
  # DEBUG D#840 => D#841
  # DEBUG this => D#840
  # DEBUG this => NULL
  # DEBUG D.97702 => NULL
  # DEBUG this => NULL
  # DEBUG D#544 => &__map_alloc
  # DEBUG D#545 => D#843
  # DEBUG __p => D#2387
  # DEBUG __a => D#544
  # DEBUG __n => D#545
  # DEBUG D#543 => D#545
  # DEBUG D#542 => D#544
  # DEBUG D#540 => D#542
  # DEBUG D#541 => D#543
  # DEBUG __p => D#2387
  # DEBUG this => D#540
  # DEBUG D.121467 => D#541
  operator delete (prephitmp_454);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 154>:
  # DEBUG D#847 => &D#2377->_M_impl
  # DEBUG this => D#847
  # DEBUG this => D#847
  # DEBUG this => D#847
  MEM[(struct  &)this_15(D) + 352] ={v} {CLOBBER};
  # DEBUG D#1214 => &this_15(D)->_in_queue_flits
  # DEBUG this => D#1214
  _65 = &MEM[(struct map *)this_15(D) + 304B]._M_t;
  # DEBUG this => _65
  _132 = MEM[(struct _Rb_tree_node_base * *)this_15(D) + 320B];
  # DEBUG D#99 => _65
  # DEBUG this => D#99
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_65, _132);
  # DEBUG D#1134 => &MEM[(struct _Rb_tree *)_65]._M_impl
  # DEBUG this => D#1134
  # DEBUG this => D#1134
  # DEBUG this => D#1134
  MEM[(struct  &)this_15(D) + 304] ={v} {CLOBBER};
  # DEBUG D#2376 => &this_15(D)->D.51790
  # DEBUG this => D#2376
  MEM[(struct Router *)this_15(D)].D.42039.D.31271._vptr.Module = &MEM[(void *)&_ZTV6Router + 16B];
  # DEBUG D#533 => &D#2376->_channel_faults
  # DEBUG this => D#533
  # DEBUG D#2374 => &MEM[(struct vector *)this_15(D) + 240B].D.41946
  # DEBUG this => D#2374
  # DEBUG this => D#2374
  _215 = MEM[(struct _Bvector_base *)this_15(D) + 240B]._M_impl._M_start.D.15778._M_p;
  if (_215 != 0B)
    goto <bb 155>;
  else
    goto <bb 156>;

  <bb 155>:
  # DEBUG D#523 => &D#2374->_M_impl
  _368 = MEM[(long unsigned int * *)this_15(D) + 272B];
  # DEBUG D#516 => D#523
  # DEBUG this => D#516
  _370 = (long int) _368;
  _371 = (long int) _215;
  _372 = _370 - _371;
  # DEBUG D#526 => _372 /[ex] 8
  # DEBUG D#525 => (const size_t) D#526
  # DEBUG __n => D#525
  _373 = (long unsigned int) _372;
  _374 = -_373;
  _375 = _368 + _374;
  # DEBUG D#524 => &D#2374->_M_impl
  # DEBUG D#521 => D#524
  # DEBUG D#522 => D#525
  # DEBUG __p => _375
  # DEBUG __a => D#521
  # DEBUG __n => D#522
  # DEBUG D#520 => D#522
  # DEBUG D#519 => D#521
  # DEBUG D#517 => D#519
  # DEBUG D#518 => D#520
  # DEBUG __p => _375
  # DEBUG this => D#517
  # DEBUG D.121530 => D#518
  operator delete (_375);

  <bb 156>:
  # DEBUG D#527 => &D#2374->_M_impl
  # DEBUG this => D#527
  # DEBUG this => D#527
  # DEBUG this => D#527
  MEM[(struct  &)this_15(D) + 240] ={v} {CLOBBER};
  # DEBUG D#532 => &D#2376->_output_credits
  # DEBUG this => D#532
  # DEBUG D#512 => &D#532->D.41043
  # DEBUG this => D#512
  # DEBUG D#515 => D#532->D.41043._M_impl._M_finish
  # DEBUG D#514 => D#532->D.41043._M_impl._M_start
  # DEBUG D#353 => D#514
  # DEBUG D#354 => D#515
  # DEBUG __first => D#353
  # DEBUG __last => D#354
  # DEBUG D.95619 => D#355
  # DEBUG D#352 => D#354
  # DEBUG D#351 => D#353
  # DEBUG D#349 => D#351
  # DEBUG D#350 => D#352
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.94658 => D#345
  # DEBUG D.94657 => D#346
  # DEBUG D#513 => &D#532->D.41043
  # DEBUG this => D#513
  # DEBUG D#511 => D#513->_M_impl._M_end_of_storage
  # DEBUG D#510 => (long int) D#511
  _342 = MEM[(struct _Vector_base *)this_15(D) + 216B]._M_impl._M_start;
  # DEBUG D#509 => (long int) _342
  # DEBUG D#508 => D#510 - D#509
  # DEBUG D#507 => D#508 /[ex] 8
  # DEBUG D#504 => D#513
  # DEBUG D#505 => (long unsigned int) D#507
  # DEBUG __p => _342
  # DEBUG this => D#504
  # DEBUG __n => D#505
  # DEBUG D#503 => D#505
  # DEBUG D#502 => D#504
  if (_342 != 0B)
    goto <bb 157>;
  else
    goto <bb 158>;

  <bb 157>:
  # DEBUG D#501 => &D#502->_M_impl
  # DEBUG D#499 => D#501
  # DEBUG D#500 => D#503
  # DEBUG __p => _342
  # DEBUG __a => D#499
  # DEBUG __n => D#500
  # DEBUG D#498 => D#500
  # DEBUG D#497 => D#499
  # DEBUG D#495 => D#497
  # DEBUG D#496 => D#498
  # DEBUG __p => _342
  # DEBUG this => D#495
  # DEBUG D.121391 => D#496
  operator delete (_342);

  <bb 158>:
  # DEBUG D#506 => &D#513->_M_impl
  # DEBUG this => D#506
  # DEBUG this => D#506
  # DEBUG this => D#506
  MEM[(struct  &)this_15(D) + 216] ={v} {CLOBBER};
  # DEBUG D#531 => &D#2376->_output_channels
  # DEBUG this => D#531
  # DEBUG D#491 => &D#531->D.40296
  # DEBUG this => D#491
  # DEBUG D#494 => D#531->D.40296._M_impl._M_finish
  # DEBUG D#493 => D#531->D.40296._M_impl._M_start
  # DEBUG D#342 => D#493
  # DEBUG D#343 => D#494
  # DEBUG __first => D#342
  # DEBUG __last => D#343
  # DEBUG D.95539 => D#344
  # DEBUG D#341 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#338 => D#340
  # DEBUG D#339 => D#341
  # DEBUG __first => D#338
  # DEBUG __last => D#339
  # DEBUG D#337 => D#339
  # DEBUG D#336 => D#338
  # DEBUG D#334 => D#336
  # DEBUG D#335 => D#337
  # DEBUG D.94620 => D#334
  # DEBUG D.94619 => D#335
  # DEBUG D#492 => &D#531->D.40296
  # DEBUG this => D#492
  # DEBUG D#490 => D#492->_M_impl._M_end_of_storage
  # DEBUG D#489 => (long int) D#490
  _343 = MEM[(struct _Vector_base *)this_15(D) + 192B]._M_impl._M_start;
  # DEBUG D#488 => (long int) _343
  # DEBUG D#487 => D#489 - D#488
  # DEBUG D#486 => D#487 /[ex] 8
  # DEBUG D#483 => D#492
  # DEBUG D#484 => (long unsigned int) D#486
  # DEBUG __p => _343
  # DEBUG this => D#483
  # DEBUG __n => D#484
  # DEBUG D#482 => D#484
  # DEBUG D#481 => D#483
  if (_343 != 0B)
    goto <bb 159>;
  else
    goto <bb 160>;

  <bb 159>:
  # DEBUG D#480 => &D#481->_M_impl
  # DEBUG D#478 => D#480
  # DEBUG D#479 => D#482
  # DEBUG __p => _343
  # DEBUG __a => D#478
  # DEBUG __n => D#479
  # DEBUG D#477 => D#479
  # DEBUG D#476 => D#478
  # DEBUG D#474 => D#476
  # DEBUG D#475 => D#477
  # DEBUG __p => _343
  # DEBUG this => D#474
  # DEBUG D.121406 => D#475
  operator delete (_343);

  <bb 160>:
  # DEBUG D#485 => &D#492->_M_impl
  # DEBUG this => D#485
  # DEBUG this => D#485
  # DEBUG this => D#485
  MEM[(struct  &)this_15(D) + 192] ={v} {CLOBBER};
  # DEBUG D#530 => &D#2376->_input_credits
  # DEBUG this => D#530
  # DEBUG D#512 => &D#530->D.41043
  # DEBUG this => D#512
  # DEBUG D#515 => D#530->D.41043._M_impl._M_finish
  # DEBUG D#514 => D#530->D.41043._M_impl._M_start
  # DEBUG D#353 => D#514
  # DEBUG D#354 => D#515
  # DEBUG __first => D#353
  # DEBUG __last => D#354
  # DEBUG D.95619 => D#355
  # DEBUG D#352 => D#354
  # DEBUG D#351 => D#353
  # DEBUG D#349 => D#351
  # DEBUG D#350 => D#352
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.94658 => D#345
  # DEBUG D.94657 => D#346
  # DEBUG D#513 => &D#530->D.41043
  # DEBUG this => D#513
  # DEBUG D#511 => D#513->_M_impl._M_end_of_storage
  # DEBUG D#510 => (long int) D#511
  _344 = MEM[(struct _Vector_base *)this_15(D) + 168B]._M_impl._M_start;
  # DEBUG D#509 => (long int) _344
  # DEBUG D#508 => D#510 - D#509
  # DEBUG D#507 => D#508 /[ex] 8
  # DEBUG D#504 => D#513
  # DEBUG D#505 => (long unsigned int) D#507
  # DEBUG __p => _344
  # DEBUG this => D#504
  # DEBUG __n => D#505
  # DEBUG D#503 => D#505
  # DEBUG D#502 => D#504
  if (_344 != 0B)
    goto <bb 161>;
  else
    goto <bb 162>;

  <bb 161>:
  # DEBUG D#501 => &D#502->_M_impl
  # DEBUG D#499 => D#501
  # DEBUG D#500 => D#503
  # DEBUG __p => _344
  # DEBUG __a => D#499
  # DEBUG __n => D#500
  # DEBUG D#498 => D#500
  # DEBUG D#497 => D#499
  # DEBUG D#495 => D#497
  # DEBUG D#496 => D#498
  # DEBUG __p => _344
  # DEBUG this => D#495
  # DEBUG D.121421 => D#496
  operator delete (_344);

  <bb 162>:
  # DEBUG D#506 => &D#513->_M_impl
  # DEBUG this => D#506
  # DEBUG this => D#506
  # DEBUG this => D#506
  MEM[(struct  &)this_15(D) + 168] ={v} {CLOBBER};
  # DEBUG D#529 => &D#2376->_input_channels
  # DEBUG this => D#529
  # DEBUG D#491 => &D#529->D.40296
  # DEBUG this => D#491
  # DEBUG D#494 => D#529->D.40296._M_impl._M_finish
  # DEBUG D#493 => D#529->D.40296._M_impl._M_start
  # DEBUG D#342 => D#493
  # DEBUG D#343 => D#494
  # DEBUG __first => D#342
  # DEBUG __last => D#343
  # DEBUG D.95539 => D#344
  # DEBUG D#341 => D#343
  # DEBUG D#340 => D#342
  # DEBUG D#338 => D#340
  # DEBUG D#339 => D#341
  # DEBUG __first => D#338
  # DEBUG __last => D#339
  # DEBUG D#337 => D#339
  # DEBUG D#336 => D#338
  # DEBUG D#334 => D#336
  # DEBUG D#335 => D#337
  # DEBUG D.94620 => D#334
  # DEBUG D.94619 => D#335
  # DEBUG D#492 => &D#529->D.40296
  # DEBUG this => D#492
  # DEBUG D#490 => D#492->_M_impl._M_end_of_storage
  # DEBUG D#489 => (long int) D#490
  _345 = MEM[(struct _Vector_base *)this_15(D) + 144B]._M_impl._M_start;
  # DEBUG D#488 => (long int) _345
  # DEBUG D#487 => D#489 - D#488
  # DEBUG D#486 => D#487 /[ex] 8
  # DEBUG D#483 => D#492
  # DEBUG D#484 => (long unsigned int) D#486
  # DEBUG __p => _345
  # DEBUG this => D#483
  # DEBUG __n => D#484
  # DEBUG D#482 => D#484
  # DEBUG D#481 => D#483
  if (_345 != 0B)
    goto <bb 163>;
  else
    goto <bb 164>;

  <bb 163>:
  # DEBUG D#480 => &D#481->_M_impl
  # DEBUG D#478 => D#480
  # DEBUG D#479 => D#482
  # DEBUG __p => _345
  # DEBUG __a => D#478
  # DEBUG __n => D#479
  # DEBUG D#477 => D#479
  # DEBUG D#476 => D#478
  # DEBUG D#474 => D#476
  # DEBUG D#475 => D#477
  # DEBUG __p => _345
  # DEBUG this => D#474
  # DEBUG D.121436 => D#475
  operator delete (_345);

  <bb 164>:
  # DEBUG D#485 => &D#492->_M_impl
  # DEBUG this => D#485
  # DEBUG this => D#485
  # DEBUG this => D#485
  MEM[(struct  &)this_15(D) + 144] ={v} {CLOBBER};
  # DEBUG D#528 => &D#2376->D.42039
  # DEBUG this => D#528
  # DEBUG D#2375 => &MEM[(struct TimedModule *)this_15(D)].D.31271
  # DEBUG this => D#2375
  MEM[(struct Module *)this_15(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#471 => &D#2375->_children
  # DEBUG this => D#471
  # DEBUG D#465 => &D#471->D.31174
  # DEBUG this => D#465
  # DEBUG D#468 => D#471->D.31174._M_impl._M_finish
  # DEBUG D#467 => D#471->D.31174._M_impl._M_start
  # DEBUG D#331 => D#467
  # DEBUG D#332 => D#468
  # DEBUG __first => D#331
  # DEBUG __last => D#332
  # DEBUG D.95399 => D#333
  # DEBUG D#330 => D#332
  # DEBUG D#329 => D#331
  # DEBUG D#327 => D#329
  # DEBUG D#328 => D#330
  # DEBUG __first => D#327
  # DEBUG __last => D#328
  # DEBUG D#326 => D#328
  # DEBUG D#325 => D#327
  # DEBUG D#323 => D#325
  # DEBUG D#324 => D#326
  # DEBUG D.94582 => D#323
  # DEBUG D.94581 => D#324
  # DEBUG D#466 => &D#471->D.31174
  # DEBUG this => D#466
  # DEBUG D#464 => D#466->_M_impl._M_end_of_storage
  # DEBUG D#463 => (long int) D#464
  _376 = MEM[(struct _Vector_base *)this_15(D) + 72B]._M_impl._M_start;
  # DEBUG D#462 => (long int) _376
  # DEBUG D#461 => D#463 - D#462
  # DEBUG D#460 => D#461 /[ex] 8
  # DEBUG D#457 => D#466
  # DEBUG D#458 => (long unsigned int) D#460
  # DEBUG __p => _376
  # DEBUG this => D#457
  # DEBUG __n => D#458
  # DEBUG D#456 => D#458
  # DEBUG D#455 => D#457
  if (_376 != 0B)
    goto <bb 165>;
  else
    goto <bb 166>;

  <bb 165>:
  # DEBUG D#454 => &D#455->_M_impl
  # DEBUG D#452 => D#454
  # DEBUG D#453 => D#456
  # DEBUG __p => _376
  # DEBUG __a => D#452
  # DEBUG __n => D#453
  # DEBUG D#451 => D#453
  # DEBUG D#450 => D#452
  # DEBUG D#448 => D#450
  # DEBUG D#449 => D#451
  # DEBUG __p => _376
  # DEBUG this => D#448
  # DEBUG D.121543 => D#449
  operator delete (_376);

  <bb 166>:
  # DEBUG D#459 => &D#466->_M_impl
  # DEBUG this => D#459
  # DEBUG this => D#459
  # DEBUG this => D#459
  MEM[(struct  &)this_15(D) + 72] ={v} {CLOBBER};
  # DEBUG D#470 => &D#2375->_fullname
  # DEBUG this => D#470
  # DEBUG this => D#470
  # DEBUG this => D#470
  _377 = MEM[(char * *)this_15(D) + 40B];
  # DEBUG D#1 => D#470
  # DEBUG this => D#1
  # DEBUG this => D#470
  _378 = &MEM[(const struct basic_string *)this_15(D) + 40B].D.11539._M_local_buf;
  if (_377 != _378)
    goto <bb 167>;
  else
    goto <bb 168>;

  <bb 167>:
  # DEBUG D#440 => MEM[(struct basic_string *)D#470].D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => D#470
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => D#470
  # DEBUG this => D#1
  # DEBUG this => D#470
  # DEBUG D#437 => &MEM[(struct basic_string *)D#470]._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _377
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _377
  # DEBUG this => D#431
  # DEBUG D.121556 => D#432
  operator delete (_377);

  <bb 168>:
  # DEBUG D#441 => &MEM[(struct basic_string *)D#470]._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)this_15(D) + 40] ={v} {CLOBBER};
  # DEBUG D#469 => &D#2375->_name
  # DEBUG this => D#469
  # DEBUG this => D#469
  # DEBUG this => D#469
  _379 = MEM[(char * *)this_15(D) + 8B];
  # DEBUG D#1 => D#469
  # DEBUG this => D#1
  # DEBUG this => D#469
  _380 = &MEM[(const struct basic_string *)this_15(D) + 8B].D.11539._M_local_buf;
  if (_379 != _380)
    goto <bb 169>;
  else
    goto <bb 170>;

  <bb 169>:
  # DEBUG D#440 => MEM[(struct basic_string *)D#469].D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => D#469
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => D#469
  # DEBUG this => D#1
  # DEBUG this => D#469
  # DEBUG D#437 => &MEM[(struct basic_string *)D#469]._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _379
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _379
  # DEBUG this => D#431
  # DEBUG D.121571 => D#432
  operator delete (_379);

  <bb 170>:
  # DEBUG D#441 => &MEM[(struct basic_string *)D#469]._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)this_15(D)] ={v} {CLOBBER};
  return;

<L59>:

<L37>:
  _95 = &this_15(D)->_noq_next_vc_end;
  std::vector<std::vector<int> >::~vector (_95);
  resx 22

<L38>:
  _97 = &this_15(D)->_noq_next_vc_start;
  std::vector<std::vector<int> >::~vector (_97);
  resx 21

<L39>:
  _99 = &this_15(D)->_noq_next_output_port;
  std::vector<std::vector<int> >::~vector (_99);
  resx 20

<L40>:
  # DEBUG D#1234 => &this_15(D)->_switch_hold_vc
  # DEBUG this => D#1234
  # DEBUG D#628 => &D#1234->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1234->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1234->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1234->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _73 = MEM[(struct _Vector_base *)this_15(D) + 1120B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _73
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _73
  # DEBUG __n => D#622
  if (_73 != 0B)
    goto <bb 176>;
  else
    goto <bb 177>;

  <bb 176>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _73
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _73
  # DEBUG this => D#614
  # DEBUG D.101199 => D#615
  operator delete (_73);

  <bb 177>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 1120] ={v} {CLOBBER};
  resx 19

<L41>:
  # DEBUG D#1233 => &this_15(D)->_switch_hold_out
  # DEBUG this => D#1233
  # DEBUG D#628 => &D#1233->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1233->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1233->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1233->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _101 = MEM[(struct _Vector_base *)this_15(D) + 1096B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _101
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _101
  # DEBUG __n => D#622
  if (_101 != 0B)
    goto <bb 179>;
  else
    goto <bb 180>;

  <bb 179>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _101
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _101
  # DEBUG this => D#614
  # DEBUG D.101214 => D#615
  operator delete (_101);

  <bb 180>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 1096] ={v} {CLOBBER};
  resx 18

<L42>:
  # DEBUG D#1232 => &this_15(D)->_switch_hold_in
  # DEBUG this => D#1232
  # DEBUG D#628 => &D#1232->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1232->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1232->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1232->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _102 = MEM[(struct _Vector_base *)this_15(D) + 1072B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _102
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _102
  # DEBUG __n => D#622
  if (_102 != 0B)
    goto <bb 182>;
  else
    goto <bb 183>;

  <bb 182>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _102
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _102
  # DEBUG this => D#614
  # DEBUG D.101229 => D#615
  operator delete (_102);

  <bb 183>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 1072] ={v} {CLOBBER};
  resx 17

<L43>:
  _104 = &this_15(D)->_credit_buffer;
  std::vector<std::queue<Credit*> >::~vector (_104);
  resx 16

<L44>:
  _106 = &this_15(D)->_output_buffer;
  std::vector<std::queue<Flit*> >::~vector (_106);
  resx 15

<L45>:
  # DEBUG D#1228 => &this_15(D)->_sw_rr_offset
  # DEBUG this => D#1228
  # DEBUG D#628 => &D#1228->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1228->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1228->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1228->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _103 = MEM[(struct _Vector_base *)this_15(D) + 976B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _103
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _103
  # DEBUG __n => D#622
  if (_103 != 0B)
    goto <bb 187>;
  else
    goto <bb 188>;

  <bb 187>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _103
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _103
  # DEBUG this => D#614
  # DEBUG D.101244 => D#615
  operator delete (_103);

  <bb 188>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 976] ={v} {CLOBBER};
  resx 14

<L46>:
  # DEBUG D#1225 => &this_15(D)->_vc_rr_offset
  # DEBUG this => D#1225
  # DEBUG D#628 => &D#1225->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#1225->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#1225->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#1225->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _108 = MEM[(struct _Vector_base *)this_15(D) + 952B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _108
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _108
  # DEBUG __n => D#622
  if (_108 != 0B)
    goto <bb 190>;
  else
    goto <bb 191>;

  <bb 190>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _108
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _108
  # DEBUG this => D#614
  # DEBUG D.101259 => D#615
  operator delete (_108);

  <bb 191>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_15(D) + 952] ={v} {CLOBBER};
  resx 13

<L47>:
  # DEBUG D#1222 => &this_15(D)->_next_buf
  # DEBUG this => D#1222
  # DEBUG D#610 => &D#1222->D.49421
  # DEBUG this => D#610
  # DEBUG D#613 => D#1222->D.49421._M_impl._M_finish
  # DEBUG D#612 => D#1222->D.49421._M_impl._M_start
  # DEBUG __first => D#612
  # DEBUG __last => D#613
  # DEBUG D.96077 => NULL
  # DEBUG D#370 => D#612
  # DEBUG D#371 => D#613
  # DEBUG __first => D#370
  # DEBUG __last => D#371
  # DEBUG D#369 => D#371
  # DEBUG D#368 => D#370
  # DEBUG D#366 => D#368
  # DEBUG D#367 => D#369
  # DEBUG D.94777 => D#366
  # DEBUG D.94776 => D#367
  # DEBUG D#611 => &D#1222->D.49421
  # DEBUG this => D#611
  # DEBUG D#609 => D#611->_M_impl._M_end_of_storage
  # DEBUG D#608 => (long int) D#609
  _109 = MEM[(struct _Vector_base *)this_15(D) + 904B]._M_impl._M_start;
  # DEBUG D#607 => (long int) _109
  # DEBUG D#606 => D#608 - D#607
  # DEBUG D#605 => D#606 /[ex] 8
  # DEBUG D#604 => (long unsigned int) D#605
  # DEBUG this => D#611
  # DEBUG __p => _109
  # DEBUG __n => D#604
  if (_109 != 0B)
    goto <bb 193>;
  else
    goto <bb 194>;

  <bb 193>:
  # DEBUG D#602 => &D#611->_M_impl
  # DEBUG D#600 => D#602
  # DEBUG D#601 => D#604
  # DEBUG __p => _109
  # DEBUG __a => D#600
  # DEBUG __n => D#601
  # DEBUG D#599 => D#601
  # DEBUG D#598 => D#600
  # DEBUG D#596 => D#598
  # DEBUG D#597 => D#599
  # DEBUG __p => _109
  # DEBUG this => D#596
  # DEBUG D.101274 => D#597
  operator delete (_109);

  <bb 194>:
  # DEBUG D#603 => &D#611->_M_impl
  # DEBUG this => D#603
  # DEBUG this => D#603
  # DEBUG this => D#603
  MEM[(struct  &)this_15(D) + 904] ={v} {CLOBBER};
  resx 12

<L48>:
  # DEBUG D#1213 => &this_15(D)->_buf
  # DEBUG this => D#1213
  # DEBUG D#590 => &D#1213->D.48674
  # DEBUG this => D#590
  # DEBUG D#593 => D#1213->D.48674._M_impl._M_finish
  # DEBUG D#592 => D#1213->D.48674._M_impl._M_start
  # DEBUG __first => D#592
  # DEBUG __last => D#593
  # DEBUG D.96002 => NULL
  # DEBUG D#360 => D#592
  # DEBUG D#361 => D#593
  # DEBUG __first => D#360
  # DEBUG __last => D#361
  # DEBUG D#359 => D#361
  # DEBUG D#358 => D#360
  # DEBUG D#356 => D#358
  # DEBUG D#357 => D#359
  # DEBUG D.94733 => D#356
  # DEBUG D.94732 => D#357
  # DEBUG D#591 => &D#1213->D.48674
  # DEBUG this => D#591
  # DEBUG D#589 => D#591->_M_impl._M_end_of_storage
  # DEBUG D#588 => (long int) D#589
  _110 = MEM[(struct _Vector_base *)this_15(D) + 880B]._M_impl._M_start;
  # DEBUG D#587 => (long int) _110
  # DEBUG D#586 => D#588 - D#587
  # DEBUG D#585 => D#586 /[ex] 8
  # DEBUG D#584 => (long unsigned int) D#585
  # DEBUG this => D#591
  # DEBUG __p => _110
  # DEBUG __n => D#584
  if (_110 != 0B)
    goto <bb 196>;
  else
    goto <bb 197>;

  <bb 196>:
  # DEBUG D#582 => &D#591->_M_impl
  # DEBUG D#580 => D#582
  # DEBUG D#581 => D#584
  # DEBUG __p => _110
  # DEBUG __a => D#580
  # DEBUG __n => D#581
  # DEBUG D#579 => D#581
  # DEBUG D#578 => D#580
  # DEBUG D#576 => D#578
  # DEBUG D#577 => D#579
  # DEBUG __p => _110
  # DEBUG this => D#576
  # DEBUG D.101289 => D#577
  operator delete (_110);

  <bb 197>:
  # DEBUG D#583 => &D#591->_M_impl
  # DEBUG this => D#583
  # DEBUG this => D#583
  # DEBUG this => D#583
  MEM[(struct  &)this_15(D) + 880] ={v} {CLOBBER};
  resx 11

<L49>:
  # DEBUG D#1212 => &this_15(D)->_out_queue_credits
  # DEBUG this => D#1212
  _111 = &MEM[(struct map *)this_15(D) + 832B]._M_t;
  # DEBUG this => _111
  _134 = MEM[(struct _Rb_tree_node_base * *)this_15(D) + 848B];
  # DEBUG D#118 => _111
  # DEBUG this => D#118
  std::_Rb_tree<int, std::pair<const int, Credit*>, std::_Select1st<std::pair<const int, Credit*> >, std::less<int>, std::allocator<std::pair<const int, Credit*> > >::_M_erase (_111, _134);
  # DEBUG D#1200 => &MEM[(struct _Rb_tree *)_111]._M_impl
  # DEBUG this => D#1200
  # DEBUG this => D#1200
  # DEBUG this => D#1200
  MEM[(struct  &)this_15(D) + 832] ={v} {CLOBBER};
  resx 10

<L50>:
  # DEBUG D#1211 => &this_15(D)->_crossbar_flits
  # DEBUG this => D#1211
  # DEBUG D#899 => &D#1211->D.46860
  # DEBUG this => D#899
  # DEBUG this => D#1211
  # DEBUG D#73 => &D#1211->D.46860._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#907 => MEM[(const struct iterator &)D#1211 + 48]._M_cur
  # DEBUG D.98057 => D#907
  # DEBUG D#906 => MEM[(const struct iterator &)D#1211 + 48]._M_first
  # DEBUG D.98058 => D#906
  # DEBUG D#905 => MEM[(const struct iterator &)D#1211 + 48]._M_last
  # DEBUG D.98059 => D#905
  # DEBUG D#904 => MEM[(const struct iterator &)D#1211 + 48]._M_node
  # DEBUG D.98060 => D#904
  # DEBUG this => D#1211
  # DEBUG D#72 => &D#1211->D.46860._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#903 => MEM[(const struct iterator &)D#1211 + 16]._M_cur
  # DEBUG D.98053 => D#903
  # DEBUG D#902 => MEM[(const struct iterator &)D#1211 + 16]._M_first
  # DEBUG D.98054 => D#902
  # DEBUG D#901 => MEM[(const struct iterator &)D#1211 + 16]._M_last
  # DEBUG D.98055 => D#901
  # DEBUG D#900 => MEM[(const struct iterator &)D#1211 + 16]._M_node
  # DEBUG D.98056 => D#900
  # DEBUG D#114 => D#1211
  # DEBUG this => D#114
  # DEBUG __first => D#115
  # DEBUG __last => D#116
  # DEBUG D.98041 => D#117
  _112 = &MEM[(struct deque *)this_15(D) + 752B].D.46860;
  std::_Deque_base<std::pair<int, std::pair<Flit*, std::pair<int, int> > >, std::allocator<std::pair<int, std::pair<Flit*, std::pair<int, int> > > > >::~_Deque_base (_112);
  MEM[(struct  &)this_15(D) + 752] ={v} {CLOBBER};
  resx 9

<L51>:
  # DEBUG D#1210 => &this_15(D)->_sw_alloc_vcs
  # DEBUG this => D#1210
  # DEBUG D#882 => &D#1210->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#1210
  # DEBUG D#68 => &D#1210->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#1210 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#1210 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#1210 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#1210 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#1210
  # DEBUG D#67 => &D#1210->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#1210 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#1210 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#1210 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#1210 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#1210
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  _113 = &MEM[(struct deque *)this_15(D) + 672B].D.45936;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_113);
  MEM[(struct  &)this_15(D) + 672] ={v} {CLOBBER};
  resx 8

<L52>:
  # DEBUG D#1209 => &this_15(D)->_sw_hold_vcs
  # DEBUG this => D#1209
  # DEBUG D#882 => &D#1209->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#1209
  # DEBUG D#68 => &D#1209->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#1209 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#1209 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#1209 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#1209 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#1209
  # DEBUG D#67 => &D#1209->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#1209 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#1209 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#1209 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#1209 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#1209
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  _114 = &MEM[(struct deque *)this_15(D) + 592B].D.45936;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_114);
  MEM[(struct  &)this_15(D) + 592] ={v} {CLOBBER};
  resx 7

<L53>:
  # DEBUG D#1208 => &this_15(D)->_vc_alloc_vcs
  # DEBUG this => D#1208
  # DEBUG D#882 => &D#1208->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#1208
  # DEBUG D#68 => &D#1208->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#1208 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#1208 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#1208 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#1208 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#1208
  # DEBUG D#67 => &D#1208->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#1208 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#1208 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#1208 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#1208 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#1208
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  _115 = &MEM[(struct deque *)this_15(D) + 512B].D.45936;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_115);
  MEM[(struct  &)this_15(D) + 512] ={v} {CLOBBER};
  resx 6

<L54>:
  # DEBUG D#1207 => &this_15(D)->_route_vcs
  # DEBUG this => D#1207
  # DEBUG D#865 => &D#1207->D.45014
  # DEBUG this => D#865
  # DEBUG this => D#1207
  # DEBUG D#65 => &D#1207->D.45014._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#65
  # DEBUG D#873 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.97875 => D#873
  # DEBUG D#872 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.97876 => D#872
  # DEBUG D#871 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.97877 => D#871
  # DEBUG D#870 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.97878 => D#870
  # DEBUG this => D#1207
  # DEBUG D#64 => &D#1207->D.45014._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#64
  # DEBUG D#869 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.97871 => D#869
  # DEBUG D#868 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.97872 => D#868
  # DEBUG D#867 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.97873 => D#867
  # DEBUG D#866 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.97874 => D#866
  # DEBUG D#106 => D#1207
  # DEBUG this => D#106
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D.97859 => D#109
  _116 = &MEM[(struct deque *)this_15(D) + 432B].D.45014;
  std::_Deque_base<std::pair<int, std::pair<int, int> >, std::allocator<std::pair<int, std::pair<int, int> > > >::~_Deque_base (_116);
  MEM[(struct  &)this_15(D) + 432] ={v} {CLOBBER};
  resx 5

<L55>:
  # DEBUG D#1206 => &this_15(D)->_proc_credits
  # DEBUG this => D#1206
  # DEBUG D#848 => &D#1206->D.44092
  # DEBUG this => D#848
  # DEBUG this => D#1206
  # DEBUG D#100 => &D#1206->D.44092._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#100
  # DEBUG D#856 => MEM[(const struct iterator &)D#1206 + 48]._M_cur
  # DEBUG D.97784 => D#856
  # DEBUG D#855 => MEM[(const struct iterator &)D#1206 + 48]._M_first
  # DEBUG D.97785 => D#855
  # DEBUG D#854 => MEM[(const struct iterator &)D#1206 + 48]._M_last
  # DEBUG D.97786 => D#854
  # DEBUG D#853 => MEM[(const struct iterator &)D#1206 + 48]._M_node
  # DEBUG D.97787 => D#853
  # DEBUG this => D#1206
  # DEBUG D#101 => &D#1206->D.44092._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#101
  # DEBUG D#852 => MEM[(const struct iterator &)D#1206 + 16]._M_cur
  # DEBUG D.97780 => D#852
  # DEBUG D#851 => MEM[(const struct iterator &)D#1206 + 16]._M_first
  # DEBUG D.97781 => D#851
  # DEBUG D#850 => MEM[(const struct iterator &)D#1206 + 16]._M_last
  # DEBUG D.97782 => D#850
  # DEBUG D#849 => MEM[(const struct iterator &)D#1206 + 16]._M_node
  # DEBUG D.97783 => D#849
  # DEBUG D#102 => D#1206
  # DEBUG this => D#102
  # DEBUG __first => D#103
  # DEBUG __last => D#104
  # DEBUG D.97768 => D#105
  _117 = &MEM[(struct deque *)this_15(D) + 352B].D.44092;
  std::_Deque_base<std::pair<int, std::pair<Credit*, int> >, std::allocator<std::pair<int, std::pair<Credit*, int> > > >::~_Deque_base (_117);
  MEM[(struct  &)this_15(D) + 352] ={v} {CLOBBER};
  resx 4

<L56>:
  # DEBUG D#1205 => &this_15(D)->_in_queue_flits
  # DEBUG this => D#1205
  _118 = &MEM[(struct map *)this_15(D) + 304B]._M_t;
  # DEBUG this => _118
  _135 = MEM[(struct _Rb_tree_node_base * *)this_15(D) + 320B];
  # DEBUG D#99 => _118
  # DEBUG this => D#99
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_118, _135);
  # DEBUG D#1134 => &MEM[(struct _Rb_tree *)_118]._M_impl
  # DEBUG this => D#1134
  # DEBUG this => D#1134
  # DEBUG this => D#1134
  MEM[(struct  &)this_15(D) + 304] ={v} {CLOBBER};
  resx 3

<L57>:
  _120 = &this_15(D)->D.51790;
  Router::~Router (_120);
  resx 2

  <bb 207>:
  _591 = this_15(D)->_spec_sw_allocator;
  if (_591 != 0B)
    goto <bb 52>;
  else
    goto <bb 54>;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt11_Deque_baseIP4FlitSaIS1_EED2Ev, funcdef_no=2856, decl_uid=54439, cgraph_uid=1301, symbol_order=1302)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct _Deque_base * const this)
{
  struct Flit * * * __nstart;
  struct Flit * * * _4;
  struct Flit * * * _5;
  struct Flit * * * _6;
  struct Flit * * _13;
  struct Flit * * * pretmp_16;
  struct Flit * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG D#981 => this_3(D)
  # DEBUG __p => _13
  # DEBUG this => D#981
  # DEBUG D#980 => D#981
  # DEBUG __size => 8
  # DEBUG D#979 => &D#980->_M_impl
  # DEBUG D#977 => D#979
  # DEBUG __p => _13
  # DEBUG __a => D#977
  # DEBUG __n => D#978
  # DEBUG D#976 => D#978
  # DEBUG D#975 => D#977
  # DEBUG D#973 => D#975
  # DEBUG D#974 => D#976
  # DEBUG __p => _13
  # DEBUG this => D#973
  # DEBUG D.99334 => D#974
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#999 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2402 => this_3(D)->_M_impl._M_map
  # DEBUG D#997 => this_3(D)
  # DEBUG D#998 => D#999
  # DEBUG __p => D#2402
  # DEBUG this => D#997
  # DEBUG __n => D#998
  # DEBUG D#996 => D#998
  # DEBUG D#995 => D#997
  # DEBUG D#994 => D#995
  # DEBUG this => D#994
  # DEBUG D#993 => D#994
  # DEBUG this => D#993
  # DEBUG this => NULL
  # DEBUG D.99274 => NULL
  # DEBUG this => NULL
  # DEBUG D#709 => &__map_alloc
  # DEBUG D#710 => D#996
  # DEBUG __p => D#2402
  # DEBUG __a => D#709
  # DEBUG __n => D#710
  # DEBUG D#708 => D#710
  # DEBUG D#707 => D#709
  # DEBUG D#705 => D#707
  # DEBUG D#706 => D#708
  # DEBUG __p => D#2402
  # DEBUG this => D#705
  # DEBUG D.99321 => D#706
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#1000 => &this_3(D)->_M_impl
  # DEBUG this => D#1000
  # DEBUG this => D#1000
  # DEBUG this => D#1000
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt11_Deque_baseIP6CreditSaIS1_EED2Ev, funcdef_no=2883, decl_uid=62124, cgraph_uid=1328, symbol_order=1329)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct _Deque_base * const this)
{
  struct Credit * * * __nstart;
  struct Credit * * * _4;
  struct Credit * * * _5;
  struct Credit * * * _6;
  struct Credit * * _13;
  struct Credit * * * pretmp_16;
  struct Credit * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => this_3(D)
  # DEBUG __p => _13
  # DEBUG __size => 8
  # DEBUG D#1023 => &this_3(D)->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _13
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _13
  # DEBUG this => D#1017
  # DEBUG D.99690 => D#1018
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#1042 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2404 => this_3(D)->_M_impl._M_map
  # DEBUG D#1040 => this_3(D)
  # DEBUG D#1041 => D#1042
  # DEBUG __p => D#2404
  # DEBUG this => D#1040
  # DEBUG __n => D#1041
  # DEBUG D#1039 => D#1041
  # DEBUG D#1038 => D#1040
  # DEBUG D#1037 => D#1038
  # DEBUG this => D#1037
  # DEBUG D#1036 => D#1037
  # DEBUG this => D#1036
  # DEBUG this => NULL
  # DEBUG D.99630 => NULL
  # DEBUG this => NULL
  # DEBUG D#719 => &__map_alloc
  # DEBUG D#720 => D#1039
  # DEBUG __p => D#2404
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => D#2404
  # DEBUG this => D#715
  # DEBUG D.99677 => D#716
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#1043 => &this_3(D)->_M_impl
  # DEBUG this => D#1043
  # DEBUG this => D#1043
  # DEBUG this => D#1043
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function void IQRouter::_RouteUpdate() (_ZN8IQRouter12_RouteUpdateEv, funcdef_no=2242, decl_uid=51704, cgraph_uid=687, symbol_order=688)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void IQRouter::_RouteUpdate() (struct IQRouter * const this)
{
  char_type D.122198;
  char __c;
  char_type D.122195;
  char __c;
  char_type D.122192;
  struct basic_ostream & D.122186;
  struct pair D.122183;
  struct pair D.122181;
  const int time;
  const int input;
  const int vc;
  struct Buffer * const cur_buf;
  int __x;
  int __x$4;
  int __x;
  int __x$4;
  static const char __PRETTY_FUNCTION__[30] = "void IQRouter::_RouteUpdate()";
  int (*__vtbl_ptr_type) () * _1;
  int _4;
  struct pair * const _7;
  int _10;
  struct VC * * pretmp_11;
  int _12;
  int _14;
  int _16;
  long unsigned int _17;
  struct Buffer * * _18;
  long unsigned int _19;
  struct Buffer * & _20;
  long unsigned int _22;
  struct VC * * const _23;
  long unsigned int _24;
  struct VC * const & _25;
  struct VC * _26;
  struct Flit * * const _27;
  struct Flit * * const _28;
  const eVCState _29;
  struct Flit * iftmp.304_30;
  int _32;
  bool _33;
  bool _34;
  int _35;
  int _36;
  struct ostream * gWatchOut.320_37;
  struct basic_ostream & _38;
  const size_type _39;
  long int _40;
  char * const _41;
  struct basic_ostream & _42;
  struct basic_ostream & _43;
  struct basic_ostream & _44;
  struct basic_ostream & _45;
  struct Router * _46;
  void (*<T72d4>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _47;
  struct VC * * _51;
  struct VC * & _52;
  struct VC * _53;
  bool _54;
  struct deque * _57;
  struct Allocator * _58;
  struct deque * _61;
  struct pair * _63;
  struct pair * _64;
  struct pair * _65;
  struct pair * _66;
  long int _67;
  sizetype _68;
  struct basic_ios * _69;
  struct basic_ostream & _72;
  const struct __ctype_type * _74;
  char _75;
  char_type _78;
  struct pair * const prephitmp_80;
  int (*__vtbl_ptr_type) () * _83;
  int (*__vtbl_ptr_type) () _84;
  void * PROF_88;
  char_type _90;
  int pretmp_92;
  struct pair * _93;
  struct pair * _94;
  struct pair * _95;
  struct pair * _96;
  struct pair * _97;
  struct pair * _98;
  struct pair * _99;
  struct pair * _100;
  struct pair * _101;
  struct pair * * _102;
  struct pair * * _103;
  struct pair * _104;
  struct pair * _105;
  struct VC * * pretmp_106;
  struct pair * const prephitmp_174;
  struct pair * const pretmp_175;
  int prephitmp_176;
  int pretmp_177;
  struct VC * pretmp_182;
  struct VC * prephitmp_183;

  <bb 2>:
  _4 = this_3(D)->_routing_delay;
  if (_4 == 0)
    goto <bb 50>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_175 = MEM[(struct pair * *)this_3(D) + 448B];
  goto <bb 5>;

  <bb 4>:
  # prephitmp_80 = PHI <_104(49), _66(48)>

  <bb 56>:

  <bb 5>:
  # prephitmp_174 = PHI <pretmp_175(3), prephitmp_80(56)>
  # DEBUG D#1471 => &this_3(D)->_route_vcs
  # DEBUG this => D#1471
  # DEBUG D#145 => &MEM[(const struct deque *)D#1471].D.45014._M_impl._M_start
  # DEBUG D#146 => &MEM[(const struct deque *)D#1471].D.45014._M_impl._M_finish
  _7 = MEM[(struct pair * *)this_3(D) + 480B];
  # DEBUG D#143 => D#146
  # DEBUG D#2411 => MEM[(struct pair * *)this_3(D) + 448B]
  # DEBUG D#144 => D#145
  # DEBUG __x => D#143
  # DEBUG __y => D#144
  if (_7 != prephitmp_174)
    goto <bb 6>;
  else
    goto <bb 52>;

  <bb 6>:
  # DEBUG D#1468 => &this_3(D)->_route_vcs
  # DEBUG this => D#1468
  # DEBUG this => D#1468
  # DEBUG D#64 => &D#1468->D.45014._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#64
  # DEBUG D#162 => MEM[(const struct iterator &)D#1468 + 16]._M_first
  # DEBUG D.93133 => D#162
  # DEBUG D#161 => MEM[(const struct iterator &)D#1468 + 16]._M_last
  # DEBUG D.93134 => D#161
  # DEBUG D#160 => MEM[(const struct iterator &)D#1468 + 16]._M_node
  # DEBUG D.93135 => D#160
  # DEBUG this => D#159
  # DEBUG item => D#2411
  time_9 = MEM[(const struct pair &)prephitmp_174].first;
  # DEBUG time => time_9
  if (time_9 < 0)
    goto <bb 51>;
  else
    goto <bb 7>;

  <bb 7>:
  _10 = GetSimTime ();
  if (time_9 > _10)
    goto <bb 51>;
  else
    goto <bb 53>;

  <bb 8>:
  __assert_fail ("GetSimTime() == time", "routers/iq_router.cpp", 511, &__PRETTY_FUNCTION__);

  <bb 9>:
  input_13 = MEM[(const struct pair &)prephitmp_174].second.first;
  # DEBUG input => input_13
  if (input_13 < 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _14 = this_3(D)->D.51790._inputs;
  if (input_13 >= _14)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 514, &__PRETTY_FUNCTION__);

  <bb 12>:
  vc_15 = MEM[(const struct pair &)prephitmp_174].second.second;
  # DEBUG vc => vc_15
  if (vc_15 < 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  _16 = this_3(D)->_vcs;
  if (vc_15 >= _16)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 516, &__PRETTY_FUNCTION__);

  <bb 15>:
  _17 = (long unsigned int) input_13;
  # DEBUG D#1469 => &this_3(D)->_buf
  _18 = MEM[(struct Buffer * * *)this_3(D) + 880B];
  # DEBUG D#53 => D#1469
  # DEBUG __n => _17
  # DEBUG this => D#53
  _19 = _17 * 8;
  _20 = _18 + _19;
  cur_buf_21 = *_20;
  # DEBUG cur_buf => cur_buf_21
  # DEBUG this => cur_buf_21
  # DEBUG vc => vc_15
  _22 = (long unsigned int) vc_15;
  # DEBUG D#96 => &MEM[(const struct Buffer *)cur_buf_21]._vc
  _23 = MEM[(struct VC * * *)cur_buf_21 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _22
  # DEBUG this => D#42
  _24 = _22 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG this => _26
  # DEBUG D#95 => &MEM[(const struct VC *)_26]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _27 = MEM[(struct Flit * * *)_26 + 144B];
  # DEBUG D#91 => D#94
  _28 = MEM[(struct Flit * * *)_26 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_27 == _28)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 519, &__PRETTY_FUNCTION__);

  <bb 17>:
  # DEBUG this => cur_buf_21
  # DEBUG vc => vc_15
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_21]._vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _22
  # DEBUG this => D#42
  _29 = MEM[(eVCState *)_26 + 176B];
  # DEBUG D#21 => _26
  # DEBUG this => D#21
  if (_29 != 1)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __assert_fail ("cur_buf->GetState(vc) == VC::routing", "routers/iq_router.cpp", 520, &__PRETTY_FUNCTION__);

  <bb 19>:
  # DEBUG this => cur_buf_21
  # DEBUG vc => vc_15
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_21]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _22
  # DEBUG this => D#42
  # DEBUG this => _26
  # DEBUG D#184 => &MEM[(const struct VC *)_26]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_26]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_30 = MEM[(struct Flit * const &)_28];
  # DEBUG f => iftmp.304_30
  if (iftmp.304_30 == 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 523, &__PRETTY_FUNCTION__);

  <bb 21>:
  _32 = iftmp.304_30->vc;
  if (vc_15 != _32)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 524, &__PRETTY_FUNCTION__);

  <bb 23>:
  _33 = iftmp.304_30->head;
  if (_33 != 0)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 525, &__PRETTY_FUNCTION__);

  <bb 25>:
  _34 = iftmp.304_30->watch;
  if (_34 != 0)
    goto <bb 26>;
  else
    goto <bb 33>;

  <bb 26>:
  _35 = iftmp.304_30->id;
  # DEBUG D#1470 => &this_3(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1470
  _36 = GetSimTime ();
  gWatchOut.320_37 = gWatchOut;
  _38 = std::basic_ostream<char>::operator<< (gWatchOut.320_37, _36);
  # DEBUG __out => _38
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_38, " | ", 3);
  # DEBUG __os => _38
  # DEBUG __str => NULL
  _39 = MEM[(long unsigned int *)this_3(D) + 48B];
  # DEBUG this => D#3
  _40 = (long int) _39;
  # DEBUG this => NULL
  _41 = MEM[(char * *)this_3(D) + 40B];
  # DEBUG this => D#1
  _42 = std::__ostream_insert<char, std::char_traits<char> > (_38, _41, _40);
  # DEBUG __out => _42
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_42, " | ", 3);
  # DEBUG __out => _42
  # DEBUG __s => "Completed routing for VC "
  # DEBUG __s => "Completed routing for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_42, "Completed routing for VC ", 25);
  _43 = std::basic_ostream<char>::operator<< (_42, vc_15);
  # DEBUG __out => _43
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_43, " at input ", 10);
  _44 = std::basic_ostream<char>::operator<< (_43, input_13);
  # DEBUG __out => _44
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_44, " (front: ", 9);
  _45 = std::basic_ostream<char>::operator<< (_44, _35);
  # DEBUG __out => _45
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_45, ").", 2);
  # DEBUG this => _45
  # DEBUG __pf => endl
  # DEBUG __os => _45
  _1 = _45->_vptr.basic_ostream;
  _67 = MEM[(long int *)_1 + -24B];
  _68 = (sizetype) _67;
  _69 = _45 + _68;
  # DEBUG this => _69
  # DEBUG __c => 10
  _74 = MEM[(const struct basic_ios *)_69]._M_ctype;
  # DEBUG __f => _74
  if (_74 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_bad_cast ();

  <bb 28>:
  # DEBUG this => _74
  # DEBUG __c => 10
  _75 = MEM[(const struct ctype *)_74]._M_widen_ok;
  if (_75 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _78 = MEM[(const struct ctype *)_74]._M_widen[10];
  pretmp_92 = (int) _78;
  goto <bb 32>;

  <bb 30>:
  # DEBUG this => _74
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_74);
  _83 = MEM[(const struct ctype *)_74].D.24721._vptr.facet;
  _84 = MEM[(int (*__vtbl_ptr_type) () *)_83 + 48B];
  PROF_88 = [obj_type_ref] OBJ_TYPE_REF(_84;(const struct ctype)_74->6);
  if (PROF_88 == do_widen)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  _90 = OBJ_TYPE_REF(_84;(const struct ctype)_74->6) (_74, 10);
  pretmp_177 = (int) _90;

  <bb 32>:
  # prephitmp_176 = PHI <pretmp_92(29), 10(30), pretmp_177(31)>
  _72 = std::basic_ostream<char>::put (_45, prephitmp_176);
  # DEBUG __os => _72
  std::basic_ostream<char>::flush (_72);
  pretmp_106 = MEM[(struct VC * * *)cur_buf_21 + 104B];
  pretmp_11 = pretmp_106 + _24;
  pretmp_182 = *pretmp_11;

  <bb 33>:
  # prephitmp_183 = PHI <_26(25), pretmp_182(32)>
  _46 = &this_3(D)->D.51790;
  _47 = this_3(D)->_rf;
  # DEBUG this => cur_buf_21
  # DEBUG vc => vc_15
  # DEBUG rf => _47
  # DEBUG router => _46
  # DEBUG f => iftmp.304_30
  # DEBUG in_channel => input_13
  # DEBUG D#39 => &cur_buf_21->_vc
  # DEBUG D#36 => D#39
  # DEBUG __n => _22
  # DEBUG this => D#36
  VC::Route (prephitmp_183, _47, _46, iftmp.304_30, input_13);
  # DEBUG this => cur_buf_21
  # DEBUG vc => vc_15
  # DEBUG s => 2
  # DEBUG D#38 => &cur_buf_21->_vc
  _51 = MEM[(struct VC * * *)cur_buf_21 + 104B];
  # DEBUG D#36 => D#38
  # DEBUG __n => _22
  # DEBUG this => D#36
  _52 = _51 + _24;
  _53 = *_52;
  VC::SetState (_53, 2);
  _54 = this_3(D)->_speculative;
  if (_54 != 0)
    goto <bb 34>;
  else
    goto <bb 40>;

  <bb 34>:
  __x_55 = MEM[(const struct pair &)prephitmp_174 + 4];
  # DEBUG __x => __x_55
  __x$4_56 = MEM[(const struct pair &)prephitmp_174 + 8];
  # DEBUG __x$4 => __x$4_56
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_55
  # DEBUG __y$4 => __x$4_56
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.122183] = -1;
  MEM[(struct pair *)&D.122183 + 4B] = __x_55;
  MEM[(struct pair *)&D.122183 + 8B] = __x$4_56;
  MEM[(struct pair *)&D.122183 + 12B] = -1;
  # DEBUG D#2413 => &this_3(D)->_sw_alloc_vcs
  # DEBUG this => D#2413
  # DEBUG __x => &D.122183
  _93 = MEM[(struct deque *)this_3(D) + 672B].D.45936._M_impl._M_finish._M_cur;
  _94 = MEM[(struct deque *)this_3(D) + 672B].D.45936._M_impl._M_finish._M_last;
  _95 = _94 + 18446744073709551600;
  if (_93 != _95)
    goto <bb 35>;
  else
    goto <bb 38>;

  <bb 35>:
  # DEBUG D#1467 => &D#2413->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _93
  # DEBUG __arg => &D.122183
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _93
  # DEBUG __val => &D.122183
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _93
  # DEBUG D.93816 => D#12
  if (_93 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  *_93 = D.122183;

  <bb 37>:

  <bb 54>:
  _96 = _93 + 16;
  MEM[(struct deque *)this_3(D) + 672B].D.45936._M_impl._M_finish._M_cur = _96;
  goto <bb 39>;

  <bb 38>:
  _57 = &this_3(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_57, &D.122183);

  <bb 39>:
  D.122183 ={v} {CLOBBER};

  <bb 40>:
  _58 = this_3(D)->_vc_allocator;
  if (_58 != 0B)
    goto <bb 41>;
  else
    goto <bb 47>;

  <bb 41>:
  __x_59 = MEM[(const struct pair &)prephitmp_174 + 4];
  # DEBUG __x => __x_59
  __x$4_60 = MEM[(const struct pair &)prephitmp_174 + 8];
  # DEBUG __x$4 => __x$4_60
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_59
  # DEBUG __y$4 => __x$4_60
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.122181] = -1;
  MEM[(struct pair *)&D.122181 + 4B] = __x_59;
  MEM[(struct pair *)&D.122181 + 8B] = __x$4_60;
  MEM[(struct pair *)&D.122181 + 12B] = -1;
  # DEBUG D#2412 => &this_3(D)->_vc_alloc_vcs
  # DEBUG this => D#2412
  # DEBUG __x => &D.122181
  _97 = MEM[(struct deque *)this_3(D) + 512B].D.45936._M_impl._M_finish._M_cur;
  _98 = MEM[(struct deque *)this_3(D) + 512B].D.45936._M_impl._M_finish._M_last;
  _99 = _98 + 18446744073709551600;
  if (_97 != _99)
    goto <bb 42>;
  else
    goto <bb 45>;

  <bb 42>:
  # DEBUG D#1467 => &D#2412->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _97
  # DEBUG __arg => &D.122181
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _97
  # DEBUG __val => &D.122181
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _97
  # DEBUG D.93816 => D#12
  if (_97 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  *_97 = D.122181;

  <bb 44>:

  <bb 55>:
  _100 = _97 + 16;
  MEM[(struct deque *)this_3(D) + 512B].D.45936._M_impl._M_finish._M_cur = _100;
  goto <bb 46>;

  <bb 45>:
  _61 = &this_3(D)->_vc_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_61, &D.122181);

  <bb 46>:
  D.122181 ={v} {CLOBBER};

  <bb 47>:
  # DEBUG D#2410 => &this_3(D)->_route_vcs
  # DEBUG this => D#2410
  _63 = MEM[(struct deque *)this_3(D) + 432B].D.45014._M_impl._M_start._M_cur;
  _64 = MEM[(struct deque *)this_3(D) + 432B].D.45014._M_impl._M_start._M_last;
  _65 = _64 + 18446744073709551604;
  if (_63 != _65)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#761 => D#2410->D.45014._M_impl._M_start._M_cur
  # DEBUG D#760 => &D#2410->D.45014._M_impl
  # DEBUG D#255 => D#760
  # DEBUG D#256 => D#761
  # DEBUG __a => D#255
  # DEBUG __p => D#256
  # DEBUG D#254 => D#256
  # DEBUG D#253 => D#255
  # DEBUG D#251 => D#253
  # DEBUG D#252 => D#254
  # DEBUG this => D#251
  # DEBUG __p => D#252
  _66 = _63 + 12;
  MEM[(struct deque *)this_3(D) + 432B].D.45014._M_impl._M_start._M_cur = _66;
  goto <bb 4>;

  <bb 49>:
  # DEBUG this => D#2410
  # DEBUG this => D#2410
  # DEBUG D#759 => D#2410->D.45014._M_impl._M_start._M_cur
  # DEBUG D#756 => &D#2410->D.45014
  # DEBUG this => D#756
  # DEBUG D#256 => D#759
  # DEBUG __a => D#255
  # DEBUG __p => D#256
  # DEBUG D#254 => D#256
  # DEBUG D#253 => D#255
  # DEBUG D#251 => D#253
  # DEBUG D#252 => D#254
  # DEBUG this => D#251
  # DEBUG __p => D#252
  _101 = MEM[(struct deque *)this_3(D) + 432B].D.45014._M_impl._M_start._M_first;
  # DEBUG D#758 => &D#2410->D.45014
  # DEBUG this => D#758
  # DEBUG __p => _101
  # DEBUG __size => 12
  # DEBUG D#752 => &D#758->_M_impl
  # DEBUG D#750 => D#752
  # DEBUG __p => _101
  # DEBUG __a => D#750
  # DEBUG __n => D#751
  # DEBUG D#749 => D#751
  # DEBUG D#748 => D#750
  # DEBUG D#746 => D#748
  # DEBUG D#747 => D#749
  # DEBUG __p => _101
  # DEBUG this => D#746
  # DEBUG D.122224 => D#747
  operator delete (_101);
  _102 = MEM[(struct deque *)this_3(D) + 432B].D.45014._M_impl._M_start._M_node;
  _103 = _102 + 8;
  # DEBUG D#757 => &D#2410->D.45014._M_impl._M_start
  # DEBUG this => D#757
  # DEBUG __new_node => _103
  MEM[(struct _Deque_iterator *)this_3(D) + 448B]._M_node = _103;
  _104 = MEM[(struct pair * *)_102 + 8B];
  MEM[(struct _Deque_iterator *)this_3(D) + 448B]._M_first = _104;
  # DEBUG __size => 12
  _105 = _104 + 504;
  MEM[(struct _Deque_iterator *)this_3(D) + 448B]._M_last = _105;
  MEM[(struct deque *)this_3(D) + 432B].D.45014._M_impl._M_start._M_cur = _104;
  goto <bb 4>;

  <bb 50>:
  __assert_fail ("_routing_delay", "routers/iq_router.cpp", 501, &__PRETTY_FUNCTION__);

  <bb 51>:

  <bb 57>:

  <bb 52>:

  <bb 58>:
  return;

  <bb 53>:
  _12 = GetSimTime ();
  if (time_9 != _12)
    goto <bb 8>;
  else
    goto <bb 9>;

}



;; Function void IQRouter::_VCAllocUpdate() (_ZN8IQRouter14_VCAllocUpdateEv, funcdef_no=2244, decl_uid=51706, cgraph_uid=689, symbol_order=690)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void IQRouter::_VCAllocUpdate() (struct IQRouter * const this)
{
  bool D.122302;
  static const char __PRETTY_FUNCTION__[44] = "bool BufferState::IsAvailableFor(int) const";
  char_type D.122297;
  char __c;
  char_type D.122294;
  char __c;
  char_type D.122291;
  struct basic_ostream & D.122285;
  char_type D.122282;
  char __c;
  char_type D.122279;
  char __c;
  char_type D.122276;
  struct basic_ostream & D.122270;
  int __x$4;
  int __x;
  int __x$4;
  int __x;
  struct BufferState * const dest_buf;
  const int match_vc;
  const int match_output;
  const int output_and_vc;
  struct Buffer * const cur_buf;
  const int vc;
  const int input;
  const int time;
  static const char __PRETTY_FUNCTION__[32] = "void IQRouter::_VCAllocUpdate()";
  struct pair D.64972;
  struct pair D.64969;
  struct Allocator * _12;
  struct Flit * * const _14;
  struct Flit * * const _16;
  int _19;
  int _22;
  int _24;
  int _26;
  int _27;
  long unsigned int _28;
  struct VC * _29;
  struct VC * const & _31;
  long unsigned int _32;
  struct VC * * const _33;
  int _34;
  bool _35;
  bool _36;
  int _37;
  long unsigned int _38;
  int _40;
  struct ostream * gWatchOut.350_41;
  struct basic_ostream & _43;
  const size_type _45;
  struct basic_ostream & _48;
  struct basic_ostream & _50;
  struct basic_ostream & _52;
  int _56;
  bool _58;
  int _60;
  struct ostream * gWatchOut.350_61;
  struct basic_ostream & _63;
  const size_type _64;
  struct basic_ostream & _66;
  struct basic_ostream & _68;
  long unsigned int _69;
  int _73;
  int _74;
  int _75;
  bool _77;
  struct deque * _78;
  struct pair * _79;
  bool _84;
  struct pair * const _85;
  int _87;
  struct ostream * gWatchOut.350_88;
  struct basic_ostream & _90;
  const size_type _92;
  struct pair * _93;
  struct deque * _94;
  struct pair * _95;
  struct Buffer * * _109;
  struct BufferState * * _110;
  long unsigned int _111;
  struct Buffer * & _112;
  const eVCState _113;
  struct Flit * iftmp.304_114;
  long int _116;
  char * const _117;
  struct basic_ostream & _118;
  long int _120;
  char * const _121;
  struct basic_ostream & _122;
  long unsigned int _123;
  struct BufferState * & _124;
  struct VC * * _125;
  struct VC * & _126;
  struct VC * _127;
  struct VC * * _128;
  struct VC * & _129;
  struct VC * _130;
  long int _131;
  char * const _132;
  struct basic_ostream & _133;
  struct pair * _134;
  struct pair * _135;
  struct pair * _136;
  const struct __ctype_type * _144;
  const struct __ctype_type * _151;
  int (*__vtbl_ptr_type) () * _166;
  long int _167;
  sizetype _168;
  struct basic_ios * _169;
  struct basic_ostream & _172;
  char _174;
  char_type _177;
  int pretmp_178;
  int prephitmp_181;
  int (*__vtbl_ptr_type) () * _182;
  int (*__vtbl_ptr_type) () _183;
  struct pair * const prephitmp_184;
  int pretmp_185;
  void * PROF_187;
  int pretmp_188;
  char_type _189;
  int (*__vtbl_ptr_type) () * _192;
  long int _193;
  sizetype _194;
  struct basic_ios * _195;
  struct basic_ostream & _198;
  char _200;
  char_type _203;
  int (*__vtbl_ptr_type) () * _208;
  int (*__vtbl_ptr_type) () _209;
  int pretmp_210;
  int pretmp_212;
  void * PROF_213;
  char_type _215;
  bool _216;
  bool _217;
  int _218;
  long unsigned int _219;
  int * const _220;
  long unsigned int _221;
  const int & _222;
  int _223;
  struct pair * _225;
  struct pair * _226;
  struct pair * _227;
  struct pair * _228;
  struct pair * _229;
  struct pair * _230;
  struct pair * _231;
  struct pair * * _232;
  struct pair * * _233;
  struct pair * _234;
  struct pair * _235;
  int prephitmp_244;
  int prephitmp_245;
  bool _252;
  int pretmp_272;
  int pretmp_273;
  int prephitmp_278;
  int pretmp_279;
  int pretmp_280;
  int prephitmp_281;
  struct pair * const pretmp_282;
  struct pair * const prephitmp_283;

  <bb 2>:
  _12 = this_11(D)->_vc_allocator;
  if (_12 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_282 = MEM[(struct pair * *)this_11(D) + 528B];
  goto <bb 6>;

  <bb 4>:
  __assert_fail ("_vc_allocator", "routers/iq_router.cpp", 842, &__PRETTY_FUNCTION__);

  <bb 5>:
  # prephitmp_184 = PHI <_136(70), _234(71)>

  <bb 76>:

  <bb 6>:
  # prephitmp_283 = PHI <pretmp_282(3), prephitmp_184(76)>
  # DEBUG D#1478 => &this_11(D)->_vc_alloc_vcs
  # DEBUG this => D#1478
  # DEBUG D#149 => &MEM[(const struct deque *)D#1478].D.45936._M_impl._M_start
  # DEBUG D#150 => &MEM[(const struct deque *)D#1478].D.45936._M_impl._M_finish
  _85 = MEM[(struct pair * *)this_11(D) + 560B];
  # DEBUG D#147 => D#150
  # DEBUG D#2419 => MEM[(struct pair * *)this_11(D) + 528B]
  # DEBUG D#148 => D#149
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_85 != prephitmp_283)
    goto <bb 7>;
  else
    goto <bb 73>;

  <bb 7>:
  # DEBUG D#1472 => &this_11(D)->_vc_alloc_vcs
  # DEBUG this => D#1472
  # DEBUG this => D#1472
  # DEBUG D#67 => &D#1472->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#168 => MEM[(const struct iterator &)D#1472 + 16]._M_first
  # DEBUG D.93162 => D#168
  # DEBUG D#167 => MEM[(const struct iterator &)D#1472 + 16]._M_last
  # DEBUG D.93163 => D#167
  # DEBUG D#166 => MEM[(const struct iterator &)D#1472 + 16]._M_node
  # DEBUG D.93164 => D#166
  # DEBUG this => D#165
  # DEBUG item => D#2419
  time_17 = MEM[(const struct pair &)prephitmp_283].first;
  # DEBUG time => time_17
  if (time_17 < 0)
    goto <bb 72>;
  else
    goto <bb 8>;

  <bb 8>:
  _19 = GetSimTime ();
  if (time_17 > _19)
    goto <bb 72>;
  else
    goto <bb 74>;

  <bb 9>:
  __assert_fail ("GetSimTime() == time", "routers/iq_router.cpp", 852, &__PRETTY_FUNCTION__);

  <bb 10>:
  input_23 = MEM[(const struct pair &)prephitmp_283].second.first.first;
  # DEBUG input => input_23
  if (input_23 < 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _24 = this_11(D)->D.51790._inputs;
  if (input_23 >= _24)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 855, &__PRETTY_FUNCTION__);

  <bb 13>:
  vc_25 = MEM[(const struct pair &)prephitmp_283].second.first.second;
  # DEBUG vc => vc_25
  if (vc_25 < 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  _26 = this_11(D)->_vcs;
  if (vc_25 >= _26)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 857, &__PRETTY_FUNCTION__);

  <bb 16>:
  _27 = MEM[(const struct pair &)prephitmp_283].second.second;
  if (_27 == -1)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("item.second.second != -1", "routers/iq_router.cpp", 859, &__PRETTY_FUNCTION__);

  <bb 18>:
  _28 = (long unsigned int) input_23;
  # DEBUG D#1473 => &this_11(D)->_buf
  _109 = MEM[(struct Buffer * * *)this_11(D) + 880B];
  # DEBUG D#53 => D#1473
  # DEBUG __n => _28
  # DEBUG this => D#53
  _111 = _28 * 8;
  _112 = _109 + _111;
  cur_buf_30 = *_112;
  # DEBUG cur_buf => cur_buf_30
  # DEBUG this => cur_buf_30
  # DEBUG vc => vc_25
  _38 = (long unsigned int) vc_25;
  # DEBUG D#96 => &MEM[(const struct Buffer *)cur_buf_30]._vc
  _33 = MEM[(struct VC * * *)cur_buf_30 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _38
  # DEBUG this => D#42
  _32 = _38 * 8;
  _31 = _33 + _32;
  _29 = *_31;
  # DEBUG this => _29
  # DEBUG D#95 => &MEM[(const struct VC *)_29]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _16 = MEM[(struct Flit * * *)_29 + 144B];
  # DEBUG D#91 => D#94
  _14 = MEM[(struct Flit * * *)_29 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_14 == _16)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 862, &__PRETTY_FUNCTION__);

  <bb 20>:
  # DEBUG this => cur_buf_30
  # DEBUG vc => vc_25
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_30]._vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _38
  # DEBUG this => D#42
  _113 = MEM[(eVCState *)_29 + 176B];
  # DEBUG D#21 => _29
  # DEBUG this => D#21
  if (_113 != 2)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __assert_fail ("cur_buf->GetState(vc) == VC::vc_alloc", "routers/iq_router.cpp", 863, &__PRETTY_FUNCTION__);

  <bb 22>:
  # DEBUG this => cur_buf_30
  # DEBUG vc => vc_25
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_30]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _38
  # DEBUG this => D#42
  # DEBUG this => _29
  # DEBUG D#184 => &MEM[(const struct VC *)_29]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_29]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_114 = MEM[(struct Flit * const &)_14];
  # DEBUG f => iftmp.304_114
  if (iftmp.304_114 == 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 866, &__PRETTY_FUNCTION__);

  <bb 24>:
  _34 = MEM[(const struct Flit *)iftmp.304_114].vc;
  if (vc_25 != _34)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 867, &__PRETTY_FUNCTION__);

  <bb 26>:
  _35 = MEM[(const struct Flit *)iftmp.304_114].head;
  if (_35 != 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 868, &__PRETTY_FUNCTION__);

  <bb 28>:
  _36 = MEM[(const struct Flit *)iftmp.304_114].watch;
  if (_36 != 0)
    goto <bb 29>;
  else
    goto <bb 75>;

  <bb 29>:
  _37 = MEM[(const struct Flit *)iftmp.304_114].id;
  # DEBUG D#1474 => &this_11(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1474
  _40 = GetSimTime ();
  gWatchOut.350_41 = gWatchOut;
  _43 = std::basic_ostream<char>::operator<< (gWatchOut.350_41, _40);
  # DEBUG __out => _43
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_43, " | ", 3);
  # DEBUG __os => _43
  # DEBUG __str => NULL
  _45 = MEM[(long unsigned int *)this_11(D) + 48B];
  # DEBUG this => D#3
  _116 = (long int) _45;
  # DEBUG this => NULL
  _117 = MEM[(char * *)this_11(D) + 40B];
  # DEBUG this => D#1
  _118 = std::__ostream_insert<char, std::char_traits<char> > (_43, _117, _116);
  # DEBUG __out => _118
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_118, " | ", 3);
  # DEBUG __out => _118
  # DEBUG __s => "Completed VC allocation for VC "
  # DEBUG __s => "Completed VC allocation for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_118, "Completed VC allocation for VC ", 31);
  _48 = std::basic_ostream<char>::operator<< (_118, vc_25);
  # DEBUG __out => _48
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_48, " at input ", 10);
  _50 = std::basic_ostream<char>::operator<< (_48, input_23);
  # DEBUG __out => _50
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_50, " (front: ", 9);
  _52 = std::basic_ostream<char>::operator<< (_50, _37);
  # DEBUG __out => _52
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_52, ").", 2);
  # DEBUG this => _52
  # DEBUG __pf => endl
  # DEBUG __os => _52
  _166 = _52->_vptr.basic_ostream;
  _167 = MEM[(long int *)_166 + -24B];
  _168 = (sizetype) _167;
  _169 = _52 + _168;
  # DEBUG this => _169
  # DEBUG __c => 10
  _144 = MEM[(const struct basic_ios *)_169]._M_ctype;
  # DEBUG __f => _144
  if (_144 == 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_bad_cast ();

  <bb 31>:
  # DEBUG this => _144
  # DEBUG __c => 10
  _174 = MEM[(const struct ctype *)_144]._M_widen_ok;
  if (_174 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _177 = MEM[(const struct ctype *)_144]._M_widen[10];
  pretmp_279 = (int) _177;
  goto <bb 35>;

  <bb 33>:
  # DEBUG this => _144
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_144);
  _182 = MEM[(const struct ctype *)_144].D.24721._vptr.facet;
  _183 = MEM[(int (*__vtbl_ptr_type) () *)_182 + 48B];
  PROF_187 = [obj_type_ref] OBJ_TYPE_REF(_183;(const struct ctype)_144->6);
  if (PROF_187 == do_widen)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:
  _189 = OBJ_TYPE_REF(_183;(const struct ctype)_144->6) (_144, 10);
  pretmp_280 = (int) _189;

  <bb 35>:
  # prephitmp_281 = PHI <pretmp_279(32), 10(33), pretmp_280(34)>
  _172 = std::basic_ostream<char>::put (_52, prephitmp_281);
  # DEBUG __os => _172
  std::basic_ostream<char>::flush (_172);
  output_and_vc_53 = MEM[(const struct pair &)prephitmp_283].second.second;
  # DEBUG output_and_vc => output_and_vc_53
  if (output_and_vc_53 >= 0)
    goto <bb 36>;
  else
    goto <bb 60>;

  <bb 36>:
  pretmp_272 = this_11(D)->_vcs;

  <bb 37>:
  # output_and_vc_211 = PHI <output_and_vc_53(36), _27(75)>
  # prephitmp_245 = PHI <pretmp_272(36), _26(75)>
  match_output_55 = output_and_vc_211 / prephitmp_245;
  # DEBUG match_output => match_output_55
  if (match_output_55 < 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  _56 = this_11(D)->D.51790._outputs;
  if (match_output_55 >= _56)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  __assert_fail ("(match_output >= 0) && (match_output < _outputs)", "routers/iq_router.cpp", 883, &__PRETTY_FUNCTION__);

  <bb 40>:
  match_vc_57 = output_and_vc_211 % prephitmp_245;
  # DEBUG match_vc => match_vc_57
  _252 = match_vc_57 >= prephitmp_245;
  _217 = match_vc_57 < 0;
  _216 = _217 | _252;
  if (_216 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  __assert_fail ("(match_vc >= 0) && (match_vc < _vcs)", "routers/iq_router.cpp", 885, &__PRETTY_FUNCTION__);

  <bb 42>:
  _58 = MEM[(const struct Flit *)iftmp.304_114].watch;
  if (_58 != 0)
    goto <bb 43>;
  else
    goto <bb 49>;

  <bb 43>:
  # DEBUG D#1475 => &this_11(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1475
  _60 = GetSimTime ();
  gWatchOut.350_61 = gWatchOut;
  _63 = std::basic_ostream<char>::operator<< (gWatchOut.350_61, _60);
  # DEBUG __out => _63
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_63, " | ", 3);
  # DEBUG __os => _63
  # DEBUG __str => NULL
  _64 = MEM[(long unsigned int *)this_11(D) + 48B];
  # DEBUG this => D#3
  _120 = (long int) _64;
  # DEBUG this => NULL
  _121 = MEM[(char * *)this_11(D) + 40B];
  # DEBUG this => D#1
  _122 = std::__ostream_insert<char, std::char_traits<char> > (_63, _121, _120);
  # DEBUG __out => _122
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_122, " | ", 3);
  # DEBUG __out => _122
  # DEBUG __s => "  Acquiring assigned VC "
  # DEBUG __s => "  Acquiring assigned VC "
  std::__ostream_insert<char, std::char_traits<char> > (_122, "  Acquiring assigned VC ", 24);
  _66 = std::basic_ostream<char>::operator<< (_122, match_vc_57);
  # DEBUG __out => _66
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_66, " at output ", 11);
  _68 = std::basic_ostream<char>::operator<< (_66, match_output_55);
  # DEBUG __out => _68
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_68, ".", 1);
  # DEBUG this => _68
  # DEBUG __pf => endl
  # DEBUG __os => _68
  _192 = _68->_vptr.basic_ostream;
  _193 = MEM[(long int *)_192 + -24B];
  _194 = (sizetype) _193;
  _195 = _68 + _194;
  # DEBUG this => _195
  # DEBUG __c => 10
  _151 = MEM[(const struct basic_ios *)_195]._M_ctype;
  # DEBUG __f => _151
  if (_151 == 0B)
    goto <bb 30>;
  else
    goto <bb 44>;

  <bb 44>:
  # DEBUG this => _151
  # DEBUG __c => 10
  _200 = MEM[(const struct ctype *)_151]._M_widen_ok;
  if (_200 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  _203 = MEM[(const struct ctype *)_151]._M_widen[10];
  pretmp_210 = (int) _203;
  goto <bb 48>;

  <bb 46>:
  # DEBUG this => _151
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_151);
  _208 = MEM[(const struct ctype *)_151].D.24721._vptr.facet;
  _209 = MEM[(int (*__vtbl_ptr_type) () *)_208 + 48B];
  PROF_213 = [obj_type_ref] OBJ_TYPE_REF(_209;(const struct ctype)_151->6);
  if (PROF_213 == do_widen)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:
  _215 = OBJ_TYPE_REF(_209;(const struct ctype)_151->6) (_151, 10);
  pretmp_212 = (int) _215;

  <bb 48>:
  # prephitmp_278 = PHI <pretmp_210(45), 10(46), pretmp_212(47)>
  _198 = std::basic_ostream<char>::put (_68, prephitmp_278);
  # DEBUG __os => _198
  std::basic_ostream<char>::flush (_198);

  <bb 49>:
  _69 = (long unsigned int) match_output_55;
  # DEBUG D#1476 => &this_11(D)->_next_buf
  _110 = MEM[(struct BufferState * * *)this_11(D) + 904B];
  # DEBUG D#54 => D#1476
  # DEBUG __n => _69
  # DEBUG this => D#54
  _123 = _69 * 8;
  _124 = _110 + _123;
  dest_buf_70 = *_124;
  # DEBUG dest_buf => dest_buf_70
  # DEBUG this => dest_buf_70
  # DEBUG vc => match_vc_57
  _218 = MEM[(const struct BufferState *)dest_buf_70]._vcs;
  if (match_vc_57 >= _218)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  __assert_fail ("( vc >= 0 ) && ( vc < _vcs )", "./buffer_state.hpp", 212, &__PRETTY_FUNCTION__);

  <bb 51>:
  _219 = (long unsigned int) match_vc_57;
  # DEBUG D#51 => &MEM[(const struct BufferState *)dest_buf_70]._in_use_by
  _220 = MEM[(int * *)dest_buf_70 + 152B];
  # DEBUG D#48 => D#51
  # DEBUG __n => _219
  # DEBUG this => D#48
  _221 = _219 * 4;
  _222 = _220 + _221;
  _223 = *_222;
  if (_223 < 0)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  __assert_fail ("dest_buf->IsAvailableFor(match_vc)", "routers/iq_router.cpp", 895, &__PRETTY_FUNCTION__);

  <bb 53>:
  _73 = this_11(D)->_vcs;
  _74 = input_23 * _73;
  _75 = vc_25 + _74;
  BufferState::TakeBuffer (dest_buf_70, match_vc_57, _75);
  # DEBUG this => cur_buf_30
  # DEBUG vc => vc_25
  # DEBUG out_port => match_output_55
  # DEBUG out_vc => match_vc_57
  # DEBUG D#40 => &cur_buf_30->_vc
  _128 = MEM[(struct VC * * *)cur_buf_30 + 104B];
  # DEBUG D#36 => D#40
  # DEBUG __n => _38
  # DEBUG this => D#36
  _129 = _128 + _32;
  _130 = *_129;
  VC::SetOutput (_130, match_output_55, match_vc_57);
  # DEBUG this => cur_buf_30
  # DEBUG vc => vc_25
  # DEBUG s => 3
  # DEBUG D#38 => &cur_buf_30->_vc
  _125 = MEM[(struct VC * * *)cur_buf_30 + 104B];
  # DEBUG D#36 => D#38
  # DEBUG __n => _38
  # DEBUG this => D#36
  _126 = _125 + _32;
  _127 = *_126;
  VC::SetState (_127, 3);
  _77 = this_11(D)->_speculative;
  if (_77 != 0)
    goto <bb 69>;
  else
    goto <bb 54>;

  <bb 54>:
  __x_163 = MEM[(const struct pair &)prephitmp_283 + 4];
  # DEBUG __x => __x_163
  __x$4_162 = MEM[(const struct pair &)prephitmp_283 + 8];
  # DEBUG __x$4 => __x$4_162
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_163
  # DEBUG __y$4 => __x$4_162
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.64969] = -1;
  MEM[(struct pair *)&D.64969 + 4B] = __x_163;
  MEM[(struct pair *)&D.64969 + 8B] = __x$4_162;
  MEM[(struct pair *)&D.64969 + 12B] = -1;
  # DEBUG D#2421 => &this_11(D)->_sw_alloc_vcs
  # DEBUG this => D#2421
  # DEBUG __x => &D.64969
  _225 = MEM[(struct deque *)this_11(D) + 672B].D.45936._M_impl._M_finish._M_cur;
  _226 = MEM[(struct deque *)this_11(D) + 672B].D.45936._M_impl._M_finish._M_last;
  _227 = _226 + 18446744073709551600;
  if (_225 != _227)
    goto <bb 55>;
  else
    goto <bb 58>;

  <bb 55>:
  # DEBUG D#1467 => &D#2421->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _225
  # DEBUG __arg => &D.64969
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _225
  # DEBUG __val => &D.64969
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _225
  # DEBUG D.93816 => D#12
  if (_225 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  *_225 = D.64969;

  <bb 57>:

  <bb 78>:
  _228 = _225 + 16;
  MEM[(struct deque *)this_11(D) + 672B].D.45936._M_impl._M_finish._M_cur = _228;
  goto <bb 59>;

  <bb 58>:
  _78 = &this_11(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_78, &D.64969);

  <bb 59>:
  D.64969 ={v} {CLOBBER};
  goto <bb 69>;

  <bb 60>:
  _84 = MEM[(const struct Flit *)iftmp.304_114].watch;
  if (_84 != 0)
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:
  pretmp_188 = MEM[(const struct pair &)prephitmp_283 + 4];
  pretmp_273 = MEM[(const struct pair &)prephitmp_283 + 8];
  goto <bb 63>;

  <bb 62>:
  # DEBUG D#1477 => &this_11(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1477
  _87 = GetSimTime ();
  gWatchOut.350_88 = gWatchOut;
  _90 = std::basic_ostream<char>::operator<< (gWatchOut.350_88, _87);
  # DEBUG __out => _90
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_90, " | ", 3);
  # DEBUG __os => _90
  # DEBUG __str => NULL
  _92 = MEM[(long unsigned int *)this_11(D) + 48B];
  # DEBUG this => D#3
  _131 = (long int) _92;
  # DEBUG this => NULL
  _132 = MEM[(char * *)this_11(D) + 40B];
  # DEBUG this => D#1
  _133 = std::__ostream_insert<char, std::char_traits<char> > (_90, _132, _131);
  # DEBUG __out => _133
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_133, " | ", 3);
  # DEBUG __out => _133
  # DEBUG __s => "  No output VC allocated."
  # DEBUG __s => "  No output VC allocated."
  std::__ostream_insert<char, std::char_traits<char> > (_133, "  No output VC allocated.", 25);
  # DEBUG this => _133
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_133);
  pretmp_185 = MEM[(const struct pair &)prephitmp_283 + 4];
  pretmp_178 = MEM[(const struct pair &)prephitmp_283 + 8];

  <bb 63>:
  # prephitmp_181 = PHI <pretmp_188(61), pretmp_185(62), input_23(75)>
  # prephitmp_244 = PHI <pretmp_273(61), pretmp_178(62), vc_25(75)>
  # DEBUG D#2418 => MEM[(const struct pair &)D#2419 + 4]
  # DEBUG __x => D#2418
  # DEBUG D#2417 => MEM[(const struct pair &)D#2419 + 8]
  # DEBUG __x$4 => D#2417
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => D#2418
  # DEBUG __y$4 => D#2417
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.64972] = -1;
  MEM[(struct pair *)&D.64972 + 4B] = prephitmp_181;
  MEM[(struct pair *)&D.64972 + 8B] = prephitmp_244;
  MEM[(struct pair *)&D.64972 + 12B] = -1;
  # DEBUG D#2420 => &this_11(D)->_vc_alloc_vcs
  # DEBUG this => D#2420
  # DEBUG __x => &D.64972
  _79 = MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_finish._M_cur;
  _229 = MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_finish._M_last;
  _230 = _229 + 18446744073709551600;
  if (_79 != _230)
    goto <bb 64>;
  else
    goto <bb 67>;

  <bb 64>:
  # DEBUG D#1467 => &D#2420->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _79
  # DEBUG __arg => &D.64972
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _79
  # DEBUG __val => &D.64972
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _79
  # DEBUG D.93816 => D#12
  if (_79 != 0B)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  *_79 = D.64972;

  <bb 66>:

  <bb 77>:
  _231 = _79 + 16;
  MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_finish._M_cur = _231;
  goto <bb 68>;

  <bb 67>:
  _94 = &this_11(D)->_vc_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_94, &D.64972);

  <bb 68>:
  D.64972 ={v} {CLOBBER};

  <bb 69>:
  # DEBUG D#2416 => &this_11(D)->_vc_alloc_vcs
  # DEBUG this => D#2416
  _93 = MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_start._M_cur;
  _134 = MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_start._M_last;
  _135 = _134 + 18446744073709551600;
  if (_93 != _135)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  # DEBUG D#777 => D#2416->D.45936._M_impl._M_start._M_cur
  # DEBUG D#776 => &D#2416->D.45936._M_impl
  # DEBUG D#281 => D#776
  # DEBUG D#282 => D#777
  # DEBUG __a => D#281
  # DEBUG __p => D#282
  # DEBUG D#280 => D#282
  # DEBUG D#279 => D#281
  # DEBUG D#277 => D#279
  # DEBUG D#278 => D#280
  # DEBUG this => D#277
  # DEBUG __p => D#278
  _136 = _93 + 16;
  MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_start._M_cur = _136;
  goto <bb 5>;

  <bb 71>:
  # DEBUG this => D#2416
  # DEBUG this => D#2416
  # DEBUG D#775 => D#2416->D.45936._M_impl._M_start._M_cur
  # DEBUG D#772 => &D#2416->D.45936
  # DEBUG this => D#772
  # DEBUG D#282 => D#775
  # DEBUG __a => D#281
  # DEBUG __p => D#282
  # DEBUG D#280 => D#282
  # DEBUG D#279 => D#281
  # DEBUG D#277 => D#279
  # DEBUG D#278 => D#280
  # DEBUG this => D#277
  # DEBUG __p => D#278
  _95 = MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_start._M_first;
  # DEBUG D#774 => &D#2416->D.45936
  # DEBUG this => D#774
  # DEBUG __p => _95
  # DEBUG __size => 16
  # DEBUG D#768 => &D#774->_M_impl
  # DEBUG D#766 => D#768
  # DEBUG __p => _95
  # DEBUG __a => D#766
  # DEBUG __n => D#767
  # DEBUG D#765 => D#767
  # DEBUG D#764 => D#766
  # DEBUG D#762 => D#764
  # DEBUG D#763 => D#765
  # DEBUG __p => _95
  # DEBUG this => D#762
  # DEBUG D.122328 => D#763
  operator delete (_95);
  _232 = MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_start._M_node;
  _233 = _232 + 8;
  # DEBUG D#773 => &D#2416->D.45936._M_impl._M_start
  # DEBUG this => D#773
  # DEBUG __new_node => _233
  MEM[(struct _Deque_iterator *)this_11(D) + 528B]._M_node = _233;
  _234 = MEM[(struct pair * *)_232 + 8B];
  MEM[(struct _Deque_iterator *)this_11(D) + 528B]._M_first = _234;
  # DEBUG __size => 16
  _235 = _234 + 512;
  MEM[(struct _Deque_iterator *)this_11(D) + 528B]._M_last = _235;
  MEM[(struct deque *)this_11(D) + 512B].D.45936._M_impl._M_start._M_cur = _234;
  goto <bb 5>;

  <bb 72>:

  <bb 79>:

  <bb 73>:

  <bb 80>:
  return;

  <bb 74>:
  _22 = GetSimTime ();
  if (time_17 != _22)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 75>:
  # DEBUG output_and_vc => _27
  if (_27 >= 0)
    goto <bb 37>;
  else
    goto <bb 63>;

}



;; Function std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = std::pair<const int, Credit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Credit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Credit*> >] (_ZNSt8_Rb_treeIiSt4pairIKiP6CreditESt10_Select1stIS4_ESt4lessIiESaIS4_EE16_M_insert_uniqueERKS4_, funcdef_no=2976, decl_uid=47509, cgraph_uid=1421, symbol_order=1422)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = std::pair<const int, Credit*>; _KeyOfValue = std::_Select1st<std::pair<const int, Credit*> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, Credit*> >] (struct _Rb_tree * const this, const struct pair & __v)
{
  struct _Rb_tree_node_base * SR.3514;
  struct _Rb_tree_node_base * SR.3513;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  bool __insert_left;
  struct iterator D.122534;
  struct pair D.122507;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct _Rb_tree_node_base * SR.2310;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * __res$first;
  struct pair __res;
  struct iterator D.69769;
  struct pair D.87095;
  const int pretmp_16;
  struct _Rb_tree_node_base * _19;
  int prephitmp_21;
  const int _23;
  struct _Rb_tree_node_base * _25;
  struct _Rb_tree_node_base * _26;
  const int pretmp_27;
  struct _Rb_tree_node_base * _28;
  struct _Rb_tree_node_base * const _34;
  const int _37;
  const int _38;
  struct _Rb_tree_node * _39;
  long unsigned int _44;
  long unsigned int _45;
  const int prephitmp_47;
  const int _48;
  const int prephitmp_49;
  const int pretmp_51;
  int pretmp_71;

  <bb 2>:
  # DEBUG D#290 => &D.69730
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#290
  # DEBUG D#2427 => &__v_3(D)->first
  # DEBUG this => this_5(D)
  # DEBUG __k => D#2427
  _19 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 16B];
  # DEBUG D#118 => this_5(D)
  # DEBUG this => D#118
  # DEBUG __x => NULL
  # DEBUG this => this_5(D)
  __j$_M_node_20 = &this_5(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_20
  # DEBUG __x => _19
  if (_19 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_51 = MEM[(const int &)__v_3(D)];
  goto <bb 6>;

  <bb 4>:
  # _34 = PHI <_25(7), _26(8)>
  # DEBUG __comp => D#2429 < _23
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => _34
  if (_34 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __j$_M_node_59 = PHI <_19(3), _34(5)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_59
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG this => __j$_M_node_59
  # DEBUG D#794 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_59]._M_value_field
  # DEBUG __r => D#794
  # DEBUG __x => D#794
  # DEBUG this => D#290
  # DEBUG D#804 => &MEM[(const struct pair &)__j$_M_node_59 + 32].first
  # DEBUG D#808 => &this_5(D)->_M_impl._M_key_compare
  # DEBUG D#287 => D#808
  # DEBUG D#2429 => MEM[(const int &)__v_3(D)]
  # DEBUG D#288 => D#2427
  _23 = MEM[(const int &)__j$_M_node_59 + 32];
  # DEBUG D#289 => D#804
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  # DEBUG __comp => NULL
  if (_23 > pretmp_51)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _25 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 16B];
  # DEBUG D#209 => __j$_M_node_59
  # DEBUG __x => D#209
  goto <bb 4>;

  <bb 8>:
  _26 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 24B];
  # DEBUG D#208 => __j$_M_node_59
  # DEBUG __x => D#208
  goto <bb 4>;

  <bb 9>:
  # _48 = PHI <_23(4)>
  # __j$_M_node_24 = PHI <__j$_M_node_59(4)>

  <bb 19>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_24
  # DEBUG __j$_M_node => __j$_M_node_24
  if (_48 > pretmp_51)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  # __j$_M_node_72 = PHI <__j$_M_node_24(19), __j$_M_node_20(2)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_72
  # DEBUG __j$_M_node => __j$_M_node_72
  _28 = MEM[(struct _Rb_tree_node_base * *)this_5(D) + 24B];
  # DEBUG D#291 => this_5(D)
  # DEBUG this => D#291
  # DEBUG this => NULL
  # DEBUG __x => _28
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_28 == __j$_M_node_72)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG this => &__j
  __j$_M_node_30 = std::_Rb_tree_decrement (__j$_M_node_72);
  # DEBUG __j$_M_node => __j$_M_node_30
  pretmp_16 = MEM[(const int &)__v_3(D)];
  pretmp_27 = MEM[(const int &)__j$_M_node_30 + 32];

  <bb 12>:
  # __j$_M_node_31 = PHI <__j$_M_node_24(19), __j$_M_node_30(11)>
  # __j$_M_node_62 = PHI <__j$_M_node_24(19), __j$_M_node_72(11)>
  # prephitmp_47 = PHI <pretmp_51(19), pretmp_16(11)>
  # prephitmp_49 = PHI <_48(19), pretmp_27(11)>
  # DEBUG __j$_M_node => __j$_M_node_31
  # DEBUG __x => __j$_M_node_31
  # DEBUG __x => __j$_M_node_31
  # DEBUG this => __j$_M_node_31
  # DEBUG D#409 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_31]._M_value_field
  # DEBUG __r => D#409
  # DEBUG __x => D#409
  # DEBUG this => D#290
  # DEBUG D#805 => &MEM[(const struct pair &)__j$_M_node_31 + 32].first
  # DEBUG D#807 => &this_5(D)->_M_impl._M_key_compare
  # DEBUG D#287 => D#807
  # DEBUG D#288 => D#805
  # DEBUG D#289 => D#2427
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (prephitmp_47 > prephitmp_49)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  # __res$second_52 = PHI <_28(10), __j$_M_node_62(12)>
  # DEBUG D#806 => {CLOBBER}
  # DEBUG __j$_M_node => D#806
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$second_52
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$second_52
  if (__res$second_52 != 0B)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  # DEBUG this => &__an
  # DEBUG __t => this_5(D)
  # DEBUG __an$_M_t => this_5(D)
  # DEBUG D#1597 => &__an
  # DEBUG this => this_5(D)
  # DEBUG __x => 0B
  # DEBUG __p => __res$second_52
  # DEBUG __v => __v_3(D)
  # DEBUG __node_gen => D#1597
  # DEBUG D#1596 => D#1597
  # DEBUG this => this_5(D)
  if (__j$_M_node_20 == __res$second_52)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __res$second_52
  # DEBUG __x => __res$second_52
  # DEBUG this => __res$second_52
  # DEBUG D#409 => &MEM[(const struct _Rb_tree_node *)__res$second_52]._M_value_field
  # DEBUG __r => D#409
  # DEBUG __x => D#409
  # DEBUG this => D#290
  # DEBUG D#1594 => &MEM[(const struct pair &)__res$second_52 + 32].first
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#290
  # DEBUG D#1595 => &this_5(D)->_M_impl._M_key_compare
  # DEBUG D#287 => D#1595
  _37 = MEM[(const int &)__v_3(D)];
  _38 = MEM[(const int &)__res$second_52 + 32];
  # DEBUG D#289 => D#1594
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  __insert_left_35 = _37 < _38;
  pretmp_71 = (int) __insert_left_35;

  <bb 16>:
  # prephitmp_21 = PHI <pretmp_71(15), 1(14)>
  # DEBUG __insert_left => NULL
  # DEBUG D#1593 => D#1596
  # DEBUG __arg => __v_3(D)
  # DEBUG this => D#1593
  # DEBUG D#1592 => D#1593
  # DEBUG D#1591 => D#1592->_M_t
  # DEBUG D#1590 => D#1591
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#1590
  # DEBUG D#1589 => D#1590
  # DEBUG D#1588 => D#1590
  # DEBUG D#1587 => D#1588
  # DEBUG this => D#1587
  # DEBUG D#1586 => D#1587
  # DEBUG this => D#1586
  # DEBUG __n => 1
  # DEBUG __a => D#1585
  # DEBUG D#1584 => D#1585
  # DEBUG D#1582 => D#1584
  # DEBUG D#1583 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1582
  # DEBUG D.122524 => D#1583
  # DEBUG D#1581 => D#1582
  # DEBUG D#1580 => D#1581
  # DEBUG this => D#1580
  _39 = operator new (48);
  # DEBUG __tmp => _39
  # DEBUG D#1344 => D#1589
  # DEBUG __node => _39
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#1344
  # DEBUG D#1343 => D#1344
  # DEBUG this => _39
  # DEBUG D#2428 => &_39->_M_value_field
  # DEBUG __r => D#2428
  # DEBUG D#1189 => D#1343
  # DEBUG this => D#1189
  # DEBUG D#1188 => D#1189
  # DEBUG this => D#1188
  # DEBUG this => NULL
  # DEBUG D.100923 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2428
  # DEBUG __val => __v_3(D)
  # DEBUG this => D#1342
  # DEBUG D#12 => 16
  # DEBUG __p => D#2428
  # DEBUG D.102303 => D#12
  MEM[(struct pair *)_39 + 32B] = *__v_3(D);
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _39
  std::_Rb_tree_insert_and_rebalance (prephitmp_21, _39, __res$second_52, __j$_M_node_20);
  _44 = this_5(D)->_M_impl._M_node_count;
  _45 = _44 + 1;
  this_5(D)->_M_impl._M_node_count = _45;
  # DEBUG this => NULL
  # DEBUG __x => _39
  # DEBUG this => &D.69771
  # DEBUG __a => &D.69769
  # DEBUG __b => &D.69770
  MEM[(struct pair *)&D.87095] = _39;
  MEM[(struct pair *)&D.87095 + 8B] = 1;
  D.69769 ={v} {CLOBBER};
  goto <bb 18>;

  <bb 17>:
  # __res$first_73 = PHI <0B(13), __j$_M_node_31(12)>

  <bb 21>:
  # DEBUG D#806 => {CLOBBER}
  # DEBUG __j$_M_node => D#806
  # DEBUG __res => __res$first_73
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res$first_73
  # DEBUG __res$second => NULL
  # DEBUG this => &D.69772
  # DEBUG __x => __res$first_73
  # DEBUG this => &D.69774
  # DEBUG __a => &D.69772
  # DEBUG __b => &D.69773
  MEM[(struct pair *)&D.87095] = __res$first_73;
  MEM[(struct pair *)&D.87095 + 8B] = 0;

  <bb 18>:

  <bb 20>:
  # DEBUG D#1600 => {CLOBBER}
  # DEBUG __res$first => D#1600
  # DEBUG D#1601 => {CLOBBER}
  # DEBUG __res$second => D#1601
  return D.87095;

}



;; Function std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi, funcdef_no=2979, decl_uid=33273, cgraph_uid=1424, symbol_order=1425)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>] (struct _Rb_tree * const this, const int & __v)
{
  struct _Rb_tree_node_base * SR.3520;
  struct _Rb_tree_node_base * SR.3519;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  bool __insert_left;
  struct iterator D.122601;
  struct pair D.122574;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct _Rb_tree_node_base * SR.2327;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * __res$first;
  struct pair __res;
  struct iterator D.69839;
  struct pair D.87277;
  const int pretmp_15;
  struct _Rb_tree_node_base * _18;
  int prephitmp_20;
  const int _22;
  struct _Rb_tree_node_base * _24;
  struct _Rb_tree_node_base * _25;
  const int pretmp_26;
  struct _Rb_tree_node_base * _27;
  struct _Rb_tree_node_base * const _33;
  const int _36;
  const int _37;
  struct _Rb_tree_node * _38;
  int _40;
  long unsigned int _44;
  long unsigned int _45;
  const int prephitmp_47;
  const int _48;
  const int prephitmp_49;
  const int pretmp_51;
  int pretmp_72;

  <bb 2>:
  # DEBUG D#294 => &D.69800
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#294
  # DEBUG this => this_4(D)
  # DEBUG __k => __v_3(D)
  _18 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 16B];
  # DEBUG D#90 => this_4(D)
  # DEBUG this => D#90
  # DEBUG __x => NULL
  # DEBUG this => this_4(D)
  __j$_M_node_19 = &this_4(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_19
  # DEBUG __x => _18
  if (_18 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_51 = *__v_3(D);
  goto <bb 6>;

  <bb 4>:
  # _33 = PHI <_24(7), _25(8)>
  # DEBUG __comp => D#2431 < _22
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => _33
  if (_33 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __j$_M_node_59 = PHI <_18(3), _33(5)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_59
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG this => __j$_M_node_59
  # DEBUG D#1345 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_59]._M_value_field
  # DEBUG __r => D#1345
  # DEBUG __x => D#1345
  # DEBUG this => D#294
  # DEBUG D#1349 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#287 => D#1349
  # DEBUG D#2431 => *__v_3(D)
  # DEBUG D#288 => __v_3(D)
  _22 = MEM[(const int &)__j$_M_node_59 + 32];
  # DEBUG D#289 => D#1345
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  # DEBUG __comp => NULL
  if (_22 > pretmp_51)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _24 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 16B];
  # DEBUG D#178 => __j$_M_node_59
  # DEBUG __x => D#178
  goto <bb 4>;

  <bb 8>:
  _25 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 24B];
  # DEBUG D#177 => __j$_M_node_59
  # DEBUG __x => D#177
  goto <bb 4>;

  <bb 9>:
  # _48 = PHI <_22(4)>
  # __j$_M_node_23 = PHI <__j$_M_node_59(4)>

  <bb 19>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_23
  # DEBUG __j$_M_node => __j$_M_node_23
  if (_48 > pretmp_51)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  # __j$_M_node_73 = PHI <__j$_M_node_23(19), __j$_M_node_19(2)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_73
  # DEBUG __j$_M_node => __j$_M_node_73
  _27 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 24B];
  # DEBUG D#410 => this_4(D)
  # DEBUG this => D#410
  # DEBUG this => NULL
  # DEBUG __x => _27
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_27 == __j$_M_node_73)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG this => &__j
  __j$_M_node_29 = std::_Rb_tree_decrement (__j$_M_node_73);
  # DEBUG __j$_M_node => __j$_M_node_29
  pretmp_15 = *__v_3(D);
  pretmp_26 = MEM[(const int &)__j$_M_node_29 + 32];

  <bb 12>:
  # __j$_M_node_30 = PHI <__j$_M_node_23(19), __j$_M_node_29(11)>
  # __j$_M_node_63 = PHI <__j$_M_node_23(19), __j$_M_node_73(11)>
  # prephitmp_47 = PHI <pretmp_51(19), pretmp_15(11)>
  # prephitmp_49 = PHI <_48(19), pretmp_26(11)>
  # DEBUG __j$_M_node => __j$_M_node_30
  # DEBUG __x => __j$_M_node_30
  # DEBUG __x => __j$_M_node_30
  # DEBUG this => __j$_M_node_30
  # DEBUG D#1346 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_30]._M_value_field
  # DEBUG __r => D#1346
  # DEBUG __x => D#1346
  # DEBUG this => D#294
  # DEBUG D#1348 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#287 => D#1348
  # DEBUG D#288 => D#1346
  # DEBUG D#289 => __v_3(D)
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (prephitmp_47 > prephitmp_49)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  # __res$second_52 = PHI <_27(10), __j$_M_node_63(12)>
  # DEBUG D#1347 => {CLOBBER}
  # DEBUG __j$_M_node => D#1347
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$second_52
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$second_52
  if (__res$second_52 != 0B)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  # DEBUG this => &__an
  # DEBUG __t => this_4(D)
  # DEBUG __an$_M_t => this_4(D)
  # DEBUG D#1619 => &__an
  # DEBUG this => this_4(D)
  # DEBUG __x => 0B
  # DEBUG __p => __res$second_52
  # DEBUG __v => __v_3(D)
  # DEBUG __node_gen => D#1619
  # DEBUG D#1618 => D#1619
  # DEBUG this => this_4(D)
  if (__j$_M_node_19 == __res$second_52)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __res$second_52
  # DEBUG __x => __res$second_52
  # DEBUG this => __res$second_52
  # DEBUG D#1616 => &MEM[(const struct _Rb_tree_node *)__res$second_52]._M_value_field
  # DEBUG __r => D#1616
  # DEBUG __x => D#1616
  # DEBUG this => D#294
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#294
  # DEBUG D#1617 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#287 => D#1617
  _36 = *__v_3(D);
  _37 = MEM[(const int &)__res$second_52 + 32];
  # DEBUG D#289 => D#1616
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  __insert_left_35 = _36 < _37;
  pretmp_72 = (int) __insert_left_35;

  <bb 16>:
  # prephitmp_20 = PHI <pretmp_72(15), 1(14)>
  # DEBUG __insert_left => NULL
  # DEBUG D#1615 => D#1618
  # DEBUG __arg => __v_3(D)
  # DEBUG this => D#1615
  # DEBUG D#1614 => D#1615
  # DEBUG D#1613 => D#1614->_M_t
  # DEBUG D#1612 => D#1613
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#1612
  # DEBUG D#1611 => D#1612
  # DEBUG D#1610 => D#1612
  # DEBUG D#1609 => D#1610
  # DEBUG this => D#1609
  # DEBUG D#1608 => D#1609
  # DEBUG this => D#1608
  # DEBUG __n => 1
  # DEBUG __a => D#1607
  # DEBUG D#1606 => D#1607
  # DEBUG D#1604 => D#1606
  # DEBUG D#1605 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1604
  # DEBUG D.122591 => D#1605
  # DEBUG D#1603 => D#1604
  # DEBUG D#1602 => D#1603
  # DEBUG this => D#1602
  _38 = operator new (40);
  # DEBUG __tmp => _38
  # DEBUG D#1352 => D#1611
  # DEBUG __node => _38
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#1352
  # DEBUG D#1351 => D#1352
  # DEBUG this => _38
  # DEBUG D#2430 => &_38->_M_value_field
  # DEBUG __r => D#2430
  # DEBUG D#827 => D#1351
  # DEBUG this => D#827
  # DEBUG D#826 => D#827
  # DEBUG this => D#826
  # DEBUG this => NULL
  # DEBUG D.97609 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2430
  # DEBUG __val => __v_3(D)
  # DEBUG this => D#1350
  # DEBUG D#12 => 4
  # DEBUG __p => D#2430
  # DEBUG D.102426 => D#12
  _40 = *__v_3(D);
  MEM[(int *)_38 + 32B] = _40;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _38
  std::_Rb_tree_insert_and_rebalance (prephitmp_20, _38, __res$second_52, __j$_M_node_19);
  _44 = this_4(D)->_M_impl._M_node_count;
  _45 = _44 + 1;
  this_4(D)->_M_impl._M_node_count = _45;
  # DEBUG this => NULL
  # DEBUG __x => _38
  # DEBUG this => &D.69841
  # DEBUG __a => &D.69839
  # DEBUG __b => &D.69840
  MEM[(struct pair *)&D.87277] = _38;
  MEM[(struct pair *)&D.87277 + 8B] = 1;
  D.69839 ={v} {CLOBBER};
  goto <bb 18>;

  <bb 17>:
  # __res$first_74 = PHI <0B(13), __j$_M_node_30(12)>

  <bb 21>:
  # DEBUG D#1347 => {CLOBBER}
  # DEBUG __j$_M_node => D#1347
  # DEBUG __res => __res$first_74
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res$first_74
  # DEBUG __res$second => NULL
  # DEBUG this => &D.69851
  # DEBUG __x => __res$first_74
  # DEBUG this => &D.69853
  # DEBUG __a => &D.69851
  # DEBUG __b => &D.69852
  MEM[(struct pair *)&D.87277] = __res$first_74;
  MEM[(struct pair *)&D.87277 + 8B] = 0;

  <bb 18>:

  <bb 20>:
  # DEBUG D#1622 => {CLOBBER}
  # DEBUG __res$first => D#1622
  # DEBUG D#1623 => {CLOBBER}
  # DEBUG __res$second => D#1623
  return D.87277;

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = std::pair<int, std::pair<std::pair<int, int>, int> >; _Alloc = std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > >; std::size_t = long unsigned int] (_ZNSt11_Deque_baseISt4pairIiS0_IS0_IiiEiEESaIS3_EE17_M_initialize_mapEm, funcdef_no=3080, decl_uid=45374, cgraph_uid=1525, symbol_order=1526)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = std::pair<int, std::pair<std::pair<int, int>, int> >; _Alloc = std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > >; std::size_t = long unsigned int] (struct _Deque_base * const this, size_t __num_elements)
{
  struct Credit * * * __nstart;
  struct pair * * __nfinish;
  struct pair * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.70590;
  const long unsigned int D.70591;
  long unsigned int _3;
  struct pair * * _8;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _20;
  struct pair * * _23;
  struct pair * _24;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  struct pair * _29;
  void * _31;
  struct pair * * _33;
  struct pair * _40;
  struct pair * _41;
  struct pair * _42;
  struct Credit * * _52;
  void * _54;
  struct Credit * * _56;
  long unsigned int _65;

  <bb 2>:
  # DEBUG __size => 16
  _3 = __num_elements_2(D) >> 5;
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodes => __num_nodes_4
  _5 = _3 + 3;
  # DEBUG __a => &D.70590
  # DEBUG __b => &D.70591
  _65 = MAX_EXPR <_5, 8>;
  this_10(D)->_M_impl._M_map_size = _65;
  # DEBUG D#1169 => this_10(D)
  # DEBUG __n => D#2432
  # DEBUG this => D#1169
  # DEBUG D#1168 => D#1169
  # DEBUG D#875 => D#1168
  # DEBUG this => D#875
  # DEBUG D#874 => D#875
  # DEBUG this => D#874
  # DEBUG this => NULL
  # DEBUG D.97884 => NULL
  # DEBUG this => NULL
  # DEBUG D#1167 => &__map_alloc
  # DEBUG __n => D#2432
  # DEBUG __a => D#1167
  # DEBUG D#1166 => D#1167
  # DEBUG D#1164 => D#1166
  # DEBUG D#1165 => 0B
  # DEBUG __n => D#2432
  # DEBUG this => D#1164
  # DEBUG D.100770 => D#1165
  # DEBUG D#1163 => D#1164
  # DEBUG D#1162 => D#1163
  # DEBUG this => D#1162
  _26 = _65 * 8;
  _8 = operator new (_26);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = _8;
  _15 = this_10(D)->_M_impl._M_map_size;
  _16 = _15 - __num_nodes_4;
  _17 = _16 >> 1;
  _18 = _17 * 8;
  __nstart_19 = _8 + _18;
  # DEBUG __nstart => __nstart_19
  _20 = __num_nodes_4 * 8;
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinish => __nfinish_21
  # DEBUG D#1095 => this_10(D)
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nfinish_21
  # DEBUG this => D#1386
  # DEBUG __cur => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 13>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __cur => __nstart_75
  # DEBUG D#1381 => D#1382
  # DEBUG this => D#1381
  # DEBUG D#1380 => D#1381
  # DEBUG __size => 8
  # DEBUG D#1379 => &D#1380->_M_impl
  # DEBUG D#1378 => D#1379
  # DEBUG __n => NULL
  # DEBUG __a => D#1378
  # DEBUG D#1377 => D#1378
  # DEBUG D#1375 => D#1377
  # DEBUG D#1376 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1375
  # DEBUG D.122637 => D#1376
  # DEBUG D#1374 => D#1375
  # DEBUG D#1373 => D#1374
  # DEBUG this => D#1373
  _52 = operator new (512);

  <bb 5>:
  MEM[(struct Credit * * *)__nstart_75] = _52;
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __cur => __nstart_53
  # DEBUG __cur => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 13>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  # __nstart_13 = PHI <__nstart_75(4)>
<L3>:
  _54 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_54);
  # DEBUG this => D#1383
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nstart_13
  # DEBUG __n => __nstart_19
  # DEBUG __n => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __cxa_rethrow ();

  <bb 9>:

  <bb 10>:
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(11)>
  # DEBUG __n => __nstart_72
  _56 = MEM[(struct Credit * * *)__nstart_72];
  # DEBUG this => D#1384
  # DEBUG __p => _56
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#1385->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _56
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _56
  # DEBUG this => D#1017
  # DEBUG D.122630 => D#1018
  operator delete (_56);
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __n => __nstart_57
  # DEBUG __n => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

<L5>:
  __cxa_end_catch ();
  resx 7

  <bb 13>:
  # DEBUG D#1172 => &this_10(D)->_M_impl._M_start
  # DEBUG this => D#1172
  # DEBUG __new_node => __nstart_19
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
  _24 = *__nstart_19;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
  # DEBUG __size => 16
  _42 = _24 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#1171 => &this_10(D)->_M_impl._M_finish
  # DEBUG this => D#1171
  # DEBUG __new_node => _23
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
  _40 = MEM[(struct pair * *)__nfinish_21 + -8B];
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
  # DEBUG __size => 16
  _41 = _40 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
  this_10(D)->_M_impl._M_start._M_cur = _24;
  # DEBUG __size => 16
  _27 = __num_elements_2(D) & 31;
  _28 = _27 * 16;
  _29 = _40 + _28;
  this_10(D)->_M_impl._M_finish._M_cur = _29;
  return;

<L0>:
  _31 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_31);
  # DEBUG D#1170 => this_10(D)->_M_impl._M_map_size
  _33 = this_10(D)->_M_impl._M_map;
  # DEBUG D#878 => this_10(D)
  # DEBUG D#879 => D#1170
  # DEBUG __p => _33
  # DEBUG this => D#878
  # DEBUG __n => D#879
  # DEBUG D#877 => D#879
  # DEBUG D#876 => D#878
  # DEBUG D#875 => D#876
  # DEBUG this => D#875
  # DEBUG D#874 => D#875
  # DEBUG this => D#874
  # DEBUG this => NULL
  # DEBUG D.97884 => NULL
  # DEBUG this => NULL
  # DEBUG D#560 => &__map_alloc
  # DEBUG D#561 => D#877
  # DEBUG __p => _33
  # DEBUG __a => D#560
  # DEBUG __n => D#561
  # DEBUG D#559 => D#561
  # DEBUG D#558 => D#560
  # DEBUG D#556 => D#558
  # DEBUG D#557 => D#559
  # DEBUG __p => _33
  # DEBUG this => D#556
  # DEBUG D.100792 => D#557
  operator delete (_33);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = 0B;
  this_10(D)->_M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Buffer*; _Alloc = std::allocator<Buffer*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Buffer**, std::vector<Buffer*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Buffer**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Buffer*] (_ZNSt6vectorIP6BufferSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3168, decl_uid=48597, cgraph_uid=1613, symbol_order=1614)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Buffer*; _Alloc = std::allocator<Buffer*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Buffer**, std::vector<Buffer*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Buffer**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Buffer*] (struct vector * const this, struct iterator __position, size_type __n, struct Buffer * const & __x)
{
  const long unsigned int D.122703;
  const size_type __len;
  size_type D.122702;
  size_type __n;
  struct BufferState * * D.122693;
  const ptrdiff_t _Num;
  struct Credit * * D.122684;
  struct Buffer * * const __position;
  struct Buffer * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Buffer * * __first;
  long unsigned int __n;
  struct Buffer * * __first;
  const ptrdiff_t _Num;
  struct Buffer * * __first;
  struct Buffer * * __new_finish;
  const size_type __elems_after;
  struct Buffer * __x_copy;
  struct Buffer * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct BufferState * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct Buffer * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct Buffer * * _41;
  struct Buffer * * _43;
  long int _47;
  struct Buffer * * _48;
  long int __first.37_49;
  struct Buffer * * _53;
  struct Buffer * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct Buffer * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Credit * * _108;
  struct BufferState * * _112;
  struct BufferState * * iftmp.56_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct Buffer * * prephitmp_146;
  struct Buffer * * pretmp_147;
  struct BufferState * * prephitmp_148;
  struct BufferState * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct Buffer * * pretmp_166;
  struct Buffer * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct Buffer * * pretmp_173;
  struct Buffer * * prephitmp_174;

  <bb 2>:
  # DEBUG D#2438 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#2438
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.48674._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.48674._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#214 => &this_4(D)->D.48674._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#214
  # DEBUG __lhs => &D.71287
  # DEBUG __rhs => &__position
  # DEBUG this => &D.71287
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2020 => &this_4(D)->D.48674
  # DEBUG this => D#2020
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2012
  # DEBUG D#2011 => D#2012
  # DEBUG D#2010 => D#2011
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.113321 => D#2010
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.37_49 = (long int) _41;
  _47 = _8 - __first.37_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.48674._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.48674._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#2438
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG __first => D#2438
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.37_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#952 => &__x_copy
  # DEBUG __first => D#2438
  # DEBUG __last => _48
  # DEBUG D#951 => D#952
  # DEBUG __value => D#951
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG D#699 => D#951
  # DEBUG __first => D#2438
  # DEBUG __last => _48
  # DEBUG __value => D#699
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#2438
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2021 => &this_4(D)->D.48674
  # DEBUG this => D#2021
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#1428 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1427 => D#1428
  # DEBUG __x => D#1427
  # DEBUG D.113406 => D#1429
  # DEBUG D#1426 => D#1427
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1425 => D#1426
  # DEBUG __x => D#1425
  # DEBUG __assignable => 1
  # DEBUG D#1424 => D#1425
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1423 => D#1424
  # DEBUG __x => D#1423
  # DEBUG D#1422 => D#1423
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1421 => D#1422
  # DEBUG __value => D#1421
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#1420 => D#1421
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#1420
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.48674._M_impl._M_finish = __first_125;
  # DEBUG D#2022 => &this_4(D)->D.48674
  # DEBUG this => D#2022
  # DEBUG this => &__position
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#2012
  # DEBUG D#2011 => D#2012
  # DEBUG D#2010 => D#2011
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.113368 => D#2010
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.48674._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.48674._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#952 => &__x_copy
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG D#951 => D#952
  # DEBUG __value => D#951
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG D#699 => D#951
  # DEBUG __first => D#2438
  # DEBUG __last => __first_7
  # DEBUG __value => D#699
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#2438
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1255 => this_4(D)
  # DEBUG this => D#1255
  # DEBUG D#1254 => D#1255
  # DEBUG D#1253 => &D#1254->D.49421
  # DEBUG this => D#1253
  # DEBUG __a => D#1252
  # DEBUG D#1251 => D#1252
  # DEBUG D#1250 => D#1251
  # DEBUG this => D#1250
  _17 = MEM[(struct BufferState * * *)this_4(D)];
  # DEBUG D#122 => this_4(D)
  # DEBUG D#122 => this_4(D)
  # DEBUG this => D#122
  # DEBUG this => D#122
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#122 => this_4(D)
  # DEBUG D#122 => this_4(D)
  # DEBUG this => D#122
  # DEBUG this => D#122
  # DEBUG D#122 => this_4(D)
  # DEBUG D#122 => this_4(D)
  # DEBUG this => D#122
  # DEBUG this => D#122
  # DEBUG __a => &D.122703
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#122 => this_4(D)
  # DEBUG D#122 => this_4(D)
  # DEBUG this => D#122
  # DEBUG this => D#122
  # DEBUG D#1255 => this_4(D)
  # DEBUG this => D#1255
  # DEBUG D#1254 => D#1255
  # DEBUG D#1253 => &D#1254->D.49421
  # DEBUG this => D#1253
  # DEBUG __a => D#1252
  # DEBUG D#1251 => D#1252
  # DEBUG D#1250 => D#1251
  # DEBUG this => D#1250
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#399 => &this_4(D)->D.48674._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#399
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71320
  # DEBUG this => &__position
  # DEBUG this => &D.71320
  # DEBUG D#2033 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2033
  # DEBUG D#2032 => &this_4(D)->D.48674
  # DEBUG D#1249 => D#2032
  # DEBUG __n => NULL
  # DEBUG this => D#1263
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => &D#1262->_M_impl
  # DEBUG D#1260 => D#1261
  # DEBUG __n => NULL
  # DEBUG __a => D#1260
  # DEBUG D#1259 => D#1260
  # DEBUG D#1257 => D#1259
  # DEBUG D#1258 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1257
  # DEBUG D.122691 => D#1258
  # DEBUG D#1256 => D#1257
  # DEBUG D#1250 => D#1256
  # DEBUG this => D#1250
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.48674._M_impl._M_start;
  pretmp_147 = this_4(D)->D.48674._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.56_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2016 => &this_4(D)->D.48674
  # DEBUG this => D#2016
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.56_113 + _19;
  _56 = MEM[(struct Buffer * const &)__x_21(D)];
  # DEBUG D#1428 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1427 => D#1428
  # DEBUG __x => D#1427
  # DEBUG D.113523 => D#1429
  # DEBUG D#1426 => D#1427
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1425 => D#1426
  # DEBUG __x => D#1425
  # DEBUG __assignable => 1
  # DEBUG D#1424 => D#1425
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1423 => D#1424
  # DEBUG __x => D#1423
  # DEBUG D#1422 => D#1423
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1421 => D#1422
  # DEBUG __value => D#1421
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#1420 => D#1421
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#1420
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2017 => &this_4(D)->D.48674
  # DEBUG this => D#2017
  # DEBUG this => &__position
  # DEBUG D#2437 => this_4(D)->D.48674._M_impl._M_start
  # DEBUG __first => D#2437
  # DEBUG __last => D#2438
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2014
  # DEBUG D#2013 => D#2014
  # DEBUG D#2010 => D#2013
  # DEBUG __first => D#2437
  # DEBUG __last => D#2438
  # DEBUG __result => NULL
  # DEBUG D.113485 => D#2010
  # DEBUG __first => D#2437
  # DEBUG __last => D#2438
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#2437
  # DEBUG __last => D#2438
  # DEBUG __result => NULL
  # DEBUG __first => D#2437
  # DEBUG __last => D#2438
  # DEBUG __result => NULL
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG __it => D#2437
  # DEBUG __it => D#2437
  # DEBUG __first => D#2437
  # DEBUG __last => D#2438
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG __it => D#2437
  # DEBUG __it => D#2437
  # DEBUG __first => D#2437
  # DEBUG __last => D#2438
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#2437
  # DEBUG __last => D#2438
  # DEBUG __result => NULL
  # DEBUG D#2436 => (long int) D#2437
  # DEBUG D#2435 => _158 - D#2436
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.56_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#2434 => (long unsigned int) D#2435
  # DEBUG __new_finish => iftmp.56_113 + D#2434
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.56_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2018 => &this_4(D)->D.48674
  # DEBUG this => D#2018
  # DEBUG D#2433 => this_4(D)->D.48674._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#2438
  # DEBUG __last => D#2433
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2014
  # DEBUG D#2013 => D#2014
  # DEBUG D#2010 => D#2013
  # DEBUG __first => D#2438
  # DEBUG __last => D#2433
  # DEBUG __result => __new_finish_26
  # DEBUG D.113446 => D#2010
  # DEBUG __first => D#2438
  # DEBUG __last => D#2433
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#2438
  # DEBUG __last => D#2433
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#2438
  # DEBUG __last => D#2433
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#2433
  # DEBUG __it => D#2433
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG __first => D#2438
  # DEBUG __last => D#2433
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#2433
  # DEBUG __it => D#2433
  # DEBUG __it => D#2438
  # DEBUG __it => D#2438
  # DEBUG __first => D#2438
  # DEBUG __last => D#2433
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#2438
  # DEBUG __last => D#2433
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#2019 => &this_4(D)->D.48674
  # DEBUG this => D#2019
  # DEBUG D#2031 => this_4(D)->D.48674._M_impl._M_finish
  # DEBUG D#2030 => this_4(D)->D.48674._M_impl._M_start
  # DEBUG __first => D#2030
  # DEBUG __last => D#2031
  # DEBUG D.113439 => NULL
  # DEBUG D#360 => D#2030
  # DEBUG D#361 => D#2031
  # DEBUG __first => D#360
  # DEBUG __last => D#361
  # DEBUG D#359 => D#361
  # DEBUG D#358 => D#360
  # DEBUG D#356 => D#358
  # DEBUG D#357 => D#359
  # DEBUG D.94733 => D#356
  # DEBUG D.94732 => D#357
  # DEBUG D#2029 => this_4(D)->D.48674._M_impl._M_end_of_storage
  # DEBUG D#2028 => (long int) D#2029
  # DEBUG D#2027 => (long int) D#2437
  # DEBUG D#2026 => D#2028 - D#2027
  # DEBUG D#2025 => D#2026 /[ex] 8
  # DEBUG D#2024 => (long unsigned int) D#2025
  # DEBUG D#2023 => &this_4(D)->D.48674
  # DEBUG this => D#2023
  # DEBUG __p => D#2437
  # DEBUG __n => D#2024
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#582 => &D#2023->_M_impl
  # DEBUG D#580 => D#582
  # DEBUG D#581 => D#2024
  # DEBUG __p => D#2437
  # DEBUG __a => D#580
  # DEBUG __n => D#581
  # DEBUG D#579 => D#581
  # DEBUG D#578 => D#580
  # DEBUG D#576 => D#578
  # DEBUG D#577 => D#579
  # DEBUG __p => D#2437
  # DEBUG this => D#576
  # DEBUG D.113435 => D#577
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.48674._M_impl._M_start = iftmp.56_113;
  this_4(D)->D.48674._M_impl._M_finish = _70;
  this_4(D)->D.48674._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#399 => &this_4(D)->D.48674._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#399
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71320
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.71320
  _143 = _144 - _116;
  # DEBUG D#2033 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2033
  # DEBUG D#2032 => &this_4(D)->D.48674
  # DEBUG D#1249 => D#2032
  # DEBUG __n => NULL
  # DEBUG this => D#1263
  # DEBUG D#1262 => D#1263
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#399 => &this_4(D)->D.48674._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#399
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71320
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.71320
  _150 = _151 - _116;
  # DEBUG D#2033 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2033
  # DEBUG D#2032 => &this_4(D)->D.48674
  # DEBUG D#1249 => D#2032
  # DEBUG __n => NULL
  # DEBUG this => D#1263
  # DEBUG D#1262 => D#1263
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = BufferState*; _Alloc = std::allocator<BufferState*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<BufferState**, std::vector<BufferState*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = BufferState**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = BufferState*] (_ZNSt6vectorIP11BufferStateSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3185, decl_uid=49344, cgraph_uid=1630, symbol_order=1631)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = BufferState*; _Alloc = std::allocator<BufferState*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<BufferState**, std::vector<BufferState*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = BufferState**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = BufferState*] (struct vector * const this, struct iterator __position, size_type __n, struct BufferState * const & __x)
{
  const long unsigned int D.122833;
  const size_type __len;
  size_type D.122832;
  size_type __n;
  struct BufferState * * D.122823;
  const ptrdiff_t _Num;
  struct Credit * * D.122814;
  struct BufferState * * const __position;
  struct BufferState * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct BufferState * * __first;
  long unsigned int __n;
  struct BufferState * * __first;
  const ptrdiff_t _Num;
  struct BufferState * * __first;
  struct BufferState * * __new_finish;
  const size_type __elems_after;
  struct BufferState * __x_copy;
  struct BufferState * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct BufferState * * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct BufferState * * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct BufferState * * _41;
  struct BufferState * * _43;
  long int _47;
  struct BufferState * * _48;
  long int __first.51_49;
  struct BufferState * * _53;
  struct BufferState * const _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  struct BufferState * * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  struct Credit * * _108;
  struct BufferState * * _112;
  struct BufferState * * iftmp.56_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  struct BufferState * * prephitmp_146;
  struct BufferState * * pretmp_147;
  struct BufferState * * prephitmp_148;
  struct BufferState * * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  struct BufferState * * pretmp_166;
  struct BufferState * * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  struct BufferState * * pretmp_173;
  struct BufferState * * prephitmp_174;

  <bb 2>:
  # DEBUG D#2478 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#2478
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.49421._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.49421._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#215 => &this_4(D)->D.49421._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#215
  # DEBUG __lhs => &D.71350
  # DEBUG __rhs => &__position
  # DEBUG this => &D.71350
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2044 => &this_4(D)->D.49421
  # DEBUG this => D#2044
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2036
  # DEBUG D#2035 => D#2036
  # DEBUG D#2034 => D#2035
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.113908 => D#2034
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.51_49 = (long int) _41;
  _47 = _8 - __first.51_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.49421._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.49421._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#2478
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG __first => D#2478
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _104 = __first.51_49 - _27;
  _Num_105 = _104 /[ex] 8;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#954 => &__x_copy
  # DEBUG __first => D#2478
  # DEBUG __last => _48
  # DEBUG D#953 => D#954
  # DEBUG __value => D#953
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG D#700 => D#953
  # DEBUG __first => D#2478
  # DEBUG __last => _48
  # DEBUG __value => D#700
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#2478
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2045 => &this_4(D)->D.49421
  # DEBUG this => D#2045
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#1438 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1437 => D#1438
  # DEBUG __x => D#1437
  # DEBUG D.113993 => D#1439
  # DEBUG D#1436 => D#1437
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1435 => D#1436
  # DEBUG __x => D#1435
  # DEBUG __assignable => 1
  # DEBUG D#1434 => D#1435
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1433 => D#1434
  # DEBUG __x => D#1433
  # DEBUG D#1432 => D#1433
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1431 => D#1432
  # DEBUG __value => D#1431
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#1430 => D#1431
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#1430
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 8;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.49421._M_impl._M_finish = __first_125;
  # DEBUG D#2046 => &this_4(D)->D.49421
  # DEBUG this => D#2046
  # DEBUG this => &__position
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#2036
  # DEBUG D#2035 => D#2036
  # DEBUG D#2034 => D#2035
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.113955 => D#2034
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.49421._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.49421._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#954 => &__x_copy
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG D#953 => D#954
  # DEBUG __value => D#953
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG D#700 => D#953
  # DEBUG __first => D#2478
  # DEBUG __last => __first_7
  # DEBUG __value => D#700
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#2478
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1255 => this_4(D)
  # DEBUG this => D#1255
  # DEBUG D#1254 => D#1255
  # DEBUG D#1253 => &D#1254->D.49421
  # DEBUG this => D#1253
  # DEBUG __a => D#1252
  # DEBUG D#1251 => D#1252
  # DEBUG D#1250 => D#1251
  # DEBUG this => D#1250
  _17 = MEM[(struct BufferState * * *)this_4(D)];
  # DEBUG D#122 => this_4(D)
  # DEBUG D#122 => this_4(D)
  # DEBUG this => D#122
  # DEBUG this => D#122
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 8;
  _119 = (const long unsigned int) _118;
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#122 => this_4(D)
  # DEBUG D#122 => this_4(D)
  # DEBUG this => D#122
  # DEBUG this => D#122
  # DEBUG D#122 => this_4(D)
  # DEBUG D#122 => this_4(D)
  # DEBUG this => D#122
  # DEBUG this => D#122
  # DEBUG __a => &D.122833
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#122 => this_4(D)
  # DEBUG D#122 => this_4(D)
  # DEBUG this => D#122
  # DEBUG this => D#122
  # DEBUG D#1255 => this_4(D)
  # DEBUG this => D#1255
  # DEBUG D#1254 => D#1255
  # DEBUG D#1253 => &D#1254->D.49421
  # DEBUG this => D#1253
  # DEBUG __a => D#1252
  # DEBUG D#1251 => D#1252
  # DEBUG D#1250 => D#1251
  # DEBUG this => D#1250
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 8;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551608(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#400 => &this_4(D)->D.49421._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#400
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71383
  # DEBUG this => &__position
  # DEBUG this => &D.71383
  # DEBUG D#2057 => _157 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2057
  # DEBUG D#2056 => &this_4(D)->D.49421
  # DEBUG D#1263 => D#2056
  # DEBUG __n => NULL
  # DEBUG this => D#1263
  # DEBUG D#1262 => D#1263
  # DEBUG D#1261 => &D#1262->_M_impl
  # DEBUG D#1260 => D#1261
  # DEBUG __n => NULL
  # DEBUG __a => D#1260
  # DEBUG D#1259 => D#1260
  # DEBUG D#1257 => D#1259
  # DEBUG D#1258 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1257
  # DEBUG D.122821 => D#1258
  # DEBUG D#1256 => D#1257
  # DEBUG D#1250 => D#1256
  # DEBUG this => D#1250
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.49421._M_impl._M_start;
  pretmp_147 = this_4(D)->D.49421._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.56_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2040 => &this_4(D)->D.49421
  # DEBUG this => D#2040
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.56_113 + _19;
  _56 = MEM[(struct BufferState * const &)__x_21(D)];
  # DEBUG D#1438 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1437 => D#1438
  # DEBUG __x => D#1437
  # DEBUG D.114110 => D#1439
  # DEBUG D#1436 => D#1437
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1435 => D#1436
  # DEBUG __x => D#1435
  # DEBUG __assignable => 1
  # DEBUG D#1434 => D#1435
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1433 => D#1434
  # DEBUG __x => D#1433
  # DEBUG D#1432 => D#1433
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1431 => D#1432
  # DEBUG __value => D#1431
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#1430 => D#1431
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#1430
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2041 => &this_4(D)->D.49421
  # DEBUG this => D#2041
  # DEBUG this => &__position
  # DEBUG D#2477 => this_4(D)->D.49421._M_impl._M_start
  # DEBUG __first => D#2477
  # DEBUG __last => D#2478
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2038
  # DEBUG D#2037 => D#2038
  # DEBUG D#2034 => D#2037
  # DEBUG __first => D#2477
  # DEBUG __last => D#2478
  # DEBUG __result => NULL
  # DEBUG D.114072 => D#2034
  # DEBUG __first => D#2477
  # DEBUG __last => D#2478
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#2477
  # DEBUG __last => D#2478
  # DEBUG __result => NULL
  # DEBUG __first => D#2477
  # DEBUG __last => D#2478
  # DEBUG __result => NULL
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG __it => D#2477
  # DEBUG __it => D#2477
  # DEBUG __first => D#2477
  # DEBUG __last => D#2478
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG __it => D#2477
  # DEBUG __it => D#2477
  # DEBUG __first => D#2477
  # DEBUG __last => D#2478
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#2477
  # DEBUG __last => D#2478
  # DEBUG __result => NULL
  # DEBUG D#2476 => (long int) D#2477
  # DEBUG D#2475 => _158 - D#2476
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.56_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#2474 => (long unsigned int) D#2475
  # DEBUG __new_finish => iftmp.56_113 + D#2474
  _25 = __n_2(D) * 8;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.56_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2042 => &this_4(D)->D.49421
  # DEBUG this => D#2042
  # DEBUG D#2473 => this_4(D)->D.49421._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#2478
  # DEBUG __last => D#2473
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2038
  # DEBUG D#2037 => D#2038
  # DEBUG D#2034 => D#2037
  # DEBUG __first => D#2478
  # DEBUG __last => D#2473
  # DEBUG __result => __new_finish_26
  # DEBUG D.114033 => D#2034
  # DEBUG __first => D#2478
  # DEBUG __last => D#2473
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#2478
  # DEBUG __last => D#2473
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#2478
  # DEBUG __last => D#2473
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#2473
  # DEBUG __it => D#2473
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG __first => D#2478
  # DEBUG __last => D#2473
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#2473
  # DEBUG __it => D#2473
  # DEBUG __it => D#2478
  # DEBUG __it => D#2478
  # DEBUG __first => D#2478
  # DEBUG __last => D#2473
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#2478
  # DEBUG __last => D#2473
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#2043 => &this_4(D)->D.49421
  # DEBUG this => D#2043
  # DEBUG D#2055 => this_4(D)->D.49421._M_impl._M_finish
  # DEBUG D#2054 => this_4(D)->D.49421._M_impl._M_start
  # DEBUG __first => D#2054
  # DEBUG __last => D#2055
  # DEBUG D.114026 => NULL
  # DEBUG D#370 => D#2054
  # DEBUG D#371 => D#2055
  # DEBUG __first => D#370
  # DEBUG __last => D#371
  # DEBUG D#369 => D#371
  # DEBUG D#368 => D#370
  # DEBUG D#366 => D#368
  # DEBUG D#367 => D#369
  # DEBUG D.94777 => D#366
  # DEBUG D.94776 => D#367
  # DEBUG D#2053 => this_4(D)->D.49421._M_impl._M_end_of_storage
  # DEBUG D#2052 => (long int) D#2053
  # DEBUG D#2051 => (long int) D#2477
  # DEBUG D#2050 => D#2052 - D#2051
  # DEBUG D#2049 => D#2050 /[ex] 8
  # DEBUG D#2048 => (long unsigned int) D#2049
  # DEBUG D#2047 => &this_4(D)->D.49421
  # DEBUG this => D#2047
  # DEBUG __p => D#2477
  # DEBUG __n => D#2048
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#602 => &D#2047->_M_impl
  # DEBUG D#600 => D#602
  # DEBUG D#601 => D#2048
  # DEBUG __p => D#2477
  # DEBUG __a => D#600
  # DEBUG __n => D#601
  # DEBUG D#599 => D#601
  # DEBUG D#598 => D#600
  # DEBUG D#596 => D#598
  # DEBUG D#597 => D#599
  # DEBUG __p => D#2477
  # DEBUG this => D#596
  # DEBUG D.114022 => D#597
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.49421._M_impl._M_start = iftmp.56_113;
  this_4(D)->D.49421._M_impl._M_finish = _70;
  this_4(D)->D.49421._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#400 => &this_4(D)->D.49421._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#400
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71383
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.71383
  _143 = _144 - _116;
  # DEBUG D#2057 => _143 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2057
  # DEBUG D#2056 => &this_4(D)->D.49421
  # DEBUG D#1263 => D#2056
  # DEBUG __n => NULL
  # DEBUG this => D#1263
  # DEBUG D#1262 => D#1263
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#400 => &this_4(D)->D.49421._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#400
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71383
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.71383
  _150 = _151 - _116;
  # DEBUG D#2057 => _150 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2057
  # DEBUG D#2056 => &this_4(D)->D.49421
  # DEBUG D#1263 => D#2056
  # DEBUG __n => NULL
  # DEBUG this => D#1263
  # DEBUG D#1262 => D#1263
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=3189, decl_uid=35356, cgraph_uid=1634, symbol_order=1635)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.122960;
  const size_type __len;
  size_type D.122959;
  size_type __n;
  int * D.122950;
  const ptrdiff_t _Num;
  int * D.122941;
  int * const __position;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  int * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  int * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  int * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  int * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  int * _41;
  int * _43;
  long int _47;
  int * _48;
  long int __first.85_49;
  int * _53;
  const int _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  int * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  int * _108;
  int * _112;
  int * iftmp.80_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  int * prephitmp_146;
  int * pretmp_147;
  int * prephitmp_148;
  int * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  int * pretmp_166;
  int * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  int * pretmp_173;
  int * prephitmp_174;

  <bb 2>:
  # DEBUG D#2518 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#2518
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.35433._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.35433._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#216 => &this_4(D)->D.35433._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG __lhs => &D.71397
  # DEBUG __rhs => &__position
  # DEBUG this => &D.71397
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 4;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#1520 => &this_4(D)->D.35433
  # DEBUG this => D#1520
  _39 = __n_2(D) * 4;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#1512
  # DEBUG D#1511 => D#1512
  # DEBUG D#1510 => D#1511
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.105701 => D#1510
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.85_49 = (long int) _41;
  _47 = _8 - __first.85_49;
  _Num_45 = _47 /[ex] 4;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.35433._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.35433._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#2518
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG __first => D#2518
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG __first => D#2518
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#2518
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.85_49 - _27;
  _Num_105 = _104 /[ex] 4;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#956 => &__x_copy
  # DEBUG __first => D#2518
  # DEBUG __last => _48
  # DEBUG D#955 => D#956
  # DEBUG __value => D#955
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG D#701 => D#955
  # DEBUG __first => D#2518
  # DEBUG __last => _48
  # DEBUG __value => D#701
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#2518
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 4;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#1521 => &this_4(D)->D.35433
  # DEBUG this => D#1521
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#1402 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.105786 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#1394 => D#1395
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#1394
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 4;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 4;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.35433._M_impl._M_finish = __first_125;
  # DEBUG D#1522 => &this_4(D)->D.35433
  # DEBUG this => D#1522
  # DEBUG this => &__position
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#1512
  # DEBUG D#1511 => D#1512
  # DEBUG D#1510 => D#1511
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.105748 => D#1510
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.35433._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.35433._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#956 => &__x_copy
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG D#955 => D#956
  # DEBUG __value => D#955
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG D#701 => D#955
  # DEBUG __first => D#2518
  # DEBUG __last => __first_7
  # DEBUG __value => D#701
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#2518
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 4;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#972 => this_4(D)
  # DEBUG this => D#972
  # DEBUG D#971 => D#972
  # DEBUG D#970 => &D#971->D.35433
  # DEBUG this => D#970
  # DEBUG __a => D#969
  # DEBUG D#968 => D#969
  # DEBUG D#957 => D#968
  # DEBUG this => D#957
  _17 = MEM[(int * *)this_4(D)];
  # DEBUG D#123 => this_4(D)
  # DEBUG D#123 => this_4(D)
  # DEBUG this => D#123
  # DEBUG this => D#123
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 4;
  _119 = (const long unsigned int) _118;
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#123 => this_4(D)
  # DEBUG D#123 => this_4(D)
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#123 => this_4(D)
  # DEBUG D#123 => this_4(D)
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG __a => &D.122960
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#123 => this_4(D)
  # DEBUG D#123 => this_4(D)
  # DEBUG this => D#123
  # DEBUG this => D#123
  # DEBUG D#972 => this_4(D)
  # DEBUG this => D#972
  # DEBUG D#971 => D#972
  # DEBUG D#970 => &D#971->D.35433
  # DEBUG this => D#970
  # DEBUG __a => D#969
  # DEBUG D#968 => D#969
  # DEBUG D#957 => D#968
  # DEBUG this => D#957
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 4;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551612(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#401 => &this_4(D)->D.35433._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#401
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71420
  # DEBUG this => &__position
  # DEBUG this => &D.71420
  # DEBUG D#1533 => _157 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1533
  # DEBUG D#1532 => &this_4(D)->D.35433
  # DEBUG D#965 => D#1532
  # DEBUG __n => NULL
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => NULL
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#959
  # DEBUG D.122948 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.35433._M_impl._M_start;
  pretmp_147 = this_4(D)->D.35433._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.80_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1516 => &this_4(D)->D.35433
  # DEBUG this => D#1516
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.80_113 + _19;
  _56 = MEM[(const int &)__x_21(D)];
  # DEBUG D#1402 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.105903 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#1394 => D#1395
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#1394
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 4;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1517 => &this_4(D)->D.35433
  # DEBUG this => D#1517
  # DEBUG this => &__position
  # DEBUG D#2517 => this_4(D)->D.35433._M_impl._M_start
  # DEBUG __first => D#2517
  # DEBUG __last => D#2518
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1514
  # DEBUG D#1513 => D#1514
  # DEBUG D#1510 => D#1513
  # DEBUG __first => D#2517
  # DEBUG __last => D#2518
  # DEBUG __result => NULL
  # DEBUG D.105865 => D#1510
  # DEBUG __first => D#2517
  # DEBUG __last => D#2518
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#2517
  # DEBUG __last => D#2518
  # DEBUG __result => NULL
  # DEBUG __first => D#2517
  # DEBUG __last => D#2518
  # DEBUG __result => NULL
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG __it => D#2517
  # DEBUG __it => D#2517
  # DEBUG __first => D#2517
  # DEBUG __last => D#2518
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG __it => D#2517
  # DEBUG __it => D#2517
  # DEBUG __first => D#2517
  # DEBUG __last => D#2518
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#2517
  # DEBUG __last => D#2518
  # DEBUG __result => NULL
  # DEBUG D#2516 => (long int) D#2517
  # DEBUG D#2515 => _158 - D#2516
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.80_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#2514 => (long unsigned int) D#2515
  # DEBUG __new_finish => iftmp.80_113 + D#2514
  _25 = __n_2(D) * 4;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.80_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#1518 => &this_4(D)->D.35433
  # DEBUG this => D#1518
  # DEBUG D#2513 => this_4(D)->D.35433._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#2518
  # DEBUG __last => D#2513
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#1514
  # DEBUG D#1513 => D#1514
  # DEBUG D#1510 => D#1513
  # DEBUG __first => D#2518
  # DEBUG __last => D#2513
  # DEBUG __result => __new_finish_26
  # DEBUG D.105826 => D#1510
  # DEBUG __first => D#2518
  # DEBUG __last => D#2513
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#2518
  # DEBUG __last => D#2513
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#2518
  # DEBUG __last => D#2513
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#2513
  # DEBUG __it => D#2513
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG __first => D#2518
  # DEBUG __last => D#2513
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#2513
  # DEBUG __it => D#2513
  # DEBUG __it => D#2518
  # DEBUG __it => D#2518
  # DEBUG __first => D#2518
  # DEBUG __last => D#2513
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#2518
  # DEBUG __last => D#2513
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 4;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#1519 => &this_4(D)->D.35433
  # DEBUG this => D#1519
  # DEBUG D#1531 => this_4(D)->D.35433._M_impl._M_finish
  # DEBUG D#1530 => this_4(D)->D.35433._M_impl._M_start
  # DEBUG __first => D#1530
  # DEBUG __last => D#1531
  # DEBUG D.105819 => NULL
  # DEBUG D#380 => D#1530
  # DEBUG D#381 => D#1531
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#1529 => this_4(D)->D.35433._M_impl._M_end_of_storage
  # DEBUG D#1528 => (long int) D#1529
  # DEBUG D#1527 => (long int) D#2517
  # DEBUG D#1526 => D#1528 - D#1527
  # DEBUG D#1525 => D#1526 /[ex] 4
  # DEBUG D#1524 => (long unsigned int) D#1525
  # DEBUG D#1523 => &this_4(D)->D.35433
  # DEBUG this => D#1523
  # DEBUG __p => D#2517
  # DEBUG __n => D#1524
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#620 => &D#1523->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#1524
  # DEBUG __p => D#2517
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => D#2517
  # DEBUG this => D#614
  # DEBUG D.105815 => D#615
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.35433._M_impl._M_start = iftmp.80_113;
  this_4(D)->D.35433._M_impl._M_finish = _70;
  this_4(D)->D.35433._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#401 => &this_4(D)->D.35433._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#401
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71420
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.71420
  _143 = _144 - _116;
  # DEBUG D#1533 => _143 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1533
  # DEBUG D#1532 => &this_4(D)->D.35433
  # DEBUG D#965 => D#1532
  # DEBUG __n => NULL
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#401 => &this_4(D)->D.35433._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#401
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71420
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.71420
  _150 = _151 - _116;
  # DEBUG D#1533 => _150 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#1533
  # DEBUG D#1532 => &this_4(D)->D.35433
  # DEBUG D#965 => D#1532
  # DEBUG __n => NULL
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::size_t = long unsigned int] (_ZNSt11_Deque_baseIP4FlitSaIS1_EE17_M_initialize_mapEm, funcdef_no=3209, decl_uid=54371, cgraph_uid=1654, symbol_order=1655)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::size_t = long unsigned int] (struct _Deque_base * const this, size_t __num_elements)
{
  struct Credit * * * __nstart;
  struct Flit * * * __nfinish;
  struct Flit * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.71519;
  const long unsigned int D.71520;
  long unsigned int _3;
  struct Flit * * * _8;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _20;
  struct Flit * * * _23;
  struct Flit * * _24;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  struct Flit * * _29;
  void * _31;
  struct Flit * * * _33;
  struct Flit * * _40;
  struct Flit * * _41;
  struct Flit * * _42;
  struct Credit * * _52;
  void * _54;
  struct Credit * * _56;
  long unsigned int _65;

  <bb 2>:
  # DEBUG __size => 8
  _3 = __num_elements_2(D) >> 6;
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodes => __num_nodes_4
  _5 = _3 + 3;
  # DEBUG __a => &D.71519
  # DEBUG __b => &D.71520
  _65 = MAX_EXPR <_5, 8>;
  this_10(D)->_M_impl._M_map_size = _65;
  # DEBUG D#1286 => this_10(D)
  # DEBUG __n => D#2581
  # DEBUG this => D#1286
  # DEBUG D#1285 => D#1286
  # DEBUG D#994 => D#1285
  # DEBUG this => D#994
  # DEBUG D#993 => D#994
  # DEBUG this => D#993
  # DEBUG this => NULL
  # DEBUG D.99274 => NULL
  # DEBUG this => NULL
  # DEBUG D#1284 => &__map_alloc
  # DEBUG __n => D#2581
  # DEBUG __a => D#1284
  # DEBUG D#1283 => D#1284
  # DEBUG D#1281 => D#1283
  # DEBUG D#1282 => 0B
  # DEBUG __n => D#2581
  # DEBUG this => D#1281
  # DEBUG D.102582 => D#1282
  # DEBUG D#1280 => D#1281
  # DEBUG D#1279 => D#1280
  # DEBUG this => D#1279
  _26 = _65 * 8;
  _8 = operator new (_26);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = _8;
  _15 = this_10(D)->_M_impl._M_map_size;
  _16 = _15 - __num_nodes_4;
  _17 = _16 >> 1;
  _18 = _17 * 8;
  __nstart_19 = _8 + _18;
  # DEBUG __nstart => __nstart_19
  _20 = __num_nodes_4 * 8;
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinish => __nfinish_21
  # DEBUG D#1365 => this_10(D)
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nfinish_21
  # DEBUG this => D#1386
  # DEBUG __cur => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 13>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __cur => __nstart_75
  # DEBUG D#1381 => D#1382
  # DEBUG this => D#1381
  # DEBUG D#1380 => D#1381
  # DEBUG __size => 8
  # DEBUG D#1379 => &D#1380->_M_impl
  # DEBUG D#1378 => D#1379
  # DEBUG __n => NULL
  # DEBUG __a => D#1378
  # DEBUG D#1377 => D#1378
  # DEBUG D#1375 => D#1377
  # DEBUG D#1376 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1375
  # DEBUG D.123072 => D#1376
  # DEBUG D#1374 => D#1375
  # DEBUG D#1373 => D#1374
  # DEBUG this => D#1373
  _52 = operator new (512);

  <bb 5>:
  MEM[(struct Credit * * *)__nstart_75] = _52;
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __cur => __nstart_53
  # DEBUG __cur => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 13>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  # __nstart_13 = PHI <__nstart_75(4)>
<L3>:
  _54 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_54);
  # DEBUG this => D#1383
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nstart_13
  # DEBUG __n => __nstart_19
  # DEBUG __n => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __cxa_rethrow ();

  <bb 9>:

  <bb 10>:
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(11)>
  # DEBUG __n => __nstart_72
  _56 = MEM[(struct Credit * * *)__nstart_72];
  # DEBUG this => D#1384
  # DEBUG __p => _56
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#1385->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _56
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _56
  # DEBUG this => D#1017
  # DEBUG D.123065 => D#1018
  operator delete (_56);
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __n => __nstart_57
  # DEBUG __n => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

<L5>:
  __cxa_end_catch ();
  resx 7

  <bb 13>:
  # DEBUG D#1368 => &this_10(D)->_M_impl._M_start
  # DEBUG this => D#1368
  # DEBUG __new_node => __nstart_19
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
  _24 = *__nstart_19;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
  # DEBUG __size => 8
  _42 = _24 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#1367 => &this_10(D)->_M_impl._M_finish
  # DEBUG this => D#1367
  # DEBUG __new_node => _23
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
  _40 = MEM[(struct Flit * * *)__nfinish_21 + -8B];
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
  # DEBUG __size => 8
  _41 = _40 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
  this_10(D)->_M_impl._M_start._M_cur = _24;
  # DEBUG __size => 8
  _27 = __num_elements_2(D) & 63;
  _28 = _27 * 8;
  _29 = _40 + _28;
  this_10(D)->_M_impl._M_finish._M_cur = _29;
  return;

<L0>:
  _31 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_31);
  # DEBUG D#1366 => this_10(D)->_M_impl._M_map_size
  _33 = this_10(D)->_M_impl._M_map;
  # DEBUG D#997 => this_10(D)
  # DEBUG D#998 => D#1366
  # DEBUG __p => _33
  # DEBUG this => D#997
  # DEBUG __n => D#998
  # DEBUG D#996 => D#998
  # DEBUG D#995 => D#997
  # DEBUG D#994 => D#995
  # DEBUG this => D#994
  # DEBUG D#993 => D#994
  # DEBUG this => D#993
  # DEBUG this => NULL
  # DEBUG D.99274 => NULL
  # DEBUG this => NULL
  # DEBUG D#709 => &__map_alloc
  # DEBUG D#710 => D#996
  # DEBUG __p => _33
  # DEBUG __a => D#709
  # DEBUG __n => D#710
  # DEBUG D#708 => D#710
  # DEBUG D#707 => D#709
  # DEBUG D#705 => D#707
  # DEBUG D#706 => D#708
  # DEBUG __p => _33
  # DEBUG this => D#705
  # DEBUG D.102604 => D#706
  operator delete (_33);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = 0B;
  this_10(D)->_M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt5dequeIP4FlitSaIS1_EEC2ERKS3_, funcdef_no=2448, decl_uid=54904, cgraph_uid=893, symbol_order=894)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct deque * const this, const struct deque & __x)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3769;
  struct Flit * * SR.3768;
  struct Flit * * SR.3767;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.123193;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.123168;
  struct _Deque_iterator D.123167;
  struct _Deque_iterator D.123166;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.123148;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.123134;
  struct _Deque_iterator D.123133;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.80096;
  struct _Deque_iterator D.80095;
  struct _Deque_iterator D.67707;
  struct _Deque_base * _7;
  struct Flit * * _9;
  struct Flit * * _10;
  struct Flit * * _13;
  struct Flit * * * _15;
  struct Flit * * _17;
  struct Flit * * * _18;
  struct Flit * * * _19;
  long int _20;
  struct Flit * * * _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  struct Flit * * _27;
  long int _28;
  struct Flit * * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  struct Flit * * _34;
  long int _35;
  struct Flit * * _36;
  long int _37;
  long int _38;
  long int _39;
  difference_type _40;
  size_type _41;
  long int _97;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _105;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _112;
  long int _114;
  long int _115;
  long int _116;
  struct Flit * _121;
  struct Flit * * _126;
  struct Flit * * * _138;
  struct Flit * * _139;
  struct Flit * * _140;

  <bb 2>:
  # DEBUG this => __x_2(D)
  # DEBUG D#201 => &__x_2(D)->D.54933._M_impl._M_start
  # DEBUG D#202 => &__x_2(D)->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _19 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _20 = (long int) _19;
  _21 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _22 = (long int) _21;
  _23 = _20 - _22;
  _24 = _23 /[ex] 8;
  _25 = _24 + -1;
  _26 = _25 * 64;
  _27 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _28 = (long int) _27;
  _29 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _30 = (long int) _29;
  _31 = _28 - _30;
  _32 = _31 /[ex] 8;
  _33 = _26 + _32;
  _34 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _35 = (long int) _34;
  _36 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _37 = (long int) _36;
  _38 = _35 - _37;
  _39 = _38 /[ex] 8;
  _40 = _33 + _39;
  _41 = (size_type) _40;
  # DEBUG D#1535 => &__x_2(D)->D.54933
  # DEBUG this => D#1535
  # DEBUG __a => NULL
  _7 = &this_6(D)->D.54933;
  # DEBUG this => _7
  # DEBUG __a => NULL
  # DEBUG __num_elements => _41
  # DEBUG D#1372 => &_7->_M_impl
  # DEBUG this => D#1372
  # DEBUG __a => NULL
  # DEBUG this => D#1372
  # DEBUG __a => NULL
  # DEBUG this => D#1372
  # DEBUG D.96699 => NULL
  MEM[(struct _Deque_impl *)this_6(D)]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_6(D)]._M_map_size = 0;
  # DEBUG D#712 => &D#1372->_M_start
  # DEBUG this => D#712
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_node = 0B;
  # DEBUG D#711 => &D#1372->_M_finish
  # DEBUG this => D#711
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_7, _41);
  # DEBUG D#1536 => &this_6(D)->D.54933
  # DEBUG this => D#1536
  # DEBUG D#1537 => &this_6(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.67707
  # DEBUG __x => D#1537
  _9 = MEM[(const struct iterator &)this_6(D) + 16]._M_cur;
  _17 = MEM[(const struct iterator &)this_6(D) + 16]._M_last;
  _18 = MEM[(const struct iterator &)this_6(D) + 16]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#179 => &__x_2(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.80095
  # DEBUG __x => D#179
  _10 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#2582 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _15 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#180 => &__x_2(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.80096
  # DEBUG __x => D#180
  __first$_M_cur_8 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  # DEBUG D#2583 => MEM[(const struct iterator &)__x_2(D) + 16]._M_first
  __first$_M_last_4 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  __first$_M_node_3 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  # DEBUG __result => &D.67707
  # DEBUG D.123130 => D#1534
  # DEBUG this => &D.123134
  # DEBUG __x => &D.67707
  # DEBUG __result => &D.123134
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.123134
  # DEBUG __result => NULL
  # DEBUG this => &D.123148
  # DEBUG __x => NULL
  # DEBUG __result => &D.123148
  # DEBUG this => &D.123168
  # DEBUG __x => &D.123148
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#2582
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#2582
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#2583
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#2583
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __result => &D.123168
  # DEBUG this => NULL
  # DEBUG __x => &D.123168
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#2582
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#2582
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#2583
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#2583
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __first => __first$_M_cur_8
  # DEBUG __first$8 => D#2583
  # DEBUG __first$16 => __first$_M_last_4
  # DEBUG __first$24 => __first$_M_node_3
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.123193
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_8
  # DEBUG __first$_M_first => D#2583
  # DEBUG __first$_M_last => __first$_M_last_4
  # DEBUG __first$_M_node => __first$_M_node_3
  # DEBUG __result => &D.123193
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _97 = (long int) _15;
  _99 = (long int) __first$_M_node_3;
  _100 = _97 - _99;
  _101 = _100 /[ex] 8;
  _102 = _101 + -1;
  _103 = _102 * 64;
  _105 = (long int) _10;
  _107 = (long int) _13;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _103 + _109;
  _112 = (long int) __first$_M_last_4;
  _114 = (long int) __first$_M_cur_8;
  _115 = _112 - _114;
  _116 = _115 /[ex] 8;
  __n_117 = _110 + _116;
  # DEBUG __n => __n_117
  # DEBUG __n => __n_117
  if (__n_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => &D.123133
  # DEBUG __x => &D.123193
  D.123193 ={v} {CLOBBER};
  D.123168 ={v} {CLOBBER};
  D.123148 ={v} {CLOBBER};
  D.123134 ={v} {CLOBBER};
  D.67707 ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __n_54 = PHI <__n_117(4), __n_128(10)>
  # SR.3767_198 = PHI <_9(4), SR.3767_197(10)>
  # SR.3768_195 = PHI <_17(4), SR.3768_194(10)>
  # SR.3769_193 = PHI <_18(4), SR.3769_192(10)>
  # __first$_M_cur_190 = PHI <__first$_M_cur_8(4), __first$_M_cur_189(10)>
  # __first$_M_last_186 = PHI <__first$_M_last_4(4), __first$_M_last_185(10)>
  # __first$_M_node_184 = PHI <__first$_M_node_3(4), __first$_M_node_182(10)>
  # DEBUG __first$_M_node => __first$_M_node_184
  # DEBUG __first$_M_last => __first$_M_last_186
  # DEBUG __first$_M_cur => __first$_M_cur_190
  # DEBUG __n => __n_54
  # DEBUG D#308 => &D.123193
  # DEBUG this => D#308
  # DEBUG D#98 => &__first
  # DEBUG this => D#98
  _121 = MEM[(struct Flit * const &)__first$_M_cur_190];
  *SR.3767_198 = _121;
  # DEBUG this => &__first
  __first$_M_cur_123 = __first$_M_cur_190 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_123
  if (__first$_M_cur_123 == __first$_M_last_186)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => &__first
  __first$_M_node_134 = __first$_M_node_184 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_134
  # DEBUG __first$_M_node => __first$_M_node_134
  __first$_M_cur_135 = MEM[(struct Flit * * *)__first$_M_node_184 + 8B];
  # DEBUG __size => 8
  __first$_M_last_136 = __first$_M_cur_135 + 512;
  # DEBUG __first$_M_last => __first$_M_last_136
  # DEBUG __first$_M_cur => __first$_M_cur_135

  <bb 7>:
  # __first$_M_cur_189 = PHI <__first$_M_cur_123(5), __first$_M_cur_135(6)>
  # __first$_M_last_185 = PHI <__first$_M_last_186(5), __first$_M_last_136(6)>
  # __first$_M_node_182 = PHI <__first$_M_node_184(5), __first$_M_node_134(6)>
  # DEBUG __first$_M_node => __first$_M_node_182
  # DEBUG __first$_M_last => __first$_M_last_185
  # DEBUG __first$_M_cur => __first$_M_cur_189
  # DEBUG this => &D.123193
  _126 = SR.3767_198 + 8;
  if (_126 == SR.3768_195)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &D.123193
  _138 = SR.3769_193 + 8;
  # DEBUG this => &D.123193
  # DEBUG __new_node => _138
  _139 = MEM[(struct Flit * * *)SR.3769_193 + 8B];
  # DEBUG __size => 8
  _140 = _139 + 512;

  <bb 9>:
  # SR.3767_197 = PHI <_126(7), _139(8)>
  # SR.3768_194 = PHI <SR.3768_195(7), _140(8)>
  # SR.3769_192 = PHI <SR.3769_193(7), _138(8)>
  __n_128 = __n_54 + -1;
  # DEBUG __n => __n_128
  # DEBUG __n => __n_128
  if (__n_128 <= 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 5>;

}



;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>] (_ZSt18uninitialized_copyISt15_Deque_iteratorIP4FlitRKS2_PS3_ES0_IS2_RS2_PS2_EET0_T_SB_SA_, funcdef_no=3216, decl_uid=69412, cgraph_uid=1661, symbol_order=1662)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3802;
  struct Flit * * SR.3801;
  struct Flit * * SR.3800;
  struct Flit * * SR.3799;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __last$24;
  struct Flit * * __last$8;
  struct Flit * * __last;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.123299;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.123274;
  struct _Deque_iterator D.123273;
  struct _Deque_iterator D.123272;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.106105;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Flit * * _4;
  struct Flit * * _5;
  struct Flit * * _6;
  struct Flit * * * _7;
  long int _40;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _48;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _55;
  long int _57;
  long int _58;
  long int _59;
  struct Flit * _64;
  struct Flit * * _69;
  struct Flit * * * _81;
  struct Flit * * _82;
  struct Flit * * _83;

  <bb 2>:
  # DEBUG __assignable => 1
  # DEBUG this => &D.71777
  # DEBUG __x => __result_2(D)
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _7 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  __first$_M_cur_88 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG D#2586 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first$_M_first => D#2586
  __first$_M_last_84 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_84
  __first$_M_node_61 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_61
  __last_11 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last$_M_cur => __last_11
  __last$8_10 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last$_M_first => __last$8_10
  # DEBUG D#2585 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last$_M_last => D#2585
  __last$24_91 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last$_M_node => __last$24_91
  # DEBUG __result => &D.71777
  # DEBUG this => &D.106105
  # DEBUG __x => &D.71777
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#2586
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __last => __last_11
  # DEBUG __last$8 => __last$8_10
  # DEBUG __last$_M_last => D#2585
  # DEBUG __last$24 => __last$24_91
  # DEBUG __result => &D.106105
  # DEBUG this => &D.123274
  # DEBUG __x => &D.106105
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG D#2584 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#2584
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#2584
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#2586
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#2586
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __result => &D.123274
  # DEBUG this => NULL
  # DEBUG __x => &D.123274
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG __it$16 => D#2584
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#2584
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#2586
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#2586
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#2586
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.123299
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG __first$_M_first => D#2586
  # DEBUG __first$_M_last => __first$_M_last_84
  # DEBUG __first$_M_node => __first$_M_node_61
  # DEBUG __result => &D.123299
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _40 = (long int) __last$24_91;
  _42 = (long int) __first$_M_node_61;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _44 + -1;
  _46 = _45 * 64;
  _48 = (long int) __last_11;
  _50 = (long int) __last$8_10;
  _51 = _48 - _50;
  _52 = _51 /[ex] 8;
  _53 = _46 + _52;
  _55 = (long int) __first$_M_last_84;
  _57 = (long int) __first$_M_cur_88;
  _58 = _55 - _57;
  _59 = _58 /[ex] 8;
  __n_60 = _53 + _59;
  # DEBUG __n => __n_60
  # DEBUG __n => __n_60
  if (__n_60 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_12 = PHI <__n_60(3), __n_71(9)>
  # SR.3799_127 = PHI <_4(3), SR.3799_126(9)>
  # SR.3800_124 = PHI <_5(3), SR.3800_123(9)>
  # SR.3801_121 = PHI <_6(3), SR.3801_119(9)>
  # SR.3802_115 = PHI <_7(3), SR.3802_114(9)>
  # __first$_M_cur_112 = PHI <__first$_M_cur_88(3), __first$_M_cur_111(9)>
  # __first$_M_last_106 = PHI <__first$_M_last_84(3), __first$_M_last_105(9)>
  # __first$_M_node_104 = PHI <__first$_M_node_61(3), __first$_M_node_103(9)>
  # DEBUG __first$_M_node => __first$_M_node_104
  # DEBUG __first$_M_last => __first$_M_last_106
  # DEBUG __first$_M_cur => __first$_M_cur_112
  # DEBUG __n => __n_12
  # DEBUG D#308 => &D.123299
  # DEBUG this => D#308
  # DEBUG D#98 => &__first
  # DEBUG this => D#98
  _64 = MEM[(struct Flit * const &)__first$_M_cur_112];
  *SR.3799_127 = _64;
  # DEBUG this => &__first
  __first$_M_cur_66 = __first$_M_cur_112 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_66
  if (__first$_M_cur_66 == __first$_M_last_106)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &__first
  __first$_M_node_77 = __first$_M_node_104 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_77
  # DEBUG __first$_M_node => __first$_M_node_77
  __first$_M_cur_78 = MEM[(struct Flit * * *)__first$_M_node_104 + 8B];
  # DEBUG __size => 8
  __first$_M_last_79 = __first$_M_cur_78 + 512;
  # DEBUG __first$_M_last => __first$_M_last_79
  # DEBUG __first$_M_cur => __first$_M_cur_78

  <bb 6>:
  # __first$_M_cur_111 = PHI <__first$_M_cur_66(4), __first$_M_cur_78(5)>
  # __first$_M_last_105 = PHI <__first$_M_last_106(4), __first$_M_last_79(5)>
  # __first$_M_node_103 = PHI <__first$_M_node_104(4), __first$_M_node_77(5)>
  # DEBUG __first$_M_node => __first$_M_node_103
  # DEBUG __first$_M_last => __first$_M_last_105
  # DEBUG __first$_M_cur => __first$_M_cur_111
  # DEBUG this => &D.123299
  _69 = SR.3799_127 + 8;
  if (_69 == SR.3801_121)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.123299
  _81 = SR.3802_115 + 8;
  # DEBUG this => &D.123299
  # DEBUG __new_node => _81
  _82 = MEM[(struct Flit * * *)SR.3802_115 + 8B];
  # DEBUG __size => 8
  _83 = _82 + 512;

  <bb 8>:
  # SR.3799_126 = PHI <_69(6), _82(7)>
  # SR.3800_123 = PHI <SR.3800_124(6), _82(7)>
  # SR.3801_119 = PHI <SR.3801_121(6), _83(7)>
  # SR.3802_114 = PHI <SR.3802_115(6), _81(7)>
  __n_71 = __n_12 + -1;
  # DEBUG __n => __n_71
  # DEBUG __n => __n_71
  if (__n_71 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.3802_8 = PHI <SR.3802_114(8)>
  # SR.3801_87 = PHI <SR.3801_119(8)>
  # SR.3800_9 = PHI <SR.3800_123(8)>
  # SR.3799_90 = PHI <SR.3799_126(8)>

  <bb 12>:

  <bb 11>:
  # SR.3799_125 = PHI <SR.3799_90(12), _4(2)>
  # SR.3800_122 = PHI <SR.3800_9(12), _5(2)>
  # SR.3801_118 = PHI <SR.3801_87(12), _6(2)>
  # SR.3802_113 = PHI <SR.3802_8(12), _7(2)>
  # DEBUG this => _3(D)
  # DEBUG __x => &D.123299
  _3(D)->_M_cur = SR.3799_125;
  _3(D)->_M_first = SR.3800_122;
  _3(D)->_M_last = SR.3801_118;
  _3(D)->_M_node = SR.3802_113;
  D.123299 ={v} {CLOBBER};
  D.123274 ={v} {CLOBBER};
  D.106105 ={v} {CLOBBER};
  return _3(D);

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::size_t = long unsigned int] (_ZNSt11_Deque_baseIP6CreditSaIS1_EE17_M_initialize_mapEm, funcdef_no=3227, decl_uid=62056, cgraph_uid=1672, symbol_order=1673)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::size_t = long unsigned int] (struct _Deque_base * const this, size_t __num_elements)
{
  struct Credit * * * __nstart;
  struct Credit * * * __nfinish;
  struct Credit * * * __nstart;
  const size_t __num_nodes;
  const long unsigned int D.71843;
  const long unsigned int D.71844;
  long unsigned int _3;
  struct Credit * * * _8;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _20;
  struct Credit * * * _23;
  struct Credit * * _24;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  struct Credit * * _29;
  void * _31;
  struct Credit * * * _33;
  struct Credit * * _40;
  struct Credit * * _41;
  struct Credit * * _42;
  struct Credit * * _52;
  void * _54;
  struct Credit * * _56;
  long unsigned int _65;

  <bb 2>:
  # DEBUG __size => 8
  _3 = __num_elements_2(D) >> 6;
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodes => __num_nodes_4
  _5 = _3 + 3;
  # DEBUG __a => &D.71843
  # DEBUG __b => &D.71844
  _65 = MAX_EXPR <_5, 8>;
  this_10(D)->_M_impl._M_map_size = _65;
  # DEBUG D#1316 => this_10(D)
  # DEBUG __n => D#2587
  # DEBUG this => D#1316
  # DEBUG D#1315 => D#1316
  # DEBUG D#1037 => D#1315
  # DEBUG this => D#1037
  # DEBUG D#1036 => D#1037
  # DEBUG this => D#1036
  # DEBUG this => NULL
  # DEBUG D.99630 => NULL
  # DEBUG this => NULL
  # DEBUG D#1314 => &__map_alloc
  # DEBUG __n => D#2587
  # DEBUG __a => D#1314
  # DEBUG D#1313 => D#1314
  # DEBUG D#1311 => D#1313
  # DEBUG D#1312 => 0B
  # DEBUG __n => D#2587
  # DEBUG this => D#1311
  # DEBUG D.102749 => D#1312
  # DEBUG D#1310 => D#1311
  # DEBUG D#1309 => D#1310
  # DEBUG this => D#1309
  _26 = _65 * 8;
  _8 = operator new (_26);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = _8;
  _15 = this_10(D)->_M_impl._M_map_size;
  _16 = _15 - __num_nodes_4;
  _17 = _16 >> 1;
  _18 = _17 * 8;
  __nstart_19 = _8 + _18;
  # DEBUG __nstart => __nstart_19
  _20 = __num_nodes_4 * 8;
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinish => __nfinish_21
  # DEBUG D#1386 => this_10(D)
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nfinish_21
  # DEBUG this => D#1386
  # DEBUG __cur => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 13>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __cur => __nstart_75
  # DEBUG D#1381 => D#1382
  # DEBUG this => D#1381
  # DEBUG D#1380 => D#1381
  # DEBUG __size => 8
  # DEBUG D#1379 => &D#1380->_M_impl
  # DEBUG D#1378 => D#1379
  # DEBUG __n => NULL
  # DEBUG __a => D#1378
  # DEBUG D#1377 => D#1378
  # DEBUG D#1375 => D#1377
  # DEBUG D#1376 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1375
  # DEBUG D.123387 => D#1376
  # DEBUG D#1374 => D#1375
  # DEBUG D#1373 => D#1374
  # DEBUG this => D#1373
  _52 = operator new (512);

  <bb 5>:
  *__nstart_75 = _52;
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __cur => __nstart_53
  # DEBUG __cur => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 13>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 4>;

  # __nstart_13 = PHI <__nstart_75(4)>
<L3>:
  _54 = __builtin_eh_pointer (6);
  __cxa_begin_catch (_54);
  # DEBUG this => D#1383
  # DEBUG __nstart => __nstart_19
  # DEBUG __nfinish => __nstart_13
  # DEBUG __n => __nstart_19
  # DEBUG __n => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __cxa_rethrow ();

  <bb 9>:

  <bb 10>:
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(11)>
  # DEBUG __n => __nstart_72
  _56 = *__nstart_72;
  # DEBUG this => D#1384
  # DEBUG __p => _56
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#1385->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _56
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _56
  # DEBUG this => D#1017
  # DEBUG D.123380 => D#1018
  operator delete (_56);
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __n => __nstart_57
  # DEBUG __n => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

<L5>:
  __cxa_end_catch ();
  resx 7

  <bb 13>:
  # DEBUG D#1389 => &this_10(D)->_M_impl._M_start
  # DEBUG this => D#1389
  # DEBUG __new_node => __nstart_19
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
  _24 = *__nstart_19;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
  # DEBUG __size => 8
  _42 = _24 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#1388 => &this_10(D)->_M_impl._M_finish
  # DEBUG this => D#1388
  # DEBUG __new_node => _23
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
  _40 = MEM[(struct Credit * * *)__nfinish_21 + -8B];
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
  # DEBUG __size => 8
  _41 = _40 + 512;
  MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
  this_10(D)->_M_impl._M_start._M_cur = _24;
  # DEBUG __size => 8
  _27 = __num_elements_2(D) & 63;
  _28 = _27 * 8;
  _29 = _40 + _28;
  this_10(D)->_M_impl._M_finish._M_cur = _29;
  return;

<L0>:
  _31 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_31);
  # DEBUG D#1387 => this_10(D)->_M_impl._M_map_size
  _33 = this_10(D)->_M_impl._M_map;
  # DEBUG D#1040 => this_10(D)
  # DEBUG D#1041 => D#1387
  # DEBUG __p => _33
  # DEBUG this => D#1040
  # DEBUG __n => D#1041
  # DEBUG D#1039 => D#1041
  # DEBUG D#1038 => D#1040
  # DEBUG D#1037 => D#1038
  # DEBUG this => D#1037
  # DEBUG D#1036 => D#1037
  # DEBUG this => D#1036
  # DEBUG this => NULL
  # DEBUG D.99630 => NULL
  # DEBUG this => NULL
  # DEBUG D#719 => &__map_alloc
  # DEBUG D#720 => D#1039
  # DEBUG __p => _33
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => _33
  # DEBUG this => D#715
  # DEBUG D.102771 => D#716
  operator delete (_33);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  this_10(D)->_M_impl._M_map = 0B;
  this_10(D)->_M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L2>:
  __cxa_end_catch ();
  resx 4

}



;; Function std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt5dequeIP6CreditSaIS1_EEC2ERKS3_, funcdef_no=2461, decl_uid=62589, cgraph_uid=906, symbol_order=907)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct deque * const this, const struct deque & __x)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3834;
  struct Credit * * SR.3833;
  struct Credit * * SR.3832;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.123507;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.123482;
  struct _Deque_iterator D.123481;
  struct _Deque_iterator D.123480;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.123462;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.123448;
  struct _Deque_iterator D.123447;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.81428;
  struct _Deque_iterator D.81427;
  struct _Deque_iterator D.68008;
  struct _Deque_base * _7;
  struct Credit * * _9;
  struct Credit * * _10;
  struct Credit * * _13;
  struct Credit * * * _15;
  struct Credit * * _17;
  struct Credit * * * _18;
  struct Credit * * * _19;
  long int _20;
  struct Credit * * * _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  struct Credit * * _27;
  long int _28;
  struct Credit * * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  struct Credit * * _34;
  long int _35;
  struct Credit * * _36;
  long int _37;
  long int _38;
  long int _39;
  difference_type _40;
  size_type _41;
  long int _97;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _105;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _112;
  long int _114;
  long int _115;
  long int _116;
  struct Credit * _121;
  struct Credit * * _126;
  struct Credit * * * _138;
  struct Credit * * _139;
  struct Credit * * _140;

  <bb 2>:
  # DEBUG this => __x_2(D)
  # DEBUG D#404 => &__x_2(D)->D.62618._M_impl._M_start
  # DEBUG D#405 => &__x_2(D)->D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _19 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _20 = (long int) _19;
  _21 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _22 = (long int) _21;
  _23 = _20 - _22;
  _24 = _23 /[ex] 8;
  _25 = _24 + -1;
  _26 = _25 * 64;
  _27 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _28 = (long int) _27;
  _29 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _30 = (long int) _29;
  _31 = _28 - _30;
  _32 = _31 /[ex] 8;
  _33 = _26 + _32;
  _34 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _35 = (long int) _34;
  _36 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _37 = (long int) _36;
  _38 = _35 - _37;
  _39 = _38 /[ex] 8;
  _40 = _33 + _39;
  _41 = (size_type) _40;
  # DEBUG D#1546 => &__x_2(D)->D.62618
  # DEBUG this => D#1546
  # DEBUG __a => NULL
  _7 = &this_6(D)->D.62618;
  # DEBUG this => _7
  # DEBUG __a => NULL
  # DEBUG __num_elements => _41
  # DEBUG D#1393 => &_7->_M_impl
  # DEBUG this => D#1393
  # DEBUG __a => NULL
  # DEBUG this => D#1393
  # DEBUG __a => NULL
  # DEBUG this => D#1393
  # DEBUG D.96742 => NULL
  MEM[(struct _Deque_impl *)this_6(D)]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_6(D)]._M_map_size = 0;
  # DEBUG D#722 => &D#1393->_M_start
  # DEBUG this => D#722
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_node = 0B;
  # DEBUG D#721 => &D#1393->_M_finish
  # DEBUG this => D#721
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_7, _41);
  # DEBUG D#1547 => &this_6(D)->D.62618
  # DEBUG this => D#1547
  # DEBUG D#1548 => &this_6(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.68008
  # DEBUG __x => D#1548
  _9 = MEM[(const struct iterator &)this_6(D) + 16]._M_cur;
  _17 = MEM[(const struct iterator &)this_6(D) + 16]._M_last;
  _18 = MEM[(const struct iterator &)this_6(D) + 16]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#221 => &__x_2(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.81427
  # DEBUG __x => D#221
  _10 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#2588 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _15 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#222 => &__x_2(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.81428
  # DEBUG __x => D#222
  __first$_M_cur_8 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  # DEBUG D#2589 => MEM[(const struct iterator &)__x_2(D) + 16]._M_first
  __first$_M_last_4 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  __first$_M_node_3 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  # DEBUG __result => &D.68008
  # DEBUG D.123444 => D#1545
  # DEBUG this => &D.123448
  # DEBUG __x => &D.68008
  # DEBUG __result => &D.123448
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.123448
  # DEBUG __result => NULL
  # DEBUG this => &D.123462
  # DEBUG __x => NULL
  # DEBUG __result => &D.123462
  # DEBUG this => &D.123482
  # DEBUG __x => &D.123462
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#2588
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#2588
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#2589
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#2589
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __result => &D.123482
  # DEBUG this => NULL
  # DEBUG __x => &D.123482
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#2588
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#2588
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#2589
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#2589
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __first => __first$_M_cur_8
  # DEBUG __first$8 => D#2589
  # DEBUG __first$16 => __first$_M_last_4
  # DEBUG __first$24 => __first$_M_node_3
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.123507
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_8
  # DEBUG __first$_M_first => D#2589
  # DEBUG __first$_M_last => __first$_M_last_4
  # DEBUG __first$_M_node => __first$_M_node_3
  # DEBUG __result => &D.123507
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _97 = (long int) _15;
  _99 = (long int) __first$_M_node_3;
  _100 = _97 - _99;
  _101 = _100 /[ex] 8;
  _102 = _101 + -1;
  _103 = _102 * 64;
  _105 = (long int) _10;
  _107 = (long int) _13;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _103 + _109;
  _112 = (long int) __first$_M_last_4;
  _114 = (long int) __first$_M_cur_8;
  _115 = _112 - _114;
  _116 = _115 /[ex] 8;
  __n_117 = _110 + _116;
  # DEBUG __n => __n_117
  # DEBUG __n => __n_117
  if (__n_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => &D.123447
  # DEBUG __x => &D.123507
  D.123507 ={v} {CLOBBER};
  D.123482 ={v} {CLOBBER};
  D.123462 ={v} {CLOBBER};
  D.123448 ={v} {CLOBBER};
  D.68008 ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __n_54 = PHI <__n_117(4), __n_128(10)>
  # SR.3832_198 = PHI <_9(4), SR.3832_197(10)>
  # SR.3833_195 = PHI <_17(4), SR.3833_194(10)>
  # SR.3834_193 = PHI <_18(4), SR.3834_192(10)>
  # __first$_M_cur_190 = PHI <__first$_M_cur_8(4), __first$_M_cur_189(10)>
  # __first$_M_last_186 = PHI <__first$_M_last_4(4), __first$_M_last_185(10)>
  # __first$_M_node_184 = PHI <__first$_M_node_3(4), __first$_M_node_182(10)>
  # DEBUG __first$_M_node => __first$_M_node_184
  # DEBUG __first$_M_last => __first$_M_last_186
  # DEBUG __first$_M_cur => __first$_M_cur_190
  # DEBUG __n => __n_54
  # DEBUG D#318 => &D.123507
  # DEBUG this => D#318
  # DEBUG D#1544 => &__first
  # DEBUG this => D#1544
  _121 = MEM[(struct Credit * const &)__first$_M_cur_190];
  *SR.3832_198 = _121;
  # DEBUG this => &__first
  __first$_M_cur_123 = __first$_M_cur_190 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_123
  if (__first$_M_cur_123 == __first$_M_last_186)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => &__first
  __first$_M_node_134 = __first$_M_node_184 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_134
  # DEBUG __first$_M_node => __first$_M_node_134
  __first$_M_cur_135 = MEM[(struct Credit * * *)__first$_M_node_184 + 8B];
  # DEBUG __size => 8
  __first$_M_last_136 = __first$_M_cur_135 + 512;
  # DEBUG __first$_M_last => __first$_M_last_136
  # DEBUG __first$_M_cur => __first$_M_cur_135

  <bb 7>:
  # __first$_M_cur_189 = PHI <__first$_M_cur_123(5), __first$_M_cur_135(6)>
  # __first$_M_last_185 = PHI <__first$_M_last_186(5), __first$_M_last_136(6)>
  # __first$_M_node_182 = PHI <__first$_M_node_184(5), __first$_M_node_134(6)>
  # DEBUG __first$_M_node => __first$_M_node_182
  # DEBUG __first$_M_last => __first$_M_last_185
  # DEBUG __first$_M_cur => __first$_M_cur_189
  # DEBUG this => &D.123507
  _126 = SR.3832_198 + 8;
  if (_126 == SR.3833_195)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &D.123507
  _138 = SR.3834_193 + 8;
  # DEBUG this => &D.123507
  # DEBUG __new_node => _138
  _139 = MEM[(struct Credit * * *)SR.3834_193 + 8B];
  # DEBUG __size => 8
  _140 = _139 + 512;

  <bb 9>:
  # SR.3832_197 = PHI <_126(7), _139(8)>
  # SR.3833_194 = PHI <SR.3833_195(7), _140(8)>
  # SR.3834_192 = PHI <SR.3834_193(7), _138(8)>
  __n_128 = __n_54 + -1;
  # DEBUG __n => __n_128
  # DEBUG __n => __n_128
  if (__n_128 <= 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 5>;

}



;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>] (_ZSt18uninitialized_copyISt15_Deque_iteratorIP6CreditRKS2_PS3_ES0_IS2_RS2_PS2_EET0_T_SB_SA_, funcdef_no=3238, decl_uid=69473, cgraph_uid=1683, symbol_order=1684)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.3867;
  struct Credit * * SR.3866;
  struct Credit * * SR.3865;
  struct Credit * * SR.3864;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __last$24;
  struct Credit * * __last$8;
  struct Credit * * __last;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.123613;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.123588;
  struct _Deque_iterator D.123587;
  struct _Deque_iterator D.123586;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.106455;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Credit * * _4;
  struct Credit * * _5;
  struct Credit * * _6;
  struct Credit * * * _7;
  long int _40;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _48;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _55;
  long int _57;
  long int _58;
  long int _59;
  struct Credit * _64;
  struct Credit * * _69;
  struct Credit * * * _81;
  struct Credit * * _82;
  struct Credit * * _83;

  <bb 2>:
  # DEBUG __assignable => 1
  # DEBUG this => &D.72105
  # DEBUG __x => __result_2(D)
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _7 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  __first$_M_cur_88 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG D#2592 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first$_M_first => D#2592
  __first$_M_last_84 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_84
  __first$_M_node_61 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_61
  __last_11 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last$_M_cur => __last_11
  __last$8_10 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last$_M_first => __last$8_10
  # DEBUG D#2591 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last$_M_last => D#2591
  __last$24_91 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last$_M_node => __last$24_91
  # DEBUG __result => &D.72105
  # DEBUG this => &D.106455
  # DEBUG __x => &D.72105
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#2592
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __last => __last_11
  # DEBUG __last$8 => __last$8_10
  # DEBUG __last$_M_last => D#2591
  # DEBUG __last$24 => __last$24_91
  # DEBUG __result => &D.106455
  # DEBUG this => &D.123588
  # DEBUG __x => &D.106455
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG D#2590 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#2590
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#2590
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#2592
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#2592
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __result => &D.123588
  # DEBUG this => NULL
  # DEBUG __x => &D.123588
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG __it$16 => D#2590
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#2590
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#2592
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#2592
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#2592
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.123613
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG __first$_M_first => D#2592
  # DEBUG __first$_M_last => __first$_M_last_84
  # DEBUG __first$_M_node => __first$_M_node_61
  # DEBUG __result => &D.123613
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _40 = (long int) __last$24_91;
  _42 = (long int) __first$_M_node_61;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _44 + -1;
  _46 = _45 * 64;
  _48 = (long int) __last_11;
  _50 = (long int) __last$8_10;
  _51 = _48 - _50;
  _52 = _51 /[ex] 8;
  _53 = _46 + _52;
  _55 = (long int) __first$_M_last_84;
  _57 = (long int) __first$_M_cur_88;
  _58 = _55 - _57;
  _59 = _58 /[ex] 8;
  __n_60 = _53 + _59;
  # DEBUG __n => __n_60
  # DEBUG __n => __n_60
  if (__n_60 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_12 = PHI <__n_60(3), __n_71(9)>
  # SR.3864_127 = PHI <_4(3), SR.3864_126(9)>
  # SR.3865_124 = PHI <_5(3), SR.3865_123(9)>
  # SR.3866_121 = PHI <_6(3), SR.3866_119(9)>
  # SR.3867_115 = PHI <_7(3), SR.3867_114(9)>
  # __first$_M_cur_112 = PHI <__first$_M_cur_88(3), __first$_M_cur_111(9)>
  # __first$_M_last_106 = PHI <__first$_M_last_84(3), __first$_M_last_105(9)>
  # __first$_M_node_104 = PHI <__first$_M_node_61(3), __first$_M_node_103(9)>
  # DEBUG __first$_M_node => __first$_M_node_104
  # DEBUG __first$_M_last => __first$_M_last_106
  # DEBUG __first$_M_cur => __first$_M_cur_112
  # DEBUG __n => __n_12
  # DEBUG D#318 => &D.123613
  # DEBUG this => D#318
  # DEBUG D#1544 => &__first
  # DEBUG this => D#1544
  _64 = MEM[(struct Credit * const &)__first$_M_cur_112];
  *SR.3864_127 = _64;
  # DEBUG this => &__first
  __first$_M_cur_66 = __first$_M_cur_112 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_66
  if (__first$_M_cur_66 == __first$_M_last_106)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &__first
  __first$_M_node_77 = __first$_M_node_104 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_77
  # DEBUG __first$_M_node => __first$_M_node_77
  __first$_M_cur_78 = MEM[(struct Credit * * *)__first$_M_node_104 + 8B];
  # DEBUG __size => 8
  __first$_M_last_79 = __first$_M_cur_78 + 512;
  # DEBUG __first$_M_last => __first$_M_last_79
  # DEBUG __first$_M_cur => __first$_M_cur_78

  <bb 6>:
  # __first$_M_cur_111 = PHI <__first$_M_cur_66(4), __first$_M_cur_78(5)>
  # __first$_M_last_105 = PHI <__first$_M_last_106(4), __first$_M_last_79(5)>
  # __first$_M_node_103 = PHI <__first$_M_node_104(4), __first$_M_node_77(5)>
  # DEBUG __first$_M_node => __first$_M_node_103
  # DEBUG __first$_M_last => __first$_M_last_105
  # DEBUG __first$_M_cur => __first$_M_cur_111
  # DEBUG this => &D.123613
  _69 = SR.3864_127 + 8;
  if (_69 == SR.3866_121)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.123613
  _81 = SR.3867_115 + 8;
  # DEBUG this => &D.123613
  # DEBUG __new_node => _81
  _82 = MEM[(struct Credit * * *)SR.3867_115 + 8B];
  # DEBUG __size => 8
  _83 = _82 + 512;

  <bb 8>:
  # SR.3864_126 = PHI <_69(6), _82(7)>
  # SR.3865_123 = PHI <SR.3865_124(6), _82(7)>
  # SR.3866_119 = PHI <SR.3866_121(6), _83(7)>
  # SR.3867_114 = PHI <SR.3867_115(6), _81(7)>
  __n_71 = __n_12 + -1;
  # DEBUG __n => __n_71
  # DEBUG __n => __n_71
  if (__n_71 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.3867_8 = PHI <SR.3867_114(8)>
  # SR.3866_87 = PHI <SR.3866_119(8)>
  # SR.3865_9 = PHI <SR.3865_123(8)>
  # SR.3864_90 = PHI <SR.3864_126(8)>

  <bb 12>:

  <bb 11>:
  # SR.3864_125 = PHI <SR.3864_90(12), _4(2)>
  # SR.3865_122 = PHI <SR.3865_9(12), _5(2)>
  # SR.3866_118 = PHI <SR.3866_87(12), _6(2)>
  # SR.3867_113 = PHI <SR.3867_8(12), _7(2)>
  # DEBUG this => _3(D)
  # DEBUG __x => &D.123613
  _3(D)->_M_cur = SR.3864_125;
  _3(D)->_M_first = SR.3865_122;
  _3(D)->_M_last = SR.3866_118;
  _3(D)->_M_node = SR.3867_113;
  D.123613 ={v} {CLOBBER};
  D.123588 ={v} {CLOBBER};
  D.106455 ={v} {CLOBBER};
  return _3(D);

}



;; Function std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Reuse_or_alloc_node; _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<OutputSet::sSetElement>*] (_ZNSt8_Rb_treeIN9OutputSet11sSetElementES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_M_copyINS7_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS1_EPKSB_SC_RT_, funcdef_no=3360, decl_uid=69972, cgraph_uid=1805, symbol_order=1806)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Reuse_or_alloc_node; _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<OutputSet::sSetElement>*] (struct _Rb_tree * const this, const struct _Rb_tree_node * __x, struct _Rb_tree_node * __p, struct _Reuse_or_alloc_node & __node_gen)
{
  bool __node_gen___M_nodes_lsm.3885;
  struct _Rb_tree_node_base * __node_gen___M_nodes_lsm.3884;
  bool __node_gen___M_nodes_lsm.3883;
  struct _Rb_tree_node_base * __node_gen___M_nodes_lsm.3882;
  struct _Rb_tree_node * D.123767;
  struct _Rb_tree_node_base * D.123737;
  struct _Rb_tree_node * __node;
  struct _Rb_tree_node * D.123734;
  struct _Rb_tree_node * D.123722;
  struct _Rb_tree_node_base * D.123692;
  struct _Rb_tree_node * __node;
  struct _Rb_tree_node * D.123689;
  struct _Rb_tree_node_base * _13;
  struct _Rb_tree_node * _15;
  _Rb_tree_color _17;
  struct _Rb_tree_node_base * _20;
  struct _Rb_tree_node_base * _21;
  struct _Rb_tree_node * _23;
  void * _26;
  struct _Rb_tree_node_base * const _31;
  _Rb_tree_color _36;
  struct _Rb_tree_node_base * _37;
  struct _Rb_tree_node_base * _41;
  struct _Rb_tree_node_base * _45;
  struct _Rb_tree_node_base * _46;
  struct _Rb_tree_node_base * _49;
  struct _Rb_tree_node_base * _50;
  struct _Rb_tree_node_base * _51;
  struct _Rb_tree_node_base * _52;
  struct _Rb_tree_node_base * _53;
  struct _Rb_tree_node_base * _54;
  struct _Rb_tree_node * _55;
  struct _Rb_tree_node_base * _62;
  struct _Rb_tree_node_base * _63;
  struct _Rb_tree_node_base * _64;
  struct _Rb_tree_node_base * _66;
  struct _Rb_tree_node_base * _67;
  struct _Rb_tree_node * _68;
  struct _Rb_tree_node_base * _76;
  struct _Rb_tree_node_base * _107;
  struct _Rb_tree_node_base * _110;
  struct _Rb_tree_node_base * _125;

  <bb 2>:
  # DEBUG D#1856 => this_8(D)
  # DEBUG __x => __x_9(D)
  # DEBUG __node_gen => __node_gen_10(D)
  # DEBUG this => D#1856
  # DEBUG this => __x_9(D)
  # DEBUG D#2593 => &__x_9(D)->_M_value_field
  # DEBUG __r => D#2593
  # DEBUG this => __node_gen_10(D)
  # DEBUG __arg => D#2593
  # DEBUG this => __node_gen_10(D)
  _37 = __node_gen_10(D)->_M_nodes;
  if (_37 == 0B)
    goto <bb 46>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG __node => _37
  _49 = _37->_M_parent;
  __node_gen_10(D)->_M_nodes = _49;
  if (_49 != 0B)
    goto <bb 4>;
  else
    goto <bb 14>;

  <bb 4>:
  _50 = _49->_M_right;
  if (_37 == _50)
    goto <bb 5>;
  else
    goto <bb 13>;

  <bb 5>:
  _49->_M_right = 0B;
  _51 = _49->_M_left;
  if (_51 != 0B)
    goto <bb 6>;
  else
    goto <bb 44>;

  <bb 6>:
  __node_gen_10(D)->_M_nodes = _51;
  # DEBUG this => __node_gen_10(D)
  _76 = _51->_M_right;
  if (_76 == 0B)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:

  <bb 8>:
  # _21 = PHI <_76(7), _53(9)>
  _53 = _21->_M_right;
  if (_53 == 0B)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  # _52 = PHI <_21(8)>

  <bb 52>:
  __node_gen_10(D)->_M_nodes = _52;

  <bb 11>:
  # _107 = PHI <_52(52), _51(6)>
  _54 = _107->_M_left;
  if (_54 != 0B)
    goto <bb 12>;
  else
    goto <bb 44>;

  <bb 12>:
  __node_gen_10(D)->_M_nodes = _54;
  goto <bb 45>;

  <bb 13>:
  _49->_M_left = 0B;
  goto <bb 45>;

  <bb 14>:
  __node_gen_10(D)->_M_root = 0B;
  goto <bb 45>;

  <bb 15>:
  # __p_48 = PHI <_55(46), _37(54)>
  # DEBUG __tmp => NULL
  _17 = __x_9(D)->D.68385._M_color;
  __p_48->D.68385._M_color = _17;
  __p_48->D.68385._M_left = 0B;
  __p_48->D.68385._M_right = 0B;
  # DEBUG __top => NULL
  __p_48->D.68385._M_parent = __p_11(D);
  _13 = __x_9(D)->D.68385._M_right;
  if (_13 != 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  _31 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 24B];
  # DEBUG D#429 => __x_9(D)
  # DEBUG __x => D#429
  _15 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Reuse_or_alloc_node> (this_8(D), _31, __p_48, __node_gen_10(D));

  <bb 17>:
  __p_48->D.68385._M_right = _15;

  <bb 18>:
  # DEBUG __p => NULL
  __x_32 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 16B];
  # DEBUG D#430 => __x_9(D)
  # DEBUG __x => D#430
  # DEBUG __x => NULL
  # DEBUG __p => __p_48
  # DEBUG __x => __x_32
  if (__x_32 == 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:

  <bb 57>:
  return __p_48;

  <bb 20>:

  <bb 21>:
  # __x_72 = PHI <__x_32(20), __x_33(40)>
  # __p_126 = PHI <__p_48(20), __p_61(40)>
  # DEBUG __p => __p_126
  # DEBUG __x => __x_72
  # DEBUG D#1856 => this_8(D)
  # DEBUG __x => __x_72
  # DEBUG __node_gen => __node_gen_10(D)
  # DEBUG this => D#1856
  # DEBUG this => __x_72
  # DEBUG D#2594 => &__x_72->_M_value_field
  # DEBUG __r => D#2594
  # DEBUG this => __node_gen_10(D)
  # DEBUG __arg => D#2594
  # DEBUG this => __node_gen_10(D)
  _41 = __node_gen_10(D)->_M_nodes;
  if (_41 == 0B)
    goto <bb 49>;
  else
    goto <bb 22>;

  <bb 22>:
  # DEBUG __node => _41
  _62 = _41->_M_parent;
  __node_gen_10(D)->_M_nodes = _62;
  if (_62 != 0B)
    goto <bb 23>;
  else
    goto <bb 33>;

  <bb 23>:
  _63 = _62->_M_right;
  if (_41 == _63)
    goto <bb 24>;
  else
    goto <bb 32>;

  <bb 24>:
  _62->_M_right = 0B;
  _64 = _62->_M_left;
  if (_64 != 0B)
    goto <bb 25>;
  else
    goto <bb 47>;

  <bb 25>:
  __node_gen_10(D)->_M_nodes = _64;
  # DEBUG this => __node_gen_10(D)
  _46 = _64->_M_right;
  if (_46 == 0B)
    goto <bb 30>;
  else
    goto <bb 26>;

  <bb 26>:

  <bb 27>:
  # _125 = PHI <_46(26), _66(28)>
  _66 = _125->_M_right;
  if (_66 == 0B)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:
  # _45 = PHI <_125(27)>

  <bb 51>:
  __node_gen_10(D)->_M_nodes = _45;

  <bb 30>:
  # _110 = PHI <_45(51), _64(25)>
  _67 = _110->_M_left;
  if (_67 != 0B)
    goto <bb 31>;
  else
    goto <bb 47>;

  <bb 31>:
  __node_gen_10(D)->_M_nodes = _67;
  goto <bb 48>;

  <bb 32>:
  _62->_M_left = 0B;
  goto <bb 48>;

  <bb 33>:
  __node_gen_10(D)->_M_root = 0B;
  goto <bb 48>;

  <bb 34>:
  # DEBUG __tmp => _68
  # DEBUG D#1419 => D#1699
  # DEBUG __node => _68
  # DEBUG __x => D#2594
  # DEBUG this => D#1419
  # DEBUG D#1418 => D#1419
  # DEBUG this => _68
  # DEBUG D#2596 => &_68->_M_value_field
  # DEBUG __r => D#2596
  # DEBUG D#1109 => D#1418
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2596
  # DEBUG __val => D#2594
  # DEBUG this => D#1417
  # DEBUG D#12 => 16
  # DEBUG __p => D#2596
  # DEBUG D.103197 => D#12
  MEM[(struct sSetElement *)_68 + 32B] = MEM[(const struct sSetElement &)__x_72 + 32];

  <bb 35>:
  # __p_61 = PHI <_68(34), _41(56)>
  # DEBUG __tmp => NULL
  _36 = __x_72->D.68385._M_color;
  __p_61->D.68385._M_color = _36;
  __p_61->D.68385._M_left = 0B;
  __p_61->D.68385._M_right = 0B;
  # DEBUG __y => NULL
  __p_126->D.68385._M_left = __p_61;
  __p_61->D.68385._M_parent = __p_126;
  _20 = __x_72->D.68385._M_right;
  if (_20 != 0B)
    goto <bb 36>;
  else
    goto <bb 39>;

  <bb 36>:
  # DEBUG D#429 => __x_72
  # DEBUG __x => D#429
  _23 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Reuse_or_alloc_node> (this_8(D), _20, __p_61, __node_gen_10(D));
  goto <bb 38>;

<L14>:
  goto <bb 42> (<L10>);

  <bb 38>:
  __p_61->D.68385._M_right = _23;

  <bb 39>:
  # DEBUG __p => NULL
  __x_33 = MEM[(struct _Rb_tree_node_base * *)__x_72 + 16B];
  # DEBUG D#430 => __x_72
  # DEBUG __x => D#430
  # DEBUG __x => NULL
  # DEBUG __p => __p_61
  # DEBUG __x => __x_33
  if (__x_33 == 0B)
    goto <bb 19>;
  else
    goto <bb 40>;

  <bb 40>:
  goto <bb 21>;

<L13>:

<L10>:
  _26 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_26);
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (this_8(D), __p_48);
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

  <bb 44>:

  <bb 53>:

  <bb 45>:

  <bb 54>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#1851 => __node_gen_10(D)->_M_t
  # DEBUG D#1114 => D#1851
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1850 => __node_gen_10(D)->_M_t
  # DEBUG D#1419 => D#1850
  # DEBUG __node => NULL
  # DEBUG __x => D#2593
  # DEBUG this => D#1419
  # DEBUG D#1418 => D#1419
  # DEBUG this => NULL
  # DEBUG D#2597 => &MEM[(struct _Rb_tree_node *)_37]._M_value_field
  # DEBUG __r => D#2597
  # DEBUG D#1109 => D#1418
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2597
  # DEBUG __val => D#2593
  # DEBUG this => D#1417
  # DEBUG D#12 => 16
  # DEBUG __p => D#2597
  # DEBUG D.103197 => D#12
  MEM[(struct sSetElement *)_37 + 32B] = MEM[(const struct sSetElement &)__x_9(D) + 32];
  goto <bb 15>;

  <bb 46>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#1854 => __node_gen_10(D)
  # DEBUG __arg => D#2593
  # DEBUG D#1855 => D#1854
  # DEBUG this => D#1855
  # DEBUG D#1700 => D#1852
  # DEBUG __x => D#2593
  # DEBUG this => D#1700
  # DEBUG D#1699 => D#1700
  # DEBUG D#1698 => D#1700
  # DEBUG D#1697 => D#1698
  # DEBUG this => D#1697
  # DEBUG D#1696 => D#1697
  # DEBUG this => D#1696
  # DEBUG __n => 1
  # DEBUG __a => D#1695
  # DEBUG D#1694 => D#1695
  # DEBUG D#1692 => D#1694
  # DEBUG D#1693 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1692
  # DEBUG D.123706 => D#1693
  # DEBUG D#1691 => D#1692
  # DEBUG D#1690 => D#1691
  # DEBUG this => D#1690
  _55 = operator new (48);
  # DEBUG __tmp => _55
  # DEBUG D#1419 => D#1699
  # DEBUG __node => _55
  # DEBUG __x => D#2593
  # DEBUG this => D#1419
  # DEBUG D#1418 => D#1419
  # DEBUG this => _55
  # DEBUG D#2598 => &_55->_M_value_field
  # DEBUG __r => D#2598
  # DEBUG D#1109 => D#1418
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2598
  # DEBUG __val => D#2593
  # DEBUG this => D#1417
  # DEBUG D#12 => 16
  # DEBUG __p => D#2598
  # DEBUG D.103197 => D#12
  MEM[(struct sSetElement *)_55 + 32B] = MEM[(const struct sSetElement &)__x_9(D) + 32];
  goto <bb 15>;

  <bb 47>:

  <bb 55>:

  <bb 48>:

  <bb 56>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#1851 => __node_gen_10(D)->_M_t
  # DEBUG D#1114 => D#1851
  # DEBUG this => D#1114
  # DEBUG __p => D#1115
  # DEBUG D#1113 => D#1114
  # DEBUG D#1112 => D#1115
  # DEBUG D#1111 => D#1115
  # DEBUG this => D#1111
  # DEBUG D#1110 => &D#1112->_M_value_field
  # DEBUG __r => D#1110
  # DEBUG D#1109 => D#1113
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG D#473 => D#1110
  # DEBUG this => D#472
  # DEBUG __p => D#473
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#1850 => __node_gen_10(D)->_M_t
  # DEBUG D#1419 => D#1850
  # DEBUG __node => NULL
  # DEBUG __x => D#2594
  # DEBUG this => D#1419
  # DEBUG D#1418 => D#1419
  # DEBUG this => NULL
  # DEBUG D#2595 => &MEM[(struct _Rb_tree_node *)_41]._M_value_field
  # DEBUG __r => D#2595
  # DEBUG D#1109 => D#1418
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2595
  # DEBUG __val => D#2594
  # DEBUG this => D#1417
  # DEBUG D#12 => 16
  # DEBUG __p => D#2595
  # DEBUG D.103197 => D#12
  MEM[(struct sSetElement *)_41 + 32B] = MEM[(const struct sSetElement &)__x_72 + 32];
  goto <bb 35>;

  <bb 49>:
  # DEBUG __node => NULL
  # DEBUG __node => NULL
  # DEBUG D#1854 => __node_gen_10(D)
  # DEBUG __arg => D#2594
  # DEBUG D#1855 => D#1854
  # DEBUG this => D#1855
  # DEBUG D#1700 => D#1852
  # DEBUG __x => D#2594
  # DEBUG this => D#1700
  # DEBUG D#1699 => D#1700
  # DEBUG D#1698 => D#1700
  # DEBUG D#1697 => D#1698
  # DEBUG this => D#1697
  # DEBUG D#1696 => D#1697
  # DEBUG this => D#1696
  # DEBUG __n => 1
  # DEBUG __a => D#1695
  # DEBUG D#1694 => D#1695
  # DEBUG D#1692 => D#1694
  # DEBUG D#1693 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1692
  # DEBUG D.123751 => D#1693
  # DEBUG D#1691 => D#1692
  # DEBUG D#1690 => D#1691
  # DEBUG this => D#1690
  _68 = operator new (48);
  goto <bb 34>;

<L15>:
  goto <bb 42> (<L10>);

}



;; Function std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node; _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<OutputSet::sSetElement>*] (_ZNSt8_Rb_treeIN9OutputSet11sSetElementES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_M_copyINS7_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS1_EPKSB_SC_RT_, funcdef_no=3685, decl_uid=72297, cgraph_uid=2130, symbol_order=2131)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node; _Key = OutputSet::sSetElement; _Val = OutputSet::sSetElement; _KeyOfValue = std::_Identity<OutputSet::sSetElement>; _Compare = std::less<OutputSet::sSetElement>; _Alloc = std::allocator<OutputSet::sSetElement>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<OutputSet::sSetElement>*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<OutputSet::sSetElement>*] (struct _Rb_tree * const this, const struct _Rb_tree_node * __x, struct _Rb_tree_node * __p, struct _Alloc_node & __node_gen)
{
  struct _Rb_tree_node * D.123833;
  struct _Rb_tree_node * D.123810;
  struct _Rb_tree_node_base * _15;
  struct _Rb_tree_node * _17;
  struct _Rb_tree_node_base * _23;
  struct _Rb_tree_node * _25;
  void * _27;
  _Rb_tree_color _37;
  _Rb_tree_color _39;

  <bb 2>:
  # DEBUG D#1706 => this_8(D)
  # DEBUG D#1707 => __node_gen_10(D)
  # DEBUG __x => __x_9(D)
  # DEBUG this => D#1706
  # DEBUG __node_gen => D#1707
  # DEBUG D#1705 => D#1707
  # DEBUG this => __x_9(D)
  # DEBUG D#1704 => &__x_9(D)->_M_value_field
  # DEBUG __r => D#1704
  # DEBUG D#1703 => D#1705
  # DEBUG __arg => D#1704
  # DEBUG this => D#1703
  # DEBUG D#1702 => D#1703
  # DEBUG D#1701 => D#1702->_M_t
  # DEBUG D#1700 => D#1701
  # DEBUG __x => D#1704
  # DEBUG this => D#1700
  # DEBUG D#1699 => D#1700
  # DEBUG D#1698 => D#1700
  # DEBUG D#1697 => D#1698
  # DEBUG this => D#1697
  # DEBUG D#1696 => D#1697
  # DEBUG this => D#1696
  # DEBUG __n => 1
  # DEBUG __a => D#1695
  # DEBUG D#1694 => D#1695
  # DEBUG D#1692 => D#1694
  # DEBUG D#1693 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1692
  # DEBUG D.123801 => D#1693
  # DEBUG D#1691 => D#1692
  # DEBUG D#1690 => D#1691
  # DEBUG this => D#1690
  __p_35 = operator new (48);
  # DEBUG __tmp => __p_35
  # DEBUG D#1419 => D#1699
  # DEBUG __node => __p_35
  # DEBUG __x => D#1704
  # DEBUG this => D#1419
  # DEBUG D#1418 => D#1419
  # DEBUG this => __p_35
  # DEBUG D#2601 => &__p_35->_M_value_field
  # DEBUG __r => D#2601
  # DEBUG D#1109 => D#1418
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2601
  # DEBUG __val => D#1704
  # DEBUG this => D#1417
  # DEBUG D#12 => 16
  # DEBUG __p => D#2601
  # DEBUG D.103197 => D#12
  MEM[(struct sSetElement *)__p_35 + 32B] = MEM[(const struct sSetElement &)__x_9(D) + 32];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => __p_35
  _37 = __x_9(D)->D.68385._M_color;
  __p_35->D.68385._M_color = _37;
  __p_35->D.68385._M_left = 0B;
  __p_35->D.68385._M_right = 0B;
  # DEBUG __top => NULL
  __p_35->D.68385._M_parent = __p_13(D);
  _15 = __x_9(D)->D.68385._M_right;
  if (_15 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#429 => __x_9(D)
  # DEBUG __x => D#429
  _17 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (this_8(D), _15, __p_35, __node_gen_10(D));

  <bb 4>:
  __p_35->D.68385._M_right = _17;

  <bb 5>:
  # DEBUG __p => NULL
  __x_33 = MEM[(struct _Rb_tree_node_base * *)__x_9(D) + 16B];
  # DEBUG D#430 => __x_9(D)
  # DEBUG __x => D#430
  # DEBUG __x => NULL
  # DEBUG __p => __p_35
  # DEBUG __x => __x_33
  if (__x_33 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:

  <bb 19>:
  return __p_35;

  <bb 7>:

  <bb 8>:
  # __x_19 = PHI <__x_33(7), __x_34(15)>
  # __p_56 = PHI <__p_35(7), __p_11(15)>
  # DEBUG __p => __p_56
  # DEBUG __x => __x_19
  # DEBUG D#1706 => this_8(D)
  # DEBUG D#1707 => __node_gen_10(D)
  # DEBUG __x => __x_19
  # DEBUG this => D#1706
  # DEBUG __node_gen => D#1707
  # DEBUG D#1705 => D#1707
  # DEBUG this => __x_19
  # DEBUG D#1704 => &__x_19->_M_value_field
  # DEBUG __r => D#1704
  # DEBUG D#1703 => D#1705
  # DEBUG __arg => D#1704
  # DEBUG this => D#1703
  # DEBUG D#1702 => D#1703
  # DEBUG D#1701 => D#1702->_M_t
  # DEBUG D#1700 => D#1701
  # DEBUG __x => D#1704
  # DEBUG this => D#1700
  # DEBUG D#1699 => D#1700
  # DEBUG D#1698 => D#1700
  # DEBUG D#1697 => D#1698
  # DEBUG this => D#1697
  # DEBUG D#1696 => D#1697
  # DEBUG this => D#1696
  # DEBUG __n => 1
  # DEBUG __a => D#1695
  # DEBUG D#1694 => D#1695
  # DEBUG D#1692 => D#1694
  # DEBUG D#1693 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1692
  # DEBUG D.123824 => D#1693
  # DEBUG D#1691 => D#1692
  # DEBUG D#1690 => D#1691
  # DEBUG this => D#1690
  __p_11 = operator new (48);
  goto <bb 10>;

<L14>:
  goto <bb 17> (<L10>);

  <bb 10>:
  # DEBUG __tmp => __p_11
  # DEBUG D#1419 => D#1699
  # DEBUG __node => __p_11
  # DEBUG __x => D#1704
  # DEBUG this => D#1419
  # DEBUG D#1418 => D#1419
  # DEBUG this => __p_11
  # DEBUG D#2600 => &__p_11->_M_value_field
  # DEBUG __r => D#2600
  # DEBUG D#1109 => D#1418
  # DEBUG this => D#1109
  # DEBUG D#1108 => D#1109
  # DEBUG this => D#1108
  # DEBUG this => NULL
  # DEBUG D.100294 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2600
  # DEBUG __val => D#1704
  # DEBUG this => D#1417
  # DEBUG D#12 => 16
  # DEBUG __p => D#2600
  # DEBUG D.103197 => D#12
  MEM[(struct sSetElement *)__p_11 + 32B] = MEM[(const struct sSetElement &)__x_19 + 32];
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => __p_11
  _39 = __x_19->D.68385._M_color;
  __p_11->D.68385._M_color = _39;
  __p_11->D.68385._M_left = 0B;
  __p_11->D.68385._M_right = 0B;
  # DEBUG __y => NULL
  __p_56->D.68385._M_left = __p_11;
  __p_11->D.68385._M_parent = __p_56;
  _23 = __x_19->D.68385._M_right;
  if (_23 != 0B)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 11>:
  # DEBUG D#429 => __x_19
  # DEBUG __x => D#429
  _25 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (this_8(D), _23, __p_11, __node_gen_10(D));
  goto <bb 13>;

<L15>:
  goto <bb 17> (<L10>);

  <bb 13>:
  __p_11->D.68385._M_right = _25;

  <bb 14>:
  # DEBUG __p => NULL
  __x_34 = MEM[(struct _Rb_tree_node_base * *)__x_19 + 16B];
  # DEBUG D#430 => __x_19
  # DEBUG __x => D#430
  # DEBUG __x => NULL
  # DEBUG __p => __p_11
  # DEBUG __x => __x_34
  if (__x_34 == 0B)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 8>;

<L13>:

<L10>:
  _27 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_27);
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (this_8(D), __p_35);
  __cxa_rethrow ();

<L12>:
  __cxa_end_catch ();
  resx 2

}



;; Function void IQRouter::_UpdateNOQ(int, int, const Flit*) (_ZN8IQRouter10_UpdateNOQEiiPK4Flit, funcdef_no=2261, decl_uid=51723, cgraph_uid=709, symbol_order=710)

Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void IQRouter::_UpdateNOQ(int, int, const Flit*) (struct IQRouter * const this, int input, int vc, const struct Flit * f)
{
  struct _Reuse_or_alloc_node __roan;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree & D.123879;
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  int next_vc_end;
  int next_vc_start;
  int next_vc_count;
  int next_output_port;
  struct OutputSet nos;
  int in_channel;
  const struct FlitChannel * channel;
  int out_port;
  struct set sl;
  static const char __PRETTY_FUNCTION__[49] = "void IQRouter::_UpdateNOQ(int, int, const Flit*)";
  int _6;
  int _8;
  bool _10;
  const struct OutputSet * _11;
  const struct set & _13;
  long unsigned int _16;
  struct vector & _17;
  long unsigned int _19;
  void (*<T72d4>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _21;
  const struct set & _24;
  const size_type _25;
  int & _26;
  long unsigned int _27;
  long unsigned int _29;
  long unsigned int _31;
  struct _Rb_tree_node_base * const _32;
  int _33;
  int _35;
  int _36;
  int _37;
  int _38;
  int _41;
  int _43;
  int _45;
  struct FlitChannel * & _46;
  int _48;
  int _49;
  int _50;
  int _51;
  int _53;
  long unsigned int _54;
  int _55;
  bool _57;
  int _58;
  int _61;
  struct ostream * gWatchOut.494_62;
  struct basic_ostream & _64;
  const size_type _65;
  struct basic_ostream & _67;
  struct _Rb_tree_node_base * _78;
  const struct Router * const _85;
  const int _86;
  int * _87;
  int * _88;
  int * _89;
  struct FlitChannel * * _90;
  struct vector * _91;
  struct vector * _92;
  struct vector * _93;
  int & _94;
  struct vector & _95;
  int & _96;
  struct vector & _97;
  long int _98;
  char * const _99;
  struct basic_ostream & _100;
  struct _Rb_tree_node_base * _101;
  struct _Rb_tree_node_base * _103;
  struct _Rb_tree_node_base * _104;
  struct _Rb_tree_node_base * const _146;
  long unsigned int _153;
  struct _Rb_tree_node_base * _154;
  struct _Rb_tree_node_base * _155;
  struct _Rb_tree_node_base * const _157;
  long unsigned int _164;
  struct _Rb_tree_node_base * _167;
  struct _Rb_tree & _168;
  struct _Rb_tree_node_base * prephitmp_210;
  struct _Rb_tree_node_base * const prephitmp_211;
  struct _Rb_tree_node_base * prephitmp_212;
  struct _Rb_tree_node_base * pretmp_213;
  const size_type prephitmp_215;
  struct _Rb_tree_node_base * pretmp_218;
  struct _Rb_tree & prephitmp_230;
  struct _Rb_tree & pretmp_231;
  struct _Rb_tree_node_base * prephitmp_232;

  <bb 2>:
  _6 = this_5(D)->_routing_delay;
  if (_6 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("!_routing_delay", "routers/iq_router.cpp", 2349, &__PRETTY_FUNCTION__);

  <bb 4>:
  if (f_7(D) == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __assert_fail ("f", "routers/iq_router.cpp", 2350, &__PRETTY_FUNCTION__);

  <bb 6>:
  _8 = f_7(D)->vc;
  if (_8 != vc_9(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 2351, &__PRETTY_FUNCTION__);

  <bb 8>:
  _10 = f_7(D)->head;
  if (_10 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 2352, &__PRETTY_FUNCTION__);

  <bb 10>:
  _11 = &f_7(D)->la_route_set;
  _13 = OutputSet::GetSet (_11);
  # DEBUG this => &sl
  # DEBUG __x => _13
  # DEBUG D#2603 => &_13->_M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => D#2603
  # DEBUG this => D#2603
  # DEBUG __a => NULL
  # DEBUG D#1710 => &MEM[(const struct _Rb_tree &)D#2603]._M_impl._M_key_compare
  # DEBUG D#1709 => &MEM[(struct _Rb_tree *)&sl]._M_impl
  # DEBUG this => D#1709
  # DEBUG __comp => D#1710
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG D.97154 => NULL
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&sl]._M_node_count = 0;
  # DEBUG this => D#1709
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&sl]._M_header;
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&sl]._M_header;
  _146 = MEM[(struct _Rb_tree_node_base * *)_13 + 16B];
  # DEBUG D#272 => D#2603
  # DEBUG this => D#272
  if (_146 != 0B)
    goto <bb 11>;
  else
    goto <bb 18>;

  <bb 11>:
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG D#273 => D#2603
  # DEBUG this => D#273
  # DEBUG this => &sl._M_t
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => &sl._M_t
  __an._M_t = &sl._M_t;
  __x_148 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (&sl._M_t, _146, &MEM[(struct _Rb_tree *)&sl]._M_impl._M_header, &__an);
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)&sl + 16] = __x_148;
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => __x_148

  <bb 12>:
  # __x_149 = PHI <__x_148(11), __x_150(13)>
  # DEBUG __x => __x_149
  __x_150 = __x_149->_M_left;
  if (__x_150 == 0B)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # __x_1 = PHI <__x_149(12)>

  <bb 86>:
  MEM[(struct _Rb_tree_node_base * &)&sl + 24] = __x_1;
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => __x_148

  <bb 15>:
  # __x_151 = PHI <__x_148(86), __x_152(16)>
  # DEBUG __x => __x_151
  __x_152 = __x_151->_M_right;
  if (__x_152 == 0B)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

  <bb 17>:
  # __x_228 = PHI <__x_151(15)>

  <bb 85>:
  MEM[(struct _Rb_tree_node_base * &)&sl + 32] = __x_228;
  _153 = MEM[(const struct _Rb_tree &)_13]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&sl]._M_impl._M_node_count = _153;

  <bb 18>:
  # prephitmp_215 = PHI <_153(85), 0(10)>
  # prephitmp_211 = PHI <__x_1(85), &MEM[(struct _Rb_tree_impl *)&sl]._M_header(10)>
  # prephitmp_212 = PHI <__x_148(85), 0B(10)>
  # DEBUG this => &sl
  # DEBUG D#164 => &sl._M_t
  # DEBUG D#163 => D#164
  # DEBUG this => D#163
  if (prephitmp_215 != 1)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  __assert_fail ("sl.size() == 1", "routers/iq_router.cpp", 2354, &__PRETTY_FUNCTION__);

  <bb 20>:
  # DEBUG this => &sl
  # DEBUG D#275 => &sl._M_t
  # DEBUG D#2605 => MEM[(struct _Rb_tree_node_base * *)&sl + 24B]
  # DEBUG D#274 => D#275
  # DEBUG this => D#274
  # DEBUG this => NULL
  # DEBUG __x => D#2605
  # DEBUG this => &D.65875
  # DEBUG this => D#2605
  # DEBUG D#1858 => &MEM[(const struct _Rb_tree_node *)D#2605]._M_value_field
  # DEBUG __r => D#1858
  out_port_15 = MEM[(const struct sSetElement *)prephitmp_211 + 32B].output_port;
  # DEBUG out_port => out_port_15
  _16 = (long unsigned int) out_port_15;
  # DEBUG D#1859 => &this_5(D)->D.51790._output_channels
  _90 = MEM[(struct FlitChannel * * *)this_5(D) + 192B];
  # DEBUG D#62 => D#1859
  # DEBUG __n => _16
  # DEBUG this => D#62
  _54 = _16 * 8;
  _46 = _90 + _54;
  channel_18 = *_46;
  # DEBUG channel => channel_18
  _85 = MEM[(const struct Router * *)channel_18 + 216B];
  # DEBUG D#19 => channel_18
  # DEBUG this => D#19
  # DEBUG router => NULL
  if (_85 != 0B)
    goto <bb 21>;
  else
    goto <bb 79>;

  <bb 21>:
  # DEBUG this => channel_18
  in_channel_20 = MEM[(const int &)channel_18 + 224];
  # DEBUG in_channel => in_channel_20
  # DEBUG this => &nos
  # DEBUG D#819 => &nos._outputs
  # DEBUG this => D#819
  # DEBUG D#818 => &D#819->_M_t
  # DEBUG this => D#818
  # DEBUG D#817 => &MEM[(struct _Rb_tree *)D#818]._M_impl
  # DEBUG this => D#817
  # DEBUG this => D#817
  # DEBUG this => D#817
  MEM[(struct _Rb_tree_impl *)&nos]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&nos]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&nos]._M_node_count = 0;
  # DEBUG this => D#817
  MEM[(struct _Rb_tree_impl *)&nos]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&nos]._M_header;
  MEM[(struct _Rb_tree_impl *)&nos]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&nos]._M_header;
  _21 = this_5(D)->_rf;
  _21 (_85, f_7(D), in_channel_20, &nos, 0);

  <bb 22>:
  _24 = OutputSet::GetSet (&nos);
  goto <bb 24>;

<L43>:
  goto <bb 81> (<L37>);

  <bb 24>:
  # DEBUG this => &sl
  # DEBUG __x => _24
  # DEBUG D#2604 => &_24->_M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => D#2604
  if (&sl != _24)
    goto <bb 25>;
  else
    goto <bb 39>;

  <bb 25>:
  # DEBUG this => &__roan
  # DEBUG __t => &sl._M_t
  # DEBUG this => &sl._M_t
  _78 = MEM[(struct _Rb_tree_node_base * &)&sl + 16];
  __roan._M_root = _78;
  # DEBUG this => &sl._M_t
  _154 = MEM[(struct _Rb_tree_node_base * &)&sl + 32];
  __roan._M_nodes = _154;
  __roan._M_t = &sl._M_t;
  if (_78 != 0B)
    goto <bb 26>;
  else
    goto <bb 28>;

  <bb 26>:
  _78->_M_parent = 0B;
  _155 = _154->_M_left;
  if (_155 != 0B)
    goto <bb 27>;
  else
    goto <bb 29>;

  <bb 27>:
  __roan._M_nodes = _155;
  goto <bb 29>;

  <bb 28>:
  __roan._M_nodes = 0B;

  <bb 29>:
  # DEBUG D#1857 => &MEM[(struct _Rb_tree *)&sl]._M_impl
  # DEBUG this => D#1857
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&sl]._M_header;
  MEM[(struct _Rb_tree_impl *)&sl]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&sl]._M_header;
  MEM[(struct _Rb_tree_impl *)&sl]._M_node_count = 0;
  _157 = MEM[(struct _Rb_tree_node_base * *)_24 + 16B];
  # DEBUG D#272 => D#2604
  # DEBUG this => D#272
  if (_157 != 0B)
    goto <bb 30>;
  else
    goto <bb 38>;

  <bb 30>:
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG D#273 => D#2604
  # DEBUG this => D#273
  __x_159 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Reuse_or_alloc_node> (&sl._M_t, _157, &MEM[(struct _Rb_tree *)&sl]._M_impl._M_header, &__roan);

  <bb 31>:
  MEM[(struct _Rb_tree_node_base * &)&sl + 16] = __x_159;
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => __x_159

  <bb 32>:
  # __x_160 = PHI <__x_159(31), __x_161(33)>
  # DEBUG __x => __x_160
  __x_161 = __x_160->_M_left;
  if (__x_161 == 0B)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # __x_227 = PHI <__x_160(32)>

  <bb 84>:
  MEM[(struct _Rb_tree_node_base * &)&sl + 24] = __x_227;
  # DEBUG this => &sl._M_t
  # DEBUG this => &sl._M_t
  # DEBUG __x => __x_159

  <bb 35>:
  # __x_162 = PHI <__x_159(84), __x_163(36)>
  # DEBUG __x => __x_162
  __x_163 = __x_162->_M_right;
  if (__x_163 == 0B)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 35>;

  <bb 37>:
  # __x_221 = PHI <__x_162(35)>

  <bb 83>:
  MEM[(struct _Rb_tree_node_base * &)&sl + 32] = __x_221;
  _164 = MEM[(const struct _Rb_tree &)_24]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&sl]._M_impl._M_node_count = _164;
  pretmp_213 = __roan._M_root;
  pretmp_231 = __roan._M_t;

  <bb 38>:
  # prephitmp_232 = PHI <_78(29), pretmp_213(83)>
  # prephitmp_230 = PHI <&sl._M_t(29), pretmp_231(83)>
  # DEBUG this => &__roan
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (prephitmp_230, prephitmp_232);
  __roan ={v} {CLOBBER};

  <bb 39>:
  # DEBUG this => &sl
  # DEBUG D#164 => &sl._M_t
  _25 = MEM[(long unsigned int *)&sl + 40B];
  # DEBUG D#163 => D#164
  # DEBUG this => D#163
  if (_25 != 1)
    goto <bb 42>;
  else
    goto <bb 43>;

<L41>:
  # DEBUG this => &__roan
  _167 = __roan._M_root;
  _168 = __roan._M_t;
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (_168, _167);
  MEM[(struct  &)&__roan] ={v} {CLOBBER};
  resx 13

<L44>:
  goto <bb 81> (<L37>);

  <bb 42>:
  __assert_fail ("sl.size() == 1", "routers/iq_router.cpp", 2363, &__PRETTY_FUNCTION__);

  <bb 43>:
  # DEBUG this => &sl
  # DEBUG D#275 => &sl._M_t
  _32 = MEM[(struct _Rb_tree_node_base * *)&sl + 24B];
  # DEBUG D#274 => D#275
  # DEBUG this => D#274
  # DEBUG this => NULL
  # DEBUG __x => _32
  # DEBUG this => &D.65884
  # DEBUG this => _32
  # DEBUG D#1860 => &MEM[(const struct _Rb_tree_node *)_32]._M_value_field
  # DEBUG __r => D#1860
  # DEBUG se => D#1860
  next_output_port_28 = MEM[(const struct sSetElement &)_32 + 32].output_port;
  # DEBUG next_output_port => next_output_port_28
  if (next_output_port_28 < 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  __assert_fail ("next_output_port >= 0", "routers/iq_router.cpp", 2366, &__PRETTY_FUNCTION__);

  <bb 45>:
  _29 = (long unsigned int) _8;
  _31 = (long unsigned int) input_30(D);
  # DEBUG D#1861 => &this_5(D)->_noq_next_output_port
  _91 = MEM[(struct vector * *)this_5(D) + 1152B];
  # DEBUG D#70 => D#1861
  # DEBUG __n => _31
  # DEBUG this => D#70
  _19 = _31 * 24;
  _17 = _91 + _19;
  _87 = MEM[(int * *)_17];
  # DEBUG __n => _29
  # DEBUG this => D#55
  _27 = _29 * 4;
  _26 = _87 + _27;
  _33 = *_26;
  if (_33 >= 0)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  __assert_fail ("_noq_next_output_port[input][vc] < 0", "routers/iq_router.cpp", 2367, &__PRETTY_FUNCTION__);

  <bb 47>:
  # DEBUG D#1862 => &this_5(D)->_noq_next_output_port
  # DEBUG D#70 => D#1862
  # DEBUG __n => _31
  # DEBUG this => D#70
  # DEBUG __n => _29
  # DEBUG this => D#55
  *_26 = next_output_port_28;
  _35 = MEM[(const struct sSetElement &)_32 + 32].vc_end;
  _36 = MEM[(const struct sSetElement &)_32 + 32].vc_start;
  _37 = _35 - _36;
  _38 = _37 + 1;
  _86 = MEM[(int *)_85 + 104B];
  # DEBUG this => D#20
  next_vc_count_40 = _38 / _86;
  # DEBUG next_vc_count => next_vc_count_40
  _41 = next_output_port_28 * next_vc_count_40;
  next_vc_start_42 = _36 + _41;
  # DEBUG next_vc_start => next_vc_start_42
  if (next_vc_start_42 < 0)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 48>:
  _43 = this_5(D)->_vcs;
  if (next_vc_start_42 >= _43)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  __assert_fail ("next_vc_start >= 0 && next_vc_start < _vcs", "routers/iq_router.cpp", 2371, &__PRETTY_FUNCTION__);

  <bb 50>:
  # DEBUG D#1863 => &this_5(D)->_noq_next_vc_start
  _92 = MEM[(struct vector * *)this_5(D) + 1176B];
  # DEBUG D#70 => D#1863
  # DEBUG __n => _31
  # DEBUG this => D#70
  _95 = _92 + _19;
  _88 = MEM[(int * *)_95];
  # DEBUG __n => _29
  # DEBUG this => D#55
  _94 = _88 + _27;
  _45 = *_94;
  if (_45 >= 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  __assert_fail ("_noq_next_vc_start[input][vc] < 0", "routers/iq_router.cpp", 2372, &__PRETTY_FUNCTION__);

  <bb 52>:
  # DEBUG D#1864 => &this_5(D)->_noq_next_vc_start
  # DEBUG D#70 => D#1864
  # DEBUG __n => _31
  # DEBUG this => D#70
  # DEBUG __n => _29
  # DEBUG this => D#55
  *_94 = next_vc_start_42;
  _48 = MEM[(const struct sSetElement &)_32 + 32].vc_start;
  _49 = next_output_port_28 + 1;
  _50 = next_vc_count_40 * _49;
  _51 = _48 + _50;
  next_vc_end_52 = _51 + -1;
  # DEBUG next_vc_end => next_vc_end_52
  if (next_vc_end_52 < 0)
    goto <bb 54>;
  else
    goto <bb 53>;

  <bb 53>:
  _53 = this_5(D)->_vcs;
  if (next_vc_end_52 >= _53)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  __assert_fail ("next_vc_end >= 0 && next_vc_end < _vcs", "routers/iq_router.cpp", 2375, &__PRETTY_FUNCTION__);

  <bb 55>:
  # DEBUG D#1865 => &this_5(D)->_noq_next_vc_end
  _93 = MEM[(struct vector * *)this_5(D) + 1200B];
  # DEBUG D#70 => D#1865
  # DEBUG __n => _31
  # DEBUG this => D#70
  _97 = _93 + _19;
  _89 = MEM[(int * *)_97];
  # DEBUG __n => _29
  # DEBUG this => D#55
  _96 = _89 + _27;
  _55 = *_96;
  if (_55 >= 0)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  __assert_fail ("_noq_next_vc_end[input][vc] < 0", "routers/iq_router.cpp", 2376, &__PRETTY_FUNCTION__);

  <bb 57>:
  # DEBUG D#1866 => &this_5(D)->_noq_next_vc_end
  # DEBUG D#70 => D#1866
  # DEBUG __n => _31
  # DEBUG this => D#70
  # DEBUG __n => _29
  # DEBUG this => D#55
  *_96 = next_vc_end_52;
  if (next_vc_start_42 > next_vc_end_52)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  __assert_fail ("next_vc_start <= next_vc_end", "routers/iq_router.cpp", 2378, &__PRETTY_FUNCTION__);

  <bb 59>:
  _57 = f_7(D)->watch;
  if (_57 != 0)
    goto <bb 61>;
  else
    goto <bb 60>;

  <bb 60>:
  # DEBUG this => &nos
  # DEBUG D#1121 => &nos._outputs
  # DEBUG this => D#1121
  # DEBUG this => &MEM[(struct set *)&nos]._M_t
  _101 = MEM[(struct _Rb_tree_node_base * *)&nos + 16B];
  # DEBUG D#89 => &MEM[(struct set *)&nos]._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&MEM[(struct set *)&nos]._M_t, _101);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&nos]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  nos ={v} {CLOBBER};
  pretmp_218 = MEM[(struct _Rb_tree_node_base * *)&sl + 16B];
  goto <bb 79>;

  <bb 61>:
  _58 = f_7(D)->id;
  # DEBUG D#1867 => &this_5(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1867
  # DEBUG D#1868 => &MEM[(const struct Module *)this_5(D)]._fullname
  _61 = GetSimTime ();
  goto <bb 63>;

<L45>:
  goto <bb 81> (<L37>);

  <bb 63>:
  gWatchOut.494_62 = gWatchOut;
  _64 = std::basic_ostream<char>::operator<< (gWatchOut.494_62, _61);
  goto <bb 65>;

<L46>:
  goto <bb 81> (<L37>);

  <bb 65>:
  # DEBUG __out => _64
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_64, " | ", 3);
  goto <bb 67>;

<L47>:
  goto <bb 81> (<L37>);

  <bb 67>:
  # DEBUG __os => _64
  # DEBUG __str => D#1868
  _65 = MEM[(long unsigned int *)this_5(D) + 48B];
  # DEBUG D#3 => D#1868
  # DEBUG this => D#3
  _98 = (long int) _65;
  # DEBUG this => D#1868
  _99 = MEM[(char * *)this_5(D) + 40B];
  # DEBUG D#1 => D#1868
  # DEBUG this => D#1
  _100 = std::__ostream_insert<char, std::char_traits<char> > (_64, _99, _98);
  goto <bb 69>;

<L48>:
  goto <bb 81> (<L37>);

  <bb 69>:
  # DEBUG __out => _100
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_100, " | ", 3);
  goto <bb 71>;

<L49>:
  goto <bb 81> (<L37>);

  <bb 71>:
  # DEBUG __out => _100
  # DEBUG __s => "Computing lookahead routing information for flit "
  # DEBUG __s => "Computing lookahead routing information for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_100, "Computing lookahead routing information for flit ", 49);
  goto <bb 73>;

<L50>:
  goto <bb 81> (<L37>);

  <bb 73>:
  _67 = std::basic_ostream<char>::operator<< (_100, _58);
  goto <bb 75>;

<L51>:
  goto <bb 81> (<L37>);

  <bb 75>:
  # DEBUG __out => _67
  # DEBUG __s => " (NOQ)."
  # DEBUG __s => " (NOQ)."
  std::__ostream_insert<char, std::char_traits<char> > (_67, " (NOQ).", 7);
  goto <bb 77>;

<L52>:
  goto <bb 81> (<L37>);

  <bb 77>:
  # DEBUG this => _67
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_67);
  goto <bb 60>;

<L53>:
  goto <bb 81> (<L37>);

  <bb 79>:
  # prephitmp_210 = PHI <prephitmp_212(20), pretmp_218(60)>
  # DEBUG this => &sl
  # DEBUG this => &sl._M_t
  # DEBUG D#89 => &sl._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&sl._M_t, prephitmp_210);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&sl]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  sl ={v} {CLOBBER};
  return;

<L42>:

<L37>:
  # DEBUG this => &nos
  # DEBUG D#1121 => &nos._outputs
  # DEBUG this => D#1121
  # DEBUG this => &MEM[(struct set *)&nos]._M_t
  _103 = MEM[(struct _Rb_tree_node_base * *)&nos + 16B];
  # DEBUG D#89 => &MEM[(struct set *)&nos]._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&MEM[(struct set *)&nos]._M_t, _103);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&nos]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  resx 6

<L39>:
  nos ={v} {CLOBBER};
  # DEBUG this => &sl
  # DEBUG this => &sl._M_t
  _104 = MEM[(struct _Rb_tree_node_base * *)&sl + 16B];
  # DEBUG D#89 => &sl._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&sl._M_t, _104);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&sl]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  resx 2

}



;; Function void IQRouter::_InputQueuing() (_ZN8IQRouter13_InputQueuingEv, funcdef_no=2240, decl_uid=51692, cgraph_uid=685, symbol_order=686)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void IQRouter::_InputQueuing() (struct IQRouter * const this)
{
  char_type D.123997;
  char __c;
  char_type D.123994;
  char __c;
  char_type D.123991;
  struct basic_ostream & D.123985;
  int D.123974;
  char_type D.123965;
  char __c;
  char_type D.123962;
  char __c;
  char_type D.123959;
  struct basic_ostream & D.123953;
  struct basic_ostream & D.123950;
  struct basic_ostream & D.123937;
  const struct _Rb_tree_node_base * const iter$_M_node;
  struct BufferState * const dest_buf;
  const int output;
  struct Credit * const c;
  const int time;
  struct Buffer * const cur_buf;
  const int vc;
  struct Flit * const f;
  const int input;
  static const char __PRETTY_FUNCTION__[31] = "void IQRouter::_InputQueuing()";
  struct pair D.64707;
  struct pair D.64704;
  struct pair D.64701;
  struct pair D.64698;
  struct pair D.64565;
  long int _17;
  int _19;
  int _24;
  long unsigned int _25;
  const eVCState _26;
  bool _28;
  struct VC * _29;
  int _30;
  const char * _31;
  int _32;
  struct VC * const & _33;
  int _35;
  struct ostream * gWatchOut.286_36;
  struct basic_ostream & _38;
  const size_type _39;
  struct basic_ostream & _41;
  struct basic_ostream & _43;
  struct basic_ostream & _45;
  int (*__vtbl_ptr_type) () * _46;
  long unsigned int _47;
  struct ostream * gWatchOut.286_48;
  int (*__vtbl_ptr_type) () * _49;
  struct VC * * const _50;
  long unsigned int _51;
  int _52;
  struct ostream * gWatchOut.286_53;
  struct ostream * gWatchOut.286_56;
  struct BufferMonitor * _59;
  struct Buffer * & _61;
  long unsigned int _62;
  int pretmp_63;
  bool _64;
  int _65;
  int _66;
  int _67;
  int _68;
  long unsigned int _69;
  int _70;
  int _71;
  bool _72;
  int _73;
  int _76;
  struct ostream * gWatchOut.286_77;
  struct basic_ostream & _79;
  const size_type _80;
  struct basic_ostream & _84;
  struct basic_ostream & _86;
  struct basic_ostream & _88;
  struct OutputSet * _89;
  bool _90;
  struct deque * _91;
  struct pair * _92;
  struct Allocator * _94;
  struct deque * _95;
  struct pair * _96;
  bool _98;
  struct deque * _100;
  int (*__vtbl_ptr_type) () * _101;
  int _107;
  int _108;
  int _109;
  int _110;
  long unsigned int _111;
  int _112;
  struct deque * _114;
  struct pair * _115;
  struct deque * _117;
  struct pair * _118;
  struct _Rep_type * _120;
  struct pair * const _125;
  int _128;
  int _131;
  long unsigned int _132;
  struct Buffer * * _139;
  struct BufferState * * _140;
  int * _141;
  int * _142;
  char * const _143;
  struct basic_ostream & _144;
  struct Flit * iftmp.304_150;
  struct VC * * const _154;
  struct VC * const & _156;
  struct VC * _157;
  const eVCState _158;
  struct Flit * * const _159;
  struct Flit * * const _160;
  struct Flit * iftmp.304_161;
  long unsigned int _163;
  int & _164;
  long int _165;
  char * const _166;
  struct basic_ostream & _167;
  struct VC * * _174;
  struct VC * & _175;
  struct VC * _176;
  struct Flit * * const _177;
  struct Flit * * const _178;
  struct Flit * iftmp.304_179;
  struct _Rb_tree_node_base * _180;
  long unsigned int _181;
  int & _182;
  struct _Rb_tree_node_base * _183;
  struct pair * const pretmp_184;
  struct pair * _186;
  struct pair * _187;
  struct pair * _188;
  struct pair * _189;
  long unsigned int _190;
  struct BufferState * & _191;
  const struct __ctype_type * _204;
  const struct __ctype_type * _212;
  size_t _231;
  long int _232;
  long int _233;
  sizetype _234;
  struct basic_ios * _235;
  const iostate _236;
  int __a.73_237;
  int _238;
  _Ios_Iostate _239;
  long int _242;
  sizetype _243;
  struct basic_ios * _244;
  struct basic_ostream & _247;
  char _249;
  char_type _252;
  int (*__vtbl_ptr_type) () * _257;
  int (*__vtbl_ptr_type) () _258;
  void * PROF_262;
  char_type _264;
  int _266;
  int prephitmp_271;
  struct Flit * * * _272;
  long int _273;
  struct Flit * * * _274;
  long int _275;
  long int _276;
  long int _277;
  long int _278;
  long int _279;
  long int _281;
  struct Flit * * _282;
  long int _283;
  long int _284;
  long int _285;
  long int _286;
  struct Flit * * _287;
  long int _288;
  int _289;
  long int _290;
  long int _291;
  long int _292;
  difference_type _293;
  int _294;
  struct pair * _295;
  struct pair * _296;
  struct pair * _297;
  struct pair * _298;
  long int _299;
  sizetype _300;
  struct basic_ios * _301;
  int pretmp_302;
  struct basic_ostream & _304;
  char _306;
  struct VC * _308;
  char_type _309;
  struct VC * * const _310;
  struct VC * const & _313;
  int (*__vtbl_ptr_type) () * _314;
  int (*__vtbl_ptr_type) () _315;
  void * PROF_319;
  char_type _321;
  struct VC * * pretmp_322;
  struct VC * prephitmp_323;
  struct pair * _324;
  struct pair * _325;
  struct pair * _326;
  struct pair * _327;
  struct pair * _328;
  struct pair * _329;
  struct pair * _330;
  struct pair * _331;
  struct pair * _332;
  struct pair * _333;
  struct pair * _334;
  struct pair * _335;
  struct pair * _336;
  struct pair * * _337;
  struct pair * * _338;
  struct pair * _339;
  struct pair * _340;
  struct pair * const prephitmp_355;
  int prephitmp_357;
  long unsigned int prephitmp_361;
  long unsigned int pretmp_362;
  int pretmp_367;
  struct VC * pretmp_370;
  struct VC * * pretmp_397;
  struct Flit * * const _408;
  struct Flit * * const _409;
  int pretmp_413;
  long unsigned int pretmp_416;
  struct pair * const prephitmp_419;

  <bb 2>:
  # DEBUG D#1869 => &this_12(D)->_in_queue_flits
  # DEBUG this => D#1869
  # DEBUG D#226 => &D#1869->_M_t
  iter$_M_node_14 = MEM[(struct _Rb_tree_node_base * *)this_12(D) + 328B];
  # DEBUG D#225 => D#226
  # DEBUG this => D#225
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_14
  # DEBUG this => &iter
  # DEBUG __it => &D.64416
  # DEBUG iter$_M_node => iter$_M_node_14
  # DEBUG iter$_M_node => iter$_M_node_14
  # DEBUG D#1879 => &this_12(D)->_in_queue_flits
  # DEBUG this => D#1879
  # DEBUG D#227 => &D#1879->_M_t
  # DEBUG this => D#227
  _180 = &MEM[(struct _Rb_tree *)this_12(D) + 304B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _180
  # DEBUG this => &D.64428
  # DEBUG __it => &D.64427
  # DEBUG this => &iter
  # DEBUG __x => &D.64428
  if (iter$_M_node_14 != _180)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG D#1884 => {CLOBBER}
  # DEBUG iter$_M_node => D#1884
  # DEBUG D#1885 => &this_12(D)->_in_queue_flits
  # DEBUG this => D#1885
  _120 = &MEM[(struct map *)this_12(D) + 304B]._M_t;
  # DEBUG this => _120
  _183 = MEM[(struct _Rb_tree_node_base * *)this_12(D) + 320B];
  # DEBUG D#99 => _120
  # DEBUG this => D#99
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_120, _183);
  # DEBUG D#1135 => &MEM[(struct _Rb_tree *)_120]._M_impl
  # DEBUG this => D#1135
  MEM[(struct _Rb_tree_impl *)this_12(D) + 304B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_12(D) + 304B]._M_header._M_left = _180;
  MEM[(struct _Rb_tree_impl *)this_12(D) + 304B]._M_header._M_right = _180;
  MEM[(struct _Rb_tree_impl *)this_12(D) + 304B]._M_node_count = 0;
  pretmp_184 = MEM[(struct pair * *)this_12(D) + 368B];
  goto <bb 94>;

  <bb 4>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_14
  # DEBUG D#1870 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_14]._M_value_field
  # DEBUG __r => D#1870
  input_162 = MEM[(const struct pair *)iter$_M_node_14 + 32B].first;
  # DEBUG input => input_162
  if (input_162 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 346, &__PRETTY_FUNCTION__);

  <bb 6>:
  _289 = this_12(D)->D.51790._inputs;
  if (input_162 >= _289)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 7>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_14
  # DEBUG D#1871 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_14]._M_value_field
  # DEBUG __r => D#1871
  f_270 = MEM[(const struct pair *)iter$_M_node_14 + 32B].second;
  # DEBUG f => f_270
  if (f_270 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __assert_fail ("f", "routers/iq_router.cpp", 349, &__PRETTY_FUNCTION__);

  <bb 9>:
  vc_360 = f_270->vc;
  # DEBUG vc => vc_360
  if (vc_360 < 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 352, &__PRETTY_FUNCTION__);

  <bb 11>:
  _266 = this_12(D)->_vcs;
  if (_266 <= vc_360)
    goto <bb 10>;
  else
    goto <bb 18>;

  <bb 12>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_113
  # DEBUG D#1870 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_113]._M_value_field
  # DEBUG __r => D#1870
  input_18 = MEM[(const struct pair *)iter$_M_node_113 + 32B].first;
  # DEBUG input => input_18
  if (input_18 < 0)
    goto <bb 5>;
  else
    goto <bb 13>;

  <bb 13>:
  _19 = this_12(D)->D.51790._inputs;
  if (input_18 >= _19)
    goto <bb 5>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_113
  # DEBUG D#1871 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_113]._M_value_field
  # DEBUG __r => D#1871
  f_22 = MEM[(const struct pair *)iter$_M_node_113 + 32B].second;
  # DEBUG f => f_22
  if (f_22 == 0B)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 15>:
  vc_23 = f_22->vc;
  # DEBUG vc => vc_23
  if (vc_23 < 0)
    goto <bb 10>;
  else
    goto <bb 16>;

  <bb 16>:
  _24 = this_12(D)->_vcs;
  if (vc_23 >= _24)
    goto <bb 10>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 19>;

  <bb 18>:

  <bb 19>:
  # input_151 = PHI <input_162(18), input_18(17)>
  # f_149 = PHI <f_270(18), f_22(17)>
  # vc_148 = PHI <vc_360(18), vc_23(17)>
  # iter$_M_node_147 = PHI <iter$_M_node_14(18), iter$_M_node_113(17)>
  # DEBUG iter$_M_node => iter$_M_node_147
  # DEBUG D#1879 => &this_12(D)->_in_queue_flits
  # DEBUG this => D#1879
  # DEBUG D#227 => &D#1879->_M_t
  # DEBUG this => D#227
  # DEBUG this => NULL
  # DEBUG __x => _180
  # DEBUG this => &D.64428
  # DEBUG __it => &D.64427
  # DEBUG this => &iter
  # DEBUG __x => &D.64428
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_147
  # DEBUG D#1870 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_147]._M_value_field
  # DEBUG input => input_151
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_147
  # DEBUG D#1871 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_147]._M_value_field
  # DEBUG __r => D#1871
  # DEBUG f => f_149
  # DEBUG vc => vc_148
  _25 = (long unsigned int) input_151;
  # DEBUG D#1872 => &this_12(D)->_buf
  _139 = MEM[(struct Buffer * * *)this_12(D) + 880B];
  # DEBUG D#53 => D#1872
  # DEBUG __n => _25
  # DEBUG this => D#53
  _62 = _25 * 8;
  _61 = _139 + _62;
  cur_buf_27 = *_61;
  # DEBUG cur_buf => cur_buf_27
  _28 = f_149->watch;
  if (_28 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_416 = (long unsigned int) vc_148;
  pretmp_362 = pretmp_416 * 8;
  goto <bb 35>;

  <bb 21>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  _51 = (long unsigned int) vc_148;
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  _50 = MEM[(struct VC * * *)cur_buf_27 + 104B];
  # DEBUG D#42 => D#43
  # DEBUG __n => _51
  # DEBUG this => D#42
  _47 = _51 * 8;
  _33 = _50 + _47;
  _29 = *_33;
  _26 = MEM[(eVCState *)_29 + 176B];
  # DEBUG D#21 => _29
  # DEBUG this => D#21
  _30 = (int) _26;
  _31 = VCSTATE[_30];
  _32 = f_149->id;
  # DEBUG D#1873 => &this_12(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1873
  # DEBUG D#1874 => &MEM[(const struct Module *)this_12(D)]._fullname
  _35 = GetSimTime ();
  gWatchOut.286_36 = gWatchOut;
  _38 = std::basic_ostream<char>::operator<< (gWatchOut.286_36, _35);
  # DEBUG __out => _38
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_38, " | ", 3);
  # DEBUG __os => _38
  # DEBUG __str => D#1874
  _39 = MEM[(long unsigned int *)this_12(D) + 48B];
  # DEBUG D#3 => D#1874
  # DEBUG this => D#3
  _17 = (long int) _39;
  # DEBUG this => D#1874
  _143 = MEM[(char * *)this_12(D) + 40B];
  # DEBUG D#1 => D#1874
  # DEBUG this => D#1
  _144 = std::__ostream_insert<char, std::char_traits<char> > (_38, _143, _17);
  # DEBUG __out => _144
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_144, " | ", 3);
  # DEBUG __out => _144
  # DEBUG __s => "Adding flit "
  # DEBUG __s => "Adding flit "
  std::__ostream_insert<char, std::char_traits<char> > (_144, "Adding flit ", 12);
  _41 = std::basic_ostream<char>::operator<< (_144, _32);
  # DEBUG __out => _41
  # DEBUG __s => " to VC "
  # DEBUG __s => " to VC "
  std::__ostream_insert<char, std::char_traits<char> > (_41, " to VC ", 7);
  _43 = std::basic_ostream<char>::operator<< (_41, vc_148);
  # DEBUG __out => _43
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_43, " at input ", 10);
  _45 = std::basic_ostream<char>::operator<< (_43, input_151);
  # DEBUG __out => _45
  # DEBUG __s => " (state: "
  # DEBUG __s => " (state: "
  std::__ostream_insert<char, std::char_traits<char> > (_45, " (state: ", 9);
  # DEBUG __out => _45
  # DEBUG __s => _31
  if (_31 == 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#17 => 0B
  # DEBUG __out => _45
  # DEBUG D#18 => D#17
  # DEBUG __s => D#18
  _46 = _45->_vptr.basic_ostream;
  _233 = MEM[(long int *)_46 + -24B];
  _234 = (sizetype) _233;
  _235 = _45 + _234;
  # DEBUG this => _235
  # DEBUG __state => 1
  _236 = MEM[(_Ios_Iostate *)_235 + 32B];
  # DEBUG D#4 => _235
  # DEBUG this => D#4
  # DEBUG __a => _236
  # DEBUG __b => 1
  __a.73_237 = (int) _236;
  _238 = __a.73_237 | 1;
  _239 = (_Ios_Iostate) _238;
  std::basic_ios<char>::clear (_235, _239);
  goto <bb 105>;

  <bb 23>:
  # DEBUG __s => _31
  _231 = __builtin_strlen (_31);
  _232 = (long int) _231;
  std::__ostream_insert<char, std::char_traits<char> > (_45, _31, _232);
  goto <bb 105>;

  <bb 24>:
  gWatchOut.286_48 = gWatchOut;
  # DEBUG __out => gWatchOut.286_48
  # DEBUG __s => ", empty"
  # DEBUG __s => ", empty"
  std::__ostream_insert<char, std::char_traits<char> > (gWatchOut.286_48, ", empty", 7);
  goto <bb 28>;

  <bb 25>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _51
  # DEBUG this => D#42
  # DEBUG this => _308
  # DEBUG D#184 => &MEM[(const struct VC *)_308]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _51
  # DEBUG this => D#42
  # DEBUG this => _308
  # DEBUG D#184 => &MEM[(const struct VC *)_308]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_308]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_150 = MEM[(struct Flit * const &)_409];
  if (iftmp.304_150 == 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  __assert_fail ("cur_buf->FrontFlit(vc)", "routers/iq_router.cpp", 365, &__PRETTY_FUNCTION__);

  <bb 27>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _51
  # DEBUG this => D#42
  # DEBUG this => _308
  # DEBUG D#184 => &MEM[(const struct VC *)_308]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_308]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  _52 = iftmp.304_150->id;
  gWatchOut.286_53 = gWatchOut;
  # DEBUG __out => gWatchOut.286_53
  # DEBUG __s => ", front: "
  # DEBUG __s => ", front: "
  std::__ostream_insert<char, std::char_traits<char> > (gWatchOut.286_53, ", front: ", 9);
  std::basic_ostream<char>::operator<< (gWatchOut.286_53, _52);

  <bb 28>:
  gWatchOut.286_56 = gWatchOut;
  # DEBUG __out => gWatchOut.286_56
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (gWatchOut.286_56, ").", 2);
  # DEBUG this => gWatchOut.286_56
  # DEBUG __pf => endl
  # DEBUG __os => gWatchOut.286_56
  _49 = MEM[(struct basic_ostream *)gWatchOut.286_56]._vptr.basic_ostream;
  _242 = MEM[(long int *)_49 + -24B];
  _243 = (sizetype) _242;
  _244 = gWatchOut.286_56 + _243;
  # DEBUG this => _244
  # DEBUG __c => 10
  _204 = MEM[(const struct basic_ios *)_244]._M_ctype;
  # DEBUG __f => _204
  if (_204 == 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  std::__throw_bad_cast ();

  <bb 30>:
  # DEBUG this => _204
  # DEBUG __c => 10
  _249 = MEM[(const struct ctype *)_204]._M_widen_ok;
  if (_249 != 0)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  _252 = MEM[(const struct ctype *)_204]._M_widen[10];
  pretmp_367 = (int) _252;
  goto <bb 34>;

  <bb 32>:
  # DEBUG this => _204
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_204);
  _257 = MEM[(const struct ctype *)_204].D.24721._vptr.facet;
  _258 = MEM[(int (*__vtbl_ptr_type) () *)_257 + 48B];
  PROF_262 = [obj_type_ref] OBJ_TYPE_REF(_258;(const struct ctype)_204->6);
  if (PROF_262 == do_widen)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  _264 = OBJ_TYPE_REF(_258;(const struct ctype)_204->6) (_204, 10);
  pretmp_63 = (int) _264;

  <bb 34>:
  # prephitmp_357 = PHI <pretmp_367(31), 10(32), pretmp_63(33)>
  _247 = std::basic_ostream<char>::put (gWatchOut.286_56, prephitmp_357);
  # DEBUG __os => _247
  std::basic_ostream<char>::flush (_247);

  <bb 35>:
  # prephitmp_361 = PHI <pretmp_362(20), _47(34)>
  Buffer::AddFlit (cur_buf_27, vc_148, f_149);
  _59 = this_12(D)->_bufferMonitor;
  BufferMonitor::write (_59, input_151, f_149);
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#2610 => (long unsigned int) vc_148
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  _154 = MEM[(struct VC * * *)cur_buf_27 + 104B];
  # DEBUG D#42 => D#43
  # DEBUG __n => D#2610
  # DEBUG this => D#42
  _156 = _154 + prephitmp_361;
  _157 = *_156;
  _158 = MEM[(eVCState *)_157 + 176B];
  # DEBUG D#21 => _157
  # DEBUG this => D#21
  if (_158 == 0)
    goto <bb 36>;
  else
    goto <bb 76>;

  <bb 36>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => D#2610
  # DEBUG this => D#42
  # DEBUG this => _157
  # DEBUG D#184 => &MEM[(const struct VC *)_157]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  _159 = MEM[(struct Flit * * *)_157 + 144B];
  # DEBUG D#91 => D#94
  _160 = MEM[(struct Flit * * *)_157 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_159 == _160)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  # DEBUG D#185 => &MEM[(const struct VC *)_157]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_161 = MEM[(struct Flit * const &)_160];
  if (f_149 != iftmp.304_161)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  __assert_fail ("cur_buf->FrontFlit(vc) == f", "routers/iq_router.cpp", 380, &__PRETTY_FUNCTION__);

  <bb 39>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#204 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  # DEBUG D#42 => D#204
  # DEBUG __n => D#2610
  # DEBUG this => D#42
  # DEBUG this => _157
  # DEBUG D#203 => &MEM[(const struct VC *)_157]._buffer
  # DEBUG this => D#203
  # DEBUG D#201 => &D#203->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#203->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _272 = MEM[(const struct _Deque_iterator &)_157 + 144]._M_node;
  _273 = (long int) _272;
  _274 = MEM[(const struct _Deque_iterator &)_157 + 112]._M_node;
  _275 = (long int) _274;
  _276 = _273 - _275;
  _277 = _276 /[ex] 8;
  _278 = _277 + -1;
  _279 = _278 * 64;
  _281 = (long int) _159;
  _282 = MEM[(const struct _Deque_iterator &)_157 + 144]._M_first;
  _283 = (long int) _282;
  _284 = _281 - _283;
  _285 = _284 /[ex] 8;
  _286 = _279 + _285;
  _287 = MEM[(const struct _Deque_iterator &)_157 + 112]._M_last;
  _288 = (long int) _287;
  _290 = (long int) _160;
  _291 = _288 - _290;
  _292 = _291 /[ex] 8;
  _293 = _286 + _292;
  _294 = (int) _293;
  if (_294 != 1)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  __assert_fail ("cur_buf->GetOccupancy(vc) == 1", "routers/iq_router.cpp", 381, &__PRETTY_FUNCTION__);

  <bb 41>:
  _64 = f_149->head;
  if (_64 != 0)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 382, &__PRETTY_FUNCTION__);

  <bb 43>:
  _65 = this_12(D)->D.51790._input_speedup;
  _66 = _65 * input_151;
  _67 = vc_148 % _65;
  _68 = _66 + _67;
  _69 = (long unsigned int) _68;
  # DEBUG D#1875 => &this_12(D)->_switch_hold_vc
  _141 = MEM[(int * *)this_12(D) + 1120B];
  # DEBUG D#55 => D#1875
  # DEBUG __n => _69
  # DEBUG this => D#55
  _163 = _69 * 4;
  _164 = _141 + _163;
  _70 = *_164;
  if (_70 == vc_148)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  __assert_fail ("_switch_hold_vc[input*_input_speedup + vc%_input_speedup] != vc", "routers/iq_router.cpp", 383, &__PRETTY_FUNCTION__);

  <bb 45>:
  _71 = this_12(D)->_routing_delay;
  if (_71 != 0)
    goto <bb 46>;
  else
    goto <bb 52>;

  <bb 46>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG s => 1
  # DEBUG D#38 => &cur_buf_27->_vc
  # DEBUG D#36 => D#38
  # DEBUG __n => D#2610
  # DEBUG this => D#36
  VC::SetState (_157, 1);
  # DEBUG __x => input_151
  # DEBUG __y => vc_148
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => input_151
  # DEBUG __y$4 => vc_148
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.64565] = -1;
  MEM[(struct pair *)&D.64565 + 4B] = input_151;
  MEM[(struct pair *)&D.64565 + 8B] = vc_148;
  # DEBUG D#2615 => &this_12(D)->_route_vcs
  # DEBUG this => D#2615
  # DEBUG __x => &D.64565
  _295 = MEM[(struct deque *)this_12(D) + 432B].D.45014._M_impl._M_finish._M_cur;
  _296 = MEM[(struct deque *)this_12(D) + 432B].D.45014._M_impl._M_finish._M_last;
  _297 = _296 + 18446744073709551604;
  if (_295 != _297)
    goto <bb 47>;
  else
    goto <bb 50>;

  <bb 47>:
  # DEBUG D#1458 => &D#2615->D.45014._M_impl
  # DEBUG D#233 => D#1458
  # DEBUG __p => _295
  # DEBUG __arg => &D.64565
  # DEBUG __a => D#233
  # DEBUG D#232 => D#233
  # DEBUG D#231 => D#232
  # DEBUG __p => _295
  # DEBUG __val => &D.64565
  # DEBUG this => D#231
  # DEBUG D#12 => 12
  # DEBUG __p => _295
  # DEBUG D.93790 => D#12
  if (_295 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  *_295 = D.64565;

  <bb 49>:
  _298 = _295 + 12;
  MEM[(struct deque *)this_12(D) + 432B].D.45014._M_impl._M_finish._M_cur = _298;
  goto <bb 51>;

  <bb 50>:
  _100 = &this_12(D)->_route_vcs;
  std::deque<std::pair<int, std::pair<int, int> > >::_M_push_back_aux (_100, &D.64565);

  <bb 51>:
  D.64565 ={v} {CLOBBER};
  goto <bb 92>;

  <bb 52>:
  _72 = f_149->watch;
  if (_72 != 0)
    goto <bb 53>;
  else
    goto <bb 59>;

  <bb 53>:
  _73 = f_149->id;
  # DEBUG D#1876 => &this_12(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1876
  # DEBUG D#1877 => &MEM[(const struct Module *)this_12(D)]._fullname
  _76 = GetSimTime ();
  gWatchOut.286_77 = gWatchOut;
  _79 = std::basic_ostream<char>::operator<< (gWatchOut.286_77, _76);
  # DEBUG __out => _79
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_79, " | ", 3);
  # DEBUG __os => _79
  # DEBUG __str => D#1877
  _80 = MEM[(long unsigned int *)this_12(D) + 48B];
  # DEBUG D#3 => D#1877
  # DEBUG this => D#3
  _165 = (long int) _80;
  # DEBUG this => D#1877
  _166 = MEM[(char * *)this_12(D) + 40B];
  # DEBUG D#1 => D#1877
  # DEBUG this => D#1
  _167 = std::__ostream_insert<char, std::char_traits<char> > (_79, _166, _165);
  # DEBUG __out => _167
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_167, " | ", 3);
  # DEBUG __out => _167
  # DEBUG __s => "Using precomputed lookahead routing information for VC "
  # DEBUG __s => "Using precomputed lookahead routing information for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_167, "Using precomputed lookahead routing information for VC ", 55);
  _84 = std::basic_ostream<char>::operator<< (_167, vc_148);
  # DEBUG __out => _84
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_84, " at input ", 10);
  _86 = std::basic_ostream<char>::operator<< (_84, input_151);
  # DEBUG __out => _86
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_86, " (front: ", 9);
  _88 = std::basic_ostream<char>::operator<< (_86, _73);
  # DEBUG __out => _88
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_88, ").", 2);
  # DEBUG this => _88
  # DEBUG __pf => endl
  # DEBUG __os => _88
  _101 = _88->_vptr.basic_ostream;
  _299 = MEM[(long int *)_101 + -24B];
  _300 = (sizetype) _299;
  _301 = _88 + _300;
  # DEBUG this => _301
  # DEBUG __c => 10
  _212 = MEM[(const struct basic_ios *)_301]._M_ctype;
  # DEBUG __f => _212
  if (_212 == 0B)
    goto <bb 29>;
  else
    goto <bb 54>;

  <bb 54>:
  # DEBUG this => _212
  # DEBUG __c => 10
  _306 = MEM[(const struct ctype *)_212]._M_widen_ok;
  if (_306 != 0)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  _309 = MEM[(const struct ctype *)_212]._M_widen[10];
  pretmp_413 = (int) _309;
  goto <bb 58>;

  <bb 56>:
  # DEBUG this => _212
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_212);
  _314 = MEM[(const struct ctype *)_212].D.24721._vptr.facet;
  _315 = MEM[(int (*__vtbl_ptr_type) () *)_314 + 48B];
  PROF_319 = [obj_type_ref] OBJ_TYPE_REF(_315;(const struct ctype)_212->6);
  if (PROF_319 == do_widen)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:
  _321 = OBJ_TYPE_REF(_315;(const struct ctype)_212->6) (_212, 10);
  pretmp_302 = (int) _321;

  <bb 58>:
  # prephitmp_271 = PHI <pretmp_413(55), 10(56), pretmp_302(57)>
  _304 = std::basic_ostream<char>::put (_88, prephitmp_271);
  # DEBUG __os => _304
  std::basic_ostream<char>::flush (_304);
  pretmp_322 = MEM[(struct VC * * *)cur_buf_27 + 104B];
  pretmp_397 = pretmp_322 + prephitmp_361;
  pretmp_370 = *pretmp_397;

  <bb 59>:
  # prephitmp_323 = PHI <_157(52), pretmp_370(58)>
  _89 = &f_149->la_route_set;
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG output_set => _89
  # DEBUG D#37 => &cur_buf_27->_vc
  # DEBUG D#36 => D#37
  # DEBUG __n => D#2610
  # DEBUG this => D#36
  VC::SetRouteSet (prephitmp_323, _89);
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG s => 2
  # DEBUG D#38 => &cur_buf_27->_vc
  _174 = MEM[(struct VC * * *)cur_buf_27 + 104B];
  # DEBUG D#36 => D#38
  # DEBUG __n => D#2610
  # DEBUG this => D#36
  _175 = _174 + prephitmp_361;
  _176 = *_175;
  VC::SetState (_176, 2);
  _90 = this_12(D)->_speculative;
  if (_90 != 0)
    goto <bb 60>;
  else
    goto <bb 66>;

  <bb 60>:
  # DEBUG __x => input_151
  # DEBUG __y => vc_148
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => input_151
  # DEBUG __x$4 => vc_148
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => input_151
  # DEBUG __y$4 => vc_148
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.64698] = -1;
  MEM[(struct pair *)&D.64698 + 4B] = input_151;
  MEM[(struct pair *)&D.64698 + 8B] = vc_148;
  MEM[(struct pair *)&D.64698 + 12B] = -1;
  # DEBUG D#2614 => &this_12(D)->_sw_alloc_vcs
  # DEBUG this => D#2614
  # DEBUG __x => &D.64698
  _324 = MEM[(struct deque *)this_12(D) + 672B].D.45936._M_impl._M_finish._M_cur;
  _325 = MEM[(struct deque *)this_12(D) + 672B].D.45936._M_impl._M_finish._M_last;
  _326 = _325 + 18446744073709551600;
  if (_324 != _326)
    goto <bb 61>;
  else
    goto <bb 64>;

  <bb 61>:
  # DEBUG D#1467 => &D#2614->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _324
  # DEBUG __arg => &D.64698
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _324
  # DEBUG __val => &D.64698
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _324
  # DEBUG D.93816 => D#12
  if (_324 != 0B)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  *_324 = D.64698;

  <bb 63>:
  _327 = _324 + 16;
  MEM[(struct deque *)this_12(D) + 672B].D.45936._M_impl._M_finish._M_cur = _327;
  goto <bb 65>;

  <bb 64>:
  _91 = &this_12(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_91, &D.64698);

  <bb 65>:
  D.64698 ={v} {CLOBBER};

  <bb 66>:
  _94 = this_12(D)->_vc_allocator;
  if (_94 != 0B)
    goto <bb 67>;
  else
    goto <bb 73>;

  <bb 67>:
  # DEBUG __x => input_151
  # DEBUG __y => vc_148
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => input_151
  # DEBUG __x$4 => vc_148
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => input_151
  # DEBUG __y$4 => vc_148
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.64701] = -1;
  MEM[(struct pair *)&D.64701 + 4B] = input_151;
  MEM[(struct pair *)&D.64701 + 8B] = vc_148;
  MEM[(struct pair *)&D.64701 + 12B] = -1;
  # DEBUG D#2613 => &this_12(D)->_vc_alloc_vcs
  # DEBUG this => D#2613
  # DEBUG __x => &D.64701
  _92 = MEM[(struct deque *)this_12(D) + 512B].D.45936._M_impl._M_finish._M_cur;
  _328 = MEM[(struct deque *)this_12(D) + 512B].D.45936._M_impl._M_finish._M_last;
  _329 = _328 + 18446744073709551600;
  if (_92 != _329)
    goto <bb 68>;
  else
    goto <bb 71>;

  <bb 68>:
  # DEBUG D#1467 => &D#2613->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _92
  # DEBUG __arg => &D.64701
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _92
  # DEBUG __val => &D.64701
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _92
  # DEBUG D.93816 => D#12
  if (_92 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  *_92 = D.64701;

  <bb 70>:
  _330 = _92 + 16;
  MEM[(struct deque *)this_12(D) + 512B].D.45936._M_impl._M_finish._M_cur = _330;
  goto <bb 72>;

  <bb 71>:
  _95 = &this_12(D)->_vc_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_95, &D.64701);

  <bb 72>:
  D.64701 ={v} {CLOBBER};

  <bb 73>:
  _98 = this_12(D)->_noq;
  if (_98 != 0)
    goto <bb 75>;
  else
    goto <bb 74>;

  <bb 74>:
  goto <bb 92>;

  <bb 75>:
  IQRouter::_UpdateNOQ (this_12(D), input_151, vc_148, f_149);
  goto <bb 92>;

  <bb 76>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  # DEBUG D#42 => D#43
  # DEBUG __n => D#2610
  # DEBUG this => D#42
  # DEBUG D#21 => _157
  # DEBUG this => D#21
  if (_158 == 3)
    goto <bb 77>;
  else
    goto <bb 74>;

  <bb 77>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => D#2610
  # DEBUG this => D#42
  # DEBUG this => _157
  # DEBUG D#184 => &MEM[(const struct VC *)_157]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  _177 = MEM[(struct Flit * * *)_157 + 144B];
  # DEBUG D#91 => D#94
  _178 = MEM[(struct Flit * * *)_157 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_177 == _178)
    goto <bb 74>;
  else
    goto <bb 78>;

  <bb 78>:
  # DEBUG D#185 => &MEM[(const struct VC *)_157]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_179 = MEM[(struct Flit * const &)_178];
  if (f_149 == iftmp.304_179)
    goto <bb 79>;
  else
    goto <bb 74>;

  <bb 79>:
  _107 = this_12(D)->D.51790._input_speedup;
  _108 = _107 * input_151;
  _109 = vc_148 % _107;
  _110 = _108 + _109;
  _111 = (long unsigned int) _110;
  # DEBUG D#1878 => &this_12(D)->_switch_hold_vc
  _142 = MEM[(int * *)this_12(D) + 1120B];
  # DEBUG D#55 => D#1878
  # DEBUG __n => _111
  # DEBUG this => D#55
  _181 = _111 * 4;
  _182 = _142 + _181;
  _112 = *_182;
  if (_112 == vc_148)
    goto <bb 80>;
  else
    goto <bb 86>;

  <bb 80>:
  # DEBUG __x => input_151
  # DEBUG __y => vc_148
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => input_151
  # DEBUG __x$4 => vc_148
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => input_151
  # DEBUG __y$4 => vc_148
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.64704] = -1;
  MEM[(struct pair *)&D.64704 + 4B] = input_151;
  MEM[(struct pair *)&D.64704 + 8B] = vc_148;
  MEM[(struct pair *)&D.64704 + 12B] = -1;
  # DEBUG D#2612 => &this_12(D)->_sw_hold_vcs
  # DEBUG this => D#2612
  # DEBUG __x => &D.64704
  _96 = MEM[(struct deque *)this_12(D) + 592B].D.45936._M_impl._M_finish._M_cur;
  _331 = MEM[(struct deque *)this_12(D) + 592B].D.45936._M_impl._M_finish._M_last;
  _332 = _331 + 18446744073709551600;
  if (_96 != _332)
    goto <bb 81>;
  else
    goto <bb 84>;

  <bb 81>:
  # DEBUG D#1467 => &D#2612->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _96
  # DEBUG __arg => &D.64704
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _96
  # DEBUG __val => &D.64704
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _96
  # DEBUG D.93816 => D#12
  if (_96 != 0B)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  *_96 = D.64704;

  <bb 83>:
  _333 = _96 + 16;
  MEM[(struct deque *)this_12(D) + 592B].D.45936._M_impl._M_finish._M_cur = _333;
  goto <bb 85>;

  <bb 84>:
  _117 = &this_12(D)->_sw_hold_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_117, &D.64704);

  <bb 85>:
  D.64704 ={v} {CLOBBER};
  goto <bb 92>;

  <bb 86>:
  # DEBUG __x => input_151
  # DEBUG __y => vc_148
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => input_151
  # DEBUG __x$4 => vc_148
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => input_151
  # DEBUG __y$4 => vc_148
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.64707] = -1;
  MEM[(struct pair *)&D.64707 + 4B] = input_151;
  MEM[(struct pair *)&D.64707 + 8B] = vc_148;
  MEM[(struct pair *)&D.64707 + 12B] = -1;
  # DEBUG D#2611 => &this_12(D)->_sw_alloc_vcs
  # DEBUG this => D#2611
  # DEBUG __x => &D.64707
  _118 = MEM[(struct deque *)this_12(D) + 672B].D.45936._M_impl._M_finish._M_cur;
  _334 = MEM[(struct deque *)this_12(D) + 672B].D.45936._M_impl._M_finish._M_last;
  _335 = _334 + 18446744073709551600;
  if (_118 != _335)
    goto <bb 87>;
  else
    goto <bb 90>;

  <bb 87>:
  # DEBUG D#1467 => &D#2611->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _118
  # DEBUG __arg => &D.64707
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _118
  # DEBUG __val => &D.64707
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _118
  # DEBUG D.93816 => D#12
  if (_118 != 0B)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  *_118 = D.64707;

  <bb 89>:
  _336 = _118 + 16;
  MEM[(struct deque *)this_12(D) + 672B].D.45936._M_impl._M_finish._M_cur = _336;
  goto <bb 91>;

  <bb 90>:
  _114 = &this_12(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_114, &D.64707);

  <bb 91>:
  D.64707 ={v} {CLOBBER};

  <bb 92>:
  # DEBUG this => &iter
  iter$_M_node_113 = std::_Rb_tree_increment (iter$_M_node_147);
  # DEBUG iter$_M_node => iter$_M_node_113
  # DEBUG iter$_M_node => iter$_M_node_113
  # DEBUG D#1879 => &this_12(D)->_in_queue_flits
  # DEBUG this => D#1879
  # DEBUG D#227 => &D#1879->_M_t
  # DEBUG this => D#227
  # DEBUG this => NULL
  # DEBUG __x => _180
  # DEBUG this => &D.64428
  # DEBUG __it => &D.64427
  # DEBUG this => &iter
  # DEBUG __x => &D.64428
  if (iter$_M_node_113 != _180)
    goto <bb 12>;
  else
    goto <bb 3>;

  <bb 93>:
  # prephitmp_419 = PHI <_339(103), _189(102)>

  <bb 94>:
  # prephitmp_355 = PHI <prephitmp_419(93), pretmp_184(3)>
  # DEBUG D#1882 => &this_12(D)->_proc_credits
  # DEBUG this => D#1882
  # DEBUG D#141 => &MEM[(const struct deque *)D#1882].D.44092._M_impl._M_start
  # DEBUG D#142 => &MEM[(const struct deque *)D#1882].D.44092._M_impl._M_finish
  _125 = MEM[(struct pair * *)this_12(D) + 400B];
  # DEBUG D#139 => D#142
  # DEBUG D#2609 => MEM[(struct pair * *)this_12(D) + 368B]
  # DEBUG D#140 => D#141
  # DEBUG __x => D#139
  # DEBUG __y => D#140
  if (_125 != prephitmp_355)
    goto <bb 95>;
  else
    goto <bb 104>;

  <bb 95>:
  # DEBUG D#1880 => &this_12(D)->_proc_credits
  # DEBUG this => D#1880
  # DEBUG this => D#1880
  # DEBUG D#101 => &D#1880->D.44092._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#101
  # DEBUG D#158 => MEM[(const struct iterator &)D#1880 + 16]._M_first
  # DEBUG D.93115 => D#158
  # DEBUG D#157 => MEM[(const struct iterator &)D#1880 + 16]._M_last
  # DEBUG D.93116 => D#157
  # DEBUG D#156 => MEM[(const struct iterator &)D#1880 + 16]._M_node
  # DEBUG D.93117 => D#156
  # DEBUG this => D#155
  # DEBUG item => D#2609
  time_126 = MEM[(const struct pair &)prephitmp_355].first;
  # DEBUG time => time_126
  _128 = GetSimTime ();
  if (time_126 > _128)
    goto <bb 104>;
  else
    goto <bb 96>;

  <bb 96>:
  c_129 = MEM[(const struct pair &)prephitmp_355].second.first;
  # DEBUG c => c_129
  if (c_129 == 0B)
    goto <bb 97>;
  else
    goto <bb 98>;

  <bb 97>:
  __assert_fail ("c", "routers/iq_router.cpp", 432, &__PRETTY_FUNCTION__);

  <bb 98>:
  output_130 = MEM[(const struct pair &)prephitmp_355].second.second;
  # DEBUG output => output_130
  if (output_130 < 0)
    goto <bb 100>;
  else
    goto <bb 99>;

  <bb 99>:
  _131 = this_12(D)->D.51790._outputs;
  if (output_130 >= _131)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  __assert_fail ("(output >= 0) && (output < _outputs)", "routers/iq_router.cpp", 435, &__PRETTY_FUNCTION__);

  <bb 101>:
  _132 = (long unsigned int) output_130;
  # DEBUG D#1881 => &this_12(D)->_next_buf
  _140 = MEM[(struct BufferState * * *)this_12(D) + 904B];
  # DEBUG D#54 => D#1881
  # DEBUG __n => _132
  # DEBUG this => D#54
  _190 = _132 * 8;
  _191 = _140 + _190;
  dest_buf_133 = *_191;
  # DEBUG dest_buf => dest_buf_133
  BufferState::ProcessCredit (dest_buf_133, c_129);
  Credit::Free (c_129);
  # DEBUG D#2608 => &this_12(D)->_proc_credits
  # DEBUG this => D#2608
  _186 = MEM[(struct deque *)this_12(D) + 352B].D.44092._M_impl._M_start._M_cur;
  _187 = MEM[(struct deque *)this_12(D) + 352B].D.44092._M_impl._M_start._M_last;
  _188 = _187 + 18446744073709551592;
  if (_186 != _188)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  # DEBUG D#745 => D#2608->D.44092._M_impl._M_start._M_cur
  # DEBUG D#744 => &D#2608->D.44092._M_impl
  # DEBUG D#241 => D#744
  # DEBUG D#242 => D#745
  # DEBUG __a => D#241
  # DEBUG __p => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG this => D#237
  # DEBUG __p => D#238
  _189 = _186 + 24;
  MEM[(struct deque *)this_12(D) + 352B].D.44092._M_impl._M_start._M_cur = _189;
  goto <bb 93>;

  <bb 103>:
  # DEBUG this => D#2608
  # DEBUG this => D#2608
  # DEBUG D#743 => D#2608->D.44092._M_impl._M_start._M_cur
  # DEBUG D#740 => &D#2608->D.44092
  # DEBUG this => D#740
  # DEBUG D#242 => D#743
  # DEBUG __a => D#241
  # DEBUG __p => D#242
  # DEBUG D#240 => D#242
  # DEBUG D#239 => D#241
  # DEBUG D#237 => D#239
  # DEBUG D#238 => D#240
  # DEBUG this => D#237
  # DEBUG __p => D#238
  _115 = MEM[(struct deque *)this_12(D) + 352B].D.44092._M_impl._M_start._M_first;
  # DEBUG D#742 => &D#2608->D.44092
  # DEBUG this => D#742
  # DEBUG __p => _115
  # DEBUG __size => 24
  # DEBUG D#736 => &D#742->_M_impl
  # DEBUG D#734 => D#736
  # DEBUG __p => _115
  # DEBUG __a => D#734
  # DEBUG __n => D#735
  # DEBUG D#733 => D#735
  # DEBUG D#732 => D#734
  # DEBUG D#730 => D#732
  # DEBUG D#731 => D#733
  # DEBUG __p => _115
  # DEBUG this => D#730
  # DEBUG D.124039 => D#731
  operator delete (_115);
  _337 = MEM[(struct deque *)this_12(D) + 352B].D.44092._M_impl._M_start._M_node;
  _338 = _337 + 8;
  # DEBUG D#741 => &D#2608->D.44092._M_impl._M_start
  # DEBUG this => D#741
  # DEBUG __new_node => _338
  MEM[(struct _Deque_iterator *)this_12(D) + 368B]._M_node = _338;
  _339 = MEM[(struct pair * *)_337 + 8B];
  MEM[(struct _Deque_iterator *)this_12(D) + 368B]._M_first = _339;
  # DEBUG __size => 24
  _340 = _339 + 504;
  MEM[(struct _Deque_iterator *)this_12(D) + 368B]._M_last = _340;
  MEM[(struct deque *)this_12(D) + 352B].D.44092._M_impl._M_start._M_cur = _339;
  goto <bb 93>;

  <bb 104>:
  return;

  <bb 105>:
  # DEBUG this => cur_buf_27
  # DEBUG vc => vc_148
  # DEBUG D#96 => &MEM[(const struct Buffer *)cur_buf_27]._vc
  _310 = MEM[(struct VC * * *)cur_buf_27 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _51
  # DEBUG this => D#42
  _313 = _310 + _47;
  _308 = *_313;
  # DEBUG this => _308
  # DEBUG D#95 => &MEM[(const struct VC *)_308]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _408 = MEM[(struct Flit * * *)_308 + 144B];
  # DEBUG D#91 => D#94
  _409 = MEM[(struct Flit * * *)_308 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_408 == _409)
    goto <bb 24>;
  else
    goto <bb 25>;

}



;; Function void IQRouter::_SWHoldUpdate() (_ZN8IQRouter13_SWHoldUpdateEv, funcdef_no=2246, decl_uid=51708, cgraph_uid=691, symbol_order=692)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void IQRouter::_SWHoldUpdate() (struct IQRouter * const this)
{
  int __x$4;
  int __x;
  int __x$4;
  int __x;
  int __x$4;
  int __x;
  int __x$4;
  int __x;
  int __y$4;
  int __y;
  struct _Rb_tree_node * __y;
  struct pair __p;
  struct pair D.111596;
  const struct _Rb_tree_node * __y;
  const int held_expanded_output;
  int in_channel;
  int next_vc_end;
  int next_vc_start;
  int next_output_port;
  const struct FlitChannel * channel;
  struct BufferState * const dest_buf;
  const int output;
  const int expanded_output;
  const int expanded_input;
  struct Buffer * const cur_buf;
  const int vc;
  const int time;
  static const char __PRETTY_FUNCTION__[31] = "void IQRouter::_SWHoldUpdate()";
  struct pair D.65505;
  struct pair D.65501;
  struct pair D.65498;
  struct pair D.65495;
  struct pair D.65492;
  const struct value_type D.65276;
  struct pair D.65147;
  struct pair * const _1;
  bool _22;
  long int _23;
  struct Flit * * _24;
  int _27;
  int input.356_28;
  int _29;
  int vc.358_30;
  int _32;
  int _33;
  long unsigned int _34;
  long int _35;
  long int _37;
  long int _38;
  long int _39;
  int _40;
  bool _41;
  int _42;
  long int _43;
  int _45;
  struct ostream * gWatchOut.360_46;
  struct basic_ostream & _48;
  const size_type _49;
  struct basic_ostream & _51;
  struct basic_ostream & _53;
  struct basic_ostream & _55;
  int _56;
  int _57;
  int _59;
  long unsigned int _61;
  struct Flit * * * _62;
  int _63;
  int _65;
  long unsigned int _66;
  long int _67;
  struct Flit * * * _68;
  long unsigned int _69;
  int & _71;
  int _72;
  long unsigned int _73;
  long unsigned int _75;
  int _76;
  int _77;
  int _79;
  int _80;
  long unsigned int _81;
  bool _84;
  int _85;
  int _88;
  struct ostream * gWatchOut.360_89;
  struct basic_ostream & _91;
  const size_type _92;
  struct basic_ostream & _94;
  struct basic_ostream & _96;
  struct basic_ostream & _98;
  struct basic_ostream & _100;
  int _101;
  struct BufferMonitor * _103;
  int _105;
  int _106;
  int _109;
  bool _110;
  struct basic_ostream & _112;
  struct OutputSet * _113;
  bool _115;
  bool _116;
  int _117;
  int _119;
  struct ostream * gWatchOut.360_120;
  struct basic_ostream & _122;
  const size_type _123;
  struct basic_ostream & _125;
  const eVCState _126;
  void (*<T72d4>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _128;
  struct OutputSet * _129;
  bool _131;
  int _132;
  char * const _133;
  int _135;
  struct ostream * gWatchOut.360_136;
  struct basic_ostream & _138;
  const size_type _139;
  struct basic_ostream & _141;
  int vc.359_142;
  long unsigned int _143;
  long int _144;
  int vc.359_147;
  long unsigned int _148;
  struct Flit * iftmp.304_151;
  int _153;
  int vc.359_156;
  long unsigned int _157;
  int _160;
  struct OutputSet * _163;
  struct deque * _172;
  struct pair * _173;
  struct Credit * _178;
  struct _Rep_type * _179;
  long unsigned int _181;
  struct Credit * _182;
  int vc.359_183;
  int _184;
  bool _185;
  bool _186;
  bool _187;
  int _188;
  int _189;
  int _190;
  int _191;
  int _193;
  struct ostream * gWatchOut.360_194;
  struct basic_ostream & _196;
  const size_type _197;
  struct basic_ostream & _199;
  struct basic_ostream & _201;
  struct basic_ostream & _203;
  struct basic_ostream & _205;
  struct Flit * * const _206;
  struct Flit * * const _208;
  struct VC * _210;
  int _212;
  bool _213;
  int _214;
  int vc.359_215;
  struct VC * const & _216;
  int _218;
  struct ostream * gWatchOut.360_219;
  struct basic_ostream & _221;
  const size_type _222;
  struct basic_ostream & _224;
  struct basic_ostream & _226;
  struct basic_ostream & _228;
  long unsigned int _229;
  struct OutputSet * _230;
  int vc.359_231;
  long unsigned int _232;
  int vc.359_233;
  bool _234;
  struct deque * _235;
  struct Allocator * _238;
  struct deque * _239;
  bool _242;
  int vc.359_243;
  int vc.359_245;
  struct deque * _247;
  struct pair * _248;
  struct Flit * * * _251;
  struct deque * _252;
  bool _257;
  int _258;
  int _259;
  int _260;
  int _261;
  int _265;
  struct ostream * gWatchOut.360_266;
  struct basic_ostream & _268;
  const size_type _269;
  struct basic_ostream & _271;
  struct basic_ostream & _273;
  struct basic_ostream & _275;
  struct basic_ostream & _277;
  struct Buffer * & _281;
  long unsigned int _283;
  bool _285;
  int vc.359_286;
  int STALL_BUFFER_FULL.365_292;
  int STALL_BUFFER_RESERVED.366_293;
  int _294;
  long unsigned int _295;
  long unsigned int _297;
  struct VC * * const _298;
  long unsigned int _299;
  long unsigned int _302;
  bool _304;
  int _305;
  int _306;
  int _307;
  int _308;
  int _311;
  struct ostream * gWatchOut.360_312;
  struct basic_ostream & _314;
  const size_type _315;
  struct basic_ostream & _317;
  struct basic_ostream & _319;
  struct basic_ostream & _321;
  struct basic_ostream & _323;
  long unsigned int _327;
  struct pair * const _328;
  struct deque * _330;
  struct pair * _331;
  const struct Router * const _348;
  struct Buffer * * _349;
  struct BufferState * * _350;
  int * _351;
  int * _352;
  int * _353;
  int * _354;
  int * _355;
  int * _356;
  int * _357;
  int * _358;
  int * _359;
  int * _360;
  int * _361;
  int * _362;
  int * _363;
  int * _366;
  struct FlitChannel * * _367;
  struct vector * _368;
  struct vector * _369;
  struct vector * _370;
  struct queue * _371;
  struct queue * _372;
  struct Flit * * _373;
  long int _374;
  long int _375;
  long int _376;
  long int _377;
  struct Flit * * _378;
  long int _379;
  struct Flit * * _380;
  long int _381;
  long int _382;
  long int _383;
  difference_type _384;
  size_type _385;
  long unsigned int _386;
  struct queue & _387;
  int & _388;
  long unsigned int _389;
  int & _390;
  long unsigned int _391;
  struct VC * * const _392;
  long unsigned int _393;
  struct VC * const & _394;
  struct VC * _395;
  const int _396;
  const int _397;
  long unsigned int _398;
  struct BufferState * & _399;
  long int _400;
  char * const _401;
  struct basic_ostream & _402;
  int _403;
  struct FlitChannel * & _409;
  long int _410;
  char * const _411;
  struct basic_ostream & _412;
  long unsigned int _413;
  int & _414;
  long unsigned int _415;
  struct vector & _416;
  long unsigned int _417;
  int & _418;
  struct vector & _419;
  long unsigned int _420;
  int & _421;
  struct vector & _422;
  long int _423;
  char * const _424;
  struct basic_ostream & _425;
  const int _427;
  const int _431;
  struct _Rep_type * _436;
  const int _439;
  const int _443;
  struct VC * * const _445;
  long unsigned int _446;
  struct VC * const & _447;
  struct VC * _448;
  struct Flit * * const _449;
  struct Flit * * const _450;
  long int _452;
  char * const _453;
  struct basic_ostream & _454;
  int & _455;
  int & _456;
  int & _457;
  long unsigned int _458;
  struct VC * * _459;
  long unsigned int _460;
  struct VC * & _461;
  struct VC * _462;
  struct Flit * iftmp.304_463;
  long int _465;
  char * const _466;
  struct basic_ostream & _467;
  int & _468;
  int & _469;
  int & _470;
  long unsigned int _471;
  struct VC * * _472;
  long unsigned int _473;
  struct VC * & _474;
  struct VC * _475;
  long int _476;
  char * const _477;
  struct basic_ostream & _478;
  struct VC * * _479;
  long unsigned int _480;
  struct VC * & _481;
  struct VC * _482;
  struct VC * * _483;
  long unsigned int _484;
  struct VC * & _485;
  struct VC * _486;
  long int _487;
  struct Flit * * * _488;
  long int _489;
  long int _490;
  long int _491;
  long int _492;
  long int _493;
  struct Flit * * _494;
  long int _495;
  struct Flit * * _496;
  long int _497;
  long int _498;
  long int _499;
  long int _500;
  struct Flit * * _501;
  long int _502;
  struct Flit * * _503;
  long int _504;
  long int _505;
  long int _506;
  difference_type _507;
  size_type _508;
  long unsigned int _509;
  struct queue & _510;
  int & _511;
  long int _512;
  char * const _513;
  struct basic_ostream & _514;
  long unsigned int _515;
  int & _516;
  struct pair * _519;
  struct pair * _520;
  struct pair * _521;
  struct pair * _522;
  struct pair * _614;
  struct pair * _615;
  struct pair * _616;
  struct pair * _617;
  struct pair * _618;
  struct pair * _619;
  struct pair * _620;
  struct pair * _621;
  struct pair * _622;
  struct pair * _623;
  struct pair * * _624;
  struct pair * * _625;
  struct pair * _626;
  struct pair * _627;
  struct pair * const _663;
  const int prephitmp_679;
  const int pretmp_688;
  struct pair * const _721;
  int * pretmp_770;
  int * pretmp_772;
  int * pretmp_774;
  int * prephitmp_775;
  int * pretmp_776;
  int * prephitmp_777;
  struct pair * const prephitmp_780;
  const int pretmp_781;
  long unsigned int pretmp_783;
  struct VC * * pretmp_785;
  long unsigned int pretmp_787;
  struct VC * * pretmp_789;
  struct VC * pretmp_791;
  struct VC * prephitmp_792;
  struct _Rb_tree_node_base * pretmp_794;
  struct _Rb_tree_node_base * prephitmp_795;

  <bb 2>:
  _22 = this_21(D)->_hold_switch_for_packet;
  if (_22 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#1935 => &this_21(D)->_sw_hold_vcs
  # DEBUG this => D#1935
  # DEBUG D#149 => &MEM[(const struct deque *)D#1935].D.45936._M_impl._M_start
  # DEBUG D#150 => &MEM[(const struct deque *)D#1935].D.45936._M_impl._M_finish
  _663 = MEM[(struct pair * *)this_21(D) + 640B];
  # DEBUG D#147 => D#150
  _721 = MEM[(struct pair * *)this_21(D) + 608B];
  # DEBUG D#148 => D#149
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_663 != _721)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 141>;

  <bb 5>:
  __assert_fail ("_hold_switch_for_packet", "routers/iq_router.cpp", 1007, &__PRETTY_FUNCTION__);

  <bb 6>:
  # DEBUG D#1889 => &this_21(D)->_sw_hold_vcs
  # DEBUG this => D#1889
  # DEBUG this => D#1889
  # DEBUG D#67 => &D#1889->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#168 => MEM[(const struct iterator &)D#1889 + 16]._M_first
  # DEBUG D.93162 => D#168
  # DEBUG D#167 => MEM[(const struct iterator &)D#1889 + 16]._M_last
  # DEBUG D.93163 => D#167
  # DEBUG D#166 => MEM[(const struct iterator &)D#1889 + 16]._M_node
  # DEBUG D.93164 => D#166
  # DEBUG this => D#165
  # DEBUG item => _721
  time_714 = MEM[(const struct pair &)_721].first;
  # DEBUG time => time_714
  if (time_714 < 0)
    goto <bb 140>;
  else
    goto <bb 9>;

  <bb 7>:
  # DEBUG D#1889 => &this_21(D)->_sw_hold_vcs
  # DEBUG this => D#1889
  # DEBUG this => D#1889
  # DEBUG D#67 => &D#1889->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#168 => MEM[(const struct iterator &)D#1889 + 16]._M_first
  # DEBUG D.93162 => D#168
  # DEBUG D#167 => MEM[(const struct iterator &)D#1889 + 16]._M_last
  # DEBUG D.93163 => D#167
  # DEBUG D#166 => MEM[(const struct iterator &)D#1889 + 16]._M_node
  # DEBUG D.93164 => D#166
  # DEBUG this => D#165
  # DEBUG item => D#2623
  time_25 = MEM[(const struct pair &)prephitmp_780].first;
  # DEBUG time => time_25
  if (time_25 < 0)
    goto <bb 140>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 10>;

  <bb 9>:

  <bb 10>:
  # time_433 = PHI <time_714(9), time_25(8)>
  # _1 = PHI <_721(9), prephitmp_780(8)>
  # DEBUG D#1935 => &this_21(D)->_sw_hold_vcs
  # DEBUG this => D#1935
  # DEBUG D#149 => &MEM[(const struct deque *)D#1935].D.45936._M_impl._M_start
  # DEBUG D#150 => &MEM[(const struct deque *)D#1935].D.45936._M_impl._M_finish
  # DEBUG D#147 => D#150
  # DEBUG D#148 => D#149
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  # DEBUG D#1889 => &this_21(D)->_sw_hold_vcs
  # DEBUG this => D#1889
  # DEBUG this => D#1889
  # DEBUG D#67 => &D#1889->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#168 => MEM[(const struct iterator &)D#1889 + 16]._M_first
  # DEBUG D.93162 => D#168
  # DEBUG D#167 => MEM[(const struct iterator &)D#1889 + 16]._M_last
  # DEBUG D.93163 => D#167
  # DEBUG D#166 => MEM[(const struct iterator &)D#1889 + 16]._M_node
  # DEBUG D.93164 => D#166
  # DEBUG this => D#165
  # DEBUG item => _1
  # DEBUG time => time_433
  _27 = GetSimTime ();
  if (_27 != time_433)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  __assert_fail ("GetSimTime() == time", "routers/iq_router.cpp", 1017, &__PRETTY_FUNCTION__);

  <bb 12>:
  input.356_28 = MEM[(const struct pair &)_1].second.first.first;
  # DEBUG input => input.356_28
  if (input.356_28 < 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  _29 = this_21(D)->D.51790._inputs;
  if (input.356_28 >= _29)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 1020, &__PRETTY_FUNCTION__);

  <bb 15>:
  vc.358_30 = MEM[(const struct pair &)_1].second.first.second;
  vc = vc.358_30;
  if (vc.358_30 < 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  _32 = this_21(D)->_vcs;
  if (vc.358_30 >= _32)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 1022, &__PRETTY_FUNCTION__);

  <bb 18>:
  _33 = MEM[(const struct pair &)_1].second.second;
  if (_33 == -1)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  __assert_fail ("item.second.second != -1", "routers/iq_router.cpp", 1024, &__PRETTY_FUNCTION__);

  <bb 20>:
  _34 = (long unsigned int) input.356_28;
  # DEBUG D#1890 => &this_21(D)->_buf
  _349 = MEM[(struct Buffer * * *)this_21(D) + 880B];
  # DEBUG D#53 => D#1890
  # DEBUG __n => _34
  # DEBUG this => D#53
  _283 = _34 * 8;
  _281 = _349 + _283;
  cur_buf_36 = *_281;
  # DEBUG cur_buf => cur_buf_36
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.358_30
  _302 = (long unsigned int) vc.358_30;
  # DEBUG D#96 => &MEM[(const struct Buffer *)cur_buf_36]._vc
  _298 = MEM[(struct VC * * *)cur_buf_36 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _302
  # DEBUG this => D#42
  _297 = _302 * 8;
  _216 = _298 + _297;
  _210 = *_216;
  # DEBUG this => _210
  # DEBUG D#95 => &MEM[(const struct VC *)_210]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _208 = MEM[(struct Flit * * *)_210 + 144B];
  # DEBUG D#91 => D#94
  _206 = MEM[(struct Flit * * *)_210 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_206 == _208)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 1027, &__PRETTY_FUNCTION__);

  <bb 22>:
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.358_30
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_36]._vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _302
  # DEBUG this => D#42
  _126 = MEM[(eVCState *)_210 + 176B];
  # DEBUG D#21 => _210
  # DEBUG this => D#21
  if (_126 != 3)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  __assert_fail ("cur_buf->GetState(vc) == VC::active", "routers/iq_router.cpp", 1028, &__PRETTY_FUNCTION__);

  <bb 24>:
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.358_30
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_36]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _302
  # DEBUG this => D#42
  # DEBUG this => _210
  # DEBUG D#184 => &MEM[(const struct VC *)_210]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_210]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_151 = MEM[(struct Flit * const &)_206];
  # DEBUG f => iftmp.304_151
  if (iftmp.304_151 == 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 1031, &__PRETTY_FUNCTION__);

  <bb 26>:
  _40 = iftmp.304_151->vc;
  if (vc.358_30 != _40)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 1032, &__PRETTY_FUNCTION__);

  <bb 28>:
  _41 = iftmp.304_151->watch;
  if (_41 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _42 = iftmp.304_151->id;
  # DEBUG D#1891 => &this_21(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1891
  # DEBUG D#1892 => &MEM[(const struct Module *)this_21(D)]._fullname
  _45 = GetSimTime ();
  gWatchOut.360_46 = gWatchOut;
  _48 = std::basic_ostream<char>::operator<< (gWatchOut.360_46, _45);
  # DEBUG __out => _48
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_48, " | ", 3);
  # DEBUG __os => _48
  # DEBUG __str => D#1892
  _49 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1892
  # DEBUG this => D#3
  _144 = (long int) _49;
  # DEBUG this => D#1892
  _133 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1892
  # DEBUG this => D#1
  _112 = std::__ostream_insert<char, std::char_traits<char> > (_48, _133, _144);
  # DEBUG __out => _112
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_112, " | ", 3);
  # DEBUG __out => _112
  # DEBUG __s => "Completed held switch allocation for VC "
  # DEBUG __s => "Completed held switch allocation for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_112, "Completed held switch allocation for VC ", 40);
  _51 = std::basic_ostream<char>::operator<< (_112, vc.358_30);
  # DEBUG __out => _51
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_51, " at input ", 10);
  _53 = std::basic_ostream<char>::operator<< (_51, input.356_28);
  # DEBUG __out => _53
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_53, " (front: ", 9);
  _55 = std::basic_ostream<char>::operator<< (_53, _42);
  # DEBUG __out => _55
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_55, ").", 2);
  # DEBUG this => _55
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_55);
  pretmp_688 = vc;

  <bb 30>:
  # prephitmp_679 = PHI <vc.358_30(28), pretmp_688(29)>
  _56 = this_21(D)->D.51790._input_speedup;
  _57 = input.356_28 * _56;
  # DEBUG D#2626 => vc
  _59 = prephitmp_679 % _56;
  expanded_input_60 = _57 + _59;
  # DEBUG expanded_input => expanded_input_60
  _61 = (long unsigned int) expanded_input_60;
  # DEBUG D#1893 => &this_21(D)->_switch_hold_vc
  _351 = MEM[(int * *)this_21(D) + 1120B];
  # DEBUG D#55 => D#1893
  # DEBUG __n => _61
  # DEBUG this => D#55
  _75 = _61 * 4;
  _71 = _351 + _75;
  _63 = *_71;
  if (_63 != prephitmp_679)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  __assert_fail ("_switch_hold_vc[expanded_input] == vc", "routers/iq_router.cpp", 1043, &__PRETTY_FUNCTION__);

  <bb 32>:
  expanded_output_64 = MEM[(const struct pair &)_1].second.second;
  # DEBUG expanded_output => expanded_output_64
  if (expanded_output_64 >= 0)
    goto <bb 33>;
  else
    goto <bb 143>;

  <bb 33>:
  _65 = this_21(D)->_output_buffer_size;
  if (_65 == -1)
    goto <bb 142>;
  else
    goto <bb 34>;

  <bb 34>:
  _66 = (long unsigned int) expanded_output_64;
  # DEBUG D#1894 => &this_21(D)->_output_buffer
  _371 = MEM[(struct queue * *)this_21(D) + 1016B];
  # DEBUG D#71 => D#1894
  # DEBUG __n => _66
  # DEBUG this => D#71
  _386 = _66 * 80;
  _387 = _371 + _386;
  # DEBUG this => NULL
  # DEBUG this => D#205
  # DEBUG D#201 => &D#205->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#205->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _68 = MEM[(const struct _Deque_iterator &)_387 + 48]._M_node;
  _67 = (long int) _68;
  _62 = MEM[(const struct _Deque_iterator &)_387 + 16]._M_node;
  _43 = (long int) _62;
  _39 = _67 - _43;
  _38 = _39 /[ex] 8;
  _37 = _38 + -1;
  _35 = _37 * 64;
  _24 = MEM[(const struct _Deque_iterator &)_387 + 48]._M_cur;
  _23 = (long int) _24;
  _373 = MEM[(const struct _Deque_iterator &)_387 + 48]._M_first;
  _374 = (long int) _373;
  _375 = _23 - _374;
  _376 = _375 /[ex] 8;
  _377 = _35 + _376;
  _378 = MEM[(const struct _Deque_iterator &)_387 + 16]._M_last;
  _379 = (long int) _378;
  _380 = MEM[(const struct _Deque_iterator &)_387 + 16]._M_cur;
  _381 = (long int) _380;
  _382 = _379 - _381;
  _383 = _382 /[ex] 8;
  _384 = _377 + _383;
  _385 = (size_type) _384;
  _69 = (long unsigned int) _65;
  if (_69 > _385)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 35>:
  __assert_fail ("_switch_hold_in[expanded_input] == expanded_output", "routers/iq_router.cpp", 1049, &__PRETTY_FUNCTION__);

  <bb 36>:
  _73 = (long unsigned int) expanded_output_64;
  # DEBUG D#1896 => &this_21(D)->_switch_hold_out
  _353 = MEM[(int * *)this_21(D) + 1096B];
  # DEBUG D#55 => D#1896
  # DEBUG __n => _73
  # DEBUG this => D#55
  _389 = _73 * 4;
  _390 = _353 + _389;
  _76 = *_390;
  if (expanded_input_60 != _76)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  __assert_fail ("_switch_hold_out[expanded_output] == expanded_input", "routers/iq_router.cpp", 1050, &__PRETTY_FUNCTION__);

  <bb 38>:
  _77 = this_21(D)->D.51790._output_speedup;
  output_78 = expanded_output_64 / _77;
  # DEBUG output => output_78
  if (output_78 < 0)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  _79 = this_21(D)->D.51790._outputs;
  if (output_78 >= _79)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  __assert_fail ("(output >= 0) && (output < _outputs)", "routers/iq_router.cpp", 1053, &__PRETTY_FUNCTION__);

  <bb 41>:
  # DEBUG this => cur_buf_36
  # DEBUG vc => D#2626
  _391 = (long unsigned int) prephitmp_679;
  # DEBUG D#46 => &MEM[(const struct Buffer *)cur_buf_36]._vc
  _392 = MEM[(struct VC * * *)cur_buf_36 + 104B];
  # DEBUG D#42 => D#46
  # DEBUG __n => _391
  # DEBUG this => D#42
  _393 = _391 * 8;
  _394 = _392 + _393;
  _395 = *_394;
  _396 = MEM[(int *)_395 + 192B];
  # DEBUG D#22 => _395
  # DEBUG this => D#22
  if (output_78 != _396)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  __assert_fail ("cur_buf->GetOutputPort(vc) == output", "routers/iq_router.cpp", 1054, &__PRETTY_FUNCTION__);

  <bb 43>:
  # DEBUG this => cur_buf_36
  # DEBUG vc => D#2626
  # DEBUG D#47 => &MEM[(const struct Buffer *)cur_buf_36]._vc
  # DEBUG D#42 => D#47
  # DEBUG __n => _391
  # DEBUG this => D#42
  _397 = MEM[(int *)_395 + 196B];
  # DEBUG D#23 => _395
  # DEBUG this => D#23
  # DEBUG match_vc => _397
  if (_397 < 0)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  _80 = this_21(D)->_vcs;
  if (_80 <= _397)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  __assert_fail ("(match_vc >= 0) && (match_vc < _vcs)", "routers/iq_router.cpp", 1057, &__PRETTY_FUNCTION__);

  <bb 46>:
  _81 = (long unsigned int) output_78;
  # DEBUG D#1897 => &this_21(D)->_next_buf
  _350 = MEM[(struct BufferState * * *)this_21(D) + 904B];
  # DEBUG D#54 => D#1897
  # DEBUG __n => _81
  # DEBUG this => D#54
  _398 = _81 * 8;
  _399 = _350 + _398;
  dest_buf_83 = *_399;
  # DEBUG dest_buf => dest_buf_83
  _84 = iftmp.304_151->watch;
  if (_84 != 0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  _85 = expanded_output_64 % _77;
  # DEBUG D#1898 => &this_21(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1898
  # DEBUG D#1899 => &MEM[(const struct Module *)this_21(D)]._fullname
  _88 = GetSimTime ();
  gWatchOut.360_89 = gWatchOut;
  _91 = std::basic_ostream<char>::operator<< (gWatchOut.360_89, _88);
  # DEBUG __out => _91
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_91, " | ", 3);
  # DEBUG __os => _91
  # DEBUG __str => D#1899
  _92 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1899
  # DEBUG this => D#3
  _400 = (long int) _92;
  # DEBUG this => D#1899
  _401 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1899
  # DEBUG this => D#1
  _402 = std::__ostream_insert<char, std::char_traits<char> > (_91, _401, _400);
  # DEBUG __out => _402
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_402, " | ", 3);
  # DEBUG __out => _402
  # DEBUG __s => "  Scheduling switch connection from input "
  # DEBUG __s => "  Scheduling switch connection from input "
  std::__ostream_insert<char, std::char_traits<char> > (_402, "  Scheduling switch connection from input ", 42);
  _94 = std::basic_ostream<char>::operator<< (_402, input.356_28);
  # DEBUG __out => _94
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_94, ".", 1);
  _96 = std::basic_ostream<char>::operator<< (_94, _59);
  # DEBUG __out => _96
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_96, " to output ", 11);
  _98 = std::basic_ostream<char>::operator<< (_96, output_78);
  # DEBUG __out => _98
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_98, ".", 1);
  _100 = std::basic_ostream<char>::operator<< (_98, _85);
  # DEBUG __out => _100
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_100, ".", 1);
  # DEBUG this => _100
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_100);
  pretmp_781 = vc;
  pretmp_783 = (long unsigned int) pretmp_781;
  pretmp_785 = MEM[(struct VC * * *)cur_buf_36 + 104B];
  pretmp_787 = pretmp_783 * 8;
  pretmp_789 = pretmp_785 + pretmp_787;
  pretmp_791 = *pretmp_789;

  <bb 48>:
  # prephitmp_792 = PHI <_395(46), pretmp_791(47)>
  # DEBUG D#2625 => vc
  # DEBUG this => cur_buf_36
  # DEBUG vc => D#2625
  _101 = cur_buf_36->_occupancy;
  _403 = _101 + -1;
  cur_buf_36->_occupancy = _403;
  # DEBUG D#41 => &cur_buf_36->_vc
  # DEBUG D#36 => D#41
  # DEBUG __n => (long unsigned int) D#2625
  # DEBUG this => D#36
  VC::RemoveFlit (prephitmp_792);
  _103 = this_21(D)->_bufferMonitor;
  BufferMonitor::read (_103, input.356_28, iftmp.304_151);
  _105 = iftmp.304_151->hops;
  _106 = _105 + 1;
  iftmp.304_151->hops = _106;
  iftmp.304_151->vc = _397;
  _109 = this_21(D)->_routing_delay;
  if (_109 == 0)
    goto <bb 49>;
  else
    goto <bb 67>;

  <bb 49>:
  _110 = iftmp.304_151->head;
  if (_110 != 0)
    goto <bb 50>;
  else
    goto <bb 67>;

  <bb 50>:
  # DEBUG D#1900 => &this_21(D)->D.51790._output_channels
  _367 = MEM[(struct FlitChannel * * *)this_21(D) + 192B];
  # DEBUG D#62 => D#1900
  # DEBUG __n => _81
  # DEBUG this => D#62
  _409 = _367 + _398;
  channel_111 = *_409;
  # DEBUG channel => channel_111
  _348 = MEM[(const struct Router * *)channel_111 + 216B];
  # DEBUG D#19 => channel_111
  # DEBUG this => D#19
  # DEBUG router => NULL
  if (_348 != 0B)
    goto <bb 51>;
  else
    goto <bb 66>;

  <bb 51>:
  _115 = this_21(D)->_noq;
  if (_115 != 0)
    goto <bb 52>;
  else
    goto <bb 63>;

  <bb 52>:
  _131 = iftmp.304_151->watch;
  if (_131 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _132 = iftmp.304_151->id;
  # DEBUG D#1903 => &this_21(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1903
  # DEBUG D#1904 => &MEM[(const struct Module *)this_21(D)]._fullname
  _135 = GetSimTime ();
  gWatchOut.360_136 = gWatchOut;
  _138 = std::basic_ostream<char>::operator<< (gWatchOut.360_136, _135);
  # DEBUG __out => _138
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_138, " | ", 3);
  # DEBUG __os => _138
  # DEBUG __str => D#1904
  _139 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1904
  # DEBUG this => D#3
  _410 = (long int) _139;
  # DEBUG this => D#1904
  _411 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1904
  # DEBUG this => D#1
  _412 = std::__ostream_insert<char, std::char_traits<char> > (_138, _411, _410);
  # DEBUG __out => _412
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_412, " | ", 3);
  # DEBUG __out => _412
  # DEBUG __s => "Updating lookahead routing information for flit "
  # DEBUG __s => "Updating lookahead routing information for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_412, "Updating lookahead routing information for flit ", 48);
  _141 = std::basic_ostream<char>::operator<< (_412, _132);
  # DEBUG __out => _141
  # DEBUG __s => " (NOQ)."
  # DEBUG __s => " (NOQ)."
  std::__ostream_insert<char, std::char_traits<char> > (_141, " (NOQ).", 7);
  # DEBUG this => _141
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_141);

  <bb 54>:
  vc.359_142 = vc;
  _143 = (long unsigned int) vc.359_142;
  # DEBUG D#1905 => &this_21(D)->_noq_next_output_port
  _368 = MEM[(struct vector * *)this_21(D) + 1152B];
  # DEBUG D#70 => D#1905
  # DEBUG __n => _34
  # DEBUG this => D#70
  _415 = _34 * 24;
  _416 = _368 + _415;
  _354 = MEM[(int * *)_416];
  # DEBUG __n => _143
  # DEBUG this => D#55
  _413 = _143 * 4;
  _414 = _354 + _413;
  next_output_port_145 = *_414;
  # DEBUG next_output_port => next_output_port_145
  if (next_output_port_145 < 0)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  __assert_fail ("next_output_port >= 0", "routers/iq_router.cpp", 1093, &__PRETTY_FUNCTION__);

  <bb 56>:
  # DEBUG D#1906 => &this_21(D)->_noq_next_output_port
  # DEBUG D#70 => D#1906
  # DEBUG __n => _34
  # DEBUG this => D#70
  # DEBUG __n => _143
  # DEBUG this => D#55
  *_414 = -1;
  vc.359_147 = vc;
  _148 = (long unsigned int) vc.359_147;
  # DEBUG D#1907 => &this_21(D)->_noq_next_vc_start
  _369 = MEM[(struct vector * *)this_21(D) + 1176B];
  # DEBUG D#70 => D#1907
  # DEBUG __n => _34
  # DEBUG this => D#70
  _419 = _369 + _415;
  _355 = MEM[(int * *)_419];
  # DEBUG __n => _148
  # DEBUG this => D#55
  _417 = _148 * 4;
  _418 = _355 + _417;
  next_vc_start_152 = *_418;
  # DEBUG next_vc_start => next_vc_start_152
  if (next_vc_start_152 < 0)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:
  _153 = this_21(D)->_vcs;
  if (next_vc_start_152 >= _153)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  __assert_fail ("next_vc_start >= 0 && next_vc_start < _vcs", "routers/iq_router.cpp", 1096, &__PRETTY_FUNCTION__);

  <bb 59>:
  # DEBUG D#1908 => &this_21(D)->_noq_next_vc_start
  # DEBUG D#70 => D#1908
  # DEBUG __n => _34
  # DEBUG this => D#70
  # DEBUG __n => _148
  # DEBUG this => D#55
  *_418 = -1;
  vc.359_156 = vc;
  _157 = (long unsigned int) vc.359_156;
  # DEBUG D#1909 => &this_21(D)->_noq_next_vc_end
  _370 = MEM[(struct vector * *)this_21(D) + 1200B];
  # DEBUG D#70 => D#1909
  # DEBUG __n => _34
  # DEBUG this => D#70
  _422 = _370 + _415;
  _356 = MEM[(int * *)_422];
  # DEBUG __n => _157
  # DEBUG this => D#55
  _420 = _157 * 4;
  _421 = _356 + _420;
  next_vc_end_159 = *_421;
  # DEBUG next_vc_end => next_vc_end_159
  if (next_vc_end_159 < 0)
    goto <bb 61>;
  else
    goto <bb 60>;

  <bb 60>:
  _160 = this_21(D)->_vcs;
  if (next_vc_end_159 >= _160)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  __assert_fail ("next_vc_end >= 0 && next_vc_end < _vcs", "routers/iq_router.cpp", 1099, &__PRETTY_FUNCTION__);

  <bb 62>:
  # DEBUG D#1910 => &this_21(D)->_noq_next_vc_end
  # DEBUG D#70 => D#1910
  # DEBUG __n => _34
  # DEBUG this => D#70
  # DEBUG __n => _157
  # DEBUG this => D#55
  *_421 = -1;
  _163 = &iftmp.304_151->la_route_set;
  OutputSet::Clear (_163);
  OutputSet::AddRange (_163, next_output_port_145, next_vc_start_152, next_vc_end_159, 0);
  goto <bb 67>;

  <bb 63>:
  _116 = iftmp.304_151->watch;
  if (_116 != 0)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  _117 = iftmp.304_151->id;
  # DEBUG D#1901 => &this_21(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1901
  # DEBUG D#1902 => &MEM[(const struct Module *)this_21(D)]._fullname
  _119 = GetSimTime ();
  gWatchOut.360_120 = gWatchOut;
  _122 = std::basic_ostream<char>::operator<< (gWatchOut.360_120, _119);
  # DEBUG __out => _122
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_122, " | ", 3);
  # DEBUG __os => _122
  # DEBUG __str => D#1902
  _123 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1902
  # DEBUG this => D#3
  _423 = (long int) _123;
  # DEBUG this => D#1902
  _424 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1902
  # DEBUG this => D#1
  _425 = std::__ostream_insert<char, std::char_traits<char> > (_122, _424, _423);
  # DEBUG __out => _425
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_425, " | ", 3);
  # DEBUG __out => _425
  # DEBUG __s => "Updating lookahead routing information for flit "
  # DEBUG __s => "Updating lookahead routing information for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_425, "Updating lookahead routing information for flit ", 48);
  _125 = std::basic_ostream<char>::operator<< (_425, _117);
  # DEBUG __out => _125
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_125, ".", 1);
  # DEBUG this => _125
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_125);

  <bb 65>:
  # DEBUG this => channel_111
  in_channel_127 = MEM[(const int &)channel_111 + 224];
  # DEBUG in_channel => in_channel_127
  _128 = this_21(D)->_rf;
  _129 = &iftmp.304_151->la_route_set;
  _128 (_348, iftmp.304_151, in_channel_127, _129, 0);
  goto <bb 67>;

  <bb 66>:
  _113 = &iftmp.304_151->la_route_set;
  OutputSet::Clear (_113);

  <bb 67>:
  BufferState::SendingFlit (dest_buf_83, iftmp.304_151);
  # DEBUG __x => expanded_input_60
  # DEBUG __y => expanded_output_64
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => iftmp.304_151
  # DEBUG __y => expanded_input_60
  # DEBUG __y$4 => expanded_output_64
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y$first => iftmp.304_151
  # DEBUG __y$second$first => expanded_input_60
  # DEBUG __y$second$second => expanded_output_64
  # DEBUG this => &D.65147
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  D.65147.first = -1;
  MEM[(struct pair *)&D.65147 + 8B] = iftmp.304_151;
  MEM[(struct pair *)&D.65147 + 16B] = expanded_input_60;
  MEM[(struct pair *)&D.65147 + 20B] = expanded_output_64;
  # DEBUG D#2629 => &this_21(D)->_crossbar_flits
  # DEBUG this => D#2629
  # DEBUG __x => &D.65147
  _614 = MEM[(struct deque *)this_21(D) + 752B].D.46860._M_impl._M_finish._M_cur;
  _615 = MEM[(struct deque *)this_21(D) + 752B].D.46860._M_impl._M_finish._M_last;
  _616 = _615 + 18446744073709551592;
  if (_614 != _616)
    goto <bb 68>;
  else
    goto <bb 71>;

  <bb 68>:
  # DEBUG D#1487 => &D#2629->D.46860._M_impl
  # DEBUG D#285 => D#1487
  # DEBUG __p => _614
  # DEBUG __arg => &D.65147
  # DEBUG __a => D#285
  # DEBUG D#284 => D#285
  # DEBUG D#283 => D#284
  # DEBUG __p => _614
  # DEBUG __val => &D.65147
  # DEBUG this => D#283
  # DEBUG D#12 => 24
  # DEBUG __p => _614
  # DEBUG D.94272 => D#12
  if (_614 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  *_614 = D.65147;

  <bb 70>:
  _617 = _614 + 24;
  MEM[(struct deque *)this_21(D) + 752B].D.46860._M_impl._M_finish._M_cur = _617;
  goto <bb 72>;

  <bb 71>:
  _172 = &this_21(D)->_crossbar_flits;
  std::deque<std::pair<int, std::pair<Flit*, std::pair<int, int> > > >::_M_push_back_aux (_172, &D.65147);

  <bb 72>:
  D.65147 ={v} {CLOBBER};
  # DEBUG D#1911 => &this_21(D)->_out_queue_credits
  # DEBUG this => D#1911
  # DEBUG __x => &input
  # DEBUG D#802 => &MEM[(const struct map *)D#1911]._M_t
  # DEBUG this => D#802
  __y_170 = &MEM[(const struct _Rb_tree *)this_21(D) + 832B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_170
  # DEBUG D#803 => &MEM[(const struct map *)D#1911]._M_t
  # DEBUG this => D#803
  # DEBUG __k => &input
  # DEBUG this => D#803
  __y_171 = MEM[(struct _Rb_tree_node_base * *)this_21(D) + 848B];
  # DEBUG D#286 => D#803
  # DEBUG this => D#286
  # DEBUG D#798 => D#803
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &input
  # DEBUG __y => __y_170
  # DEBUG __x => __y_171
  if (__y_171 == 0B)
    goto <bb 144>;
  else
    goto <bb 75>;

  <bb 73>:
  # __y_435 = PHI <__y_429(78), __y_428(77)>
  # __y_5 = PHI <__y_739(78), __y_662(77)>
  # DEBUG __y => __y_5
  # DEBUG __x => __y_435
  if (__y_435 == 0B)
    goto <bb 79>;
  else
    goto <bb 74>;

  <bb 74>:
  goto <bb 76>;

  <bb 75>:

  <bb 76>:
  # __y_662 = PHI <__y_171(75), __y_435(74)>
  # __y_739 = PHI <__y_170(75), __y_5(74)>
  # DEBUG __y => __y_739
  # DEBUG __x => __y_662
  # DEBUG __x => __y_662
  # DEBUG __x => __y_662
  # DEBUG this => __y_662
  # DEBUG D#794 => &MEM[(const struct _Rb_tree_node *)__y_662]._M_value_field
  # DEBUG __r => D#794
  # DEBUG __x => D#794
  # DEBUG this => D#290
  # DEBUG D#795 => &MEM[(const struct pair &)__y_662 + 32].first
  # DEBUG D#796 => &D#797->_M_impl._M_key_compare
  # DEBUG D#287 => D#796
  _427 = MEM[(const int &)__y_662 + 32];
  # DEBUG D#288 => D#795
  # DEBUG D#289 => &input
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (input.356_28 <= _427)
    goto <bb 77>;
  else
    goto <bb 78>;

  <bb 77>:
  # DEBUG __y => __y_662
  __y_428 = MEM[(struct _Rb_tree_node_base * *)__y_662 + 16B];
  # DEBUG D#407 => __y_662
  # DEBUG __x => D#407
  # DEBUG __x => NULL
  goto <bb 73>;

  <bb 78>:
  __y_429 = MEM[(struct _Rb_tree_node_base * *)__y_662 + 24B];
  # DEBUG D#408 => __y_662
  # DEBUG __x => D#408
  # DEBUG __x => NULL
  goto <bb 73>;

  <bb 79>:
  # __y_779 = PHI <__y_5(73)>
  # DEBUG this => NULL
  # DEBUG __x => __y_779
  # DEBUG __j$_M_node => __y_779
  # DEBUG this => D#803
  # DEBUG this => NULL
  # DEBUG __x => __y_170
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_779 == __y_170)
    goto <bb 144>;
  else
    goto <bb 80>;

  <bb 80>:
  # DEBUG __x => __y_779
  # DEBUG __x => __y_779
  # DEBUG this => __y_779
  # DEBUG D#409 => &MEM[(const struct _Rb_tree_node *)__y_779]._M_value_field
  # DEBUG __r => D#409
  # DEBUG __x => D#409
  # DEBUG this => D#290
  # DEBUG D#799 => &MEM[(const struct pair &)__y_779 + 32].first
  # DEBUG D#801 => &MEM[(const struct _Rb_tree *)D#803]._M_impl._M_key_compare
  # DEBUG D#287 => D#801
  # DEBUG D#288 => &input
  _431 = MEM[(const int &)__y_779 + 32];
  # DEBUG D#289 => D#799
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  # DEBUG D#800 => {CLOBBER}
  # DEBUG __j$_M_node => D#800
  # DEBUG this => NULL
  # DEBUG __x => NULL
  if (input.356_28 < _431)
    goto <bb 144>;
  else
    goto <bb 81>;

  <bb 81>:
  # prephitmp_795 = PHI <__y_171(80), pretmp_794(144)>
  # DEBUG D#1913 => &this_21(D)->_out_queue_credits
  # DEBUG this => D#1913
  # DEBUG __x => &input
  # DEBUG D#816 => &D#1913->_M_t
  # DEBUG this => D#816
  # DEBUG __k => &input
  # DEBUG this => D#816
  # DEBUG D#2624 => MEM[(struct _Rb_tree_node_base * *)this_21(D) + 848B]
  # DEBUG D#118 => D#816
  # DEBUG this => D#118
  # DEBUG D#812 => D#816
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &input
  # DEBUG __y => __y_170
  # DEBUG __x => D#2624
  if (prephitmp_795 == 0B)
    goto <bb 91>;
  else
    goto <bb 84>;

  <bb 82>:
  # __y_19 = PHI <__y_441(87), __y_440(86)>
  # __y_434 = PHI <__y_681(87), __y_664(86)>
  # DEBUG __y => __y_434
  # DEBUG __x => __y_19
  if (__y_19 == 0B)
    goto <bb 88>;
  else
    goto <bb 83>;

  <bb 83>:
  goto <bb 85>;

  <bb 84>:

  <bb 85>:
  # __y_664 = PHI <prephitmp_795(84), __y_19(83)>
  # __y_681 = PHI <__y_170(84), __y_434(83)>
  # DEBUG __y => __y_681
  # DEBUG __x => __y_664
  # DEBUG __x => __y_664
  # DEBUG __x => __y_664
  # DEBUG this => __y_664
  # DEBUG D#794 => &MEM[(const struct _Rb_tree_node *)__y_664]._M_value_field
  # DEBUG __r => D#794
  # DEBUG __x => D#794
  # DEBUG this => D#290
  # DEBUG D#809 => &MEM[(const struct pair &)__y_664 + 32].first
  # DEBUG D#810 => &D#811->_M_impl._M_key_compare
  # DEBUG D#287 => D#810
  _439 = MEM[(const int &)__y_664 + 32];
  # DEBUG D#288 => D#809
  # DEBUG D#289 => &input
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (input.356_28 <= _439)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG __y => __y_664
  __y_440 = MEM[(struct _Rb_tree_node_base * *)__y_664 + 16B];
  # DEBUG D#209 => __y_664
  # DEBUG __x => D#209
  # DEBUG __x => NULL
  goto <bb 82>;

  <bb 87>:
  __y_441 = MEM[(struct _Rb_tree_node_base * *)__y_664 + 24B];
  # DEBUG D#208 => __y_664
  # DEBUG __x => D#208
  # DEBUG __x => NULL
  goto <bb 82>;

  <bb 88>:
  # __y_778 = PHI <__y_434(82)>
  # DEBUG this => NULL
  # DEBUG __x => __y_778
  # DEBUG __j$_M_node => __y_778
  # DEBUG this => D#816
  # DEBUG this => NULL
  # DEBUG __x => __y_170
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_170 == __y_778)
    goto <bb 91>;
  else
    goto <bb 89>;

  <bb 89>:
  # DEBUG __x => __y_778
  # DEBUG __x => __y_778
  # DEBUG this => __y_778
  # DEBUG D#409 => &MEM[(const struct _Rb_tree_node *)__y_778]._M_value_field
  # DEBUG __r => D#409
  # DEBUG __x => D#409
  # DEBUG this => D#290
  # DEBUG D#813 => &MEM[(const struct pair &)__y_778 + 32].first
  # DEBUG D#815 => &MEM[(struct _Rb_tree *)D#816]._M_impl._M_key_compare
  # DEBUG D#287 => D#815
  # DEBUG D#288 => &input
  _443 = MEM[(const int &)__y_778 + 32];
  # DEBUG D#289 => D#813
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (input.356_28 < _443)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:

  <bb 91>:
  # __y_444 = PHI <__y_778(88), __y_170(90), __y_778(89), __y_170(81)>
  # DEBUG D#814 => {CLOBBER}
  # DEBUG __j$_M_node => D#814
  # DEBUG this => &D.65377
  # DEBUG this => __y_444
  # DEBUG D#1914 => &__y_444->_M_value_field
  # DEBUG __r => D#1914
  _182 = MEM[(struct pair *)__y_444 + 32B].second;
  # DEBUG D#1915 => &_182->vc
  # DEBUG this => D#1915
  # DEBUG __x => &vc
  _179 = &MEM[(struct set *)_182]._M_t;
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (_179, &vc);
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#1938 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#1937 => MEM[(const bool &)&__p + 8]
  # DEBUG D#1936 => VIEW_CONVERT_EXPR<unsigned char>(D#1937)
  __p ={v} {CLOBBER};
  # DEBUG D.111940 => D#1938
  # DEBUG D.111941 => D#1936
  vc.359_183 = vc;
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.359_183
  _181 = (long unsigned int) vc.359_183;
  # DEBUG D#96 => &MEM[(const struct Buffer *)cur_buf_36]._vc
  _445 = MEM[(struct VC * * *)cur_buf_36 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _181
  # DEBUG this => D#42
  _446 = _181 * 8;
  _447 = _445 + _446;
  _448 = *_447;
  # DEBUG this => _448
  # DEBUG D#95 => &MEM[(const struct VC *)_448]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _449 = MEM[(struct Flit * * *)_448 + 144B];
  # DEBUG D#91 => D#94
  _450 = MEM[(struct Flit * * *)_448 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_449 == _450)
    goto <bb 92>;
  else
    goto <bb 97>;

  <bb 92>:
  _257 = iftmp.304_151->watch;
  if (_257 != 0)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  _258 = this_21(D)->D.51790._output_speedup;
  _259 = expanded_output_64 % _258;
  _260 = this_21(D)->D.51790._input_speedup;
  _261 = expanded_input_60 % _260;
  # DEBUG D#1930 => &this_21(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1930
  # DEBUG D#1931 => &MEM[(const struct Module *)this_21(D)]._fullname
  _265 = GetSimTime ();
  gWatchOut.360_266 = gWatchOut;
  _268 = std::basic_ostream<char>::operator<< (gWatchOut.360_266, _265);
  # DEBUG __out => _268
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_268, " | ", 3);
  # DEBUG __os => _268
  # DEBUG __str => D#1931
  _269 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1931
  # DEBUG this => D#3
  _452 = (long int) _269;
  # DEBUG this => D#1931
  _453 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1931
  # DEBUG this => D#1
  _454 = std::__ostream_insert<char, std::char_traits<char> > (_268, _453, _452);
  # DEBUG __out => _454
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_454, " | ", 3);
  # DEBUG __out => _454
  # DEBUG __s => "  Cancelling held connection from input "
  # DEBUG __s => "  Cancelling held connection from input "
  std::__ostream_insert<char, std::char_traits<char> > (_454, "  Cancelling held connection from input ", 40);
  _271 = std::basic_ostream<char>::operator<< (_454, input.356_28);
  # DEBUG __out => _271
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_271, ".", 1);
  _273 = std::basic_ostream<char>::operator<< (_271, _261);
  # DEBUG __out => _273
  # DEBUG __s => " to "
  # DEBUG __s => " to "
  std::__ostream_insert<char, std::char_traits<char> > (_273, " to ", 4);
  _275 = std::basic_ostream<char>::operator<< (_273, output_78);
  # DEBUG __out => _275
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_275, ".", 1);
  _277 = std::basic_ostream<char>::operator<< (_275, _259);
  # DEBUG __out => _277
  # DEBUG __s => ": No more flits."
  # DEBUG __s => ": No more flits."
  std::__ostream_insert<char, std::char_traits<char> > (_277, ": No more flits.", 16);
  # DEBUG this => _277
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_277);

  <bb 94>:
  # DEBUG D#1932 => &this_21(D)->_switch_hold_vc
  _357 = MEM[(int * *)this_21(D) + 1120B];
  # DEBUG D#55 => D#1932
  # DEBUG __n => _61
  # DEBUG this => D#55
  _457 = _357 + _75;
  *_457 = -1;
  # DEBUG D#1933 => &this_21(D)->_switch_hold_in
  _358 = MEM[(int * *)this_21(D) + 1072B];
  # DEBUG D#55 => D#1933
  # DEBUG __n => _61
  # DEBUG this => D#55
  _456 = _358 + _75;
  *_456 = -1;
  # DEBUG D#1934 => &this_21(D)->_switch_hold_out
  _359 = MEM[(int * *)this_21(D) + 1096B];
  # DEBUG D#55 => D#1934
  # DEBUG __n => _73
  # DEBUG this => D#55
  _455 = _359 + _389;
  *_455 = -1;
  _285 = iftmp.304_151->tail;
  if (_285 != 0)
    goto <bb 96>;
  else
    goto <bb 95>;

  <bb 95>:
  goto <bb 136>;

  <bb 96>:
  vc.359_286 = vc;
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.359_286
  # DEBUG s => 0
  _458 = (long unsigned int) vc.359_286;
  # DEBUG D#38 => &cur_buf_36->_vc
  _459 = MEM[(struct VC * * *)cur_buf_36 + 104B];
  # DEBUG D#36 => D#38
  # DEBUG __n => _458
  # DEBUG this => D#36
  _460 = _458 * 8;
  _461 = _459 + _460;
  _462 = *_461;
  VC::SetState (_462, 0);
  goto <bb 136>;

  <bb 97>:
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.359_183
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_36]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _181
  # DEBUG this => D#42
  # DEBUG this => _448
  # DEBUG D#184 => &MEM[(const struct VC *)_448]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_448]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_463 = MEM[(struct Flit * const &)_450];
  # DEBUG nf => iftmp.304_463
  if (iftmp.304_463 == 0B)
    goto <bb 98>;
  else
    goto <bb 99>;

  <bb 98>:
  # DEBUG nf => 0B
  __assert_fail ("nf", "routers/iq_router.cpp", 1148, &__PRETTY_FUNCTION__);

  <bb 99>:
  _184 = iftmp.304_463->vc;
  if (vc.359_183 != _184)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  __assert_fail ("nf->vc == vc", "routers/iq_router.cpp", 1149, &__PRETTY_FUNCTION__);

  <bb 101>:
  _185 = iftmp.304_151->tail;
  if (_185 != 0)
    goto <bb 102>;
  else
    goto <bb 121>;

  <bb 102>:
  _186 = iftmp.304_463->head;
  if (_186 != 0)
    goto <bb 104>;
  else
    goto <bb 103>;

  <bb 103>:
  __assert_fail ("nf->head", "routers/iq_router.cpp", 1151, &__PRETTY_FUNCTION__);

  <bb 104>:
  _187 = iftmp.304_151->watch;
  if (_187 != 0)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  _188 = this_21(D)->D.51790._output_speedup;
  _189 = expanded_output_64 % _188;
  _190 = this_21(D)->D.51790._input_speedup;
  _191 = expanded_input_60 % _190;
  # DEBUG D#1916 => &this_21(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1916
  # DEBUG D#1917 => &MEM[(const struct Module *)this_21(D)]._fullname
  _193 = GetSimTime ();
  gWatchOut.360_194 = gWatchOut;
  _196 = std::basic_ostream<char>::operator<< (gWatchOut.360_194, _193);
  # DEBUG __out => _196
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_196, " | ", 3);
  # DEBUG __os => _196
  # DEBUG __str => D#1917
  _197 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1917
  # DEBUG this => D#3
  _465 = (long int) _197;
  # DEBUG this => D#1917
  _466 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1917
  # DEBUG this => D#1
  _467 = std::__ostream_insert<char, std::char_traits<char> > (_196, _466, _465);
  # DEBUG __out => _467
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_467, " | ", 3);
  # DEBUG __out => _467
  # DEBUG __s => "  Cancelling held connection from input "
  # DEBUG __s => "  Cancelling held connection from input "
  std::__ostream_insert<char, std::char_traits<char> > (_467, "  Cancelling held connection from input ", 40);
  _199 = std::basic_ostream<char>::operator<< (_467, input.356_28);
  # DEBUG __out => _199
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_199, ".", 1);
  _201 = std::basic_ostream<char>::operator<< (_199, _191);
  # DEBUG __out => _201
  # DEBUG __s => " to "
  # DEBUG __s => " to "
  std::__ostream_insert<char, std::char_traits<char> > (_201, " to ", 4);
  _203 = std::basic_ostream<char>::operator<< (_201, output_78);
  # DEBUG __out => _203
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_203, ".", 1);
  _205 = std::basic_ostream<char>::operator<< (_203, _189);
  # DEBUG __out => _205
  # DEBUG __s => ": End of packet."
  # DEBUG __s => ": End of packet."
  std::__ostream_insert<char, std::char_traits<char> > (_205, ": End of packet.", 16);
  # DEBUG this => _205
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_205);

  <bb 106>:
  # DEBUG D#1918 => &this_21(D)->_switch_hold_vc
  _360 = MEM[(int * *)this_21(D) + 1120B];
  # DEBUG D#55 => D#1918
  # DEBUG __n => _61
  # DEBUG this => D#55
  _470 = _360 + _75;
  *_470 = -1;
  # DEBUG D#1919 => &this_21(D)->_switch_hold_in
  _361 = MEM[(int * *)this_21(D) + 1072B];
  # DEBUG D#55 => D#1919
  # DEBUG __n => _61
  # DEBUG this => D#55
  _469 = _361 + _75;
  *_469 = -1;
  # DEBUG D#1920 => &this_21(D)->_switch_hold_out
  _362 = MEM[(int * *)this_21(D) + 1096B];
  # DEBUG D#55 => D#1920
  # DEBUG __n => _73
  # DEBUG this => D#55
  _468 = _362 + _389;
  *_468 = -1;
  _212 = this_21(D)->_routing_delay;
  if (_212 != 0)
    goto <bb 107>;
  else
    goto <bb 113>;

  <bb 107>:
  vc.359_245 = vc;
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.359_245
  # DEBUG s => 1
  _471 = (long unsigned int) vc.359_245;
  # DEBUG D#38 => &cur_buf_36->_vc
  _472 = MEM[(struct VC * * *)cur_buf_36 + 104B];
  # DEBUG D#36 => D#38
  # DEBUG __n => _471
  # DEBUG this => D#36
  _473 = _471 * 8;
  _474 = _472 + _473;
  _475 = *_474;
  VC::SetState (_475, 1);
  # DEBUG __x => -1
  __y_263 = MEM[(const struct pair &)_1 + 4];
  # DEBUG __y => __y_263
  __y$4_262 = MEM[(const struct pair &)_1 + 8];
  # DEBUG __y$4 => __y$4_262
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65492] = -1;
  MEM[(struct pair *)&D.65492 + 4B] = __y_263;
  MEM[(struct pair *)&D.65492 + 8B] = __y$4_262;
  # DEBUG D#2628 => &this_21(D)->_route_vcs
  # DEBUG this => D#2628
  # DEBUG __x => &D.65492
  _173 = MEM[(struct deque *)this_21(D) + 432B].D.45014._M_impl._M_finish._M_cur;
  _618 = MEM[(struct deque *)this_21(D) + 432B].D.45014._M_impl._M_finish._M_last;
  _619 = _618 + 18446744073709551604;
  if (_173 != _619)
    goto <bb 108>;
  else
    goto <bb 111>;

  <bb 108>:
  # DEBUG D#1458 => &D#2628->D.45014._M_impl
  # DEBUG D#233 => D#1458
  # DEBUG __p => _173
  # DEBUG __arg => &D.65492
  # DEBUG __a => D#233
  # DEBUG D#232 => D#233
  # DEBUG D#231 => D#232
  # DEBUG __p => _173
  # DEBUG __val => &D.65492
  # DEBUG this => D#231
  # DEBUG D#12 => 12
  # DEBUG __p => _173
  # DEBUG D.93790 => D#12
  if (_173 != 0B)
    goto <bb 109>;
  else
    goto <bb 110>;

  <bb 109>:
  *_173 = D.65492;

  <bb 110>:
  _620 = _173 + 12;
  MEM[(struct deque *)this_21(D) + 432B].D.45014._M_impl._M_finish._M_cur = _620;
  goto <bb 112>;

  <bb 111>:
  _247 = &this_21(D)->_route_vcs;
  std::deque<std::pair<int, std::pair<int, int> > >::_M_push_back_aux (_247, &D.65492);

  <bb 112>:
  D.65492 ={v} {CLOBBER};
  goto <bb 136>;

  <bb 113>:
  _213 = iftmp.304_463->watch;
  if (_213 != 0)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  _214 = iftmp.304_463->id;
  vc.359_215 = vc;
  # DEBUG D#1921 => &this_21(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1921
  # DEBUG D#1922 => &MEM[(const struct Module *)this_21(D)]._fullname
  _218 = GetSimTime ();
  gWatchOut.360_219 = gWatchOut;
  _221 = std::basic_ostream<char>::operator<< (gWatchOut.360_219, _218);
  # DEBUG __out => _221
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_221, " | ", 3);
  # DEBUG __os => _221
  # DEBUG __str => D#1922
  _222 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1922
  # DEBUG this => D#3
  _476 = (long int) _222;
  # DEBUG this => D#1922
  _477 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1922
  # DEBUG this => D#1
  _478 = std::__ostream_insert<char, std::char_traits<char> > (_221, _477, _476);
  # DEBUG __out => _478
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_478, " | ", 3);
  # DEBUG __out => _478
  # DEBUG __s => "Using precomputed lookahead routing information for VC "
  # DEBUG __s => "Using precomputed lookahead routing information for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_478, "Using precomputed lookahead routing information for VC ", 55);
  _224 = std::basic_ostream<char>::operator<< (_478, vc.359_215);
  # DEBUG __out => _224
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_224, " at input ", 10);
  _226 = std::basic_ostream<char>::operator<< (_224, input.356_28);
  # DEBUG __out => _226
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_226, " (front: ", 9);
  _228 = std::basic_ostream<char>::operator<< (_226, _214);
  # DEBUG __out => _228
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_228, ").", 2);
  # DEBUG this => _228
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_228);

  <bb 115>:
  _230 = &iftmp.304_463->la_route_set;
  vc.359_231 = vc;
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.359_231
  # DEBUG output_set => _230
  _229 = (long unsigned int) vc.359_231;
  # DEBUG D#37 => &cur_buf_36->_vc
  _479 = MEM[(struct VC * * *)cur_buf_36 + 104B];
  # DEBUG D#36 => D#37
  # DEBUG __n => _229
  # DEBUG this => D#36
  _480 = _229 * 8;
  _481 = _479 + _480;
  _482 = *_481;
  VC::SetRouteSet (_482, _230);
  vc.359_233 = vc;
  # DEBUG this => cur_buf_36
  # DEBUG vc => vc.359_233
  # DEBUG s => 2
  _232 = (long unsigned int) vc.359_233;
  # DEBUG D#38 => &cur_buf_36->_vc
  _483 = MEM[(struct VC * * *)cur_buf_36 + 104B];
  # DEBUG D#36 => D#38
  # DEBUG __n => _232
  # DEBUG this => D#36
  _484 = _232 * 8;
  _485 = _483 + _484;
  _486 = *_485;
  VC::SetState (_486, 2);
  _234 = this_21(D)->_speculative;
  if (_234 != 0)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  __x_587 = MEM[(const struct pair &)_1 + 4];
  # DEBUG __x => __x_587
  __x$4_586 = MEM[(const struct pair &)_1 + 8];
  # DEBUG __x$4 => __x$4_586
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_587
  # DEBUG __y$4 => __x$4_586
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65495] = -1;
  MEM[(struct pair *)&D.65495 + 4B] = __x_587;
  MEM[(struct pair *)&D.65495 + 8B] = __x$4_586;
  MEM[(struct pair *)&D.65495 + 12B] = -1;
  _235 = &this_21(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::push_back (_235, &D.65495);
  D.65495 ={v} {CLOBBER};

  <bb 117>:
  _238 = this_21(D)->_vc_allocator;
  if (_238 != 0B)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  __x_559 = MEM[(const struct pair &)_1 + 4];
  # DEBUG __x => __x_559
  __x$4_558 = MEM[(const struct pair &)_1 + 8];
  # DEBUG __x$4 => __x$4_558
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_559
  # DEBUG __y$4 => __x$4_558
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65498] = -1;
  MEM[(struct pair *)&D.65498 + 4B] = __x_559;
  MEM[(struct pair *)&D.65498 + 8B] = __x$4_558;
  MEM[(struct pair *)&D.65498 + 12B] = -1;
  _239 = &this_21(D)->_vc_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::push_back (_239, &D.65498);
  D.65498 ={v} {CLOBBER};

  <bb 119>:
  _242 = this_21(D)->_noq;
  if (_242 != 0)
    goto <bb 120>;
  else
    goto <bb 95>;

  <bb 120>:
  vc.359_243 = vc;
  IQRouter::_UpdateNOQ (this_21(D), input.356_28, vc.359_243, iftmp.304_463);
  goto <bb 136>;

  <bb 121>:
  __x_246 = MEM[(const struct pair &)_1 + 4];
  # DEBUG __x => __x_246
  __x$4_575 = MEM[(const struct pair &)_1 + 8];
  # DEBUG __x$4 => __x$4_575
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_246
  # DEBUG __y$4 => __x$4_575
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65501] = -1;
  MEM[(struct pair *)&D.65501 + 4B] = __x_246;
  MEM[(struct pair *)&D.65501 + 8B] = __x$4_575;
  MEM[(struct pair *)&D.65501 + 12B] = -1;
  _252 = &this_21(D)->_sw_hold_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::push_back (_252, &D.65501);
  D.65501 ={v} {CLOBBER};
  goto <bb 136>;

  <bb 122>:
  STALL_BUFFER_RESERVED.366_293 = STALL_BUFFER_RESERVED;
  if (expanded_output_64 != STALL_BUFFER_RESERVED.366_293)
    goto <bb 123>;
  else
    goto <bb 126>;

  <bb 123>:
  _294 = this_21(D)->_output_buffer_size;
  if (_294 == -1)
    goto <bb 125>;
  else
    goto <bb 124>;

  <bb 124>:
  _295 = (long unsigned int) expanded_output_64;
  # DEBUG D#1923 => &this_21(D)->_output_buffer
  _372 = MEM[(struct queue * *)this_21(D) + 1016B];
  # DEBUG D#71 => D#1923
  # DEBUG __n => _295
  # DEBUG this => D#71
  _509 = _295 * 80;
  _510 = _372 + _509;
  # DEBUG this => NULL
  # DEBUG this => D#205
  # DEBUG D#201 => &D#205->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#205->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _251 = MEM[(const struct _Deque_iterator &)_510 + 48]._M_node;
  _487 = (long int) _251;
  _488 = MEM[(const struct _Deque_iterator &)_510 + 16]._M_node;
  _489 = (long int) _488;
  _490 = _487 - _489;
  _491 = _490 /[ex] 8;
  _492 = _491 + -1;
  _493 = _492 * 64;
  _494 = MEM[(const struct _Deque_iterator &)_510 + 48]._M_cur;
  _495 = (long int) _494;
  _496 = MEM[(const struct _Deque_iterator &)_510 + 48]._M_first;
  _497 = (long int) _496;
  _498 = _495 - _497;
  _499 = _498 /[ex] 8;
  _500 = _493 + _499;
  _501 = MEM[(const struct _Deque_iterator &)_510 + 16]._M_last;
  _502 = (long int) _501;
  _503 = MEM[(const struct _Deque_iterator &)_510 + 16]._M_cur;
  _504 = (long int) _503;
  _505 = _502 - _504;
  _506 = _505 /[ex] 8;
  _507 = _500 + _506;
  _508 = (size_type) _507;
  _299 = (long unsigned int) _294;
  if (_299 > _508)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 125>:
  __assert_fail ("(expanded_output == STALL_BUFFER_FULL) || (expanded_output == STALL_BUFFER_RESERVED) || !( _output_buffer_size==-1 || _output_buffer[expanded_output].size()<size_t(_output_buffer_size))", "routers/iq_router.cpp", 1196, &__PRETTY_FUNCTION__);

  <bb 126>:
  # DEBUG D#1924 => &this_21(D)->_switch_hold_in
  _363 = MEM[(int * *)this_21(D) + 1072B];
  # DEBUG D#55 => D#1924
  # DEBUG __n => _61
  # DEBUG this => D#55
  _511 = _363 + _75;
  held_expanded_output_303 = *_511;
  # DEBUG held_expanded_output => held_expanded_output_303
  if (held_expanded_output_303 < 0)
    goto <bb 127>;
  else
    goto <bb 128>;

  <bb 127>:
  __assert_fail ("held_expanded_output >= 0", "routers/iq_router.cpp", 1199, &__PRETTY_FUNCTION__);

  <bb 128>:
  _304 = iftmp.304_151->watch;
  if (_304 != 0)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 129>:
  _305 = this_21(D)->D.51790._output_speedup;
  _306 = held_expanded_output_303 % _305;
  _307 = held_expanded_output_303 / _305;
  _308 = expanded_input_60 % _56;
  # DEBUG D#1925 => &this_21(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1925
  # DEBUG D#1926 => &MEM[(const struct Module *)this_21(D)]._fullname
  _311 = GetSimTime ();
  gWatchOut.360_312 = gWatchOut;
  _314 = std::basic_ostream<char>::operator<< (gWatchOut.360_312, _311);
  # DEBUG __out => _314
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_314, " | ", 3);
  # DEBUG __os => _314
  # DEBUG __str => D#1926
  _315 = MEM[(long unsigned int *)this_21(D) + 48B];
  # DEBUG D#3 => D#1926
  # DEBUG this => D#3
  _512 = (long int) _315;
  # DEBUG this => D#1926
  _513 = MEM[(char * *)this_21(D) + 40B];
  # DEBUG D#1 => D#1926
  # DEBUG this => D#1
  _514 = std::__ostream_insert<char, std::char_traits<char> > (_314, _513, _512);
  # DEBUG __out => _514
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_514, " | ", 3);
  # DEBUG __out => _514
  # DEBUG __s => "  Cancelling held connection from input "
  # DEBUG __s => "  Cancelling held connection from input "
  std::__ostream_insert<char, std::char_traits<char> > (_514, "  Cancelling held connection from input ", 40);
  _317 = std::basic_ostream<char>::operator<< (_514, input.356_28);
  # DEBUG __out => _317
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_317, ".", 1);
  _319 = std::basic_ostream<char>::operator<< (_317, _308);
  # DEBUG __out => _319
  # DEBUG __s => " to "
  # DEBUG __s => " to "
  std::__ostream_insert<char, std::char_traits<char> > (_319, " to ", 4);
  _321 = std::basic_ostream<char>::operator<< (_319, _307);
  # DEBUG __out => _321
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_321, ".", 1);
  _323 = std::basic_ostream<char>::operator<< (_321, _306);
  # DEBUG __out => _323
  # DEBUG __s => ": Flit not sent."
  # DEBUG __s => ": Flit not sent."
  std::__ostream_insert<char, std::char_traits<char> > (_323, ": Flit not sent.", 16);
  # DEBUG this => _323
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_323);
  pretmp_770 = MEM[(int * *)this_21(D) + 1120B];
  pretmp_772 = MEM[(int * *)this_21(D) + 1072B];
  pretmp_774 = pretmp_772 + _75;
  pretmp_776 = pretmp_770 + _75;

  <bb 130>:
  # prephitmp_775 = PHI <_511(128), pretmp_774(129)>
  # prephitmp_777 = PHI <_71(128), pretmp_776(129)>
  # DEBUG D#1927 => &this_21(D)->_switch_hold_vc
  # DEBUG D#55 => D#1927
  # DEBUG __n => _61
  # DEBUG this => D#55
  *prephitmp_777 = -1;
  # DEBUG D#1928 => &this_21(D)->_switch_hold_in
  # DEBUG D#55 => D#1928
  # DEBUG __n => _61
  # DEBUG this => D#55
  *prephitmp_775 = -1;
  _327 = (long unsigned int) held_expanded_output_303;
  # DEBUG D#1929 => &this_21(D)->_switch_hold_out
  _366 = MEM[(int * *)this_21(D) + 1096B];
  # DEBUG D#55 => D#1929
  # DEBUG __n => _327
  # DEBUG this => D#55
  _515 = _327 * 4;
  _516 = _366 + _515;
  *_516 = -1;
  __x_154 = MEM[(const struct pair &)_1 + 4];
  # DEBUG __x => __x_154
  __x$4_149 = MEM[(const struct pair &)_1 + 8];
  # DEBUG __x$4 => __x$4_149
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_154
  # DEBUG __y$4 => __x$4_149
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65505] = -1;
  MEM[(struct pair *)&D.65505 + 4B] = __x_154;
  MEM[(struct pair *)&D.65505 + 8B] = __x$4_149;
  MEM[(struct pair *)&D.65505 + 12B] = -1;
  # DEBUG D#2627 => &this_21(D)->_sw_alloc_vcs
  # DEBUG this => D#2627
  # DEBUG __x => &D.65505
  _248 = MEM[(struct deque *)this_21(D) + 672B].D.45936._M_impl._M_finish._M_cur;
  _621 = MEM[(struct deque *)this_21(D) + 672B].D.45936._M_impl._M_finish._M_last;
  _622 = _621 + 18446744073709551600;
  if (_248 != _622)
    goto <bb 131>;
  else
    goto <bb 134>;

  <bb 131>:
  # DEBUG D#1467 => &D#2627->D.45936._M_impl
  # DEBUG D#236 => D#1467
  # DEBUG __p => _248
  # DEBUG __arg => &D.65505
  # DEBUG __a => D#236
  # DEBUG D#235 => D#236
  # DEBUG D#234 => D#235
  # DEBUG __p => _248
  # DEBUG __val => &D.65505
  # DEBUG this => D#234
  # DEBUG D#12 => 16
  # DEBUG __p => _248
  # DEBUG D.93816 => D#12
  if (_248 != 0B)
    goto <bb 132>;
  else
    goto <bb 133>;

  <bb 132>:
  *_248 = D.65505;

  <bb 133>:
  _623 = _248 + 16;
  MEM[(struct deque *)this_21(D) + 672B].D.45936._M_impl._M_finish._M_cur = _623;
  goto <bb 135>;

  <bb 134>:
  _330 = &this_21(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::_M_push_back_aux (_330, &D.65505);

  <bb 135>:
  D.65505 ={v} {CLOBBER};

  <bb 136>:
  # DEBUG D#2622 => &this_21(D)->_sw_hold_vcs
  # DEBUG this => D#2622
  _519 = MEM[(struct deque *)this_21(D) + 592B].D.45936._M_impl._M_start._M_cur;
  _520 = MEM[(struct deque *)this_21(D) + 592B].D.45936._M_impl._M_start._M_last;
  _521 = _520 + 18446744073709551600;
  if (_519 != _521)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  # DEBUG D#777 => D#2622->D.45936._M_impl._M_start._M_cur
  # DEBUG D#776 => &D#2622->D.45936._M_impl
  # DEBUG D#281 => D#776
  # DEBUG D#282 => D#777
  # DEBUG __a => D#281
  # DEBUG __p => D#282
  # DEBUG D#280 => D#282
  # DEBUG D#279 => D#281
  # DEBUG D#277 => D#279
  # DEBUG D#278 => D#280
  # DEBUG this => D#277
  # DEBUG __p => D#278
  _522 = _519 + 16;
  MEM[(struct deque *)this_21(D) + 592B].D.45936._M_impl._M_start._M_cur = _522;
  goto <bb 139>;

  <bb 138>:
  # DEBUG this => D#2622
  # DEBUG this => D#2622
  # DEBUG D#775 => D#2622->D.45936._M_impl._M_start._M_cur
  # DEBUG D#772 => &D#2622->D.45936
  # DEBUG this => D#772
  # DEBUG D#282 => D#775
  # DEBUG __a => D#281
  # DEBUG __p => D#282
  # DEBUG D#280 => D#282
  # DEBUG D#279 => D#281
  # DEBUG D#277 => D#279
  # DEBUG D#278 => D#280
  # DEBUG this => D#277
  # DEBUG __p => D#278
  _331 = MEM[(struct deque *)this_21(D) + 592B].D.45936._M_impl._M_start._M_first;
  # DEBUG D#774 => &D#2622->D.45936
  # DEBUG this => D#774
  # DEBUG __p => _331
  # DEBUG __size => 16
  # DEBUG D#768 => &D#774->_M_impl
  # DEBUG D#766 => D#768
  # DEBUG __p => _331
  # DEBUG __a => D#766
  # DEBUG __n => D#767
  # DEBUG D#765 => D#767
  # DEBUG D#764 => D#766
  # DEBUG D#762 => D#764
  # DEBUG D#763 => D#765
  # DEBUG __p => _331
  # DEBUG this => D#762
  # DEBUG D.124141 => D#763
  operator delete (_331);
  _624 = MEM[(struct deque *)this_21(D) + 592B].D.45936._M_impl._M_start._M_node;
  _625 = _624 + 8;
  # DEBUG D#773 => &D#2622->D.45936._M_impl._M_start
  # DEBUG this => D#773
  # DEBUG __new_node => _625
  MEM[(struct _Deque_iterator *)this_21(D) + 608B]._M_node = _625;
  _626 = MEM[(struct pair * *)_624 + 8B];
  MEM[(struct _Deque_iterator *)this_21(D) + 608B]._M_first = _626;
  # DEBUG __size => 16
  _627 = _626 + 512;
  MEM[(struct _Deque_iterator *)this_21(D) + 608B]._M_last = _627;
  MEM[(struct deque *)this_21(D) + 592B].D.45936._M_impl._M_start._M_cur = _626;

  <bb 139>:
  # prephitmp_780 = PHI <_626(138), _522(137)>
  # DEBUG D#1886 => {CLOBBER}
  # DEBUG input => D#1886
  vc ={v} {CLOBBER};
  # DEBUG D#1935 => &this_21(D)->_sw_hold_vcs
  # DEBUG this => D#1935
  # DEBUG D#149 => &MEM[(const struct deque *)D#1935].D.45936._M_impl._M_start
  # DEBUG D#150 => &MEM[(const struct deque *)D#1935].D.45936._M_impl._M_finish
  _328 = MEM[(struct pair * *)this_21(D) + 640B];
  # DEBUG D#147 => D#150
  # DEBUG D#2623 => MEM[(struct pair * *)this_21(D) + 608B]
  # DEBUG D#148 => D#149
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_328 != prephitmp_780)
    goto <bb 7>;
  else
    goto <bb 4>;

  <bb 140>:
  # DEBUG D#1888 => {CLOBBER}
  # DEBUG input => D#1888
  vc ={v} {CLOBBER};

  <bb 141>:
  return;

  <bb 142>:
  # DEBUG D#1895 => &this_21(D)->_switch_hold_in
  _352 = MEM[(int * *)this_21(D) + 1072B];
  # DEBUG D#55 => D#1895
  # DEBUG __n => _61
  # DEBUG this => D#55
  _388 = _352 + _75;
  _72 = *_388;
  if (expanded_output_64 != _72)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 143>:
  STALL_BUFFER_FULL.365_292 = STALL_BUFFER_FULL;
  if (expanded_output_64 != STALL_BUFFER_FULL.365_292)
    goto <bb 122>;
  else
    goto <bb 126>;

  <bb 144>:
  # DEBUG D#800 => {CLOBBER}
  # DEBUG __j$_M_node => D#800
  # DEBUG this => NULL
  # DEBUG __x => NULL
  _178 = Credit::New ();
  # DEBUG __x => input.356_28
  # DEBUG __y => _178
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG this => &D.65276
  # DEBUG __p => &D.65204
  D.65276.first = input.356_28;
  D.65276.second = _178;
  # DEBUG D#1912 => &this_21(D)->_out_queue_credits
  # DEBUG this => D#1912
  # DEBUG __x => &D.65276
  _436 = &MEM[(struct map *)this_21(D) + 832B]._M_t;
  D.111596 = std::_Rb_tree<int, std::pair<const int, Credit*>, std::_Select1st<std::pair<const int, Credit*> >, std::less<int>, std::allocator<std::pair<const int, Credit*> > >::_M_insert_unique (_436, &D.65276);
  D.65276 ={v} {CLOBBER};
  pretmp_794 = MEM[(struct _Rb_tree_node_base * *)this_21(D) + 848B];
  goto <bb 81>;

}



;; Function void IQRouter::_SWAllocUpdate() (_ZN8IQRouter14_SWAllocUpdateEv, funcdef_no=2249, decl_uid=51710, cgraph_uid=694, symbol_order=695)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
void IQRouter::_SWAllocUpdate() (struct IQRouter * const this)
{
  bool D.124248;
  bool D.124241;
  static const char __PRETTY_FUNCTION__[44] = "bool BufferState::IsAvailableFor(int) const";
  bool D.124236;
  static const char __PRETTY_FUNCTION__[40] = "bool BufferState::IsEmptyFor(int) const";
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  int __x$4;
  int __x;
  int __x$4;
  int __x;
  int __x$4;
  int __x;
  int __x$4;
  int __x;
  int __x$4;
  int __x;
  int __y$4;
  int __y;
  const struct _Rb_tree_node_base * const iset$_M_node;
  struct _Rb_tree_node * __y;
  struct pair __p;
  struct pair D.112452;
  const struct _Rb_tree_node * __y;
  int in_channel;
  int next_vc_end;
  int next_vc_start;
  int next_output_port;
  const struct FlitChannel * channel;
  int vc_end;
  const struct set setlist;
  int match_prio;
  const int vc_offset;
  const int cl;
  int match_vc;
  struct BufferState * const dest_buf;
  const int output;
  const int expanded_input;
  const int expanded_output;
  struct Buffer * const cur_buf;
  const int vc;
  const int time;
  static const char __PRETTY_FUNCTION__[32] = "void IQRouter::_SWAllocUpdate()";
  struct pair D.65667;
  struct pair D.65664;
  struct pair D.65661;
  struct pair D.65658;
  struct pair D.65655;
  struct pair D.65652;
  const struct value_type D.65646;
  struct pair D.65644;
  struct pair * const _15;
  bool _20;
  bool _28;
  struct VC * _48;
  struct VC * const & _49;
  int _52;
  int _54;
  int input.460_55;
  int _56;
  int vc.462_57;
  int _59;
  long unsigned int _60;
  long unsigned int _61;
  struct VC * * const _63;
  long unsigned int _64;
  bool _65;
  struct BufferState * & _66;
  long unsigned int _68;
  int _69;
  bool _70;
  int _71;
  int _73;
  struct ostream * gWatchOut.464_74;
  struct basic_ostream & _76;
  const size_type _77;
  struct basic_ostream & _79;
  struct basic_ostream & _81;
  struct basic_ostream & _83;
  int _85;
  int _86;
  int _88;
  long unsigned int _90;
  int & _91;
  int _92;
  long unsigned int _93;
  int _94;
  long unsigned int _95;
  int _96;
  int _97;
  int _99;
  long unsigned int _100;
  int & _101;
  struct Allocator * _103;
  bool _104;
  int _106;
  int _107;
  int _108;
  long unsigned int _109;
  int & _111;
  const struct set & _113;
  bool _115;
  long unsigned int _116;
  int _121;
  bool _123;
  int vc.463_124;
  long unsigned int _125;
  int _126;
  int _127;
  struct basic_ostream & _130;
  char * const _132;
  long int _133;
  int _138;
  int _139;
  bool _141;
  struct Flit * iftmp.304_144;
  int _149;
  bool _156;
  int _160;
  struct ostream * gWatchOut.464_161;
  struct basic_ostream & _163;
  const size_type _164;
  struct basic_ostream & _166;
  struct basic_ostream & _168;
  long unsigned int _169;
  int vc.463_170;
  long unsigned int _171;
  int vc.463_172;
  int _173;
  int _174;
  int vc.463_175;
  int _176;
  int _178;
  int _179;
  int _180;
  long unsigned int _181;
  int _183;
  int _184;
  int _185;
  int _193;
  bool _194;
  int _195;
  int _196;
  int vc.463_197;
  int _198;
  int _199;
  int _201;
  struct ostream * gWatchOut.464_202;
  struct basic_ostream & _204;
  const size_type _205;
  struct basic_ostream & _207;
  struct basic_ostream & _209;
  struct basic_ostream & _211;
  struct basic_ostream & _213;
  int _214;
  int vc.463_215;
  struct BufferMonitor * _216;
  int _218;
  int _219;
  int _222;
  bool _223;
  struct OutputSet * _225;
  bool _227;
  bool _228;
  int _229;
  int _231;
  struct ostream * gWatchOut.464_232;
  struct basic_ostream & _234;
  const size_type _235;
  struct basic_ostream & _237;
  struct Flit * * const _238;
  void (*<T72d4>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _240;
  struct OutputSet * _241;
  bool _243;
  int _244;
  int _246;
  struct ostream * gWatchOut.464_247;
  struct basic_ostream & _249;
  const size_type _250;
  struct basic_ostream & _252;
  int vc.463_253;
  long unsigned int _254;
  const eVCState _257;
  int vc.463_259;
  long unsigned int _260;
  int _263;
  int vc.463_266;
  long unsigned int _267;
  struct Buffer * & _269;
  int _271;
  long unsigned int _273;
  struct OutputSet * _275;
  struct deque * _284;
  struct pair * _285;
  struct Flit * * const _288;
  struct Credit * _290;
  struct _Rep_type * _291;
  long unsigned int _293;
  struct VC * _294;
  struct Credit * _295;
  int vc.463_297;
  struct VC * const & _298;
  long unsigned int _299;
  int _300;
  bool _301;
  bool _302;
  int _303;
  bool _304;
  int _305;
  struct VC * * const _306;
  int _308;
  struct ostream * gWatchOut.464_309;
  struct basic_ostream & _311;
  const size_type _312;
  struct basic_ostream & _314;
  struct basic_ostream & _316;
  struct basic_ostream & _318;
  struct OutputSet * _320;
  long unsigned int _322;
  int vc.463_323;
  bool _324;
  struct deque * _325;
  struct Allocator * _328;
  struct deque * _330;
  bool _333;
  int vc.463_334;
  struct deque * _336;
  struct pair * _337;
  bool _340;
  struct deque * _341;
  bool _344;
  int _345;
  int _346;
  int _347;
  int _348;
  long unsigned int _350;
  int _353;
  struct ostream * gWatchOut.464_354;
  struct basic_ostream & _356;
  const size_type _357;
  struct basic_ostream & _359;
  struct basic_ostream & _361;
  struct basic_ostream & _363;
  struct basic_ostream & _365;
  struct basic_ostream & _367;
  struct deque * _374;
  bool _379;
  bool _386;
  struct pair * const _387;
  int _389;
  struct ostream * gWatchOut.464_390;
  struct basic_ostream & _392;
  const size_type _393;
  struct pair * _394;
  struct deque * _395;
  const struct Router * const _407;
  struct BufferPolicy * const _408;
  struct Buffer * * _409;
  struct BufferState * * _410;
  int * _411;
  int * _412;
  int * _413;
  int * _414;
  int * _415;
  int * _416;
  int * _417;
  int * _418;
  int * _419;
  int * _420;
  int * _421;
  int * _422;
  int * _423;
  int * _424;
  struct FlitChannel * * _425;
  struct vector * _426;
  struct vector * _427;
  struct vector * _428;
  struct vector * _429;
  struct vector * _430;
  struct vector * _431;
  const eVCState _432;
  const struct OutputSet * _438;
  long unsigned int _439;
  int & _440;
  bool _441;
  long unsigned int _444;
  int & _445;
  long unsigned int _446;
  struct vector & _447;
  int & _448;
  struct vector & _449;
  int & _451;
  struct vector & _453;
  int (*__vtbl_ptr_type) () * _454;
  int (*__vtbl_ptr_type) () _455;
  bool _456;
  long int _459;
  char * const _460;
  struct basic_ostream & _461;
  struct VC * * _462;
  long unsigned int _463;
  struct VC * & _464;
  struct VC * _465;
  struct VC * * _466;
  long unsigned int _467;
  struct VC * & _468;
  struct VC * _469;
  struct _Rb_tree_node_base * _470;
  long unsigned int _471;
  int & _472;
  const int _478;
  long int _480;
  char * const _481;
  struct basic_ostream & _482;
  int _483;
  long unsigned int _484;
  struct VC * * _485;
  long unsigned int _486;
  struct VC * & _487;
  struct VC * _488;
  struct FlitChannel * & _489;
  long int _490;
  char * const _491;
  struct basic_ostream & _492;
  long unsigned int _493;
  int & _494;
  long unsigned int _495;
  struct vector & _496;
  long unsigned int _497;
  int & _498;
  struct vector & _499;
  long unsigned int _500;
  int & _501;
  struct vector & _502;
  long int _503;
  char * const _504;
  struct basic_ostream & _505;
  const int _507;
  const int _511;
  bool _514;
  struct _Rep_type * _516;
  const int _519;
  const int _523;
  struct VC * * const _525;
  long unsigned int _526;
  struct VC * const & _527;
  struct VC * _528;
  struct Flit * * const _529;
  struct Flit * * const _530;
  struct Flit * iftmp.304_531;
  long int _533;
  char * const _534;
  struct basic_ostream & _535;
  struct VC * * _540;
  long unsigned int _541;
  struct VC * & _542;
  struct VC * _543;
  long int _544;
  char * const _545;
  struct basic_ostream & _546;
  int & _547;
  int & _548;
  int & _549;
  long int _550;
  char * const _551;
  struct basic_ostream & _552;
  struct pair * _553;
  struct pair * _554;
  struct pair * _555;
  struct _Rb_tree_node_base * _556;
  int _566;
  struct _Rb_tree_node_base * const _667;
  long unsigned int _674;
  long unsigned int _675;
  int * const _676;
  long unsigned int _677;
  const int & _678;
  int _679;
  int _681;
  int * const _683;
  const int & _685;
  int _686;
  int _688;
  int _689;
  int _690;
  int _691;
  int _692;
  int _693;
  struct pair * _695;
  struct pair * _696;
  struct pair * _697;
  struct pair * _698;
  struct pair * _699;
  struct pair * _700;
  struct pair * _701;
  struct pair * * _702;
  struct pair * * _703;
  struct pair * _704;
  struct pair * _705;
  int prephitmp_778;
  int pretmp_779;
  int prephitmp_780;
  int pretmp_781;
  struct pair * const _783;
  int pretmp_786;
  int pretmp_787;
  struct pair * const prephitmp_790;
  const int pretmp_832;
  const int prephitmp_838;
  struct pair * const _853;
  long unsigned int pretmp_893;
  long unsigned int pretmp_894;
  struct VC * * const pretmp_896;
  struct _Rb_tree_node_base * pretmp_901;
  struct _Rb_tree_node_base * prephitmp_902;
  const int pretmp_904;
  const int prephitmp_905;
  const int pretmp_906;
  struct VC * * pretmp_908;
  long unsigned int pretmp_910;
  long unsigned int pretmp_911;
  struct VC * * pretmp_913;
  struct VC * pretmp_915;
  struct VC * prephitmp_916;
  const size_type prephitmp_923;
  struct _Rb_tree_node_base * const prephitmp_924;
  long unsigned int pretmp_954;
  long unsigned int pretmp_956;
  long unsigned int prephitmp_957;
  struct VC * const & pretmp_961;
  struct VC * const pretmp_962;
  struct VC * const prephitmp_963;

  <bb 2>:
  # DEBUG D#1988 => &this_47(D)->_sw_alloc_vcs
  # DEBUG this => D#1988
  # DEBUG D#149 => &MEM[(const struct deque *)D#1988].D.45936._M_impl._M_start
  # DEBUG D#150 => &MEM[(const struct deque *)D#1988].D.45936._M_impl._M_finish
  _783 = MEM[(struct pair * *)this_47(D) + 720B];
  # DEBUG D#147 => D#150
  _853 = MEM[(struct pair * *)this_47(D) + 688B];
  # DEBUG D#148 => D#149
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_783 != _853)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 214>;

  <bb 4>:
  # DEBUG D#1942 => &this_47(D)->_sw_alloc_vcs
  # DEBUG this => D#1942
  # DEBUG this => D#1942
  # DEBUG D#67 => &D#1942->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#168 => MEM[(const struct iterator &)D#1942 + 16]._M_first
  # DEBUG D.93162 => D#168
  # DEBUG D#167 => MEM[(const struct iterator &)D#1942 + 16]._M_last
  # DEBUG D.93163 => D#167
  # DEBUG D#166 => MEM[(const struct iterator &)D#1942 + 16]._M_node
  # DEBUG D.93164 => D#166
  # DEBUG this => D#165
  # DEBUG item => _853
  time_854 = MEM[(const struct pair &)_853].first;
  # DEBUG time => time_854
  if (time_854 < 0)
    goto <bb 218>;
  else
    goto <bb 7>;

  <bb 5>:
  # DEBUG D#1942 => &this_47(D)->_sw_alloc_vcs
  # DEBUG this => D#1942
  # DEBUG this => D#1942
  # DEBUG D#67 => &D#1942->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#168 => MEM[(const struct iterator &)D#1942 + 16]._M_first
  # DEBUG D.93162 => D#168
  # DEBUG D#167 => MEM[(const struct iterator &)D#1942 + 16]._M_last
  # DEBUG D.93163 => D#167
  # DEBUG D#166 => MEM[(const struct iterator &)D#1942 + 16]._M_node
  # DEBUG D.93164 => D#166
  # DEBUG this => D#165
  # DEBUG item => D#2647
  time_50 = MEM[(const struct pair &)prephitmp_790].first;
  # DEBUG time => time_50
  if (time_50 < 0)
    goto <bb 218>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 8>;

  <bb 7>:

  <bb 8>:
  # time_16 = PHI <time_854(7), time_50(6)>
  # _15 = PHI <_853(7), prephitmp_790(6)>
  # DEBUG D#1988 => &this_47(D)->_sw_alloc_vcs
  # DEBUG this => D#1988
  # DEBUG D#149 => &MEM[(const struct deque *)D#1988].D.45936._M_impl._M_start
  # DEBUG D#150 => &MEM[(const struct deque *)D#1988].D.45936._M_impl._M_finish
  # DEBUG D#147 => D#150
  # DEBUG D#148 => D#149
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  # DEBUG D#1942 => &this_47(D)->_sw_alloc_vcs
  # DEBUG this => D#1942
  # DEBUG this => D#1942
  # DEBUG D#67 => &D#1942->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#168 => MEM[(const struct iterator &)D#1942 + 16]._M_first
  # DEBUG D.93162 => D#168
  # DEBUG D#167 => MEM[(const struct iterator &)D#1942 + 16]._M_last
  # DEBUG D.93163 => D#167
  # DEBUG D#166 => MEM[(const struct iterator &)D#1942 + 16]._M_node
  # DEBUG D.93164 => D#166
  # DEBUG this => D#165
  # DEBUG item => _15
  # DEBUG time => time_16
  _52 = GetSimTime ();
  if (time_16 > _52)
    goto <bb 218>;
  else
    goto <bb 217>;

  <bb 9>:
  __assert_fail ("GetSimTime() == time", "routers/iq_router.cpp", 1846, &__PRETTY_FUNCTION__);

  <bb 10>:
  input.460_55 = MEM[(const struct pair &)_15].second.first.first;
  # DEBUG input => input.460_55
  if (input.460_55 < 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _56 = this_47(D)->D.51790._inputs;
  if (input.460_55 >= _56)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 1849, &__PRETTY_FUNCTION__);

  <bb 13>:
  vc.462_57 = MEM[(const struct pair &)_15].second.first.second;
  vc = vc.462_57;
  if (vc.462_57 < 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  _59 = this_47(D)->_vcs;
  if (vc.462_57 >= _59)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 1851, &__PRETTY_FUNCTION__);

  <bb 16>:
  _60 = (long unsigned int) input.460_55;
  # DEBUG D#1943 => &this_47(D)->_buf
  _409 = MEM[(struct Buffer * * *)this_47(D) + 880B];
  # DEBUG D#53 => D#1943
  # DEBUG __n => _60
  # DEBUG this => D#53
  _273 = _60 * 8;
  _269 = _409 + _273;
  cur_buf_62 = *_269;
  # DEBUG cur_buf => cur_buf_62
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.462_57
  _350 = (long unsigned int) vc.462_57;
  # DEBUG D#96 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  _306 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _350
  # DEBUG this => D#42
  _299 = _350 * 8;
  _298 = _306 + _299;
  _294 = *_298;
  # DEBUG this => _294
  # DEBUG D#95 => &MEM[(const struct VC *)_294]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _288 = MEM[(struct Flit * * *)_294 + 144B];
  # DEBUG D#91 => D#94
  _238 = MEM[(struct Flit * * *)_294 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_238 == _288)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 1854, &__PRETTY_FUNCTION__);

  <bb 18>:
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.462_57
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _350
  # DEBUG this => D#42
  _257 = MEM[(eVCState *)_294 + 176B];
  # DEBUG D#21 => _294
  # DEBUG this => D#21
  if (_257 != 3)
    goto <bb 19>;
  else
    goto <bb 21>;

  <bb 19>:
  _65 = this_47(D)->_speculative;
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.462_57
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _350
  # DEBUG this => D#42
  # DEBUG D#21 => _294
  # DEBUG this => D#21
  _441 = _257 != 2;
  if (_65 <= _441)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __assert_fail ("(cur_buf->GetState(vc) == VC::active) || (_speculative && (cur_buf->GetState(vc) == VC::vc_alloc))", "routers/iq_router.cpp", 1856, &__PRETTY_FUNCTION__);

  <bb 21>:
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.462_57
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _350
  # DEBUG this => D#42
  # DEBUG this => _294
  # DEBUG D#184 => &MEM[(const struct VC *)_294]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_294]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_144 = MEM[(struct Flit * const &)_238];
  # DEBUG f => iftmp.304_144
  if (iftmp.304_144 == 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 1859, &__PRETTY_FUNCTION__);

  <bb 23>:
  _69 = iftmp.304_144->vc;
  if (vc.462_57 != _69)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 1860, &__PRETTY_FUNCTION__);

  <bb 25>:
  _70 = iftmp.304_144->watch;
  if (_70 != 0)
    goto <bb 26>;
  else
    goto <bb 227>;

  <bb 26>:
  _71 = iftmp.304_144->id;
  # DEBUG D#1944 => &this_47(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1944
  # DEBUG D#1945 => &MEM[(const struct Module *)this_47(D)]._fullname
  _73 = GetSimTime ();
  gWatchOut.464_74 = gWatchOut;
  _76 = std::basic_ostream<char>::operator<< (gWatchOut.464_74, _73);
  # DEBUG __out => _76
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_76, " | ", 3);
  # DEBUG __os => _76
  # DEBUG __str => D#1945
  _77 = MEM[(long unsigned int *)this_47(D) + 48B];
  # DEBUG D#3 => D#1945
  # DEBUG this => D#3
  _133 = (long int) _77;
  # DEBUG this => D#1945
  _132 = MEM[(char * *)this_47(D) + 40B];
  # DEBUG D#1 => D#1945
  # DEBUG this => D#1
  _130 = std::__ostream_insert<char, std::char_traits<char> > (_76, _132, _133);
  # DEBUG __out => _130
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_130, " | ", 3);
  # DEBUG __out => _130
  # DEBUG __s => "Completed switch allocation for VC "
  # DEBUG __s => "Completed switch allocation for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_130, "Completed switch allocation for VC ", 35);
  _79 = std::basic_ostream<char>::operator<< (_130, vc.462_57);
  # DEBUG __out => _79
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_79, " at input ", 10);
  _81 = std::basic_ostream<char>::operator<< (_79, input.460_55);
  # DEBUG __out => _81
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_81, " (front: ", 9);
  _83 = std::basic_ostream<char>::operator<< (_81, _71);
  # DEBUG __out => _83
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_83, ").", 2);
  # DEBUG this => _83
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_83);
  expanded_output_84 = MEM[(const struct pair &)_15].second.second;
  # DEBUG expanded_output => expanded_output_84
  if (expanded_output_84 >= 0)
    goto <bb 27>;
  else
    goto <bb 206>;

  <bb 27>:
  pretmp_832 = vc;

  <bb 28>:
  # expanded_output_1 = PHI <expanded_output_84(27), expanded_output_837(227)>
  # prephitmp_838 = PHI <pretmp_832(27), vc.462_57(227)>
  _85 = this_47(D)->D.51790._input_speedup;
  _86 = input.460_55 * _85;
  # DEBUG D#2658 => vc
  _88 = prephitmp_838 % _85;
  expanded_input_89 = _86 + _88;
  # DEBUG expanded_input => expanded_input_89
  _90 = (long unsigned int) expanded_input_89;
  # DEBUG D#1946 => &this_47(D)->_switch_hold_vc
  _411 = MEM[(int * *)this_47(D) + 1120B];
  # DEBUG D#55 => D#1946
  # DEBUG __n => _90
  # DEBUG this => D#55
  _116 = _90 * 4;
  _111 = _411 + _116;
  _92 = *_111;
  if (_92 >= 0)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  __assert_fail ("_switch_hold_vc[expanded_input] < 0", "routers/iq_router.cpp", 1875, &__PRETTY_FUNCTION__);

  <bb 30>:
  # DEBUG D#1947 => &this_47(D)->_switch_hold_in
  _412 = MEM[(int * *)this_47(D) + 1072B];
  # DEBUG D#55 => D#1947
  # DEBUG __n => _90
  # DEBUG this => D#55
  _101 = _412 + _116;
  _94 = *_101;
  if (_94 >= 0)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  __assert_fail ("_switch_hold_in[expanded_input] < 0", "routers/iq_router.cpp", 1876, &__PRETTY_FUNCTION__);

  <bb 32>:
  _95 = (long unsigned int) expanded_output_1;
  # DEBUG D#1948 => &this_47(D)->_switch_hold_out
  _413 = MEM[(int * *)this_47(D) + 1096B];
  # DEBUG D#55 => D#1948
  # DEBUG __n => _95
  # DEBUG this => D#55
  _93 = _95 * 4;
  _91 = _413 + _93;
  _96 = *_91;
  if (_96 >= 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  __assert_fail ("_switch_hold_out[expanded_output] < 0", "routers/iq_router.cpp", 1877, &__PRETTY_FUNCTION__);

  <bb 34>:
  _97 = this_47(D)->D.51790._output_speedup;
  output_98 = expanded_output_1 / _97;
  # DEBUG output => output_98
  if (output_98 < 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  _99 = this_47(D)->D.51790._outputs;
  if (output_98 >= _99)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  __assert_fail ("(output >= 0) && (output < _outputs)", "routers/iq_router.cpp", 1880, &__PRETTY_FUNCTION__);

  <bb 37>:
  _100 = (long unsigned int) output_98;
  # DEBUG D#1949 => &this_47(D)->_next_buf
  _410 = MEM[(struct BufferState * * *)this_47(D) + 904B];
  # DEBUG D#54 => D#1949
  # DEBUG __n => _100
  # DEBUG this => D#54
  _68 = _100 * 8;
  _66 = _410 + _68;
  dest_buf_102 = *_66;
  # DEBUG dest_buf => dest_buf_102
  _103 = this_47(D)->_vc_allocator;
  if (_103 == 0B)
    goto <bb 38>;
  else
    goto <bb 220>;

  <bb 38>:
  # DEBUG this => cur_buf_62
  # DEBUG vc => D#2658
  _64 = (long unsigned int) prephitmp_838;
  # DEBUG D#43 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  _63 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  # DEBUG D#42 => D#43
  # DEBUG __n => _64
  # DEBUG this => D#42
  _61 = _64 * 8;
  _49 = _63 + _61;
  _48 = *_49;
  _432 = MEM[(eVCState *)_48 + 176B];
  # DEBUG D#21 => _48
  # DEBUG this => D#21
  if (_432 == 2)
    goto <bb 219>;
  else
    goto <bb 221>;

  <bb 39>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 1888, &__PRETTY_FUNCTION__);

  <bb 40>:
  cl_105 = iftmp.304_144->cl;
  # DEBUG cl => cl_105
  if (cl_105 < 0)
    goto <bb 42>;
  else
    goto <bb 41>;

  <bb 41>:
  _106 = this_47(D)->D.51790._classes;
  if (cl_105 >= _106)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  __assert_fail ("(cl >= 0) && (cl < _classes)", "routers/iq_router.cpp", 1891, &__PRETTY_FUNCTION__);

  <bb 43>:
  _107 = output_98 * _106;
  _108 = cl_105 + _107;
  _109 = (long unsigned int) _108;
  # DEBUG D#1950 => &this_47(D)->_vc_rr_offset
  _414 = MEM[(int * *)this_47(D) + 952B];
  # DEBUG D#55 => D#1950
  # DEBUG __n => _109
  # DEBUG this => D#55
  _439 = _109 * 4;
  _440 = _414 + _439;
  vc_offset_110 = *_440;
  # DEBUG vc_offset => vc_offset_110
  # DEBUG match_vc => -1
  # DEBUG match_prio => NULL
  # DEBUG this => cur_buf_62
  # DEBUG vc => D#2658
  # DEBUG D#44 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  # DEBUG D#42 => D#44
  # DEBUG __n => _64
  # DEBUG this => D#42
  _438 = VC::GetRouteSet (_48);
  # DEBUG route_set => _438
  _113 = OutputSet::GetSet (_438);
  # DEBUG this => &setlist
  # DEBUG __x => _113
  # DEBUG D#2645 => &_113->_M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => D#2645
  # DEBUG this => D#2645
  # DEBUG __a => NULL
  # DEBUG D#1710 => &MEM[(const struct _Rb_tree &)D#2645]._M_impl._M_key_compare
  # DEBUG D#1709 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1709
  # DEBUG __comp => D#1710
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG D.97154 => NULL
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_node_count = 0;
  # DEBUG this => D#1709
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&setlist]._M_header;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&setlist]._M_header;
  _667 = MEM[(struct _Rb_tree_node_base * *)_113 + 16B];
  # DEBUG D#272 => D#2645
  # DEBUG this => D#272
  if (_667 != 0B)
    goto <bb 44>;
  else
    goto <bb 51>;

  <bb 44>:
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG D#273 => D#2645
  # DEBUG this => D#273
  # DEBUG this => &setlist._M_t
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => &setlist._M_t
  __an._M_t = &setlist._M_t;
  __x_669 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (&setlist._M_t, _667, &MEM[(struct _Rb_tree *)&setlist]._M_impl._M_header, &__an);
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)&setlist + 16] = __x_669;
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => __x_669

  <bb 45>:
  # __x_670 = PHI <__x_669(44), __x_671(46)>
  # DEBUG __x => __x_670
  __x_671 = __x_670->_M_left;
  if (__x_671 == 0B)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  goto <bb 45>;

  <bb 47>:
  # __x_933 = PHI <__x_670(45)>
  MEM[(struct _Rb_tree_node_base * &)&setlist + 24] = __x_933;
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => __x_669

  <bb 48>:
  # __x_672 = PHI <__x_669(47), __x_673(49)>
  # DEBUG __x => __x_672
  __x_673 = __x_672->_M_right;
  if (__x_673 == 0B)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 48>;

  <bb 50>:
  # __x_932 = PHI <__x_672(48)>
  MEM[(struct _Rb_tree_node_base * &)&setlist + 32] = __x_932;
  _674 = MEM[(const struct _Rb_tree &)_113]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&setlist]._M_impl._M_node_count = _674;

  <bb 51>:
  # prephitmp_923 = PHI <_674(50), 0(43)>
  # prephitmp_924 = PHI <__x_933(50), &MEM[(struct _Rb_tree_impl *)&setlist]._M_header(43)>
  _115 = this_47(D)->_noq;
  if (_115 != 0)
    goto <bb 52>;
  else
    goto <bb 54>;

  <bb 52>:
  # DEBUG this => &setlist
  # DEBUG D#164 => &setlist._M_t
  # DEBUG D#163 => D#164
  # DEBUG this => D#163
  if (prephitmp_923 != 1)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  __assert_fail ("!_noq || (setlist.size() == 1)", "routers/iq_router.cpp", 1901, &__PRETTY_FUNCTION__);

  <bb 54>:
  # DEBUG this => &setlist
  # DEBUG D#275 => &setlist._M_t
  # DEBUG D#2657 => MEM[(struct _Rb_tree_node_base * *)&setlist + 24B]
  # DEBUG D#274 => D#275
  # DEBUG this => D#274
  # DEBUG this => NULL
  # DEBUG __x => D#2657
  # DEBUG iset$_M_node => D#2657
  # DEBUG iset$_M_node => D#2657
  # DEBUG match_prio => -2147483648
  # DEBUG match_vc => -1
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65630
  if (&MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header != prephitmp_924)
    goto <bb 56>;
  else
    goto <bb 55>;

  <bb 55>:
  # DEBUG D#1990 => {CLOBBER}
  # DEBUG iset$_M_node => D#1990
  __assert_fail ("match_vc >= 0", "routers/iq_router.cpp", 1947, &__PRETTY_FUNCTION__);

  <bb 56>:
  _446 = _60 * 24;

  <bb 57>:
  # match_vc_841 = PHI <-1(56), match_vc_4(94)>
  # match_prio_515 = PHI <-2147483648(56), match_prio_9(94)>
  # iset$_M_node_14 = PHI <prephitmp_924(56), iset$_M_node_458(94)>
  # DEBUG iset$_M_node => iset$_M_node_14
  # DEBUG match_prio => match_prio_515
  # DEBUG match_vc => match_vc_841
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65630
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_14
  # DEBUG D#1951 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_14]._M_value_field
  # DEBUG __r => D#1951
  _121 = MEM[(const struct sSetElement *)iset$_M_node_14 + 32B].output_port;
  if (output_98 == _121)
    goto <bb 58>;
  else
    goto <bb 93>;

  <bb 58>:
  _123 = this_47(D)->_noq;
  if (_123 != 0)
    goto <bb 59>;
  else
    goto <bb 223>;

  <bb 59>:
  vc.463_124 = vc;
  _125 = (long unsigned int) vc.463_124;
  # DEBUG D#1952 => &this_47(D)->_noq_next_output_port
  _426 = MEM[(struct vector * *)this_47(D) + 1152B];
  # DEBUG D#70 => D#1952
  # DEBUG __n => _60
  # DEBUG this => D#70
  _447 = _426 + _446;
  _415 = MEM[(int * *)_447];
  # DEBUG __n => _125
  # DEBUG this => D#55
  _444 = _125 * 4;
  _445 = _415 + _444;
  _126 = *_445;
  if (_126 >= 0)
    goto <bb 222>;
  else
    goto <bb 223>;

  <bb 60>:
  __assert_fail ("!_routing_delay", "routers/iq_router.cpp", 1912, &__PRETTY_FUNCTION__);

  <bb 61>:
  # DEBUG D#1953 => &this_47(D)->_noq_next_vc_start
  _427 = MEM[(struct vector * *)this_47(D) + 1176B];
  # DEBUG D#70 => D#1953
  # DEBUG __n => _60
  # DEBUG this => D#70
  _453 = _427 + _446;
  _416 = MEM[(int * *)_453];
  # DEBUG __n => _125
  # DEBUG this => D#55
  _451 = _416 + _444;
  match_vc_131 = *_451;
  # DEBUG vc_start => match_vc_131
  # DEBUG D#1954 => &this_47(D)->_noq_next_vc_end
  _428 = MEM[(struct vector * *)this_47(D) + 1200B];
  # DEBUG D#70 => D#1954
  # DEBUG __n => _60
  # DEBUG this => D#70
  _449 = _428 + _446;
  _417 = MEM[(int * *)_449];
  # DEBUG __n => _125
  # DEBUG this => D#55
  _448 = _417 + _444;
  vc_end_134 = *_448;
  # DEBUG vc_end => vc_end_134

  <bb 62>:
  # match_vc_10 = PHI <match_vc_131(61), match_vc_136(223)>
  # vc_end_11 = PHI <vc_end_134(61), vc_end_137(223)>
  # DEBUG vc_end => vc_end_11
  # DEBUG vc_start => match_vc_10
  if (match_vc_10 < 0)
    goto <bb 64>;
  else
    goto <bb 63>;

  <bb 63>:
  _138 = this_47(D)->_vcs;
  if (match_vc_10 >= _138)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  __assert_fail ("vc_start >= 0 && vc_start < _vcs", "routers/iq_router.cpp", 1919, &__PRETTY_FUNCTION__);

  <bb 65>:
  _20 = vc_end_11 >= _138;
  _28 = vc_end_11 < 0;
  _514 = _20 | _28;
  if (_514 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  __assert_fail ("vc_end >= 0 && vc_end < _vcs", "routers/iq_router.cpp", 1920, &__PRETTY_FUNCTION__);

  <bb 67>:
  if (match_vc_10 > vc_end_11)
    goto <bb 68>;
  else
    goto <bb 73>;

  <bb 68>:
  __assert_fail ("vc_end >= vc_start", "routers/iq_router.cpp", 1921, &__PRETTY_FUNCTION__);

  <bb 69>:
  # DEBUG out_vc => match_vc_150
  # DEBUG match_prio => match_prio_8
  # DEBUG match_vc => match_vc_3
  if (match_vc_150 < 0)
    goto <bb 72>;
  else
    goto <bb 70>;

  <bb 70>:
  # DEBUG out_vc => match_vc_150
  # DEBUG match_prio => match_prio_8
  # DEBUG match_vc => match_vc_3
  _139 = this_47(D)->_vcs;
  if (_139 <= match_vc_150)
    goto <bb 72>;
  else
    goto <bb 71>;

  <bb 71>:
  goto <bb 74>;

  <bb 72>:
  __assert_fail ("(out_vc >= 0) && (out_vc < _vcs)", "routers/iq_router.cpp", 1924, &__PRETTY_FUNCTION__);

  <bb 73>:

  <bb 74>:
  # match_vc_29 = PHI <match_vc_841(73), match_vc_3(71)>
  # match_prio_398 = PHI <match_prio_515(73), match_prio_8(71)>
  # match_vc_862 = PHI <match_vc_10(73), match_vc_150(71)>
  # DEBUG out_vc => match_vc_862
  # DEBUG match_prio => match_prio_398
  # DEBUG match_vc => match_vc_29
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_14
  # DEBUG D#1957 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_14]._M_value_field
  # DEBUG __r => D#1957
  match_prio_140 = MEM[(const struct sSetElement *)iset$_M_node_14 + 32B].pri;
  # DEBUG vc_prio => match_prio_140
  _141 = this_47(D)->_vc_prioritize_empty;
  if (_141 != 0)
    goto <bb 75>;
  else
    goto <bb 80>;

  <bb 75>:
  # DEBUG this => dest_buf_102
  # DEBUG vc => match_vc_862
  _566 = MEM[(const struct BufferState *)dest_buf_102]._vcs;
  if (_566 <= match_vc_862)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "./buffer_state.hpp", 208, &__PRETTY_FUNCTION__);

  <bb 77>:
  _675 = (long unsigned int) match_vc_862;
  # DEBUG D#49 => &MEM[(const struct BufferState *)dest_buf_102]._vc_occupancy
  _676 = MEM[(int * *)dest_buf_102 + 112B];
  # DEBUG D#48 => D#49
  # DEBUG __n => _675
  # DEBUG this => D#48
  _677 = _675 * 4;
  _678 = _676 + _677;
  _679 = *_678;
  if (_679 == 0)
    goto <bb 228>;
  else
    goto <bb 224>;

  <bb 78>:
  __assert_fail ("vc_prio >= 0", "routers/iq_router.cpp", 1928, &__PRETTY_FUNCTION__);

  <bb 79>:
  match_prio_145 = match_prio_140 + -2147483648;
  # DEBUG vc_prio => match_prio_145
  goto <bb 228>;

  <bb 80>:
  # DEBUG vc_prio => match_prio_140
  # DEBUG this => dest_buf_102
  # DEBUG vc => match_vc_862
  _681 = MEM[(const struct BufferState *)dest_buf_102]._vcs;
  if (_681 <= match_vc_862)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  __assert_fail ("( vc >= 0 ) && ( vc < _vcs )", "./buffer_state.hpp", 212, &__PRETTY_FUNCTION__);

  <bb 82>:
  pretmp_954 = (long unsigned int) match_vc_862;
  pretmp_956 = pretmp_954 * 4;

  <bb 83>:
  # match_prio_12 = PHI <match_prio_140(82), match_prio_835(228)>
  # prephitmp_957 = PHI <pretmp_956(82), _677(228)>
  # DEBUG vc_prio => match_prio_12
  # DEBUG this => dest_buf_102
  # DEBUG vc => match_vc_862
  # DEBUG D#51 => &MEM[(const struct BufferState *)dest_buf_102]._in_use_by
  _683 = MEM[(int * *)dest_buf_102 + 152B];
  # DEBUG D#48 => D#51
  # DEBUG __n => (long unsigned int) match_vc_862
  # DEBUG this => D#48
  _685 = _683 + prephitmp_957;
  _686 = *_685;
  if (_686 < 0)
    goto <bb 84>;
  else
    goto <bb 225>;

  <bb 84>:
  _408 = MEM[(struct BufferPolicy * *)dest_buf_102 + 144B];
  # DEBUG D#32 => dest_buf_102
  # DEBUG vc => match_vc_862
  # DEBUG this => D#32
  _454 = _408->D.55980._vptr.Module;
  _455 = MEM[(int (*__vtbl_ptr_type) () *)_454 + 56B];
  _456 = OBJ_TYPE_REF(_455;(const struct BufferPolicy)_408->7) (_408, match_vc_862);

  <bb 85>:
  if (_456 != 0)
    goto <bb 225>;
  else
    goto <bb 86>;

  <bb 86>:
  if (match_vc_29 < 0)
    goto <bb 91>;
  else
    goto <bb 87>;

  <bb 87>:
  # DEBUG D#2661 => this_47(D)->_vcs
  # DEBUG input1 => match_vc_862
  # DEBUG pri1 => match_prio_12
  # DEBUG input2 => match_vc_29
  # DEBUG pri2 => match_prio_398
  # DEBUG offset => vc_offset_110
  # DEBUG size => D#2661
  if (match_prio_12 > match_prio_398)
    goto <bb 91>;
  else
    goto <bb 88>;

  <bb 88>:
  # DEBUG input1 => match_vc_862
  # DEBUG pri1 => match_prio_12
  # DEBUG input2 => match_vc_29
  # DEBUG pri2 => match_prio_398
  # DEBUG offset => vc_offset_110
  # DEBUG size => D#2661
  if (match_prio_12 == match_prio_398)
    goto <bb 89>;
  else
    goto <bb 91>;

  <bb 89>:
  _149 = this_47(D)->_vcs;
  _688 = match_vc_862 - vc_offset_110;
  _689 = _149 + _688;
  _690 = _689 % _149;
  _691 = match_vc_29 - vc_offset_110;
  _692 = _149 + _691;
  _693 = _692 % _149;
  if (_690 < _693)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:

  <bb 91>:
  # match_vc_3 = PHI <match_vc_862(90), match_vc_29(89), match_vc_862(86), match_vc_29(225), match_vc_29(88), match_vc_862(87)>
  # match_prio_8 = PHI <match_prio_12(90), match_prio_398(89), match_prio_12(86), match_prio_398(225), match_prio_398(88), match_prio_12(87)>
  # DEBUG match_prio => match_prio_8
  # DEBUG match_vc => match_vc_3
  match_vc_150 = match_vc_862 + 1;
  # DEBUG out_vc => match_vc_150
  # DEBUG out_vc => match_vc_150
  # DEBUG match_prio => match_prio_8
  # DEBUG match_vc => match_vc_3
  if (vc_end_11 < match_vc_150)
    goto <bb 92>;
  else
    goto <bb 69>;

  <bb 92>:
  # match_vc_937 = PHI <match_vc_3(91)>
  # match_prio_935 = PHI <match_prio_8(91)>

  <bb 93>:
  # match_vc_4 = PHI <match_vc_841(57), match_vc_937(92)>
  # match_prio_9 = PHI <match_prio_515(57), match_prio_935(92)>
  # DEBUG match_prio => match_prio_9
  # DEBUG match_vc => match_vc_4
  # DEBUG this => &iset
  iset$_M_node_458 = std::_Rb_tree_increment (iset$_M_node_14);
  # DEBUG iset$_M_node => iset$_M_node_458
  # DEBUG iset$_M_node => iset$_M_node_458
  # DEBUG match_prio => match_prio_9
  # DEBUG match_vc => match_vc_4
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65630
  if (&MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header != iset$_M_node_458)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  goto <bb 57>;

  <bb 95>:
  # match_vc_936 = PHI <match_vc_4(93)>
  # DEBUG D#1990 => {CLOBBER}
  # DEBUG iset$_M_node => D#1990
  if (match_vc_936 < 0)
    goto <bb 55>;
  else
    goto <bb 96>;

  <bb 96>:
  _156 = iftmp.304_144->watch;
  if (_156 != 0)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  vc.463_170 = vc;
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.463_170
  # DEBUG s => 3
  _169 = (long unsigned int) vc.463_170;
  # DEBUG D#38 => &cur_buf_62->_vc
  _462 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  # DEBUG D#36 => D#38
  # DEBUG __n => _169
  # DEBUG this => D#36
  _463 = _169 * 8;
  _464 = _462 + _463;
  _465 = *_464;
  VC::SetState (_465, 3);
  goto <bb 121>;

  <bb 98>:
  # DEBUG D#1958 => &this_47(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1958
  # DEBUG D#1959 => &MEM[(const struct Module *)this_47(D)]._fullname
  _160 = GetSimTime ();
  goto <bb 100>;

<L204>:
  goto <bb 216> (<L190>);

  <bb 100>:
  gWatchOut.464_161 = gWatchOut;
  _163 = std::basic_ostream<char>::operator<< (gWatchOut.464_161, _160);
  goto <bb 102>;

<L205>:
  goto <bb 216> (<L190>);

  <bb 102>:
  # DEBUG __out => _163
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_163, " | ", 3);
  goto <bb 104>;

<L206>:
  goto <bb 216> (<L190>);

  <bb 104>:
  # DEBUG __os => _163
  # DEBUG __str => D#1959
  _164 = MEM[(long unsigned int *)this_47(D) + 48B];
  # DEBUG D#3 => D#1959
  # DEBUG this => D#3
  _459 = (long int) _164;
  # DEBUG this => D#1959
  _460 = MEM[(char * *)this_47(D) + 40B];
  # DEBUG D#1 => D#1959
  # DEBUG this => D#1
  _461 = std::__ostream_insert<char, std::char_traits<char> > (_163, _460, _459);
  goto <bb 106>;

<L207>:
  goto <bb 216> (<L190>);

  <bb 106>:
  # DEBUG __out => _461
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_461, " | ", 3);
  goto <bb 108>;

<L208>:
  goto <bb 216> (<L190>);

  <bb 108>:
  # DEBUG __out => _461
  # DEBUG __s => "  Allocating VC "
  # DEBUG __s => "  Allocating VC "
  std::__ostream_insert<char, std::char_traits<char> > (_461, "  Allocating VC ", 16);
  goto <bb 110>;

<L209>:
  goto <bb 216> (<L190>);

  <bb 110>:
  _166 = std::basic_ostream<char>::operator<< (_461, match_vc_936);
  goto <bb 112>;

<L210>:
  goto <bb 216> (<L190>);

  <bb 112>:
  # DEBUG __out => _166
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_166, " at output ", 11);
  goto <bb 114>;

<L211>:
  goto <bb 216> (<L190>);

  <bb 114>:
  _168 = std::basic_ostream<char>::operator<< (_166, output_98);
  goto <bb 116>;

<L212>:
  goto <bb 216> (<L190>);

  <bb 116>:
  # DEBUG __out => _168
  # DEBUG __s => " via piggyback VC allocation."
  # DEBUG __s => " via piggyback VC allocation."
  std::__ostream_insert<char, std::char_traits<char> > (_168, " via piggyback VC allocation.", 29);
  goto <bb 118>;

<L213>:
  goto <bb 216> (<L190>);

  <bb 118>:
  # DEBUG this => _168
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_168);
  goto <bb 97>;

<L214>:
  goto <bb 216> (<L190>);

<L215>:
  goto <bb 216> (<L190>);

  <bb 121>:
  vc.463_172 = vc;
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.463_172
  # DEBUG out_port => output_98
  # DEBUG out_vc => match_vc_936
  _171 = (long unsigned int) vc.463_172;
  # DEBUG D#40 => &cur_buf_62->_vc
  _466 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  # DEBUG D#36 => D#40
  # DEBUG __n => _171
  # DEBUG this => D#36
  _467 = _171 * 8;
  _468 = _466 + _467;
  _469 = *_468;
  VC::SetOutput (_469, output_98, match_vc_936);
  goto <bb 123>;

<L216>:
  goto <bb 216> (<L190>);

  <bb 123>:
  _173 = this_47(D)->_vcs;
  _174 = input.460_55 * _173;
  vc.463_175 = vc;
  _176 = _174 + vc.463_175;
  BufferState::TakeBuffer (dest_buf_102, match_vc_936, _176);
  goto <bb 125>;

<L217>:
  goto <bb 216> (<L190>);

  <bb 125>:
  _178 = this_47(D)->D.51790._classes;
  _179 = output_98 * _178;
  _180 = cl_105 + _179;
  _181 = (long unsigned int) _180;
  # DEBUG D#1960 => &this_47(D)->_vc_rr_offset
  _418 = MEM[(int * *)this_47(D) + 952B];
  # DEBUG D#55 => D#1960
  # DEBUG __n => _181
  # DEBUG this => D#55
  _471 = _181 * 4;
  _472 = _418 + _471;
  _183 = match_vc_936 + 1;
  _184 = this_47(D)->_vcs;
  _185 = _183 % _184;
  *_472 = _185;
  # DEBUG this => &setlist
  # DEBUG this => &setlist._M_t
  _470 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];
  # DEBUG D#89 => &setlist._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&setlist._M_t, _470);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  setlist ={v} {CLOBBER};
  # DEBUG match_vc => match_vc_936
  goto <bb 129>;

  <bb 126>:
  __assert_fail ("cur_buf->GetOutputPort(vc) == output", "routers/iq_router.cpp", 1964, &__PRETTY_FUNCTION__);

  <bb 127>:
  # DEBUG this => cur_buf_62
  # DEBUG vc => D#2658
  # DEBUG D#47 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  # DEBUG D#42 => D#47
  # DEBUG __n => D#2656
  # DEBUG this => D#42
  match_vc_479 = MEM[(int *)prephitmp_963 + 196B];
  # DEBUG D#23 => D#2652
  # DEBUG this => D#23
  # DEBUG match_vc => match_vc_479
  # DEBUG match_vc => match_vc_479
  if (match_vc_479 < 0)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  __assert_fail ("(match_vc >= 0) && (match_vc < _vcs)", "routers/iq_router.cpp", 1969, &__PRETTY_FUNCTION__);

  <bb 129>:
  # match_vc_864 = PHI <match_vc_479(127), match_vc_936(125)>
  # DEBUG match_vc => match_vc_864
  _193 = this_47(D)->_vcs;
  if (_193 <= match_vc_864)
    goto <bb 128>;
  else
    goto <bb 130>;

  <bb 130>:
  _194 = iftmp.304_144->watch;
  if (_194 != 0)
    goto <bb 131>;
  else
    goto <bb 132>;

  <bb 131>:
  _195 = this_47(D)->D.51790._output_speedup;
  _196 = expanded_output_1 % _195;
  vc.463_197 = vc;
  _198 = this_47(D)->D.51790._input_speedup;
  _199 = vc.463_197 % _198;
  # DEBUG D#1961 => &this_47(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1961
  # DEBUG D#1962 => &MEM[(const struct Module *)this_47(D)]._fullname
  _201 = GetSimTime ();
  gWatchOut.464_202 = gWatchOut;
  _204 = std::basic_ostream<char>::operator<< (gWatchOut.464_202, _201);
  # DEBUG __out => _204
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_204, " | ", 3);
  # DEBUG __os => _204
  # DEBUG __str => D#1962
  _205 = MEM[(long unsigned int *)this_47(D) + 48B];
  # DEBUG D#3 => D#1962
  # DEBUG this => D#3
  _480 = (long int) _205;
  # DEBUG this => D#1962
  _481 = MEM[(char * *)this_47(D) + 40B];
  # DEBUG D#1 => D#1962
  # DEBUG this => D#1
  _482 = std::__ostream_insert<char, std::char_traits<char> > (_204, _481, _480);
  # DEBUG __out => _482
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_482, " | ", 3);
  # DEBUG __out => _482
  # DEBUG __s => "  Scheduling switch connection from input "
  # DEBUG __s => "  Scheduling switch connection from input "
  std::__ostream_insert<char, std::char_traits<char> > (_482, "  Scheduling switch connection from input ", 42);
  _207 = std::basic_ostream<char>::operator<< (_482, input.460_55);
  # DEBUG __out => _207
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_207, ".", 1);
  _209 = std::basic_ostream<char>::operator<< (_207, _199);
  # DEBUG __out => _209
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_209, " to output ", 11);
  _211 = std::basic_ostream<char>::operator<< (_209, output_98);
  # DEBUG __out => _211
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_211, ".", 1);
  _213 = std::basic_ostream<char>::operator<< (_211, _196);
  # DEBUG __out => _213
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_213, ".", 1);
  # DEBUG this => _213
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_213);

  <bb 132>:
  vc.463_215 = vc;
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.463_215
  _214 = cur_buf_62->_occupancy;
  _483 = _214 + -1;
  cur_buf_62->_occupancy = _483;
  _484 = (long unsigned int) vc.463_215;
  # DEBUG D#41 => &cur_buf_62->_vc
  _485 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  # DEBUG D#36 => D#41
  # DEBUG __n => _484
  # DEBUG this => D#36
  _486 = _484 * 8;
  _487 = _485 + _486;
  _488 = *_487;
  VC::RemoveFlit (_488);
  _216 = this_47(D)->_bufferMonitor;
  BufferMonitor::read (_216, input.460_55, iftmp.304_144);
  _218 = iftmp.304_144->hops;
  _219 = _218 + 1;
  iftmp.304_144->hops = _219;
  iftmp.304_144->vc = match_vc_864;
  _222 = this_47(D)->_routing_delay;
  if (_222 == 0)
    goto <bb 133>;
  else
    goto <bb 151>;

  <bb 133>:
  _223 = iftmp.304_144->head;
  if (_223 != 0)
    goto <bb 134>;
  else
    goto <bb 151>;

  <bb 134>:
  # DEBUG D#1963 => &this_47(D)->D.51790._output_channels
  _425 = MEM[(struct FlitChannel * * *)this_47(D) + 192B];
  # DEBUG D#62 => D#1963
  # DEBUG __n => _100
  # DEBUG this => D#62
  _489 = _425 + _68;
  channel_224 = *_489;
  # DEBUG channel => channel_224
  _407 = MEM[(const struct Router * *)channel_224 + 216B];
  # DEBUG D#19 => channel_224
  # DEBUG this => D#19
  # DEBUG router => NULL
  if (_407 != 0B)
    goto <bb 135>;
  else
    goto <bb 150>;

  <bb 135>:
  _227 = this_47(D)->_noq;
  if (_227 != 0)
    goto <bb 136>;
  else
    goto <bb 147>;

  <bb 136>:
  _243 = iftmp.304_144->watch;
  if (_243 != 0)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  _244 = iftmp.304_144->id;
  # DEBUG D#1966 => &this_47(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1966
  # DEBUG D#1967 => &MEM[(const struct Module *)this_47(D)]._fullname
  _246 = GetSimTime ();
  gWatchOut.464_247 = gWatchOut;
  _249 = std::basic_ostream<char>::operator<< (gWatchOut.464_247, _246);
  # DEBUG __out => _249
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_249, " | ", 3);
  # DEBUG __os => _249
  # DEBUG __str => D#1967
  _250 = MEM[(long unsigned int *)this_47(D) + 48B];
  # DEBUG D#3 => D#1967
  # DEBUG this => D#3
  _490 = (long int) _250;
  # DEBUG this => D#1967
  _491 = MEM[(char * *)this_47(D) + 40B];
  # DEBUG D#1 => D#1967
  # DEBUG this => D#1
  _492 = std::__ostream_insert<char, std::char_traits<char> > (_249, _491, _490);
  # DEBUG __out => _492
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_492, " | ", 3);
  # DEBUG __out => _492
  # DEBUG __s => "Updating lookahead routing information for flit "
  # DEBUG __s => "Updating lookahead routing information for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_492, "Updating lookahead routing information for flit ", 48);
  _252 = std::basic_ostream<char>::operator<< (_492, _244);
  # DEBUG __out => _252
  # DEBUG __s => " (NOQ)."
  # DEBUG __s => " (NOQ)."
  std::__ostream_insert<char, std::char_traits<char> > (_252, " (NOQ).", 7);
  # DEBUG this => _252
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_252);

  <bb 138>:
  vc.463_253 = vc;
  _254 = (long unsigned int) vc.463_253;
  # DEBUG D#1968 => &this_47(D)->_noq_next_output_port
  _429 = MEM[(struct vector * *)this_47(D) + 1152B];
  # DEBUG D#70 => D#1968
  # DEBUG __n => _60
  # DEBUG this => D#70
  _495 = _60 * 24;
  _496 = _429 + _495;
  _419 = MEM[(int * *)_496];
  # DEBUG __n => _254
  # DEBUG this => D#55
  _493 = _254 * 4;
  _494 = _419 + _493;
  next_output_port_255 = *_494;
  # DEBUG next_output_port => next_output_port_255
  if (next_output_port_255 < 0)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  __assert_fail ("next_output_port >= 0", "routers/iq_router.cpp", 2003, &__PRETTY_FUNCTION__);

  <bb 140>:
  # DEBUG D#1969 => &this_47(D)->_noq_next_output_port
  # DEBUG D#70 => D#1969
  # DEBUG __n => _60
  # DEBUG this => D#70
  # DEBUG __n => _254
  # DEBUG this => D#55
  *_494 = -1;
  vc.463_259 = vc;
  _260 = (long unsigned int) vc.463_259;
  # DEBUG D#1970 => &this_47(D)->_noq_next_vc_start
  _430 = MEM[(struct vector * *)this_47(D) + 1176B];
  # DEBUG D#70 => D#1970
  # DEBUG __n => _60
  # DEBUG this => D#70
  _499 = _430 + _495;
  _420 = MEM[(int * *)_499];
  # DEBUG __n => _260
  # DEBUG this => D#55
  _497 = _260 * 4;
  _498 = _420 + _497;
  next_vc_start_262 = *_498;
  # DEBUG next_vc_start => next_vc_start_262
  if (next_vc_start_262 < 0)
    goto <bb 142>;
  else
    goto <bb 141>;

  <bb 141>:
  _263 = this_47(D)->_vcs;
  if (next_vc_start_262 >= _263)
    goto <bb 142>;
  else
    goto <bb 143>;

  <bb 142>:
  __assert_fail ("next_vc_start >= 0 && next_vc_start < _vcs", "routers/iq_router.cpp", 2006, &__PRETTY_FUNCTION__);

  <bb 143>:
  # DEBUG D#1971 => &this_47(D)->_noq_next_vc_start
  # DEBUG D#70 => D#1971
  # DEBUG __n => _60
  # DEBUG this => D#70
  # DEBUG __n => _260
  # DEBUG this => D#55
  *_498 = -1;
  vc.463_266 = vc;
  _267 = (long unsigned int) vc.463_266;
  # DEBUG D#1972 => &this_47(D)->_noq_next_vc_end
  _431 = MEM[(struct vector * *)this_47(D) + 1200B];
  # DEBUG D#70 => D#1972
  # DEBUG __n => _60
  # DEBUG this => D#70
  _502 = _431 + _495;
  _421 = MEM[(int * *)_502];
  # DEBUG __n => _267
  # DEBUG this => D#55
  _500 = _267 * 4;
  _501 = _421 + _500;
  next_vc_end_270 = *_501;
  # DEBUG next_vc_end => next_vc_end_270
  if (next_vc_end_270 < 0)
    goto <bb 145>;
  else
    goto <bb 144>;

  <bb 144>:
  _271 = this_47(D)->_vcs;
  if (next_vc_end_270 >= _271)
    goto <bb 145>;
  else
    goto <bb 146>;

  <bb 145>:
  __assert_fail ("next_vc_end >= 0 && next_vc_end < _vcs", "routers/iq_router.cpp", 2009, &__PRETTY_FUNCTION__);

  <bb 146>:
  # DEBUG D#1973 => &this_47(D)->_noq_next_vc_end
  # DEBUG D#70 => D#1973
  # DEBUG __n => _60
  # DEBUG this => D#70
  # DEBUG __n => _267
  # DEBUG this => D#55
  *_501 = -1;
  _275 = &iftmp.304_144->la_route_set;
  OutputSet::Clear (_275);
  OutputSet::AddRange (_275, next_output_port_255, next_vc_start_262, next_vc_end_270, 0);
  goto <bb 151>;

  <bb 147>:
  _228 = iftmp.304_144->watch;
  if (_228 != 0)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  _229 = iftmp.304_144->id;
  # DEBUG D#1964 => &this_47(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1964
  # DEBUG D#1965 => &MEM[(const struct Module *)this_47(D)]._fullname
  _231 = GetSimTime ();
  gWatchOut.464_232 = gWatchOut;
  _234 = std::basic_ostream<char>::operator<< (gWatchOut.464_232, _231);
  # DEBUG __out => _234
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_234, " | ", 3);
  # DEBUG __os => _234
  # DEBUG __str => D#1965
  _235 = MEM[(long unsigned int *)this_47(D) + 48B];
  # DEBUG D#3 => D#1965
  # DEBUG this => D#3
  _503 = (long int) _235;
  # DEBUG this => D#1965
  _504 = MEM[(char * *)this_47(D) + 40B];
  # DEBUG D#1 => D#1965
  # DEBUG this => D#1
  _505 = std::__ostream_insert<char, std::char_traits<char> > (_234, _504, _503);
  # DEBUG __out => _505
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_505, " | ", 3);
  # DEBUG __out => _505
  # DEBUG __s => "Updating lookahead routing information for flit "
  # DEBUG __s => "Updating lookahead routing information for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_505, "Updating lookahead routing information for flit ", 48);
  _237 = std::basic_ostream<char>::operator<< (_505, _229);
  # DEBUG __out => _237
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_237, ".", 1);
  # DEBUG this => _237
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_237);

  <bb 149>:
  # DEBUG this => channel_224
  in_channel_239 = MEM[(const int &)channel_224 + 224];
  # DEBUG in_channel => in_channel_239
  _240 = this_47(D)->_rf;
  _241 = &iftmp.304_144->la_route_set;
  _240 (_407, iftmp.304_144, in_channel_239, _241, 0);
  goto <bb 151>;

  <bb 150>:
  _225 = &iftmp.304_144->la_route_set;
  OutputSet::Clear (_225);

  <bb 151>:
  BufferState::SendingFlit (dest_buf_102, iftmp.304_144);
  # DEBUG __x => expanded_input_89
  # DEBUG __y => expanded_output_1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => iftmp.304_144
  # DEBUG __y => expanded_input_89
  # DEBUG __y$4 => expanded_output_1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y$first => iftmp.304_144
  # DEBUG __y$second$first => expanded_input_89
  # DEBUG __y$second$second => expanded_output_1
  # DEBUG this => &D.65644
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  D.65644.first = -1;
  MEM[(struct pair *)&D.65644 + 8B] = iftmp.304_144;
  MEM[(struct pair *)&D.65644 + 16B] = expanded_input_89;
  MEM[(struct pair *)&D.65644 + 20B] = expanded_output_1;
  # DEBUG D#2660 => &this_47(D)->_crossbar_flits
  # DEBUG this => D#2660
  # DEBUG __x => &D.65644
  _695 = MEM[(struct deque *)this_47(D) + 752B].D.46860._M_impl._M_finish._M_cur;
  _696 = MEM[(struct deque *)this_47(D) + 752B].D.46860._M_impl._M_finish._M_last;
  _697 = _696 + 18446744073709551592;
  if (_695 != _697)
    goto <bb 152>;
  else
    goto <bb 155>;

  <bb 152>:
  # DEBUG D#1487 => &D#2660->D.46860._M_impl
  # DEBUG D#285 => D#1487
  # DEBUG __p => _695
  # DEBUG __arg => &D.65644
  # DEBUG __a => D#285
  # DEBUG D#284 => D#285
  # DEBUG D#283 => D#284
  # DEBUG __p => _695
  # DEBUG __val => &D.65644
  # DEBUG this => D#283
  # DEBUG D#12 => 24
  # DEBUG __p => _695
  # DEBUG D.94272 => D#12
  if (_695 != 0B)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  *_695 = D.65644;

  <bb 154>:
  _698 = _695 + 24;
  MEM[(struct deque *)this_47(D) + 752B].D.46860._M_impl._M_finish._M_cur = _698;
  goto <bb 156>;

  <bb 155>:
  _284 = &this_47(D)->_crossbar_flits;
  std::deque<std::pair<int, std::pair<Flit*, std::pair<int, int> > > >::_M_push_back_aux (_284, &D.65644);

  <bb 156>:
  D.65644 ={v} {CLOBBER};
  # DEBUG D#1974 => &this_47(D)->_out_queue_credits
  # DEBUG this => D#1974
  # DEBUG __x => &input
  # DEBUG D#802 => &MEM[(const struct map *)D#1974]._M_t
  # DEBUG this => D#802
  __y_282 = &MEM[(const struct _Rb_tree *)this_47(D) + 832B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => __y_282
  # DEBUG D#803 => &MEM[(const struct map *)D#1974]._M_t
  # DEBUG this => D#803
  # DEBUG __k => &input
  # DEBUG this => D#803
  __y_283 = MEM[(struct _Rb_tree_node_base * *)this_47(D) + 848B];
  # DEBUG D#286 => D#803
  # DEBUG this => D#286
  # DEBUG D#798 => D#803
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &input
  # DEBUG __y => __y_282
  # DEBUG __x => __y_283
  if (__y_283 == 0B)
    goto <bb 226>;
  else
    goto <bb 159>;

  <bb 157>:
  # __y_27 = PHI <__y_509(162), __y_508(161)>
  # __y_25 = PHI <__y_851(162), __y_852(161)>
  # DEBUG __y => __y_25
  # DEBUG __x => __y_27
  if (__y_27 == 0B)
    goto <bb 163>;
  else
    goto <bb 158>;

  <bb 158>:
  goto <bb 160>;

  <bb 159>:

  <bb 160>:
  # __y_852 = PHI <__y_283(159), __y_27(158)>
  # __y_851 = PHI <__y_282(159), __y_25(158)>
  # DEBUG __y => __y_851
  # DEBUG __x => __y_852
  # DEBUG __x => __y_852
  # DEBUG __x => __y_852
  # DEBUG this => __y_852
  # DEBUG D#794 => &MEM[(const struct _Rb_tree_node *)__y_852]._M_value_field
  # DEBUG __r => D#794
  # DEBUG __x => D#794
  # DEBUG this => D#290
  # DEBUG D#795 => &MEM[(const struct pair &)__y_852 + 32].first
  # DEBUG D#796 => &D#797->_M_impl._M_key_compare
  # DEBUG D#287 => D#796
  _507 = MEM[(const int &)__y_852 + 32];
  # DEBUG D#288 => D#795
  # DEBUG D#289 => &input
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (input.460_55 <= _507)
    goto <bb 161>;
  else
    goto <bb 162>;

  <bb 161>:
  # DEBUG __y => __y_852
  __y_508 = MEM[(struct _Rb_tree_node_base * *)__y_852 + 16B];
  # DEBUG D#407 => __y_852
  # DEBUG __x => D#407
  # DEBUG __x => NULL
  goto <bb 157>;

  <bb 162>:
  __y_509 = MEM[(struct _Rb_tree_node_base * *)__y_852 + 24B];
  # DEBUG D#408 => __y_852
  # DEBUG __x => D#408
  # DEBUG __x => NULL
  goto <bb 157>;

  <bb 163>:
  # __y_934 = PHI <__y_25(157)>
  # DEBUG this => NULL
  # DEBUG __x => __y_934
  # DEBUG __j$_M_node => __y_934
  # DEBUG this => D#803
  # DEBUG this => NULL
  # DEBUG __x => __y_282
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_934 == __y_282)
    goto <bb 226>;
  else
    goto <bb 164>;

  <bb 164>:
  # DEBUG __x => __y_934
  # DEBUG __x => __y_934
  # DEBUG this => __y_934
  # DEBUG D#409 => &MEM[(const struct _Rb_tree_node *)__y_934]._M_value_field
  # DEBUG __r => D#409
  # DEBUG __x => D#409
  # DEBUG this => D#290
  # DEBUG D#799 => &MEM[(const struct pair &)__y_934 + 32].first
  # DEBUG D#801 => &MEM[(const struct _Rb_tree *)D#803]._M_impl._M_key_compare
  # DEBUG D#287 => D#801
  # DEBUG D#288 => &input
  _511 = MEM[(const int &)__y_934 + 32];
  # DEBUG D#289 => D#799
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  # DEBUG D#800 => {CLOBBER}
  # DEBUG __j$_M_node => D#800
  # DEBUG this => NULL
  # DEBUG __x => NULL
  if (input.460_55 < _511)
    goto <bb 226>;
  else
    goto <bb 165>;

  <bb 165>:
  # prephitmp_902 = PHI <__y_283(164), pretmp_901(226)>
  # DEBUG D#1976 => &this_47(D)->_out_queue_credits
  # DEBUG this => D#1976
  # DEBUG __x => &input
  # DEBUG D#816 => &D#1976->_M_t
  # DEBUG this => D#816
  # DEBUG __k => &input
  # DEBUG this => D#816
  # DEBUG D#2651 => MEM[(struct _Rb_tree_node_base * *)this_47(D) + 848B]
  # DEBUG D#118 => D#816
  # DEBUG this => D#118
  # DEBUG D#812 => D#816
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &input
  # DEBUG __y => __y_282
  # DEBUG __x => D#2651
  if (prephitmp_902 == 0B)
    goto <bb 175>;
  else
    goto <bb 168>;

  <bb 166>:
  # __y_724 = PHI <__y_521(171), __y_520(170)>
  # __y_694 = PHI <__y_785(171), __y_822(170)>
  # DEBUG __y => __y_694
  # DEBUG __x => __y_724
  if (__y_724 == 0B)
    goto <bb 172>;
  else
    goto <bb 167>;

  <bb 167>:
  goto <bb 169>;

  <bb 168>:

  <bb 169>:
  # __y_822 = PHI <prephitmp_902(168), __y_724(167)>
  # __y_785 = PHI <__y_282(168), __y_694(167)>
  # DEBUG __y => __y_785
  # DEBUG __x => __y_822
  # DEBUG __x => __y_822
  # DEBUG __x => __y_822
  # DEBUG this => __y_822
  # DEBUG D#794 => &MEM[(const struct _Rb_tree_node *)__y_822]._M_value_field
  # DEBUG __r => D#794
  # DEBUG __x => D#794
  # DEBUG this => D#290
  # DEBUG D#809 => &MEM[(const struct pair &)__y_822 + 32].first
  # DEBUG D#810 => &D#811->_M_impl._M_key_compare
  # DEBUG D#287 => D#810
  _519 = MEM[(const int &)__y_822 + 32];
  # DEBUG D#288 => D#809
  # DEBUG D#289 => &input
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (input.460_55 <= _519)
    goto <bb 170>;
  else
    goto <bb 171>;

  <bb 170>:
  # DEBUG __y => __y_822
  __y_520 = MEM[(struct _Rb_tree_node_base * *)__y_822 + 16B];
  # DEBUG D#209 => __y_822
  # DEBUG __x => D#209
  # DEBUG __x => NULL
  goto <bb 166>;

  <bb 171>:
  __y_521 = MEM[(struct _Rb_tree_node_base * *)__y_822 + 24B];
  # DEBUG D#208 => __y_822
  # DEBUG __x => D#208
  # DEBUG __x => NULL
  goto <bb 166>;

  <bb 172>:
  # __y_931 = PHI <__y_694(166)>
  # DEBUG this => NULL
  # DEBUG __x => __y_931
  # DEBUG __j$_M_node => __y_931
  # DEBUG this => D#816
  # DEBUG this => NULL
  # DEBUG __x => __y_282
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_282 == __y_931)
    goto <bb 175>;
  else
    goto <bb 173>;

  <bb 173>:
  # DEBUG __x => __y_931
  # DEBUG __x => __y_931
  # DEBUG this => __y_931
  # DEBUG D#409 => &MEM[(const struct _Rb_tree_node *)__y_931]._M_value_field
  # DEBUG __r => D#409
  # DEBUG __x => D#409
  # DEBUG this => D#290
  # DEBUG D#813 => &MEM[(const struct pair &)__y_931 + 32].first
  # DEBUG D#815 => &MEM[(struct _Rb_tree *)D#816]._M_impl._M_key_compare
  # DEBUG D#287 => D#815
  # DEBUG D#288 => &input
  _523 = MEM[(const int &)__y_931 + 32];
  # DEBUG D#289 => D#813
  # DEBUG this => D#287
  # DEBUG __x => D#288
  # DEBUG __y => D#289
  if (input.460_55 < _523)
    goto <bb 174>;
  else
    goto <bb 175>;

  <bb 174>:

  <bb 175>:
  # __y_524 = PHI <__y_931(172), __y_282(174), __y_931(173), __y_282(165)>
  # DEBUG D#814 => {CLOBBER}
  # DEBUG __j$_M_node => D#814
  # DEBUG this => &D.65648
  # DEBUG this => __y_524
  # DEBUG D#1977 => &__y_524->_M_value_field
  # DEBUG __r => D#1977
  _295 = MEM[(struct pair *)__y_524 + 32B].second;
  # DEBUG D#1978 => &_295->vc
  # DEBUG this => D#1978
  # DEBUG __x => &vc
  _291 = &MEM[(struct set *)_295]._M_t;
  __p = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique (_291, &vc);
  # DEBUG this => NULL
  # DEBUG __it => &__p.first
  # DEBUG D#1993 => MEM[(const struct iterator &)&__p]._M_node
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG __b => &__p.second
  # DEBUG D#1992 => MEM[(const bool &)&__p + 8]
  # DEBUG D#1991 => VIEW_CONVERT_EXPR<unsigned char>(D#1992)
  __p ={v} {CLOBBER};
  # DEBUG D.112736 => D#1993
  # DEBUG D.112737 => D#1991
  vc.463_297 = vc;
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.463_297
  _293 = (long unsigned int) vc.463_297;
  # DEBUG D#96 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  _525 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _293
  # DEBUG this => D#42
  _526 = _293 * 8;
  _527 = _525 + _526;
  _528 = *_527;
  # DEBUG this => _528
  # DEBUG D#95 => &MEM[(const struct VC *)_528]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _529 = MEM[(struct Flit * * *)_528 + 144B];
  # DEBUG D#91 => D#94
  _530 = MEM[(struct Flit * * *)_528 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_529 == _530)
    goto <bb 176>;
  else
    goto <bb 179>;

  <bb 176>:
  _379 = iftmp.304_144->tail;
  if (_379 != 0)
    goto <bb 178>;
  else
    goto <bb 177>;

  <bb 177>:
  goto <bb 210>;

  <bb 178>:
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.463_297
  # DEBUG s => 0
  # DEBUG D#38 => &cur_buf_62->_vc
  # DEBUG D#36 => D#38
  # DEBUG __n => _293
  # DEBUG this => D#36
  VC::SetState (_528, 0);
  goto <bb 210>;

  <bb 179>:
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.463_297
  # DEBUG D#186 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _293
  # DEBUG this => D#42
  # DEBUG this => _528
  # DEBUG D#184 => &MEM[(const struct VC *)_528]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_528]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_531 = MEM[(struct Flit * const &)_530];
  # DEBUG nf => iftmp.304_531
  if (iftmp.304_531 == 0B)
    goto <bb 180>;
  else
    goto <bb 181>;

  <bb 180>:
  # DEBUG nf => 0B
  __assert_fail ("nf", "routers/iq_router.cpp", 2047, &__PRETTY_FUNCTION__);

  <bb 181>:
  _300 = iftmp.304_531->vc;
  if (vc.463_297 != _300)
    goto <bb 182>;
  else
    goto <bb 183>;

  <bb 182>:
  __assert_fail ("nf->vc == vc", "routers/iq_router.cpp", 2048, &__PRETTY_FUNCTION__);

  <bb 183>:
  _301 = iftmp.304_144->tail;
  if (_301 != 0)
    goto <bb 184>;
  else
    goto <bb 201>;

  <bb 184>:
  _302 = iftmp.304_531->head;
  if (_302 != 0)
    goto <bb 186>;
  else
    goto <bb 185>;

  <bb 185>:
  __assert_fail ("nf->head", "routers/iq_router.cpp", 2050, &__PRETTY_FUNCTION__);

  <bb 186>:
  _303 = this_47(D)->_routing_delay;
  if (_303 != 0)
    goto <bb 187>;
  else
    goto <bb 193>;

  <bb 187>:
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.463_297
  # DEBUG s => 1
  # DEBUG D#38 => &cur_buf_62->_vc
  # DEBUG D#36 => D#38
  # DEBUG __n => _293
  # DEBUG this => D#36
  VC::SetState (_528, 1);
  # DEBUG __x => -1
  __y_568 = MEM[(const struct pair &)_15 + 4];
  # DEBUG __y => __y_568
  __y$4_567 = MEM[(const struct pair &)_15 + 8];
  # DEBUG __y$4 => __y$4_567
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65652] = -1;
  MEM[(struct pair *)&D.65652 + 4B] = __y_568;
  MEM[(struct pair *)&D.65652 + 8B] = __y$4_567;
  # DEBUG D#2659 => &this_47(D)->_route_vcs
  # DEBUG this => D#2659
  # DEBUG __x => &D.65652
  _285 = MEM[(struct deque *)this_47(D) + 432B].D.45014._M_impl._M_finish._M_cur;
  _699 = MEM[(struct deque *)this_47(D) + 432B].D.45014._M_impl._M_finish._M_last;
  _700 = _699 + 18446744073709551604;
  if (_285 != _700)
    goto <bb 188>;
  else
    goto <bb 191>;

  <bb 188>:
  # DEBUG D#1458 => &D#2659->D.45014._M_impl
  # DEBUG D#233 => D#1458
  # DEBUG __p => _285
  # DEBUG __arg => &D.65652
  # DEBUG __a => D#233
  # DEBUG D#232 => D#233
  # DEBUG D#231 => D#232
  # DEBUG __p => _285
  # DEBUG __val => &D.65652
  # DEBUG this => D#231
  # DEBUG D#12 => 12
  # DEBUG __p => _285
  # DEBUG D.93790 => D#12
  if (_285 != 0B)
    goto <bb 189>;
  else
    goto <bb 190>;

  <bb 189>:
  *_285 = D.65652;

  <bb 190>:
  _701 = _285 + 12;
  MEM[(struct deque *)this_47(D) + 432B].D.45014._M_impl._M_finish._M_cur = _701;
  goto <bb 192>;

  <bb 191>:
  _336 = &this_47(D)->_route_vcs;
  std::deque<std::pair<int, std::pair<int, int> > >::_M_push_back_aux (_336, &D.65652);

  <bb 192>:
  D.65652 ={v} {CLOBBER};
  goto <bb 210>;

  <bb 193>:
  _304 = iftmp.304_531->watch;
  if (_304 != 0)
    goto <bb 194>;
  else
    goto <bb 195>;

  <bb 194>:
  _305 = iftmp.304_531->id;
  # DEBUG D#1979 => &this_47(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1979
  # DEBUG D#1980 => &MEM[(const struct Module *)this_47(D)]._fullname
  _308 = GetSimTime ();
  gWatchOut.464_309 = gWatchOut;
  _311 = std::basic_ostream<char>::operator<< (gWatchOut.464_309, _308);
  # DEBUG __out => _311
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_311, " | ", 3);
  # DEBUG __os => _311
  # DEBUG __str => D#1980
  _312 = MEM[(long unsigned int *)this_47(D) + 48B];
  # DEBUG D#3 => D#1980
  # DEBUG this => D#3
  _533 = (long int) _312;
  # DEBUG this => D#1980
  _534 = MEM[(char * *)this_47(D) + 40B];
  # DEBUG D#1 => D#1980
  # DEBUG this => D#1
  _535 = std::__ostream_insert<char, std::char_traits<char> > (_311, _534, _533);
  # DEBUG __out => _535
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_535, " | ", 3);
  # DEBUG __out => _535
  # DEBUG __s => "Using precomputed lookahead routing information for VC "
  # DEBUG __s => "Using precomputed lookahead routing information for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_535, "Using precomputed lookahead routing information for VC ", 55);
  _314 = std::basic_ostream<char>::operator<< (_535, vc.463_297);
  # DEBUG __out => _314
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_314, " at input ", 10);
  _316 = std::basic_ostream<char>::operator<< (_314, input.460_55);
  # DEBUG __out => _316
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_316, " (front: ", 9);
  _318 = std::basic_ostream<char>::operator<< (_316, _305);
  # DEBUG __out => _318
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_318, ").", 2);
  # DEBUG this => _318
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_318);
  pretmp_906 = vc;
  pretmp_908 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  pretmp_910 = (long unsigned int) pretmp_906;
  pretmp_911 = pretmp_910 * 8;
  pretmp_913 = pretmp_908 + pretmp_911;
  pretmp_915 = *pretmp_913;

  <bb 195>:
  # prephitmp_916 = PHI <_528(193), pretmp_915(194)>
  _320 = &iftmp.304_531->la_route_set;
  # DEBUG D#2650 => vc
  # DEBUG this => cur_buf_62
  # DEBUG vc => D#2650
  # DEBUG output_set => _320
  # DEBUG D#37 => &cur_buf_62->_vc
  # DEBUG D#36 => D#37
  # DEBUG __n => (long unsigned int) D#2650
  # DEBUG this => D#36
  VC::SetRouteSet (prephitmp_916, _320);
  vc.463_323 = vc;
  # DEBUG this => cur_buf_62
  # DEBUG vc => vc.463_323
  # DEBUG s => 2
  _322 = (long unsigned int) vc.463_323;
  # DEBUG D#38 => &cur_buf_62->_vc
  _540 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  # DEBUG D#36 => D#38
  # DEBUG __n => _322
  # DEBUG this => D#36
  _541 = _322 * 8;
  _542 = _540 + _541;
  _543 = *_542;
  VC::SetState (_543, 2);
  _324 = this_47(D)->_speculative;
  if (_324 != 0)
    goto <bb 196>;
  else
    goto <bb 197>;

  <bb 196>:
  __x_640 = MEM[(const struct pair &)_15 + 4];
  # DEBUG __x => __x_640
  __x$4_639 = MEM[(const struct pair &)_15 + 8];
  # DEBUG __x$4 => __x$4_639
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_640
  # DEBUG __y$4 => __x$4_639
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65655] = -1;
  MEM[(struct pair *)&D.65655 + 4B] = __x_640;
  MEM[(struct pair *)&D.65655 + 8B] = __x$4_639;
  MEM[(struct pair *)&D.65655 + 12B] = -1;
  _325 = &this_47(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::push_back (_325, &D.65655);
  D.65655 ={v} {CLOBBER};

  <bb 197>:
  _328 = this_47(D)->_vc_allocator;
  if (_328 != 0B)
    goto <bb 198>;
  else
    goto <bb 199>;

  <bb 198>:
  __x_625 = MEM[(const struct pair &)_15 + 4];
  # DEBUG __x => __x_625
  __x$4_623 = MEM[(const struct pair &)_15 + 8];
  # DEBUG __x$4 => __x$4_623
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_625
  # DEBUG __y$4 => __x$4_623
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65658] = -1;
  MEM[(struct pair *)&D.65658 + 4B] = __x_625;
  MEM[(struct pair *)&D.65658 + 8B] = __x$4_623;
  MEM[(struct pair *)&D.65658 + 12B] = -1;
  _330 = &this_47(D)->_vc_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::push_back (_330, &D.65658);
  D.65658 ={v} {CLOBBER};

  <bb 199>:
  _333 = this_47(D)->_noq;
  if (_333 != 0)
    goto <bb 200>;
  else
    goto <bb 177>;

  <bb 200>:
  vc.463_334 = vc;
  IQRouter::_UpdateNOQ (this_47(D), input.460_55, vc.463_334, iftmp.304_531);
  goto <bb 210>;

  <bb 201>:
  _340 = this_47(D)->_hold_switch_for_packet;
  if (_340 != 0)
    goto <bb 202>;
  else
    goto <bb 205>;

  <bb 202>:
  _344 = iftmp.304_144->watch;
  if (_344 != 0)
    goto <bb 203>;
  else
    goto <bb 204>;

  <bb 203>:
  _345 = this_47(D)->D.51790._output_speedup;
  _346 = expanded_output_1 % _345;
  _347 = this_47(D)->D.51790._input_speedup;
  _348 = expanded_input_89 % _347;
  # DEBUG D#1983 => &this_47(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1983
  # DEBUG D#1984 => &MEM[(const struct Module *)this_47(D)]._fullname
  _353 = GetSimTime ();
  gWatchOut.464_354 = gWatchOut;
  _356 = std::basic_ostream<char>::operator<< (gWatchOut.464_354, _353);
  # DEBUG __out => _356
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_356, " | ", 3);
  # DEBUG __os => _356
  # DEBUG __str => D#1984
  _357 = MEM[(long unsigned int *)this_47(D) + 48B];
  # DEBUG D#3 => D#1984
  # DEBUG this => D#3
  _544 = (long int) _357;
  # DEBUG this => D#1984
  _545 = MEM[(char * *)this_47(D) + 40B];
  # DEBUG D#1 => D#1984
  # DEBUG this => D#1
  _546 = std::__ostream_insert<char, std::char_traits<char> > (_356, _545, _544);
  # DEBUG __out => _546
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_546, " | ", 3);
  # DEBUG __out => _546
  # DEBUG __s => "Setting up switch hold for VC "
  # DEBUG __s => "Setting up switch hold for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_546, "Setting up switch hold for VC ", 30);
  _359 = std::basic_ostream<char>::operator<< (_546, vc.463_297);
  # DEBUG __out => _359
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_359, " at input ", 10);
  _361 = std::basic_ostream<char>::operator<< (_359, input.460_55);
  # DEBUG __out => _361
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_361, ".", 1);
  _363 = std::basic_ostream<char>::operator<< (_361, _348);
  # DEBUG __out => _363
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_363, " to output ", 11);
  _365 = std::basic_ostream<char>::operator<< (_363, output_98);
  # DEBUG __out => _365
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_365, ".", 1);
  _367 = std::basic_ostream<char>::operator<< (_365, _346);
  # DEBUG __out => _367
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_367, ".", 1);
  # DEBUG this => _367
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_367);
  pretmp_904 = vc;

  <bb 204>:
  # prephitmp_905 = PHI <vc.463_297(202), pretmp_904(203)>
  # DEBUG D#1985 => &this_47(D)->_switch_hold_vc
  _422 = MEM[(int * *)this_47(D) + 1120B];
  # DEBUG D#55 => D#1985
  # DEBUG __n => _90
  # DEBUG this => D#55
  _549 = _422 + _116;
  *_549 = prephitmp_905;
  # DEBUG D#1986 => &this_47(D)->_switch_hold_in
  _423 = MEM[(int * *)this_47(D) + 1072B];
  # DEBUG D#55 => D#1986
  # DEBUG __n => _90
  # DEBUG this => D#55
  _548 = _423 + _116;
  *_548 = expanded_output_1;
  # DEBUG D#1987 => &this_47(D)->_switch_hold_out
  _424 = MEM[(int * *)this_47(D) + 1096B];
  # DEBUG D#55 => D#1987
  # DEBUG __n => _95
  # DEBUG this => D#55
  _547 = _424 + _93;
  *_547 = expanded_input_89;
  __x_261 = MEM[(const struct pair &)_15 + 4];
  # DEBUG __x => __x_261
  __x$4_256 = MEM[(const struct pair &)_15 + 8];
  # DEBUG __x$4 => __x$4_256
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_261
  # DEBUG __y$4 => __x$4_256
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65661] = -1;
  MEM[(struct pair *)&D.65661 + 4B] = __x_261;
  MEM[(struct pair *)&D.65661 + 8B] = __x$4_256;
  MEM[(struct pair *)&D.65661 + 12B] = -1;
  _374 = &this_47(D)->_sw_hold_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::push_back (_374, &D.65661);
  D.65661 ={v} {CLOBBER};
  goto <bb 210>;

  <bb 205>:
  __x_351 = MEM[(const struct pair &)_15 + 4];
  # DEBUG __x => __x_351
  __x$4_349 = MEM[(const struct pair &)_15 + 8];
  # DEBUG __x$4 => __x$4_349
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => __x_351
  # DEBUG __y$4 => __x$4_349
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65664] = -1;
  MEM[(struct pair *)&D.65664 + 4B] = __x_351;
  MEM[(struct pair *)&D.65664 + 8B] = __x$4_349;
  MEM[(struct pair *)&D.65664 + 12B] = -1;
  _341 = &this_47(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::push_back (_341, &D.65664);
  D.65664 ={v} {CLOBBER};
  goto <bb 210>;

  <bb 206>:
  _386 = iftmp.304_144->watch;
  if (_386 != 0)
    goto <bb 208>;
  else
    goto <bb 207>;

  <bb 207>:
  pretmp_786 = MEM[(const struct pair &)_15 + 8];
  pretmp_779 = MEM[(const struct pair &)_15 + 4];
  goto <bb 209>;

  <bb 208>:
  # DEBUG D#1981 => &this_47(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1981
  # DEBUG D#1982 => &MEM[(const struct Module *)this_47(D)]._fullname
  _389 = GetSimTime ();
  gWatchOut.464_390 = gWatchOut;
  _392 = std::basic_ostream<char>::operator<< (gWatchOut.464_390, _389);
  # DEBUG __out => _392
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_392, " | ", 3);
  # DEBUG __os => _392
  # DEBUG __str => D#1982
  _393 = MEM[(long unsigned int *)this_47(D) + 48B];
  # DEBUG D#3 => D#1982
  # DEBUG this => D#3
  _550 = (long int) _393;
  # DEBUG this => D#1982
  _551 = MEM[(char * *)this_47(D) + 40B];
  # DEBUG D#1 => D#1982
  # DEBUG this => D#1
  _552 = std::__ostream_insert<char, std::char_traits<char> > (_392, _551, _550);
  # DEBUG __out => _552
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_552, " | ", 3);
  # DEBUG __out => _552
  # DEBUG __s => "  No output port allocated."
  # DEBUG __s => "  No output port allocated."
  std::__ostream_insert<char, std::char_traits<char> > (_552, "  No output port allocated.", 27);
  # DEBUG this => _552
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_552);
  pretmp_787 = MEM[(const struct pair &)_15 + 8];
  pretmp_781 = MEM[(const struct pair &)_15 + 4];

  <bb 209>:
  # prephitmp_778 = PHI <pretmp_786(207), pretmp_787(208), vc.462_57(227)>
  # prephitmp_780 = PHI <pretmp_779(207), pretmp_781(208), input.460_55(227)>
  # DEBUG D#2649 => MEM[(const struct pair &)_15 + 4]
  # DEBUG __x => D#2649
  # DEBUG D#2648 => MEM[(const struct pair &)_15 + 8]
  # DEBUG __x$4 => D#2648
  # DEBUG __y => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG __x => -1
  # DEBUG __y => D#2649
  # DEBUG __y$4 => D#2648
  # DEBUG __y$8 => -1
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  MEM[(struct pair *)&D.65667] = -1;
  MEM[(struct pair *)&D.65667 + 4B] = prephitmp_780;
  MEM[(struct pair *)&D.65667 + 8B] = prephitmp_778;
  MEM[(struct pair *)&D.65667 + 12B] = -1;
  _395 = &this_47(D)->_sw_alloc_vcs;
  std::deque<std::pair<int, std::pair<std::pair<int, int>, int> > >::push_back (_395, &D.65667);
  D.65667 ={v} {CLOBBER};

  <bb 210>:
  # DEBUG D#2646 => &this_47(D)->_sw_alloc_vcs
  # DEBUG this => D#2646
  _394 = MEM[(struct deque *)this_47(D) + 672B].D.45936._M_impl._M_start._M_cur;
  _553 = MEM[(struct deque *)this_47(D) + 672B].D.45936._M_impl._M_start._M_last;
  _554 = _553 + 18446744073709551600;
  if (_394 != _554)
    goto <bb 211>;
  else
    goto <bb 212>;

  <bb 211>:
  # DEBUG D#777 => D#2646->D.45936._M_impl._M_start._M_cur
  # DEBUG D#776 => &D#2646->D.45936._M_impl
  # DEBUG D#281 => D#776
  # DEBUG D#282 => D#777
  # DEBUG __a => D#281
  # DEBUG __p => D#282
  # DEBUG D#280 => D#282
  # DEBUG D#279 => D#281
  # DEBUG D#277 => D#279
  # DEBUG D#278 => D#280
  # DEBUG this => D#277
  # DEBUG __p => D#278
  _555 = _394 + 16;
  MEM[(struct deque *)this_47(D) + 672B].D.45936._M_impl._M_start._M_cur = _555;
  goto <bb 213>;

  <bb 212>:
  # DEBUG this => D#2646
  # DEBUG this => D#2646
  # DEBUG D#775 => D#2646->D.45936._M_impl._M_start._M_cur
  # DEBUG D#772 => &D#2646->D.45936
  # DEBUG this => D#772
  # DEBUG D#282 => D#775
  # DEBUG __a => D#281
  # DEBUG __p => D#282
  # DEBUG D#280 => D#282
  # DEBUG D#279 => D#281
  # DEBUG D#277 => D#279
  # DEBUG D#278 => D#280
  # DEBUG this => D#277
  # DEBUG __p => D#278
  _337 = MEM[(struct deque *)this_47(D) + 672B].D.45936._M_impl._M_start._M_first;
  # DEBUG D#774 => &D#2646->D.45936
  # DEBUG this => D#774
  # DEBUG __p => _337
  # DEBUG __size => 16
  # DEBUG D#768 => &D#774->_M_impl
  # DEBUG D#766 => D#768
  # DEBUG __p => _337
  # DEBUG __a => D#766
  # DEBUG __n => D#767
  # DEBUG D#765 => D#767
  # DEBUG D#764 => D#766
  # DEBUG D#762 => D#764
  # DEBUG D#763 => D#765
  # DEBUG __p => _337
  # DEBUG this => D#762
  # DEBUG D.124274 => D#763
  operator delete (_337);
  _702 = MEM[(struct deque *)this_47(D) + 672B].D.45936._M_impl._M_start._M_node;
  _703 = _702 + 8;
  # DEBUG D#773 => &D#2646->D.45936._M_impl._M_start
  # DEBUG this => D#773
  # DEBUG __new_node => _703
  MEM[(struct _Deque_iterator *)this_47(D) + 688B]._M_node = _703;
  _704 = MEM[(struct pair * *)_702 + 8B];
  MEM[(struct _Deque_iterator *)this_47(D) + 688B]._M_first = _704;
  # DEBUG __size => 16
  _705 = _704 + 512;
  MEM[(struct _Deque_iterator *)this_47(D) + 688B]._M_last = _705;
  MEM[(struct deque *)this_47(D) + 672B].D.45936._M_impl._M_start._M_cur = _704;

  <bb 213>:
  # prephitmp_790 = PHI <_704(212), _555(211)>
  # DEBUG D#1939 => {CLOBBER}
  # DEBUG input => D#1939
  vc ={v} {CLOBBER};
  # DEBUG D#1988 => &this_47(D)->_sw_alloc_vcs
  # DEBUG this => D#1988
  # DEBUG D#149 => &MEM[(const struct deque *)D#1988].D.45936._M_impl._M_start
  # DEBUG D#150 => &MEM[(const struct deque *)D#1988].D.45936._M_impl._M_finish
  _387 = MEM[(struct pair * *)this_47(D) + 720B];
  # DEBUG D#147 => D#150
  # DEBUG D#2647 => MEM[(struct pair * *)this_47(D) + 688B]
  # DEBUG D#148 => D#149
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_387 != prephitmp_790)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 214>:
  return;

<L203>:

<L190>:
  # DEBUG this => &setlist
  # DEBUG this => &setlist._M_t
  _556 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];
  # DEBUG D#89 => &setlist._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&setlist._M_t, _556);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  resx 3

  <bb 217>:
  _54 = GetSimTime ();
  if (time_16 != _54)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 218>:
  # DEBUG D#1940 => {CLOBBER}
  # DEBUG input => D#1940
  vc ={v} {CLOBBER};
  goto <bb 214>;

  <bb 219>:
  _104 = iftmp.304_144->head;
  if (_104 != 0)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 220>:
  pretmp_893 = (long unsigned int) prephitmp_838;
  pretmp_894 = pretmp_893 * 8;
  pretmp_896 = MEM[(struct VC * * *)cur_buf_62 + 104B];
  pretmp_961 = pretmp_896 + pretmp_894;
  pretmp_962 = *pretmp_961;

  <bb 221>:
  # prephitmp_963 = PHI <pretmp_962(220), _48(38)>
  # DEBUG this => cur_buf_62
  # DEBUG vc => D#2658
  # DEBUG D#2656 => (long unsigned int) D#2658
  # DEBUG D#46 => &MEM[(const struct Buffer *)cur_buf_62]._vc
  # DEBUG D#2655 => MEM[(struct VC * * *)cur_buf_62 + 104B]
  # DEBUG D#42 => D#46
  # DEBUG __n => D#2656
  # DEBUG this => D#42
  # DEBUG D#2654 => D#2656 * 8
  # DEBUG D#2653 => D#2655 + D#2654
  # DEBUG D#2652 => *D#2653
  _478 = MEM[(int *)prephitmp_963 + 192B];
  # DEBUG D#22 => D#2652
  # DEBUG this => D#22
  if (output_98 != _478)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 222>:
  _127 = this_47(D)->_routing_delay;
  if (_127 != 0)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 223>:
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_14
  # DEBUG D#1955 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_14]._M_value_field
  # DEBUG __r => D#1955
  match_vc_136 = MEM[(const struct sSetElement *)iset$_M_node_14 + 32B].vc_start;
  # DEBUG vc_start => match_vc_136
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_14
  # DEBUG D#1956 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_14]._M_value_field
  # DEBUG __r => D#1956
  vc_end_137 = MEM[(const struct sSetElement *)iset$_M_node_14 + 32B].vc_end;
  # DEBUG vc_end => vc_end_137
  goto <bb 62>;

  <bb 224>:
  if (match_prio_140 < 0)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 225>:
  goto <bb 91>;

  <bb 226>:
  # DEBUG D#800 => {CLOBBER}
  # DEBUG __j$_M_node => D#800
  # DEBUG this => NULL
  # DEBUG __x => NULL
  _290 = Credit::New ();
  # DEBUG __x => input.460_55
  # DEBUG __y => _290
  # DEBUG this => NULL
  # DEBUG __a => &__x
  # DEBUG __b => &__y
  # DEBUG this => &D.65646
  # DEBUG __p => &D.65645
  D.65646.first = input.460_55;
  D.65646.second = _290;
  # DEBUG D#1975 => &this_47(D)->_out_queue_credits
  # DEBUG this => D#1975
  # DEBUG __x => &D.65646
  _516 = &MEM[(struct map *)this_47(D) + 832B]._M_t;
  D.112452 = std::_Rb_tree<int, std::pair<const int, Credit*>, std::_Select1st<std::pair<const int, Credit*> >, std::less<int>, std::allocator<std::pair<const int, Credit*> > >::_M_insert_unique (_516, &D.65646);
  D.65646 ={v} {CLOBBER};
  pretmp_901 = MEM[(struct _Rb_tree_node_base * *)this_47(D) + 848B];
  goto <bb 165>;

  <bb 227>:
  expanded_output_837 = MEM[(const struct pair &)_15].second.second;
  # DEBUG expanded_output => expanded_output_837
  if (expanded_output_837 >= 0)
    goto <bb 28>;
  else
    goto <bb 209>;

  <bb 228>:
  # match_prio_835 = PHI <match_prio_145(79), match_prio_140(77)>
  # DEBUG vc_prio => match_prio_835
  # DEBUG this => dest_buf_102
  # DEBUG vc => match_vc_862
  goto <bb 83>;

}



;; Function void IQRouter::_VCAllocEvaluate() (_ZN8IQRouter16_VCAllocEvaluateEv, funcdef_no=2243, decl_uid=51696, cgraph_uid=688, symbol_order=689)

Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void IQRouter::_VCAllocEvaluate() (struct IQRouter * const this)
{
  bool D.124469;
  static const char __PRETTY_FUNCTION__[44] = "bool BufferState::IsAvailableFor(int) const";
  char_type D.124464;
  char __c;
  char_type D.124461;
  char __c;
  char_type D.124458;
  struct basic_ostream & D.124452;
  char_type D.124445;
  char __c;
  char_type D.124442;
  char __c;
  char_type D.124439;
  struct basic_ostream & D.124433;
  char_type D.124430;
  char __c;
  char_type D.124427;
  char __c;
  char_type D.124424;
  struct basic_ostream & D.124418;
  struct basic_ostream & D.124415;
  struct basic_ostream & D.124411;
  int D.124407;
  static const char __PRETTY_FUNCTION__[35] = "int BufferState::UsedBy(int) const";
  bool D.124402;
  static const char __PRETTY_FUNCTION__[44] = "bool BufferState::IsAvailableFor(int) const";
  bool D.124397;
  static const char __PRETTY_FUNCTION__[40] = "bool BufferState::IsEmptyFor(int) const";
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  const struct _Rb_tree_node_base * const iset$_M_node;
  const struct Buffer * const cur_buf;
  const int vc;
  const int input;
  const struct BufferState * const dest_buf;
  const int match_vc;
  const int match_output;
  const int time;
  struct iterator iter;
  const int match_vc;
  const int match_output;
  const struct Buffer * const cur_buf;
  const int vc;
  const int input;
  const int time;
  struct iterator iter;
  const int use_vc;
  const int use_input;
  int in_priority;
  int out_vc;
  int vc_end;
  const struct BufferState * const dest_buf;
  const int out_port;
  bool reserved;
  bool cred;
  bool elig;
  const struct set setlist;
  const struct Buffer * const cur_buf;
  const int vc;
  const int input;
  const int time;
  struct iterator iter;
  bool watched;
  static const char __PRETTY_FUNCTION__[34] = "void IQRouter::_VCAllocEvaluate()";
  int iftmp.331_22;
  const int iftmp.333_23;
  int iftmp.336_24;
  const int iftmp.343_26;
  struct Allocator * _58;
  struct BufferState * & _60;
  long unsigned int _61;
  int _64;
  int _66;
  int _67;
  long unsigned int _68;
  int _71;
  bool _72;
  bool _73;
  int _74;
  struct pair * prephitmp_75;
  int _77;
  struct ostream * gWatchOut.322_78;
  struct basic_ostream & _80;
  const size_type _81;
  struct basic_ostream & _83;
  struct basic_ostream & _85;
  struct basic_ostream & _87;
  const int _88;
  const struct set & _90;
  bool _92;
  struct VC * _93;
  struct VC * const & _95;
  int _97;
  long unsigned int _98;
  struct VC * * const _99;
  const struct OutputSet * _102;
  int _104;
  int _105;
  int _113;
  int _114;
  bool _116;
  struct pair * const pretmp_117;
  struct basic_ostream & _118;
  char * const _121;
  struct pair * const pretmp_122;
  bool _123;
  long int _124;
  struct pair * const pretmp_125;
  int _129;
  struct ostream * gWatchOut.322_130;
  struct basic_ostream & _132;
  const size_type _133;
  struct basic_ostream & _135;
  struct basic_ostream & _137;
  struct basic_ostream & _139;
  long unsigned int _140;
  long unsigned int _142;
  struct Buffer * _143;
  int _144;
  struct ostream * gWatchOut.322_145;
  struct basic_ostream & _147;
  struct ostream * gWatchOut.322_149;
  int (*__vtbl_ptr_type) () * _150;
  struct ostream * gWatchOut.322_151;
  bool _152;
  bool _153;
  int _156;
  struct ostream * gWatchOut.322_157;
  struct basic_ostream & _159;
  const size_type _160;
  struct basic_ostream & _162;
  struct basic_ostream & _164;
  struct Flit * iftmp.304_165;
  bool _166;
  bool _168;
  int _170;
  struct ostream * gWatchOut.322_171;
  struct basic_ostream & _173;
  const size_type _174;
  struct basic_ostream & _176;
  struct basic_ostream & _178;
  struct basic_ostream & _180;
  struct basic_ostream & _182;
  bool _183;
  int _184;
  int _185;
  int iftmp.331_186;
  int _187;
  int _188;
  int iftmp.331_189;
  struct Allocator * _190;
  int (*__vtbl_ptr_type) () * _191;
  int (*__vtbl_ptr_type) () _192;
  int _194;
  int _195;
  int STALL_BUFFER_BUSY.332_205;
  bool _207;
  const int iftmp.333_208;
  const int iftmp.333_209;
  const size_type _211;
  struct Allocator * _224;
  int _226;
  struct ostream * gWatchOut.322_227;
  struct basic_ostream & _229;
  struct Allocator * _231;
  int (*__vtbl_ptr_type) () * _232;
  int (*__vtbl_ptr_type) () _233;
  struct ostream * gWatchOut.322_234;
  struct Allocator * _240;
  int _242;
  struct ostream * gWatchOut.322_243;
  struct basic_ostream & _245;
  struct ostream * gWatchOut.322_247;
  struct Allocator * _248;
  const eVCState _252;
  int _254;
  int _255;
  int _256;
  int _257;
  int _260;
  int _262;
  int _263;
  long unsigned int _264;
  struct Buffer * & _266;
  long unsigned int _267;
  int _268;
  bool _269;
  bool _270;
  int _271;
  int iftmp.336_272;
  int _273;
  int iftmp.336_274;
  struct Allocator * _275;
  const int _277;
  int _278;
  int _280;
  bool _282;
  int _284;
  struct ostream * gWatchOut.322_285;
  struct basic_ostream & _287;
  const size_type _288;
  struct basic_ostream & _290;
  struct basic_ostream & _292;
  struct basic_ostream & _294;
  struct basic_ostream & _296;
  struct Flit * * const _297;
  bool _301;
  struct Flit * * const _302;
  int _304;
  struct ostream * gWatchOut.322_305;
  struct basic_ostream & _307;
  const size_type _308;
  struct basic_ostream & _310;
  struct basic_ostream & _312;
  struct VC * _313;
  int STALL_BUFFER_CONFLICT.337_314;
  struct pair * _322;
  int _326;
  struct VC * const & _328;
  long unsigned int _329;
  int _332;
  struct VC * * const _333;
  int _334;
  long unsigned int _335;
  int _336;
  int _338;
  long unsigned int _340;
  int _343;
  long unsigned int _345;
  struct pair * _347;
  int _348;
  bool _349;
  struct pair * prephitmp_350;
  bool _351;
  bool _352;
  struct pair * _353;
  int _355;
  struct ostream * gWatchOut.322_356;
  struct basic_ostream & _358;
  const size_type _359;
  struct basic_ostream & _361;
  struct basic_ostream & _363;
  struct basic_ostream & _365;
  struct basic_ostream & _367;
  struct pair * _368;
  struct pair * _369;
  const int iftmp.343_370;
  const int iftmp.343_371;
  bool _373;
  bool _374;
  int _376;
  struct ostream * gWatchOut.322_377;
  struct basic_ostream & _379;
  const size_type _380;
  struct basic_ostream & _382;
  struct basic_ostream & _384;
  struct basic_ostream & _386;
  struct basic_ostream & _388;
  struct pair * * _389;
  int STALL_BUFFER_BUSY.332_390;
  const int _405;
  const int _406;
  const int _407;
  const int _408;
  struct BufferPolicy * const _409;
  struct BufferPolicy * const _410;
  struct Buffer * * _411;
  struct Buffer * * _412;
  struct Buffer * * _413;
  struct Buffer * * _414;
  struct BufferState * * _415;
  struct BufferState * * _416;
  int * _417;
  int * _418;
  int * _419;
  struct pair * const _420;
  struct pair * const _421;
  struct pair * const _422;
  struct pair * const _423;
  struct pair * const _424;
  struct pair * const _425;
  struct pair * const _427;
  struct vector * _428;
  struct vector * _429;
  struct vector * _430;
  long unsigned int _431;
  int & _432;
  long unsigned int _433;
  struct vector & _434;
  int & _435;
  struct vector & _436;
  int & _438;
  struct vector & _440;
  long int _441;
  char * const _442;
  struct basic_ostream & _443;
  struct VC * * const _444;
  long unsigned int _445;
  struct VC * const & _446;
  struct VC * _447;
  struct Flit * * const _448;
  struct Flit * * const _449;
  struct Flit * iftmp.304_450;
  long unsigned int _452;
  struct Buffer * & _453;
  int (*__vtbl_ptr_type) () * _454;
  int (*__vtbl_ptr_type) () _455;
  bool _456;
  long int _457;
  char * const _458;
  struct basic_ostream & _459;
  long int _460;
  char * const _461;
  struct basic_ostream & _462;
  struct pair * _464;
  struct pair * _465;
  struct pair * _466;
  long int _468;
  char * const _469;
  struct basic_ostream & _470;
  const size_type _471;
  long int _472;
  char * const _473;
  struct basic_ostream & _474;
  struct pair * _475;
  struct pair * _476;
  struct pair * _477;
  struct pair * * _478;
  struct pair * _479;
  long unsigned int _480;
  struct VC * * const _481;
  long unsigned int _482;
  struct VC * const & _483;
  struct VC * _484;
  struct Flit * * const _485;
  struct Flit * * const _486;
  long unsigned int _487;
  struct Buffer * & _488;
  const eVCState _489;
  struct Flit * iftmp.304_490;
  long int _492;
  char * const _493;
  struct basic_ostream & _494;
  long int _495;
  char * const _496;
  struct basic_ostream & _497;
  struct pair * _499;
  struct pair * _500;
  struct pair * _501;
  struct pair * _502;
  struct pair * * _503;
  long unsigned int _505;
  struct BufferState * & _506;
  long unsigned int _507;
  struct VC * * const _508;
  long unsigned int _509;
  struct VC * const & _510;
  struct VC * _511;
  struct Flit * * const _512;
  struct Flit * * const _513;
  long unsigned int _514;
  struct Buffer * & _515;
  const eVCState _516;
  struct Flit * iftmp.304_517;
  long int _519;
  char * const _520;
  struct basic_ostream & _521;
  int (*__vtbl_ptr_type) () * _522;
  int (*__vtbl_ptr_type) () _523;
  bool _524;
  long int _525;
  char * const _526;
  struct basic_ostream & _527;
  struct pair * _529;
  struct pair * _530;
  struct _Rb_tree_node_base * _531;
  bool _533;
  int _547;
  const struct __ctype_type * _558;
  const struct __ctype_type * _566;
  const struct __ctype_type * _575;
  bool _620;
  struct pair * const pretmp_642;
  struct _Rb_tree_node_base * const _643;
  long unsigned int _650;
  long unsigned int _651;
  int * const _652;
  long unsigned int _653;
  const int & _654;
  int _655;
  int _657;
  int * const _659;
  const int & _661;
  int _662;
  struct pair * const prephitmp_663;
  bool _664;
  bool _665;
  bool _666;
  bool _668;
  bool _669;
  struct pair * const prephitmp_672;
  long int _673;
  sizetype _674;
  struct basic_ios * _675;
  struct basic_ostream & _678;
  char _680;
  char_type _683;
  struct pair * const prephitmp_685;
  int (*__vtbl_ptr_type) () * _688;
  int (*__vtbl_ptr_type) () _689;
  struct pair * const pretmp_690;
  void * PROF_693;
  struct pair * const prephitmp_694;
  char_type _695;
  int (*__vtbl_ptr_type) () * _698;
  long int _699;
  sizetype _700;
  struct basic_ios * _701;
  struct basic_ostream & _704;
  char _706;
  struct pair * const prephitmp_708;
  char_type _709;
  struct pair * const prephitmp_710;
  int (*__vtbl_ptr_type) () * _714;
  int (*__vtbl_ptr_type) () _715;
  bool _717;
  bool _718;
  void * PROF_719;
  bool pretmp_720;
  char_type _721;
  int (*__vtbl_ptr_type) () * _724;
  long int _725;
  sizetype _726;
  struct basic_ios * _727;
  struct basic_ostream & _730;
  char _732;
  struct pair * prephitmp_733;
  struct VC * * const pretmp_734;
  char_type _735;
  int (*__vtbl_ptr_type) () * _740;
  int (*__vtbl_ptr_type) () _741;
  void * PROF_745;
  char_type _747;
  int _750;
  long unsigned int _751;
  int * const _752;
  long unsigned int _753;
  const int & _754;
  int _755;
  bool _756;
  bool _759;
  struct pair * const prephitmp_777;
  struct pair * const pretmp_782;
  struct pair * const prephitmp_786;
  struct pair * pretmp_813;
  int _817;
  bool prephitmp_828;
  int (*__vtbl_ptr_type) () * _834;
  int (*__vtbl_ptr_type) () _838;
  struct Allocator * _839;
  int _844;
  int (*__vtbl_ptr_type) () * _845;
  int (*__vtbl_ptr_type) () _846;
  struct pair * const prephitmp_851;
  struct Allocator * _862;
  struct _Rb_tree_node_base * prephitmp_870;
  const size_type prephitmp_871;
  struct _Rb_tree_node_base * const prephitmp_872;
  struct pair * _874;
  struct pair * _878;
  struct pair * _879;
  long unsigned int pretmp_899;
  long unsigned int pretmp_901;
  long unsigned int prephitmp_902;
  int pretmp_907;
  int prephitmp_908;
  int pretmp_909;
  int pretmp_910;
  int prephitmp_911;
  int pretmp_915;
  int pretmp_916;
  int prephitmp_917;
  int pretmp_918;
  int pretmp_919;
  int prephitmp_920;
  struct VC * * const pretmp_923;
  struct VC * const pretmp_924;
  struct VC * const prephitmp_925;
  struct _Rb_tree_node_base * pretmp_927;
  struct _Rb_tree_node_base * prephitmp_928;
  struct _Rb_tree_node_base * pretmp_929;
  struct _Rb_tree_node_base * pretmp_930;
  struct _Rb_tree_node_base * prephitmp_931;

  <bb 2>:
  _58 = this_57(D)->_vc_allocator;
  if (_58 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("_vc_allocator", "routers/iq_router.cpp", 555, &__PRETTY_FUNCTION__);

  <bb 4>:
  # DEBUG watched => 0
  # DEBUG D#1711 => &this_57(D)->_vc_alloc_vcs
  # DEBUG this => D#1711
  # DEBUG D#67 => &D#1711->D.45936._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#67
  _369 = MEM[(const struct iterator &)this_57(D) + 528]._M_cur;
  iter._M_cur = _369;
  _368 = MEM[(const struct iterator &)this_57(D) + 528]._M_first;
  iter._M_first = _368;
  _353 = MEM[(const struct iterator &)this_57(D) + 528]._M_last;
  iter._M_last = _353;
  _389 = MEM[(const struct iterator &)this_57(D) + 528]._M_node;
  iter._M_node = _389;
  goto <bb 6>;

  <bb 5>:
  # prephitmp_672 = PHI <pretmp_642(231), _465(230)>

  <bb 6>:
  # watched_1 = PHI <watched_3(5), 0(4)>
  # prephitmp_851 = PHI <prephitmp_672(5), _369(4)>
  # DEBUG watched => watched_1
  # DEBUG D#1730 => &this_57(D)->_vc_alloc_vcs
  # DEBUG this => D#1730
  # DEBUG D#68 => &D#1730->D.45936._M_impl._M_finish
  # DEBUG this => &D.64762
  # DEBUG __x => D#68
  _347 = MEM[(const struct iterator &)this_57(D) + 560]._M_cur;
  # DEBUG D#1758 => MEM[(const struct iterator &)this_57(D) + 560]._M_first
  # DEBUG D.109425 => D#1758
  # DEBUG D#1757 => MEM[(const struct iterator &)this_57(D) + 560]._M_last
  # DEBUG D.109426 => D#1757
  # DEBUG D#1756 => MEM[(const struct iterator &)this_57(D) + 560]._M_node
  # DEBUG D.109427 => D#1756
  # DEBUG __x => &iter
  # DEBUG __y => &D.64762
  # DEBUG D#147 => &iter
  # DEBUG D#148 => &D.64762
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_347 != prephitmp_851)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  # watched_888 = PHI <watched_1(6)>
  goto <bb 233>;

  <bb 8>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  time_62 = prephitmp_851->first;
  # DEBUG time => time_62
  if (time_62 >= 0)
    goto <bb 232>;
  else
    goto <bb 9>;

  <bb 9>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  input_63 = prephitmp_851->second.first.first;
  # DEBUG input => input_63
  if (input_63 < 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _64 = this_57(D)->D.51790._inputs;
  if (input_63 >= _64)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 569, &__PRETTY_FUNCTION__);

  <bb 12>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  vc_65 = prephitmp_851->second.first.second;
  # DEBUG vc => vc_65
  if (vc_65 < 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  _66 = this_57(D)->_vcs;
  if (vc_65 >= _66)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 571, &__PRETTY_FUNCTION__);

  <bb 15>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _67 = prephitmp_851->second.second;
  if (_67 != -1)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  __assert_fail ("iter->second.second == -1", "routers/iq_router.cpp", 573, &__PRETTY_FUNCTION__);

  <bb 17>:
  _68 = (long unsigned int) input_63;
  # DEBUG D#1712 => &this_57(D)->_buf
  _411 = MEM[(struct Buffer * * *)this_57(D) + 880B];
  # DEBUG D#53 => D#1712
  # DEBUG __n => _68
  # DEBUG this => D#53
  _267 = _68 * 8;
  _266 = _411 + _267;
  cur_buf_69 = *_266;
  # DEBUG cur_buf => cur_buf_69
  # DEBUG this => cur_buf_69
  # DEBUG vc => vc_65
  _335 = (long unsigned int) vc_65;
  # DEBUG D#96 => &cur_buf_69->_vc
  _333 = MEM[(struct VC * * *)cur_buf_69 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _335
  # DEBUG this => D#42
  _329 = _335 * 8;
  _328 = _333 + _329;
  _313 = *_328;
  # DEBUG this => _313
  # DEBUG D#95 => &MEM[(const struct VC *)_313]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _302 = MEM[(struct Flit * * *)_313 + 144B];
  # DEBUG D#91 => D#94
  _297 = MEM[(struct Flit * * *)_313 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_297 == _302)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 576, &__PRETTY_FUNCTION__);

  <bb 19>:
  # DEBUG this => cur_buf_69
  # DEBUG vc => vc_65
  # DEBUG D#43 => &cur_buf_69->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _335
  # DEBUG this => D#42
  _252 = MEM[(eVCState *)_313 + 176B];
  # DEBUG D#21 => _313
  # DEBUG this => D#21
  if (_252 != 2)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __assert_fail ("cur_buf->GetState(vc) == VC::vc_alloc", "routers/iq_router.cpp", 577, &__PRETTY_FUNCTION__);

  <bb 21>:
  # DEBUG this => cur_buf_69
  # DEBUG vc => vc_65
  # DEBUG D#186 => &cur_buf_69->_vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _335
  # DEBUG this => D#42
  # DEBUG this => _313
  # DEBUG D#184 => &MEM[(const struct VC *)_313]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_313]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_165 = MEM[(struct Flit * const &)_297];
  # DEBUG f => iftmp.304_165
  if (iftmp.304_165 == 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 580, &__PRETTY_FUNCTION__);

  <bb 23>:
  _71 = MEM[(const struct Flit *)iftmp.304_165].vc;
  if (vc_65 != _71)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 581, &__PRETTY_FUNCTION__);

  <bb 25>:
  _72 = MEM[(const struct Flit *)iftmp.304_165].head;
  if (_72 != 0)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 582, &__PRETTY_FUNCTION__);

  <bb 27>:
  _73 = MEM[(const struct Flit *)iftmp.304_165].watch;
  if (_73 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _74 = MEM[(const struct Flit *)iftmp.304_165].id;
  # DEBUG D#1713 => &this_57(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1713
  # DEBUG D#1714 => &MEM[(const struct Module *)this_57(D)]._fullname
  _77 = GetSimTime ();
  gWatchOut.322_78 = gWatchOut;
  _80 = std::basic_ostream<char>::operator<< (gWatchOut.322_78, _77);
  # DEBUG __out => _80
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_80, " | ", 3);
  # DEBUG __os => _80
  # DEBUG __str => D#1714
  _81 = MEM[(long unsigned int *)this_57(D) + 48B];
  # DEBUG D#3 => D#1714
  # DEBUG this => D#3
  _124 = (long int) _81;
  # DEBUG this => D#1714
  _121 = MEM[(char * *)this_57(D) + 40B];
  # DEBUG D#1 => D#1714
  # DEBUG this => D#1
  _118 = std::__ostream_insert<char, std::char_traits<char> > (_80, _121, _124);
  # DEBUG __out => _118
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_118, " | ", 3);
  # DEBUG __out => _118
  # DEBUG __s => "Beginning VC allocation for VC "
  # DEBUG __s => "Beginning VC allocation for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_118, "Beginning VC allocation for VC ", 31);
  _83 = std::basic_ostream<char>::operator<< (_118, vc_65);
  # DEBUG __out => _83
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_83, " at input ", 10);
  _85 = std::basic_ostream<char>::operator<< (_83, input_63);
  # DEBUG __out => _85
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_85, " (front: ", 9);
  _87 = std::basic_ostream<char>::operator<< (_85, _74);
  # DEBUG __out => _87
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_87, ").", 2);
  # DEBUG this => _87
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_87);
  pretmp_734 = MEM[(struct VC * * *)cur_buf_69 + 104B];
  pretmp_923 = pretmp_734 + _329;
  pretmp_924 = MEM[(struct VC * const &)pretmp_923];

  <bb 29>:
  # prephitmp_925 = PHI <_313(27), pretmp_924(28)>
  # DEBUG this => cur_buf_69
  # DEBUG vc => vc_65
  # DEBUG D#44 => &cur_buf_69->_vc
  # DEBUG D#42 => D#44
  # DEBUG __n => _335
  # DEBUG this => D#42
  _102 = VC::GetRouteSet (prephitmp_925);
  # DEBUG route_set => _102
  if (_102 == 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __assert_fail ("route_set", "routers/iq_router.cpp", 593, &__PRETTY_FUNCTION__);

  <bb 31>:
  # DEBUG this => cur_buf_69
  # DEBUG vc => vc_65
  # DEBUG D#45 => &cur_buf_69->_vc
  _99 = MEM[(struct VC * * *)cur_buf_69 + 104B];
  # DEBUG D#42 => D#45
  # DEBUG __n => _335
  # DEBUG this => D#42
  _95 = _99 + _329;
  _93 = *_95;
  _88 = MEM[(int *)_93 + 204B];
  # DEBUG D#24 => _93
  # DEBUG this => D#24
  # DEBUG out_priority => _88
  _90 = OutputSet::GetSet (_102);
  # DEBUG this => &setlist
  # DEBUG __x => _90
  # DEBUG D#2681 => &_90->_M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => D#2681
  # DEBUG this => D#2681
  # DEBUG __a => NULL
  # DEBUG D#1710 => &MEM[(const struct _Rb_tree &)D#2681]._M_impl._M_key_compare
  # DEBUG D#1709 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1709
  # DEBUG __comp => D#1710
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG D.97154 => NULL
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_node_count = 0;
  # DEBUG this => D#1709
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&setlist]._M_header;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&setlist]._M_header;
  _643 = MEM[(struct _Rb_tree_node_base * *)_90 + 16B];
  # DEBUG D#272 => D#2681
  # DEBUG this => D#272
  if (_643 != 0B)
    goto <bb 32>;
  else
    goto <bb 39>;

  <bb 32>:
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG D#273 => D#2681
  # DEBUG this => D#273
  # DEBUG this => &setlist._M_t
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => &setlist._M_t
  __an._M_t = &setlist._M_t;
  __x_645 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (&setlist._M_t, _643, &MEM[(struct _Rb_tree *)&setlist]._M_impl._M_header, &__an);
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)&setlist + 16] = __x_645;
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => __x_645

  <bb 33>:
  # __x_646 = PHI <__x_645(32), __x_647(34)>
  # DEBUG __x => __x_646
  __x_647 = __x_646->_M_left;
  if (__x_647 == 0B)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:
  goto <bb 33>;

  <bb 35>:
  # __x_877 = PHI <__x_646(33)>
  MEM[(struct _Rb_tree_node_base * &)&setlist + 24] = __x_877;
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => __x_645

  <bb 36>:
  # __x_648 = PHI <__x_645(35), __x_649(37)>
  # DEBUG __x => __x_648
  __x_649 = __x_648->_M_right;
  if (__x_649 == 0B)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  goto <bb 36>;

  <bb 38>:
  # __x_876 = PHI <__x_648(36)>
  MEM[(struct _Rb_tree_node_base * &)&setlist + 32] = __x_876;
  _650 = MEM[(const struct _Rb_tree &)_90]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&setlist]._M_impl._M_node_count = _650;

  <bb 39>:
  # prephitmp_872 = PHI <__x_877(38), &MEM[(struct _Rb_tree_impl *)&setlist]._M_header(31)>
  # prephitmp_871 = PHI <_650(38), 0(31)>
  # prephitmp_870 = PHI <__x_645(38), 0B(31)>
  # DEBUG elig => 0
  # DEBUG cred => 0
  # DEBUG reserved => 0
  _92 = this_57(D)->_noq;
  if (_92 != 0)
    goto <bb 40>;
  else
    goto <bb 42>;

  <bb 40>:
  # DEBUG this => &setlist
  # DEBUG D#164 => &setlist._M_t
  # DEBUG D#163 => D#164
  # DEBUG this => D#163
  if (prephitmp_871 != 1)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  __assert_fail ("!_noq || (setlist.size() == 1)", "routers/iq_router.cpp", 602, &__PRETTY_FUNCTION__);

  <bb 42>:
  # DEBUG this => &setlist
  # DEBUG D#275 => &setlist._M_t
  # DEBUG D#2683 => MEM[(struct _Rb_tree_node_base * *)&setlist + 24B]
  # DEBUG D#274 => D#275
  # DEBUG this => D#274
  # DEBUG this => NULL
  # DEBUG __x => D#2683
  # DEBUG iset$_M_node => D#2683
  # DEBUG iset$_M_node => D#2683
  # DEBUG reserved => 0
  # DEBUG cred => 0
  # DEBUG elig => 0
  # DEBUG watched => watched_1
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.64905
  if (&MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header != prephitmp_872)
    goto <bb 43>;
  else
    goto <bb 223>;

  <bb 43>:
  # DEBUG this => &iset
  # DEBUG this => D#2683
  # DEBUG D#1715 => &MEM[(const struct _Rb_tree_node *)D#2683]._M_value_field
  # DEBUG __r => D#1715
  out_port_865 = MEM[(const struct sSetElement *)prephitmp_872 + 32B].output_port;
  # DEBUG out_port => out_port_865
  if (out_port_865 < 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  __assert_fail ("(out_port >= 0) && (out_port < _outputs)", "routers/iq_router.cpp", 609, &__PRETTY_FUNCTION__);

  <bb 45>:
  _844 = this_57(D)->D.51790._outputs;
  if (_844 <= out_port_865)
    goto <bb 44>;
  else
    goto <bb 46>;

  <bb 46>:
  _433 = _68 * 24;
  _431 = _335 * 4;
  goto <bb 50>;

  <bb 47>:
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_463
  # DEBUG D#1715 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_463]._M_value_field
  # DEBUG __r => D#1715
  out_port_96 = MEM[(const struct sSetElement *)iset$_M_node_463 + 32B].output_port;
  # DEBUG out_port => out_port_96
  if (out_port_96 < 0)
    goto <bb 44>;
  else
    goto <bb 48>;

  <bb 48>:
  _97 = this_57(D)->D.51790._outputs;
  if (out_port_96 >= _97)
    goto <bb 44>;
  else
    goto <bb 49>;

  <bb 49>:
  pretmp_720 = this_57(D)->_noq;

  <bb 50>:
  # watched_705 = PHI <watched_1(46), watched_887(49)>
  # elig_836 = PHI <0(46), elig_885(49)>
  # cred_237 = PHI <0(46), cred_883(49)>
  # reserved_35 = PHI <0(46), reserved_881(49)>
  # out_port_822 = PHI <out_port_865(46), out_port_96(49)>
  # iset$_M_node_861 = PHI <prephitmp_872(46), iset$_M_node_463(49)>
  # prephitmp_828 = PHI <_92(46), pretmp_720(49)>
  # DEBUG iset$_M_node => iset$_M_node_861
  # DEBUG reserved => reserved_35
  # DEBUG cred => cred_237
  # DEBUG elig => elig_836
  # DEBUG watched => watched_705
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.64905
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_861
  # DEBUG D#1715 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_861]._M_value_field
  # DEBUG __r => D#1715
  # DEBUG out_port => out_port_822
  _98 = (long unsigned int) out_port_822;
  # DEBUG D#1716 => &this_57(D)->_next_buf
  _415 = MEM[(struct BufferState * * *)this_57(D) + 904B];
  # DEBUG D#54 => D#1716
  # DEBUG __n => _98
  # DEBUG this => D#54
  _61 = _98 * 8;
  _60 = _415 + _61;
  dest_buf_100 = *_60;
  # DEBUG dest_buf => dest_buf_100
  if (prephitmp_828 != 0)
    goto <bb 51>;
  else
    goto <bb 331>;

  <bb 51>:
  # DEBUG D#1717 => &this_57(D)->_noq_next_output_port
  _428 = MEM[(struct vector * *)this_57(D) + 1152B];
  # DEBUG D#70 => D#1717
  # DEBUG __n => _68
  # DEBUG this => D#70
  _434 = _428 + _433;
  _417 = MEM[(int * *)_434];
  # DEBUG __n => _335
  # DEBUG this => D#55
  _432 = _417 + _431;
  _104 = *_432;
  if (_104 >= 0)
    goto <bb 330>;
  else
    goto <bb 331>;

  <bb 52>:
  __assert_fail ("!_routing_delay", "routers/iq_router.cpp", 617, &__PRETTY_FUNCTION__);

  <bb 53>:
  # DEBUG D#1718 => &this_57(D)->_noq_next_vc_start
  _429 = MEM[(struct vector * *)this_57(D) + 1176B];
  # DEBUG D#70 => D#1718
  # DEBUG __n => _68
  # DEBUG this => D#70
  _440 = _429 + _433;
  _418 = MEM[(int * *)_440];
  # DEBUG __n => _335
  # DEBUG this => D#55
  _438 = _418 + _431;
  out_vc_107 = *_438;
  # DEBUG vc_start => out_vc_107
  # DEBUG D#1719 => &this_57(D)->_noq_next_vc_end
  _430 = MEM[(struct vector * *)this_57(D) + 1200B];
  # DEBUG D#70 => D#1719
  # DEBUG __n => _68
  # DEBUG this => D#70
  _436 = _430 + _433;
  _419 = MEM[(int * *)_436];
  # DEBUG __n => _335
  # DEBUG this => D#55
  _435 = _419 + _431;
  vc_end_109 = *_435;
  # DEBUG vc_end => vc_end_109

  <bb 54>:
  # out_vc_15 = PHI <out_vc_107(53), out_vc_111(331)>
  # vc_end_16 = PHI <vc_end_109(53), vc_end_112(331)>
  # DEBUG vc_end => vc_end_16
  # DEBUG vc_start => out_vc_15
  if (out_vc_15 < 0)
    goto <bb 56>;
  else
    goto <bb 55>;

  <bb 55>:
  _113 = this_57(D)->_vcs;
  if (out_vc_15 >= _113)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  __assert_fail ("vc_start >= 0 && vc_start < _vcs", "routers/iq_router.cpp", 624, &__PRETTY_FUNCTION__);

  <bb 57>:
  _669 = vc_end_16 >= _113;
  _756 = vc_end_16 < 0;
  _718 = _669 | _756;
  if (_718 != 0)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  __assert_fail ("vc_end >= 0 && vc_end < _vcs", "routers/iq_router.cpp", 625, &__PRETTY_FUNCTION__);

  <bb 59>:
  if (out_vc_15 > vc_end_16)
    goto <bb 60>;
  else
    goto <bb 65>;

  <bb 60>:
  __assert_fail ("vc_end >= vc_start", "routers/iq_router.cpp", 626, &__PRETTY_FUNCTION__);

  <bb 61>:
  # DEBUG out_vc => out_vc_197
  # DEBUG reserved => reserved_14
  # DEBUG cred => cred_11
  # DEBUG elig => elig_8
  # DEBUG watched => watched_5
  if (out_vc_197 < 0)
    goto <bb 64>;
  else
    goto <bb 62>;

  <bb 62>:
  # DEBUG out_vc => out_vc_197
  # DEBUG reserved => reserved_14
  # DEBUG cred => cred_11
  # DEBUG elig => elig_8
  # DEBUG watched => watched_5
  _114 = this_57(D)->_vcs;
  if (_114 <= out_vc_197)
    goto <bb 64>;
  else
    goto <bb 63>;

  <bb 63>:
  goto <bb 66>;

  <bb 64>:
  __assert_fail ("(out_vc >= 0) && (out_vc < _vcs)", "routers/iq_router.cpp", 629, &__PRETTY_FUNCTION__);

  <bb 65>:

  <bb 66>:
  # watched_679 = PHI <watched_705(65), watched_5(63)>
  # elig_239 = PHI <elig_836(65), elig_8(63)>
  # cred_50 = PHI <cred_237(65), cred_11(63)>
  # reserved_21 = PHI <reserved_35(65), reserved_14(63)>
  # out_vc_19 = PHI <out_vc_15(65), out_vc_197(63)>
  # _817 = PHI <_113(65), _114(63)>
  # DEBUG out_vc => out_vc_19
  # DEBUG reserved => reserved_21
  # DEBUG cred => cred_50
  # DEBUG elig => elig_239
  # DEBUG watched => watched_679
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_861
  # DEBUG D#1722 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_861]._M_value_field
  # DEBUG __r => D#1722
  in_priority_115 = MEM[(const struct sSetElement *)iset$_M_node_861 + 32B].pri;
  # DEBUG in_priority => in_priority_115
  _116 = this_57(D)->_vc_prioritize_empty;
  if (_116 != 0)
    goto <bb 67>;
  else
    goto <bb 72>;

  <bb 67>:
  # DEBUG this => dest_buf_100
  # DEBUG vc => out_vc_19
  _547 = dest_buf_100->_vcs;
  if (out_vc_19 >= _547)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "./buffer_state.hpp", 208, &__PRETTY_FUNCTION__);

  <bb 69>:
  _651 = (long unsigned int) out_vc_19;
  # DEBUG D#49 => &dest_buf_100->_vc_occupancy
  _652 = MEM[(int * *)dest_buf_100 + 112B];
  # DEBUG D#48 => D#49
  # DEBUG __n => _651
  # DEBUG this => D#48
  _653 = _651 * 4;
  _654 = _652 + _653;
  _655 = *_654;
  if (_655 == 0)
    goto <bb 338>;
  else
    goto <bb 332>;

  <bb 70>:
  __assert_fail ("in_priority >= 0", "routers/iq_router.cpp", 633, &__PRETTY_FUNCTION__);

  <bb 71>:
  in_priority_119 = in_priority_115 + -2147483648;
  # DEBUG in_priority => in_priority_119
  goto <bb 338>;

  <bb 72>:
  # DEBUG in_priority => in_priority_115
  # DEBUG this => dest_buf_100
  # DEBUG vc => out_vc_19
  _657 = dest_buf_100->_vcs;
  if (out_vc_19 >= _657)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  __assert_fail ("( vc >= 0 ) && ( vc < _vcs )", "./buffer_state.hpp", 212, &__PRETTY_FUNCTION__);

  <bb 74>:
  pretmp_899 = (long unsigned int) out_vc_19;
  pretmp_901 = pretmp_899 * 4;

  <bb 75>:
  # in_priority_852 = PHI <in_priority_115(74), in_priority_841(338)>
  # prephitmp_902 = PHI <pretmp_901(74), _653(338)>
  # DEBUG in_priority => in_priority_852
  # DEBUG this => dest_buf_100
  # DEBUG vc => out_vc_19
  # DEBUG D#2682 => (long unsigned int) out_vc_19
  # DEBUG D#51 => &dest_buf_100->_in_use_by
  _659 = MEM[(int * *)dest_buf_100 + 152B];
  # DEBUG D#48 => D#51
  # DEBUG __n => D#2682
  # DEBUG this => D#48
  _661 = _659 + prephitmp_902;
  _662 = *_661;
  if (_662 < 0)
    goto <bb 129>;
  else
    goto <bb 76>;

  <bb 76>:
  _123 = MEM[(const struct Flit *)iftmp.304_165].watch;
  if (_123 != 0)
    goto <bb 77>;
  else
    goto <bb 219>;

  <bb 77>:
  # DEBUG this => dest_buf_100
  # DEBUG vc => out_vc_19
  # DEBUG D#50 => &dest_buf_100->_in_use_by
  # DEBUG D#48 => D#50
  # DEBUG __n => D#2682
  # DEBUG this => D#48
  # DEBUG use_input_and_vc => NULL
  use_input_126 = _662 / _817;
  # DEBUG use_input => use_input_126
  use_vc_127 = _662 % _817;
  # DEBUG use_vc => use_vc_127
  # DEBUG D#1723 => &this_57(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1723
  # DEBUG D#1724 => &MEM[(const struct Module *)this_57(D)]._fullname
  _129 = GetSimTime ();

  <bb 78>:
  gWatchOut.322_130 = gWatchOut;
  _132 = std::basic_ostream<char>::operator<< (gWatchOut.322_130, _129);
  goto <bb 80>;

<L226>:
  goto <bb 329> (<L217>);

  <bb 80>:
  # DEBUG __out => _132
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_132, " | ", 3);
  goto <bb 82>;

<L227>:
  goto <bb 329> (<L217>);

  <bb 82>:
  # DEBUG __os => _132
  # DEBUG __str => D#1724
  _133 = MEM[(long unsigned int *)this_57(D) + 48B];
  # DEBUG D#3 => D#1724
  # DEBUG this => D#3
  _441 = (long int) _133;
  # DEBUG this => D#1724
  _442 = MEM[(char * *)this_57(D) + 40B];
  # DEBUG D#1 => D#1724
  # DEBUG this => D#1
  _443 = std::__ostream_insert<char, std::char_traits<char> > (_132, _442, _441);
  goto <bb 84>;

<L228>:
  goto <bb 329> (<L217>);

  <bb 84>:
  # DEBUG __out => _443
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_443, " | ", 3);
  goto <bb 86>;

<L229>:
  goto <bb 329> (<L217>);

  <bb 86>:
  # DEBUG __out => _443
  # DEBUG __s => "  VC "
  # DEBUG __s => "  VC "
  std::__ostream_insert<char, std::char_traits<char> > (_443, "  VC ", 5);
  goto <bb 88>;

<L230>:
  goto <bb 329> (<L217>);

  <bb 88>:
  _135 = std::basic_ostream<char>::operator<< (_443, out_vc_19);
  goto <bb 90>;

<L231>:
  goto <bb 329> (<L217>);

  <bb 90>:
  # DEBUG __out => _135
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_135, " at output ", 11);
  goto <bb 92>;

<L232>:
  goto <bb 329> (<L217>);

  <bb 92>:
  _137 = std::basic_ostream<char>::operator<< (_135, out_port_822);
  goto <bb 94>;

<L233>:
  goto <bb 329> (<L217>);

  <bb 94>:
  # DEBUG __out => _137
  # DEBUG __s => " is in use by VC "
  # DEBUG __s => " is in use by VC "
  std::__ostream_insert<char, std::char_traits<char> > (_137, " is in use by VC ", 17);
  goto <bb 96>;

<L234>:
  goto <bb 329> (<L217>);

  <bb 96>:
  _139 = std::basic_ostream<char>::operator<< (_137, use_vc_127);
  goto <bb 98>;

<L235>:
  goto <bb 329> (<L217>);

  <bb 98>:
  # DEBUG __out => _139
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_139, " at input ", 10);
  goto <bb 100>;

<L236>:
  goto <bb 329> (<L217>);

  <bb 100>:
  std::basic_ostream<char>::operator<< (_139, use_input_126);
  goto <bb 102>;

<L237>:
  goto <bb 329> (<L217>);

  <bb 102>:
  _142 = (long unsigned int) use_input_126;
  # DEBUG D#1725 => &this_57(D)->_buf
  _412 = MEM[(struct Buffer * * *)this_57(D) + 880B];
  # DEBUG D#53 => D#1725
  # DEBUG __n => _142
  # DEBUG this => D#53
  _452 = _142 * 8;
  _453 = _412 + _452;
  _143 = *_453;
  # DEBUG this => _143
  # DEBUG vc => use_vc_127
  _140 = (long unsigned int) use_vc_127;
  # DEBUG D#186 => &MEM[(const struct Buffer *)_143]._vc
  _444 = MEM[(struct VC * * *)_143 + 104B];
  # DEBUG D#42 => D#186
  # DEBUG __n => _140
  # DEBUG this => D#42
  _445 = _140 * 8;
  _446 = _444 + _445;
  _447 = *_446;
  # DEBUG this => _447
  # DEBUG D#184 => &MEM[(const struct VC *)_447]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  _448 = MEM[(struct Flit * * *)_447 + 144B];
  # DEBUG D#91 => D#94
  _449 = MEM[(struct Flit * * *)_447 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_448 == _449)
    goto <bb 111>;
  else
    goto <bb 103>;

  <bb 103>:
  # DEBUG D#185 => &MEM[(const struct VC *)_447]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_450 = MEM[(struct Flit * const &)_449];
  # DEBUG cf => iftmp.304_450
  if (iftmp.304_450 != 0B)
    goto <bb 104>;
  else
    goto <bb 111>;

  <bb 104>:
  _144 = iftmp.304_450->id;
  gWatchOut.322_145 = gWatchOut;
  # DEBUG __out => gWatchOut.322_145
  # DEBUG __s => " (front flit: "
  # DEBUG __s => " (front flit: "
  std::__ostream_insert<char, std::char_traits<char> > (gWatchOut.322_145, " (front flit: ", 14);
  goto <bb 106>;

<L238>:
  goto <bb 329> (<L217>);

  <bb 106>:
  _147 = std::basic_ostream<char>::operator<< (gWatchOut.322_145, _144);
  goto <bb 108>;

<L239>:
  goto <bb 329> (<L217>);

  <bb 108>:
  # DEBUG __out => _147
  # DEBUG __s => ")"
  # DEBUG __s => ")"
  std::__ostream_insert<char, std::char_traits<char> > (_147, ")", 1);
  goto <bb 110>;

<L240>:
  goto <bb 329> (<L217>);

  <bb 110>:
  gWatchOut.322_151 = gWatchOut;
  # DEBUG __out => gWatchOut.322_151
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (gWatchOut.322_151, ".", 1);
  goto <bb 114>;

  <bb 111>:
  # DEBUG cf => NULL
  gWatchOut.322_149 = gWatchOut;
  # DEBUG __out => gWatchOut.322_149
  # DEBUG __s => " (empty)"
  # DEBUG __s => " (empty)"
  std::__ostream_insert<char, std::char_traits<char> > (gWatchOut.322_149, " (empty)", 8);
  goto <bb 110>;

<L241>:
  goto <bb 329> (<L217>);

<L242>:
  goto <bb 329> (<L217>);

  <bb 114>:
  # DEBUG this => gWatchOut.322_151
  # DEBUG __pf => endl
  # DEBUG __os => gWatchOut.322_151
  _150 = MEM[(struct basic_ostream *)gWatchOut.322_151]._vptr.basic_ostream;
  _673 = MEM[(long int *)_150 + -24B];
  _674 = (sizetype) _673;
  _675 = gWatchOut.322_151 + _674;
  # DEBUG this => _675
  # DEBUG __c => 10
  _558 = MEM[(const struct basic_ios *)_675]._M_ctype;
  # DEBUG __f => _558
  if (_558 == 0B)
    goto <bb 115>;
  else
    goto <bb 117>;

  <bb 115>:
  std::__throw_bad_cast ();

<L243>:
  goto <bb 329> (<L217>);

  <bb 117>:
  # DEBUG this => _558
  # DEBUG __c => 10
  _680 = MEM[(const struct ctype *)_558]._M_widen_ok;
  if (_680 != 0)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  _683 = MEM[(const struct ctype *)_558]._M_widen[10];
  pretmp_918 = (int) _683;
  goto <bb 125>;

  <bb 119>:
  # DEBUG this => _558
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_558);
  goto <bb 121>;

<L244>:
  goto <bb 329> (<L217>);

  <bb 121>:
  _688 = MEM[(const struct ctype *)_558].D.24721._vptr.facet;
  _689 = MEM[(int (*__vtbl_ptr_type) () *)_688 + 48B];
  PROF_693 = [obj_type_ref] OBJ_TYPE_REF(_689;(const struct ctype)_558->6);
  if (PROF_693 == do_widen)
    goto <bb 125>;
  else
    goto <bb 122>;

  <bb 122>:
  _695 = OBJ_TYPE_REF(_689;(const struct ctype)_558->6) (_558, 10);
  goto <bb 124>;

<L245>:
  goto <bb 329> (<L217>);

  <bb 124>:
  pretmp_919 = (int) _695;

  <bb 125>:
  # prephitmp_920 = PHI <pretmp_918(118), 10(121), pretmp_919(124)>
  _678 = std::basic_ostream<char>::put (gWatchOut.322_151, prephitmp_920);
  goto <bb 127>;

<L246>:
  goto <bb 329> (<L217>);

  <bb 127>:
  # DEBUG __os => _678
  std::basic_ostream<char>::flush (_678);
  goto <bb 219>;

<L247>:
  goto <bb 329> (<L217>);

  <bb 129>:
  # DEBUG elig => 1
  _152 = this_57(D)->_vc_busy_when_full;
  if (_152 != 0)
    goto <bb 130>;
  else
    goto <bb 334>;

  <bb 130>:
  _409 = MEM[(struct BufferPolicy * *)dest_buf_100 + 144B];
  # DEBUG D#32 => dest_buf_100
  # DEBUG vc => out_vc_19
  # DEBUG this => D#32
  _454 = _409->D.55980._vptr.Module;
  _455 = MEM[(int (*__vtbl_ptr_type) () *)_454 + 56B];
  _456 = OBJ_TYPE_REF(_455;(const struct BufferPolicy)_409->7) (_409, out_vc_19);
  goto <bb 132>;

<L248>:
  goto <bb 329> (<L217>);

  <bb 132>:
  if (_456 != 0)
    goto <bb 333>;
  else
    goto <bb 334>;

  <bb 133>:
  # DEBUG D#1726 => &this_57(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1726
  # DEBUG D#1727 => &MEM[(const struct Module *)this_57(D)]._fullname
  _156 = GetSimTime ();
  goto <bb 135>;

<L249>:
  goto <bb 329> (<L217>);

  <bb 135>:
  gWatchOut.322_157 = gWatchOut;
  _159 = std::basic_ostream<char>::operator<< (gWatchOut.322_157, _156);
  goto <bb 137>;

<L250>:
  goto <bb 329> (<L217>);

  <bb 137>:
  # DEBUG __out => _159
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_159, " | ", 3);
  goto <bb 139>;

<L251>:
  goto <bb 329> (<L217>);

  <bb 139>:
  # DEBUG __os => _159
  # DEBUG __str => D#1727
  _160 = MEM[(long unsigned int *)this_57(D) + 48B];
  # DEBUG D#3 => D#1727
  # DEBUG this => D#3
  _457 = (long int) _160;
  # DEBUG this => D#1727
  _458 = MEM[(char * *)this_57(D) + 40B];
  # DEBUG D#1 => D#1727
  # DEBUG this => D#1
  _459 = std::__ostream_insert<char, std::char_traits<char> > (_159, _458, _457);
  goto <bb 141>;

<L252>:
  goto <bb 329> (<L217>);

  <bb 141>:
  # DEBUG __out => _459
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_459, " | ", 3);
  goto <bb 143>;

<L253>:
  goto <bb 329> (<L217>);

  <bb 143>:
  # DEBUG __out => _459
  # DEBUG __s => "  VC "
  # DEBUG __s => "  VC "
  std::__ostream_insert<char, std::char_traits<char> > (_459, "  VC ", 5);
  goto <bb 145>;

<L254>:
  goto <bb 329> (<L217>);

  <bb 145>:
  _162 = std::basic_ostream<char>::operator<< (_459, out_vc_19);
  goto <bb 147>;

<L255>:
  goto <bb 329> (<L217>);

  <bb 147>:
  # DEBUG __out => _162
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_162, " at output ", 11);
  goto <bb 149>;

<L256>:
  goto <bb 329> (<L217>);

  <bb 149>:
  _164 = std::basic_ostream<char>::operator<< (_162, out_port_822);
  goto <bb 151>;

<L257>:
  goto <bb 329> (<L217>);

  <bb 151>:
  # DEBUG __out => _164
  # DEBUG __s => " is full."
  # DEBUG __s => " is full."
  std::__ostream_insert<char, std::char_traits<char> > (_164, " is full.", 9);
  goto <bb 153>;

<L258>:
  goto <bb 329> (<L217>);

  <bb 153>:
  # DEBUG this => _164
  # DEBUG __pf => endl
  # DEBUG __os => _164
  _698 = _164->_vptr.basic_ostream;
  _699 = MEM[(long int *)_698 + -24B];
  _700 = (sizetype) _699;
  _701 = _164 + _700;
  # DEBUG this => _701
  # DEBUG __c => 10
  _566 = MEM[(const struct basic_ios *)_701]._M_ctype;
  # DEBUG __f => _566
  if (_566 == 0B)
    goto <bb 154>;
  else
    goto <bb 156>;

  <bb 154>:
  std::__throw_bad_cast ();

<L259>:
  goto <bb 329> (<L217>);

  <bb 156>:
  # DEBUG this => _566
  # DEBUG __c => 10
  _706 = MEM[(const struct ctype *)_566]._M_widen_ok;
  if (_706 != 0)
    goto <bb 157>;
  else
    goto <bb 158>;

  <bb 157>:
  _709 = MEM[(const struct ctype *)_566]._M_widen[10];
  pretmp_915 = (int) _709;
  goto <bb 164>;

  <bb 158>:
  # DEBUG this => _566
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_566);
  goto <bb 160>;

<L260>:
  goto <bb 329> (<L217>);

  <bb 160>:
  _714 = MEM[(const struct ctype *)_566].D.24721._vptr.facet;
  _715 = MEM[(int (*__vtbl_ptr_type) () *)_714 + 48B];
  PROF_719 = [obj_type_ref] OBJ_TYPE_REF(_715;(const struct ctype)_566->6);
  if (PROF_719 == do_widen)
    goto <bb 164>;
  else
    goto <bb 161>;

  <bb 161>:
  _721 = OBJ_TYPE_REF(_715;(const struct ctype)_566->6) (_566, 10);
  goto <bb 163>;

<L261>:
  goto <bb 329> (<L217>);

  <bb 163>:
  pretmp_916 = (int) _721;

  <bb 164>:
  # prephitmp_917 = PHI <pretmp_915(157), 10(160), pretmp_916(163)>
  _704 = std::basic_ostream<char>::put (_164, prephitmp_917);
  goto <bb 166>;

<L262>:
  goto <bb 329> (<L217>);

  <bb 166>:
  # DEBUG __os => _704
  std::basic_ostream<char>::flush (_704);
  goto <bb 168>;

<L263>:
  goto <bb 329> (<L217>);

  <bb 168>:
  _405 = MEM[(int *)dest_buf_100 + 100B];
  # DEBUG D#27 => dest_buf_100
  _406 = MEM[(int *)dest_buf_100 + 104B];
  # DEBUG D#27 => dest_buf_100
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (_405 < _406)
    goto <bb 169>;
  else
    goto <bb 170>;

  <bb 169>:
  # DEBUG D#28 => _405
  # DEBUG D#29 => _406
  # DEBUG D#30 => D#29
  # DEBUG ISRA.586 => D#30
  # DEBUG D#31 => D#28
  # DEBUG ISRA.585 => D#31
  __assert_fail ("_occupancy <= _size", "./buffer_state.hpp", 195, &__PRETTY_FUNCTION__);

  <bb 170>:
  _166 = _405 != _406;
  reserved_167 = reserved_21 | _166;
  # DEBUG reserved => reserved_167
  goto <bb 219>;

  <bb 171>:
  # DEBUG D#1728 => &this_57(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1728
  # DEBUG D#1729 => &MEM[(const struct Module *)this_57(D)]._fullname
  _170 = GetSimTime ();
  goto <bb 173>;

<L264>:
  goto <bb 329> (<L217>);

  <bb 173>:
  gWatchOut.322_171 = gWatchOut;
  _173 = std::basic_ostream<char>::operator<< (gWatchOut.322_171, _170);
  goto <bb 175>;

<L265>:
  goto <bb 329> (<L217>);

  <bb 175>:
  # DEBUG __out => _173
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_173, " | ", 3);
  goto <bb 177>;

<L266>:
  goto <bb 329> (<L217>);

  <bb 177>:
  # DEBUG __os => _173
  # DEBUG __str => D#1729
  _174 = MEM[(long unsigned int *)this_57(D) + 48B];
  # DEBUG D#3 => D#1729
  # DEBUG this => D#3
  _460 = (long int) _174;
  # DEBUG this => D#1729
  _461 = MEM[(char * *)this_57(D) + 40B];
  # DEBUG D#1 => D#1729
  # DEBUG this => D#1
  _462 = std::__ostream_insert<char, std::char_traits<char> > (_173, _461, _460);
  goto <bb 179>;

<L267>:
  goto <bb 329> (<L217>);

  <bb 179>:
  # DEBUG __out => _462
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_462, " | ", 3);
  goto <bb 181>;

<L268>:
  goto <bb 329> (<L217>);

  <bb 181>:
  # DEBUG __out => _462
  # DEBUG __s => "  Requesting VC "
  # DEBUG __s => "  Requesting VC "
  std::__ostream_insert<char, std::char_traits<char> > (_462, "  Requesting VC ", 16);
  goto <bb 183>;

<L269>:
  goto <bb 329> (<L217>);

  <bb 183>:
  _176 = std::basic_ostream<char>::operator<< (_462, out_vc_19);
  goto <bb 185>;

<L270>:
  goto <bb 329> (<L217>);

  <bb 185>:
  # DEBUG __out => _176
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_176, " at output ", 11);
  goto <bb 187>;

<L271>:
  goto <bb 329> (<L217>);

  <bb 187>:
  _178 = std::basic_ostream<char>::operator<< (_176, out_port_822);
  goto <bb 189>;

<L272>:
  goto <bb 329> (<L217>);

  <bb 189>:
  # DEBUG __out => _178
  # DEBUG __s => " (in_pri: "
  # DEBUG __s => " (in_pri: "
  std::__ostream_insert<char, std::char_traits<char> > (_178, " (in_pri: ", 10);
  goto <bb 191>;

<L273>:
  goto <bb 329> (<L217>);

  <bb 191>:
  _180 = std::basic_ostream<char>::operator<< (_178, in_priority_852);
  goto <bb 193>;

<L274>:
  goto <bb 329> (<L217>);

  <bb 193>:
  # DEBUG __out => _180
  # DEBUG __s => ", out_pri: "
  # DEBUG __s => ", out_pri: "
  std::__ostream_insert<char, std::char_traits<char> > (_180, ", out_pri: ", 11);
  goto <bb 195>;

<L275>:
  goto <bb 329> (<L217>);

  <bb 195>:
  _182 = std::basic_ostream<char>::operator<< (_180, _88);
  goto <bb 197>;

<L276>:
  goto <bb 329> (<L217>);

  <bb 197>:
  # DEBUG __out => _182
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_182, ").", 2);
  goto <bb 199>;

<L277>:
  goto <bb 329> (<L217>);

  <bb 199>:
  # DEBUG this => _182
  # DEBUG __pf => endl
  # DEBUG __os => _182
  _724 = _182->_vptr.basic_ostream;
  _725 = MEM[(long int *)_724 + -24B];
  _726 = (sizetype) _725;
  _727 = _182 + _726;
  # DEBUG this => _727
  # DEBUG __c => 10
  _575 = MEM[(const struct basic_ios *)_727]._M_ctype;
  # DEBUG __f => _575
  if (_575 == 0B)
    goto <bb 200>;
  else
    goto <bb 202>;

  <bb 200>:
  std::__throw_bad_cast ();

<L278>:
  goto <bb 329> (<L217>);

  <bb 202>:
  # DEBUG this => _575
  # DEBUG __c => 10
  _732 = MEM[(const struct ctype *)_575]._M_widen_ok;
  if (_732 != 0)
    goto <bb 203>;
  else
    goto <bb 204>;

  <bb 203>:
  _735 = MEM[(const struct ctype *)_575]._M_widen[10];
  pretmp_909 = (int) _735;
  goto <bb 210>;

  <bb 204>:
  # DEBUG this => _575
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_575);
  goto <bb 206>;

<L279>:
  goto <bb 329> (<L217>);

  <bb 206>:
  _740 = MEM[(const struct ctype *)_575].D.24721._vptr.facet;
  _741 = MEM[(int (*__vtbl_ptr_type) () *)_740 + 48B];
  PROF_745 = [obj_type_ref] OBJ_TYPE_REF(_741;(const struct ctype)_575->6);
  if (PROF_745 == do_widen)
    goto <bb 210>;
  else
    goto <bb 207>;

  <bb 207>:
  _747 = OBJ_TYPE_REF(_741;(const struct ctype)_575->6) (_575, 10);
  goto <bb 209>;

<L280>:
  goto <bb 329> (<L217>);

  <bb 209>:
  pretmp_910 = (int) _747;

  <bb 210>:
  # prephitmp_911 = PHI <pretmp_909(203), 10(206), pretmp_910(209)>
  _730 = std::basic_ostream<char>::put (_182, prephitmp_911);
  goto <bb 212>;

<L281>:
  goto <bb 329> (<L217>);

  <bb 212>:
  # DEBUG __os => _730
  std::basic_ostream<char>::flush (_730);
  goto <bb 214>;

<L282>:
  goto <bb 329> (<L217>);

  <bb 214>:
  # watched_4 = PHI <watched_679(334), 1(212)>
  # DEBUG watched => watched_4
  _183 = this_57(D)->_vc_shuffle_requests;
  if (_183 != 0)
    goto <bb 215>;
  else
    goto <bb 216>;

  <bb 215>:
  _184 = this_57(D)->D.51790._inputs;
  _185 = vc_65 * _184;
  iftmp.331_186 = input_63 + _185;
  pretmp_907 = this_57(D)->_vcs;
  goto <bb 217>;

  <bb 216>:
  _187 = this_57(D)->_vcs;
  _188 = input_63 * _187;
  iftmp.331_189 = vc_65 + _188;

  <bb 217>:
  # iftmp.331_22 = PHI <iftmp.331_186(215), iftmp.331_189(216)>
  # prephitmp_908 = PHI <pretmp_907(215), _187(216)>
  # DEBUG input_and_vc => iftmp.331_22
  _190 = this_57(D)->_vc_allocator;
  _191 = _190->D.58179._vptr.Module;
  _192 = MEM[(int (*__vtbl_ptr_type) () *)_191 + 48B];
  _194 = out_port_822 * prephitmp_908;
  _195 = out_vc_19 + _194;
  OBJ_TYPE_REF(_192;(struct Allocator)_190->6) (_190, iftmp.331_22, _195, 0, in_priority_852, _88);
  goto <bb 219>;

<L283>:
  goto <bb 329> (<L217>);

  <bb 219>:
  # watched_5 = PHI <watched_679(127), watched_679(170), watched_4(217), watched_679(76)>
  # elig_8 = PHI <elig_239(127), 1(170), 1(217), elig_239(76)>
  # cred_11 = PHI <cred_50(127), cred_50(170), 1(217), cred_50(76)>
  # reserved_14 = PHI <reserved_21(127), reserved_167(170), reserved_21(217), reserved_21(76)>
  # DEBUG reserved => reserved_14
  # DEBUG cred => cred_11
  # DEBUG elig => elig_8
  # DEBUG watched => watched_5
  out_vc_197 = out_vc_19 + 1;
  # DEBUG out_vc => out_vc_197
  # DEBUG out_vc => out_vc_197
  # DEBUG reserved => reserved_14
  # DEBUG cred => cred_11
  # DEBUG elig => elig_8
  # DEBUG watched => watched_5
  if (vc_end_16 < out_vc_197)
    goto <bb 220>;
  else
    goto <bb 61>;

  <bb 220>:
  # watched_887 = PHI <watched_5(219)>
  # elig_885 = PHI <elig_8(219)>
  # cred_883 = PHI <cred_11(219)>
  # reserved_881 = PHI <reserved_14(219)>
  # DEBUG this => &iset
  iset$_M_node_463 = std::_Rb_tree_increment (iset$_M_node_861);
  # DEBUG iset$_M_node => iset$_M_node_463
  # DEBUG iset$_M_node => iset$_M_node_463
  # DEBUG reserved => reserved_881
  # DEBUG cred => cred_883
  # DEBUG elig => elig_885
  # DEBUG watched => watched_887
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.64905
  if (&MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header != iset$_M_node_463)
    goto <bb 47>;
  else
    goto <bb 221>;

  <bb 221>:
  # watched_886 = PHI <watched_887(220)>
  # elig_884 = PHI <elig_885(220)>
  # cred_882 = PHI <cred_883(220)>
  # reserved_880 = PHI <reserved_881(220)>
  # DEBUG D#1749 => {CLOBBER}
  # DEBUG iset$_M_node => D#1749
  if (elig_884 != 0)
    goto <bb 224>;
  else
    goto <bb 222>;

  <bb 222>:
  pretmp_927 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];

  <bb 223>:
  # watched_849 = PHI <watched_886(222), watched_1(42)>
  # prephitmp_928 = PHI <pretmp_927(222), prephitmp_870(42)>
  # DEBUG D#1749 => {CLOBBER}
  # DEBUG iset$_M_node => D#1749
  _420 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_BUFFER_BUSY.332_205 = STALL_BUFFER_BUSY;
  _420->second.second = STALL_BUFFER_BUSY.332_205;
  goto <bb 230>;

  <bb 224>:
  _207 = this_57(D)->_vc_busy_when_full;
  if (cred_882 >= _207)
    goto <bb 225>;
  else
    goto <bb 226>;

  <bb 225>:
  pretmp_930 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];
  goto <bb 230>;

  <bb 226>:
  _421 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  if (reserved_880 != 0)
    goto <bb 227>;
  else
    goto <bb 228>;

  <bb 227>:
  iftmp.333_208 = STALL_BUFFER_RESERVED;
  goto <bb 229>;

  <bb 228>:
  iftmp.333_209 = STALL_BUFFER_FULL;

  <bb 229>:
  # iftmp.333_23 = PHI <iftmp.333_208(227), iftmp.333_209(228)>
  _421->second.second = iftmp.333_23;
  pretmp_929 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];

  <bb 230>:
  # watched_3 = PHI <watched_849(223), watched_886(229), watched_886(225)>
  # prephitmp_931 = PHI <prephitmp_928(223), pretmp_929(229), pretmp_930(225)>
  # DEBUG this => &setlist
  # DEBUG this => &setlist._M_t
  # DEBUG D#89 => &setlist._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&setlist._M_t, prephitmp_931);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  setlist ={v} {CLOBBER};
  # DEBUG this => &iter
  _464 = iter._M_cur;
  _465 = _464 + 16;
  iter._M_cur = _465;
  _466 = iter._M_last;
  if (_465 == _466)
    goto <bb 231>;
  else
    goto <bb 5>;

  <bb 231>:
  std::_Deque_iterator<std::pair<int, std::pair<std::pair<int, int>, int> >, std::pair<int, std::pair<std::pair<int, int>, int> >&, std::pair<int, std::pair<std::pair<int, int>, int> >*>::_ZNSt15_Deque_iteratorISt4pairIiS0_IS0_IiiEiEERS3_PS3_EppEv.part.104 (&iter);
  pretmp_642 = MEM[(struct pair * *)&iter];
  goto <bb 5>;

  <bb 232>:
  # watched_889 = PHI <watched_1(8)>
  setlist ={v} {CLOBBER};

  <bb 233>:
  # watched_875 = PHI <watched_888(7), watched_889(232)>
  iter ={v} {CLOBBER};
  if (watched_875 != 0)
    goto <bb 234>;
  else
    goto <bb 335>;

  <bb 234>:
  _224 = this_57(D)->_vc_allocator;
  # DEBUG D#1731 => &_224->D.58179
  # DEBUG this => D#1731
  _226 = GetSimTime ();
  gWatchOut.322_227 = gWatchOut;
  _229 = std::basic_ostream<char>::operator<< (gWatchOut.322_227, _226);
  # DEBUG __out => _229
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_229, " | ", 3);
  # DEBUG __os => _229
  # DEBUG __str => NULL
  _211 = MEM[(long unsigned int *)_224 + 48B];
  # DEBUG this => D#3
  _468 = (long int) _211;
  # DEBUG this => NULL
  _469 = MEM[(char * *)_224 + 40B];
  # DEBUG this => D#1
  _470 = std::__ostream_insert<char, std::char_traits<char> > (_229, _469, _468);
  std::operator<< <std::char_traits<char> > (_470, " | ");
  _231 = this_57(D)->_vc_allocator;
  _232 = _231->D.58179._vptr.Module;
  _233 = MEM[(int (*__vtbl_ptr_type) () *)_232 + 104B];
  gWatchOut.322_234 = gWatchOut;
  OBJ_TYPE_REF(_233;(const struct Allocator)_231->13) (_231, gWatchOut.322_234);
  _862 = this_57(D)->_vc_allocator;
  _845 = _862->D.58179._vptr.Module;
  _846 = MEM[(int (*__vtbl_ptr_type) () *)_845 + 64B];
  OBJ_TYPE_REF(_846;(struct Allocator)_862->8) (_862);
  _240 = this_57(D)->_vc_allocator;
  # DEBUG D#1732 => &_240->D.58179
  # DEBUG this => D#1732
  _242 = GetSimTime ();
  gWatchOut.322_243 = gWatchOut;
  _245 = std::basic_ostream<char>::operator<< (gWatchOut.322_243, _242);
  # DEBUG __out => _245
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_245, " | ", 3);
  # DEBUG __os => _245
  # DEBUG __str => NULL
  _471 = MEM[(long unsigned int *)_240 + 48B];
  # DEBUG this => D#3
  _472 = (long int) _471;
  # DEBUG this => NULL
  _473 = MEM[(char * *)_240 + 40B];
  # DEBUG this => D#1
  _474 = std::__ostream_insert<char, std::char_traits<char> > (_245, _473, _472);
  std::operator<< <std::char_traits<char> > (_474, " | ");
  gWatchOut.322_247 = gWatchOut;
  _248 = this_57(D)->_vc_allocator;
  Allocator::PrintGrants (_248, gWatchOut.322_247);

  <bb 235>:
  # DEBUG D#1733 => &this_57(D)->_vc_alloc_vcs
  # DEBUG this => D#1733
  # DEBUG D#67 => &D#1733->D.45936._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#67
  _475 = MEM[(const struct iterator &)this_57(D) + 528]._M_cur;
  iter._M_cur = _475;
  _476 = MEM[(const struct iterator &)this_57(D) + 528]._M_first;
  iter._M_first = _476;
  _477 = MEM[(const struct iterator &)this_57(D) + 528]._M_last;
  iter._M_last = _477;
  _478 = MEM[(const struct iterator &)this_57(D) + 528]._M_node;
  iter._M_node = _478;

  <bb 236>:
  # prephitmp_710 = PHI <_475(235), pretmp_782(276)>

  <bb 237>:
  # prephitmp_786 = PHI <prephitmp_710(236), _499(275)>
  # DEBUG D#1739 => &this_57(D)->_vc_alloc_vcs
  # DEBUG this => D#1739
  # DEBUG D#68 => &D#1739->D.45936._M_impl._M_finish
  # DEBUG this => &D.64921
  # DEBUG __x => D#68
  _479 = MEM[(const struct iterator &)this_57(D) + 560]._M_cur;
  # DEBUG D#1755 => MEM[(const struct iterator &)this_57(D) + 560]._M_first
  # DEBUG D.109431 => D#1755
  # DEBUG D#1754 => MEM[(const struct iterator &)this_57(D) + 560]._M_last
  # DEBUG D.109432 => D#1754
  # DEBUG D#1753 => MEM[(const struct iterator &)this_57(D) + 560]._M_node
  # DEBUG D.109433 => D#1753
  # DEBUG __x => &iter
  # DEBUG __y => &D.64921
  # DEBUG D#147 => &iter
  # DEBUG D#148 => &D.64921
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_479 != prephitmp_786)
    goto <bb 238>;
  else
    goto <bb 277>;

  <bb 238>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  time_251 = prephitmp_786->first;
  # DEBUG time => time_251
  if (time_251 >= 0)
    goto <bb 239>;
  else
    goto <bb 240>;

  <bb 239>:
  # _878 = PHI <_479(238)>
  goto <bb 278>;

  <bb 240>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _254 = GetSimTime ();
  _255 = this_57(D)->_vc_alloc_delay;
  _256 = _254 + _255;
  _257 = _256 + -1;
  prephitmp_786->first = _257;
  _422 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  input_259 = _422->second.first.first;
  # DEBUG input => input_259
  if (input_259 < 0)
    goto <bb 242>;
  else
    goto <bb 241>;

  <bb 241>:
  _260 = this_57(D)->D.51790._inputs;
  if (input_259 >= _260)
    goto <bb 242>;
  else
    goto <bb 243>;

  <bb 242>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 719, &__PRETTY_FUNCTION__);

  <bb 243>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  vc_261 = _422->second.first.second;
  # DEBUG vc => vc_261
  if (vc_261 < 0)
    goto <bb 245>;
  else
    goto <bb 244>;

  <bb 244>:
  _262 = this_57(D)->_vcs;
  if (vc_261 >= _262)
    goto <bb 245>;
  else
    goto <bb 246>;

  <bb 245>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 721, &__PRETTY_FUNCTION__);

  <bb 246>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _263 = _422->second.second;
  if (_263 < -1)
    goto <bb 274>;
  else
    goto <bb 247>;

  <bb 247>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  if (_263 != -1)
    goto <bb 248>;
  else
    goto <bb 249>;

  <bb 248>:
  __assert_fail ("iter->second.second == -1", "routers/iq_router.cpp", 727, &__PRETTY_FUNCTION__);

  <bb 249>:
  _264 = (long unsigned int) input_259;
  # DEBUG D#1734 => &this_57(D)->_buf
  _413 = MEM[(struct Buffer * * *)this_57(D) + 880B];
  # DEBUG D#53 => D#1734
  # DEBUG __n => _264
  # DEBUG this => D#53
  _487 = _264 * 8;
  _488 = _413 + _487;
  cur_buf_265 = *_488;
  # DEBUG cur_buf => cur_buf_265
  # DEBUG this => cur_buf_265
  # DEBUG vc => vc_261
  _480 = (long unsigned int) vc_261;
  # DEBUG D#96 => &cur_buf_265->_vc
  _481 = MEM[(struct VC * * *)cur_buf_265 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _480
  # DEBUG this => D#42
  _482 = _480 * 8;
  _483 = _481 + _482;
  _484 = *_483;
  # DEBUG this => _484
  # DEBUG D#95 => &MEM[(const struct VC *)_484]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _485 = MEM[(struct Flit * * *)_484 + 144B];
  # DEBUG D#91 => D#94
  _486 = MEM[(struct Flit * * *)_484 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_485 == _486)
    goto <bb 250>;
  else
    goto <bb 251>;

  <bb 250>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 730, &__PRETTY_FUNCTION__);

  <bb 251>:
  # DEBUG this => cur_buf_265
  # DEBUG vc => vc_261
  # DEBUG D#43 => &cur_buf_265->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _480
  # DEBUG this => D#42
  _489 = MEM[(eVCState *)_484 + 176B];
  # DEBUG D#21 => _484
  # DEBUG this => D#21
  if (_489 != 2)
    goto <bb 252>;
  else
    goto <bb 253>;

  <bb 252>:
  __assert_fail ("cur_buf->GetState(vc) == VC::vc_alloc", "routers/iq_router.cpp", 731, &__PRETTY_FUNCTION__);

  <bb 253>:
  # DEBUG this => cur_buf_265
  # DEBUG vc => vc_261
  # DEBUG D#186 => &cur_buf_265->_vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _480
  # DEBUG this => D#42
  # DEBUG this => _484
  # DEBUG D#184 => &MEM[(const struct VC *)_484]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_484]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_490 = MEM[(struct Flit * const &)_486];
  # DEBUG f => iftmp.304_490
  if (iftmp.304_490 == 0B)
    goto <bb 254>;
  else
    goto <bb 255>;

  <bb 254>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 734, &__PRETTY_FUNCTION__);

  <bb 255>:
  _268 = MEM[(const struct Flit *)iftmp.304_490].vc;
  if (vc_261 != _268)
    goto <bb 256>;
  else
    goto <bb 257>;

  <bb 256>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 735, &__PRETTY_FUNCTION__);

  <bb 257>:
  _269 = MEM[(const struct Flit *)iftmp.304_490].head;
  if (_269 != 0)
    goto <bb 259>;
  else
    goto <bb 258>;

  <bb 258>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 736, &__PRETTY_FUNCTION__);

  <bb 259>:
  _270 = this_57(D)->_vc_shuffle_requests;
  if (_270 != 0)
    goto <bb 260>;
  else
    goto <bb 261>;

  <bb 260>:
  _271 = _260 * vc_261;
  iftmp.336_272 = input_259 + _271;
  goto <bb 262>;

  <bb 261>:
  _273 = input_259 * _262;
  iftmp.336_274 = vc_261 + _273;

  <bb 262>:
  # iftmp.336_24 = PHI <iftmp.336_272(260), iftmp.336_274(261)>
  # DEBUG input_and_vc => iftmp.336_24
  _275 = this_57(D)->_vc_allocator;
  _277 = Allocator::OutputAssigned (_275, iftmp.336_24);
  # DEBUG output_and_vc => _277
  if (_277 >= 0)
    goto <bb 263>;
  else
    goto <bb 271>;

  <bb 263>:
  _278 = this_57(D)->_vcs;
  match_output_279 = _277 / _278;
  # DEBUG match_output => match_output_279
  if (match_output_279 < 0)
    goto <bb 265>;
  else
    goto <bb 264>;

  <bb 264>:
  _280 = this_57(D)->D.51790._outputs;
  if (match_output_279 >= _280)
    goto <bb 265>;
  else
    goto <bb 266>;

  <bb 265>:
  __assert_fail ("(match_output >= 0) && (match_output < _outputs)", "routers/iq_router.cpp", 745, &__PRETTY_FUNCTION__);

  <bb 266>:
  match_vc_281 = _277 % _278;
  # DEBUG match_vc => match_vc_281
  _717 = _278 <= match_vc_281;
  _759 = match_vc_281 < 0;
  _620 = _717 | _759;
  if (_620 != 0)
    goto <bb 267>;
  else
    goto <bb 268>;

  <bb 267>:
  __assert_fail ("(match_vc >= 0) && (match_vc < _vcs)", "routers/iq_router.cpp", 747, &__PRETTY_FUNCTION__);

  <bb 268>:
  _282 = MEM[(const struct Flit *)iftmp.304_490].watch;
  if (_282 != 0)
    goto <bb 269>;
  else
    goto <bb 270>;

  <bb 269>:
  # DEBUG D#1735 => &this_57(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1735
  # DEBUG D#1736 => &MEM[(const struct Module *)this_57(D)]._fullname
  _284 = GetSimTime ();
  gWatchOut.322_285 = gWatchOut;
  _287 = std::basic_ostream<char>::operator<< (gWatchOut.322_285, _284);
  # DEBUG __out => _287
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_287, " | ", 3);
  # DEBUG __os => _287
  # DEBUG __str => D#1736
  _288 = MEM[(long unsigned int *)this_57(D) + 48B];
  # DEBUG D#3 => D#1736
  # DEBUG this => D#3
  _492 = (long int) _288;
  # DEBUG this => D#1736
  _493 = MEM[(char * *)this_57(D) + 40B];
  # DEBUG D#1 => D#1736
  # DEBUG this => D#1
  _494 = std::__ostream_insert<char, std::char_traits<char> > (_287, _493, _492);
  # DEBUG __out => _494
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_494, " | ", 3);
  # DEBUG __out => _494
  # DEBUG __s => "Assigning VC "
  # DEBUG __s => "Assigning VC "
  std::__ostream_insert<char, std::char_traits<char> > (_494, "Assigning VC ", 13);
  _290 = std::basic_ostream<char>::operator<< (_494, match_vc_281);
  # DEBUG __out => _290
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_290, " at output ", 11);
  _292 = std::basic_ostream<char>::operator<< (_290, match_output_279);
  # DEBUG __out => _292
  # DEBUG __s => " to VC "
  # DEBUG __s => " to VC "
  std::__ostream_insert<char, std::char_traits<char> > (_292, " to VC ", 7);
  _294 = std::basic_ostream<char>::operator<< (_292, vc_261);
  # DEBUG __out => _294
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_294, " at input ", 10);
  _296 = std::basic_ostream<char>::operator<< (_294, input_259);
  # DEBUG __out => _296
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_296, ".", 1);
  # DEBUG this => _296
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_296);

  <bb 270>:
  _423 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _423->second.second = _277;
  goto <bb 274>;

  <bb 271>:
  _301 = MEM[(const struct Flit *)iftmp.304_490].watch;
  if (_301 != 0)
    goto <bb 272>;
  else
    goto <bb 273>;

  <bb 272>:
  # DEBUG D#1737 => &this_57(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1737
  # DEBUG D#1738 => &MEM[(const struct Module *)this_57(D)]._fullname
  _304 = GetSimTime ();
  gWatchOut.322_305 = gWatchOut;
  _307 = std::basic_ostream<char>::operator<< (gWatchOut.322_305, _304);
  # DEBUG __out => _307
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_307, " | ", 3);
  # DEBUG __os => _307
  # DEBUG __str => D#1738
  _308 = MEM[(long unsigned int *)this_57(D) + 48B];
  # DEBUG D#3 => D#1738
  # DEBUG this => D#3
  _495 = (long int) _308;
  # DEBUG this => D#1738
  _496 = MEM[(char * *)this_57(D) + 40B];
  # DEBUG D#1 => D#1738
  # DEBUG this => D#1
  _497 = std::__ostream_insert<char, std::char_traits<char> > (_307, _496, _495);
  # DEBUG __out => _497
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_497, " | ", 3);
  # DEBUG __out => _497
  # DEBUG __s => "VC allocation failed for VC "
  # DEBUG __s => "VC allocation failed for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_497, "VC allocation failed for VC ", 28);
  _310 = std::basic_ostream<char>::operator<< (_497, vc_261);
  # DEBUG __out => _310
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_310, " at input ", 10);
  _312 = std::basic_ostream<char>::operator<< (_310, input_259);
  # DEBUG __out => _312
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_312, ".", 1);
  # DEBUG this => _312
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_312);

  <bb 273>:
  _424 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_BUFFER_CONFLICT.337_314 = STALL_BUFFER_CONFLICT;
  _424->second.second = STALL_BUFFER_CONFLICT.337_314;

  <bb 274>:
  # prephitmp_733 = PHI <_422(246), _423(270), _424(273)>
  # DEBUG this => &iter
  _499 = prephitmp_733 + 16;
  iter._M_cur = _499;
  _500 = iter._M_last;
  if (_499 == _500)
    goto <bb 276>;
  else
    goto <bb 275>;

  <bb 275>:
  goto <bb 237>;

  <bb 276>:
  std::_Deque_iterator<std::pair<int, std::pair<std::pair<int, int>, int> >, std::pair<int, std::pair<std::pair<int, int>, int> >&, std::pair<int, std::pair<std::pair<int, int>, int> >*>::_ZNSt15_Deque_iteratorISt4pairIiS0_IS0_IiiEiEERS3_PS3_EppEv.part.104 (&iter);
  pretmp_782 = MEM[(struct pair * *)&iter];
  goto <bb 236>;

  <bb 277>:
  # _879 = PHI <_479(237)>

  <bb 278>:
  # _874 = PHI <_878(239), _879(277)>
  iter ={v} {CLOBBER};
  _326 = this_57(D)->_vc_alloc_delay;
  if (_326 <= 1)
    goto <bb 327>;
  else
    goto <bb 279>;

  <bb 279>:
  # DEBUG D#1740 => &this_57(D)->_vc_alloc_vcs
  # DEBUG this => D#1740
  # DEBUG D#67 => &D#1740->D.45936._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#67
  _322 = MEM[(const struct iterator &)this_57(D) + 528]._M_cur;
  iter._M_cur = _322;
  _501 = MEM[(const struct iterator &)this_57(D) + 528]._M_first;
  iter._M_first = _501;
  _502 = MEM[(const struct iterator &)this_57(D) + 528]._M_last;
  iter._M_last = _502;
  _503 = MEM[(const struct iterator &)this_57(D) + 528]._M_node;
  iter._M_node = _503;

  <bb 280>:
  # prephitmp_685 = PHI <_322(279), pretmp_125(325)>
  # prephitmp_663 = PHI <_874(279), pretmp_117(325)>

  <bb 281>:
  # prephitmp_777 = PHI <prephitmp_685(280), _529(324)>
  # prephitmp_708 = PHI <prephitmp_663(280), pretmp_122(324)>
  # DEBUG D#1747 => &this_57(D)->_vc_alloc_vcs
  # DEBUG this => D#1747
  # DEBUG D#68 => &D#1747->D.45936._M_impl._M_finish
  # DEBUG this => &D.64933
  # DEBUG __x => D#68
  # DEBUG D#1752 => MEM[(const struct iterator &)this_57(D) + 560]._M_first
  # DEBUG D.109435 => D#1752
  # DEBUG D#1751 => MEM[(const struct iterator &)this_57(D) + 560]._M_last
  # DEBUG D.109436 => D#1751
  # DEBUG D#1750 => MEM[(const struct iterator &)this_57(D) + 560]._M_node
  # DEBUG D.109437 => D#1750
  # DEBUG __x => &iter
  # DEBUG __y => &D.64933
  # DEBUG D#147 => &iter
  # DEBUG D#148 => &D.64933
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (prephitmp_708 != prephitmp_777)
    goto <bb 282>;
  else
    goto <bb 326>;

  <bb 282>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  time_330 = prephitmp_777->first;
  # DEBUG time => time_330
  if (time_330 < 0)
    goto <bb 283>;
  else
    goto <bb 284>;

  <bb 283>:
  __assert_fail ("time >= 0", "routers/iq_router.cpp", 783, &__PRETTY_FUNCTION__);

  <bb 284>:
  _332 = GetSimTime ();
  if (time_330 > _332)
    goto <bb 326>;
  else
    goto <bb 285>;

  <bb 285>:
  _425 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _334 = _425->second.second;
  if (_334 == -1)
    goto <bb 286>;
  else
    goto <bb 287>;

  <bb 286>:
  __assert_fail ("iter->second.second != -1", "routers/iq_router.cpp", 788, &__PRETTY_FUNCTION__);

  <bb 287>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  # DEBUG output_and_vc => _334
  if (_334 >= 0)
    goto <bb 288>;
  else
    goto <bb 323>;

  <bb 288>:
  _336 = this_57(D)->_vcs;
  match_output_337 = _334 / _336;
  # DEBUG match_output => match_output_337
  if (match_output_337 < 0)
    goto <bb 290>;
  else
    goto <bb 289>;

  <bb 289>:
  _338 = this_57(D)->D.51790._outputs;
  if (match_output_337 >= _338)
    goto <bb 290>;
  else
    goto <bb 291>;

  <bb 290>:
  __assert_fail ("(match_output >= 0) && (match_output < _outputs)", "routers/iq_router.cpp", 795, &__PRETTY_FUNCTION__);

  <bb 291>:
  match_vc_339 = _334 % _336;
  # DEBUG match_vc => match_vc_339
  _664 = _336 <= match_vc_339;
  _666 = match_vc_339 < 0;
  _668 = _664 | _666;
  if (_668 != 0)
    goto <bb 292>;
  else
    goto <bb 293>;

  <bb 292>:
  __assert_fail ("(match_vc >= 0) && (match_vc < _vcs)", "routers/iq_router.cpp", 797, &__PRETTY_FUNCTION__);

  <bb 293>:
  _340 = (long unsigned int) match_output_337;
  # DEBUG D#1741 => &this_57(D)->_next_buf
  _416 = MEM[(struct BufferState * * *)this_57(D) + 904B];
  # DEBUG D#54 => D#1741
  # DEBUG __n => _340
  # DEBUG this => D#54
  _505 = _340 * 8;
  _506 = _416 + _505;
  dest_buf_341 = *_506;
  # DEBUG dest_buf => dest_buf_341
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  input_342 = _425->second.first.first;
  # DEBUG input => input_342
  if (input_342 < 0)
    goto <bb 295>;
  else
    goto <bb 294>;

  <bb 294>:
  _343 = this_57(D)->D.51790._inputs;
  if (input_342 >= _343)
    goto <bb 295>;
  else
    goto <bb 296>;

  <bb 295>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 802, &__PRETTY_FUNCTION__);

  <bb 296>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  vc_344 = _425->second.first.second;
  # DEBUG vc => vc_344
  _533 = _336 <= vc_344;
  _374 = vc_344 < 0;
  _665 = _374 | _533;
  if (_665 != 0)
    goto <bb 297>;
  else
    goto <bb 298>;

  <bb 297>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 804, &__PRETTY_FUNCTION__);

  <bb 298>:
  _345 = (long unsigned int) input_342;
  # DEBUG D#1742 => &this_57(D)->_buf
  _414 = MEM[(struct Buffer * * *)this_57(D) + 880B];
  # DEBUG D#53 => D#1742
  # DEBUG __n => _345
  # DEBUG this => D#53
  _514 = _345 * 8;
  _515 = _414 + _514;
  cur_buf_346 = *_515;
  # DEBUG cur_buf => cur_buf_346
  # DEBUG this => cur_buf_346
  # DEBUG vc => vc_344
  _507 = (long unsigned int) vc_344;
  # DEBUG D#96 => &cur_buf_346->_vc
  _508 = MEM[(struct VC * * *)cur_buf_346 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _507
  # DEBUG this => D#42
  _509 = _507 * 8;
  _510 = _508 + _509;
  _511 = *_510;
  # DEBUG this => _511
  # DEBUG D#95 => &MEM[(const struct VC *)_511]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _512 = MEM[(struct Flit * * *)_511 + 144B];
  # DEBUG D#91 => D#94
  _513 = MEM[(struct Flit * * *)_511 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_512 == _513)
    goto <bb 299>;
  else
    goto <bb 300>;

  <bb 299>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 807, &__PRETTY_FUNCTION__);

  <bb 300>:
  # DEBUG this => cur_buf_346
  # DEBUG vc => vc_344
  # DEBUG D#43 => &cur_buf_346->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _507
  # DEBUG this => D#42
  _516 = MEM[(eVCState *)_511 + 176B];
  # DEBUG D#21 => _511
  # DEBUG this => D#21
  if (_516 != 2)
    goto <bb 301>;
  else
    goto <bb 302>;

  <bb 301>:
  __assert_fail ("cur_buf->GetState(vc) == VC::vc_alloc", "routers/iq_router.cpp", 808, &__PRETTY_FUNCTION__);

  <bb 302>:
  # DEBUG this => cur_buf_346
  # DEBUG vc => vc_344
  # DEBUG D#186 => &cur_buf_346->_vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _507
  # DEBUG this => D#42
  # DEBUG this => _511
  # DEBUG D#184 => &MEM[(const struct VC *)_511]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_511]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_517 = MEM[(struct Flit * const &)_513];
  # DEBUG f => iftmp.304_517
  if (iftmp.304_517 == 0B)
    goto <bb 303>;
  else
    goto <bb 304>;

  <bb 303>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 811, &__PRETTY_FUNCTION__);

  <bb 304>:
  _348 = MEM[(const struct Flit *)iftmp.304_517].vc;
  if (vc_344 != _348)
    goto <bb 305>;
  else
    goto <bb 306>;

  <bb 305>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 812, &__PRETTY_FUNCTION__);

  <bb 306>:
  _349 = MEM[(const struct Flit *)iftmp.304_517].head;
  if (_349 != 0)
    goto <bb 308>;
  else
    goto <bb 307>;

  <bb 307>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 813, &__PRETTY_FUNCTION__);

  <bb 308>:
  # DEBUG this => dest_buf_341
  # DEBUG vc => match_vc_339
  _750 = dest_buf_341->_vcs;
  if (match_vc_339 >= _750)
    goto <bb 73>;
  else
    goto <bb 309>;

  <bb 309>:
  _751 = (long unsigned int) match_vc_339;
  # DEBUG D#51 => &dest_buf_341->_in_use_by
  _752 = MEM[(int * *)dest_buf_341 + 152B];
  # DEBUG D#48 => D#51
  # DEBUG __n => _751
  # DEBUG this => D#48
  _753 = _751 * 4;
  _754 = _752 + _753;
  _755 = *_754;
  if (_755 < 0)
    goto <bb 313>;
  else
    goto <bb 310>;

  <bb 310>:
  _373 = MEM[(const struct Flit *)iftmp.304_517].watch;
  if (_373 != 0)
    goto <bb 311>;
  else
    goto <bb 312>;

  <bb 311>:
  # DEBUG D#1743 => &this_57(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1743
  # DEBUG D#1744 => &MEM[(const struct Module *)this_57(D)]._fullname
  _376 = GetSimTime ();
  gWatchOut.322_377 = gWatchOut;
  _379 = std::basic_ostream<char>::operator<< (gWatchOut.322_377, _376);
  # DEBUG __out => _379
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_379, " | ", 3);
  # DEBUG __os => _379
  # DEBUG __str => D#1744
  _380 = MEM[(long unsigned int *)this_57(D) + 48B];
  # DEBUG D#3 => D#1744
  # DEBUG this => D#3
  _519 = (long int) _380;
  # DEBUG this => D#1744
  _520 = MEM[(char * *)this_57(D) + 40B];
  # DEBUG D#1 => D#1744
  # DEBUG this => D#1
  _521 = std::__ostream_insert<char, std::char_traits<char> > (_379, _520, _519);
  # DEBUG __out => _521
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_521, " | ", 3);
  # DEBUG __out => _521
  # DEBUG __s => "  Discarding previously generated grant for VC "
  # DEBUG __s => "  Discarding previously generated grant for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_521, "  Discarding previously generated grant for VC ", 47);
  _382 = std::basic_ostream<char>::operator<< (_521, vc_344);
  # DEBUG __out => _382
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_382, " at input ", 10);
  _384 = std::basic_ostream<char>::operator<< (_382, input_342);
  # DEBUG __out => _384
  # DEBUG __s => ": VC "
  # DEBUG __s => ": VC "
  std::__ostream_insert<char, std::char_traits<char> > (_384, ": VC ", 5);
  _386 = std::basic_ostream<char>::operator<< (_384, match_vc_339);
  # DEBUG __out => _386
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_386, " at output ", 11);
  _388 = std::basic_ostream<char>::operator<< (_386, match_output_337);
  # DEBUG __out => _388
  # DEBUG __s => " is no longer available."
  # DEBUG __s => " is no longer available."
  std::__ostream_insert<char, std::char_traits<char> > (_388, " is no longer available.", 24);
  # DEBUG this => _388
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_388);
  pretmp_690 = MEM[(struct pair * *)&iter];

  <bb 312>:
  # prephitmp_694 = PHI <_425(310), pretmp_690(311)>
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_BUFFER_BUSY.332_390 = STALL_BUFFER_BUSY;
  prephitmp_694->second.second = STALL_BUFFER_BUSY.332_390;
  goto <bb 323>;

  <bb 313>:
  _351 = this_57(D)->_vc_busy_when_full;
  if (_351 != 0)
    goto <bb 314>;
  else
    goto <bb 336>;

  <bb 314>:
  _410 = MEM[(struct BufferPolicy * *)dest_buf_341 + 144B];
  # DEBUG D#32 => dest_buf_341
  # DEBUG vc => match_vc_339
  # DEBUG this => D#32
  _522 = _410->D.55980._vptr.Module;
  _523 = MEM[(int (*__vtbl_ptr_type) () *)_522 + 56B];
  _524 = OBJ_TYPE_REF(_523;(const struct BufferPolicy)_410->7) (_410, match_vc_339);
  if (_524 != 0)
    goto <bb 337>;
  else
    goto <bb 315>;

  <bb 315>:
  pretmp_813 = MEM[(struct pair * *)&iter];
  goto <bb 336>;

  <bb 316>:
  # DEBUG D#1745 => &this_57(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1745
  # DEBUG D#1746 => &MEM[(const struct Module *)this_57(D)]._fullname
  _355 = GetSimTime ();
  gWatchOut.322_356 = gWatchOut;
  _358 = std::basic_ostream<char>::operator<< (gWatchOut.322_356, _355);
  # DEBUG __out => _358
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_358, " | ", 3);
  # DEBUG __os => _358
  # DEBUG __str => D#1746
  _359 = MEM[(long unsigned int *)this_57(D) + 48B];
  # DEBUG D#3 => D#1746
  # DEBUG this => D#3
  _525 = (long int) _359;
  # DEBUG this => D#1746
  _526 = MEM[(char * *)this_57(D) + 40B];
  # DEBUG D#1 => D#1746
  # DEBUG this => D#1
  _527 = std::__ostream_insert<char, std::char_traits<char> > (_358, _526, _525);
  # DEBUG __out => _527
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_527, " | ", 3);
  # DEBUG __out => _527
  # DEBUG __s => "  Discarding previously generated grant for VC "
  # DEBUG __s => "  Discarding previously generated grant for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_527, "  Discarding previously generated grant for VC ", 47);
  _361 = std::basic_ostream<char>::operator<< (_527, vc_344);
  # DEBUG __out => _361
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_361, " at input ", 10);
  _363 = std::basic_ostream<char>::operator<< (_361, input_342);
  # DEBUG __out => _363
  # DEBUG __s => ": VC "
  # DEBUG __s => ": VC "
  std::__ostream_insert<char, std::char_traits<char> > (_363, ": VC ", 5);
  _365 = std::basic_ostream<char>::operator<< (_363, match_vc_339);
  # DEBUG __out => _365
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_365, " at output ", 11);
  _367 = std::basic_ostream<char>::operator<< (_365, match_output_337);
  # DEBUG __out => _367
  # DEBUG __s => " has become full."
  # DEBUG __s => " has become full."
  std::__ostream_insert<char, std::char_traits<char> > (_367, " has become full.", 17);
  # DEBUG this => _367
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_367);

  <bb 317>:
  _427 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _407 = MEM[(int *)dest_buf_341 + 100B];
  # DEBUG D#27 => dest_buf_341
  _408 = MEM[(int *)dest_buf_341 + 104B];
  # DEBUG D#27 => dest_buf_341
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (_407 < _408)
    goto <bb 318>;
  else
    goto <bb 319>;

  <bb 318>:
  # DEBUG D#28 => _407
  # DEBUG D#29 => _408
  BufferState::_ZNK11BufferState6IsFullEv.isra.23.part.24 ();

  <bb 319>:
  if (_407 == _408)
    goto <bb 320>;
  else
    goto <bb 321>;

  <bb 320>:
  iftmp.343_370 = STALL_BUFFER_FULL;
  goto <bb 322>;

  <bb 321>:
  iftmp.343_371 = STALL_BUFFER_RESERVED;

  <bb 322>:
  # iftmp.343_26 = PHI <iftmp.343_370(320), iftmp.343_371(321)>
  _427->second.second = iftmp.343_26;

  <bb 323>:
  # prephitmp_75 = PHI <_425(287), prephitmp_350(336), prephitmp_694(312), _427(322)>
  # DEBUG this => &iter
  _529 = prephitmp_75 + 16;
  iter._M_cur = _529;
  _530 = iter._M_last;
  if (_529 == _530)
    goto <bb 325>;
  else
    goto <bb 324>;

  <bb 324>:
  pretmp_122 = MEM[(const struct iterator &)this_57(D) + 560]._M_cur;
  goto <bb 281>;

  <bb 325>:
  std::_Deque_iterator<std::pair<int, std::pair<std::pair<int, int>, int> >, std::pair<int, std::pair<std::pair<int, int>, int> >&, std::pair<int, std::pair<std::pair<int, int>, int> >*>::_ZNSt15_Deque_iteratorISt4pairIiS0_IS0_IiiEiEERS3_PS3_EppEv.part.104 (&iter);
  pretmp_125 = MEM[(struct pair * *)&iter];
  pretmp_117 = MEM[(const struct iterator &)this_57(D) + 560]._M_cur;
  goto <bb 280>;

  <bb 326>:
  iter ={v} {CLOBBER};

  <bb 327>:
  return;

<L225>:

<L217>:
  # DEBUG D#1748 => {CLOBBER}
  # DEBUG iset$_M_node => D#1748
  # DEBUG this => &setlist
  # DEBUG this => &setlist._M_t
  _531 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];
  # DEBUG D#89 => &setlist._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&setlist._M_t, _531);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  resx 5

  <bb 330>:
  _105 = this_57(D)->_routing_delay;
  if (_105 != 0)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 331>:
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_861
  # DEBUG D#1720 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_861]._M_value_field
  # DEBUG __r => D#1720
  out_vc_111 = MEM[(const struct sSetElement *)iset$_M_node_861 + 32B].vc_start;
  # DEBUG vc_start => out_vc_111
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_861
  # DEBUG D#1721 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_861]._M_value_field
  # DEBUG __r => D#1721
  vc_end_112 = MEM[(const struct sSetElement *)iset$_M_node_861 + 32B].vc_end;
  # DEBUG vc_end => vc_end_112
  goto <bb 54>;

  <bb 332>:
  if (in_priority_115 < 0)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 333>:
  _153 = MEM[(const struct Flit *)iftmp.304_165].watch;
  if (_153 != 0)
    goto <bb 133>;
  else
    goto <bb 168>;

  <bb 334>:
  # DEBUG cred => 1
  _168 = MEM[(const struct Flit *)iftmp.304_165].watch;
  if (_168 != 0)
    goto <bb 171>;
  else
    goto <bb 214>;

  <bb 335>:
  _839 = this_57(D)->_vc_allocator;
  _834 = _839->D.58179._vptr.Module;
  _838 = MEM[(int (*__vtbl_ptr_type) () *)_834 + 64B];
  OBJ_TYPE_REF(_838;(struct Allocator)_839->8) (_839);
  goto <bb 235>;

  <bb 336>:
  # prephitmp_350 = PHI <_425(313), pretmp_813(315)>
  goto <bb 323>;

  <bb 337>:
  _352 = MEM[(const struct Flit *)iftmp.304_517].watch;
  if (_352 != 0)
    goto <bb 316>;
  else
    goto <bb 317>;

  <bb 338>:
  # in_priority_841 = PHI <in_priority_119(71), in_priority_115(69)>
  # DEBUG in_priority => in_priority_841
  # DEBUG this => dest_buf_100
  # DEBUG vc => out_vc_19
  goto <bb 75>;

}



;; Function void IQRouter::_SWAllocEvaluate() (_ZN8IQRouter16_SWAllocEvaluateEv, funcdef_no=2248, decl_uid=51700, cgraph_uid=693, symbol_order=694)

Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is not innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
void IQRouter::_SWAllocEvaluate() (struct IQRouter * const this)
{
  struct pair * * iter$_M_node;
  struct pair * iter$_M_last;
  struct pair * iter$_M_cur;
  struct pair * * iter$_M_node;
  struct pair * iter$_M_last;
  struct pair * iter$_M_cur;
  bool D.124673;
  static const char __PRETTY_FUNCTION__[44] = "bool BufferState::IsAvailableFor(int) const";
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  bool D.124642;
  static const char __PRETTY_FUNCTION__[44] = "bool BufferState::IsAvailableFor(int) const";
  struct _Alloc_node __an;
  struct _Rb_tree_node_base * __x;
  struct _Rb_tree_node_base * __x;
  const struct _Rb_tree_node_base * const iset$_M_node;
  const struct _Rb_tree_node_base * const iset$_M_node;
  int out_vc;
  int vc_end;
  bool reserved;
  bool full;
  bool busy;
  const struct set setlist;
  const struct Buffer * const cur_buf;
  const int expanded_input;
  const int vc;
  const int input;
  const struct BufferState * const dest_buf;
  const int output;
  const int time;
  struct iterator iter;
  int expanded_output;
  const int expanded_input;
  const struct Buffer * const cur_buf;
  const int vc;
  const int input;
  const int time;
  struct iterator iter;
  int dest_vc;
  int vc_end;
  bool cred;
  bool elig;
  const struct BufferState * const dest_buf;
  const int dest_output;
  const struct BufferState * const dest_buf;
  const struct set setlist;
  const struct Buffer * const cur_buf;
  const int vc;
  const int input;
  const int time;
  struct iterator iter;
  static const char __PRETTY_FUNCTION__[34] = "void IQRouter::_SWAllocEvaluate()";
  bool watched;
  struct Allocator * _16;
  int (*__vtbl_ptr_type) () _20;
  int (*__vtbl_ptr_type) () * _22;
  struct Allocator * _27;
  const int iftmp.414_32;
  const int iftmp.424_37;
  int iftmp.443_44;
  const int iftmp.446_45;
  const int iftmp.454_47;
  const int iftmp.456_48;
  int _113;
  int _115;
  int _116;
  int _117;
  int _118;
  int _119;
  int _120;
  long unsigned int _121;
  int _122;
  long unsigned int _123;
  bool _125;
  int _127;
  bool _128;
  int _129;
  int _131;
  struct ostream * gWatchOut.410_132;
  struct basic_ostream & _134;
  const size_type _135;
  struct basic_ostream & _137;
  struct basic_ostream & _139;
  struct basic_ostream & _141;
  bool _142;
  bool _143;
  const struct set & _146;
  bool _148;
  size_type _149;
  difference_type _151;
  long int _152;
  int _154;
  long unsigned int _155;
  long int _156;
  bool _158;
  bool _159;
  long int _160;
  struct Flit * * _161;
  int _162;
  int _163;
  long int _164;
  struct Flit * * _165;
  long int _167;
  long int _168;
  long int _171;
  long int _173;
  int _175;
  int _176;
  struct Flit * * _177;
  int _179;
  long int _180;
  struct Flit * * _181;
  long unsigned int _182;
  bool _184;
  bool _189;
  bool _190;
  long int _191;
  int _193;
  struct ostream * gWatchOut.410_194;
  struct basic_ostream & _196;
  const size_type _197;
  struct basic_ostream & _199;
  long int _200;
  int STALL_BUFFER_BUSY.423_201;
  bool _204;
  long int _205;
  int _207;
  struct ostream * gWatchOut.410_208;
  struct basic_ostream & _210;
  const size_type _211;
  struct basic_ostream & _213;
  long int _214;
  long int _215;
  const int iftmp.424_216;
  const int iftmp.424_217;
  const bool _220;
  bool _221;
  struct basic_ostream & _230;
  int _231;
  char * const _232;
  int _233;
  long unsigned int _234;
  long int _235;
  int _237;
  long unsigned int _238;
  bool _239;
  int _241;
  struct ostream * gWatchOut.410_242;
  struct basic_ostream & _244;
  const size_type _245;
  struct basic_ostream & _247;
  struct basic_ostream & _249;
  struct queue & _250;
  long unsigned int _251;
  const int iftmp.414_252;
  const int iftmp.414_253;
  const bool _256;
  bool _257;
  const size_type _262;
  struct Allocator * _272;
  struct Flit * * * _273;
  int _275;
  struct ostream * gWatchOut.410_276;
  struct basic_ostream & _278;
  struct Allocator * _280;
  int (*__vtbl_ptr_type) () * _281;
  int (*__vtbl_ptr_type) () _282;
  struct ostream * gWatchOut.410_283;
  struct Allocator * _285;
  long int _286;
  int _288;
  struct ostream * gWatchOut.410_289;
  struct basic_ostream & _291;
  struct Allocator * _293;
  int (*__vtbl_ptr_type) () * _294;
  int (*__vtbl_ptr_type) () _295;
  struct ostream * gWatchOut.410_296;
  int (*__vtbl_ptr_type) () * _303;
  int (*__vtbl_ptr_type) () _304;
  struct Allocator * _306;
  struct Flit * * * _307;
  int _309;
  struct ostream * gWatchOut.410_310;
  struct basic_ostream & _312;
  struct ostream * gWatchOut.410_314;
  struct Allocator * _315;
  struct Allocator * _317;
  struct BufferState * & _318;
  int _320;
  struct ostream * gWatchOut.410_321;
  struct basic_ostream & _323;
  struct ostream * gWatchOut.410_325;
  struct Allocator * _326;
  long unsigned int _329;
  bool _330;
  int (*__vtbl_ptr_type) () _332;
  int _334;
  int _335;
  int _336;
  int _337;
  int (*__vtbl_ptr_type) () * _339;
  int _341;
  int _343;
  const int _344;
  int _345;
  long unsigned int _346;
  bool _348;
  const int _350;
  int _351;
  int _352;
  int _353;
  int _354;
  struct Allocator * _356;
  int _359;
  int _360;
  int _361;
  struct Allocator * _362;
  int (*__vtbl_ptr_type) () * _363;
  int (*__vtbl_ptr_type) () _364;
  const int _366;
  bool _367;
  int _369;
  struct ostream * gWatchOut.410_370;
  struct basic_ostream & _372;
  const size_type _373;
  struct basic_ostream & _375;
  struct basic_ostream & _377;
  struct basic_ostream & _379;
  int STALL_CROSSBAR_CONFLICT.428_380;
  bool _382;
  int _383;
  int _384;
  int _385;
  int _386;
  int _387;
  int _389;
  struct ostream * gWatchOut.410_390;
  struct basic_ostream & _392;
  const size_type _393;
  struct basic_ostream & _395;
  struct basic_ostream & _397;
  struct basic_ostream & _399;
  struct basic_ostream & _401;
  struct basic_ostream & _403;
  long unsigned int _404;
  int _405;
  int _406;
  int _407;
  int _408;
  struct Allocator * _412;
  bool _415;
  int _417;
  struct ostream * gWatchOut.410_418;
  struct basic_ostream & _420;
  const size_type _421;
  struct basic_ostream & _423;
  struct basic_ostream & _425;
  struct basic_ostream & _426;
  int STALL_CROSSBAR_CONFLICT.428_427;
  int _429;
  int _430;
  int _431;
  bool _432;
  struct Allocator * _433;
  int (*__vtbl_ptr_type) () * _434;
  int (*__vtbl_ptr_type) () _435;
  bool _437;
  bool _438;
  struct Allocator * _439;
  int _441;
  bool _442;
  int _443;
  int _444;
  int _445;
  int _446;
  int _447;
  int _450;
  struct ostream * gWatchOut.410_451;
  struct basic_ostream & _453;
  const size_type _454;
  struct basic_ostream & _456;
  struct basic_ostream & _458;
  struct basic_ostream & _460;
  struct basic_ostream & _462;
  struct basic_ostream & _464;
  int STALL_CROSSBAR_CONFLICT.428_465;
  struct Allocator * _467;
  int (*__vtbl_ptr_type) () * _468;
  int (*__vtbl_ptr_type) () _469;
  const int _471;
  bool _472;
  int _473;
  int _474;
  int _475;
  int _476;
  int _477;
  int _480;
  struct ostream * gWatchOut.410_481;
  struct basic_ostream & _483;
  const size_type _484;
  struct basic_ostream & _486;
  struct basic_ostream & _488;
  struct basic_ostream & _490;
  struct basic_ostream & _492;
  struct basic_ostream & _494;
  long unsigned int _495;
  int _496;
  int _497;
  int _498;
  int _499;
  bool _502;
  int _504;
  struct ostream * gWatchOut.410_505;
  struct basic_ostream & _507;
  const size_type _508;
  struct basic_ostream & _510;
  struct basic_ostream & _512;
  struct basic_ostream & _514;
  int STALL_CROSSBAR_CONFLICT.428_515;
  bool _517;
  int _518;
  int _519;
  int _520;
  int _521;
  int _522;
  int _525;
  struct ostream * gWatchOut.410_526;
  struct basic_ostream & _528;
  const size_type _529;
  struct basic_ostream & _531;
  struct basic_ostream & _533;
  struct basic_ostream & _535;
  struct basic_ostream & _537;
  struct basic_ostream & _539;
  int STALL_CROSSBAR_CONFLICT.428_541;
  bool _544;
  char * const _545;
  int _547;
  struct ostream * gWatchOut.410_548;
  struct basic_ostream & _550;
  const size_type _551;
  struct basic_ostream & _553;
  struct basic_ostream & _555;
  long int _556;
  int STALL_CROSSBAR_CONFLICT.428_557;
  struct pair * _563;
  bool _567;
  int _568;
  int _572;
  int _573;
  bool _574;
  int _575;
  int _577;
  long unsigned int _578;
  struct Flit * iftmp.304_579;
  int _582;
  int _583;
  int _584;
  int _586;
  int _587;
  int _588;
  int _589;
  long unsigned int _591;
  int _592;
  long unsigned int _593;
  bool _595;
  int _597;
  int _598;
  long unsigned int _599;
  int _600;
  bool _601;
  bool _602;
  struct Allocator * _603;
  const struct set & _606;
  bool _608;
  struct Flit * * const _609;
  struct VC * _611;
  struct VC * const & _612;
  int _613;
  bool _614;
  long unsigned int _615;
  struct VC * * const _616;
  int _617;
  int _618;
  long unsigned int _619;
  int & _620;
  long unsigned int _622;
  int _627;
  int _628;
  bool _636;
  int _637;
  int _638;
  int _639;
  int _640;
  int _642;
  struct ostream * gWatchOut.410_643;
  struct basic_ostream & _645;
  const size_type _646;
  struct basic_ostream & _648;
  struct basic_ostream & _650;
  struct basic_ostream & _652;
  struct basic_ostream & _654;
  int STALL_BUFFER_BUSY.423_655;
  bool _657;
  int _658;
  int _659;
  int _660;
  int _661;
  struct pair * _662;
  int _664;
  struct ostream * gWatchOut.410_665;
  struct basic_ostream & _667;
  const size_type _668;
  struct basic_ostream & _670;
  struct basic_ostream & _672;
  struct basic_ostream & _674;
  struct basic_ostream & _676;
  const int iftmp.454_677;
  const int iftmp.454_678;
  bool _683;
  int _684;
  int iftmp.443_685;
  int _686;
  int iftmp.443_687;
  const int _689;
  bool _690;
  int _691;
  int _692;
  int _693;
  int _694;
  int _696;
  struct ostream * gWatchOut.410_697;
  struct basic_ostream & _699;
  const size_type _700;
  struct basic_ostream & _702;
  struct basic_ostream & _704;
  struct basic_ostream & _706;
  struct basic_ostream & _708;
  int _710;
  int _711;
  int _712;
  bool _713;
  int _714;
  int _715;
  int _716;
  int _717;
  int _719;
  struct ostream * gWatchOut.410_720;
  struct basic_ostream & _722;
  const size_type _723;
  struct basic_ostream & _725;
  struct basic_ostream & _727;
  struct basic_ostream & _729;
  struct basic_ostream & _731;
  struct Flit * * const _732;
  const int iftmp.446_733;
  const int iftmp.446_734;
  bool _736;
  int _737;
  int _738;
  int _739;
  int _740;
  struct Buffer * & _741;
  int _743;
  struct ostream * gWatchOut.410_744;
  struct basic_ostream & _746;
  const size_type _747;
  struct basic_ostream & _749;
  struct basic_ostream & _751;
  struct basic_ostream & _753;
  struct basic_ostream & _755;
  long unsigned int _756;
  int STALL_BUFFER_CONFLICT.444_757;
  bool _761;
  int _762;
  int _763;
  int _764;
  int _765;
  int _768;
  struct ostream * gWatchOut.410_769;
  struct basic_ostream & _771;
  const size_type _772;
  struct basic_ostream & _774;
  struct basic_ostream & _776;
  struct basic_ostream & _778;
  struct basic_ostream & _780;
  const int iftmp.456_783;
  const int iftmp.456_784;
  bool _788;
  int _790;
  struct ostream * gWatchOut.410_791;
  struct basic_ostream & _793;
  const size_type _794;
  struct basic_ostream & _796;
  struct basic_ostream & _798;
  struct basic_ostream & _800;
  struct basic_ostream & _802;
  int _804;
  struct ostream * gWatchOut.410_805;
  int _807;
  long unsigned int _808;
  const eVCState _809;
  int _810;
  struct ostream * gWatchOut.410_811;
  int _814;
  struct ostream * gWatchOut.410_815;
  struct ostream * gWatchOut.410_817;
  int STALL_CROSSBAR_CONFLICT.428_818;
  const int _831;
  const int _832;
  const int _833;
  const int _834;
  const int _835;
  const int _836;
  const int _837;
  const int _838;
  const int _839;
  const int _840;
  struct BufferPolicy * const _841;
  struct BufferPolicy * const _842;
  struct BufferPolicy * const _843;
  struct BufferPolicy * const _844;
  struct BufferPolicy * const _845;
  struct Buffer * * _846;
  struct Buffer * * _847;
  struct Buffer * * _848;
  struct BufferState * * _849;
  struct BufferState * * _850;
  struct BufferState * * _851;
  int * _852;
  int * _853;
  int * _854;
  int * _855;
  int * _856;
  int * _857;
  int * _858;
  int * _859;
  int * _860;
  int * _861;
  int * _862;
  int * _863;
  int * _864;
  int * _865;
  int * _866;
  int * _867;
  bool _874;
  bool _878;
  struct pair * const _880;
  struct pair * const _882;
  struct pair * const _883;
  struct pair * const _884;
  struct pair * const _885;
  struct pair * const _886;
  struct pair * const _887;
  struct vector * _888;
  struct vector * _889;
  struct vector * _890;
  struct vector * _891;
  struct vector * _892;
  struct vector * _893;
  struct queue * _894;
  struct queue * _895;
  const struct OutputSet * _896;
  long unsigned int _898;
  struct BufferState * & _899;
  long unsigned int _900;
  int & _901;
  long unsigned int _902;
  struct vector & _903;
  int & _904;
  struct vector & _905;
  int & _907;
  struct vector & _909;
  struct Flit * * * _910;
  long int _911;
  struct Flit * * * _912;
  long int _913;
  long int _914;
  long int _915;
  long int _916;
  long int _917;
  struct Flit * * _918;
  long int _919;
  struct Flit * * _920;
  long int _921;
  long int _922;
  long int _923;
  long int _924;
  struct Flit * * _925;
  long int _926;
  struct Flit * * _927;
  long int _928;
  long int _929;
  long int _930;
  difference_type _931;
  size_type _932;
  long unsigned int _933;
  struct queue & _934;
  int (*__vtbl_ptr_type) () * _935;
  int (*__vtbl_ptr_type) () _936;
  bool _937;
  long int _938;
  char * const _939;
  struct basic_ostream & _940;
  long int _941;
  char * const _942;
  struct basic_ostream & _943;
  long int _948;
  char * const _949;
  struct basic_ostream & _950;
  const size_type _951;
  long int _952;
  char * const _953;
  struct basic_ostream & _954;
  const size_type _955;
  long int _956;
  char * const _957;
  struct basic_ostream & _958;
  const size_type _959;
  long int _960;
  char * const _961;
  struct basic_ostream & _962;
  struct pair * _967;
  long unsigned int _968;
  struct VC * * const _969;
  long unsigned int _970;
  struct VC * const & _971;
  struct VC * _972;
  struct Flit * * const _973;
  struct Flit * * const _974;
  long unsigned int _975;
  struct Buffer * & _976;
  const eVCState _977;
  struct Flit * iftmp.304_978;
  bool _979;
  long int _980;
  char * const _981;
  struct basic_ostream & _982;
  long unsigned int _983;
  int & _984;
  long int _985;
  char * const _986;
  struct basic_ostream & _987;
  long int _988;
  char * const _989;
  struct basic_ostream & _990;
  long int _991;
  char * const _992;
  struct basic_ostream & _993;
  long int _994;
  char * const _995;
  struct basic_ostream & _996;
  long unsigned int _997;
  int & _998;
  long int _999;
  char * const _1000;
  struct basic_ostream & _1001;
  long int _1002;
  char * const _1003;
  struct basic_ostream & _1004;
  long int _1005;
  char * const _1006;
  struct basic_ostream & _1007;
  bool _1008;
  struct pair * _1011;
  struct pair * _1012;
  struct pair * * _1013;
  long unsigned int _1015;
  struct BufferState * & _1016;
  long unsigned int _1017;
  int & _1018;
  long unsigned int _1019;
  struct VC * * const _1020;
  long unsigned int _1021;
  struct VC * const & _1022;
  struct VC * _1023;
  struct Flit * * const _1024;
  struct Flit * * const _1025;
  long unsigned int _1026;
  struct Buffer * & _1027;
  const eVCState _1028;
  struct Flit * iftmp.304_1029;
  int & _1031;
  long unsigned int _1032;
  int & _1033;
  long int _1034;
  char * const _1035;
  struct basic_ostream & _1036;
  int & _1037;
  int & _1038;
  long unsigned int _1039;
  int & _1040;
  int & _1042;
  long int _1043;
  char * const _1044;
  struct basic_ostream & _1045;
  long int _1046;
  char * const _1047;
  struct basic_ostream & _1048;
  int (*__vtbl_ptr_type) () * _1049;
  int (*__vtbl_ptr_type) () _1050;
  bool _1051;
  long int _1052;
  char * const _1053;
  struct basic_ostream & _1054;
  const struct OutputSet * _1055;
  long unsigned int _1057;
  int & _1058;
  long unsigned int _1059;
  struct vector & _1060;
  int & _1061;
  struct vector & _1062;
  int & _1064;
  struct vector & _1066;
  int (*__vtbl_ptr_type) () * _1067;
  int (*__vtbl_ptr_type) () _1068;
  bool _1069;
  long int _1071;
  char * const _1072;
  struct basic_ostream & _1073;
  long int _1074;
  char * const _1075;
  struct basic_ostream & _1076;
  struct _Rb_tree_node_base * _1077;
  const int _1078;
  const int _1079;
  int (*__vtbl_ptr_type) () * _1080;
  int (*__vtbl_ptr_type) () _1081;
  bool _1082;
  long int _1083;
  char * const _1084;
  struct basic_ostream & _1085;
  struct pair * _1087;
  struct pair * _1088;
  struct _Rb_tree_node_base * _1089;
  struct _Rb_tree_node_base * _1090;
  bool _1091;
  int _1105;
  int _1232;
  struct _Rb_tree_node_base * const prephitmp_1313;
  struct _Rb_tree_node_base * const _1314;
  long unsigned int _1321;
  long unsigned int _1322;
  int * const _1323;
  long unsigned int _1324;
  const int & _1325;
  int _1326;
  struct _Rb_tree_node_base * const _1335;
  long unsigned int _1342;
  long unsigned int _1343;
  int * const _1344;
  long unsigned int _1345;
  const int & _1346;
  int _1347;
  long unsigned int prephitmp_1389;
  int _1394;
  bool _1401;
  bool _1402;
  int _1405;
  bool _1410;
  struct pair * const pretmp_1426;
  struct pair * pretmp_1427;
  long unsigned int pretmp_1431;
  long unsigned int pretmp_1433;
  struct pair * const prephitmp_1450;
  const size_type prephitmp_1451;
  long unsigned int pretmp_1453;
  struct VC * * const pretmp_1456;
  struct pair * const prephitmp_1459;
  struct pair * const pretmp_1460;
  struct pair * const prephitmp_1461;
  struct pair * const prephitmp_1462;
  struct pair * const pretmp_1463;
  struct pair * const prephitmp_1464;
  struct Allocator * _1472;
  struct VC * * const pretmp_1486;
  struct VC * const pretmp_1488;
  struct VC * const prephitmp_1489;
  bool _1506;
  bool _1519;
  int (*__vtbl_ptr_type) () _1520;
  struct Allocator * _1521;
  struct _Rb_tree_node_base * const prephitmp_1526;
  struct _Rb_tree_node_base * prephitmp_1527;
  bool _1531;
  const size_type prephitmp_1532;
  struct pair * const pretmp_1536;
  struct pair * prephitmp_1537;
  bool _1538;
  bool _1540;
  long unsigned int pretmp_1545;
  bool _1546;
  int _1548;
  struct pair * pretmp_1549;
  struct pair * pretmp_1550;
  int (*__vtbl_ptr_type) () * _1559;
  struct Allocator * _1560;
  struct pair * _1596;
  struct pair * _1602;
  struct pair * _1603;
  bool _1604;
  bool prephitmp_1624;
  bool pretmp_1633;
  bool prephitmp_1634;
  bool prephitmp_1638;
  const eVCState pretmp_1640;
  const eVCState prephitmp_1641;
  struct _Rb_tree_node_base * pretmp_1642;
  struct _Rb_tree_node_base * prephitmp_1643;
  bool pretmp_1644;
  bool pretmp_1645;
  bool prephitmp_1646;

  <bb 2>:
  # DEBUG watched => 0
  # DEBUG D#1759 => &this_108(D)->_sw_alloc_vcs
  # DEBUG this => D#1759
  # DEBUG D#67 => &D#1759->D.45936._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#67
  iter$_M_cur_782 = MEM[(const struct iterator &)this_108(D) + 688]._M_cur;
  # DEBUG iter$_M_cur => iter$_M_cur_782
  iter$_M_last_766 = MEM[(const struct iterator &)this_108(D) + 688]._M_last;
  # DEBUG iter$_M_last => iter$_M_last_766
  iter$_M_node_760 = MEM[(const struct iterator &)this_108(D) + 688]._M_node;
  # DEBUG iter$_M_node => iter$_M_node_760
  goto <bb 4>;

  <bb 3>:
  # iter$_M_cur_1374 = PHI <iter$_M_cur_1330(159), iter$_M_cur_946(158)>
  # iter$_M_last_1371 = PHI <iter$_M_last_1331(159), iter$_M_last_1224(158)>
  # iter$_M_node_1153 = PHI <iter$_M_node_1329(159), iter$_M_node_1152(158)>
  # DEBUG iter$_M_node => iter$_M_node_1153
  # DEBUG iter$_M_last => iter$_M_last_1371
  # DEBUG iter$_M_cur => iter$_M_cur_1374

  <bb 4>:
  # watched_1 = PHI <watched_5(3), 0(2)>
  # iter$_M_cur_1373 = PHI <iter$_M_cur_1374(3), iter$_M_cur_782(2)>
  # iter$_M_last_1224 = PHI <iter$_M_last_1371(3), iter$_M_last_766(2)>
  # iter$_M_node_1152 = PHI <iter$_M_node_1153(3), iter$_M_node_760(2)>
  # DEBUG iter$_M_node => iter$_M_node_1152
  # DEBUG iter$_M_last => iter$_M_last_1224
  # DEBUG iter$_M_cur => iter$_M_cur_1373
  # DEBUG watched => watched_1
  # DEBUG D#1780 => &this_108(D)->_sw_alloc_vcs
  # DEBUG this => D#1780
  # DEBUG D#68 => &D#1780->D.45936._M_impl._M_finish
  # DEBUG this => &D.65529
  # DEBUG __x => D#68
  _662 = MEM[(const struct iterator &)this_108(D) + 720]._M_cur;
  # DEBUG D#1849 => MEM[(const struct iterator &)this_108(D) + 720]._M_first
  # DEBUG D.110617 => D#1849
  # DEBUG D#1848 => MEM[(const struct iterator &)this_108(D) + 720]._M_last
  # DEBUG D.110618 => D#1848
  # DEBUG D#1847 => MEM[(const struct iterator &)this_108(D) + 720]._M_node
  # DEBUG D.110619 => D#1847
  # DEBUG __x => &iter
  # DEBUG __y => &D.65529
  # DEBUG D#147 => &iter
  # DEBUG D#148 => &D.65529
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_662 != iter$_M_cur_1373)
    goto <bb 5>;
  else
    goto <bb 160>;

  <bb 5>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  time_111 = iter$_M_cur_1373->first;
  # DEBUG time => time_111
  if (time_111 >= 0)
    goto <bb 156>;
  else
    goto <bb 6>;

  <bb 6>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  input_112 = iter$_M_cur_1373->second.first.first;
  # DEBUG input => input_112
  if (input_112 < 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _113 = this_108(D)->D.51790._inputs;
  if (input_112 >= _113)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 1341, &__PRETTY_FUNCTION__);

  <bb 9>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  vc_114 = iter$_M_cur_1373->second.first.second;
  # DEBUG vc => vc_114
  if (vc_114 < 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _115 = this_108(D)->_vcs;
  if (vc_114 >= _115)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 1343, &__PRETTY_FUNCTION__);

  <bb 12>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _116 = iter$_M_cur_1373->second.second;
  if (_116 != -1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __assert_fail ("iter->second.second == -1", "routers/iq_router.cpp", 1345, &__PRETTY_FUNCTION__);

  <bb 14>:
  _117 = this_108(D)->D.51790._input_speedup;
  _118 = input_112 * _117;
  _119 = vc_114 % _117;
  _120 = _118 + _119;
  _121 = (long unsigned int) _120;
  # DEBUG D#1760 => &this_108(D)->_switch_hold_vc
  _852 = MEM[(int * *)this_108(D) + 1120B];
  # DEBUG D#55 => D#1760
  # DEBUG __n => _121
  # DEBUG this => D#55
  _622 = _121 * 4;
  _620 = _852 + _622;
  _122 = *_620;
  if (vc_114 == _122)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __assert_fail ("_switch_hold_vc[input * _input_speedup + vc % _input_speedup] != vc", "routers/iq_router.cpp", 1347, &__PRETTY_FUNCTION__);

  <bb 16>:
  _123 = (long unsigned int) input_112;
  # DEBUG D#1761 => &this_108(D)->_buf
  _846 = MEM[(struct Buffer * * *)this_108(D) + 880B];
  # DEBUG D#53 => D#1761
  # DEBUG __n => _123
  # DEBUG this => D#53
  _756 = _123 * 8;
  _741 = _846 + _756;
  cur_buf_124 = *_741;
  # DEBUG cur_buf => cur_buf_124
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  _619 = (long unsigned int) vc_114;
  # DEBUG D#96 => &cur_buf_124->_vc
  _616 = MEM[(struct VC * * *)cur_buf_124 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _619
  # DEBUG this => D#42
  _615 = _619 * 8;
  _612 = _616 + _615;
  _611 = *_612;
  # DEBUG this => _611
  # DEBUG D#95 => &MEM[(const struct VC *)_611]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _609 = MEM[(struct Flit * * *)_611 + 144B];
  # DEBUG D#91 => D#94
  _732 = MEM[(struct Flit * * *)_611 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_609 == _732)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 1350, &__PRETTY_FUNCTION__);

  <bb 18>:
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  # DEBUG D#43 => &cur_buf_124->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _619
  # DEBUG this => D#42
  _809 = MEM[(eVCState *)_611 + 176B];
  # DEBUG D#21 => _611
  # DEBUG this => D#21
  if (_809 != 3)
    goto <bb 19>;
  else
    goto <bb 21>;

  <bb 19>:
  _125 = this_108(D)->_speculative;
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  # DEBUG D#43 => &cur_buf_124->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _619
  # DEBUG this => D#42
  # DEBUG D#21 => _611
  # DEBUG this => D#21
  _874 = _809 != 2;
  if (_125 <= _874)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __assert_fail ("(cur_buf->GetState(vc) == VC::active) || (_speculative && (cur_buf->GetState(vc) == VC::vc_alloc))", "routers/iq_router.cpp", 1352, &__PRETTY_FUNCTION__);

  <bb 21>:
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  # DEBUG D#186 => &cur_buf_124->_vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _619
  # DEBUG this => D#42
  # DEBUG this => _611
  # DEBUG D#184 => &MEM[(const struct VC *)_611]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_611]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_579 = MEM[(struct Flit * const &)_732];
  # DEBUG f => iftmp.304_579
  if (iftmp.304_579 == 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 1355, &__PRETTY_FUNCTION__);

  <bb 23>:
  _127 = MEM[(const struct Flit *)iftmp.304_579].vc;
  if (vc_114 != _127)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 1356, &__PRETTY_FUNCTION__);

  <bb 25>:
  _128 = MEM[(const struct Flit *)iftmp.304_579].watch;
  if (_128 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _129 = MEM[(const struct Flit *)iftmp.304_579].id;
  # DEBUG D#1762 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1762
  # DEBUG D#1763 => &MEM[(const struct Module *)this_108(D)]._fullname
  _131 = GetSimTime ();
  gWatchOut.410_132 = gWatchOut;
  _134 = std::basic_ostream<char>::operator<< (gWatchOut.410_132, _131);
  # DEBUG __out => _134
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_134, " | ", 3);
  # DEBUG __os => _134
  # DEBUG __str => D#1763
  _135 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1763
  # DEBUG this => D#3
  _556 = (long int) _135;
  # DEBUG this => D#1763
  _545 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1763
  # DEBUG this => D#1
  _426 = std::__ostream_insert<char, std::char_traits<char> > (_134, _545, _556);
  # DEBUG __out => _426
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_426, " | ", 3);
  # DEBUG __out => _426
  # DEBUG __s => "Beginning switch allocation for VC "
  # DEBUG __s => "Beginning switch allocation for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_426, "Beginning switch allocation for VC ", 35);
  _137 = std::basic_ostream<char>::operator<< (_426, vc_114);
  # DEBUG __out => _137
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_137, " at input ", 10);
  _139 = std::basic_ostream<char>::operator<< (_137, input_112);
  # DEBUG __out => _139
  # DEBUG __s => " (front: "
  # DEBUG __s => " (front: "
  std::__ostream_insert<char, std::char_traits<char> > (_139, " (front: ", 9);
  _141 = std::basic_ostream<char>::operator<< (_139, _129);
  # DEBUG __out => _141
  # DEBUG __s => ")."
  # DEBUG __s => ")."
  std::__ostream_insert<char, std::char_traits<char> > (_141, ").", 2);
  # DEBUG this => _141
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_141);
  pretmp_1456 = MEM[(struct VC * * *)cur_buf_124 + 104B];
  pretmp_1486 = pretmp_1456 + _615;
  pretmp_1488 = MEM[(struct VC * const &)pretmp_1486];
  pretmp_1640 = MEM[(eVCState *)pretmp_1488 + 176B];

  <bb 27>:
  # prephitmp_1489 = PHI <_611(25), pretmp_1488(26)>
  # prephitmp_1641 = PHI <_809(25), pretmp_1640(26)>
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  # DEBUG D#43 => &cur_buf_124->_vc
  # DEBUG D#2713 => MEM[(struct VC * * *)cur_buf_124 + 104B]
  # DEBUG D#42 => D#43
  # DEBUG __n => _619
  # DEBUG this => D#42
  # DEBUG D#2712 => D#2713 + _615
  # DEBUG D#2711 => *D#2712
  # DEBUG D#21 => D#2711
  # DEBUG this => D#21
  if (prephitmp_1641 == 3)
    goto <bb 28>;
  else
    goto <bb 47>;

  <bb 28>:
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  # DEBUG D#46 => &cur_buf_124->_vc
  # DEBUG D#42 => D#46
  # DEBUG __n => _619
  # DEBUG this => D#42
  _350 = MEM[(int *)prephitmp_1489 + 192B];
  # DEBUG D#22 => D#2711
  # DEBUG this => D#22
  # DEBUG dest_output => _350
  if (_350 < 0)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  _231 = this_108(D)->D.51790._outputs;
  if (_231 <= _350)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __assert_fail ("(dest_output >= 0) && (dest_output < _outputs)", "routers/iq_router.cpp", 1369, &__PRETTY_FUNCTION__);

  <bb 31>:
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  # DEBUG D#47 => &cur_buf_124->_vc
  # DEBUG D#42 => D#47
  # DEBUG __n => _619
  # DEBUG this => D#42
  _344 = MEM[(int *)prephitmp_1489 + 196B];
  # DEBUG D#23 => D#2711
  # DEBUG this => D#23
  # DEBUG dest_vc => _344
  if (_344 < 0)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:
  _233 = this_108(D)->_vcs;
  if (_233 <= _344)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  __assert_fail ("(dest_vc >= 0) && (dest_vc < _vcs)", "routers/iq_router.cpp", 1371, &__PRETTY_FUNCTION__);

  <bb 34>:
  _234 = (long unsigned int) _350;
  # DEBUG D#1776 => &this_108(D)->_next_buf
  _849 = MEM[(struct BufferState * * *)this_108(D) + 904B];
  # DEBUG D#54 => D#1776
  # DEBUG __n => _234
  # DEBUG this => D#54
  _329 = _234 * 8;
  _318 = _849 + _329;
  dest_buf_236 = *_318;
  # DEBUG dest_buf => dest_buf_236
  _841 = MEM[(struct BufferPolicy * *)dest_buf_236 + 144B];
  # DEBUG D#32 => dest_buf_236
  # DEBUG vc => _344
  # DEBUG this => D#32
  _339 = _841->D.55980._vptr.Module;
  _332 = MEM[(int (*__vtbl_ptr_type) () *)_339 + 56B];
  _330 = OBJ_TYPE_REF(_332;(const struct BufferPolicy)_841->7) (_841, _344);
  if (_330 != 0)
    goto <bb 428>;
  else
    goto <bb 35>;

  <bb 35>:
  _237 = this_108(D)->_output_buffer_size;
  if (_237 != -1)
    goto <bb 36>;
  else
    goto <bb 429>;

  <bb 36>:
  # DEBUG D#1777 => &this_108(D)->_output_buffer
  _894 = MEM[(struct queue * *)this_108(D) + 1016B];
  # DEBUG D#71 => D#1777
  # DEBUG __n => _234
  # DEBUG this => D#71
  _251 = _234 * 80;
  _250 = _894 + _251;
  # DEBUG this => NULL
  # DEBUG this => D#205
  # DEBUG D#201 => &D#205->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#205->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _307 = MEM[(const struct _Deque_iterator &)_250 + 48]._M_node;
  _286 = (long int) _307;
  _273 = MEM[(const struct _Deque_iterator &)_250 + 16]._M_node;
  _215 = (long int) _273;
  _214 = _286 - _215;
  _205 = _214 /[ex] 8;
  _200 = _205 + -1;
  _191 = _200 * 64;
  _181 = MEM[(const struct _Deque_iterator &)_250 + 48]._M_cur;
  _180 = (long int) _181;
  _177 = MEM[(const struct _Deque_iterator &)_250 + 48]._M_first;
  _173 = (long int) _177;
  _171 = _180 - _173;
  _168 = _171 /[ex] 8;
  _167 = _168 + _191;
  _165 = MEM[(const struct _Deque_iterator &)_250 + 16]._M_last;
  _164 = (long int) _165;
  _161 = MEM[(const struct _Deque_iterator &)_250 + 16]._M_cur;
  _160 = (long int) _161;
  _156 = _164 - _160;
  _152 = _156 /[ex] 8;
  _151 = _152 + _167;
  _149 = (size_type) _151;
  _238 = (long unsigned int) _237;
  if (_149 >= _238)
    goto <bb 428>;
  else
    goto <bb 429>;

  <bb 37>:
  # DEBUG D#1778 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1778
  # DEBUG D#1779 => &MEM[(const struct Module *)this_108(D)]._fullname
  _241 = GetSimTime ();
  gWatchOut.410_242 = gWatchOut;
  _244 = std::basic_ostream<char>::operator<< (gWatchOut.410_242, _241);
  # DEBUG __out => _244
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_244, " | ", 3);
  # DEBUG __os => _244
  # DEBUG __str => D#1779
  _245 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1779
  # DEBUG this => D#3
  _235 = (long int) _245;
  # DEBUG this => D#1779
  _232 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1779
  # DEBUG this => D#1
  _230 = std::__ostream_insert<char, std::char_traits<char> > (_244, _232, _235);
  # DEBUG __out => _230
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_230, " | ", 3);
  # DEBUG __out => _230
  # DEBUG __s => "  VC "
  # DEBUG __s => "  VC "
  std::__ostream_insert<char, std::char_traits<char> > (_230, "  VC ", 5);
  _247 = std::basic_ostream<char>::operator<< (_230, _344);
  # DEBUG __out => _247
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_247, " at output ", 11);
  _249 = std::basic_ostream<char>::operator<< (_247, _350);
  # DEBUG __out => _249
  # DEBUG __s => " is full."
  # DEBUG __s => " is full."
  std::__ostream_insert<char, std::char_traits<char> > (_249, " is full.", 9);
  # DEBUG this => _249
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_249);

  <bb 38>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _831 = MEM[(int *)dest_buf_236 + 100B];
  # DEBUG D#27 => dest_buf_236
  _832 = MEM[(int *)dest_buf_236 + 104B];
  # DEBUG D#27 => dest_buf_236
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (_831 < _832)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  BufferState::_ZNK11BufferState6IsFullEv.isra.23.part.24 ();

  <bb 40>:
  if (_831 == _832)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  iftmp.414_252 = STALL_BUFFER_FULL;
  goto <bb 43>;

  <bb 42>:
  iftmp.414_253 = STALL_BUFFER_RESERVED;

  <bb 43>:
  # iftmp.414_32 = PHI <iftmp.414_252(41), iftmp.414_253(42)>
  iter$_M_cur_1373->second.second = iftmp.414_32;
  goto <bb 157>;

  <bb 44>:
  _257 = MEM[(const struct Flit *)iftmp.304_579].watch;
  if (_257 != 0)
    goto <bb 46>;
  else
    goto <bb 45>;

  <bb 45>:

  <bb 46>:
  # prephitmp_1638 = PHI <1(44), watched_1(45), watched_1(429)>
  # DEBUG watched => NULL
  goto <bb 157>;

  <bb 47>:
  _142 = this_108(D)->_speculative;
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  # DEBUG D#43 => &cur_buf_124->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _619
  # DEBUG this => D#42
  # DEBUG D#21 => D#2711
  # DEBUG this => D#21
  _1540 = prephitmp_1641 != 2;
  if (_142 <= _1540)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  __assert_fail ("_speculative && (cur_buf->GetState(vc) == VC::vc_alloc)", "routers/iq_router.cpp", 1389, &__PRETTY_FUNCTION__);

  <bb 49>:
  _143 = MEM[(const struct Flit *)iftmp.304_579].head;
  if (_143 != 0)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 1390, &__PRETTY_FUNCTION__);

  <bb 51>:
  # DEBUG this => cur_buf_124
  # DEBUG vc => vc_114
  # DEBUG D#44 => &cur_buf_124->_vc
  # DEBUG D#42 => D#44
  # DEBUG __n => _619
  # DEBUG this => D#42
  _896 = VC::GetRouteSet (prephitmp_1489);
  # DEBUG route_set => _896
  if (_896 == 0B)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  __assert_fail ("route_set", "routers/iq_router.cpp", 1398, &__PRETTY_FUNCTION__);

  <bb 53>:
  _146 = OutputSet::GetSet (_896);
  # DEBUG this => &setlist
  # DEBUG __x => _146
  # DEBUG D#2707 => &_146->_M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => D#2707
  # DEBUG this => D#2707
  # DEBUG __a => NULL
  # DEBUG D#1710 => &MEM[(const struct _Rb_tree &)D#2707]._M_impl._M_key_compare
  # DEBUG D#1709 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1709
  # DEBUG __comp => D#1710
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG D.97154 => NULL
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_node_count = 0;
  # DEBUG this => D#1709
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&setlist]._M_header;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&setlist]._M_header;
  _1314 = MEM[(struct _Rb_tree_node_base * *)_146 + 16B];
  # DEBUG D#272 => D#2707
  # DEBUG this => D#272
  if (_1314 != 0B)
    goto <bb 54>;
  else
    goto <bb 61>;

  <bb 54>:
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG D#273 => D#2707
  # DEBUG this => D#273
  # DEBUG this => &setlist._M_t
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => &setlist._M_t
  __an._M_t = &setlist._M_t;
  __x_1316 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (&setlist._M_t, _1314, &MEM[(struct _Rb_tree *)&setlist]._M_impl._M_header, &__an);
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)&setlist + 16] = __x_1316;
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => __x_1316

  <bb 55>:
  # __x_1317 = PHI <__x_1316(54), __x_1318(56)>
  # DEBUG __x => __x_1317
  __x_1318 = __x_1317->_M_left;
  if (__x_1318 == 0B)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  goto <bb 55>;

  <bb 57>:
  # __x_1601 = PHI <__x_1317(55)>
  MEM[(struct _Rb_tree_node_base * &)&setlist + 24] = __x_1601;
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => __x_1316

  <bb 58>:
  # __x_1319 = PHI <__x_1316(57), __x_1320(59)>
  # DEBUG __x => __x_1319
  __x_1320 = __x_1319->_M_right;
  if (__x_1320 == 0B)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 58>;

  <bb 60>:
  # __x_1600 = PHI <__x_1319(58)>
  MEM[(struct _Rb_tree_node_base * &)&setlist + 32] = __x_1600;
  _1321 = MEM[(const struct _Rb_tree &)_146]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&setlist]._M_impl._M_node_count = _1321;

  <bb 61>:
  # prephitmp_1532 = PHI <_1321(60), 0(53)>
  # prephitmp_1526 = PHI <__x_1601(60), &MEM[(struct _Rb_tree_impl *)&setlist]._M_header(53)>
  # prephitmp_1527 = PHI <__x_1316(60), 0B(53)>
  _148 = this_108(D)->_noq;
  if (_148 != 0)
    goto <bb 62>;
  else
    goto <bb 64>;

  <bb 62>:
  # DEBUG this => &setlist
  # DEBUG D#164 => &setlist._M_t
  # DEBUG D#163 => D#164
  # DEBUG this => D#163
  if (prephitmp_1532 != 1)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  __assert_fail ("!_noq || (setlist.size() == 1)", "routers/iq_router.cpp", 1402, &__PRETTY_FUNCTION__);

  <bb 64>:
  # DEBUG this => &setlist
  # DEBUG D#275 => &setlist._M_t
  # DEBUG D#2710 => MEM[(struct _Rb_tree_node_base * *)&setlist + 24B]
  # DEBUG D#274 => D#275
  # DEBUG this => D#274
  # DEBUG this => NULL
  # DEBUG __x => D#2710
  # DEBUG iset$_M_node => D#2710
  # DEBUG iset$_M_node => D#2710
  # DEBUG watched => watched_1
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65545
  if (&MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header != prephitmp_1526)
    goto <bb 65>;
  else
    goto <bb 155>;

  <bb 65>:
  # DEBUG this => &iset
  # DEBUG this => D#2710
  # DEBUG D#1764 => &MEM[(const struct _Rb_tree_node *)D#2710]._M_value_field
  # DEBUG __r => D#1764
  dest_output_77 = MEM[(const struct sSetElement *)prephitmp_1526 + 32B].output_port;
  # DEBUG dest_output => dest_output_77
  if (dest_output_77 < 0)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  __assert_fail ("(dest_output >= 0) && (dest_output < _outputs)", "routers/iq_router.cpp", 1409, &__PRETTY_FUNCTION__);

  <bb 67>:
  _1405 = this_108(D)->D.51790._outputs;
  if (dest_output_77 >= _1405)
    goto <bb 66>;
  else
    goto <bb 71>;

  <bb 68>:
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_944
  # DEBUG D#1764 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_944]._M_value_field
  # DEBUG __r => D#1764
  dest_output_153 = MEM[(const struct sSetElement *)iset$_M_node_944 + 32B].output_port;
  # DEBUG dest_output => dest_output_153
  if (dest_output_153 < 0)
    goto <bb 66>;
  else
    goto <bb 69>;

  <bb 69>:
  _154 = this_108(D)->D.51790._outputs;
  if (dest_output_153 >= _154)
    goto <bb 66>;
  else
    goto <bb 70>;

  <bb 70>:
  goto <bb 72>;

  <bb 71>:
  _902 = _123 * 24;
  _900 = _619 * 4;

  <bb 72>:
  # watched_1409 = PHI <watched_1(71), watched_3(70)>
  # dest_output_96 = PHI <dest_output_77(71), dest_output_153(70)>
  # iset$_M_node_75 = PHI <prephitmp_1526(71), iset$_M_node_944(70)>
  # DEBUG iset$_M_node => iset$_M_node_75
  # DEBUG watched => watched_1409
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65545
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_75
  # DEBUG D#1764 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_75]._M_value_field
  # DEBUG __r => D#1764
  # DEBUG dest_output => dest_output_96
  _155 = (long unsigned int) dest_output_96;
  # DEBUG D#1765 => &this_108(D)->_next_buf
  _850 = MEM[(struct BufferState * * *)this_108(D) + 904B];
  # DEBUG D#54 => D#1765
  # DEBUG __n => _155
  # DEBUG this => D#54
  _898 = _155 * 8;
  _899 = _850 + _898;
  dest_buf_157 = *_899;
  # DEBUG dest_buf => dest_buf_157
  # DEBUG elig => 0
  # DEBUG cred => 0
  _158 = this_108(D)->_spec_check_elig;
  if (_158 != 0)
    goto <bb 73>;
  else
    goto <bb 121>;

  <bb 73>:
  _159 = this_108(D)->_noq;
  if (_159 != 0)
    goto <bb 74>;
  else
    goto <bb 431>;

  <bb 74>:
  # DEBUG D#1766 => &this_108(D)->_noq_next_output_port
  _888 = MEM[(struct vector * *)this_108(D) + 1152B];
  # DEBUG D#70 => D#1766
  # DEBUG __n => _123
  # DEBUG this => D#70
  _903 = _888 + _902;
  _853 = MEM[(int * *)_903];
  # DEBUG __n => _619
  # DEBUG this => D#55
  _901 = _853 + _900;
  _162 = *_901;
  if (_162 >= 0)
    goto <bb 430>;
  else
    goto <bb 431>;

  <bb 75>:
  __assert_fail ("!_routing_delay", "routers/iq_router.cpp", 1428, &__PRETTY_FUNCTION__);

  <bb 76>:
  # DEBUG D#1767 => &this_108(D)->_noq_next_vc_start
  _889 = MEM[(struct vector * *)this_108(D) + 1176B];
  # DEBUG D#70 => D#1767
  # DEBUG __n => _123
  # DEBUG this => D#70
  _909 = _889 + _902;
  _854 = MEM[(int * *)_909];
  # DEBUG __n => _619
  # DEBUG this => D#55
  _907 = _854 + _900;
  dest_vc_166 = *_907;
  # DEBUG vc_start => dest_vc_166
  # DEBUG D#1768 => &this_108(D)->_noq_next_vc_end
  _890 = MEM[(struct vector * *)this_108(D) + 1200B];
  # DEBUG D#70 => D#1768
  # DEBUG __n => _123
  # DEBUG this => D#70
  _905 = _890 + _902;
  _855 = MEM[(int * *)_905];
  # DEBUG __n => _619
  # DEBUG this => D#55
  _904 = _855 + _900;
  vc_end_169 = *_904;
  # DEBUG vc_end => vc_end_169

  <bb 77>:
  # dest_vc_10 = PHI <dest_vc_166(76), dest_vc_172(431)>
  # vc_end_11 = PHI <vc_end_169(76), vc_end_174(431)>
  # DEBUG vc_end => vc_end_11
  # DEBUG vc_start => dest_vc_10
  if (dest_vc_10 < 0)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  _175 = this_108(D)->_vcs;
  if (dest_vc_10 >= _175)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  __assert_fail ("vc_start >= 0 && vc_start < _vcs", "routers/iq_router.cpp", 1435, &__PRETTY_FUNCTION__);

  <bb 80>:
  _878 = vc_end_11 >= _175;
  _1008 = vc_end_11 < 0;
  _1091 = _878 | _1008;
  if (_1091 != 0)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  __assert_fail ("vc_end >= 0 && vc_end < _vcs", "routers/iq_router.cpp", 1436, &__PRETTY_FUNCTION__);

  <bb 82>:
  if (dest_vc_10 > vc_end_11)
    goto <bb 85>;
  else
    goto <bb 83>;

  <bb 83>:
  # DEBUG dest_vc => dest_vc_10
  # DEBUG elig => 0
  # DEBUG dest_vc => dest_vc_10
  # DEBUG elig => 0
  # DEBUG dest_vc => dest_vc_10
  # DEBUG elig => 0
  # DEBUG this => dest_buf_157
  # DEBUG vc => dest_vc_10
  _1548 = dest_buf_157->_vcs;
  if (dest_vc_10 >= _1548)
    goto <bb 84>;
  else
    goto <bb 91>;

  <bb 84>:
  __assert_fail ("( vc >= 0 ) && ( vc < _vcs )", "./buffer_state.hpp", 212, &__PRETTY_FUNCTION__);

  <bb 85>:
  __assert_fail ("vc_end >= vc_start", "routers/iq_router.cpp", 1437, &__PRETTY_FUNCTION__);

  <bb 86>:
  # DEBUG dest_vc => dest_vc_183
  # DEBUG elig => elig_7
  if (dest_vc_183 < 0)
    goto <bb 88>;
  else
    goto <bb 87>;

  <bb 87>:
  # DEBUG dest_vc => dest_vc_183
  # DEBUG elig => elig_7
  _176 = this_108(D)->_vcs;
  if (_176 <= dest_vc_183)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  __assert_fail ("(dest_vc >= 0) && (dest_vc < _vcs)", "routers/iq_router.cpp", 1440, &__PRETTY_FUNCTION__);

  <bb 89>:
  # DEBUG this => dest_buf_157
  # DEBUG vc => dest_vc_183
  _1105 = dest_buf_157->_vcs;
  if (dest_vc_183 >= _1105)
    goto <bb 84>;
  else
    goto <bb 90>;

  <bb 90>:
  goto <bb 92>;

  <bb 91>:
  _933 = _155 * 80;

  <bb 92>:
  # elig_21 = PHI <0(91), elig_7(90)>
  # dest_vc_868 = PHI <dest_vc_10(91), dest_vc_183(90)>
  # DEBUG dest_vc => dest_vc_868
  # DEBUG elig => elig_21
  # DEBUG this => dest_buf_157
  # DEBUG vc => dest_vc_868
  _1322 = (long unsigned int) dest_vc_868;
  # DEBUG D#51 => &dest_buf_157->_in_use_by
  _1323 = MEM[(int * *)dest_buf_157 + 152B];
  # DEBUG D#48 => D#51
  # DEBUG __n => _1322
  # DEBUG this => D#48
  _1324 = _1322 * 4;
  _1325 = _1323 + _1324;
  _1326 = *_1325;
  if (_1326 < 0)
    goto <bb 93>;
  else
    goto <bb 98>;

  <bb 93>:
  _179 = this_108(D)->_output_buffer_size;
  if (_179 == -1)
    goto <bb 432>;
  else
    goto <bb 94>;

  <bb 94>:
  # DEBUG D#1771 => &this_108(D)->_output_buffer
  _895 = MEM[(struct queue * *)this_108(D) + 1016B];
  # DEBUG D#71 => D#1771
  # DEBUG __n => _155
  # DEBUG this => D#71
  _934 = _895 + _933;
  # DEBUG this => NULL
  # DEBUG this => D#205
  # DEBUG D#201 => &D#205->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#205->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _910 = MEM[(const struct _Deque_iterator &)_934 + 48]._M_node;
  _911 = (long int) _910;
  _912 = MEM[(const struct _Deque_iterator &)_934 + 16]._M_node;
  _913 = (long int) _912;
  _914 = _911 - _913;
  _915 = _914 /[ex] 8;
  _916 = _915 + -1;
  _917 = _916 * 64;
  _918 = MEM[(const struct _Deque_iterator &)_934 + 48]._M_cur;
  _919 = (long int) _918;
  _920 = MEM[(const struct _Deque_iterator &)_934 + 48]._M_first;
  _921 = (long int) _920;
  _922 = _919 - _921;
  _923 = _922 /[ex] 8;
  _924 = _917 + _923;
  _925 = MEM[(const struct _Deque_iterator &)_934 + 16]._M_last;
  _926 = (long int) _925;
  _927 = MEM[(const struct _Deque_iterator &)_934 + 16]._M_cur;
  _928 = (long int) _927;
  _929 = _926 - _928;
  _930 = _929 /[ex] 8;
  _931 = _924 + _930;
  _932 = (size_type) _931;
  _182 = (long unsigned int) _179;
  if (_182 > _932)
    goto <bb 432>;
  else
    goto <bb 98>;

  <bb 95>:
  _842 = MEM[(struct BufferPolicy * *)dest_buf_157 + 144B];
  # DEBUG D#32 => dest_buf_157
  # DEBUG vc => dest_vc_868
  # DEBUG this => D#32
  _935 = _842->D.55980._vptr.Module;
  _936 = MEM[(int (*__vtbl_ptr_type) () *)_935 + 56B];
  _937 = OBJ_TYPE_REF(_936;(const struct BufferPolicy)_842->7) (_842, dest_vc_868);

  <bb 96>:
  if (_937 != 0)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  pretmp_1633 = this_108(D)->_spec_check_cred;
  goto <bb 434>;

  <bb 98>:
  # elig_7 = PHI <elig_21(94), 1(96), elig_21(92)>
  # DEBUG elig => elig_7
  dest_vc_183 = dest_vc_868 + 1;
  # DEBUG dest_vc => dest_vc_183
  # DEBUG dest_vc => dest_vc_183
  # DEBUG elig => elig_7
  if (vc_end_11 < dest_vc_183)
    goto <bb 99>;
  else
    goto <bb 86>;

  <bb 99>:
  # elig_1609 = PHI <elig_7(98)>
  # DEBUG cred => 0
  # DEBUG elig => elig_1609
  _189 = this_108(D)->_spec_check_elig;
  if (elig_1609 >= _189)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  pretmp_1645 = this_108(D)->_spec_check_cred;
  goto <bb 122>;

  <bb 101>:
  _190 = MEM[(const struct Flit *)iftmp.304_579].watch;
  if (_190 != 0)
    goto <bb 103>;
  else
    goto <bb 102>;

  <bb 102>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_BUFFER_BUSY.423_201 = STALL_BUFFER_BUSY;
  iter$_M_cur_1373->second.second = STALL_BUFFER_BUSY.423_201;
  goto <bb 153>;

  <bb 103>:
  # DEBUG D#1772 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1772
  # DEBUG D#1773 => &MEM[(const struct Module *)this_108(D)]._fullname
  _193 = GetSimTime ();
  goto <bb 105>;

<L420>:
  goto <bb 425> (<L408>);

  <bb 105>:
  gWatchOut.410_194 = gWatchOut;
  _196 = std::basic_ostream<char>::operator<< (gWatchOut.410_194, _193);
  goto <bb 107>;

<L421>:
  goto <bb 425> (<L408>);

  <bb 107>:
  # DEBUG __out => _196
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_196, " | ", 3);
  goto <bb 109>;

<L422>:
  goto <bb 425> (<L408>);

  <bb 109>:
  # DEBUG __os => _196
  # DEBUG __str => D#1773
  _197 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1773
  # DEBUG this => D#3
  _938 = (long int) _197;
  # DEBUG this => D#1773
  _939 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1773
  # DEBUG this => D#1
  _940 = std::__ostream_insert<char, std::char_traits<char> > (_196, _939, _938);
  goto <bb 111>;

<L423>:
  goto <bb 425> (<L408>);

  <bb 111>:
  # DEBUG __out => _940
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_940, " | ", 3);
  goto <bb 113>;

<L424>:
  goto <bb 425> (<L408>);

  <bb 113>:
  # DEBUG __out => _940
  # DEBUG __s => "  Output "
  # DEBUG __s => "  Output "
  std::__ostream_insert<char, std::char_traits<char> > (_940, "  Output ", 9);
  goto <bb 115>;

<L425>:
  goto <bb 425> (<L408>);

  <bb 115>:
  _199 = std::basic_ostream<char>::operator<< (_940, dest_output_96);
  goto <bb 117>;

<L426>:
  goto <bb 425> (<L408>);

  <bb 117>:
  # DEBUG __out => _199
  # DEBUG __s => " has no suitable VCs available."
  # DEBUG __s => " has no suitable VCs available."
  std::__ostream_insert<char, std::char_traits<char> > (_199, " has no suitable VCs available.", 31);
  goto <bb 119>;

<L427>:
  goto <bb 425> (<L408>);

  <bb 119>:
  # DEBUG this => _199
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_199);
  goto <bb 102>;

<L428>:
  goto <bb 425> (<L408>);

  <bb 121>:
  pretmp_1644 = this_108(D)->_spec_check_cred;

  <bb 122>:
  # cred_1565 = PHI <0(121), 0(100), 1(434)>
  # prephitmp_1646 = PHI <pretmp_1644(121), pretmp_1645(100), prephitmp_1634(434)>
  if (cred_1565 >= prephitmp_1646)
    goto <bb 147>;
  else
    goto <bb 123>;

  <bb 123>:
  _204 = MEM[(const struct Flit *)iftmp.304_579].watch;
  if (_204 != 0)
    goto <bb 125>;
  else
    goto <bb 124>;

  <bb 124>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _833 = MEM[(int *)dest_buf_157 + 100B];
  # DEBUG D#27 => dest_buf_157
  _834 = MEM[(int *)dest_buf_157 + 104B];
  # DEBUG D#27 => dest_buf_157
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (_833 < _834)
    goto <bb 39>;
  else
    goto <bb 143>;

  <bb 125>:
  # DEBUG D#1774 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1774
  # DEBUG D#1775 => &MEM[(const struct Module *)this_108(D)]._fullname
  _207 = GetSimTime ();
  goto <bb 127>;

<L429>:
  goto <bb 425> (<L408>);

  <bb 127>:
  gWatchOut.410_208 = gWatchOut;
  _210 = std::basic_ostream<char>::operator<< (gWatchOut.410_208, _207);
  goto <bb 129>;

<L430>:
  goto <bb 425> (<L408>);

  <bb 129>:
  # DEBUG __out => _210
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_210, " | ", 3);
  goto <bb 131>;

<L431>:
  goto <bb 425> (<L408>);

  <bb 131>:
  # DEBUG __os => _210
  # DEBUG __str => D#1775
  _211 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1775
  # DEBUG this => D#3
  _941 = (long int) _211;
  # DEBUG this => D#1775
  _942 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1775
  # DEBUG this => D#1
  _943 = std::__ostream_insert<char, std::char_traits<char> > (_210, _942, _941);
  goto <bb 133>;

<L432>:
  goto <bb 425> (<L408>);

  <bb 133>:
  # DEBUG __out => _943
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_943, " | ", 3);
  goto <bb 135>;

<L433>:
  goto <bb 425> (<L408>);

  <bb 135>:
  # DEBUG __out => _943
  # DEBUG __s => "  All suitable VCs at output "
  # DEBUG __s => "  All suitable VCs at output "
  std::__ostream_insert<char, std::char_traits<char> > (_943, "  All suitable VCs at output ", 29);
  goto <bb 137>;

<L434>:
  goto <bb 425> (<L408>);

  <bb 137>:
  _213 = std::basic_ostream<char>::operator<< (_943, dest_output_96);
  goto <bb 139>;

<L435>:
  goto <bb 425> (<L408>);

  <bb 139>:
  # DEBUG __out => _213
  # DEBUG __s => " are full."
  # DEBUG __s => " are full."
  std::__ostream_insert<char, std::char_traits<char> > (_213, " are full.", 10);
  goto <bb 141>;

<L436>:
  goto <bb 425> (<L408>);

  <bb 141>:
  # DEBUG this => _213
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_213);
  goto <bb 124>;

<L437>:
  goto <bb 425> (<L408>);

  <bb 143>:
  if (_833 == _834)
    goto <bb 144>;
  else
    goto <bb 145>;

  <bb 144>:
  iftmp.424_216 = STALL_BUFFER_FULL;
  goto <bb 146>;

  <bb 145>:
  iftmp.424_217 = STALL_BUFFER_RESERVED;

  <bb 146>:
  # iftmp.424_37 = PHI <iftmp.424_216(144), iftmp.424_217(145)>
  iter$_M_cur_1373->second.second = iftmp.424_37;
  goto <bb 153>;

  <bb 147>:
  _220 = IQRouter::_SWAllocAddReq (this_108(D), input_112, vc_114, dest_output_96);
  goto <bb 149>;

<L438>:
  goto <bb 425> (<L408>);

  <bb 149>:
  # DEBUG requested => _220
  if (_220 != 0)
    goto <bb 150>;
  else
    goto <bb 152>;

  <bb 150>:
  _221 = MEM[(const struct Flit *)iftmp.304_579].watch;
  if (_221 != 0)
    goto <bb 152>;
  else
    goto <bb 151>;

  <bb 151>:

  <bb 152>:
  # prephitmp_1624 = PHI <1(150), watched_1409(149), watched_1409(151)>
  # DEBUG watched => NULL

  <bb 153>:
  # watched_3 = PHI <watched_1409(102), watched_1409(146), prephitmp_1624(152)>
  # DEBUG watched => watched_3
  # DEBUG this => &iset
  iset$_M_node_944 = std::_Rb_tree_increment (iset$_M_node_75);
  # DEBUG iset$_M_node => iset$_M_node_944
  # DEBUG iset$_M_node => iset$_M_node_944
  # DEBUG watched => watched_3
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65545
  if (&MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header != iset$_M_node_944)
    goto <bb 68>;
  else
    goto <bb 154>;

  <bb 154>:
  # watched_1610 = PHI <watched_3(153)>
  pretmp_1642 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];

  <bb 155>:
  # watched_1542 = PHI <watched_1610(154), watched_1(64)>
  # prephitmp_1643 = PHI <pretmp_1642(154), prephitmp_1527(64)>
  # DEBUG D#1838 => {CLOBBER}
  # DEBUG iset$_M_node => D#1838
  # DEBUG this => &setlist
  # DEBUG this => &setlist._M_t
  # DEBUG D#89 => &setlist._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&setlist._M_t, prephitmp_1643);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  setlist ={v} {CLOBBER};
  goto <bb 158>;

  <bb 156>:
  # watched_1612 = PHI <watched_1(5)>
  setlist ={v} {CLOBBER};
  goto <bb 161>;

  <bb 157>:
  # watched_4 = PHI <watched_1(43), prephitmp_1638(46)>
  # DEBUG watched => watched_4
  setlist ={v} {CLOBBER};

  <bb 158>:
  # watched_5 = PHI <watched_1542(155), watched_4(157)>
  # DEBUG watched => watched_5
  # DEBUG this => &iter
  iter$_M_cur_946 = iter$_M_cur_1373 + 16;
  # DEBUG iter$_M_cur => iter$_M_cur_946
  if (iter$_M_cur_946 == iter$_M_last_1224)
    goto <bb 159>;
  else
    goto <bb 3>;

  <bb 159>:
  # DEBUG this => &iter
  iter$_M_node_1329 = iter$_M_node_1152 + 8;
  # DEBUG this => &iter
  # DEBUG __new_node => iter$_M_node_1329
  # DEBUG iter$_M_node => iter$_M_node_1329
  iter$_M_cur_1330 = MEM[(struct pair * *)iter$_M_node_1152 + 8B];
  # DEBUG __size => 16
  iter$_M_last_1331 = iter$_M_cur_1330 + 512;
  # DEBUG iter$_M_last => iter$_M_last_1331
  # DEBUG iter$_M_cur => iter$_M_cur_1330
  goto <bb 3>;

  <bb 160>:
  # watched_1611 = PHI <watched_1(4)>

  <bb 161>:
  # watched_1597 = PHI <watched_1611(160), watched_1612(156)>
  iter ={v} {CLOBBER};
  if (watched_1597 != 0)
    goto <bb 162>;
  else
    goto <bb 448>;

  <bb 162>:
  _272 = this_108(D)->_sw_allocator;
  # DEBUG D#1781 => &_272->D.58179
  # DEBUG this => D#1781
  _275 = GetSimTime ();
  gWatchOut.410_276 = gWatchOut;
  _278 = std::basic_ostream<char>::operator<< (gWatchOut.410_276, _275);
  # DEBUG __out => _278
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_278, " | ", 3);
  # DEBUG __os => _278
  # DEBUG __str => NULL
  _262 = MEM[(long unsigned int *)_272 + 48B];
  # DEBUG this => D#3
  _948 = (long int) _262;
  # DEBUG this => NULL
  _949 = MEM[(char * *)_272 + 40B];
  # DEBUG this => D#1
  _950 = std::__ostream_insert<char, std::char_traits<char> > (_278, _949, _948);
  std::operator<< <std::char_traits<char> > (_950, " | ");
  _280 = this_108(D)->_sw_allocator;
  _281 = _280->D.58179._vptr.Module;
  _282 = MEM[(int (*__vtbl_ptr_type) () *)_281 + 104B];
  gWatchOut.410_283 = gWatchOut;
  OBJ_TYPE_REF(_282;(const struct Allocator)_280->13) (_280, gWatchOut.410_283);
  _285 = this_108(D)->_spec_sw_allocator;
  if (_285 != 0B)
    goto <bb 163>;
  else
    goto <bb 447>;

  <bb 163>:
  # DEBUG D#1782 => &_285->D.58179
  # DEBUG this => D#1782
  _288 = GetSimTime ();
  gWatchOut.410_289 = gWatchOut;
  _291 = std::basic_ostream<char>::operator<< (gWatchOut.410_289, _288);
  # DEBUG __out => _291
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_291, " | ", 3);
  # DEBUG __os => _291
  # DEBUG __str => NULL
  _951 = MEM[(long unsigned int *)_285 + 48B];
  # DEBUG this => D#3
  _952 = (long int) _951;
  # DEBUG this => NULL
  _953 = MEM[(char * *)_285 + 40B];
  # DEBUG this => D#1
  _954 = std::__ostream_insert<char, std::char_traits<char> > (_291, _953, _952);
  std::operator<< <std::char_traits<char> > (_954, " | ");
  _293 = this_108(D)->_spec_sw_allocator;
  _294 = _293->D.58179._vptr.Module;
  _295 = MEM[(int (*__vtbl_ptr_type) () *)_294 + 104B];
  gWatchOut.410_296 = gWatchOut;
  OBJ_TYPE_REF(_295;(const struct Allocator)_293->13) (_293, gWatchOut.410_296);
  goto <bb 447>;

  <bb 164>:
  # _1472 = PHI <_1521(448), _16(447)>
  _303 = _1472->D.58179._vptr.Module;
  _304 = MEM[(int (*__vtbl_ptr_type) () *)_303 + 64B];
  OBJ_TYPE_REF(_304;(struct Allocator)_1472->8) (_1472);
  if (watched_1597 != 0)
    goto <bb 166>;
  else
    goto <bb 165>;

  <bb 165>:
  goto <bb 168>;

  <bb 166>:
  _306 = this_108(D)->_sw_allocator;
  # DEBUG D#1783 => &_306->D.58179
  # DEBUG this => D#1783
  _309 = GetSimTime ();
  gWatchOut.410_310 = gWatchOut;
  _312 = std::basic_ostream<char>::operator<< (gWatchOut.410_310, _309);
  # DEBUG __out => _312
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_312, " | ", 3);
  # DEBUG __os => _312
  # DEBUG __str => NULL
  _955 = MEM[(long unsigned int *)_306 + 48B];
  # DEBUG this => D#3
  _956 = (long int) _955;
  # DEBUG this => NULL
  _957 = MEM[(char * *)_306 + 40B];
  # DEBUG this => D#1
  _958 = std::__ostream_insert<char, std::char_traits<char> > (_312, _957, _956);
  std::operator<< <std::char_traits<char> > (_958, " | ");
  gWatchOut.410_314 = gWatchOut;
  _315 = this_108(D)->_sw_allocator;
  Allocator::PrintGrants (_315, gWatchOut.410_314);
  _317 = this_108(D)->_spec_sw_allocator;
  if (_317 != 0B)
    goto <bb 167>;
  else
    goto <bb 165>;

  <bb 167>:
  # DEBUG D#1784 => &_317->D.58179
  # DEBUG this => D#1784
  _320 = GetSimTime ();
  gWatchOut.410_321 = gWatchOut;
  _323 = std::basic_ostream<char>::operator<< (gWatchOut.410_321, _320);
  # DEBUG __out => _323
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_323, " | ", 3);
  # DEBUG __os => _323
  # DEBUG __str => NULL
  _959 = MEM[(long unsigned int *)_317 + 48B];
  # DEBUG this => D#3
  _960 = (long int) _959;
  # DEBUG this => NULL
  _961 = MEM[(char * *)_317 + 40B];
  # DEBUG this => D#1
  _962 = std::__ostream_insert<char, std::char_traits<char> > (_323, _961, _960);
  std::operator<< <std::char_traits<char> > (_962, " | ");
  gWatchOut.410_325 = gWatchOut;
  _326 = this_108(D)->_spec_sw_allocator;
  Allocator::PrintGrants (_326, gWatchOut.410_325);

  <bb 168>:
  # DEBUG D#1785 => &this_108(D)->_sw_alloc_vcs
  # DEBUG this => D#1785
  # DEBUG D#67 => &D#1785->D.45936._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#67
  iter$_M_cur_963 = MEM[(const struct iterator &)this_108(D) + 688]._M_cur;
  # DEBUG iter$_M_cur => iter$_M_cur_963
  iter$_M_last_965 = MEM[(const struct iterator &)this_108(D) + 688]._M_last;
  # DEBUG iter$_M_last => iter$_M_last_965
  iter$_M_node_966 = MEM[(const struct iterator &)this_108(D) + 688]._M_node;
  # DEBUG iter$_M_node => iter$_M_node_966

  <bb 169>:
  # iter$_M_cur_1150 = PHI <iter$_M_cur_963(168), iter$_M_cur_1333(226)>
  # iter$_M_last_1369 = PHI <iter$_M_last_965(168), iter$_M_last_1334(226)>
  # iter$_M_node_1367 = PHI <iter$_M_node_966(168), iter$_M_node_1332(226)>
  # DEBUG iter$_M_node => iter$_M_node_1367
  # DEBUG iter$_M_last => iter$_M_last_1369
  # DEBUG iter$_M_cur => iter$_M_cur_1150

  <bb 170>:
  # iter$_M_cur_1370 = PHI <iter$_M_cur_1150(169), iter$_M_cur_1009(225)>
  # DEBUG iter$_M_cur => iter$_M_cur_1370
  # DEBUG D#1805 => &this_108(D)->_sw_alloc_vcs
  # DEBUG this => D#1805
  # DEBUG D#68 => &D#1805->D.45936._M_impl._M_finish
  # DEBUG this => &D.65556
  # DEBUG __x => D#68
  _967 = MEM[(const struct iterator &)this_108(D) + 720]._M_cur;
  # DEBUG D#1846 => MEM[(const struct iterator &)this_108(D) + 720]._M_first
  # DEBUG D.110623 => D#1846
  # DEBUG D#1845 => MEM[(const struct iterator &)this_108(D) + 720]._M_last
  # DEBUG D.110624 => D#1845
  # DEBUG D#1844 => MEM[(const struct iterator &)this_108(D) + 720]._M_node
  # DEBUG D.110625 => D#1844
  # DEBUG __x => &iter
  # DEBUG __y => &D.65556
  # DEBUG D#147 => &iter
  # DEBUG D#148 => &D.65556
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (_967 != iter$_M_cur_1370)
    goto <bb 171>;
  else
    goto <bb 227>;

  <bb 171>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  time_331 = iter$_M_cur_1370->first;
  # DEBUG time => time_331
  if (time_331 >= 0)
    goto <bb 172>;
  else
    goto <bb 173>;

  <bb 172>:
  # _1602 = PHI <_967(171)>
  goto <bb 228>;

  <bb 173>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _334 = GetSimTime ();
  _335 = this_108(D)->_sw_alloc_delay;
  _336 = _334 + _335;
  _337 = _336 + -1;
  iter$_M_cur_1370->first = _337;
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  input_340 = iter$_M_cur_1370->second.first.first;
  # DEBUG input => input_340
  if (input_340 < 0)
    goto <bb 175>;
  else
    goto <bb 174>;

  <bb 174>:
  _341 = this_108(D)->D.51790._inputs;
  if (input_340 >= _341)
    goto <bb 175>;
  else
    goto <bb 176>;

  <bb 175>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 1506, &__PRETTY_FUNCTION__);

  <bb 176>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  vc_342 = iter$_M_cur_1370->second.first.second;
  # DEBUG vc => vc_342
  if (vc_342 < 0)
    goto <bb 178>;
  else
    goto <bb 177>;

  <bb 177>:
  _343 = this_108(D)->_vcs;
  if (vc_342 >= _343)
    goto <bb 178>;
  else
    goto <bb 179>;

  <bb 178>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 1508, &__PRETTY_FUNCTION__);

  <bb 179>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _345 = iter$_M_cur_1370->second.second;
  if (_345 < -1)
    goto <bb 224>;
  else
    goto <bb 180>;

  <bb 180>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  if (_345 != -1)
    goto <bb 181>;
  else
    goto <bb 182>;

  <bb 181>:
  __assert_fail ("iter->second.second == -1", "routers/iq_router.cpp", 1514, &__PRETTY_FUNCTION__);

  <bb 182>:
  _346 = (long unsigned int) input_340;
  # DEBUG D#1786 => &this_108(D)->_buf
  _847 = MEM[(struct Buffer * * *)this_108(D) + 880B];
  # DEBUG D#53 => D#1786
  # DEBUG __n => _346
  # DEBUG this => D#53
  _975 = _346 * 8;
  _976 = _847 + _975;
  cur_buf_347 = *_976;
  # DEBUG cur_buf => cur_buf_347
  # DEBUG this => cur_buf_347
  # DEBUG vc => vc_342
  _968 = (long unsigned int) vc_342;
  # DEBUG D#96 => &cur_buf_347->_vc
  _969 = MEM[(struct VC * * *)cur_buf_347 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _968
  # DEBUG this => D#42
  _970 = _968 * 8;
  _971 = _969 + _970;
  _972 = *_971;
  # DEBUG this => _972
  # DEBUG D#95 => &MEM[(const struct VC *)_972]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _973 = MEM[(struct Flit * * *)_972 + 144B];
  # DEBUG D#91 => D#94
  _974 = MEM[(struct Flit * * *)_972 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_973 == _974)
    goto <bb 183>;
  else
    goto <bb 184>;

  <bb 183>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 1517, &__PRETTY_FUNCTION__);

  <bb 184>:
  # DEBUG this => cur_buf_347
  # DEBUG vc => vc_342
  # DEBUG D#43 => &cur_buf_347->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _968
  # DEBUG this => D#42
  _977 = MEM[(eVCState *)_972 + 176B];
  # DEBUG D#21 => _972
  # DEBUG this => D#21
  if (_977 != 3)
    goto <bb 185>;
  else
    goto <bb 187>;

  <bb 185>:
  _348 = this_108(D)->_speculative;
  # DEBUG this => cur_buf_347
  # DEBUG vc => vc_342
  # DEBUG D#43 => &cur_buf_347->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _968
  # DEBUG this => D#42
  # DEBUG D#21 => _972
  # DEBUG this => D#21
  _1538 = _977 != 2;
  if (_348 <= _1538)
    goto <bb 186>;
  else
    goto <bb 187>;

  <bb 186>:
  __assert_fail ("(cur_buf->GetState(vc) == VC::active) || (_speculative && (cur_buf->GetState(vc) == VC::vc_alloc))", "routers/iq_router.cpp", 1519, &__PRETTY_FUNCTION__);

  <bb 187>:
  # DEBUG this => cur_buf_347
  # DEBUG vc => vc_342
  # DEBUG D#186 => &cur_buf_347->_vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _968
  # DEBUG this => D#42
  # DEBUG this => _972
  # DEBUG D#184 => &MEM[(const struct VC *)_972]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_972]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_978 = MEM[(struct Flit * const &)_974];
  # DEBUG f => iftmp.304_978
  if (iftmp.304_978 == 0B)
    goto <bb 188>;
  else
    goto <bb 189>;

  <bb 188>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 1522, &__PRETTY_FUNCTION__);

  <bb 189>:
  _351 = MEM[(const struct Flit *)iftmp.304_978].vc;
  if (vc_342 != _351)
    goto <bb 190>;
  else
    goto <bb 191>;

  <bb 190>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 1523, &__PRETTY_FUNCTION__);

  <bb 191>:
  _352 = this_108(D)->D.51790._input_speedup;
  _353 = input_340 * _352;
  _354 = vc_342 % _352;
  expanded_input_355 = _353 + _354;
  # DEBUG expanded_input => expanded_input_355
  _356 = this_108(D)->_sw_allocator;
  expanded_output_358 = Allocator::OutputAssigned (_356, expanded_input_355);
  # DEBUG expanded_output => expanded_output_358
  if (expanded_output_358 >= 0)
    goto <bb 192>;
  else
    goto <bb 201>;

  <bb 192>:
  _359 = this_108(D)->D.51790._output_speedup;
  _360 = expanded_output_358 % _359;
  _361 = input_340 % _359;
  if (_360 != _361)
    goto <bb 193>;
  else
    goto <bb 194>;

  <bb 193>:
  __assert_fail ("(expanded_output % _output_speedup) == (input % _output_speedup)", "routers/iq_router.cpp", 1530, &__PRETTY_FUNCTION__);

  <bb 194>:
  _362 = this_108(D)->_sw_allocator;
  _363 = _362->D.58179._vptr.Module;
  _364 = MEM[(int (*__vtbl_ptr_type) () *)_363 + 32B];
  _366 = OBJ_TYPE_REF(_364;(const struct Allocator)_362->4) (_362, expanded_input_355, expanded_output_358);
  # DEBUG granted_vc => _366
  if (vc_342 == _366)
    goto <bb 195>;
  else
    goto <bb 198>;

  <bb 195>:
  _382 = MEM[(const struct Flit *)iftmp.304_978].watch;
  if (_382 != 0)
    goto <bb 196>;
  else
    goto <bb 197>;

  <bb 196>:
  _383 = this_108(D)->D.51790._input_speedup;
  _384 = vc_342 % _383;
  _385 = this_108(D)->D.51790._output_speedup;
  _386 = expanded_output_358 % _385;
  _387 = expanded_output_358 / _385;
  # DEBUG D#1793 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1793
  # DEBUG D#1794 => &MEM[(const struct Module *)this_108(D)]._fullname
  _389 = GetSimTime ();
  gWatchOut.410_390 = gWatchOut;
  _392 = std::basic_ostream<char>::operator<< (gWatchOut.410_390, _389);
  # DEBUG __out => _392
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_392, " | ", 3);
  # DEBUG __os => _392
  # DEBUG __str => D#1794
  _393 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1794
  # DEBUG this => D#3
  _980 = (long int) _393;
  # DEBUG this => D#1794
  _981 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1794
  # DEBUG this => D#1
  _982 = std::__ostream_insert<char, std::char_traits<char> > (_392, _981, _980);
  # DEBUG __out => _982
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_982, " | ", 3);
  # DEBUG __out => _982
  # DEBUG __s => "Assigning output "
  # DEBUG __s => "Assigning output "
  std::__ostream_insert<char, std::char_traits<char> > (_982, "Assigning output ", 17);
  _395 = std::basic_ostream<char>::operator<< (_982, _387);
  # DEBUG __out => _395
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_395, ".", 1);
  _397 = std::basic_ostream<char>::operator<< (_395, _386);
  # DEBUG __out => _397
  # DEBUG __s => " to VC "
  # DEBUG __s => " to VC "
  std::__ostream_insert<char, std::char_traits<char> > (_397, " to VC ", 7);
  _399 = std::basic_ostream<char>::operator<< (_397, vc_342);
  # DEBUG __out => _399
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_399, " at input ", 10);
  _401 = std::basic_ostream<char>::operator<< (_399, input_340);
  # DEBUG __out => _401
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_401, ".", 1);
  _403 = std::basic_ostream<char>::operator<< (_401, _384);
  # DEBUG __out => _403
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_403, ".", 1);
  # DEBUG this => _403
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_403);

  <bb 197>:
  _404 = (long unsigned int) expanded_input_355;
  # DEBUG D#1795 => &this_108(D)->_sw_rr_offset
  _856 = MEM[(int * *)this_108(D) + 976B];
  # DEBUG D#55 => D#1795
  # DEBUG __n => _404
  # DEBUG this => D#55
  _983 = _404 * 4;
  _984 = _856 + _983;
  _405 = this_108(D)->D.51790._input_speedup;
  _406 = vc_342 + _405;
  _407 = this_108(D)->_vcs;
  _408 = _406 % _407;
  *_984 = _408;
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  iter$_M_cur_1370->second.second = expanded_output_358;
  goto <bb 224>;

  <bb 198>:
  _367 = MEM[(const struct Flit *)iftmp.304_978].watch;
  if (_367 != 0)
    goto <bb 199>;
  else
    goto <bb 200>;

  <bb 199>:
  # DEBUG D#1787 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1787
  # DEBUG D#1788 => &MEM[(const struct Module *)this_108(D)]._fullname
  _369 = GetSimTime ();
  gWatchOut.410_370 = gWatchOut;
  _372 = std::basic_ostream<char>::operator<< (gWatchOut.410_370, _369);
  # DEBUG __out => _372
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_372, " | ", 3);
  # DEBUG __os => _372
  # DEBUG __str => D#1788
  _373 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1788
  # DEBUG this => D#3
  _985 = (long int) _373;
  # DEBUG this => D#1788
  _986 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1788
  # DEBUG this => D#1
  _987 = std::__ostream_insert<char, std::char_traits<char> > (_372, _986, _985);
  # DEBUG __out => _987
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_987, " | ", 3);
  # DEBUG __out => _987
  # DEBUG __s => "Switch allocation failed for VC "
  # DEBUG __s => "Switch allocation failed for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_987, "Switch allocation failed for VC ", 32);
  _375 = std::basic_ostream<char>::operator<< (_987, vc_342);
  # DEBUG __out => _375
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_375, " at input ", 10);
  _377 = std::basic_ostream<char>::operator<< (_375, input_340);
  # DEBUG __out => _377
  # DEBUG __s => ": Granted to VC "
  # DEBUG __s => ": Granted to VC "
  std::__ostream_insert<char, std::char_traits<char> > (_377, ": Granted to VC ", 16);
  _379 = std::basic_ostream<char>::operator<< (_377, _366);
  # DEBUG __out => _379
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_379, ".", 1);
  # DEBUG this => _379
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_379);

  <bb 200>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_CROSSBAR_CONFLICT.428_380 = STALL_CROSSBAR_CONFLICT;
  iter$_M_cur_1370->second.second = STALL_CROSSBAR_CONFLICT.428_380;
  goto <bb 224>;

  <bb 201>:
  _412 = this_108(D)->_spec_sw_allocator;
  if (_412 != 0B)
    goto <bb 202>;
  else
    goto <bb 221>;

  <bb 202>:
  expanded_output_414 = Allocator::OutputAssigned (_412, expanded_input_355);
  # DEBUG expanded_output => expanded_output_414
  if (expanded_output_414 >= 0)
    goto <bb 203>;
  else
    goto <bb 218>;

  <bb 203>:
  _429 = this_108(D)->D.51790._output_speedup;
  _430 = expanded_output_414 % _429;
  _431 = input_340 % _429;
  if (_430 != _431)
    goto <bb 204>;
  else
    goto <bb 205>;

  <bb 204>:
  __assert_fail ("(expanded_output % _output_speedup) == (input % _output_speedup)", "routers/iq_router.cpp", 1556, &__PRETTY_FUNCTION__);

  <bb 205>:
  _432 = this_108(D)->_spec_mask_by_reqs;
  if (_432 != 0)
    goto <bb 206>;
  else
    goto <bb 209>;

  <bb 206>:
  _433 = this_108(D)->_sw_allocator;
  _434 = _433->D.58179._vptr.Module;
  _435 = MEM[(int (*__vtbl_ptr_type) () *)_434 + 72B];
  _437 = OBJ_TYPE_REF(_435;(const struct Allocator)_433->9) (_433, expanded_output_414);
  if (_437 != 0)
    goto <bb 435>;
  else
    goto <bb 436>;

  <bb 207>:
  _518 = this_108(D)->D.51790._output_speedup;
  _519 = expanded_output_414 % _518;
  _520 = expanded_output_414 / _518;
  _521 = this_108(D)->D.51790._input_speedup;
  _522 = vc_342 % _521;
  # DEBUG D#1803 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1803
  # DEBUG D#1804 => &MEM[(const struct Module *)this_108(D)]._fullname
  _525 = GetSimTime ();
  gWatchOut.410_526 = gWatchOut;
  _528 = std::basic_ostream<char>::operator<< (gWatchOut.410_526, _525);
  # DEBUG __out => _528
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_528, " | ", 3);
  # DEBUG __os => _528
  # DEBUG __str => D#1804
  _529 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1804
  # DEBUG this => D#3
  _988 = (long int) _529;
  # DEBUG this => D#1804
  _989 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1804
  # DEBUG this => D#1
  _990 = std::__ostream_insert<char, std::char_traits<char> > (_528, _989, _988);
  # DEBUG __out => _990
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_990, " | ", 3);
  # DEBUG __out => _990
  # DEBUG __s => "Discarding speculative grant for VC "
  # DEBUG __s => "Discarding speculative grant for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_990, "Discarding speculative grant for VC ", 36);
  _531 = std::basic_ostream<char>::operator<< (_990, vc_342);
  # DEBUG __out => _531
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_531, " at input ", 10);
  _533 = std::basic_ostream<char>::operator<< (_531, input_340);
  # DEBUG __out => _533
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_533, ".", 1);
  _535 = std::basic_ostream<char>::operator<< (_533, _522);
  # DEBUG __out => _535
  # DEBUG __s => " because output "
  # DEBUG __s => " because output "
  std::__ostream_insert<char, std::char_traits<char> > (_535, " because output ", 16);
  _537 = std::basic_ostream<char>::operator<< (_535, _520);
  # DEBUG __out => _537
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_537, ".", 1);
  _539 = std::basic_ostream<char>::operator<< (_537, _519);
  # DEBUG __out => _539
  # DEBUG __s => " has non-speculative requests."
  # DEBUG __s => " has non-speculative requests."
  std::__ostream_insert<char, std::char_traits<char> > (_539, " has non-speculative requests.", 30);
  # DEBUG this => _539
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_539);

  <bb 208>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_CROSSBAR_CONFLICT.428_541 = STALL_CROSSBAR_CONFLICT;
  iter$_M_cur_1370->second.second = STALL_CROSSBAR_CONFLICT.428_541;
  goto <bb 224>;

  <bb 209>:
  _439 = this_108(D)->_sw_allocator;
  _441 = Allocator::InputAssigned (_439, expanded_output_414);
  if (_441 >= 0)
    goto <bb 437>;
  else
    goto <bb 438>;

  <bb 210>:
  _443 = this_108(D)->D.51790._output_speedup;
  _444 = expanded_output_414 % _443;
  _445 = expanded_output_414 / _443;
  _446 = this_108(D)->D.51790._input_speedup;
  _447 = vc_342 % _446;
  # DEBUG D#1796 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1796
  # DEBUG D#1797 => &MEM[(const struct Module *)this_108(D)]._fullname
  _450 = GetSimTime ();
  gWatchOut.410_451 = gWatchOut;
  _453 = std::basic_ostream<char>::operator<< (gWatchOut.410_451, _450);
  # DEBUG __out => _453
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_453, " | ", 3);
  # DEBUG __os => _453
  # DEBUG __str => D#1797
  _454 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1797
  # DEBUG this => D#3
  _991 = (long int) _454;
  # DEBUG this => D#1797
  _992 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1797
  # DEBUG this => D#1
  _993 = std::__ostream_insert<char, std::char_traits<char> > (_453, _992, _991);
  # DEBUG __out => _993
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_993, " | ", 3);
  # DEBUG __out => _993
  # DEBUG __s => "Discarding speculative grant for VC "
  # DEBUG __s => "Discarding speculative grant for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_993, "Discarding speculative grant for VC ", 36);
  _456 = std::basic_ostream<char>::operator<< (_993, vc_342);
  # DEBUG __out => _456
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_456, " at input ", 10);
  _458 = std::basic_ostream<char>::operator<< (_456, input_340);
  # DEBUG __out => _458
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_458, ".", 1);
  _460 = std::basic_ostream<char>::operator<< (_458, _447);
  # DEBUG __out => _460
  # DEBUG __s => " because output "
  # DEBUG __s => " because output "
  std::__ostream_insert<char, std::char_traits<char> > (_460, " because output ", 16);
  _462 = std::basic_ostream<char>::operator<< (_460, _445);
  # DEBUG __out => _462
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_462, ".", 1);
  _464 = std::basic_ostream<char>::operator<< (_462, _444);
  # DEBUG __out => _464
  # DEBUG __s => " has a non-speculative grant."
  # DEBUG __s => " has a non-speculative grant."
  std::__ostream_insert<char, std::char_traits<char> > (_464, " has a non-speculative grant.", 29);
  # DEBUG this => _464
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_464);

  <bb 211>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_CROSSBAR_CONFLICT.428_465 = STALL_CROSSBAR_CONFLICT;
  iter$_M_cur_1370->second.second = STALL_CROSSBAR_CONFLICT.428_465;
  goto <bb 224>;

  <bb 212>:
  _472 = MEM[(const struct Flit *)iftmp.304_978].watch;
  if (_472 != 0)
    goto <bb 213>;
  else
    goto <bb 214>;

  <bb 213>:
  _473 = this_108(D)->D.51790._input_speedup;
  _474 = vc_342 % _473;
  _475 = this_108(D)->D.51790._output_speedup;
  _476 = expanded_output_414 % _475;
  _477 = expanded_output_414 / _475;
  # DEBUG D#1798 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1798
  # DEBUG D#1799 => &MEM[(const struct Module *)this_108(D)]._fullname
  _480 = GetSimTime ();
  gWatchOut.410_481 = gWatchOut;
  _483 = std::basic_ostream<char>::operator<< (gWatchOut.410_481, _480);
  # DEBUG __out => _483
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_483, " | ", 3);
  # DEBUG __os => _483
  # DEBUG __str => D#1799
  _484 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1799
  # DEBUG this => D#3
  _994 = (long int) _484;
  # DEBUG this => D#1799
  _995 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1799
  # DEBUG this => D#1
  _996 = std::__ostream_insert<char, std::char_traits<char> > (_483, _995, _994);
  # DEBUG __out => _996
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_996, " | ", 3);
  # DEBUG __out => _996
  # DEBUG __s => "Assigning output "
  # DEBUG __s => "Assigning output "
  std::__ostream_insert<char, std::char_traits<char> > (_996, "Assigning output ", 17);
  _486 = std::basic_ostream<char>::operator<< (_996, _477);
  # DEBUG __out => _486
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_486, ".", 1);
  _488 = std::basic_ostream<char>::operator<< (_486, _476);
  # DEBUG __out => _488
  # DEBUG __s => " to VC "
  # DEBUG __s => " to VC "
  std::__ostream_insert<char, std::char_traits<char> > (_488, " to VC ", 7);
  _490 = std::basic_ostream<char>::operator<< (_488, vc_342);
  # DEBUG __out => _490
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_490, " at input ", 10);
  _492 = std::basic_ostream<char>::operator<< (_490, input_340);
  # DEBUG __out => _492
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_492, ".", 1);
  _494 = std::basic_ostream<char>::operator<< (_492, _474);
  # DEBUG __out => _494
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_494, ".", 1);
  # DEBUG this => _494
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_494);

  <bb 214>:
  _495 = (long unsigned int) expanded_input_355;
  # DEBUG D#1800 => &this_108(D)->_sw_rr_offset
  _857 = MEM[(int * *)this_108(D) + 976B];
  # DEBUG D#55 => D#1800
  # DEBUG __n => _495
  # DEBUG this => D#55
  _997 = _495 * 4;
  _998 = _857 + _997;
  _496 = this_108(D)->D.51790._input_speedup;
  _497 = vc_342 + _496;
  _498 = this_108(D)->_vcs;
  _499 = _497 % _498;
  *_998 = _499;
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  iter$_M_cur_1370->second.second = expanded_output_414;
  goto <bb 224>;

  <bb 215>:
  _502 = MEM[(const struct Flit *)iftmp.304_978].watch;
  if (_502 != 0)
    goto <bb 216>;
  else
    goto <bb 217>;

  <bb 216>:
  # DEBUG D#1801 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1801
  # DEBUG D#1802 => &MEM[(const struct Module *)this_108(D)]._fullname
  _504 = GetSimTime ();
  gWatchOut.410_505 = gWatchOut;
  _507 = std::basic_ostream<char>::operator<< (gWatchOut.410_505, _504);
  # DEBUG __out => _507
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_507, " | ", 3);
  # DEBUG __os => _507
  # DEBUG __str => D#1802
  _508 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1802
  # DEBUG this => D#3
  _999 = (long int) _508;
  # DEBUG this => D#1802
  _1000 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1802
  # DEBUG this => D#1
  _1001 = std::__ostream_insert<char, std::char_traits<char> > (_507, _1000, _999);
  # DEBUG __out => _1001
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1001, " | ", 3);
  # DEBUG __out => _1001
  # DEBUG __s => "Switch allocation failed for VC "
  # DEBUG __s => "Switch allocation failed for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_1001, "Switch allocation failed for VC ", 32);
  _510 = std::basic_ostream<char>::operator<< (_1001, vc_342);
  # DEBUG __out => _510
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_510, " at input ", 10);
  _512 = std::basic_ostream<char>::operator<< (_510, input_340);
  # DEBUG __out => _512
  # DEBUG __s => ": Granted to VC "
  # DEBUG __s => ": Granted to VC "
  std::__ostream_insert<char, std::char_traits<char> > (_512, ": Granted to VC ", 16);
  _514 = std::basic_ostream<char>::operator<< (_512, _471);
  # DEBUG __out => _514
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_514, ".", 1);
  # DEBUG this => _514
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_514);

  <bb 217>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_CROSSBAR_CONFLICT.428_515 = STALL_CROSSBAR_CONFLICT;
  iter$_M_cur_1370->second.second = STALL_CROSSBAR_CONFLICT.428_515;
  goto <bb 224>;

  <bb 218>:
  _415 = MEM[(const struct Flit *)iftmp.304_978].watch;
  if (_415 != 0)
    goto <bb 219>;
  else
    goto <bb 220>;

  <bb 219>:
  # DEBUG D#1789 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1789
  # DEBUG D#1790 => &MEM[(const struct Module *)this_108(D)]._fullname
  _417 = GetSimTime ();
  gWatchOut.410_418 = gWatchOut;
  _420 = std::basic_ostream<char>::operator<< (gWatchOut.410_418, _417);
  # DEBUG __out => _420
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_420, " | ", 3);
  # DEBUG __os => _420
  # DEBUG __str => D#1790
  _421 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1790
  # DEBUG this => D#3
  _1002 = (long int) _421;
  # DEBUG this => D#1790
  _1003 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1790
  # DEBUG this => D#1
  _1004 = std::__ostream_insert<char, std::char_traits<char> > (_420, _1003, _1002);
  # DEBUG __out => _1004
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1004, " | ", 3);
  # DEBUG __out => _1004
  # DEBUG __s => "Switch allocation failed for VC "
  # DEBUG __s => "Switch allocation failed for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_1004, "Switch allocation failed for VC ", 32);
  _423 = std::basic_ostream<char>::operator<< (_1004, vc_342);
  # DEBUG __out => _423
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_423, " at input ", 10);
  _425 = std::basic_ostream<char>::operator<< (_423, input_340);
  # DEBUG __out => _425
  # DEBUG __s => ": No output granted."
  # DEBUG __s => ": No output granted."
  std::__ostream_insert<char, std::char_traits<char> > (_425, ": No output granted.", 20);
  # DEBUG this => _425
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_425);

  <bb 220>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_CROSSBAR_CONFLICT.428_427 = STALL_CROSSBAR_CONFLICT;
  iter$_M_cur_1370->second.second = STALL_CROSSBAR_CONFLICT.428_427;
  goto <bb 224>;

  <bb 221>:
  _544 = MEM[(const struct Flit *)iftmp.304_978].watch;
  if (_544 != 0)
    goto <bb 222>;
  else
    goto <bb 223>;

  <bb 222>:
  # DEBUG D#1791 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1791
  # DEBUG D#1792 => &MEM[(const struct Module *)this_108(D)]._fullname
  _547 = GetSimTime ();
  gWatchOut.410_548 = gWatchOut;
  _550 = std::basic_ostream<char>::operator<< (gWatchOut.410_548, _547);
  # DEBUG __out => _550
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_550, " | ", 3);
  # DEBUG __os => _550
  # DEBUG __str => D#1792
  _551 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1792
  # DEBUG this => D#3
  _1005 = (long int) _551;
  # DEBUG this => D#1792
  _1006 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1792
  # DEBUG this => D#1
  _1007 = std::__ostream_insert<char, std::char_traits<char> > (_550, _1006, _1005);
  # DEBUG __out => _1007
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1007, " | ", 3);
  # DEBUG __out => _1007
  # DEBUG __s => "Switch allocation failed for VC "
  # DEBUG __s => "Switch allocation failed for VC "
  std::__ostream_insert<char, std::char_traits<char> > (_1007, "Switch allocation failed for VC ", 32);
  _553 = std::basic_ostream<char>::operator<< (_1007, vc_342);
  # DEBUG __out => _553
  # DEBUG __s => " at input "
  # DEBUG __s => " at input "
  std::__ostream_insert<char, std::char_traits<char> > (_553, " at input ", 10);
  _555 = std::basic_ostream<char>::operator<< (_553, input_340);
  # DEBUG __out => _555
  # DEBUG __s => ": No output granted."
  # DEBUG __s => ": No output granted."
  std::__ostream_insert<char, std::char_traits<char> > (_555, ": No output granted.", 20);
  # DEBUG this => _555
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_555);

  <bb 223>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_CROSSBAR_CONFLICT.428_557 = STALL_CROSSBAR_CONFLICT;
  iter$_M_cur_1370->second.second = STALL_CROSSBAR_CONFLICT.428_557;

  <bb 224>:
  # DEBUG this => &iter
  iter$_M_cur_1009 = iter$_M_cur_1370 + 16;
  # DEBUG iter$_M_cur => iter$_M_cur_1009
  if (iter$_M_cur_1009 == iter$_M_last_1369)
    goto <bb 226>;
  else
    goto <bb 225>;

  <bb 225>:
  goto <bb 170>;

  <bb 226>:
  # DEBUG this => &iter
  iter$_M_node_1332 = iter$_M_node_1367 + 8;
  # DEBUG this => &iter
  # DEBUG __new_node => iter$_M_node_1332
  # DEBUG iter$_M_node => iter$_M_node_1332
  iter$_M_cur_1333 = MEM[(struct pair * *)iter$_M_node_1367 + 8B];
  # DEBUG __size => 16
  iter$_M_last_1334 = iter$_M_cur_1333 + 512;
  # DEBUG iter$_M_last => iter$_M_last_1334
  # DEBUG iter$_M_cur => iter$_M_cur_1333
  goto <bb 169>;

  <bb 227>:
  # _1603 = PHI <_967(170)>

  <bb 228>:
  # _1596 = PHI <_1602(172), _1603(227)>
  iter ={v} {CLOBBER};
  _567 = this_108(D)->_speculative;
  if (_567 != 0)
    goto <bb 230>;
  else
    goto <bb 229>;

  <bb 229>:
  _568 = this_108(D)->_sw_alloc_delay;
  if (_568 <= 1)
    goto <bb 423>;
  else
    goto <bb 230>;

  <bb 230>:
  # DEBUG D#1806 => &this_108(D)->_sw_alloc_vcs
  # DEBUG this => D#1806
  # DEBUG D#67 => &D#1806->D.45936._M_impl._M_start
  # DEBUG this => &iter
  # DEBUG __x => D#67
  _563 = MEM[(const struct iterator &)this_108(D) + 688]._M_cur;
  iter._M_cur = _563;
  _1011 = MEM[(const struct iterator &)this_108(D) + 688]._M_first;
  iter._M_first = _1011;
  _1012 = MEM[(const struct iterator &)this_108(D) + 688]._M_last;
  iter._M_last = _1012;
  _1013 = MEM[(const struct iterator &)this_108(D) + 688]._M_node;
  iter._M_node = _1013;

  <bb 231>:
  # prephitmp_1464 = PHI <_563(230), pretmp_1426(421)>
  # prephitmp_1462 = PHI <_1596(230), pretmp_1463(421)>

  <bb 232>:
  # prephitmp_1461 = PHI <prephitmp_1464(231), _1087(420)>
  # prephitmp_1459 = PHI <prephitmp_1462(231), pretmp_1460(420)>
  # DEBUG D#1836 => &this_108(D)->_sw_alloc_vcs
  # DEBUG this => D#1836
  # DEBUG D#68 => &D#1836->D.45936._M_impl._M_finish
  # DEBUG this => &D.65568
  # DEBUG __x => D#68
  # DEBUG D#1843 => MEM[(const struct iterator &)this_108(D) + 720]._M_first
  # DEBUG D.110627 => D#1843
  # DEBUG D#1842 => MEM[(const struct iterator &)this_108(D) + 720]._M_last
  # DEBUG D.110628 => D#1842
  # DEBUG D#1841 => MEM[(const struct iterator &)this_108(D) + 720]._M_node
  # DEBUG D.110629 => D#1841
  # DEBUG __x => &iter
  # DEBUG __y => &D.65568
  # DEBUG D#147 => &iter
  # DEBUG D#148 => &D.65568
  # DEBUG __x => D#147
  # DEBUG __y => D#148
  if (prephitmp_1459 != prephitmp_1461)
    goto <bb 233>;
  else
    goto <bb 422>;

  <bb 233>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  time_570 = prephitmp_1461->first;
  # DEBUG time => time_570
  if (time_570 < 0)
    goto <bb 234>;
  else
    goto <bb 235>;

  <bb 234>:
  __assert_fail ("time >= 0", "routers/iq_router.cpp", 1641, &__PRETTY_FUNCTION__);

  <bb 235>:
  _572 = GetSimTime ();
  if (time_570 > _572)
    goto <bb 422>;
  else
    goto <bb 236>;

  <bb 236>:
  _880 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _573 = _880->second.second;
  if (_573 == -1)
    goto <bb 237>;
  else
    goto <bb 238>;

  <bb 237>:
  __assert_fail ("iter->second.second != -1", "routers/iq_router.cpp", 1646, &__PRETTY_FUNCTION__);

  <bb 238>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  # DEBUG expanded_output => _573
  if (_573 >= 0)
    goto <bb 239>;
  else
    goto <bb 419>;

  <bb 239>:
  _575 = this_108(D)->D.51790._output_speedup;
  output_576 = _573 / _575;
  # DEBUG output => output_576
  if (output_576 < 0)
    goto <bb 241>;
  else
    goto <bb 240>;

  <bb 240>:
  _577 = this_108(D)->D.51790._outputs;
  if (output_576 >= _577)
    goto <bb 241>;
  else
    goto <bb 242>;

  <bb 241>:
  __assert_fail ("(output >= 0) && (output < _outputs)", "routers/iq_router.cpp", 1653, &__PRETTY_FUNCTION__);

  <bb 242>:
  # DEBUG D#2718 => (long unsigned int) output_576
  # DEBUG D#1807 => &this_108(D)->_next_buf
  # DEBUG D#2717 => MEM[(struct BufferState * * *)this_108(D) + 904B]
  # DEBUG D#54 => D#1807
  # DEBUG __n => D#2718
  # DEBUG this => D#54
  # DEBUG D#2716 => D#2718 * 8
  # DEBUG D#2715 => D#2717 + D#2716
  # DEBUG D#2714 => *D#2715
  # DEBUG dest_buf => D#2714
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  input_581 = _880->second.first.first;
  # DEBUG input => input_581
  if (input_581 < 0)
    goto <bb 244>;
  else
    goto <bb 243>;

  <bb 243>:
  _582 = this_108(D)->D.51790._inputs;
  if (input_581 >= _582)
    goto <bb 244>;
  else
    goto <bb 245>;

  <bb 244>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 1658, &__PRETTY_FUNCTION__);

  <bb 245>:
  _583 = input_581 % _575;
  _584 = _573 % _575;
  if (_583 != _584)
    goto <bb 246>;
  else
    goto <bb 247>;

  <bb 246>:
  __assert_fail ("(input % _output_speedup) == (expanded_output % _output_speedup)", "routers/iq_router.cpp", 1659, &__PRETTY_FUNCTION__);

  <bb 247>:
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  vc_585 = _880->second.first.second;
  # DEBUG vc => vc_585
  if (vc_585 < 0)
    goto <bb 249>;
  else
    goto <bb 248>;

  <bb 248>:
  _586 = this_108(D)->_vcs;
  if (vc_585 >= _586)
    goto <bb 249>;
  else
    goto <bb 250>;

  <bb 249>:
  __assert_fail ("(vc >= 0) && (vc < _vcs)", "routers/iq_router.cpp", 1661, &__PRETTY_FUNCTION__);

  <bb 250>:
  _587 = this_108(D)->D.51790._input_speedup;
  _588 = input_581 * _587;
  _589 = vc_585 % _587;
  expanded_input_590 = _588 + _589;
  # DEBUG expanded_input => expanded_input_590
  _591 = (long unsigned int) expanded_input_590;
  # DEBUG D#1808 => &this_108(D)->_switch_hold_vc
  _858 = MEM[(int * *)this_108(D) + 1120B];
  # DEBUG D#55 => D#1808
  # DEBUG __n => _591
  # DEBUG this => D#55
  _1017 = _591 * 4;
  _1018 = _858 + _1017;
  _592 = *_1018;
  if (vc_585 == _592)
    goto <bb 251>;
  else
    goto <bb 252>;

  <bb 251>:
  __assert_fail ("_switch_hold_vc[expanded_input] != vc", "routers/iq_router.cpp", 1664, &__PRETTY_FUNCTION__);

  <bb 252>:
  _593 = (long unsigned int) input_581;
  # DEBUG D#1809 => &this_108(D)->_buf
  _848 = MEM[(struct Buffer * * *)this_108(D) + 880B];
  # DEBUG D#53 => D#1809
  # DEBUG __n => _593
  # DEBUG this => D#53
  _1026 = _593 * 8;
  _1027 = _848 + _1026;
  cur_buf_594 = *_1027;
  # DEBUG cur_buf => cur_buf_594
  # DEBUG this => cur_buf_594
  # DEBUG vc => vc_585
  _1019 = (long unsigned int) vc_585;
  # DEBUG D#96 => &cur_buf_594->_vc
  _1020 = MEM[(struct VC * * *)cur_buf_594 + 104B];
  # DEBUG D#42 => D#96
  # DEBUG __n => _1019
  # DEBUG this => D#42
  _1021 = _1019 * 8;
  _1022 = _1020 + _1021;
  _1023 = *_1022;
  # DEBUG this => _1023
  # DEBUG D#95 => &MEM[(const struct VC *)_1023]._buffer
  # DEBUG this => D#95
  # DEBUG D#93 => &D#95->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#95->D.54933._M_impl._M_finish
  _1024 = MEM[(struct Flit * * *)_1023 + 144B];
  # DEBUG D#91 => D#94
  _1025 = MEM[(struct Flit * * *)_1023 + 112B];
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  if (_1024 == _1025)
    goto <bb 253>;
  else
    goto <bb 254>;

  <bb 253>:
  __assert_fail ("!cur_buf->Empty(vc)", "routers/iq_router.cpp", 1667, &__PRETTY_FUNCTION__);

  <bb 254>:
  # DEBUG this => cur_buf_594
  # DEBUG vc => vc_585
  # DEBUG D#43 => &cur_buf_594->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _1019
  # DEBUG this => D#42
  _1028 = MEM[(eVCState *)_1023 + 176B];
  # DEBUG D#21 => _1023
  # DEBUG this => D#21
  if (_1028 != 3)
    goto <bb 255>;
  else
    goto <bb 257>;

  <bb 255>:
  _595 = this_108(D)->_speculative;
  # DEBUG this => cur_buf_594
  # DEBUG vc => vc_585
  # DEBUG D#43 => &cur_buf_594->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _1019
  # DEBUG this => D#42
  # DEBUG D#21 => _1023
  # DEBUG this => D#21
  _1410 = _1028 != 2;
  if (_595 <= _1410)
    goto <bb 256>;
  else
    goto <bb 257>;

  <bb 256>:
  __assert_fail ("(cur_buf->GetState(vc) == VC::active) || (_speculative && (cur_buf->GetState(vc) == VC::vc_alloc))", "routers/iq_router.cpp", 1669, &__PRETTY_FUNCTION__);

  <bb 257>:
  # DEBUG this => cur_buf_594
  # DEBUG vc => vc_585
  # DEBUG D#186 => &cur_buf_594->_vc
  # DEBUG D#42 => D#186
  # DEBUG __n => _1019
  # DEBUG this => D#42
  # DEBUG this => _1023
  # DEBUG D#184 => &MEM[(const struct VC *)_1023]._buffer
  # DEBUG this => D#184
  # DEBUG D#93 => &D#184->D.54933._M_impl._M_start
  # DEBUG D#94 => &D#184->D.54933._M_impl._M_finish
  # DEBUG D#91 => D#94
  # DEBUG D#92 => D#93
  # DEBUG __x => D#91
  # DEBUG __y => D#92
  # DEBUG D#185 => &MEM[(const struct VC *)_1023]._buffer
  # DEBUG this => D#185
  # DEBUG this => D#185
  # DEBUG D#180 => &D#185->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#180
  # DEBUG D#183 => MEM[(const struct iterator &)D#185 + 16]._M_first
  # DEBUG D.93266 => D#183
  # DEBUG D#182 => MEM[(const struct iterator &)D#185 + 16]._M_last
  # DEBUG D.93267 => D#182
  # DEBUG D#181 => MEM[(const struct iterator &)D#185 + 16]._M_node
  # DEBUG D.93268 => D#181
  # DEBUG this => D#98
  iftmp.304_1029 = MEM[(struct Flit * const &)_1025];
  # DEBUG f => iftmp.304_1029
  if (iftmp.304_1029 == 0B)
    goto <bb 258>;
  else
    goto <bb 259>;

  <bb 258>:
  # DEBUG f => 0B
  __assert_fail ("f", "routers/iq_router.cpp", 1672, &__PRETTY_FUNCTION__);

  <bb 259>:
  _597 = MEM[(const struct Flit *)iftmp.304_1029].vc;
  if (vc_585 != _597)
    goto <bb 260>;
  else
    goto <bb 261>;

  <bb 260>:
  __assert_fail ("f->vc == vc", "routers/iq_router.cpp", 1673, &__PRETTY_FUNCTION__);

  <bb 261>:
  # DEBUG D#1810 => &this_108(D)->_switch_hold_in
  _859 = MEM[(int * *)this_108(D) + 1072B];
  # DEBUG D#55 => D#1810
  # DEBUG __n => _591
  # DEBUG this => D#55
  _1031 = _859 + _1017;
  _598 = *_1031;
  if (_598 >= 0)
    goto <bb 440>;
  else
    goto <bb 262>;

  <bb 262>:
  _599 = (long unsigned int) _573;
  # DEBUG D#1811 => &this_108(D)->_switch_hold_out
  _860 = MEM[(int * *)this_108(D) + 1096B];
  # DEBUG D#55 => D#1811
  # DEBUG __n => _599
  # DEBUG this => D#55
  _1032 = _599 * 4;
  _1033 = _860 + _1032;
  _600 = *_1033;
  if (_600 >= 0)
    goto <bb 440>;
  else
    goto <bb 439>;

  <bb 263>:
  # DEBUG D#1822 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1822
  # DEBUG D#1823 => &MEM[(const struct Module *)this_108(D)]._fullname
  _790 = GetSimTime ();
  gWatchOut.410_791 = gWatchOut;
  _793 = std::basic_ostream<char>::operator<< (gWatchOut.410_791, _790);
  # DEBUG __out => _793
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_793, " | ", 3);
  # DEBUG __os => _793
  # DEBUG __str => D#1823
  _794 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1823
  # DEBUG this => D#3
  _1034 = (long int) _794;
  # DEBUG this => D#1823
  _1035 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1823
  # DEBUG this => D#1
  _1036 = std::__ostream_insert<char, std::char_traits<char> > (_793, _1035, _1034);
  # DEBUG __out => _1036
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1036, " | ", 3);
  # DEBUG __out => _1036
  # DEBUG __s => "Discarding grant from input "
  # DEBUG __s => "Discarding grant from input "
  std::__ostream_insert<char, std::char_traits<char> > (_1036, "Discarding grant from input ", 28);
  _796 = std::basic_ostream<char>::operator<< (_1036, input_581);
  # DEBUG __out => _796
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_796, ".", 1);
  _798 = std::basic_ostream<char>::operator<< (_796, _589);
  # DEBUG __out => _798
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_798, " to output ", 11);
  _800 = std::basic_ostream<char>::operator<< (_798, output_576);
  # DEBUG __out => _800
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_800, ".", 1);
  _802 = std::basic_ostream<char>::operator<< (_800, _583);
  std::operator<< <std::char_traits<char> > (_802, " due to conflict with held connection at ");
  # DEBUG D#1824 => &this_108(D)->_switch_hold_in
  _861 = MEM[(int * *)this_108(D) + 1072B];
  # DEBUG D#55 => D#1824
  # DEBUG __n => _591
  # DEBUG this => D#55
  _1037 = _861 + _1017;
  _804 = *_1037;
  if (_804 >= 0)
    goto <bb 264>;
  else
    goto <bb 268>;

  <bb 264>:
  gWatchOut.410_805 = gWatchOut;
  std::operator<< <std::char_traits<char> > (gWatchOut.410_805, "input");
  # DEBUG D#1825 => &this_108(D)->_switch_hold_in
  _862 = MEM[(int * *)this_108(D) + 1072B];
  # DEBUG D#55 => D#1825
  # DEBUG __n => _591
  # DEBUG this => D#55
  _1038 = _862 + _1017;
  _807 = *_1038;
  if (_807 >= 0)
    goto <bb 266>;
  else
    goto <bb 265>;

  <bb 265>:
  pretmp_1545 = (long unsigned int) _573;
  pretmp_1433 = pretmp_1545 * 4;
  goto <bb 269>;

  <bb 266>:
  _808 = (long unsigned int) _573;
  # DEBUG D#1826 => &this_108(D)->_switch_hold_out
  _863 = MEM[(int * *)this_108(D) + 1096B];
  # DEBUG D#55 => D#1826
  # DEBUG __n => _808
  # DEBUG this => D#55
  _1039 = _808 * 4;
  _1040 = _863 + _1039;
  _810 = *_1040;
  if (_810 >= 0)
    goto <bb 441>;
  else
    goto <bb 267>;

  <bb 267>:
  goto <bb 271>;

  <bb 268>:
  pretmp_1431 = (long unsigned int) _573;
  pretmp_1453 = pretmp_1431 * 4;

  <bb 269>:
  # prephitmp_1389 = PHI <pretmp_1453(268), _1039(441), pretmp_1433(265)>
  # DEBUG D#1827 => &this_108(D)->_switch_hold_out
  _864 = MEM[(int * *)this_108(D) + 1096B];
  # DEBUG D#55 => D#1827
  # DEBUG __n => (long unsigned int) _573
  # DEBUG this => D#55
  _1042 = _864 + prephitmp_1389;
  _814 = *_1042;
  if (_814 >= 0)
    goto <bb 270>;
  else
    goto <bb 267>;

  <bb 270>:
  gWatchOut.410_815 = gWatchOut;
  std::operator<< <std::char_traits<char> > (gWatchOut.410_815, "output");

  <bb 271>:
  gWatchOut.410_817 = gWatchOut;
  # DEBUG __out => gWatchOut.410_817
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (gWatchOut.410_817, ".", 1);
  # DEBUG this => gWatchOut.410_817
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (gWatchOut.410_817);
  pretmp_1536 = MEM[(struct pair * *)&iter];

  <bb 272>:
  # prephitmp_1450 = PHI <_880(440), pretmp_1536(271)>
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_CROSSBAR_CONFLICT.428_818 = STALL_CROSSBAR_CONFLICT;
  prephitmp_1450->second.second = STALL_CROSSBAR_CONFLICT.428_818;
  goto <bb 419>;

  <bb 273>:
  __assert_fail ("f->head", "routers/iq_router.cpp", 1699, &__PRETTY_FUNCTION__);

  <bb 274>:
  _603 = this_108(D)->_vc_allocator;
  if (_603 != 0B)
    goto <bb 275>;
  else
    goto <bb 295>;

  <bb 275>:
  _683 = this_108(D)->_vc_shuffle_requests;
  if (_683 != 0)
    goto <bb 276>;
  else
    goto <bb 277>;

  <bb 276>:
  _684 = _582 * vc_585;
  iftmp.443_685 = input_581 + _684;
  goto <bb 278>;

  <bb 277>:
  _686 = input_581 * _586;
  iftmp.443_687 = vc_585 + _686;

  <bb 278>:
  # iftmp.443_44 = PHI <iftmp.443_685(276), iftmp.443_687(277)>
  # DEBUG input_and_vc => iftmp.443_44
  _689 = Allocator::OutputAssigned (_603, iftmp.443_44);
  # DEBUG output_and_vc => _689
  if (_689 < 0)
    goto <bb 279>;
  else
    goto <bb 282>;

  <bb 279>:
  _690 = MEM[(const struct Flit *)iftmp.304_1029].watch;
  if (_690 != 0)
    goto <bb 280>;
  else
    goto <bb 281>;

  <bb 280>:
  _691 = this_108(D)->D.51790._output_speedup;
  _692 = _573 % _691;
  _693 = this_108(D)->D.51790._input_speedup;
  _694 = vc_585 % _693;
  # DEBUG D#1828 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1828
  # DEBUG D#1829 => &MEM[(const struct Module *)this_108(D)]._fullname
  _696 = GetSimTime ();
  gWatchOut.410_697 = gWatchOut;
  _699 = std::basic_ostream<char>::operator<< (gWatchOut.410_697, _696);
  # DEBUG __out => _699
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_699, " | ", 3);
  # DEBUG __os => _699
  # DEBUG __str => D#1829
  _700 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1829
  # DEBUG this => D#3
  _1043 = (long int) _700;
  # DEBUG this => D#1829
  _1044 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1829
  # DEBUG this => D#1
  _1045 = std::__ostream_insert<char, std::char_traits<char> > (_699, _1044, _1043);
  # DEBUG __out => _1045
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1045, " | ", 3);
  # DEBUG __out => _1045
  # DEBUG __s => "Discarding grant from input "
  # DEBUG __s => "Discarding grant from input "
  std::__ostream_insert<char, std::char_traits<char> > (_1045, "Discarding grant from input ", 28);
  _702 = std::basic_ostream<char>::operator<< (_1045, input_581);
  # DEBUG __out => _702
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_702, ".", 1);
  _704 = std::basic_ostream<char>::operator<< (_702, _694);
  # DEBUG __out => _704
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_704, " to output ", 11);
  _706 = std::basic_ostream<char>::operator<< (_704, output_576);
  # DEBUG __out => _706
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_706, ".", 1);
  _708 = std::basic_ostream<char>::operator<< (_706, _692);
  # DEBUG __out => _708
  # DEBUG __s => " due to misspeculation."
  # DEBUG __s => " due to misspeculation."
  std::__ostream_insert<char, std::char_traits<char> > (_708, " due to misspeculation.", 23);
  # DEBUG this => _708
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_708);

  <bb 281>:
  _882 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _882->second.second = -1;
  goto <bb 419>;

  <bb 282>:
  _710 = this_108(D)->_vcs;
  _711 = _689 / _710;
  if (output_576 != _711)
    goto <bb 283>;
  else
    goto <bb 286>;

  <bb 283>:
  _736 = MEM[(const struct Flit *)iftmp.304_1029].watch;
  if (_736 != 0)
    goto <bb 284>;
  else
    goto <bb 285>;

  <bb 284>:
  _737 = this_108(D)->D.51790._output_speedup;
  _738 = _573 % _737;
  _739 = this_108(D)->D.51790._input_speedup;
  _740 = vc_585 % _739;
  # DEBUG D#1832 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1832
  # DEBUG D#1833 => &MEM[(const struct Module *)this_108(D)]._fullname
  _743 = GetSimTime ();
  gWatchOut.410_744 = gWatchOut;
  _746 = std::basic_ostream<char>::operator<< (gWatchOut.410_744, _743);
  # DEBUG __out => _746
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_746, " | ", 3);
  # DEBUG __os => _746
  # DEBUG __str => D#1833
  _747 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1833
  # DEBUG this => D#3
  _1046 = (long int) _747;
  # DEBUG this => D#1833
  _1047 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1833
  # DEBUG this => D#1
  _1048 = std::__ostream_insert<char, std::char_traits<char> > (_746, _1047, _1046);
  # DEBUG __out => _1048
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1048, " | ", 3);
  # DEBUG __out => _1048
  # DEBUG __s => "Discarding grant from input "
  # DEBUG __s => "Discarding grant from input "
  std::__ostream_insert<char, std::char_traits<char> > (_1048, "Discarding grant from input ", 28);
  _749 = std::basic_ostream<char>::operator<< (_1048, input_581);
  # DEBUG __out => _749
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_749, ".", 1);
  _751 = std::basic_ostream<char>::operator<< (_749, _740);
  # DEBUG __out => _751
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_751, " to output ", 11);
  _753 = std::basic_ostream<char>::operator<< (_751, output_576);
  # DEBUG __out => _753
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_753, ".", 1);
  _755 = std::basic_ostream<char>::operator<< (_753, _738);
  # DEBUG __out => _755
  # DEBUG __s => " due to port mismatch between VC and switch allocator."
  # DEBUG __s => " due to port mismatch between VC and switch allocator."
  std::__ostream_insert<char, std::char_traits<char> > (_755, " due to port mismatch between VC and switch allocator.", 54);
  # DEBUG this => _755
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_755);

  <bb 285>:
  _883 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_BUFFER_CONFLICT.444_757 = STALL_BUFFER_CONFLICT;
  _883->second.second = STALL_BUFFER_CONFLICT.444_757;
  goto <bb 419>;

  <bb 286>:
  _712 = _689 % _710;
  _843 = MEM[(struct BufferPolicy * *)dest_buf_580 + 144B];
  # DEBUG D#32 => D#2714
  # DEBUG vc => _712
  # DEBUG this => D#32
  _1049 = _843->D.55980._vptr.Module;
  _1050 = MEM[(int (*__vtbl_ptr_type) () *)_1049 + 56B];
  _1051 = OBJ_TYPE_REF(_1050;(const struct BufferPolicy)_843->7) (_843, _712);
  if (_1051 != 0)
    goto <bb 288>;
  else
    goto <bb 287>;

  <bb 287>:
  pretmp_1549 = iter._M_cur;
  goto <bb 419>;

  <bb 288>:
  _713 = MEM[(const struct Flit *)iftmp.304_1029].watch;
  if (_713 != 0)
    goto <bb 289>;
  else
    goto <bb 290>;

  <bb 289>:
  _714 = this_108(D)->D.51790._output_speedup;
  _715 = _573 % _714;
  _716 = this_108(D)->D.51790._input_speedup;
  _717 = vc_585 % _716;
  # DEBUG D#1830 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1830
  # DEBUG D#1831 => &MEM[(const struct Module *)this_108(D)]._fullname
  _719 = GetSimTime ();
  gWatchOut.410_720 = gWatchOut;
  _722 = std::basic_ostream<char>::operator<< (gWatchOut.410_720, _719);
  # DEBUG __out => _722
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_722, " | ", 3);
  # DEBUG __os => _722
  # DEBUG __str => D#1831
  _723 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1831
  # DEBUG this => D#3
  _1052 = (long int) _723;
  # DEBUG this => D#1831
  _1053 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1831
  # DEBUG this => D#1
  _1054 = std::__ostream_insert<char, std::char_traits<char> > (_722, _1053, _1052);
  # DEBUG __out => _1054
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1054, " | ", 3);
  # DEBUG __out => _1054
  # DEBUG __s => "Discarding grant from input "
  # DEBUG __s => "Discarding grant from input "
  std::__ostream_insert<char, std::char_traits<char> > (_1054, "Discarding grant from input ", 28);
  _725 = std::basic_ostream<char>::operator<< (_1054, input_581);
  # DEBUG __out => _725
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_725, ".", 1);
  _727 = std::basic_ostream<char>::operator<< (_725, _717);
  # DEBUG __out => _727
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_727, " to output ", 11);
  _729 = std::basic_ostream<char>::operator<< (_727, output_576);
  # DEBUG __out => _729
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_729, ".", 1);
  _731 = std::basic_ostream<char>::operator<< (_729, _715);
  # DEBUG __out => _731
  # DEBUG __s => " due to lack of credit."
  # DEBUG __s => " due to lack of credit."
  std::__ostream_insert<char, std::char_traits<char> > (_731, " due to lack of credit.", 23);
  # DEBUG this => _731
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_731);

  <bb 290>:
  _884 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _835 = MEM[(int *)dest_buf_580 + 100B];
  # DEBUG D#27 => D#2714
  _836 = MEM[(int *)dest_buf_580 + 104B];
  # DEBUG D#27 => D#2714
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (_835 < _836)
    goto <bb 39>;
  else
    goto <bb 291>;

  <bb 291>:
  if (_835 == _836)
    goto <bb 292>;
  else
    goto <bb 293>;

  <bb 292>:
  iftmp.446_733 = STALL_BUFFER_FULL;
  goto <bb 294>;

  <bb 293>:
  iftmp.446_734 = STALL_BUFFER_RESERVED;

  <bb 294>:
  # iftmp.446_45 = PHI <iftmp.446_733(292), iftmp.446_734(293)>
  _884->second.second = iftmp.446_45;
  goto <bb 419>;

  <bb 295>:
  # DEBUG this => cur_buf_594
  # DEBUG vc => vc_585
  # DEBUG D#44 => &cur_buf_594->_vc
  # DEBUG D#42 => D#44
  # DEBUG __n => _1019
  # DEBUG this => D#42
  _1055 = VC::GetRouteSet (_1023);
  # DEBUG route_set => _1055
  if (_1055 == 0B)
    goto <bb 296>;
  else
    goto <bb 297>;

  <bb 296>:
  __assert_fail ("route_set", "routers/iq_router.cpp", 1742, &__PRETTY_FUNCTION__);

  <bb 297>:
  _606 = OutputSet::GetSet (_1055);
  # DEBUG this => &setlist
  # DEBUG __x => _606
  # DEBUG D#2708 => &_606->_M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => D#2708
  # DEBUG this => D#2708
  # DEBUG __a => NULL
  # DEBUG D#1710 => &MEM[(const struct _Rb_tree &)D#2708]._M_impl._M_key_compare
  # DEBUG D#1709 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1709
  # DEBUG __comp => D#1710
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG __a => NULL
  # DEBUG this => D#1709
  # DEBUG D.97154 => NULL
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_node_count = 0;
  # DEBUG this => D#1709
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_left = &MEM[(struct _Rb_tree_impl *)&setlist]._M_header;
  MEM[(struct _Rb_tree_impl *)&setlist]._M_header._M_right = &MEM[(struct _Rb_tree_impl *)&setlist]._M_header;
  _1335 = MEM[(struct _Rb_tree_node_base * *)_606 + 16B];
  # DEBUG D#272 => D#2708
  # DEBUG this => D#272
  if (_1335 != 0B)
    goto <bb 298>;
  else
    goto <bb 305>;

  <bb 298>:
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG D#273 => D#2708
  # DEBUG this => D#273
  # DEBUG this => &setlist._M_t
  # DEBUG __x => NULL
  # DEBUG __p => NULL
  # DEBUG this => &__an
  # DEBUG __t => &setlist._M_t
  __an._M_t = &setlist._M_t;
  __x_1337 = std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_copy<std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_Alloc_node> (&setlist._M_t, _1335, &MEM[(struct _Rb_tree *)&setlist]._M_impl._M_header, &__an);
  __an ={v} {CLOBBER};
  MEM[(struct _Rb_tree_node_base * &)&setlist + 16] = __x_1337;
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => __x_1337

  <bb 299>:
  # __x_1338 = PHI <__x_1337(298), __x_1339(300)>
  # DEBUG __x => __x_1338
  __x_1339 = __x_1338->_M_left;
  if (__x_1339 == 0B)
    goto <bb 301>;
  else
    goto <bb 300>;

  <bb 300>:
  goto <bb 299>;

  <bb 301>:
  # __x_1599 = PHI <__x_1338(299)>
  MEM[(struct _Rb_tree_node_base * &)&setlist + 24] = __x_1599;
  # DEBUG this => &setlist._M_t
  # DEBUG this => &setlist._M_t
  # DEBUG __x => __x_1337

  <bb 302>:
  # __x_1340 = PHI <__x_1337(301), __x_1341(303)>
  # DEBUG __x => __x_1340
  __x_1341 = __x_1340->_M_right;
  if (__x_1341 == 0B)
    goto <bb 304>;
  else
    goto <bb 303>;

  <bb 303>:
  goto <bb 302>;

  <bb 304>:
  # __x_1598 = PHI <__x_1340(302)>
  MEM[(struct _Rb_tree_node_base * &)&setlist + 32] = __x_1598;
  _1342 = MEM[(const struct _Rb_tree &)_606]._M_impl._M_node_count;
  MEM[(struct _Rb_tree *)&setlist]._M_impl._M_node_count = _1342;

  <bb 305>:
  # prephitmp_1451 = PHI <_1342(304), 0(297)>
  # prephitmp_1313 = PHI <__x_1599(304), &MEM[(struct _Rb_tree_impl *)&setlist]._M_header(297)>
  # DEBUG busy => 1
  # DEBUG full => 1
  # DEBUG reserved => 0
  _608 = this_108(D)->_noq;
  if (_608 != 0)
    goto <bb 306>;
  else
    goto <bb 308>;

  <bb 306>:
  # DEBUG this => &setlist
  # DEBUG D#164 => &setlist._M_t
  # DEBUG D#163 => D#164
  # DEBUG this => D#163
  if (prephitmp_1451 != 1)
    goto <bb 307>;
  else
    goto <bb 308>;

  <bb 307>:
  __assert_fail ("!_noq || (setlist.size() == 1)", "routers/iq_router.cpp", 1750, &__PRETTY_FUNCTION__);

  <bb 308>:
  # DEBUG this => &setlist
  # DEBUG D#275 => &setlist._M_t
  # DEBUG D#2709 => MEM[(struct _Rb_tree_node_base * *)&setlist + 24B]
  # DEBUG D#274 => D#275
  # DEBUG this => D#274
  # DEBUG this => NULL
  # DEBUG __x => D#2709
  # DEBUG iset$_M_node => D#2709
  # DEBUG iset$_M_node => D#2709
  # DEBUG reserved => 0
  # DEBUG full => 1
  # DEBUG busy => 1
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65588
  if (&MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header != prephitmp_1313)
    goto <bb 309>;
  else
    goto <bb 339>;

  <bb 309>:
  _1059 = _593 * 24;
  _1057 = _1019 * 4;

  <bb 310>:
  # busy_19 = PHI <1(309), busy_17(338)>
  # reserved_781 = PHI <0(309), reserved_26(338)>
  # iset$_M_node_78 = PHI <prephitmp_1313(309), iset$_M_node_1070(338)>
  # DEBUG iset$_M_node => iset$_M_node_78
  # DEBUG reserved => reserved_781
  # DEBUG full => 1
  # DEBUG busy => busy_19
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65588
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_78
  # DEBUG D#1812 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_78]._M_value_field
  # DEBUG __r => D#1812
  _613 = MEM[(const struct sSetElement *)iset$_M_node_78 + 32B].output_port;
  if (output_576 == _613)
    goto <bb 311>;
  else
    goto <bb 337>;

  <bb 311>:
  _614 = this_108(D)->_noq;
  if (_614 != 0)
    goto <bb 312>;
  else
    goto <bb 444>;

  <bb 312>:
  # DEBUG D#1813 => &this_108(D)->_noq_next_output_port
  _891 = MEM[(struct vector * *)this_108(D) + 1152B];
  # DEBUG D#70 => D#1813
  # DEBUG __n => _593
  # DEBUG this => D#70
  _1060 = _891 + _1059;
  _865 = MEM[(int * *)_1060];
  # DEBUG __n => _1019
  # DEBUG this => D#55
  _1058 = _865 + _1057;
  _617 = *_1058;
  if (_617 >= 0)
    goto <bb 445>;
  else
    goto <bb 444>;

  <bb 313>:
  __assert_fail ("!_routing_delay", "routers/iq_router.cpp", 1761, &__PRETTY_FUNCTION__);

  <bb 314>:
  # DEBUG D#1814 => &this_108(D)->_noq_next_vc_start
  _892 = MEM[(struct vector * *)this_108(D) + 1176B];
  # DEBUG D#70 => D#1814
  # DEBUG __n => _593
  # DEBUG this => D#70
  _1066 = _892 + _1059;
  _866 = MEM[(int * *)_1066];
  # DEBUG __n => _1019
  # DEBUG this => D#55
  _1064 = _866 + _1057;
  out_vc_621 = *_1064;
  # DEBUG vc_start => out_vc_621
  # DEBUG D#1815 => &this_108(D)->_noq_next_vc_end
  _893 = MEM[(struct vector * *)this_108(D) + 1200B];
  # DEBUG D#70 => D#1815
  # DEBUG __n => _593
  # DEBUG this => D#70
  _1062 = _893 + _1059;
  _867 = MEM[(int * *)_1062];
  # DEBUG __n => _1019
  # DEBUG this => D#55
  _1061 = _867 + _1057;
  vc_end_623 = *_1061;
  # DEBUG vc_end => vc_end_623

  <bb 315>:
  # out_vc_28 = PHI <out_vc_621(314), out_vc_625(444)>
  # vc_end_29 = PHI <vc_end_623(314), vc_end_626(444)>
  # DEBUG vc_end => vc_end_29
  # DEBUG vc_start => out_vc_28
  if (out_vc_28 < 0)
    goto <bb 317>;
  else
    goto <bb 316>;

  <bb 316>:
  _627 = this_108(D)->_vcs;
  if (out_vc_28 >= _627)
    goto <bb 317>;
  else
    goto <bb 318>;

  <bb 317>:
  __assert_fail ("vc_start >= 0 && vc_start < _vcs", "routers/iq_router.cpp", 1768, &__PRETTY_FUNCTION__);

  <bb 318>:
  _1519 = vc_end_29 >= _627;
  _1401 = vc_end_29 < 0;
  _1531 = _1401 | _1519;
  if (_1531 != 0)
    goto <bb 319>;
  else
    goto <bb 320>;

  <bb 319>:
  __assert_fail ("vc_end >= 0 && vc_end < _vcs", "routers/iq_router.cpp", 1769, &__PRETTY_FUNCTION__);

  <bb 320>:
  if (out_vc_28 > vc_end_29)
    goto <bb 322>;
  else
    goto <bb 321>;

  <bb 321>:
  # DEBUG out_vc => out_vc_28
  # DEBUG reserved => reserved_781
  # DEBUG busy => busy_19
  # DEBUG out_vc => out_vc_28
  # DEBUG reserved => reserved_781
  # DEBUG busy => busy_19
  # DEBUG out_vc => out_vc_28
  # DEBUG reserved => reserved_781
  # DEBUG busy => busy_19
  # DEBUG this => D#2714
  # DEBUG vc => out_vc_28
  _1394 = dest_buf_580->_vcs;
  if (out_vc_28 >= _1394)
    goto <bb 84>;
  else
    goto <bb 328>;

  <bb 322>:
  __assert_fail ("vc_end >= vc_start", "routers/iq_router.cpp", 1770, &__PRETTY_FUNCTION__);

  <bb 323>:
  # DEBUG out_vc => out_vc_631
  # DEBUG reserved => reserved_25
  # DEBUG busy => busy_15
  if (out_vc_631 < 0)
    goto <bb 325>;
  else
    goto <bb 324>;

  <bb 324>:
  # DEBUG out_vc => out_vc_631
  # DEBUG reserved => reserved_25
  # DEBUG busy => busy_15
  _628 = this_108(D)->_vcs;
  if (_628 <= out_vc_631)
    goto <bb 325>;
  else
    goto <bb 326>;

  <bb 325>:
  __assert_fail ("(out_vc >= 0) && (out_vc < _vcs)", "routers/iq_router.cpp", 1773, &__PRETTY_FUNCTION__);

  <bb 326>:
  # DEBUG this => D#2714
  # DEBUG vc => out_vc_631
  _1232 = dest_buf_580->_vcs;
  if (out_vc_631 >= _1232)
    goto <bb 84>;
  else
    goto <bb 327>;

  <bb 327>:
  goto <bb 329>;

  <bb 328>:

  <bb 329>:
  # busy_871 = PHI <busy_19(328), busy_15(327)>
  # reserved_964 = PHI <reserved_781(328), reserved_25(327)>
  # out_vc_1151 = PHI <out_vc_28(328), out_vc_631(327)>
  # DEBUG out_vc => out_vc_1151
  # DEBUG reserved => reserved_964
  # DEBUG busy => busy_871
  # DEBUG this => D#2714
  # DEBUG vc => out_vc_1151
  _1343 = (long unsigned int) out_vc_1151;
  # DEBUG D#51 => &MEM[(const struct BufferState *)D#2714]._in_use_by
  _1344 = MEM[(int * *)dest_buf_580 + 152B];
  # DEBUG D#48 => D#51
  # DEBUG __n => _1343
  # DEBUG this => D#48
  _1345 = _1343 * 4;
  _1346 = _1344 + _1345;
  _1347 = *_1346;
  if (_1347 < 0)
    goto <bb 330>;
  else
    goto <bb 335>;

  <bb 330>:
  # DEBUG busy => 0
  _844 = MEM[(struct BufferPolicy * *)dest_buf_580 + 144B];
  # DEBUG D#32 => D#2714
  # DEBUG vc => out_vc_1151
  # DEBUG this => D#32
  _1067 = _844->D.55980._vptr.Module;
  _1068 = MEM[(int (*__vtbl_ptr_type) () *)_1067 + 56B];
  _1069 = OBJ_TYPE_REF(_1068;(const struct BufferPolicy)_844->7) (_844, out_vc_1151);

  <bb 331>:
  if (_1069 != 0)
    goto <bb 332>;
  else
    goto <bb 406>;

  <bb 332>:
  _837 = MEM[(int *)dest_buf_580 + 100B];
  # DEBUG D#27 => D#2714
  _838 = MEM[(int *)dest_buf_580 + 104B];
  # DEBUG D#27 => D#2714
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (_837 < _838)
    goto <bb 39>;
  else
    goto <bb 333>;

  <bb 333>:
  if (_837 != _838)
    goto <bb 334>;
  else
    goto <bb 335>;

  <bb 334>:

  <bb 335>:
  # busy_15 = PHI <busy_871(329), 0(334), 0(333)>
  # reserved_25 = PHI <reserved_964(329), 1(334), reserved_964(333)>
  # DEBUG reserved => reserved_25
  # DEBUG busy => busy_15
  out_vc_631 = out_vc_1151 + 1;
  # DEBUG out_vc => out_vc_631
  # DEBUG out_vc => out_vc_631
  # DEBUG reserved => reserved_25
  # DEBUG busy => busy_15
  if (vc_end_29 < out_vc_631)
    goto <bb 336>;
  else
    goto <bb 323>;

  <bb 336>:
  # busy_1608 = PHI <busy_15(335)>
  # reserved_1606 = PHI <reserved_25(335)>

  <bb 337>:
  # busy_17 = PHI <busy_19(310), busy_1608(336)>
  # reserved_26 = PHI <reserved_781(310), reserved_1606(336)>
  # DEBUG reserved => reserved_26
  # DEBUG full => 1
  # DEBUG busy => busy_17
  # DEBUG this => &iset
  iset$_M_node_1070 = std::_Rb_tree_increment (iset$_M_node_78);
  # DEBUG iset$_M_node => iset$_M_node_1070
  # DEBUG iset$_M_node => iset$_M_node_1070
  # DEBUG reserved => reserved_26
  # DEBUG full => 1
  # DEBUG busy => busy_17
  # DEBUG this => &setlist
  # DEBUG D#276 => &setlist._M_t
  # DEBUG this => D#276
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header
  # DEBUG this => &iset
  # DEBUG __x => &D.65588
  if (&MEM[(const struct _Rb_tree *)&setlist]._M_impl._M_header != iset$_M_node_1070)
    goto <bb 338>;
  else
    goto <bb 446>;

  <bb 338>:
  goto <bb 310>;

  <bb 339>:
  # DEBUG reserved => NULL
  # DEBUG full => 1
  # DEBUG busy => 1
  # DEBUG D#1840 => {CLOBBER}
  # DEBUG iset$_M_node => D#1840
  _636 = MEM[(const struct Flit *)iftmp.304_1029].watch;
  if (_636 != 0)
    goto <bb 341>;
  else
    goto <bb 340>;

  <bb 340>:
  _885 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  STALL_BUFFER_BUSY.423_655 = STALL_BUFFER_BUSY;
  _885->second.second = STALL_BUFFER_BUSY.423_655;
  goto <bb 406>;

  <bb 341>:
  _637 = this_108(D)->D.51790._output_speedup;
  _638 = _573 % _637;
  _639 = this_108(D)->D.51790._input_speedup;
  _640 = vc_585 % _639;
  # DEBUG D#1818 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1818
  # DEBUG D#1819 => &MEM[(const struct Module *)this_108(D)]._fullname
  _642 = GetSimTime ();
  goto <bb 343>;

<L440>:
  goto <bb 427> (<L416>);

  <bb 343>:
  gWatchOut.410_643 = gWatchOut;
  _645 = std::basic_ostream<char>::operator<< (gWatchOut.410_643, _642);
  goto <bb 345>;

<L441>:
  goto <bb 427> (<L416>);

  <bb 345>:
  # DEBUG __out => _645
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_645, " | ", 3);
  goto <bb 347>;

<L442>:
  goto <bb 427> (<L416>);

  <bb 347>:
  # DEBUG __os => _645
  # DEBUG __str => D#1819
  _646 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1819
  # DEBUG this => D#3
  _1071 = (long int) _646;
  # DEBUG this => D#1819
  _1072 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1819
  # DEBUG this => D#1
  _1073 = std::__ostream_insert<char, std::char_traits<char> > (_645, _1072, _1071);
  goto <bb 349>;

<L443>:
  goto <bb 427> (<L416>);

  <bb 349>:
  # DEBUG __out => _1073
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1073, " | ", 3);
  goto <bb 351>;

<L444>:
  goto <bb 427> (<L416>);

  <bb 351>:
  # DEBUG __out => _1073
  # DEBUG __s => "Discarding grant from input "
  # DEBUG __s => "Discarding grant from input "
  std::__ostream_insert<char, std::char_traits<char> > (_1073, "Discarding grant from input ", 28);
  goto <bb 353>;

<L445>:
  goto <bb 427> (<L416>);

  <bb 353>:
  _648 = std::basic_ostream<char>::operator<< (_1073, input_581);
  goto <bb 355>;

<L446>:
  goto <bb 427> (<L416>);

  <bb 355>:
  # DEBUG __out => _648
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_648, ".", 1);
  goto <bb 357>;

<L447>:
  goto <bb 427> (<L416>);

  <bb 357>:
  _650 = std::basic_ostream<char>::operator<< (_648, _640);
  goto <bb 359>;

<L448>:
  goto <bb 427> (<L416>);

  <bb 359>:
  # DEBUG __out => _650
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_650, " to output ", 11);
  goto <bb 361>;

<L449>:
  goto <bb 427> (<L416>);

  <bb 361>:
  _652 = std::basic_ostream<char>::operator<< (_650, output_576);
  goto <bb 363>;

<L450>:
  goto <bb 427> (<L416>);

  <bb 363>:
  # DEBUG __out => _652
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_652, ".", 1);
  goto <bb 365>;

<L451>:
  goto <bb 427> (<L416>);

  <bb 365>:
  _654 = std::basic_ostream<char>::operator<< (_652, _638);
  goto <bb 367>;

<L452>:
  goto <bb 427> (<L416>);

  <bb 367>:
  # DEBUG __out => _654
  # DEBUG __s => " because no suitable output VC for piggyback allocation is available."
  # DEBUG __s => " because no suitable output VC for piggyback allocation is available."
  std::__ostream_insert<char, std::char_traits<char> > (_654, " because no suitable output VC for piggyback allocation is available.", 69);
  goto <bb 369>;

<L453>:
  goto <bb 427> (<L416>);

  <bb 369>:
  # DEBUG this => _654
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_654);
  goto <bb 340>;

<L454>:
  goto <bb 427> (<L416>);

  <bb 371>:
  _657 = MEM[(const struct Flit *)iftmp.304_1029].watch;
  if (_657 != 0)
    goto <bb 373>;
  else
    goto <bb 372>;

  <bb 372>:
  _886 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  if (reserved_1605 != 0)
    goto <bb 403>;
  else
    goto <bb 404>;

  <bb 373>:
  _658 = this_108(D)->D.51790._output_speedup;
  _659 = _573 % _658;
  _660 = this_108(D)->D.51790._input_speedup;
  _661 = vc_585 % _660;
  # DEBUG D#1820 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1820
  # DEBUG D#1821 => &MEM[(const struct Module *)this_108(D)]._fullname
  _664 = GetSimTime ();
  goto <bb 375>;

<L455>:
  goto <bb 427> (<L416>);

  <bb 375>:
  gWatchOut.410_665 = gWatchOut;
  _667 = std::basic_ostream<char>::operator<< (gWatchOut.410_665, _664);
  goto <bb 377>;

<L456>:
  goto <bb 427> (<L416>);

  <bb 377>:
  # DEBUG __out => _667
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_667, " | ", 3);
  goto <bb 379>;

<L457>:
  goto <bb 427> (<L416>);

  <bb 379>:
  # DEBUG __os => _667
  # DEBUG __str => D#1821
  _668 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1821
  # DEBUG this => D#3
  _1074 = (long int) _668;
  # DEBUG this => D#1821
  _1075 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1821
  # DEBUG this => D#1
  _1076 = std::__ostream_insert<char, std::char_traits<char> > (_667, _1075, _1074);
  goto <bb 381>;

<L458>:
  goto <bb 427> (<L416>);

  <bb 381>:
  # DEBUG __out => _1076
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1076, " | ", 3);
  goto <bb 383>;

<L459>:
  goto <bb 427> (<L416>);

  <bb 383>:
  # DEBUG __out => _1076
  # DEBUG __s => "Discarding grant from input "
  # DEBUG __s => "Discarding grant from input "
  std::__ostream_insert<char, std::char_traits<char> > (_1076, "Discarding grant from input ", 28);
  goto <bb 385>;

<L460>:
  goto <bb 427> (<L416>);

  <bb 385>:
  _670 = std::basic_ostream<char>::operator<< (_1076, input_581);
  goto <bb 387>;

<L461>:
  goto <bb 427> (<L416>);

  <bb 387>:
  # DEBUG __out => _670
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_670, ".", 1);
  goto <bb 389>;

<L462>:
  goto <bb 427> (<L416>);

  <bb 389>:
  _672 = std::basic_ostream<char>::operator<< (_670, _661);
  goto <bb 391>;

<L463>:
  goto <bb 427> (<L416>);

  <bb 391>:
  # DEBUG __out => _672
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_672, " to output ", 11);
  goto <bb 393>;

<L464>:
  goto <bb 427> (<L416>);

  <bb 393>:
  _674 = std::basic_ostream<char>::operator<< (_672, output_576);
  goto <bb 395>;

<L465>:
  goto <bb 427> (<L416>);

  <bb 395>:
  # DEBUG __out => _674
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_674, ".", 1);
  goto <bb 397>;

<L466>:
  goto <bb 427> (<L416>);

  <bb 397>:
  _676 = std::basic_ostream<char>::operator<< (_674, _659);
  goto <bb 399>;

<L467>:
  goto <bb 427> (<L416>);

  <bb 399>:
  # DEBUG __out => _676
  # DEBUG __s => " because all suitable output VCs for piggyback allocation are full."
  # DEBUG __s => " because all suitable output VCs for piggyback allocation are full."
  std::__ostream_insert<char, std::char_traits<char> > (_676, " because all suitable output VCs for piggyback allocation are full.", 67);
  goto <bb 401>;

<L468>:
  goto <bb 427> (<L416>);

  <bb 401>:
  # DEBUG this => _676
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_676);
  goto <bb 372>;

<L469>:
  goto <bb 427> (<L416>);

  <bb 403>:
  iftmp.454_677 = STALL_BUFFER_RESERVED;
  goto <bb 405>;

  <bb 404>:
  iftmp.454_678 = STALL_BUFFER_FULL;

  <bb 405>:
  # iftmp.454_47 = PHI <iftmp.454_677(403), iftmp.454_678(404)>
  _886->second.second = iftmp.454_47;

  <bb 406>:
  # DEBUG this => &setlist
  # DEBUG this => &setlist._M_t
  _1077 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];
  # DEBUG D#89 => &setlist._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&setlist._M_t, _1077);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  setlist ={v} {CLOBBER};
  pretmp_1427 = iter._M_cur;
  goto <bb 419>;

  <bb 407>:
  __assert_fail ("cur_buf->GetOutputPort(vc) == output", "routers/iq_router.cpp", 1815, &__PRETTY_FUNCTION__);

  <bb 408>:
  # DEBUG this => cur_buf_594
  # DEBUG vc => vc_585
  # DEBUG D#47 => &cur_buf_594->_vc
  # DEBUG D#42 => D#47
  # DEBUG __n => _1019
  # DEBUG this => D#42
  _1079 = MEM[(int *)_1023 + 196B];
  # DEBUG D#23 => _1023
  # DEBUG this => D#23
  # DEBUG match_vc => _1079
  _1402 = _586 <= _1079;
  _1506 = _1079 < 0;
  _1546 = _1402 | _1506;
  if (_1546 != 0)
    goto <bb 409>;
  else
    goto <bb 410>;

  <bb 409>:
  __assert_fail ("(match_vc >= 0) && (match_vc < _vcs)", "routers/iq_router.cpp", 1818, &__PRETTY_FUNCTION__);

  <bb 410>:
  _845 = MEM[(struct BufferPolicy * *)dest_buf_580 + 144B];
  # DEBUG D#32 => D#2714
  # DEBUG vc => _1079
  # DEBUG this => D#32
  _1080 = _845->D.55980._vptr.Module;
  _1081 = MEM[(int (*__vtbl_ptr_type) () *)_1080 + 56B];
  _1082 = OBJ_TYPE_REF(_1081;(const struct BufferPolicy)_845->7) (_845, _1079);
  if (_1082 != 0)
    goto <bb 412>;
  else
    goto <bb 411>;

  <bb 411>:
  pretmp_1550 = iter._M_cur;
  goto <bb 419>;

  <bb 412>:
  _761 = MEM[(const struct Flit *)iftmp.304_1029].watch;
  if (_761 != 0)
    goto <bb 413>;
  else
    goto <bb 414>;

  <bb 413>:
  _762 = this_108(D)->D.51790._output_speedup;
  _763 = _573 % _762;
  _764 = this_108(D)->D.51790._input_speedup;
  _765 = vc_585 % _764;
  # DEBUG D#1834 => &this_108(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1834
  # DEBUG D#1835 => &MEM[(const struct Module *)this_108(D)]._fullname
  _768 = GetSimTime ();
  gWatchOut.410_769 = gWatchOut;
  _771 = std::basic_ostream<char>::operator<< (gWatchOut.410_769, _768);
  # DEBUG __out => _771
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_771, " | ", 3);
  # DEBUG __os => _771
  # DEBUG __str => D#1835
  _772 = MEM[(long unsigned int *)this_108(D) + 48B];
  # DEBUG D#3 => D#1835
  # DEBUG this => D#3
  _1083 = (long int) _772;
  # DEBUG this => D#1835
  _1084 = MEM[(char * *)this_108(D) + 40B];
  # DEBUG D#1 => D#1835
  # DEBUG this => D#1
  _1085 = std::__ostream_insert<char, std::char_traits<char> > (_771, _1084, _1083);
  # DEBUG __out => _1085
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_1085, " | ", 3);
  # DEBUG __out => _1085
  # DEBUG __s => "  Discarding grant from input "
  # DEBUG __s => "  Discarding grant from input "
  std::__ostream_insert<char, std::char_traits<char> > (_1085, "  Discarding grant from input ", 30);
  _774 = std::basic_ostream<char>::operator<< (_1085, input_581);
  # DEBUG __out => _774
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_774, ".", 1);
  _776 = std::basic_ostream<char>::operator<< (_774, _765);
  # DEBUG __out => _776
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_776, " to output ", 11);
  _778 = std::basic_ostream<char>::operator<< (_776, output_576);
  # DEBUG __out => _778
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_778, ".", 1);
  _780 = std::basic_ostream<char>::operator<< (_778, _763);
  # DEBUG __out => _780
  # DEBUG __s => " due to lack of credit."
  # DEBUG __s => " due to lack of credit."
  std::__ostream_insert<char, std::char_traits<char> > (_780, " due to lack of credit.", 23);
  # DEBUG this => _780
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_780);

  <bb 414>:
  _887 = MEM[(struct pair * *)&iter];
  # DEBUG D#69 => &iter
  # DEBUG this => D#69
  _839 = MEM[(int *)dest_buf_580 + 100B];
  # DEBUG D#27 => D#2714
  _840 = MEM[(int *)dest_buf_580 + 104B];
  # DEBUG D#27 => D#2714
  # DEBUG this => D#27
  # DEBUG this => D#27
  if (_839 < _840)
    goto <bb 39>;
  else
    goto <bb 415>;

  <bb 415>:
  if (_839 == _840)
    goto <bb 416>;
  else
    goto <bb 417>;

  <bb 416>:
  iftmp.456_783 = STALL_BUFFER_FULL;
  goto <bb 418>;

  <bb 417>:
  iftmp.456_784 = STALL_BUFFER_RESERVED;

  <bb 418>:
  # iftmp.456_48 = PHI <iftmp.456_783(416), iftmp.456_784(417)>
  _887->second.second = iftmp.456_48;

  <bb 419>:
  # prephitmp_1537 = PHI <_880(238), pretmp_1427(406), prephitmp_1450(272), _882(281), _884(294), pretmp_1549(287), _883(285), _887(418), pretmp_1550(411)>
  # DEBUG this => &iter
  _1087 = prephitmp_1537 + 16;
  iter._M_cur = _1087;
  _1088 = iter._M_last;
  if (_1087 == _1088)
    goto <bb 421>;
  else
    goto <bb 420>;

  <bb 420>:
  pretmp_1460 = MEM[(const struct iterator &)this_108(D) + 720]._M_cur;
  goto <bb 232>;

  <bb 421>:
  std::_Deque_iterator<std::pair<int, std::pair<std::pair<int, int>, int> >, std::pair<int, std::pair<std::pair<int, int>, int> >&, std::pair<int, std::pair<std::pair<int, int>, int> >*>::_ZNSt15_Deque_iteratorISt4pairIiS0_IS0_IiiEiEERS3_PS3_EppEv.part.104 (&iter);
  pretmp_1426 = MEM[(struct pair * *)&iter];
  pretmp_1463 = MEM[(const struct iterator &)this_108(D) + 720]._M_cur;
  goto <bb 231>;

  <bb 422>:
  iter ={v} {CLOBBER};

  <bb 423>:
  return;

<L419>:

<L408>:
  # DEBUG D#1837 => {CLOBBER}
  # DEBUG iset$_M_node => D#1837
  # DEBUG this => &setlist
  # DEBUG this => &setlist._M_t
  _1089 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];
  # DEBUG D#89 => &setlist._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&setlist._M_t, _1089);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  resx 5

<L439>:

<L416>:
  # DEBUG this => &setlist
  # DEBUG this => &setlist._M_t
  _1090 = MEM[(struct _Rb_tree_node_base * *)&setlist + 16B];
  # DEBUG D#89 => &setlist._M_t
  # DEBUG this => D#89
  std::_Rb_tree<OutputSet::sSetElement, OutputSet::sSetElement, std::_Identity<OutputSet::sSetElement>, std::less<OutputSet::sSetElement>, std::allocator<OutputSet::sSetElement> >::_M_erase (&setlist._M_t, _1090);
  # DEBUG D#1120 => &MEM[(struct _Rb_tree *)&setlist]._M_impl
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  # DEBUG this => D#1120
  resx 20

  <bb 428>:
  _239 = MEM[(const struct Flit *)iftmp.304_579].watch;
  if (_239 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 429>:
  _256 = IQRouter::_SWAllocAddReq (this_108(D), input_112, vc_114, _350);
  # DEBUG requested => _256
  if (_256 != 0)
    goto <bb 44>;
  else
    goto <bb 46>;

  <bb 430>:
  _163 = this_108(D)->_routing_delay;
  if (_163 != 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 431>:
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_75
  # DEBUG D#1769 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_75]._M_value_field
  # DEBUG __r => D#1769
  dest_vc_172 = MEM[(const struct sSetElement *)iset$_M_node_75 + 32B].vc_start;
  # DEBUG vc_start => dest_vc_172
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_75
  # DEBUG D#1770 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_75]._M_value_field
  # DEBUG __r => D#1770
  vc_end_174 = MEM[(const struct sSetElement *)iset$_M_node_75 + 32B].vc_end;
  # DEBUG vc_end => vc_end_174
  goto <bb 77>;

  <bb 432>:
  # DEBUG elig => 1
  _184 = this_108(D)->_spec_check_cred;
  if (_184 != 0)
    goto <bb 95>;
  else
    goto <bb 433>;

  <bb 433>:
  # _1604 = PHI <_184(432)>

  <bb 434>:
  # prephitmp_1634 = PHI <_1604(433), pretmp_1633(97)>
  # DEBUG cred => 1
  # DEBUG elig => 1
  goto <bb 122>;

  <bb 435>:
  _517 = MEM[(const struct Flit *)iftmp.304_978].watch;
  if (_517 != 0)
    goto <bb 207>;
  else
    goto <bb 208>;

  <bb 436>:
  _438 = this_108(D)->_spec_mask_by_reqs;
  if (_438 != 0)
    goto <bb 438>;
  else
    goto <bb 209>;

  <bb 437>:
  _442 = MEM[(const struct Flit *)iftmp.304_978].watch;
  if (_442 != 0)
    goto <bb 210>;
  else
    goto <bb 211>;

  <bb 438>:
  _467 = this_108(D)->_spec_sw_allocator;
  _468 = _467->D.58179._vptr.Module;
  _469 = MEM[(int (*__vtbl_ptr_type) () *)_468 + 32B];
  _471 = OBJ_TYPE_REF(_469;(const struct Allocator)_467->4) (_467, expanded_input_355, expanded_output_414);
  # DEBUG granted_vc => _471
  if (vc_342 == _471)
    goto <bb 212>;
  else
    goto <bb 215>;

  <bb 439>:
  _851 = MEM[(struct BufferState * * *)this_108(D) + 904B];
  _578 = (long unsigned int) output_576;
  _1015 = _578 * 8;
  _1016 = _851 + _1015;
  dest_buf_580 = *_1016;
  _601 = this_108(D)->_speculative;
  # DEBUG this => cur_buf_594
  # DEBUG vc => vc_585
  # DEBUG D#43 => &cur_buf_594->_vc
  # DEBUG D#42 => D#43
  # DEBUG __n => _1019
  # DEBUG this => D#42
  # DEBUG D#21 => _1023
  # DEBUG this => D#21
  _979 = _1028 == 2;
  _574 = _601 & _979;
  if (_574 != 0)
    goto <bb 443>;
  else
    goto <bb 442>;

  <bb 440>:
  _788 = MEM[(const struct Flit *)iftmp.304_1029].watch;
  if (_788 != 0)
    goto <bb 263>;
  else
    goto <bb 272>;

  <bb 441>:
  gWatchOut.410_811 = gWatchOut;
  std::operator<< <std::char_traits<char> > (gWatchOut.410_811, " and ");
  goto <bb 269>;

  <bb 442>:
  # DEBUG this => cur_buf_594
  # DEBUG vc => vc_585
  # DEBUG D#46 => &cur_buf_594->_vc
  # DEBUG D#42 => D#46
  # DEBUG __n => _1019
  # DEBUG this => D#42
  _1078 = MEM[(int *)_1023 + 192B];
  # DEBUG D#22 => _1023
  # DEBUG this => D#22
  if (output_576 != _1078)
    goto <bb 407>;
  else
    goto <bb 408>;

  <bb 443>:
  _602 = MEM[(const struct Flit *)iftmp.304_1029].head;
  if (_602 != 0)
    goto <bb 274>;
  else
    goto <bb 273>;

  <bb 444>:
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_78
  # DEBUG D#1816 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_78]._M_value_field
  # DEBUG __r => D#1816
  out_vc_625 = MEM[(const struct sSetElement *)iset$_M_node_78 + 32B].vc_start;
  # DEBUG vc_start => out_vc_625
  # DEBUG this => &iset
  # DEBUG this => iset$_M_node_78
  # DEBUG D#1817 => &MEM[(const struct _Rb_tree_node *)iset$_M_node_78]._M_value_field
  # DEBUG __r => D#1817
  vc_end_626 = MEM[(const struct sSetElement *)iset$_M_node_78 + 32B].vc_end;
  # DEBUG vc_end => vc_end_626
  goto <bb 315>;

  <bb 445>:
  _618 = this_108(D)->_routing_delay;
  if (_618 != 0)
    goto <bb 313>;
  else
    goto <bb 314>;

  <bb 446>:
  # busy_1607 = PHI <busy_17(337)>
  # reserved_1605 = PHI <reserved_26(337)>
  # DEBUG reserved => reserved_1605
  # DEBUG full => 1
  # DEBUG busy => busy_1607
  # DEBUG D#1840 => {CLOBBER}
  # DEBUG iset$_M_node => D#1840
  if (busy_1607 != 0)
    goto <bb 339>;
  else
    goto <bb 371>;

  <bb 447>:
  _27 = this_108(D)->_sw_allocator;
  _22 = _27->D.58179._vptr.Module;
  _20 = MEM[(int (*__vtbl_ptr_type) () *)_22 + 64B];
  OBJ_TYPE_REF(_20;(struct Allocator)_27->8) (_27);
  _16 = this_108(D)->_spec_sw_allocator;
  if (_16 != 0B)
    goto <bb 164>;
  else
    goto <bb 166>;

  <bb 448>:
  _1560 = this_108(D)->_sw_allocator;
  _1559 = _1560->D.58179._vptr.Module;
  _1520 = MEM[(int (*__vtbl_ptr_type) () *)_1559 + 64B];
  OBJ_TYPE_REF(_1520;(struct Allocator)_1560->8) (_1560);
  _1521 = this_108(D)->_spec_sw_allocator;
  if (_1521 != 0B)
    goto <bb 164>;
  else
    goto <bb 165>;

}



;; Function void IQRouter::_SwitchUpdate() (_ZN8IQRouter13_SwitchUpdateEv, funcdef_no=2251, decl_uid=51712, cgraph_uid=696, symbol_order=697)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void IQRouter::_SwitchUpdate() (struct IQRouter * const this)
{
  char_type D.124902;
  char __c;
  char_type D.124899;
  char __c;
  char_type D.124896;
  struct basic_ostream & D.124890;
  char_type D.124887;
  char __c;
  char_type D.124884;
  char __c;
  char_type D.124881;
  struct basic_ostream & D.124875;
  const int output;
  const int expanded_output;
  const int input;
  const int expanded_input;
  struct Flit * const f;
  const int time;
  static const char __PRETTY_FUNCTION__[31] = "void IQRouter::_SwitchUpdate()";
  int _11;
  int _13;
  struct Flit * f.482_14;
  int _17;
  int _19;
  int _21;
  int _23;
  bool _24;
  int _25;
  int _26;
  int _27;
  int _29;
  struct ostream * gWatchOut.484_30;
  struct basic_ostream & _32;
  const size_type _33;
  struct basic_ostream & _35;
  struct basic_ostream & _37;
  struct basic_ostream & _39;
  struct basic_ostream & _41;
  struct basic_ostream & _43;
  struct SwitchMonitor * _45;
  bool _48;
  int _49;
  int _51;
  struct ostream * gWatchOut.484_52;
  struct basic_ostream & _54;
  const size_type _55;
  struct basic_ostream & _57;
  struct basic_ostream & _59;
  struct deque * _60;
  long unsigned int _61;
  struct pair * const _63;
  int _64;
  long unsigned int _65;
  int _66;
  int _67;
  int _68;
  long unsigned int _69;
  int _71;
  long unsigned int _72;
  long unsigned int _73;
  struct queue * _83;
  struct queue * _84;
  long int _85;
  char * const _86;
  struct basic_ostream & _87;
  long int _88;
  char * const _89;
  struct basic_ostream & _90;
  long unsigned int _91;
  struct queue & _92;
  struct Flit * * * _93;
  long int _94;
  struct Flit * * * _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _100;
  struct Flit * * _101;
  long int _102;
  struct Flit * * _103;
  long int _104;
  long int _105;
  long int _106;
  long int _107;
  struct Flit * * _108;
  long int _109;
  struct Flit * * _110;
  long int _111;
  long int _112;
  long int _113;
  difference_type _114;
  size_type _115;
  struct queue & _116;
  struct pair * _117;
  struct pair * _118;
  struct pair * _119;
  struct pair * _120;
  const struct __ctype_type * _130;
  const struct __ctype_type * _137;
  int (*__vtbl_ptr_type) () * _141;
  long int _142;
  sizetype _143;
  struct basic_ios * _144;
  struct basic_ostream & _147;
  long unsigned int _148;
  char _149;
  bool _150;
  bool _151;
  char_type _152;
  int (*__vtbl_ptr_type) () * _157;
  int (*__vtbl_ptr_type) () _158;
  void * PROF_162;
  char_type _164;
  bool _166;
  int (*__vtbl_ptr_type) () * _167;
  long int _168;
  sizetype _169;
  struct basic_ios * _170;
  struct basic_ostream & _173;
  char _175;
  char_type _178;
  int (*__vtbl_ptr_type) () * _183;
  int (*__vtbl_ptr_type) () _184;
  void * PROF_188;
  char_type _190;
  struct Flit * * _193;
  struct Flit * * _194;
  struct Flit * * _195;
  struct Flit * * _198;
  struct Flit * * _199;
  struct Flit * * _200;
  struct Flit * * * _202;
  struct Flit * * * _203;
  struct Flit * * _204;
  struct Flit * * _205;
  long unsigned int _207;
  struct Flit * * * _208;
  long int _209;
  struct Flit * * * _210;
  long int _211;
  long int _212;
  long int _213;
  long unsigned int _214;
  long unsigned int _215;
  struct pair * _216;
  struct pair * * _217;
  struct pair * * _218;
  struct pair * _219;
  struct pair * _220;
  struct pair * const prephitmp_314;
  struct Flit * * * pretmp_315;
  struct Flit * * * prephitmp_316;
  struct Flit * * pretmp_317;
  struct Flit * * prephitmp_318;
  int pretmp_319;
  int pretmp_320;
  int prephitmp_321;
  int pretmp_322;
  int pretmp_323;
  int prephitmp_324;
  struct pair * const pretmp_325;
  struct pair * const prephitmp_326;

  <bb 2>:
  pretmp_325 = MEM[(struct pair * *)this_8(D) + 768B];
  goto <bb 4>;

  <bb 3>:
  # prephitmp_314 = PHI <_219(44), _120(43)>

  <bb 50>:

  <bb 4>:
  # prephitmp_326 = PHI <prephitmp_314(50), pretmp_325(2)>
  # DEBUG D#1640 => &this_8(D)->_crossbar_flits
  # DEBUG this => D#1640
  # DEBUG D#153 => &MEM[(const struct deque *)D#1640].D.46860._M_impl._M_start
  # DEBUG D#154 => &MEM[(const struct deque *)D#1640].D.46860._M_impl._M_finish
  _63 = MEM[(struct pair * *)this_8(D) + 800B];
  # DEBUG D#151 => D#154
  # DEBUG D#2748 => MEM[(struct pair * *)this_8(D) + 768B]
  # DEBUG D#152 => D#153
  # DEBUG __x => D#151
  # DEBUG __y => D#152
  if (_63 != prephitmp_326)
    goto <bb 5>;
  else
    goto <bb 47>;

  <bb 5>:
  # DEBUG D#1633 => &this_8(D)->_crossbar_flits
  # DEBUG this => D#1633
  # DEBUG this => D#1633
  # DEBUG D#72 => &D#1633->D.46860._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#172 => MEM[(const struct iterator &)D#1633 + 16]._M_first
  # DEBUG D.93203 => D#172
  # DEBUG D#171 => MEM[(const struct iterator &)D#1633 + 16]._M_last
  # DEBUG D.93204 => D#171
  # DEBUG D#170 => MEM[(const struct iterator &)D#1633 + 16]._M_node
  # DEBUG D.93205 => D#170
  # DEBUG this => D#169
  # DEBUG item => D#2748
  time_9 = MEM[(const struct pair &)prephitmp_326].first;
  # DEBUG time => time_9
  if (time_9 < 0)
    goto <bb 46>;
  else
    goto <bb 6>;

  <bb 6>:
  _11 = GetSimTime ();
  if (time_9 > _11)
    goto <bb 46>;
  else
    goto <bb 45>;

  <bb 7>:
  __assert_fail ("GetSimTime() == time", "routers/iq_router.cpp", 2175, &__PRETTY_FUNCTION__);

  <bb 8>:
  f.482_14 = MEM[(const struct pair &)prephitmp_326].second.first;
  # DEBUG f => f.482_14
  if (f.482_14 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __assert_fail ("f", "routers/iq_router.cpp", 2178, &__PRETTY_FUNCTION__);

  <bb 10>:
  expanded_input_16 = MEM[(const struct pair &)prephitmp_326].second.second.first;
  # DEBUG expanded_input => expanded_input_16
  _17 = this_8(D)->D.51790._input_speedup;
  input_18 = expanded_input_16 / _17;
  # DEBUG input => input_18
  if (input_18 < 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _19 = this_8(D)->D.51790._inputs;
  if (input_18 >= _19)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 2182, &__PRETTY_FUNCTION__);

  <bb 13>:
  expanded_output_20 = MEM[(const struct pair &)prephitmp_326].second.second.second;
  # DEBUG expanded_output => expanded_output_20
  _21 = this_8(D)->D.51790._output_speedup;
  output_22 = expanded_output_20 / _21;
  # DEBUG output => output_22
  if (output_22 < 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  _23 = this_8(D)->D.51790._outputs;
  if (output_22 >= _23)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  __assert_fail ("(output >= 0) && (output < _outputs)", "routers/iq_router.cpp", 2185, &__PRETTY_FUNCTION__);

  <bb 16>:
  _24 = f.482_14->watch;
  if (_24 != 0)
    goto <bb 17>;
  else
    goto <bb 24>;

  <bb 17>:
  _25 = expanded_output_20 % _21;
  _26 = expanded_input_16 % _17;
  _27 = f.482_14->id;
  # DEBUG D#1634 => &this_8(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1634
  # DEBUG D#1635 => &MEM[(const struct Module *)this_8(D)]._fullname
  _29 = GetSimTime ();
  gWatchOut.484_30 = gWatchOut;
  _32 = std::basic_ostream<char>::operator<< (gWatchOut.484_30, _29);
  # DEBUG __out => _32
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_32, " | ", 3);
  # DEBUG __os => _32
  # DEBUG __str => D#1635
  _33 = MEM[(long unsigned int *)this_8(D) + 48B];
  # DEBUG D#3 => D#1635
  # DEBUG this => D#3
  _85 = (long int) _33;
  # DEBUG this => D#1635
  _86 = MEM[(char * *)this_8(D) + 40B];
  # DEBUG D#1 => D#1635
  # DEBUG this => D#1
  _87 = std::__ostream_insert<char, std::char_traits<char> > (_32, _86, _85);
  # DEBUG __out => _87
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_87, " | ", 3);
  # DEBUG __out => _87
  # DEBUG __s => "Completed crossbar traversal for flit "
  # DEBUG __s => "Completed crossbar traversal for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_87, "Completed crossbar traversal for flit ", 38);
  _35 = std::basic_ostream<char>::operator<< (_87, _27);
  # DEBUG __out => _35
  # DEBUG __s => " from input "
  # DEBUG __s => " from input "
  std::__ostream_insert<char, std::char_traits<char> > (_35, " from input ", 12);
  _37 = std::basic_ostream<char>::operator<< (_35, input_18);
  # DEBUG __out => _37
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_37, ".", 1);
  _39 = std::basic_ostream<char>::operator<< (_37, _26);
  # DEBUG __out => _39
  # DEBUG __s => " to output "
  # DEBUG __s => " to output "
  std::__ostream_insert<char, std::char_traits<char> > (_39, " to output ", 11);
  _41 = std::basic_ostream<char>::operator<< (_39, output_22);
  # DEBUG __out => _41
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_41, ".", 1);
  _43 = std::basic_ostream<char>::operator<< (_41, _25);
  # DEBUG __out => _43
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_43, ".", 1);
  # DEBUG this => _43
  # DEBUG __pf => endl
  # DEBUG __os => _43
  _141 = _43->_vptr.basic_ostream;
  _142 = MEM[(long int *)_141 + -24B];
  _143 = (sizetype) _142;
  _144 = _43 + _143;
  # DEBUG this => _144
  # DEBUG __c => 10
  _130 = MEM[(const struct basic_ios *)_144]._M_ctype;
  # DEBUG __f => _130
  if (_130 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  std::__throw_bad_cast ();

  <bb 19>:
  # DEBUG this => _130
  # DEBUG __c => 10
  _149 = MEM[(const struct ctype *)_130]._M_widen_ok;
  if (_149 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _152 = MEM[(const struct ctype *)_130]._M_widen[10];
  pretmp_322 = (int) _152;
  goto <bb 23>;

  <bb 21>:
  # DEBUG this => _130
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_130);
  _157 = MEM[(const struct ctype *)_130].D.24721._vptr.facet;
  _158 = MEM[(int (*__vtbl_ptr_type) () *)_157 + 48B];
  PROF_162 = [obj_type_ref] OBJ_TYPE_REF(_158;(const struct ctype)_130->6);
  if (PROF_162 == do_widen)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  _164 = OBJ_TYPE_REF(_158;(const struct ctype)_130->6) (_130, 10);
  pretmp_323 = (int) _164;

  <bb 23>:
  # prephitmp_324 = PHI <pretmp_322(20), 10(21), pretmp_323(22)>
  _147 = std::basic_ostream<char>::put (_43, prephitmp_324);
  # DEBUG __os => _147
  std::basic_ostream<char>::flush (_147);

  <bb 24>:
  _45 = this_8(D)->_switchMonitor;
  SwitchMonitor::traversal (_45, input_18, output_22, f.482_14);
  _48 = f.482_14->watch;
  if (_48 != 0)
    goto <bb 25>;
  else
    goto <bb 31>;

  <bb 25>:
  _49 = f.482_14->id;
  # DEBUG D#1636 => &this_8(D)->D.51790.D.42039.D.31271
  # DEBUG this => D#1636
  # DEBUG D#1637 => &MEM[(const struct Module *)this_8(D)]._fullname
  _51 = GetSimTime ();
  gWatchOut.484_52 = gWatchOut;
  _54 = std::basic_ostream<char>::operator<< (gWatchOut.484_52, _51);
  # DEBUG __out => _54
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_54, " | ", 3);
  # DEBUG __os => _54
  # DEBUG __str => D#1637
  _55 = MEM[(long unsigned int *)this_8(D) + 48B];
  # DEBUG D#3 => D#1637
  # DEBUG this => D#3
  _88 = (long int) _55;
  # DEBUG this => D#1637
  _89 = MEM[(char * *)this_8(D) + 40B];
  # DEBUG D#1 => D#1637
  # DEBUG this => D#1
  _90 = std::__ostream_insert<char, std::char_traits<char> > (_54, _89, _88);
  # DEBUG __out => _90
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_90, " | ", 3);
  # DEBUG __out => _90
  # DEBUG __s => "Buffering flit "
  # DEBUG __s => "Buffering flit "
  std::__ostream_insert<char, std::char_traits<char> > (_90, "Buffering flit ", 15);
  _57 = std::basic_ostream<char>::operator<< (_90, _49);
  # DEBUG __out => _57
  # DEBUG __s => " at output "
  # DEBUG __s => " at output "
  std::__ostream_insert<char, std::char_traits<char> > (_57, " at output ", 11);
  _59 = std::basic_ostream<char>::operator<< (_57, output_22);
  # DEBUG __out => _59
  # DEBUG __s => "."
  # DEBUG __s => "."
  std::__ostream_insert<char, std::char_traits<char> > (_59, ".", 1);
  # DEBUG this => _59
  # DEBUG __pf => endl
  # DEBUG __os => _59
  _167 = _59->_vptr.basic_ostream;
  _168 = MEM[(long int *)_167 + -24B];
  _169 = (sizetype) _168;
  _170 = _59 + _169;
  # DEBUG this => _170
  # DEBUG __c => 10
  _137 = MEM[(const struct basic_ios *)_170]._M_ctype;
  # DEBUG __f => _137
  if (_137 == 0B)
    goto <bb 18>;
  else
    goto <bb 26>;

  <bb 26>:
  # DEBUG this => _137
  # DEBUG __c => 10
  _175 = MEM[(const struct ctype *)_137]._M_widen_ok;
  if (_175 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _178 = MEM[(const struct ctype *)_137]._M_widen[10];
  pretmp_319 = (int) _178;
  goto <bb 30>;

  <bb 28>:
  # DEBUG this => _137
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_137);
  _183 = MEM[(const struct ctype *)_137].D.24721._vptr.facet;
  _184 = MEM[(int (*__vtbl_ptr_type) () *)_183 + 48B];
  PROF_188 = [obj_type_ref] OBJ_TYPE_REF(_184;(const struct ctype)_137->6);
  if (PROF_188 == do_widen)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  _190 = OBJ_TYPE_REF(_184;(const struct ctype)_137->6) (_137, 10);
  pretmp_320 = (int) _190;

  <bb 30>:
  # prephitmp_321 = PHI <pretmp_319(27), 10(28), pretmp_320(29)>
  _173 = std::basic_ostream<char>::put (_59, prephitmp_321);
  # DEBUG __os => _173
  std::basic_ostream<char>::flush (_173);

  <bb 31>:
  _61 = (long unsigned int) output_22;
  # DEBUG D#1638 => &this_8(D)->_output_buffer
  _83 = MEM[(struct queue * *)this_8(D) + 1016B];
  # DEBUG D#71 => D#1638
  # DEBUG __n => _61
  # DEBUG this => D#71
  _91 = _61 * 80;
  _92 = _83 + _91;
  # DEBUG this => NULL
  # DEBUG __x => &f
  # DEBUG D#2749 => &_92->c
  # DEBUG this => D#2749
  # DEBUG __x => &f
  _193 = MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_cur;
  _194 = MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_last;
  _195 = _194 + 18446744073709551608;
  if (_193 != _195)
    goto <bb 32>;
  else
    goto <bb 35>;

  <bb 32>:
  # DEBUG D#1632 => &D#2749->D.54933._M_impl
  # DEBUG D#413 => D#1632
  # DEBUG __p => _193
  # DEBUG __arg => &f
  # DEBUG __a => D#413
  # DEBUG D#412 => D#413
  # DEBUG D#411 => D#412
  # DEBUG __p => _193
  # DEBUG __val => &f
  # DEBUG this => D#411
  # DEBUG D#12 => 8
  # DEBUG __p => _193
  # DEBUG D.95094 => D#12
  if (_193 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  *_193 = f.482_14;
  pretmp_317 = MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_cur;

  <bb 34>:
  # prephitmp_318 = PHI <_193(32), pretmp_317(33)>

  <bb 48>:
  _198 = prephitmp_318 + 8;
  MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_cur = _198;
  goto <bb 40>;

  <bb 35>:
  # DEBUG this => D#2749
  # DEBUG __t => &f
  # DEBUG this => D#2749
  # DEBUG __nodes_to_add => 1
  _207 = MEM[(struct deque *)_92].D.54933._M_impl._M_map_size;
  _208 = MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_node;
  _209 = (long int) _208;
  _210 = MEM[(struct deque *)_92].D.54933._M_impl._M_map;
  _211 = (long int) _210;
  _212 = _209 - _211;
  _213 = _212 /[ex] -8;
  _214 = (long unsigned int) _213;
  _215 = _207 + _214;
  if (_215 <= 1)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  _60 = &_92->c;
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (_60, 1, 0);
  pretmp_315 = MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_node;

  <bb 37>:
  # prephitmp_316 = PHI <pretmp_315(36), _208(35)>
  # DEBUG D#1631 => &D#2749->D.54933
  # DEBUG D#1361 => D#1631
  # DEBUG this => D#1361
  # DEBUG D#1360 => D#1361
  # DEBUG __size => 8
  # DEBUG D#1359 => &D#1360->_M_impl
  # DEBUG D#1358 => D#1359
  # DEBUG __n => NULL
  # DEBUG __a => D#1358
  # DEBUG D#1357 => D#1358
  # DEBUG D#1355 => D#1357
  # DEBUG D#1356 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1355
  # DEBUG D.124918 => D#1356
  # DEBUG D#1354 => D#1355
  # DEBUG D#1353 => D#1354
  # DEBUG this => D#1353
  _199 = operator new (512);
  MEM[(struct Flit * * *)prephitmp_316 + 8B] = _199;
  _200 = MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_cur;
  # DEBUG D#1630 => &D#2749->D.54933._M_impl
  # DEBUG D#411 => D#1630
  # DEBUG __p => _200
  # DEBUG __val => &f
  # DEBUG this => D#411
  # DEBUG D#12 => 8
  # DEBUG __p => _200
  # DEBUG D.95094 => D#12
  if (_200 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  *_200 = f.482_14;

  <bb 39>:

  <bb 49>:
  _202 = MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_node;
  _203 = _202 + 8;
  # DEBUG D#1629 => &D#2749->D.54933._M_impl._M_finish
  # DEBUG this => D#1629
  # DEBUG __new_node => _203
  MEM[(struct _Deque_iterator *)_92 + 48B]._M_node = _203;
  _204 = MEM[(struct Flit * * *)_202 + 8B];
  MEM[(struct _Deque_iterator *)_92 + 48B]._M_first = _204;
  # DEBUG __size => 8
  _205 = _204 + 512;
  MEM[(struct _Deque_iterator *)_92 + 48B]._M_last = _205;
  MEM[(struct deque *)_92].D.54933._M_impl._M_finish._M_cur = _204;

  <bb 40>:
  # DEBUG D#1639 => &this_8(D)->_output_buffer
  _84 = MEM[(struct queue * *)this_8(D) + 1016B];
  # DEBUG D#71 => D#1639
  # DEBUG __n => _61
  # DEBUG this => D#71
  _116 = _84 + _91;
  # DEBUG this => NULL
  # DEBUG this => D#205
  # DEBUG D#201 => &D#205->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#205->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _93 = MEM[(const struct _Deque_iterator &)_116 + 48]._M_node;
  _94 = (long int) _93;
  _95 = MEM[(const struct _Deque_iterator &)_116 + 16]._M_node;
  _96 = (long int) _95;
  _97 = _94 - _96;
  _98 = _97 /[ex] 8;
  _99 = _98 + -1;
  _100 = _99 * 64;
  _101 = MEM[(const struct _Deque_iterator &)_116 + 48]._M_cur;
  _102 = (long int) _101;
  _103 = MEM[(const struct _Deque_iterator &)_116 + 48]._M_first;
  _104 = (long int) _103;
  _105 = _102 - _104;
  _106 = _105 /[ex] 8;
  _107 = _100 + _106;
  _108 = MEM[(const struct _Deque_iterator &)_116 + 16]._M_last;
  _109 = (long int) _108;
  _110 = MEM[(const struct _Deque_iterator &)_116 + 16]._M_cur;
  _111 = (long int) _110;
  _112 = _109 - _111;
  _113 = _112 /[ex] 8;
  _114 = _107 + _113;
  _115 = (size_type) _114;
  _64 = this_8(D)->_output_buffer_size;
  _65 = (long unsigned int) _64;
  _66 = this_8(D)->D.51790._crossbar_delay;
  _67 = this_8(D)->D.51790._output_speedup;
  _68 = _66 * _67;
  _69 = (long unsigned int) _68;
  _71 = _67 + -1;
  _72 = (long unsigned int) _71;
  _148 = _69 + _72;
  _73 = _65 + _148;
  _166 = _64 != -1;
  _150 = _73 < _115;
  _151 = _150 & _166;
  if (_151 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  __assert_fail ("_output_buffer[output].size()<=(size_t)_output_buffer_size+ _crossbar_delay* _output_speedup+( _output_speedup-1) ||_output_buffer_size==-1", "routers/iq_router.cpp", 2207, &__PRETTY_FUNCTION__);

  <bb 42>:
  # DEBUG D#2747 => &this_8(D)->_crossbar_flits
  # DEBUG this => D#2747
  _117 = MEM[(struct deque *)this_8(D) + 752B].D.46860._M_impl._M_start._M_cur;
  _118 = MEM[(struct deque *)this_8(D) + 752B].D.46860._M_impl._M_start._M_last;
  _119 = _118 + 18446744073709551592;
  if (_117 != _119)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG D#793 => D#2747->D.46860._M_impl._M_start._M_cur
  # DEBUG D#792 => &D#2747->D.46860._M_impl
  # DEBUG D#306 => D#792
  # DEBUG D#307 => D#793
  # DEBUG __a => D#306
  # DEBUG __p => D#307
  # DEBUG D#305 => D#307
  # DEBUG D#304 => D#306
  # DEBUG D#302 => D#304
  # DEBUG D#303 => D#305
  # DEBUG this => D#302
  # DEBUG __p => D#303
  _120 = _117 + 24;
  MEM[(struct deque *)this_8(D) + 752B].D.46860._M_impl._M_start._M_cur = _120;
  goto <bb 3>;

  <bb 44>:
  # DEBUG this => D#2747
  # DEBUG this => D#2747
  # DEBUG D#791 => D#2747->D.46860._M_impl._M_start._M_cur
  # DEBUG D#788 => &D#2747->D.46860
  # DEBUG this => D#788
  # DEBUG D#307 => D#791
  # DEBUG __a => D#306
  # DEBUG __p => D#307
  # DEBUG D#305 => D#307
  # DEBUG D#304 => D#306
  # DEBUG D#302 => D#304
  # DEBUG D#303 => D#305
  # DEBUG this => D#302
  # DEBUG __p => D#303
  _216 = MEM[(struct deque *)this_8(D) + 752B].D.46860._M_impl._M_start._M_first;
  # DEBUG D#790 => &D#2747->D.46860
  # DEBUG this => D#790
  # DEBUG __p => _216
  # DEBUG __size => 24
  # DEBUG D#784 => &D#790->_M_impl
  # DEBUG D#782 => D#784
  # DEBUG __p => _216
  # DEBUG __a => D#782
  # DEBUG __n => D#783
  # DEBUG D#781 => D#783
  # DEBUG D#780 => D#782
  # DEBUG D#778 => D#780
  # DEBUG D#779 => D#781
  # DEBUG __p => _216
  # DEBUG this => D#778
  # DEBUG D.124936 => D#779
  operator delete (_216);
  _217 = MEM[(struct deque *)this_8(D) + 752B].D.46860._M_impl._M_start._M_node;
  _218 = _217 + 8;
  # DEBUG D#789 => &D#2747->D.46860._M_impl._M_start
  # DEBUG this => D#789
  # DEBUG __new_node => _218
  MEM[(struct _Deque_iterator *)this_8(D) + 768B]._M_node = _218;
  _219 = MEM[(struct pair * *)_217 + 8B];
  MEM[(struct _Deque_iterator *)this_8(D) + 768B]._M_first = _219;
  # DEBUG __size => 24
  _220 = _219 + 504;
  MEM[(struct _Deque_iterator *)this_8(D) + 768B]._M_last = _220;
  MEM[(struct deque *)this_8(D) + 752B].D.46860._M_impl._M_start._M_cur = _219;
  goto <bb 3>;

  <bb 45>:
  _13 = GetSimTime ();
  if (time_9 != _13)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 46>:

  <bb 51>:

  <bb 47>:

  <bb 52>:
  return;

}



;; Function void IQRouter::_OutputQueuing() (_ZN8IQRouter14_OutputQueuingEv, funcdef_no=2252, decl_uid=51714, cgraph_uid=697, symbol_order=698)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void IQRouter::_OutputQueuing() (struct IQRouter * const this)
{
  const struct _Rb_tree_node_base * const iter$_M_node;
  struct Credit * const c;
  const int input;
  static const char __PRETTY_FUNCTION__[32] = "void IQRouter::_OutputQueuing()";
  int _7;
  struct Credit * c.487_8;
  long unsigned int _10;
  struct _Rep_type * _12;
  struct queue * _18;
  const size_type _19;
  struct deque * _20;
  long unsigned int _21;
  struct queue & _22;
  struct _Rb_tree_node_base * _24;
  struct Credit * * _32;
  struct Credit * * _33;
  struct Credit * * _34;
  struct _Rb_tree_node_base * _35;
  struct Credit * * _37;
  struct Credit * * _38;
  struct Credit * * _39;
  struct Credit * * * _41;
  struct Credit * * * _42;
  struct Credit * * _43;
  struct Credit * * _44;
  long unsigned int _46;
  struct Credit * * * _47;
  long int _48;
  struct Credit * * * _49;
  long int _50;
  long int _51;
  long int _52;
  long unsigned int _53;
  long unsigned int _54;
  int _74;
  struct Credit * c.487_75;
  const size_type _76;
  struct Credit * c.487_78;
  struct Credit * * * pretmp_105;
  struct Credit * * * prephitmp_106;
  struct Credit * * pretmp_107;
  struct Credit * * prephitmp_108;

  <bb 2>:
  # DEBUG D#1650 => &this_2(D)->_out_queue_credits
  # DEBUG this => D#1650
  # DEBUG D#292 => &D#1650->_M_t
  iter$_M_node_4 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 856B];
  # DEBUG D#291 => D#292
  # DEBUG this => D#291
  # DEBUG this => NULL
  # DEBUG __x => iter$_M_node_4
  # DEBUG this => &iter
  # DEBUG __it => &D.65768
  # DEBUG iter$_M_node => iter$_M_node_4
  # DEBUG iter$_M_node => iter$_M_node_4
  # DEBUG D#1655 => &this_2(D)->_out_queue_credits
  # DEBUG this => D#1655
  # DEBUG D#293 => &D#1655->_M_t
  # DEBUG this => D#293
  _35 = &MEM[(struct _Rb_tree *)this_2(D) + 832B]._M_impl._M_header;
  # DEBUG this => NULL
  # DEBUG __x => _35
  # DEBUG this => &D.65780
  # DEBUG __it => &D.65779
  # DEBUG this => &iter
  # DEBUG __x => &D.65780
  if (iter$_M_node_4 != _35)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG D#1657 => {CLOBBER}
  # DEBUG iter$_M_node => D#1657
  # DEBUG D#1658 => &this_2(D)->_out_queue_credits
  # DEBUG this => D#1658
  _12 = &MEM[(struct map *)this_2(D) + 832B]._M_t;
  # DEBUG this => _12
  _24 = MEM[(struct _Rb_tree_node_base * *)this_2(D) + 848B];
  # DEBUG D#118 => _12
  # DEBUG this => D#118
  std::_Rb_tree<int, std::pair<const int, Credit*>, std::_Select1st<std::pair<const int, Credit*> >, std::less<int>, std::allocator<std::pair<const int, Credit*> > >::_M_erase (_12, _24);
  # DEBUG D#1235 => &MEM[(struct _Rb_tree *)_12]._M_impl
  # DEBUG this => D#1235
  MEM[(struct _Rb_tree_impl *)this_2(D) + 832B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 832B]._M_header._M_left = _35;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 832B]._M_header._M_right = _35;
  MEM[(struct _Rb_tree_impl *)this_2(D) + 832B]._M_node_count = 0;
  return;

  <bb 4>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_4
  # DEBUG D#1651 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_4]._M_value_field
  # DEBUG __r => D#1651
  input_77 = MEM[(const struct pair *)iter$_M_node_4 + 32B].first;
  # DEBUG input => input_77
  if (input_77 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __assert_fail ("(input >= 0) && (input < _inputs)", "routers/iq_router.cpp", 2224, &__PRETTY_FUNCTION__);

  <bb 6>:
  _74 = this_2(D)->D.51790._inputs;
  if (_74 <= input_77)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 7>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_4
  # DEBUG D#1652 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_4]._M_value_field
  # DEBUG __r => D#1652
  c.487_75 = MEM[(const struct pair *)iter$_M_node_4 + 32B].second;
  # DEBUG c => c.487_75
  if (c.487_75 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __assert_fail ("c", "routers/iq_router.cpp", 2227, &__PRETTY_FUNCTION__);

  <bb 9>:
  # DEBUG D#1653 => &c.487_75->vc
  # DEBUG this => D#1653
  # DEBUG D#174 => &MEM[(const struct set *)D#1653]._M_t
  _76 = MEM[(long unsigned int *)c.487_75 + 40B];
  # DEBUG D#173 => D#174
  # DEBUG this => D#173
  if (_76 == 0)
    goto <bb 10>;
  else
    goto <bb 16>;

  <bb 10>:
  __assert_fail ("!c->vc.empty()", "routers/iq_router.cpp", 2228, &__PRETTY_FUNCTION__);

  <bb 11>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_23
  # DEBUG D#1651 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_23]._M_value_field
  # DEBUG __r => D#1651
  input_6 = MEM[(const struct pair *)iter$_M_node_23 + 32B].first;
  # DEBUG input => input_6
  if (input_6 < 0)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 12>:
  _7 = this_2(D)->D.51790._inputs;
  if (input_6 >= _7)
    goto <bb 5>;
  else
    goto <bb 13>;

  <bb 13>:
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_23
  # DEBUG D#1652 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_23]._M_value_field
  # DEBUG __r => D#1652
  c.487_8 = MEM[(const struct pair *)iter$_M_node_23 + 32B].second;
  # DEBUG c => c.487_8
  if (c.487_8 == 0B)
    goto <bb 8>;
  else
    goto <bb 14>;

  <bb 14>:
  # DEBUG D#1653 => &c.487_8->vc
  # DEBUG this => D#1653
  # DEBUG D#174 => &MEM[(const struct set *)D#1653]._M_t
  _19 = MEM[(long unsigned int *)c.487_8 + 40B];
  # DEBUG D#173 => D#174
  # DEBUG this => D#173
  if (_19 == 0)
    goto <bb 10>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 17>;

  <bb 16>:

  <bb 17>:
  # input_11 = PHI <input_77(16), input_6(15)>
  # c.487_78 = PHI <c.487_75(16), c.487_8(15)>
  # iter$_M_node_79 = PHI <iter$_M_node_4(16), iter$_M_node_23(15)>
  # DEBUG iter$_M_node => iter$_M_node_79
  # DEBUG D#1655 => &this_2(D)->_out_queue_credits
  # DEBUG this => D#1655
  # DEBUG D#293 => &D#1655->_M_t
  # DEBUG this => D#293
  # DEBUG this => NULL
  # DEBUG __x => _35
  # DEBUG this => &D.65780
  # DEBUG __it => &D.65779
  # DEBUG this => &iter
  # DEBUG __x => &D.65780
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_79
  # DEBUG D#1651 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_79]._M_value_field
  # DEBUG input => input_11
  # DEBUG this => &iter
  # DEBUG this => iter$_M_node_79
  # DEBUG D#1652 => &MEM[(const struct _Rb_tree_node *)iter$_M_node_79]._M_value_field
  # DEBUG __r => D#1652
  # DEBUG c => c.487_78
  # DEBUG D#1653 => &c.487_78->vc
  # DEBUG this => D#1653
  # DEBUG D#174 => &MEM[(const struct set *)D#1653]._M_t
  # DEBUG D#173 => D#174
  # DEBUG this => D#173
  _10 = (long unsigned int) input_11;
  # DEBUG D#1654 => &this_2(D)->_credit_buffer
  _18 = MEM[(struct queue * *)this_2(D) + 1040B];
  # DEBUG D#75 => D#1654
  # DEBUG __n => _10
  # DEBUG this => D#75
  _21 = _10 * 80;
  _22 = _18 + _21;
  # DEBUG this => NULL
  # DEBUG __x => &c
  # DEBUG D#2754 => &_22->c
  # DEBUG this => D#2754
  # DEBUG __x => &c
  _32 = MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_cur;
  _33 = MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_last;
  _34 = _33 + 18446744073709551608;
  if (_32 != _34)
    goto <bb 18>;
  else
    goto <bb 21>;

  <bb 18>:
  # DEBUG D#1649 => &D#2754->D.62618._M_impl
  # DEBUG D#416 => D#1649
  # DEBUG __p => _32
  # DEBUG __arg => &c
  # DEBUG __a => D#416
  # DEBUG D#415 => D#416
  # DEBUG D#414 => D#415
  # DEBUG __p => _32
  # DEBUG __val => &c
  # DEBUG this => D#414
  # DEBUG D#12 => 8
  # DEBUG __p => _32
  # DEBUG D.95120 => D#12
  if (_32 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  *_32 = c.487_78;
  pretmp_107 = MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_cur;

  <bb 20>:
  # prephitmp_108 = PHI <_32(18), pretmp_107(19)>

  <bb 27>:
  _37 = prephitmp_108 + 8;
  MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_cur = _37;
  goto <bb 26>;

  <bb 21>:
  # DEBUG this => D#2754
  # DEBUG __t => &c
  # DEBUG this => D#2754
  # DEBUG __nodes_to_add => 1
  _46 = MEM[(struct deque *)_22].D.62618._M_impl._M_map_size;
  _47 = MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_node;
  _48 = (long int) _47;
  _49 = MEM[(struct deque *)_22].D.62618._M_impl._M_map;
  _50 = (long int) _49;
  _51 = _48 - _50;
  _52 = _51 /[ex] -8;
  _53 = (long unsigned int) _52;
  _54 = _46 + _53;
  if (_54 <= 1)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _20 = &_22->c;
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (_20, 1, 0);
  pretmp_105 = MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_node;

  <bb 23>:
  # prephitmp_106 = PHI <pretmp_105(22), _47(21)>
  # DEBUG D#1648 => &D#2754->D.62618
  # DEBUG D#1381 => D#1648
  # DEBUG this => D#1381
  # DEBUG D#1380 => D#1381
  # DEBUG __size => 8
  # DEBUG D#1379 => &D#1380->_M_impl
  # DEBUG D#1378 => D#1379
  # DEBUG __n => NULL
  # DEBUG __a => D#1378
  # DEBUG D#1377 => D#1378
  # DEBUG D#1375 => D#1377
  # DEBUG D#1376 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1375
  # DEBUG D.125021 => D#1376
  # DEBUG D#1374 => D#1375
  # DEBUG D#1373 => D#1374
  # DEBUG this => D#1373
  _38 = operator new (512);
  MEM[(struct Credit * * *)prephitmp_106 + 8B] = _38;
  _39 = MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_cur;
  # DEBUG D#1647 => &D#2754->D.62618._M_impl
  # DEBUG D#414 => D#1647
  # DEBUG __p => _39
  # DEBUG __val => &c
  # DEBUG this => D#414
  # DEBUG D#12 => 8
  # DEBUG __p => _39
  # DEBUG D.95120 => D#12
  if (_39 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  *_39 = c.487_78;

  <bb 25>:

  <bb 28>:
  _41 = MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_node;
  _42 = _41 + 8;
  # DEBUG D#1646 => &D#2754->D.62618._M_impl._M_finish
  # DEBUG this => D#1646
  # DEBUG __new_node => _42
  MEM[(struct _Deque_iterator *)_22 + 48B]._M_node = _42;
  _43 = MEM[(struct Credit * * *)_41 + 8B];
  MEM[(struct _Deque_iterator *)_22 + 48B]._M_first = _43;
  # DEBUG __size => 8
  _44 = _43 + 512;
  MEM[(struct _Deque_iterator *)_22 + 48B]._M_last = _44;
  MEM[(struct deque *)_22].D.62618._M_impl._M_finish._M_cur = _43;

  <bb 26>:
  # DEBUG D#2753 => {CLOBBER}
  # DEBUG c => D#2753
  # DEBUG this => &iter
  iter$_M_node_23 = std::_Rb_tree_increment (iter$_M_node_79);
  # DEBUG iter$_M_node => iter$_M_node_23
  # DEBUG iter$_M_node => iter$_M_node_23
  # DEBUG D#1655 => &this_2(D)->_out_queue_credits
  # DEBUG this => D#1655
  # DEBUG D#293 => &D#1655->_M_t
  # DEBUG this => D#293
  # DEBUG this => NULL
  # DEBUG __x => _35
  # DEBUG this => &D.65780
  # DEBUG __it => &D.65779
  # DEBUG this => &iter
  # DEBUG __x => &D.65780
  if (iter$_M_node_23 != _35)
    goto <bb 11>;
  else
    goto <bb 3>;

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<Flit*>*; _Size = long unsigned int; _Tp = std::queue<Flit*>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5queueIP4FlitSt5dequeIS4_SaIS4_EEEmS8_EET_SA_T0_RKT1_, funcdef_no=4098, decl_uid=74684, cgraph_uid=2543, symbol_order=2544)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<Flit*>*; _Size = long unsigned int; _Tp = std::queue<Flit*>; bool _TrivialValueType = false] (struct queue * __first, long unsigned int __n, const struct queue & __x)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.3983;
  struct Flit * * SR.3982;
  struct Flit * * SR.3981;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.125297;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125272;
  struct _Deque_iterator D.125271;
  struct _Deque_iterator D.125270;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125252;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125238;
  struct _Deque_iterator D.125237;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125230;
  struct _Deque_iterator D.125229;
  struct _Deque_iterator D.125228;
  void * _12;
  struct _Deque_base * _18;
  struct Flit * * * _25;
  long int _26;
  struct Flit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Flit * * _33;
  long int _34;
  struct Flit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Flit * * _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Flit * * _49;
  struct Flit * * _51;
  struct Flit * * * _52;
  struct Flit * * _53;
  struct Flit * * _54;
  struct Flit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Flit * _117;
  struct Flit * * _122;
  struct Flit * * * _134;
  struct Flit * * _135;
  struct Flit * * _136;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_154 = PHI <__n_5(D)(3), __n_10(16)>
  # __first_155 = PHI <__first_4(D)(3), __first_11(16)>
  # DEBUG __cur => __first_155
  # DEBUG __n => __n_154
  # DEBUG __r => __first_155
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.106160 => D#12
  if (__first_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.106270 => __x_8(D)
  # DEBUG D#2762 => &__x_8(D)->c
  # DEBUG D#2764 => &__first_155->c
  # DEBUG this => D#2764
  # DEBUG __x => D#2762
  # DEBUG this => D#2762
  # DEBUG D#201 => &D#2762->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#2762->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1535 => &D#2762->D.54933
  # DEBUG this => D#1535
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__first_155].D.54933;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1372 => &_48->_M_impl
  # DEBUG this => D#1372
  # DEBUG __a => NULL
  # DEBUG this => D#1372
  # DEBUG __a => NULL
  # DEBUG this => D#1372
  # DEBUG D.96699 => NULL
  MEM[(struct _Deque_impl *)__first_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_155]._M_map_size = 0;
  # DEBUG D#712 => &D#1372->_M_start
  # DEBUG this => D#712
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_node = 0B;
  # DEBUG D#711 => &D#1372->_M_finish
  # DEBUG this => D#711
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1536 => &D#2764->D.54933
  # DEBUG this => D#1536
  # DEBUG D#1537 => &D#2764->D.54933._M_impl._M_start
  # DEBUG this => &D.125228
  # DEBUG __x => D#1537
  _49 = MEM[(const struct iterator &)__first_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__first_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__first_155 + 16]._M_node;
  # DEBUG this => D#2762
  # DEBUG D#179 => &D#2762->D.54933._M_impl._M_finish
  # DEBUG this => &D.125229
  # DEBUG __x => D#179
  _53 = MEM[(const struct iterator &)__x_8(D) + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__x_8(D) + 48]._M_first;
  # DEBUG D#2763 => MEM[(const struct iterator &)__x_8(D) + 48]._M_last
  _56 = MEM[(const struct iterator &)__x_8(D) + 48]._M_node;
  # DEBUG this => D#2762
  # DEBUG D#180 => &D#2762->D.54933._M_impl._M_start
  # DEBUG this => &D.125230
  # DEBUG __x => D#180
  __first$_M_cur_57 = MEM[(const struct iterator &)__x_8(D) + 16]._M_cur;
  # DEBUG D#2765 => MEM[(const struct iterator &)__x_8(D) + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__x_8(D) + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__x_8(D) + 16]._M_node;
  # DEBUG __result => &D.125228
  # DEBUG D.125234 => D#1534
  # DEBUG this => &D.125238
  # DEBUG __x => &D.125228
  # DEBUG __result => &D.125238
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.125238
  # DEBUG __result => NULL
  # DEBUG this => &D.125252
  # DEBUG __x => NULL
  # DEBUG __result => &D.125252
  # DEBUG this => &D.125272
  # DEBUG __x => &D.125252
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#2763
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#2763
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#2765
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#2765
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.125272
  # DEBUG this => NULL
  # DEBUG __x => &D.125272
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#2763
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#2763
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#2765
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#2765
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#2765
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.125297
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#2765
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.125297
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.125237
  # DEBUG __x => &D.125297
  D.125297 ={v} {CLOBBER};
  D.125272 ={v} {CLOBBER};
  D.125252 ={v} {CLOBBER};
  D.125238 ={v} {CLOBBER};
  D.125228 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.3981_217 = PHI <_49(8), SR.3981_216(14)>
  # SR.3982_214 = PHI <_51(8), SR.3982_213(14)>
  # SR.3983_212 = PHI <_52(8), SR.3983_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#308 => &D.125297
  # DEBUG this => D#308
  # DEBUG D#98 => &__first
  # DEBUG this => D#98
  _117 = MEM[(struct Flit * const &)__first$_M_cur_209];
  *SR.3981_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Flit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.125297
  _122 = SR.3981_217 + 8;
  if (_122 == SR.3982_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.125297
  _134 = SR.3983_212 + 8;
  # DEBUG this => &D.125297
  # DEBUG __new_node => _134
  _135 = MEM[(struct Flit * * *)SR.3983_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.3981_216 = PHI <_122(11), _135(12)>
  # SR.3982_213 = PHI <SR.3982_214(11), _136(12)>
  # SR.3983_211 = PHI <SR.3983_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __n_10 = __n_154 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_155 + 80;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __first_194 = PHI <__first_11(15)>

  <bb 18>:
  # __first_156 = PHI <__first_194(17), __first_4(D)(2)>
  return __first_156;

  # __first_193 = PHI <__first_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __first_158 = PHI <__first_4(D)(21), __first_19(23)>
  # DEBUG __first => __first_158
  # DEBUG __r => __first_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  _18 = &MEM[(struct deque *)__first_158].D.54933;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_18);
  MEM[(struct  &)__first_158] ={v} {CLOBBER};
  __first_19 = __first_158 + 80;
  # DEBUG __first => __first_19
  # DEBUG __first => __first_19
  if (__first_19 == __first_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<Credit*>*; _Size = long unsigned int; _Tp = std::queue<Credit*>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5queueIP6CreditSt5dequeIS4_SaIS4_EEEmS8_EET_SA_T0_RKT1_, funcdef_no=4114, decl_uid=74774, cgraph_uid=2559, symbol_order=2560)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<Credit*>*; _Size = long unsigned int; _Tp = std::queue<Credit*>; bool _TrivialValueType = false] (struct queue * __first, long unsigned int __n, const struct queue & __x)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.4022;
  struct Credit * * SR.4021;
  struct Credit * * SR.4020;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.125476;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125451;
  struct _Deque_iterator D.125450;
  struct _Deque_iterator D.125449;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125431;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125417;
  struct _Deque_iterator D.125416;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125409;
  struct _Deque_iterator D.125408;
  struct _Deque_iterator D.125407;
  void * _12;
  struct _Deque_base * _18;
  struct Credit * * * _25;
  long int _26;
  struct Credit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Credit * * _33;
  long int _34;
  struct Credit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Credit * * _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Credit * * _49;
  struct Credit * * _51;
  struct Credit * * * _52;
  struct Credit * * _53;
  struct Credit * * _54;
  struct Credit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Credit * _117;
  struct Credit * * _122;
  struct Credit * * * _134;
  struct Credit * * _135;
  struct Credit * * _136;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_154 = PHI <__n_5(D)(3), __n_10(16)>
  # __first_155 = PHI <__first_4(D)(3), __first_11(16)>
  # DEBUG __cur => __first_155
  # DEBUG __n => __n_154
  # DEBUG __r => __first_155
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.106510 => D#12
  if (__first_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.106620 => __x_8(D)
  # DEBUG D#2767 => &__x_8(D)->c
  # DEBUG D#2769 => &__first_155->c
  # DEBUG this => D#2769
  # DEBUG __x => D#2767
  # DEBUG this => D#2767
  # DEBUG D#404 => &D#2767->D.62618._M_impl._M_start
  # DEBUG D#405 => &D#2767->D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1546 => &D#2767->D.62618
  # DEBUG this => D#1546
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__first_155].D.62618;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1393 => &_48->_M_impl
  # DEBUG this => D#1393
  # DEBUG __a => NULL
  # DEBUG this => D#1393
  # DEBUG __a => NULL
  # DEBUG this => D#1393
  # DEBUG D.96742 => NULL
  MEM[(struct _Deque_impl *)__first_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_155]._M_map_size = 0;
  # DEBUG D#722 => &D#1393->_M_start
  # DEBUG this => D#722
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_node = 0B;
  # DEBUG D#721 => &D#1393->_M_finish
  # DEBUG this => D#721
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1547 => &D#2769->D.62618
  # DEBUG this => D#1547
  # DEBUG D#1548 => &D#2769->D.62618._M_impl._M_start
  # DEBUG this => &D.125407
  # DEBUG __x => D#1548
  _49 = MEM[(const struct iterator &)__first_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__first_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__first_155 + 16]._M_node;
  # DEBUG this => D#2767
  # DEBUG D#221 => &D#2767->D.62618._M_impl._M_finish
  # DEBUG this => &D.125408
  # DEBUG __x => D#221
  _53 = MEM[(const struct iterator &)__x_8(D) + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__x_8(D) + 48]._M_first;
  # DEBUG D#2768 => MEM[(const struct iterator &)__x_8(D) + 48]._M_last
  _56 = MEM[(const struct iterator &)__x_8(D) + 48]._M_node;
  # DEBUG this => D#2767
  # DEBUG D#222 => &D#2767->D.62618._M_impl._M_start
  # DEBUG this => &D.125409
  # DEBUG __x => D#222
  __first$_M_cur_57 = MEM[(const struct iterator &)__x_8(D) + 16]._M_cur;
  # DEBUG D#2770 => MEM[(const struct iterator &)__x_8(D) + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__x_8(D) + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__x_8(D) + 16]._M_node;
  # DEBUG __result => &D.125407
  # DEBUG D.125413 => D#1545
  # DEBUG this => &D.125417
  # DEBUG __x => &D.125407
  # DEBUG __result => &D.125417
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.125417
  # DEBUG __result => NULL
  # DEBUG this => &D.125431
  # DEBUG __x => NULL
  # DEBUG __result => &D.125431
  # DEBUG this => &D.125451
  # DEBUG __x => &D.125431
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#2768
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#2768
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#2770
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#2770
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.125451
  # DEBUG this => NULL
  # DEBUG __x => &D.125451
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#2768
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#2768
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#2770
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#2770
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#2770
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.125476
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#2770
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.125476
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.125416
  # DEBUG __x => &D.125476
  D.125476 ={v} {CLOBBER};
  D.125451 ={v} {CLOBBER};
  D.125431 ={v} {CLOBBER};
  D.125417 ={v} {CLOBBER};
  D.125407 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.4020_217 = PHI <_49(8), SR.4020_216(14)>
  # SR.4021_214 = PHI <_51(8), SR.4021_213(14)>
  # SR.4022_212 = PHI <_52(8), SR.4022_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#318 => &D.125476
  # DEBUG this => D#318
  # DEBUG D#1544 => &__first
  # DEBUG this => D#1544
  _117 = MEM[(struct Credit * const &)__first$_M_cur_209];
  *SR.4020_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Credit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.125476
  _122 = SR.4020_217 + 8;
  if (_122 == SR.4021_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.125476
  _134 = SR.4022_212 + 8;
  # DEBUG this => &D.125476
  # DEBUG __new_node => _134
  _135 = MEM[(struct Credit * * *)SR.4022_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.4020_216 = PHI <_122(11), _135(12)>
  # SR.4021_213 = PHI <SR.4021_214(11), _136(12)>
  # SR.4022_211 = PHI <SR.4022_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __n_10 = __n_154 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_155 + 80;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __first_194 = PHI <__first_11(15)>

  <bb 18>:
  # __first_156 = PHI <__first_194(17), __first_4(D)(2)>
  return __first_156;

  # __first_193 = PHI <__first_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __first_158 = PHI <__first_4(D)(21), __first_19(23)>
  # DEBUG __first => __first_158
  # DEBUG __r => __first_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  _18 = &MEM[(struct deque *)__first_158].D.62618;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_18);
  MEM[(struct  &)__first_158] ={v} {CLOBBER};
  __first_19 = __first_158 + 80;
  # DEBUG __first => __first_19
  # DEBUG __first => __first_19
  if (__first_19 == __first_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<int>*; _ForwardIterator = std::vector<int>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIiSaIiEES5_EET0_T_S7_S6_, funcdef_no=4187, decl_uid=75238, cgraph_uid=2632, symbol_order=2633)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<int>*; _ForwardIterator = std::vector<int>*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  int * D.125593;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  int * _8;
  void * _12;
  long unsigned int _20;
  int * const _27;
  int * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  int * _36;
  int * const _37;
  int * const _38;
  long int __last.84_39;
  long int __first.85_40;
  long int _41;
  long unsigned int _43;
  int * _45;
  int * _46;
  int * iftmp.80_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.105110 => D#12
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#1489 => &MEM[(const struct vector *)__first_71].D.35433
  # DEBUG this => D#1489
  # DEBUG __a => NULL
  _27 = MEM[(int * *)__first_71];
  # DEBUG D#123 => __first_71
  _28 = MEM[(int * *)__first_71 + 8B];
  # DEBUG D#123 => __first_71
  # DEBUG this => D#123
  # DEBUG this => D#123
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 4;
  _33 = (size_type) _32;
  # DEBUG D#1491 => &__result_70->D.35433
  # DEBUG this => D#1491
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#967 => &D#1491->_M_impl
  # DEBUG this => D#967
  # DEBUG __a => NULL
  # DEBUG this => D#967
  # DEBUG __a => NULL
  # DEBUG this => D#967
  # DEBUG D.96655 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#1491
  # DEBUG __n => NULL
  # DEBUG D#965 => D#1491
  # DEBUG __n => _33
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => _33
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#959
  # DEBUG D.125591 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (_33 > 4611686018427387903)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.80_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.80_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.80_47;
  _36 = iftmp.80_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#1490 => &__result_70->D.35433
  # DEBUG this => D#1490
  _37 = MEM[(int * *)__first_71 + 8B];
  # DEBUG D#217 => __first_71
  # DEBUG this => D#217
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(int * *)__first_71];
  # DEBUG D#218 => __first_71
  # DEBUG this => D#218
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.125555 => D#1488
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.84_39 = (long int) _37;
  __first.85_40 = (long int) _38;
  _41 = __last.84_39 - __first.85_40;
  _Num_42 = _41 /[ex] 4;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.80_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.80_47 + prephitmp_2;
  __result_70->D.35433._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#625 => (long int) _8
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _8
  # DEBUG __n => D#622
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _8
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _8
  # DEBUG this => D#614
  # DEBUG D.105135 => D#615
  operator delete (_8);

  <bb 25>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<int>*, std::vector<std::vector<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<int>] (_ZNSt6vectorIS_IiSaIiEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3202, decl_uid=51599, cgraph_uid=1647, symbol_order=1648)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<int>*, std::vector<std::vector<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<int>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  int * D.125853;
  const ptrdiff_t _Num;
  const long unsigned int D.125803;
  const size_type __len;
  size_type D.125802;
  size_type __n;
  struct vector * D.125793;
  struct vector * D.125781;
  struct vector * __first;
  long unsigned int __n;
  int * D.125753;
  const ptrdiff_t _Num;
  struct vector * D.125700;
  struct vector * __first;
  long unsigned int __n;
  int * D.125672;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  int * const _17;
  struct vector * prephitmp_18;
  struct vector * _20;
  struct vector * const _23;
  bool _24;
  long int __last.87_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long int pretmp_52;
  long unsigned int _55;
  int * const prephitmp_56;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  long int pretmp_66;
  struct vector * _67;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  int * _85;
  long int _87;
  long unsigned int prephitmp_88;
  long unsigned int _90;
  struct vector * _91;
  int * _92;
  int * _94;
  int * _95;
  int * _98;
  int * const pretmp_100;
  int * const _138;
  int * const _153;
  int * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  int * _162;
  int * _171;
  int * _172;
  int * iftmp.80_173;
  void * _178;
  int * _180;
  int * const _182;
  long int _183;
  long int _184;
  long int _185;
  long int _186;
  size_type _187;
  const ptrdiff_t pretmp_188;
  int * _190;
  int * const _191;
  int * const _192;
  long int __last.84_193;
  long int __first.85_194;
  long int _195;
  long unsigned int _197;
  int * _199;
  long unsigned int _200;
  int * _201;
  int * iftmp.80_202;
  long unsigned int pretmp_203;
  long unsigned int prephitmp_204;
  void * _207;
  int * _209;
  struct vector * _211;
  long int _215;
  long int _216;
  long int _217;
  long unsigned int _219;
  long int pretmp_220;
  int * const pretmp_222;
  struct vector * pretmp_224;
  int * const _225;
  long int _226;
  long int _227;
  long int _228;
  long int _229;
  size_type _230;
  int * _233;
  int * _242;
  long unsigned int _243;
  int * _244;
  int * iftmp.80_245;
  int * const pretmp_284;
  const ptrdiff_t prephitmp_317;
  struct vector * const prephitmp_323;
  long int pretmp_324;
  const ptrdiff_t prephitmp_327;
  int * const prephitmp_329;
  long int pretmp_331;
  bool _332;
  long int _333;
  const ptrdiff_t pretmp_336;
  difference_type _337;
  long int _339;
  difference_type _340;
  long int _341;
  long int pretmp_343;
  int * const pretmp_344;
  long unsigned int pretmp_345;
  long unsigned int prephitmp_346;
  long unsigned int prephitmp_347;
  struct vector * const pretmp_348;
  long unsigned int pretmp_349;
  long int prephitmp_350;
  long int pretmp_351;
  long int _355;
  long int _356;
  bool _358;
  long unsigned int pretmp_370;
  long unsigned int prephitmp_371;
  long unsigned int pretmp_372;
  long unsigned int prephitmp_373;
  long unsigned int pretmp_374;
  long unsigned int prephitmp_375;
  long unsigned int pretmp_378;
  long unsigned int prephitmp_379;

  <bb 2>:
  # DEBUG D#2785 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#2785
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 102>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.51676._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.51676._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 61>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1489 => &MEM[(const struct vector *)__x_28(D)].D.35433
  # DEBUG this => D#1489
  # DEBUG __a => NULL
  _153 = MEM[(int * *)__x_28(D)];
  # DEBUG D#123 => __x_28(D)
  _154 = MEM[(int * *)__x_28(D) + 8B];
  # DEBUG D#123 => __x_28(D)
  # DEBUG this => D#123
  # DEBUG this => D#123
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 4;
  _159 = (size_type) _158;
  # DEBUG D#1491 => &__x_copy.D.35433
  # DEBUG this => D#1491
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#967 => &D#1491->_M_impl
  # DEBUG this => D#967
  # DEBUG __a => NULL
  # DEBUG this => D#967
  # DEBUG __a => NULL
  # DEBUG this => D#967
  # DEBUG D.96655 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#1491
  # DEBUG __n => NULL
  # DEBUG D#965 => D#1491
  # DEBUG __n => _159
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_345 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => _159
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#959
  # DEBUG D.125670 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (_159 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_348 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_351 = (long int) pretmp_348;
  pretmp_344 = MEM[(int * *)__x_28(D) + 8B];
  pretmp_284 = MEM[(int * *)__x_28(D)];
  pretmp_331 = (long int) pretmp_344;
  pretmp_343 = (long int) pretmp_284;
  pretmp_324 = pretmp_331 - pretmp_343;
  pretmp_188 = pretmp_324 /[ex] 4;
  pretmp_370 = (long unsigned int) pretmp_324;

  <bb 9>:
  # iftmp.80_173 = PHI <0B(5), _172(8)>
  # prephitmp_323 = PHI <_12(5), pretmp_348(8)>
  # prephitmp_350 = PHI <_13(5), pretmp_351(8)>
  # prephitmp_346 = PHI <pretmp_345(5), _55(8)>
  # prephitmp_329 = PHI <_153(5), pretmp_284(8)>
  # prephitmp_317 = PHI <_158(5), pretmp_188(8)>
  # prephitmp_371 = PHI <pretmp_345(5), pretmp_370(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.80_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.80_173;
  _162 = iftmp.80_173 + prephitmp_346;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#1490 => &__x_copy.D.35433
  # DEBUG this => D#1490
  # DEBUG D#2778 => MEM[(int * *)__x_28(D) + 8B]
  # DEBUG D#217 => __x_28(D)
  # DEBUG this => D#217
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#2777 => MEM[(int * *)__x_28(D)]
  # DEBUG D#218 => __x_28(D)
  # DEBUG this => D#218
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#2777
  # DEBUG __last => D#2778
  # DEBUG __result => NULL
  # DEBUG D.125634 => D#1488
  # DEBUG __first => D#2777
  # DEBUG __last => D#2778
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#2777
  # DEBUG __last => D#2778
  # DEBUG __result => NULL
  # DEBUG __first => D#2777
  # DEBUG __last => D#2778
  # DEBUG __result => NULL
  # DEBUG __it => D#2778
  # DEBUG __it$_M_current => D#2778
  # DEBUG __it => D#2777
  # DEBUG __it$_M_current => D#2777
  # DEBUG __first => D#2777
  # DEBUG __last => D#2778
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#2778
  # DEBUG __it => D#2778
  # DEBUG this => NULL
  # DEBUG __it => D#2777
  # DEBUG __it => D#2777
  # DEBUG this => NULL
  # DEBUG __first => D#2777
  # DEBUG __last => D#2778
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#2777
  # DEBUG __last => D#2778
  # DEBUG __result => NULL
  # DEBUG D#2776 => (long int) D#2778
  # DEBUG D#2775 => (long int) D#2777
  # DEBUG D#2774 => D#2776 - D#2775
  # DEBUG _Num => D#2774 /[ex] 4
  if (prephitmp_317 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.80_173, prephitmp_329, prephitmp_371);

  <bb 11>:
  _171 = iftmp.80_173 + prephitmp_371;
  __x_copy.D.35433._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#219 => &this_9(D)->D.51676._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#219
  # DEBUG D#2773 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.71462
  # DEBUG __rhs => &__position
  # DEBUG this => &D.71462
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_350 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#2773
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  # DEBUG D#1677 => &this_9(D)->D.51676
  # DEBUG this => D#1677
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_323 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#2773
  # DEBUG __result => D#2773
  # DEBUG __alloc => D#1494
  # DEBUG D#1493 => D#1494
  # DEBUG D#1492 => D#1493
  # DEBUG __first => __last_61
  # DEBUG __last => D#2773
  # DEBUG __result => D#2773
  # DEBUG D.108262 => D#1492
  # DEBUG __first => __last_61
  # DEBUG __last => D#2773
  # DEBUG __result => D#2773
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (__last_61, prephitmp_323, prephitmp_323);

  <bb 13>:
  _62 = this_9(D)->D.51676._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.51676._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#2785
  # DEBUG __last => __last_61
  # DEBUG __result => D#2773
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#2785
  # DEBUG __it => D#2785
  # DEBUG __first => D#2785
  # DEBUG __last => __last_61
  # DEBUG __result => D#2773
  # DEBUG __it => D#2773
  # DEBUG __it => D#2773
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#2785
  # DEBUG __it => D#2785
  # DEBUG __first => D#2785
  # DEBUG __last => __last_61
  # DEBUG __result => D#2773
  # DEBUG __simple => 0
  # DEBUG __first => D#2785
  # DEBUG __last => __last_61
  # DEBUG __result => D#2773
  __last.87_25 = (long int) __last_61;
  _78 = __last.87_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#2773
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#2785
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#2785
  if (__position_22 == _67)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 15>:

  <bb 16>:
  # __old_finish_366 = PHI <prephitmp_323(15), __old_finish_65(19)>
  # __last_367 = PHI <__last_61(15), __last_68(19)>
  # __n_361 = PHI <__n_73(15), __n_58(19)>
  # DEBUG __n => __n_361
  # DEBUG __result => __old_finish_366
  # DEBUG __last => __last_367
  __last_68 = __last_367 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_366 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<int>::operator= (__old_finish_65, __last_68);
  goto <bb 18>;

<L26>:
  goto <bb 104> (<L10>);

  <bb 18>:
  __n_58 = __n_361 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 16>;

  <bb 20>:
  # DEBUG this => &__x_copy
  # DEBUG D#628 => &__x_copy.D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => __x_copy.D.35433._M_impl._M_finish
  # DEBUG D#630 => __x_copy.D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &__x_copy.D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#625 => (long int) _85
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _85
  # DEBUG __n => D#622
  if (_85 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 21>:

  <bb 22>:
  # __position_365 = PHI <__position_22(21), __position_81(25)>
  # DEBUG __first => __position_365
  std::vector<int>::operator= (__position_365, &__x_copy);
  goto <bb 24>;

<L27>:
  goto <bb 104> (<L10>);

  <bb 24>:
  __position_81 = __position_365 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 22>;

  <bb 26>:
  # DEBUG D#1678 => &this_9(D)->D.51676
  # DEBUG this => D#1678
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#2773
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG D.108308 => D#1497
  # DEBUG __first => D#2773
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  # DEBUG __first => D#2773
  # DEBUG __n => __n_70
  # DEBUG __x => &__x_copy
  # DEBUG __cur => D#2773
  # DEBUG __cur => D#2773
  # DEBUG __n => __n_70
  if (__n_70 == 0)
    goto <bb 42>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # __n_360 = PHI <__n_70(27), __n_176(41)>
  # __old_finish_290 = PHI <prephitmp_323(27), __old_finish_177(41)>
  # DEBUG __cur => __old_finish_290
  # DEBUG __n => __n_360
  # DEBUG __r => __old_finish_290
  # DEBUG __p => NULL
  # DEBUG __value => &__x_copy
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.105110 => D#12
  if (__old_finish_290 != 0B)
    goto <bb 29>;
  else
    goto <bb 39>;

  <bb 29>:
  # DEBUG this => __old_finish_290
  # DEBUG __x => &__x_copy
  # DEBUG D#1489 => &__x_copy.D.35433
  # DEBUG this => D#1489
  # DEBUG __a => NULL
  _138 = MEM[(int * *)&__x_copy];
  # DEBUG D#123 => &__x_copy
  _182 = MEM[(int * *)&__x_copy + 8B];
  # DEBUG D#123 => &__x_copy
  # DEBUG this => D#123
  # DEBUG this => D#123
  _183 = (long int) _182;
  _184 = (long int) _138;
  _185 = _183 - _184;
  _186 = _185 /[ex] 4;
  _187 = (size_type) _186;
  # DEBUG D#1491 => &__old_finish_290->D.35433
  # DEBUG this => D#1491
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#967 => &D#1491->_M_impl
  # DEBUG this => D#967
  # DEBUG __a => NULL
  # DEBUG this => D#967
  # DEBUG __a => NULL
  # DEBUG this => D#967
  # DEBUG D.96655 => NULL
  MEM[(struct _Vector_impl *)__old_finish_290]._M_start = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__old_finish_290]._M_end_of_storage = 0B;
  # DEBUG this => D#1491
  # DEBUG __n => NULL
  # DEBUG D#965 => D#1491
  # DEBUG __n => _187
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (_187 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  pretmp_372 = (long unsigned int) _185;
  goto <bb 35>;

  <bb 31>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => _187
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => _187
  # DEBUG this => D#959
  # DEBUG D.125751 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (_187 > 4611686018427387903)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # __old_finish_213 = PHI <__old_finish_290(31)>
  std::__throw_bad_alloc ();

  <bb 33>:
  _200 = (long unsigned int) _185;
  _201 = operator new (_200);
  goto <bb 35>;

  # __old_finish_175 = PHI <__old_finish_290(33)>
<L29>:
  goto <bb 45> (<L19>);

  <bb 35>:
  # iftmp.80_202 = PHI <0B(30), _201(33)>
  # prephitmp_373 = PHI <pretmp_372(30), _200(33)>
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_start = iftmp.80_202;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_finish = iftmp.80_202;
  _190 = iftmp.80_202 + prephitmp_373;
  MEM[(struct _Vector_base *)__old_finish_290]._M_impl._M_end_of_storage = _190;
  # DEBUG D#1490 => &__old_finish_290->D.35433
  # DEBUG this => D#1490
  _191 = MEM[(int * *)&__x_copy + 8B];
  # DEBUG D#217 => &__x_copy
  # DEBUG this => D#217
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _192 = MEM[(int * *)&__x_copy];
  # DEBUG D#218 => &__x_copy
  # DEBUG this => D#218
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG D.125715 => D#1488
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => _191
  # DEBUG __it$_M_current => _191
  # DEBUG __it => _192
  # DEBUG __it$_M_current => _192
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _191
  # DEBUG __it => _191
  # DEBUG this => NULL
  # DEBUG __it => _192
  # DEBUG __it => _192
  # DEBUG this => NULL
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _192
  # DEBUG __last => _191
  # DEBUG __result => NULL
  __last.84_193 = (long int) _191;
  __first.85_194 = (long int) _192;
  _195 = __last.84_193 - __first.85_194;
  _Num_196 = _195 /[ex] 4;
  # DEBUG _Num => _Num_196
  if (_Num_196 != 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  pretmp_374 = (long unsigned int) _195;
  goto <bb 38>;

  <bb 37>:
  _197 = (long unsigned int) _195;
  __builtin_memmove (iftmp.80_202, _192, _197);

  <bb 38>:
  # prephitmp_375 = PHI <pretmp_374(36), _197(37)>
  _199 = iftmp.80_202 + prephitmp_375;
  __old_finish_290->D.35433._M_impl._M_finish = _199;

  <bb 39>:
  __n_176 = __n_360 + 18446744073709551615;
  # DEBUG __n => __n_176
  __old_finish_177 = __old_finish_290 + 24;
  # DEBUG __cur => __old_finish_177
  # DEBUG __cur => __old_finish_177
  # DEBUG __n => __n_176
  if (__n_176 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # __old_finish_221 = PHI <__old_finish_177(39)>
  goto <bb 42>;

  <bb 41>:
  goto <bb 28>;

  <bb 42>:
  # __old_finish_19 = PHI <__old_finish_221(40), prephitmp_323(26)>
  this_9(D)->D.51676._M_impl._M_finish = __old_finish_19;
  # DEBUG D#1679 => &this_9(D)->D.51676
  # DEBUG this => D#1679
  # DEBUG this => &__position
  # DEBUG __first => D#2785
  # DEBUG __last => D#2773
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1494
  # DEBUG D#1493 => D#1494
  # DEBUG D#1492 => D#1493
  # DEBUG __first => D#2785
  # DEBUG __last => D#2773
  # DEBUG __result => NULL
  # DEBUG D.108321 => D#1492
  # DEBUG __first => D#2785
  # DEBUG __last => D#2773
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (__position_22, prephitmp_323, __old_finish_19);
  goto <bb 53>;

<L30>:
  goto <bb 104> (<L10>);

<L28>:

  # __old_finish_151 = PHI <__old_finish_175(34), __old_finish_213(44)>
<L19>:
  _178 = __builtin_eh_pointer (14);
  __cxa_begin_catch (_178);
  # DEBUG __first => D#2773
  # DEBUG __last => __old_finish_151
  # DEBUG __first => D#2773
  # DEBUG __last => __old_finish_151

  <bb 46>:
  # __old_finish_179 = PHI <prephitmp_323(45), __old_finish_181(49)>
  # DEBUG __first => __old_finish_179
  if (__old_finish_179 == __old_finish_151)
    goto <bb 50>;
  else
    goto <bb 47>;

  <bb 47>:
  # DEBUG __r => __old_finish_179
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _180 = MEM[(struct _Vector_base *)__old_finish_179]._M_impl._M_start;
  # DEBUG D#625 => (long int) _180
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _180
  # DEBUG __n => D#622
  if (_180 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _180
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _180
  # DEBUG this => D#614
  # DEBUG D.125693 => D#615
  operator delete (_180);

  <bb 49>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__old_finish_179] ={v} {CLOBBER};
  __old_finish_181 = __old_finish_179 + 24;
  # DEBUG __first => __old_finish_181
  goto <bb 46>;

  <bb 50>:
  __cxa_rethrow ();

<L21>:
  __cxa_end_catch ();
  resx 13

<L31>:
  goto <bb 104> (<L10>);

  <bb 53>:
  _74 = this_9(D)->D.51676._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.51676._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#2785
  # DEBUG __last => D#2773
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#2785
  if (__position_22 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 54>;

  <bb 54>:

  <bb 55>:
  # __position_362 = PHI <__position_22(54), __position_84(58)>
  # DEBUG __first => __position_362
  std::vector<int>::operator= (__position_362, &__x_copy);
  goto <bb 57>;

<L32>:
  goto <bb 104> (<L10>);

  <bb 57>:
  __position_84 = __position_362 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_323)
    goto <bb 20>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 55>;

  <bb 59>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _85
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _85
  # DEBUG this => D#614
  # DEBUG D.108354 => D#615
  operator delete (_85);

  <bb 60>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  __x_copy ={v} {CLOBBER};
  goto <bb 102>;

  <bb 61>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1270 => this_9(D)
  # DEBUG this => D#1270
  # DEBUG D#1269 => D#1270
  # DEBUG D#1268 => &D#1269->D.51676
  # DEBUG this => D#1268
  # DEBUG __a => D#1267
  # DEBUG D#1266 => D#1267
  # DEBUG D#1265 => D#1266
  # DEBUG this => D#1265
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#124 => this_9(D)
  # DEBUG D#124 => this_9(D)
  # DEBUG this => D#124
  # DEBUG this => D#124
  _215 = (long int) _23;
  _216 = _13 - _215;
  _217 = _216 /[ex] 24;
  _218 = (const long unsigned int) _217;
  _219 = 768614336404564650 - _218;
  if (__n_7(D) > _219)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 63>:
  # DEBUG D#124 => this_9(D)
  # DEBUG D#124 => this_9(D)
  # DEBUG this => D#124
  # DEBUG this => D#124
  # DEBUG D#124 => this_9(D)
  # DEBUG D#124 => this_9(D)
  # DEBUG this => D#124
  # DEBUG this => D#124
  # DEBUG __a => &D.125803
  # DEBUG __b => &__n
  _90 = MAX_EXPR <__n_7(D), _218>;
  __len_223 = _90 + _218;
  # DEBUG __len => __len_223
  # DEBUG D#124 => this_9(D)
  # DEBUG D#124 => this_9(D)
  # DEBUG this => D#124
  # DEBUG this => D#124
  # DEBUG D#1270 => this_9(D)
  # DEBUG this => D#1270
  # DEBUG D#1269 => D#1270
  # DEBUG D#1268 => &D#1269->D.51676
  # DEBUG this => D#1268
  # DEBUG __a => D#1267
  # DEBUG D#1266 => D#1267
  # DEBUG D#1265 => D#1266
  # DEBUG this => D#1265
  _332 = __len_223 > 768614336404564650;
  _358 = _218 > __len_223;
  _24 = _332 | _358;
  if (_24 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 64>:
  pretmp_349 = __len_223 * 24;

  <bb 65>:
  # __elems_before_268 = PHI <__elems_before_338(123), __elems_before_326(64)>
  # _355 = PHI <_339(123), _87(64)>
  # prephitmp_347 = PHI <18446744073709551600(123), pretmp_349(64)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#402 => &this_9(D)->D.51676._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#402
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71495
  # DEBUG this => &__position
  # DEBUG this => &D.71495
  # DEBUG __elems_before => __elems_before_268
  # DEBUG D#1689 => &this_9(D)->D.51676
  # DEBUG D#1278 => D#1689
  # DEBUG __n => NULL
  # DEBUG this => D#1278
  # DEBUG D#1277 => D#1278
  # DEBUG D#1276 => &D#1277->_M_impl
  # DEBUG D#1275 => D#1276
  # DEBUG __n => NULL
  # DEBUG __a => D#1275
  # DEBUG D#1274 => D#1275
  # DEBUG D#1272 => D#1274
  # DEBUG D#1273 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1272
  # DEBUG D.125791 => D#1273
  # DEBUG D#1271 => D#1272
  # DEBUG D#1265 => D#1271
  # DEBUG this => D#1265
  _211 = operator new (prephitmp_347);

  <bb 66>:
  # __new_finish_212 = PHI <0B(124), _211(65)>
  # __elems_before_357 = PHI <__elems_before_326(124), __elems_before_268(65)>
  # _356 = PHI <_87(124), _355(65)>
  # prephitmp_88 = PHI <0(124), prephitmp_347(65)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1673 => &this_9(D)->D.51676
  # DEBUG this => D#1673
  _26 = (long unsigned int) _356;
  __first_27 = __new_finish_212 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.108362 => D#1497
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __cur => __first_27
  # DEBUG __n => __n_7(D)

  <bb 67>:
  # __n_369 = PHI <__n_205(79), __n_7(D)(66)>
  # __first_368 = PHI <__first_206(79), __first_27(66)>
  # DEBUG __cur => __first_368
  # DEBUG __n => __n_369
  # DEBUG __r => __first_368
  # DEBUG __p => NULL
  # DEBUG __value => __x_28(D)
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.105110 => D#12
  if (__first_368 != 0B)
    goto <bb 68>;
  else
    goto <bb 78>;

  <bb 68>:
  # DEBUG this => __first_368
  # DEBUG __x => __x_28(D)
  # DEBUG D#1489 => &MEM[(const struct vector *)__x_28(D)].D.35433
  # DEBUG this => D#1489
  # DEBUG __a => NULL
  _17 = MEM[(int * *)__x_28(D)];
  # DEBUG D#123 => __x_28(D)
  _225 = MEM[(int * *)__x_28(D) + 8B];
  # DEBUG D#123 => __x_28(D)
  # DEBUG this => D#123
  # DEBUG this => D#123
  _226 = (long int) _225;
  _227 = (long int) _17;
  _228 = _226 - _227;
  _229 = _228 /[ex] 4;
  _230 = (size_type) _229;
  # DEBUG D#1491 => &__first_368->D.35433
  # DEBUG this => D#1491
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#967 => &D#1491->_M_impl
  # DEBUG this => D#967
  # DEBUG __a => NULL
  # DEBUG this => D#967
  # DEBUG __a => NULL
  # DEBUG this => D#967
  # DEBUG D.96655 => NULL
  MEM[(struct _Vector_impl *)__first_368]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_368]._M_end_of_storage = 0B;
  # DEBUG this => D#1491
  # DEBUG __n => NULL
  # DEBUG D#965 => D#1491
  # DEBUG __n => _230
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (_230 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:
  pretmp_203 = (long unsigned int) _228;
  goto <bb 75>;

  <bb 70>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => _230
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => _230
  # DEBUG this => D#959
  # DEBUG D.125851 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (_230 > 4611686018427387903)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # __first_174 = PHI <__first_368(70)>
  std::__throw_bad_alloc ();

  <bb 72>:
  _243 = (long unsigned int) _228;
  _244 = operator new (_243);
  goto <bb 74>;

  # __first_152 = PHI <__first_368(72)>
<L34>:
  goto <bb 82> (<L22>);

  <bb 74>:
  pretmp_222 = MEM[(int * *)__x_28(D) + 8B];
  pretmp_100 = MEM[(int * *)__x_28(D)];
  pretmp_220 = (long int) pretmp_222;
  pretmp_52 = (long int) pretmp_100;
  pretmp_66 = pretmp_220 - pretmp_52;
  pretmp_336 = pretmp_66 /[ex] 4;
  pretmp_378 = (long unsigned int) pretmp_66;

  <bb 75>:
  # iftmp.80_245 = PHI <0B(69), _244(74)>
  # prephitmp_56 = PHI <_17(69), pretmp_100(74)>
  # prephitmp_327 = PHI <_229(69), pretmp_336(74)>
  # prephitmp_204 = PHI <pretmp_203(69), _243(74)>
  # prephitmp_379 = PHI <pretmp_203(69), pretmp_378(74)>
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_start = iftmp.80_245;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_finish = iftmp.80_245;
  _233 = iftmp.80_245 + prephitmp_204;
  MEM[(struct _Vector_base *)__first_368]._M_impl._M_end_of_storage = _233;
  # DEBUG D#1490 => &__first_368->D.35433
  # DEBUG this => D#1490
  # DEBUG D#2784 => MEM[(int * *)__x_28(D) + 8B]
  # DEBUG D#217 => __x_28(D)
  # DEBUG this => D#217
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#2783 => MEM[(int * *)__x_28(D)]
  # DEBUG D#218 => __x_28(D)
  # DEBUG this => D#218
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#2783
  # DEBUG __last => D#2784
  # DEBUG __result => NULL
  # DEBUG D.125815 => D#1488
  # DEBUG __first => D#2783
  # DEBUG __last => D#2784
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#2783
  # DEBUG __last => D#2784
  # DEBUG __result => NULL
  # DEBUG __first => D#2783
  # DEBUG __last => D#2784
  # DEBUG __result => NULL
  # DEBUG __it => D#2784
  # DEBUG __it$_M_current => D#2784
  # DEBUG __it => D#2783
  # DEBUG __it$_M_current => D#2783
  # DEBUG __first => D#2783
  # DEBUG __last => D#2784
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#2784
  # DEBUG __it => D#2784
  # DEBUG this => NULL
  # DEBUG __it => D#2783
  # DEBUG __it => D#2783
  # DEBUG this => NULL
  # DEBUG __first => D#2783
  # DEBUG __last => D#2784
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#2783
  # DEBUG __last => D#2784
  # DEBUG __result => NULL
  # DEBUG D#2782 => (long int) D#2784
  # DEBUG D#2781 => (long int) D#2783
  # DEBUG D#2780 => D#2782 - D#2781
  # DEBUG _Num => D#2780 /[ex] 4
  if (prephitmp_327 != 0)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  __builtin_memmove (iftmp.80_245, prephitmp_56, prephitmp_379);

  <bb 77>:
  _242 = iftmp.80_245 + prephitmp_379;
  __first_368->D.35433._M_impl._M_finish = _242;

  <bb 78>:
  __n_205 = __n_369 + 18446744073709551615;
  # DEBUG __n => __n_205
  __first_206 = __first_368 + 24;
  # DEBUG __cur => __first_206
  # DEBUG __cur => __first_206
  # DEBUG __n => __n_205
  if (__n_205 == 0)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  goto <bb 67>;

  <bb 80>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1674 => &this_9(D)->D.51676
  # DEBUG this => D#1674
  # DEBUG this => &__position
  _31 = this_9(D)->D.51676._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#2785
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1496
  # DEBUG D#1495 => D#1496
  # DEBUG D#1492 => D#1495
  # DEBUG __first => _31
  # DEBUG __last => D#2785
  # DEBUG __result => NULL
  # DEBUG D.108383 => D#1492
  # DEBUG __first => _31
  # DEBUG __last => D#2785
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (_31, __position_22, __new_finish_212);
  goto <bb 90>;

<L33>:

  # __first_150 = PHI <__first_152(73), __first_174(81)>
<L22>:
  _207 = __builtin_eh_pointer (17);
  __cxa_begin_catch (_207);
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150
  # DEBUG __first => __first_27
  # DEBUG __last => __first_150

  <bb 83>:
  # __first_208 = PHI <__first_27(82), __first_210(86)>
  # DEBUG __first => __first_208
  if (__first_208 == __first_150)
    goto <bb 87>;
  else
    goto <bb 84>;

  <bb 84>:
  # DEBUG __r => __first_208
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _209 = MEM[(struct _Vector_base *)__first_208]._M_impl._M_start;
  # DEBUG D#625 => (long int) _209
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _209
  # DEBUG __n => D#622
  if (_209 != 0B)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _209
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _209
  # DEBUG this => D#614
  # DEBUG D.125774 => D#615
  operator delete (_209);

  <bb 86>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__first_208] ={v} {CLOBBER};
  __first_210 = __first_208 + 24;
  # DEBUG __first => __first_210
  goto <bb 83>;

  <bb 87>:
  __cxa_rethrow ();

<L24>:
  __cxa_end_catch ();
  resx 16

<L36>:
  goto <bb 108> (<L13>);

  <bb 90>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#1675 => &this_9(D)->D.51676
  # DEBUG this => D#1675
  _35 = this_9(D)->D.51676._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#2785
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1496
  # DEBUG D#1495 => D#1496
  # DEBUG D#1492 => D#1495
  # DEBUG __first => D#2785
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.108402 => D#1492
  # DEBUG __first => D#2785
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<int>*, std::vector<int>*> (__position_22, _35, __new_finish_33);
  goto <bb 92>;

<L37>:
  goto <bb 108> (<L13>);

  <bb 92>:
  # DEBUG __new_finish => _91
  # DEBUG D#1676 => &this_9(D)->D.51676
  # DEBUG this => D#1676
  _37 = this_9(D)->D.51676._M_impl._M_finish;
  __first_38 = this_9(D)->D.51676._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 99>;
  else
    goto <bb 93>;

  <bb 93>:

  <bb 94>:
  # __first_86 = PHI <__first_38(93), __first_93(97)>
  # DEBUG __first => __first_86
  # DEBUG __r => __first_86
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _92 = MEM[(struct _Vector_base *)__first_86]._M_impl._M_start;
  # DEBUG D#625 => (long int) _92
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _92
  # DEBUG __n => D#622
  if (_92 != 0B)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _92
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _92
  # DEBUG this => D#614
  # DEBUG D.108446 => D#615
  operator delete (_92);

  <bb 96>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__first_86] ={v} {CLOBBER};
  __first_93 = __first_86 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 94>;

  <bb 98>:
  pretmp_224 = this_9(D)->D.51676._M_impl._M_start;

  <bb 99>:
  # prephitmp_18 = PHI <pretmp_224(98), __first_38(92)>
  # DEBUG D#1687 => this_9(D)->D.51676._M_impl._M_end_of_storage
  # DEBUG D#1686 => (long int) D#1687
  # DEBUG D#2779 => this_9(D)->D.51676._M_impl._M_start
  # DEBUG D#1685 => (long int) D#2779
  # DEBUG D#1684 => D#1686 - D#1685
  # DEBUG D#1683 => D#1684 /[ex] 24
  # DEBUG D#1682 => &this_9(D)->D.51676
  # DEBUG D#684 => D#1682
  # DEBUG D#685 => (long unsigned int) D#1683
  # DEBUG __p => D#2779
  # DEBUG this => D#684
  # DEBUG __n => D#685
  # DEBUG D#683 => D#685
  # DEBUG D#682 => D#684
  if (prephitmp_18 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#681 => &D#682->_M_impl
  # DEBUG D#679 => D#681
  # DEBUG D#680 => D#683
  # DEBUG __p => D#2779
  # DEBUG __a => D#679
  # DEBUG __n => D#680
  # DEBUG D#678 => D#680
  # DEBUG D#677 => D#679
  # DEBUG D#675 => D#677
  # DEBUG D#676 => D#678
  # DEBUG __p => D#2779
  # DEBUG this => D#675
  # DEBUG D.108425 => D#676
  operator delete (prephitmp_18);

  <bb 101>:
  this_9(D)->D.51676._M_impl._M_start = __new_finish_212;
  this_9(D)->D.51676._M_impl._M_finish = _91;
  _44 = __new_finish_212 + prephitmp_88;
  this_9(D)->D.51676._M_impl._M_end_of_storage = _44;

  <bb 102>:
  return;

<L25>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#628 => &__x_copy.D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => __x_copy.D.35433._M_impl._M_finish
  # DEBUG D#630 => __x_copy.D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &__x_copy.D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#625 => (long int) _94
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _94
  # DEBUG __n => D#622
  if (_94 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _94
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _94
  # DEBUG this => D#614
  # DEBUG D.108463 => D#615
  operator delete (_94);

  <bb 106>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  resx 2

<L35>:

  # __new_finish_1 = PHI <__new_finish_212(89), 0B(107), __new_finish_33(91)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 110>;
  else
    goto <bb 109>;

  <bb 109>:
  goto <bb 115>;

  <bb 110>:
  # DEBUG D#1680 => &this_9(D)->D.51676
  # DEBUG this => D#1680
  _49 = __n_7(D) + __elems_before_357;
  _50 = _49 * 24;
  _51 = __new_finish_212 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 111>:
  # __first_80 = PHI <__first_27(110), __first_96(114)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 119>;
  else
    goto <bb 112>;

  <bb 112>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#625 => (long int) _95
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _95
  # DEBUG __n => D#622
  if (_95 != 0B)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _95
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _95
  # DEBUG this => D#614
  # DEBUG D.108487 => D#615
  operator delete (_95);

  <bb 114>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 111>;

  <bb 115>:
  # __new_finish_97 = PHI <__new_finish_212(109), __new_finish_99(118)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 119>;
  else
    goto <bb 116>;

  <bb 116>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#625 => (long int) _98
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _98
  # DEBUG __n => D#622
  if (_98 != 0B)
    goto <bb 117>;
  else
    goto <bb 118>;

  <bb 117>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _98
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _98
  # DEBUG this => D#614
  # DEBUG D.108513 => D#615
  operator delete (_98);

  <bb 118>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 115>;

  <bb 119>:
  # DEBUG D#1688 => &this_9(D)->D.51676
  # DEBUG D#684 => D#1688
  # DEBUG __p => NULL
  # DEBUG this => D#684
  # DEBUG __n => D#685
  # DEBUG D#683 => D#685
  # DEBUG D#682 => D#684
  if (__new_finish_212 != 0B)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  # DEBUG D#681 => &D#682->_M_impl
  # DEBUG D#679 => D#681
  # DEBUG D#680 => D#683
  # DEBUG __p => NULL
  # DEBUG __a => D#679
  # DEBUG __n => D#680
  # DEBUG D#678 => D#680
  # DEBUG D#677 => D#679
  # DEBUG D#675 => D#677
  # DEBUG D#676 => D#678
  # DEBUG __p => NULL
  # DEBUG this => D#675
  # DEBUG D.108528 => D#676
  operator delete (__new_finish_212);

  <bb 121>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 123>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#402 => &this_9(D)->D.51676._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#402
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71495
  # DEBUG this => &__position
  _341 = (long int) __position_22;
  # DEBUG this => &D.71495
  _339 = _341 - _215;
  _340 = _339 /[ex] 24;
  __elems_before_338 = (const size_type) _340;
  # DEBUG __elems_before => __elems_before_338
  # DEBUG D#1689 => &this_9(D)->D.51676
  # DEBUG D#1278 => D#1689
  # DEBUG __n => NULL
  # DEBUG this => D#1278
  # DEBUG D#1277 => D#1278
  goto <bb 65>;

  <bb 124>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#402 => &this_9(D)->D.51676._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#402
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71495
  # DEBUG this => &__position
  _333 = (long int) __position_22;
  # DEBUG this => &D.71495
  _87 = _333 - _215;
  _337 = _87 /[ex] 24;
  __elems_before_326 = (const size_type) _337;
  # DEBUG __elems_before => __elems_before_326
  # DEBUG D#1689 => &this_9(D)->D.51676
  # DEBUG D#1278 => D#1689
  # DEBUG __n => NULL
  # DEBUG this => D#1278
  # DEBUG D#1277 => D#1278
  if (__len_223 != 0)
    goto <bb 64>;
  else
    goto <bb 66>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Flit*>*; _ForwardIterator = std::queue<Flit*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5queueIP4FlitSt5dequeIS4_SaIS4_EEES9_EET0_T_SB_SA_, funcdef_no=4201, decl_uid=75356, cgraph_uid=2646, symbol_order=2647)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Flit*>*; _ForwardIterator = std::queue<Flit*>*; bool _TrivialValueTypes = false] (struct queue * __first, struct queue * __last, struct queue * __result)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.4145;
  struct Flit * * SR.4144;
  struct Flit * * SR.4143;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.126048;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126023;
  struct _Deque_iterator D.126022;
  struct _Deque_iterator D.126021;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126003;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125989;
  struct _Deque_iterator D.125988;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.125981;
  struct _Deque_iterator D.125980;
  struct _Deque_iterator D.125979;
  void * _12;
  struct _Deque_base * _18;
  struct Flit * * * _25;
  long int _26;
  struct Flit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Flit * * _33;
  long int _34;
  struct Flit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Flit * * _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Flit * * _49;
  struct Flit * * _51;
  struct Flit * * * _52;
  struct Flit * * _53;
  struct Flit * * _54;
  struct Flit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Flit * _117;
  struct Flit * * _122;
  struct Flit * * * _134;
  struct Flit * * _135;
  struct Flit * * _136;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_154 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_155 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_155
  # DEBUG __first => __first_154
  # DEBUG __r => __result_155
  # DEBUG __p => NULL
  # DEBUG __value => __first_154
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.106160 => D#12
  if (__result_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.106169 => __first_154
  # DEBUG D#2793 => &MEM[(const struct queue &)__first_154].c
  # DEBUG D#2795 => &__result_155->c
  # DEBUG this => D#2795
  # DEBUG __x => D#2793
  # DEBUG this => D#2793
  # DEBUG D#201 => &D#2793->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#2793->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1535 => &D#2793->D.54933
  # DEBUG this => D#1535
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__result_155].D.54933;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1372 => &_48->_M_impl
  # DEBUG this => D#1372
  # DEBUG __a => NULL
  # DEBUG this => D#1372
  # DEBUG __a => NULL
  # DEBUG this => D#1372
  # DEBUG D.96699 => NULL
  MEM[(struct _Deque_impl *)__result_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__result_155]._M_map_size = 0;
  # DEBUG D#712 => &D#1372->_M_start
  # DEBUG this => D#712
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_node = 0B;
  # DEBUG D#711 => &D#1372->_M_finish
  # DEBUG this => D#711
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1536 => &D#2795->D.54933
  # DEBUG this => D#1536
  # DEBUG D#1537 => &D#2795->D.54933._M_impl._M_start
  # DEBUG this => &D.125979
  # DEBUG __x => D#1537
  _49 = MEM[(const struct iterator &)__result_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__result_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__result_155 + 16]._M_node;
  # DEBUG this => D#2793
  # DEBUG D#179 => &D#2793->D.54933._M_impl._M_finish
  # DEBUG this => &D.125980
  # DEBUG __x => D#179
  _53 = MEM[(const struct iterator &)__first_154 + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__first_154 + 48]._M_first;
  # DEBUG D#2794 => MEM[(const struct iterator &)__first_154 + 48]._M_last
  _56 = MEM[(const struct iterator &)__first_154 + 48]._M_node;
  # DEBUG this => D#2793
  # DEBUG D#180 => &D#2793->D.54933._M_impl._M_start
  # DEBUG this => &D.125981
  # DEBUG __x => D#180
  __first$_M_cur_57 = MEM[(const struct iterator &)__first_154 + 16]._M_cur;
  # DEBUG D#2796 => MEM[(const struct iterator &)__first_154 + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__first_154 + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__first_154 + 16]._M_node;
  # DEBUG __result => &D.125979
  # DEBUG D.125985 => D#1534
  # DEBUG this => &D.125989
  # DEBUG __x => &D.125979
  # DEBUG __result => &D.125989
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.125989
  # DEBUG __result => NULL
  # DEBUG this => &D.126003
  # DEBUG __x => NULL
  # DEBUG __result => &D.126003
  # DEBUG this => &D.126023
  # DEBUG __x => &D.126003
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#2794
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#2794
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#2796
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#2796
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.126023
  # DEBUG this => NULL
  # DEBUG __x => &D.126023
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#2794
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#2794
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#2796
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#2796
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#2796
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.126048
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#2796
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.126048
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.125988
  # DEBUG __x => &D.126048
  D.126048 ={v} {CLOBBER};
  D.126023 ={v} {CLOBBER};
  D.126003 ={v} {CLOBBER};
  D.125989 ={v} {CLOBBER};
  D.125979 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.4143_217 = PHI <_49(8), SR.4143_216(14)>
  # SR.4144_214 = PHI <_51(8), SR.4144_213(14)>
  # SR.4145_212 = PHI <_52(8), SR.4145_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#308 => &D.126048
  # DEBUG this => D#308
  # DEBUG D#98 => &__first
  # DEBUG this => D#98
  _117 = MEM[(struct Flit * const &)__first$_M_cur_209];
  *SR.4143_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Flit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.126048
  _122 = SR.4143_217 + 8;
  if (_122 == SR.4144_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.126048
  _134 = SR.4145_212 + 8;
  # DEBUG this => &D.126048
  # DEBUG __new_node => _134
  _135 = MEM[(struct Flit * * *)SR.4145_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.4143_216 = PHI <_122(11), _135(12)>
  # SR.4144_213 = PHI <SR.4144_214(11), _136(12)>
  # SR.4145_211 = PHI <SR.4145_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __first_10 = __first_154 + 80;
  # DEBUG __first => __first_10
  __result_11 = __result_155 + 80;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_194 = PHI <__result_11(15)>

  <bb 18>:
  # __result_156 = PHI <__result_194(17), __result_4(D)(2)>
  return __result_156;

  # __result_193 = PHI <__result_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_158 = PHI <__result_4(D)(21), __result_19(23)>
  # DEBUG __first => __result_158
  # DEBUG __r => __result_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  _18 = &MEM[(struct deque *)__result_158].D.54933;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_18);
  MEM[(struct  &)__result_158] ={v} {CLOBBER};
  __result_19 = __result_158 + 80;
  # DEBUG __first => __result_19
  # DEBUG __first => __result_19
  if (__result_19 == __result_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Flit*] (_ZSt4copyIP4FlitESt15_Deque_iteratorIT_RS3_PS3_ES2_IS3_RKS3_PS7_ESA_S6_, funcdef_no=4204, decl_uid=75386, cgraph_uid=2649, symbol_order=2650)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Flit*] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.126134;
  const difference_type __offset;
  struct _Self & D.126127;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.75910;
  const long int D.75911;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  struct Flit * * * _22;
  long unsigned int __clen.113_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  struct Flit * * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.112_56;
  long int _57;
  struct Flit * * * _65;
  struct Flit * * _73;
  long int _74;
  long int _75;
  long int _76;
  struct Flit * * _81;
  long int iftmp.121_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.121_87;
  struct Flit * * * _88;
  long int iftmp.121_89;
  long unsigned int __node_offset.123_90;
  long unsigned int _91;
  struct Flit * * * _92;
  struct Flit * * _93;
  struct Flit * * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  struct Flit * * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.108_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.108_115;
  long int iftmp.108_117;
  long unsigned int __node_offset.110_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  struct Flit * * pretmp_214;
  struct Flit * * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  struct Flit * * const prephitmp_227;
  struct Flit * * const pretmp_228;
  struct Flit * * const prephitmp_229;
  struct Flit * * const prephitmp_230;
  struct Flit * * const prephitmp_238;
  struct Flit * * const prephitmp_239;
  struct Flit * * const prephitmp_240;
  struct Flit * * const pretmp_241;
  struct Flit * * const prephitmp_242;
  struct Flit * * const pretmp_243;
  struct Flit * * const prephitmp_244;
  struct Flit * * const pretmp_245;
  struct Flit * * const prephitmp_246;
  struct Flit * * pretmp_247;
  struct Flit * * prephitmp_248;
  struct Flit * * pretmp_249;
  struct Flit * * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 64;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 8;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.112_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#2800 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 8;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 8;
  # DEBUG __a => &D.75910
  # DEBUG __b => &D.75911
  _30 = MIN_EXPR <_12, __len.112_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#2798
  __clen.113_26 = (long unsigned int) __clen_59;
  _27 = __clen.113_26 * 8;
  # DEBUG D#2801 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#2801
  # DEBUG __result => D#2800
  # DEBUG __it => D#2801
  # DEBUG __it => D#2801
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#2801
  # DEBUG __result => D#2800
  # DEBUG __it => D#2800
  # DEBUG __it => D#2800
  # DEBUG __it => D#2801
  # DEBUG __it => D#2801
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 8;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#2798
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 8;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 8
  _143 = (unsigned long) __offset_105;
  if (_143 <= 63)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 8
  iftmp.108_110 = __offset_105 >> 6;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 8
  _113 = _112 >> 6;
  _114 = (long int) _113;
  iftmp.108_115 = ~_114;

  <bb 11>:
  # iftmp.108_117 = PHI <iftmp.108_110(9), iftmp.108_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.108_117
  __node_offset.110_118 = (long unsigned int) iftmp.108_117;
  _119 = __node_offset.110_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 8
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 8
  _123 = iftmp.108_117 * 64;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 8;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#2798
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 8;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 8
  _144 = (unsigned long) __offset_77;
  if (_144 <= 63)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 8
  iftmp.121_82 = __offset_77 >> 6;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 8
  _85 = _84 >> 6;
  _86 = (long int) _85;
  iftmp.121_87 = ~_86;

  <bb 15>:
  # iftmp.121_89 = PHI <iftmp.121_82(13), iftmp.121_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.121_89
  _88 = *__result_6(D)._M_node;
  __node_offset.123_90 = (long unsigned int) iftmp.121_89;
  _91 = __node_offset.123_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 8
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 8
  _95 = iftmp.121_89 * 64;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 8;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.112_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#2799 => {CLOBBER}
  # DEBUG __len => D#2799
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Credit*>*; _ForwardIterator = std::queue<Credit*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5queueIP6CreditSt5dequeIS4_SaIS4_EEES9_EET0_T_SB_SA_, funcdef_no=4214, decl_uid=75468, cgraph_uid=2659, symbol_order=2660)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Credit*>*; _ForwardIterator = std::queue<Credit*>*; bool _TrivialValueTypes = false] (struct queue * __first, struct queue * __last, struct queue * __result)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.4195;
  struct Credit * * SR.4194;
  struct Credit * * SR.4193;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.126241;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126216;
  struct _Deque_iterator D.126215;
  struct _Deque_iterator D.126214;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126196;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126182;
  struct _Deque_iterator D.126181;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126174;
  struct _Deque_iterator D.126173;
  struct _Deque_iterator D.126172;
  void * _12;
  struct _Deque_base * _18;
  struct Credit * * * _25;
  long int _26;
  struct Credit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Credit * * _33;
  long int _34;
  struct Credit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Credit * * _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Credit * * _49;
  struct Credit * * _51;
  struct Credit * * * _52;
  struct Credit * * _53;
  struct Credit * * _54;
  struct Credit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Credit * _117;
  struct Credit * * _122;
  struct Credit * * * _134;
  struct Credit * * _135;
  struct Credit * * _136;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_154 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_155 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_155
  # DEBUG __first => __first_154
  # DEBUG __r => __result_155
  # DEBUG __p => NULL
  # DEBUG __value => __first_154
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.106510 => D#12
  if (__result_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.106519 => __first_154
  # DEBUG D#2802 => &MEM[(const struct queue &)__first_154].c
  # DEBUG D#2804 => &__result_155->c
  # DEBUG this => D#2804
  # DEBUG __x => D#2802
  # DEBUG this => D#2802
  # DEBUG D#404 => &D#2802->D.62618._M_impl._M_start
  # DEBUG D#405 => &D#2802->D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1546 => &D#2802->D.62618
  # DEBUG this => D#1546
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__result_155].D.62618;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1393 => &_48->_M_impl
  # DEBUG this => D#1393
  # DEBUG __a => NULL
  # DEBUG this => D#1393
  # DEBUG __a => NULL
  # DEBUG this => D#1393
  # DEBUG D.96742 => NULL
  MEM[(struct _Deque_impl *)__result_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__result_155]._M_map_size = 0;
  # DEBUG D#722 => &D#1393->_M_start
  # DEBUG this => D#722
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_node = 0B;
  # DEBUG D#721 => &D#1393->_M_finish
  # DEBUG this => D#721
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1547 => &D#2804->D.62618
  # DEBUG this => D#1547
  # DEBUG D#1548 => &D#2804->D.62618._M_impl._M_start
  # DEBUG this => &D.126172
  # DEBUG __x => D#1548
  _49 = MEM[(const struct iterator &)__result_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__result_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__result_155 + 16]._M_node;
  # DEBUG this => D#2802
  # DEBUG D#221 => &D#2802->D.62618._M_impl._M_finish
  # DEBUG this => &D.126173
  # DEBUG __x => D#221
  _53 = MEM[(const struct iterator &)__first_154 + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__first_154 + 48]._M_first;
  # DEBUG D#2803 => MEM[(const struct iterator &)__first_154 + 48]._M_last
  _56 = MEM[(const struct iterator &)__first_154 + 48]._M_node;
  # DEBUG this => D#2802
  # DEBUG D#222 => &D#2802->D.62618._M_impl._M_start
  # DEBUG this => &D.126174
  # DEBUG __x => D#222
  __first$_M_cur_57 = MEM[(const struct iterator &)__first_154 + 16]._M_cur;
  # DEBUG D#2805 => MEM[(const struct iterator &)__first_154 + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__first_154 + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__first_154 + 16]._M_node;
  # DEBUG __result => &D.126172
  # DEBUG D.126178 => D#1545
  # DEBUG this => &D.126182
  # DEBUG __x => &D.126172
  # DEBUG __result => &D.126182
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.126182
  # DEBUG __result => NULL
  # DEBUG this => &D.126196
  # DEBUG __x => NULL
  # DEBUG __result => &D.126196
  # DEBUG this => &D.126216
  # DEBUG __x => &D.126196
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#2803
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#2803
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#2805
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#2805
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.126216
  # DEBUG this => NULL
  # DEBUG __x => &D.126216
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#2803
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#2803
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#2805
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#2805
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#2805
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.126241
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#2805
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.126241
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.126181
  # DEBUG __x => &D.126241
  D.126241 ={v} {CLOBBER};
  D.126216 ={v} {CLOBBER};
  D.126196 ={v} {CLOBBER};
  D.126182 ={v} {CLOBBER};
  D.126172 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.4193_217 = PHI <_49(8), SR.4193_216(14)>
  # SR.4194_214 = PHI <_51(8), SR.4194_213(14)>
  # SR.4195_212 = PHI <_52(8), SR.4195_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#318 => &D.126241
  # DEBUG this => D#318
  # DEBUG D#1544 => &__first
  # DEBUG this => D#1544
  _117 = MEM[(struct Credit * const &)__first$_M_cur_209];
  *SR.4193_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Credit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.126241
  _122 = SR.4193_217 + 8;
  if (_122 == SR.4194_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.126241
  _134 = SR.4195_212 + 8;
  # DEBUG this => &D.126241
  # DEBUG __new_node => _134
  _135 = MEM[(struct Credit * * *)SR.4195_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.4193_216 = PHI <_122(11), _135(12)>
  # SR.4194_213 = PHI <SR.4194_214(11), _136(12)>
  # SR.4195_211 = PHI <SR.4195_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __first_10 = __first_154 + 80;
  # DEBUG __first => __first_10
  __result_11 = __result_155 + 80;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_194 = PHI <__result_11(15)>

  <bb 18>:
  # __result_156 = PHI <__result_194(17), __result_4(D)(2)>
  return __result_156;

  # __result_193 = PHI <__result_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_158 = PHI <__result_4(D)(21), __result_19(23)>
  # DEBUG __first => __result_158
  # DEBUG __r => __result_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  _18 = &MEM[(struct deque *)__result_158].D.62618;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_18);
  MEM[(struct  &)__result_158] ={v} {CLOBBER};
  __result_19 = __result_158 + 80;
  # DEBUG __first => __result_19
  # DEBUG __first => __result_19
  if (__result_19 == __result_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Credit*] (_ZSt4copyIP6CreditESt15_Deque_iteratorIT_RS3_PS3_ES2_IS3_RKS3_PS7_ESA_S6_, funcdef_no=4217, decl_uid=75498, cgraph_uid=2662, symbol_order=2663)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Credit*] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.126327;
  const difference_type __offset;
  struct _Self & D.126320;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.76010;
  const long int D.76011;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  struct Credit * * * _22;
  long unsigned int __clen.177_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  struct Credit * * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.176_56;
  long int _57;
  struct Credit * * * _65;
  struct Credit * * _73;
  long int _74;
  long int _75;
  long int _76;
  struct Credit * * _81;
  long int iftmp.185_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.185_87;
  struct Credit * * * _88;
  long int iftmp.185_89;
  long unsigned int __node_offset.187_90;
  long unsigned int _91;
  struct Credit * * * _92;
  struct Credit * * _93;
  struct Credit * * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  struct Credit * * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.172_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.172_115;
  long int iftmp.172_117;
  long unsigned int __node_offset.174_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  struct Credit * * pretmp_214;
  struct Credit * * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  struct Credit * * const prephitmp_227;
  struct Credit * * const pretmp_228;
  struct Credit * * const prephitmp_229;
  struct Credit * * const prephitmp_230;
  struct Credit * * const prephitmp_238;
  struct Credit * * const prephitmp_239;
  struct Credit * * const prephitmp_240;
  struct Credit * * const pretmp_241;
  struct Credit * * const prephitmp_242;
  struct Credit * * const pretmp_243;
  struct Credit * * const prephitmp_244;
  struct Credit * * const pretmp_245;
  struct Credit * * const prephitmp_246;
  struct Credit * * pretmp_247;
  struct Credit * * prephitmp_248;
  struct Credit * * pretmp_249;
  struct Credit * * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 64;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 8;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.176_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#2809 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 8;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 8;
  # DEBUG __a => &D.76010
  # DEBUG __b => &D.76011
  _30 = MIN_EXPR <_12, __len.176_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#2807
  __clen.177_26 = (long unsigned int) __clen_59;
  _27 = __clen.177_26 * 8;
  # DEBUG D#2810 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#2810
  # DEBUG __result => D#2809
  # DEBUG __it => D#2810
  # DEBUG __it => D#2810
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#2810
  # DEBUG __result => D#2809
  # DEBUG __it => D#2809
  # DEBUG __it => D#2809
  # DEBUG __it => D#2810
  # DEBUG __it => D#2810
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 8;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#2807
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 8;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 8
  _143 = (unsigned long) __offset_105;
  if (_143 <= 63)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 8
  iftmp.172_110 = __offset_105 >> 6;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 8
  _113 = _112 >> 6;
  _114 = (long int) _113;
  iftmp.172_115 = ~_114;

  <bb 11>:
  # iftmp.172_117 = PHI <iftmp.172_110(9), iftmp.172_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.172_117
  __node_offset.174_118 = (long unsigned int) iftmp.172_117;
  _119 = __node_offset.174_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 8
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 8
  _123 = iftmp.172_117 * 64;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 8;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#2807
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 8;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 8
  _144 = (unsigned long) __offset_77;
  if (_144 <= 63)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 8
  iftmp.185_82 = __offset_77 >> 6;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 8
  _85 = _84 >> 6;
  _86 = (long int) _85;
  iftmp.185_87 = ~_86;

  <bb 15>:
  # iftmp.185_89 = PHI <iftmp.185_82(13), iftmp.185_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.185_89
  _88 = *__result_6(D)._M_node;
  __node_offset.187_90 = (long unsigned int) iftmp.185_89;
  _91 = __node_offset.187_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 8
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 8
  _95 = iftmp.185_89 * 64;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 8;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.176_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#2808 => {CLOBBER}
  # DEBUG __len => D#2808
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE24_M_new_elements_at_frontEm, funcdef_no=4352, decl_uid=54873, cgraph_uid=2797, symbol_order=2798)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Flit * * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  struct Flit * * * _14;
  struct Flit * * _16;
  struct Flit * * * _17;
  long unsigned int _18;
  sizetype _19;
  struct Flit * * * _20;
  void * _23;
  struct Flit * * * _25;
  long unsigned int _26;
  sizetype _27;
  struct Flit * * * _28;
  struct Flit * * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct Flit * * _39;
  long int _40;
  struct Flit * * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  struct Flit * * _46;
  long int _47;
  struct Flit * * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  struct Flit * * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#2076 => this_6(D)
  # DEBUG this => D#2076
  # DEBUG D#2075 => D#2076
  # DEBUG D#2074 => &D#2075->D.54933
  # DEBUG this => D#2074
  # DEBUG __a => D#2073
  # DEBUG D#2072 => D#2073
  # DEBUG D#1353 => D#2072
  # DEBUG this => D#1353
  # DEBUG this => this_6(D)
  # DEBUG D#201 => &MEM[(const struct deque *)this_6(D)].D.54933._M_impl._M_start
  # DEBUG D#202 => &MEM[(const struct deque *)this_6(D)].D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 64;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 8;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 2305843009213693951 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 8
  _13 = __new_elems_11(D) + 63;
  # DEBUG __size => 8
  __new_nodes_15 = _13 >> 6;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.54933._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.54933._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#2078 => &this_6(D)->D.54933
  # DEBUG D#1361 => D#2078
  # DEBUG this => D#1361
  # DEBUG D#1360 => D#1361
  # DEBUG __size => 8
  # DEBUG D#1359 => &D#1360->_M_impl
  # DEBUG D#1358 => D#1359
  # DEBUG __n => NULL
  # DEBUG __a => D#1358
  # DEBUG D#1357 => D#1358
  # DEBUG D#1355 => D#1357
  # DEBUG D#1356 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1355
  # DEBUG D.114556 => D#1356
  # DEBUG D#1354 => D#1355
  # DEBUG D#1353 => D#1354
  # DEBUG this => D#1353
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.54933._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#2077 => &this_6(D)->D.54933
  # DEBUG D#981 => D#2077
  # DEBUG __p => _29
  # DEBUG this => D#981
  # DEBUG D#980 => D#981
  # DEBUG __size => 8
  # DEBUG D#979 => &D#980->_M_impl
  # DEBUG D#977 => D#979
  # DEBUG __p => _29
  # DEBUG __a => D#977
  # DEBUG __n => D#978
  # DEBUG D#976 => D#978
  # DEBUG D#975 => D#977
  # DEBUG D#973 => D#975
  # DEBUG D#974 => D#976
  # DEBUG __p => _29
  # DEBUG this => D#973
  # DEBUG D.114566 => D#974
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE23_M_new_elements_at_backEm, funcdef_no=4354, decl_uid=54876, cgraph_uid=2799, symbol_order=2800)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Flit * * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  struct Flit * * * _13;
  struct Flit * * * _16;
  long unsigned int _17;
  struct Flit * * * _18;
  void * _21;
  struct Flit * * * _23;
  long unsigned int _24;
  struct Flit * * * _25;
  struct Flit * * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  struct Flit * * _35;
  long int _36;
  struct Flit * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  struct Flit * * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  struct Flit * * _50;
  long unsigned int _53;
  long unsigned int _54;
  struct Flit * * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#2076 => this_6(D)
  # DEBUG this => D#2076
  # DEBUG D#2075 => D#2076
  # DEBUG D#2074 => &D#2075->D.54933
  # DEBUG this => D#2074
  # DEBUG __a => D#2073
  # DEBUG D#2072 => D#2073
  # DEBUG D#1353 => D#2072
  # DEBUG this => D#1353
  # DEBUG this => this_6(D)
  # DEBUG D#201 => &MEM[(const struct deque *)this_6(D)].D.54933._M_impl._M_start
  # DEBUG D#202 => &MEM[(const struct deque *)this_6(D)].D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 64;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 2305843009213693951 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 8
  _12 = __new_elems_10(D) + 63;
  # DEBUG __size => 8
  __new_nodes_14 = _12 >> 6;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.54933._M_impl._M_map_size;
  _57 = this_6(D)->D.54933._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.54933._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#2080 => &this_6(D)->D.54933
  # DEBUG D#1361 => D#2080
  # DEBUG this => D#1361
  # DEBUG D#1360 => D#1361
  # DEBUG __size => 8
  # DEBUG D#1359 => &D#1360->_M_impl
  # DEBUG D#1358 => D#1359
  # DEBUG __n => NULL
  # DEBUG __a => D#1358
  # DEBUG D#1357 => D#1358
  # DEBUG D#1355 => D#1357
  # DEBUG D#1356 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1355
  # DEBUG D.114584 => D#1356
  # DEBUG D#1354 => D#1355
  # DEBUG D#1353 => D#1354
  # DEBUG this => D#1353
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.54933._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#2079 => &this_6(D)->D.54933
  # DEBUG D#981 => D#2079
  # DEBUG __p => _26
  # DEBUG this => D#981
  # DEBUG D#980 => D#981
  # DEBUG __size => 8
  # DEBUG D#979 => &D#980->_M_impl
  # DEBUG D#977 => D#979
  # DEBUG __p => _26
  # DEBUG __a => D#977
  # DEBUG __n => D#978
  # DEBUG D#976 => D#978
  # DEBUG D#975 => D#977
  # DEBUG D#973 => D#975
  # DEBUG D#974 => D#976
  # DEBUG __p => _26
  # DEBUG this => D#973
  # DEBUG D.114594 => D#974
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE13_M_insert_auxISt15_Deque_iteratorIS1_RKS1_PS6_EEEvS5_IS1_RS1_PS1_ET_SD_m, funcdef_no=4338, decl_uid=76638, cgraph_uid=2783, symbol_order=2784)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.4420;
  struct Flit * * SR.4419;
  struct Flit * * SR.4418;
  struct Flit * * SR.4417;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __last$24;
  struct Flit * * __last$8;
  struct Flit * * __last;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last1$_M_node;
  struct Flit * * __last1$_M_last;
  struct Flit * * __last1$_M_first;
  struct Flit * * __last1$_M_cur;
  struct Flit * * * __first1$_M_node;
  struct Flit * * __first1$_M_last;
  struct Flit * * __first1$_M_first;
  struct Flit * * __first1$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * SR.4366;
  struct Flit * * SR.4365;
  struct Flit * * SR.4364;
  struct Flit * * * SR.4363;
  struct Flit * * SR.4362;
  struct Flit * * SR.4361;
  struct Flit * * SR.4360;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.4348;
  struct Flit * * SR.4347;
  struct Flit * * SR.4346;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __last$24;
  struct Flit * * __last$8;
  struct Flit * * __last;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last2$_M_node;
  struct Flit * * __last2$_M_last;
  struct Flit * * __last2$_M_first;
  struct Flit * * __last2$_M_cur;
  struct Flit * * * __first2$_M_node;
  struct Flit * * __first2$_M_last;
  struct Flit * * __first2$_M_first;
  struct Flit * * __first2$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * SR.4290;
  struct Flit * * SR.4289;
  struct Flit * * SR.4288;
  struct Flit * * SR.4287;
  struct Flit * * * __new_finish$_M_node;
  struct Flit * * __new_finish$_M_last;
  struct Flit * * __new_finish$_M_first;
  struct Flit * * __new_finish$_M_cur;
  struct Flit * * * SR.4282;
  struct Flit * * SR.4281;
  struct Flit * * SR.4280;
  struct Flit * * SR.4279;
  struct Flit * * * __new_start$_M_node;
  struct Flit * * __new_start$_M_last;
  struct Flit * * __new_start$_M_first;
  struct Flit * * __new_start$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.126837;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126812;
  struct _Deque_iterator D.126811;
  struct _Deque_iterator D.126810;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126792;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126778;
  struct _Deque_iterator D.126777;
  struct _Deque_iterator D.126776;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.126775;
  struct _Deque_iterator D.126774;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  const ptrdiff_t _Num;
  struct Credit * * D.126752;
  const difference_type __offset;
  struct _Self & D.126734;
  const difference_type __offset;
  struct _Self & D.126727;
  difference_type __len;
  difference_type __llen;
  struct Flit * * __lend;
  difference_type __rlen;
  struct Flit * * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  const difference_type __offset;
  struct _Self & D.126697;
  struct _Self __tmp;
  struct _Deque_iterator D.126681;
  struct _Deque_iterator D.126680;
  struct _Deque_iterator D.126679;
  struct _Deque_iterator D.126678;
  const difference_type __offset;
  struct _Self & D.126668;
  const difference_type __offset;
  struct _Self & D.126661;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.126616;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126591;
  struct _Deque_iterator D.126590;
  struct _Deque_iterator D.126589;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126571;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.126557;
  struct _Deque_iterator D.126556;
  struct _Deque_iterator D.126555;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.126554;
  struct _Deque_iterator D.126553;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  const difference_type __offset;
  struct _Self & D.126531;
  struct _Self __tmp;
  struct _Deque_iterator D.126517;
  struct _Deque_iterator D.126516;
  struct _Deque_iterator D.126515;
  struct _Deque_iterator D.126514;
  struct _Self __tmp;
  const difference_type __offset;
  struct _Self & D.126495;
  const difference_type __offset;
  struct _Self & D.126488;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.76866;
  struct _Deque_iterator D.76860;
  struct _Deque_iterator D.76861;
  struct _Deque_iterator D.76862;
  struct _Deque_iterator D.76847;
  struct _Deque_iterator D.76841;
  struct _Deque_iterator D.76842;
  struct _Deque_iterator D.76843;
  struct _Deque_iterator D.76829;
  struct _Deque_iterator D.76830;
  struct _Deque_iterator D.76831;
  struct _Self D.76826;
  struct _Deque_iterator D.76819;
  struct _Deque_iterator D.76811;
  struct _Deque_iterator D.76812;
  struct _Deque_iterator D.76815;
  struct _Self D.76795;
  struct _Deque_iterator D.76791;
  struct _Deque_iterator D.76792;
  struct _Deque_iterator D.76793;
  struct _Deque_iterator D.76779;
  struct _Deque_iterator D.76780;
  struct _Deque_iterator D.76781;
  struct _Self D.76771;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.137_10;
  struct Flit * * _27;
  struct Flit * * _28;
  struct Flit * * _29;
  long int _38;
  struct Flit * * _42;
  struct Flit * * _48;
  struct Flit * * _57;
  long int _62;
  struct Flit * * _71;
  struct Flit * * _75;
  struct Flit * * * _80;
  struct Flit * * _82;
  struct Flit * * _88;
  long int _93;
  long int _94;
  struct Flit * * _95;
  long int _96;
  struct Flit * * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  struct Flit * * * _104;
  long int _105;
  struct Flit * * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  struct Flit * * _112;
  long int _113;
  struct Flit * * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  struct Flit * * _119;
  long int _120;
  struct Flit * * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  struct Flit * * _133;
  struct Flit * * _134;
  struct Flit * * * _135;
  struct Flit * * _136;
  struct Flit * * _137;
  struct Flit * * * _138;
  struct Flit * * const pretmp_143;
  struct Flit * * const prephitmp_144;
  struct Flit * * _145;
  struct Flit * * _146;
  struct Flit * * * _147;
  struct Flit * * _148;
  struct Flit * * _149;
  struct Flit * * * _150;
  struct Flit * * _157;
  struct Flit * * _161;
  struct Flit * * * _162;
  struct Flit * * _172;
  struct Flit * * _173;
  struct Flit * * _174;
  struct Flit * * * _175;
  struct Flit * * _176;
  struct Flit * * _177;
  struct Flit * * * _178;
  struct Flit * * _179;
  struct Flit * * _180;
  struct Flit * * * _181;
  struct Flit * * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.124_284;
  long int _289;
  long unsigned int __n.120_303;
  long unsigned int _304;
  long int iftmp.121_306;
  long unsigned int _308;
  long unsigned int _309;
  long int _310;
  long int iftmp.121_311;
  long int iftmp.121_313;
  long unsigned int __node_offset.123_314;
  long unsigned int _315;
  long int _319;
  long int _320;
  long unsigned int _321;
  long unsigned int _322;
  long unsigned int _333;
  long int iftmp.121_335;
  long unsigned int _337;
  long unsigned int _338;
  long int _339;
  long int iftmp.121_340;
  long int iftmp.121_342;
  long unsigned int __node_offset.123_343;
  long unsigned int _344;
  long int _348;
  long int _349;
  long unsigned int _350;
  long unsigned int _351;
  struct Flit * * _353;
  long int pretmp_359;
  long int prephitmp_360;
  struct Flit * * const pretmp_361;
  struct Flit * * const prephitmp_362;
  struct Flit * * _374;
  struct Flit * * _375;
  struct Flit * * * _376;
  struct _Self & _377;
  struct Flit * * _378;
  struct Flit * * _379;
  struct Flit * * _380;
  struct Flit * * * _381;
  long int _382;
  long int _384;
  long int _385;
  long int _386;
  long unsigned int __n.120_389;
  long unsigned int _390;
  long int iftmp.121_392;
  long unsigned int _394;
  long unsigned int _395;
  long int _396;
  long int iftmp.121_397;
  long int iftmp.121_399;
  long unsigned int __node_offset.123_400;
  long unsigned int _401;
  long int _405;
  long int _406;
  long unsigned int _407;
  long unsigned int _408;
  struct Flit * * _422;
  struct Flit * * _424;
  struct Flit * * * _425;
  long int _454;
  long int _456;
  long int _457;
  long int _458;
  long int _459;
  long int _460;
  long int _462;
  unsigned long _463;
  long int _464;
  long int _465;
  long int _466;
  long int _467;
  unsigned long _468;
  long int _469;
  unsigned long _470;
  long int _471;
  long int _472;
  long int _473;
  struct Flit * _478;
  unsigned long _479;
  unsigned long _482;
  struct Flit * * _483;
  struct Flit * * * _495;
  struct Flit * * _496;
  struct Flit * * _497;
  long int __len.141_498;
  long int _502;
  long int _508;
  unsigned long _509;
  unsigned long _510;
  long int _511;
  long int _512;
  long int _513;
  long unsigned int _515;
  long int __n.135_516;
  unsigned long _526;
  long unsigned int _535;
  long int iftmp.121_537;
  long unsigned int _539;
  long unsigned int _540;
  long int _541;
  long int iftmp.121_542;
  long int iftmp.121_544;
  long unsigned int __node_offset.123_545;
  long unsigned int _546;
  long int _550;
  long int _551;
  long unsigned int _552;
  long unsigned int _553;
  long unsigned int __n.120_563;
  long unsigned int _564;
  long int iftmp.121_566;
  long unsigned int _568;
  long unsigned int _569;
  long int _570;
  long int iftmp.121_571;
  long int iftmp.121_573;
  long unsigned int __node_offset.123_574;
  long unsigned int _575;
  long int _579;
  long int _580;
  long unsigned int _581;
  long unsigned int _582;
  long int _599;
  long int pretmp_601;
  long int prephitmp_602;
  long int _605;
  long int _607;
  long int _608;
  long int _609;
  long unsigned int __n.120_612;
  long unsigned int _613;
  long int iftmp.121_615;
  long unsigned int _617;
  long unsigned int _618;
  long int _619;
  long int iftmp.121_620;
  long int iftmp.121_622;
  long unsigned int __node_offset.123_623;
  long unsigned int _624;
  long int _628;
  long int _629;
  long unsigned int _630;
  long unsigned int _631;
  long int _634;
  long int _636;
  long int _637;
  long int _638;
  long int _639;
  long int _640;
  long int _642;
  long int _645;
  long int _646;
  long int _647;
  long int _649;
  long int _651;
  long int _652;
  long int _653;
  long int pretmp_655;
  long int _657;
  long int pretmp_658;
  long int _659;
  long int _660;
  long int _663;
  long int _665;
  long int _666;
  struct Flit * * _669;
  struct Flit * * _672;
  long unsigned int __clen.150_680;
  long unsigned int _681;
  sizetype _682;
  struct Flit * * _684;
  long int _686;
  struct Flit * * const prephitmp_691;
  struct Flit * * const pretmp_693;
  struct Flit * * const prephitmp_694;
  struct Flit * * const pretmp_695;
  struct Flit * * const prephitmp_696;
  struct Flit * * const pretmp_697;
  long unsigned int __n.120_700;
  long unsigned int _701;
  struct Flit * * _702;
  long int iftmp.121_703;
  long unsigned int _705;
  long unsigned int _706;
  long int _707;
  long int iftmp.121_708;
  long int pretmp_709;
  long int iftmp.121_710;
  long unsigned int __node_offset.123_711;
  long unsigned int _712;
  struct Flit * * * _713;
  struct Flit * * _714;
  long int _716;
  long int _717;
  long unsigned int _718;
  long unsigned int _719;
  struct Flit * * _720;
  long unsigned int __n.107_729;
  long unsigned int _730;
  long int iftmp.108_732;
  struct Flit * * const prephitmp_733;
  long unsigned int _734;
  long unsigned int _735;
  long int _736;
  long int iftmp.108_737;
  struct Flit * * * const pretmp_738;
  long int iftmp.108_739;
  long unsigned int __node_offset.110_740;
  long unsigned int _741;
  long int _745;
  long int _746;
  long unsigned int _747;
  long unsigned int _748;
  long int __first.217_751;
  long int _752;
  long unsigned int _754;
  sizetype _755;
  struct Credit * * _756;
  long int _804;
  long int _806;
  long int _807;
  long int _808;
  long int _809;
  long int _810;
  long int _812;
  long int _814;
  long int _815;
  long int _816;
  long int _817;
  long int _819;
  long int _821;
  long int _822;
  long int _823;
  struct Flit * * const prephitmp_826;
  struct Flit * * * const pretmp_827;
  struct Flit * _828;
  long int pretmp_831;
  struct Flit * * _833;
  long int pretmp_837;
  long int pretmp_839;
  struct Flit * * const pretmp_840;
  struct Flit * * * _845;
  struct Flit * * _846;
  struct Flit * * _847;
  long int _851;
  long int pretmp_904;
  long int prephitmp_905;
  struct Flit * * const pretmp_966;
  struct Flit * * const prephitmp_967;
  struct Flit * * const pretmp_972;
  struct Flit * * * const prephitmp_995;
  long int pretmp_997;
  struct Flit * * * const prephitmp_1005;
  long int prephitmp_1101;
  struct Flit * * * const prephitmp_1106;
  struct Flit * * * const pretmp_1107;

  <bb 2>:
  # DEBUG D#2153 => &this_4(D)->D.54933._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#2153
  # DEBUG __size => 8
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 64;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 8;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 8;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#201 => &MEM[(const struct deque *)this_4(D)].D.54933._M_impl._M_start
  # DEBUG D#202 => &MEM[(const struct deque *)this_4(D)].D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 64;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 8;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.137_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.137_10)
    goto <bb 3>;
  else
    goto <bb 29>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.54933._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 8;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_693 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_695 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_697 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_738 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  pretmp_997 = (long int) pretmp_693;
  pretmp_904 = (long int) pretmp_695;
  pretmp_655 = pretmp_997 - pretmp_904;
  pretmp_709 = pretmp_655 /[ex] 8;

  <bb 5>:
  # prephitmp_694 = PHI <_121(3), pretmp_693(4)>
  # prephitmp_696 = PHI <_278(3), pretmp_695(4)>
  # prephitmp_733 = PHI <_119(3), pretmp_697(4)>
  # prephitmp_995 = PHI <_106(3), pretmp_738(4)>
  # prephitmp_905 = PHI <_281(3), pretmp_709(4)>
  __n.124_284 = (long int) __n_11(D);
  # DEBUG D#2814 => &this_4(D)->D.54933._M_impl._M_start
  # DEBUG this => D#2814
  # DEBUG __n => __n.124_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#2814
  # DEBUG D#2844 => MEM[(const struct iterator &)this_4(D) + 16]._M_cur
  # DEBUG D#2843 => MEM[(const struct iterator &)this_4(D) + 16]._M_first
  # DEBUG __tmp$_M_first => D#2843
  # DEBUG D#2842 => MEM[(const struct iterator &)this_4(D) + 16]._M_last
  # DEBUG __tmp$_M_last => D#2842
  # DEBUG D#2841 => MEM[(const struct iterator &)this_4(D) + 16]._M_node
  # DEBUG __tmp$_M_node => D#2841
  # DEBUG this => &__tmp
  # DEBUG __n => __n.124_284
  _289 = -__n.124_284;
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  __offset_301 = prephitmp_905 - __n.124_284;
  # DEBUG __offset => __offset_301
  # DEBUG __size => 8
  _510 = (unsigned long) __offset_301;
  if (_510 <= 63)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 6>:
  # DEBUG __size => 8
  iftmp.121_306 = __offset_301 >> 6;
  goto <bb 8>;

  <bb 7>:
  _308 = ~_510;
  # DEBUG __size => 8
  _309 = _308 >> 6;
  _310 = (long int) _309;
  iftmp.121_311 = ~_310;

  <bb 8>:
  # iftmp.121_313 = PHI <iftmp.121_306(6), iftmp.121_311(7)>
  # DEBUG __node_offset => iftmp.121_313
  __node_offset.123_314 = (long unsigned int) iftmp.121_313;
  _315 = __node_offset.123_314 * 8;
  __new_start$_M_node_316 = prephitmp_995 + _315;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_start$_M_node_316
  # DEBUG __tmp$_M_node => __new_start$_M_node_316
  __new_start$_M_first_317 = *__new_start$_M_node_316;
  # DEBUG __tmp$_M_first => __new_start$_M_first_317
  # DEBUG __size => 8
  __new_start$_M_last_318 = __new_start$_M_first_317 + 512;
  # DEBUG __tmp$_M_last => __new_start$_M_last_318
  # DEBUG __size => 8
  _319 = iftmp.121_313 * 64;
  _320 = __offset_301 - _319;
  _321 = (long unsigned int) _320;
  _322 = _321 * 8;
  __new_start$_M_cur_323 = __new_start$_M_first_317 + _322;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_323

  <bb 9>:
  # __new_start$_M_cur_1027 = PHI <__new_start$_M_cur_305(74), __new_start$_M_cur_323(8)>
  # __new_start$_M_first_929 = PHI <prephitmp_696(74), __new_start$_M_first_317(8)>
  # __new_start$_M_last_888 = PHI <prephitmp_733(74), __new_start$_M_last_318(8)>
  # __new_start$_M_node_873 = PHI <prephitmp_995(74), __new_start$_M_node_316(8)>
  # DEBUG __tmp$_M_node => __new_start$_M_node_873
  # DEBUG __tmp$_M_last => __new_start$_M_last_888
  # DEBUG __tmp$_M_first => __new_start$_M_first_929
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_1027
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_1027
  # DEBUG __new_start$_M_first => __new_start$_M_first_929
  # DEBUG __new_start$_M_last => __new_start$_M_last_888
  # DEBUG __new_start$_M_node => __new_start$_M_node_873
  __tmp ={v} {CLOBBER};
  # DEBUG D#2154 => &this_4(D)->D.54933._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#2154
  # DEBUG __old_start$_M_cur => D#2844
  # DEBUG __old_start$_M_first => D#2843
  # DEBUG __old_start$_M_last => D#2842
  # DEBUG __old_start$_M_node => D#2841
  # DEBUG D#2815 => &this_4(D)->D.54933._M_impl._M_start
  # DEBUG this => D#2815
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#2815
  # DEBUG __tmp$_M_first => D#2843
  # DEBUG __tmp$_M_last => D#2842
  # DEBUG __tmp$_M_node => D#2841
  # DEBUG this => &__tmp
  # DEBUG __n => _125
  __offset_330 = _125 + prephitmp_905;
  # DEBUG __offset => __offset_330
  # DEBUG __size => 8
  _526 = (unsigned long) __offset_330;
  if (_526 <= 63)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 10>:
  # DEBUG __size => 8
  iftmp.121_335 = __offset_330 >> 6;
  goto <bb 12>;

  <bb 11>:
  _337 = ~_526;
  # DEBUG __size => 8
  _338 = _337 >> 6;
  _339 = (long int) _338;
  iftmp.121_340 = ~_339;

  <bb 12>:
  # iftmp.121_342 = PHI <iftmp.121_335(10), iftmp.121_340(11)>
  # DEBUG __node_offset => iftmp.121_342
  __node_offset.123_343 = (long unsigned int) iftmp.121_342;
  _344 = __node_offset.123_343 * 8;
  SR.4282_345 = prephitmp_995 + _344;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.4282_345
  # DEBUG __tmp$_M_node => SR.4282_345
  SR.4280_346 = *SR.4282_345;
  # DEBUG __tmp$_M_first => SR.4280_346
  # DEBUG __size => 8
  SR.4281_347 = SR.4280_346 + 512;
  # DEBUG __tmp$_M_last => SR.4281_347
  # DEBUG __size => 8
  _348 = iftmp.121_342 * 64;
  _349 = __offset_330 - _348;
  _350 = (long unsigned int) _349;
  _351 = _350 * 8;
  SR.4279_352 = SR.4280_346 + _351;
  # DEBUG __tmp$_M_cur => SR.4279_352

  <bb 13>:
  # SR.4279_1095 = PHI <SR.4279_334(76), SR.4279_352(12)>
  # SR.4280_1089 = PHI <prephitmp_696(76), SR.4280_346(12)>
  # SR.4281_1057 = PHI <prephitmp_733(76), SR.4281_347(12)>
  # SR.4282_1042 = PHI <prephitmp_995(76), SR.4282_345(12)>
  # DEBUG __tmp$_M_node => SR.4282_1042
  # DEBUG __tmp$_M_last => SR.4281_1057
  # DEBUG __tmp$_M_first => SR.4280_1089
  # DEBUG __tmp$_M_cur => SR.4279_1095
  # DEBUG this => &D.76771
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.4279_1095;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.4280_1089;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.4281_1057;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.4282_1042;
  if (_125 >= __n.124_284)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 14>:
  # DEBUG this => D#2815
  # DEBUG __n => __n.124_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#2815
  _29 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp._M_cur = _29;
  _374 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  __tmp._M_first = _374;
  _375 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  __tmp._M_last = _375;
  _376 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  __tmp._M_node = _376;
  _377 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, __n.124_284);
  # DEBUG this => &__start_n
  # DEBUG __x => _377
  _378 = MEM[(const struct iterator &)_377]._M_cur;
  _379 = MEM[(const struct iterator &)_377]._M_first;
  _380 = MEM[(const struct iterator &)_377]._M_last;
  _381 = MEM[(const struct iterator &)_377]._M_node;
  __tmp ={v} {CLOBBER};
  # DEBUG D#2155 => &this_4(D)->D.54933
  # DEBUG this => D#2155
  # DEBUG this => &D.76781
  # DEBUG __x => &__new_start
  D.76781._M_cur = __new_start$_M_cur_1027;
  D.76781._M_first = __new_start$_M_first_929;
  D.76781._M_last = __new_start$_M_last_888;
  D.76781._M_node = __new_start$_M_node_873;
  # DEBUG this => &D.76780
  # DEBUG __x => &__start_n
  D.76780._M_cur = _378;
  D.76780._M_first = _379;
  D.76780._M_last = _380;
  D.76780._M_node = _381;
  # DEBUG D#2156 => &this_4(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.76779
  # DEBUG __x => D#2156
  _27 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  D.76779._M_cur = _27;
  _136 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  D.76779._M_first = _136;
  _137 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  D.76779._M_last = _137;
  _138 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  D.76779._M_node = _138;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.485 (&D.76779, &D.76780, &D.76781);
  D.76779 ={v} {CLOBBER};
  D.76780 ={v} {CLOBBER};
  D.76781 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_1027;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_929;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_888;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_873;
  # DEBUG this => &D.76793
  # DEBUG __x => &__old_start
  # DEBUG this => &D.76792
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.76791
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.76791
  # DEBUG __last => &D.76792
  # DEBUG __result => &D.76793
  # DEBUG this => &D.126517
  # DEBUG __x => &D.76793
  D.126517._M_cur = prephitmp_694;
  D.126517._M_first = prephitmp_696;
  D.126517._M_last = prephitmp_733;
  D.126517._M_node = prephitmp_995;
  # DEBUG this => &D.126516
  # DEBUG __x => &D.76792
  D.126516._M_cur = _28;
  D.126516._M_first = _133;
  D.126516._M_last = _134;
  D.126516._M_node = _135;
  # DEBUG this => &D.126515
  # DEBUG __x => &D.76791
  D.126515._M_cur = _378;
  D.126515._M_first = _379;
  D.126515._M_last = _380;
  D.126515._M_node = _381;
  D.126514 = std::copy<Flit*> (D.126515, D.126516, &D.126517); [return slot optimization]
  D.126515 ={v} {CLOBBER};
  D.126516 ={v} {CLOBBER};
  D.126517 ={v} {CLOBBER};
  D.76791 ={v} {CLOBBER};
  D.76792 ={v} {CLOBBER};
  D.76793 ={v} {CLOBBER};
  # DEBUG this => __pos_6(D)
  # DEBUG __n => __n.124_284
  # DEBUG this => &__tmp
  # DEBUG __x => __pos_6(D)
  _353 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  __tmp$_M_first_354 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  # DEBUG __tmp$_M_first => __tmp$_M_first_354
  __tmp$_M_last_355 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  # DEBUG __tmp$_M_last => __tmp$_M_last_355
  __tmp$_M_node_356 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __tmp$_M_node => __tmp$_M_node_356
  # DEBUG this => &__tmp
  # DEBUG __n => __n.124_284
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  _382 = (long int) _353;
  _384 = (long int) __tmp$_M_first_354;
  _385 = _382 - _384;
  _386 = _385 /[ex] 8;
  __offset_387 = _386 - __n.124_284;
  # DEBUG __offset => __offset_387
  # DEBUG __size => 8
  _482 = (unsigned long) __offset_387;
  if (_482 <= 63)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 15>:
  # DEBUG __size => 8
  iftmp.121_392 = __offset_387 >> 6;
  goto <bb 17>;

  <bb 16>:
  _394 = ~_482;
  # DEBUG __size => 8
  _395 = _394 >> 6;
  _396 = (long int) _395;
  iftmp.121_397 = ~_396;

  <bb 17>:
  # iftmp.121_399 = PHI <iftmp.121_392(15), iftmp.121_397(16)>
  # DEBUG __node_offset => iftmp.121_399
  __node_offset.123_400 = (long unsigned int) iftmp.121_399;
  _401 = __node_offset.123_400 * 8;
  __tmp$_M_node_402 = __tmp$_M_node_356 + _401;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_402
  # DEBUG __tmp$_M_node => __tmp$_M_node_402
  __tmp$_M_first_403 = *__tmp$_M_node_402;
  # DEBUG __tmp$_M_first => __tmp$_M_first_403
  # DEBUG __size => 8
  __tmp$_M_last_404 = __tmp$_M_first_403 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_404
  # DEBUG __size => 8
  _405 = iftmp.121_399 * 64;
  _406 = __offset_387 - _405;
  _407 = (long unsigned int) _406;
  _408 = _407 * 8;
  __tmp$_M_cur_409 = __tmp$_M_first_403 + _408;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_409

  <bb 18>:
  # __tmp$_M_cur_92 = PHI <__tmp$_M_cur_391(78), __tmp$_M_cur_409(17)>
  # __tmp$_M_first_87 = PHI <__tmp$_M_first_354(78), __tmp$_M_first_403(17)>
  # __tmp$_M_last_1168 = PHI <__tmp$_M_last_355(78), __tmp$_M_last_404(17)>
  # __tmp$_M_node_1167 = PHI <__tmp$_M_node_356(78), __tmp$_M_node_402(17)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_1167
  # DEBUG __tmp$_M_last => __tmp$_M_last_1168
  # DEBUG __tmp$_M_first => __tmp$_M_first_87
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_92
  # DEBUG this => &D.76795
  # DEBUG __x => NULL
  D.76795._M_cur = __tmp$_M_cur_92;
  D.76795._M_first = __tmp$_M_first_87;
  D.76795._M_last = __tmp$_M_last_1168;
  D.76795._M_node = __tmp$_M_node_1167;
  __tmp ={v} {CLOBBER};
  std::copy<Flit*> (__first, __last, &D.76795);
  D.76795 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 28>;

  <bb 19>:
  __mid = __first;
  _38 = __n.124_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#2058 => &__mid
  # DEBUG D.114492 => D#2058
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>::operator+= (&__mid, _38);
  # DEBUG D#2157 => &this_4(D)->D.54933
  # DEBUG this => D#2157
  # DEBUG D#2819 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.76815
  # DEBUG __x => &__new_start
  # DEBUG this => &D.76812
  # DEBUG __x => __pos_6(D)
  _42 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _148 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _149 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _150 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG D#2158 => &this_4(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.76811
  # DEBUG __x => D#2158
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _145 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.76811
  # DEBUG __last1 => &D.76812
  __first$_M_cur_932 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first2$_M_cur => __first$_M_cur_932
  # DEBUG D#2834 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first2$_M_first => D#2834
  __first$_M_last_930 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first2$_M_last => __first$_M_last_930
  __first$_M_node_928 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first2$_M_node => __first$_M_node_928
  __last_927 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __last2$_M_cur => __last_927
  __last$8_926 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __last2$_M_first => __last$8_926
  # DEBUG D#2833 => MEM[(struct _Deque_iterator *)&__mid + 16B]
  # DEBUG __last2$_M_last => D#2833
  __last$24_17 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __last2$_M_node => __last$24_17
  # DEBUG __result => &D.76815
  # DEBUG __alloc => D#2819
  # DEBUG this => &D.126557
  # DEBUG __x => &D.76815
  D.126557._M_cur = __new_start$_M_cur_1027;
  D.126557._M_first = __new_start$_M_first_929;
  D.126557._M_last = __new_start$_M_last_888;
  D.126557._M_node = __new_start$_M_node_873;
  # DEBUG this => &D.126556
  # DEBUG __x => &D.76812
  D.126556._M_cur = _42;
  D.126556._M_first = _148;
  D.126556._M_last = _149;
  D.126556._M_node = _150;
  # DEBUG this => &D.126555
  # DEBUG __x => &D.76811
  D.126555._M_cur = _48;
  D.126555._M_first = _145;
  D.126555._M_last = _146;
  D.126555._M_node = _147;
  # DEBUG D#2152 => D#2819
  __mid = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.485 (&D.126555, &D.126556, &D.126557); [return slot optimization]
  D.126555 ={v} {CLOBBER};
  D.126556 ={v} {CLOBBER};
  D.126557 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  _422 = __mid._M_cur;
  _424 = __mid._M_last;
  _425 = __mid._M_node;
  # DEBUG D#1534 => D#2819
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#2834
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_928
  # DEBUG __last$_M_cur => __last_927
  # DEBUG __last$_M_first => __last$8_926
  # DEBUG __last$_M_last => D#2833
  # DEBUG __last$_M_node => __last$24_17
  # DEBUG __result => NULL
  # DEBUG D.126547 => D#1534
  # DEBUG this => &D.126554
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#2834
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_928
  # DEBUG __last$_M_cur => __last_927
  # DEBUG __last$_M_first => __last$8_926
  # DEBUG __last$_M_last => D#2833
  # DEBUG __last$_M_node => __last$24_17
  # DEBUG __result => &D.126554
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.126554
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#2834
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_928
  # DEBUG __last$_M_cur => __last_927
  # DEBUG __last$_M_first => __last$8_926
  # DEBUG __last$_M_last => D#2833
  # DEBUG __last$_M_node => __last$24_17
  # DEBUG __result => NULL
  # DEBUG this => &D.126571
  # DEBUG __x => NULL
  # DEBUG __first => __first$_M_cur_932
  # DEBUG __first$8 => D#2834
  # DEBUG __first$16 => __first$_M_last_930
  # DEBUG __first$24 => __first$_M_node_928
  # DEBUG __last => __last_927
  # DEBUG __last$8 => __last$8_926
  # DEBUG __last$_M_last => D#2833
  # DEBUG __last$24 => __last$24_17
  # DEBUG __result => &D.126571
  # DEBUG this => &D.126591
  # DEBUG __x => &D.126571
  # DEBUG __it => __last_927
  # DEBUG __it$8 => __last$8_926
  # DEBUG D#2818 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#2818
  # DEBUG __it$24 => __last$24_17
  # DEBUG __it$_M_cur => __last_927
  # DEBUG __it$_M_first => __last$8_926
  # DEBUG __it$_M_last => D#2818
  # DEBUG __it$_M_node => __last$24_17
  # DEBUG __it => __first$_M_cur_932
  # DEBUG __it$8 => D#2834
  # DEBUG __it$16 => __first$_M_last_930
  # DEBUG __it$24 => __first$_M_node_928
  # DEBUG __it$_M_cur => __first$_M_cur_932
  # DEBUG __it$_M_first => D#2834
  # DEBUG __it$_M_last => __first$_M_last_930
  # DEBUG __it$_M_node => __first$_M_node_928
  # DEBUG __result => &D.126591
  # DEBUG this => NULL
  # DEBUG __x => &D.126591
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_927
  # DEBUG __it$8 => __last$8_926
  # DEBUG __it$16 => D#2818
  # DEBUG __it$24 => __last$24_17
  # DEBUG __it$_M_cur => __last_927
  # DEBUG __it$_M_first => __last$8_926
  # DEBUG __it$_M_last => D#2818
  # DEBUG __it$_M_node => __last$24_17
  # DEBUG __it => __first$_M_cur_932
  # DEBUG __it$8 => D#2834
  # DEBUG __it$16 => __first$_M_last_930
  # DEBUG __it$24 => __first$_M_node_928
  # DEBUG __it$_M_cur => __first$_M_cur_932
  # DEBUG __it$_M_first => D#2834
  # DEBUG __it$_M_last => __first$_M_last_930
  # DEBUG __it$_M_node => __first$_M_node_928
  # DEBUG __first => __first$_M_cur_932
  # DEBUG __first$8 => D#2834
  # DEBUG __first$16 => __first$_M_last_930
  # DEBUG __first$24 => __first$_M_node_928
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.126616
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#2834
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_928
  # DEBUG __result => &D.126616
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _454 = (long int) __last$24_17;
  _456 = (long int) __first$_M_node_928;
  _457 = _454 - _456;
  _458 = _457 /[ex] 8;
  _459 = _458 + -1;
  _460 = _459 * 64;
  _462 = (long int) __last_927;
  _464 = (long int) __last$8_926;
  _465 = _462 - _464;
  _466 = _465 /[ex] 8;
  _467 = _460 + _466;
  _469 = (long int) __first$_M_last_930;
  _471 = (long int) __first$_M_cur_932;
  _472 = _469 - _471;
  _473 = _472 /[ex] 8;
  __n_474 = _467 + _473;
  # DEBUG __n => __n_474
  # DEBUG __n => __n_474
  if (__n_474 <= 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG this => &D.126553
  # DEBUG __x => &D.126616
  D.126616 ={v} {CLOBBER};
  D.126591 ={v} {CLOBBER};
  D.126571 ={v} {CLOBBER};
  D.126554 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.76811 ={v} {CLOBBER};
  D.76812 ={v} {CLOBBER};
  D.76815 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_1027;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_929;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_888;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_873;
  # DEBUG this => &D.76819
  # DEBUG __x => &__old_start
  D.76819._M_cur = prephitmp_694;
  D.76819._M_first = prephitmp_696;
  D.76819._M_last = prephitmp_733;
  D.76819._M_node = prephitmp_995;
  std::copy<Flit*> (__mid, __last, &D.76819);
  D.76819 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 28>;

  <bb 21>:

  <bb 22>:
  # __n_499 = PHI <__n_474(21), __n_485(27)>
  # SR.4346_1166 = PHI <_422(21), SR.4346_1165(27)>
  # SR.4347_1164 = PHI <_424(21), SR.4347_1163(27)>
  # SR.4348_1162 = PHI <_425(21), SR.4348_1160(27)>
  # __first$_M_cur_1159 = PHI <__first$_M_cur_932(21), __first$_M_cur_1156(27)>
  # __first$_M_last_1155 = PHI <__first$_M_last_930(21), __first$_M_last_1154(27)>
  # __first$_M_node_1153 = PHI <__first$_M_node_928(21), __first$_M_node_1152(27)>
  # DEBUG __first$_M_node => __first$_M_node_1153
  # DEBUG __first$_M_last => __first$_M_last_1155
  # DEBUG __first$_M_cur => __first$_M_cur_1159
  # DEBUG __n => __n_499
  # DEBUG D#308 => &D.126616
  # DEBUG this => D#308
  # DEBUG D#98 => &__first
  # DEBUG this => D#98
  _478 = MEM[(struct Flit * const &)__first$_M_cur_1159];
  *SR.4346_1166 = _478;
  # DEBUG this => &__first
  __first$_M_cur_480 = __first$_M_cur_1159 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_480
  if (__first$_M_cur_480 == __first$_M_last_1155)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG this => &__first
  __first$_M_node_491 = __first$_M_node_1153 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_491
  # DEBUG __first$_M_node => __first$_M_node_491
  __first$_M_cur_492 = MEM[(struct Flit * * *)__first$_M_node_1153 + 8B];
  # DEBUG __size => 8
  __first$_M_last_493 = __first$_M_cur_492 + 512;
  # DEBUG __first$_M_last => __first$_M_last_493
  # DEBUG __first$_M_cur => __first$_M_cur_492

  <bb 24>:
  # __first$_M_cur_1156 = PHI <__first$_M_cur_480(22), __first$_M_cur_492(23)>
  # __first$_M_last_1154 = PHI <__first$_M_last_1155(22), __first$_M_last_493(23)>
  # __first$_M_node_1152 = PHI <__first$_M_node_1153(22), __first$_M_node_491(23)>
  # DEBUG __first$_M_node => __first$_M_node_1152
  # DEBUG __first$_M_last => __first$_M_last_1154
  # DEBUG __first$_M_cur => __first$_M_cur_1156
  # DEBUG this => &D.126616
  _483 = SR.4346_1166 + 8;
  if (_483 == SR.4347_1164)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG this => &D.126616
  _495 = SR.4348_1162 + 8;
  # DEBUG this => &D.126616
  # DEBUG __new_node => _495
  _496 = MEM[(struct Flit * * *)SR.4348_1162 + 8B];
  # DEBUG __size => 8
  _497 = _496 + 512;

  <bb 26>:
  # SR.4346_1165 = PHI <_483(24), _496(25)>
  # SR.4347_1163 = PHI <SR.4347_1164(24), _497(25)>
  # SR.4348_1160 = PHI <SR.4348_1162(24), _495(25)>
  __n_485 = __n_499 + -1;
  # DEBUG __n => __n_485
  # DEBUG __n => __n_485
  if (__n_485 <= 0)
    goto <bb 20>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 22>;

  <bb 28>:
  # DEBUG D#2825 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#2825
  # DEBUG D#2826 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#2826
  # DEBUG D#2827 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#2827
  # DEBUG D#2828 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#2828
  return;

  <bb 29>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.54933._M_impl._M_finish._M_last;
  _508 = (long int) _57;
  _511 = _508 - _96;
  _512 = _511 /[ex] 8;
  _513 = _512 + -1;
  __vacancies_514 = (const size_type) _513;
  # DEBUG __vacancies => __vacancies_514
  if (__n_11(D) > __vacancies_514)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  _515 = __n_11(D) - __vacancies_514;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_back (this_4(D), _515);
  pretmp_143 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_972 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_966 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_827 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  pretmp_831 = (long int) pretmp_143;
  pretmp_837 = (long int) pretmp_972;
  pretmp_839 = pretmp_831 - pretmp_837;
  pretmp_601 = pretmp_839 /[ex] 8;

  <bb 31>:
  # prephitmp_144 = PHI <_95(29), pretmp_143(30)>
  # prephitmp_967 = PHI <_97(29), pretmp_972(30)>
  # prephitmp_826 = PHI <_57(29), pretmp_966(30)>
  # prephitmp_1106 = PHI <_80(29), pretmp_827(30)>
  # prephitmp_602 = PHI <_100(29), pretmp_601(30)>
  __n.135_516 = (long int) __n_11(D);
  # DEBUG D#2816 => &this_4(D)->D.54933._M_impl._M_finish
  # DEBUG this => D#2816
  # DEBUG __n => __n.135_516
  # DEBUG this => &__tmp
  # DEBUG __x => D#2816
  # DEBUG D#2840 => MEM[(const struct iterator &)this_4(D) + 48]._M_cur
  # DEBUG D#2839 => MEM[(const struct iterator &)this_4(D) + 48]._M_first
  # DEBUG __tmp$_M_first => D#2839
  # DEBUG D#2838 => MEM[(const struct iterator &)this_4(D) + 48]._M_last
  # DEBUG __tmp$_M_last => D#2838
  # DEBUG D#2837 => MEM[(const struct iterator &)this_4(D) + 48]._M_node
  # DEBUG __tmp$_M_node => D#2837
  # DEBUG this => &__tmp
  # DEBUG __n => __n.135_516
  __offset_532 = __n.135_516 + prephitmp_602;
  # DEBUG __offset => __offset_532
  # DEBUG __size => 8
  _509 = (unsigned long) __offset_532;
  if (_509 <= 63)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 32>:
  # DEBUG __size => 8
  iftmp.121_537 = __offset_532 >> 6;
  goto <bb 34>;

  <bb 33>:
  _539 = ~_509;
  # DEBUG __size => 8
  _540 = _539 >> 6;
  _541 = (long int) _540;
  iftmp.121_542 = ~_541;

  <bb 34>:
  # iftmp.121_544 = PHI <iftmp.121_537(32), iftmp.121_542(33)>
  # DEBUG __node_offset => iftmp.121_544
  __node_offset.123_545 = (long unsigned int) iftmp.121_544;
  _546 = __node_offset.123_545 * 8;
  __new_finish$_M_node_547 = prephitmp_1106 + _546;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_finish$_M_node_547
  # DEBUG __tmp$_M_node => __new_finish$_M_node_547
  __new_finish$_M_first_548 = *__new_finish$_M_node_547;
  # DEBUG __tmp$_M_first => __new_finish$_M_first_548
  # DEBUG __size => 8
  __new_finish$_M_last_549 = __new_finish$_M_first_548 + 512;
  # DEBUG __tmp$_M_last => __new_finish$_M_last_549
  # DEBUG __size => 8
  _550 = iftmp.121_544 * 64;
  _551 = __offset_532 - _550;
  _552 = (long unsigned int) _551;
  _553 = _552 * 8;
  __new_finish$_M_cur_554 = __new_finish$_M_first_548 + _553;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_554

  <bb 35>:
  # __new_finish$_M_cur_1129 = PHI <__new_finish$_M_cur_536(80), __new_finish$_M_cur_554(34)>
  # __new_finish$_M_first_1128 = PHI <prephitmp_967(80), __new_finish$_M_first_548(34)>
  # __new_finish$_M_last_1123 = PHI <prephitmp_826(80), __new_finish$_M_last_549(34)>
  # __new_finish$_M_node_1122 = PHI <prephitmp_1106(80), __new_finish$_M_node_547(34)>
  # DEBUG __tmp$_M_node => __new_finish$_M_node_1122
  # DEBUG __tmp$_M_last => __new_finish$_M_last_1123
  # DEBUG __tmp$_M_first => __new_finish$_M_first_1128
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_1129
  # DEBUG this => &__new_finish
  # DEBUG __x => NULL
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_1129
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_1128
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_1123
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_1122
  __tmp ={v} {CLOBBER};
  # DEBUG D#2159 => &this_4(D)->D.54933._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#2159
  # DEBUG __old_finish$_M_cur => D#2840
  # DEBUG __old_finish$_M_first => D#2839
  # DEBUG __old_finish$_M_last => D#2838
  # DEBUG __old_finish$_M_node => D#2837
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#2817 => &this_4(D)->D.54933._M_impl._M_finish
  # DEBUG this => D#2817
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#2817
  # DEBUG __tmp$_M_first => D#2839
  # DEBUG __tmp$_M_last => D#2838
  # DEBUG __tmp$_M_node => D#2837
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __n => -__elemsafter_55
  __offset_561 = prephitmp_602 - __elemsafter_55;
  # DEBUG __offset => __offset_561
  # DEBUG __size => 8
  _479 = (unsigned long) __offset_561;
  if (_479 <= 63)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 36>:
  # DEBUG __size => 8
  iftmp.121_566 = __offset_561 >> 6;
  goto <bb 38>;

  <bb 37>:
  _568 = ~_479;
  # DEBUG __size => 8
  _569 = _568 >> 6;
  _570 = (long int) _569;
  iftmp.121_571 = ~_570;

  <bb 38>:
  # iftmp.121_573 = PHI <iftmp.121_566(36), iftmp.121_571(37)>
  # DEBUG __node_offset => iftmp.121_573
  __node_offset.123_574 = (long unsigned int) iftmp.121_573;
  _575 = __node_offset.123_574 * 8;
  SR.4290_576 = prephitmp_1106 + _575;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.4290_576
  # DEBUG __tmp$_M_node => SR.4290_576
  SR.4288_577 = *SR.4290_576;
  # DEBUG __tmp$_M_first => SR.4288_577
  # DEBUG __size => 8
  SR.4289_578 = SR.4288_577 + 512;
  # DEBUG __tmp$_M_last => SR.4289_578
  # DEBUG __size => 8
  _579 = iftmp.121_573 * 64;
  _580 = __offset_561 - _579;
  _581 = (long unsigned int) _580;
  _582 = _581 * 8;
  SR.4287_583 = SR.4288_577 + _582;
  # DEBUG __tmp$_M_cur => SR.4287_583

  <bb 39>:
  # SR.4287_1147 = PHI <SR.4287_565(82), SR.4287_583(38)>
  # SR.4288_1146 = PHI <prephitmp_967(82), SR.4288_577(38)>
  # SR.4289_1145 = PHI <prephitmp_826(82), SR.4289_578(38)>
  # SR.4290_1144 = PHI <prephitmp_1106(82), SR.4290_576(38)>
  # DEBUG __tmp$_M_node => SR.4290_1144
  # DEBUG __tmp$_M_last => SR.4289_1145
  # DEBUG __tmp$_M_first => SR.4288_1146
  # DEBUG __tmp$_M_cur => SR.4287_1147
  # DEBUG this => &D.76826
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.4287_1147;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.4288_1146;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.4289_1145;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.4290_1144;
  if (__elemsafter_55 > __n.135_516)
    goto <bb 40>;
  else
    goto <bb 64>;

  <bb 40>:
  # DEBUG this => D#2817
  # DEBUG __n => __n.135_516
  # DEBUG this => &__tmp
  # DEBUG __x => D#2817
  _71 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  SR.4361_596 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __tmp$_M_first => SR.4361_596
  SR.4362_597 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __tmp$_M_last => SR.4362_597
  SR.4363_598 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __tmp$_M_node => SR.4363_598
  # DEBUG this => &__tmp
  # DEBUG __n => __n.135_516
  # DEBUG this => &__tmp
  # DEBUG __n => -__n.135_516
  _605 = (long int) _71;
  _607 = (long int) SR.4361_596;
  _608 = _605 - _607;
  _609 = _608 /[ex] 8;
  __offset_610 = _609 - __n.135_516;
  # DEBUG __offset => __offset_610
  # DEBUG __size => 8
  _470 = (unsigned long) __offset_610;
  if (_470 <= 63)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 41>:
  # DEBUG __size => 8
  iftmp.121_615 = __offset_610 >> 6;
  goto <bb 43>;

  <bb 42>:
  _617 = ~_470;
  # DEBUG __size => 8
  _618 = _617 >> 6;
  _619 = (long int) _618;
  iftmp.121_620 = ~_619;

  <bb 43>:
  # iftmp.121_622 = PHI <iftmp.121_615(41), iftmp.121_620(42)>
  # DEBUG __node_offset => iftmp.121_622
  __node_offset.123_623 = (long unsigned int) iftmp.121_622;
  _624 = __node_offset.123_623 * 8;
  SR.4363_625 = SR.4363_598 + _624;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.4363_625
  # DEBUG __tmp$_M_node => SR.4363_625
  SR.4361_626 = *SR.4363_625;
  # DEBUG __tmp$_M_first => SR.4361_626
  # DEBUG __size => 8
  SR.4362_627 = SR.4361_626 + 512;
  # DEBUG __tmp$_M_last => SR.4362_627
  # DEBUG __size => 8
  _628 = iftmp.121_622 * 64;
  _629 = __offset_610 - _628;
  _630 = (long unsigned int) _629;
  _631 = _630 * 8;
  SR.4360_632 = SR.4361_626 + _631;
  # DEBUG __tmp$_M_cur => SR.4360_632
  pretmp_359 = (long int) SR.4361_626;

  <bb 44>:
  # SR.4360_1097 = PHI <SR.4360_614(84), SR.4360_632(43)>
  # SR.4361_1096 = PHI <SR.4361_596(84), SR.4361_626(43)>
  # SR.4362_1093 = PHI <SR.4362_597(84), SR.4362_627(43)>
  # SR.4363_1091 = PHI <SR.4363_598(84), SR.4363_625(43)>
  # prephitmp_360 = PHI <_607(84), pretmp_359(43)>
  # DEBUG __tmp$_M_node => SR.4363_1091
  # DEBUG __tmp$_M_last => SR.4362_1093
  # DEBUG __tmp$_M_first => SR.4361_1096
  # DEBUG __tmp$_M_cur => SR.4360_1097
  # DEBUG this => &__finish_n
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  # DEBUG D#2160 => &this_4(D)->D.54933
  # DEBUG this => D#2160
  # DEBUG D#2161 => &this_4(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.76831
  # DEBUG __x => D#2161
  D.76831._M_cur = _71;
  D.76831._M_first = SR.4361_596;
  D.76831._M_last = SR.4362_597;
  D.76831._M_node = SR.4363_598;
  # DEBUG D#2162 => &this_4(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.76830
  # DEBUG __x => D#2162
  D.76830._M_cur = _71;
  D.76830._M_first = SR.4361_596;
  D.76830._M_last = SR.4362_597;
  D.76830._M_node = SR.4363_598;
  # DEBUG this => &D.76829
  # DEBUG __x => &__finish_n
  D.76829._M_cur = SR.4360_1097;
  D.76829._M_first = SR.4361_1096;
  D.76829._M_last = SR.4362_1093;
  D.76829._M_node = SR.4363_1091;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.485 (&D.76829, &D.76830, &D.76831);
  D.76829 ={v} {CLOBBER};
  D.76830 ={v} {CLOBBER};
  D.76831 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_1129;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_1128;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_1123;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_1122;
  # DEBUG this => &D.76843
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.76842
  # DEBUG __x => &__finish_n
  # DEBUG this => &D.76841
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.76841
  # DEBUG __last => &D.76842
  # DEBUG __result => &D.76843
  # DEBUG this => &D.126681
  # DEBUG __x => &D.76843
  # DEBUG this => &D.126680
  # DEBUG __x => &D.76842
  # DEBUG this => &D.126679
  # DEBUG __x => &D.76841
  # DEBUG __last$_M_cur => SR.4360_1097
  # DEBUG __last$_M_first => SR.4361_1096
  # DEBUG __last$_M_last => SR.4362_1093
  # DEBUG __last$_M_node => SR.4363_1091
  # DEBUG __result => &D.126681
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _634 = (long int) SR.4363_1091;
  _636 = (long int) _162;
  _637 = _634 - _636;
  _638 = _637 /[ex] 8;
  _639 = _638 + -1;
  _640 = _639 * 64;
  _642 = (long int) SR.4360_1097;
  _645 = _642 - prephitmp_360;
  _646 = _645 /[ex] 8;
  _647 = _640 + _646;
  _649 = (long int) _161;
  _651 = (long int) _75;
  _652 = _649 - _651;
  _653 = _652 /[ex] 8;
  __len_654 = _647 + _653;
  # DEBUG __len => __len_654
  if (__len_654 <= 0)
    goto <bb 63>;
  else
    goto <bb 45>;

  <bb 45>:

  <bb 46>:
  # __len.141_498 = PHI <__len_654(45), __len_687(61)>
  # __rend_1121 = PHI <prephitmp_144(45), SR.4364_1120(61)>
  # SR.4365_1115 = PHI <prephitmp_967(45), SR.4365_1114(61)>
  # SR.4366_1110 = PHI <prephitmp_1106(45), SR.4366_1099(61)>
  # SR.4360_1090 = PHI <SR.4360_1097(45), SR.4360_1081(61)>
  # SR.4361_1075 = PHI <SR.4361_1096(45), SR.4361_1074(61)>
  # SR.4363_1073 = PHI <SR.4363_1091(45), SR.4363_1072(61)>
  # DEBUG __last$_M_node => SR.4363_1073
  # DEBUG __last$_M_first => SR.4361_1075
  # DEBUG __last$_M_cur => SR.4360_1090
  _657 = (long int) SR.4360_1090;
  _659 = (long int) SR.4361_1075;
  _660 = _657 - _659;
  __llen_661 = _660 /[ex] 8;
  # DEBUG __llen => __llen_661
  # DEBUG __lend => SR.4360_1090
  _663 = (long int) __rend_1121;
  _665 = (long int) SR.4365_1115;
  _666 = _663 - _665;
  __rlen_667 = _666 /[ex] 8;
  # DEBUG __rlen => __rlen_667
  # DEBUG __rend => __rend_1121
  if (__llen_661 == 0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG __size => 8
  # DEBUG __llen => 64
  _669 = MEM[(struct Flit * * *)SR.4363_1073 + -8B];
  SR.4360_670 = _669 + 512;
  # DEBUG __lend => SR.4360_670
  pretmp_658 = (long int) SR.4360_670;

  <bb 48>:
  # SR.4360_683 = PHI <SR.4360_1090(46), SR.4360_670(47)>
  # __llen_1108 = PHI <__llen_661(46), 64(47)>
  # prephitmp_1101 = PHI <_657(46), pretmp_658(47)>
  # DEBUG __llen => __llen_1108
  # DEBUG __lend => SR.4360_683
  if (__rlen_667 == 0)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG __size => 8
  # DEBUG __rlen => 64
  _672 = MEM[(struct Flit * * *)SR.4366_1110 + -8B];
  __rend_673 = _672 + 512;
  # DEBUG __rend => __rend_673

  <bb 50>:
  # __rend_685 = PHI <__rend_1121(48), __rend_673(49)>
  # __rlen_1103 = PHI <__rlen_667(48), 64(49)>
  # DEBUG __rlen => __rlen_1103
  # DEBUG __rend => __rend_685
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _851 = MIN_EXPR <__len.141_498, __llen_1108>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_455 = MIN_EXPR <_851, __rlen_1103>;
  # DEBUG __clen => D#2813
  __clen.150_680 = (long unsigned int) __clen_455;
  _681 = __clen.150_680 * 8;
  _682 = -_681;
  _684 = SR.4360_683 + _682;
  # DEBUG __first => _684
  # DEBUG __last => SR.4360_683
  # DEBUG __result => __rend_685
  # DEBUG __it => SR.4360_683
  # DEBUG __it => SR.4360_683
  # DEBUG __it => _684
  # DEBUG __it => _684
  # DEBUG __first => _684
  # DEBUG __last => SR.4360_683
  # DEBUG __result => __rend_685
  # DEBUG __it => __rend_685
  # DEBUG __it => __rend_685
  # DEBUG __it => SR.4360_683
  # DEBUG __it => SR.4360_683
  # DEBUG __it => _684
  # DEBUG __it => _684
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.217_751 = (long int) _684;
  _752 = prephitmp_1101 - __first.217_751;
  _Num_753 = _752 /[ex] 8;
  # DEBUG _Num => _Num_753
  if (_Num_753 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  _754 = (long unsigned int) _752;
  _755 = -_754;
  _756 = __rend_685 + _755;
  __builtin_memmove (_756, _684, _754);

  <bb 52>:
  # DEBUG this => &__last
  # DEBUG __n => D#2813
  _686 = -__clen_455;
  # DEBUG this => &__last
  # DEBUG __n => _686
  __offset_727 = __llen_661 - __clen_455;
  # DEBUG __offset => __offset_727
  # DEBUG __size => 8
  _463 = (unsigned long) __offset_727;
  if (_463 <= 63)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 53>:
  # DEBUG __size => 8
  iftmp.108_732 = __offset_727 >> 6;
  goto <bb 55>;

  <bb 54>:
  _734 = ~_463;
  # DEBUG __size => 8
  _735 = _734 >> 6;
  _736 = (long int) _735;
  iftmp.108_737 = ~_736;

  <bb 55>:
  # iftmp.108_739 = PHI <iftmp.108_732(53), iftmp.108_737(54)>
  # DEBUG __node_offset => iftmp.108_739
  __node_offset.110_740 = (long unsigned int) iftmp.108_739;
  _741 = __node_offset.110_740 * 8;
  SR.4363_742 = SR.4363_1073 + _741;
  # DEBUG this => &__last
  # DEBUG __new_node => SR.4363_742
  # DEBUG __last$_M_node => SR.4363_742
  SR.4361_743 = *SR.4363_742;
  # DEBUG __last$_M_first => SR.4361_743
  # DEBUG __size => 8
  # DEBUG __size => 8
  _745 = iftmp.108_739 * 64;
  _746 = __offset_727 - _745;
  _747 = (long unsigned int) _746;
  _748 = _747 * 8;
  SR.4360_749 = SR.4361_743 + _748;
  # DEBUG __last$_M_cur => SR.4360_749

  <bb 56>:
  # SR.4360_1081 = PHI <SR.4360_731(86), SR.4360_749(55)>
  # SR.4361_1074 = PHI <SR.4361_1075(86), SR.4361_743(55)>
  # SR.4363_1072 = PHI <SR.4363_1073(86), SR.4363_742(55)>
  # DEBUG __last$_M_node => SR.4363_1072
  # DEBUG __last$_M_first => SR.4361_1074
  # DEBUG __last$_M_cur => SR.4360_1081
  # DEBUG this => &D.126681
  # DEBUG __n => D#2813
  # DEBUG this => &D.126681
  # DEBUG __n => _686
  __offset_698 = __rlen_667 - __clen_455;
  # DEBUG __offset => __offset_698
  # DEBUG __size => 8
  _468 = (unsigned long) __offset_698;
  if (_468 <= 63)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 57>:
  # DEBUG __size => 8
  iftmp.121_703 = __offset_698 >> 6;
  goto <bb 59>;

  <bb 58>:
  _705 = ~_468;
  # DEBUG __size => 8
  _706 = _705 >> 6;
  _707 = (long int) _706;
  iftmp.121_708 = ~_707;

  <bb 59>:
  # iftmp.121_710 = PHI <iftmp.121_703(57), iftmp.121_708(58)>
  # DEBUG __node_offset => iftmp.121_710
  __node_offset.123_711 = (long unsigned int) iftmp.121_710;
  _712 = __node_offset.123_711 * 8;
  _713 = SR.4366_1110 + _712;
  # DEBUG this => &D.126681
  # DEBUG __new_node => _713
  _714 = *_713;
  # DEBUG __size => 8
  # DEBUG __size => 8
  _716 = iftmp.121_710 * 64;
  _717 = __offset_698 - _716;
  _718 = (long unsigned int) _717;
  _719 = _718 * 8;
  _720 = _714 + _719;

  <bb 60>:
  # SR.4364_1120 = PHI <_702(88), _720(59)>
  # SR.4365_1114 = PHI <SR.4365_1115(88), _714(59)>
  # SR.4366_1099 = PHI <SR.4366_1110(88), _713(59)>
  __len_687 = __len.141_498 - __clen_455;
  # DEBUG __len => __len_687
  # DEBUG D#2822 => {CLOBBER}
  # DEBUG __llen => D#2822
  # DEBUG D#2823 => {CLOBBER}
  # DEBUG __rlen => D#2823
  if (__len_687 <= 0)
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:
  goto <bb 46>;

  <bb 62>:
  pretmp_361 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_840 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_1107 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 63>:
  # prephitmp_362 = PHI <pretmp_361(62), _75(44)>
  # prephitmp_691 = PHI <pretmp_840(62), _161(44)>
  # prephitmp_1005 = PHI <pretmp_1107(62), _162(44)>
  # DEBUG this => &D.126678
  # DEBUG __x => &D.126681
  # DEBUG D#2824 => {CLOBBER}
  # DEBUG __len => D#2824
  D.126679 ={v} {CLOBBER};
  D.126681 ={v} {CLOBBER};
  D.76841 ={v} {CLOBBER};
  D.76842 ={v} {CLOBBER};
  D.76843 ={v} {CLOBBER};
  # DEBUG this => &D.76847
  # DEBUG __x => __pos_6(D)
  D.76847._M_cur = prephitmp_362;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.76847._M_first = _157;
  D.76847._M_last = prephitmp_691;
  D.76847._M_node = prephitmp_1005;
  std::copy<Flit*> (__first, __last, &D.76847);
  D.76847 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 28>;

  <bb 64>:
  __mid = __first;
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#2058 => &__mid
  # DEBUG D.114492 => D#2058
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>::operator+= (&__mid, __elemsafter_55);
  # DEBUG D#2163 => &this_4(D)->D.54933
  # DEBUG this => D#2163
  # DEBUG D#2821 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#2164 => &this_4(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.76862
  # DEBUG __x => D#2164
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#2165 => &this_4(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.76861
  # DEBUG __x => D#2165
  # DEBUG this => &D.76860
  # DEBUG __x => __pos_6(D)
  _88 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _176 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _177 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _178 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  __first$_M_cur_198 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first1$_M_cur => __first$_M_cur_198
  # DEBUG D#2836 => MEM[(struct _Deque_iterator *)&__mid + 8B]
  # DEBUG __first1$_M_first => D#2836
  __first$_M_last_200 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first1$_M_last => __first$_M_last_200
  __first$_M_node_201 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first1$_M_node => __first$_M_node_201
  __last_202 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last_202
  __last$8_203 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last$8_203
  # DEBUG D#2835 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last1$_M_last => D#2835
  __last$24_205 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last$24_205
  # DEBUG __first2 => &D.76860
  # DEBUG __last2 => &D.76861
  # DEBUG __result => &D.76862
  # DEBUG __alloc => D#2821
  # DEBUG this => NULL
  # DEBUG __x => &D.76862
  # DEBUG D#1534 => D#2821
  # DEBUG __first$_M_cur => __first$_M_cur_198
  # DEBUG __first$_M_first => D#2836
  # DEBUG __first$_M_last => __first$_M_last_200
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __last$_M_cur => __last_202
  # DEBUG __last$_M_first => __last$8_203
  # DEBUG __last$_M_last => D#2835
  # DEBUG __last$_M_node => __last$24_205
  # DEBUG __result => NULL
  # DEBUG D.126762 => D#1534
  # DEBUG this => &D.126775
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_198
  # DEBUG __first$_M_first => D#2836
  # DEBUG __first$_M_last => __first$_M_last_200
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __last$_M_cur => __last_202
  # DEBUG __last$_M_first => __last$8_203
  # DEBUG __last$_M_last => D#2835
  # DEBUG __last$_M_node => __last$24_205
  # DEBUG __result => &D.126775
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.126775
  # DEBUG __first$_M_cur => __first$_M_cur_198
  # DEBUG __first$_M_first => D#2836
  # DEBUG __first$_M_last => __first$_M_last_200
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __last$_M_cur => __last_202
  # DEBUG __last$_M_first => __last$8_203
  # DEBUG __last$_M_last => D#2835
  # DEBUG __last$_M_node => __last$24_205
  # DEBUG __result => NULL
  # DEBUG this => &D.126792
  # DEBUG __x => NULL
  # DEBUG __first => __first$_M_cur_198
  # DEBUG __first$8 => D#2836
  # DEBUG __first$16 => __first$_M_last_200
  # DEBUG __first$24 => __first$_M_node_201
  # DEBUG __last => __last_202
  # DEBUG __last$8 => __last$8_203
  # DEBUG __last$_M_last => D#2835
  # DEBUG __last$24 => __last$24_205
  # DEBUG __result => &D.126792
  # DEBUG this => &D.126812
  # DEBUG __x => &D.126792
  # DEBUG __it => __last_202
  # DEBUG __it$8 => __last$8_203
  # DEBUG D#2820 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#2820
  # DEBUG __it$24 => __last$24_205
  # DEBUG __it$_M_cur => __last_202
  # DEBUG __it$_M_first => __last$8_203
  # DEBUG __it$_M_last => D#2820
  # DEBUG __it$_M_node => __last$24_205
  # DEBUG __it => __first$_M_cur_198
  # DEBUG __it$8 => D#2836
  # DEBUG __it$16 => __first$_M_last_200
  # DEBUG __it$24 => __first$_M_node_201
  # DEBUG __it$_M_cur => __first$_M_cur_198
  # DEBUG __it$_M_first => D#2836
  # DEBUG __it$_M_last => __first$_M_last_200
  # DEBUG __it$_M_node => __first$_M_node_201
  # DEBUG __result => &D.126812
  # DEBUG this => NULL
  # DEBUG __x => &D.126812
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_202
  # DEBUG __it$8 => __last$8_203
  # DEBUG __it$16 => D#2820
  # DEBUG __it$24 => __last$24_205
  # DEBUG __it$_M_cur => __last_202
  # DEBUG __it$_M_first => __last$8_203
  # DEBUG __it$_M_last => D#2820
  # DEBUG __it$_M_node => __last$24_205
  # DEBUG __it => __first$_M_cur_198
  # DEBUG __it$8 => D#2836
  # DEBUG __it$16 => __first$_M_last_200
  # DEBUG __it$24 => __first$_M_node_201
  # DEBUG __it$_M_cur => __first$_M_cur_198
  # DEBUG __it$_M_first => D#2836
  # DEBUG __it$_M_last => __first$_M_last_200
  # DEBUG __it$_M_node => __first$_M_node_201
  # DEBUG __first => __first$_M_cur_198
  # DEBUG __first$8 => D#2836
  # DEBUG __first$16 => __first$_M_last_200
  # DEBUG __first$24 => __first$_M_node_201
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.126837
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_198
  # DEBUG __first$_M_first => D#2836
  # DEBUG __first$_M_last => __first$_M_last_200
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __result => &D.126837
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _804 = (long int) __last$24_205;
  _806 = (long int) __first$_M_node_201;
  _807 = _804 - _806;
  _808 = _807 /[ex] 8;
  _809 = _808 + -1;
  _810 = _809 * 64;
  _812 = (long int) __last_202;
  _814 = (long int) __last$8_203;
  _815 = _812 - _814;
  _816 = _815 /[ex] 8;
  _817 = _810 + _816;
  _819 = (long int) __first$_M_last_200;
  _821 = (long int) __first$_M_cur_198;
  _822 = _819 - _821;
  _823 = _822 /[ex] 8;
  __n_824 = _817 + _823;
  # DEBUG __n => __n_824
  # DEBUG __n => __n_824
  if (__n_824 <= 0)
    goto <bb 73>;
  else
    goto <bb 65>;

  <bb 65>:

  <bb 66>:
  # __n_678 = PHI <__n_824(65), __n_835(72)>
  # SR.4417_1071 = PHI <_82(65), SR.4417_1069(72)>
  # SR.4418_68 = PHI <_179(65), SR.4418_1061(72)>
  # SR.4419_1059 = PHI <_180(65), SR.4419_1058(72)>
  # SR.4420_1055 = PHI <_181(65), SR.4420_1054(72)>
  # __first$_M_cur_58 = PHI <__first$_M_cur_198(65), __first$_M_cur_1051(72)>
  # __first$_M_last_1050 = PHI <__first$_M_last_200(65), __first$_M_last_1049(72)>
  # __first$_M_node_1048 = PHI <__first$_M_node_201(65), __first$_M_node_1046(72)>
  # DEBUG __first$_M_node => __first$_M_node_1048
  # DEBUG __first$_M_last => __first$_M_last_1050
  # DEBUG __first$_M_cur => __first$_M_cur_58
  # DEBUG __n => __n_678
  # DEBUG D#308 => &D.126837
  # DEBUG this => D#308
  # DEBUG D#98 => &__first
  # DEBUG this => D#98
  _828 = MEM[(struct Flit * const &)__first$_M_cur_58];
  *SR.4417_1071 = _828;
  # DEBUG this => &__first
  __first$_M_cur_830 = __first$_M_cur_58 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_830
  if (__first$_M_cur_830 == __first$_M_last_1050)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG this => &__first
  __first$_M_node_841 = __first$_M_node_1048 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_841
  # DEBUG __first$_M_node => __first$_M_node_841
  __first$_M_cur_842 = MEM[(struct Flit * * *)__first$_M_node_1048 + 8B];
  # DEBUG __size => 8
  __first$_M_last_843 = __first$_M_cur_842 + 512;
  # DEBUG __first$_M_last => __first$_M_last_843
  # DEBUG __first$_M_cur => __first$_M_cur_842

  <bb 68>:
  # __first$_M_cur_1051 = PHI <__first$_M_cur_830(66), __first$_M_cur_842(67)>
  # __first$_M_last_1049 = PHI <__first$_M_last_1050(66), __first$_M_last_843(67)>
  # __first$_M_node_1046 = PHI <__first$_M_node_1048(66), __first$_M_node_841(67)>
  # DEBUG __first$_M_node => __first$_M_node_1046
  # DEBUG __first$_M_last => __first$_M_last_1049
  # DEBUG __first$_M_cur => __first$_M_cur_1051
  # DEBUG this => &D.126837
  _833 = SR.4417_1071 + 8;
  if (_833 == SR.4419_1059)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG this => &D.126837
  _845 = SR.4420_1055 + 8;
  # DEBUG this => &D.126837
  # DEBUG __new_node => _845
  _846 = MEM[(struct Flit * * *)SR.4420_1055 + 8B];
  # DEBUG __size => 8
  _847 = _846 + 512;

  <bb 70>:
  # SR.4417_1069 = PHI <_833(68), _846(69)>
  # SR.4418_1061 = PHI <SR.4418_68(68), _846(69)>
  # SR.4419_1058 = PHI <SR.4419_1059(68), _847(69)>
  # SR.4420_1054 = PHI <SR.4420_1055(68), _845(69)>
  __n_835 = __n_678 + -1;
  # DEBUG __n => __n_835
  # DEBUG __n => __n_835
  if (__n_835 <= 0)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # SR.4420_1116 = PHI <SR.4420_1054(70)>
  # SR.4419_1113 = PHI <SR.4419_1058(70)>
  # SR.4418_1112 = PHI <SR.4418_1061(70)>
  # SR.4417_1105 = PHI <SR.4417_1069(70)>
  goto <bb 73>;

  <bb 72>:
  goto <bb 66>;

  <bb 73>:
  # SR.4417_1068 = PHI <SR.4417_1105(71), _82(64)>
  # SR.4418_1060 = PHI <SR.4418_1112(71), _179(64)>
  # SR.4419_1056 = PHI <SR.4419_1113(71), _180(64)>
  # SR.4420_59 = PHI <SR.4420_1116(71), _181(64)>
  # DEBUG this => &__mid
  # DEBUG __x => &D.126837
  D.126837 ={v} {CLOBBER};
  D.126812 ={v} {CLOBBER};
  D.126792 ={v} {CLOBBER};
  D.126775 ={v} {CLOBBER};
  # DEBUG this => &D.126778
  # DEBUG __x => &__mid
  D.126778._M_cur = SR.4417_1068;
  D.126778._M_first = SR.4418_1060;
  D.126778._M_last = SR.4419_1056;
  D.126778._M_node = SR.4420_59;
  # DEBUG this => &D.126777
  # DEBUG __x => &D.76861
  D.126777._M_cur = _82;
  D.126777._M_first = _179;
  D.126777._M_last = _180;
  D.126777._M_node = _181;
  # DEBUG this => &D.126776
  # DEBUG __x => &D.76860
  D.126776._M_cur = _88;
  D.126776._M_first = _176;
  D.126776._M_last = _177;
  D.126776._M_node = _178;
  # DEBUG D#2152 => D#2821
  D.126774 = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.485 (&D.126776, &D.126777, &D.126778); [return slot optimization]
  D.126776 ={v} {CLOBBER};
  D.126777 ={v} {CLOBBER};
  D.126778 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.76860 ={v} {CLOBBER};
  D.76861 ={v} {CLOBBER};
  D.76862 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_1129;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_1128;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_1123;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_1122;
  # DEBUG this => &D.76866
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.76866._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.76866._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.76866._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.76866._M_node = _175;
  std::copy<Flit*> (__first, __mid, &D.76866);
  D.76866 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 28>;

  <bb 74>:
  __n.120_303 = (long unsigned int) _289;
  _304 = __n.120_303 * 8;
  __new_start$_M_cur_305 = prephitmp_694 + _304;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_305
  goto <bb 9>;

  <bb 75>:
  if (__offset_301 > 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 76>:
  _333 = __elemsbefore.137_10 * 8;
  SR.4279_334 = prephitmp_694 + _333;
  # DEBUG __tmp$_M_cur => SR.4279_334
  goto <bb 13>;

  <bb 77>:
  if (__offset_330 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 78>:
  __n.120_389 = (long unsigned int) _289;
  _390 = __n.120_389 * 8;
  __tmp$_M_cur_391 = _353 + _390;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_391
  goto <bb 18>;

  <bb 79>:
  if (__offset_387 > 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 80>:
  _535 = __n_11(D) * 8;
  __new_finish$_M_cur_536 = prephitmp_144 + _535;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_536
  goto <bb 35>;

  <bb 81>:
  if (__offset_532 > 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 82>:
  _502 = -__elemsafter_55;
  __n.120_563 = (long unsigned int) _502;
  _564 = __n.120_563 * 8;
  SR.4287_565 = prephitmp_144 + _564;
  # DEBUG __tmp$_M_cur => SR.4287_565
  goto <bb 39>;

  <bb 83>:
  if (__offset_561 > 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 84>:
  _599 = -__n.135_516;
  __n.120_612 = (long unsigned int) _599;
  _613 = __n.120_612 * 8;
  SR.4360_614 = _71 + _613;
  # DEBUG __tmp$_M_cur => SR.4360_614
  goto <bb 44>;

  <bb 85>:
  if (__offset_610 > 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 86>:
  __n.107_729 = (long unsigned int) _686;
  _730 = __n.107_729 * 8;
  SR.4360_731 = SR.4360_1090 + _730;
  # DEBUG __last$_M_cur => SR.4360_731
  goto <bb 56>;

  <bb 87>:
  if (__offset_727 > 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 88>:
  __n.120_700 = (long unsigned int) _686;
  _701 = __n.120_700 * 8;
  _702 = __rend_1121 + _701;
  goto <bb 60>;

  <bb 89>:
  if (__offset_698 > 0)
    goto <bb 57>;
  else
    goto <bb 58>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt5dequeIP4FlitSaIS1_EEaSERKS3_, funcdef_no=4097, decl_uid=54512, cgraph_uid=2542, symbol_order=2543)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct deque * const this, const struct deque & __x)
{
  struct Flit * * * __new_finish$_M_node;
  struct Flit * * __new_finish$_M_last;
  struct Flit * * __new_finish$_M_first;
  struct Flit * * __new_finish$_M_cur;
  struct Flit * * * __new_start$_M_node;
  struct Flit * * __new_start$_M_last;
  struct Flit * * __new_start$_M_first;
  struct Flit * * __new_start$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __tmp$_M_node;
  struct Flit * * __tmp$_M_last;
  struct Flit * * __tmp$_M_first;
  struct Flit * * __tmp$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.4485;
  struct Flit * * SR.4484;
  struct Flit * * SR.4483;
  struct Flit * * SR.4482;
  struct Flit * * * SR.4481;
  struct Flit * * SR.4480;
  struct Flit * * SR.4479;
  struct Flit * * SR.4478;
  struct Flit * * * __mid$_M_node;
  struct Flit * * __mid$_M_last;
  struct Flit * * __mid$_M_first;
  struct Flit * * __mid$_M_cur;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.127179;
  struct _Deque_iterator D.127178;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.127159;
  struct _Deque_iterator D.127158;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127151;
  struct _Deque_iterator D.127150;
  struct iterator D.127149;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.127137;
  const difference_type __offset;
  struct _Self & D.127132;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.127122;
  struct iterator D.127121;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Flit * * * __nstart;
  struct const_iterator __mid;
  struct iterator D.75405;
  struct _Deque_iterator D.80426;
  struct _Deque_iterator D.80425;
  struct _Deque_iterator D.75397;
  struct const_iterator D.75393;
  struct _Deque_iterator D.80422;
  struct _Deque_iterator D.80421;
  struct _Deque_iterator D.75390;
  struct _Deque_iterator D.75391;
  long int _5;
  struct Flit * * * _6;
  struct Flit * * _13;
  struct Flit * * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  struct Flit * * _28;
  long int _29;
  struct Flit * * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  struct Flit * * * _43;
  long int _44;
  struct Flit * * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  struct Flit * * _51;
  long int _52;
  struct Flit * * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  struct Flit * * _58;
  long int _59;
  struct Flit * * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  struct Flit * * _66;
  struct Flit * * _67;
  struct Flit * * _68;
  struct Flit * * _70;
  long int pretmp_71;
  struct Flit * * _72;
  struct Flit * * _73;
  struct Flit * * * _74;
  struct Flit * * _78;
  long int prephitmp_101;
  struct Flit * * * _114;
  struct Flit * * * _115;
  struct Flit * * * _116;
  struct Flit * * _119;
  long int _126;
  long int _127;
  long int _128;
  long unsigned int _132;
  long int iftmp.108_134;
  long unsigned int _136;
  long unsigned int _137;
  long int _138;
  long int iftmp.108_139;
  long int iftmp.108_141;
  long unsigned int __node_offset.110_142;
  long unsigned int _143;
  long int _147;
  long int _148;
  long unsigned int _149;
  long unsigned int _150;
  long int _158;
  long int _160;
  long int _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  long int _167;
  long int _168;
  long int _170;
  long int _171;
  long int _172;
  difference_type _173;
  struct Flit * * _176;
  struct Flit * * _182;
  struct Flit * * _183;
  struct Flit * * _184;
  struct Flit * * * _185;
  long int _194;
  struct Flit * * _195;
  long int _196;
  long int _197;
  long int _198;
  long unsigned int _200;
  struct Flit * * _205;
  struct Flit * * * _206;
  long int _207;
  struct _Self & _208;
  long int _218;
  long int _220;
  long int _221;
  long int _222;
  long int _223;
  long unsigned int _225;
  struct Flit * * _229;
  struct Flit * * * _231;
  struct _Self & _232;
  long int pretmp_255;
  long int prephitmp_256;
  struct Flit * * const pretmp_257;
  struct Flit * * const prephitmp_258;
  struct Flit * * const pretmp_261;
  struct Flit * * const prephitmp_273;
  struct Flit * * const pretmp_274;
  struct Flit * * const prephitmp_275;
  struct Flit * * const pretmp_276;
  unsigned long _293;
  struct Flit * * const prephitmp_305;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 21>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#201 => &MEM[(const struct deque *)this_3(D)].D.54933._M_impl._M_start
  # DEBUG D#202 => &MEM[(const struct deque *)this_3(D)].D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 64;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 8;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 8;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#201 => &__x_2(D)->D.54933._M_impl._M_start
  # DEBUG D#202 => &__x_2(D)->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.4481_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.4481_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 64;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 8;
  _34 = _27 + _33;
  SR.4480_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.4480_35;
  SR.4478_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.4478_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#2172 => &this_3(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.75390
  # DEBUG __x => D#2172
  D.75390._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.75390._M_first = _68;
  D.75390._M_last = _58;
  D.75390._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#179 => &__x_2(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.80421
  # DEBUG __x => D#179
  D.80421._M_cur = _28;
  D.80421._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.80421._M_last = _67;
  D.80421._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#180 => &__x_2(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.80422
  # DEBUG __x => D#180
  D.80422._M_cur = SR.4478_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.80422._M_first = _66;
  D.80422._M_last = SR.4480_35;
  D.80422._M_node = SR.4481_22;
  D.75391 = std::copy<Flit*> (D.80422, D.80421, &D.75390); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.75391
  # DEBUG D#1287 => &this_3(D)->D.54933
  # DEBUG this => D#1287
  # DEBUG this => this_3(D)
  # DEBUG D#125 => &this_3(D)->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1294 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.101899 => D#1294
  # DEBUG D#1293 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.101900 => D#1293
  # DEBUG D#1292 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.101901 => D#1292
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.101902 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.75391
  # DEBUG D#1291 => MEM[(const struct iterator &)&D.75391]._M_cur
  # DEBUG D.101903 => D#1291
  # DEBUG D#1290 => MEM[(const struct iterator &)&D.75391]._M_first
  # DEBUG D.101904 => D#1290
  # DEBUG D#1289 => MEM[(const struct iterator &)&D.75391]._M_last
  # DEBUG D.101905 => D#1289
  _115 = MEM[(const struct iterator &)&D.75391]._M_node;
  # DEBUG D.101906 => _115
  # DEBUG D#127 => this_3(D)
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.101888 => D#130
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#1288 => &this_3(D)->D.54933
  # DEBUG this => D#1288
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.54933._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.75391];
  D.75391 ={v} {CLOBBER};
  D.75390 ={v} {CLOBBER};
  goto <bb 21>;

  <bb 6>:

  <bb 7>:
  # __nstart_69 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_69
  _119 = *__nstart_69;
  # DEBUG D#981 => D#1288
  # DEBUG __p => _119
  # DEBUG this => D#981
  # DEBUG D#980 => D#981
  # DEBUG __size => 8
  # DEBUG D#979 => &D#980->_M_impl
  # DEBUG D#977 => D#979
  # DEBUG __p => _119
  # DEBUG __a => D#977
  # DEBUG __n => D#978
  # DEBUG D#976 => D#978
  # DEBUG D#975 => D#977
  # DEBUG D#973 => D#975
  # DEBUG D#974 => D#976
  # DEBUG __p => _119
  # DEBUG this => D#973
  # DEBUG D.127105 => D#974
  operator delete (_119);
  __nstart_120 = __nstart_69 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#180 => &__x_2(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.75393
  # DEBUG __x => D#180
  SR.4479_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.75393
  # DEBUG __n => _64
  # DEBUG __tmp$_M_cur => SR.4478_37
  # DEBUG __tmp$_M_first => SR.4479_81
  # DEBUG __tmp$_M_last => SR.4480_35
  # DEBUG __tmp$_M_node => SR.4481_22
  # DEBUG this => &__tmp
  # DEBUG __n => _64
  _126 = (long int) SR.4479_81;
  _127 = _38 - _126;
  _128 = _127 /[ex] 8;
  __offset_129 = _64 + _128;
  # DEBUG __offset => __offset_129
  # DEBUG __size => 8
  _293 = (unsigned long) __offset_129;
  if (_293 <= 63)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 10>:
  # DEBUG __size => 8
  iftmp.108_134 = __offset_129 >> 6;
  goto <bb 12>;

  <bb 11>:
  _136 = ~_293;
  # DEBUG __size => 8
  _137 = _136 >> 6;
  _138 = (long int) _137;
  iftmp.108_139 = ~_138;

  <bb 12>:
  # iftmp.108_141 = PHI <iftmp.108_134(10), iftmp.108_139(11)>
  # DEBUG __node_offset => iftmp.108_141
  __node_offset.110_142 = (long unsigned int) iftmp.108_141;
  _143 = __node_offset.110_142 * 8;
  __tmp$_M_node_144 = SR.4481_22 + _143;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_144
  # DEBUG __tmp$_M_node => __tmp$_M_node_144
  __tmp$_M_first_145 = *__tmp$_M_node_144;
  # DEBUG __tmp$_M_first => __tmp$_M_first_145
  # DEBUG __size => 8
  __tmp$_M_last_146 = __tmp$_M_first_145 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_146
  # DEBUG __size => 8
  _147 = iftmp.108_141 * 64;
  _148 = __offset_129 - _147;
  _149 = (long unsigned int) _148;
  _150 = _149 * 8;
  __tmp$_M_cur_151 = __tmp$_M_first_145 + _150;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_151
  pretmp_71 = (long int) __tmp$_M_node_144;
  pretmp_255 = (long int) __tmp$_M_last_146;

  <bb 13>:
  # __tmp$_M_cur_243 = PHI <__tmp$_M_cur_133(22), __tmp$_M_cur_151(12)>
  # __tmp$_M_first_16 = PHI <SR.4479_81(22), __tmp$_M_first_145(12)>
  # __tmp$_M_last_287 = PHI <SR.4480_35(22), __tmp$_M_last_146(12)>
  # __tmp$_M_node_286 = PHI <SR.4481_22(22), __tmp$_M_node_144(12)>
  # prephitmp_101 = PHI <_23(22), pretmp_71(12)>
  # prephitmp_256 = PHI <_36(22), pretmp_255(12)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_286
  # DEBUG __tmp$_M_last => __tmp$_M_last_287
  # DEBUG __tmp$_M_first => __tmp$_M_first_16
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_243
  # DEBUG __mid$_M_cur => __tmp$_M_cur_243
  # DEBUG __mid$_M_first => __tmp$_M_first_16
  # DEBUG __mid$_M_last => __tmp$_M_last_287
  # DEBUG __mid$_M_node => __tmp$_M_node_286
  # DEBUG D#2849 => {CLOBBER}
  # DEBUG __tmp$_M_cur => D#2849
  # DEBUG D#2850 => {CLOBBER}
  # DEBUG __tmp$_M_first => D#2850
  # DEBUG D#2851 => {CLOBBER}
  # DEBUG __tmp$_M_last => D#2851
  # DEBUG D#2852 => {CLOBBER}
  # DEBUG __tmp$_M_node => D#2852
  # DEBUG D#2170 => &this_3(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.75397
  # DEBUG __x => D#2170
  D.75397._M_cur = _60;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.75397._M_first = _78;
  D.75397._M_last = _58;
  D.75397._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#180 => &__x_2(D)->D.54933._M_impl._M_start
  # DEBUG this => &D.80425
  # DEBUG __x => D#180
  D.80425._M_cur = SR.4478_37;
  D.80425._M_first = SR.4479_81;
  D.80425._M_last = SR.4480_35;
  D.80425._M_node = SR.4481_22;
  MEM[(struct _Deque_iterator *)&__mid] = __tmp$_M_cur_243;
  MEM[(struct _Deque_iterator *)&__mid + 8B] = __tmp$_M_first_16;
  MEM[(struct _Deque_iterator *)&__mid + 16B] = __tmp$_M_last_287;
  MEM[(struct _Deque_iterator *)&__mid + 24B] = __tmp$_M_node_286;
  std::copy<Flit*> (D.80425, __mid, &D.75397);
  D.75397 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#179 => &__x_2(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.80426
  # DEBUG __x => D#179
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  _73 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#2171 => &this_3(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.75405
  # DEBUG __x => D#2171
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.75405
  # DEBUG __first$_M_cur => __tmp$_M_cur_243
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_287
  # DEBUG __first$_M_node => __tmp$_M_node_286
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => NULL
  # DEBUG __x => &D.75405
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_243
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_287
  # DEBUG __first$_M_node => __tmp$_M_node_286
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => &D.127121
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.127121
  # DEBUG __first$_M_cur => __tmp$_M_cur_243
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_287
  # DEBUG __first$_M_node => __tmp$_M_node_286
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG D#2062 => __first
  # DEBUG D#2062 => __first
  # DEBUG D#2062 => __first
  # DEBUG D#2063 => __last
  # DEBUG D#2063 => __last
  # DEBUG D#2063 => __last
  # DEBUG D.114289 => D#2058
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 8
  _158 = (long int) _74;
  _160 = _158 - prephitmp_101;
  _161 = _160 /[ex] 8;
  _162 = _161 + -1;
  _163 = _162 * 64;
  _164 = (long int) _13;
  _165 = (long int) _72;
  _166 = _164 - _165;
  _167 = _166 /[ex] 8;
  _168 = _163 + _167;
  _170 = (long int) __tmp$_M_cur_243;
  _171 = prephitmp_256 - _170;
  _172 = _171 /[ex] 8;
  _173 = _168 + _172;
  __n_174 = (const size_type) _173;
  # DEBUG __n => __n_174
  _176 = this_3(D)->D.54933._M_impl._M_start._M_cur;
  if (_17 == _176)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _194 = (long int) _17;
  _195 = this_3(D)->D.54933._M_impl._M_start._M_first;
  _196 = (long int) _195;
  _197 = _194 - _196;
  _198 = _197 /[ex] 8;
  __vacancies_199 = (const size_type) _198;
  # DEBUG __vacancies => __vacancies_199
  if (__n_174 > __vacancies_199)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _200 = __n_174 - __vacancies_199;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_front (this_3(D), _200);
  pretmp_274 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_276 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;

  <bb 16>:
  # prephitmp_275 = PHI <_176(14), pretmp_274(15)>
  # prephitmp_305 = PHI <_195(14), pretmp_276(15)>
  # DEBUG D#2848 => &this_3(D)->D.54933._M_impl._M_start
  # DEBUG this => D#2848
  # DEBUG __n => _173
  # DEBUG this => &__tmp
  # DEBUG __x => D#2848
  __tmp._M_cur = prephitmp_275;
  __tmp._M_first = prephitmp_305;
  _205 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  __tmp._M_last = _205;
  _206 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  __tmp._M_node = _206;
  # DEBUG this => &__tmp
  # DEBUG __n => _173
  _207 = -_173;
  _208 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, _207);
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  __new_start$_M_cur_209 = MEM[(const struct iterator &)_208]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_209
  __new_start$_M_first_210 = MEM[(const struct iterator &)_208]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_210
  __new_start$_M_last_211 = MEM[(const struct iterator &)_208]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_211
  __new_start$_M_node_212 = MEM[(const struct iterator &)_208]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_212
  __tmp ={v} {CLOBBER};
  # DEBUG D#2166 => &this_3(D)->D.54933
  # DEBUG this => D#2166
  # DEBUG this => &D.127151
  # DEBUG __x => &__new_start
  MEM[(struct _Deque_iterator *)&__first] = __tmp$_M_cur_243;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __tmp$_M_first_16;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __tmp$_M_last_287;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __tmp$_M_node_286;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.127151
  # DEBUG D.127155 => D#1534
  # DEBUG this => &D.127159
  # DEBUG __x => &D.127151
  D.127159._M_cur = __new_start$_M_cur_209;
  D.127159._M_first = __new_start$_M_first_210;
  D.127159._M_last = __new_start$_M_last_211;
  D.127159._M_node = __new_start$_M_node_212;
  D.127158 = std::uninitialized_copy<std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>, std::_Deque_iterator<Flit*, Flit*&, Flit**> > (__first, __last, &D.127159); [return slot optimization]
  D.127159 ={v} {CLOBBER};
  D.127151 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_209;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_210;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_211;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_212;
  # DEBUG D#2857 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#2857
  # DEBUG D#2858 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#2858
  # DEBUG D#2859 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#2859
  # DEBUG D#2860 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#2860
  goto <bb 20>;

  <bb 17>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _218 = (long int) _70;
  _220 = (long int) _17;
  _221 = _218 - _220;
  _222 = _221 /[ex] 8;
  _223 = _222 + -1;
  __vacancies_224 = (const size_type) _223;
  # DEBUG __vacancies => __vacancies_224
  if (__n_174 > __vacancies_224)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _225 = __n_174 - __vacancies_224;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_back (this_3(D), _225);
  pretmp_257 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_261 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;

  <bb 19>:
  # prephitmp_258 = PHI <_17(17), pretmp_257(18)>
  # prephitmp_273 = PHI <_70(17), pretmp_261(18)>
  # DEBUG D#2847 => &this_3(D)->D.54933._M_impl._M_finish
  # DEBUG this => D#2847
  # DEBUG __n => _173
  # DEBUG this => &__tmp
  # DEBUG __x => D#2847
  __tmp._M_cur = prephitmp_258;
  _229 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  __tmp._M_first = _229;
  __tmp._M_last = prephitmp_273;
  _231 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  __tmp._M_node = _231;
  _232 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, _173);
  # DEBUG this => &__new_finish
  # DEBUG __x => _232
  __new_finish$_M_cur_233 = MEM[(const struct iterator &)_232]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_233
  __new_finish$_M_first_234 = MEM[(const struct iterator &)_232]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_234
  __new_finish$_M_last_235 = MEM[(const struct iterator &)_232]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_235
  __new_finish$_M_node_236 = MEM[(const struct iterator &)_232]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_236
  __tmp ={v} {CLOBBER};
  # DEBUG D#2167 => &this_3(D)->D.54933
  # DEBUG this => D#2167
  # DEBUG D#2168 => &this_3(D)->D.54933._M_impl._M_finish
  # DEBUG this => &D.127150
  # DEBUG __x => D#2168
  _182 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  _183 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  _184 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  _185 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  MEM[(struct _Deque_iterator *)&__first] = __tmp$_M_cur_243;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __tmp$_M_first_16;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __tmp$_M_last_287;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __tmp$_M_node_286;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.127150
  # DEBUG D.127175 => D#1534
  # DEBUG this => &D.127179
  # DEBUG __x => &D.127150
  D.127179._M_cur = _182;
  D.127179._M_first = _183;
  D.127179._M_last = _184;
  D.127179._M_node = _185;
  D.127178 = std::uninitialized_copy<std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>, std::_Deque_iterator<Flit*, Flit*&, Flit**> > (__first, __last, &D.127179); [return slot optimization]
  D.127179 ={v} {CLOBBER};
  D.127150 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_233;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_234;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_235;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_236;
  # DEBUG D#2853 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#2853
  # DEBUG D#2854 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#2854
  # DEBUG D#2855 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#2855
  # DEBUG D#2856 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#2856

  <bb 20>:
  D.127121 ={v} {CLOBBER};
  D.75405 ={v} {CLOBBER};
  # DEBUG D#2861 => {CLOBBER}
  # DEBUG __mid$_M_cur => D#2861
  # DEBUG D#2862 => {CLOBBER}
  # DEBUG __mid$_M_first => D#2862
  # DEBUG D#2863 => {CLOBBER}
  # DEBUG __mid$_M_last => D#2863
  # DEBUG D#2864 => {CLOBBER}
  # DEBUG __mid$_M_node => D#2864

  <bb 21>:
  return this_3(D);

  <bb 22>:
  _132 = _65 * 8;
  __tmp$_M_cur_133 = SR.4478_37 + _132;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_133
  goto <bb 13>;

  <bb 23>:
  if (__offset_129 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Flit*>*, std::vector<std::queue<Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Flit*>] (_ZNSt6vectorISt5queueIP4FlitSt5dequeIS2_SaIS2_EEESaIS6_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS6_S8_EEmRKS6_, funcdef_no=3220, decl_uid=50099, cgraph_uid=1665, symbol_order=1666)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Flit*>*, std::vector<std::queue<Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Flit*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.4542;
  struct Flit * * SR.4541;
  struct Flit * * SR.4540;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __nstart;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.127396;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127371;
  struct _Deque_iterator D.127370;
  struct _Deque_iterator D.127369;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127351;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127337;
  struct _Deque_iterator D.127336;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127329;
  struct _Deque_iterator D.127328;
  struct _Deque_iterator D.127327;
  const long unsigned int D.127306;
  const size_type __len;
  size_type D.127305;
  size_type __n;
  struct queue * D.127296;
  struct queue * D.127284;
  struct queue * __first;
  long unsigned int __n;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct Flit * * * _17;
  long unsigned int _18;
  struct queue * _20;
  long int __last.101_21;
  struct queue * const _24;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct queue * _32;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _38;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  const struct deque * _52;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _62;
  struct queue * _63;
  struct queue * _67;
  long unsigned int _70;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  struct queue * _85;
  struct deque * _87;
  struct queue * prephitmp_89;
  struct queue * pretmp_91;
  struct queue * _94;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  void * _142;
  struct _Deque_base * _144;
  struct queue * _146;
  bool _149;
  long int _150;
  long int _151;
  long int _152;
  long unsigned int _154;
  bool _155;
  long int _160;
  struct Flit * * * _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  struct Flit * * _167;
  long int _168;
  struct Flit * * _169;
  long int _170;
  long int _171;
  long int _172;
  long int _173;
  struct Flit * * _174;
  long int _175;
  struct Flit * * _176;
  long int _177;
  long int _178;
  long int _179;
  difference_type _180;
  size_type _181;
  struct _Deque_base * _182;
  struct Flit * * _183;
  struct Flit * * _185;
  struct Flit * * * _186;
  struct Flit * * _187;
  struct Flit * * _188;
  struct Flit * * * _190;
  long int _203;
  difference_type _209;
  long int _213;
  long int _214;
  bool _220;
  long unsigned int prephitmp_225;
  long unsigned int pretmp_226;
  long int _228;
  struct Flit * * * pretmp_229;
  long int _230;
  long int _231;
  long int _232;
  long int _233;
  long int _234;
  struct Flit * * * prephitmp_235;
  long int _236;
  long int _238;
  long int _239;
  long int _240;
  long int _241;
  long int _242;
  long int _243;
  long int _244;
  long int _245;
  long int _246;
  long int _247;
  struct Flit * _252;
  long int _253;
  difference_type _256;
  struct Flit * * _257;
  struct Flit * * * _269;
  struct Flit * * _270;
  struct Flit * * _271;
  struct Flit * * * _272;
  struct Flit * * * _273;
  struct Flit * * * _274;
  struct Flit * * _277;
  long unsigned int prephitmp_315;
  void * _345;

  <bb 2>:
  # DEBUG D#2872 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#2872
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 72>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.50176._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.50176._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 29>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.115440 => __x_29(D)
  _52 = &MEM[(const struct queue &)__x_29(D)].c;
  std::deque<Flit*, std::allocator<Flit*> >::deque (&__x_copy.c, _52);
  # DEBUG this => this_9(D)
  # DEBUG D#220 => &this_9(D)->D.50176._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#220
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.71786
  # DEBUG __rhs => &__position
  # DEBUG this => &D.71786
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#2177 => &this_9(D)->D.50176
  # DEBUG this => D#2177
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#1540
  # DEBUG D#1539 => D#1540
  # DEBUG D#1538 => D#1539
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.115453 => D#1538
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__last_61, __old_finish_26, __old_finish_26);

  <bb 6>:
  _62 = this_9(D)->D.50176._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.50176._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#2872
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#2872
  # DEBUG __it => D#2872
  # DEBUG __first => D#2872
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#2872
  # DEBUG __it => D#2872
  # DEBUG __first => D#2872
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#2872
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.101_21 = (long int) __last_61;
  _73 = __last.101_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#2872
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#2872
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_319 = PHI <__old_finish_26(8), __old_finish_58(12)>
  # __last_320 = PHI <__last_61(8), __last_66(12)>
  # __n_321 = PHI <__n_72(8), __n_81(12)>
  # DEBUG __n => __n_321
  # DEBUG __result => __old_finish_319
  # DEBUG __last => __last_320
  __last_66 = __last_320 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_319 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.115483 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_80, _56);
  goto <bb 11>;

<L24>:
  goto <bb 74> (<L10>);

  <bb 11>:
  __n_81 = __n_321 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#1010 => &__x_copy.c
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.54933);
  __x_copy ={v} {CLOBBER};
  goto <bb 72>;

  <bb 14>:

  <bb 15>:
  # __position_323 = PHI <__position_23(14), __position_84(18)>
  # DEBUG __first => __position_323
  # DEBUG this => __position_323
  # DEBUG D.115494 => &__x_copy
  _83 = &__position_323->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_83, &__x_copy.c);
  goto <bb 17>;

<L25>:
  goto <bb 74> (<L10>);

  <bb 17>:
  __position_84 = __position_323 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#2178 => &this_9(D)->D.50176
  # DEBUG this => D#2178
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.115503 => D#1543
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _85 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<Flit*>*, long unsigned int, std::queue<Flit*> > (__old_finish_26, _70, &__x_copy);
  goto <bb 21>;

<L26>:
  goto <bb 74> (<L10>);

  <bb 21>:
  this_9(D)->D.50176._M_impl._M_finish = _85;
  # DEBUG D#2179 => &this_9(D)->D.50176
  # DEBUG this => D#2179
  # DEBUG this => &__position
  # DEBUG __first => D#2872
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __alloc => D#1540
  # DEBUG D#1539 => D#1540
  # DEBUG D#1538 => D#1539
  # DEBUG __first => D#2872
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG D.115516 => D#1538
  # DEBUG __first => D#2872
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__position_23, __old_finish_26, _85);
  goto <bb 23>;

<L27>:
  goto <bb 74> (<L10>);

  <bb 23>:
  _74 = this_9(D)->D.50176._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.50176._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#2872
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#2872
  if (__position_23 == __old_finish_26)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __position_324 = PHI <__position_23(24), __position_88(28)>
  # DEBUG __first => __position_324
  # DEBUG this => __position_324
  # DEBUG D.115537 => &__x_copy
  _87 = &__position_324->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_87, &__x_copy.c);
  goto <bb 27>;

<L28>:
  goto <bb 74> (<L10>);

  <bb 27>:
  __position_88 = __position_324 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1330 => this_9(D)
  # DEBUG this => D#1330
  # DEBUG D#1329 => D#1330
  # DEBUG D#1328 => &D#1329->D.50924
  # DEBUG this => D#1328
  # DEBUG __a => D#1327
  # DEBUG D#1326 => D#1327
  # DEBUG D#1325 => D#1326
  # DEBUG this => D#1325
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#138 => this_9(D)
  # DEBUG D#138 => this_9(D)
  # DEBUG this => D#138
  # DEBUG this => D#138
  _150 = (long int) _24;
  _151 = _13 - _150;
  _152 = _151 /[ex] 80;
  _153 = (const long unsigned int) _152;
  _154 = 230584300921369395 - _153;
  if (__n_7(D) > _154)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 31>:
  # DEBUG D#138 => this_9(D)
  # DEBUG D#138 => this_9(D)
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG D#138 => this_9(D)
  # DEBUG D#138 => this_9(D)
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG __a => &D.127306
  # DEBUG __b => &__n
  _18 = MAX_EXPR <__n_7(D), _153>;
  __len_158 = _18 + _153;
  # DEBUG __len => __len_158
  # DEBUG D#138 => this_9(D)
  # DEBUG D#138 => this_9(D)
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG D#1330 => this_9(D)
  # DEBUG this => D#1330
  # DEBUG D#1329 => D#1330
  # DEBUG D#1328 => &D#1329->D.50924
  # DEBUG this => D#1328
  # DEBUG __a => D#1327
  # DEBUG D#1326 => D#1327
  # DEBUG D#1325 => D#1326
  # DEBUG this => D#1325
  _155 = __len_158 > 230584300921369395;
  _220 = _153 > __len_158;
  _149 = _155 | _220;
  if (_149 != 0)
    goto <bb 89>;
  else
    goto <bb 90>;

  <bb 32>:
  pretmp_226 = __len_158 * 80;

  <bb 33>:
  # __elems_before_293 = PHI <__elems_before_210(89), __elems_before_205(32)>
  # _242 = PHI <_214(89), _253(32)>
  # prephitmp_225 = PHI <18446744073709551600(89), pretmp_226(32)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#403 => &this_9(D)->D.50176._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#403
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71819
  # DEBUG this => &__position
  # DEBUG this => &D.71819
  # DEBUG __elems_before => __elems_before_293
  # DEBUG D#2189 => &this_9(D)->D.50176
  # DEBUG D#1308 => D#2189
  # DEBUG __n => NULL
  # DEBUG this => D#1338
  # DEBUG D#1337 => D#1338
  # DEBUG D#1336 => &D#1337->_M_impl
  # DEBUG D#1335 => D#1336
  # DEBUG __n => NULL
  # DEBUG __a => D#1335
  # DEBUG D#1334 => D#1335
  # DEBUG D#1332 => D#1334
  # DEBUG D#1333 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1332
  # DEBUG D.127294 => D#1333
  # DEBUG D#1331 => D#1332
  # DEBUG D#1325 => D#1331
  # DEBUG this => D#1325
  _146 = operator new (prephitmp_225);

  <bb 34>:
  # __new_finish_147 = PHI <0B(90), _146(33)>
  # __elems_before_219 = PHI <__elems_before_205(90), __elems_before_293(33)>
  # _244 = PHI <_253(90), _242(33)>
  # prephitmp_315 = PHI <0(90), prephitmp_225(33)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2173 => &this_9(D)->D.50176
  # DEBUG this => D#2173
  _27 = (long unsigned int) _244;
  __first_28 = __new_finish_147 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.115546 => D#1543
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __cur => __first_28
  # DEBUG __n => __n_7(D)

  <bb 35>:
  # __n_237 = PHI <__n_140(47), __n_7(D)(34)>
  # __first_202 = PHI <__first_141(47), __first_28(34)>
  # DEBUG __cur => __first_202
  # DEBUG __n => __n_237
  # DEBUG __r => __first_202
  # DEBUG __p => NULL
  # DEBUG __value => __x_29(D)
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.106160 => D#12
  if (__first_202 != 0B)
    goto <bb 36>;
  else
    goto <bb 46>;

  <bb 36>:
  # DEBUG this => NULL
  # DEBUG D.127282 => __x_29(D)
  # DEBUG D#2865 => &MEM[(const struct queue &)__x_29(D)].c
  # DEBUG D#2868 => &__first_202->c
  # DEBUG this => D#2868
  # DEBUG __x => D#2865
  # DEBUG this => D#2865
  # DEBUG D#201 => &D#2865->D.54933._M_impl._M_start
  # DEBUG D#202 => &D#2865->D.54933._M_impl._M_finish
  # DEBUG __x => D#202
  # DEBUG __y => D#201
  # DEBUG __size => 8
  _17 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_node;
  _160 = (long int) _17;
  _161 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_node;
  _162 = (long int) _161;
  _163 = _160 - _162;
  _164 = _163 /[ex] 8;
  _165 = _164 + -1;
  _166 = _165 * 64;
  _167 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_cur;
  _168 = (long int) _167;
  _169 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_first;
  _170 = (long int) _169;
  _171 = _168 - _170;
  _172 = _171 /[ex] 8;
  _173 = _166 + _172;
  _174 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_last;
  _175 = (long int) _174;
  _176 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_cur;
  _177 = (long int) _176;
  _178 = _175 - _177;
  _179 = _178 /[ex] 8;
  _180 = _173 + _179;
  _181 = (size_type) _180;
  # DEBUG D#1535 => &D#2865->D.54933
  # DEBUG this => D#1535
  # DEBUG __a => NULL
  _182 = &MEM[(struct deque *)__first_202].D.54933;
  # DEBUG this => _182
  # DEBUG __a => NULL
  # DEBUG __num_elements => _181
  # DEBUG D#1372 => &_182->_M_impl
  # DEBUG this => D#1372
  # DEBUG __a => NULL
  # DEBUG this => D#1372
  # DEBUG __a => NULL
  # DEBUG this => D#1372
  # DEBUG D.96699 => NULL
  MEM[(struct _Deque_impl *)__first_202]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_202]._M_map_size = 0;
  # DEBUG D#712 => &D#1372->_M_start
  # DEBUG this => D#712
  MEM[(struct _Deque_iterator *)__first_202 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 16B]._M_node = 0B;
  # DEBUG D#711 => &D#1372->_M_finish
  # DEBUG this => D#711
  MEM[(struct _Deque_iterator *)__first_202 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_182, _181);

  <bb 37>:
  # DEBUG D#1536 => &D#2868->D.54933
  # DEBUG this => D#1536
  # DEBUG D#1537 => &D#2868->D.54933._M_impl._M_start
  # DEBUG this => &D.127327
  # DEBUG __x => D#1537
  _183 = MEM[(const struct iterator &)__first_202 + 16]._M_cur;
  _185 = MEM[(const struct iterator &)__first_202 + 16]._M_last;
  _186 = MEM[(const struct iterator &)__first_202 + 16]._M_node;
  # DEBUG this => D#2865
  # DEBUG D#179 => &D#2865->D.54933._M_impl._M_finish
  # DEBUG this => &D.127328
  # DEBUG __x => D#179
  _187 = MEM[(const struct iterator &)__x_29(D) + 48]._M_cur;
  _188 = MEM[(const struct iterator &)__x_29(D) + 48]._M_first;
  # DEBUG D#2867 => MEM[(const struct iterator &)__x_29(D) + 48]._M_last
  _190 = MEM[(const struct iterator &)__x_29(D) + 48]._M_node;
  # DEBUG this => D#2865
  # DEBUG D#180 => &D#2865->D.54933._M_impl._M_start
  # DEBUG this => &D.127329
  # DEBUG __x => D#180
  __first$_M_cur_191 = MEM[(const struct iterator &)__x_29(D) + 16]._M_cur;
  # DEBUG D#2869 => MEM[(const struct iterator &)__x_29(D) + 16]._M_first
  __first$_M_last_193 = MEM[(const struct iterator &)__x_29(D) + 16]._M_last;
  __first$_M_node_194 = MEM[(const struct iterator &)__x_29(D) + 16]._M_node;
  # DEBUG __result => &D.127327
  # DEBUG D.127333 => D#1534
  # DEBUG this => &D.127337
  # DEBUG __x => &D.127327
  # DEBUG __result => &D.127337
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.127337
  # DEBUG __result => NULL
  # DEBUG this => &D.127351
  # DEBUG __x => NULL
  # DEBUG __result => &D.127351
  # DEBUG this => &D.127371
  # DEBUG __x => &D.127351
  # DEBUG __it => _187
  # DEBUG __it$8 => _188
  # DEBUG __it$16 => D#2867
  # DEBUG __it$24 => _190
  # DEBUG __it$_M_cur => _187
  # DEBUG __it$_M_first => _188
  # DEBUG __it$_M_last => D#2867
  # DEBUG __it$_M_node => _190
  # DEBUG __it => __first$_M_cur_191
  # DEBUG __it$8 => D#2869
  # DEBUG __it$16 => __first$_M_last_193
  # DEBUG __it$24 => __first$_M_node_194
  # DEBUG __it$_M_cur => __first$_M_cur_191
  # DEBUG __it$_M_first => D#2869
  # DEBUG __it$_M_last => __first$_M_last_193
  # DEBUG __it$_M_node => __first$_M_node_194
  # DEBUG __result => &D.127371
  # DEBUG this => NULL
  # DEBUG __x => &D.127371
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _187
  # DEBUG __it$8 => _188
  # DEBUG __it$16 => D#2867
  # DEBUG __it$24 => _190
  # DEBUG __it$_M_cur => _187
  # DEBUG __it$_M_first => _188
  # DEBUG __it$_M_last => D#2867
  # DEBUG __it$_M_node => _190
  # DEBUG __it => __first$_M_cur_191
  # DEBUG __it$8 => D#2869
  # DEBUG __it$16 => __first$_M_last_193
  # DEBUG __it$24 => __first$_M_node_194
  # DEBUG __it$_M_cur => __first$_M_cur_191
  # DEBUG __it$_M_first => D#2869
  # DEBUG __it$_M_last => __first$_M_last_193
  # DEBUG __it$_M_node => __first$_M_node_194
  # DEBUG __first => __first$_M_cur_191
  # DEBUG __first$8 => D#2869
  # DEBUG __first$16 => __first$_M_last_193
  # DEBUG __first$24 => __first$_M_node_194
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.127396
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_191
  # DEBUG __first$_M_first => D#2869
  # DEBUG __first$_M_last => __first$_M_last_193
  # DEBUG __first$_M_node => __first$_M_node_194
  # DEBUG __result => &D.127396
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _228 = (long int) _190;
  _230 = (long int) __first$_M_node_194;
  _231 = _228 - _230;
  _232 = _231 /[ex] 8;
  _233 = _232 + -1;
  _234 = _233 * 64;
  _236 = (long int) _187;
  _238 = (long int) _188;
  _239 = _236 - _238;
  _240 = _239 /[ex] 8;
  _241 = _234 + _240;
  _243 = (long int) __first$_M_last_193;
  _245 = (long int) __first$_M_cur_191;
  _246 = _243 - _245;
  _247 = _246 /[ex] 8;
  __n_248 = _241 + _247;
  # DEBUG __n => __n_248
  # DEBUG __n => __n_248
  if (__n_248 <= 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG this => &D.127336
  # DEBUG __x => &D.127396
  D.127396 ={v} {CLOBBER};
  D.127371 ={v} {CLOBBER};
  D.127351 ={v} {CLOBBER};
  D.127337 ={v} {CLOBBER};
  D.127327 ={v} {CLOBBER};
  goto <bb 46>;

  <bb 39>:

  <bb 40>:
  # __n_333 = PHI <__n_248(39), __n_259(45)>
  # SR.4540_372 = PHI <_183(39), SR.4540_371(45)>
  # SR.4541_369 = PHI <_185(39), SR.4541_368(45)>
  # SR.4542_367 = PHI <_186(39), SR.4542_366(45)>
  # __first$_M_cur_364 = PHI <__first$_M_cur_191(39), __first$_M_cur_363(45)>
  # __first$_M_last_360 = PHI <__first$_M_last_193(39), __first$_M_last_359(45)>
  # __first$_M_node_358 = PHI <__first$_M_node_194(39), __first$_M_node_356(45)>
  # DEBUG __first$_M_node => __first$_M_node_358
  # DEBUG __first$_M_last => __first$_M_last_360
  # DEBUG __first$_M_cur => __first$_M_cur_364
  # DEBUG __n => __n_333
  # DEBUG D#308 => &D.127396
  # DEBUG this => D#308
  # DEBUG D#98 => &__first
  # DEBUG this => D#98
  _252 = MEM[(struct Flit * const &)__first$_M_cur_364];
  *SR.4540_372 = _252;
  # DEBUG this => &__first
  __first$_M_cur_254 = __first$_M_cur_364 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_254
  if (__first$_M_cur_254 == __first$_M_last_360)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG this => &__first
  __first$_M_node_265 = __first$_M_node_358 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_265
  # DEBUG __first$_M_node => __first$_M_node_265
  __first$_M_cur_266 = MEM[(struct Flit * * *)__first$_M_node_358 + 8B];
  # DEBUG __size => 8
  __first$_M_last_267 = __first$_M_cur_266 + 512;
  # DEBUG __first$_M_last => __first$_M_last_267
  # DEBUG __first$_M_cur => __first$_M_cur_266

  <bb 42>:
  # __first$_M_cur_363 = PHI <__first$_M_cur_254(40), __first$_M_cur_266(41)>
  # __first$_M_last_359 = PHI <__first$_M_last_360(40), __first$_M_last_267(41)>
  # __first$_M_node_356 = PHI <__first$_M_node_358(40), __first$_M_node_265(41)>
  # DEBUG __first$_M_node => __first$_M_node_356
  # DEBUG __first$_M_last => __first$_M_last_359
  # DEBUG __first$_M_cur => __first$_M_cur_363
  # DEBUG this => &D.127396
  _257 = SR.4540_372 + 8;
  if (_257 == SR.4541_369)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG this => &D.127396
  _269 = SR.4542_367 + 8;
  # DEBUG this => &D.127396
  # DEBUG __new_node => _269
  _270 = MEM[(struct Flit * * *)SR.4542_367 + 8B];
  # DEBUG __size => 8
  _271 = _270 + 512;

  <bb 44>:
  # SR.4540_371 = PHI <_257(42), _270(43)>
  # SR.4541_368 = PHI <SR.4541_369(42), _271(43)>
  # SR.4542_366 = PHI <SR.4542_367(42), _269(43)>
  __n_259 = __n_333 + -1;
  # DEBUG __n => __n_259
  # DEBUG __n => __n_259
  if (__n_259 <= 0)
    goto <bb 38>;
  else
    goto <bb 45>;

  <bb 45>:
  goto <bb 40>;

  <bb 46>:
  __n_140 = __n_237 + 18446744073709551615;
  # DEBUG __n => __n_140
  __first_141 = __first_202 + 80;
  # DEBUG __cur => __first_141
  # DEBUG __cur => __first_141
  # DEBUG __n => __n_140
  if (__n_140 == 0)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 35>;

  <bb 48>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2174 => &this_9(D)->D.50176
  # DEBUG this => D#2174
  # DEBUG this => &__position
  _32 = this_9(D)->D.50176._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#2872
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1542
  # DEBUG D#1541 => D#1542
  # DEBUG D#1538 => D#1541
  # DEBUG __first => _32
  # DEBUG __last => D#2872
  # DEBUG __result => NULL
  # DEBUG D.115567 => D#1538
  # DEBUG __first => _32
  # DEBUG __last => D#2872
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (_32, __position_23, __new_finish_147);
  goto <bb 55>;

  # __first_313 = PHI <__first_202(36)>
<L19>:
  _142 = __builtin_eh_pointer (12);
  __cxa_begin_catch (_142);
  # DEBUG __first => __first_28
  # DEBUG __last => __first_313
  # DEBUG __first => __first_28
  # DEBUG __last => __first_313
  # DEBUG __first => __first_28
  if (__first_28 == __first_313)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  __cxa_rethrow ();

  <bb 51>:

  <bb 52>:
  # __first_332 = PHI <__first_28(51), __first_145(53)>
  # DEBUG __first => __first_332
  # DEBUG __r => __first_332
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  _144 = &MEM[(struct deque *)__first_332].D.54933;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_144);
  MEM[(struct  &)__first_332] ={v} {CLOBBER};
  __first_145 = __first_332 + 80;
  # DEBUG __first => __first_145
  # DEBUG __first => __first_145
  if (__first_145 == __first_313)
    goto <bb 50>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 52>;

<L21>:
  __cxa_end_catch ();
  resx 13

  <bb 55>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 80;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#2175 => &this_9(D)->D.50176
  # DEBUG this => D#2175
  _36 = this_9(D)->D.50176._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#2872
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#1542
  # DEBUG D#1541 => D#1542
  # DEBUG D#1538 => D#1541
  # DEBUG __first => D#2872
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.115586 => D#1538
  # DEBUG __first => D#2872
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _94 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__position_23, _36, __new_finish_34);
  goto <bb 57>;

<L30>:
  goto <bb 76> (<L13>);

  <bb 57>:
  # DEBUG __new_finish => _94
  # DEBUG D#2176 => &this_9(D)->D.50176
  # DEBUG this => D#2176
  _38 = this_9(D)->D.50176._M_impl._M_finish;
  __first_39 = this_9(D)->D.50176._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 69>;
  else
    goto <bb 58>;

  <bb 58>:

  <bb 59>:
  # __first_316 = PHI <__first_39(58), __first_96(67)>
  # DEBUG __first => __first_316
  # DEBUG __r => __first_316
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  # DEBUG D#2866 => &MEM[(struct deque *)__first_316].D.54933
  # DEBUG this => D#2866
  _272 = MEM[(struct _Deque_base *)__first_316]._M_impl._M_map;
  if (_272 != 0B)
    goto <bb 60>;
  else
    goto <bb 66>;

  <bb 60>:
  _273 = MEM[(struct _Deque_base *)__first_316]._M_impl._M_finish._M_node;
  _274 = _273 + 8;
  __nstart_275 = MEM[(struct _Deque_base *)__first_316]._M_impl._M_start._M_node;
  # DEBUG this => D#2866
  # DEBUG __nstart => __nstart_275
  # DEBUG __nfinish => _274
  # DEBUG __n => __nstart_275
  # DEBUG __n => __nstart_275
  if (_274 <= __nstart_275)
    goto <bb 65>;
  else
    goto <bb 61>;

  <bb 61>:

  <bb 62>:
  # __nstart_334 = PHI <__nstart_275(61), __nstart_278(63)>
  # DEBUG __n => __nstart_334
  _277 = *__nstart_334;
  # DEBUG D#981 => D#2866
  # DEBUG __p => _277
  # DEBUG this => D#981
  # DEBUG D#980 => D#981
  # DEBUG __size => 8
  # DEBUG D#979 => &D#980->_M_impl
  # DEBUG D#977 => D#979
  # DEBUG __p => _277
  # DEBUG __a => D#977
  # DEBUG __n => D#978
  # DEBUG D#976 => D#978
  # DEBUG D#975 => D#977
  # DEBUG D#973 => D#975
  # DEBUG D#974 => D#976
  # DEBUG __p => _277
  # DEBUG this => D#973
  # DEBUG D.127431 => D#974
  operator delete (_277);
  __nstart_278 = __nstart_334 + 8;
  # DEBUG __n => __nstart_278
  # DEBUG __n => __nstart_278
  if (_274 <= __nstart_278)
    goto <bb 64>;
  else
    goto <bb 63>;

  <bb 63>:
  goto <bb 62>;

  <bb 64>:
  pretmp_229 = MEM[(struct _Deque_base *)__first_316]._M_impl._M_map;

  <bb 65>:
  # prephitmp_235 = PHI <pretmp_229(64), _272(60)>
  # DEBUG D#999 => D#2866->_M_impl._M_map_size
  # DEBUG D#2871 => MEM[(struct _Deque_base *)__first_316]._M_impl._M_map
  # DEBUG D#997 => D#2866
  # DEBUG D#998 => D#999
  # DEBUG __p => D#2871
  # DEBUG this => D#997
  # DEBUG __n => D#998
  # DEBUG D#996 => D#998
  # DEBUG D#995 => D#997
  # DEBUG D#994 => D#995
  # DEBUG this => D#994
  # DEBUG D#993 => D#994
  # DEBUG this => D#993
  # DEBUG this => NULL
  # DEBUG D.99274 => NULL
  # DEBUG this => NULL
  # DEBUG D#709 => &__map_alloc
  # DEBUG D#710 => D#996
  # DEBUG __p => D#2871
  # DEBUG __a => D#709
  # DEBUG __n => D#710
  # DEBUG D#708 => D#710
  # DEBUG D#707 => D#709
  # DEBUG D#705 => D#707
  # DEBUG D#706 => D#708
  # DEBUG __p => D#2871
  # DEBUG this => D#705
  # DEBUG D.127441 => D#706
  operator delete (prephitmp_235);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 66>:
  # DEBUG D#1000 => &D#2866->_M_impl
  # DEBUG this => D#1000
  # DEBUG this => D#1000
  # DEBUG this => D#1000
  MEM[(struct  &)__first_316] ={v} {CLOBBER};
  __first_96 = __first_316 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 68>;
  else
    goto <bb 67>;

  <bb 67>:
  goto <bb 59>;

  <bb 68>:
  pretmp_91 = this_9(D)->D.50176._M_impl._M_start;

  <bb 69>:
  # prephitmp_89 = PHI <pretmp_91(68), __first_39(57)>
  # DEBUG D#2187 => this_9(D)->D.50176._M_impl._M_end_of_storage
  # DEBUG D#2186 => (long int) D#2187
  # DEBUG D#2870 => this_9(D)->D.50176._M_impl._M_start
  # DEBUG D#2185 => (long int) D#2870
  # DEBUG D#2184 => D#2186 - D#2185
  # DEBUG D#2183 => D#2184 /[ex] 80
  # DEBUG D#2182 => &this_9(D)->D.50176
  # DEBUG D#646 => D#2182
  # DEBUG D#647 => (long unsigned int) D#2183
  # DEBUG __p => D#2870
  # DEBUG this => D#646
  # DEBUG __n => D#647
  # DEBUG D#645 => D#647
  # DEBUG D#644 => D#646
  if (prephitmp_89 != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  # DEBUG D#643 => &D#644->_M_impl
  # DEBUG D#641 => D#643
  # DEBUG D#642 => D#645
  # DEBUG __p => D#2870
  # DEBUG __a => D#641
  # DEBUG __n => D#642
  # DEBUG D#640 => D#642
  # DEBUG D#639 => D#641
  # DEBUG D#637 => D#639
  # DEBUG D#638 => D#640
  # DEBUG __p => D#2870
  # DEBUG this => D#637
  # DEBUG D.115609 => D#638
  operator delete (prephitmp_89);

  <bb 71>:
  this_9(D)->D.50176._M_impl._M_start = __new_finish_147;
  this_9(D)->D.50176._M_impl._M_finish = _94;
  _45 = __new_finish_147 + prephitmp_315;
  this_9(D)->D.50176._M_impl._M_end_of_storage = _45;

  <bb 72>:
  return;

<L23>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1010 => &__x_copy.c
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.54933);
  resx 2

<L29>:

  # __new_finish_1 = PHI <__new_finish_34(56), 0B(75)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 79>;
  else
    goto <bb 77>;

  <bb 77>:
  # DEBUG __first => __new_finish_147
  if (__new_finish_1 == __new_finish_147)
    goto <bb 78>;
  else
    goto <bb 83>;

  <bb 78>:
  # DEBUG D#2188 => &this_9(D)->D.50176
  # DEBUG D#646 => D#2188
  # DEBUG __p => NULL
  # DEBUG this => D#646
  # DEBUG __n => D#647
  # DEBUG D#645 => D#647
  # DEBUG D#644 => D#646
  if (__new_finish_147 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 79>:
  # DEBUG D#2180 => &this_9(D)->D.50176
  # DEBUG this => D#2180
  _49 = __n_7(D) + __elems_before_219;
  _50 = _49 * 80;
  _51 = __new_finish_147 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51
  # DEBUG __first => __first_28
  if (__first_28 == _51)
    goto <bb 78>;
  else
    goto <bb 80>;

  <bb 80>:

  <bb 81>:
  # __first_322 = PHI <__first_28(80), __first_98(82)>
  # DEBUG __first => __first_322
  # DEBUG __r => __first_322
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  _97 = &MEM[(struct deque *)__first_322].D.54933;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_97);
  MEM[(struct  &)__first_322] ={v} {CLOBBER};
  __first_98 = __first_322 + 80;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_51 == __first_98)
    goto <bb 78>;
  else
    goto <bb 82>;

  <bb 82>:
  goto <bb 81>;

  <bb 83>:

  <bb 84>:
  # __new_finish_325 = PHI <__new_finish_147(83), __new_finish_101(85)>
  # DEBUG __first => __new_finish_325
  # DEBUG __r => __new_finish_325
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  _100 = &MEM[(struct deque *)__new_finish_325].D.54933;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_325] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_325 + 80;
  # DEBUG __first => __new_finish_101
  # DEBUG __first => __new_finish_101
  if (__new_finish_1 == __new_finish_101)
    goto <bb 78>;
  else
    goto <bb 85>;

  <bb 85>:
  goto <bb 84>;

  <bb 86>:
  # DEBUG D#643 => &D#644->_M_impl
  # DEBUG D#641 => D#643
  # DEBUG D#642 => D#645
  # DEBUG __p => NULL
  # DEBUG __a => D#641
  # DEBUG __n => D#642
  # DEBUG D#640 => D#642
  # DEBUG D#639 => D#641
  # DEBUG D#637 => D#639
  # DEBUG D#638 => D#640
  # DEBUG __p => NULL
  # DEBUG this => D#637
  # DEBUG D.115660 => D#638
  operator delete (__new_finish_147);

  <bb 87>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 89>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#403 => &this_9(D)->D.50176._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#403
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71819
  # DEBUG this => &__position
  _213 = (long int) __position_23;
  # DEBUG this => &D.71819
  _214 = _213 - _150;
  _209 = _214 /[ex] 80;
  __elems_before_210 = (const size_type) _209;
  # DEBUG __elems_before => __elems_before_210
  # DEBUG D#2189 => &this_9(D)->D.50176
  # DEBUG D#1308 => D#2189
  # DEBUG __n => NULL
  # DEBUG this => D#1338
  # DEBUG D#1337 => D#1338
  goto <bb 33>;

  <bb 90>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#403 => &this_9(D)->D.50176._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#403
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.71819
  # DEBUG this => &__position
  _203 = (long int) __position_23;
  # DEBUG this => &D.71819
  _253 = _203 - _150;
  _256 = _253 /[ex] 80;
  __elems_before_205 = (const size_type) _256;
  # DEBUG __elems_before => __elems_before_205
  # DEBUG D#2189 => &this_9(D)->D.50176
  # DEBUG D#1308 => D#2189
  # DEBUG __n => NULL
  # DEBUG this => D#1338
  # DEBUG D#1337 => D#1338
  if (__len_158 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

<L22>:
  # DEBUG __new_finish => __new_finish_147
  _345 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_345);
  if (__new_finish_147 == 0B)
    goto <bb 79>;
  else
    goto <bb 78>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE24_M_new_elements_at_frontEm, funcdef_no=4365, decl_uid=62558, cgraph_uid=2810, symbol_order=2811)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Credit * * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  struct Credit * * * _14;
  struct Credit * * _16;
  struct Credit * * * _17;
  long unsigned int _18;
  sizetype _19;
  struct Credit * * * _20;
  void * _23;
  struct Credit * * * _25;
  long unsigned int _26;
  sizetype _27;
  struct Credit * * * _28;
  struct Credit * * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct Credit * * _39;
  long int _40;
  struct Credit * * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  struct Credit * * _46;
  long int _47;
  struct Credit * * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  struct Credit * * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#2085 => this_6(D)
  # DEBUG this => D#2085
  # DEBUG D#2084 => D#2085
  # DEBUG D#2083 => &D#2084->D.62618
  # DEBUG this => D#2083
  # DEBUG __a => D#2082
  # DEBUG D#2081 => D#2082
  # DEBUG D#1373 => D#2081
  # DEBUG this => D#1373
  # DEBUG this => this_6(D)
  # DEBUG D#404 => &MEM[(const struct deque *)this_6(D)].D.62618._M_impl._M_start
  # DEBUG D#405 => &MEM[(const struct deque *)this_6(D)].D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 64;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 8;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 2305843009213693951 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 8
  _13 = __new_elems_11(D) + 63;
  # DEBUG __size => 8
  __new_nodes_15 = _13 >> 6;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.62618._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.62618._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#2087 => &this_6(D)->D.62618
  # DEBUG D#1381 => D#2087
  # DEBUG this => D#1381
  # DEBUG D#1380 => D#1381
  # DEBUG __size => 8
  # DEBUG D#1379 => &D#1380->_M_impl
  # DEBUG D#1378 => D#1379
  # DEBUG __n => NULL
  # DEBUG __a => D#1378
  # DEBUG D#1377 => D#1378
  # DEBUG D#1375 => D#1377
  # DEBUG D#1376 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1375
  # DEBUG D.114637 => D#1376
  # DEBUG D#1374 => D#1375
  # DEBUG D#1373 => D#1374
  # DEBUG this => D#1373
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.62618._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#2086 => &this_6(D)->D.62618
  # DEBUG this => D#2086
  # DEBUG __p => _29
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#2086->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _29
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _29
  # DEBUG this => D#1017
  # DEBUG D.114647 => D#1018
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE23_M_new_elements_at_backEm, funcdef_no=4367, decl_uid=62561, cgraph_uid=2812, symbol_order=2813)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Credit * * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  struct Credit * * * _13;
  struct Credit * * * _16;
  long unsigned int _17;
  struct Credit * * * _18;
  void * _21;
  struct Credit * * * _23;
  long unsigned int _24;
  struct Credit * * * _25;
  struct Credit * * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  struct Credit * * _35;
  long int _36;
  struct Credit * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  struct Credit * * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  struct Credit * * _50;
  long unsigned int _53;
  long unsigned int _54;
  struct Credit * * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#2085 => this_6(D)
  # DEBUG this => D#2085
  # DEBUG D#2084 => D#2085
  # DEBUG D#2083 => &D#2084->D.62618
  # DEBUG this => D#2083
  # DEBUG __a => D#2082
  # DEBUG D#2081 => D#2082
  # DEBUG D#1373 => D#2081
  # DEBUG this => D#1373
  # DEBUG this => this_6(D)
  # DEBUG D#404 => &MEM[(const struct deque *)this_6(D)].D.62618._M_impl._M_start
  # DEBUG D#405 => &MEM[(const struct deque *)this_6(D)].D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 64;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 2305843009213693951 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 8
  _12 = __new_elems_10(D) + 63;
  # DEBUG __size => 8
  __new_nodes_14 = _12 >> 6;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.62618._M_impl._M_map_size;
  _57 = this_6(D)->D.62618._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.62618._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#2089 => &this_6(D)->D.62618
  # DEBUG D#1381 => D#2089
  # DEBUG this => D#1381
  # DEBUG D#1380 => D#1381
  # DEBUG __size => 8
  # DEBUG D#1379 => &D#1380->_M_impl
  # DEBUG D#1378 => D#1379
  # DEBUG __n => NULL
  # DEBUG __a => D#1378
  # DEBUG D#1377 => D#1378
  # DEBUG D#1375 => D#1377
  # DEBUG D#1376 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1375
  # DEBUG D.114665 => D#1376
  # DEBUG D#1374 => D#1375
  # DEBUG D#1373 => D#1374
  # DEBUG this => D#1373
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.62618._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#2088 => &this_6(D)->D.62618
  # DEBUG this => D#2088
  # DEBUG __p => _26
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#2088->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _26
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _26
  # DEBUG this => D#1017
  # DEBUG D.114675 => D#1018
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE13_M_insert_auxISt15_Deque_iteratorIS1_RKS1_PS6_EEEvS5_IS1_RS1_PS1_ET_SD_m, funcdef_no=4345, decl_uid=76687, cgraph_uid=2790, symbol_order=2791)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.4790;
  struct Credit * * SR.4789;
  struct Credit * * SR.4788;
  struct Credit * * SR.4787;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __last$24;
  struct Credit * * __last$8;
  struct Credit * * __last;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last1$_M_node;
  struct Credit * * __last1$_M_last;
  struct Credit * * __last1$_M_first;
  struct Credit * * __last1$_M_cur;
  struct Credit * * * __first1$_M_node;
  struct Credit * * __first1$_M_last;
  struct Credit * * __first1$_M_first;
  struct Credit * * __first1$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * SR.4736;
  struct Credit * * SR.4735;
  struct Credit * * SR.4734;
  struct Credit * * * SR.4733;
  struct Credit * * SR.4732;
  struct Credit * * SR.4731;
  struct Credit * * SR.4730;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.4718;
  struct Credit * * SR.4717;
  struct Credit * * SR.4716;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __last$24;
  struct Credit * * __last$8;
  struct Credit * * __last;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last2$_M_node;
  struct Credit * * __last2$_M_last;
  struct Credit * * __last2$_M_first;
  struct Credit * * __last2$_M_cur;
  struct Credit * * * __first2$_M_node;
  struct Credit * * __first2$_M_last;
  struct Credit * * __first2$_M_first;
  struct Credit * * __first2$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * SR.4660;
  struct Credit * * SR.4659;
  struct Credit * * SR.4658;
  struct Credit * * SR.4657;
  struct Credit * * * __new_finish$_M_node;
  struct Credit * * __new_finish$_M_last;
  struct Credit * * __new_finish$_M_first;
  struct Credit * * __new_finish$_M_cur;
  struct Credit * * * SR.4652;
  struct Credit * * SR.4651;
  struct Credit * * SR.4650;
  struct Credit * * SR.4649;
  struct Credit * * * __new_start$_M_node;
  struct Credit * * __new_start$_M_last;
  struct Credit * * __new_start$_M_first;
  struct Credit * * __new_start$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.127983;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127958;
  struct _Deque_iterator D.127957;
  struct _Deque_iterator D.127956;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127938;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127924;
  struct _Deque_iterator D.127923;
  struct _Deque_iterator D.127922;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.127921;
  struct _Deque_iterator D.127920;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  const ptrdiff_t _Num;
  struct Credit * * D.127898;
  const difference_type __offset;
  struct _Self & D.127880;
  const difference_type __offset;
  struct _Self & D.127873;
  difference_type __len;
  difference_type __llen;
  struct Credit * * __lend;
  difference_type __rlen;
  struct Credit * * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  const difference_type __offset;
  struct _Self & D.127843;
  struct _Self __tmp;
  struct _Deque_iterator D.127827;
  struct _Deque_iterator D.127826;
  struct _Deque_iterator D.127825;
  struct _Deque_iterator D.127824;
  const difference_type __offset;
  struct _Self & D.127814;
  const difference_type __offset;
  struct _Self & D.127807;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.127762;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127737;
  struct _Deque_iterator D.127736;
  struct _Deque_iterator D.127735;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127717;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.127703;
  struct _Deque_iterator D.127702;
  struct _Deque_iterator D.127701;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.127700;
  struct _Deque_iterator D.127699;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  const difference_type __offset;
  struct _Self & D.127677;
  struct _Self __tmp;
  struct _Deque_iterator D.127663;
  struct _Deque_iterator D.127662;
  struct _Deque_iterator D.127661;
  struct _Deque_iterator D.127660;
  struct _Self __tmp;
  const difference_type __offset;
  struct _Self & D.127641;
  const difference_type __offset;
  struct _Self & D.127634;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.77007;
  struct _Deque_iterator D.77001;
  struct _Deque_iterator D.77002;
  struct _Deque_iterator D.77003;
  struct _Deque_iterator D.76988;
  struct _Deque_iterator D.76982;
  struct _Deque_iterator D.76983;
  struct _Deque_iterator D.76984;
  struct _Deque_iterator D.76970;
  struct _Deque_iterator D.76971;
  struct _Deque_iterator D.76972;
  struct _Self D.76967;
  struct _Deque_iterator D.76960;
  struct _Deque_iterator D.76952;
  struct _Deque_iterator D.76953;
  struct _Deque_iterator D.76956;
  struct _Self D.76936;
  struct _Deque_iterator D.76932;
  struct _Deque_iterator D.76933;
  struct _Deque_iterator D.76934;
  struct _Deque_iterator D.76920;
  struct _Deque_iterator D.76921;
  struct _Deque_iterator D.76922;
  struct _Self D.76912;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.201_10;
  struct Credit * * _27;
  struct Credit * * _28;
  struct Credit * * _29;
  long int _38;
  struct Credit * * _42;
  struct Credit * * _48;
  struct Credit * * _57;
  long int _62;
  struct Credit * * _71;
  struct Credit * * _75;
  struct Credit * * * _80;
  struct Credit * * _82;
  struct Credit * * _88;
  long int _93;
  long int _94;
  struct Credit * * _95;
  long int _96;
  struct Credit * * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  struct Credit * * * _104;
  long int _105;
  struct Credit * * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  struct Credit * * _112;
  long int _113;
  struct Credit * * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  struct Credit * * _119;
  long int _120;
  struct Credit * * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  struct Credit * * _133;
  struct Credit * * _134;
  struct Credit * * * _135;
  struct Credit * * _136;
  struct Credit * * _137;
  struct Credit * * * _138;
  struct Credit * * const pretmp_143;
  struct Credit * * const prephitmp_144;
  struct Credit * * _145;
  struct Credit * * _146;
  struct Credit * * * _147;
  struct Credit * * _148;
  struct Credit * * _149;
  struct Credit * * * _150;
  struct Credit * * _157;
  struct Credit * * _161;
  struct Credit * * * _162;
  struct Credit * * _172;
  struct Credit * * _173;
  struct Credit * * _174;
  struct Credit * * * _175;
  struct Credit * * _176;
  struct Credit * * _177;
  struct Credit * * * _178;
  struct Credit * * _179;
  struct Credit * * _180;
  struct Credit * * * _181;
  struct Credit * * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.188_284;
  long int _289;
  long unsigned int __n.184_303;
  long unsigned int _304;
  long int iftmp.185_306;
  long unsigned int _308;
  long unsigned int _309;
  long int _310;
  long int iftmp.185_311;
  long int iftmp.185_313;
  long unsigned int __node_offset.187_314;
  long unsigned int _315;
  long int _319;
  long int _320;
  long unsigned int _321;
  long unsigned int _322;
  long unsigned int _333;
  long int iftmp.185_335;
  long unsigned int _337;
  long unsigned int _338;
  long int _339;
  long int iftmp.185_340;
  long int iftmp.185_342;
  long unsigned int __node_offset.187_343;
  long unsigned int _344;
  long int _348;
  long int _349;
  long unsigned int _350;
  long unsigned int _351;
  struct Credit * * _353;
  long int pretmp_359;
  long int prephitmp_360;
  struct Credit * * const pretmp_361;
  struct Credit * * const prephitmp_362;
  struct Credit * * _374;
  struct Credit * * _375;
  struct Credit * * * _376;
  struct _Self & _377;
  struct Credit * * _378;
  struct Credit * * _379;
  struct Credit * * _380;
  struct Credit * * * _381;
  long int _382;
  long int _384;
  long int _385;
  long int _386;
  long unsigned int __n.184_389;
  long unsigned int _390;
  long int iftmp.185_392;
  long unsigned int _394;
  long unsigned int _395;
  long int _396;
  long int iftmp.185_397;
  long int iftmp.185_399;
  long unsigned int __node_offset.187_400;
  long unsigned int _401;
  long int _405;
  long int _406;
  long unsigned int _407;
  long unsigned int _408;
  struct Credit * * _422;
  struct Credit * * _424;
  struct Credit * * * _425;
  long int _454;
  long int _456;
  long int _457;
  long int _458;
  long int _459;
  long int _460;
  long int _462;
  unsigned long _463;
  long int _464;
  long int _465;
  long int _466;
  long int _467;
  unsigned long _468;
  long int _469;
  unsigned long _470;
  long int _471;
  long int _472;
  long int _473;
  struct Credit * _478;
  unsigned long _479;
  unsigned long _482;
  struct Credit * * _483;
  struct Credit * * * _495;
  struct Credit * * _496;
  struct Credit * * _497;
  long int __len.205_498;
  long int _502;
  long int _508;
  unsigned long _509;
  unsigned long _510;
  long int _511;
  long int _512;
  long int _513;
  long unsigned int _515;
  long int __n.199_516;
  unsigned long _526;
  long unsigned int _535;
  long int iftmp.185_537;
  long unsigned int _539;
  long unsigned int _540;
  long int _541;
  long int iftmp.185_542;
  long int iftmp.185_544;
  long unsigned int __node_offset.187_545;
  long unsigned int _546;
  long int _550;
  long int _551;
  long unsigned int _552;
  long unsigned int _553;
  long unsigned int __n.184_563;
  long unsigned int _564;
  long int iftmp.185_566;
  long unsigned int _568;
  long unsigned int _569;
  long int _570;
  long int iftmp.185_571;
  long int iftmp.185_573;
  long unsigned int __node_offset.187_574;
  long unsigned int _575;
  long int _579;
  long int _580;
  long unsigned int _581;
  long unsigned int _582;
  long int _599;
  long int pretmp_601;
  long int prephitmp_602;
  long int _605;
  long int _607;
  long int _608;
  long int _609;
  long unsigned int __n.184_612;
  long unsigned int _613;
  long int iftmp.185_615;
  long unsigned int _617;
  long unsigned int _618;
  long int _619;
  long int iftmp.185_620;
  long int iftmp.185_622;
  long unsigned int __node_offset.187_623;
  long unsigned int _624;
  long int _628;
  long int _629;
  long unsigned int _630;
  long unsigned int _631;
  long int _634;
  long int _636;
  long int _637;
  long int _638;
  long int _639;
  long int _640;
  long int _642;
  long int _645;
  long int _646;
  long int _647;
  long int _649;
  long int _651;
  long int _652;
  long int _653;
  long int pretmp_655;
  long int _657;
  long int pretmp_658;
  long int _659;
  long int _660;
  long int _663;
  long int _665;
  long int _666;
  struct Credit * * _669;
  struct Credit * * _672;
  long unsigned int __clen.214_680;
  long unsigned int _681;
  sizetype _682;
  struct Credit * * _684;
  long int _686;
  struct Credit * * const prephitmp_691;
  struct Credit * * const pretmp_693;
  struct Credit * * const prephitmp_694;
  struct Credit * * const pretmp_695;
  struct Credit * * const prephitmp_696;
  struct Credit * * const pretmp_697;
  long unsigned int __n.184_700;
  long unsigned int _701;
  struct Credit * * _702;
  long int iftmp.185_703;
  long unsigned int _705;
  long unsigned int _706;
  long int _707;
  long int iftmp.185_708;
  long int pretmp_709;
  long int iftmp.185_710;
  long unsigned int __node_offset.187_711;
  long unsigned int _712;
  struct Credit * * * _713;
  struct Credit * * _714;
  long int _716;
  long int _717;
  long unsigned int _718;
  long unsigned int _719;
  struct Credit * * _720;
  long unsigned int __n.171_729;
  long unsigned int _730;
  long int iftmp.172_732;
  struct Credit * * const prephitmp_733;
  long unsigned int _734;
  long unsigned int _735;
  long int _736;
  long int iftmp.172_737;
  struct Credit * * * const pretmp_738;
  long int iftmp.172_739;
  long unsigned int __node_offset.174_740;
  long unsigned int _741;
  long int _745;
  long int _746;
  long unsigned int _747;
  long unsigned int _748;
  long int __first.217_751;
  long int _752;
  long unsigned int _754;
  sizetype _755;
  struct Credit * * _756;
  long int _804;
  long int _806;
  long int _807;
  long int _808;
  long int _809;
  long int _810;
  long int _812;
  long int _814;
  long int _815;
  long int _816;
  long int _817;
  long int _819;
  long int _821;
  long int _822;
  long int _823;
  struct Credit * * const prephitmp_826;
  struct Credit * * * const pretmp_827;
  struct Credit * _828;
  long int pretmp_831;
  struct Credit * * _833;
  long int pretmp_837;
  long int pretmp_839;
  struct Credit * * const pretmp_840;
  struct Credit * * * _845;
  struct Credit * * _846;
  struct Credit * * _847;
  long int _851;
  long int pretmp_904;
  long int prephitmp_905;
  struct Credit * * const pretmp_966;
  struct Credit * * const prephitmp_967;
  struct Credit * * const pretmp_972;
  struct Credit * * * const prephitmp_995;
  long int pretmp_997;
  struct Credit * * * const prephitmp_1005;
  long int prephitmp_1101;
  struct Credit * * * const prephitmp_1106;
  struct Credit * * * const pretmp_1107;

  <bb 2>:
  # DEBUG D#2193 => &this_4(D)->D.62618._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#2193
  # DEBUG __size => 8
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 64;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 8;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 8;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#404 => &MEM[(const struct deque *)this_4(D)].D.62618._M_impl._M_start
  # DEBUG D#405 => &MEM[(const struct deque *)this_4(D)].D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 64;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 8;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.201_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.201_10)
    goto <bb 3>;
  else
    goto <bb 29>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.62618._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 8;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_693 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_695 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_697 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_738 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  pretmp_997 = (long int) pretmp_693;
  pretmp_904 = (long int) pretmp_695;
  pretmp_655 = pretmp_997 - pretmp_904;
  pretmp_709 = pretmp_655 /[ex] 8;

  <bb 5>:
  # prephitmp_694 = PHI <_121(3), pretmp_693(4)>
  # prephitmp_696 = PHI <_278(3), pretmp_695(4)>
  # prephitmp_733 = PHI <_119(3), pretmp_697(4)>
  # prephitmp_995 = PHI <_106(3), pretmp_738(4)>
  # prephitmp_905 = PHI <_281(3), pretmp_709(4)>
  __n.188_284 = (long int) __n_11(D);
  # DEBUG D#2885 => &this_4(D)->D.62618._M_impl._M_start
  # DEBUG this => D#2885
  # DEBUG __n => __n.188_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#2885
  # DEBUG D#2915 => MEM[(const struct iterator &)this_4(D) + 16]._M_cur
  # DEBUG D#2914 => MEM[(const struct iterator &)this_4(D) + 16]._M_first
  # DEBUG __tmp$_M_first => D#2914
  # DEBUG D#2913 => MEM[(const struct iterator &)this_4(D) + 16]._M_last
  # DEBUG __tmp$_M_last => D#2913
  # DEBUG D#2912 => MEM[(const struct iterator &)this_4(D) + 16]._M_node
  # DEBUG __tmp$_M_node => D#2912
  # DEBUG this => &__tmp
  # DEBUG __n => __n.188_284
  _289 = -__n.188_284;
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  __offset_301 = prephitmp_905 - __n.188_284;
  # DEBUG __offset => __offset_301
  # DEBUG __size => 8
  _510 = (unsigned long) __offset_301;
  if (_510 <= 63)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 6>:
  # DEBUG __size => 8
  iftmp.185_306 = __offset_301 >> 6;
  goto <bb 8>;

  <bb 7>:
  _308 = ~_510;
  # DEBUG __size => 8
  _309 = _308 >> 6;
  _310 = (long int) _309;
  iftmp.185_311 = ~_310;

  <bb 8>:
  # iftmp.185_313 = PHI <iftmp.185_306(6), iftmp.185_311(7)>
  # DEBUG __node_offset => iftmp.185_313
  __node_offset.187_314 = (long unsigned int) iftmp.185_313;
  _315 = __node_offset.187_314 * 8;
  __new_start$_M_node_316 = prephitmp_995 + _315;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_start$_M_node_316
  # DEBUG __tmp$_M_node => __new_start$_M_node_316
  __new_start$_M_first_317 = *__new_start$_M_node_316;
  # DEBUG __tmp$_M_first => __new_start$_M_first_317
  # DEBUG __size => 8
  __new_start$_M_last_318 = __new_start$_M_first_317 + 512;
  # DEBUG __tmp$_M_last => __new_start$_M_last_318
  # DEBUG __size => 8
  _319 = iftmp.185_313 * 64;
  _320 = __offset_301 - _319;
  _321 = (long unsigned int) _320;
  _322 = _321 * 8;
  __new_start$_M_cur_323 = __new_start$_M_first_317 + _322;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_323

  <bb 9>:
  # __new_start$_M_cur_1027 = PHI <__new_start$_M_cur_305(74), __new_start$_M_cur_323(8)>
  # __new_start$_M_first_929 = PHI <prephitmp_696(74), __new_start$_M_first_317(8)>
  # __new_start$_M_last_888 = PHI <prephitmp_733(74), __new_start$_M_last_318(8)>
  # __new_start$_M_node_873 = PHI <prephitmp_995(74), __new_start$_M_node_316(8)>
  # DEBUG __tmp$_M_node => __new_start$_M_node_873
  # DEBUG __tmp$_M_last => __new_start$_M_last_888
  # DEBUG __tmp$_M_first => __new_start$_M_first_929
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_1027
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_1027
  # DEBUG __new_start$_M_first => __new_start$_M_first_929
  # DEBUG __new_start$_M_last => __new_start$_M_last_888
  # DEBUG __new_start$_M_node => __new_start$_M_node_873
  __tmp ={v} {CLOBBER};
  # DEBUG D#2194 => &this_4(D)->D.62618._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#2194
  # DEBUG __old_start$_M_cur => D#2915
  # DEBUG __old_start$_M_first => D#2914
  # DEBUG __old_start$_M_last => D#2913
  # DEBUG __old_start$_M_node => D#2912
  # DEBUG D#2886 => &this_4(D)->D.62618._M_impl._M_start
  # DEBUG this => D#2886
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#2886
  # DEBUG __tmp$_M_first => D#2914
  # DEBUG __tmp$_M_last => D#2913
  # DEBUG __tmp$_M_node => D#2912
  # DEBUG this => &__tmp
  # DEBUG __n => _125
  __offset_330 = _125 + prephitmp_905;
  # DEBUG __offset => __offset_330
  # DEBUG __size => 8
  _526 = (unsigned long) __offset_330;
  if (_526 <= 63)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 10>:
  # DEBUG __size => 8
  iftmp.185_335 = __offset_330 >> 6;
  goto <bb 12>;

  <bb 11>:
  _337 = ~_526;
  # DEBUG __size => 8
  _338 = _337 >> 6;
  _339 = (long int) _338;
  iftmp.185_340 = ~_339;

  <bb 12>:
  # iftmp.185_342 = PHI <iftmp.185_335(10), iftmp.185_340(11)>
  # DEBUG __node_offset => iftmp.185_342
  __node_offset.187_343 = (long unsigned int) iftmp.185_342;
  _344 = __node_offset.187_343 * 8;
  SR.4652_345 = prephitmp_995 + _344;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.4652_345
  # DEBUG __tmp$_M_node => SR.4652_345
  SR.4650_346 = *SR.4652_345;
  # DEBUG __tmp$_M_first => SR.4650_346
  # DEBUG __size => 8
  SR.4651_347 = SR.4650_346 + 512;
  # DEBUG __tmp$_M_last => SR.4651_347
  # DEBUG __size => 8
  _348 = iftmp.185_342 * 64;
  _349 = __offset_330 - _348;
  _350 = (long unsigned int) _349;
  _351 = _350 * 8;
  SR.4649_352 = SR.4650_346 + _351;
  # DEBUG __tmp$_M_cur => SR.4649_352

  <bb 13>:
  # SR.4649_1095 = PHI <SR.4649_334(76), SR.4649_352(12)>
  # SR.4650_1089 = PHI <prephitmp_696(76), SR.4650_346(12)>
  # SR.4651_1057 = PHI <prephitmp_733(76), SR.4651_347(12)>
  # SR.4652_1042 = PHI <prephitmp_995(76), SR.4652_345(12)>
  # DEBUG __tmp$_M_node => SR.4652_1042
  # DEBUG __tmp$_M_last => SR.4651_1057
  # DEBUG __tmp$_M_first => SR.4650_1089
  # DEBUG __tmp$_M_cur => SR.4649_1095
  # DEBUG this => &D.76912
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.4649_1095;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.4650_1089;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.4651_1057;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.4652_1042;
  if (_125 >= __n.188_284)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 14>:
  # DEBUG this => D#2886
  # DEBUG __n => __n.188_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#2886
  _29 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp._M_cur = _29;
  _374 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  __tmp._M_first = _374;
  _375 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  __tmp._M_last = _375;
  _376 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  __tmp._M_node = _376;
  _377 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, __n.188_284);
  # DEBUG this => &__start_n
  # DEBUG __x => _377
  _378 = MEM[(const struct iterator &)_377]._M_cur;
  _379 = MEM[(const struct iterator &)_377]._M_first;
  _380 = MEM[(const struct iterator &)_377]._M_last;
  _381 = MEM[(const struct iterator &)_377]._M_node;
  __tmp ={v} {CLOBBER};
  # DEBUG D#2195 => &this_4(D)->D.62618
  # DEBUG this => D#2195
  # DEBUG this => &D.76922
  # DEBUG __x => &__new_start
  D.76922._M_cur = __new_start$_M_cur_1027;
  D.76922._M_first = __new_start$_M_first_929;
  D.76922._M_last = __new_start$_M_last_888;
  D.76922._M_node = __new_start$_M_node_873;
  # DEBUG this => &D.76921
  # DEBUG __x => &__start_n
  D.76921._M_cur = _378;
  D.76921._M_first = _379;
  D.76921._M_last = _380;
  D.76921._M_node = _381;
  # DEBUG D#2196 => &this_4(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.76920
  # DEBUG __x => D#2196
  _27 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  D.76920._M_cur = _27;
  _136 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  D.76920._M_first = _136;
  _137 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  D.76920._M_last = _137;
  _138 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  D.76920._M_node = _138;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.488 (&D.76920, &D.76921, &D.76922);
  D.76920 ={v} {CLOBBER};
  D.76921 ={v} {CLOBBER};
  D.76922 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_1027;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_929;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_888;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_873;
  # DEBUG this => &D.76934
  # DEBUG __x => &__old_start
  # DEBUG this => &D.76933
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.76932
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.76932
  # DEBUG __last => &D.76933
  # DEBUG __result => &D.76934
  # DEBUG this => &D.127663
  # DEBUG __x => &D.76934
  D.127663._M_cur = prephitmp_694;
  D.127663._M_first = prephitmp_696;
  D.127663._M_last = prephitmp_733;
  D.127663._M_node = prephitmp_995;
  # DEBUG this => &D.127662
  # DEBUG __x => &D.76933
  D.127662._M_cur = _28;
  D.127662._M_first = _133;
  D.127662._M_last = _134;
  D.127662._M_node = _135;
  # DEBUG this => &D.127661
  # DEBUG __x => &D.76932
  D.127661._M_cur = _378;
  D.127661._M_first = _379;
  D.127661._M_last = _380;
  D.127661._M_node = _381;
  D.127660 = std::copy<Credit*> (D.127661, D.127662, &D.127663); [return slot optimization]
  D.127661 ={v} {CLOBBER};
  D.127662 ={v} {CLOBBER};
  D.127663 ={v} {CLOBBER};
  D.76932 ={v} {CLOBBER};
  D.76933 ={v} {CLOBBER};
  D.76934 ={v} {CLOBBER};
  # DEBUG this => __pos_6(D)
  # DEBUG __n => __n.188_284
  # DEBUG this => &__tmp
  # DEBUG __x => __pos_6(D)
  _353 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  __tmp$_M_first_354 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  # DEBUG __tmp$_M_first => __tmp$_M_first_354
  __tmp$_M_last_355 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  # DEBUG __tmp$_M_last => __tmp$_M_last_355
  __tmp$_M_node_356 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __tmp$_M_node => __tmp$_M_node_356
  # DEBUG this => &__tmp
  # DEBUG __n => __n.188_284
  # DEBUG this => &__tmp
  # DEBUG __n => _289
  _382 = (long int) _353;
  _384 = (long int) __tmp$_M_first_354;
  _385 = _382 - _384;
  _386 = _385 /[ex] 8;
  __offset_387 = _386 - __n.188_284;
  # DEBUG __offset => __offset_387
  # DEBUG __size => 8
  _482 = (unsigned long) __offset_387;
  if (_482 <= 63)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 15>:
  # DEBUG __size => 8
  iftmp.185_392 = __offset_387 >> 6;
  goto <bb 17>;

  <bb 16>:
  _394 = ~_482;
  # DEBUG __size => 8
  _395 = _394 >> 6;
  _396 = (long int) _395;
  iftmp.185_397 = ~_396;

  <bb 17>:
  # iftmp.185_399 = PHI <iftmp.185_392(15), iftmp.185_397(16)>
  # DEBUG __node_offset => iftmp.185_399
  __node_offset.187_400 = (long unsigned int) iftmp.185_399;
  _401 = __node_offset.187_400 * 8;
  __tmp$_M_node_402 = __tmp$_M_node_356 + _401;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_402
  # DEBUG __tmp$_M_node => __tmp$_M_node_402
  __tmp$_M_first_403 = *__tmp$_M_node_402;
  # DEBUG __tmp$_M_first => __tmp$_M_first_403
  # DEBUG __size => 8
  __tmp$_M_last_404 = __tmp$_M_first_403 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_404
  # DEBUG __size => 8
  _405 = iftmp.185_399 * 64;
  _406 = __offset_387 - _405;
  _407 = (long unsigned int) _406;
  _408 = _407 * 8;
  __tmp$_M_cur_409 = __tmp$_M_first_403 + _408;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_409

  <bb 18>:
  # __tmp$_M_cur_92 = PHI <__tmp$_M_cur_391(78), __tmp$_M_cur_409(17)>
  # __tmp$_M_first_87 = PHI <__tmp$_M_first_354(78), __tmp$_M_first_403(17)>
  # __tmp$_M_last_1168 = PHI <__tmp$_M_last_355(78), __tmp$_M_last_404(17)>
  # __tmp$_M_node_1167 = PHI <__tmp$_M_node_356(78), __tmp$_M_node_402(17)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_1167
  # DEBUG __tmp$_M_last => __tmp$_M_last_1168
  # DEBUG __tmp$_M_first => __tmp$_M_first_87
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_92
  # DEBUG this => &D.76936
  # DEBUG __x => NULL
  D.76936._M_cur = __tmp$_M_cur_92;
  D.76936._M_first = __tmp$_M_first_87;
  D.76936._M_last = __tmp$_M_last_1168;
  D.76936._M_node = __tmp$_M_node_1167;
  __tmp ={v} {CLOBBER};
  std::copy<Credit*> (__first, __last, &D.76936);
  D.76936 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 28>;

  <bb 19>:
  __mid = __first;
  _38 = __n.188_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#2064 => &__mid
  # DEBUG D.114515 => D#2064
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>::operator+= (&__mid, _38);
  # DEBUG D#2197 => &this_4(D)->D.62618
  # DEBUG this => D#2197
  # DEBUG D#2890 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.76956
  # DEBUG __x => &__new_start
  # DEBUG this => &D.76953
  # DEBUG __x => __pos_6(D)
  _42 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _148 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _149 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _150 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG D#2198 => &this_4(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.76952
  # DEBUG __x => D#2198
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _145 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.76952
  # DEBUG __last1 => &D.76953
  __first$_M_cur_932 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first2$_M_cur => __first$_M_cur_932
  # DEBUG D#2905 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first2$_M_first => D#2905
  __first$_M_last_930 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first2$_M_last => __first$_M_last_930
  __first$_M_node_928 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first2$_M_node => __first$_M_node_928
  __last_927 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __last2$_M_cur => __last_927
  __last$8_926 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __last2$_M_first => __last$8_926
  # DEBUG D#2904 => MEM[(struct _Deque_iterator *)&__mid + 16B]
  # DEBUG __last2$_M_last => D#2904
  __last$24_17 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __last2$_M_node => __last$24_17
  # DEBUG __result => &D.76956
  # DEBUG __alloc => D#2890
  # DEBUG this => &D.127703
  # DEBUG __x => &D.76956
  D.127703._M_cur = __new_start$_M_cur_1027;
  D.127703._M_first = __new_start$_M_first_929;
  D.127703._M_last = __new_start$_M_last_888;
  D.127703._M_node = __new_start$_M_node_873;
  # DEBUG this => &D.127702
  # DEBUG __x => &D.76953
  D.127702._M_cur = _42;
  D.127702._M_first = _148;
  D.127702._M_last = _149;
  D.127702._M_node = _150;
  # DEBUG this => &D.127701
  # DEBUG __x => &D.76952
  D.127701._M_cur = _48;
  D.127701._M_first = _145;
  D.127701._M_last = _146;
  D.127701._M_node = _147;
  # DEBUG D#2192 => D#2890
  __mid = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.488 (&D.127701, &D.127702, &D.127703); [return slot optimization]
  D.127701 ={v} {CLOBBER};
  D.127702 ={v} {CLOBBER};
  D.127703 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  _422 = __mid._M_cur;
  _424 = __mid._M_last;
  _425 = __mid._M_node;
  # DEBUG D#1545 => D#2890
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#2905
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_928
  # DEBUG __last$_M_cur => __last_927
  # DEBUG __last$_M_first => __last$8_926
  # DEBUG __last$_M_last => D#2904
  # DEBUG __last$_M_node => __last$24_17
  # DEBUG __result => NULL
  # DEBUG D.127693 => D#1545
  # DEBUG this => &D.127700
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#2905
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_928
  # DEBUG __last$_M_cur => __last_927
  # DEBUG __last$_M_first => __last$8_926
  # DEBUG __last$_M_last => D#2904
  # DEBUG __last$_M_node => __last$24_17
  # DEBUG __result => &D.127700
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.127700
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#2905
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_928
  # DEBUG __last$_M_cur => __last_927
  # DEBUG __last$_M_first => __last$8_926
  # DEBUG __last$_M_last => D#2904
  # DEBUG __last$_M_node => __last$24_17
  # DEBUG __result => NULL
  # DEBUG this => &D.127717
  # DEBUG __x => NULL
  # DEBUG __first => __first$_M_cur_932
  # DEBUG __first$8 => D#2905
  # DEBUG __first$16 => __first$_M_last_930
  # DEBUG __first$24 => __first$_M_node_928
  # DEBUG __last => __last_927
  # DEBUG __last$8 => __last$8_926
  # DEBUG __last$_M_last => D#2904
  # DEBUG __last$24 => __last$24_17
  # DEBUG __result => &D.127717
  # DEBUG this => &D.127737
  # DEBUG __x => &D.127717
  # DEBUG __it => __last_927
  # DEBUG __it$8 => __last$8_926
  # DEBUG D#2889 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#2889
  # DEBUG __it$24 => __last$24_17
  # DEBUG __it$_M_cur => __last_927
  # DEBUG __it$_M_first => __last$8_926
  # DEBUG __it$_M_last => D#2889
  # DEBUG __it$_M_node => __last$24_17
  # DEBUG __it => __first$_M_cur_932
  # DEBUG __it$8 => D#2905
  # DEBUG __it$16 => __first$_M_last_930
  # DEBUG __it$24 => __first$_M_node_928
  # DEBUG __it$_M_cur => __first$_M_cur_932
  # DEBUG __it$_M_first => D#2905
  # DEBUG __it$_M_last => __first$_M_last_930
  # DEBUG __it$_M_node => __first$_M_node_928
  # DEBUG __result => &D.127737
  # DEBUG this => NULL
  # DEBUG __x => &D.127737
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_927
  # DEBUG __it$8 => __last$8_926
  # DEBUG __it$16 => D#2889
  # DEBUG __it$24 => __last$24_17
  # DEBUG __it$_M_cur => __last_927
  # DEBUG __it$_M_first => __last$8_926
  # DEBUG __it$_M_last => D#2889
  # DEBUG __it$_M_node => __last$24_17
  # DEBUG __it => __first$_M_cur_932
  # DEBUG __it$8 => D#2905
  # DEBUG __it$16 => __first$_M_last_930
  # DEBUG __it$24 => __first$_M_node_928
  # DEBUG __it$_M_cur => __first$_M_cur_932
  # DEBUG __it$_M_first => D#2905
  # DEBUG __it$_M_last => __first$_M_last_930
  # DEBUG __it$_M_node => __first$_M_node_928
  # DEBUG __first => __first$_M_cur_932
  # DEBUG __first$8 => D#2905
  # DEBUG __first$16 => __first$_M_last_930
  # DEBUG __first$24 => __first$_M_node_928
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.127762
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_932
  # DEBUG __first$_M_first => D#2905
  # DEBUG __first$_M_last => __first$_M_last_930
  # DEBUG __first$_M_node => __first$_M_node_928
  # DEBUG __result => &D.127762
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _454 = (long int) __last$24_17;
  _456 = (long int) __first$_M_node_928;
  _457 = _454 - _456;
  _458 = _457 /[ex] 8;
  _459 = _458 + -1;
  _460 = _459 * 64;
  _462 = (long int) __last_927;
  _464 = (long int) __last$8_926;
  _465 = _462 - _464;
  _466 = _465 /[ex] 8;
  _467 = _460 + _466;
  _469 = (long int) __first$_M_last_930;
  _471 = (long int) __first$_M_cur_932;
  _472 = _469 - _471;
  _473 = _472 /[ex] 8;
  __n_474 = _467 + _473;
  # DEBUG __n => __n_474
  # DEBUG __n => __n_474
  if (__n_474 <= 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG this => &D.127699
  # DEBUG __x => &D.127762
  D.127762 ={v} {CLOBBER};
  D.127737 ={v} {CLOBBER};
  D.127717 ={v} {CLOBBER};
  D.127700 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.76952 ={v} {CLOBBER};
  D.76953 ={v} {CLOBBER};
  D.76956 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_1027;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_929;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_888;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_873;
  # DEBUG this => &D.76960
  # DEBUG __x => &__old_start
  D.76960._M_cur = prephitmp_694;
  D.76960._M_first = prephitmp_696;
  D.76960._M_last = prephitmp_733;
  D.76960._M_node = prephitmp_995;
  std::copy<Credit*> (__mid, __last, &D.76960);
  D.76960 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 28>;

  <bb 21>:

  <bb 22>:
  # __n_499 = PHI <__n_474(21), __n_485(27)>
  # SR.4716_1166 = PHI <_422(21), SR.4716_1165(27)>
  # SR.4717_1164 = PHI <_424(21), SR.4717_1163(27)>
  # SR.4718_1162 = PHI <_425(21), SR.4718_1160(27)>
  # __first$_M_cur_1159 = PHI <__first$_M_cur_932(21), __first$_M_cur_1156(27)>
  # __first$_M_last_1155 = PHI <__first$_M_last_930(21), __first$_M_last_1154(27)>
  # __first$_M_node_1153 = PHI <__first$_M_node_928(21), __first$_M_node_1152(27)>
  # DEBUG __first$_M_node => __first$_M_node_1153
  # DEBUG __first$_M_last => __first$_M_last_1155
  # DEBUG __first$_M_cur => __first$_M_cur_1159
  # DEBUG __n => __n_499
  # DEBUG D#318 => &D.127762
  # DEBUG this => D#318
  # DEBUG D#1544 => &__first
  # DEBUG this => D#1544
  _478 = MEM[(struct Credit * const &)__first$_M_cur_1159];
  *SR.4716_1166 = _478;
  # DEBUG this => &__first
  __first$_M_cur_480 = __first$_M_cur_1159 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_480
  if (__first$_M_cur_480 == __first$_M_last_1155)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG this => &__first
  __first$_M_node_491 = __first$_M_node_1153 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_491
  # DEBUG __first$_M_node => __first$_M_node_491
  __first$_M_cur_492 = MEM[(struct Credit * * *)__first$_M_node_1153 + 8B];
  # DEBUG __size => 8
  __first$_M_last_493 = __first$_M_cur_492 + 512;
  # DEBUG __first$_M_last => __first$_M_last_493
  # DEBUG __first$_M_cur => __first$_M_cur_492

  <bb 24>:
  # __first$_M_cur_1156 = PHI <__first$_M_cur_480(22), __first$_M_cur_492(23)>
  # __first$_M_last_1154 = PHI <__first$_M_last_1155(22), __first$_M_last_493(23)>
  # __first$_M_node_1152 = PHI <__first$_M_node_1153(22), __first$_M_node_491(23)>
  # DEBUG __first$_M_node => __first$_M_node_1152
  # DEBUG __first$_M_last => __first$_M_last_1154
  # DEBUG __first$_M_cur => __first$_M_cur_1156
  # DEBUG this => &D.127762
  _483 = SR.4716_1166 + 8;
  if (_483 == SR.4717_1164)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG this => &D.127762
  _495 = SR.4718_1162 + 8;
  # DEBUG this => &D.127762
  # DEBUG __new_node => _495
  _496 = MEM[(struct Credit * * *)SR.4718_1162 + 8B];
  # DEBUG __size => 8
  _497 = _496 + 512;

  <bb 26>:
  # SR.4716_1165 = PHI <_483(24), _496(25)>
  # SR.4717_1163 = PHI <SR.4717_1164(24), _497(25)>
  # SR.4718_1160 = PHI <SR.4718_1162(24), _495(25)>
  __n_485 = __n_499 + -1;
  # DEBUG __n => __n_485
  # DEBUG __n => __n_485
  if (__n_485 <= 0)
    goto <bb 20>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 22>;

  <bb 28>:
  # DEBUG D#2896 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#2896
  # DEBUG D#2897 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#2897
  # DEBUG D#2898 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#2898
  # DEBUG D#2899 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#2899
  return;

  <bb 29>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.62618._M_impl._M_finish._M_last;
  _508 = (long int) _57;
  _511 = _508 - _96;
  _512 = _511 /[ex] 8;
  _513 = _512 + -1;
  __vacancies_514 = (const size_type) _513;
  # DEBUG __vacancies => __vacancies_514
  if (__n_11(D) > __vacancies_514)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  _515 = __n_11(D) - __vacancies_514;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_back (this_4(D), _515);
  pretmp_143 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_972 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_966 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_827 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  pretmp_831 = (long int) pretmp_143;
  pretmp_837 = (long int) pretmp_972;
  pretmp_839 = pretmp_831 - pretmp_837;
  pretmp_601 = pretmp_839 /[ex] 8;

  <bb 31>:
  # prephitmp_144 = PHI <_95(29), pretmp_143(30)>
  # prephitmp_967 = PHI <_97(29), pretmp_972(30)>
  # prephitmp_826 = PHI <_57(29), pretmp_966(30)>
  # prephitmp_1106 = PHI <_80(29), pretmp_827(30)>
  # prephitmp_602 = PHI <_100(29), pretmp_601(30)>
  __n.199_516 = (long int) __n_11(D);
  # DEBUG D#2887 => &this_4(D)->D.62618._M_impl._M_finish
  # DEBUG this => D#2887
  # DEBUG __n => __n.199_516
  # DEBUG this => &__tmp
  # DEBUG __x => D#2887
  # DEBUG D#2911 => MEM[(const struct iterator &)this_4(D) + 48]._M_cur
  # DEBUG D#2910 => MEM[(const struct iterator &)this_4(D) + 48]._M_first
  # DEBUG __tmp$_M_first => D#2910
  # DEBUG D#2909 => MEM[(const struct iterator &)this_4(D) + 48]._M_last
  # DEBUG __tmp$_M_last => D#2909
  # DEBUG D#2908 => MEM[(const struct iterator &)this_4(D) + 48]._M_node
  # DEBUG __tmp$_M_node => D#2908
  # DEBUG this => &__tmp
  # DEBUG __n => __n.199_516
  __offset_532 = __n.199_516 + prephitmp_602;
  # DEBUG __offset => __offset_532
  # DEBUG __size => 8
  _509 = (unsigned long) __offset_532;
  if (_509 <= 63)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 32>:
  # DEBUG __size => 8
  iftmp.185_537 = __offset_532 >> 6;
  goto <bb 34>;

  <bb 33>:
  _539 = ~_509;
  # DEBUG __size => 8
  _540 = _539 >> 6;
  _541 = (long int) _540;
  iftmp.185_542 = ~_541;

  <bb 34>:
  # iftmp.185_544 = PHI <iftmp.185_537(32), iftmp.185_542(33)>
  # DEBUG __node_offset => iftmp.185_544
  __node_offset.187_545 = (long unsigned int) iftmp.185_544;
  _546 = __node_offset.187_545 * 8;
  __new_finish$_M_node_547 = prephitmp_1106 + _546;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __new_finish$_M_node_547
  # DEBUG __tmp$_M_node => __new_finish$_M_node_547
  __new_finish$_M_first_548 = *__new_finish$_M_node_547;
  # DEBUG __tmp$_M_first => __new_finish$_M_first_548
  # DEBUG __size => 8
  __new_finish$_M_last_549 = __new_finish$_M_first_548 + 512;
  # DEBUG __tmp$_M_last => __new_finish$_M_last_549
  # DEBUG __size => 8
  _550 = iftmp.185_544 * 64;
  _551 = __offset_532 - _550;
  _552 = (long unsigned int) _551;
  _553 = _552 * 8;
  __new_finish$_M_cur_554 = __new_finish$_M_first_548 + _553;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_554

  <bb 35>:
  # __new_finish$_M_cur_1129 = PHI <__new_finish$_M_cur_536(80), __new_finish$_M_cur_554(34)>
  # __new_finish$_M_first_1128 = PHI <prephitmp_967(80), __new_finish$_M_first_548(34)>
  # __new_finish$_M_last_1123 = PHI <prephitmp_826(80), __new_finish$_M_last_549(34)>
  # __new_finish$_M_node_1122 = PHI <prephitmp_1106(80), __new_finish$_M_node_547(34)>
  # DEBUG __tmp$_M_node => __new_finish$_M_node_1122
  # DEBUG __tmp$_M_last => __new_finish$_M_last_1123
  # DEBUG __tmp$_M_first => __new_finish$_M_first_1128
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_1129
  # DEBUG this => &__new_finish
  # DEBUG __x => NULL
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_1129
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_1128
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_1123
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_1122
  __tmp ={v} {CLOBBER};
  # DEBUG D#2199 => &this_4(D)->D.62618._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#2199
  # DEBUG __old_finish$_M_cur => D#2911
  # DEBUG __old_finish$_M_first => D#2910
  # DEBUG __old_finish$_M_last => D#2909
  # DEBUG __old_finish$_M_node => D#2908
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#2888 => &this_4(D)->D.62618._M_impl._M_finish
  # DEBUG this => D#2888
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#2888
  # DEBUG __tmp$_M_first => D#2910
  # DEBUG __tmp$_M_last => D#2909
  # DEBUG __tmp$_M_node => D#2908
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __n => -__elemsafter_55
  __offset_561 = prephitmp_602 - __elemsafter_55;
  # DEBUG __offset => __offset_561
  # DEBUG __size => 8
  _479 = (unsigned long) __offset_561;
  if (_479 <= 63)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 36>:
  # DEBUG __size => 8
  iftmp.185_566 = __offset_561 >> 6;
  goto <bb 38>;

  <bb 37>:
  _568 = ~_479;
  # DEBUG __size => 8
  _569 = _568 >> 6;
  _570 = (long int) _569;
  iftmp.185_571 = ~_570;

  <bb 38>:
  # iftmp.185_573 = PHI <iftmp.185_566(36), iftmp.185_571(37)>
  # DEBUG __node_offset => iftmp.185_573
  __node_offset.187_574 = (long unsigned int) iftmp.185_573;
  _575 = __node_offset.187_574 * 8;
  SR.4660_576 = prephitmp_1106 + _575;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.4660_576
  # DEBUG __tmp$_M_node => SR.4660_576
  SR.4658_577 = *SR.4660_576;
  # DEBUG __tmp$_M_first => SR.4658_577
  # DEBUG __size => 8
  SR.4659_578 = SR.4658_577 + 512;
  # DEBUG __tmp$_M_last => SR.4659_578
  # DEBUG __size => 8
  _579 = iftmp.185_573 * 64;
  _580 = __offset_561 - _579;
  _581 = (long unsigned int) _580;
  _582 = _581 * 8;
  SR.4657_583 = SR.4658_577 + _582;
  # DEBUG __tmp$_M_cur => SR.4657_583

  <bb 39>:
  # SR.4657_1147 = PHI <SR.4657_565(82), SR.4657_583(38)>
  # SR.4658_1146 = PHI <prephitmp_967(82), SR.4658_577(38)>
  # SR.4659_1145 = PHI <prephitmp_826(82), SR.4659_578(38)>
  # SR.4660_1144 = PHI <prephitmp_1106(82), SR.4660_576(38)>
  # DEBUG __tmp$_M_node => SR.4660_1144
  # DEBUG __tmp$_M_last => SR.4659_1145
  # DEBUG __tmp$_M_first => SR.4658_1146
  # DEBUG __tmp$_M_cur => SR.4657_1147
  # DEBUG this => &D.76967
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.4657_1147;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.4658_1146;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.4659_1145;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.4660_1144;
  if (__elemsafter_55 > __n.199_516)
    goto <bb 40>;
  else
    goto <bb 64>;

  <bb 40>:
  # DEBUG this => D#2888
  # DEBUG __n => __n.199_516
  # DEBUG this => &__tmp
  # DEBUG __x => D#2888
  _71 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  SR.4731_596 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __tmp$_M_first => SR.4731_596
  SR.4732_597 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __tmp$_M_last => SR.4732_597
  SR.4733_598 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __tmp$_M_node => SR.4733_598
  # DEBUG this => &__tmp
  # DEBUG __n => __n.199_516
  # DEBUG this => &__tmp
  # DEBUG __n => -__n.199_516
  _605 = (long int) _71;
  _607 = (long int) SR.4731_596;
  _608 = _605 - _607;
  _609 = _608 /[ex] 8;
  __offset_610 = _609 - __n.199_516;
  # DEBUG __offset => __offset_610
  # DEBUG __size => 8
  _470 = (unsigned long) __offset_610;
  if (_470 <= 63)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 41>:
  # DEBUG __size => 8
  iftmp.185_615 = __offset_610 >> 6;
  goto <bb 43>;

  <bb 42>:
  _617 = ~_470;
  # DEBUG __size => 8
  _618 = _617 >> 6;
  _619 = (long int) _618;
  iftmp.185_620 = ~_619;

  <bb 43>:
  # iftmp.185_622 = PHI <iftmp.185_615(41), iftmp.185_620(42)>
  # DEBUG __node_offset => iftmp.185_622
  __node_offset.187_623 = (long unsigned int) iftmp.185_622;
  _624 = __node_offset.187_623 * 8;
  SR.4733_625 = SR.4733_598 + _624;
  # DEBUG this => &__tmp
  # DEBUG __new_node => SR.4733_625
  # DEBUG __tmp$_M_node => SR.4733_625
  SR.4731_626 = *SR.4733_625;
  # DEBUG __tmp$_M_first => SR.4731_626
  # DEBUG __size => 8
  SR.4732_627 = SR.4731_626 + 512;
  # DEBUG __tmp$_M_last => SR.4732_627
  # DEBUG __size => 8
  _628 = iftmp.185_622 * 64;
  _629 = __offset_610 - _628;
  _630 = (long unsigned int) _629;
  _631 = _630 * 8;
  SR.4730_632 = SR.4731_626 + _631;
  # DEBUG __tmp$_M_cur => SR.4730_632
  pretmp_359 = (long int) SR.4731_626;

  <bb 44>:
  # SR.4730_1097 = PHI <SR.4730_614(84), SR.4730_632(43)>
  # SR.4731_1096 = PHI <SR.4731_596(84), SR.4731_626(43)>
  # SR.4732_1093 = PHI <SR.4732_597(84), SR.4732_627(43)>
  # SR.4733_1091 = PHI <SR.4733_598(84), SR.4733_625(43)>
  # prephitmp_360 = PHI <_607(84), pretmp_359(43)>
  # DEBUG __tmp$_M_node => SR.4733_1091
  # DEBUG __tmp$_M_last => SR.4732_1093
  # DEBUG __tmp$_M_first => SR.4731_1096
  # DEBUG __tmp$_M_cur => SR.4730_1097
  # DEBUG this => &__finish_n
  # DEBUG __x => NULL
  __tmp ={v} {CLOBBER};
  # DEBUG D#2200 => &this_4(D)->D.62618
  # DEBUG this => D#2200
  # DEBUG D#2201 => &this_4(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.76972
  # DEBUG __x => D#2201
  D.76972._M_cur = _71;
  D.76972._M_first = SR.4731_596;
  D.76972._M_last = SR.4732_597;
  D.76972._M_node = SR.4733_598;
  # DEBUG D#2202 => &this_4(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.76971
  # DEBUG __x => D#2202
  D.76971._M_cur = _71;
  D.76971._M_first = SR.4731_596;
  D.76971._M_last = SR.4732_597;
  D.76971._M_node = SR.4733_598;
  # DEBUG this => &D.76970
  # DEBUG __x => &__finish_n
  D.76970._M_cur = SR.4730_1097;
  D.76970._M_first = SR.4731_1096;
  D.76970._M_last = SR.4732_1093;
  D.76970._M_node = SR.4733_1091;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.488 (&D.76970, &D.76971, &D.76972);
  D.76970 ={v} {CLOBBER};
  D.76971 ={v} {CLOBBER};
  D.76972 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_1129;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_1128;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_1123;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_1122;
  # DEBUG this => &D.76984
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.76983
  # DEBUG __x => &__finish_n
  # DEBUG this => &D.76982
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.76982
  # DEBUG __last => &D.76983
  # DEBUG __result => &D.76984
  # DEBUG this => &D.127827
  # DEBUG __x => &D.76984
  # DEBUG this => &D.127826
  # DEBUG __x => &D.76983
  # DEBUG this => &D.127825
  # DEBUG __x => &D.76982
  # DEBUG __last$_M_cur => SR.4730_1097
  # DEBUG __last$_M_first => SR.4731_1096
  # DEBUG __last$_M_last => SR.4732_1093
  # DEBUG __last$_M_node => SR.4733_1091
  # DEBUG __result => &D.127827
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _634 = (long int) SR.4733_1091;
  _636 = (long int) _162;
  _637 = _634 - _636;
  _638 = _637 /[ex] 8;
  _639 = _638 + -1;
  _640 = _639 * 64;
  _642 = (long int) SR.4730_1097;
  _645 = _642 - prephitmp_360;
  _646 = _645 /[ex] 8;
  _647 = _640 + _646;
  _649 = (long int) _161;
  _651 = (long int) _75;
  _652 = _649 - _651;
  _653 = _652 /[ex] 8;
  __len_654 = _647 + _653;
  # DEBUG __len => __len_654
  if (__len_654 <= 0)
    goto <bb 63>;
  else
    goto <bb 45>;

  <bb 45>:

  <bb 46>:
  # __len.205_498 = PHI <__len_654(45), __len_687(61)>
  # __rend_1121 = PHI <prephitmp_144(45), SR.4734_1120(61)>
  # SR.4735_1115 = PHI <prephitmp_967(45), SR.4735_1114(61)>
  # SR.4736_1110 = PHI <prephitmp_1106(45), SR.4736_1099(61)>
  # SR.4730_1090 = PHI <SR.4730_1097(45), SR.4730_1081(61)>
  # SR.4731_1075 = PHI <SR.4731_1096(45), SR.4731_1074(61)>
  # SR.4733_1073 = PHI <SR.4733_1091(45), SR.4733_1072(61)>
  # DEBUG __last$_M_node => SR.4733_1073
  # DEBUG __last$_M_first => SR.4731_1075
  # DEBUG __last$_M_cur => SR.4730_1090
  _657 = (long int) SR.4730_1090;
  _659 = (long int) SR.4731_1075;
  _660 = _657 - _659;
  __llen_661 = _660 /[ex] 8;
  # DEBUG __llen => __llen_661
  # DEBUG __lend => SR.4730_1090
  _663 = (long int) __rend_1121;
  _665 = (long int) SR.4735_1115;
  _666 = _663 - _665;
  __rlen_667 = _666 /[ex] 8;
  # DEBUG __rlen => __rlen_667
  # DEBUG __rend => __rend_1121
  if (__llen_661 == 0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG __size => 8
  # DEBUG __llen => 64
  _669 = MEM[(struct Credit * * *)SR.4733_1073 + -8B];
  SR.4730_670 = _669 + 512;
  # DEBUG __lend => SR.4730_670
  pretmp_658 = (long int) SR.4730_670;

  <bb 48>:
  # SR.4730_683 = PHI <SR.4730_1090(46), SR.4730_670(47)>
  # __llen_1108 = PHI <__llen_661(46), 64(47)>
  # prephitmp_1101 = PHI <_657(46), pretmp_658(47)>
  # DEBUG __llen => __llen_1108
  # DEBUG __lend => SR.4730_683
  if (__rlen_667 == 0)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  # DEBUG __size => 8
  # DEBUG __rlen => 64
  _672 = MEM[(struct Credit * * *)SR.4736_1110 + -8B];
  __rend_673 = _672 + 512;
  # DEBUG __rend => __rend_673

  <bb 50>:
  # __rend_685 = PHI <__rend_1121(48), __rend_673(49)>
  # __rlen_1103 = PHI <__rlen_667(48), 64(49)>
  # DEBUG __rlen => __rlen_1103
  # DEBUG __rend => __rend_685
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _851 = MIN_EXPR <__len.205_498, __llen_1108>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_455 = MIN_EXPR <_851, __rlen_1103>;
  # DEBUG __clen => D#2884
  __clen.214_680 = (long unsigned int) __clen_455;
  _681 = __clen.214_680 * 8;
  _682 = -_681;
  _684 = SR.4730_683 + _682;
  # DEBUG __first => _684
  # DEBUG __last => SR.4730_683
  # DEBUG __result => __rend_685
  # DEBUG __it => SR.4730_683
  # DEBUG __it => SR.4730_683
  # DEBUG __it => _684
  # DEBUG __it => _684
  # DEBUG __first => _684
  # DEBUG __last => SR.4730_683
  # DEBUG __result => __rend_685
  # DEBUG __it => __rend_685
  # DEBUG __it => __rend_685
  # DEBUG __it => SR.4730_683
  # DEBUG __it => SR.4730_683
  # DEBUG __it => _684
  # DEBUG __it => _684
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  __first.217_751 = (long int) _684;
  _752 = prephitmp_1101 - __first.217_751;
  _Num_753 = _752 /[ex] 8;
  # DEBUG _Num => _Num_753
  if (_Num_753 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  _754 = (long unsigned int) _752;
  _755 = -_754;
  _756 = __rend_685 + _755;
  __builtin_memmove (_756, _684, _754);

  <bb 52>:
  # DEBUG this => &__last
  # DEBUG __n => D#2884
  _686 = -__clen_455;
  # DEBUG this => &__last
  # DEBUG __n => _686
  __offset_727 = __llen_661 - __clen_455;
  # DEBUG __offset => __offset_727
  # DEBUG __size => 8
  _463 = (unsigned long) __offset_727;
  if (_463 <= 63)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 53>:
  # DEBUG __size => 8
  iftmp.172_732 = __offset_727 >> 6;
  goto <bb 55>;

  <bb 54>:
  _734 = ~_463;
  # DEBUG __size => 8
  _735 = _734 >> 6;
  _736 = (long int) _735;
  iftmp.172_737 = ~_736;

  <bb 55>:
  # iftmp.172_739 = PHI <iftmp.172_732(53), iftmp.172_737(54)>
  # DEBUG __node_offset => iftmp.172_739
  __node_offset.174_740 = (long unsigned int) iftmp.172_739;
  _741 = __node_offset.174_740 * 8;
  SR.4733_742 = SR.4733_1073 + _741;
  # DEBUG this => &__last
  # DEBUG __new_node => SR.4733_742
  # DEBUG __last$_M_node => SR.4733_742
  SR.4731_743 = *SR.4733_742;
  # DEBUG __last$_M_first => SR.4731_743
  # DEBUG __size => 8
  # DEBUG __size => 8
  _745 = iftmp.172_739 * 64;
  _746 = __offset_727 - _745;
  _747 = (long unsigned int) _746;
  _748 = _747 * 8;
  SR.4730_749 = SR.4731_743 + _748;
  # DEBUG __last$_M_cur => SR.4730_749

  <bb 56>:
  # SR.4730_1081 = PHI <SR.4730_731(86), SR.4730_749(55)>
  # SR.4731_1074 = PHI <SR.4731_1075(86), SR.4731_743(55)>
  # SR.4733_1072 = PHI <SR.4733_1073(86), SR.4733_742(55)>
  # DEBUG __last$_M_node => SR.4733_1072
  # DEBUG __last$_M_first => SR.4731_1074
  # DEBUG __last$_M_cur => SR.4730_1081
  # DEBUG this => &D.127827
  # DEBUG __n => D#2884
  # DEBUG this => &D.127827
  # DEBUG __n => _686
  __offset_698 = __rlen_667 - __clen_455;
  # DEBUG __offset => __offset_698
  # DEBUG __size => 8
  _468 = (unsigned long) __offset_698;
  if (_468 <= 63)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 57>:
  # DEBUG __size => 8
  iftmp.185_703 = __offset_698 >> 6;
  goto <bb 59>;

  <bb 58>:
  _705 = ~_468;
  # DEBUG __size => 8
  _706 = _705 >> 6;
  _707 = (long int) _706;
  iftmp.185_708 = ~_707;

  <bb 59>:
  # iftmp.185_710 = PHI <iftmp.185_703(57), iftmp.185_708(58)>
  # DEBUG __node_offset => iftmp.185_710
  __node_offset.187_711 = (long unsigned int) iftmp.185_710;
  _712 = __node_offset.187_711 * 8;
  _713 = SR.4736_1110 + _712;
  # DEBUG this => &D.127827
  # DEBUG __new_node => _713
  _714 = *_713;
  # DEBUG __size => 8
  # DEBUG __size => 8
  _716 = iftmp.185_710 * 64;
  _717 = __offset_698 - _716;
  _718 = (long unsigned int) _717;
  _719 = _718 * 8;
  _720 = _714 + _719;

  <bb 60>:
  # SR.4734_1120 = PHI <_702(88), _720(59)>
  # SR.4735_1114 = PHI <SR.4735_1115(88), _714(59)>
  # SR.4736_1099 = PHI <SR.4736_1110(88), _713(59)>
  __len_687 = __len.205_498 - __clen_455;
  # DEBUG __len => __len_687
  # DEBUG D#2893 => {CLOBBER}
  # DEBUG __llen => D#2893
  # DEBUG D#2894 => {CLOBBER}
  # DEBUG __rlen => D#2894
  if (__len_687 <= 0)
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:
  goto <bb 46>;

  <bb 62>:
  pretmp_361 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_840 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_1107 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 63>:
  # prephitmp_362 = PHI <pretmp_361(62), _75(44)>
  # prephitmp_691 = PHI <pretmp_840(62), _161(44)>
  # prephitmp_1005 = PHI <pretmp_1107(62), _162(44)>
  # DEBUG this => &D.127824
  # DEBUG __x => &D.127827
  # DEBUG D#2895 => {CLOBBER}
  # DEBUG __len => D#2895
  D.127825 ={v} {CLOBBER};
  D.127827 ={v} {CLOBBER};
  D.76982 ={v} {CLOBBER};
  D.76983 ={v} {CLOBBER};
  D.76984 ={v} {CLOBBER};
  # DEBUG this => &D.76988
  # DEBUG __x => __pos_6(D)
  D.76988._M_cur = prephitmp_362;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.76988._M_first = _157;
  D.76988._M_last = prephitmp_691;
  D.76988._M_node = prephitmp_1005;
  std::copy<Credit*> (__first, __last, &D.76988);
  D.76988 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 28>;

  <bb 64>:
  __mid = __first;
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#2064 => &__mid
  # DEBUG D.114515 => D#2064
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>::operator+= (&__mid, __elemsafter_55);
  # DEBUG D#2203 => &this_4(D)->D.62618
  # DEBUG this => D#2203
  # DEBUG D#2892 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#2204 => &this_4(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.77003
  # DEBUG __x => D#2204
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#2205 => &this_4(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.77002
  # DEBUG __x => D#2205
  # DEBUG this => &D.77001
  # DEBUG __x => __pos_6(D)
  _88 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _176 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _177 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _178 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  __first$_M_cur_198 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first1$_M_cur => __first$_M_cur_198
  # DEBUG D#2907 => MEM[(struct _Deque_iterator *)&__mid + 8B]
  # DEBUG __first1$_M_first => D#2907
  __first$_M_last_200 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first1$_M_last => __first$_M_last_200
  __first$_M_node_201 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first1$_M_node => __first$_M_node_201
  __last_202 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last_202
  __last$8_203 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last$8_203
  # DEBUG D#2906 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last1$_M_last => D#2906
  __last$24_205 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last$24_205
  # DEBUG __first2 => &D.77001
  # DEBUG __last2 => &D.77002
  # DEBUG __result => &D.77003
  # DEBUG __alloc => D#2892
  # DEBUG this => NULL
  # DEBUG __x => &D.77003
  # DEBUG D#1545 => D#2892
  # DEBUG __first$_M_cur => __first$_M_cur_198
  # DEBUG __first$_M_first => D#2907
  # DEBUG __first$_M_last => __first$_M_last_200
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __last$_M_cur => __last_202
  # DEBUG __last$_M_first => __last$8_203
  # DEBUG __last$_M_last => D#2906
  # DEBUG __last$_M_node => __last$24_205
  # DEBUG __result => NULL
  # DEBUG D.127908 => D#1545
  # DEBUG this => &D.127921
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_198
  # DEBUG __first$_M_first => D#2907
  # DEBUG __first$_M_last => __first$_M_last_200
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __last$_M_cur => __last_202
  # DEBUG __last$_M_first => __last$8_203
  # DEBUG __last$_M_last => D#2906
  # DEBUG __last$_M_node => __last$24_205
  # DEBUG __result => &D.127921
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.127921
  # DEBUG __first$_M_cur => __first$_M_cur_198
  # DEBUG __first$_M_first => D#2907
  # DEBUG __first$_M_last => __first$_M_last_200
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __last$_M_cur => __last_202
  # DEBUG __last$_M_first => __last$8_203
  # DEBUG __last$_M_last => D#2906
  # DEBUG __last$_M_node => __last$24_205
  # DEBUG __result => NULL
  # DEBUG this => &D.127938
  # DEBUG __x => NULL
  # DEBUG __first => __first$_M_cur_198
  # DEBUG __first$8 => D#2907
  # DEBUG __first$16 => __first$_M_last_200
  # DEBUG __first$24 => __first$_M_node_201
  # DEBUG __last => __last_202
  # DEBUG __last$8 => __last$8_203
  # DEBUG __last$_M_last => D#2906
  # DEBUG __last$24 => __last$24_205
  # DEBUG __result => &D.127938
  # DEBUG this => &D.127958
  # DEBUG __x => &D.127938
  # DEBUG __it => __last_202
  # DEBUG __it$8 => __last$8_203
  # DEBUG D#2891 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#2891
  # DEBUG __it$24 => __last$24_205
  # DEBUG __it$_M_cur => __last_202
  # DEBUG __it$_M_first => __last$8_203
  # DEBUG __it$_M_last => D#2891
  # DEBUG __it$_M_node => __last$24_205
  # DEBUG __it => __first$_M_cur_198
  # DEBUG __it$8 => D#2907
  # DEBUG __it$16 => __first$_M_last_200
  # DEBUG __it$24 => __first$_M_node_201
  # DEBUG __it$_M_cur => __first$_M_cur_198
  # DEBUG __it$_M_first => D#2907
  # DEBUG __it$_M_last => __first$_M_last_200
  # DEBUG __it$_M_node => __first$_M_node_201
  # DEBUG __result => &D.127958
  # DEBUG this => NULL
  # DEBUG __x => &D.127958
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_202
  # DEBUG __it$8 => __last$8_203
  # DEBUG __it$16 => D#2891
  # DEBUG __it$24 => __last$24_205
  # DEBUG __it$_M_cur => __last_202
  # DEBUG __it$_M_first => __last$8_203
  # DEBUG __it$_M_last => D#2891
  # DEBUG __it$_M_node => __last$24_205
  # DEBUG __it => __first$_M_cur_198
  # DEBUG __it$8 => D#2907
  # DEBUG __it$16 => __first$_M_last_200
  # DEBUG __it$24 => __first$_M_node_201
  # DEBUG __it$_M_cur => __first$_M_cur_198
  # DEBUG __it$_M_first => D#2907
  # DEBUG __it$_M_last => __first$_M_last_200
  # DEBUG __it$_M_node => __first$_M_node_201
  # DEBUG __first => __first$_M_cur_198
  # DEBUG __first$8 => D#2907
  # DEBUG __first$16 => __first$_M_last_200
  # DEBUG __first$24 => __first$_M_node_201
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.127983
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_198
  # DEBUG __first$_M_first => D#2907
  # DEBUG __first$_M_last => __first$_M_last_200
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __result => &D.127983
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _804 = (long int) __last$24_205;
  _806 = (long int) __first$_M_node_201;
  _807 = _804 - _806;
  _808 = _807 /[ex] 8;
  _809 = _808 + -1;
  _810 = _809 * 64;
  _812 = (long int) __last_202;
  _814 = (long int) __last$8_203;
  _815 = _812 - _814;
  _816 = _815 /[ex] 8;
  _817 = _810 + _816;
  _819 = (long int) __first$_M_last_200;
  _821 = (long int) __first$_M_cur_198;
  _822 = _819 - _821;
  _823 = _822 /[ex] 8;
  __n_824 = _817 + _823;
  # DEBUG __n => __n_824
  # DEBUG __n => __n_824
  if (__n_824 <= 0)
    goto <bb 73>;
  else
    goto <bb 65>;

  <bb 65>:

  <bb 66>:
  # __n_678 = PHI <__n_824(65), __n_835(72)>
  # SR.4787_1071 = PHI <_82(65), SR.4787_1069(72)>
  # SR.4788_68 = PHI <_179(65), SR.4788_1061(72)>
  # SR.4789_1059 = PHI <_180(65), SR.4789_1058(72)>
  # SR.4790_1055 = PHI <_181(65), SR.4790_1054(72)>
  # __first$_M_cur_58 = PHI <__first$_M_cur_198(65), __first$_M_cur_1051(72)>
  # __first$_M_last_1050 = PHI <__first$_M_last_200(65), __first$_M_last_1049(72)>
  # __first$_M_node_1048 = PHI <__first$_M_node_201(65), __first$_M_node_1046(72)>
  # DEBUG __first$_M_node => __first$_M_node_1048
  # DEBUG __first$_M_last => __first$_M_last_1050
  # DEBUG __first$_M_cur => __first$_M_cur_58
  # DEBUG __n => __n_678
  # DEBUG D#318 => &D.127983
  # DEBUG this => D#318
  # DEBUG D#1544 => &__first
  # DEBUG this => D#1544
  _828 = MEM[(struct Credit * const &)__first$_M_cur_58];
  *SR.4787_1071 = _828;
  # DEBUG this => &__first
  __first$_M_cur_830 = __first$_M_cur_58 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_830
  if (__first$_M_cur_830 == __first$_M_last_1050)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG this => &__first
  __first$_M_node_841 = __first$_M_node_1048 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_841
  # DEBUG __first$_M_node => __first$_M_node_841
  __first$_M_cur_842 = MEM[(struct Credit * * *)__first$_M_node_1048 + 8B];
  # DEBUG __size => 8
  __first$_M_last_843 = __first$_M_cur_842 + 512;
  # DEBUG __first$_M_last => __first$_M_last_843
  # DEBUG __first$_M_cur => __first$_M_cur_842

  <bb 68>:
  # __first$_M_cur_1051 = PHI <__first$_M_cur_830(66), __first$_M_cur_842(67)>
  # __first$_M_last_1049 = PHI <__first$_M_last_1050(66), __first$_M_last_843(67)>
  # __first$_M_node_1046 = PHI <__first$_M_node_1048(66), __first$_M_node_841(67)>
  # DEBUG __first$_M_node => __first$_M_node_1046
  # DEBUG __first$_M_last => __first$_M_last_1049
  # DEBUG __first$_M_cur => __first$_M_cur_1051
  # DEBUG this => &D.127983
  _833 = SR.4787_1071 + 8;
  if (_833 == SR.4789_1059)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG this => &D.127983
  _845 = SR.4790_1055 + 8;
  # DEBUG this => &D.127983
  # DEBUG __new_node => _845
  _846 = MEM[(struct Credit * * *)SR.4790_1055 + 8B];
  # DEBUG __size => 8
  _847 = _846 + 512;

  <bb 70>:
  # SR.4787_1069 = PHI <_833(68), _846(69)>
  # SR.4788_1061 = PHI <SR.4788_68(68), _846(69)>
  # SR.4789_1058 = PHI <SR.4789_1059(68), _847(69)>
  # SR.4790_1054 = PHI <SR.4790_1055(68), _845(69)>
  __n_835 = __n_678 + -1;
  # DEBUG __n => __n_835
  # DEBUG __n => __n_835
  if (__n_835 <= 0)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # SR.4790_1116 = PHI <SR.4790_1054(70)>
  # SR.4789_1113 = PHI <SR.4789_1058(70)>
  # SR.4788_1112 = PHI <SR.4788_1061(70)>
  # SR.4787_1105 = PHI <SR.4787_1069(70)>
  goto <bb 73>;

  <bb 72>:
  goto <bb 66>;

  <bb 73>:
  # SR.4787_1068 = PHI <SR.4787_1105(71), _82(64)>
  # SR.4788_1060 = PHI <SR.4788_1112(71), _179(64)>
  # SR.4789_1056 = PHI <SR.4789_1113(71), _180(64)>
  # SR.4790_59 = PHI <SR.4790_1116(71), _181(64)>
  # DEBUG this => &__mid
  # DEBUG __x => &D.127983
  D.127983 ={v} {CLOBBER};
  D.127958 ={v} {CLOBBER};
  D.127938 ={v} {CLOBBER};
  D.127921 ={v} {CLOBBER};
  # DEBUG this => &D.127924
  # DEBUG __x => &__mid
  D.127924._M_cur = SR.4787_1068;
  D.127924._M_first = SR.4788_1060;
  D.127924._M_last = SR.4789_1056;
  D.127924._M_node = SR.4790_59;
  # DEBUG this => &D.127923
  # DEBUG __x => &D.77002
  D.127923._M_cur = _82;
  D.127923._M_first = _179;
  D.127923._M_last = _180;
  D.127923._M_node = _181;
  # DEBUG this => &D.127922
  # DEBUG __x => &D.77001
  D.127922._M_cur = _88;
  D.127922._M_first = _176;
  D.127922._M_last = _177;
  D.127922._M_node = _178;
  # DEBUG D#2192 => D#2892
  D.127920 = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.488 (&D.127922, &D.127923, &D.127924); [return slot optimization]
  D.127922 ={v} {CLOBBER};
  D.127923 ={v} {CLOBBER};
  D.127924 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.77001 ={v} {CLOBBER};
  D.77002 ={v} {CLOBBER};
  D.77003 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_1129;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_1128;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_1123;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_1122;
  # DEBUG this => &D.77007
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.77007._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.77007._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.77007._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.77007._M_node = _175;
  std::copy<Credit*> (__first, __mid, &D.77007);
  D.77007 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 28>;

  <bb 74>:
  __n.184_303 = (long unsigned int) _289;
  _304 = __n.184_303 * 8;
  __new_start$_M_cur_305 = prephitmp_694 + _304;
  # DEBUG __tmp$_M_cur => __new_start$_M_cur_305
  goto <bb 9>;

  <bb 75>:
  if (__offset_301 > 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 76>:
  _333 = __elemsbefore.201_10 * 8;
  SR.4649_334 = prephitmp_694 + _333;
  # DEBUG __tmp$_M_cur => SR.4649_334
  goto <bb 13>;

  <bb 77>:
  if (__offset_330 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 78>:
  __n.184_389 = (long unsigned int) _289;
  _390 = __n.184_389 * 8;
  __tmp$_M_cur_391 = _353 + _390;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_391
  goto <bb 18>;

  <bb 79>:
  if (__offset_387 > 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 80>:
  _535 = __n_11(D) * 8;
  __new_finish$_M_cur_536 = prephitmp_144 + _535;
  # DEBUG __tmp$_M_cur => __new_finish$_M_cur_536
  goto <bb 35>;

  <bb 81>:
  if (__offset_532 > 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 82>:
  _502 = -__elemsafter_55;
  __n.184_563 = (long unsigned int) _502;
  _564 = __n.184_563 * 8;
  SR.4657_565 = prephitmp_144 + _564;
  # DEBUG __tmp$_M_cur => SR.4657_565
  goto <bb 39>;

  <bb 83>:
  if (__offset_561 > 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 84>:
  _599 = -__n.199_516;
  __n.184_612 = (long unsigned int) _599;
  _613 = __n.184_612 * 8;
  SR.4730_614 = _71 + _613;
  # DEBUG __tmp$_M_cur => SR.4730_614
  goto <bb 44>;

  <bb 85>:
  if (__offset_610 > 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 86>:
  __n.171_729 = (long unsigned int) _686;
  _730 = __n.171_729 * 8;
  SR.4730_731 = SR.4730_1090 + _730;
  # DEBUG __last$_M_cur => SR.4730_731
  goto <bb 56>;

  <bb 87>:
  if (__offset_727 > 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 88>:
  __n.184_700 = (long unsigned int) _686;
  _701 = __n.184_700 * 8;
  _702 = __rend_1121 + _701;
  goto <bb 60>;

  <bb 89>:
  if (__offset_698 > 0)
    goto <bb 57>;
  else
    goto <bb 58>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt5dequeIP6CreditSaIS1_EEaSERKS3_, funcdef_no=4113, decl_uid=62197, cgraph_uid=2558, symbol_order=2559)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct deque * const this, const struct deque & __x)
{
  struct Credit * * * __new_finish$_M_node;
  struct Credit * * __new_finish$_M_last;
  struct Credit * * __new_finish$_M_first;
  struct Credit * * __new_finish$_M_cur;
  struct Credit * * * __new_start$_M_node;
  struct Credit * * __new_start$_M_last;
  struct Credit * * __new_start$_M_first;
  struct Credit * * __new_start$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __tmp$_M_node;
  struct Credit * * __tmp$_M_last;
  struct Credit * * __tmp$_M_first;
  struct Credit * * __tmp$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.4855;
  struct Credit * * SR.4854;
  struct Credit * * SR.4853;
  struct Credit * * SR.4852;
  struct Credit * * * SR.4851;
  struct Credit * * SR.4850;
  struct Credit * * SR.4849;
  struct Credit * * SR.4848;
  struct Credit * * * __mid$_M_node;
  struct Credit * * __mid$_M_last;
  struct Credit * * __mid$_M_first;
  struct Credit * * __mid$_M_cur;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.128324;
  struct _Deque_iterator D.128323;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.128304;
  struct _Deque_iterator D.128303;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.128296;
  struct _Deque_iterator D.128295;
  struct iterator D.128294;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.128282;
  const difference_type __offset;
  struct _Self & D.128277;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.128267;
  struct iterator D.128266;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Credit * * * __nstart;
  struct const_iterator __mid;
  struct iterator D.75517;
  struct _Deque_iterator D.81758;
  struct _Deque_iterator D.81757;
  struct _Deque_iterator D.75509;
  struct const_iterator D.75505;
  struct _Deque_iterator D.81754;
  struct _Deque_iterator D.81753;
  struct _Deque_iterator D.75502;
  struct _Deque_iterator D.75503;
  long int _5;
  struct Credit * * * _6;
  struct Credit * * _13;
  struct Credit * * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  struct Credit * * _28;
  long int _29;
  struct Credit * * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  struct Credit * * * _43;
  long int _44;
  struct Credit * * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  struct Credit * * _51;
  long int _52;
  struct Credit * * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  struct Credit * * _58;
  long int _59;
  struct Credit * * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  struct Credit * * _66;
  struct Credit * * _67;
  struct Credit * * _68;
  struct Credit * * _70;
  long int pretmp_71;
  struct Credit * * _72;
  struct Credit * * _73;
  struct Credit * * * _74;
  struct Credit * * _78;
  long int prephitmp_101;
  struct Credit * * * _114;
  struct Credit * * * _115;
  struct Credit * * * _116;
  struct Credit * * _119;
  long int _126;
  long int _127;
  long int _128;
  long unsigned int _132;
  long int iftmp.172_134;
  long unsigned int _136;
  long unsigned int _137;
  long int _138;
  long int iftmp.172_139;
  long int iftmp.172_141;
  long unsigned int __node_offset.174_142;
  long unsigned int _143;
  long int _147;
  long int _148;
  long unsigned int _149;
  long unsigned int _150;
  long int _158;
  long int _160;
  long int _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  long int _167;
  long int _168;
  long int _170;
  long int _171;
  long int _172;
  difference_type _173;
  struct Credit * * _176;
  struct Credit * * _182;
  struct Credit * * _183;
  struct Credit * * _184;
  struct Credit * * * _185;
  long int _194;
  struct Credit * * _195;
  long int _196;
  long int _197;
  long int _198;
  long unsigned int _200;
  struct Credit * * _205;
  struct Credit * * * _206;
  long int _207;
  struct _Self & _208;
  long int _218;
  long int _220;
  long int _221;
  long int _222;
  long int _223;
  long unsigned int _225;
  struct Credit * * _229;
  struct Credit * * * _231;
  struct _Self & _232;
  long int pretmp_255;
  long int prephitmp_256;
  struct Credit * * const pretmp_257;
  struct Credit * * const prephitmp_258;
  struct Credit * * const pretmp_261;
  struct Credit * * const prephitmp_273;
  struct Credit * * const pretmp_274;
  struct Credit * * const prephitmp_275;
  struct Credit * * const pretmp_276;
  unsigned long _293;
  struct Credit * * const prephitmp_305;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 21>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#404 => &MEM[(const struct deque *)this_3(D)].D.62618._M_impl._M_start
  # DEBUG D#405 => &MEM[(const struct deque *)this_3(D)].D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 64;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 8;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 8;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#404 => &__x_2(D)->D.62618._M_impl._M_start
  # DEBUG D#405 => &__x_2(D)->D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.4851_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.4851_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 64;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 8;
  _34 = _27 + _33;
  SR.4850_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.4850_35;
  SR.4848_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.4848_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#2212 => &this_3(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.75502
  # DEBUG __x => D#2212
  D.75502._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.75502._M_first = _68;
  D.75502._M_last = _58;
  D.75502._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#221 => &__x_2(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.81753
  # DEBUG __x => D#221
  D.81753._M_cur = _28;
  D.81753._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.81753._M_last = _67;
  D.81753._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#222 => &__x_2(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.81754
  # DEBUG __x => D#222
  D.81754._M_cur = SR.4848_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.81754._M_first = _66;
  D.81754._M_last = SR.4850_35;
  D.81754._M_node = SR.4851_22;
  D.75503 = std::copy<Credit*> (D.81754, D.81753, &D.75502); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.75503
  # DEBUG D#1317 => &this_3(D)->D.62618
  # DEBUG this => D#1317
  # DEBUG this => this_3(D)
  # DEBUG D#132 => &this_3(D)->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1324 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.102119 => D#1324
  # DEBUG D#1323 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.102120 => D#1323
  # DEBUG D#1322 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.102121 => D#1322
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.102122 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.75503
  # DEBUG D#1321 => MEM[(const struct iterator &)&D.75503]._M_cur
  # DEBUG D.102123 => D#1321
  # DEBUG D#1320 => MEM[(const struct iterator &)&D.75503]._M_first
  # DEBUG D.102124 => D#1320
  # DEBUG D#1319 => MEM[(const struct iterator &)&D.75503]._M_last
  # DEBUG D.102125 => D#1319
  _115 = MEM[(const struct iterator &)&D.75503]._M_node;
  # DEBUG D.102126 => _115
  # DEBUG D#134 => this_3(D)
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.102108 => D#137
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#1318 => &this_3(D)->D.62618
  # DEBUG this => D#1318
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.62618._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.75503];
  D.75503 ={v} {CLOBBER};
  D.75502 ={v} {CLOBBER};
  goto <bb 21>;

  <bb 6>:

  <bb 7>:
  # __nstart_69 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_69
  _119 = *__nstart_69;
  # DEBUG this => D#1318
  # DEBUG __p => _119
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#1318->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _119
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _119
  # DEBUG this => D#1017
  # DEBUG D.128250 => D#1018
  operator delete (_119);
  __nstart_120 = __nstart_69 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#222 => &__x_2(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.75505
  # DEBUG __x => D#222
  SR.4849_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.75505
  # DEBUG __n => _64
  # DEBUG __tmp$_M_cur => SR.4848_37
  # DEBUG __tmp$_M_first => SR.4849_81
  # DEBUG __tmp$_M_last => SR.4850_35
  # DEBUG __tmp$_M_node => SR.4851_22
  # DEBUG this => &__tmp
  # DEBUG __n => _64
  _126 = (long int) SR.4849_81;
  _127 = _38 - _126;
  _128 = _127 /[ex] 8;
  __offset_129 = _64 + _128;
  # DEBUG __offset => __offset_129
  # DEBUG __size => 8
  _293 = (unsigned long) __offset_129;
  if (_293 <= 63)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 10>:
  # DEBUG __size => 8
  iftmp.172_134 = __offset_129 >> 6;
  goto <bb 12>;

  <bb 11>:
  _136 = ~_293;
  # DEBUG __size => 8
  _137 = _136 >> 6;
  _138 = (long int) _137;
  iftmp.172_139 = ~_138;

  <bb 12>:
  # iftmp.172_141 = PHI <iftmp.172_134(10), iftmp.172_139(11)>
  # DEBUG __node_offset => iftmp.172_141
  __node_offset.174_142 = (long unsigned int) iftmp.172_141;
  _143 = __node_offset.174_142 * 8;
  __tmp$_M_node_144 = SR.4851_22 + _143;
  # DEBUG this => &__tmp
  # DEBUG __new_node => __tmp$_M_node_144
  # DEBUG __tmp$_M_node => __tmp$_M_node_144
  __tmp$_M_first_145 = *__tmp$_M_node_144;
  # DEBUG __tmp$_M_first => __tmp$_M_first_145
  # DEBUG __size => 8
  __tmp$_M_last_146 = __tmp$_M_first_145 + 512;
  # DEBUG __tmp$_M_last => __tmp$_M_last_146
  # DEBUG __size => 8
  _147 = iftmp.172_141 * 64;
  _148 = __offset_129 - _147;
  _149 = (long unsigned int) _148;
  _150 = _149 * 8;
  __tmp$_M_cur_151 = __tmp$_M_first_145 + _150;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_151
  pretmp_71 = (long int) __tmp$_M_node_144;
  pretmp_255 = (long int) __tmp$_M_last_146;

  <bb 13>:
  # __tmp$_M_cur_243 = PHI <__tmp$_M_cur_133(22), __tmp$_M_cur_151(12)>
  # __tmp$_M_first_16 = PHI <SR.4849_81(22), __tmp$_M_first_145(12)>
  # __tmp$_M_last_287 = PHI <SR.4850_35(22), __tmp$_M_last_146(12)>
  # __tmp$_M_node_286 = PHI <SR.4851_22(22), __tmp$_M_node_144(12)>
  # prephitmp_101 = PHI <_23(22), pretmp_71(12)>
  # prephitmp_256 = PHI <_36(22), pretmp_255(12)>
  # DEBUG __tmp$_M_node => __tmp$_M_node_286
  # DEBUG __tmp$_M_last => __tmp$_M_last_287
  # DEBUG __tmp$_M_first => __tmp$_M_first_16
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_243
  # DEBUG __mid$_M_cur => __tmp$_M_cur_243
  # DEBUG __mid$_M_first => __tmp$_M_first_16
  # DEBUG __mid$_M_last => __tmp$_M_last_287
  # DEBUG __mid$_M_node => __tmp$_M_node_286
  # DEBUG D#2920 => {CLOBBER}
  # DEBUG __tmp$_M_cur => D#2920
  # DEBUG D#2921 => {CLOBBER}
  # DEBUG __tmp$_M_first => D#2921
  # DEBUG D#2922 => {CLOBBER}
  # DEBUG __tmp$_M_last => D#2922
  # DEBUG D#2923 => {CLOBBER}
  # DEBUG __tmp$_M_node => D#2923
  # DEBUG D#2210 => &this_3(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.75509
  # DEBUG __x => D#2210
  D.75509._M_cur = _60;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.75509._M_first = _78;
  D.75509._M_last = _58;
  D.75509._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#222 => &__x_2(D)->D.62618._M_impl._M_start
  # DEBUG this => &D.81757
  # DEBUG __x => D#222
  D.81757._M_cur = SR.4848_37;
  D.81757._M_first = SR.4849_81;
  D.81757._M_last = SR.4850_35;
  D.81757._M_node = SR.4851_22;
  MEM[(struct _Deque_iterator *)&__mid] = __tmp$_M_cur_243;
  MEM[(struct _Deque_iterator *)&__mid + 8B] = __tmp$_M_first_16;
  MEM[(struct _Deque_iterator *)&__mid + 16B] = __tmp$_M_last_287;
  MEM[(struct _Deque_iterator *)&__mid + 24B] = __tmp$_M_node_286;
  std::copy<Credit*> (D.81757, __mid, &D.75509);
  D.75509 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#221 => &__x_2(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.81758
  # DEBUG __x => D#221
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  _73 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#2211 => &this_3(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.75517
  # DEBUG __x => D#2211
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.75517
  # DEBUG __first$_M_cur => __tmp$_M_cur_243
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_287
  # DEBUG __first$_M_node => __tmp$_M_node_286
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => NULL
  # DEBUG __x => &D.75517
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __tmp$_M_cur_243
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_287
  # DEBUG __first$_M_node => __tmp$_M_node_286
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => &D.128266
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.128266
  # DEBUG __first$_M_cur => __tmp$_M_cur_243
  # DEBUG __first$_M_first => __tmp$_M_first_16
  # DEBUG __first$_M_last => __tmp$_M_last_287
  # DEBUG __first$_M_node => __tmp$_M_node_286
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG D#2068 => __first
  # DEBUG D#2068 => __first
  # DEBUG D#2068 => __first
  # DEBUG D#2069 => __last
  # DEBUG D#2069 => __last
  # DEBUG D#2069 => __last
  # DEBUG D.114437 => D#2064
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 8
  _158 = (long int) _74;
  _160 = _158 - prephitmp_101;
  _161 = _160 /[ex] 8;
  _162 = _161 + -1;
  _163 = _162 * 64;
  _164 = (long int) _13;
  _165 = (long int) _72;
  _166 = _164 - _165;
  _167 = _166 /[ex] 8;
  _168 = _163 + _167;
  _170 = (long int) __tmp$_M_cur_243;
  _171 = prephitmp_256 - _170;
  _172 = _171 /[ex] 8;
  _173 = _168 + _172;
  __n_174 = (const size_type) _173;
  # DEBUG __n => __n_174
  _176 = this_3(D)->D.62618._M_impl._M_start._M_cur;
  if (_17 == _176)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _194 = (long int) _17;
  _195 = this_3(D)->D.62618._M_impl._M_start._M_first;
  _196 = (long int) _195;
  _197 = _194 - _196;
  _198 = _197 /[ex] 8;
  __vacancies_199 = (const size_type) _198;
  # DEBUG __vacancies => __vacancies_199
  if (__n_174 > __vacancies_199)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _200 = __n_174 - __vacancies_199;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_front (this_3(D), _200);
  pretmp_274 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_276 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;

  <bb 16>:
  # prephitmp_275 = PHI <_176(14), pretmp_274(15)>
  # prephitmp_305 = PHI <_195(14), pretmp_276(15)>
  # DEBUG D#2919 => &this_3(D)->D.62618._M_impl._M_start
  # DEBUG this => D#2919
  # DEBUG __n => _173
  # DEBUG this => &__tmp
  # DEBUG __x => D#2919
  __tmp._M_cur = prephitmp_275;
  __tmp._M_first = prephitmp_305;
  _205 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  __tmp._M_last = _205;
  _206 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  __tmp._M_node = _206;
  # DEBUG this => &__tmp
  # DEBUG __n => _173
  _207 = -_173;
  _208 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, _207);
  # DEBUG this => &__new_start
  # DEBUG __x => _208
  __new_start$_M_cur_209 = MEM[(const struct iterator &)_208]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_209
  __new_start$_M_first_210 = MEM[(const struct iterator &)_208]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_210
  __new_start$_M_last_211 = MEM[(const struct iterator &)_208]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_211
  __new_start$_M_node_212 = MEM[(const struct iterator &)_208]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_212
  __tmp ={v} {CLOBBER};
  # DEBUG D#2206 => &this_3(D)->D.62618
  # DEBUG this => D#2206
  # DEBUG this => &D.128296
  # DEBUG __x => &__new_start
  MEM[(struct _Deque_iterator *)&__first] = __tmp$_M_cur_243;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __tmp$_M_first_16;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __tmp$_M_last_287;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __tmp$_M_node_286;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.128296
  # DEBUG D.128300 => D#1545
  # DEBUG this => &D.128304
  # DEBUG __x => &D.128296
  D.128304._M_cur = __new_start$_M_cur_209;
  D.128304._M_first = __new_start$_M_first_210;
  D.128304._M_last = __new_start$_M_last_211;
  D.128304._M_node = __new_start$_M_node_212;
  D.128303 = std::uninitialized_copy<std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>, std::_Deque_iterator<Credit*, Credit*&, Credit**> > (__first, __last, &D.128304); [return slot optimization]
  D.128304 ={v} {CLOBBER};
  D.128296 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_209;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_210;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_211;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_212;
  # DEBUG D#2928 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#2928
  # DEBUG D#2929 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#2929
  # DEBUG D#2930 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#2930
  # DEBUG D#2931 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#2931
  goto <bb 20>;

  <bb 17>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_174
  _218 = (long int) _70;
  _220 = (long int) _17;
  _221 = _218 - _220;
  _222 = _221 /[ex] 8;
  _223 = _222 + -1;
  __vacancies_224 = (const size_type) _223;
  # DEBUG __vacancies => __vacancies_224
  if (__n_174 > __vacancies_224)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _225 = __n_174 - __vacancies_224;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_back (this_3(D), _225);
  pretmp_257 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_261 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;

  <bb 19>:
  # prephitmp_258 = PHI <_17(17), pretmp_257(18)>
  # prephitmp_273 = PHI <_70(17), pretmp_261(18)>
  # DEBUG D#2918 => &this_3(D)->D.62618._M_impl._M_finish
  # DEBUG this => D#2918
  # DEBUG __n => _173
  # DEBUG this => &__tmp
  # DEBUG __x => D#2918
  __tmp._M_cur = prephitmp_258;
  _229 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  __tmp._M_first = _229;
  __tmp._M_last = prephitmp_273;
  _231 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  __tmp._M_node = _231;
  _232 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, _173);
  # DEBUG this => &__new_finish
  # DEBUG __x => _232
  __new_finish$_M_cur_233 = MEM[(const struct iterator &)_232]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_233
  __new_finish$_M_first_234 = MEM[(const struct iterator &)_232]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_234
  __new_finish$_M_last_235 = MEM[(const struct iterator &)_232]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_235
  __new_finish$_M_node_236 = MEM[(const struct iterator &)_232]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_236
  __tmp ={v} {CLOBBER};
  # DEBUG D#2207 => &this_3(D)->D.62618
  # DEBUG this => D#2207
  # DEBUG D#2208 => &this_3(D)->D.62618._M_impl._M_finish
  # DEBUG this => &D.128295
  # DEBUG __x => D#2208
  _182 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  _183 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  _184 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  _185 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  MEM[(struct _Deque_iterator *)&__first] = __tmp$_M_cur_243;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __tmp$_M_first_16;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __tmp$_M_last_287;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __tmp$_M_node_286;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.128295
  # DEBUG D.128320 => D#1545
  # DEBUG this => &D.128324
  # DEBUG __x => &D.128295
  D.128324._M_cur = _182;
  D.128324._M_first = _183;
  D.128324._M_last = _184;
  D.128324._M_node = _185;
  D.128323 = std::uninitialized_copy<std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>, std::_Deque_iterator<Credit*, Credit*&, Credit**> > (__first, __last, &D.128324); [return slot optimization]
  D.128324 ={v} {CLOBBER};
  D.128295 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_233;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_234;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_235;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_236;
  # DEBUG D#2924 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#2924
  # DEBUG D#2925 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#2925
  # DEBUG D#2926 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#2926
  # DEBUG D#2927 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#2927

  <bb 20>:
  D.128266 ={v} {CLOBBER};
  D.75517 ={v} {CLOBBER};
  # DEBUG D#2932 => {CLOBBER}
  # DEBUG __mid$_M_cur => D#2932
  # DEBUG D#2933 => {CLOBBER}
  # DEBUG __mid$_M_first => D#2933
  # DEBUG D#2934 => {CLOBBER}
  # DEBUG __mid$_M_last => D#2934
  # DEBUG D#2935 => {CLOBBER}
  # DEBUG __mid$_M_node => D#2935

  <bb 21>:
  return this_3(D);

  <bb 22>:
  _132 = _65 * 8;
  __tmp$_M_cur_133 = SR.4848_37 + _132;
  # DEBUG __tmp$_M_cur => __tmp$_M_cur_133
  goto <bb 13>;

  <bb 23>:
  if (__offset_129 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Credit*>*, std::vector<std::queue<Credit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Credit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Credit*>] (_ZNSt6vectorISt5queueIP6CreditSt5dequeIS2_SaIS2_EEESaIS6_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS6_S8_EEmRKS6_, funcdef_no=3242, decl_uid=50847, cgraph_uid=1687, symbol_order=1688)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is not innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Credit*>*, std::vector<std::queue<Credit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Credit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Credit*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.4912;
  struct Credit * * SR.4911;
  struct Credit * * SR.4910;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __nstart;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.128541;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.128516;
  struct _Deque_iterator D.128515;
  struct _Deque_iterator D.128514;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.128496;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.128482;
  struct _Deque_iterator D.128481;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.128474;
  struct _Deque_iterator D.128473;
  struct _Deque_iterator D.128472;
  const long unsigned int D.128451;
  const size_type __len;
  size_type D.128450;
  size_type __n;
  struct queue * D.128441;
  struct queue * D.128429;
  struct queue * __first;
  long unsigned int __n;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  struct Credit * * * _17;
  long unsigned int _18;
  struct queue * _20;
  long int __last.165_21;
  struct queue * const _24;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct queue * _32;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _38;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  const struct deque * _52;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _62;
  struct queue * _63;
  struct queue * _67;
  long unsigned int _70;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  struct queue * _85;
  struct deque * _87;
  struct queue * prephitmp_89;
  struct queue * pretmp_91;
  struct queue * _94;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  void * _142;
  struct _Deque_base * _144;
  struct queue * _146;
  bool _149;
  long int _150;
  long int _151;
  long int _152;
  long unsigned int _154;
  bool _155;
  long int _160;
  struct Credit * * * _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  struct Credit * * _167;
  long int _168;
  struct Credit * * _169;
  long int _170;
  long int _171;
  long int _172;
  long int _173;
  struct Credit * * _174;
  long int _175;
  struct Credit * * _176;
  long int _177;
  long int _178;
  long int _179;
  difference_type _180;
  size_type _181;
  struct _Deque_base * _182;
  struct Credit * * _183;
  struct Credit * * _185;
  struct Credit * * * _186;
  struct Credit * * _187;
  struct Credit * * _188;
  struct Credit * * * _190;
  long int _203;
  difference_type _209;
  long int _213;
  long int _214;
  bool _220;
  long unsigned int prephitmp_225;
  long unsigned int pretmp_226;
  long int _228;
  struct Credit * * * pretmp_229;
  long int _230;
  long int _231;
  long int _232;
  long int _233;
  long int _234;
  struct Credit * * * prephitmp_235;
  long int _236;
  long int _238;
  long int _239;
  long int _240;
  long int _241;
  long int _242;
  long int _243;
  long int _244;
  long int _245;
  long int _246;
  long int _247;
  struct Credit * _252;
  long int _253;
  difference_type _256;
  struct Credit * * _257;
  struct Credit * * * _269;
  struct Credit * * _270;
  struct Credit * * _271;
  struct Credit * * * _272;
  struct Credit * * * _273;
  struct Credit * * * _274;
  struct Credit * * _277;
  long unsigned int prephitmp_315;
  void * _345;

  <bb 2>:
  # DEBUG D#2943 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#2943
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 72>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.50924._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.50924._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 29>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.116177 => __x_29(D)
  _52 = &MEM[(const struct queue &)__x_29(D)].c;
  std::deque<Credit*, std::allocator<Credit*> >::deque (&__x_copy.c, _52);
  # DEBUG this => this_9(D)
  # DEBUG D#223 => &this_9(D)->D.50924._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#223
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.72114
  # DEBUG __rhs => &__position
  # DEBUG this => &D.72114
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#2217 => &this_9(D)->D.50924
  # DEBUG this => D#2217
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#1551
  # DEBUG D#1550 => D#1551
  # DEBUG D#1549 => D#1550
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.116190 => D#1549
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__last_61, __old_finish_26, __old_finish_26);

  <bb 6>:
  _62 = this_9(D)->D.50924._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.50924._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#2943
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#2943
  # DEBUG __it => D#2943
  # DEBUG __first => D#2943
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#2943
  # DEBUG __it => D#2943
  # DEBUG __first => D#2943
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#2943
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.165_21 = (long int) __last_61;
  _73 = __last.165_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#2943
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#2943
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_319 = PHI <__old_finish_26(8), __old_finish_58(12)>
  # __last_320 = PHI <__last_61(8), __last_66(12)>
  # __n_321 = PHI <__n_72(8), __n_81(12)>
  # DEBUG __n => __n_321
  # DEBUG __result => __old_finish_319
  # DEBUG __last => __last_320
  __last_66 = __last_320 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_319 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.116220 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_80, _56);
  goto <bb 11>;

<L24>:
  goto <bb 74> (<L10>);

  <bb 11>:
  __n_81 = __n_321 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#1053 => &__x_copy.c
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.62618);
  __x_copy ={v} {CLOBBER};
  goto <bb 72>;

  <bb 14>:

  <bb 15>:
  # __position_323 = PHI <__position_23(14), __position_84(18)>
  # DEBUG __first => __position_323
  # DEBUG this => __position_323
  # DEBUG D.116231 => &__x_copy
  _83 = &__position_323->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_83, &__x_copy.c);
  goto <bb 17>;

<L25>:
  goto <bb 74> (<L10>);

  <bb 17>:
  __position_84 = __position_323 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#2218 => &this_9(D)->D.50924
  # DEBUG this => D#2218
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.116240 => D#1554
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _85 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<Credit*>*, long unsigned int, std::queue<Credit*> > (__old_finish_26, _70, &__x_copy);
  goto <bb 21>;

<L26>:
  goto <bb 74> (<L10>);

  <bb 21>:
  this_9(D)->D.50924._M_impl._M_finish = _85;
  # DEBUG D#2219 => &this_9(D)->D.50924
  # DEBUG this => D#2219
  # DEBUG this => &__position
  # DEBUG __first => D#2943
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __alloc => D#1551
  # DEBUG D#1550 => D#1551
  # DEBUG D#1549 => D#1550
  # DEBUG __first => D#2943
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG D.116253 => D#1549
  # DEBUG __first => D#2943
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__position_23, __old_finish_26, _85);
  goto <bb 23>;

<L27>:
  goto <bb 74> (<L10>);

  <bb 23>:
  _74 = this_9(D)->D.50924._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.50924._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#2943
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#2943
  if (__position_23 == __old_finish_26)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __position_324 = PHI <__position_23(24), __position_88(28)>
  # DEBUG __first => __position_324
  # DEBUG this => __position_324
  # DEBUG D.116274 => &__x_copy
  _87 = &__position_324->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_87, &__x_copy.c);
  goto <bb 27>;

<L28>:
  goto <bb 74> (<L10>);

  <bb 27>:
  __position_88 = __position_324 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1330 => this_9(D)
  # DEBUG this => D#1330
  # DEBUG D#1329 => D#1330
  # DEBUG D#1328 => &D#1329->D.50924
  # DEBUG this => D#1328
  # DEBUG __a => D#1327
  # DEBUG D#1326 => D#1327
  # DEBUG D#1325 => D#1326
  # DEBUG this => D#1325
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#138 => this_9(D)
  # DEBUG D#138 => this_9(D)
  # DEBUG this => D#138
  # DEBUG this => D#138
  _150 = (long int) _24;
  _151 = _13 - _150;
  _152 = _151 /[ex] 80;
  _153 = (const long unsigned int) _152;
  _154 = 230584300921369395 - _153;
  if (__n_7(D) > _154)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 31>:
  # DEBUG D#138 => this_9(D)
  # DEBUG D#138 => this_9(D)
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG D#138 => this_9(D)
  # DEBUG D#138 => this_9(D)
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG __a => &D.128451
  # DEBUG __b => &__n
  _18 = MAX_EXPR <__n_7(D), _153>;
  __len_158 = _18 + _153;
  # DEBUG __len => __len_158
  # DEBUG D#138 => this_9(D)
  # DEBUG D#138 => this_9(D)
  # DEBUG this => D#138
  # DEBUG this => D#138
  # DEBUG D#1330 => this_9(D)
  # DEBUG this => D#1330
  # DEBUG D#1329 => D#1330
  # DEBUG D#1328 => &D#1329->D.50924
  # DEBUG this => D#1328
  # DEBUG __a => D#1327
  # DEBUG D#1326 => D#1327
  # DEBUG D#1325 => D#1326
  # DEBUG this => D#1325
  _155 = __len_158 > 230584300921369395;
  _220 = _153 > __len_158;
  _149 = _155 | _220;
  if (_149 != 0)
    goto <bb 89>;
  else
    goto <bb 90>;

  <bb 32>:
  pretmp_226 = __len_158 * 80;

  <bb 33>:
  # __elems_before_293 = PHI <__elems_before_210(89), __elems_before_205(32)>
  # _242 = PHI <_214(89), _253(32)>
  # prephitmp_225 = PHI <18446744073709551600(89), pretmp_226(32)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#406 => &this_9(D)->D.50924._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#406
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72147
  # DEBUG this => &__position
  # DEBUG this => &D.72147
  # DEBUG __elems_before => __elems_before_293
  # DEBUG D#2229 => &this_9(D)->D.50924
  # DEBUG D#1338 => D#2229
  # DEBUG __n => NULL
  # DEBUG this => D#1338
  # DEBUG D#1337 => D#1338
  # DEBUG D#1336 => &D#1337->_M_impl
  # DEBUG D#1335 => D#1336
  # DEBUG __n => NULL
  # DEBUG __a => D#1335
  # DEBUG D#1334 => D#1335
  # DEBUG D#1332 => D#1334
  # DEBUG D#1333 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1332
  # DEBUG D.128439 => D#1333
  # DEBUG D#1331 => D#1332
  # DEBUG D#1325 => D#1331
  # DEBUG this => D#1325
  _146 = operator new (prephitmp_225);

  <bb 34>:
  # __new_finish_147 = PHI <0B(90), _146(33)>
  # __elems_before_219 = PHI <__elems_before_205(90), __elems_before_293(33)>
  # _244 = PHI <_253(90), _242(33)>
  # prephitmp_315 = PHI <0(90), prephitmp_225(33)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2213 => &this_9(D)->D.50924
  # DEBUG this => D#2213
  _27 = (long unsigned int) _244;
  __first_28 = __new_finish_147 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.116283 => D#1554
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __cur => __first_28
  # DEBUG __n => __n_7(D)

  <bb 35>:
  # __n_237 = PHI <__n_140(47), __n_7(D)(34)>
  # __first_202 = PHI <__first_141(47), __first_28(34)>
  # DEBUG __cur => __first_202
  # DEBUG __n => __n_237
  # DEBUG __r => __first_202
  # DEBUG __p => NULL
  # DEBUG __value => __x_29(D)
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.106510 => D#12
  if (__first_202 != 0B)
    goto <bb 36>;
  else
    goto <bb 46>;

  <bb 36>:
  # DEBUG this => NULL
  # DEBUG D.128427 => __x_29(D)
  # DEBUG D#2936 => &MEM[(const struct queue &)__x_29(D)].c
  # DEBUG D#2939 => &__first_202->c
  # DEBUG this => D#2939
  # DEBUG __x => D#2936
  # DEBUG this => D#2936
  # DEBUG D#404 => &D#2936->D.62618._M_impl._M_start
  # DEBUG D#405 => &D#2936->D.62618._M_impl._M_finish
  # DEBUG __x => D#405
  # DEBUG __y => D#404
  # DEBUG __size => 8
  _17 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_node;
  _160 = (long int) _17;
  _161 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_node;
  _162 = (long int) _161;
  _163 = _160 - _162;
  _164 = _163 /[ex] 8;
  _165 = _164 + -1;
  _166 = _165 * 64;
  _167 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_cur;
  _168 = (long int) _167;
  _169 = MEM[(const struct _Deque_iterator &)__x_29(D) + 48]._M_first;
  _170 = (long int) _169;
  _171 = _168 - _170;
  _172 = _171 /[ex] 8;
  _173 = _166 + _172;
  _174 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_last;
  _175 = (long int) _174;
  _176 = MEM[(const struct _Deque_iterator &)__x_29(D) + 16]._M_cur;
  _177 = (long int) _176;
  _178 = _175 - _177;
  _179 = _178 /[ex] 8;
  _180 = _173 + _179;
  _181 = (size_type) _180;
  # DEBUG D#1546 => &D#2936->D.62618
  # DEBUG this => D#1546
  # DEBUG __a => NULL
  _182 = &MEM[(struct deque *)__first_202].D.62618;
  # DEBUG this => _182
  # DEBUG __a => NULL
  # DEBUG __num_elements => _181
  # DEBUG D#1393 => &_182->_M_impl
  # DEBUG this => D#1393
  # DEBUG __a => NULL
  # DEBUG this => D#1393
  # DEBUG __a => NULL
  # DEBUG this => D#1393
  # DEBUG D.96742 => NULL
  MEM[(struct _Deque_impl *)__first_202]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_202]._M_map_size = 0;
  # DEBUG D#722 => &D#1393->_M_start
  # DEBUG this => D#722
  MEM[(struct _Deque_iterator *)__first_202 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 16B]._M_node = 0B;
  # DEBUG D#721 => &D#1393->_M_finish
  # DEBUG this => D#721
  MEM[(struct _Deque_iterator *)__first_202 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_202 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_182, _181);

  <bb 37>:
  # DEBUG D#1547 => &D#2939->D.62618
  # DEBUG this => D#1547
  # DEBUG D#1548 => &D#2939->D.62618._M_impl._M_start
  # DEBUG this => &D.128472
  # DEBUG __x => D#1548
  _183 = MEM[(const struct iterator &)__first_202 + 16]._M_cur;
  _185 = MEM[(const struct iterator &)__first_202 + 16]._M_last;
  _186 = MEM[(const struct iterator &)__first_202 + 16]._M_node;
  # DEBUG this => D#2936
  # DEBUG D#221 => &D#2936->D.62618._M_impl._M_finish
  # DEBUG this => &D.128473
  # DEBUG __x => D#221
  _187 = MEM[(const struct iterator &)__x_29(D) + 48]._M_cur;
  _188 = MEM[(const struct iterator &)__x_29(D) + 48]._M_first;
  # DEBUG D#2938 => MEM[(const struct iterator &)__x_29(D) + 48]._M_last
  _190 = MEM[(const struct iterator &)__x_29(D) + 48]._M_node;
  # DEBUG this => D#2936
  # DEBUG D#222 => &D#2936->D.62618._M_impl._M_start
  # DEBUG this => &D.128474
  # DEBUG __x => D#222
  __first$_M_cur_191 = MEM[(const struct iterator &)__x_29(D) + 16]._M_cur;
  # DEBUG D#2940 => MEM[(const struct iterator &)__x_29(D) + 16]._M_first
  __first$_M_last_193 = MEM[(const struct iterator &)__x_29(D) + 16]._M_last;
  __first$_M_node_194 = MEM[(const struct iterator &)__x_29(D) + 16]._M_node;
  # DEBUG __result => &D.128472
  # DEBUG D.128478 => D#1545
  # DEBUG this => &D.128482
  # DEBUG __x => &D.128472
  # DEBUG __result => &D.128482
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.128482
  # DEBUG __result => NULL
  # DEBUG this => &D.128496
  # DEBUG __x => NULL
  # DEBUG __result => &D.128496
  # DEBUG this => &D.128516
  # DEBUG __x => &D.128496
  # DEBUG __it => _187
  # DEBUG __it$8 => _188
  # DEBUG __it$16 => D#2938
  # DEBUG __it$24 => _190
  # DEBUG __it$_M_cur => _187
  # DEBUG __it$_M_first => _188
  # DEBUG __it$_M_last => D#2938
  # DEBUG __it$_M_node => _190
  # DEBUG __it => __first$_M_cur_191
  # DEBUG __it$8 => D#2940
  # DEBUG __it$16 => __first$_M_last_193
  # DEBUG __it$24 => __first$_M_node_194
  # DEBUG __it$_M_cur => __first$_M_cur_191
  # DEBUG __it$_M_first => D#2940
  # DEBUG __it$_M_last => __first$_M_last_193
  # DEBUG __it$_M_node => __first$_M_node_194
  # DEBUG __result => &D.128516
  # DEBUG this => NULL
  # DEBUG __x => &D.128516
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _187
  # DEBUG __it$8 => _188
  # DEBUG __it$16 => D#2938
  # DEBUG __it$24 => _190
  # DEBUG __it$_M_cur => _187
  # DEBUG __it$_M_first => _188
  # DEBUG __it$_M_last => D#2938
  # DEBUG __it$_M_node => _190
  # DEBUG __it => __first$_M_cur_191
  # DEBUG __it$8 => D#2940
  # DEBUG __it$16 => __first$_M_last_193
  # DEBUG __it$24 => __first$_M_node_194
  # DEBUG __it$_M_cur => __first$_M_cur_191
  # DEBUG __it$_M_first => D#2940
  # DEBUG __it$_M_last => __first$_M_last_193
  # DEBUG __it$_M_node => __first$_M_node_194
  # DEBUG __first => __first$_M_cur_191
  # DEBUG __first$8 => D#2940
  # DEBUG __first$16 => __first$_M_last_193
  # DEBUG __first$24 => __first$_M_node_194
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.128541
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_191
  # DEBUG __first$_M_first => D#2940
  # DEBUG __first$_M_last => __first$_M_last_193
  # DEBUG __first$_M_node => __first$_M_node_194
  # DEBUG __result => &D.128541
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _228 = (long int) _190;
  _230 = (long int) __first$_M_node_194;
  _231 = _228 - _230;
  _232 = _231 /[ex] 8;
  _233 = _232 + -1;
  _234 = _233 * 64;
  _236 = (long int) _187;
  _238 = (long int) _188;
  _239 = _236 - _238;
  _240 = _239 /[ex] 8;
  _241 = _234 + _240;
  _243 = (long int) __first$_M_last_193;
  _245 = (long int) __first$_M_cur_191;
  _246 = _243 - _245;
  _247 = _246 /[ex] 8;
  __n_248 = _241 + _247;
  # DEBUG __n => __n_248
  # DEBUG __n => __n_248
  if (__n_248 <= 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG this => &D.128481
  # DEBUG __x => &D.128541
  D.128541 ={v} {CLOBBER};
  D.128516 ={v} {CLOBBER};
  D.128496 ={v} {CLOBBER};
  D.128482 ={v} {CLOBBER};
  D.128472 ={v} {CLOBBER};
  goto <bb 46>;

  <bb 39>:

  <bb 40>:
  # __n_333 = PHI <__n_248(39), __n_259(45)>
  # SR.4910_372 = PHI <_183(39), SR.4910_371(45)>
  # SR.4911_369 = PHI <_185(39), SR.4911_368(45)>
  # SR.4912_367 = PHI <_186(39), SR.4912_366(45)>
  # __first$_M_cur_364 = PHI <__first$_M_cur_191(39), __first$_M_cur_363(45)>
  # __first$_M_last_360 = PHI <__first$_M_last_193(39), __first$_M_last_359(45)>
  # __first$_M_node_358 = PHI <__first$_M_node_194(39), __first$_M_node_356(45)>
  # DEBUG __first$_M_node => __first$_M_node_358
  # DEBUG __first$_M_last => __first$_M_last_360
  # DEBUG __first$_M_cur => __first$_M_cur_364
  # DEBUG __n => __n_333
  # DEBUG D#318 => &D.128541
  # DEBUG this => D#318
  # DEBUG D#1544 => &__first
  # DEBUG this => D#1544
  _252 = MEM[(struct Credit * const &)__first$_M_cur_364];
  *SR.4910_372 = _252;
  # DEBUG this => &__first
  __first$_M_cur_254 = __first$_M_cur_364 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_254
  if (__first$_M_cur_254 == __first$_M_last_360)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG this => &__first
  __first$_M_node_265 = __first$_M_node_358 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_265
  # DEBUG __first$_M_node => __first$_M_node_265
  __first$_M_cur_266 = MEM[(struct Credit * * *)__first$_M_node_358 + 8B];
  # DEBUG __size => 8
  __first$_M_last_267 = __first$_M_cur_266 + 512;
  # DEBUG __first$_M_last => __first$_M_last_267
  # DEBUG __first$_M_cur => __first$_M_cur_266

  <bb 42>:
  # __first$_M_cur_363 = PHI <__first$_M_cur_254(40), __first$_M_cur_266(41)>
  # __first$_M_last_359 = PHI <__first$_M_last_360(40), __first$_M_last_267(41)>
  # __first$_M_node_356 = PHI <__first$_M_node_358(40), __first$_M_node_265(41)>
  # DEBUG __first$_M_node => __first$_M_node_356
  # DEBUG __first$_M_last => __first$_M_last_359
  # DEBUG __first$_M_cur => __first$_M_cur_363
  # DEBUG this => &D.128541
  _257 = SR.4910_372 + 8;
  if (_257 == SR.4911_369)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG this => &D.128541
  _269 = SR.4912_367 + 8;
  # DEBUG this => &D.128541
  # DEBUG __new_node => _269
  _270 = MEM[(struct Credit * * *)SR.4912_367 + 8B];
  # DEBUG __size => 8
  _271 = _270 + 512;

  <bb 44>:
  # SR.4910_371 = PHI <_257(42), _270(43)>
  # SR.4911_368 = PHI <SR.4911_369(42), _271(43)>
  # SR.4912_366 = PHI <SR.4912_367(42), _269(43)>
  __n_259 = __n_333 + -1;
  # DEBUG __n => __n_259
  # DEBUG __n => __n_259
  if (__n_259 <= 0)
    goto <bb 38>;
  else
    goto <bb 45>;

  <bb 45>:
  goto <bb 40>;

  <bb 46>:
  __n_140 = __n_237 + 18446744073709551615;
  # DEBUG __n => __n_140
  __first_141 = __first_202 + 80;
  # DEBUG __cur => __first_141
  # DEBUG __cur => __first_141
  # DEBUG __n => __n_140
  if (__n_140 == 0)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:
  goto <bb 35>;

  <bb 48>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2214 => &this_9(D)->D.50924
  # DEBUG this => D#2214
  # DEBUG this => &__position
  _32 = this_9(D)->D.50924._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#2943
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1553
  # DEBUG D#1552 => D#1553
  # DEBUG D#1549 => D#1552
  # DEBUG __first => _32
  # DEBUG __last => D#2943
  # DEBUG __result => NULL
  # DEBUG D.116304 => D#1549
  # DEBUG __first => _32
  # DEBUG __last => D#2943
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (_32, __position_23, __new_finish_147);
  goto <bb 55>;

  # __first_313 = PHI <__first_202(36)>
<L19>:
  _142 = __builtin_eh_pointer (12);
  __cxa_begin_catch (_142);
  # DEBUG __first => __first_28
  # DEBUG __last => __first_313
  # DEBUG __first => __first_28
  # DEBUG __last => __first_313
  # DEBUG __first => __first_28
  if (__first_28 == __first_313)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  __cxa_rethrow ();

  <bb 51>:

  <bb 52>:
  # __first_332 = PHI <__first_28(51), __first_145(53)>
  # DEBUG __first => __first_332
  # DEBUG __r => __first_332
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  _144 = &MEM[(struct deque *)__first_332].D.62618;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_144);
  MEM[(struct  &)__first_332] ={v} {CLOBBER};
  __first_145 = __first_332 + 80;
  # DEBUG __first => __first_145
  # DEBUG __first => __first_145
  if (__first_145 == __first_313)
    goto <bb 50>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 52>;

<L21>:
  __cxa_end_catch ();
  resx 13

  <bb 55>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 80;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#2215 => &this_9(D)->D.50924
  # DEBUG this => D#2215
  _36 = this_9(D)->D.50924._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#2943
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#1553
  # DEBUG D#1552 => D#1553
  # DEBUG D#1549 => D#1552
  # DEBUG __first => D#2943
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.116323 => D#1549
  # DEBUG __first => D#2943
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _94 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__position_23, _36, __new_finish_34);
  goto <bb 57>;

<L30>:
  goto <bb 76> (<L13>);

  <bb 57>:
  # DEBUG __new_finish => _94
  # DEBUG D#2216 => &this_9(D)->D.50924
  # DEBUG this => D#2216
  _38 = this_9(D)->D.50924._M_impl._M_finish;
  __first_39 = this_9(D)->D.50924._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 69>;
  else
    goto <bb 58>;

  <bb 58>:

  <bb 59>:
  # __first_316 = PHI <__first_39(58), __first_96(67)>
  # DEBUG __first => __first_316
  # DEBUG __r => __first_316
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  # DEBUG D#2937 => &MEM[(struct deque *)__first_316].D.62618
  # DEBUG this => D#2937
  _272 = MEM[(struct _Deque_base *)__first_316]._M_impl._M_map;
  if (_272 != 0B)
    goto <bb 60>;
  else
    goto <bb 66>;

  <bb 60>:
  _273 = MEM[(struct _Deque_base *)__first_316]._M_impl._M_finish._M_node;
  _274 = _273 + 8;
  __nstart_275 = MEM[(struct _Deque_base *)__first_316]._M_impl._M_start._M_node;
  # DEBUG this => D#2937
  # DEBUG __nstart => __nstart_275
  # DEBUG __nfinish => _274
  # DEBUG __n => __nstart_275
  # DEBUG __n => __nstart_275
  if (_274 <= __nstart_275)
    goto <bb 65>;
  else
    goto <bb 61>;

  <bb 61>:

  <bb 62>:
  # __nstart_334 = PHI <__nstart_275(61), __nstart_278(63)>
  # DEBUG __n => __nstart_334
  _277 = *__nstart_334;
  # DEBUG this => D#2937
  # DEBUG __p => _277
  # DEBUG __size => 8
  # DEBUG D#1023 => &D#2937->_M_impl
  # DEBUG D#1021 => D#1023
  # DEBUG __p => _277
  # DEBUG __a => D#1021
  # DEBUG __n => D#1022
  # DEBUG D#1020 => D#1022
  # DEBUG D#1019 => D#1021
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1020
  # DEBUG __p => _277
  # DEBUG this => D#1017
  # DEBUG D.128576 => D#1018
  operator delete (_277);
  __nstart_278 = __nstart_334 + 8;
  # DEBUG __n => __nstart_278
  # DEBUG __n => __nstart_278
  if (_274 <= __nstart_278)
    goto <bb 64>;
  else
    goto <bb 63>;

  <bb 63>:
  goto <bb 62>;

  <bb 64>:
  pretmp_229 = MEM[(struct _Deque_base *)__first_316]._M_impl._M_map;

  <bb 65>:
  # prephitmp_235 = PHI <pretmp_229(64), _272(60)>
  # DEBUG D#1042 => D#2937->_M_impl._M_map_size
  # DEBUG D#2942 => MEM[(struct _Deque_base *)__first_316]._M_impl._M_map
  # DEBUG D#1040 => D#2937
  # DEBUG D#1041 => D#1042
  # DEBUG __p => D#2942
  # DEBUG this => D#1040
  # DEBUG __n => D#1041
  # DEBUG D#1039 => D#1041
  # DEBUG D#1038 => D#1040
  # DEBUG D#1037 => D#1038
  # DEBUG this => D#1037
  # DEBUG D#1036 => D#1037
  # DEBUG this => D#1036
  # DEBUG this => NULL
  # DEBUG D.99630 => NULL
  # DEBUG this => NULL
  # DEBUG D#719 => &__map_alloc
  # DEBUG D#720 => D#1039
  # DEBUG __p => D#2942
  # DEBUG __a => D#719
  # DEBUG __n => D#720
  # DEBUG D#718 => D#720
  # DEBUG D#717 => D#719
  # DEBUG D#715 => D#717
  # DEBUG D#716 => D#718
  # DEBUG __p => D#2942
  # DEBUG this => D#715
  # DEBUG D.128586 => D#716
  operator delete (prephitmp_235);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 66>:
  # DEBUG D#1043 => &D#2937->_M_impl
  # DEBUG this => D#1043
  # DEBUG this => D#1043
  # DEBUG this => D#1043
  MEM[(struct  &)__first_316] ={v} {CLOBBER};
  __first_96 = __first_316 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 68>;
  else
    goto <bb 67>;

  <bb 67>:
  goto <bb 59>;

  <bb 68>:
  pretmp_91 = this_9(D)->D.50924._M_impl._M_start;

  <bb 69>:
  # prephitmp_89 = PHI <pretmp_91(68), __first_39(57)>
  # DEBUG D#2227 => this_9(D)->D.50924._M_impl._M_end_of_storage
  # DEBUG D#2226 => (long int) D#2227
  # DEBUG D#2941 => this_9(D)->D.50924._M_impl._M_start
  # DEBUG D#2225 => (long int) D#2941
  # DEBUG D#2224 => D#2226 - D#2225
  # DEBUG D#2223 => D#2224 /[ex] 80
  # DEBUG D#2222 => &this_9(D)->D.50924
  # DEBUG D#665 => D#2222
  # DEBUG D#666 => (long unsigned int) D#2223
  # DEBUG __p => D#2941
  # DEBUG this => D#665
  # DEBUG __n => D#666
  # DEBUG D#664 => D#666
  # DEBUG D#663 => D#665
  if (prephitmp_89 != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  # DEBUG D#662 => &D#663->_M_impl
  # DEBUG D#660 => D#662
  # DEBUG D#661 => D#664
  # DEBUG __p => D#2941
  # DEBUG __a => D#660
  # DEBUG __n => D#661
  # DEBUG D#659 => D#661
  # DEBUG D#658 => D#660
  # DEBUG D#656 => D#658
  # DEBUG D#657 => D#659
  # DEBUG __p => D#2941
  # DEBUG this => D#656
  # DEBUG D.116346 => D#657
  operator delete (prephitmp_89);

  <bb 71>:
  this_9(D)->D.50924._M_impl._M_start = __new_finish_147;
  this_9(D)->D.50924._M_impl._M_finish = _94;
  _45 = __new_finish_147 + prephitmp_315;
  this_9(D)->D.50924._M_impl._M_end_of_storage = _45;

  <bb 72>:
  return;

<L23>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1053 => &__x_copy.c
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.62618);
  resx 2

<L29>:

  # __new_finish_1 = PHI <__new_finish_34(56), 0B(75)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 79>;
  else
    goto <bb 77>;

  <bb 77>:
  # DEBUG __first => __new_finish_147
  if (__new_finish_1 == __new_finish_147)
    goto <bb 78>;
  else
    goto <bb 83>;

  <bb 78>:
  # DEBUG D#2228 => &this_9(D)->D.50924
  # DEBUG D#665 => D#2228
  # DEBUG __p => NULL
  # DEBUG this => D#665
  # DEBUG __n => D#666
  # DEBUG D#664 => D#666
  # DEBUG D#663 => D#665
  if (__new_finish_147 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 79>:
  # DEBUG D#2220 => &this_9(D)->D.50924
  # DEBUG this => D#2220
  _49 = __n_7(D) + __elems_before_219;
  _50 = _49 * 80;
  _51 = __new_finish_147 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51
  # DEBUG __first => __first_28
  if (__first_28 == _51)
    goto <bb 78>;
  else
    goto <bb 80>;

  <bb 80>:

  <bb 81>:
  # __first_322 = PHI <__first_28(80), __first_98(82)>
  # DEBUG __first => __first_322
  # DEBUG __r => __first_322
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  _97 = &MEM[(struct deque *)__first_322].D.62618;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_97);
  MEM[(struct  &)__first_322] ={v} {CLOBBER};
  __first_98 = __first_322 + 80;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_51 == __first_98)
    goto <bb 78>;
  else
    goto <bb 82>;

  <bb 82>:
  goto <bb 81>;

  <bb 83>:

  <bb 84>:
  # __new_finish_325 = PHI <__new_finish_147(83), __new_finish_101(85)>
  # DEBUG __first => __new_finish_325
  # DEBUG __r => __new_finish_325
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  _100 = &MEM[(struct deque *)__new_finish_325].D.62618;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_325] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_325 + 80;
  # DEBUG __first => __new_finish_101
  # DEBUG __first => __new_finish_101
  if (__new_finish_1 == __new_finish_101)
    goto <bb 78>;
  else
    goto <bb 85>;

  <bb 85>:
  goto <bb 84>;

  <bb 86>:
  # DEBUG D#662 => &D#663->_M_impl
  # DEBUG D#660 => D#662
  # DEBUG D#661 => D#664
  # DEBUG __p => NULL
  # DEBUG __a => D#660
  # DEBUG __n => D#661
  # DEBUG D#659 => D#661
  # DEBUG D#658 => D#660
  # DEBUG D#656 => D#658
  # DEBUG D#657 => D#659
  # DEBUG __p => NULL
  # DEBUG this => D#656
  # DEBUG D.116397 => D#657
  operator delete (__new_finish_147);

  <bb 87>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 89>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#406 => &this_9(D)->D.50924._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#406
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72147
  # DEBUG this => &__position
  _213 = (long int) __position_23;
  # DEBUG this => &D.72147
  _214 = _213 - _150;
  _209 = _214 /[ex] 80;
  __elems_before_210 = (const size_type) _209;
  # DEBUG __elems_before => __elems_before_210
  # DEBUG D#2229 => &this_9(D)->D.50924
  # DEBUG D#1338 => D#2229
  # DEBUG __n => NULL
  # DEBUG this => D#1338
  # DEBUG D#1337 => D#1338
  goto <bb 33>;

  <bb 90>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#406 => &this_9(D)->D.50924._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#406
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72147
  # DEBUG this => &__position
  _203 = (long int) __position_23;
  # DEBUG this => &D.72147
  _253 = _203 - _150;
  _256 = _253 /[ex] 80;
  __elems_before_205 = (const size_type) _256;
  # DEBUG __elems_before => __elems_before_205
  # DEBUG D#2229 => &this_9(D)->D.50924
  # DEBUG D#1338 => D#2229
  # DEBUG __n => NULL
  # DEBUG this => D#1338
  # DEBUG D#1337 => D#1338
  if (__len_158 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

<L22>:
  # DEBUG __new_finish => __new_finish_147
  _345 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_345);
  if (__new_finish_147 == 0B)
    goto <bb 79>;
  else
    goto <bb 78>;

}



;; Function IQRouter::IQRouter(const Configuration&, Module*, const string&, int, int, int) (_ZN8IQRouterC2ERK13ConfigurationP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiii, funcdef_no=2222, decl_uid=51773, cgraph_uid=667, symbol_order=668)

Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
IQRouter::IQRouter(const Configuration&, Module*, const string&, int, int, int) (struct IQRouter * const this, const struct Configuration & config, struct Module * parent, const struct string & name, int id, int inputs, int outputs)
{
  struct _Rb_tree_node_base * SR.4988;
  struct _Rb_tree_node_base * SR.4987;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct vector * __pos;
  int * D.129733;
  int * __first;
  size_type __n;
  struct iterator __position;
  struct vector * __pos;
  int * D.129638;
  int * __first;
  size_type __n;
  struct iterator __position;
  struct vector * __pos;
  int * D.129543;
  int * __first;
  size_type __n;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  __size_type __len;
  size_type __dnew;
  size_type __dnew;
  struct __string_type D.129353;
  struct __string_type D.129352;
  struct iterator __position;
  struct BufferState * __x;
  __size_type __len;
  size_type __dnew;
  struct __string_type D.129100;
  struct __string_type D.129099;
  struct iterator __position;
  struct Buffer * __x;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.128926;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.128911;
  struct iterator D.128896;
  struct _Rb_tree_node * __y;
  struct basic_string & D.128840;
  const long unsigned int D.128799;
  const long unsigned int D.128798;
  const size_t __num_nodes;
  struct pair * * __nstart;
  struct pair * * __nfinish;
  const long unsigned int D.128765;
  const long unsigned int D.128764;
  const size_t __num_nodes;
  struct pair * * __nstart;
  struct pair * * __nfinish;
  const long unsigned int D.128731;
  const long unsigned int D.128730;
  const size_t __num_nodes;
  struct pair * * __nstart;
  struct pair * * __nfinish;
  struct _Rb_tree_node_base * SR.3132;
  struct iterator D.116773;
  int i;
  struct ostringstream module_name;
  int j;
  struct ostringstream module_name;
  int i;
  struct string spec_sw_alloc_type;
  struct string sw_alloc_type;
  struct string vc_alloc_type;
  const struct string rf;
  const struct string D.62834;
  struct deque D.62833;
  struct value_type D.62832;
  struct deque D.62831;
  struct value_type D.62830;
  const struct string D.62828;
  struct vector D.62826;
  struct vector D.62824;
  struct vector D.62822;
  const struct string D.62820;
  const struct string D.62818;
  const struct string D.62816;
  struct basic_string D.62813;
  const struct string D.62811;
  const struct string D.62809;
  struct basic_string D.62807;
  const struct string D.62805;
  const struct string D.62803;
  struct basic_string D.62801;
  const struct string D.62799;
  const struct string D.62797;
  const struct string D.62795;
  const struct __string_type D.62792;
  struct __string_type D.62790;
  const struct __string_type D.62784;
  struct __string_type D.62782;
  struct basic_string D.62777;
  const struct string D.62768;
  struct string D.62767;
  struct basic_string D.62766;
  const struct string D.62771;
  struct string D.62770;
  const struct string D.62763;
  const struct string D.62761;
  const struct string D.62759;
  const struct string D.62757;
  const struct string D.62755;
  const struct string D.62753;
  const struct string D.62751;
  const struct string D.62749;
  const struct string D.62747;
  const struct string D.62745;
  const struct string D.62743;
  const struct string D.62741;
  const struct string D.62739;
  int * _2;
  struct vector * pretmp_3;
  struct vector * pretmp_8;
  long unsigned int _9;
  int * pretmp_13;
  struct vector * pretmp_14;
  struct Router * _41;
  struct _Deque_base * _52;
  struct _Rb_tree_node_base * _53;
  struct _Deque_base * _54;
  struct _Deque_base * _55;
  struct _Deque_base * _56;
  struct _Deque_base * _57;
  long unsigned int _58;
  struct _Rb_tree_node_base * _59;
  int _63;
  char * const _66;
  int _70;
  bool _71;
  char * const _74;
  int _78;
  struct vector * pretmp_79;
  bool _80;
  char * const _83;
  int _87;
  bool _88;
  char * const _91;
  int _95;
  struct vector * pretmp_96;
  bool _97;
  char * const _100;
  int _104;
  bool _105;
  char * const _108;
  int _112;
  bool _113;
  char * const _116;
  int _120;
  bool _121;
  char * const _124;
  struct _Rb_tree_node_base * _125;
  int _128;
  char * const _131;
  struct _Rb_tree_node_base * _132;
  int _135;
  char * const _138;
  char * const _144;
  char * const _146;
  int _149;
  char * const _152;
  struct vector * pretmp_155;
  char * const _158;
  char * const _160;
  struct vector * pretmp_165;
  struct vector * pretmp_166;
  char * const _167;
  char * const _169;
  char * const _171;
  char * const _173;
  char * const _175;
  char * const _177;
  struct vector * pretmp_179;
  char * const _182;
  void (*<T72d4>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _184;
  int _186;
  long unsigned int _187;
  struct vector * _188;
  struct vector * pretmp_189;
  int _190;
  struct vector * pretmp_191;
  char * const _193;
  void * _195;
  struct vector * pretmp_196;
  int _197;
  long unsigned int _199;
  char * const _204;
  char * const _205;
  char * const _209;
  char * const _211;
  int _215;
  long unsigned int _216;
  struct vector * _217;
  struct vector * pretmp_218;
  int _219;
  struct vector * pretmp_220;
  char * const _222;
  void * _224;
  struct vector * pretmp_225;
  long unsigned int _227;
  int _231;
  char * const _233;
  char * const _234;
  char * const _238;
  char * const _240;
  char * const _247;
  bool _248;
  int & _249;
  struct vector * pretmp_251;
  char * const _254;
  char * const _256;
  int _258;
  int _259;
  int _260;
  long unsigned int _261;
  struct vector * _262;
  int * const _263;
  int _264;
  int _265;
  int _266;
  int _267;
  int _268;
  long unsigned int _269;
  struct vector * pretmp_271;
  struct Allocator * _273;
  char * const _275;
  char * const _277;
  char * const _282;
  char * const _285;
  char * const _289;
  int _290;
  int _291;
  int _292;
  int _293;
  int _294;
  int _295;
  struct vector * pretmp_297;
  struct Allocator * _299;
  char * const _301;
  char * const _303;
  char * const _308;
  int _312;
  char * const _314;
  bool _315;
  int _316;
  int _317;
  int _318;
  int _319;
  int _320;
  int _321;
  struct Allocator * _324;
  char * const _326;
  char * const _328;
  char * const _333;
  char * const _336;
  int _338;
  int _339;
  int _340;
  long unsigned int _341;
  struct vector * _342;
  int * _343;
  int _344;
  int _345;
  int _346;
  long unsigned int _347;
  int _348;
  int _353;
  bool _354;
  char * const _357;
  int _359;
  struct BufferState * & _360;
  char * const _364;
  char * const _366;
  int _367;
  int _368;
  long unsigned int _369;
  char * const _373;
  int * _375;
  int _378;
  long unsigned int _379;
  struct vector * _380;
  int * _381;
  int _385;
  int _387;
  long unsigned int _388;
  struct vector * _389;
  int * _390;
  int _394;
  int _396;
  long unsigned int _397;
  struct vector * _398;
  struct queue * const _399;
  struct Buffer * & _403;
  int _406;
  char * const _409;
  int _410;
  long unsigned int _411;
  struct vector * _412;
  struct queue * const _413;
  int _416;
  long unsigned int _417;
  struct vector * _418;
  int * const _419;
  struct _Deque_base * _422;
  int _425;
  bool _426;
  char * const _428;
  char * const _430;
  int _431;
  int _432;
  int _433;
  long unsigned int _434;
  struct vector * _435;
  int * const _436;
  int _437;
  int _438;
  int _439;
  long unsigned int _440;
  struct vector * _441;
  int * const _442;
  int _443;
  int _444;
  int _445;
  long unsigned int _446;
  struct vector * _447;
  void * _450;
  int _451;
  void * _455;
  int _456;
  char * const _459;
  char * const _460;
  char * const _461;
  char * const _462;
  char * const _470;
  char * const _472;
  char * const _478;
  int * _481;
  struct vector * pretmp_482;
  int * _484;
  char * const _487;
  char * const _488;
  char * const _490;
  char * const _492;
  char * const _493;
  char * const _495;
  char * const _496;
  char * const _498;
  int * _499;
  char * const _500;
  char * const _502;
  char * const _505;
  char * const _506;
  char * const _509;
  char * const _511;
  char * const _513;
  char * const _515;
  char * const _517;
  char * const _519;
  char * const _521;
  char * const _523;
  char * const _525;
  char * const _527;
  char * const _529;
  char * const _531;
  struct vector * pretmp_533;
  int * _543;
  int * _544;
  int * _545;
  int * _550;
  struct BufferState * * _551;
  struct Buffer * * _552;
  struct _Rep_type * _553;
  struct _Rep_type * _554;
  struct Buffer * * _557;
  struct BufferState * * _558;
  struct Allocator * pretmp_651;
  struct Allocator * prephitmp_656;
  struct vector * pretmp_665;
  struct vector * pretmp_676;
  int * pretmp_711;
  struct vector * pretmp_720;
  struct vector * prephitmp_810;
  struct vector * pretmp_811;
  struct vector * prephitmp_812;
  int * prephitmp_816;
  struct vector * pretmp_818;
  int * prephitmp_831;
  bool pretmp_842;
  bool prephitmp_843;
  int pretmp_846;
  int pretmp_847;
  int prephitmp_848;
  int * prephitmp_856;
  const size_type _864;
  int pretmp_867;
  int prephitmp_868;
  int pretmp_869;
  struct vector * pretmp_878;
  struct vector * pretmp_879;
  struct vector * pretmp_880;
  struct vector * pretmp_881;
  struct vector * pretmp_882;
  struct vector * pretmp_884;
  struct vector * pretmp_885;
  struct vector * pretmp_886;
  struct vector * pretmp_887;
  struct vector * pretmp_899;
  struct vector * pretmp_901;
  struct vector * pretmp_902;
  struct vector * pretmp_903;
  struct vector * pretmp_904;
  int * prephitmp_905;
  struct vector * pretmp_907;
  struct vector * pretmp_908;
  struct vector * pretmp_909;
  struct vector * pretmp_910;
  struct vector * pretmp_922;
  struct vector * pretmp_923;
  struct vector * pretmp_924;
  struct vector * pretmp_925;
  struct vector * pretmp_928;
  struct vector * pretmp_929;
  struct vector * pretmp_930;
  struct vector * prephitmp_931;
  struct vector * pretmp_938;
  struct vector * pretmp_939;
  struct vector * pretmp_940;
  struct vector * pretmp_941;
  struct vector * pretmp_943;
  struct vector * pretmp_944;
  struct vector * pretmp_945;
  struct vector * pretmp_946;
  struct vector * pretmp_958;
  struct vector * pretmp_959;
  struct vector * pretmp_960;
  struct vector * pretmp_961;
  struct vector * pretmp_963;
  struct vector * prephitmp_964;
  struct vector * pretmp_965;
  struct vector * pretmp_966;
  struct vector * pretmp_968;
  struct vector * pretmp_969;
  struct vector * pretmp_970;
  struct vector * pretmp_971;
  struct vector * pretmp_978;
  struct vector * pretmp_979;
  struct vector * pretmp_980;
  struct vector * pretmp_981;
  struct vector * pretmp_984;
  struct vector * pretmp_985;
  struct vector * pretmp_986;
  struct vector * pretmp_987;
  struct vector * pretmp_989;
  struct vector * prephitmp_990;
  struct vector * pretmp_991;
  struct vector * pretmp_992;
  struct vector * pretmp_1004;
  struct vector * pretmp_1005;
  struct vector * pretmp_1006;
  struct vector * pretmp_1007;
  struct vector * pretmp_1009;
  struct vector * pretmp_1010;
  struct vector * pretmp_1011;
  struct vector * pretmp_1012;
  struct vector * pretmp_1019;
  struct vector * pretmp_1020;
  struct vector * pretmp_1021;
  struct vector * pretmp_1022;
  int pretmp_1038;
  int prephitmp_1039;
  struct Allocator * pretmp_1040;
  struct Allocator * prephitmp_1041;
  sizetype _1042;
  int prephitmp_1070;
  int pretmp_1071;
  int prephitmp_1073;
  sizetype _1142;
  struct vector * pretmp_1151;
  struct vector * pretmp_1158;
  struct vector * pretmp_1159;
  struct vector * pretmp_1353;
  struct vector * pretmp_1354;
  struct vector * pretmp_1355;
  struct vector * pretmp_1356;
  struct pair * * _1357;
  long unsigned int _1358;
  long unsigned int _1359;
  long unsigned int _1360;
  long unsigned int _1361;
  struct vector * pretmp_1363;
  struct pair * _1365;
  struct pair * _1366;
  struct vector * pretmp_1368;
  struct vector * prephitmp_1369;
  struct vector * pretmp_1370;
  struct vector * pretmp_1371;
  struct vector * pretmp_1372;
  void * _1373;
  struct pair * * _1374;
  long unsigned int _1375;
  struct vector * pretmp_1377;
  struct vector * pretmp_1378;
  struct vector * pretmp_1379;
  struct pair * * _1380;
  long unsigned int _1381;
  long unsigned int _1382;
  long unsigned int _1383;
  long unsigned int _1384;
  struct vector * pretmp_1386;
  struct pair * _1388;
  struct pair * _1389;
  struct vector * pretmp_1390;
  struct vector * pretmp_1391;
  struct vector * pretmp_1392;
  struct vector * prephitmp_1394;
  struct vector * pretmp_1395;
  void * _1396;
  struct pair * * _1397;
  struct vector * pretmp_1398;
  struct vector * pretmp_1399;
  struct vector * pretmp_1400;
  sizetype _1401;
  struct vector * pretmp_1402;
  struct pair * * _1403;
  long unsigned int _1404;
  long unsigned int _1405;
  long unsigned int _1406;
  long unsigned int _1407;
  struct pair * _1411;
  struct pair * _1412;
  struct vector * pretmp_1417;
  struct vector * pretmp_1418;
  void * _1419;
  struct pair * * _1420;
  char * const _1421;
  const size_type _1422;
  char * _1423;
  char * const _1424;
  const size_type _1425;
  struct vector * pretmp_1426;
  char * const _1429;
  const size_type _1430;
  char * _1431;
  const size_type _1432;
  char * const _1433;
  char * const _1434;
  struct vector * pretmp_1436;
  struct vector * pretmp_1437;
  struct vector * pretmp_1438;
  struct _Rb_tree_node_base * cstore_1441;
  struct vector * pretmp_1442;
  struct vector * pretmp_1443;
  char * const _1450;
  long unsigned int _1452;
  const size_type _1458;
  char * const _1461;
  long unsigned int _1464;
  long unsigned int _1468;
  struct Buffer * * const _1469;
  struct Buffer * * const _1470;
  long int _1471;
  long int _1472;
  long int _1473;
  long int _1474;
  size_type _1475;
  long unsigned int _1476;
  long unsigned int _1477;
  struct Buffer * * _1478;
  char * const pretmp_1479;
  long int _1481;
  sizetype iftmp.65_1482;
  struct basic_ios * _1483;
  size_type prephitmp_1485;
  struct vector * pretmp_1486;
  struct vector * pretmp_1487;
  struct vector * pretmp_1488;
  struct vector * pretmp_1489;
  struct vector * pretmp_1490;
  struct vector * pretmp_1491;
  struct vector * pretmp_1492;
  long int _1493;
  sizetype iftmp.71_1494;
  struct basic_ios * _1495;
  char_type * const _1496;
  char_type * const _1497;
  char_type * const _1498;
  char * const _1499;
  char_type * const _1500;
  char * const _1501;
  struct vector * pretmp_1502;
  char * const _1503;
  char * const _1504;
  char * const _1505;
  struct vector * pretmp_1506;
  struct vector * prephitmp_1507;
  struct vector * prephitmp_1508;
  int * _1510;
  struct vector * pretmp_1511;
  struct vector * pretmp_1512;
  struct vector * pretmp_1513;
  size_type pretmp_1514;
  struct vector * pretmp_1515;
  struct vector * pretmp_1517;
  struct vector * pretmp_1523;
  const size_type _1524;
  _Ios_Openmode _1525;
  int __a.78_1526;
  int _1527;
  long unsigned int _1528;
  char * const _1530;
  struct vector * pretmp_1532;
  long int _1534;
  sizetype iftmp.71_1535;
  struct basic_ios * _1536;
  struct vector * pretmp_1538;
  struct vector * pretmp_1539;
  struct vector * pretmp_1540;
  struct BufferState * * const _1541;
  struct BufferState * * const _1542;
  long int _1543;
  long int _1544;
  long int _1545;
  long int _1546;
  size_type _1547;
  long unsigned int _1548;
  long unsigned int _1549;
  struct BufferState * * _1550;
  struct vector * pretmp_1551;
  long int _1553;
  sizetype iftmp.65_1554;
  struct basic_ios * _1555;
  struct vector * pretmp_1557;
  struct vector * pretmp_1558;
  struct vector * pretmp_1559;
  struct vector * pretmp_1560;
  struct vector * pretmp_1561;
  struct vector * prephitmp_1562;
  struct vector * pretmp_1563;
  int * prephitmp_1564;
  long int _1565;
  sizetype iftmp.71_1566;
  struct basic_ios * _1567;
  char_type * const _1568;
  char_type * const _1569;
  char_type * const _1570;
  char * const _1571;
  char_type * const _1572;
  char * const _1573;
  struct vector * pretmp_1574;
  char * const _1575;
  char * const _1576;
  char * const _1577;
  long int __last.18_1578;
  long int __first.19_1579;
  difference_type _1580;
  long unsigned int __dnew.15_1581;
  char * _1582;
  long unsigned int __dnew.16_1583;
  const char_type _1585;
  char * _1588;
  struct vector * pretmp_1589;
  struct vector * pretmp_1590;
  int * prephitmp_1591;
  struct vector * pretmp_1595;
  struct vector * pretmp_1596;
  struct vector * pretmp_1597;
  bool _1598;
  char * const pretmp_1599;
  int * pretmp_1601;
  int * pretmp_1607;
  const size_type _1608;
  _Ios_Openmode _1609;
  int __a.78_1610;
  int _1611;
  struct vector * pretmp_1612;
  char * const _1614;
  int * prephitmp_1616;
  int (*__vtbl_ptr_type) () * iftmp.70_1617;
  long int _1618;
  sizetype iftmp.71_1619;
  struct basic_ios * _1620;
  int (*__vtbl_ptr_type) () * iftmp.72_1621;
  int pretmp_1622;
  struct vector * pretmp_1623;
  int * const _1625;
  int * const _1626;
  long int _1627;
  long int _1628;
  long int _1629;
  long int _1630;
  size_type _1631;
  long unsigned int _1632;
  long unsigned int _1633;
  int * _1634;
  int * const _1635;
  long int _1636;
  long int _1637;
  long int _1638;
  long int _1639;
  size_type _1640;
  long unsigned int _1641;
  long unsigned int _1642;
  int * _1643;
  struct vector * pretmp_1644;
  int * _1646;
  struct vector * pretmp_1647;
  struct vector * prephitmp_1648;
  long unsigned int _1651;
  int * _1652;
  const size_type pretmp_1653;
  struct vector * const _1654;
  struct vector * const _1655;
  long int _1656;
  long int _1657;
  long int _1658;
  long int _1659;
  size_type _1660;
  long unsigned int _1661;
  long unsigned int _1662;
  const void * prephitmp_1664;
  int * _1665;
  struct vector * pretmp_1667;
  int * _1669;
  long unsigned int _1674;
  int * _1675;
  struct vector * const _1677;
  struct vector * const _1678;
  long int _1679;
  long int _1680;
  long int _1681;
  long int _1682;
  size_type _1683;
  long unsigned int _1684;
  long unsigned int _1685;
  const void * prephitmp_1687;
  int * _1688;
  struct vector * pretmp_1690;
  int * _1692;
  const void * pretmp_1693;
  char * const prephitmp_1694;
  long unsigned int _1697;
  int * _1698;
  struct vector * pretmp_1699;
  struct vector * const _1700;
  struct vector * const _1701;
  long int _1702;
  long int _1703;
  long int _1704;
  long int _1705;
  size_type _1706;
  long unsigned int _1707;
  long unsigned int _1708;
  int * _1711;
  struct queue * const _1713;
  long int _1714;
  long int _1715;
  long int _1716;
  long int _1717;
  size_type _1718;
  long unsigned int _1719;
  long unsigned int _1720;
  struct _Deque_base * _1723;
  struct queue * const _1725;
  long int _1726;
  long int _1727;
  long int _1728;
  long int _1729;
  size_type _1730;
  long unsigned int _1731;
  long unsigned int _1732;
  struct _Deque_base * _1735;
  int * const _1737;
  long int _1738;
  long int _1739;
  long int _1740;
  long int _1741;
  size_type _1742;
  long unsigned int _1743;
  long unsigned int _1744;
  int * _1745;
  int * const _1746;
  long int _1747;
  long int _1748;
  long int _1749;
  long int _1750;
  size_type _1751;
  long unsigned int _1752;
  long unsigned int _1753;
  int * _1754;
  int * const _1755;
  long int _1756;
  long int _1757;
  long int _1758;
  long int _1759;
  size_type _1760;
  long unsigned int _1761;
  long unsigned int _1762;
  int * _1763;
  bool _1773;
  bool _1786;
  struct vector * pretmp_1787;
  struct vector * pretmp_1798;
  const void * pretmp_1801;
  struct vector * pretmp_1804;
  struct vector * pretmp_1824;
  struct vector * pretmp_1825;
  struct vector * pretmp_1840;
  struct vector * pretmp_1841;
  struct vector * pretmp_1856;
  struct vector * pretmp_1857;
  struct vector * pretmp_1872;
  struct vector * pretmp_1877;
  struct vector * pretmp_1878;
  struct vector * pretmp_1879;
  struct Allocator * pretmp_1880;
  struct vector * pretmp_1881;
  struct vector * prephitmp_1882;
  struct vector * pretmp_1883;
  struct vector * pretmp_1884;
  struct vector * pretmp_1885;
  struct vector * pretmp_1886;
  struct vector * pretmp_1887;
  struct vector * pretmp_1888;
  struct vector * pretmp_1928;
  struct vector * pretmp_1929;
  struct vector * pretmp_1930;
  struct vector * pretmp_1931;
  struct vector * pretmp_1943;
  struct vector * prephitmp_1944;
  struct vector * prephitmp_1957;
  struct vector * pretmp_1958;
  struct vector * pretmp_1959;
  struct vector * pretmp_1971;
  struct vector * pretmp_1972;
  struct vector * pretmp_1973;
  struct vector * pretmp_1977;
  struct vector * pretmp_1984;
  struct vector * pretmp_1985;
  struct vector * pretmp_2041;
  struct vector * pretmp_2042;
  struct vector * pretmp_2043;
  struct vector * prephitmp_2044;
  struct vector * pretmp_2057;
  struct vector * pretmp_2058;
  struct vector * pretmp_2059;
  struct vector * pretmp_2060;
  const void * prephitmp_2064;
  const void * prephitmp_2065;
  const void * pretmp_2073;
  const void * prephitmp_2075;
  struct vector * pretmp_2085;
  struct vector * pretmp_2086;
  struct vector * pretmp_2091;
  struct vector * pretmp_2093;
  struct vector * pretmp_2098;
  struct vector * pretmp_2099;
  const void * prephitmp_2102;
  void * _2123;
  void * _2124;
  struct vector * pretmp_2126;
  sizetype _2132;
  sizetype _2135;
  long unsigned int _2147;
  struct vector * pretmp_2150;
  long unsigned int _2157;
  long unsigned int _2159;
  struct vector * prephitmp_2174;
  int pretmp_2182;
  int prephitmp_2183;
  int pretmp_2189;
  int * pretmp_2221;
  int * pretmp_2228;
  struct vector * pretmp_2235;
  const void * pretmp_2237;
  long unsigned int _2238;
  char * const _2240;
  struct Allocator * prephitmp_2248;
  int _2251;
  sizetype _2256;
  struct vector * pretmp_2263;
  struct vector * pretmp_2264;
  int * _2270;
  struct vector * pretmp_2271;
  struct vector * pretmp_2272;
  struct vector * pretmp_2273;
  struct vector * pretmp_2274;
  struct vector * pretmp_2275;
  struct vector * pretmp_2276;
  struct vector * pretmp_2277;
  struct vector * pretmp_2278;
  struct vector * pretmp_2279;
  struct vector * pretmp_2280;
  struct vector * prephitmp_2281;
  struct vector * pretmp_2282;
  struct vector * pretmp_2283;
  struct vector * pretmp_2284;
  struct vector * pretmp_2285;
  struct vector * pretmp_2286;
  struct vector * pretmp_2287;
  struct vector * pretmp_2288;
  struct vector * pretmp_2289;
  struct vector * pretmp_2290;
  struct vector * pretmp_2291;
  struct vector * pretmp_2292;
  struct vector * pretmp_2293;
  struct vector * pretmp_2294;
  struct vector * pretmp_2295;
  struct vector * pretmp_2296;
  struct vector * pretmp_2297;
  struct vector * pretmp_2298;
  struct vector * pretmp_2299;
  struct vector * pretmp_2300;
  struct vector * pretmp_2301;
  struct vector * pretmp_2302;
  struct vector * pretmp_2303;
  struct vector * pretmp_2304;
  struct vector * pretmp_2305;
  struct vector * pretmp_2306;
  struct vector * pretmp_2307;
  struct vector * pretmp_2308;
  struct vector * pretmp_2309;
  struct vector * pretmp_2310;
  struct vector * pretmp_2311;
  struct vector * pretmp_2312;
  struct vector * pretmp_2313;
  struct vector * pretmp_2314;
  struct vector * pretmp_2315;
  struct vector * pretmp_2316;
  struct vector * prephitmp_2317;
  struct vector * pretmp_2318;
  struct vector * pretmp_2319;
  struct vector * pretmp_2320;
  struct vector * pretmp_2321;
  struct vector * pretmp_2322;
  struct vector * pretmp_2323;
  struct vector * prephitmp_2324;
  struct vector * pretmp_2325;
  struct vector * pretmp_2326;
  struct vector * pretmp_2327;
  struct vector * pretmp_2328;
  struct vector * pretmp_2329;
  struct vector * pretmp_2330;
  struct vector * prephitmp_2331;
  struct vector * pretmp_2332;
  struct vector * pretmp_2333;
  struct vector * pretmp_2334;
  struct vector * pretmp_2335;
  struct vector * pretmp_2336;
  struct vector * prephitmp_2337;
  struct vector * pretmp_2338;
  struct vector * pretmp_2339;
  struct vector * pretmp_2340;
  struct vector * pretmp_2341;
  struct vector * prephitmp_2342;
  struct vector * pretmp_2343;
  struct vector * pretmp_2344;
  struct vector * pretmp_2345;
  struct vector * pretmp_2346;
  struct vector * pretmp_2347;
  struct vector * pretmp_2348;
  struct vector * pretmp_2349;
  struct vector * pretmp_2350;
  struct vector * pretmp_2351;
  struct vector * pretmp_2352;
  int * prephitmp_2353;
  int * pretmp_2354;
  int * prephitmp_2357;
  int prephitmp_2359;
  struct vector * pretmp_2360;
  struct vector * prephitmp_2361;
  struct vector * pretmp_2362;
  struct vector * prephitmp_2363;
  long unsigned int _2364;
  struct vector * pretmp_2368;
  struct vector * pretmp_2369;
  struct vector * pretmp_2370;
  struct vector * pretmp_2371;
  struct vector * pretmp_2372;
  struct vector * pretmp_2373;
  struct vector * pretmp_2374;
  struct vector * pretmp_2375;
  struct vector * pretmp_2376;
  struct vector * pretmp_2377;
  struct vector * pretmp_2378;
  struct vector * pretmp_2379;
  struct vector * pretmp_2380;
  struct vector * pretmp_2381;
  struct vector * pretmp_2382;
  struct vector * pretmp_2383;
  struct vector * pretmp_2384;
  struct vector * pretmp_2385;
  struct vector * pretmp_2386;
  struct vector * pretmp_2387;
  struct vector * pretmp_2388;
  struct vector * pretmp_2389;
  struct vector * pretmp_2390;
  struct vector * prephitmp_2391;
  struct vector * pretmp_2392;
  struct vector * pretmp_2393;
  struct vector * pretmp_2394;
  struct vector * pretmp_2395;
  struct vector * pretmp_2396;
  struct vector * pretmp_2397;
  struct vector * pretmp_2398;
  struct vector * pretmp_2399;
  struct vector * pretmp_2400;
  struct vector * pretmp_2401;
  struct vector * pretmp_2402;
  struct vector * pretmp_2403;
  struct vector * pretmp_2404;
  struct vector * pretmp_2405;
  struct vector * pretmp_2406;
  struct vector * pretmp_2407;
  struct vector * pretmp_2408;
  struct vector * pretmp_2409;
  struct vector * pretmp_2410;
  struct vector * pretmp_2411;
  struct vector * pretmp_2412;
  struct vector * pretmp_2413;
  struct vector * pretmp_2414;
  struct vector * pretmp_2415;
  struct vector * pretmp_2416;
  struct vector * pretmp_2417;
  struct vector * pretmp_2418;
  struct vector * pretmp_2419;
  struct vector * prephitmp_2420;
  struct vector * pretmp_2421;
  struct vector * pretmp_2422;
  struct vector * pretmp_2423;
  struct vector * pretmp_2424;
  struct vector * pretmp_2425;
  struct vector * pretmp_2426;
  struct vector * pretmp_2427;
  struct vector * pretmp_2428;
  struct vector * pretmp_2429;
  struct vector * pretmp_2430;
  struct vector * pretmp_2431;
  struct vector * pretmp_2432;
  struct vector * pretmp_2433;
  struct vector * pretmp_2434;
  struct vector * pretmp_2435;
  struct vector * pretmp_2436;
  struct vector * pretmp_2437;
  struct vector * pretmp_2438;
  struct vector * pretmp_2439;
  struct vector * pretmp_2440;
  struct vector * pretmp_2441;
  struct vector * pretmp_2442;
  struct vector * pretmp_2443;
  struct vector * pretmp_2444;
  struct vector * pretmp_2445;
  struct vector * pretmp_2446;
  struct vector * pretmp_2447;
  struct vector * pretmp_2448;
  struct vector * prephitmp_2449;

  <bb 2>:
  _41 = &this_40(D)->D.51790;
  Router::Router (_41, config_43(D), parent_44(D), name_45(D), id_46(D), inputs_47(D), outputs_48(D));
  this_40(D)->D.51790.D.42039.D.31271._vptr.Module = &MEM[(void *)&_ZTV8IQRouter + 16B];
  this_40(D)->_active = 0;
  # DEBUG D#2270 => &this_40(D)->_in_queue_flits
  # DEBUG this => D#2270
  # DEBUG D#535 => &D#2270->_M_t
  # DEBUG this => D#535
  # DEBUG D#534 => &MEM[(struct _Rb_tree *)D#535]._M_impl
  # DEBUG this => D#534
  # DEBUG this => D#534
  # DEBUG this => D#534
  MEM[(struct _Rb_tree_impl *)this_40(D) + 304B]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)this_40(D) + 304B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_40(D) + 304B]._M_node_count = 0;
  # DEBUG this => D#534
  _53 = &MEM[(struct _Rb_tree_impl *)this_40(D) + 304B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_40(D) + 304B]._M_header._M_left = _53;
  MEM[(struct _Rb_tree_impl *)this_40(D) + 304B]._M_header._M_right = _53;
  # DEBUG D#2269 => &this_40(D)->_proc_credits
  # DEBUG this => D#2269
  # DEBUG D#2989 => &MEM[(struct deque *)this_40(D) + 352B].D.44092
  # DEBUG this => D#2989
  # DEBUG D#1148 => &D#2989->_M_impl
  # DEBUG this => D#1148
  # DEBUG this => D#1148
  # DEBUG this => D#1148
  MEM[(struct _Deque_impl *)this_40(D) + 352B]._M_map = 0B;
  # DEBUG D#539 => &D#1148->_M_start
  # DEBUG this => D#539
  MEM[(struct _Deque_iterator *)this_40(D) + 368B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 368B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 368B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 368B]._M_node = 0B;
  # DEBUG D#538 => &D#1148->_M_finish
  # DEBUG this => D#538
  MEM[(struct _Deque_iterator *)this_40(D) + 400B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 400B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 400B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 400B]._M_node = 0B;
  # DEBUG this => D#2989
  # DEBUG __num_elements => 0
  # DEBUG __size => 24
  # DEBUG __num_nodes => 1
  # DEBUG __a => &D.128730
  # DEBUG __b => &D.128731
  MEM[(struct _Deque_base *)this_40(D) + 352B]._M_impl._M_map_size = 8;
  # DEBUG D#1143 => D#2989
  # DEBUG __n => 8
  # DEBUG this => D#1143
  # DEBUG D#1142 => D#1143
  # DEBUG D#841 => D#1142
  # DEBUG this => D#841
  # DEBUG D#840 => D#841
  # DEBUG this => D#840
  # DEBUG this => NULL
  # DEBUG D.97702 => NULL
  # DEBUG this => NULL
  # DEBUG D#1141 => &__map_alloc
  # DEBUG __n => 8
  # DEBUG __a => D#1141
  # DEBUG D#1140 => D#1141
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => 0B
  # DEBUG __n => 8
  # DEBUG this => D#1138
  # DEBUG D.128728 => D#1139
  # DEBUG D#1137 => D#1138
  # DEBUG D#1136 => D#1137
  # DEBUG this => D#1136
  _1357 = operator new (64);

  <bb 3>:
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct _Deque_base *)this_40(D) + 352B]._M_impl._M_map = _1357;
  _1358 = MEM[(struct _Deque_base *)this_40(D) + 352B]._M_impl._M_map_size;
  _1359 = _1358 + 18446744073709551615;
  _1360 = _1359 >> 1;
  _1361 = _1360 * 8;
  __nstart_1362 = _1357 + _1361;
  # DEBUG __nstart => __nstart_1362
  __nfinish_1364 = __nstart_1362 + 8;
  # DEBUG __nfinish => __nfinish_1364
  # DEBUG D#1071 => D#2989
  std::_Deque_base<std::pair<int, std::pair<Credit*, int> >, std::allocator<std::pair<int, std::pair<Credit*, int> > > >::_ZNSt11_Deque_baseISt4pairIiS0_IP6CreditiEESaIS4_EE15_M_create_nodesEPPS4_S8_.isra.287 (__nstart_1362, __nfinish_1364);

  <bb 4>:
  # DEBUG D#1146 => &D#2989->_M_impl._M_start
  # DEBUG this => D#1146
  # DEBUG __new_node => __nstart_1362
  MEM[(struct _Deque_iterator *)this_40(D) + 368B]._M_node = __nstart_1362;
  _1365 = *__nstart_1362;
  MEM[(struct _Deque_iterator *)this_40(D) + 368B]._M_first = _1365;
  # DEBUG __size => 24
  _1366 = _1365 + 504;
  MEM[(struct _Deque_iterator *)this_40(D) + 368B]._M_last = _1366;
  # DEBUG D#1145 => &D#2989->_M_impl._M_finish
  # DEBUG this => D#1145
  # DEBUG __new_node => __nstart_1362
  MEM[(struct _Deque_iterator *)this_40(D) + 400B]._M_node = __nstart_1362;
  MEM[(struct _Deque_iterator *)this_40(D) + 400B]._M_first = _1365;
  # DEBUG __size => 24
  MEM[(struct _Deque_iterator *)this_40(D) + 400B]._M_last = _1366;
  MEM[(struct _Deque_base *)this_40(D) + 352B]._M_impl._M_start._M_cur = _1365;
  # DEBUG __size => 24
  MEM[(struct _Deque_base *)this_40(D) + 352B]._M_impl._M_finish._M_cur = _1365;
  # DEBUG D#2267 => &this_40(D)->_route_vcs
  # DEBUG this => D#2267
  # DEBUG D#2988 => &MEM[(struct deque *)this_40(D) + 432B].D.45014
  # DEBUG this => D#2988
  # DEBUG D#1161 => &D#2988->_M_impl
  # DEBUG this => D#1161
  # DEBUG this => D#1161
  # DEBUG this => D#1161
  MEM[(struct _Deque_impl *)this_40(D) + 432B]._M_map = 0B;
  # DEBUG D#547 => &D#1161->_M_start
  # DEBUG this => D#547
  MEM[(struct _Deque_iterator *)this_40(D) + 448B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 448B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 448B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 448B]._M_node = 0B;
  # DEBUG D#546 => &D#1161->_M_finish
  # DEBUG this => D#546
  MEM[(struct _Deque_iterator *)this_40(D) + 480B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 480B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 480B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 480B]._M_node = 0B;
  # DEBUG this => D#2988
  # DEBUG __num_elements => 0
  # DEBUG __size => 12
  # DEBUG __num_nodes => 1
  # DEBUG __a => &D.128764
  # DEBUG __b => &D.128765
  MEM[(struct _Deque_base *)this_40(D) + 432B]._M_impl._M_map_size = 8;
  # DEBUG D#1156 => D#2988
  # DEBUG __n => 8
  # DEBUG this => D#1156
  # DEBUG D#1155 => D#1156
  # DEBUG D#858 => D#1155
  # DEBUG this => D#858
  # DEBUG D#857 => D#858
  # DEBUG this => D#857
  # DEBUG this => NULL
  # DEBUG D.97793 => NULL
  # DEBUG this => NULL
  # DEBUG D#1154 => &__map_alloc
  # DEBUG __n => 8
  # DEBUG __a => D#1154
  # DEBUG D#1153 => D#1154
  # DEBUG D#1151 => D#1153
  # DEBUG D#1152 => 0B
  # DEBUG __n => 8
  # DEBUG this => D#1151
  # DEBUG D.128762 => D#1152
  # DEBUG D#1150 => D#1151
  # DEBUG D#1149 => D#1150
  # DEBUG this => D#1149
  _1380 = operator new (64);
  goto <bb 8>;

<L168>:
  _1373 = __builtin_eh_pointer (249);
  __cxa_begin_catch (_1373);
  # DEBUG D#1144 => D#2989->_M_impl._M_map_size
  _1374 = MEM[(struct _Deque_base *)this_40(D) + 352B]._M_impl._M_map;
  # DEBUG D#844 => D#2989
  # DEBUG D#845 => D#1144
  # DEBUG __p => _1374
  # DEBUG this => D#844
  # DEBUG __n => D#845
  # DEBUG D#843 => D#845
  # DEBUG D#842 => D#844
  # DEBUG D#841 => D#842
  # DEBUG this => D#841
  # DEBUG D#840 => D#841
  # DEBUG this => D#840
  # DEBUG this => NULL
  # DEBUG D.97702 => NULL
  # DEBUG this => NULL
  # DEBUG D#544 => &__map_alloc
  # DEBUG D#545 => D#843
  # DEBUG __p => _1374
  # DEBUG __a => D#544
  # DEBUG __n => D#545
  # DEBUG D#543 => D#545
  # DEBUG D#542 => D#544
  # DEBUG D#540 => D#542
  # DEBUG D#541 => D#543
  # DEBUG __p => _1374
  # DEBUG this => D#540
  # DEBUG D.128714 => D#541
  operator delete (_1374);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct _Deque_base *)this_40(D) + 352B]._M_impl._M_map = 0B;
  MEM[(struct _Deque_base *)this_40(D) + 352B]._M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L170>:
  __cxa_end_catch ();
  resx 248

<L196>:
  goto <bb 788> (<L166>);

  <bb 8>:
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct _Deque_base *)this_40(D) + 432B]._M_impl._M_map = _1380;
  _1381 = MEM[(struct _Deque_base *)this_40(D) + 432B]._M_impl._M_map_size;
  _1382 = _1381 + 18446744073709551615;
  _1383 = _1382 >> 1;
  _1384 = _1383 * 8;
  __nstart_1385 = _1380 + _1384;
  # DEBUG __nstart => __nstart_1385
  __nfinish_1387 = __nstart_1385 + 8;
  # DEBUG __nfinish => __nfinish_1387
  # DEBUG D#1083 => D#2988
  std::_Deque_base<std::pair<int, std::pair<int, int> >, std::allocator<std::pair<int, std::pair<int, int> > > >::_ZNSt11_Deque_baseISt4pairIiS0_IiiEESaIS2_EE15_M_create_nodesEPPS2_S6_.isra.292 (__nstart_1385, __nfinish_1387);

  <bb 9>:
  # DEBUG D#1159 => &D#2988->_M_impl._M_start
  # DEBUG this => D#1159
  # DEBUG __new_node => __nstart_1385
  MEM[(struct _Deque_iterator *)this_40(D) + 448B]._M_node = __nstart_1385;
  _1388 = *__nstart_1385;
  MEM[(struct _Deque_iterator *)this_40(D) + 448B]._M_first = _1388;
  # DEBUG __size => 12
  _1389 = _1388 + 504;
  MEM[(struct _Deque_iterator *)this_40(D) + 448B]._M_last = _1389;
  # DEBUG D#1158 => &D#2988->_M_impl._M_finish
  # DEBUG this => D#1158
  # DEBUG __new_node => __nstart_1385
  MEM[(struct _Deque_iterator *)this_40(D) + 480B]._M_node = __nstart_1385;
  MEM[(struct _Deque_iterator *)this_40(D) + 480B]._M_first = _1388;
  # DEBUG __size => 12
  MEM[(struct _Deque_iterator *)this_40(D) + 480B]._M_last = _1389;
  MEM[(struct _Deque_base *)this_40(D) + 432B]._M_impl._M_start._M_cur = _1388;
  # DEBUG __size => 12
  MEM[(struct _Deque_base *)this_40(D) + 432B]._M_impl._M_finish._M_cur = _1388;
  # DEBUG D#2265 => &this_40(D)->_vc_alloc_vcs
  # DEBUG this => D#2265
  _54 = &MEM[(struct deque *)this_40(D) + 512B].D.45936;
  # DEBUG this => _54
  # DEBUG D#1174 => &_54->_M_impl
  # DEBUG this => D#1174
  # DEBUG this => D#1174
  # DEBUG this => D#1174
  MEM[(struct _Deque_impl *)this_40(D) + 512B]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_40(D) + 512B]._M_map_size = 0;
  # DEBUG D#555 => &D#1174->_M_start
  # DEBUG this => D#555
  MEM[(struct _Deque_iterator *)this_40(D) + 528B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 528B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 528B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 528B]._M_node = 0B;
  # DEBUG D#554 => &D#1174->_M_finish
  # DEBUG this => D#554
  MEM[(struct _Deque_iterator *)this_40(D) + 560B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 560B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 560B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 560B]._M_node = 0B;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::_M_initialize_map (_54, 0);
  goto <bb 13>;

<L171>:
  _1396 = __builtin_eh_pointer (252);
  __cxa_begin_catch (_1396);
  # DEBUG D#1157 => D#2988->_M_impl._M_map_size
  _1397 = MEM[(struct _Deque_base *)this_40(D) + 432B]._M_impl._M_map;
  # DEBUG D#861 => D#2988
  # DEBUG D#862 => D#1157
  # DEBUG __p => _1397
  # DEBUG this => D#861
  # DEBUG __n => D#862
  # DEBUG D#860 => D#862
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#859
  # DEBUG this => D#858
  # DEBUG D#857 => D#858
  # DEBUG this => D#857
  # DEBUG this => NULL
  # DEBUG D.97793 => NULL
  # DEBUG this => NULL
  # DEBUG D#552 => &__map_alloc
  # DEBUG D#553 => D#860
  # DEBUG __p => _1397
  # DEBUG __a => D#552
  # DEBUG __n => D#553
  # DEBUG D#551 => D#553
  # DEBUG D#550 => D#552
  # DEBUG D#548 => D#550
  # DEBUG D#549 => D#551
  # DEBUG __p => _1397
  # DEBUG this => D#548
  # DEBUG D.128748 => D#549
  operator delete (_1397);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct _Deque_base *)this_40(D) + 432B]._M_impl._M_map = 0B;
  MEM[(struct _Deque_base *)this_40(D) + 432B]._M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L173>:
  __cxa_end_catch ();
  resx 251

<L198>:
  goto <bb 785> (<L165>);

  <bb 13>:
  # DEBUG D#2263 => &this_40(D)->_sw_hold_vcs
  # DEBUG this => D#2263
  _55 = &MEM[(struct deque *)this_40(D) + 592B].D.45936;
  # DEBUG this => _55
  # DEBUG D#1174 => &_55->_M_impl
  # DEBUG this => D#1174
  # DEBUG this => D#1174
  # DEBUG this => D#1174
  MEM[(struct _Deque_impl *)this_40(D) + 592B]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_40(D) + 592B]._M_map_size = 0;
  # DEBUG D#555 => &D#1174->_M_start
  # DEBUG this => D#555
  MEM[(struct _Deque_iterator *)this_40(D) + 608B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 608B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 608B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 608B]._M_node = 0B;
  # DEBUG D#554 => &D#1174->_M_finish
  # DEBUG this => D#554
  MEM[(struct _Deque_iterator *)this_40(D) + 640B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 640B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 640B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 640B]._M_node = 0B;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::_M_initialize_map (_55, 0);

  <bb 14>:
  # DEBUG D#2261 => &this_40(D)->_sw_alloc_vcs
  # DEBUG this => D#2261
  _56 = &MEM[(struct deque *)this_40(D) + 672B].D.45936;
  # DEBUG this => _56
  # DEBUG D#1174 => &_56->_M_impl
  # DEBUG this => D#1174
  # DEBUG this => D#1174
  # DEBUG this => D#1174
  MEM[(struct _Deque_impl *)this_40(D) + 672B]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_40(D) + 672B]._M_map_size = 0;
  # DEBUG D#555 => &D#1174->_M_start
  # DEBUG this => D#555
  MEM[(struct _Deque_iterator *)this_40(D) + 688B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 688B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 688B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 688B]._M_node = 0B;
  # DEBUG D#554 => &D#1174->_M_finish
  # DEBUG this => D#554
  MEM[(struct _Deque_iterator *)this_40(D) + 720B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 720B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 720B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 720B]._M_node = 0B;
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::_M_initialize_map (_56, 0);

  <bb 15>:
  # DEBUG D#2259 => &this_40(D)->_crossbar_flits
  # DEBUG this => D#2259
  # DEBUG D#2987 => &MEM[(struct deque *)this_40(D) + 752B].D.46860
  # DEBUG this => D#2987
  # DEBUG D#1187 => &D#2987->_M_impl
  # DEBUG this => D#1187
  # DEBUG this => D#1187
  # DEBUG this => D#1187
  MEM[(struct _Deque_impl *)this_40(D) + 752B]._M_map = 0B;
  # DEBUG D#563 => &D#1187->_M_start
  # DEBUG this => D#563
  MEM[(struct _Deque_iterator *)this_40(D) + 768B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 768B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 768B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 768B]._M_node = 0B;
  # DEBUG D#562 => &D#1187->_M_finish
  # DEBUG this => D#562
  MEM[(struct _Deque_iterator *)this_40(D) + 800B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 800B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 800B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_40(D) + 800B]._M_node = 0B;
  # DEBUG this => D#2987
  # DEBUG __num_elements => 0
  # DEBUG __size => 24
  # DEBUG __num_nodes => 1
  # DEBUG __a => &D.128798
  # DEBUG __b => &D.128799
  MEM[(struct _Deque_base *)this_40(D) + 752B]._M_impl._M_map_size = 8;
  # DEBUG D#1182 => D#2987
  # DEBUG __n => 8
  # DEBUG this => D#1182
  # DEBUG D#1181 => D#1182
  # DEBUG D#892 => D#1181
  # DEBUG this => D#892
  # DEBUG D#891 => D#892
  # DEBUG this => D#891
  # DEBUG this => NULL
  # DEBUG D.97975 => NULL
  # DEBUG this => NULL
  # DEBUG D#1180 => &__map_alloc
  # DEBUG __n => 8
  # DEBUG __a => D#1180
  # DEBUG D#1179 => D#1180
  # DEBUG D#1177 => D#1179
  # DEBUG D#1178 => 0B
  # DEBUG __n => 8
  # DEBUG this => D#1177
  # DEBUG D.128796 => D#1178
  # DEBUG D#1176 => D#1177
  # DEBUG D#1175 => D#1176
  # DEBUG this => D#1175
  _1403 = operator new (64);

  <bb 16>:
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct _Deque_base *)this_40(D) + 752B]._M_impl._M_map = _1403;
  _1404 = MEM[(struct _Deque_base *)this_40(D) + 752B]._M_impl._M_map_size;
  _1405 = _1404 + 18446744073709551615;
  _1406 = _1405 >> 1;
  _1407 = _1406 * 8;
  __nstart_1408 = _1403 + _1407;
  # DEBUG __nstart => __nstart_1408
  __nfinish_1410 = __nstart_1408 + 8;
  # DEBUG __nfinish => __nfinish_1410
  # DEBUG D#1107 => D#2987
  std::_Deque_base<std::pair<int, std::pair<Flit*, std::pair<int, int> > >, std::allocator<std::pair<int, std::pair<Flit*, std::pair<int, int> > > > >::_ZNSt11_Deque_baseISt4pairIiS0_IP4FlitS0_IiiEEESaIS5_EE15_M_create_nodesEPPS5_S9_.isra.302 (__nstart_1408, __nfinish_1410);

  <bb 17>:
  # DEBUG D#1185 => &D#2987->_M_impl._M_start
  # DEBUG this => D#1185
  # DEBUG __new_node => __nstart_1408
  MEM[(struct _Deque_iterator *)this_40(D) + 768B]._M_node = __nstart_1408;
  _1411 = *__nstart_1408;
  MEM[(struct _Deque_iterator *)this_40(D) + 768B]._M_first = _1411;
  # DEBUG __size => 24
  _1412 = _1411 + 504;
  MEM[(struct _Deque_iterator *)this_40(D) + 768B]._M_last = _1412;
  # DEBUG D#1184 => &D#2987->_M_impl._M_finish
  # DEBUG this => D#1184
  # DEBUG __new_node => __nstart_1408
  MEM[(struct _Deque_iterator *)this_40(D) + 800B]._M_node = __nstart_1408;
  MEM[(struct _Deque_iterator *)this_40(D) + 800B]._M_first = _1411;
  # DEBUG __size => 24
  MEM[(struct _Deque_iterator *)this_40(D) + 800B]._M_last = _1412;
  MEM[(struct _Deque_base *)this_40(D) + 752B]._M_impl._M_start._M_cur = _1411;
  # DEBUG __size => 24
  MEM[(struct _Deque_base *)this_40(D) + 752B]._M_impl._M_finish._M_cur = _1411;
  # DEBUG D#2257 => &this_40(D)->_out_queue_credits
  # DEBUG this => D#2257
  # DEBUG D#571 => &D#2257->_M_t
  # DEBUG this => D#571
  # DEBUG D#570 => &MEM[(struct _Rb_tree *)D#571]._M_impl
  # DEBUG this => D#570
  # DEBUG this => D#570
  # DEBUG this => D#570
  MEM[(struct _Rb_tree_impl *)this_40(D) + 832B]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)this_40(D) + 832B]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)this_40(D) + 832B]._M_node_count = 0;
  # DEBUG this => D#570
  _59 = &MEM[(struct _Rb_tree_impl *)this_40(D) + 832B]._M_header;
  MEM[(struct _Rb_tree_impl *)this_40(D) + 832B]._M_header._M_left = _59;
  MEM[(struct _Rb_tree_impl *)this_40(D) + 832B]._M_header._M_right = _59;
  # DEBUG D#2256 => &this_40(D)->_buf
  # DEBUG this => D#2256
  # DEBUG D#575 => &D#2256->D.48674
  # DEBUG this => D#575
  # DEBUG D#574 => &D#575->_M_impl
  # DEBUG this => D#574
  # DEBUG this => D#574
  # DEBUG this => D#574
  MEM[(struct _Vector_impl *)this_40(D) + 880B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 880B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 880B]._M_end_of_storage = 0B;
  # DEBUG D#2255 => &this_40(D)->_next_buf
  # DEBUG this => D#2255
  # DEBUG D#595 => &D#2255->D.49421
  # DEBUG this => D#595
  # DEBUG D#594 => &D#595->_M_impl
  # DEBUG this => D#594
  # DEBUG this => D#594
  # DEBUG this => D#594
  MEM[(struct _Vector_impl *)this_40(D) + 904B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 904B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 904B]._M_end_of_storage = 0B;
  # DEBUG D#2254 => &this_40(D)->_vc_rr_offset
  # DEBUG this => D#2254
  # DEBUG D#211 => &D#2254->D.35433
  # DEBUG this => D#211
  # DEBUG D#210 => &D#211->_M_impl
  # DEBUG this => D#210
  # DEBUG this => D#210
  # DEBUG this => D#210
  MEM[(struct _Vector_impl *)this_40(D) + 952B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 952B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 952B]._M_end_of_storage = 0B;
  # DEBUG D#2253 => &this_40(D)->_sw_rr_offset
  # DEBUG this => D#2253
  # DEBUG D#211 => &D#2253->D.35433
  # DEBUG this => D#211
  # DEBUG D#210 => &D#211->_M_impl
  # DEBUG this => D#210
  # DEBUG this => D#210
  # DEBUG this => D#210
  MEM[(struct _Vector_impl *)this_40(D) + 976B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 976B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 976B]._M_end_of_storage = 0B;
  # DEBUG D#2252 => &this_40(D)->_output_buffer
  # DEBUG this => D#2252
  # DEBUG D#636 => &D#2252->D.50176
  # DEBUG this => D#636
  # DEBUG D#635 => &D#636->_M_impl
  # DEBUG this => D#635
  # DEBUG this => D#635
  # DEBUG this => D#635
  MEM[(struct _Vector_impl *)this_40(D) + 1016B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1016B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1016B]._M_end_of_storage = 0B;
  # DEBUG D#2251 => &this_40(D)->_credit_buffer
  # DEBUG this => D#2251
  # DEBUG D#655 => &D#2251->D.50924
  # DEBUG this => D#655
  # DEBUG D#654 => &D#655->_M_impl
  # DEBUG this => D#654
  # DEBUG this => D#654
  # DEBUG this => D#654
  MEM[(struct _Vector_impl *)this_40(D) + 1040B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1040B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1040B]._M_end_of_storage = 0B;
  # DEBUG D#2250 => &this_40(D)->_switch_hold_in
  # DEBUG this => D#2250
  # DEBUG D#211 => &D#2250->D.35433
  # DEBUG this => D#211
  # DEBUG D#210 => &D#211->_M_impl
  # DEBUG this => D#210
  # DEBUG this => D#210
  # DEBUG this => D#210
  MEM[(struct _Vector_impl *)this_40(D) + 1072B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1072B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1072B]._M_end_of_storage = 0B;
  # DEBUG D#2249 => &this_40(D)->_switch_hold_out
  # DEBUG this => D#2249
  # DEBUG D#211 => &D#2249->D.35433
  # DEBUG this => D#211
  # DEBUG D#210 => &D#211->_M_impl
  # DEBUG this => D#210
  # DEBUG this => D#210
  # DEBUG this => D#210
  MEM[(struct _Vector_impl *)this_40(D) + 1096B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1096B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1096B]._M_end_of_storage = 0B;
  # DEBUG D#2248 => &this_40(D)->_switch_hold_vc
  # DEBUG this => D#2248
  # DEBUG D#211 => &D#2248->D.35433
  # DEBUG this => D#211
  # DEBUG D#210 => &D#211->_M_impl
  # DEBUG this => D#210
  # DEBUG this => D#210
  # DEBUG this => D#210
  MEM[(struct _Vector_impl *)this_40(D) + 1120B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1120B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1120B]._M_end_of_storage = 0B;
  # DEBUG D#2247 => &this_40(D)->_noq_next_output_port
  # DEBUG this => D#2247
  # DEBUG D#674 => &D#2247->D.51676
  # DEBUG this => D#674
  # DEBUG D#673 => &D#674->_M_impl
  # DEBUG this => D#673
  # DEBUG this => D#673
  # DEBUG this => D#673
  MEM[(struct _Vector_impl *)this_40(D) + 1152B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1152B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1152B]._M_end_of_storage = 0B;
  # DEBUG D#2246 => &this_40(D)->_noq_next_vc_start
  # DEBUG this => D#2246
  # DEBUG D#674 => &D#2246->D.51676
  # DEBUG this => D#674
  # DEBUG D#673 => &D#674->_M_impl
  # DEBUG this => D#673
  # DEBUG this => D#673
  # DEBUG this => D#673
  MEM[(struct _Vector_impl *)this_40(D) + 1176B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1176B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1176B]._M_end_of_storage = 0B;
  # DEBUG D#2245 => &this_40(D)->_noq_next_vc_end
  # DEBUG this => D#2245
  # DEBUG D#674 => &D#2245->D.51676
  # DEBUG this => D#674
  # DEBUG D#673 => &D#674->_M_impl
  # DEBUG this => D#673
  # DEBUG this => D#673
  # DEBUG this => D#673
  MEM[(struct _Vector_impl *)this_40(D) + 1200B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1200B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_40(D) + 1200B]._M_end_of_storage = 0B;
  # DEBUG D#120 => &D.62740
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62740
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62739, "num_vcs");
  goto <bb 21>;

<L174>:
  _1419 = __builtin_eh_pointer (255);
  __cxa_begin_catch (_1419);
  # DEBUG D#1183 => D#2987->_M_impl._M_map_size
  _1420 = MEM[(struct _Deque_base *)this_40(D) + 752B]._M_impl._M_map;
  # DEBUG D#895 => D#2987
  # DEBUG D#896 => D#1183
  # DEBUG __p => _1420
  # DEBUG this => D#895
  # DEBUG __n => D#896
  # DEBUG D#894 => D#896
  # DEBUG D#893 => D#895
  # DEBUG D#892 => D#893
  # DEBUG this => D#892
  # DEBUG D#891 => D#892
  # DEBUG this => D#891
  # DEBUG this => NULL
  # DEBUG D.97975 => NULL
  # DEBUG this => NULL
  # DEBUG D#568 => &__map_alloc
  # DEBUG D#569 => D#894
  # DEBUG __p => _1420
  # DEBUG __a => D#568
  # DEBUG __n => D#569
  # DEBUG D#567 => D#569
  # DEBUG D#566 => D#568
  # DEBUG D#564 => D#566
  # DEBUG D#565 => D#567
  # DEBUG __p => _1420
  # DEBUG this => D#564
  # DEBUG D.128782 => D#565
  operator delete (_1420);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc
  MEM[(struct _Deque_base *)this_40(D) + 752B]._M_impl._M_map = 0B;
  MEM[(struct _Deque_base *)this_40(D) + 752B]._M_impl._M_map_size = 0;
  __cxa_rethrow ();

<L176>:
  __cxa_end_catch ();
  resx 254

<L203>:
  goto <bb 773> (<L161>);

  <bb 21>:
  _63 = Configuration::GetInt (config_43(D), &D.62739);

  <bb 22>:
  this_40(D)->_vcs = _63;
  # DEBUG this => &D.62739
  # DEBUG this => &D.62739
  # DEBUG this => &D.62739
  _66 = MEM[(char * *)&D.62739];
  # DEBUG D#1 => &D.62739
  # DEBUG this => D#1
  # DEBUG this => &D.62739
  if (&D.62739.D.11539._M_local_buf != _66)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#440 => D.62739.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62739
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62739
  # DEBUG this => D#1
  # DEBUG this => &D.62739
  # DEBUG D#437 => &D.62739._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _66
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _66
  # DEBUG this => D#431
  # DEBUG D.116535 => D#432
  operator delete (_66);

  <bb 24>:
  # DEBUG D#441 => &D.62739._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62739 ={v} {CLOBBER};
  # DEBUG this => &D.62740
  # DEBUG this => &D.62740
  # DEBUG D#120 => &D.62742
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62742
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62741, "vc_busy_when_full");
  goto <bb 26>;

<L204>:
  pretmp_2290 = &this_40(D)->_noq_next_output_port;
  pretmp_1841 = &this_40(D)->_noq_next_vc_start;
  pretmp_2379 = &this_40(D)->_noq_next_vc_end;
  pretmp_2408 = &this_40(D)->_output_buffer;
  pretmp_2437 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 26>:
  _70 = Configuration::GetInt (config_43(D), &D.62741);

  <bb 27>:
  _71 = _70 > 0;
  this_40(D)->_vc_busy_when_full = _71;
  # DEBUG this => &D.62741
  # DEBUG this => &D.62741
  # DEBUG this => &D.62741
  _74 = MEM[(char * *)&D.62741];
  # DEBUG D#1 => &D.62741
  # DEBUG this => D#1
  # DEBUG this => &D.62741
  if (&D.62741.D.11539._M_local_buf != _74)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG D#440 => D.62741.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62741
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62741
  # DEBUG this => D#1
  # DEBUG this => &D.62741
  # DEBUG D#437 => &D.62741._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _74
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _74
  # DEBUG this => D#431
  # DEBUG D.116553 => D#432
  operator delete (_74);

  <bb 29>:
  # DEBUG D#441 => &D.62741._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62741 ={v} {CLOBBER};
  # DEBUG this => &D.62742
  # DEBUG this => &D.62742
  # DEBUG D#120 => &D.62744
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62744
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62743, "vc_prioritize_empty");
  goto <bb 31>;

<L205>:
  pretmp_2368 = &this_40(D)->_noq_next_output_port;
  pretmp_1355 = &this_40(D)->_noq_next_vc_start;
  pretmp_2381 = &this_40(D)->_noq_next_vc_end;
  pretmp_2410 = &this_40(D)->_output_buffer;
  pretmp_2439 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 31>:
  _78 = Configuration::GetInt (config_43(D), &D.62743);

  <bb 32>:
  _80 = _78 > 0;
  this_40(D)->_vc_prioritize_empty = _80;
  # DEBUG this => &D.62743
  # DEBUG this => &D.62743
  # DEBUG this => &D.62743
  _83 = MEM[(char * *)&D.62743];
  # DEBUG D#1 => &D.62743
  # DEBUG this => D#1
  # DEBUG this => &D.62743
  if (&D.62743.D.11539._M_local_buf != _83)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#440 => D.62743.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62743
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62743
  # DEBUG this => D#1
  # DEBUG this => &D.62743
  # DEBUG D#437 => &D.62743._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _83
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _83
  # DEBUG this => D#431
  # DEBUG D.116571 => D#432
  operator delete (_83);

  <bb 34>:
  # DEBUG D#441 => &D.62743._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62743 ={v} {CLOBBER};
  # DEBUG this => &D.62744
  # DEBUG this => &D.62744
  # DEBUG D#120 => &D.62746
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62746
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62745, "vc_shuffle_requests");
  goto <bb 36>;

<L206>:
  pretmp_2279 = &this_40(D)->_noq_next_output_port;
  pretmp_1426 = &this_40(D)->_noq_next_vc_start;
  pretmp_2383 = &this_40(D)->_noq_next_vc_end;
  pretmp_2412 = &this_40(D)->_output_buffer;
  pretmp_2441 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 36>:
  _87 = Configuration::GetInt (config_43(D), &D.62745);

  <bb 37>:
  _88 = _87 > 0;
  this_40(D)->_vc_shuffle_requests = _88;
  # DEBUG this => &D.62745
  # DEBUG this => &D.62745
  # DEBUG this => &D.62745
  _91 = MEM[(char * *)&D.62745];
  # DEBUG D#1 => &D.62745
  # DEBUG this => D#1
  # DEBUG this => &D.62745
  if (&D.62745.D.11539._M_local_buf != _91)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#440 => D.62745.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62745
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62745
  # DEBUG this => D#1
  # DEBUG this => &D.62745
  # DEBUG D#437 => &D.62745._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _91
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _91
  # DEBUG this => D#431
  # DEBUG D.116589 => D#432
  operator delete (_91);

  <bb 39>:
  # DEBUG D#441 => &D.62745._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62745 ={v} {CLOBBER};
  # DEBUG this => &D.62746
  # DEBUG this => &D.62746
  # DEBUG D#120 => &D.62748
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62748
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62747, "speculative");
  goto <bb 41>;

<L207>:
  pretmp_2286 = &this_40(D)->_noq_next_output_port;
  pretmp_1402 = &this_40(D)->_noq_next_vc_start;
  pretmp_2385 = &this_40(D)->_noq_next_vc_end;
  pretmp_2414 = &this_40(D)->_output_buffer;
  pretmp_2443 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 41>:
  _95 = Configuration::GetInt (config_43(D), &D.62747);

  <bb 42>:
  _97 = _95 > 0;
  this_40(D)->_speculative = _97;
  # DEBUG this => &D.62747
  # DEBUG this => &D.62747
  # DEBUG this => &D.62747
  _100 = MEM[(char * *)&D.62747];
  # DEBUG D#1 => &D.62747
  # DEBUG this => D#1
  # DEBUG this => &D.62747
  if (&D.62747.D.11539._M_local_buf != _100)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG D#440 => D.62747.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62747
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62747
  # DEBUG this => D#1
  # DEBUG this => &D.62747
  # DEBUG D#437 => &D.62747._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _100
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _100
  # DEBUG this => D#431
  # DEBUG D.116607 => D#432
  operator delete (_100);

  <bb 44>:
  # DEBUG D#441 => &D.62747._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62747 ={v} {CLOBBER};
  # DEBUG this => &D.62748
  # DEBUG this => &D.62748
  # DEBUG D#120 => &D.62750
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62750
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62749, "spec_check_elig");
  goto <bb 46>;

<L208>:
  pretmp_2282 = &this_40(D)->_noq_next_output_port;
  pretmp_2275 = &this_40(D)->_noq_next_vc_start;
  pretmp_2387 = &this_40(D)->_noq_next_vc_end;
  pretmp_2416 = &this_40(D)->_output_buffer;
  pretmp_2445 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 46>:
  _104 = Configuration::GetInt (config_43(D), &D.62749);

  <bb 47>:
  _105 = _104 > 0;
  this_40(D)->_spec_check_elig = _105;
  # DEBUG this => &D.62749
  # DEBUG this => &D.62749
  # DEBUG this => &D.62749
  _108 = MEM[(char * *)&D.62749];
  # DEBUG D#1 => &D.62749
  # DEBUG this => D#1
  # DEBUG this => &D.62749
  if (&D.62749.D.11539._M_local_buf != _108)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  # DEBUG D#440 => D.62749.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62749
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62749
  # DEBUG this => D#1
  # DEBUG this => &D.62749
  # DEBUG D#437 => &D.62749._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _108
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _108
  # DEBUG this => D#431
  # DEBUG D.116625 => D#432
  operator delete (_108);

  <bb 49>:
  # DEBUG D#441 => &D.62749._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62749 ={v} {CLOBBER};
  # DEBUG this => &D.62750
  # DEBUG this => &D.62750
  # DEBUG D#120 => &D.62752
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62752
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62751, "spec_check_cred");
  goto <bb 51>;

<L209>:
  pretmp_2280 = &this_40(D)->_noq_next_output_port;
  pretmp_1391 = &this_40(D)->_noq_next_vc_start;
  pretmp_2389 = &this_40(D)->_noq_next_vc_end;
  pretmp_2418 = &this_40(D)->_output_buffer;
  pretmp_2447 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 51>:
  _112 = Configuration::GetInt (config_43(D), &D.62751);

  <bb 52>:
  _113 = _112 > 0;
  this_40(D)->_spec_check_cred = _113;
  # DEBUG this => &D.62751
  # DEBUG this => &D.62751
  # DEBUG this => &D.62751
  _116 = MEM[(char * *)&D.62751];
  # DEBUG D#1 => &D.62751
  # DEBUG this => D#1
  # DEBUG this => &D.62751
  if (&D.62751.D.11539._M_local_buf != _116)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG D#440 => D.62751.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62751
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62751
  # DEBUG this => D#1
  # DEBUG this => &D.62751
  # DEBUG D#437 => &D.62751._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _116
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _116
  # DEBUG this => D#431
  # DEBUG D.116643 => D#432
  operator delete (_116);

  <bb 54>:
  # DEBUG D#441 => &D.62751._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62751 ={v} {CLOBBER};
  # DEBUG this => &D.62752
  # DEBUG this => &D.62752
  # DEBUG D#120 => &D.62754
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62754
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62753, "spec_mask_by_reqs");
  goto <bb 56>;

<L210>:
  pretmp_251 = &this_40(D)->_noq_next_output_port;
  pretmp_2272 = &this_40(D)->_noq_next_vc_start;
  pretmp_297 = &this_40(D)->_noq_next_vc_end;
  pretmp_2392 = &this_40(D)->_output_buffer;
  pretmp_2421 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 56>:
  _120 = Configuration::GetInt (config_43(D), &D.62753);

  <bb 57>:
  _121 = _120 > 0;
  this_40(D)->_spec_mask_by_reqs = _121;
  # DEBUG this => &D.62753
  # DEBUG this => &D.62753
  # DEBUG this => &D.62753
  _124 = MEM[(char * *)&D.62753];
  # DEBUG D#1 => &D.62753
  # DEBUG this => D#1
  # DEBUG this => &D.62753
  if (&D.62753.D.11539._M_local_buf != _124)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # DEBUG D#440 => D.62753.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62753
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62753
  # DEBUG this => D#1
  # DEBUG this => &D.62753
  # DEBUG D#437 => &D.62753._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _124
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _124
  # DEBUG this => D#431
  # DEBUG D.116661 => D#432
  operator delete (_124);

  <bb 59>:
  # DEBUG D#441 => &D.62753._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62753 ={v} {CLOBBER};
  # DEBUG this => &D.62754
  # DEBUG this => &D.62754
  # DEBUG D#120 => &D.62756
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62756
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62755, "routing_delay");
  goto <bb 61>;

<L211>:
  pretmp_2297 = &this_40(D)->_noq_next_output_port;
  pretmp_1623 = &this_40(D)->_noq_next_vc_start;
  pretmp_1368 = &this_40(D)->_noq_next_vc_end;
  pretmp_2394 = &this_40(D)->_output_buffer;
  pretmp_2423 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 61>:
  _128 = Configuration::GetInt (config_43(D), &D.62755);

  <bb 62>:
  this_40(D)->_routing_delay = _128;
  # DEBUG this => &D.62755
  # DEBUG this => &D.62755
  # DEBUG this => &D.62755
  _131 = MEM[(char * *)&D.62755];
  # DEBUG D#1 => &D.62755
  # DEBUG this => D#1
  # DEBUG this => &D.62755
  if (&D.62755.D.11539._M_local_buf != _131)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#440 => D.62755.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62755
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62755
  # DEBUG this => D#1
  # DEBUG this => &D.62755
  # DEBUG D#437 => &D.62755._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _131
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _131
  # DEBUG this => D#431
  # DEBUG D.116679 => D#432
  operator delete (_131);

  <bb 64>:
  # DEBUG D#441 => &D.62755._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62755 ={v} {CLOBBER};
  # DEBUG this => &D.62756
  # DEBUG this => &D.62756
  # DEBUG D#120 => &D.62758
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62758
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62757, "vc_alloc_delay");
  goto <bb 66>;

<L212>:
  pretmp_2296 = &this_40(D)->_noq_next_output_port;
  pretmp_1539 = &this_40(D)->_noq_next_vc_start;
  pretmp_2273 = &this_40(D)->_noq_next_vc_end;
  pretmp_2396 = &this_40(D)->_output_buffer;
  pretmp_2425 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 66>:
  _135 = Configuration::GetInt (config_43(D), &D.62757);

  <bb 67>:
  this_40(D)->_vc_alloc_delay = _135;
  # DEBUG this => &D.62757
  # DEBUG this => &D.62757
  # DEBUG this => &D.62757
  _138 = MEM[(char * *)&D.62757];
  # DEBUG D#1 => &D.62757
  # DEBUG this => D#1
  # DEBUG this => &D.62757
  if (&D.62757.D.11539._M_local_buf != _138)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  # DEBUG D#440 => D.62757.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62757
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62757
  # DEBUG this => D#1
  # DEBUG this => &D.62757
  # DEBUG D#437 => &D.62757._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _138
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _138
  # DEBUG this => D#431
  # DEBUG D.116696 => D#432
  operator delete (_138);
  pretmp_2189 = this_40(D)->_vc_alloc_delay;

  <bb 69>:
  # prephitmp_1070 = PHI <_135(67), pretmp_2189(68)>
  # DEBUG D#441 => &D.62757._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62757 ={v} {CLOBBER};
  # DEBUG this => &D.62758
  # DEBUG this => &D.62758
  if (prephitmp_1070 == 0)
    goto <bb 70>;
  else
    goto <bb 76>;

  <bb 70>:
  # DEBUG D#120 => &D.62760
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62760
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62759, "VC allocator cannot have zero delay.");
  goto <bb 72>;

<L213>:
  pretmp_1438 = &this_40(D)->_noq_next_output_port;
  pretmp_1885 = &this_40(D)->_noq_next_vc_start;
  pretmp_1959 = &this_40(D)->_noq_next_vc_end;
  pretmp_2398 = &this_40(D)->_output_buffer;
  pretmp_2427 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 72>:
  Module::Error (_41, &D.62759);

  <bb 73>:
  # DEBUG this => &D.62759
  # DEBUG this => &D.62759
  # DEBUG this => &D.62759
  _144 = MEM[(char * *)&D.62759];
  # DEBUG D#1 => &D.62759
  # DEBUG this => D#1
  # DEBUG this => &D.62759
  if (&D.62759.D.11539._M_local_buf != _144)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 74>:
  # DEBUG D#440 => D.62759.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62759
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62759
  # DEBUG this => D#1
  # DEBUG this => &D.62759
  # DEBUG D#437 => &D.62759._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _144
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _144
  # DEBUG this => D#431
  # DEBUG D.116714 => D#432
  operator delete (_144);

  <bb 75>:
  # DEBUG D#441 => &D.62759._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62759 ={v} {CLOBBER};
  # DEBUG this => &D.62760
  # DEBUG this => &D.62760

  <bb 76>:
  # DEBUG D#120 => &D.62762
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62762
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62761, "sw_alloc_delay");
  goto <bb 78>;

<L214>:
  pretmp_2264 = &this_40(D)->_noq_next_output_port;
  pretmp_2276 = &this_40(D)->_noq_next_vc_start;
  pretmp_2371 = &this_40(D)->_noq_next_vc_end;
  pretmp_2400 = &this_40(D)->_output_buffer;
  pretmp_2429 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 78>:
  _149 = Configuration::GetInt (config_43(D), &D.62761);

  <bb 79>:
  this_40(D)->_sw_alloc_delay = _149;
  # DEBUG this => &D.62761
  # DEBUG this => &D.62761
  # DEBUG this => &D.62761
  _152 = MEM[(char * *)&D.62761];
  # DEBUG D#1 => &D.62761
  # DEBUG this => D#1
  # DEBUG this => &D.62761
  if (&D.62761.D.11539._M_local_buf != _152)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  # DEBUG D#440 => D.62761.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62761
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62761
  # DEBUG this => D#1
  # DEBUG this => &D.62761
  # DEBUG D#437 => &D.62761._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _152
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _152
  # DEBUG this => D#431
  # DEBUG D.116732 => D#432
  operator delete (_152);
  pretmp_1071 = this_40(D)->_sw_alloc_delay;

  <bb 81>:
  # prephitmp_1073 = PHI <_149(79), pretmp_1071(80)>
  # DEBUG D#441 => &D.62761._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62761 ={v} {CLOBBER};
  # DEBUG this => &D.62762
  # DEBUG this => &D.62762
  if (prephitmp_1073 == 0)
    goto <bb 82>;
  else
    goto <bb 88>;

  <bb 82>:
  # DEBUG D#120 => &D.62764
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62764
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62763, "Switch allocator cannot have zero delay.");
  goto <bb 84>;

<L215>:
  pretmp_2295 = &this_40(D)->_noq_next_output_port;
  pretmp_1418 = &this_40(D)->_noq_next_vc_start;
  pretmp_2373 = &this_40(D)->_noq_next_vc_end;
  pretmp_2402 = &this_40(D)->_output_buffer;
  pretmp_2431 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 84>:
  Module::Error (_41, &D.62763);

  <bb 85>:
  # DEBUG this => &D.62763
  # DEBUG this => &D.62763
  # DEBUG this => &D.62763
  _158 = MEM[(char * *)&D.62763];
  # DEBUG D#1 => &D.62763
  # DEBUG this => D#1
  # DEBUG this => &D.62763
  if (&D.62763.D.11539._M_local_buf != _158)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#440 => D.62763.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62763
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62763
  # DEBUG this => D#1
  # DEBUG this => &D.62763
  # DEBUG D#437 => &D.62763._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _158
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _158
  # DEBUG this => D#431
  # DEBUG D.116750 => D#432
  operator delete (_158);

  <bb 87>:
  # DEBUG D#441 => &D.62763._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62763 ={v} {CLOBBER};
  # DEBUG this => &D.62764
  # DEBUG this => &D.62764

  <bb 88>:
  # DEBUG D#120 => &D.62772
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62772
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62771, "topology");
  goto <bb 90>;

<L216>:
  pretmp_2291 = &this_40(D)->_noq_next_output_port;
  pretmp_1825 = &this_40(D)->_noq_next_vc_start;
  pretmp_2375 = &this_40(D)->_noq_next_vc_end;
  pretmp_2404 = &this_40(D)->_output_buffer;
  pretmp_2433 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

  <bb 90>:
  D.62770 = Configuration::GetStr (config_43(D), &D.62771); [return slot optimization]

  <bb 91>:
  # DEBUG D#120 => &D.62769
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62769
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62768, "routing_function");

  <bb 92>:
  D.62767 = Configuration::GetStr (config_43(D), &D.62768); [return slot optimization]

  <bb 93>:
  # DEBUG __lhs => &D.62767
  # DEBUG __rhs => "_"
  # DEBUG this => &D.62766
  # DEBUG __str => &D.62767
  # DEBUG this => &D.62767
  # DEBUG D#933 => &D.62767._M_dataplus
  # DEBUG this => &D.62766
  # DEBUG D#934 => &D.62766._M_dataplus
  # DEBUG D#391 => D#933
  # DEBUG this => D#934
  # DEBUG __dat => &D.62766.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#934
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.62766]._M_p = &D.62766.D.11539._M_local_buf;
  _1421 = MEM[(char * *)&D.62767];
  # DEBUG D#1 => &D.62767
  # DEBUG this => D#1
  _1422 = MEM[(long unsigned int *)&D.62767 + 8B];
  # DEBUG D#2 => &D.62767
  # DEBUG this => D#2
  _1423 = _1421 + _1422;
  # DEBUG D#1 => &D.62767
  # DEBUG this => D#1
  # DEBUG this => &D.62766
  # DEBUG __beg => _1421
  # DEBUG __end => _1423
  # DEBUG this => &D.62766
  # DEBUG __beg => _1421
  # DEBUG __end => _1423
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.254 (&D.62766, _1421, _1423);

  <bb 94>:
  # DEBUG this => &D.62766
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  # DEBUG __n => NULL
  # DEBUG this => &D.62766
  # DEBUG __n1 => 0
  # DEBUG __n2 => NULL
  # DEBUG __s => "basic_string::append"
  # DEBUG D#928 => &D.62766
  # DEBUG this => D#928
  # DEBUG D#927 => D#928
  # DEBUG D#926 => D#928
  # DEBUG this => D#926
  # DEBUG D#925 => &D#927->_M_dataplus
  # DEBUG D#924 => D#925
  # DEBUG __a => D#924
  # DEBUG D#923 => D#924
  # DEBUG D#922 => D#923
  # DEBUG this => D#922
  _1425 = MEM[(long unsigned int *)&D.62766 + 8B];
  # DEBUG D#3 => &D.62766
  # DEBUG this => D#3
  if (_1425 == 9223372036854775807)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  std::__throw_length_error ("basic_string::append");

  <bb 96>:
  std::__cxx11::basic_string<char>::_M_append (&D.62766, "_", 1);
  goto <bb 98>;

<L222>:
  goto <bb 100> (<L177>);

  <bb 98>:
  # DEBUG __lhs => &D.62766
  # DEBUG __rhs => &D.62770
  # DEBUG this => &rf
  # DEBUG __str => &D.62766
  # DEBUG this => &D.62766
  # DEBUG D#933 => &D.62766._M_dataplus
  # DEBUG this => &rf
  # DEBUG D#934 => &rf._M_dataplus
  # DEBUG D#391 => D#933
  # DEBUG this => D#934
  # DEBUG __dat => &rf.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#934
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&rf]._M_p = &rf.D.11539._M_local_buf;
  _1429 = MEM[(char * *)&D.62766];
  # DEBUG D#1 => &D.62766
  # DEBUG this => D#1
  _1430 = MEM[(long unsigned int *)&D.62766 + 8B];
  # DEBUG D#2 => &D.62766
  # DEBUG this => D#2
  _1431 = _1429 + _1430;
  # DEBUG D#1 => &D.62766
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG __beg => _1429
  # DEBUG __end => _1431
  # DEBUG this => &rf
  # DEBUG __beg => _1429
  # DEBUG __end => _1431
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.254 (&rf, _1429, _1431);
  goto <bb 104>;

<L221>:

<L177>:
  # DEBUG this => &D.62766
  # DEBUG this => &D.62766
  # DEBUG this => &D.62766
  _1424 = MEM[(char * *)&D.62766];
  # DEBUG D#1 => &D.62766
  # DEBUG this => D#1
  # DEBUG this => &D.62766
  if (&D.62766.D.11539._M_local_buf != _1424)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  # DEBUG D#440 => D.62766.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62766
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62766
  # DEBUG this => D#1
  # DEBUG this => &D.62766
  # DEBUG D#437 => &D.62766._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1424
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1424
  # DEBUG this => D#431
  # DEBUG D.128815 => D#432
  operator delete (_1424);

  <bb 102>:
  # DEBUG D#441 => &D.62766._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  resx 256

<L224>:
  goto <bb 583> (<L77>);

  <bb 104>:
  # DEBUG this => &rf
  # DEBUG __str => &D.62770
  _1432 = MEM[(long unsigned int *)&D.62770 + 8B];
  # DEBUG D#3 => &D.62770
  # DEBUG this => D#3
  _1433 = MEM[(char * *)&D.62770];
  # DEBUG D#1 => &D.62770
  # DEBUG this => D#1
  std::__cxx11::basic_string<char>::_M_append (&rf, _1433, _1432);
  goto <bb 109>;

<L178>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _1434 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _1434)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  # DEBUG D#440 => rf.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &rf
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#437 => &rf._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1434
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1434
  # DEBUG this => D#431
  # DEBUG D.128853 => D#432
  operator delete (_1434);

  <bb 107>:
  # DEBUG D#441 => &rf._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  resx 257

<L225>:
  goto <bb 578> (<L75>);

  <bb 109>:
  # DEBUG this => &D.62766
  # DEBUG this => &D.62766
  # DEBUG this => &D.62766
  _169 = MEM[(char * *)&D.62766];
  # DEBUG D#1 => &D.62766
  # DEBUG this => D#1
  # DEBUG this => &D.62766
  if (&D.62766.D.11539._M_local_buf != _169)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  # DEBUG D#440 => D.62766.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62766
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62766
  # DEBUG this => D#1
  # DEBUG this => &D.62766
  # DEBUG D#437 => &D.62766._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _169
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _169
  # DEBUG this => D#431
  # DEBUG D.116846 => D#432
  operator delete (_169);

  <bb 111>:
  # DEBUG D#441 => &D.62766._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62766 ={v} {CLOBBER};
  # DEBUG this => &D.62767
  # DEBUG this => &D.62767
  # DEBUG this => &D.62767
  _171 = MEM[(char * *)&D.62767];
  # DEBUG D#1 => &D.62767
  # DEBUG this => D#1
  # DEBUG this => &D.62767
  if (&D.62767.D.11539._M_local_buf != _171)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  # DEBUG D#440 => D.62767.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62767
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62767
  # DEBUG this => D#1
  # DEBUG this => &D.62767
  # DEBUG D#437 => &D.62767._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _171
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _171
  # DEBUG this => D#431
  # DEBUG D.116831 => D#432
  operator delete (_171);

  <bb 113>:
  # DEBUG D#441 => &D.62767._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62767 ={v} {CLOBBER};
  # DEBUG this => &D.62768
  # DEBUG this => &D.62768
  # DEBUG this => &D.62768
  _173 = MEM[(char * *)&D.62768];
  # DEBUG D#1 => &D.62768
  # DEBUG this => D#1
  # DEBUG this => &D.62768
  if (&D.62768.D.11539._M_local_buf != _173)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  # DEBUG D#440 => D.62768.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62768
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62768
  # DEBUG this => D#1
  # DEBUG this => &D.62768
  # DEBUG D#437 => &D.62768._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _173
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _173
  # DEBUG this => D#431
  # DEBUG D.116816 => D#432
  operator delete (_173);

  <bb 115>:
  # DEBUG D#441 => &D.62768._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62768 ={v} {CLOBBER};
  # DEBUG this => &D.62769
  # DEBUG this => &D.62769
  # DEBUG this => &D.62770
  # DEBUG this => &D.62770
  # DEBUG this => &D.62770
  _175 = MEM[(char * *)&D.62770];
  # DEBUG D#1 => &D.62770
  # DEBUG this => D#1
  # DEBUG this => &D.62770
  if (&D.62770.D.11539._M_local_buf != _175)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG D#440 => D.62770.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62770
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62770
  # DEBUG this => D#1
  # DEBUG this => &D.62770
  # DEBUG D#437 => &D.62770._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _175
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _175
  # DEBUG this => D#431
  # DEBUG D.116799 => D#432
  operator delete (_175);

  <bb 117>:
  # DEBUG D#441 => &D.62770._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62770 ={v} {CLOBBER};
  # DEBUG this => &D.62771
  # DEBUG this => &D.62771
  # DEBUG this => &D.62771
  _177 = MEM[(char * *)&D.62771];
  # DEBUG D#1 => &D.62771
  # DEBUG this => D#1
  # DEBUG this => &D.62771
  if (&D.62771.D.11539._M_local_buf != _177)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  # DEBUG D#440 => D.62771.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62771
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62771
  # DEBUG this => D#1
  # DEBUG this => &D.62771
  # DEBUG D#437 => &D.62771._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _177
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _177
  # DEBUG this => D#431
  # DEBUG D.116784 => D#432
  operator delete (_177);

  <bb 119>:
  # DEBUG D#441 => &D.62771._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62771 ={v} {CLOBBER};
  # DEBUG this => &D.62772
  # DEBUG this => &D.62772
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &rf
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &rf
  # DEBUG this => &gRoutingFunctionMap._M_t
  __y_1435 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#212 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#212
  # DEBUG D#948 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &rf
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __y_1435
  if (__y_1435 == 0B)
    goto <bb 121>;
  else
    goto <bb 120>;

  <bb 120>:
  pretmp_1653 = MEM[(long unsigned int *)&rf + 8B];
  pretmp_1599 = MEM[(char * *)&rf];
  goto <bb 124>;

  <bb 121>:
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG D#949 => {CLOBBER}
  # DEBUG __j$_M_node => D#949
  # DEBUG this => &rf_iter
  # DEBUG __it => &D.62774
  # DEBUG rf_iter$_M_node => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#213 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#213
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &D.62775
  # DEBUG __it => &D.62776
  # DEBUG this => &rf_iter
  # DEBUG __x => &D.62775
  # DEBUG D#949 => {CLOBBER}
  # DEBUG __j$_M_node => D#949
  # DEBUG this => &rf_iter
  # DEBUG __it => &D.62774
  # DEBUG rf_iter$_M_node => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#213 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#213
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &D.62775
  # DEBUG __it => &D.62776
  # DEBUG this => &rf_iter
  # DEBUG __x => &D.62775
  D.62777 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Invalid routing function: ", &rf); [return slot optimization]
  goto <bb 137>;

  <bb 122>:
  # __y_1445 = PHI <__y_1439(129), __y_1440(130)>
  # __y_1444 = PHI <__y_2250(129), __y_2249(130)>
  # DEBUG __y => __y_1444
  # DEBUG __x => __y_1445
  if (__y_1445 == 0B)
    goto <bb 131>;
  else
    goto <bb 123>;

  <bb 123>:

  <bb 124>:
  # __y_2250 = PHI <__y_1435(120), __y_1445(123)>
  # __y_2249 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(120), __y_1444(123)>
  # DEBUG __y => __y_2249
  # DEBUG __x => __y_2250
  # DEBUG __x => __y_2250
  # DEBUG __x => __y_2250
  # DEBUG this => __y_2250
  # DEBUG D#698 => &MEM[(const struct _Rb_tree_node *)__y_2250]._M_value_field
  # DEBUG __r => D#698
  # DEBUG __x => D#698
  # DEBUG this => D#397
  # DEBUG D#2955 => &MEM[(const struct pair &)__y_2250 + 32].first
  # DEBUG D#946 => &D#947->_M_impl._M_key_compare
  # DEBUG D#945 => D#946
  # DEBUG __x => D#2955
  # DEBUG __y => &rf
  # DEBUG this => D#945
  # DEBUG __lhs => D#2955
  # DEBUG __rhs => &rf
  # DEBUG this => D#2955
  # DEBUG __str => &rf
  _864 = MEM[(long unsigned int *)__y_2250 + 40B];
  # DEBUG D#3 => D#2955
  # DEBUG this => D#3
  # DEBUG __size => _864
  # DEBUG D#2979 => MEM[(long unsigned int *)&rf + 8B]
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  # DEBUG __osize => D#2979
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_1960 = MIN_EXPR <_864, pretmp_1653>;
  # DEBUG __len => D#2953
  # DEBUG this => &rf
  # DEBUG D#2978 => MEM[(char * *)&rf]
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  _1450 = MEM[(char * *)__y_2250 + 32B];
  # DEBUG D#1 => D#2955
  # DEBUG this => D#1
  # DEBUG __s1 => _1450
  # DEBUG __s2 => D#2978
  # DEBUG __n => D#2953
  __r_1451 = __builtin_memcmp (_1450, pretmp_1599, __len_1960);
  # DEBUG __r => NULL
  if (__r_1451 == 0)
    goto <bb 125>;
  else
    goto <bb 128>;

  <bb 125>:
  # DEBUG __n1 => _864
  # DEBUG __n2 => D#2979
  _1452 = _864 - pretmp_1653;
  __d_1453 = (const difference_type) _1452;
  # DEBUG __d => __d_1453
  if (__d_1453 > 2147483647)
    goto <bb 129>;
  else
    goto <bb 126>;

  <bb 126>:
  if (__d_1453 < -2147483648)
    goto <bb 130>;
  else
    goto <bb 127>;

  <bb 127>:
  __r_1454 = (int) _1452;

  <bb 128>:
  # __r_1455 = PHI <__r_1451(124), __r_1454(127)>
  # DEBUG __r => __r_1455
  # DEBUG D#2961 => {CLOBBER}
  # DEBUG __size => D#2961
  # DEBUG D#2962 => {CLOBBER}
  # DEBUG __osize => D#2962
  if (__r_1455 >= 0)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 129>:
  # DEBUG __r => NULL
  # DEBUG __y => __y_2250
  __y_1439 = MEM[(struct _Rb_tree_node_base * *)__y_2250 + 16B];
  # DEBUG D#395 => __y_2250
  # DEBUG __x => D#395
  # DEBUG __x => NULL
  goto <bb 122>;

  <bb 130>:
  # DEBUG __r => NULL
  __y_1440 = MEM[(struct _Rb_tree_node_base * *)__y_2250 + 24B];
  # DEBUG D#396 => __y_2250
  # DEBUG __x => D#396
  # DEBUG __x => NULL
  goto <bb 122>;

  <bb 131>:
  # __y_2122 = PHI <__y_1444(122)>
  # DEBUG this => NULL
  # DEBUG __x => __y_2122
  # DEBUG __j$_M_node => __y_2122
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_2122 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 121>;
  else
    goto <bb 132>;

  <bb 132>:
  # DEBUG __x => __y_2122
  # DEBUG __x => __y_2122
  # DEBUG this => __y_2122
  # DEBUG D#398 => &MEM[(const struct _Rb_tree_node *)__y_2122]._M_value_field
  # DEBUG __r => D#398
  # DEBUG __x => D#398
  # DEBUG this => D#397
  # DEBUG D#2956 => &MEM[(const struct pair &)__y_2122 + 32].first
  # DEBUG D#950 => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_key_compare
  # DEBUG D#945 => D#950
  # DEBUG __x => &rf
  # DEBUG __y => D#2956
  # DEBUG this => D#945
  # DEBUG __lhs => &rf
  # DEBUG __rhs => D#2956
  # DEBUG this => &rf
  # DEBUG __str => D#2956
  # DEBUG D#2977 => MEM[(long unsigned int *)&rf + 8B]
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  # DEBUG __size => D#2977
  _1458 = MEM[(long unsigned int *)__y_2122 + 40B];
  # DEBUG D#3 => D#2956
  # DEBUG this => D#3
  # DEBUG __osize => _1458
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_2071 = MIN_EXPR <_1458, pretmp_1653>;
  # DEBUG __len => D#2954
  # DEBUG this => D#2956
  _1461 = MEM[(char * *)__y_2122 + 32B];
  # DEBUG D#1 => D#2956
  # DEBUG this => D#1
  # DEBUG D#2976 => MEM[(char * *)&rf]
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG __s1 => D#2976
  # DEBUG __s2 => _1461
  # DEBUG __n => D#2954
  __r_1463 = __builtin_memcmp (pretmp_1599, _1461, __len_2071);
  # DEBUG __r => NULL
  if (__r_1463 == 0)
    goto <bb 133>;
  else
    goto <bb 136>;

  <bb 133>:
  # DEBUG __n1 => D#2977
  # DEBUG __n2 => _1458
  _1464 = pretmp_1653 - _1458;
  __d_1465 = (const difference_type) _1464;
  # DEBUG __d => __d_1465
  if (__d_1465 > 2147483647)
    goto <bb 141>;
  else
    goto <bb 134>;

  <bb 134>:
  if (__d_1465 < -2147483648)
    goto <bb 121>;
  else
    goto <bb 135>;

  <bb 135>:
  __r_1466 = (int) _1464;

  <bb 136>:
  # __r_1467 = PHI <__r_1463(132), __r_1466(135)>
  # DEBUG __r => __r_1467
  # DEBUG D#2967 => {CLOBBER}
  # DEBUG __size => D#2967
  # DEBUG D#2968 => {CLOBBER}
  # DEBUG __osize => D#2968
  if (__r_1467 < 0)
    goto <bb 121>;
  else
    goto <bb 141>;

  <bb 137>:
  Module::Error (_41, &D.62777);

  <bb 138>:
  # DEBUG this => &D.62777
  # DEBUG this => &D.62777
  # DEBUG this => &D.62777
  _167 = MEM[(char * *)&D.62777];
  # DEBUG D#1 => &D.62777
  # DEBUG this => D#1
  # DEBUG this => &D.62777
  if (&D.62777.D.11539._M_local_buf != _167)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  # DEBUG D#440 => D.62777.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62777
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62777
  # DEBUG this => D#1
  # DEBUG this => &D.62777
  # DEBUG D#437 => &D.62777._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _167
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _167
  # DEBUG this => D#431
  # DEBUG D.116861 => D#432
  operator delete (_167);

  <bb 140>:
  # DEBUG D#441 => &D.62777._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62777 ={v} {CLOBBER};

  <bb 141>:
  # cstore_1441 = PHI <__y_2122(136), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(140), __y_2122(133)>
  # DEBUG this => &rf_iter
  # DEBUG this => cstore_1441
  # DEBUG D#2230 => &MEM[(const struct _Rb_tree_node *)cstore_1441]._M_value_field
  # DEBUG __r => D#2230
  _184 = MEM[(const struct pair *)cstore_1441 + 32B].second;
  this_40(D)->_rf = _184;
  _186 = this_40(D)->D.51790._inputs;
  _187 = (long unsigned int) _186;
  # DEBUG D#2986 => &this_40(D)->_buf
  # DEBUG this => D#2986
  # DEBUG __new_size => _187
  __x = 0B;
  # DEBUG __x => __x
  _1469 = MEM[(struct Buffer * * *)this_40(D) + 880B];
  # DEBUG D#121 => D#2986
  _1470 = MEM[(struct Buffer * * *)this_40(D) + 888B];
  # DEBUG D#121 => D#2986
  # DEBUG this => D#121
  # DEBUG this => D#121
  _1471 = (long int) _1470;
  _1472 = (long int) _1469;
  _1473 = _1471 - _1472;
  _1474 = _1473 /[ex] 8;
  _1475 = (size_type) _1474;
  if (_187 > _1475)
    goto <bb 142>;
  else
    goto <bb 145>;

  <bb 142>:
  # DEBUG D#121 => D#2986
  # DEBUG D#121 => D#2986
  # DEBUG this => D#121
  # DEBUG this => D#121
  _1476 = _187 - _1475;
  # DEBUG this => D#2986
  # DEBUG D#214 => &D#2986->D.48674._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#214
  # DEBUG this => D#2986
  MEM[(struct __normal_iterator *)&__position] = _1470;
  # DEBUG __n => _1476
  # DEBUG __x => &__x
  _188 = &this_40(D)->_buf;
  std::vector<Buffer*>::_M_fill_insert (_188, __position, _1476, &__x);
  goto <bb 144>;

<L227>:
  pretmp_1511 = &this_40(D)->_noq_next_output_port;
  pretmp_1386 = &this_40(D)->_noq_next_vc_start;
  pretmp_2328 = &this_40(D)->_noq_next_vc_end;
  pretmp_1958 = &this_40(D)->_output_buffer;
  pretmp_2305 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  <bb 144>:
  pretmp_2182 = this_40(D)->D.51790._inputs;
  goto <bb 147>;

  <bb 145>:
  # DEBUG D#121 => D#2986
  # DEBUG D#121 => D#2986
  # DEBUG this => D#121
  # DEBUG this => D#121
  if (_187 < _1475)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  _1477 = _187 * 8;
  _1478 = _1469 + _1477;
  # DEBUG D#365 => D#2986
  # DEBUG __pos => _1478
  # DEBUG D#364 => D#365
  # DEBUG this => D#364
  # DEBUG D#362 => &D#364->D.48674
  # DEBUG this => D#362
  # DEBUG D#363 => D#364->D.48674._M_impl._M_finish
  # DEBUG __first => _1478
  # DEBUG __last => D#363
  # DEBUG D.94749 => NULL
  # DEBUG D#360 => _1478
  # DEBUG D#361 => D#363
  # DEBUG __first => D#360
  # DEBUG __last => D#361
  # DEBUG D#359 => D#361
  # DEBUG D#358 => D#360
  # DEBUG D#356 => D#358
  # DEBUG D#357 => D#359
  # DEBUG D.94733 => D#356
  # DEBUG D.94732 => D#357
  MEM[(struct Buffer * * *)this_40(D) + 888B] = _1478;

  <bb 147>:
  # prephitmp_2183 = PHI <pretmp_2182(144), _186(146), _186(145)>
  # DEBUG i => 0
  if (prephitmp_2183 <= 0)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  _215 = this_40(D)->D.51790._outputs;
  _216 = (long unsigned int) _215;
  # DEBUG D#2985 => &this_40(D)->_next_buf
  # DEBUG this => D#2985
  # DEBUG __new_size => _216
  __x = 0B;
  # DEBUG __x => __x
  _1541 = MEM[(struct BufferState * * *)this_40(D) + 904B];
  # DEBUG D#122 => D#2985
  _1542 = MEM[(struct BufferState * * *)this_40(D) + 912B];
  # DEBUG D#122 => D#2985
  # DEBUG this => D#122
  # DEBUG this => D#122
  _1543 = (long int) _1542;
  _1544 = (long int) _1541;
  _1545 = _1543 - _1544;
  _1546 = _1545 /[ex] 8;
  _1547 = (size_type) _1546;
  if (_216 > _1547)
    goto <bb 206>;
  else
    goto <bb 209>;

  <bb 149>:
  pretmp_1693 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_2073 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 150>:
  # i_4 = PHI <0(149), i_207(205)>
  # DEBUG i => i_4
  # DEBUG this => &module_name
  # DEBUG __mode => 16
  # DEBUG D#446 => &module_name.D.52482
  # DEBUG this => D#446
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&module_name + 112B].D.27757);
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&module_name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&module_name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&module_name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&module_name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&module_name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&module_name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&module_name + 112B]._M_num_get = 0B;
  # DEBUG this => &module_name.D.52479
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&module_name]._vptr.basic_ostream = pretmp_1693;
  _1481 = MEM[(long int *)pretmp_1693 + -24B];
  iftmp.65_1482 = (sizetype) _1481;
  _1483 = &module_name.D.52479 + iftmp.65_1482;
  _1483->D.27757._vptr.ios_base = pretmp_2073;
  std::basic_ios<char>::init (_1483, 0B);

  <bb 151>:
  module_name.D.52479._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#444 => &module_name._M_stringbuf
  # DEBUG this => D#444
  # DEBUG __mode => NULL
  # DEBUG D#394 => &MEM[(struct basic_stringbuf *)D#444].D.52329
  # DEBUG this => D#394
  MEM[(struct basic_streambuf *)&module_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&module_name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&module_name + 8B].D.52329._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&module_name + 8B]._M_mode = 16;
  # DEBUG D#393 => &MEM[(struct basic_stringbuf *)D#444]._M_string
  # DEBUG this => D#393
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG this => D#393
  # DEBUG D#392 => &MEM[(struct basic_string *)D#393]._M_dataplus
  # DEBUG this => D#392
  # DEBUG __dat => &MEM[(struct basic_string *)&module_name + 80B].D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#392
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&module_name + 80B]._M_p = &MEM[(struct basic_string *)&module_name + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#393
  # DEBUG __n => 0
  # DEBUG D#8 => D#393
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&module_name + 88B] = 0;
  # DEBUG D#1 => D#393
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(struct basic_string *)&module_name + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&module_name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&module_name + 112B], &module_name._M_stringbuf.D.52329);
  goto <bb 158>;

  # prephitmp_2065 = PHI <pretmp_2073(151)>
  # prephitmp_2064 = PHI <pretmp_1693(151)>
<L179>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&module_name._M_stringbuf);
  resx 260

<L180>:
  # DEBUG this => &module_name.D.52479
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _1493 = MEM[(long int *)prephitmp_2064 + -24B];
  iftmp.71_1494 = (sizetype) _1493;
  _1495 = &module_name.D.52479 + iftmp.71_1494;
  _1495->D.27757._vptr.ios_base = prephitmp_2065;
  MEM[(struct  &)&module_name] ={v} {CLOBBER};
  resx 259

<L229>:
  goto <bb 156> (<L181>);

<L228>:

<L181>:
  # DEBUG D#445 => &module_name.D.52482
  # DEBUG this => D#445
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&module_name + 112B].D.27757);
  resx 258

<L230>:
  pretmp_165 = &this_40(D)->_noq_next_output_port;
  pretmp_665 = &this_40(D)->_noq_next_vc_start;
  pretmp_2318 = &this_40(D)->_noq_next_vc_end;
  pretmp_2309 = &this_40(D)->_output_buffer;
  pretmp_2303 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  <bb 158>:
  # DEBUG __out => &module_name.D.52479
  # DEBUG __s => "buf_"
  # DEBUG __s => "buf_"
  std::__ostream_insert<char, std::char_traits<char> > (&module_name.D.52479, "buf_", 4);

  <bb 159>:
  std::basic_ostream<char>::operator<< (&module_name.D.52479, i_4);
  goto <bb 161>;

<L232>:
  goto <bb 619> (<L92>);

  <bb 161>:
  # DEBUG this => &module_name
  # DEBUG this => &module_name._M_stringbuf
  # DEBUG this => &D.62782
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG this => &D.62782
  # DEBUG D#392 => &D.62782._M_dataplus
  # DEBUG this => D#392
  # DEBUG __dat => &D.62782.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#392
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.62782]._M_p = &D.62782.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.62782
  # DEBUG __n => 0
  # DEBUG D#8 => &D.62782
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.62782 + 8B] = 0;
  # DEBUG D#1 => &D.62782
  # DEBUG this => D#1
  # DEBUG __c1 => &D.62782.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.62782 + 16] = 0;
  # DEBUG D#938 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  _1496 = MEM[(char_type * *)&module_name + 48B];
  # DEBUG D#5 => D#938
  # DEBUG this => D#5
  if (_1496 != 0B)
    goto <bb 162>;
  else
    goto <bb 174>;

  <bb 162>:
  # DEBUG D#939 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  # DEBUG D#5 => D#939
  # DEBUG this => D#5
  # DEBUG D#940 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  _1497 = MEM[(char_type * *)&module_name + 32B];
  # DEBUG D#6 => D#940
  # DEBUG this => D#6
  if (_1496 > _1497)
    goto <bb 163>;
  else
    goto <bb 168>;

  <bb 163>:
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#943 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  # DEBUG D#5 => D#943
  # DEBUG this => D#5
  # DEBUG D#944 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  _1498 = MEM[(char_type * *)&module_name + 40B];
  # DEBUG D#7 => D#944
  # DEBUG this => D#7
  # DEBUG this => &D.129100
  # DEBUG __beg => _1498
  # DEBUG __end => _1496
  # DEBUG __a => NULL
  # DEBUG this => &D.129100
  # DEBUG D#936 => &D.129100._M_dataplus
  # DEBUG this => D#936
  # DEBUG __dat => &D.129100.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#936
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.129100]._M_p = &D.129100.D.11539._M_local_buf;
  # DEBUG this => &D.129100
  # DEBUG __beg => _1498
  # DEBUG __end => _1496
  # DEBUG this => &D.129100
  # DEBUG __beg => _1498
  # DEBUG __end => _1496
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.254 (&D.129100, _1498, _1496);

  <bb 164>:
  # DEBUG this => &D.62782
  # DEBUG __str => &D.129100
  # DEBUG this => &D.62782
  # DEBUG __str => &D.129100
  std::__cxx11::basic_string<char>::_M_assign (&D.62782, &D.129100);

  <bb 165>:
  # DEBUG this => &D.129100
  # DEBUG this => &D.129100
  # DEBUG this => &D.129100
  _1499 = MEM[(char * *)&D.129100];
  # DEBUG D#1 => &D.129100
  # DEBUG this => D#1
  # DEBUG this => &D.129100
  if (&D.129100.D.11539._M_local_buf != _1499)
    goto <bb 166>;
  else
    goto <bb 167>;

  <bb 166>:
  # DEBUG D#440 => D.129100.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.129100
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.129100
  # DEBUG this => D#1
  # DEBUG this => &D.129100
  # DEBUG D#437 => &D.129100._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1499
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1499
  # DEBUG this => D#431
  # DEBUG D.129059 => D#432
  operator delete (_1499);

  <bb 167>:
  # DEBUG D#441 => &D.129100._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.129100 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 189>;

  <bb 168>:
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#941 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  # DEBUG D#6 => D#941
  # DEBUG this => D#6
  # DEBUG D#942 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  _1500 = MEM[(char_type * *)&module_name + 40B];
  # DEBUG D#7 => D#942
  # DEBUG this => D#7
  # DEBUG this => &D.129099
  # DEBUG __beg => _1500
  # DEBUG __end => _1497
  # DEBUG __a => NULL
  # DEBUG this => &D.129099
  # DEBUG D#936 => &D.129099._M_dataplus
  # DEBUG this => D#936
  # DEBUG __dat => &D.129099.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#936
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.129099]._M_p = &D.129099.D.11539._M_local_buf;
  # DEBUG this => &D.129099
  # DEBUG __beg => _1500
  # DEBUG __end => _1497
  # DEBUG this => &D.129099
  # DEBUG __beg => _1500
  # DEBUG __end => _1497
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.254 (&D.129099, _1500, _1497);
  goto <bb 170>;

<L234>:
  goto <bb 185> (<L184>);

  <bb 170>:
  # DEBUG this => &D.62782
  # DEBUG __str => &D.129099
  # DEBUG this => &D.62782
  # DEBUG __str => &D.129099
  std::__cxx11::basic_string<char>::_M_assign (&D.62782, &D.129099);

  <bb 171>:
  # DEBUG this => &D.129099
  # DEBUG this => &D.129099
  # DEBUG this => &D.129099
  _1501 = MEM[(char * *)&D.129099];
  # DEBUG D#1 => &D.129099
  # DEBUG this => D#1
  # DEBUG this => &D.129099
  if (&D.129099.D.11539._M_local_buf != _1501)
    goto <bb 172>;
  else
    goto <bb 173>;

  <bb 172>:
  # DEBUG D#440 => D.129099.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.129099
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.129099
  # DEBUG this => D#1
  # DEBUG this => &D.129099
  # DEBUG D#437 => &D.129099._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1501
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1501
  # DEBUG this => D#431
  # DEBUG D.129022 => D#432
  operator delete (_1501);

  <bb 173>:
  # DEBUG D#441 => &D.129099._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.129099 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 189>;

  <bb 174>:
  # DEBUG this => &D.62782
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => &D.62782
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&module_name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.62782, &MEM[(const struct basic_stringbuf *)&module_name + 8B]._M_string);
  goto <bb 189>;

<L235>:
  goto <bb 185> (<L184>);

<L182>:
  # DEBUG this => &D.129100
  # DEBUG this => &D.129100
  # DEBUG this => &D.129100
  _1503 = MEM[(char * *)&D.129100];
  # DEBUG D#1 => &D.129100
  # DEBUG this => D#1
  # DEBUG this => &D.129100
  if (&D.129100.D.11539._M_local_buf != _1503)
    goto <bb 177>;
  else
    goto <bb 178>;

  <bb 177>:
  # DEBUG D#440 => D.129100.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.129100
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.129100
  # DEBUG this => D#1
  # DEBUG this => &D.129100
  # DEBUG D#437 => &D.129100._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1503
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1503
  # DEBUG this => D#431
  # DEBUG D.129003 => D#432
  operator delete (_1503);

  <bb 178>:
  # DEBUG D#441 => &D.129100._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.129100 ={v} {CLOBBER};
  resx 264

<L236>:
  goto <bb 185> (<L184>);

<L183>:
  # DEBUG this => &D.129099
  # DEBUG this => &D.129099
  # DEBUG this => &D.129099
  _1504 = MEM[(char * *)&D.129099];
  # DEBUG D#1 => &D.129099
  # DEBUG this => D#1
  # DEBUG this => &D.129099
  if (&D.129099.D.11539._M_local_buf != _1504)
    goto <bb 181>;
  else
    goto <bb 182>;

  <bb 181>:
  # DEBUG D#440 => D.129099.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.129099
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.129099
  # DEBUG this => D#1
  # DEBUG this => &D.129099
  # DEBUG D#437 => &D.129099._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1504
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1504
  # DEBUG this => D#431
  # DEBUG D.128987 => D#432
  operator delete (_1504);

  <bb 182>:
  # DEBUG D#441 => &D.129099._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.129099 ={v} {CLOBBER};
  resx 263

<L237>:
  goto <bb 185> (<L184>);

<L233>:

<L184>:
  # DEBUG this => &D.62782
  # DEBUG this => &D.62782
  # DEBUG this => &D.62782
  _1505 = MEM[(char * *)&D.62782];
  # DEBUG D#1 => &D.62782
  # DEBUG this => D#1
  # DEBUG this => &D.62782
  if (&D.62782.D.11539._M_local_buf != _1505)
    goto <bb 186>;
  else
    goto <bb 187>;

  <bb 186>:
  # DEBUG D#440 => D.62782.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62782
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62782
  # DEBUG this => D#1
  # DEBUG this => &D.62782
  # DEBUG D#437 => &D.62782._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1505
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1505
  # DEBUG this => D#431
  # DEBUG D.128976 => D#432
  operator delete (_1505);

  <bb 187>:
  # DEBUG D#441 => &D.62782._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  resx 262

<L238>:
  goto <bb 619> (<L92>);

  <bb 189>:
  _195 = operator new (128);

  <bb 190>:
  _197 = this_40(D)->D.51790._outputs;
  Buffer::Buffer (_195, config_43(D), _197, _41, &D.62782);

  <bb 191>:
  _199 = (long unsigned int) i_4;
  # DEBUG D#2231 => &this_40(D)->_buf
  _557 = MEM[(struct Buffer * * *)this_40(D) + 880B];
  # DEBUG D#53 => D#2231
  # DEBUG __n => _199
  # DEBUG this => D#53
  _58 = _199 * 8;
  _403 = _557 + _58;
  *_403 = _195;
  # DEBUG this => &D.62782
  # DEBUG this => &D.62782
  # DEBUG this => &D.62782
  _193 = MEM[(char * *)&D.62782];
  # DEBUG D#1 => &D.62782
  # DEBUG this => D#1
  # DEBUG this => &D.62782
  if (&D.62782.D.11539._M_local_buf != _193)
    goto <bb 192>;
  else
    goto <bb 193>;

  <bb 192>:
  # DEBUG D#440 => D.62782.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62782
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62782
  # DEBUG this => D#1
  # DEBUG this => &D.62782
  # DEBUG D#437 => &D.62782._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _193
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _193
  # DEBUG this => D#431
  # DEBUG D.116885 => D#432
  operator delete (_193);

  <bb 193>:
  # DEBUG D#441 => &D.62782._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62782 ={v} {CLOBBER};
  # DEBUG D#120 => &D.62785
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62785
  # DEBUG this => &D.62784
  # DEBUG __s => ""
  # DEBUG __a => D#921
  # DEBUG D#920 => D#921
  # DEBUG this => &D.62784
  # DEBUG D#918 => &D.62784._M_dataplus
  # DEBUG D#391 => D#920
  # DEBUG this => D#918
  # DEBUG __dat => &D.62784.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#918
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.62784]._M_p = &D.62784.D.11539._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.62784
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.62784
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.62784
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG __ptr => ""
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG D#929 => &__first
  # DEBUG D.98358 => D#929
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG __dnew => 0
  # DEBUG D#2991 => MEM[(char * *)&D.62784]
  # DEBUG D#1 => &D.62784
  # DEBUG this => D#1
  # DEBUG __p => D#2991
  # DEBUG __k1 => ""
  # DEBUG __k2 => ""
  # DEBUG __d => D#2991
  # DEBUG __s => ""
  # DEBUG __n => 0
  # DEBUG __s1 => D#2991
  # DEBUG __s2 => ""
  # DEBUG __n => 0
  # DEBUG this => &D.62784
  # DEBUG __n => 0
  # DEBUG D#8 => &D.62784
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.62784 + 8B] = 0;
  # DEBUG D#1 => &D.62784
  # DEBUG this => D#1
  # DEBUG __c1 => &D.62784.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.62784 + 16] = 0;
  # DEBUG D#2969 => {CLOBBER}
  # DEBUG __dnew => D#2969
  # DEBUG this => &module_name
  # DEBUG __s => &D.62784
  # DEBUG this => &module_name._M_stringbuf
  # DEBUG __s => &D.62784
  # DEBUG D#3 => &D.62784
  # DEBUG this => D#3
  # DEBUG this => &D.62784
  # DEBUG D#1 => &D.62784
  # DEBUG this => D#1
  # DEBUG this => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG __s => &D.62784.D.11539._M_local_buf
  # DEBUG __n => 0
  _1524 = MEM[(long unsigned int *)&module_name + 88B];
  # DEBUG D#3 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => D#3
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string, 0, _1524, &D.62784.D.11539._M_local_buf, 0);

  <bb 194>:
  _1525 = MEM[(struct basic_stringbuf *)&module_name + 8B]._M_mode;
  # DEBUG this => &module_name._M_stringbuf
  # DEBUG __mode => _1525
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _1525
  # DEBUG __b => NULL
  __a.78_1526 = (int) _1525;
  _1527 = __a.78_1526 & 3;
  if (_1527 != 0)
    goto <bb 195>;
  else
    goto <bb 196>;

  <bb 195>:
  # DEBUG D#15 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  __len_1529 = MEM[(long unsigned int *)&module_name + 88B];
  # DEBUG D#3 => D#15
  # DEBUG this => D#3
  # DEBUG __len => __len_1529

  <bb 196>:
  # __len_1531 = PHI <0(194), __len_1529(195)>
  # DEBUG __len => __len_1531
  # DEBUG D#16 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => D#16
  _1530 = MEM[(char * *)&module_name + 80B];
  # DEBUG D#1 => D#16
  # DEBUG this => D#1
  std::__cxx11::basic_stringbuf<char>::_M_sync (&module_name._M_stringbuf, _1530, 0, __len_1531);
  goto <bb 198>;

<L241>:
  goto <bb 614> (<L90>);

  <bb 198>:
  # DEBUG this => &D.62784
  # DEBUG this => &D.62784
  # DEBUG this => &D.62784
  _204 = MEM[(char * *)&D.62784];
  # DEBUG D#1 => &D.62784
  # DEBUG this => D#1
  # DEBUG this => &D.62784
  if (&D.62784.D.11539._M_local_buf != _204)
    goto <bb 199>;
  else
    goto <bb 200>;

  <bb 199>:
  # DEBUG D#440 => D.62784.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62784
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62784
  # DEBUG this => D#1
  # DEBUG this => &D.62784
  # DEBUG D#437 => &D.62784._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _204
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _204
  # DEBUG this => D#431
  # DEBUG D.116908 => D#432
  operator delete (_204);

  <bb 200>:
  # DEBUG D#441 => &D.62784._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62784 ={v} {CLOBBER};
  # DEBUG this => &D.62785
  # DEBUG this => &D.62785
  # DEBUG this => &module_name
  module_name.D.52479._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &module_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&module_name + 8B].D.52329._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#443 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => D#443
  # DEBUG this => D#443
  # DEBUG this => D#443
  _205 = MEM[(char * *)&module_name + 80B];
  # DEBUG D#1 => D#443
  # DEBUG this => D#1
  # DEBUG this => D#443
  if (&MEM[(const struct basic_string *)&module_name + 80B].D.11539._M_local_buf != _205)
    goto <bb 201>;
  else
    goto <bb 202>;

  <bb 201>:
  # DEBUG D#440 => MEM[(struct basic_string *)D#443].D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => D#443
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => D#443
  # DEBUG this => D#1
  # DEBUG this => D#443
  # DEBUG D#437 => &MEM[(struct basic_string *)D#443]._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _205
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _205
  # DEBUG this => D#431
  # DEBUG D.129172 => D#432
  operator delete (_205);

  <bb 202>:
  # DEBUG D#441 => &MEM[(struct basic_string *)D#443]._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)&module_name + 80] ={v} {CLOBBER};
  # DEBUG D#442 => &MEM[(struct basic_stringbuf *)&module_name + 8B].D.52329
  # DEBUG this => D#442
  MEM[(struct basic_streambuf *)&module_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&module_name + 8B]._M_buf_locale);
  MEM[(struct  &)&module_name + 8] ={v} {CLOBBER};
  # DEBUG this => &module_name.D.52479
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _1534 = MEM[(long int *)pretmp_1693 + -24B];
  iftmp.71_1535 = (sizetype) _1534;
  _1536 = &module_name.D.52479 + iftmp.71_1535;
  _1536->D.27757._vptr.ios_base = pretmp_2073;
  MEM[(struct  &)&module_name] ={v} {CLOBBER};
  # DEBUG D#447 => &module_name.D.52482
  # DEBUG this => D#447
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&module_name + 112B].D.27757);
  goto <bb 204>;

<L242>:
  pretmp_1399 = &this_40(D)->_noq_next_output_port;
  pretmp_1370 = &this_40(D)->_noq_next_vc_start;
  pretmp_2320 = &this_40(D)->_noq_next_vc_end;
  pretmp_2308 = &this_40(D)->_output_buffer;
  pretmp_2301 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  <bb 204>:
  module_name ={v} {CLOBBER};
  i_207 = i_4 + 1;
  # DEBUG i => i_207
  # DEBUG i => i_207
  _190 = this_40(D)->D.51790._inputs;
  if (_190 <= i_207)
    goto <bb 148>;
  else
    goto <bb 205>;

  <bb 205>:
  goto <bb 150>;

  <bb 206>:
  # DEBUG D#122 => D#2985
  # DEBUG D#122 => D#2985
  # DEBUG this => D#122
  # DEBUG this => D#122
  _1548 = _216 - _1547;
  # DEBUG this => D#2985
  # DEBUG D#215 => &D#2985->D.49421._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#215
  # DEBUG this => D#2985
  MEM[(struct __normal_iterator *)&__position] = _1542;
  # DEBUG __n => _1548
  # DEBUG __x => &__x
  _217 = &this_40(D)->_next_buf;
  std::vector<BufferState*>::_M_fill_insert (_217, __position, _1548, &__x);
  goto <bb 208>;

<L243>:
  pretmp_166 = &this_40(D)->_noq_next_output_port;
  pretmp_1513 = &this_40(D)->_noq_next_vc_start;
  pretmp_2319 = &this_40(D)->_noq_next_vc_end;
  pretmp_1596 = &this_40(D)->_output_buffer;
  pretmp_2304 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  <bb 208>:
  pretmp_1038 = this_40(D)->D.51790._outputs;
  goto <bb 211>;

  <bb 209>:
  # DEBUG D#122 => D#2985
  # DEBUG D#122 => D#2985
  # DEBUG this => D#122
  # DEBUG this => D#122
  if (_216 < _1547)
    goto <bb 210>;
  else
    goto <bb 211>;

  <bb 210>:
  _1549 = _216 * 8;
  _1550 = _1541 + _1549;
  # DEBUG D#375 => D#2985
  # DEBUG __pos => _1550
  # DEBUG D#374 => D#375
  # DEBUG this => D#374
  # DEBUG D#372 => &D#374->D.49421
  # DEBUG this => D#372
  # DEBUG D#373 => D#374->D.49421._M_impl._M_finish
  # DEBUG __first => _1550
  # DEBUG __last => D#373
  # DEBUG D.94793 => NULL
  # DEBUG D#370 => _1550
  # DEBUG D#371 => D#373
  # DEBUG __first => D#370
  # DEBUG __last => D#371
  # DEBUG D#369 => D#371
  # DEBUG D#368 => D#370
  # DEBUG D#366 => D#368
  # DEBUG D#367 => D#369
  # DEBUG D.94777 => D#366
  # DEBUG D.94776 => D#367
  MEM[(struct BufferState * * *)this_40(D) + 912B] = _1550;

  <bb 211>:
  # prephitmp_1039 = PHI <pretmp_1038(208), _215(210), _215(209)>
  # DEBUG j => 0
  if (prephitmp_1039 <= 0)
    goto <bb 212>;
  else
    goto <bb 213>;

  <bb 212>:
  # DEBUG D#120 => &D.62796
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62796
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62795, "vc_allocator");
  goto <bb 276>;

  <bb 213>:
  pretmp_2237 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  pretmp_1801 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];

  <bb 214>:
  # j_1416 = PHI <0(213), j_236(274)>
  # prephitmp_1687 = PHI <pretmp_2237(213), iftmp.70_1617(274)>
  # prephitmp_1664 = PHI <pretmp_1801(213), iftmp.72_1621(274)>
  # DEBUG j => j_1416
  # DEBUG this => &module_name
  # DEBUG __mode => 16
  # DEBUG D#446 => &module_name.D.52482
  # DEBUG this => D#446
  std::ios_base::ios_base (&MEM[(struct basic_ios *)&module_name + 112B].D.27757);
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_ios *)&module_name + 112B]._M_tie = 0B;
  MEM[(struct basic_ios *)&module_name + 112B]._M_fill = 0;
  MEM[(struct basic_ios *)&module_name + 112B]._M_fill_init = 0;
  MEM[(struct basic_ios *)&module_name + 112B]._M_streambuf = 0B;
  MEM[(struct basic_ios *)&module_name + 112B]._M_ctype = 0B;
  MEM[(struct basic_ios *)&module_name + 112B]._M_num_put = 0B;
  MEM[(struct basic_ios *)&module_name + 112B]._M_num_get = 0B;
  # DEBUG this => &module_name.D.52479
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  MEM[(struct basic_ostream *)&module_name]._vptr.basic_ostream = prephitmp_1687;
  _1553 = MEM[(long int *)prephitmp_1687 + -24B];
  iftmp.65_1554 = (sizetype) _1553;
  _1555 = &module_name.D.52479 + iftmp.65_1554;
  _1555->D.27757._vptr.ios_base = prephitmp_1664;
  std::basic_ios<char>::init (_1555, 0B);

  <bb 215>:
  module_name.D.52479._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG __a => 16
  # DEBUG __b => 16
  # DEBUG D#444 => &module_name._M_stringbuf
  # DEBUG this => D#444
  # DEBUG __mode => NULL
  # DEBUG D#394 => &MEM[(struct basic_stringbuf *)D#444].D.52329
  # DEBUG this => D#394
  MEM[(struct basic_streambuf *)&module_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_in_beg = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_in_cur = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_in_end = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_out_beg = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_out_cur = 0B;
  MEM[(struct basic_streambuf *)&module_name + 8B]._M_out_end = 0B;
  std::locale::locale (&MEM[(struct basic_streambuf *)&module_name + 8B]._M_buf_locale);
  MEM[(struct basic_stringbuf *)&module_name + 8B].D.52329._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  MEM[(struct basic_stringbuf *)&module_name + 8B]._M_mode = 16;
  # DEBUG D#393 => &MEM[(struct basic_stringbuf *)D#444]._M_string
  # DEBUG this => D#393
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG this => D#393
  # DEBUG D#392 => &MEM[(struct basic_string *)D#393]._M_dataplus
  # DEBUG this => D#392
  # DEBUG __dat => &MEM[(struct basic_string *)&module_name + 80B].D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#392
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&module_name + 80B]._M_p = &MEM[(struct basic_string *)&module_name + 80B].D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => D#393
  # DEBUG __n => 0
  # DEBUG D#8 => D#393
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&module_name + 88B] = 0;
  # DEBUG D#1 => D#393
  # DEBUG this => D#1
  # DEBUG __c1 => &MEM[(struct basic_string *)&module_name + 80B].D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&module_name + 96] = 0;
  std::basic_ios<char>::init (&MEM[(void *)&module_name + 112B], &module_name._M_stringbuf.D.52329);
  goto <bb 222>;

  # prephitmp_2102 = PHI <prephitmp_1664(215)>
  # prephitmp_2075 = PHI <prephitmp_1687(215)>
<L185>:
  std::__cxx11::basic_stringbuf<char>::~basic_stringbuf (&module_name._M_stringbuf);
  resx 267

<L186>:
  # DEBUG this => &module_name.D.52479
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  _1565 = MEM[(long int *)prephitmp_2075 + -24B];
  iftmp.71_1566 = (sizetype) _1565;
  _1567 = &module_name.D.52479 + iftmp.71_1566;
  _1567->D.27757._vptr.ios_base = prephitmp_2102;
  MEM[(struct  &)&module_name] ={v} {CLOBBER};
  resx 266

<L245>:
  goto <bb 220> (<L187>);

<L244>:

<L187>:
  # DEBUG D#445 => &module_name.D.52482
  # DEBUG this => D#445
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&module_name + 112B].D.27757);
  resx 265

<L246>:
  pretmp_1400 = &this_40(D)->_noq_next_output_port;
  pretmp_1595 = &this_40(D)->_noq_next_vc_start;
  pretmp_2321 = &this_40(D)->_noq_next_vc_end;
  pretmp_1354 = &this_40(D)->_output_buffer;
  pretmp_2299 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  <bb 222>:
  # DEBUG __out => &module_name.D.52479
  # DEBUG __s => "next_vc_o"
  # DEBUG __s => "next_vc_o"
  std::__ostream_insert<char, std::char_traits<char> > (&module_name.D.52479, "next_vc_o", 9);

  <bb 223>:
  std::basic_ostream<char>::operator<< (&module_name.D.52479, j_1416);
  goto <bb 225>;

<L248>:
  goto <bb 634> (<L98>);

  <bb 225>:
  # DEBUG this => &module_name
  # DEBUG this => &module_name._M_stringbuf
  # DEBUG this => &D.62790
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG this => &D.62790
  # DEBUG D#392 => &D.62790._M_dataplus
  # DEBUG this => D#392
  # DEBUG __dat => &D.62790.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#392
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.62790]._M_p = &D.62790.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.62790
  # DEBUG __n => 0
  # DEBUG D#8 => &D.62790
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.62790 + 8B] = 0;
  # DEBUG D#1 => &D.62790
  # DEBUG this => D#1
  # DEBUG __c1 => &D.62790.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.62790 + 16] = 0;
  # DEBUG D#938 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  _1568 = MEM[(char_type * *)&module_name + 48B];
  # DEBUG D#5 => D#938
  # DEBUG this => D#5
  if (_1568 != 0B)
    goto <bb 226>;
  else
    goto <bb 243>;

  <bb 226>:
  # DEBUG D#939 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  # DEBUG D#5 => D#939
  # DEBUG this => D#5
  # DEBUG D#940 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  _1569 = MEM[(char_type * *)&module_name + 32B];
  # DEBUG D#6 => D#940
  # DEBUG this => D#6
  if (_1568 > _1569)
    goto <bb 227>;
  else
    goto <bb 232>;

  <bb 227>:
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#943 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  # DEBUG D#5 => D#943
  # DEBUG this => D#5
  # DEBUG D#944 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  _1570 = MEM[(char_type * *)&module_name + 40B];
  # DEBUG D#7 => D#944
  # DEBUG this => D#7
  # DEBUG this => &D.129353
  # DEBUG __beg => _1570
  # DEBUG __end => _1568
  # DEBUG __a => NULL
  # DEBUG this => &D.129353
  # DEBUG D#936 => &D.129353._M_dataplus
  # DEBUG this => D#936
  # DEBUG __dat => &D.129353.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#936
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.129353]._M_p = &D.129353.D.11539._M_local_buf;
  # DEBUG this => &D.129353
  # DEBUG __beg => _1570
  # DEBUG __end => _1568
  # DEBUG this => &D.129353
  # DEBUG __beg => _1570
  # DEBUG __end => _1568
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.254 (&D.129353, _1570, _1568);

  <bb 228>:
  # DEBUG this => &D.62790
  # DEBUG __str => &D.129353
  # DEBUG this => &D.62790
  # DEBUG __str => &D.129353
  std::__cxx11::basic_string<char>::_M_assign (&D.62790, &D.129353);

  <bb 229>:
  # DEBUG this => &D.129353
  # DEBUG this => &D.129353
  # DEBUG this => &D.129353
  _1571 = MEM[(char * *)&D.129353];
  # DEBUG D#1 => &D.129353
  # DEBUG this => D#1
  # DEBUG this => &D.129353
  if (&D.129353.D.11539._M_local_buf != _1571)
    goto <bb 230>;
  else
    goto <bb 231>;

  <bb 230>:
  # DEBUG D#440 => D.129353.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.129353
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.129353
  # DEBUG this => D#1
  # DEBUG this => &D.129353
  # DEBUG D#437 => &D.129353._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1571
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1571
  # DEBUG this => D#431
  # DEBUG D.129312 => D#432
  operator delete (_1571);

  <bb 231>:
  # DEBUG D#441 => &D.129353._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.129353 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 258>;

  <bb 232>:
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#941 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  # DEBUG D#6 => D#941
  # DEBUG this => D#6
  # DEBUG D#942 => &MEM[(const struct basic_stringbuf *)&module_name + 8B].D.52329
  _1572 = MEM[(char_type * *)&module_name + 40B];
  # DEBUG D#7 => D#942
  # DEBUG this => D#7
  # DEBUG this => &D.129352
  # DEBUG __beg => _1572
  # DEBUG __end => _1569
  # DEBUG __a => NULL
  # DEBUG this => &D.129352
  # DEBUG D#936 => &D.129352._M_dataplus
  # DEBUG this => D#936
  # DEBUG __dat => &D.129352.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#936
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.129352]._M_p = &D.129352.D.11539._M_local_buf;
  # DEBUG this => &D.129352
  # DEBUG __beg => _1572
  # DEBUG __end => _1569
  # DEBUG this => &D.129352
  # DEBUG __beg => _1572
  # DEBUG __end => _1569
  # DEBUG this => &D.129352
  # DEBUG __beg => _1572
  # DEBUG __end => _1569
  # DEBUG __ptr => _1572
  _1786 = _1569 != 0B;
  _1773 = _1572 == 0B;
  _1598 = _1773 & _1786;
  if (_1598 != 0)
    goto <bb 791>;
  else
    goto <bb 790>;

  <bb 233>:
  _1582 = std::__cxx11::basic_string<char>::_M_create (&D.129352, &__dnew, 0);
  goto <bb 235>;

<L250>:
  goto <bb 254> (<L190>);

  <bb 235>:
  # DEBUG D#9 => &D.129352
  # DEBUG __p => _1582
  # DEBUG this => D#9
  MEM[(char * *)&D.129352] = _1582;
  __dnew.16_1583 = __dnew;
  # DEBUG D#10 => &D.129352
  # DEBUG __capacity => __dnew.16_1583
  # DEBUG this => D#10
  MEM[(size_type *)&D.129352 + 16B] = __dnew.16_1583;
  # DEBUG D#1 => &D.129352
  # DEBUG this => D#1
  # DEBUG __p => _1582
  # DEBUG __k1 => _1572
  # DEBUG __k2 => _1569
  # DEBUG __d => _1582
  # DEBUG __s => _1572
  # DEBUG __n => __dnew.15_1581
  goto <bb 238>;

  <bb 236>:
  # DEBUG D#1 => &D.129352
  # DEBUG this => D#1
  # DEBUG __p => &D.129352.D.11539._M_local_buf
  # DEBUG __k1 => _1572
  # DEBUG __k2 => _1569
  # DEBUG __d => &D.129352.D.11539._M_local_buf
  # DEBUG __s => _1572
  # DEBUG __n => __dnew.15_1581
  if (__dnew.15_1581 == 1)
    goto <bb 237>;
  else
    goto <bb 238>;

  <bb 237>:
  _1585 = MEM[(const char_type &)_1572];
  # DEBUG D#11 => _1572
  # DEBUG __c1 => &D.129352.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.129352 + 16] = _1585;
  goto <bb 239>;

  <bb 238>:
  # _2240 = PHI <&D.129352.D.11539._M_local_buf(236), _1582(235)>
  # DEBUG D#1 => &D.129352
  # DEBUG this => D#1
  # DEBUG __p => _2240
  # DEBUG __k1 => _1572
  # DEBUG __k2 => _1569
  # DEBUG __d => _2240
  # DEBUG __s => _1572
  # DEBUG __n => __dnew.15_1581
  # DEBUG __s1 => _2240
  # DEBUG __s2 => _1572
  # DEBUG __n => __dnew.15_1581
  __builtin_memcpy (_2240, _1572, __dnew.15_1581);
  pretmp_1514 = __dnew;
  pretmp_1479 = MEM[(char * *)&D.129352];

  <bb 239>:
  # prephitmp_1485 = PHI <__dnew.15_1581(237), pretmp_1514(238)>
  # prephitmp_1694 = PHI <&D.129352.D.11539._M_local_buf(237), pretmp_1479(238)>
  # DEBUG D#2975 => __dnew
  # DEBUG this => &D.129352
  # DEBUG __n => D#2975
  # DEBUG D#8 => &D.129352
  # DEBUG __length => D#2975
  # DEBUG this => D#8
  MEM[(size_type *)&D.129352 + 8B] = prephitmp_1485;
  # DEBUG D#1 => &D.129352
  # DEBUG this => D#1
  _1588 = prephitmp_1694 + prephitmp_1485;
  # DEBUG __c1 => _1588
  # DEBUG __c2 => D#11
  MEM[(char_type &)_1588] = 0;
  __dnew ={v} {CLOBBER};
  # DEBUG this => &D.62790
  # DEBUG __str => &D.129352
  # DEBUG this => &D.62790
  # DEBUG __str => &D.129352
  std::__cxx11::basic_string<char>::_M_assign (&D.62790, &D.129352);

  <bb 240>:
  # DEBUG this => &D.129352
  # DEBUG this => &D.129352
  # DEBUG this => &D.129352
  _1573 = MEM[(char * *)&D.129352];
  # DEBUG D#1 => &D.129352
  # DEBUG this => D#1
  # DEBUG this => &D.129352
  if (&D.129352.D.11539._M_local_buf != _1573)
    goto <bb 241>;
  else
    goto <bb 242>;

  <bb 241>:
  # DEBUG D#440 => D.129352.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.129352
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.129352
  # DEBUG this => D#1
  # DEBUG this => &D.129352
  # DEBUG D#437 => &D.129352._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1573
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1573
  # DEBUG this => D#431
  # DEBUG D.129275 => D#432
  operator delete (_1573);

  <bb 242>:
  # DEBUG D#441 => &D.129352._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.129352 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => NULL
  goto <bb 258>;

  <bb 243>:
  # DEBUG this => &D.62790
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => &D.62790
  # DEBUG __str => &MEM[(const struct basic_stringbuf *)&module_name + 8B]._M_string
  std::__cxx11::basic_string<char>::_M_assign (&D.62790, &MEM[(const struct basic_stringbuf *)&module_name + 8B]._M_string);
  goto <bb 258>;

<L251>:
  goto <bb 254> (<L190>);

<L188>:
  # DEBUG this => &D.129353
  # DEBUG this => &D.129353
  # DEBUG this => &D.129353
  _1575 = MEM[(char * *)&D.129353];
  # DEBUG D#1 => &D.129353
  # DEBUG this => D#1
  # DEBUG this => &D.129353
  if (&D.129353.D.11539._M_local_buf != _1575)
    goto <bb 246>;
  else
    goto <bb 247>;

  <bb 246>:
  # DEBUG D#440 => D.129353.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.129353
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.129353
  # DEBUG this => D#1
  # DEBUG this => &D.129353
  # DEBUG D#437 => &D.129353._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1575
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1575
  # DEBUG this => D#431
  # DEBUG D.129256 => D#432
  operator delete (_1575);

  <bb 247>:
  # DEBUG D#441 => &D.129353._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.129353 ={v} {CLOBBER};
  resx 271

<L252>:
  goto <bb 254> (<L190>);

<L189>:
  # DEBUG this => &D.129352
  # DEBUG this => &D.129352
  # DEBUG this => &D.129352
  _1576 = MEM[(char * *)&D.129352];
  # DEBUG D#1 => &D.129352
  # DEBUG this => D#1
  # DEBUG this => &D.129352
  if (&D.129352.D.11539._M_local_buf != _1576)
    goto <bb 250>;
  else
    goto <bb 251>;

  <bb 250>:
  # DEBUG D#440 => D.129352.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.129352
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.129352
  # DEBUG this => D#1
  # DEBUG this => &D.129352
  # DEBUG D#437 => &D.129352._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1576
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1576
  # DEBUG this => D#431
  # DEBUG D.129240 => D#432
  operator delete (_1576);

  <bb 251>:
  # DEBUG D#441 => &D.129352._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.129352 ={v} {CLOBBER};
  resx 270

<L253>:
  goto <bb 254> (<L190>);

<L249>:

<L190>:
  # DEBUG this => &D.62790
  # DEBUG this => &D.62790
  # DEBUG this => &D.62790
  _1577 = MEM[(char * *)&D.62790];
  # DEBUG D#1 => &D.62790
  # DEBUG this => D#1
  # DEBUG this => &D.62790
  if (&D.62790.D.11539._M_local_buf != _1577)
    goto <bb 255>;
  else
    goto <bb 256>;

  <bb 255>:
  # DEBUG D#440 => D.62790.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62790
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62790
  # DEBUG this => D#1
  # DEBUG this => &D.62790
  # DEBUG D#437 => &D.62790._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _1577
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _1577
  # DEBUG this => D#431
  # DEBUG D.129229 => D#432
  operator delete (_1577);

  <bb 256>:
  # DEBUG D#441 => &D.62790._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  resx 269

<L254>:
  goto <bb 634> (<L98>);

  <bb 258>:
  _224 = operator new (264);

  <bb 259>:
  BufferState::BufferState (_224, config_43(D), _41, &D.62790);

  <bb 260>:
  _227 = (long unsigned int) j_1416;
  # DEBUG D#2232 => &this_40(D)->_next_buf
  _558 = MEM[(struct BufferState * * *)this_40(D) + 904B];
  # DEBUG D#54 => D#2232
  # DEBUG __n => _227
  # DEBUG this => D#54
  _369 = _227 * 8;
  _360 = _558 + _369;
  *_360 = _224;
  # DEBUG this => &D.62790
  # DEBUG this => &D.62790
  # DEBUG this => &D.62790
  _222 = MEM[(char * *)&D.62790];
  # DEBUG D#1 => &D.62790
  # DEBUG this => D#1
  # DEBUG this => &D.62790
  if (&D.62790.D.11539._M_local_buf != _222)
    goto <bb 261>;
  else
    goto <bb 262>;

  <bb 261>:
  # DEBUG D#440 => D.62790.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62790
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62790
  # DEBUG this => D#1
  # DEBUG this => &D.62790
  # DEBUG D#437 => &D.62790._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _222
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _222
  # DEBUG this => D#431
  # DEBUG D.116929 => D#432
  operator delete (_222);

  <bb 262>:
  # DEBUG D#441 => &D.62790._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62790 ={v} {CLOBBER};
  # DEBUG D#120 => &D.62793
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62793
  # DEBUG this => &D.62792
  # DEBUG __s => ""
  # DEBUG __a => D#921
  # DEBUG D#920 => D#921
  # DEBUG this => &D.62792
  # DEBUG D#918 => &D.62792._M_dataplus
  # DEBUG D#391 => D#920
  # DEBUG this => D#918
  # DEBUG __dat => &D.62792.D.11539._M_local_buf
  # DEBUG __a => D#391
  # DEBUG D#390 => D#391
  # DEBUG D#388 => D#918
  # DEBUG D#389 => D#390
  # DEBUG this => D#388
  # DEBUG __a => D#389
  # DEBUG D#387 => D#389
  # DEBUG D#386 => D#388
  # DEBUG this => D#386
  # DEBUG D.94864 => D#387
  MEM[(struct _Alloc_hider *)&D.62792]._M_p = &D.62792.D.11539._M_local_buf;
  # DEBUG __s => ""
  # DEBUG this => &D.62792
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.62792
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG this => &D.62792
  # DEBUG __beg => ""
  # DEBUG __end => ""
  # DEBUG __ptr => ""
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG D#929 => &__first
  # DEBUG D.98358 => D#929
  # DEBUG __first => ""
  # DEBUG __last => ""
  # DEBUG __dnew => 0
  # DEBUG D#2990 => MEM[(char * *)&D.62792]
  # DEBUG D#1 => &D.62792
  # DEBUG this => D#1
  # DEBUG __p => D#2990
  # DEBUG __k1 => ""
  # DEBUG __k2 => ""
  # DEBUG __d => D#2990
  # DEBUG __s => ""
  # DEBUG __n => 0
  # DEBUG __s1 => D#2990
  # DEBUG __s2 => ""
  # DEBUG __n => 0
  # DEBUG this => &D.62792
  # DEBUG __n => 0
  # DEBUG D#8 => &D.62792
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.62792 + 8B] = 0;
  # DEBUG D#1 => &D.62792
  # DEBUG this => D#1
  # DEBUG __c1 => &D.62792.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.62792 + 16] = 0;
  # DEBUG D#2970 => {CLOBBER}
  # DEBUG __dnew => D#2970
  # DEBUG this => &module_name
  # DEBUG __s => &D.62792
  # DEBUG this => &module_name._M_stringbuf
  # DEBUG __s => &D.62792
  # DEBUG D#3 => &D.62792
  # DEBUG this => D#3
  # DEBUG this => &D.62792
  # DEBUG D#1 => &D.62792
  # DEBUG this => D#1
  # DEBUG this => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG __s => &D.62792.D.11539._M_local_buf
  # DEBUG __n => 0
  _1608 = MEM[(long unsigned int *)&module_name + 88B];
  # DEBUG D#3 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => D#3
  std::__cxx11::basic_string<char>::_M_replace (&MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string, 0, _1608, &D.62792.D.11539._M_local_buf, 0);

  <bb 263>:
  _1609 = MEM[(struct basic_stringbuf *)&module_name + 8B]._M_mode;
  # DEBUG this => &module_name._M_stringbuf
  # DEBUG __mode => _1609
  # DEBUG __len => 0
  # DEBUG __a => 2
  # DEBUG __b => 1
  # DEBUG __a => _1609
  # DEBUG __b => NULL
  __a.78_1610 = (int) _1609;
  _1611 = __a.78_1610 & 3;
  if (_1611 != 0)
    goto <bb 264>;
  else
    goto <bb 265>;

  <bb 264>:
  # DEBUG D#15 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  __len_1613 = MEM[(long unsigned int *)&module_name + 88B];
  # DEBUG D#3 => D#15
  # DEBUG this => D#3
  # DEBUG __len => __len_1613

  <bb 265>:
  # __len_1615 = PHI <0(263), __len_1613(264)>
  # DEBUG __len => __len_1615
  # DEBUG D#16 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => D#16
  _1614 = MEM[(char * *)&module_name + 80B];
  # DEBUG D#1 => D#16
  # DEBUG this => D#1
  std::__cxx11::basic_stringbuf<char>::_M_sync (&module_name._M_stringbuf, _1614, 0, __len_1615);
  goto <bb 267>;

<L257>:
  goto <bb 629> (<L96>);

  <bb 267>:
  # DEBUG this => &D.62792
  # DEBUG this => &D.62792
  # DEBUG this => &D.62792
  _233 = MEM[(char * *)&D.62792];
  # DEBUG D#1 => &D.62792
  # DEBUG this => D#1
  # DEBUG this => &D.62792
  if (&D.62792.D.11539._M_local_buf != _233)
    goto <bb 268>;
  else
    goto <bb 269>;

  <bb 268>:
  # DEBUG D#440 => D.62792.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62792
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62792
  # DEBUG this => D#1
  # DEBUG this => &D.62792
  # DEBUG D#437 => &D.62792._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _233
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _233
  # DEBUG this => D#431
  # DEBUG D.116952 => D#432
  operator delete (_233);

  <bb 269>:
  # DEBUG D#441 => &D.62792._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62792 ={v} {CLOBBER};
  # DEBUG this => &D.62793
  # DEBUG this => &D.62793
  # DEBUG this => &module_name
  module_name.D.52479._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &module_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&module_name + 8B].D.52329._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#443 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => D#443
  # DEBUG this => D#443
  # DEBUG this => D#443
  _234 = MEM[(char * *)&module_name + 80B];
  # DEBUG D#1 => D#443
  # DEBUG this => D#1
  # DEBUG this => D#443
  if (&MEM[(const struct basic_string *)&module_name + 80B].D.11539._M_local_buf != _234)
    goto <bb 270>;
  else
    goto <bb 271>;

  <bb 270>:
  # DEBUG D#440 => MEM[(struct basic_string *)D#443].D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => D#443
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => D#443
  # DEBUG this => D#1
  # DEBUG this => D#443
  # DEBUG D#437 => &MEM[(struct basic_string *)D#443]._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _234
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _234
  # DEBUG this => D#431
  # DEBUG D.129454 => D#432
  operator delete (_234);

  <bb 271>:
  # DEBUG D#441 => &MEM[(struct basic_string *)D#443]._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)&module_name + 80] ={v} {CLOBBER};
  # DEBUG D#442 => &MEM[(struct basic_stringbuf *)&module_name + 8B].D.52329
  # DEBUG this => D#442
  MEM[(struct basic_streambuf *)&module_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&module_name + 8B]._M_buf_locale);
  MEM[(struct  &)&module_name + 8] ={v} {CLOBBER};
  # DEBUG this => &module_name.D.52479
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.70_1617 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _1618 = MEM[(long int *)iftmp.70_1617 + -24B];
  iftmp.71_1619 = (sizetype) _1618;
  _1620 = &module_name.D.52479 + iftmp.71_1619;
  iftmp.72_1621 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _1620->D.27757._vptr.ios_base = iftmp.72_1621;
  MEM[(struct  &)&module_name] ={v} {CLOBBER};
  # DEBUG D#447 => &module_name.D.52482
  # DEBUG this => D#447
  MEM[(struct basic_ios *)&module_name + 112B].D.27757._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&module_name + 112B].D.27757);
  goto <bb 273>;

<L258>:
  pretmp_189 = &this_40(D)->_noq_next_output_port;
  pretmp_676 = &this_40(D)->_noq_next_vc_start;
  pretmp_2327 = &this_40(D)->_noq_next_vc_end;
  pretmp_2310 = &this_40(D)->_output_buffer;
  pretmp_2306 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  <bb 273>:
  module_name ={v} {CLOBBER};
  j_236 = j_1416 + 1;
  # DEBUG j => j_236
  # DEBUG j => j_236
  _219 = this_40(D)->D.51790._outputs;
  if (_219 <= j_236)
    goto <bb 212>;
  else
    goto <bb 274>;

  <bb 274>:
  goto <bb 214>;

<L259>:
  pretmp_96 = &this_40(D)->_noq_next_output_port;
  pretmp_2329 = &this_40(D)->_noq_next_vc_start;
  pretmp_2326 = &this_40(D)->_noq_next_vc_end;
  pretmp_2311 = &this_40(D)->_output_buffer;
  pretmp_2307 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  <bb 276>:
  vc_alloc_type = Configuration::GetStr (config_43(D), &D.62795); [return slot optimization]

  <bb 277>:
  # DEBUG this => &D.62795
  # DEBUG this => &D.62795
  # DEBUG this => &D.62795
  _247 = MEM[(char * *)&D.62795];
  # DEBUG D#1 => &D.62795
  # DEBUG this => D#1
  # DEBUG this => &D.62795
  if (&D.62795.D.11539._M_local_buf != _247)
    goto <bb 278>;
  else
    goto <bb 279>;

  <bb 278>:
  # DEBUG D#440 => D.62795.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62795
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62795
  # DEBUG this => D#1
  # DEBUG this => &D.62795
  # DEBUG D#437 => &D.62795._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _247
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _247
  # DEBUG this => D#431
  # DEBUG D.116973 => D#432
  operator delete (_247);

  <bb 279>:
  # DEBUG D#441 => &D.62795._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62795 ={v} {CLOBBER};
  # DEBUG this => &D.62796
  # DEBUG this => &D.62796
  # DEBUG __lhs => &vc_alloc_type
  # DEBUG __rhs => "piggyback"
  _231 = std::__cxx11::basic_string<char>::compare (&vc_alloc_type, "piggyback");

  <bb 280>:
  if (_231 == 0)
    goto <bb 281>;
  else
    goto <bb 294>;

  <bb 281>:
  _248 = this_40(D)->_speculative;
  if (_248 != 0)
    goto <bb 288>;
  else
    goto <bb 282>;

  <bb 282>:
  # DEBUG D#120 => &D.62798
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62798
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62797, "Piggyback VC allocation requires speculative switch allocation to be enabled.");
  goto <bb 284>;

<L261>:
  pretmp_1560 = &this_40(D)->_noq_next_output_port;
  pretmp_1557 = &this_40(D)->_noq_next_vc_start;
  pretmp_1492 = &this_40(D)->_noq_next_vc_end;
  pretmp_2334 = &this_40(D)->_output_buffer;
  pretmp_1486 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

  <bb 284>:
  Module::Error (_41, &D.62797);

  <bb 285>:
  # DEBUG this => &D.62797
  # DEBUG this => &D.62797
  # DEBUG this => &D.62797
  _254 = MEM[(char * *)&D.62797];
  # DEBUG D#1 => &D.62797
  # DEBUG this => D#1
  # DEBUG this => &D.62797
  if (&D.62797.D.11539._M_local_buf != _254)
    goto <bb 286>;
  else
    goto <bb 287>;

  <bb 286>:
  # DEBUG D#440 => D.62797.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62797
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62797
  # DEBUG this => D#1
  # DEBUG this => &D.62797
  # DEBUG D#437 => &D.62797._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _254
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _254
  # DEBUG this => D#431
  # DEBUG D.116991 => D#432
  operator delete (_254);

  <bb 287>:
  # DEBUG D#441 => &D.62797._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62797 ={v} {CLOBBER};
  # DEBUG this => &D.62798
  # DEBUG this => &D.62798

  <bb 288>:
  this_40(D)->_vc_allocator = 0B;
  _258 = this_40(D)->D.51790._outputs;
  _259 = this_40(D)->D.51790._classes;
  _260 = _258 * _259;
  _261 = (long unsigned int) _260;
  # DEBUG D#2984 => &this_40(D)->_vc_rr_offset
  # DEBUG this => D#2984
  # DEBUG __new_size => _261
  __x = -1;
  # DEBUG __x => __x
  _1625 = MEM[(int * *)this_40(D) + 952B];
  # DEBUG D#123 => D#2984
  _1626 = MEM[(int * *)this_40(D) + 960B];
  # DEBUG D#123 => D#2984
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1627 = (long int) _1626;
  _1628 = (long int) _1625;
  _1629 = _1627 - _1628;
  _1630 = _1629 /[ex] 4;
  _1631 = (size_type) _1630;
  if (_261 > _1631)
    goto <bb 289>;
  else
    goto <bb 292>;

  <bb 289>:
  # DEBUG D#123 => D#2984
  # DEBUG D#123 => D#2984
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1632 = _261 - _1631;
  # DEBUG this => D#2984
  # DEBUG D#216 => &D#2984->D.35433._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG this => D#2984
  MEM[(struct __normal_iterator *)&__position] = _1626;
  # DEBUG __n => _1632
  # DEBUG __x => &__x
  _262 = &this_40(D)->_vc_rr_offset;
  std::vector<int>::_M_fill_insert (_262, __position, _1632, &__x);
  goto <bb 291>;

<L262>:
  pretmp_2352 = &this_40(D)->_noq_next_output_port;
  pretmp_220 = &this_40(D)->_noq_next_vc_start;
  pretmp_1538 = &this_40(D)->_noq_next_vc_end;
  pretmp_1523 = &this_40(D)->_output_buffer;
  pretmp_1502 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

  <bb 291>:
  goto <bb 306>;

  <bb 292>:
  # DEBUG D#123 => D#2984
  # DEBUG D#123 => D#2984
  # DEBUG this => D#123
  # DEBUG this => D#123
  if (_261 < _1631)
    goto <bb 293>;
  else
    goto <bb 291>;

  <bb 293>:
  _1633 = _261 * 4;
  _1634 = _1625 + _1633;
  # DEBUG D#385 => D#2984
  # DEBUG __pos => _1634
  # DEBUG D#384 => D#385
  # DEBUG this => D#384
  # DEBUG D#382 => &D#384->D.35433
  # DEBUG this => D#382
  # DEBUG D#383 => D#384->D.35433._M_impl._M_finish
  # DEBUG __first => _1634
  # DEBUG __last => D#383
  # DEBUG D.94831 => NULL
  # DEBUG D#380 => _1634
  # DEBUG D#381 => D#383
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  MEM[(int * *)this_40(D) + 960B] = _1634;
  goto <bb 306>;

  <bb 294>:
  _264 = this_40(D)->_vcs;
  _265 = this_40(D)->D.51790._outputs;
  _266 = _264 * _265;
  _267 = this_40(D)->D.51790._inputs;
  _268 = _264 * _267;
  # DEBUG D#120 => &D.62800
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62800
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62799, "vc_allocator");
  goto <bb 296>;

<L263>:
  pretmp_2347 = &this_40(D)->_noq_next_output_port;
  pretmp_1559 = &this_40(D)->_noq_next_vc_start;
  pretmp_2339 = &this_40(D)->_noq_next_vc_end;
  pretmp_1506 = &this_40(D)->_output_buffer;
  pretmp_1488 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

  <bb 296>:
  _273 = Allocator::NewAllocator (_41, &D.62799, &vc_alloc_type, _268, _266, 0B);

  <bb 297>:
  this_40(D)->_vc_allocator = _273;
  # DEBUG this => &D.62799
  # DEBUG this => &D.62799
  # DEBUG this => &D.62799
  _277 = MEM[(char * *)&D.62799];
  # DEBUG D#1 => &D.62799
  # DEBUG this => D#1
  # DEBUG this => &D.62799
  if (&D.62799.D.11539._M_local_buf != _277)
    goto <bb 298>;
  else
    goto <bb 299>;

  <bb 298>:
  # DEBUG D#440 => D.62799.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62799
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62799
  # DEBUG this => D#1
  # DEBUG this => &D.62799
  # DEBUG D#437 => &D.62799._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _277
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _277
  # DEBUG this => D#431
  # DEBUG D.117009 => D#432
  operator delete (_277);
  pretmp_1880 = this_40(D)->_vc_allocator;

  <bb 299>:
  # prephitmp_2248 = PHI <_273(297), pretmp_1880(298)>
  # DEBUG D#441 => &D.62799._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62799 ={v} {CLOBBER};
  # DEBUG this => &D.62800
  # DEBUG this => &D.62800
  if (prephitmp_2248 == 0B)
    goto <bb 300>;
  else
    goto <bb 291>;

  <bb 300>:
  D.62801 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown vc_allocator type: ", &vc_alloc_type); [return slot optimization]
  goto <bb 302>;

<L264>:
  pretmp_1574 = &this_40(D)->_noq_next_output_port;
  pretmp_1561 = &this_40(D)->_noq_next_vc_start;
  pretmp_2341 = &this_40(D)->_noq_next_vc_end;
  pretmp_2336 = &this_40(D)->_output_buffer;
  pretmp_1491 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

  <bb 302>:
  Module::Error (_41, &D.62801);

  <bb 303>:
  # DEBUG this => &D.62801
  # DEBUG this => &D.62801
  # DEBUG this => &D.62801
  _275 = MEM[(char * *)&D.62801];
  # DEBUG D#1 => &D.62801
  # DEBUG this => D#1
  # DEBUG this => &D.62801
  if (&D.62801.D.11539._M_local_buf != _275)
    goto <bb 304>;
  else
    goto <bb 305>;

  <bb 304>:
  # DEBUG D#440 => D.62801.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62801
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62801
  # DEBUG this => D#1
  # DEBUG this => &D.62801
  # DEBUG D#437 => &D.62801._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _275
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _275
  # DEBUG this => D#431
  # DEBUG D.117024 => D#432
  operator delete (_275);

  <bb 305>:
  # DEBUG D#441 => &D.62801._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62801 ={v} {CLOBBER};

  <bb 306>:
  # DEBUG D#120 => &D.62804
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62804
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62803, "sw_allocator");
  goto <bb 308>;

<L265>:
  pretmp_2349 = &this_40(D)->_noq_next_output_port;
  pretmp_2344 = &this_40(D)->_noq_next_vc_start;
  pretmp_218 = &this_40(D)->_noq_next_vc_end;
  pretmp_882 = &this_40(D)->_output_buffer;
  pretmp_1515 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

  <bb 308>:
  sw_alloc_type = Configuration::GetStr (config_43(D), &D.62803); [return slot optimization]

  <bb 309>:
  # DEBUG this => &D.62803
  # DEBUG this => &D.62803
  # DEBUG this => &D.62803
  _289 = MEM[(char * *)&D.62803];
  # DEBUG D#1 => &D.62803
  # DEBUG this => D#1
  # DEBUG this => &D.62803
  if (&D.62803.D.11539._M_local_buf != _289)
    goto <bb 310>;
  else
    goto <bb 311>;

  <bb 310>:
  # DEBUG D#440 => D.62803.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62803
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62803
  # DEBUG this => D#1
  # DEBUG this => &D.62803
  # DEBUG D#437 => &D.62803._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _289
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _289
  # DEBUG this => D#431
  # DEBUG D.117043 => D#432
  operator delete (_289);

  <bb 311>:
  # DEBUG D#441 => &D.62803._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62803 ={v} {CLOBBER};
  # DEBUG this => &D.62804
  # DEBUG this => &D.62804
  _290 = this_40(D)->D.51790._outputs;
  _291 = this_40(D)->D.51790._output_speedup;
  _292 = _290 * _291;
  _293 = this_40(D)->D.51790._inputs;
  _294 = this_40(D)->D.51790._input_speedup;
  _295 = _293 * _294;
  # DEBUG D#120 => &D.62806
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62806
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62805, "sw_allocator");

  <bb 312>:
  _299 = Allocator::NewAllocator (_41, &D.62805, &sw_alloc_type, _295, _292, 0B);

  <bb 313>:
  this_40(D)->_sw_allocator = _299;
  # DEBUG this => &D.62805
  # DEBUG this => &D.62805
  # DEBUG this => &D.62805
  _303 = MEM[(char * *)&D.62805];
  # DEBUG D#1 => &D.62805
  # DEBUG this => D#1
  # DEBUG this => &D.62805
  if (&D.62805.D.11539._M_local_buf != _303)
    goto <bb 314>;
  else
    goto <bb 315>;

  <bb 314>:
  # DEBUG D#440 => D.62805.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62805
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62805
  # DEBUG this => D#1
  # DEBUG this => &D.62805
  # DEBUG D#437 => &D.62805._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _303
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _303
  # DEBUG this => D#431
  # DEBUG D.117060 => D#432
  operator delete (_303);
  pretmp_1040 = this_40(D)->_sw_allocator;

  <bb 315>:
  # prephitmp_1041 = PHI <_299(313), pretmp_1040(314)>
  # DEBUG D#441 => &D.62805._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62805 ={v} {CLOBBER};
  # DEBUG this => &D.62806
  # DEBUG this => &D.62806
  if (prephitmp_1041 == 0B)
    goto <bb 316>;
  else
    goto <bb 322>;

  <bb 316>:
  D.62807 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown sw_allocator type: ", &sw_alloc_type); [return slot optimization]
  goto <bb 318>;

<L267>:
  pretmp_1877 = &this_40(D)->_noq_next_output_port;
  pretmp_1883 = &this_40(D)->_noq_next_vc_start;
  pretmp_1647 = &this_40(D)->_noq_next_vc_end;
  pretmp_533 = &this_40(D)->_output_buffer;
  pretmp_1151 = &this_40(D)->_credit_buffer;
  goto <bb 728> (<L143>);

  <bb 318>:
  Module::Error (_41, &D.62807);

  <bb 319>:
  # DEBUG this => &D.62807
  # DEBUG this => &D.62807
  # DEBUG this => &D.62807
  _301 = MEM[(char * *)&D.62807];
  # DEBUG D#1 => &D.62807
  # DEBUG this => D#1
  # DEBUG this => &D.62807
  if (&D.62807.D.11539._M_local_buf != _301)
    goto <bb 320>;
  else
    goto <bb 321>;

  <bb 320>:
  # DEBUG D#440 => D.62807.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62807
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62807
  # DEBUG this => D#1
  # DEBUG this => &D.62807
  # DEBUG D#437 => &D.62807._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _301
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _301
  # DEBUG this => D#431
  # DEBUG D.117075 => D#432
  operator delete (_301);

  <bb 321>:
  # DEBUG D#441 => &D.62807._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62807 ={v} {CLOBBER};

  <bb 322>:
  # DEBUG D#120 => &D.62810
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62810
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62809, "spec_sw_allocator");
  goto <bb 324>;

<L268>:
  pretmp_1699 = &this_40(D)->_noq_next_output_port;
  pretmp_8 = &this_40(D)->_noq_next_vc_start;
  pretmp_191 = &this_40(D)->_noq_next_vc_end;
  pretmp_14 = &this_40(D)->_output_buffer;
  pretmp_482 = &this_40(D)->_credit_buffer;
  goto <bb 728> (<L143>);

  <bb 324>:
  spec_sw_alloc_type = Configuration::GetStr (config_43(D), &D.62809); [return slot optimization]

  <bb 325>:
  # DEBUG this => &D.62809
  # DEBUG this => &D.62809
  # DEBUG this => &D.62809
  _314 = MEM[(char * *)&D.62809];
  # DEBUG D#1 => &D.62809
  # DEBUG this => D#1
  # DEBUG this => &D.62809
  if (&D.62809.D.11539._M_local_buf != _314)
    goto <bb 326>;
  else
    goto <bb 327>;

  <bb 326>:
  # DEBUG D#440 => D.62809.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62809
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62809
  # DEBUG this => D#1
  # DEBUG this => &D.62809
  # DEBUG D#437 => &D.62809._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _314
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _314
  # DEBUG this => D#431
  # DEBUG D.117093 => D#432
  operator delete (_314);

  <bb 327>:
  # DEBUG D#441 => &D.62809._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62809 ={v} {CLOBBER};
  # DEBUG this => &D.62810
  # DEBUG this => &D.62810
  _315 = this_40(D)->_speculative;
  if (_315 != 0)
    goto <bb 328>;
  else
    goto <bb 793>;

  <bb 328>:
  # DEBUG __lhs => &spec_sw_alloc_type
  # DEBUG __rhs => "prio"
  # DEBUG __lhs => &spec_sw_alloc_type
  # DEBUG __rhs => "prio"
  _312 = std::__cxx11::basic_string<char>::compare (&spec_sw_alloc_type, "prio");

  <bb 329>:
  if (_312 != 0)
    goto <bb 794>;
  else
    goto <bb 793>;

  <bb 330>:
  _324 = Allocator::NewAllocator (_41, &D.62811, &spec_sw_alloc_type, _321, _318, 0B);

  <bb 331>:
  this_40(D)->_spec_sw_allocator = _324;
  # DEBUG this => &D.62811
  # DEBUG this => &D.62811
  # DEBUG this => &D.62811
  _328 = MEM[(char * *)&D.62811];
  # DEBUG D#1 => &D.62811
  # DEBUG this => D#1
  # DEBUG this => &D.62811
  if (&D.62811.D.11539._M_local_buf != _328)
    goto <bb 332>;
  else
    goto <bb 333>;

  <bb 332>:
  # DEBUG D#440 => D.62811.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62811
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62811
  # DEBUG this => D#1
  # DEBUG this => &D.62811
  # DEBUG D#437 => &D.62811._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _328
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _328
  # DEBUG this => D#431
  # DEBUG D.117116 => D#432
  operator delete (_328);
  pretmp_651 = this_40(D)->_spec_sw_allocator;

  <bb 333>:
  # prephitmp_656 = PHI <_324(331), pretmp_651(332)>
  # DEBUG D#441 => &D.62811._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62811 ={v} {CLOBBER};
  # DEBUG this => &D.62812
  # DEBUG this => &D.62812
  if (prephitmp_656 == 0B)
    goto <bb 334>;
  else
    goto <bb 340>;

  <bb 334>:
  D.62813 = std::operator+<char, std::char_traits<char>, std::allocator<char> > ("Unknown spec_sw_allocator type: ", &spec_sw_alloc_type); [return slot optimization]
  goto <bb 336>;

<L270>:
  pretmp_1020 = &this_40(D)->_noq_next_output_port;
  pretmp_992 = &this_40(D)->_noq_next_vc_start;
  pretmp_966 = &this_40(D)->_noq_next_vc_end;
  pretmp_923 = &this_40(D)->_output_buffer;
  pretmp_2058 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 336>:
  Module::Error (_41, &D.62813);

  <bb 337>:
  # DEBUG this => &D.62813
  # DEBUG this => &D.62813
  # DEBUG this => &D.62813
  _326 = MEM[(char * *)&D.62813];
  # DEBUG D#1 => &D.62813
  # DEBUG this => D#1
  # DEBUG this => &D.62813
  if (&D.62813.D.11539._M_local_buf != _326)
    goto <bb 338>;
  else
    goto <bb 339>;

  <bb 338>:
  # DEBUG D#440 => D.62813.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62813
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62813
  # DEBUG this => D#1
  # DEBUG this => &D.62813
  # DEBUG D#437 => &D.62813._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _326
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _326
  # DEBUG this => D#431
  # DEBUG D.117131 => D#432
  operator delete (_326);

  <bb 339>:
  # DEBUG D#441 => &D.62813._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62813 ={v} {CLOBBER};

  <bb 340>:
  _338 = this_40(D)->D.51790._inputs;
  _339 = this_40(D)->D.51790._input_speedup;
  _340 = _338 * _339;
  _341 = (long unsigned int) _340;
  # DEBUG D#2983 => &this_40(D)->_sw_rr_offset
  # DEBUG this => D#2983
  # DEBUG __new_size => _341
  __x = 0;
  # DEBUG __x => __x
  _263 = MEM[(int * *)this_40(D) + 976B];
  # DEBUG D#123 => D#2983
  _1635 = MEM[(int * *)this_40(D) + 984B];
  # DEBUG D#123 => D#2983
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1636 = (long int) _1635;
  _1637 = (long int) _263;
  _1638 = _1636 - _1637;
  _1639 = _1638 /[ex] 4;
  _1640 = (size_type) _1639;
  if (_341 > _1640)
    goto <bb 341>;
  else
    goto <bb 344>;

  <bb 341>:
  # DEBUG D#123 => D#2983
  # DEBUG D#123 => D#2983
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1641 = _341 - _1640;
  # DEBUG this => D#2983
  # DEBUG D#216 => &D#2983->D.35433._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG this => D#2983
  MEM[(struct __normal_iterator *)&__position] = _1635;
  # DEBUG __n => _1641
  # DEBUG __x => &__x
  _342 = &this_40(D)->_sw_rr_offset;
  std::vector<int>::_M_fill_insert (_342, __position, _1641, &__x);
  goto <bb 343>;

<L271>:
  pretmp_1021 = &this_40(D)->_noq_next_output_port;
  pretmp_984 = &this_40(D)->_noq_next_vc_start;
  pretmp_958 = &this_40(D)->_noq_next_vc_end;
  pretmp_924 = &this_40(D)->_output_buffer;
  pretmp_2059 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 343>:
  pretmp_867 = this_40(D)->D.51790._input_speedup;
  pretmp_869 = this_40(D)->D.51790._inputs;
  pretmp_1622 = pretmp_867 * pretmp_869;
  goto <bb 346>;

  <bb 344>:
  # DEBUG D#123 => D#2983
  # DEBUG D#123 => D#2983
  # DEBUG this => D#123
  # DEBUG this => D#123
  if (_341 < _1640)
    goto <bb 345>;
  else
    goto <bb 346>;

  <bb 345>:
  _1642 = _341 * 4;
  _1643 = _263 + _1642;
  # DEBUG D#385 => D#2983
  # DEBUG __pos => _1643
  # DEBUG D#384 => D#385
  # DEBUG this => D#384
  # DEBUG D#382 => &D#384->D.35433
  # DEBUG this => D#382
  # DEBUG D#383 => D#384->D.35433._M_impl._M_finish
  # DEBUG __first => _1643
  # DEBUG __last => D#383
  # DEBUG D.94831 => NULL
  # DEBUG D#380 => _1643
  # DEBUG D#381 => D#383
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  MEM[(int * *)this_40(D) + 984B] = _1643;

  <bb 346>:
  # prephitmp_868 = PHI <pretmp_867(343), _339(345), _339(344)>
  # prephitmp_2359 = PHI <pretmp_1622(343), _340(345), _340(344)>
  # DEBUG i => 0
  if (prephitmp_2359 <= 0)
    goto <bb 347>;
  else
    goto <bb 348>;

  <bb 347>:
  # DEBUG D#120 => &D.62817
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62817
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62816, "noq");
  goto <bb 352>;

  <bb 348>:
  pretmp_711 = MEM[(int * *)this_40(D) + 976B];

  <bb 349>:
  # i_1393 = PHI <0(348), i_350(350)>
  # _2251 = PHI <prephitmp_868(348), _345(350)>
  # DEBUG i => i_1393
  _347 = (long unsigned int) i_1393;
  # DEBUG D#2233 => &this_40(D)->_sw_rr_offset
  # DEBUG D#55 => D#2233
  # DEBUG __n => _347
  # DEBUG this => D#55
  _269 = _347 * 4;
  _249 = pretmp_711 + _269;
  _348 = i_1393 % _2251;
  *_249 = _348;
  i_350 = i_1393 + 1;
  # DEBUG i => i_350
  # DEBUG i => i_350
  _344 = this_40(D)->D.51790._inputs;
  _345 = this_40(D)->D.51790._input_speedup;
  _346 = _344 * _345;
  if (_346 <= i_350)
    goto <bb 347>;
  else
    goto <bb 350>;

  <bb 350>:
  goto <bb 349>;

<L272>:
  pretmp_1011 = &this_40(D)->_noq_next_output_port;
  pretmp_980 = &this_40(D)->_noq_next_vc_start;
  pretmp_938 = &this_40(D)->_noq_next_vc_end;
  pretmp_901 = &this_40(D)->_output_buffer;
  pretmp_880 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 352>:
  _353 = Configuration::GetInt (config_43(D), &D.62816);

  <bb 353>:
  _354 = _353 > 0;
  this_40(D)->_noq = _354;
  # DEBUG this => &D.62816
  # DEBUG this => &D.62816
  # DEBUG this => &D.62816
  _357 = MEM[(char * *)&D.62816];
  # DEBUG D#1 => &D.62816
  # DEBUG this => D#1
  # DEBUG this => &D.62816
  if (&D.62816.D.11539._M_local_buf != _357)
    goto <bb 354>;
  else
    goto <bb 355>;

  <bb 354>:
  # DEBUG D#440 => D.62816.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62816
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62816
  # DEBUG this => D#1
  # DEBUG this => &D.62816
  # DEBUG D#437 => &D.62816._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _357
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _357
  # DEBUG this => D#431
  # DEBUG D.117153 => D#432
  operator delete (_357);
  pretmp_842 = this_40(D)->_noq;

  <bb 355>:
  # prephitmp_843 = PHI <_354(353), pretmp_842(354)>
  # DEBUG D#441 => &D.62816._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62816 ={v} {CLOBBER};
  # DEBUG this => &D.62817
  # DEBUG this => &D.62817
  if (prephitmp_843 != 0)
    goto <bb 357>;
  else
    goto <bb 356>;

  <bb 356>:
  pretmp_846 = this_40(D)->_vcs;
  goto <bb 371>;

  <bb 357>:
  _359 = this_40(D)->_routing_delay;
  if (_359 != 0)
    goto <bb 358>;
  else
    goto <bb 364>;

  <bb 358>:
  # DEBUG D#120 => &D.62819
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62819
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62818, "NOQ requires lookahead routing to be enabled.");
  goto <bb 360>;

<L273>:
  pretmp_1004 = &this_40(D)->_noq_next_output_port;
  pretmp_968 = &this_40(D)->_noq_next_vc_start;
  pretmp_940 = &this_40(D)->_noq_next_vc_end;
  pretmp_903 = &this_40(D)->_output_buffer;
  pretmp_1928 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 360>:
  Module::Error (_41, &D.62818);

  <bb 361>:
  # DEBUG this => &D.62818
  # DEBUG this => &D.62818
  # DEBUG this => &D.62818
  _364 = MEM[(char * *)&D.62818];
  # DEBUG D#1 => &D.62818
  # DEBUG this => D#1
  # DEBUG this => &D.62818
  if (&D.62818.D.11539._M_local_buf != _364)
    goto <bb 362>;
  else
    goto <bb 363>;

  <bb 362>:
  # DEBUG D#440 => D.62818.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62818
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62818
  # DEBUG this => D#1
  # DEBUG this => &D.62818
  # DEBUG D#437 => &D.62818._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _364
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _364
  # DEBUG this => D#431
  # DEBUG D.117171 => D#432
  operator delete (_364);

  <bb 363>:
  # DEBUG D#441 => &D.62818._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62818 ={v} {CLOBBER};
  # DEBUG this => &D.62819
  # DEBUG this => &D.62819

  <bb 364>:
  _367 = this_40(D)->_vcs;
  _368 = this_40(D)->D.51790._outputs;
  if (_367 < _368)
    goto <bb 365>;
  else
    goto <bb 371>;

  <bb 365>:
  # DEBUG D#120 => &D.62821
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62821
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62820, "NOQ requires at least as many VCs as router outputs.");
  goto <bb 367>;

<L274>:
  pretmp_1006 = &this_40(D)->_noq_next_output_port;
  pretmp_970 = &this_40(D)->_noq_next_vc_start;
  pretmp_928 = &this_40(D)->_noq_next_vc_end;
  pretmp_2041 = &this_40(D)->_output_buffer;
  pretmp_1930 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 367>:
  Module::Error (_41, &D.62820);

  <bb 368>:
  # DEBUG this => &D.62820
  # DEBUG this => &D.62820
  # DEBUG this => &D.62820
  _373 = MEM[(char * *)&D.62820];
  # DEBUG D#1 => &D.62820
  # DEBUG this => D#1
  # DEBUG this => &D.62820
  if (&D.62820.D.11539._M_local_buf != _373)
    goto <bb 369>;
  else
    goto <bb 370>;

  <bb 369>:
  # DEBUG D#440 => D.62820.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62820
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62820
  # DEBUG this => D#1
  # DEBUG this => &D.62820
  # DEBUG D#437 => &D.62820._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _373
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _373
  # DEBUG this => D#431
  # DEBUG D.117189 => D#432
  operator delete (_373);

  <bb 370>:
  # DEBUG D#441 => &D.62820._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62820 ={v} {CLOBBER};
  # DEBUG this => &D.62821
  # DEBUG this => &D.62821
  pretmp_847 = this_40(D)->_vcs;

  <bb 371>:
  # prephitmp_848 = PHI <pretmp_846(356), pretmp_847(370), _367(364)>
  # DEBUG this => &D.62823
  # DEBUG this => &D.62823
  # DEBUG D#2974 => this_40(D)->_vcs
  # DEBUG this => &D.62822
  # DEBUG __first => D#2974
  # DEBUG __last => -1
  # DEBUG __a => &D.62823
  # DEBUG D#1412 => &D.62822.D.35433
  # DEBUG this => D#1412
  # DEBUG __a => &D.62823
  # DEBUG D#702 => &D#1412->_M_impl
  # DEBUG this => D#702
  # DEBUG __a => &D.62823
  # DEBUG this => D#702
  # DEBUG __a => &D.62823
  # DEBUG this => D#702
  # DEBUG D.96655 => &D.62823
  MEM[(struct _Vector_impl *)&D.62822]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.62822]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.62822]._M_end_of_storage = 0B;
  # DEBUG this => &D.62822
  # DEBUG __n => D#2974
  # DEBUG __value => -1
  __n_377 = (size_type) prephitmp_848;
  # DEBUG D#1409 => &D.62822.D.35433
  # DEBUG D#965 => D#1409
  # DEBUG __n => __n_377
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (__n_377 != 0)
    goto <bb 372>;
  else
    goto <bb 796>;

  <bb 372>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => __n_377
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => __n_377
  # DEBUG this => D#959
  # DEBUG D.129541 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (__n_377 > 4611686018427387903)
    goto <bb 373>;
  else
    goto <bb 374>;

  <bb 373>:
  std::__throw_bad_alloc ();

  <bb 374>:
  _1651 = __n_377 * 4;
  _1652 = operator new (_1651);
  goto <bb 376>;

<L276>:
  goto <bb 383> (<L191>);

  <bb 376>:
  D.62822.D.35433._M_impl._M_start = _1652;
  _1646 = _1652 + _1651;
  D.62822.D.35433._M_impl._M_end_of_storage = _1646;
  # DEBUG D#1407 => &D.62822
  # DEBUG D#1407 => &D.62822
  # DEBUG D#1408 => &__value
  # DEBUG __n => __n_377
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.129516 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG __value => D#1394
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_377
  # DEBUG __niter => __n_377
  # DEBUG __first => _1652
  if (__n_377 == 0)
    goto <bb 381>;
  else
    goto <bb 377>;

  <bb 377>:
  _2135 = (sizetype) prephitmp_848;
  _2132 = _2135 * 4;
  __builtin_memset (_1652, 255, _2132);

  <bb 379>:
  _2157 = (long unsigned int) prephitmp_848;
  _2147 = _2157 * 4;
  __first_2107 = _1652 + _2147;

  <bb 381>:
  # __first_2253 = PHI <__first_2107(379), _1652(376), 0B(796)>
  # prephitmp_856 = PHI <_1652(379), _1652(376), 0B(796)>
  MEM[(int * *)&D.62822 + 8B] = __first_2253;
  _378 = this_40(D)->D.51790._inputs;
  _379 = (long unsigned int) _378;
  _380 = &this_40(D)->_noq_next_output_port;
  # DEBUG this => _380
  # DEBUG __new_size => _379
  # DEBUG __x => &D.62822
  _1654 = MEM[(struct vector * *)this_40(D) + 1152B];
  # DEBUG D#124 => _380
  _1655 = MEM[(struct vector * *)this_40(D) + 1160B];
  # DEBUG D#124 => _380
  # DEBUG this => D#124
  # DEBUG this => D#124
  _1656 = (long int) _1655;
  _1657 = (long int) _1654;
  _1658 = _1656 - _1657;
  _1659 = _1658 /[ex] 24;
  _1660 = (size_type) _1659;
  if (_379 > _1660)
    goto <bb 387>;
  else
    goto <bb 389>;

<L275>:

<L191>:
  # DEBUG D#1411 => &D.62822.D.35433
  # DEBUG this => D#1411
  # DEBUG D#627 => D#1411->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _343 = MEM[(struct _Vector_base *)&D.62822]._M_impl._M_start;
  # DEBUG D#625 => (long int) _343
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#1411
  # DEBUG __p => _343
  # DEBUG __n => D#622
  if (_343 != 0B)
    goto <bb 384>;
  else
    goto <bb 385>;

  <bb 384>:
  # DEBUG D#620 => &D#1411->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _343
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _343
  # DEBUG this => D#614
  # DEBUG D.129497 => D#615
  operator delete (_343);

  <bb 385>:
  # DEBUG D#621 => &D#1411->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)&D.62822] ={v} {CLOBBER};
  resx 272

<L277>:
  pretmp_989 = &this_40(D)->_noq_next_output_port;
  pretmp_963 = &this_40(D)->_noq_next_vc_start;
  pretmp_930 = &this_40(D)->_noq_next_vc_end;
  pretmp_2043 = &this_40(D)->_output_buffer;
  pretmp_1943 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 387>:
  # DEBUG D#124 => _380
  # DEBUG D#124 => _380
  # DEBUG this => D#124
  # DEBUG this => D#124
  _1661 = _379 - _1660;
  # DEBUG this => _380
  # DEBUG D#219 => &_380->D.51676._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#219
  # DEBUG this => _380
  MEM[(struct __normal_iterator *)&__position] = _1655;
  # DEBUG __n => _1661
  # DEBUG __x => &D.62822
  std::vector<std::vector<int> >::_M_fill_insert (_380, __position, _1661, &D.62822);

  <bb 388>:
  pretmp_13 = MEM[(struct _Vector_base *)&D.62822]._M_impl._M_start;
  goto <bb 398>;

  <bb 389>:
  # DEBUG D#124 => _380
  # DEBUG D#124 => _380
  # DEBUG this => D#124
  # DEBUG this => D#124
  if (_379 < _1660)
    goto <bb 390>;
  else
    goto <bb 398>;

  <bb 390>:
  _1662 = _379 * 24;
  __pos_1663 = _1654 + _1662;
  # DEBUG D#695 => _380
  # DEBUG __pos => __pos_1663
  # DEBUG D#694 => D#695
  # DEBUG this => D#694
  # DEBUG D#693 => &D#694->D.51676
  # DEBUG this => D#693
  # DEBUG __first => __pos_1663
  # DEBUG __last => _1655
  # DEBUG __first => __pos_1663
  if (_1655 == __pos_1663)
    goto <bb 397>;
  else
    goto <bb 391>;

  <bb 391>:

  <bb 392>:
  # __pos_2254 = PHI <__pos_1663(391), __pos_1666(395)>
  # DEBUG __first => __pos_2254
  # DEBUG __r => __pos_2254
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _1665 = MEM[(struct _Vector_base *)__pos_2254]._M_impl._M_start;
  # DEBUG D#625 => (long int) _1665
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _1665
  # DEBUG __n => D#622
  if (_1665 != 0B)
    goto <bb 393>;
  else
    goto <bb 394>;

  <bb 393>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _1665
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _1665
  # DEBUG this => D#614
  # DEBUG D.129568 => D#615
  operator delete (_1665);

  <bb 394>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__pos_2254] ={v} {CLOBBER};
  __pos_1666 = __pos_2254 + 24;
  # DEBUG __first => __pos_1666
  # DEBUG __first => __pos_1666
  if (_1655 == __pos_1666)
    goto <bb 396>;
  else
    goto <bb 395>;

  <bb 395>:
  goto <bb 392>;

  <bb 396>:
  pretmp_2228 = MEM[(struct _Vector_base *)&D.62822]._M_impl._M_start;

  <bb 397>:
  # prephitmp_2353 = PHI <pretmp_2228(396), prephitmp_856(390)>
  MEM[(struct vector * *)this_40(D) + 1160B] = __pos_1663;

  <bb 398>:
  # prephitmp_1564 = PHI <prephitmp_856(389), pretmp_13(388), prephitmp_2353(397)>
  # DEBUG this => &D.62822
  # DEBUG D#628 => &D.62822.D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D.62822.D.35433._M_impl._M_finish
  # DEBUG D#630 => D.62822.D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D.62822.D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  # DEBUG D#2973 => MEM[(struct _Vector_base *)&D.62822]._M_impl._M_start
  # DEBUG D#625 => (long int) D#2973
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => D#2973
  # DEBUG __n => D#622
  if (prephitmp_1564 != 0B)
    goto <bb 399>;
  else
    goto <bb 400>;

  <bb 399>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => D#2973
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => D#2973
  # DEBUG this => D#614
  # DEBUG D.117210 => D#615
  operator delete (prephitmp_1564);

  <bb 400>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  D.62822 ={v} {CLOBBER};
  # DEBUG this => &D.62823
  # DEBUG this => &D.62823
  # DEBUG this => &D.62825
  # DEBUG this => &D.62825
  _385 = this_40(D)->_vcs;
  # DEBUG this => &D.62824
  # DEBUG __first => _385
  # DEBUG __last => -1
  # DEBUG __a => &D.62825
  # DEBUG D#1412 => &D.62824.D.35433
  # DEBUG this => D#1412
  # DEBUG __a => &D.62825
  # DEBUG D#702 => &D#1412->_M_impl
  # DEBUG this => D#702
  # DEBUG __a => &D.62825
  # DEBUG this => D#702
  # DEBUG __a => &D.62825
  # DEBUG this => D#702
  # DEBUG D.96655 => &D.62825
  MEM[(struct _Vector_impl *)&D.62824]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.62824]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.62824]._M_end_of_storage = 0B;
  # DEBUG this => &D.62824
  # DEBUG __n => _385
  # DEBUG __value => -1
  __n_386 = (size_type) _385;
  # DEBUG D#1409 => &D.62824.D.35433
  # DEBUG D#965 => D#1409
  # DEBUG __n => __n_386
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (__n_386 != 0)
    goto <bb 401>;
  else
    goto <bb 797>;

  <bb 401>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => __n_386
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => __n_386
  # DEBUG this => D#959
  # DEBUG D.129636 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (__n_386 > 4611686018427387903)
    goto <bb 402>;
  else
    goto <bb 403>;

  <bb 402>:
  std::__throw_bad_alloc ();

  <bb 403>:
  _1674 = __n_386 * 4;
  _1675 = operator new (_1674);
  goto <bb 405>;

<L279>:
  goto <bb 412> (<L192>);

  <bb 405>:
  D.62824.D.35433._M_impl._M_start = _1675;
  _1669 = _1675 + _1674;
  D.62824.D.35433._M_impl._M_end_of_storage = _1669;
  # DEBUG D#1407 => &D.62824
  # DEBUG D#1407 => &D.62824
  # DEBUG D#1408 => &__value
  # DEBUG __n => __n_386
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.129611 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG __value => D#1394
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_386
  # DEBUG __niter => __n_386
  # DEBUG __first => _1675
  if (__n_386 == 0)
    goto <bb 410>;
  else
    goto <bb 406>;

  <bb 406>:
  _1042 = (sizetype) _385;
  _1401 = _1042 * 4;
  __builtin_memset (_1675, 255, _1401);

  <bb 408>:
  _1375 = (long unsigned int) _385;
  _2159 = _1375 * 4;
  __first_2078 = _1675 + _2159;

  <bb 410>:
  # __first_2257 = PHI <__first_2078(408), _1675(405), 0B(797)>
  # prephitmp_831 = PHI <_1675(408), _1675(405), 0B(797)>
  MEM[(int * *)&D.62824 + 8B] = __first_2257;
  _387 = this_40(D)->D.51790._inputs;
  _388 = (long unsigned int) _387;
  _389 = &this_40(D)->_noq_next_vc_start;
  # DEBUG this => _389
  # DEBUG __new_size => _388
  # DEBUG __x => &D.62824
  _1677 = MEM[(struct vector * *)this_40(D) + 1176B];
  # DEBUG D#124 => _389
  _1678 = MEM[(struct vector * *)this_40(D) + 1184B];
  # DEBUG D#124 => _389
  # DEBUG this => D#124
  # DEBUG this => D#124
  _1679 = (long int) _1678;
  _1680 = (long int) _1677;
  _1681 = _1679 - _1680;
  _1682 = _1681 /[ex] 24;
  _1683 = (size_type) _1682;
  if (_388 > _1683)
    goto <bb 416>;
  else
    goto <bb 418>;

<L278>:

<L192>:
  # DEBUG D#1411 => &D.62824.D.35433
  # DEBUG this => D#1411
  # DEBUG D#627 => D#1411->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _381 = MEM[(struct _Vector_base *)&D.62824]._M_impl._M_start;
  # DEBUG D#625 => (long int) _381
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#1411
  # DEBUG __p => _381
  # DEBUG __n => D#622
  if (_381 != 0B)
    goto <bb 413>;
  else
    goto <bb 414>;

  <bb 413>:
  # DEBUG D#620 => &D#1411->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _381
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _381
  # DEBUG this => D#614
  # DEBUG D.129592 => D#615
  operator delete (_381);

  <bb 414>:
  # DEBUG D#621 => &D#1411->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)&D.62824] ={v} {CLOBBER};
  resx 273

<L280>:
  pretmp_987 = &this_40(D)->_noq_next_vc_start;
  pretmp_961 = &this_40(D)->_noq_next_vc_end;
  pretmp_907 = &this_40(D)->_output_buffer;
  pretmp_885 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 416>:
  # DEBUG D#124 => _389
  # DEBUG D#124 => _389
  # DEBUG this => D#124
  # DEBUG this => D#124
  _1684 = _388 - _1683;
  # DEBUG this => _389
  # DEBUG D#219 => &_389->D.51676._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#219
  # DEBUG this => _389
  MEM[(struct __normal_iterator *)&__position] = _1678;
  # DEBUG __n => _1684
  # DEBUG __x => &D.62824
  std::vector<std::vector<int> >::_M_fill_insert (_389, __position, _1684, &D.62824);

  <bb 417>:
  pretmp_2221 = MEM[(struct _Vector_base *)&D.62824]._M_impl._M_start;
  goto <bb 427>;

  <bb 418>:
  # DEBUG D#124 => _389
  # DEBUG D#124 => _389
  # DEBUG this => D#124
  # DEBUG this => D#124
  if (_388 < _1683)
    goto <bb 419>;
  else
    goto <bb 427>;

  <bb 419>:
  _1685 = _388 * 24;
  __pos_1686 = _1677 + _1685;
  # DEBUG D#695 => _389
  # DEBUG __pos => __pos_1686
  # DEBUG D#694 => D#695
  # DEBUG this => D#694
  # DEBUG D#693 => &D#694->D.51676
  # DEBUG this => D#693
  # DEBUG __first => __pos_1686
  # DEBUG __last => _1678
  # DEBUG __first => __pos_1686
  if (_1678 == __pos_1686)
    goto <bb 426>;
  else
    goto <bb 420>;

  <bb 420>:

  <bb 421>:
  # __pos_2258 = PHI <__pos_1686(420), __pos_1689(424)>
  # DEBUG __first => __pos_2258
  # DEBUG __r => __pos_2258
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _1688 = MEM[(struct _Vector_base *)__pos_2258]._M_impl._M_start;
  # DEBUG D#625 => (long int) _1688
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _1688
  # DEBUG __n => D#622
  if (_1688 != 0B)
    goto <bb 422>;
  else
    goto <bb 423>;

  <bb 422>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _1688
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _1688
  # DEBUG this => D#614
  # DEBUG D.129663 => D#615
  operator delete (_1688);

  <bb 423>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__pos_2258] ={v} {CLOBBER};
  __pos_1689 = __pos_2258 + 24;
  # DEBUG __first => __pos_1689
  # DEBUG __first => __pos_1689
  if (_1678 == __pos_1689)
    goto <bb 425>;
  else
    goto <bb 424>;

  <bb 424>:
  goto <bb 421>;

  <bb 425>:
  pretmp_1601 = MEM[(struct _Vector_base *)&D.62824]._M_impl._M_start;

  <bb 426>:
  # prephitmp_1591 = PHI <pretmp_1601(425), prephitmp_831(419)>
  MEM[(struct vector * *)this_40(D) + 1184B] = __pos_1686;

  <bb 427>:
  # prephitmp_2357 = PHI <prephitmp_831(418), pretmp_2221(417), prephitmp_1591(426)>
  # DEBUG this => &D.62824
  # DEBUG D#628 => &D.62824.D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D.62824.D.35433._M_impl._M_finish
  # DEBUG D#630 => D.62824.D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D.62824.D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  # DEBUG D#2972 => MEM[(struct _Vector_base *)&D.62824]._M_impl._M_start
  # DEBUG D#625 => (long int) D#2972
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => D#2972
  # DEBUG __n => D#622
  if (prephitmp_2357 != 0B)
    goto <bb 428>;
  else
    goto <bb 429>;

  <bb 428>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => D#2972
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => D#2972
  # DEBUG this => D#614
  # DEBUG D.117228 => D#615
  operator delete (prephitmp_2357);

  <bb 429>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  D.62824 ={v} {CLOBBER};
  # DEBUG this => &D.62825
  # DEBUG this => &D.62825
  # DEBUG this => &D.62827
  # DEBUG this => &D.62827
  _394 = this_40(D)->_vcs;
  # DEBUG this => &D.62826
  # DEBUG __first => _394
  # DEBUG __last => -1
  # DEBUG __a => &D.62827
  # DEBUG D#1412 => &D.62826.D.35433
  # DEBUG this => D#1412
  # DEBUG __a => &D.62827
  # DEBUG D#702 => &D#1412->_M_impl
  # DEBUG this => D#702
  # DEBUG __a => &D.62827
  # DEBUG this => D#702
  # DEBUG __a => &D.62827
  # DEBUG this => D#702
  # DEBUG D.96655 => &D.62827
  MEM[(struct _Vector_impl *)&D.62826]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.62826]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.62826]._M_end_of_storage = 0B;
  # DEBUG this => &D.62826
  # DEBUG __n => _394
  # DEBUG __value => -1
  __n_395 = (size_type) _394;
  # DEBUG D#1409 => &D.62826.D.35433
  # DEBUG D#965 => D#1409
  # DEBUG __n => __n_395
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  if (__n_395 != 0)
    goto <bb 430>;
  else
    goto <bb 798>;

  <bb 430>:
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => __n_395
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => __n_395
  # DEBUG this => D#959
  # DEBUG D.129731 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  if (__n_395 > 4611686018427387903)
    goto <bb 431>;
  else
    goto <bb 432>;

  <bb 431>:
  std::__throw_bad_alloc ();

  <bb 432>:
  _1697 = __n_395 * 4;
  _1698 = operator new (_1697);
  goto <bb 434>;

<L282>:
  goto <bb 441> (<L193>);

  <bb 434>:
  D.62826.D.35433._M_impl._M_start = _1698;
  _1692 = _1698 + _1697;
  D.62826.D.35433._M_impl._M_end_of_storage = _1692;
  # DEBUG D#1407 => &D.62826
  # DEBUG D#1407 => &D.62826
  # DEBUG D#1408 => &__value
  # DEBUG __n => __n_395
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.129706 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG __value => D#1394
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_395
  # DEBUG __niter => __n_395
  # DEBUG __first => _1698
  if (__n_395 == 0)
    goto <bb 439>;
  else
    goto <bb 435>;

  <bb 435>:
  _1142 = (sizetype) _394;
  _2256 = _1142 * 4;
  __builtin_memset (_1698, 255, _2256);

  <bb 437>:
  _2364 = (long unsigned int) _394;
  _2238 = _2364 * 4;
  __first_2066 = _1698 + _2238;

  <bb 439>:
  # __first_2261 = PHI <__first_2066(437), _1698(434), 0B(798)>
  # prephitmp_816 = PHI <_1698(437), _1698(434), 0B(798)>
  MEM[(int * *)&D.62826 + 8B] = __first_2261;
  _396 = this_40(D)->D.51790._inputs;
  _397 = (long unsigned int) _396;
  _398 = &this_40(D)->_noq_next_vc_end;
  # DEBUG this => _398
  # DEBUG __new_size => _397
  # DEBUG __x => &D.62826
  _1700 = MEM[(struct vector * *)this_40(D) + 1200B];
  # DEBUG D#124 => _398
  _1701 = MEM[(struct vector * *)this_40(D) + 1208B];
  # DEBUG D#124 => _398
  # DEBUG this => D#124
  # DEBUG this => D#124
  _1702 = (long int) _1701;
  _1703 = (long int) _1700;
  _1704 = _1702 - _1703;
  _1705 = _1704 /[ex] 24;
  _1706 = (size_type) _1705;
  if (_397 > _1706)
    goto <bb 445>;
  else
    goto <bb 447>;

<L281>:

<L193>:
  # DEBUG D#1411 => &D.62826.D.35433
  # DEBUG this => D#1411
  # DEBUG D#627 => D#1411->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _390 = MEM[(struct _Vector_base *)&D.62826]._M_impl._M_start;
  # DEBUG D#625 => (long int) _390
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#1411
  # DEBUG __p => _390
  # DEBUG __n => D#622
  if (_390 != 0B)
    goto <bb 442>;
  else
    goto <bb 443>;

  <bb 442>:
  # DEBUG D#620 => &D#1411->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _390
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _390
  # DEBUG this => D#614
  # DEBUG D.129687 => D#615
  operator delete (_390);

  <bb 443>:
  # DEBUG D#621 => &D#1411->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)&D.62826] ={v} {CLOBBER};
  resx 274

<L283>:
  pretmp_944 = &this_40(D)->_noq_next_vc_end;
  pretmp_909 = &this_40(D)->_output_buffer;
  pretmp_887 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 445>:
  # DEBUG D#124 => _398
  # DEBUG D#124 => _398
  # DEBUG this => D#124
  # DEBUG this => D#124
  _1707 = _397 - _1706;
  # DEBUG this => _398
  # DEBUG D#219 => &_398->D.51676._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#219
  # DEBUG this => _398
  MEM[(struct __normal_iterator *)&__position] = _1701;
  # DEBUG __n => _1707
  # DEBUG __x => &D.62826
  std::vector<std::vector<int> >::_M_fill_insert (_398, __position, _1707, &D.62826);

  <bb 446>:
  pretmp_1607 = MEM[(struct _Vector_base *)&D.62826]._M_impl._M_start;
  goto <bb 456>;

  <bb 447>:
  # DEBUG D#124 => _398
  # DEBUG D#124 => _398
  # DEBUG this => D#124
  # DEBUG this => D#124
  if (_397 < _1706)
    goto <bb 448>;
  else
    goto <bb 456>;

  <bb 448>:
  _1708 = _397 * 24;
  __pos_1709 = _1700 + _1708;
  # DEBUG D#695 => _398
  # DEBUG __pos => __pos_1709
  # DEBUG D#694 => D#695
  # DEBUG this => D#694
  # DEBUG D#693 => &D#694->D.51676
  # DEBUG this => D#693
  # DEBUG __first => __pos_1709
  # DEBUG __last => _1701
  # DEBUG __first => __pos_1709
  if (_1701 == __pos_1709)
    goto <bb 455>;
  else
    goto <bb 449>;

  <bb 449>:

  <bb 450>:
  # __pos_2262 = PHI <__pos_1709(449), __pos_1712(453)>
  # DEBUG __first => __pos_2262
  # DEBUG __r => __pos_2262
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#628
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _1711 = MEM[(struct _Vector_base *)__pos_2262]._M_impl._M_start;
  # DEBUG D#625 => (long int) _1711
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _1711
  # DEBUG __n => D#622
  if (_1711 != 0B)
    goto <bb 451>;
  else
    goto <bb 452>;

  <bb 451>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _1711
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _1711
  # DEBUG this => D#614
  # DEBUG D.129758 => D#615
  operator delete (_1711);

  <bb 452>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)__pos_2262] ={v} {CLOBBER};
  __pos_1712 = __pos_2262 + 24;
  # DEBUG __first => __pos_1712
  # DEBUG __first => __pos_1712
  if (_1701 == __pos_1712)
    goto <bb 454>;
  else
    goto <bb 453>;

  <bb 453>:
  goto <bb 450>;

  <bb 454>:
  pretmp_2354 = MEM[(struct _Vector_base *)&D.62826]._M_impl._M_start;

  <bb 455>:
  # prephitmp_905 = PHI <pretmp_2354(454), prephitmp_816(448)>
  MEM[(struct vector * *)this_40(D) + 1208B] = __pos_1709;

  <bb 456>:
  # prephitmp_1616 = PHI <prephitmp_816(447), pretmp_1607(446), prephitmp_905(455)>
  # DEBUG this => &D.62826
  # DEBUG D#628 => &D.62826.D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D.62826.D.35433._M_impl._M_finish
  # DEBUG D#630 => D.62826.D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D.62826.D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  # DEBUG D#2971 => MEM[(struct _Vector_base *)&D.62826]._M_impl._M_start
  # DEBUG D#625 => (long int) D#2971
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => D#2971
  # DEBUG __n => D#622
  if (prephitmp_1616 != 0B)
    goto <bb 457>;
  else
    goto <bb 458>;

  <bb 457>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => D#2971
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => D#2971
  # DEBUG this => D#614
  # DEBUG D.117246 => D#615
  operator delete (prephitmp_1616);

  <bb 458>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  D.62826 ={v} {CLOBBER};
  # DEBUG this => &D.62827
  # DEBUG this => &D.62827
  # DEBUG D#120 => &D.62829
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62829
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62828, "output_buffer_size");
  goto <bb 460>;

<L284>:
  pretmp_2085 = &this_40(D)->_output_buffer;
  pretmp_1972 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 460>:
  _406 = Configuration::GetInt (config_43(D), &D.62828);

  <bb 461>:
  this_40(D)->_output_buffer_size = _406;
  # DEBUG this => &D.62828
  # DEBUG this => &D.62828
  # DEBUG this => &D.62828
  _409 = MEM[(char * *)&D.62828];
  # DEBUG D#1 => &D.62828
  # DEBUG this => D#1
  # DEBUG this => &D.62828
  if (&D.62828.D.11539._M_local_buf != _409)
    goto <bb 462>;
  else
    goto <bb 463>;

  <bb 462>:
  # DEBUG D#440 => D.62828.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62828
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62828
  # DEBUG this => D#1
  # DEBUG this => &D.62828
  # DEBUG D#437 => &D.62828._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _409
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _409
  # DEBUG this => D#431
  # DEBUG D.117266 => D#432
  operator delete (_409);

  <bb 463>:
  # DEBUG D#441 => &D.62828._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62828 ={v} {CLOBBER};
  # DEBUG this => &D.62829
  # DEBUG this => &D.62829
  # DEBUG this => &D.62831
  # DEBUG this => &D.62831.D.54933
  # DEBUG D#1370 => &MEM[(struct _Deque_base *)&D.62831]._M_impl
  # DEBUG this => D#1370
  # DEBUG this => D#1370
  # DEBUG this => D#1370
  MEM[(struct _Deque_impl *)&D.62831]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.62831]._M_map_size = 0;
  # DEBUG D#704 => &D#1370->_M_start
  # DEBUG this => D#704
  MEM[(struct _Deque_iterator *)&D.62831 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.62831 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.62831 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.62831 + 16B]._M_node = 0B;
  # DEBUG D#703 => &D#1370->_M_finish
  # DEBUG this => D#703
  MEM[(struct _Deque_iterator *)&D.62831 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.62831 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.62831 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.62831 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (&D.62831.D.54933, 0);
  goto <bb 465>;

<L285>:
  pretmp_925 = &this_40(D)->_output_buffer;
  pretmp_2060 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 465>:
  # DEBUG this => &D.62830
  # DEBUG __c => &D.62831
  std::deque<Flit*, std::allocator<Flit*> >::deque (&D.62830.c, &D.62831);

  <bb 466>:
  _410 = this_40(D)->D.51790._outputs;
  _411 = (long unsigned int) _410;
  _412 = &this_40(D)->_output_buffer;
  # DEBUG this => _412
  # DEBUG __new_size => _411
  # DEBUG __x => &D.62830
  _399 = MEM[(struct queue * *)this_40(D) + 1016B];
  # DEBUG D#131 => _412
  _1713 = MEM[(struct queue * *)this_40(D) + 1024B];
  # DEBUG D#131 => _412
  # DEBUG this => D#131
  # DEBUG this => D#131
  _1714 = (long int) _1713;
  _1715 = (long int) _399;
  _1716 = _1714 - _1715;
  _1717 = _1716 /[ex] 80;
  _1718 = (size_type) _1717;
  if (_411 > _1718)
    goto <bb 467>;
  else
    goto <bb 469>;

  <bb 467>:
  # DEBUG D#131 => _412
  # DEBUG D#131 => _412
  # DEBUG this => D#131
  # DEBUG this => D#131
  _1719 = _411 - _1718;
  # DEBUG this => _412
  # DEBUG D#220 => &_412->D.50176._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#220
  # DEBUG this => _412
  MEM[(struct __normal_iterator *)&__position] = _1713;
  # DEBUG __n => _1719
  # DEBUG __x => &D.62830
  std::vector<std::queue<Flit*> >::_M_fill_insert (_412, __position, _1719, &D.62830);

  <bb 468>:
  goto <bb 475>;

  <bb 469>:
  # DEBUG D#131 => _412
  # DEBUG D#131 => _412
  # DEBUG this => D#131
  # DEBUG this => D#131
  if (_411 < _1718)
    goto <bb 470>;
  else
    goto <bb 468>;

  <bb 470>:
  _1720 = _411 * 80;
  __pos_1721 = _399 + _1720;
  # DEBUG D#1014 => _412
  # DEBUG __pos => __pos_1721
  # DEBUG D#1013 => D#1014
  # DEBUG this => D#1013
  # DEBUG D#1012 => &D#1013->D.50176
  # DEBUG this => D#1012
  # DEBUG __first => __pos_1721
  # DEBUG __last => _1713
  # DEBUG __first => __pos_1721
  if (_1713 == __pos_1721)
    goto <bb 471>;
  else
    goto <bb 472>;

  <bb 471>:
  MEM[(struct queue * *)this_40(D) + 1024B] = __pos_1721;
  goto <bb 475>;

  <bb 472>:

  <bb 473>:
  # __pos_1050 = PHI <__pos_1721(472), __pos_1724(474)>
  # DEBUG __first => __pos_1050
  # DEBUG __r => __pos_1050
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  _1723 = &MEM[(struct deque *)__pos_1050].D.54933;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_1723);
  MEM[(struct  &)__pos_1050] ={v} {CLOBBER};
  __pos_1724 = __pos_1050 + 80;
  # DEBUG __first => __pos_1724
  # DEBUG __first => __pos_1724
  if (_1713 == __pos_1724)
    goto <bb 471>;
  else
    goto <bb 474>;

  <bb 474>:
  goto <bb 473>;

  <bb 475>:
  # DEBUG this => &D.62830
  # DEBUG D#1010 => &D.62830.c
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.62830].D.54933);
  D.62830 ={v} {CLOBBER};
  # DEBUG this => &D.62831
  # DEBUG D#1001 => &D.62831.D.54933
  # DEBUG this => D#1001
  # DEBUG this => &D.62831
  # DEBUG D#125 => &D.62831.D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)&D.62831 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)&D.62831 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)&D.62831 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)&D.62831 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => &D.62831
  # DEBUG D#126 => &D.62831.D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)&D.62831 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)&D.62831 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)&D.62831 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)&D.62831 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => &D.62831
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.62831.D.54933);
  D.62831 ={v} {CLOBBER};
  # DEBUG this => &D.62833
  # DEBUG this => &D.62833.D.62618
  # DEBUG D#1391 => &MEM[(struct _Deque_base *)&D.62833]._M_impl
  # DEBUG this => D#1391
  # DEBUG this => D#1391
  # DEBUG this => D#1391
  MEM[(struct _Deque_impl *)&D.62833]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.62833]._M_map_size = 0;
  # DEBUG D#714 => &D#1391->_M_start
  # DEBUG this => D#714
  MEM[(struct _Deque_iterator *)&D.62833 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.62833 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.62833 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.62833 + 16B]._M_node = 0B;
  # DEBUG D#713 => &D#1391->_M_finish
  # DEBUG this => D#713
  MEM[(struct _Deque_iterator *)&D.62833 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.62833 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.62833 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.62833 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (&D.62833.D.62618, 0);
  goto <bb 477>;

<L287>:
  pretmp_1984 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 477>:
  # DEBUG this => &D.62832
  # DEBUG __c => &D.62833
  std::deque<Credit*, std::allocator<Credit*> >::deque (&D.62832.c, &D.62833);

  <bb 478>:
  _416 = this_40(D)->D.51790._inputs;
  _417 = (long unsigned int) _416;
  _418 = &this_40(D)->_credit_buffer;
  # DEBUG this => _418
  # DEBUG __new_size => _417
  # DEBUG __x => &D.62832
  _413 = MEM[(struct queue * *)this_40(D) + 1040B];
  # DEBUG D#138 => _418
  _1725 = MEM[(struct queue * *)this_40(D) + 1048B];
  # DEBUG D#138 => _418
  # DEBUG this => D#138
  # DEBUG this => D#138
  _1726 = (long int) _1725;
  _1727 = (long int) _413;
  _1728 = _1726 - _1727;
  _1729 = _1728 /[ex] 80;
  _1730 = (size_type) _1729;
  if (_417 > _1730)
    goto <bb 479>;
  else
    goto <bb 481>;

  <bb 479>:
  # DEBUG D#138 => _418
  # DEBUG D#138 => _418
  # DEBUG this => D#138
  # DEBUG this => D#138
  _1731 = _417 - _1730;
  # DEBUG this => _418
  # DEBUG D#223 => &_418->D.50924._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#223
  # DEBUG this => _418
  MEM[(struct __normal_iterator *)&__position] = _1725;
  # DEBUG __n => _1731
  # DEBUG __x => &D.62832
  std::vector<std::queue<Credit*> >::_M_fill_insert (_418, __position, _1731, &D.62832);

  <bb 480>:
  goto <bb 487>;

  <bb 481>:
  # DEBUG D#138 => _418
  # DEBUG D#138 => _418
  # DEBUG this => D#138
  # DEBUG this => D#138
  if (_417 < _1730)
    goto <bb 482>;
  else
    goto <bb 480>;

  <bb 482>:
  _1732 = _417 * 80;
  __pos_1733 = _413 + _1732;
  # DEBUG D#1057 => _418
  # DEBUG __pos => __pos_1733
  # DEBUG D#1056 => D#1057
  # DEBUG this => D#1056
  # DEBUG D#1055 => &D#1056->D.50924
  # DEBUG this => D#1055
  # DEBUG __first => __pos_1733
  # DEBUG __last => _1725
  # DEBUG __first => __pos_1733
  if (_1725 == __pos_1733)
    goto <bb 483>;
  else
    goto <bb 484>;

  <bb 483>:
  MEM[(struct queue * *)this_40(D) + 1048B] = __pos_1733;
  goto <bb 487>;

  <bb 484>:

  <bb 485>:
  # __pos_485 = PHI <__pos_1733(484), __pos_1736(486)>
  # DEBUG __first => __pos_485
  # DEBUG __r => __pos_485
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  _1735 = &MEM[(struct deque *)__pos_485].D.62618;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_1735);
  MEM[(struct  &)__pos_485] ={v} {CLOBBER};
  __pos_1736 = __pos_485 + 80;
  # DEBUG __first => __pos_1736
  # DEBUG __first => __pos_1736
  if (_1725 == __pos_1736)
    goto <bb 483>;
  else
    goto <bb 486>;

  <bb 486>:
  goto <bb 485>;

  <bb 487>:
  # DEBUG this => &D.62832
  # DEBUG D#1053 => &D.62832.c
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&D.62832].D.62618);
  D.62832 ={v} {CLOBBER};
  # DEBUG this => &D.62833
  # DEBUG D#1044 => &D.62833.D.62618
  # DEBUG this => D#1044
  # DEBUG this => &D.62833
  # DEBUG D#132 => &D.62833.D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)&D.62833 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)&D.62833 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)&D.62833 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)&D.62833 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => &D.62833
  # DEBUG D#133 => &D.62833.D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)&D.62833 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)&D.62833 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)&D.62833 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)&D.62833 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => &D.62833
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&D.62833.D.62618);
  D.62833 ={v} {CLOBBER};
  # DEBUG D#120 => &D.62835
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62835
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62834, "hold_switch_for_packet");
  goto <bb 489>;

<L289>:
  goto <bb 723> (<L142>);

  <bb 489>:
  _425 = Configuration::GetInt (config_43(D), &D.62834);

  <bb 490>:
  _426 = _425 > 0;
  this_40(D)->_hold_switch_for_packet = _426;
  # DEBUG this => &D.62834
  # DEBUG this => &D.62834
  # DEBUG this => &D.62834
  _430 = MEM[(char * *)&D.62834];
  # DEBUG D#1 => &D.62834
  # DEBUG this => D#1
  # DEBUG this => &D.62834
  if (&D.62834.D.11539._M_local_buf != _430)
    goto <bb 491>;
  else
    goto <bb 492>;

  <bb 491>:
  # DEBUG D#440 => D.62834.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62834
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62834
  # DEBUG this => D#1
  # DEBUG this => &D.62834
  # DEBUG D#437 => &D.62834._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _430
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _430
  # DEBUG this => D#431
  # DEBUG D.117299 => D#432
  operator delete (_430);

  <bb 492>:
  # DEBUG D#441 => &D.62834._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62834 ={v} {CLOBBER};
  # DEBUG this => &D.62835
  # DEBUG this => &D.62835
  _431 = this_40(D)->D.51790._inputs;
  _432 = this_40(D)->D.51790._input_speedup;
  _433 = _431 * _432;
  _434 = (long unsigned int) _433;
  # DEBUG D#2982 => &this_40(D)->_switch_hold_in
  # DEBUG this => D#2982
  # DEBUG __new_size => _434
  __x = -1;
  # DEBUG __x => __x
  _419 = MEM[(int * *)this_40(D) + 1072B];
  # DEBUG D#123 => D#2982
  _1737 = MEM[(int * *)this_40(D) + 1080B];
  # DEBUG D#123 => D#2982
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1738 = (long int) _1737;
  _1739 = (long int) _419;
  _1740 = _1738 - _1739;
  _1741 = _1740 /[ex] 4;
  _1742 = (size_type) _1741;
  if (_434 > _1742)
    goto <bb 493>;
  else
    goto <bb 496>;

  <bb 493>:
  # DEBUG D#123 => D#2982
  # DEBUG D#123 => D#2982
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1743 = _434 - _1742;
  # DEBUG this => D#2982
  # DEBUG D#216 => &D#2982->D.35433._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG this => D#2982
  MEM[(struct __normal_iterator *)&__position] = _1737;
  # DEBUG __n => _1743
  # DEBUG __x => &__x
  _435 = &this_40(D)->_switch_hold_in;
  std::vector<int>::_M_fill_insert (_435, __position, _1743, &__x);
  goto <bb 495>;

<L290>:
  goto <bb 723> (<L142>);

  <bb 495>:
  goto <bb 498>;

  <bb 496>:
  # DEBUG D#123 => D#2982
  # DEBUG D#123 => D#2982
  # DEBUG this => D#123
  # DEBUG this => D#123
  if (_434 < _1742)
    goto <bb 497>;
  else
    goto <bb 495>;

  <bb 497>:
  _1744 = _434 * 4;
  _1745 = _419 + _1744;
  # DEBUG D#385 => D#2982
  # DEBUG __pos => _1745
  # DEBUG D#384 => D#385
  # DEBUG this => D#384
  # DEBUG D#382 => &D#384->D.35433
  # DEBUG this => D#382
  # DEBUG D#383 => D#384->D.35433._M_impl._M_finish
  # DEBUG __first => _1745
  # DEBUG __last => D#383
  # DEBUG D.94831 => NULL
  # DEBUG D#380 => _1745
  # DEBUG D#381 => D#383
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  MEM[(int * *)this_40(D) + 1080B] = _1745;

  <bb 498>:
  _437 = this_40(D)->D.51790._outputs;
  _438 = this_40(D)->D.51790._output_speedup;
  _439 = _437 * _438;
  _440 = (long unsigned int) _439;
  # DEBUG D#2981 => &this_40(D)->_switch_hold_out
  # DEBUG this => D#2981
  # DEBUG __new_size => _440
  __x = -1;
  # DEBUG __x => __x
  _436 = MEM[(int * *)this_40(D) + 1096B];
  # DEBUG D#123 => D#2981
  _1746 = MEM[(int * *)this_40(D) + 1104B];
  # DEBUG D#123 => D#2981
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1747 = (long int) _1746;
  _1748 = (long int) _436;
  _1749 = _1747 - _1748;
  _1750 = _1749 /[ex] 4;
  _1751 = (size_type) _1750;
  if (_440 > _1751)
    goto <bb 499>;
  else
    goto <bb 502>;

  <bb 499>:
  # DEBUG D#123 => D#2981
  # DEBUG D#123 => D#2981
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1752 = _440 - _1751;
  # DEBUG this => D#2981
  # DEBUG D#216 => &D#2981->D.35433._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG this => D#2981
  MEM[(struct __normal_iterator *)&__position] = _1746;
  # DEBUG __n => _1752
  # DEBUG __x => &__x
  _441 = &this_40(D)->_switch_hold_out;
  std::vector<int>::_M_fill_insert (_441, __position, _1752, &__x);
  goto <bb 501>;

<L291>:
  goto <bb 723> (<L142>);

  <bb 501>:
  goto <bb 504>;

  <bb 502>:
  # DEBUG D#123 => D#2981
  # DEBUG D#123 => D#2981
  # DEBUG this => D#123
  # DEBUG this => D#123
  if (_440 < _1751)
    goto <bb 503>;
  else
    goto <bb 501>;

  <bb 503>:
  _1753 = _440 * 4;
  _1754 = _436 + _1753;
  # DEBUG D#385 => D#2981
  # DEBUG __pos => _1754
  # DEBUG D#384 => D#385
  # DEBUG this => D#384
  # DEBUG D#382 => &D#384->D.35433
  # DEBUG this => D#382
  # DEBUG D#383 => D#384->D.35433._M_impl._M_finish
  # DEBUG __first => _1754
  # DEBUG __last => D#383
  # DEBUG D.94831 => NULL
  # DEBUG D#380 => _1754
  # DEBUG D#381 => D#383
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  MEM[(int * *)this_40(D) + 1104B] = _1754;

  <bb 504>:
  _443 = this_40(D)->D.51790._inputs;
  _444 = this_40(D)->D.51790._input_speedup;
  _445 = _443 * _444;
  _446 = (long unsigned int) _445;
  # DEBUG D#2980 => &this_40(D)->_switch_hold_vc
  # DEBUG this => D#2980
  # DEBUG __new_size => _446
  __x = -1;
  # DEBUG __x => __x
  _442 = MEM[(int * *)this_40(D) + 1120B];
  # DEBUG D#123 => D#2980
  _1755 = MEM[(int * *)this_40(D) + 1128B];
  # DEBUG D#123 => D#2980
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1756 = (long int) _1755;
  _1757 = (long int) _442;
  _1758 = _1756 - _1757;
  _1759 = _1758 /[ex] 4;
  _1760 = (size_type) _1759;
  if (_446 > _1760)
    goto <bb 505>;
  else
    goto <bb 508>;

  <bb 505>:
  # DEBUG D#123 => D#2980
  # DEBUG D#123 => D#2980
  # DEBUG this => D#123
  # DEBUG this => D#123
  _1761 = _446 - _1760;
  # DEBUG this => D#2980
  # DEBUG D#216 => &D#2980->D.35433._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG this => D#2980
  MEM[(struct __normal_iterator *)&__position] = _1755;
  # DEBUG __n => _1761
  # DEBUG __x => &__x
  _447 = &this_40(D)->_switch_hold_vc;
  std::vector<int>::_M_fill_insert (_447, __position, _1761, &__x);
  goto <bb 507>;

<L292>:
  goto <bb 723> (<L142>);

  <bb 507>:
  goto <bb 510>;

  <bb 508>:
  # DEBUG D#123 => D#2980
  # DEBUG D#123 => D#2980
  # DEBUG this => D#123
  # DEBUG this => D#123
  if (_446 < _1760)
    goto <bb 509>;
  else
    goto <bb 507>;

  <bb 509>:
  _1762 = _446 * 4;
  _1763 = _442 + _1762;
  # DEBUG D#385 => D#2980
  # DEBUG __pos => _1763
  # DEBUG D#384 => D#385
  # DEBUG this => D#384
  # DEBUG D#382 => &D#384->D.35433
  # DEBUG this => D#382
  # DEBUG D#383 => D#384->D.35433._M_impl._M_finish
  # DEBUG __first => _1763
  # DEBUG __last => D#383
  # DEBUG D.94831 => NULL
  # DEBUG D#380 => _1763
  # DEBUG D#381 => D#383
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  MEM[(int * *)this_40(D) + 1128B] = _1763;

  <bb 510>:
  _450 = operator new (64);
  goto <bb 512>;

<L293>:
  goto <bb 723> (<L142>);

  <bb 512>:
  _451 = this_40(D)->D.51790._classes;
  BufferMonitor::BufferMonitor (_450, inputs_47(D), _451);

  <bb 513>:
  this_40(D)->_bufferMonitor = _450;
  _455 = operator new (40);
  goto <bb 515>;

<L294>:
  goto <bb 723> (<L142>);

  <bb 515>:
  _456 = this_40(D)->D.51790._classes;
  SwitchMonitor::SwitchMonitor (_455, inputs_47(D), outputs_48(D), _456);

  <bb 516>:
  this_40(D)->_switchMonitor = _455;
  # DEBUG this => &spec_sw_alloc_type
  # DEBUG this => &spec_sw_alloc_type
  # DEBUG this => &spec_sw_alloc_type
  _460 = MEM[(char * *)&spec_sw_alloc_type];
  # DEBUG D#1 => &spec_sw_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &spec_sw_alloc_type
  if (&spec_sw_alloc_type.D.11539._M_local_buf != _460)
    goto <bb 517>;
  else
    goto <bb 518>;

  <bb 517>:
  # DEBUG D#440 => spec_sw_alloc_type.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &spec_sw_alloc_type
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &spec_sw_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &spec_sw_alloc_type
  # DEBUG D#437 => &spec_sw_alloc_type._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _460
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _460
  # DEBUG this => D#431
  # DEBUG D.117359 => D#432
  operator delete (_460);

  <bb 518>:
  # DEBUG D#441 => &spec_sw_alloc_type._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)&spec_sw_alloc_type] ={v} {CLOBBER};
  # DEBUG this => &sw_alloc_type
  # DEBUG this => &sw_alloc_type
  # DEBUG this => &sw_alloc_type
  _461 = MEM[(char * *)&sw_alloc_type];
  # DEBUG D#1 => &sw_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &sw_alloc_type
  if (&sw_alloc_type.D.11539._M_local_buf != _461)
    goto <bb 519>;
  else
    goto <bb 520>;

  <bb 519>:
  # DEBUG D#440 => sw_alloc_type.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &sw_alloc_type
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &sw_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &sw_alloc_type
  # DEBUG D#437 => &sw_alloc_type._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _461
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _461
  # DEBUG this => D#431
  # DEBUG D.117344 => D#432
  operator delete (_461);

  <bb 520>:
  # DEBUG D#441 => &sw_alloc_type._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)&sw_alloc_type] ={v} {CLOBBER};
  # DEBUG this => &vc_alloc_type
  # DEBUG this => &vc_alloc_type
  # DEBUG this => &vc_alloc_type
  _462 = MEM[(char * *)&vc_alloc_type];
  # DEBUG D#1 => &vc_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &vc_alloc_type
  if (&vc_alloc_type.D.11539._M_local_buf != _462)
    goto <bb 521>;
  else
    goto <bb 522>;

  <bb 521>:
  # DEBUG D#440 => vc_alloc_type.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &vc_alloc_type
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &vc_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &vc_alloc_type
  # DEBUG D#437 => &vc_alloc_type._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _462
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _462
  # DEBUG this => D#431
  # DEBUG D.117329 => D#432
  operator delete (_462);

  <bb 522>:
  # DEBUG D#441 => &vc_alloc_type._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)&vc_alloc_type] ={v} {CLOBBER};
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _428 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _428)
    goto <bb 523>;
  else
    goto <bb 524>;

  <bb 523>:
  # DEBUG D#440 => rf.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &rf
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#437 => &rf._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _428
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _428
  # DEBUG this => D#431
  # DEBUG D.117314 => D#432
  operator delete (_428);

  <bb 524>:
  # DEBUG D#441 => &rf._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  rf ={v} {CLOBBER};
  # DEBUG D#2234 => {CLOBBER}
  # DEBUG rf_iter$_M_node => D#2234
  vc_alloc_type ={v} {CLOBBER};
  sw_alloc_type ={v} {CLOBBER};
  spec_sw_alloc_type ={v} {CLOBBER};
  return;

<L49>:
  # DEBUG this => &D.62739
  # DEBUG this => &D.62739
  # DEBUG this => &D.62739
  _459 = MEM[(char * *)&D.62739];
  # DEBUG D#1 => &D.62739
  # DEBUG this => D#1
  # DEBUG this => &D.62739
  if (&D.62739.D.11539._M_local_buf != _459)
    goto <bb 526>;
  else
    goto <bb 527>;

  <bb 526>:
  # DEBUG D#440 => D.62739.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62739
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62739
  # DEBUG this => D#1
  # DEBUG this => &D.62739
  # DEBUG D#437 => &D.62739._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _459
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _459
  # DEBUG this => D#431
  # DEBUG D.117374 => D#432
  operator delete (_459);

  <bb 527>:
  # DEBUG D#441 => &D.62739._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62739 ={v} {CLOBBER};
  resx 24

<L295>:
  pretmp_2287 = &this_40(D)->_noq_next_output_port;
  pretmp_1840 = &this_40(D)->_noq_next_vc_start;
  pretmp_2378 = &this_40(D)->_noq_next_vc_end;
  pretmp_2407 = &this_40(D)->_output_buffer;
  pretmp_2436 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L51>:
  # DEBUG this => &D.62741
  # DEBUG this => &D.62741
  # DEBUG this => &D.62741
  _531 = MEM[(char * *)&D.62741];
  # DEBUG D#1 => &D.62741
  # DEBUG this => D#1
  # DEBUG this => &D.62741
  if (&D.62741.D.11539._M_local_buf != _531)
    goto <bb 530>;
  else
    goto <bb 531>;

  <bb 530>:
  # DEBUG D#440 => D.62741.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62741
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62741
  # DEBUG this => D#1
  # DEBUG this => &D.62741
  # DEBUG D#437 => &D.62741._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _531
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _531
  # DEBUG this => D#431
  # DEBUG D.117391 => D#432
  operator delete (_531);

  <bb 531>:
  # DEBUG D#441 => &D.62741._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62741 ={v} {CLOBBER};
  resx 28

<L296>:
  pretmp_2288 = &this_40(D)->_noq_next_output_port;
  pretmp_1372 = &this_40(D)->_noq_next_vc_start;
  pretmp_2380 = &this_40(D)->_noq_next_vc_end;
  pretmp_2409 = &this_40(D)->_output_buffer;
  pretmp_2438 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L53>:
  # DEBUG this => &D.62743
  # DEBUG this => &D.62743
  # DEBUG this => &D.62743
  _529 = MEM[(char * *)&D.62743];
  # DEBUG D#1 => &D.62743
  # DEBUG this => D#1
  # DEBUG this => &D.62743
  if (&D.62743.D.11539._M_local_buf != _529)
    goto <bb 534>;
  else
    goto <bb 535>;

  <bb 534>:
  # DEBUG D#440 => D.62743.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62743
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62743
  # DEBUG this => D#1
  # DEBUG this => &D.62743
  # DEBUG D#437 => &D.62743._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _529
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _529
  # DEBUG this => D#431
  # DEBUG D.117408 => D#432
  operator delete (_529);

  <bb 535>:
  # DEBUG D#441 => &D.62743._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62743 ={v} {CLOBBER};
  resx 32

<L297>:
  pretmp_2369 = &this_40(D)->_noq_next_output_port;
  pretmp_1856 = &this_40(D)->_noq_next_vc_start;
  pretmp_2382 = &this_40(D)->_noq_next_vc_end;
  pretmp_2411 = &this_40(D)->_output_buffer;
  pretmp_2440 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L55>:
  # DEBUG this => &D.62745
  # DEBUG this => &D.62745
  # DEBUG this => &D.62745
  _527 = MEM[(char * *)&D.62745];
  # DEBUG D#1 => &D.62745
  # DEBUG this => D#1
  # DEBUG this => &D.62745
  if (&D.62745.D.11539._M_local_buf != _527)
    goto <bb 538>;
  else
    goto <bb 539>;

  <bb 538>:
  # DEBUG D#440 => D.62745.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62745
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62745
  # DEBUG this => D#1
  # DEBUG this => &D.62745
  # DEBUG D#437 => &D.62745._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _527
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _527
  # DEBUG this => D#431
  # DEBUG D.117425 => D#432
  operator delete (_527);

  <bb 539>:
  # DEBUG D#441 => &D.62745._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62745 ={v} {CLOBBER};
  resx 36

<L298>:
  pretmp_2284 = &this_40(D)->_noq_next_output_port;
  pretmp_1437 = &this_40(D)->_noq_next_vc_start;
  pretmp_2384 = &this_40(D)->_noq_next_vc_end;
  pretmp_2413 = &this_40(D)->_output_buffer;
  pretmp_2442 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L57>:
  # DEBUG this => &D.62747
  # DEBUG this => &D.62747
  # DEBUG this => &D.62747
  _525 = MEM[(char * *)&D.62747];
  # DEBUG D#1 => &D.62747
  # DEBUG this => D#1
  # DEBUG this => &D.62747
  if (&D.62747.D.11539._M_local_buf != _525)
    goto <bb 542>;
  else
    goto <bb 543>;

  <bb 542>:
  # DEBUG D#440 => D.62747.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62747
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62747
  # DEBUG this => D#1
  # DEBUG this => &D.62747
  # DEBUG D#437 => &D.62747._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _525
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _525
  # DEBUG this => D#431
  # DEBUG D.117442 => D#432
  operator delete (_525);

  <bb 543>:
  # DEBUG D#441 => &D.62747._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62747 ={v} {CLOBBER};
  resx 40

<L299>:
  pretmp_2285 = &this_40(D)->_noq_next_output_port;
  pretmp_271 = &this_40(D)->_noq_next_vc_start;
  pretmp_2386 = &this_40(D)->_noq_next_vc_end;
  pretmp_2415 = &this_40(D)->_output_buffer;
  pretmp_2444 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L59>:
  # DEBUG this => &D.62749
  # DEBUG this => &D.62749
  # DEBUG this => &D.62749
  _523 = MEM[(char * *)&D.62749];
  # DEBUG D#1 => &D.62749
  # DEBUG this => D#1
  # DEBUG this => &D.62749
  if (&D.62749.D.11539._M_local_buf != _523)
    goto <bb 546>;
  else
    goto <bb 547>;

  <bb 546>:
  # DEBUG D#440 => D.62749.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62749
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62749
  # DEBUG this => D#1
  # DEBUG this => &D.62749
  # DEBUG D#437 => &D.62749._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _523
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _523
  # DEBUG this => D#431
  # DEBUG D.117459 => D#432
  operator delete (_523);

  <bb 547>:
  # DEBUG D#441 => &D.62749._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62749 ={v} {CLOBBER};
  resx 44

<L300>:
  pretmp_2283 = &this_40(D)->_noq_next_output_port;
  pretmp_1392 = &this_40(D)->_noq_next_vc_start;
  pretmp_2388 = &this_40(D)->_noq_next_vc_end;
  pretmp_2417 = &this_40(D)->_output_buffer;
  pretmp_2446 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L61>:
  # DEBUG this => &D.62751
  # DEBUG this => &D.62751
  # DEBUG this => &D.62751
  _521 = MEM[(char * *)&D.62751];
  # DEBUG D#1 => &D.62751
  # DEBUG this => D#1
  # DEBUG this => &D.62751
  if (&D.62751.D.11539._M_local_buf != _521)
    goto <bb 550>;
  else
    goto <bb 551>;

  <bb 550>:
  # DEBUG D#440 => D.62751.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62751
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62751
  # DEBUG this => D#1
  # DEBUG this => &D.62751
  # DEBUG D#437 => &D.62751._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _521
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _521
  # DEBUG this => D#431
  # DEBUG D.117476 => D#432
  operator delete (_521);

  <bb 551>:
  # DEBUG D#441 => &D.62751._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62751 ={v} {CLOBBER};
  resx 48

<L301>:
  pretmp_2271 = &this_40(D)->_noq_next_output_port;
  pretmp_1379 = &this_40(D)->_noq_next_vc_start;
  pretmp_2390 = &this_40(D)->_noq_next_vc_end;
  pretmp_2419 = &this_40(D)->_output_buffer;
  pretmp_2448 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L63>:
  # DEBUG this => &D.62753
  # DEBUG this => &D.62753
  # DEBUG this => &D.62753
  _519 = MEM[(char * *)&D.62753];
  # DEBUG D#1 => &D.62753
  # DEBUG this => D#1
  # DEBUG this => &D.62753
  if (&D.62753.D.11539._M_local_buf != _519)
    goto <bb 554>;
  else
    goto <bb 555>;

  <bb 554>:
  # DEBUG D#440 => D.62753.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62753
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62753
  # DEBUG this => D#1
  # DEBUG this => &D.62753
  # DEBUG D#437 => &D.62753._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _519
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _519
  # DEBUG this => D#431
  # DEBUG D.117493 => D#432
  operator delete (_519);

  <bb 555>:
  # DEBUG D#441 => &D.62753._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62753 ={v} {CLOBBER};
  resx 52

<L302>:
  pretmp_2126 = &this_40(D)->_noq_next_output_port;
  pretmp_2278 = &this_40(D)->_noq_next_vc_start;
  pretmp_2274 = &this_40(D)->_noq_next_vc_end;
  pretmp_2393 = &this_40(D)->_output_buffer;
  pretmp_2422 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L65>:
  # DEBUG this => &D.62755
  # DEBUG this => &D.62755
  # DEBUG this => &D.62755
  _517 = MEM[(char * *)&D.62755];
  # DEBUG D#1 => &D.62755
  # DEBUG this => D#1
  # DEBUG this => &D.62755
  if (&D.62755.D.11539._M_local_buf != _517)
    goto <bb 558>;
  else
    goto <bb 559>;

  <bb 558>:
  # DEBUG D#440 => D.62755.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62755
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62755
  # DEBUG this => D#1
  # DEBUG this => &D.62755
  # DEBUG D#437 => &D.62755._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _517
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _517
  # DEBUG this => D#431
  # DEBUG D.117510 => D#432
  operator delete (_517);

  <bb 559>:
  # DEBUG D#441 => &D.62755._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62755 ={v} {CLOBBER};
  resx 56

<L303>:
  pretmp_2150 = &this_40(D)->_noq_next_output_port;
  pretmp_1540 = &this_40(D)->_noq_next_vc_start;
  pretmp_1442 = &this_40(D)->_noq_next_vc_end;
  pretmp_2395 = &this_40(D)->_output_buffer;
  pretmp_2424 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L67>:
  # DEBUG this => &D.62757
  # DEBUG this => &D.62757
  # DEBUG this => &D.62757
  _515 = MEM[(char * *)&D.62757];
  # DEBUG D#1 => &D.62757
  # DEBUG this => D#1
  # DEBUG this => &D.62757
  if (&D.62757.D.11539._M_local_buf != _515)
    goto <bb 562>;
  else
    goto <bb 563>;

  <bb 562>:
  # DEBUG D#440 => D.62757.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62757
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62757
  # DEBUG this => D#1
  # DEBUG this => &D.62757
  # DEBUG D#437 => &D.62757._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _515
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _515
  # DEBUG this => D#431
  # DEBUG D.117527 => D#432
  operator delete (_515);

  <bb 563>:
  # DEBUG D#441 => &D.62757._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62757 ={v} {CLOBBER};
  resx 60

<L304>:
  pretmp_1644 = &this_40(D)->_noq_next_output_port;
  pretmp_1443 = &this_40(D)->_noq_next_vc_start;
  pretmp_1356 = &this_40(D)->_noq_next_vc_end;
  pretmp_2397 = &this_40(D)->_output_buffer;
  pretmp_2426 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L69>:
  # DEBUG this => &D.62759
  # DEBUG this => &D.62759
  # DEBUG this => &D.62759
  _513 = MEM[(char * *)&D.62759];
  # DEBUG D#1 => &D.62759
  # DEBUG this => D#1
  # DEBUG this => &D.62759
  if (&D.62759.D.11539._M_local_buf != _513)
    goto <bb 566>;
  else
    goto <bb 567>;

  <bb 566>:
  # DEBUG D#440 => D.62759.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62759
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62759
  # DEBUG this => D#1
  # DEBUG this => &D.62759
  # DEBUG D#437 => &D.62759._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _513
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _513
  # DEBUG this => D#431
  # DEBUG D.117544 => D#432
  operator delete (_513);

  <bb 567>:
  # DEBUG D#441 => &D.62759._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62759 ={v} {CLOBBER};
  resx 64

<L305>:
  pretmp_2263 = &this_40(D)->_noq_next_output_port;
  pretmp_2277 = &this_40(D)->_noq_next_vc_start;
  pretmp_2370 = &this_40(D)->_noq_next_vc_end;
  pretmp_2399 = &this_40(D)->_output_buffer;
  pretmp_2428 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L71>:
  # DEBUG this => &D.62761
  # DEBUG this => &D.62761
  # DEBUG this => &D.62761
  _146 = MEM[(char * *)&D.62761];
  # DEBUG D#1 => &D.62761
  # DEBUG this => D#1
  # DEBUG this => &D.62761
  if (&D.62761.D.11539._M_local_buf != _146)
    goto <bb 570>;
  else
    goto <bb 571>;

  <bb 570>:
  # DEBUG D#440 => D.62761.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62761
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62761
  # DEBUG this => D#1
  # DEBUG this => &D.62761
  # DEBUG D#437 => &D.62761._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _146
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _146
  # DEBUG this => D#431
  # DEBUG D.117561 => D#432
  operator delete (_146);

  <bb 571>:
  # DEBUG D#441 => &D.62761._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62761 ={v} {CLOBBER};
  resx 68

<L306>:
  pretmp_2293 = &this_40(D)->_noq_next_output_port;
  pretmp_1872 = &this_40(D)->_noq_next_vc_start;
  pretmp_2372 = &this_40(D)->_noq_next_vc_end;
  pretmp_2401 = &this_40(D)->_output_buffer;
  pretmp_2430 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L73>:
  # DEBUG this => &D.62763
  # DEBUG this => &D.62763
  # DEBUG this => &D.62763
  _511 = MEM[(char * *)&D.62763];
  # DEBUG D#1 => &D.62763
  # DEBUG this => D#1
  # DEBUG this => &D.62763
  if (&D.62763.D.11539._M_local_buf != _511)
    goto <bb 574>;
  else
    goto <bb 575>;

  <bb 574>:
  # DEBUG D#440 => D.62763.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62763
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62763
  # DEBUG this => D#1
  # DEBUG this => &D.62763
  # DEBUG D#437 => &D.62763._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _511
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _511
  # DEBUG this => D#431
  # DEBUG D.117578 => D#432
  operator delete (_511);

  <bb 575>:
  # DEBUG D#441 => &D.62763._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62763 ={v} {CLOBBER};
  resx 72

<L307>:
  pretmp_2294 = &this_40(D)->_noq_next_output_port;
  pretmp_1824 = &this_40(D)->_noq_next_vc_start;
  pretmp_2374 = &this_40(D)->_noq_next_vc_end;
  pretmp_2403 = &this_40(D)->_output_buffer;
  pretmp_2432 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L223>:

<L75>:
  # DEBUG this => &D.62766
  # DEBUG this => &D.62766
  # DEBUG this => &D.62766
  _160 = MEM[(char * *)&D.62766];
  # DEBUG D#1 => &D.62766
  # DEBUG this => D#1
  # DEBUG this => &D.62766
  if (&D.62766.D.11539._M_local_buf != _160)
    goto <bb 579>;
  else
    goto <bb 580>;

  <bb 579>:
  # DEBUG D#440 => D.62766.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62766
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62766
  # DEBUG this => D#1
  # DEBUG this => &D.62766
  # DEBUG D#437 => &D.62766._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _160
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _160
  # DEBUG this => D#431
  # DEBUG D.117595 => D#432
  operator delete (_160);

  <bb 580>:
  # DEBUG D#441 => &D.62766._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62766 ={v} {CLOBBER};
  resx 81

<L308>:
  goto <bb 583> (<L77>);

<L220>:

<L77>:
  # DEBUG this => &D.62767
  # DEBUG this => &D.62767
  # DEBUG this => &D.62767
  _500 = MEM[(char * *)&D.62767];
  # DEBUG D#1 => &D.62767
  # DEBUG this => D#1
  # DEBUG this => &D.62767
  if (&D.62767.D.11539._M_local_buf != _500)
    goto <bb 584>;
  else
    goto <bb 585>;

  <bb 584>:
  # DEBUG D#440 => D.62767.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62767
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62767
  # DEBUG this => D#1
  # DEBUG this => &D.62767
  # DEBUG D#437 => &D.62767._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _500
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _500
  # DEBUG this => D#431
  # DEBUG D.117610 => D#432
  operator delete (_500);

  <bb 585>:
  # DEBUG D#441 => &D.62767._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62767 ={v} {CLOBBER};
  resx 80

<L309>:
  goto <bb 588> (<L79>);

<L219>:

<L79>:
  # DEBUG this => &D.62768
  # DEBUG this => &D.62768
  # DEBUG this => &D.62768
  _502 = MEM[(char * *)&D.62768];
  # DEBUG D#1 => &D.62768
  # DEBUG this => D#1
  # DEBUG this => &D.62768
  if (&D.62768.D.11539._M_local_buf != _502)
    goto <bb 589>;
  else
    goto <bb 590>;

  <bb 589>:
  # DEBUG D#440 => D.62768.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62768
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62768
  # DEBUG this => D#1
  # DEBUG this => &D.62768
  # DEBUG D#437 => &D.62768._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _502
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _502
  # DEBUG this => D#431
  # DEBUG D.117625 => D#432
  operator delete (_502);

  <bb 590>:
  # DEBUG D#441 => &D.62768._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62768 ={v} {CLOBBER};
  resx 79

<L310>:
  goto <bb 593> (<L81>);

<L218>:

<L81>:
  # DEBUG this => &D.62769
  # DEBUG this => &D.62769
  # DEBUG this => &D.62770
  # DEBUG this => &D.62770
  # DEBUG this => &D.62770
  _505 = MEM[(char * *)&D.62770];
  # DEBUG D#1 => &D.62770
  # DEBUG this => D#1
  # DEBUG this => &D.62770
  if (&D.62770.D.11539._M_local_buf != _505)
    goto <bb 594>;
  else
    goto <bb 595>;

  <bb 594>:
  # DEBUG D#440 => D.62770.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62770
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62770
  # DEBUG this => D#1
  # DEBUG this => &D.62770
  # DEBUG D#437 => &D.62770._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _505
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _505
  # DEBUG this => D#431
  # DEBUG D.117642 => D#432
  operator delete (_505);

  <bb 595>:
  # DEBUG D#441 => &D.62770._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62770 ={v} {CLOBBER};
  resx 77

<L311>:
  goto <bb 598> (<L84>);

<L217>:

<L84>:
  # DEBUG this => &D.62771
  # DEBUG this => &D.62771
  # DEBUG this => &D.62771
  _506 = MEM[(char * *)&D.62771];
  # DEBUG D#1 => &D.62771
  # DEBUG this => D#1
  # DEBUG this => &D.62771
  if (&D.62771.D.11539._M_local_buf != _506)
    goto <bb 599>;
  else
    goto <bb 600>;

  <bb 599>:
  # DEBUG D#440 => D.62771.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62771
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62771
  # DEBUG this => D#1
  # DEBUG this => &D.62771
  # DEBUG D#437 => &D.62771._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _506
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _506
  # DEBUG this => D#431
  # DEBUG D.117657 => D#432
  operator delete (_506);

  <bb 600>:
  # DEBUG D#441 => &D.62771._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62771 ={v} {CLOBBER};
  resx 76

<L312>:
  pretmp_2292 = &this_40(D)->_noq_next_output_port;
  pretmp_1395 = &this_40(D)->_noq_next_vc_start;
  pretmp_2376 = &this_40(D)->_noq_next_vc_end;
  pretmp_2405 = &this_40(D)->_output_buffer;
  pretmp_2434 = &this_40(D)->_credit_buffer;
  goto <bb 743> (<L146>);

<L87>:
  # DEBUG this => &D.62777
  # DEBUG this => &D.62777
  # DEBUG this => &D.62777
  _509 = MEM[(char * *)&D.62777];
  # DEBUG D#1 => &D.62777
  # DEBUG this => D#1
  # DEBUG this => &D.62777
  if (&D.62777.D.11539._M_local_buf != _509)
    goto <bb 603>;
  else
    goto <bb 604>;

  <bb 603>:
  # DEBUG D#440 => D.62777.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62777
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62777
  # DEBUG this => D#1
  # DEBUG this => &D.62777
  # DEBUG D#437 => &D.62777._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _509
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _509
  # DEBUG this => D#431
  # DEBUG D.117674 => D#432
  operator delete (_509);

  <bb 604>:
  # DEBUG D#441 => &D.62777._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62777 ={v} {CLOBBER};
  resx 105

<L313>:
  pretmp_720 = &this_40(D)->_noq_next_output_port;
  pretmp_1377 = &this_40(D)->_noq_next_vc_start;
  pretmp_2315 = &this_40(D)->_noq_next_vc_end;
  pretmp_1353 = &this_40(D)->_output_buffer;
  pretmp_2302 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  # _2124 = PHI <_195(190)>
<L88>:
  operator delete (_2124);
  resx 110

<L314>:
  goto <bb 609> (<L89>);

<L239>:

<L89>:
  # DEBUG this => &D.62782
  # DEBUG this => &D.62782
  # DEBUG this => &D.62782
  _182 = MEM[(char * *)&D.62782];
  # DEBUG D#1 => &D.62782
  # DEBUG this => D#1
  # DEBUG this => &D.62782
  if (&D.62782.D.11539._M_local_buf != _182)
    goto <bb 610>;
  else
    goto <bb 611>;

  <bb 610>:
  # DEBUG D#440 => D.62782.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62782
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62782
  # DEBUG this => D#1
  # DEBUG this => &D.62782
  # DEBUG D#437 => &D.62782._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _182
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _182
  # DEBUG this => D#431
  # DEBUG D.117689 => D#432
  operator delete (_182);

  <bb 611>:
  # DEBUG D#441 => &D.62782._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62782 ={v} {CLOBBER};
  resx 109

<L315>:
  goto <bb 619> (<L92>);

<L240>:

<L90>:
  # DEBUG this => &D.62784
  # DEBUG this => &D.62784
  # DEBUG this => &D.62784
  _211 = MEM[(char * *)&D.62784];
  # DEBUG D#1 => &D.62784
  # DEBUG this => D#1
  # DEBUG this => &D.62784
  if (&D.62784.D.11539._M_local_buf != _211)
    goto <bb 615>;
  else
    goto <bb 616>;

  <bb 615>:
  # DEBUG D#440 => D.62784.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62784
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62784
  # DEBUG this => D#1
  # DEBUG this => &D.62784
  # DEBUG D#437 => &D.62784._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _211
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _211
  # DEBUG this => D#431
  # DEBUG D.117704 => D#432
  operator delete (_211);

  <bb 616>:
  # DEBUG D#441 => &D.62784._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62784 ={v} {CLOBBER};
  resx 114

<L316>:
  goto <bb 619> (<L92>);

<L231>:

<L92>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&module_name);
  resx 108

<L317>:
  pretmp_1417 = &this_40(D)->_noq_next_output_port;
  pretmp_1371 = &this_40(D)->_noq_next_vc_start;
  pretmp_2314 = &this_40(D)->_noq_next_vc_end;
  pretmp_1363 = &this_40(D)->_output_buffer;
  pretmp_2300 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

  # _2123 = PHI <_224(259)>
<L94>:
  operator delete (_2123);
  resx 122

<L318>:
  goto <bb 624> (<L95>);

<L255>:

<L95>:
  # DEBUG this => &D.62790
  # DEBUG this => &D.62790
  # DEBUG this => &D.62790
  _209 = MEM[(char * *)&D.62790];
  # DEBUG D#1 => &D.62790
  # DEBUG this => D#1
  # DEBUG this => &D.62790
  if (&D.62790.D.11539._M_local_buf != _209)
    goto <bb 625>;
  else
    goto <bb 626>;

  <bb 625>:
  # DEBUG D#440 => D.62790.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62790
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62790
  # DEBUG this => D#1
  # DEBUG this => &D.62790
  # DEBUG D#437 => &D.62790._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _209
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _209
  # DEBUG this => D#431
  # DEBUG D.117721 => D#432
  operator delete (_209);

  <bb 626>:
  # DEBUG D#441 => &D.62790._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62790 ={v} {CLOBBER};
  resx 121

<L319>:
  goto <bb 634> (<L98>);

<L256>:

<L96>:
  # DEBUG this => &D.62792
  # DEBUG this => &D.62792
  # DEBUG this => &D.62792
  _240 = MEM[(char * *)&D.62792];
  # DEBUG D#1 => &D.62792
  # DEBUG this => D#1
  # DEBUG this => &D.62792
  if (&D.62792.D.11539._M_local_buf != _240)
    goto <bb 630>;
  else
    goto <bb 631>;

  <bb 630>:
  # DEBUG D#440 => D.62792.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62792
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62792
  # DEBUG this => D#1
  # DEBUG this => &D.62792
  # DEBUG D#437 => &D.62792._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _240
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _240
  # DEBUG this => D#431
  # DEBUG D.117736 => D#432
  operator delete (_240);

  <bb 631>:
  # DEBUG D#441 => &D.62792._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62792 ={v} {CLOBBER};
  resx 126

<L320>:
  goto <bb 634> (<L98>);

<L247>:

<L98>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&module_name);
  resx 120

<L321>:
  pretmp_225 = &this_40(D)->_noq_next_output_port;
  pretmp_2325 = &this_40(D)->_noq_next_vc_start;
  pretmp_2316 = &this_40(D)->_noq_next_vc_end;
  pretmp_1690 = &this_40(D)->_output_buffer;
  pretmp_2298 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

<L100>:
  # DEBUG this => &D.62795
  # DEBUG this => &D.62795
  # DEBUG this => &D.62795
  _238 = MEM[(char * *)&D.62795];
  # DEBUG D#1 => &D.62795
  # DEBUG this => D#1
  # DEBUG this => &D.62795
  if (&D.62795.D.11539._M_local_buf != _238)
    goto <bb 637>;
  else
    goto <bb 638>;

  <bb 637>:
  # DEBUG D#440 => D.62795.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62795
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62795
  # DEBUG this => D#1
  # DEBUG this => &D.62795
  # DEBUG D#437 => &D.62795._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _238
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _238
  # DEBUG this => D#431
  # DEBUG D.117753 => D#432
  operator delete (_238);

  <bb 638>:
  # DEBUG D#441 => &D.62795._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62795 ={v} {CLOBBER};
  resx 132

<L322>:
  pretmp_1487 = &this_40(D)->_noq_next_output_port;
  pretmp_2330 = &this_40(D)->_noq_next_vc_start;
  pretmp_2323 = &this_40(D)->_noq_next_vc_end;
  pretmp_2312 = &this_40(D)->_output_buffer;
  pretmp_1667 = &this_40(D)->_credit_buffer;
  goto <bb 738> (<L145>);

<L103>:
  # DEBUG this => &D.62797
  # DEBUG this => &D.62797
  # DEBUG this => &D.62797
  _498 = MEM[(char * *)&D.62797];
  # DEBUG D#1 => &D.62797
  # DEBUG this => D#1
  # DEBUG this => &D.62797
  if (&D.62797.D.11539._M_local_buf != _498)
    goto <bb 641>;
  else
    goto <bb 642>;

  <bb 641>:
  # DEBUG D#440 => D.62797.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62797
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62797
  # DEBUG this => D#1
  # DEBUG this => &D.62797
  # DEBUG D#437 => &D.62797._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _498
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _498
  # DEBUG this => D#431
  # DEBUG D.117770 => D#432
  operator delete (_498);

  <bb 642>:
  # DEBUG D#441 => &D.62797._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62797 ={v} {CLOBBER};
  resx 140

<L323>:
  pretmp_2348 = &this_40(D)->_noq_next_output_port;
  pretmp_2343 = &this_40(D)->_noq_next_vc_start;
  pretmp_1857 = &this_40(D)->_noq_next_vc_end;
  pretmp_2333 = &this_40(D)->_output_buffer;
  pretmp_2332 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

<L105>:
  # DEBUG this => &D.62799
  # DEBUG this => &D.62799
  # DEBUG this => &D.62799
  _256 = MEM[(char * *)&D.62799];
  # DEBUG D#1 => &D.62799
  # DEBUG this => D#1
  # DEBUG this => &D.62799
  if (&D.62799.D.11539._M_local_buf != _256)
    goto <bb 645>;
  else
    goto <bb 646>;

  <bb 645>:
  # DEBUG D#440 => D.62799.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62799
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62799
  # DEBUG this => D#1
  # DEBUG this => &D.62799
  # DEBUG D#437 => &D.62799._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _256
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _256
  # DEBUG this => D#431
  # DEBUG D.117787 => D#432
  operator delete (_256);

  <bb 646>:
  # DEBUG D#441 => &D.62799._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62799 ={v} {CLOBBER};
  resx 144

<L324>:
  pretmp_1590 = &this_40(D)->_noq_next_output_port;
  pretmp_2346 = &this_40(D)->_noq_next_vc_start;
  pretmp_79 = &this_40(D)->_noq_next_vc_end;
  pretmp_2335 = &this_40(D)->_output_buffer;
  pretmp_1490 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

<L107>:
  # DEBUG this => &D.62801
  # DEBUG this => &D.62801
  # DEBUG this => &D.62801
  _285 = MEM[(char * *)&D.62801];
  # DEBUG D#1 => &D.62801
  # DEBUG this => D#1
  # DEBUG this => &D.62801
  if (&D.62801.D.11539._M_local_buf != _285)
    goto <bb 649>;
  else
    goto <bb 650>;

  <bb 649>:
  # DEBUG D#440 => D.62801.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62801
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62801
  # DEBUG this => D#1
  # DEBUG this => &D.62801
  # DEBUG D#437 => &D.62801._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _285
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _285
  # DEBUG this => D#431
  # DEBUG D.117804 => D#432
  operator delete (_285);

  <bb 650>:
  # DEBUG D#441 => &D.62801._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62801 ={v} {CLOBBER};
  resx 147

<L325>:
  pretmp_1589 = &this_40(D)->_noq_next_output_port;
  pretmp_2345 = &this_40(D)->_noq_next_vc_start;
  pretmp_1551 = &this_40(D)->_noq_next_vc_end;
  pretmp_1489 = &this_40(D)->_output_buffer;
  pretmp_196 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

<L108>:
  # DEBUG this => &D.62803
  # DEBUG this => &D.62803
  # DEBUG this => &D.62803
  _282 = MEM[(char * *)&D.62803];
  # DEBUG D#1 => &D.62803
  # DEBUG this => D#1
  # DEBUG this => &D.62803
  if (&D.62803.D.11539._M_local_buf != _282)
    goto <bb 653>;
  else
    goto <bb 654>;

  <bb 653>:
  # DEBUG D#440 => D.62803.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62803
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62803
  # DEBUG this => D#1
  # DEBUG this => &D.62803
  # DEBUG D#437 => &D.62803._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _282
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _282
  # DEBUG this => D#431
  # DEBUG D.117819 => D#432
  operator delete (_282);

  <bb 654>:
  # DEBUG D#441 => &D.62803._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62803 ={v} {CLOBBER};
  resx 150

<L326>:
  pretmp_2350 = &this_40(D)->_noq_next_output_port;
  pretmp_2235 = &this_40(D)->_noq_next_vc_start;
  pretmp_2340 = &this_40(D)->_noq_next_vc_end;
  pretmp_1532 = &this_40(D)->_output_buffer;
  pretmp_179 = &this_40(D)->_credit_buffer;
  goto <bb 733> (<L144>);

<L111>:
  # DEBUG this => &D.62805
  # DEBUG this => &D.62805
  # DEBUG this => &D.62805
  _495 = MEM[(char * *)&D.62805];
  # DEBUG D#1 => &D.62805
  # DEBUG this => D#1
  # DEBUG this => &D.62805
  if (&D.62805.D.11539._M_local_buf != _495)
    goto <bb 657>;
  else
    goto <bb 658>;

  <bb 657>:
  # DEBUG D#440 => D.62805.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62805
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62805
  # DEBUG this => D#1
  # DEBUG this => &D.62805
  # DEBUG D#437 => &D.62805._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _495
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _495
  # DEBUG this => D#431
  # DEBUG D.117836 => D#432
  operator delete (_495);

  <bb 658>:
  # DEBUG D#441 => &D.62805._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62805 ={v} {CLOBBER};
  resx 158

<L327>:
  pretmp_1881 = &this_40(D)->_noq_next_output_port;
  pretmp_3 = &this_40(D)->_noq_next_vc_start;
  pretmp_1886 = &this_40(D)->_noq_next_vc_end;
  pretmp_1158 = &this_40(D)->_output_buffer;
  pretmp_2360 = &this_40(D)->_credit_buffer;
  goto <bb 728> (<L143>);

<L113>:
  # DEBUG this => &D.62807
  # DEBUG this => &D.62807
  # DEBUG this => &D.62807
  _492 = MEM[(char * *)&D.62807];
  # DEBUG D#1 => &D.62807
  # DEBUG this => D#1
  # DEBUG this => &D.62807
  if (&D.62807.D.11539._M_local_buf != _492)
    goto <bb 661>;
  else
    goto <bb 662>;

  <bb 661>:
  # DEBUG D#440 => D.62807.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62807
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62807
  # DEBUG this => D#1
  # DEBUG this => &D.62807
  # DEBUG D#437 => &D.62807._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _492
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _492
  # DEBUG this => D#431
  # DEBUG D.117853 => D#432
  operator delete (_492);

  <bb 662>:
  # DEBUG D#441 => &D.62807._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62807 ={v} {CLOBBER};
  resx 161

<L328>:
  pretmp_1878 = &this_40(D)->_noq_next_output_port;
  pretmp_1390 = &this_40(D)->_noq_next_vc_start;
  pretmp_1888 = &this_40(D)->_noq_next_vc_end;
  pretmp_899 = &this_40(D)->_output_buffer;
  pretmp_1159 = &this_40(D)->_credit_buffer;
  goto <bb 728> (<L143>);

<L114>:
  # DEBUG this => &D.62809
  # DEBUG this => &D.62809
  # DEBUG this => &D.62809
  _308 = MEM[(char * *)&D.62809];
  # DEBUG D#1 => &D.62809
  # DEBUG this => D#1
  # DEBUG this => &D.62809
  if (&D.62809.D.11539._M_local_buf != _308)
    goto <bb 665>;
  else
    goto <bb 666>;

  <bb 665>:
  # DEBUG D#440 => D.62809.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62809
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62809
  # DEBUG this => D#1
  # DEBUG this => &D.62809
  # DEBUG D#437 => &D.62809._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _308
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _308
  # DEBUG this => D#431
  # DEBUG D.117868 => D#432
  operator delete (_308);

  <bb 666>:
  # DEBUG D#441 => &D.62809._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62809 ={v} {CLOBBER};
  resx 164

<L329>:
  pretmp_1804 = &this_40(D)->_noq_next_output_port;
  pretmp_1884 = &this_40(D)->_noq_next_vc_start;
  pretmp_1798 = &this_40(D)->_noq_next_vc_end;
  pretmp_1436 = &this_40(D)->_output_buffer;
  pretmp_2362 = &this_40(D)->_credit_buffer;
  goto <bb 728> (<L143>);

<L117>:
  # DEBUG this => &D.62811
  # DEBUG this => &D.62811
  # DEBUG this => &D.62811
  _490 = MEM[(char * *)&D.62811];
  # DEBUG D#1 => &D.62811
  # DEBUG this => D#1
  # DEBUG this => &D.62811
  if (&D.62811.D.11539._M_local_buf != _490)
    goto <bb 669>;
  else
    goto <bb 670>;

  <bb 669>:
  # DEBUG D#440 => D.62811.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62811
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62811
  # DEBUG this => D#1
  # DEBUG this => &D.62811
  # DEBUG D#437 => &D.62811._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _490
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _490
  # DEBUG this => D#431
  # DEBUG D.117885 => D#432
  operator delete (_490);

  <bb 670>:
  # DEBUG D#441 => &D.62811._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62811 ={v} {CLOBBER};
  resx 172

<L330>:
  pretmp_1010 = &this_40(D)->_noq_next_output_port;
  pretmp_979 = &this_40(D)->_noq_next_vc_start;
  pretmp_946 = &this_40(D)->_noq_next_vc_end;
  pretmp_2093 = &this_40(D)->_output_buffer;
  pretmp_879 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L119>:
  # DEBUG this => &D.62813
  # DEBUG this => &D.62813
  # DEBUG this => &D.62813
  _336 = MEM[(char * *)&D.62813];
  # DEBUG D#1 => &D.62813
  # DEBUG this => D#1
  # DEBUG this => &D.62813
  if (&D.62813.D.11539._M_local_buf != _336)
    goto <bb 673>;
  else
    goto <bb 674>;

  <bb 673>:
  # DEBUG D#440 => D.62813.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62813
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62813
  # DEBUG this => D#1
  # DEBUG this => &D.62813
  # DEBUG D#437 => &D.62813._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _336
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _336
  # DEBUG this => D#431
  # DEBUG D.117902 => D#432
  operator delete (_336);

  <bb 674>:
  # DEBUG D#441 => &D.62813._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62813 ={v} {CLOBBER};
  resx 175

<L331>:
  pretmp_1022 = &this_40(D)->_noq_next_output_port;
  pretmp_986 = &this_40(D)->_noq_next_vc_start;
  pretmp_960 = &this_40(D)->_noq_next_vc_end;
  pretmp_2099 = &this_40(D)->_output_buffer;
  pretmp_884 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L120>:
  # DEBUG this => &D.62816
  # DEBUG this => &D.62816
  # DEBUG this => &D.62816
  _333 = MEM[(char * *)&D.62816];
  # DEBUG D#1 => &D.62816
  # DEBUG this => D#1
  # DEBUG this => &D.62816
  if (&D.62816.D.11539._M_local_buf != _333)
    goto <bb 677>;
  else
    goto <bb 678>;

  <bb 677>:
  # DEBUG D#440 => D.62816.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62816
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62816
  # DEBUG this => D#1
  # DEBUG this => &D.62816
  # DEBUG D#437 => &D.62816._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _333
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _333
  # DEBUG this => D#431
  # DEBUG D.117917 => D#432
  operator delete (_333);

  <bb 678>:
  # DEBUG D#441 => &D.62816._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62816 ={v} {CLOBBER};
  resx 178

<L332>:
  pretmp_1012 = &this_40(D)->_noq_next_output_port;
  pretmp_981 = &this_40(D)->_noq_next_vc_start;
  pretmp_939 = &this_40(D)->_noq_next_vc_end;
  pretmp_902 = &this_40(D)->_output_buffer;
  pretmp_881 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L122>:
  # DEBUG this => &D.62818
  # DEBUG this => &D.62818
  # DEBUG this => &D.62818
  _487 = MEM[(char * *)&D.62818];
  # DEBUG D#1 => &D.62818
  # DEBUG this => D#1
  # DEBUG this => &D.62818
  if (&D.62818.D.11539._M_local_buf != _487)
    goto <bb 681>;
  else
    goto <bb 682>;

  <bb 681>:
  # DEBUG D#440 => D.62818.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62818
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62818
  # DEBUG this => D#1
  # DEBUG this => &D.62818
  # DEBUG D#437 => &D.62818._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _487
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _487
  # DEBUG this => D#431
  # DEBUG D.117934 => D#432
  operator delete (_487);

  <bb 682>:
  # DEBUG D#441 => &D.62818._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62818 ={v} {CLOBBER};
  resx 182

<L333>:
  pretmp_1005 = &this_40(D)->_noq_next_output_port;
  pretmp_969 = &this_40(D)->_noq_next_vc_start;
  pretmp_941 = &this_40(D)->_noq_next_vc_end;
  pretmp_904 = &this_40(D)->_output_buffer;
  pretmp_1929 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L124>:
  # DEBUG this => &D.62820
  # DEBUG this => &D.62820
  # DEBUG this => &D.62820
  _366 = MEM[(char * *)&D.62820];
  # DEBUG D#1 => &D.62820
  # DEBUG this => D#1
  # DEBUG this => &D.62820
  if (&D.62820.D.11539._M_local_buf != _366)
    goto <bb 685>;
  else
    goto <bb 686>;

  <bb 685>:
  # DEBUG D#440 => D.62820.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62820
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62820
  # DEBUG this => D#1
  # DEBUG this => &D.62820
  # DEBUG D#437 => &D.62820._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _366
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _366
  # DEBUG this => D#431
  # DEBUG D.117951 => D#432
  operator delete (_366);

  <bb 686>:
  # DEBUG D#441 => &D.62820._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62820 ={v} {CLOBBER};
  resx 186

<L334>:
  pretmp_1007 = &this_40(D)->_noq_next_output_port;
  pretmp_971 = &this_40(D)->_noq_next_vc_start;
  pretmp_929 = &this_40(D)->_noq_next_vc_end;
  pretmp_2042 = &this_40(D)->_output_buffer;
  pretmp_1931 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L126>:
  # DEBUG this => &D.62822
  # DEBUG D#628 => &D.62822.D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D.62822.D.35433._M_impl._M_finish
  # DEBUG D#630 => D.62822.D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D.62822.D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _375 = MEM[(struct _Vector_base *)&D.62822]._M_impl._M_start;
  # DEBUG D#625 => (long int) _375
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _375
  # DEBUG __n => D#622
  if (_375 != 0B)
    goto <bb 689>;
  else
    goto <bb 690>;

  <bb 689>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _375
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _375
  # DEBUG this => D#614
  # DEBUG D.117970 => D#615
  operator delete (_375);

  <bb 690>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  D.62822 ={v} {CLOBBER};
  resx 190

<L335>:
  pretmp_985 = &this_40(D)->_noq_next_vc_start;
  pretmp_959 = &this_40(D)->_noq_next_vc_end;
  pretmp_2098 = &this_40(D)->_output_buffer;
  pretmp_1985 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L128>:
  # DEBUG this => &D.62824
  # DEBUG D#628 => &D.62824.D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D.62824.D.35433._M_impl._M_finish
  # DEBUG D#630 => D.62824.D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D.62824.D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _484 = MEM[(struct _Vector_base *)&D.62824]._M_impl._M_start;
  # DEBUG D#625 => (long int) _484
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _484
  # DEBUG __n => D#622
  if (_484 != 0B)
    goto <bb 693>;
  else
    goto <bb 694>;

  <bb 693>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _484
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _484
  # DEBUG this => D#614
  # DEBUG D.117987 => D#615
  operator delete (_484);

  <bb 694>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  D.62824 ={v} {CLOBBER};
  resx 194

<L336>:
  pretmp_943 = &this_40(D)->_noq_next_vc_end;
  pretmp_908 = &this_40(D)->_output_buffer;
  pretmp_886 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L130>:
  # DEBUG this => &D.62826
  # DEBUG D#628 => &D.62826.D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D.62826.D.35433._M_impl._M_finish
  # DEBUG D#630 => D.62826.D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D.62826.D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _481 = MEM[(struct _Vector_base *)&D.62826]._M_impl._M_start;
  # DEBUG D#625 => (long int) _481
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _481
  # DEBUG __n => D#622
  if (_481 != 0B)
    goto <bb 697>;
  else
    goto <bb 698>;

  <bb 697>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _481
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _481
  # DEBUG this => D#614
  # DEBUG D.118004 => D#615
  operator delete (_481);

  <bb 698>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  D.62826 ={v} {CLOBBER};
  resx 198

<L337>:
  pretmp_910 = &this_40(D)->_output_buffer;
  pretmp_1971 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L132>:
  # DEBUG this => &D.62828
  # DEBUG this => &D.62828
  # DEBUG this => &D.62828
  _478 = MEM[(char * *)&D.62828];
  # DEBUG D#1 => &D.62828
  # DEBUG this => D#1
  # DEBUG this => &D.62828
  if (&D.62828.D.11539._M_local_buf != _478)
    goto <bb 701>;
  else
    goto <bb 702>;

  <bb 701>:
  # DEBUG D#440 => D.62828.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62828
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62828
  # DEBUG this => D#1
  # DEBUG this => &D.62828
  # DEBUG D#437 => &D.62828._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _478
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _478
  # DEBUG this => D#431
  # DEBUG D.118019 => D#432
  operator delete (_478);

  <bb 702>:
  # DEBUG D#441 => &D.62828._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62828 ={v} {CLOBBER};
  resx 202

<L338>:
  pretmp_2086 = &this_40(D)->_output_buffer;
  pretmp_1973 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L134>:
  # DEBUG this => &D.62830
  # DEBUG D#1010 => &D.62830.c
  # DEBUG this => D#1010
  # DEBUG D#1001 => &D#1010->D.54933
  # DEBUG this => D#1001
  # DEBUG this => D#1010
  # DEBUG D#125 => &D#1010->D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)D#1010 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)D#1010 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)D#1010 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)D#1010 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => D#1010
  # DEBUG D#126 => &D#1010->D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)D#1010 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)D#1010 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)D#1010 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)D#1010 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => D#1010
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.62830].D.54933);
  D.62830 ={v} {CLOBBER};
  resx 206

<L339>:
  goto <bb 707> (<L135>);

<L286>:
  pretmp_818 = &this_40(D)->_output_buffer;

  # prephitmp_810 = PHI <pretmp_818(706), _412(705)>
<L135>:
  # DEBUG this => &D.62831
  # DEBUG D#1001 => &D.62831.D.54933
  # DEBUG this => D#1001
  # DEBUG this => &D.62831
  # DEBUG D#125 => &D.62831.D.54933._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#125
  # DEBUG D#1009 => MEM[(const struct iterator &)&D.62831 + 48]._M_cur
  # DEBUG D.99356 => D#1009
  # DEBUG D#1008 => MEM[(const struct iterator &)&D.62831 + 48]._M_first
  # DEBUG D.99357 => D#1008
  # DEBUG D#1007 => MEM[(const struct iterator &)&D.62831 + 48]._M_last
  # DEBUG D.99358 => D#1007
  # DEBUG D#1006 => MEM[(const struct iterator &)&D.62831 + 48]._M_node
  # DEBUG D.99359 => D#1006
  # DEBUG this => &D.62831
  # DEBUG D#126 => &D.62831.D.54933._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#126
  # DEBUG D#1005 => MEM[(const struct iterator &)&D.62831 + 16]._M_cur
  # DEBUG D.99352 => D#1005
  # DEBUG D#1004 => MEM[(const struct iterator &)&D.62831 + 16]._M_first
  # DEBUG D.99353 => D#1004
  # DEBUG D#1003 => MEM[(const struct iterator &)&D.62831 + 16]._M_last
  # DEBUG D.99354 => D#1003
  # DEBUG D#1002 => MEM[(const struct iterator &)&D.62831 + 16]._M_node
  # DEBUG D.99355 => D#1002
  # DEBUG D#127 => &D.62831
  # DEBUG this => D#127
  # DEBUG __first => D#128
  # DEBUG __last => D#129
  # DEBUG D.99340 => D#130
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.62831.D.54933);
  D.62831 ={v} {CLOBBER};
  resx 205

<L340>:
  pretmp_1977 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

<L136>:
  # DEBUG this => &D.62832
  # DEBUG D#1053 => &D.62832.c
  # DEBUG this => D#1053
  # DEBUG D#1044 => &D#1053->D.62618
  # DEBUG this => D#1044
  # DEBUG this => D#1053
  # DEBUG D#132 => &D#1053->D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)D#1053 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)D#1053 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)D#1053 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)D#1053 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => D#1053
  # DEBUG D#133 => &D#1053->D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)D#1053 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)D#1053 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)D#1053 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)D#1053 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => D#1053
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&D.62832].D.62618);
  D.62832 ={v} {CLOBBER};
  resx 210

<L341>:
  goto <bb 712> (<L137>);

<L288>:
  pretmp_811 = &this_40(D)->_credit_buffer;

  # prephitmp_812 = PHI <pretmp_811(711), _418(710)>
<L137>:
  # DEBUG this => &D.62833
  # DEBUG D#1044 => &D.62833.D.62618
  # DEBUG this => D#1044
  # DEBUG this => &D.62833
  # DEBUG D#132 => &D.62833.D.62618._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#132
  # DEBUG D#1052 => MEM[(const struct iterator &)&D.62833 + 48]._M_cur
  # DEBUG D.99712 => D#1052
  # DEBUG D#1051 => MEM[(const struct iterator &)&D.62833 + 48]._M_first
  # DEBUG D.99713 => D#1051
  # DEBUG D#1050 => MEM[(const struct iterator &)&D.62833 + 48]._M_last
  # DEBUG D.99714 => D#1050
  # DEBUG D#1049 => MEM[(const struct iterator &)&D.62833 + 48]._M_node
  # DEBUG D.99715 => D#1049
  # DEBUG this => &D.62833
  # DEBUG D#133 => &D.62833.D.62618._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#133
  # DEBUG D#1048 => MEM[(const struct iterator &)&D.62833 + 16]._M_cur
  # DEBUG D.99708 => D#1048
  # DEBUG D#1047 => MEM[(const struct iterator &)&D.62833 + 16]._M_first
  # DEBUG D.99709 => D#1047
  # DEBUG D#1046 => MEM[(const struct iterator &)&D.62833 + 16]._M_last
  # DEBUG D.99710 => D#1046
  # DEBUG D#1045 => MEM[(const struct iterator &)&D.62833 + 16]._M_node
  # DEBUG D.99711 => D#1045
  # DEBUG D#134 => &D.62833
  # DEBUG this => D#134
  # DEBUG __first => D#135
  # DEBUG __last => D#136
  # DEBUG D.99696 => D#137
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&D.62833.D.62618);
  D.62833 ={v} {CLOBBER};
  resx 209

<L342>:
  goto <bb 723> (<L142>);

<L138>:
  # DEBUG this => &D.62834
  # DEBUG this => &D.62834
  # DEBUG this => &D.62834
  _472 = MEM[(char * *)&D.62834];
  # DEBUG D#1 => &D.62834
  # DEBUG this => D#1
  # DEBUG this => &D.62834
  if (&D.62834.D.11539._M_local_buf != _472)
    goto <bb 715>;
  else
    goto <bb 716>;

  <bb 715>:
  # DEBUG D#440 => D.62834.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &D.62834
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &D.62834
  # DEBUG this => D#1
  # DEBUG this => &D.62834
  # DEBUG D#437 => &D.62834._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _472
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _472
  # DEBUG this => D#431
  # DEBUG D.118042 => D#432
  operator delete (_472);

  <bb 716>:
  # DEBUG D#441 => &D.62834._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  D.62834 ={v} {CLOBBER};
  resx 214

<L343>:
  goto <bb 723> (<L142>);

<L140>:
  operator delete (_450);
  resx 217

<L344>:
  goto <bb 723> (<L142>);

<L141>:
  operator delete (_455);
  resx 219

<L345>:
  goto <bb 723> (<L142>);

<L269>:
  pretmp_1019 = &this_40(D)->_noq_next_output_port;
  pretmp_991 = &this_40(D)->_noq_next_vc_start;
  pretmp_965 = &this_40(D)->_noq_next_vc_end;
  pretmp_922 = &this_40(D)->_output_buffer;
  pretmp_2057 = &this_40(D)->_credit_buffer;

  # prephitmp_990 = PHI <pretmp_1019(722), pretmp_1020(335), _380(721), pretmp_1021(342), _380(464), _380(719), _380(476), _380(717), _380(494), _380(500), _380(506), _380(511), _380(514), _380(691), pretmp_1022(675), _380(415), _380(695), _380(444), _380(699), _380(459), _380(703), _380(488), _380(708), _380(713), pretmp_1009(795), pretmp_1010(671), pretmp_1011(351), pretmp_1012(679), pretmp_1004(359), pretmp_1005(683), pretmp_1006(366), pretmp_1007(687), pretmp_989(386)>
  # prephitmp_964 = PHI <pretmp_991(722), pretmp_992(335), _389(721), pretmp_984(342), _389(464), _389(719), _389(476), _389(717), _389(494), _389(500), _389(506), _389(511), _389(514), pretmp_985(691), pretmp_986(675), pretmp_987(415), _389(695), _389(444), _389(699), _389(459), _389(703), _389(488), _389(708), _389(713), pretmp_978(795), pretmp_979(671), pretmp_980(351), pretmp_981(679), pretmp_968(359), pretmp_969(683), pretmp_970(366), pretmp_971(687), pretmp_963(386)>
  # prephitmp_931 = PHI <pretmp_965(722), pretmp_966(335), _398(721), pretmp_958(342), _398(464), _398(719), _398(476), _398(717), _398(494), _398(500), _398(506), _398(511), _398(514), pretmp_959(691), pretmp_960(675), pretmp_961(415), pretmp_943(695), pretmp_944(444), _398(699), _398(459), _398(703), _398(488), _398(708), _398(713), pretmp_945(795), pretmp_946(671), pretmp_938(351), pretmp_939(679), pretmp_940(359), pretmp_941(683), pretmp_928(366), pretmp_929(687), pretmp_930(386)>
  # prephitmp_2044 = PHI <pretmp_922(722), pretmp_923(335), _412(721), pretmp_924(342), pretmp_925(464), _412(719), _412(476), _412(717), _412(494), _412(500), _412(506), _412(511), _412(514), pretmp_2098(691), pretmp_2099(675), pretmp_907(415), pretmp_908(695), pretmp_909(444), pretmp_910(699), pretmp_2085(459), pretmp_2086(703), _412(488), prephitmp_810(708), _412(713), pretmp_2091(795), pretmp_2093(671), pretmp_901(351), pretmp_902(679), pretmp_903(359), pretmp_904(683), pretmp_2041(366), pretmp_2042(687), pretmp_2043(386)>
  # prephitmp_1944 = PHI <pretmp_2057(722), pretmp_2058(335), _418(721), pretmp_2059(342), pretmp_2060(464), _418(719), pretmp_1984(476), _418(717), _418(494), _418(500), _418(506), _418(511), _418(514), pretmp_1985(691), pretmp_884(675), pretmp_885(415), pretmp_886(695), pretmp_887(444), pretmp_1971(699), pretmp_1972(459), pretmp_1973(703), _418(488), pretmp_1977(708), prephitmp_812(713), pretmp_878(795), pretmp_879(671), pretmp_880(351), pretmp_881(679), pretmp_1928(359), pretmp_1929(683), pretmp_1930(366), pretmp_1931(687), pretmp_1943(386)>
<L142>:
  # DEBUG this => &spec_sw_alloc_type
  # DEBUG this => &spec_sw_alloc_type
  # DEBUG this => &spec_sw_alloc_type
  _470 = MEM[(char * *)&spec_sw_alloc_type];
  # DEBUG D#1 => &spec_sw_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &spec_sw_alloc_type
  if (&spec_sw_alloc_type.D.11539._M_local_buf != _470)
    goto <bb 724>;
  else
    goto <bb 725>;

  <bb 724>:
  # DEBUG D#440 => spec_sw_alloc_type.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &spec_sw_alloc_type
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &spec_sw_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &spec_sw_alloc_type
  # DEBUG D#437 => &spec_sw_alloc_type._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _470
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _470
  # DEBUG this => D#431
  # DEBUG D.118059 => D#432
  operator delete (_470);

  <bb 725>:
  # DEBUG D#441 => &spec_sw_alloc_type._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)&spec_sw_alloc_type] ={v} {CLOBBER};
  resx 170

<L346>:
  goto <bb 728> (<L143>);

<L266>:
  pretmp_1879 = &this_40(D)->_noq_next_output_port;
  pretmp_1787 = &this_40(D)->_noq_next_vc_start;
  pretmp_1887 = &this_40(D)->_noq_next_vc_end;
  pretmp_1612 = &this_40(D)->_output_buffer;
  pretmp_155 = &this_40(D)->_credit_buffer;

  # prephitmp_1882 = PHI <pretmp_1877(317), prephitmp_990(726), pretmp_1804(667), pretmp_1699(323), pretmp_1878(663), pretmp_1879(727), pretmp_1881(659)>
  # prephitmp_1648 = PHI <pretmp_1883(317), prephitmp_964(726), pretmp_1884(667), pretmp_8(323), pretmp_1390(663), pretmp_1787(727), pretmp_3(659)>
  # prephitmp_1508 = PHI <pretmp_1647(317), prephitmp_931(726), pretmp_1798(667), pretmp_191(323), pretmp_1888(663), pretmp_1887(727), pretmp_1886(659)>
  # prephitmp_2363 = PHI <pretmp_533(317), prephitmp_2044(726), pretmp_1436(667), pretmp_14(323), pretmp_899(663), pretmp_1612(727), pretmp_1158(659)>
  # prephitmp_2361 = PHI <pretmp_1151(317), prephitmp_1944(726), pretmp_2362(667), pretmp_482(323), pretmp_1159(663), pretmp_155(727), pretmp_2360(659)>
<L143>:
  # DEBUG this => &sw_alloc_type
  # DEBUG this => &sw_alloc_type
  # DEBUG this => &sw_alloc_type
  _488 = MEM[(char * *)&sw_alloc_type];
  # DEBUG D#1 => &sw_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &sw_alloc_type
  if (&sw_alloc_type.D.11539._M_local_buf != _488)
    goto <bb 729>;
  else
    goto <bb 730>;

  <bb 729>:
  # DEBUG D#440 => sw_alloc_type.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &sw_alloc_type
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &sw_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &sw_alloc_type
  # DEBUG D#437 => &sw_alloc_type._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _488
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _488
  # DEBUG this => D#431
  # DEBUG D.118074 => D#432
  operator delete (_488);

  <bb 730>:
  # DEBUG D#441 => &sw_alloc_type._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)&sw_alloc_type] ={v} {CLOBBER};
  resx 156

<L347>:
  goto <bb 733> (<L144>);

<L260>:
  pretmp_2351 = &this_40(D)->_noq_next_output_port;
  pretmp_1563 = &this_40(D)->_noq_next_vc_start;
  pretmp_1558 = &this_40(D)->_noq_next_vc_end;
  pretmp_2338 = &this_40(D)->_output_buffer;
  pretmp_1517 = &this_40(D)->_credit_buffer;

  # prephitmp_1562 = PHI <pretmp_2351(732), pretmp_2352(290), pretmp_1574(301), prephitmp_1882(731), pretmp_2350(655), pretmp_1590(647), pretmp_2349(307), pretmp_1589(651), pretmp_1560(283), pretmp_2348(643), pretmp_2347(295)>
  # prephitmp_2342 = PHI <pretmp_1563(732), pretmp_220(290), pretmp_1561(301), prephitmp_1648(731), pretmp_2235(655), pretmp_2346(647), pretmp_2344(307), pretmp_2345(651), pretmp_1557(283), pretmp_2343(643), pretmp_1559(295)>
  # prephitmp_2337 = PHI <pretmp_1558(732), pretmp_1538(290), pretmp_2341(301), prephitmp_1508(731), pretmp_2340(655), pretmp_79(647), pretmp_218(307), pretmp_1551(651), pretmp_1492(283), pretmp_1857(643), pretmp_2339(295)>
  # prephitmp_1507 = PHI <pretmp_2338(732), pretmp_1523(290), pretmp_2336(301), prephitmp_2363(731), pretmp_1532(655), pretmp_2335(647), pretmp_882(307), pretmp_1489(651), pretmp_2334(283), pretmp_2333(643), pretmp_1506(295)>
  # prephitmp_2331 = PHI <pretmp_1517(732), pretmp_1502(290), pretmp_1491(301), prephitmp_2361(731), pretmp_179(655), pretmp_1490(647), pretmp_1515(307), pretmp_196(651), pretmp_1486(283), pretmp_2332(643), pretmp_1488(295)>
<L144>:
  # DEBUG this => &vc_alloc_type
  # DEBUG this => &vc_alloc_type
  # DEBUG this => &vc_alloc_type
  _493 = MEM[(char * *)&vc_alloc_type];
  # DEBUG D#1 => &vc_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &vc_alloc_type
  if (&vc_alloc_type.D.11539._M_local_buf != _493)
    goto <bb 734>;
  else
    goto <bb 735>;

  <bb 734>:
  # DEBUG D#440 => vc_alloc_type.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &vc_alloc_type
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &vc_alloc_type
  # DEBUG this => D#1
  # DEBUG this => &vc_alloc_type
  # DEBUG D#437 => &vc_alloc_type._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _493
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _493
  # DEBUG this => D#431
  # DEBUG D.118089 => D#432
  operator delete (_493);

  <bb 735>:
  # DEBUG D#441 => &vc_alloc_type._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  MEM[(struct  &)&vc_alloc_type] ={v} {CLOBBER};
  resx 138

<L348>:
  goto <bb 738> (<L145>);

<L226>:
  pretmp_1512 = &this_40(D)->_noq_next_output_port;
  pretmp_1398 = &this_40(D)->_noq_next_vc_start;
  pretmp_2322 = &this_40(D)->_noq_next_vc_end;
  pretmp_2313 = &this_40(D)->_output_buffer;
  pretmp_1597 = &this_40(D)->_credit_buffer;

  # prephitmp_1394 = PHI <prephitmp_1562(736), pretmp_1487(639), pretmp_1512(737), pretmp_96(275), pretmp_189(272), pretmp_1511(143), pretmp_166(207), pretmp_720(605), pretmp_165(157), pretmp_1417(620), pretmp_1399(203), pretmp_1400(221), pretmp_225(635)>
  # prephitmp_2324 = PHI <prephitmp_2342(736), pretmp_2330(639), pretmp_1398(737), pretmp_2329(275), pretmp_676(272), pretmp_1386(143), pretmp_1513(207), pretmp_1377(605), pretmp_665(157), pretmp_1371(620), pretmp_1370(203), pretmp_1595(221), pretmp_2325(635)>
  # prephitmp_2317 = PHI <prephitmp_2337(736), pretmp_2323(639), pretmp_2322(737), pretmp_2326(275), pretmp_2327(272), pretmp_2328(143), pretmp_2319(207), pretmp_2315(605), pretmp_2318(157), pretmp_2314(620), pretmp_2320(203), pretmp_2321(221), pretmp_2316(635)>
  # prephitmp_2174 = PHI <prephitmp_1507(736), pretmp_2312(639), pretmp_2313(737), pretmp_2311(275), pretmp_2310(272), pretmp_1958(143), pretmp_1596(207), pretmp_1353(605), pretmp_2309(157), pretmp_1363(620), pretmp_2308(203), pretmp_1354(221), pretmp_1690(635)>
  # prephitmp_1957 = PHI <prephitmp_2331(736), pretmp_1667(639), pretmp_1597(737), pretmp_2307(275), pretmp_2306(272), pretmp_2305(143), pretmp_2304(207), pretmp_2302(605), pretmp_2303(157), pretmp_2300(620), pretmp_2301(203), pretmp_2299(221), pretmp_2298(635)>
<L145>:
  module_name ={v} {CLOBBER};
  module_name ={v} {CLOBBER};
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _496 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _496)
    goto <bb 739>;
  else
    goto <bb 740>;

  <bb 739>:
  # DEBUG D#440 => rf.D.11539._M_allocated_capacity
  # DEBUG D#439 => D#440
  # DEBUG this => &rf
  # DEBUG __size => D#439
  # DEBUG D#438 => D#439
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#437 => &rf._M_dataplus
  # DEBUG D#435 => D#437
  # DEBUG D#436 => D#438 + 1
  # DEBUG __p => _496
  # DEBUG __a => D#435
  # DEBUG __n => D#436
  # DEBUG D#434 => D#436
  # DEBUG D#433 => D#435
  # DEBUG D#431 => D#433
  # DEBUG D#432 => D#434
  # DEBUG __p => _496
  # DEBUG this => D#431
  # DEBUG D.118104 => D#432
  operator delete (_496);

  <bb 740>:
  # DEBUG D#441 => &rf._M_dataplus
  # DEBUG this => D#441
  # DEBUG this => D#441
  # DEBUG this => D#441
  resx 101

<L349>:
  goto <bb 743> (<L146>);

<L202>:
  pretmp_2289 = &this_40(D)->_noq_next_output_port;
  pretmp_1378 = &this_40(D)->_noq_next_vc_start;
  pretmp_2377 = &this_40(D)->_noq_next_vc_end;
  pretmp_2406 = &this_40(D)->_output_buffer;
  pretmp_2435 = &this_40(D)->_credit_buffer;

  # prephitmp_2281 = PHI <prephitmp_1394(741), pretmp_251(55), pretmp_2126(556), pretmp_2297(60), pretmp_2150(560), pretmp_2296(65), pretmp_1644(564), pretmp_1438(71), pretmp_2263(568), pretmp_2264(77), pretmp_2293(572), pretmp_2295(83), pretmp_2294(576), pretmp_2291(89), pretmp_2292(601), pretmp_2289(742), pretmp_2287(528), pretmp_2290(25), pretmp_2288(532), pretmp_2368(30), pretmp_2369(536), pretmp_2279(35), pretmp_2284(540), pretmp_2286(40), pretmp_2285(544), pretmp_2282(45), pretmp_2283(548), pretmp_2280(50), pretmp_2271(552)>
  # prephitmp_1369 = PHI <prephitmp_2324(741), pretmp_2272(55), pretmp_2278(556), pretmp_1623(60), pretmp_1540(560), pretmp_1539(65), pretmp_1443(564), pretmp_1885(71), pretmp_2277(568), pretmp_2276(77), pretmp_1872(572), pretmp_1418(83), pretmp_1824(576), pretmp_1825(89), pretmp_1395(601), pretmp_1378(742), pretmp_1840(528), pretmp_1841(25), pretmp_1372(532), pretmp_1355(30), pretmp_1856(536), pretmp_1426(35), pretmp_1437(540), pretmp_1402(40), pretmp_271(544), pretmp_2275(45), pretmp_1392(548), pretmp_1391(50), pretmp_1379(552)>
  # prephitmp_2391 = PHI <prephitmp_2317(741), pretmp_297(55), pretmp_2274(556), pretmp_1368(60), pretmp_1442(560), pretmp_2273(65), pretmp_1356(564), pretmp_1959(71), pretmp_2370(568), pretmp_2371(77), pretmp_2372(572), pretmp_2373(83), pretmp_2374(576), pretmp_2375(89), pretmp_2376(601), pretmp_2377(742), pretmp_2378(528), pretmp_2379(25), pretmp_2380(532), pretmp_2381(30), pretmp_2382(536), pretmp_2383(35), pretmp_2384(540), pretmp_2385(40), pretmp_2386(544), pretmp_2387(45), pretmp_2388(548), pretmp_2389(50), pretmp_2390(552)>
  # prephitmp_2420 = PHI <prephitmp_2174(741), pretmp_2392(55), pretmp_2393(556), pretmp_2394(60), pretmp_2395(560), pretmp_2396(65), pretmp_2397(564), pretmp_2398(71), pretmp_2399(568), pretmp_2400(77), pretmp_2401(572), pretmp_2402(83), pretmp_2403(576), pretmp_2404(89), pretmp_2405(601), pretmp_2406(742), pretmp_2407(528), pretmp_2408(25), pretmp_2409(532), pretmp_2410(30), pretmp_2411(536), pretmp_2412(35), pretmp_2413(540), pretmp_2414(40), pretmp_2415(544), pretmp_2416(45), pretmp_2417(548), pretmp_2418(50), pretmp_2419(552)>
  # prephitmp_2449 = PHI <prephitmp_1957(741), pretmp_2421(55), pretmp_2422(556), pretmp_2423(60), pretmp_2424(560), pretmp_2425(65), pretmp_2426(564), pretmp_2427(71), pretmp_2428(568), pretmp_2429(77), pretmp_2430(572), pretmp_2431(83), pretmp_2432(576), pretmp_2433(89), pretmp_2434(601), pretmp_2435(742), pretmp_2436(528), pretmp_2437(25), pretmp_2438(532), pretmp_2439(30), pretmp_2440(536), pretmp_2441(35), pretmp_2442(540), pretmp_2443(40), pretmp_2444(544), pretmp_2445(45), pretmp_2446(548), pretmp_2447(50), pretmp_2448(552)>
<L146>:
  # DEBUG D#2235 => {CLOBBER}
  # DEBUG rf_iter$_M_node => D#2235
  rf ={v} {CLOBBER};
  vc_alloc_type ={v} {CLOBBER};
  sw_alloc_type ={v} {CLOBBER};
  spec_sw_alloc_type ={v} {CLOBBER};
  std::vector<std::vector<int> >::~vector (prephitmp_2391);
  resx 21

<L148>:
  std::vector<std::vector<int> >::~vector (prephitmp_1369);
  resx 20

<L149>:
  std::vector<std::vector<int> >::~vector (prephitmp_2281);
  resx 19

<L150>:
  # DEBUG D#2244 => &this_40(D)->_switch_hold_vc
  # DEBUG this => D#2244
  # DEBUG D#628 => &D#2244->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#2244->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#2244->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#2244->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _499 = MEM[(struct _Vector_base *)this_40(D) + 1120B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _499
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _499
  # DEBUG __n => D#622
  if (_499 != 0B)
    goto <bb 747>;
  else
    goto <bb 748>;

  <bb 747>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _499
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _499
  # DEBUG this => D#614
  # DEBUG D.118121 => D#615
  operator delete (_499);

  <bb 748>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_40(D) + 1120] ={v} {CLOBBER};
  resx 18

<L151>:
  # DEBUG D#2243 => &this_40(D)->_switch_hold_out
  # DEBUG this => D#2243
  # DEBUG D#628 => &D#2243->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#2243->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#2243->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#2243->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _543 = MEM[(struct _Vector_base *)this_40(D) + 1096B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _543
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _543
  # DEBUG __n => D#622
  if (_543 != 0B)
    goto <bb 750>;
  else
    goto <bb 751>;

  <bb 750>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _543
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _543
  # DEBUG this => D#614
  # DEBUG D.118136 => D#615
  operator delete (_543);

  <bb 751>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_40(D) + 1096] ={v} {CLOBBER};
  resx 17

<L152>:
  # DEBUG D#2242 => &this_40(D)->_switch_hold_in
  # DEBUG this => D#2242
  # DEBUG D#628 => &D#2242->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#2242->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#2242->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#2242->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _544 = MEM[(struct _Vector_base *)this_40(D) + 1072B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _544
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _544
  # DEBUG __n => D#622
  if (_544 != 0B)
    goto <bb 753>;
  else
    goto <bb 754>;

  <bb 753>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _544
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _544
  # DEBUG this => D#614
  # DEBUG D.118151 => D#615
  operator delete (_544);

  <bb 754>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_40(D) + 1072] ={v} {CLOBBER};
  resx 16

<L153>:
  std::vector<std::queue<Credit*> >::~vector (prephitmp_2449);
  resx 15

<L154>:
  std::vector<std::queue<Flit*> >::~vector (prephitmp_2420);
  resx 14

<L155>:
  # DEBUG D#2241 => &this_40(D)->_sw_rr_offset
  # DEBUG this => D#2241
  # DEBUG D#628 => &D#2241->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#2241->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#2241->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#2241->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _545 = MEM[(struct _Vector_base *)this_40(D) + 976B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _545
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _545
  # DEBUG __n => D#622
  if (_545 != 0B)
    goto <bb 758>;
  else
    goto <bb 759>;

  <bb 758>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _545
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _545
  # DEBUG this => D#614
  # DEBUG D.118166 => D#615
  operator delete (_545);

  <bb 759>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_40(D) + 976] ={v} {CLOBBER};
  resx 13

<L156>:
  # DEBUG D#2240 => &this_40(D)->_vc_rr_offset
  # DEBUG this => D#2240
  # DEBUG D#628 => &D#2240->D.35433
  # DEBUG this => D#628
  # DEBUG D#631 => D#2240->D.35433._M_impl._M_finish
  # DEBUG D#630 => D#2240->D.35433._M_impl._M_start
  # DEBUG __first => D#630
  # DEBUG __last => D#631
  # DEBUG D.96142 => NULL
  # DEBUG D#380 => D#630
  # DEBUG D#381 => D#631
  # DEBUG __first => D#380
  # DEBUG __last => D#381
  # DEBUG D#379 => D#381
  # DEBUG D#378 => D#380
  # DEBUG D#376 => D#378
  # DEBUG D#377 => D#379
  # DEBUG D.94815 => D#376
  # DEBUG D.94814 => D#377
  # DEBUG D#629 => &D#2240->D.35433
  # DEBUG this => D#629
  # DEBUG D#627 => D#629->_M_impl._M_end_of_storage
  # DEBUG D#626 => (long int) D#627
  _550 = MEM[(struct _Vector_base *)this_40(D) + 952B]._M_impl._M_start;
  # DEBUG D#625 => (long int) _550
  # DEBUG D#624 => D#626 - D#625
  # DEBUG D#623 => D#624 /[ex] 4
  # DEBUG D#622 => (long unsigned int) D#623
  # DEBUG this => D#629
  # DEBUG __p => _550
  # DEBUG __n => D#622
  if (_550 != 0B)
    goto <bb 761>;
  else
    goto <bb 762>;

  <bb 761>:
  # DEBUG D#620 => &D#629->_M_impl
  # DEBUG D#618 => D#620
  # DEBUG D#619 => D#622
  # DEBUG __p => _550
  # DEBUG __a => D#618
  # DEBUG __n => D#619
  # DEBUG D#617 => D#619
  # DEBUG D#616 => D#618
  # DEBUG D#614 => D#616
  # DEBUG D#615 => D#617
  # DEBUG __p => _550
  # DEBUG this => D#614
  # DEBUG D.118181 => D#615
  operator delete (_550);

  <bb 762>:
  # DEBUG D#621 => &D#629->_M_impl
  # DEBUG this => D#621
  # DEBUG this => D#621
  # DEBUG this => D#621
  MEM[(struct  &)this_40(D) + 952] ={v} {CLOBBER};
  resx 12

<L157>:
  # DEBUG D#2239 => &this_40(D)->_next_buf
  # DEBUG this => D#2239
  # DEBUG D#610 => &D#2239->D.49421
  # DEBUG this => D#610
  # DEBUG D#613 => D#2239->D.49421._M_impl._M_finish
  # DEBUG D#612 => D#2239->D.49421._M_impl._M_start
  # DEBUG __first => D#612
  # DEBUG __last => D#613
  # DEBUG D.96077 => NULL
  # DEBUG D#370 => D#612
  # DEBUG D#371 => D#613
  # DEBUG __first => D#370
  # DEBUG __last => D#371
  # DEBUG D#369 => D#371
  # DEBUG D#368 => D#370
  # DEBUG D#366 => D#368
  # DEBUG D#367 => D#369
  # DEBUG D.94777 => D#366
  # DEBUG D.94776 => D#367
  # DEBUG D#611 => &D#2239->D.49421
  # DEBUG this => D#611
  # DEBUG D#609 => D#611->_M_impl._M_end_of_storage
  # DEBUG D#608 => (long int) D#609
  _551 = MEM[(struct _Vector_base *)this_40(D) + 904B]._M_impl._M_start;
  # DEBUG D#607 => (long int) _551
  # DEBUG D#606 => D#608 - D#607
  # DEBUG D#605 => D#606 /[ex] 8
  # DEBUG D#604 => (long unsigned int) D#605
  # DEBUG this => D#611
  # DEBUG __p => _551
  # DEBUG __n => D#604
  if (_551 != 0B)
    goto <bb 764>;
  else
    goto <bb 765>;

  <bb 764>:
  # DEBUG D#602 => &D#611->_M_impl
  # DEBUG D#600 => D#602
  # DEBUG D#601 => D#604
  # DEBUG __p => _551
  # DEBUG __a => D#600
  # DEBUG __n => D#601
  # DEBUG D#599 => D#601
  # DEBUG D#598 => D#600
  # DEBUG D#596 => D#598
  # DEBUG D#597 => D#599
  # DEBUG __p => _551
  # DEBUG this => D#596
  # DEBUG D.118196 => D#597
  operator delete (_551);

  <bb 765>:
  # DEBUG D#603 => &D#611->_M_impl
  # DEBUG this => D#603
  # DEBUG this => D#603
  # DEBUG this => D#603
  MEM[(struct  &)this_40(D) + 904] ={v} {CLOBBER};
  resx 11

<L158>:
  # DEBUG D#2238 => &this_40(D)->_buf
  # DEBUG this => D#2238
  # DEBUG D#590 => &D#2238->D.48674
  # DEBUG this => D#590
  # DEBUG D#593 => D#2238->D.48674._M_impl._M_finish
  # DEBUG D#592 => D#2238->D.48674._M_impl._M_start
  # DEBUG __first => D#592
  # DEBUG __last => D#593
  # DEBUG D.96002 => NULL
  # DEBUG D#360 => D#592
  # DEBUG D#361 => D#593
  # DEBUG __first => D#360
  # DEBUG __last => D#361
  # DEBUG D#359 => D#361
  # DEBUG D#358 => D#360
  # DEBUG D#356 => D#358
  # DEBUG D#357 => D#359
  # DEBUG D.94733 => D#356
  # DEBUG D.94732 => D#357
  # DEBUG D#591 => &D#2238->D.48674
  # DEBUG this => D#591
  # DEBUG D#589 => D#591->_M_impl._M_end_of_storage
  # DEBUG D#588 => (long int) D#589
  _552 = MEM[(struct _Vector_base *)this_40(D) + 880B]._M_impl._M_start;
  # DEBUG D#587 => (long int) _552
  # DEBUG D#586 => D#588 - D#587
  # DEBUG D#585 => D#586 /[ex] 8
  # DEBUG D#584 => (long unsigned int) D#585
  # DEBUG this => D#591
  # DEBUG __p => _552
  # DEBUG __n => D#584
  if (_552 != 0B)
    goto <bb 767>;
  else
    goto <bb 768>;

  <bb 767>:
  # DEBUG D#582 => &D#591->_M_impl
  # DEBUG D#580 => D#582
  # DEBUG D#581 => D#584
  # DEBUG __p => _552
  # DEBUG __a => D#580
  # DEBUG __n => D#581
  # DEBUG D#579 => D#581
  # DEBUG D#578 => D#580
  # DEBUG D#576 => D#578
  # DEBUG D#577 => D#579
  # DEBUG __p => _552
  # DEBUG this => D#576
  # DEBUG D.118211 => D#577
  operator delete (_552);

  <bb 768>:
  # DEBUG D#583 => &D#591->_M_impl
  # DEBUG this => D#583
  # DEBUG this => D#583
  # DEBUG this => D#583
  MEM[(struct  &)this_40(D) + 880] ={v} {CLOBBER};
  resx 10

<L159>:
  # DEBUG D#2237 => &this_40(D)->_out_queue_credits
  # DEBUG this => D#2237
  _553 = &MEM[(struct map *)this_40(D) + 832B]._M_t;
  # DEBUG this => _553
  _132 = MEM[(struct _Rb_tree_node_base * *)this_40(D) + 848B];
  # DEBUG D#118 => _553
  # DEBUG this => D#118
  std::_Rb_tree<int, std::pair<const int, Credit*>, std::_Select1st<std::pair<const int, Credit*> >, std::less<int>, std::allocator<std::pair<const int, Credit*> > >::_M_erase (_553, _132);
  # DEBUG D#1200 => &MEM[(struct _Rb_tree *)_553]._M_impl
  # DEBUG this => D#1200
  # DEBUG this => D#1200
  # DEBUG this => D#1200
  MEM[(struct  &)this_40(D) + 832] ={v} {CLOBBER};
  resx 9

<L160>:
  # DEBUG D#2236 => &this_40(D)->_crossbar_flits
  # DEBUG this => D#2236
  # DEBUG D#899 => &D#2236->D.46860
  # DEBUG this => D#899
  # DEBUG this => D#2236
  # DEBUG D#73 => &D#2236->D.46860._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#73
  # DEBUG D#907 => MEM[(const struct iterator &)D#2236 + 48]._M_cur
  # DEBUG D.98057 => D#907
  # DEBUG D#906 => MEM[(const struct iterator &)D#2236 + 48]._M_first
  # DEBUG D.98058 => D#906
  # DEBUG D#905 => MEM[(const struct iterator &)D#2236 + 48]._M_last
  # DEBUG D.98059 => D#905
  # DEBUG D#904 => MEM[(const struct iterator &)D#2236 + 48]._M_node
  # DEBUG D.98060 => D#904
  # DEBUG this => D#2236
  # DEBUG D#72 => &D#2236->D.46860._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#72
  # DEBUG D#903 => MEM[(const struct iterator &)D#2236 + 16]._M_cur
  # DEBUG D.98053 => D#903
  # DEBUG D#902 => MEM[(const struct iterator &)D#2236 + 16]._M_first
  # DEBUG D.98054 => D#902
  # DEBUG D#901 => MEM[(const struct iterator &)D#2236 + 16]._M_last
  # DEBUG D.98055 => D#901
  # DEBUG D#900 => MEM[(const struct iterator &)D#2236 + 16]._M_node
  # DEBUG D.98056 => D#900
  # DEBUG D#114 => D#2236
  # DEBUG this => D#114
  # DEBUG __first => D#115
  # DEBUG __last => D#116
  # DEBUG D.98041 => D#117
  _57 = &MEM[(struct deque *)this_40(D) + 752B].D.46860;
  std::_Deque_base<std::pair<int, std::pair<Flit*, std::pair<int, int> > >, std::allocator<std::pair<int, std::pair<Flit*, std::pair<int, int> > > > >::~_Deque_base (_57);
  MEM[(struct  &)this_40(D) + 752] ={v} {CLOBBER};
  resx 8

<L350>:
  goto <bb 773> (<L161>);

<L201>:

<L161>:
  # DEBUG D#2258 => &this_40(D)->_sw_alloc_vcs
  # DEBUG this => D#2258
  # DEBUG D#882 => &D#2258->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#2258
  # DEBUG D#68 => &D#2258->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#2258 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#2258 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#2258 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#2258 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#2258
  # DEBUG D#67 => &D#2258->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#2258 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#2258 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#2258 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#2258 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#2258
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_56);
  MEM[(struct  &)this_40(D) + 672] ={v} {CLOBBER};
  resx 7

<L351>:
  goto <bb 776> (<L162>);

<L200>:

<L162>:
  # DEBUG D#2260 => &this_40(D)->_sw_hold_vcs
  # DEBUG this => D#2260
  # DEBUG D#882 => &D#2260->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#2260
  # DEBUG D#68 => &D#2260->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#2260 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#2260 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#2260 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#2260 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#2260
  # DEBUG D#67 => &D#2260->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#2260 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#2260 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#2260 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#2260 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#2260
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_55);
  MEM[(struct  &)this_40(D) + 592] ={v} {CLOBBER};
  resx 6

<L352>:
  goto <bb 779> (<L163>);

<L199>:

<L163>:
  # DEBUG D#2262 => &this_40(D)->_vc_alloc_vcs
  # DEBUG this => D#2262
  # DEBUG D#882 => &D#2262->D.45936
  # DEBUG this => D#882
  # DEBUG this => D#2262
  # DEBUG D#68 => &D#2262->D.45936._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#68
  # DEBUG D#890 => MEM[(const struct iterator &)D#2262 + 48]._M_cur
  # DEBUG D.97966 => D#890
  # DEBUG D#889 => MEM[(const struct iterator &)D#2262 + 48]._M_first
  # DEBUG D.97967 => D#889
  # DEBUG D#888 => MEM[(const struct iterator &)D#2262 + 48]._M_last
  # DEBUG D.97968 => D#888
  # DEBUG D#887 => MEM[(const struct iterator &)D#2262 + 48]._M_node
  # DEBUG D.97969 => D#887
  # DEBUG this => D#2262
  # DEBUG D#67 => &D#2262->D.45936._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#67
  # DEBUG D#886 => MEM[(const struct iterator &)D#2262 + 16]._M_cur
  # DEBUG D.97962 => D#886
  # DEBUG D#885 => MEM[(const struct iterator &)D#2262 + 16]._M_first
  # DEBUG D.97963 => D#885
  # DEBUG D#884 => MEM[(const struct iterator &)D#2262 + 16]._M_last
  # DEBUG D.97964 => D#884
  # DEBUG D#883 => MEM[(const struct iterator &)D#2262 + 16]._M_node
  # DEBUG D.97965 => D#883
  # DEBUG D#110 => D#2262
  # DEBUG this => D#110
  # DEBUG __first => D#111
  # DEBUG __last => D#112
  # DEBUG D.97950 => D#113
  std::_Deque_base<std::pair<int, std::pair<std::pair<int, int>, int> >, std::allocator<std::pair<int, std::pair<std::pair<int, int>, int> > > >::~_Deque_base (_54);
  MEM[(struct  &)this_40(D) + 512] ={v} {CLOBBER};
  resx 5

<L353>:
  goto <bb 782> (<L164>);

<L197>:

<L164>:
  # DEBUG D#2264 => &this_40(D)->_route_vcs
  # DEBUG this => D#2264
  # DEBUG D#865 => &D#2264->D.45014
  # DEBUG this => D#865
  # DEBUG this => D#2264
  # DEBUG D#65 => &D#2264->D.45014._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#65
  # DEBUG D#873 => MEM[(const struct iterator &)D#2264 + 48]._M_cur
  # DEBUG D.97875 => D#873
  # DEBUG D#872 => MEM[(const struct iterator &)D#2264 + 48]._M_first
  # DEBUG D.97876 => D#872
  # DEBUG D#871 => MEM[(const struct iterator &)D#2264 + 48]._M_last
  # DEBUG D.97877 => D#871
  # DEBUG D#870 => MEM[(const struct iterator &)D#2264 + 48]._M_node
  # DEBUG D.97878 => D#870
  # DEBUG this => D#2264
  # DEBUG D#64 => &D#2264->D.45014._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#64
  # DEBUG D#869 => MEM[(const struct iterator &)D#2264 + 16]._M_cur
  # DEBUG D.97871 => D#869
  # DEBUG D#868 => MEM[(const struct iterator &)D#2264 + 16]._M_first
  # DEBUG D.97872 => D#868
  # DEBUG D#867 => MEM[(const struct iterator &)D#2264 + 16]._M_last
  # DEBUG D.97873 => D#867
  # DEBUG D#866 => MEM[(const struct iterator &)D#2264 + 16]._M_node
  # DEBUG D.97874 => D#866
  # DEBUG D#106 => D#2264
  # DEBUG this => D#106
  # DEBUG __first => D#107
  # DEBUG __last => D#108
  # DEBUG D.97859 => D#109
  _52 = &MEM[(struct deque *)this_40(D) + 432B].D.45014;
  std::_Deque_base<std::pair<int, std::pair<int, int> >, std::allocator<std::pair<int, std::pair<int, int> > > >::~_Deque_base (_52);
  MEM[(struct  &)this_40(D) + 432] ={v} {CLOBBER};
  resx 4

<L354>:
  goto <bb 785> (<L165>);

<L195>:

<L165>:
  # DEBUG D#2266 => &this_40(D)->_proc_credits
  # DEBUG this => D#2266
  # DEBUG D#848 => &D#2266->D.44092
  # DEBUG this => D#848
  # DEBUG this => D#2266
  # DEBUG D#100 => &D#2266->D.44092._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#100
  # DEBUG D#856 => MEM[(const struct iterator &)D#2266 + 48]._M_cur
  # DEBUG D.97784 => D#856
  # DEBUG D#855 => MEM[(const struct iterator &)D#2266 + 48]._M_first
  # DEBUG D.97785 => D#855
  # DEBUG D#854 => MEM[(const struct iterator &)D#2266 + 48]._M_last
  # DEBUG D.97786 => D#854
  # DEBUG D#853 => MEM[(const struct iterator &)D#2266 + 48]._M_node
  # DEBUG D.97787 => D#853
  # DEBUG this => D#2266
  # DEBUG D#101 => &D#2266->D.44092._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#101
  # DEBUG D#852 => MEM[(const struct iterator &)D#2266 + 16]._M_cur
  # DEBUG D.97780 => D#852
  # DEBUG D#851 => MEM[(const struct iterator &)D#2266 + 16]._M_first
  # DEBUG D.97781 => D#851
  # DEBUG D#850 => MEM[(const struct iterator &)D#2266 + 16]._M_last
  # DEBUG D.97782 => D#850
  # DEBUG D#849 => MEM[(const struct iterator &)D#2266 + 16]._M_node
  # DEBUG D.97783 => D#849
  # DEBUG D#102 => D#2266
  # DEBUG this => D#102
  # DEBUG __first => D#103
  # DEBUG __last => D#104
  # DEBUG D.97768 => D#105
  _422 = &MEM[(struct deque *)this_40(D) + 352B].D.44092;
  std::_Deque_base<std::pair<int, std::pair<Credit*, int> >, std::allocator<std::pair<int, std::pair<Credit*, int> > > >::~_Deque_base (_422);
  MEM[(struct  &)this_40(D) + 352] ={v} {CLOBBER};
  resx 3

<L355>:
  goto <bb 788> (<L166>);

<L194>:

<L166>:
  # DEBUG D#2268 => &this_40(D)->_in_queue_flits
  # DEBUG this => D#2268
  _554 = &MEM[(struct map *)this_40(D) + 304B]._M_t;
  # DEBUG this => _554
  _125 = MEM[(struct _Rb_tree_node_base * *)this_40(D) + 320B];
  # DEBUG D#99 => _554
  # DEBUG this => D#99
  std::_Rb_tree<int, std::pair<const int, Flit*>, std::_Select1st<std::pair<const int, Flit*> >, std::less<int>, std::allocator<std::pair<const int, Flit*> > >::_M_erase (_554, _125);
  # DEBUG D#1134 => &MEM[(struct _Rb_tree *)_554]._M_impl
  # DEBUG this => D#1134
  # DEBUG this => D#1134
  # DEBUG this => D#1134
  MEM[(struct  &)this_40(D) + 304] ={v} {CLOBBER};
  resx 2

<L167>:
  Router::~Router (_41);
  resx 1

  <bb 790>:
  # DEBUG __first => _1572
  # DEBUG __last => _1569
  # DEBUG D#929 => &__first
  # DEBUG D.98358 => D#929
  # DEBUG __first => _1572
  # DEBUG __last => _1569
  __last.18_1578 = (long int) _1569;
  __first.19_1579 = (long int) _1572;
  _1580 = __last.18_1578 - __first.19_1579;
  __dnew.15_1581 = (long unsigned int) _1580;
  __dnew = __dnew.15_1581;
  if (__dnew.15_1581 > 15)
    goto <bb 233>;
  else
    goto <bb 236>;

  <bb 791>:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

<L356>:
  goto <bb 254> (<L190>);

  <bb 793>:
  this_40(D)->_spec_sw_allocator = 0B;
  goto <bb 340>;

  <bb 794>:
  _316 = this_40(D)->D.51790._outputs;
  _317 = this_40(D)->D.51790._output_speedup;
  _318 = _316 * _317;
  _319 = this_40(D)->D.51790._inputs;
  _320 = this_40(D)->D.51790._input_speedup;
  _321 = _319 * _320;
  # DEBUG D#120 => &D.62812
  # DEBUG this => D#120
  # DEBUG D#119 => D#120
  # DEBUG this => D#119
  # DEBUG D#921 => &D.62812
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.248 (&D.62811, "spec_sw_allocator");
  goto <bb 330>;

<L357>:
  pretmp_1009 = &this_40(D)->_noq_next_output_port;
  pretmp_978 = &this_40(D)->_noq_next_vc_start;
  pretmp_945 = &this_40(D)->_noq_next_vc_end;
  pretmp_2091 = &this_40(D)->_output_buffer;
  pretmp_878 = &this_40(D)->_credit_buffer;
  goto <bb 723> (<L142>);

  <bb 796>:
  _1468 = __n_377 * 4;
  _2270 = (int *) _1468;
  D.62822.D.35433._M_impl._M_end_of_storage = _2270;
  # DEBUG D#1407 => &D.62822
  # DEBUG D#1407 => &D.62822
  # DEBUG D#1408 => &__value
  # DEBUG __n => __n_377
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.129516 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_377
  # DEBUG __value => D#1394
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_377
  # DEBUG __niter => __n_377
  # DEBUG __first => 0B
  goto <bb 381>;

  <bb 797>:
  _9 = __n_386 * 4;
  _2 = (int *) _9;
  D.62824.D.35433._M_impl._M_end_of_storage = _2;
  # DEBUG D#1407 => &D.62824
  # DEBUG D#1407 => &D.62824
  # DEBUG D#1408 => &__value
  # DEBUG __n => __n_386
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.129611 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_386
  # DEBUG __value => D#1394
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_386
  # DEBUG __niter => __n_386
  # DEBUG __first => 0B
  goto <bb 410>;

  <bb 798>:
  _1528 = __n_395 * 4;
  _1510 = (int *) _1528;
  D.62826.D.35433._M_impl._M_end_of_storage = _1510;
  # DEBUG D#1407 => &D.62826
  # DEBUG D#1407 => &D.62826
  # DEBUG D#1408 => &__value
  # DEBUG __n => __n_395
  # DEBUG D#1405 => D#1407
  # DEBUG this => D#1405
  # DEBUG this => D#1407
  # DEBUG D#1406 => D#1408
  # DEBUG __value => D#1406
  # DEBUG D#1404 => &D#1405->D.35433
  # DEBUG this => D#1404
  # DEBUG D#1402 => D#1406
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG D#1401 => D#1402
  # DEBUG __x => D#1401
  # DEBUG D.129706 => D#1403
  # DEBUG D#1400 => D#1401
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG D#1399 => D#1400
  # DEBUG __x => D#1399
  # DEBUG __assignable => 1
  # DEBUG D#1398 => D#1399
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG D#1397 => D#1398
  # DEBUG __x => D#1397
  # DEBUG D#1396 => D#1397
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG D#1395 => D#1396
  # DEBUG __value => D#1395
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#1394 => D#1395
  # DEBUG __first => NULL
  # DEBUG __n => __n_395
  # DEBUG __value => D#1394
  # DEBUG __tmp => -1
  # DEBUG __niter => __n_395
  # DEBUG __niter => __n_395
  # DEBUG __first => 0B
  goto <bb 439>;

}


