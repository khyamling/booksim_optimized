
;; Function virtual void EventRouter::Display(std::ostream&) const (_ZNK11EventRouter7DisplayERSo, funcdef_no=2175, decl_uid=54604, cgraph_uid=524, symbol_order=525)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void EventRouter::Display(std::ostream&) const (const struct EventRouter * const this, struct ostream & os)
{
  int input;
  int _5;
  long unsigned int _6;
  struct Buffer * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;
  struct Buffer * * const _13;
  long unsigned int _14;
  struct Buffer * const & _15;
  int _17;

  <bb 2>:
  # DEBUG input => 0
  # DEBUG input => 0
  _17 = this_4(D)->D.54631._inputs;
  if (_17 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # input_19 = PHI <0(4), input_12(6)>
  # DEBUG input => input_19
  _6 = (long unsigned int) input_19;
  # DEBUG D#85 => &this_4(D)->_buf
  _13 = MEM[(struct Buffer * * *)this_4(D) + 288B];
  # DEBUG D#84 => D#85
  # DEBUG __n => _6
  # DEBUG this => D#84
  _14 = _6 * 8;
  _15 = _13 + _14;
  _7 = *_15;
  _8 = _7->D.45045._vptr.Module;
  _9 = MEM[(int (*__vtbl_ptr_type) () *)_8 + 16B];
  OBJ_TYPE_REF(_9;(const struct Buffer)_7->2) (_7, os_10(D));
  input_12 = input_19 + 1;
  # DEBUG input => input_12
  # DEBUG input => input_12
  _5 = this_4(D)->D.54631._inputs;
  if (_5 <= input_12)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_create_nodes(std::_Deque_base<_Tp, _Alloc>::_Map_pointer, std::_Deque_base<_Tp, _Alloc>::_Map_pointer) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>] (_ZNSt11_Deque_baseIPN11EventRouter13tArrivalEventESaIS2_EE15_M_create_nodesEPPS2_S6_.isra.428, funcdef_no=5563, decl_uid=112627, cgraph_uid=1723, symbol_order=5162)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
void std::_Deque_base<_Tp, _Alloc>::_M_create_nodes(std::_Deque_base<_Tp, _Alloc>::_Map_pointer, std::_Deque_base<_Tp, _Alloc>::_Map_pointer) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>] (struct tArrivalEvent * * * __nstart, struct tArrivalEvent * * * __nfinish)
{
  struct tArrivalEvent * * _3;
  void * _5;
  struct tArrivalEvent * * _7;

  <bb 2>:
  # DEBUG this s=> this
  # DEBUG __cur => __nstart_9(D)
  if (__nfinish_2(D) <= __nstart_9(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __nstart_21 = PHI <__nstart_9(D)(4), __nstart_4(7)>
  # DEBUG __cur => __nstart_21
  # DEBUG D#1652 => D#1653
  # DEBUG this => D#1652
  # DEBUG D#1651 => D#1652
  # DEBUG __size => 8
  # DEBUG D#1650 => &D#1651->_M_impl
  # DEBUG D#1644 => D#1650
  # DEBUG __n => NULL
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1641
  # DEBUG D.112651 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  _3 = operator new (512);

  <bb 6>:
  *__nstart_21 = _3;
  __nstart_4 = __nstart_21 + 8;
  # DEBUG __cur => __nstart_4
  # DEBUG __cur => __nstart_4
  if (__nfinish_2(D) <= __nstart_4)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 5>;

  # __nstart_19 = PHI <__nstart_21(5)>
<L0>:
  _5 = __builtin_eh_pointer (3);
  __cxa_begin_catch (_5);
  # DEBUG this => D#1654
  # DEBUG __nstart => __nstart_9(D)
  # DEBUG __nfinish => __nstart_19
  # DEBUG __n => __nstart_9(D)
  # DEBUG __n => __nstart_9(D)
  if (__nstart_9(D) >= __nstart_19)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  __cxa_rethrow ();

  <bb 10>:

  <bb 11>:
  # __nstart_24 = PHI <__nstart_9(D)(10), __nstart_8(12)>
  # DEBUG __n => __nstart_24
  _7 = *__nstart_24;
  # DEBUG this => D#1655
  # DEBUG __p => _7
  # DEBUG __size => 8
  # DEBUG D#1158 => &D#1656->_M_impl
  # DEBUG D#1138 => D#1158
  # DEBUG __p => _7
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _7
  # DEBUG this => D#1134
  # DEBUG D.112644 => D#1135
  operator delete (_7);
  __nstart_8 = __nstart_24 + 8;
  # DEBUG __n => __nstart_8
  # DEBUG __n => __nstart_8
  if (__nstart_8 >= __nstart_19)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 11>;

<L2>:
  __cxa_end_catch ();
  resx 2

}



;; Function _ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _Allocator = std::allocator<Credit*>] (_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.634, funcdef_no=5769, decl_uid=129732, cgraph_uid=3027, symbol_order=6609)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; _Allocator = std::allocator<Credit*>] (struct _Deque_iterator & restrict __first, struct _Deque_iterator & restrict __last, struct _Deque_iterator & restrict __result)
{
  struct Credit * * * SR.4181;
  struct Credit * * SR.4180;
  struct Credit * * SR.4179;
  struct Credit * * SR.4178;
  struct Credit * * * SR.4177;
  struct Credit * * SR.4176;
  struct Credit * * SR.4175;
  _Distance __n;
  struct _Deque_iterator D.133070;
  struct _Deque_iterator D.133069;
  struct _Deque_iterator D.133068;
  struct iterator_type D.133054;
  struct iterator_type D.133053;
  struct iterator_type D.133052;
  struct _Deque_iterator D.133030;
  struct iterator_type D.133029;
  struct iterator_type D.133028;
  struct _Deque_iterator D.133010;
  struct _Deque_iterator D.133009;
  struct _Deque_iterator D.133008;
  struct _Deque_iterator D.132998;
  struct _Deque_iterator D.132997;
  struct _Deque_iterator D.132996;
  struct _Deque_iterator D.132983;
  struct _Deque_iterator D.132982;
  struct _Deque_iterator D.132981;
  struct _Deque_iterator D.129746;
  struct _Deque_iterator D.129745;
  struct _Deque_iterator D.129744;
  struct Credit * * _3;
  struct Credit * * _4;
  struct Credit * * _5;
  struct Credit * * * _6;
  struct Credit * * _8;
  struct Credit * * _9;
  struct Credit * * * _11;
  struct Credit * * _13;
  struct Credit * * _15;
  struct Credit * * * _16;
  long int _106;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _114;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _121;
  long int _123;
  long int _124;
  long int _125;
  struct Credit * _130;
  struct Credit * * _132;
  struct Credit * * _135;
  struct Credit * * * _143;
  struct Credit * * _144;
  struct Credit * * _145;
  struct Credit * * * _147;
  struct Credit * * _148;
  struct Credit * * _149;

  <bb 2>:
  # DEBUG __alloc s=> __alloc
  # DEBUG D#2650 s=> __alloc
  # DEBUG this => &D.129746
  # DEBUG __x => __result_2(D)
  _3 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  # DEBUG this => &D.129745
  # DEBUG __x => __last_7(D)
  _8 = MEM[(const struct iterator &)__last_7(D)]._M_cur;
  _9 = MEM[(const struct iterator &)__last_7(D)]._M_first;
  _11 = MEM[(const struct iterator &)__last_7(D)]._M_node;
  # DEBUG this => &D.129744
  # DEBUG __x => __first_12(D)
  _13 = MEM[(const struct iterator &)__first_12(D)]._M_cur;
  _15 = MEM[(const struct iterator &)__first_12(D)]._M_last;
  _16 = MEM[(const struct iterator &)__first_12(D)]._M_node;
  # DEBUG D#2649 => D#2650
  # DEBUG __first => &D.129744
  # DEBUG __last => &D.129745
  # DEBUG __result => &D.129746
  # DEBUG D.132974 => D#2649
  # DEBUG this => &D.132981
  # DEBUG __x => &D.129746
  # DEBUG this => &D.132982
  # DEBUG __x => &D.129745
  # DEBUG this => &D.132983
  # DEBUG __x => &D.129744
  # DEBUG __first => &D.132983
  # DEBUG __last => &D.132982
  # DEBUG __result => &D.132981
  # DEBUG __assignable => 1
  # DEBUG this => &D.132998
  # DEBUG __x => &D.132981
  # DEBUG this => &D.132997
  # DEBUG __x => &D.132982
  # DEBUG this => &D.132996
  # DEBUG __x => &D.132983
  # DEBUG __first => &D.132996
  # DEBUG __last => &D.132997
  # DEBUG __result => &D.132998
  # DEBUG this => &D.133010
  # DEBUG __x => &D.132998
  # DEBUG this => &D.133009
  # DEBUG __x => &D.132997
  # DEBUG this => &D.133008
  # DEBUG __x => &D.132996
  # DEBUG __first => &D.133008
  # DEBUG __last => &D.133009
  # DEBUG __result => &D.133010
  # DEBUG this => &D.133030
  # DEBUG __x => &D.133010
  # DEBUG this => NULL
  # DEBUG __x => &D.133009
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133029
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133008
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133028
  # DEBUG __x => NULL
  # DEBUG __first => &D.133028
  # DEBUG __last => &D.133029
  # DEBUG __result => &D.133030
  # DEBUG this => NULL
  # DEBUG __x => &D.133030
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133054
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133029
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133053
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133028
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133052
  # DEBUG __x => NULL
  # DEBUG __first => &D.133052
  # DEBUG __last => &D.133053
  # DEBUG __result => &D.133054
  # DEBUG __simple => 0
  # DEBUG this => &D.133070
  # DEBUG __x => &D.133054
  # DEBUG this => &D.133069
  # DEBUG __x => &D.133053
  # DEBUG this => &D.133068
  # DEBUG __x => &D.133052
  # DEBUG __first => &D.133068
  # DEBUG __last => &D.133069
  # DEBUG __result => &D.133070
  # DEBUG __x => &D.133069
  # DEBUG __y => &D.133068
  # DEBUG __size => 8
  _106 = (long int) _11;
  _108 = (long int) _16;
  _109 = _106 - _108;
  _110 = _109 /[ex] 8;
  _111 = _110 + -1;
  _112 = _111 * 64;
  _114 = (long int) _8;
  _116 = (long int) _9;
  _117 = _114 - _116;
  _118 = _117 /[ex] 8;
  _119 = _112 + _118;
  _121 = (long int) _15;
  _123 = (long int) _13;
  _124 = _121 - _123;
  _125 = _124 /[ex] 8;
  __n_126 = _119 + _125;
  # DEBUG __n => __n_126
  # DEBUG __n => __n_126
  if (__n_126 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_20 = PHI <__n_126(3), __n_137(9)>
  # SR.4175_235 = PHI <_13(3), SR.4175_234(9)>
  # SR.4176_233 = PHI <_15(3), SR.4176_232(9)>
  # SR.4177_231 = PHI <_16(3), SR.4177_230(9)>
  # SR.4178_229 = PHI <_3(3), SR.4178_227(9)>
  # SR.4179_224 = PHI <_4(3), SR.4179_223(9)>
  # SR.4180_216 = PHI <_5(3), SR.4180_215(9)>
  # SR.4181_213 = PHI <_6(3), SR.4181_150(9)>
  # DEBUG __n => __n_20
  # DEBUG D#254 => &D.133070
  # DEBUG this => D#254
  # DEBUG D#254 => &D.133068
  # DEBUG this => D#254
  _130 = *SR.4175_235;
  *SR.4178_229 = _130;
  # DEBUG this => &D.133068
  _132 = SR.4175_235 + 8;
  if (_132 == SR.4176_233)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.133068
  _143 = SR.4177_231 + 8;
  # DEBUG this => &D.133068
  # DEBUG __new_node => _143
  _144 = MEM[(struct Credit * * *)SR.4177_231 + 8B];
  # DEBUG __size => 8
  _145 = _144 + 512;

  <bb 6>:
  # SR.4175_234 = PHI <_132(4), _144(5)>
  # SR.4176_232 = PHI <SR.4176_233(4), _145(5)>
  # SR.4177_230 = PHI <SR.4177_231(4), _143(5)>
  # DEBUG this => &D.133070
  _135 = SR.4178_229 + 8;
  if (_135 == SR.4180_216)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.133070
  _147 = SR.4181_213 + 8;
  # DEBUG this => &D.133070
  # DEBUG __new_node => _147
  _148 = MEM[(struct Credit * * *)SR.4181_213 + 8B];
  # DEBUG __size => 8
  _149 = _148 + 512;

  <bb 8>:
  # SR.4178_227 = PHI <_135(6), _148(7)>
  # SR.4179_223 = PHI <SR.4179_224(6), _148(7)>
  # SR.4180_215 = PHI <SR.4180_216(6), _149(7)>
  # SR.4181_150 = PHI <SR.4181_213(6), _147(7)>
  __n_137 = __n_20 + -1;
  # DEBUG __n => __n_137
  # DEBUG __n => __n_137
  if (__n_137 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.4181_19 = PHI <SR.4181_150(8)>
  # SR.4180_18 = PHI <SR.4180_215(8)>
  # SR.4179_23 = PHI <SR.4179_223(8)>
  # SR.4178_10 = PHI <SR.4178_227(8)>

  <bb 12>:

  <bb 11>:
  # SR.4178_226 = PHI <SR.4178_10(12), _3(2)>
  # SR.4179_221 = PHI <SR.4179_23(12), _4(2)>
  # SR.4180_214 = PHI <SR.4180_18(12), _5(2)>
  # SR.4181_127 = PHI <SR.4181_19(12), _6(2)>
  # DEBUG this => _1(D)
  # DEBUG __x => &D.133070
  _1(D)->_M_cur = SR.4178_226;
  _1(D)->_M_first = SR.4179_221;
  _1(D)->_M_last = SR.4180_214;
  _1(D)->_M_node = SR.4181_127;
  D.133068 ={v} {CLOBBER};
  D.133069 ={v} {CLOBBER};
  D.133070 ={v} {CLOBBER};
  D.133052 ={v} {CLOBBER};
  D.133053 ={v} {CLOBBER};
  D.133054 ={v} {CLOBBER};
  D.133028 ={v} {CLOBBER};
  D.133029 ={v} {CLOBBER};
  D.133030 ={v} {CLOBBER};
  D.133008 ={v} {CLOBBER};
  D.133009 ={v} {CLOBBER};
  D.133010 ={v} {CLOBBER};
  D.132996 ={v} {CLOBBER};
  D.132997 ={v} {CLOBBER};
  D.132998 ={v} {CLOBBER};
  D.132983 ={v} {CLOBBER};
  D.132982 ={v} {CLOBBER};
  D.132981 ={v} {CLOBBER};
  D.129744 ={v} {CLOBBER};
  D.129745 ={v} {CLOBBER};
  D.129746 ={v} {CLOBBER};
  return _1(D);

}



;; Function _ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>; _ForwardIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>; _Allocator = std::allocator<EventRouter::tTransportEvent*>] (_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter15tTransportEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.640, funcdef_no=5775, decl_uid=131206, cgraph_uid=3053, symbol_order=6839)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>; _ForwardIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>; _Allocator = std::allocator<EventRouter::tTransportEvent*>] (struct _Deque_iterator & restrict __first, struct _Deque_iterator & restrict __last, struct _Deque_iterator & restrict __result)
{
  struct tTransportEvent * * * SR.4198;
  struct tTransportEvent * * SR.4197;
  struct tTransportEvent * * SR.4196;
  struct tTransportEvent * * SR.4195;
  struct tTransportEvent * * * SR.4194;
  struct tTransportEvent * * SR.4193;
  struct tTransportEvent * * SR.4192;
  _Distance __n;
  struct _Deque_iterator D.133218;
  struct _Deque_iterator D.133217;
  struct _Deque_iterator D.133216;
  struct iterator_type D.133202;
  struct iterator_type D.133201;
  struct iterator_type D.133200;
  struct _Deque_iterator D.133178;
  struct iterator_type D.133177;
  struct iterator_type D.133176;
  struct _Deque_iterator D.133158;
  struct _Deque_iterator D.133157;
  struct _Deque_iterator D.133156;
  struct _Deque_iterator D.133146;
  struct _Deque_iterator D.133145;
  struct _Deque_iterator D.133144;
  struct _Deque_iterator D.133131;
  struct _Deque_iterator D.133130;
  struct _Deque_iterator D.133129;
  struct _Deque_iterator D.131220;
  struct _Deque_iterator D.131219;
  struct _Deque_iterator D.131218;
  struct tTransportEvent * * _3;
  struct tTransportEvent * * _4;
  struct tTransportEvent * * _5;
  struct tTransportEvent * * * _6;
  struct tTransportEvent * * _8;
  struct tTransportEvent * * _9;
  struct tTransportEvent * * * _11;
  struct tTransportEvent * * _13;
  struct tTransportEvent * * _15;
  struct tTransportEvent * * * _16;
  long int _106;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _114;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _121;
  long int _123;
  long int _124;
  long int _125;
  struct tTransportEvent * _130;
  struct tTransportEvent * * _132;
  struct tTransportEvent * * _135;
  struct tTransportEvent * * * _143;
  struct tTransportEvent * * _144;
  struct tTransportEvent * * _145;
  struct tTransportEvent * * * _147;
  struct tTransportEvent * * _148;
  struct tTransportEvent * * _149;

  <bb 2>:
  # DEBUG __alloc s=> __alloc
  # DEBUG D#2730 s=> __alloc
  # DEBUG this => &D.131220
  # DEBUG __x => __result_2(D)
  _3 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  # DEBUG this => &D.131219
  # DEBUG __x => __last_7(D)
  _8 = MEM[(const struct iterator &)__last_7(D)]._M_cur;
  _9 = MEM[(const struct iterator &)__last_7(D)]._M_first;
  _11 = MEM[(const struct iterator &)__last_7(D)]._M_node;
  # DEBUG this => &D.131218
  # DEBUG __x => __first_12(D)
  _13 = MEM[(const struct iterator &)__first_12(D)]._M_cur;
  _15 = MEM[(const struct iterator &)__first_12(D)]._M_last;
  _16 = MEM[(const struct iterator &)__first_12(D)]._M_node;
  # DEBUG D#2729 => D#2730
  # DEBUG __first => &D.131218
  # DEBUG __last => &D.131219
  # DEBUG __result => &D.131220
  # DEBUG D.133122 => D#2729
  # DEBUG this => &D.133129
  # DEBUG __x => &D.131220
  # DEBUG this => &D.133130
  # DEBUG __x => &D.131219
  # DEBUG this => &D.133131
  # DEBUG __x => &D.131218
  # DEBUG __first => &D.133131
  # DEBUG __last => &D.133130
  # DEBUG __result => &D.133129
  # DEBUG __assignable => 1
  # DEBUG this => &D.133146
  # DEBUG __x => &D.133129
  # DEBUG this => &D.133145
  # DEBUG __x => &D.133130
  # DEBUG this => &D.133144
  # DEBUG __x => &D.133131
  # DEBUG __first => &D.133144
  # DEBUG __last => &D.133145
  # DEBUG __result => &D.133146
  # DEBUG this => &D.133158
  # DEBUG __x => &D.133146
  # DEBUG this => &D.133157
  # DEBUG __x => &D.133145
  # DEBUG this => &D.133156
  # DEBUG __x => &D.133144
  # DEBUG __first => &D.133156
  # DEBUG __last => &D.133157
  # DEBUG __result => &D.133158
  # DEBUG this => &D.133178
  # DEBUG __x => &D.133158
  # DEBUG this => NULL
  # DEBUG __x => &D.133157
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133177
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133156
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133176
  # DEBUG __x => NULL
  # DEBUG __first => &D.133176
  # DEBUG __last => &D.133177
  # DEBUG __result => &D.133178
  # DEBUG this => NULL
  # DEBUG __x => &D.133178
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133202
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133177
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133201
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133176
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133200
  # DEBUG __x => NULL
  # DEBUG __first => &D.133200
  # DEBUG __last => &D.133201
  # DEBUG __result => &D.133202
  # DEBUG __simple => 0
  # DEBUG this => &D.133218
  # DEBUG __x => &D.133202
  # DEBUG this => &D.133217
  # DEBUG __x => &D.133201
  # DEBUG this => &D.133216
  # DEBUG __x => &D.133200
  # DEBUG __first => &D.133216
  # DEBUG __last => &D.133217
  # DEBUG __result => &D.133218
  # DEBUG __x => &D.133217
  # DEBUG __y => &D.133216
  # DEBUG __size => 8
  _106 = (long int) _11;
  _108 = (long int) _16;
  _109 = _106 - _108;
  _110 = _109 /[ex] 8;
  _111 = _110 + -1;
  _112 = _111 * 64;
  _114 = (long int) _8;
  _116 = (long int) _9;
  _117 = _114 - _116;
  _118 = _117 /[ex] 8;
  _119 = _112 + _118;
  _121 = (long int) _15;
  _123 = (long int) _13;
  _124 = _121 - _123;
  _125 = _124 /[ex] 8;
  __n_126 = _119 + _125;
  # DEBUG __n => __n_126
  # DEBUG __n => __n_126
  if (__n_126 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_20 = PHI <__n_126(3), __n_137(9)>
  # SR.4192_235 = PHI <_13(3), SR.4192_234(9)>
  # SR.4193_233 = PHI <_15(3), SR.4193_232(9)>
  # SR.4194_231 = PHI <_16(3), SR.4194_230(9)>
  # SR.4195_229 = PHI <_3(3), SR.4195_227(9)>
  # SR.4196_224 = PHI <_4(3), SR.4196_223(9)>
  # SR.4197_216 = PHI <_5(3), SR.4197_215(9)>
  # SR.4198_213 = PHI <_6(3), SR.4198_150(9)>
  # DEBUG __n => __n_20
  # DEBUG D#266 => &D.133218
  # DEBUG this => D#266
  # DEBUG D#266 => &D.133216
  # DEBUG this => D#266
  _130 = *SR.4192_235;
  *SR.4195_229 = _130;
  # DEBUG this => &D.133216
  _132 = SR.4192_235 + 8;
  if (_132 == SR.4193_233)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.133216
  _143 = SR.4194_231 + 8;
  # DEBUG this => &D.133216
  # DEBUG __new_node => _143
  _144 = MEM[(struct tTransportEvent * * *)SR.4194_231 + 8B];
  # DEBUG __size => 8
  _145 = _144 + 512;

  <bb 6>:
  # SR.4192_234 = PHI <_132(4), _144(5)>
  # SR.4193_232 = PHI <SR.4193_233(4), _145(5)>
  # SR.4194_230 = PHI <SR.4194_231(4), _143(5)>
  # DEBUG this => &D.133218
  _135 = SR.4195_229 + 8;
  if (_135 == SR.4197_216)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.133218
  _147 = SR.4198_213 + 8;
  # DEBUG this => &D.133218
  # DEBUG __new_node => _147
  _148 = MEM[(struct tTransportEvent * * *)SR.4198_213 + 8B];
  # DEBUG __size => 8
  _149 = _148 + 512;

  <bb 8>:
  # SR.4195_227 = PHI <_135(6), _148(7)>
  # SR.4196_223 = PHI <SR.4196_224(6), _148(7)>
  # SR.4197_215 = PHI <SR.4197_216(6), _149(7)>
  # SR.4198_150 = PHI <SR.4198_213(6), _147(7)>
  __n_137 = __n_20 + -1;
  # DEBUG __n => __n_137
  # DEBUG __n => __n_137
  if (__n_137 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.4198_19 = PHI <SR.4198_150(8)>
  # SR.4197_18 = PHI <SR.4197_215(8)>
  # SR.4196_23 = PHI <SR.4196_223(8)>
  # SR.4195_10 = PHI <SR.4195_227(8)>

  <bb 12>:

  <bb 11>:
  # SR.4195_226 = PHI <SR.4195_10(12), _3(2)>
  # SR.4196_221 = PHI <SR.4196_23(12), _4(2)>
  # SR.4197_214 = PHI <SR.4197_18(12), _5(2)>
  # SR.4198_127 = PHI <SR.4198_19(12), _6(2)>
  # DEBUG this => _1(D)
  # DEBUG __x => &D.133218
  _1(D)->_M_cur = SR.4195_226;
  _1(D)->_M_first = SR.4196_221;
  _1(D)->_M_last = SR.4197_214;
  _1(D)->_M_node = SR.4198_127;
  D.133216 ={v} {CLOBBER};
  D.133217 ={v} {CLOBBER};
  D.133218 ={v} {CLOBBER};
  D.133200 ={v} {CLOBBER};
  D.133201 ={v} {CLOBBER};
  D.133202 ={v} {CLOBBER};
  D.133176 ={v} {CLOBBER};
  D.133177 ={v} {CLOBBER};
  D.133178 ={v} {CLOBBER};
  D.133156 ={v} {CLOBBER};
  D.133157 ={v} {CLOBBER};
  D.133158 ={v} {CLOBBER};
  D.133144 ={v} {CLOBBER};
  D.133145 ={v} {CLOBBER};
  D.133146 ={v} {CLOBBER};
  D.133131 ={v} {CLOBBER};
  D.133130 ={v} {CLOBBER};
  D.133129 ={v} {CLOBBER};
  D.131218 ={v} {CLOBBER};
  D.131219 ={v} {CLOBBER};
  D.131220 ={v} {CLOBBER};
  return _1(D);

}



;; Function _ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>; _ForwardIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>; _Allocator = std::allocator<EventRouter::tArrivalEvent*>] (_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter13tArrivalEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.637, funcdef_no=5772, decl_uid=130469, cgraph_uid=3040, symbol_order=6724)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>; _ForwardIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>; _Allocator = std::allocator<EventRouter::tArrivalEvent*>] (struct _Deque_iterator & restrict __first, struct _Deque_iterator & restrict __last, struct _Deque_iterator & restrict __result)
{
  struct tArrivalEvent * * * SR.4215;
  struct tArrivalEvent * * SR.4214;
  struct tArrivalEvent * * SR.4213;
  struct tArrivalEvent * * SR.4212;
  struct tArrivalEvent * * * SR.4211;
  struct tArrivalEvent * * SR.4210;
  struct tArrivalEvent * * SR.4209;
  _Distance __n;
  struct _Deque_iterator D.133366;
  struct _Deque_iterator D.133365;
  struct _Deque_iterator D.133364;
  struct iterator_type D.133350;
  struct iterator_type D.133349;
  struct iterator_type D.133348;
  struct _Deque_iterator D.133326;
  struct iterator_type D.133325;
  struct iterator_type D.133324;
  struct _Deque_iterator D.133306;
  struct _Deque_iterator D.133305;
  struct _Deque_iterator D.133304;
  struct _Deque_iterator D.133294;
  struct _Deque_iterator D.133293;
  struct _Deque_iterator D.133292;
  struct _Deque_iterator D.133279;
  struct _Deque_iterator D.133278;
  struct _Deque_iterator D.133277;
  struct _Deque_iterator D.130483;
  struct _Deque_iterator D.130482;
  struct _Deque_iterator D.130481;
  struct tArrivalEvent * * _3;
  struct tArrivalEvent * * _4;
  struct tArrivalEvent * * _5;
  struct tArrivalEvent * * * _6;
  struct tArrivalEvent * * _8;
  struct tArrivalEvent * * _9;
  struct tArrivalEvent * * * _11;
  struct tArrivalEvent * * _13;
  struct tArrivalEvent * * _15;
  struct tArrivalEvent * * * _16;
  long int _106;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _114;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _121;
  long int _123;
  long int _124;
  long int _125;
  struct tArrivalEvent * _130;
  struct tArrivalEvent * * _132;
  struct tArrivalEvent * * _135;
  struct tArrivalEvent * * * _143;
  struct tArrivalEvent * * _144;
  struct tArrivalEvent * * _145;
  struct tArrivalEvent * * * _147;
  struct tArrivalEvent * * _148;
  struct tArrivalEvent * * _149;

  <bb 2>:
  # DEBUG __alloc s=> __alloc
  # DEBUG D#2690 s=> __alloc
  # DEBUG this => &D.130483
  # DEBUG __x => __result_2(D)
  _3 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  # DEBUG this => &D.130482
  # DEBUG __x => __last_7(D)
  _8 = MEM[(const struct iterator &)__last_7(D)]._M_cur;
  _9 = MEM[(const struct iterator &)__last_7(D)]._M_first;
  _11 = MEM[(const struct iterator &)__last_7(D)]._M_node;
  # DEBUG this => &D.130481
  # DEBUG __x => __first_12(D)
  _13 = MEM[(const struct iterator &)__first_12(D)]._M_cur;
  _15 = MEM[(const struct iterator &)__first_12(D)]._M_last;
  _16 = MEM[(const struct iterator &)__first_12(D)]._M_node;
  # DEBUG D#2689 => D#2690
  # DEBUG __first => &D.130481
  # DEBUG __last => &D.130482
  # DEBUG __result => &D.130483
  # DEBUG D.133270 => D#2689
  # DEBUG this => &D.133277
  # DEBUG __x => &D.130483
  # DEBUG this => &D.133278
  # DEBUG __x => &D.130482
  # DEBUG this => &D.133279
  # DEBUG __x => &D.130481
  # DEBUG __first => &D.133279
  # DEBUG __last => &D.133278
  # DEBUG __result => &D.133277
  # DEBUG __assignable => 1
  # DEBUG this => &D.133294
  # DEBUG __x => &D.133277
  # DEBUG this => &D.133293
  # DEBUG __x => &D.133278
  # DEBUG this => &D.133292
  # DEBUG __x => &D.133279
  # DEBUG __first => &D.133292
  # DEBUG __last => &D.133293
  # DEBUG __result => &D.133294
  # DEBUG this => &D.133306
  # DEBUG __x => &D.133294
  # DEBUG this => &D.133305
  # DEBUG __x => &D.133293
  # DEBUG this => &D.133304
  # DEBUG __x => &D.133292
  # DEBUG __first => &D.133304
  # DEBUG __last => &D.133305
  # DEBUG __result => &D.133306
  # DEBUG this => &D.133326
  # DEBUG __x => &D.133306
  # DEBUG this => NULL
  # DEBUG __x => &D.133305
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133325
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133304
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133324
  # DEBUG __x => NULL
  # DEBUG __first => &D.133324
  # DEBUG __last => &D.133325
  # DEBUG __result => &D.133326
  # DEBUG this => NULL
  # DEBUG __x => &D.133326
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133350
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133325
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133349
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133324
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133348
  # DEBUG __x => NULL
  # DEBUG __first => &D.133348
  # DEBUG __last => &D.133349
  # DEBUG __result => &D.133350
  # DEBUG __simple => 0
  # DEBUG this => &D.133366
  # DEBUG __x => &D.133350
  # DEBUG this => &D.133365
  # DEBUG __x => &D.133349
  # DEBUG this => &D.133364
  # DEBUG __x => &D.133348
  # DEBUG __first => &D.133364
  # DEBUG __last => &D.133365
  # DEBUG __result => &D.133366
  # DEBUG __x => &D.133365
  # DEBUG __y => &D.133364
  # DEBUG __size => 8
  _106 = (long int) _11;
  _108 = (long int) _16;
  _109 = _106 - _108;
  _110 = _109 /[ex] 8;
  _111 = _110 + -1;
  _112 = _111 * 64;
  _114 = (long int) _8;
  _116 = (long int) _9;
  _117 = _114 - _116;
  _118 = _117 /[ex] 8;
  _119 = _112 + _118;
  _121 = (long int) _15;
  _123 = (long int) _13;
  _124 = _121 - _123;
  _125 = _124 /[ex] 8;
  __n_126 = _119 + _125;
  # DEBUG __n => __n_126
  # DEBUG __n => __n_126
  if (__n_126 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_20 = PHI <__n_126(3), __n_137(9)>
  # SR.4209_235 = PHI <_13(3), SR.4209_234(9)>
  # SR.4210_233 = PHI <_15(3), SR.4210_232(9)>
  # SR.4211_231 = PHI <_16(3), SR.4211_230(9)>
  # SR.4212_229 = PHI <_3(3), SR.4212_227(9)>
  # SR.4213_224 = PHI <_4(3), SR.4213_223(9)>
  # SR.4214_216 = PHI <_5(3), SR.4214_215(9)>
  # SR.4215_213 = PHI <_6(3), SR.4215_150(9)>
  # DEBUG __n => __n_20
  # DEBUG D#244 => &D.133366
  # DEBUG this => D#244
  # DEBUG D#244 => &D.133364
  # DEBUG this => D#244
  _130 = *SR.4209_235;
  *SR.4212_229 = _130;
  # DEBUG this => &D.133364
  _132 = SR.4209_235 + 8;
  if (_132 == SR.4210_233)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.133364
  _143 = SR.4211_231 + 8;
  # DEBUG this => &D.133364
  # DEBUG __new_node => _143
  _144 = MEM[(struct tArrivalEvent * * *)SR.4211_231 + 8B];
  # DEBUG __size => 8
  _145 = _144 + 512;

  <bb 6>:
  # SR.4209_234 = PHI <_132(4), _144(5)>
  # SR.4210_232 = PHI <SR.4210_233(4), _145(5)>
  # SR.4211_230 = PHI <SR.4211_231(4), _143(5)>
  # DEBUG this => &D.133366
  _135 = SR.4212_229 + 8;
  if (_135 == SR.4214_216)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.133366
  _147 = SR.4215_213 + 8;
  # DEBUG this => &D.133366
  # DEBUG __new_node => _147
  _148 = MEM[(struct tArrivalEvent * * *)SR.4215_213 + 8B];
  # DEBUG __size => 8
  _149 = _148 + 512;

  <bb 8>:
  # SR.4212_227 = PHI <_135(6), _148(7)>
  # SR.4213_223 = PHI <SR.4213_224(6), _148(7)>
  # SR.4214_215 = PHI <SR.4214_216(6), _149(7)>
  # SR.4215_150 = PHI <SR.4215_213(6), _147(7)>
  __n_137 = __n_20 + -1;
  # DEBUG __n => __n_137
  # DEBUG __n => __n_137
  if (__n_137 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.4215_19 = PHI <SR.4215_150(8)>
  # SR.4214_18 = PHI <SR.4214_215(8)>
  # SR.4213_23 = PHI <SR.4213_223(8)>
  # SR.4212_10 = PHI <SR.4212_227(8)>

  <bb 12>:

  <bb 11>:
  # SR.4212_226 = PHI <SR.4212_10(12), _3(2)>
  # SR.4213_221 = PHI <SR.4213_23(12), _4(2)>
  # SR.4214_214 = PHI <SR.4214_18(12), _5(2)>
  # SR.4215_127 = PHI <SR.4215_19(12), _6(2)>
  # DEBUG this => _1(D)
  # DEBUG __x => &D.133366
  _1(D)->_M_cur = SR.4212_226;
  _1(D)->_M_first = SR.4213_221;
  _1(D)->_M_last = SR.4214_214;
  _1(D)->_M_node = SR.4215_127;
  D.133364 ={v} {CLOBBER};
  D.133365 ={v} {CLOBBER};
  D.133366 ={v} {CLOBBER};
  D.133348 ={v} {CLOBBER};
  D.133349 ={v} {CLOBBER};
  D.133350 ={v} {CLOBBER};
  D.133324 ={v} {CLOBBER};
  D.133325 ={v} {CLOBBER};
  D.133326 ={v} {CLOBBER};
  D.133304 ={v} {CLOBBER};
  D.133305 ={v} {CLOBBER};
  D.133306 ={v} {CLOBBER};
  D.133292 ={v} {CLOBBER};
  D.133293 ={v} {CLOBBER};
  D.133294 ={v} {CLOBBER};
  D.133279 ={v} {CLOBBER};
  D.133278 ={v} {CLOBBER};
  D.133277 ={v} {CLOBBER};
  D.130481 ={v} {CLOBBER};
  D.130482 ={v} {CLOBBER};
  D.130483 ={v} {CLOBBER};
  return _1(D);

}



;; Function _ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _Allocator = std::allocator<Flit*>] (_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.631, funcdef_no=5766, decl_uid=128995, cgraph_uid=3014, symbol_order=6494)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; _Allocator = std::allocator<Flit*>] (struct _Deque_iterator & restrict __first, struct _Deque_iterator & restrict __last, struct _Deque_iterator & restrict __result)
{
  struct Flit * * * SR.4232;
  struct Flit * * SR.4231;
  struct Flit * * SR.4230;
  struct Flit * * SR.4229;
  struct Flit * * * SR.4228;
  struct Flit * * SR.4227;
  struct Flit * * SR.4226;
  _Distance __n;
  struct _Deque_iterator D.133514;
  struct _Deque_iterator D.133513;
  struct _Deque_iterator D.133512;
  struct iterator_type D.133498;
  struct iterator_type D.133497;
  struct iterator_type D.133496;
  struct _Deque_iterator D.133474;
  struct iterator_type D.133473;
  struct iterator_type D.133472;
  struct _Deque_iterator D.133454;
  struct _Deque_iterator D.133453;
  struct _Deque_iterator D.133452;
  struct _Deque_iterator D.133442;
  struct _Deque_iterator D.133441;
  struct _Deque_iterator D.133440;
  struct _Deque_iterator D.133427;
  struct _Deque_iterator D.133426;
  struct _Deque_iterator D.133425;
  struct _Deque_iterator D.129009;
  struct _Deque_iterator D.129008;
  struct _Deque_iterator D.129007;
  struct Flit * * _3;
  struct Flit * * _4;
  struct Flit * * _5;
  struct Flit * * * _6;
  struct Flit * * _8;
  struct Flit * * _9;
  struct Flit * * * _11;
  struct Flit * * _13;
  struct Flit * * _15;
  struct Flit * * * _16;
  long int _106;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _114;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _121;
  long int _123;
  long int _124;
  long int _125;
  struct Flit * _130;
  struct Flit * * _132;
  struct Flit * * _135;
  struct Flit * * * _143;
  struct Flit * * _144;
  struct Flit * * _145;
  struct Flit * * * _147;
  struct Flit * * _148;
  struct Flit * * _149;

  <bb 2>:
  # DEBUG __alloc s=> __alloc
  # DEBUG D#2610 s=> __alloc
  # DEBUG this => &D.129009
  # DEBUG __x => __result_2(D)
  _3 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  # DEBUG this => &D.129008
  # DEBUG __x => __last_7(D)
  _8 = MEM[(const struct iterator &)__last_7(D)]._M_cur;
  _9 = MEM[(const struct iterator &)__last_7(D)]._M_first;
  _11 = MEM[(const struct iterator &)__last_7(D)]._M_node;
  # DEBUG this => &D.129007
  # DEBUG __x => __first_12(D)
  _13 = MEM[(const struct iterator &)__first_12(D)]._M_cur;
  _15 = MEM[(const struct iterator &)__first_12(D)]._M_last;
  _16 = MEM[(const struct iterator &)__first_12(D)]._M_node;
  # DEBUG D#2609 => D#2610
  # DEBUG __first => &D.129007
  # DEBUG __last => &D.129008
  # DEBUG __result => &D.129009
  # DEBUG D.133418 => D#2609
  # DEBUG this => &D.133425
  # DEBUG __x => &D.129009
  # DEBUG this => &D.133426
  # DEBUG __x => &D.129008
  # DEBUG this => &D.133427
  # DEBUG __x => &D.129007
  # DEBUG __first => &D.133427
  # DEBUG __last => &D.133426
  # DEBUG __result => &D.133425
  # DEBUG __assignable => 1
  # DEBUG this => &D.133442
  # DEBUG __x => &D.133425
  # DEBUG this => &D.133441
  # DEBUG __x => &D.133426
  # DEBUG this => &D.133440
  # DEBUG __x => &D.133427
  # DEBUG __first => &D.133440
  # DEBUG __last => &D.133441
  # DEBUG __result => &D.133442
  # DEBUG this => &D.133454
  # DEBUG __x => &D.133442
  # DEBUG this => &D.133453
  # DEBUG __x => &D.133441
  # DEBUG this => &D.133452
  # DEBUG __x => &D.133440
  # DEBUG __first => &D.133452
  # DEBUG __last => &D.133453
  # DEBUG __result => &D.133454
  # DEBUG this => &D.133474
  # DEBUG __x => &D.133454
  # DEBUG this => NULL
  # DEBUG __x => &D.133453
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133473
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133452
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133472
  # DEBUG __x => NULL
  # DEBUG __first => &D.133472
  # DEBUG __last => &D.133473
  # DEBUG __result => &D.133474
  # DEBUG this => NULL
  # DEBUG __x => &D.133474
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133498
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133473
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133497
  # DEBUG __x => NULL
  # DEBUG this => NULL
  # DEBUG __x => &D.133472
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => &D.133496
  # DEBUG __x => NULL
  # DEBUG __first => &D.133496
  # DEBUG __last => &D.133497
  # DEBUG __result => &D.133498
  # DEBUG __simple => 0
  # DEBUG this => &D.133514
  # DEBUG __x => &D.133498
  # DEBUG this => &D.133513
  # DEBUG __x => &D.133497
  # DEBUG this => &D.133512
  # DEBUG __x => &D.133496
  # DEBUG __first => &D.133512
  # DEBUG __last => &D.133513
  # DEBUG __result => &D.133514
  # DEBUG __x => &D.133513
  # DEBUG __y => &D.133512
  # DEBUG __size => 8
  _106 = (long int) _11;
  _108 = (long int) _16;
  _109 = _106 - _108;
  _110 = _109 /[ex] 8;
  _111 = _110 + -1;
  _112 = _111 * 64;
  _114 = (long int) _8;
  _116 = (long int) _9;
  _117 = _114 - _116;
  _118 = _117 /[ex] 8;
  _119 = _112 + _118;
  _121 = (long int) _15;
  _123 = (long int) _13;
  _124 = _121 - _123;
  _125 = _124 /[ex] 8;
  __n_126 = _119 + _125;
  # DEBUG __n => __n_126
  # DEBUG __n => __n_126
  if (__n_126 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_20 = PHI <__n_126(3), __n_137(9)>
  # SR.4226_235 = PHI <_13(3), SR.4226_234(9)>
  # SR.4227_233 = PHI <_15(3), SR.4227_232(9)>
  # SR.4228_231 = PHI <_16(3), SR.4228_230(9)>
  # SR.4229_229 = PHI <_3(3), SR.4229_227(9)>
  # SR.4230_224 = PHI <_4(3), SR.4230_223(9)>
  # SR.4231_216 = PHI <_5(3), SR.4231_215(9)>
  # SR.4232_213 = PHI <_6(3), SR.4232_150(9)>
  # DEBUG __n => __n_20
  # DEBUG D#234 => &D.133514
  # DEBUG this => D#234
  # DEBUG D#234 => &D.133512
  # DEBUG this => D#234
  _130 = *SR.4226_235;
  *SR.4229_229 = _130;
  # DEBUG this => &D.133512
  _132 = SR.4226_235 + 8;
  if (_132 == SR.4227_233)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &D.133512
  _143 = SR.4228_231 + 8;
  # DEBUG this => &D.133512
  # DEBUG __new_node => _143
  _144 = MEM[(struct Flit * * *)SR.4228_231 + 8B];
  # DEBUG __size => 8
  _145 = _144 + 512;

  <bb 6>:
  # SR.4226_234 = PHI <_132(4), _144(5)>
  # SR.4227_232 = PHI <SR.4227_233(4), _145(5)>
  # SR.4228_230 = PHI <SR.4228_231(4), _143(5)>
  # DEBUG this => &D.133514
  _135 = SR.4229_229 + 8;
  if (_135 == SR.4231_216)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.133514
  _147 = SR.4232_213 + 8;
  # DEBUG this => &D.133514
  # DEBUG __new_node => _147
  _148 = MEM[(struct Flit * * *)SR.4232_213 + 8B];
  # DEBUG __size => 8
  _149 = _148 + 512;

  <bb 8>:
  # SR.4229_227 = PHI <_135(6), _148(7)>
  # SR.4230_223 = PHI <SR.4230_224(6), _148(7)>
  # SR.4231_215 = PHI <SR.4231_216(6), _149(7)>
  # SR.4232_150 = PHI <SR.4232_213(6), _147(7)>
  __n_137 = __n_20 + -1;
  # DEBUG __n => __n_137
  # DEBUG __n => __n_137
  if (__n_137 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.4232_19 = PHI <SR.4232_150(8)>
  # SR.4231_18 = PHI <SR.4231_215(8)>
  # SR.4230_23 = PHI <SR.4230_223(8)>
  # SR.4229_10 = PHI <SR.4229_227(8)>

  <bb 12>:

  <bb 11>:
  # SR.4229_226 = PHI <SR.4229_10(12), _3(2)>
  # SR.4230_221 = PHI <SR.4230_23(12), _4(2)>
  # SR.4231_214 = PHI <SR.4231_18(12), _5(2)>
  # SR.4232_127 = PHI <SR.4232_19(12), _6(2)>
  # DEBUG this => _1(D)
  # DEBUG __x => &D.133514
  _1(D)->_M_cur = SR.4229_226;
  _1(D)->_M_first = SR.4230_221;
  _1(D)->_M_last = SR.4231_214;
  _1(D)->_M_node = SR.4232_127;
  D.133512 ={v} {CLOBBER};
  D.133513 ={v} {CLOBBER};
  D.133514 ={v} {CLOBBER};
  D.133496 ={v} {CLOBBER};
  D.133497 ={v} {CLOBBER};
  D.133498 ={v} {CLOBBER};
  D.133472 ={v} {CLOBBER};
  D.133473 ={v} {CLOBBER};
  D.133474 ={v} {CLOBBER};
  D.133452 ={v} {CLOBBER};
  D.133453 ={v} {CLOBBER};
  D.133454 ={v} {CLOBBER};
  D.133440 ={v} {CLOBBER};
  D.133441 ={v} {CLOBBER};
  D.133442 ={v} {CLOBBER};
  D.133427 ={v} {CLOBBER};
  D.133426 ={v} {CLOBBER};
  D.133425 ={v} {CLOBBER};
  D.129007 ={v} {CLOBBER};
  D.129008 ={v} {CLOBBER};
  D.129009 ={v} {CLOBBER};
  return _1(D);

}



;; Function virtual EventNextVCState::~EventNextVCState() (_ZN16EventNextVCStateD0Ev, funcdef_no=5088, decl_uid=48493, cgraph_uid=3437, symbol_order=3444)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual EventNextVCState::~EventNextVCState() (struct EventNextVCState * const this)
{
  struct list * __first;
  struct _Node * __tmp;
  struct list * _3;
  eNextVCState * _5;
  int * _7;
  int * _8;
  int * _9;
  int * _10;
  struct Module * * _20;
  char * const _21;
  const char * _22;
  char * const _23;
  const char * _24;
  struct list * pretmp_44;
  struct list * prephitmp_45;
  struct _List_node_base * _109;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.48512._vptr.Module = &MEM[(void *)&_ZTV16EventNextVCState + 16B];
  # DEBUG D#888 => &this_2(D)->_state
  # DEBUG this => D#888
  # DEBUG D#870 => &D#888->D.48427
  # DEBUG this => D#870
  # DEBUG D#873 => D#888->D.48427._M_impl._M_finish
  # DEBUG D#872 => D#888->D.48427._M_impl._M_start
  # DEBUG __first => D#872
  # DEBUG __last => D#873
  # DEBUG D.103910 => NULL
  # DEBUG D#443 => D#872
  # DEBUG D#444 => D#873
  # DEBUG __first => D#443
  # DEBUG __last => D#444
  # DEBUG D#442 => D#444
  # DEBUG D#441 => D#443
  # DEBUG D#439 => D#441
  # DEBUG D#440 => D#442
  # DEBUG D.101757 => D#439
  # DEBUG D.101756 => D#440
  # DEBUG D#871 => &D#888->D.48427
  # DEBUG this => D#871
  # DEBUG D#869 => D#871->_M_impl._M_end_of_storage
  # DEBUG D#868 => (long int) D#869
  _5 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
  # DEBUG D#867 => (long int) _5
  # DEBUG D#866 => D#868 - D#867
  # DEBUG D#865 => D#866 /[ex] 4
  # DEBUG D#864 => (long unsigned int) D#865
  # DEBUG this => D#871
  # DEBUG __p => _5
  # DEBUG __n => D#864
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#862 => &D#871->_M_impl
  # DEBUG D#860 => D#862
  # DEBUG D#861 => D#864
  # DEBUG __p => _5
  # DEBUG __a => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  # DEBUG D#856 => D#858
  # DEBUG D#857 => D#859
  # DEBUG __p => _5
  # DEBUG this => D#856
  # DEBUG D.133574 => D#857
  operator delete (_5);

  <bb 4>:
  # DEBUG D#863 => &D#871->_M_impl
  # DEBUG this => D#863
  # DEBUG this => D#863
  # DEBUG this => D#863
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#2812 => &this_2(D)->_waiting
  # DEBUG this => D#2812
  # DEBUG D#882 => &D#2812->D.47680
  # DEBUG this => D#882
  _3 = MEM[(struct vector *)this_2(D) + 200B].D.47680._M_impl._M_finish;
  __first_12 = MEM[(struct vector *)this_2(D) + 200B].D.47680._M_impl._M_start;
  # DEBUG __first => __first_12
  # DEBUG __last => _3
  # DEBUG __first => __first_12
  if (_3 == __first_12)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __first_103 = PHI <__first_12(5), __first_18(8)>
  # DEBUG __first => __first_103
  # DEBUG __r => __first_103
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_14 = MEM[(struct _List_base *)__first_103]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_14
  # DEBUG __cur => __tmp_14
  _109 = &MEM[(struct _List_base *)__first_103]._M_impl._M_node.D.45287;
  if (__tmp_14 == _109)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 7>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__first_103] ={v} {CLOBBER};
  __first_18 = __first_103 + 24;
  # DEBUG __first => __first_18
  # DEBUG __first => __first_18
  if (_3 == __first_18)
    goto <bb 12>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 6>;

  <bb 9>:

  <bb 10>:
  # __tmp_102 = PHI <__tmp_14(9), __tmp_17(11)>
  # DEBUG __cur => __tmp_102
  # DEBUG __tmp => __tmp_102
  __tmp_17 = __tmp_102->D.69419._M_next;
  # DEBUG __cur => __tmp_17
  # DEBUG D#878 => &__tmp_102->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_102
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_102
  # DEBUG this => D#450
  # DEBUG D.133658 => D#451
  operator delete (__tmp_102);
  # DEBUG __cur => __tmp_17
  if (__tmp_17 == _109)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:
  pretmp_44 = MEM[(struct _Vector_base *)this_2(D) + 200B]._M_impl._M_start;

  <bb 13>:
  # prephitmp_45 = PHI <pretmp_44(12), __first_12(4)>
  # DEBUG D#883 => &D#2812->D.47680
  # DEBUG this => D#883
  # DEBUG D#853 => D#883->_M_impl._M_end_of_storage
  # DEBUG D#852 => (long int) D#853
  # DEBUG D#2813 => MEM[(struct _Vector_base *)this_2(D) + 200B]._M_impl._M_start
  # DEBUG D#851 => (long int) D#2813
  # DEBUG D#850 => D#852 - D#851
  # DEBUG D#849 => D#850 /[ex] 24
  # DEBUG D#846 => D#883
  # DEBUG D#847 => (long unsigned int) D#849
  # DEBUG __p => D#2813
  # DEBUG this => D#846
  # DEBUG __n => D#847
  # DEBUG D#845 => D#847
  # DEBUG D#844 => D#846
  if (prephitmp_45 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#841 => D#843
  # DEBUG D#842 => D#845
  # DEBUG __p => D#2813
  # DEBUG __a => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#837 => D#839
  # DEBUG D#838 => D#840
  # DEBUG __p => D#2813
  # DEBUG this => D#837
  # DEBUG D.133672 => D#838
  operator delete (prephitmp_45);

  <bb 15>:
  # DEBUG D#848 => &D#883->_M_impl
  # DEBUG this => D#848
  # DEBUG this => D#848
  # DEBUG this => D#848
  MEM[(struct  &)this_2(D) + 200] ={v} {CLOBBER};
  # DEBUG D#887 => &this_2(D)->_inputVC
  # DEBUG this => D#887
  # DEBUG D#515 => &D#887->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#887->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#887->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#887->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _7 = MEM[(struct _Vector_base *)this_2(D) + 176B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _7
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _7
  # DEBUG __n => D#509
  if (_7 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _7
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _7
  # DEBUG this => D#501
  # DEBUG D.133589 => D#502
  operator delete (_7);

  <bb 17>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 176] ={v} {CLOBBER};
  # DEBUG D#886 => &this_2(D)->_input
  # DEBUG this => D#886
  # DEBUG D#515 => &D#886->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#886->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#886->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#886->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _8 = MEM[(struct _Vector_base *)this_2(D) + 152B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _8
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _8
  # DEBUG __n => D#509
  if (_8 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _8
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _8
  # DEBUG this => D#501
  # DEBUG D.133604 => D#502
  operator delete (_8);

  <bb 19>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 152] ={v} {CLOBBER};
  # DEBUG D#885 => &this_2(D)->_presence
  # DEBUG this => D#885
  # DEBUG D#515 => &D#885->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#885->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#885->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#885->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _9 = MEM[(struct _Vector_base *)this_2(D) + 128B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _9
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _9
  # DEBUG __n => D#509
  if (_9 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _9
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _9
  # DEBUG this => D#501
  # DEBUG D.133619 => D#502
  operator delete (_9);

  <bb 21>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 128] ={v} {CLOBBER};
  # DEBUG D#884 => &this_2(D)->_credits
  # DEBUG this => D#884
  # DEBUG D#515 => &D#884->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#884->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#884->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#884->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _10 = MEM[(struct _Vector_base *)this_2(D) + 104B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _10
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _10
  # DEBUG __n => D#509
  if (_10 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _10
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _10
  # DEBUG this => D#501
  # DEBUG D.133634 => D#502
  operator delete (_10);

  <bb 23>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 104] ={v} {CLOBBER};
  # DEBUG D#2811 => &this_2(D)->D.48512
  # DEBUG this => D#2811
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#498 => &D#2811->_children
  # DEBUG this => D#498
  # DEBUG D#492 => &D#498->D.29566
  # DEBUG this => D#492
  # DEBUG D#495 => D#498->D.29566._M_impl._M_finish
  # DEBUG D#494 => D#498->D.29566._M_impl._M_start
  # DEBUG D#289 => D#494
  # DEBUG D#290 => D#495
  # DEBUG __first => D#289
  # DEBUG __last => D#290
  # DEBUG D.102059 => D#291
  # DEBUG D#288 => D#290
  # DEBUG D#287 => D#289
  # DEBUG D#285 => D#287
  # DEBUG D#286 => D#288
  # DEBUG __first => D#285
  # DEBUG __last => D#286
  # DEBUG D#284 => D#286
  # DEBUG D#283 => D#285
  # DEBUG D#281 => D#283
  # DEBUG D#282 => D#284
  # DEBUG D.100759 => D#281
  # DEBUG D.100758 => D#282
  # DEBUG D#493 => &D#498->D.29566
  # DEBUG this => D#493
  # DEBUG D#491 => D#493->_M_impl._M_end_of_storage
  # DEBUG D#490 => (long int) D#491
  _20 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#489 => (long int) _20
  # DEBUG D#488 => D#490 - D#489
  # DEBUG D#487 => D#488 /[ex] 8
  # DEBUG D#484 => D#493
  # DEBUG D#485 => (long unsigned int) D#487
  # DEBUG __p => _20
  # DEBUG this => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  if (_20 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#481 => &D#482->_M_impl
  # DEBUG D#479 => D#481
  # DEBUG D#480 => D#483
  # DEBUG __p => _20
  # DEBUG __a => D#479
  # DEBUG __n => D#480
  # DEBUG D#478 => D#480
  # DEBUG D#477 => D#479
  # DEBUG D#475 => D#477
  # DEBUG D#476 => D#478
  # DEBUG __p => _20
  # DEBUG this => D#475
  # DEBUG D.133688 => D#476
  operator delete (_20);

  <bb 25>:
  # DEBUG D#486 => &D#493->_M_impl
  # DEBUG this => D#486
  # DEBUG this => D#486
  # DEBUG this => D#486
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#497 => &D#2811->_fullname
  # DEBUG this => D#497
  # DEBUG this => D#497
  # DEBUG this => D#497
  _21 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  _22 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_21 != _22)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#497].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#497
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  # DEBUG D#464 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _21
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _21
  # DEBUG this => D#458
  # DEBUG D.133701 => D#459
  operator delete (_21);

  <bb 27>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#496 => &D#2811->_name
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  _23 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  _24 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_23 != _24)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#496].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#496
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  # DEBUG D#464 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _23
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _23
  # DEBUG this => D#458
  # DEBUG D.133716 => D#459
  operator delete (_23);

  <bb 29>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function virtual void EventRouter::WriteOutputs() (_ZN11EventRouter12WriteOutputsEv, funcdef_no=2162, decl_uid=54589, cgraph_uid=511, symbol_order=512)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
virtual void EventRouter::WriteOutputs() (struct EventRouter * const this)
{
  int output;
  struct Flit * f;
  int input;
  struct Credit * c;
  struct Flit * * _3;
  long unsigned int _7;
  struct queue * _8;
  long unsigned int _9;
  struct queue & _10;
  struct Credit * * const _11;
  struct Credit * * const _12;
  int _14;
  struct Credit * * _15;
  struct Credit * * _16;
  struct Credit * * _17;
  struct Channel * * _18;
  long unsigned int _19;
  struct Channel * & _20;
  struct Channel * _21;
  int (*__vtbl_ptr_type) () * _22;
  int (*__vtbl_ptr_type) () _23;
  void * PROF_25;
  long unsigned int _28;
  struct queue * _29;
  long unsigned int _30;
  struct queue & _31;
  struct Flit * * const _32;
  struct Flit * * const _33;
  struct Flit * * _36;
  struct Flit * * _37;
  struct Flit * * _38;
  struct FlitChannel * * _39;
  long unsigned int _40;
  struct FlitChannel * & _41;
  struct FlitChannel * _42;
  int (*__vtbl_ptr_type) () * _43;
  int (*__vtbl_ptr_type) () _44;
  struct Flit * * * _46;
  struct Flit * * * _47;
  struct Flit * * _48;
  struct Flit * * _49;
  struct Credit * * _50;
  struct Credit * * * _51;
  struct Credit * * * _52;
  struct Credit * * _53;
  struct Credit * * _54;
  int _82;
  int prephitmp_110;
  int prephitmp_119;
  int pretmp_121;
  int prephitmp_122;
  int pretmp_123;
  int pretmp_124;
  int prephitmp_125;

  <bb 2>:
  # DEBUG this => this_2(D)
  # DEBUG output => 0
  # DEBUG output => 0
  _82 = this_2(D)->D.54631._outputs;
  if (_82 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG input => 0
  _14 = this_2(D)->D.54631._inputs;
  if (_14 <= 0)
    goto <bb 4>;
  else
    goto <bb 13>;

  <bb 4>:
  return;

  <bb 5>:

  <bb 6>:
  # output_80 = PHI <0(5), output_45(12)>
  # prephitmp_110 = PHI <_82(5), prephitmp_122(12)>
  # DEBUG output => output_80
  _28 = (long unsigned int) output_80;
  # DEBUG D#1055 => &this_2(D)->_output_buffer
  _29 = MEM[(struct queue * *)this_2(D) + 408B];
  # DEBUG D#78 => D#1055
  # DEBUG __n => _28
  # DEBUG this => D#78
  _30 = _28 * 80;
  _31 = _29 + _30;
  # DEBUG this => NULL
  # DEBUG this => D#134
  # DEBUG D#132 => &D#134->D.44077._M_impl._M_start
  # DEBUG D#133 => &D#134->D.44077._M_impl._M_finish
  _32 = MEM[(struct Flit * * *)_31 + 48B];
  # DEBUG D#130 => D#133
  _33 = MEM[(struct Flit * * *)_31 + 16B];
  # DEBUG D#131 => D#132
  # DEBUG __x => D#130
  # DEBUG __y => D#131
  if (_32 != _33)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 7>:
  # DEBUG D#1056 => &this_2(D)->_output_buffer
  # DEBUG D#78 => D#1056
  # DEBUG __n => _28
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG this => D#238
  # DEBUG this => D#238
  # DEBUG D#152 => &D#238->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#237 => MEM[(const struct iterator &)D#238 + 16]._M_first
  # DEBUG D.100496 => D#237
  # DEBUG D#236 => MEM[(const struct iterator &)D#238 + 16]._M_last
  # DEBUG D.100497 => D#236
  # DEBUG D#235 => MEM[(const struct iterator &)D#238 + 16]._M_node
  # DEBUG D.100498 => D#235
  # DEBUG this => D#234
  f_34 = *_33;
  # DEBUG f => f_34
  # DEBUG D#1057 => &this_2(D)->_output_buffer
  # DEBUG D#78 => D#1057
  # DEBUG __n => _28
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG D#2815 => &_31->c
  # DEBUG this => D#2815
  _36 = MEM[(struct deque *)_31].D.44077._M_impl._M_start._M_last;
  _37 = _36 + 18446744073709551608;
  if (_33 != _37)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG D#1045 => D#2815->D.44077._M_impl._M_start._M_cur
  # DEBUG D#1044 => &D#2815->D.44077._M_impl
  # DEBUG D#412 => D#1044
  # DEBUG D#413 => D#1045
  # DEBUG __a => D#412
  # DEBUG __p => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#412
  # DEBUG D#408 => D#410
  # DEBUG D#409 => D#411
  # DEBUG this => D#408
  # DEBUG __p => D#409
  _38 = _33 + 8;
  MEM[(struct deque *)_31].D.44077._M_impl._M_start._M_cur = _38;
  goto <bb 10>;

  <bb 9>:
  # DEBUG this => D#2815
  # DEBUG this => D#2815
  # DEBUG D#1043 => D#2815->D.44077._M_impl._M_start._M_cur
  # DEBUG D#1040 => &D#2815->D.44077
  # DEBUG this => D#1040
  # DEBUG D#413 => D#1043
  # DEBUG __a => D#412
  # DEBUG __p => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#412
  # DEBUG D#408 => D#410
  # DEBUG D#409 => D#411
  # DEBUG this => D#408
  # DEBUG __p => D#409
  _3 = MEM[(struct deque *)_31].D.44077._M_impl._M_start._M_first;
  # DEBUG D#1042 => &D#2815->D.44077
  # DEBUG D#1039 => D#1042
  # DEBUG __p => _3
  # DEBUG this => D#1039
  # DEBUG D#1038 => D#1039
  # DEBUG __size => 8
  # DEBUG D#1037 => &D#1038->_M_impl
  # DEBUG D#1017 => D#1037
  # DEBUG __p => _3
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _3
  # DEBUG this => D#1013
  # DEBUG D.133763 => D#1014
  operator delete (_3);
  _46 = MEM[(struct deque *)_31].D.44077._M_impl._M_start._M_node;
  _47 = _46 + 8;
  # DEBUG D#1041 => &D#2815->D.44077._M_impl._M_start
  # DEBUG this => D#1041
  # DEBUG __new_node => _47
  MEM[(struct _Deque_iterator *)_31 + 16B]._M_node = _47;
  _48 = MEM[(struct Flit * * *)_46 + 8B];
  MEM[(struct _Deque_iterator *)_31 + 16B]._M_first = _48;
  # DEBUG __size => 8
  _49 = _48 + 512;
  MEM[(struct _Deque_iterator *)_31 + 16B]._M_last = _49;
  MEM[(struct deque *)_31].D.44077._M_impl._M_start._M_cur = _48;

  <bb 10>:
  # DEBUG D#1058 => &this_2(D)->D.54631._output_channels
  _39 = MEM[(struct FlitChannel * * *)this_2(D) + 192B];
  # DEBUG D#77 => D#1058
  # DEBUG __n => _28
  # DEBUG this => D#77
  _40 = _28 * 8;
  _41 = _39 + _40;
  _42 = *_41;
  _43 = _42->D.35808.D.35202.D.29663._vptr.Module;
  _44 = MEM[(int (*__vtbl_ptr_type) () *)_43 + 48B];
  OBJ_TYPE_REF(_44;(struct FlitChannel)_42->6) (_42, f_34);
  pretmp_121 = this_2(D)->D.54631._outputs;

  <bb 11>:
  # prephitmp_122 = PHI <prephitmp_110(6), pretmp_121(10)>
  output_45 = output_80 + 1;
  # DEBUG output => output_45
  # DEBUG output => output_45
  if (output_45 >= prephitmp_122)
    goto <bb 3>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 6>;

  <bb 13>:

  <bb 14>:
  # input_83 = PHI <0(13), input_24(22)>
  # prephitmp_119 = PHI <_14(13), prephitmp_125(22)>
  # DEBUG input => input_83
  _7 = (long unsigned int) input_83;
  # DEBUG D#1110 => &this_2(D)->_in_cred_buffer
  _8 = MEM[(struct queue * *)this_2(D) + 432B];
  # DEBUG D#80 => D#1110
  # DEBUG __n => _7
  # DEBUG this => D#80
  _9 = _7 * 80;
  _10 = _8 + _9;
  # DEBUG this => NULL
  # DEBUG this => D#253
  # DEBUG D#251 => &D#253->D.59602._M_impl._M_start
  # DEBUG D#252 => &D#253->D.59602._M_impl._M_finish
  _11 = MEM[(struct Credit * * *)_10 + 48B];
  # DEBUG D#249 => D#252
  _12 = MEM[(struct Credit * * *)_10 + 16B];
  # DEBUG D#250 => D#251
  # DEBUG __x => D#249
  # DEBUG __y => D#250
  if (_11 != _12)
    goto <bb 15>;
  else
    goto <bb 21>;

  <bb 15>:
  # DEBUG D#1111 => &this_2(D)->_in_cred_buffer
  # DEBUG D#80 => D#1111
  # DEBUG __n => _7
  # DEBUG this => D#80
  # DEBUG this => NULL
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG D#159 => &D#258->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#257 => MEM[(const struct iterator &)D#258 + 16]._M_first
  # DEBUG D.100586 => D#257
  # DEBUG D#256 => MEM[(const struct iterator &)D#258 + 16]._M_last
  # DEBUG D.100587 => D#256
  # DEBUG D#255 => MEM[(const struct iterator &)D#258 + 16]._M_node
  # DEBUG D.100588 => D#255
  # DEBUG this => D#254
  c_13 = *_12;
  # DEBUG c => c_13
  # DEBUG D#1112 => &this_2(D)->_in_cred_buffer
  # DEBUG D#80 => D#1112
  # DEBUG __n => _7
  # DEBUG this => D#80
  # DEBUG this => NULL
  # DEBUG D#2814 => &_10->c
  # DEBUG this => D#2814
  _15 = MEM[(struct deque *)_10].D.59602._M_impl._M_start._M_last;
  _16 = _15 + 18446744073709551608;
  if (_12 != _16)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#1109 => D#2814->D.59602._M_impl._M_start._M_cur
  # DEBUG D#1108 => &D#2814->D.59602._M_impl
  # DEBUG D#421 => D#1108
  # DEBUG D#422 => D#1109
  # DEBUG __a => D#421
  # DEBUG __p => D#422
  # DEBUG D#420 => D#422
  # DEBUG D#419 => D#421
  # DEBUG D#417 => D#419
  # DEBUG D#418 => D#420
  # DEBUG this => D#417
  # DEBUG __p => D#418
  _17 = _12 + 8;
  MEM[(struct deque *)_10].D.59602._M_impl._M_start._M_cur = _17;
  goto <bb 18>;

  <bb 17>:
  # DEBUG this => D#2814
  # DEBUG this => D#2814
  # DEBUG D#1107 => D#2814->D.59602._M_impl._M_start._M_cur
  # DEBUG D#1104 => &D#2814->D.59602
  # DEBUG this => D#1104
  # DEBUG D#422 => D#1107
  # DEBUG __a => D#421
  # DEBUG __p => D#422
  # DEBUG D#420 => D#422
  # DEBUG D#419 => D#421
  # DEBUG D#417 => D#419
  # DEBUG D#418 => D#420
  # DEBUG this => D#417
  # DEBUG __p => D#418
  _50 = MEM[(struct deque *)_10].D.59602._M_impl._M_start._M_first;
  # DEBUG D#1106 => &D#2814->D.59602
  # DEBUG this => D#1106
  # DEBUG __p => _50
  # DEBUG __size => 8
  # DEBUG D#1103 => &D#1106->_M_impl
  # DEBUG D#1083 => D#1103
  # DEBUG __p => _50
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _50
  # DEBUG this => D#1079
  # DEBUG D.133776 => D#1080
  operator delete (_50);
  _51 = MEM[(struct deque *)_10].D.59602._M_impl._M_start._M_node;
  _52 = _51 + 8;
  # DEBUG D#1105 => &D#2814->D.59602._M_impl._M_start
  # DEBUG this => D#1105
  # DEBUG __new_node => _52
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_node = _52;
  _53 = MEM[(struct Credit * * *)_51 + 8B];
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_first = _53;
  # DEBUG __size => 8
  _54 = _53 + 512;
  MEM[(struct _Deque_iterator *)_10 + 16B]._M_last = _54;
  MEM[(struct deque *)_10].D.59602._M_impl._M_start._M_cur = _53;

  <bb 18>:
  # DEBUG D#1113 => &this_2(D)->D.54631._input_credits
  _18 = MEM[(struct Channel * * *)this_2(D) + 168B];
  # DEBUG D#79 => D#1113
  # DEBUG __n => _7
  # DEBUG this => D#79
  _19 = _7 * 8;
  _20 = _18 + _19;
  _21 = *_20;
  _22 = _21->D.62933.D.29663._vptr.Module;
  _23 = MEM[(int (*__vtbl_ptr_type) () *)_22 + 48B];
  PROF_25 = [obj_type_ref] OBJ_TYPE_REF(_23;(struct Channel)_21->6);
  if (PROF_25 == Send)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG this => _21
  # DEBUG data => c_13
  _21->_input = c_13;
  pretmp_123 = this_2(D)->D.54631._inputs;
  goto <bb 21>;

  <bb 20>:
  OBJ_TYPE_REF(_23;(struct Channel)_21->6) (_21, c_13);
  pretmp_124 = this_2(D)->D.54631._inputs;

  <bb 21>:
  # prephitmp_125 = PHI <prephitmp_119(14), pretmp_123(19), pretmp_124(20)>
  input_24 = input_83 + 1;
  # DEBUG input => input_24
  # DEBUG input => input_24
  if (input_24 >= prephitmp_125)
    goto <bb 4>;
  else
    goto <bb 22>;

  <bb 22>:
  goto <bb 14>;

}



;; Function PipelineFIFO<T>::~PipelineFIFO() [with T = Flit] (_ZN12PipelineFIFOI4FlitED2Ev, funcdef_no=2402, decl_uid=56914, cgraph_uid=751, symbol_order=752)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::~PipelineFIFO() [with T = Flit] (struct PipelineFIFO * const this)
{
  struct vector * __first;
  struct vector * _7;
  struct Module * * _9;
  char * const _10;
  const char * _11;
  char * const _12;
  const char * _13;
  struct Flit * * _16;
  struct vector * pretmp_25;
  struct vector * prephitmp_26;

  <bb 2>:
  this_2(D)->D.56917._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI4FlitE + 16B];
  # DEBUG D#2819 => &this_2(D)->_data
  # DEBUG this => D#2819
  # DEBUG D#1035 => &D#2819->D.56873
  # DEBUG this => D#1035
  _7 = MEM[(struct vector *)this_2(D) + 112B].D.56873._M_impl._M_finish;
  __first_14 = MEM[(struct vector *)this_2(D) + 112B].D.56873._M_impl._M_start;
  # DEBUG __first => __first_14
  # DEBUG __last => _7
  # DEBUG __first => __first_14
  if (_7 == __first_14)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_55 = PHI <__first_14(3), __first_17(7)>
  # DEBUG __first => __first_55
  # DEBUG __r => __first_55
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _16 = MEM[(struct _Vector_base *)__first_55]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _16
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _16
  # DEBUG __n => D#1021
  if (_16 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _16
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _16
  # DEBUG this => D#1013
  # DEBUG D.133881 => D#1014
  operator delete (_16);

  <bb 6>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__first_55] ={v} {CLOBBER};
  __first_17 = __first_55 + 24;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (_7 == __first_17)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 18>:
  pretmp_25 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;

  <bb 9>:
  # prephitmp_26 = PHI <pretmp_25(18), __first_14(2)>
  # DEBUG D#1036 => &D#2819->D.56873
  # DEBUG this => D#1036
  # DEBUG D#1012 => D#1036->_M_impl._M_end_of_storage
  # DEBUG D#1011 => (long int) D#1012
  # DEBUG D#2820 => MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start
  # DEBUG D#1010 => (long int) D#2820
  # DEBUG D#1009 => D#1011 - D#1010
  # DEBUG D#1008 => D#1009 /[ex] 24
  # DEBUG D#1005 => D#1036
  # DEBUG D#1006 => (long unsigned int) D#1008
  # DEBUG __p => D#2820
  # DEBUG this => D#1005
  # DEBUG __n => D#1006
  # DEBUG D#1004 => D#1006
  # DEBUG D#1003 => D#1005
  if (prephitmp_26 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#1002 => &D#1003->_M_impl
  # DEBUG D#1000 => D#1002
  # DEBUG D#1001 => D#1004
  # DEBUG __p => D#2820
  # DEBUG __a => D#1000
  # DEBUG __n => D#1001
  # DEBUG D#999 => D#1001
  # DEBUG D#998 => D#1000
  # DEBUG D#996 => D#998
  # DEBUG D#997 => D#999
  # DEBUG __p => D#2820
  # DEBUG this => D#996
  # DEBUG D.133895 => D#997
  operator delete (prephitmp_26);

  <bb 11>:
  # DEBUG D#1007 => &D#1036->_M_impl
  # DEBUG this => D#1007
  # DEBUG this => D#1007
  # DEBUG this => D#1007
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#2818 => &this_2(D)->D.56917
  # DEBUG this => D#2818
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#498 => &D#2818->_children
  # DEBUG this => D#498
  # DEBUG D#492 => &D#498->D.29566
  # DEBUG this => D#492
  # DEBUG D#495 => D#498->D.29566._M_impl._M_finish
  # DEBUG D#494 => D#498->D.29566._M_impl._M_start
  # DEBUG D#289 => D#494
  # DEBUG D#290 => D#495
  # DEBUG __first => D#289
  # DEBUG __last => D#290
  # DEBUG D.102059 => D#291
  # DEBUG D#288 => D#290
  # DEBUG D#287 => D#289
  # DEBUG D#285 => D#287
  # DEBUG D#286 => D#288
  # DEBUG __first => D#285
  # DEBUG __last => D#286
  # DEBUG D#284 => D#286
  # DEBUG D#283 => D#285
  # DEBUG D#281 => D#283
  # DEBUG D#282 => D#284
  # DEBUG D.100759 => D#281
  # DEBUG D.100758 => D#282
  # DEBUG D#493 => &D#498->D.29566
  # DEBUG this => D#493
  # DEBUG D#491 => D#493->_M_impl._M_end_of_storage
  # DEBUG D#490 => (long int) D#491
  _9 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#489 => (long int) _9
  # DEBUG D#488 => D#490 - D#489
  # DEBUG D#487 => D#488 /[ex] 8
  # DEBUG D#484 => D#493
  # DEBUG D#485 => (long unsigned int) D#487
  # DEBUG __p => _9
  # DEBUG this => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  if (_9 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#481 => &D#482->_M_impl
  # DEBUG D#479 => D#481
  # DEBUG D#480 => D#483
  # DEBUG __p => _9
  # DEBUG __a => D#479
  # DEBUG __n => D#480
  # DEBUG D#478 => D#480
  # DEBUG D#477 => D#479
  # DEBUG D#475 => D#477
  # DEBUG D#476 => D#478
  # DEBUG __p => _9
  # DEBUG this => D#475
  # DEBUG D.133826 => D#476
  operator delete (_9);

  <bb 13>:
  # DEBUG D#486 => &D#493->_M_impl
  # DEBUG this => D#486
  # DEBUG this => D#486
  # DEBUG this => D#486
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#497 => &D#2818->_fullname
  # DEBUG this => D#497
  # DEBUG this => D#497
  # DEBUG this => D#497
  _10 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  _11 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_10 != _11)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#497].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#497
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  # DEBUG D#464 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _10
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _10
  # DEBUG this => D#458
  # DEBUG D.133839 => D#459
  operator delete (_10);

  <bb 15>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#496 => &D#2818->_name
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  _12 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  _13 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_12 != _13)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#496].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#496
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  # DEBUG D#464 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _12
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _12
  # DEBUG this => D#458
  # DEBUG D.133854 => D#459
  operator delete (_12);

  <bb 17>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function PipelineFIFO<T>::~PipelineFIFO() [with T = EventRouter::tArrivalEvent] (_ZN12PipelineFIFOIN11EventRouter13tArrivalEventEED2Ev, funcdef_no=2410, decl_uid=58550, cgraph_uid=759, symbol_order=760)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::~PipelineFIFO() [with T = EventRouter::tArrivalEvent] (struct PipelineFIFO * const this)
{
  struct vector * __first;
  struct vector * _7;
  struct Module * * _9;
  char * const _10;
  const char * _11;
  char * const _12;
  const char * _13;
  struct tArrivalEvent * * _16;
  struct vector * pretmp_25;
  struct vector * prephitmp_26;

  <bb 2>:
  this_2(D)->D.58553._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOIN11EventRouter13tArrivalEventEE + 16B];
  # DEBUG D#2822 => &this_2(D)->_data
  # DEBUG this => D#2822
  # DEBUG D#1156 => &D#2822->D.58509
  # DEBUG this => D#1156
  _7 = MEM[(struct vector *)this_2(D) + 112B].D.58509._M_impl._M_finish;
  __first_14 = MEM[(struct vector *)this_2(D) + 112B].D.58509._M_impl._M_start;
  # DEBUG __first => __first_14
  # DEBUG __last => _7
  # DEBUG __first => __first_14
  if (_7 == __first_14)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_55 = PHI <__first_14(3), __first_17(7)>
  # DEBUG __first => __first_55
  # DEBUG __r => __first_55
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _16 = MEM[(struct _Vector_base *)__first_55]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _16
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _16
  # DEBUG __n => D#1142
  if (_16 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _16
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _16
  # DEBUG this => D#1134
  # DEBUG D.133978 => D#1135
  operator delete (_16);

  <bb 6>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__first_55] ={v} {CLOBBER};
  __first_17 = __first_55 + 24;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (_7 == __first_17)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 18>:
  pretmp_25 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;

  <bb 9>:
  # prephitmp_26 = PHI <pretmp_25(18), __first_14(2)>
  # DEBUG D#1157 => &D#2822->D.58509
  # DEBUG this => D#1157
  # DEBUG D#1133 => D#1157->_M_impl._M_end_of_storage
  # DEBUG D#1132 => (long int) D#1133
  # DEBUG D#2823 => MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start
  # DEBUG D#1131 => (long int) D#2823
  # DEBUG D#1130 => D#1132 - D#1131
  # DEBUG D#1129 => D#1130 /[ex] 24
  # DEBUG D#1126 => D#1157
  # DEBUG D#1127 => (long unsigned int) D#1129
  # DEBUG __p => D#2823
  # DEBUG this => D#1126
  # DEBUG __n => D#1127
  # DEBUG D#1125 => D#1127
  # DEBUG D#1124 => D#1126
  if (prephitmp_26 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#1123 => &D#1124->_M_impl
  # DEBUG D#1121 => D#1123
  # DEBUG D#1122 => D#1125
  # DEBUG __p => D#2823
  # DEBUG __a => D#1121
  # DEBUG __n => D#1122
  # DEBUG D#1120 => D#1122
  # DEBUG D#1119 => D#1121
  # DEBUG D#1117 => D#1119
  # DEBUG D#1118 => D#1120
  # DEBUG __p => D#2823
  # DEBUG this => D#1117
  # DEBUG D.133992 => D#1118
  operator delete (prephitmp_26);

  <bb 11>:
  # DEBUG D#1128 => &D#1157->_M_impl
  # DEBUG this => D#1128
  # DEBUG this => D#1128
  # DEBUG this => D#1128
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#2821 => &this_2(D)->D.58553
  # DEBUG this => D#2821
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#498 => &D#2821->_children
  # DEBUG this => D#498
  # DEBUG D#492 => &D#498->D.29566
  # DEBUG this => D#492
  # DEBUG D#495 => D#498->D.29566._M_impl._M_finish
  # DEBUG D#494 => D#498->D.29566._M_impl._M_start
  # DEBUG D#289 => D#494
  # DEBUG D#290 => D#495
  # DEBUG __first => D#289
  # DEBUG __last => D#290
  # DEBUG D.102059 => D#291
  # DEBUG D#288 => D#290
  # DEBUG D#287 => D#289
  # DEBUG D#285 => D#287
  # DEBUG D#286 => D#288
  # DEBUG __first => D#285
  # DEBUG __last => D#286
  # DEBUG D#284 => D#286
  # DEBUG D#283 => D#285
  # DEBUG D#281 => D#283
  # DEBUG D#282 => D#284
  # DEBUG D.100759 => D#281
  # DEBUG D.100758 => D#282
  # DEBUG D#493 => &D#498->D.29566
  # DEBUG this => D#493
  # DEBUG D#491 => D#493->_M_impl._M_end_of_storage
  # DEBUG D#490 => (long int) D#491
  _9 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#489 => (long int) _9
  # DEBUG D#488 => D#490 - D#489
  # DEBUG D#487 => D#488 /[ex] 8
  # DEBUG D#484 => D#493
  # DEBUG D#485 => (long unsigned int) D#487
  # DEBUG __p => _9
  # DEBUG this => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  if (_9 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#481 => &D#482->_M_impl
  # DEBUG D#479 => D#481
  # DEBUG D#480 => D#483
  # DEBUG __p => _9
  # DEBUG __a => D#479
  # DEBUG __n => D#480
  # DEBUG D#478 => D#480
  # DEBUG D#477 => D#479
  # DEBUG D#475 => D#477
  # DEBUG D#476 => D#478
  # DEBUG __p => _9
  # DEBUG this => D#475
  # DEBUG D.133923 => D#476
  operator delete (_9);

  <bb 13>:
  # DEBUG D#486 => &D#493->_M_impl
  # DEBUG this => D#486
  # DEBUG this => D#486
  # DEBUG this => D#486
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#497 => &D#2821->_fullname
  # DEBUG this => D#497
  # DEBUG this => D#497
  # DEBUG this => D#497
  _10 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  _11 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_10 != _11)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#497].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#497
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  # DEBUG D#464 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _10
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _10
  # DEBUG this => D#458
  # DEBUG D.133936 => D#459
  operator delete (_10);

  <bb 15>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#496 => &D#2821->_name
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  _12 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  _13 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_12 != _13)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#496].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#496
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  # DEBUG D#464 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _12
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _12
  # DEBUG this => D#458
  # DEBUG D.133951 => D#459
  operator delete (_12);

  <bb 17>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function PipelineFIFO<T>::~PipelineFIFO() [with T = Credit] (_ZN12PipelineFIFOI6CreditED2Ev, funcdef_no=2406, decl_uid=57732, cgraph_uid=755, symbol_order=756)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::~PipelineFIFO() [with T = Credit] (struct PipelineFIFO * const this)
{
  struct vector * __first;
  struct vector * _7;
  struct Module * * _9;
  char * const _10;
  const char * _11;
  char * const _12;
  const char * _13;
  struct Credit * * _16;
  struct vector * pretmp_25;
  struct vector * prephitmp_26;

  <bb 2>:
  this_2(D)->D.57735._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI6CreditE + 16B];
  # DEBUG D#2825 => &this_2(D)->_data
  # DEBUG this => D#2825
  # DEBUG D#1101 => &D#2825->D.57691
  # DEBUG this => D#1101
  _7 = MEM[(struct vector *)this_2(D) + 112B].D.57691._M_impl._M_finish;
  __first_14 = MEM[(struct vector *)this_2(D) + 112B].D.57691._M_impl._M_start;
  # DEBUG __first => __first_14
  # DEBUG __last => _7
  # DEBUG __first => __first_14
  if (_7 == __first_14)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_55 = PHI <__first_14(3), __first_17(7)>
  # DEBUG __first => __first_55
  # DEBUG __r => __first_55
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _16 = MEM[(struct _Vector_base *)__first_55]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _16
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _16
  # DEBUG __n => D#1087
  if (_16 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _16
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _16
  # DEBUG this => D#1079
  # DEBUG D.134075 => D#1080
  operator delete (_16);

  <bb 6>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__first_55] ={v} {CLOBBER};
  __first_17 = __first_55 + 24;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (_7 == __first_17)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 18>:
  pretmp_25 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;

  <bb 9>:
  # prephitmp_26 = PHI <pretmp_25(18), __first_14(2)>
  # DEBUG D#1102 => &D#2825->D.57691
  # DEBUG this => D#1102
  # DEBUG D#1078 => D#1102->_M_impl._M_end_of_storage
  # DEBUG D#1077 => (long int) D#1078
  # DEBUG D#2826 => MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start
  # DEBUG D#1076 => (long int) D#2826
  # DEBUG D#1075 => D#1077 - D#1076
  # DEBUG D#1074 => D#1075 /[ex] 24
  # DEBUG D#1071 => D#1102
  # DEBUG D#1072 => (long unsigned int) D#1074
  # DEBUG __p => D#2826
  # DEBUG this => D#1071
  # DEBUG __n => D#1072
  # DEBUG D#1070 => D#1072
  # DEBUG D#1069 => D#1071
  if (prephitmp_26 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#1068 => &D#1069->_M_impl
  # DEBUG D#1066 => D#1068
  # DEBUG D#1067 => D#1070
  # DEBUG __p => D#2826
  # DEBUG __a => D#1066
  # DEBUG __n => D#1067
  # DEBUG D#1065 => D#1067
  # DEBUG D#1064 => D#1066
  # DEBUG D#1062 => D#1064
  # DEBUG D#1063 => D#1065
  # DEBUG __p => D#2826
  # DEBUG this => D#1062
  # DEBUG D.134089 => D#1063
  operator delete (prephitmp_26);

  <bb 11>:
  # DEBUG D#1073 => &D#1102->_M_impl
  # DEBUG this => D#1073
  # DEBUG this => D#1073
  # DEBUG this => D#1073
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#2824 => &this_2(D)->D.57735
  # DEBUG this => D#2824
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#498 => &D#2824->_children
  # DEBUG this => D#498
  # DEBUG D#492 => &D#498->D.29566
  # DEBUG this => D#492
  # DEBUG D#495 => D#498->D.29566._M_impl._M_finish
  # DEBUG D#494 => D#498->D.29566._M_impl._M_start
  # DEBUG D#289 => D#494
  # DEBUG D#290 => D#495
  # DEBUG __first => D#289
  # DEBUG __last => D#290
  # DEBUG D.102059 => D#291
  # DEBUG D#288 => D#290
  # DEBUG D#287 => D#289
  # DEBUG D#285 => D#287
  # DEBUG D#286 => D#288
  # DEBUG __first => D#285
  # DEBUG __last => D#286
  # DEBUG D#284 => D#286
  # DEBUG D#283 => D#285
  # DEBUG D#281 => D#283
  # DEBUG D#282 => D#284
  # DEBUG D.100759 => D#281
  # DEBUG D.100758 => D#282
  # DEBUG D#493 => &D#498->D.29566
  # DEBUG this => D#493
  # DEBUG D#491 => D#493->_M_impl._M_end_of_storage
  # DEBUG D#490 => (long int) D#491
  _9 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#489 => (long int) _9
  # DEBUG D#488 => D#490 - D#489
  # DEBUG D#487 => D#488 /[ex] 8
  # DEBUG D#484 => D#493
  # DEBUG D#485 => (long unsigned int) D#487
  # DEBUG __p => _9
  # DEBUG this => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  if (_9 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#481 => &D#482->_M_impl
  # DEBUG D#479 => D#481
  # DEBUG D#480 => D#483
  # DEBUG __p => _9
  # DEBUG __a => D#479
  # DEBUG __n => D#480
  # DEBUG D#478 => D#480
  # DEBUG D#477 => D#479
  # DEBUG D#475 => D#477
  # DEBUG D#476 => D#478
  # DEBUG __p => _9
  # DEBUG this => D#475
  # DEBUG D.134020 => D#476
  operator delete (_9);

  <bb 13>:
  # DEBUG D#486 => &D#493->_M_impl
  # DEBUG this => D#486
  # DEBUG this => D#486
  # DEBUG this => D#486
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#497 => &D#2824->_fullname
  # DEBUG this => D#497
  # DEBUG this => D#497
  # DEBUG this => D#497
  _10 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  _11 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_10 != _11)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#497].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#497
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  # DEBUG D#464 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _10
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _10
  # DEBUG this => D#458
  # DEBUG D.134033 => D#459
  operator delete (_10);

  <bb 15>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#496 => &D#2824->_name
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  _12 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  _13 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_12 != _13)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#496].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#496
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  # DEBUG D#464 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _12
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _12
  # DEBUG this => D#458
  # DEBUG D.134048 => D#459
  operator delete (_12);

  <bb 17>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function PipelineFIFO<T>::~PipelineFIFO() [with T = Flit] (_ZN12PipelineFIFOI4FlitED0Ev, funcdef_no=2404, decl_uid=56908, cgraph_uid=753, symbol_order=754)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::~PipelineFIFO() [with T = Flit] (struct PipelineFIFO * const this)
{
  struct vector * __first;
  struct vector * _8;
  struct Module * * _10;
  char * const _11;
  const char * _12;
  char * const _13;
  const char * _14;
  struct Flit * * _17;
  struct vector * pretmp_26;
  struct vector * prephitmp_27;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.56917._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI4FlitE + 16B];
  # DEBUG D#2828 => &this_2(D)->_data
  # DEBUG this => D#2828
  # DEBUG D#1035 => &D#2828->D.56873
  # DEBUG this => D#1035
  _8 = MEM[(struct vector *)this_2(D) + 112B].D.56873._M_impl._M_finish;
  __first_15 = MEM[(struct vector *)this_2(D) + 112B].D.56873._M_impl._M_start;
  # DEBUG __first => __first_15
  # DEBUG __last => _8
  # DEBUG __first => __first_15
  if (_8 == __first_15)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_56 = PHI <__first_15(3), __first_18(7)>
  # DEBUG __first => __first_56
  # DEBUG __r => __first_56
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _17 = MEM[(struct _Vector_base *)__first_56]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _17
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _17
  # DEBUG __n => D#1021
  if (_17 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _17
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _17
  # DEBUG this => D#1013
  # DEBUG D.134177 => D#1014
  operator delete (_17);

  <bb 6>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__first_56] ={v} {CLOBBER};
  __first_18 = __first_56 + 24;
  # DEBUG __first => __first_18
  # DEBUG __first => __first_18
  if (_8 == __first_18)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 18>:
  pretmp_26 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;

  <bb 9>:
  # prephitmp_27 = PHI <pretmp_26(18), __first_15(2)>
  # DEBUG D#1036 => &D#2828->D.56873
  # DEBUG this => D#1036
  # DEBUG D#1012 => D#1036->_M_impl._M_end_of_storage
  # DEBUG D#1011 => (long int) D#1012
  # DEBUG D#2829 => MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start
  # DEBUG D#1010 => (long int) D#2829
  # DEBUG D#1009 => D#1011 - D#1010
  # DEBUG D#1008 => D#1009 /[ex] 24
  # DEBUG D#1005 => D#1036
  # DEBUG D#1006 => (long unsigned int) D#1008
  # DEBUG __p => D#2829
  # DEBUG this => D#1005
  # DEBUG __n => D#1006
  # DEBUG D#1004 => D#1006
  # DEBUG D#1003 => D#1005
  if (prephitmp_27 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#1002 => &D#1003->_M_impl
  # DEBUG D#1000 => D#1002
  # DEBUG D#1001 => D#1004
  # DEBUG __p => D#2829
  # DEBUG __a => D#1000
  # DEBUG __n => D#1001
  # DEBUG D#999 => D#1001
  # DEBUG D#998 => D#1000
  # DEBUG D#996 => D#998
  # DEBUG D#997 => D#999
  # DEBUG __p => D#2829
  # DEBUG this => D#996
  # DEBUG D.134191 => D#997
  operator delete (prephitmp_27);

  <bb 11>:
  # DEBUG D#1007 => &D#1036->_M_impl
  # DEBUG this => D#1007
  # DEBUG this => D#1007
  # DEBUG this => D#1007
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#2827 => &this_2(D)->D.56917
  # DEBUG this => D#2827
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#498 => &D#2827->_children
  # DEBUG this => D#498
  # DEBUG D#492 => &D#498->D.29566
  # DEBUG this => D#492
  # DEBUG D#495 => D#498->D.29566._M_impl._M_finish
  # DEBUG D#494 => D#498->D.29566._M_impl._M_start
  # DEBUG D#289 => D#494
  # DEBUG D#290 => D#495
  # DEBUG __first => D#289
  # DEBUG __last => D#290
  # DEBUG D.102059 => D#291
  # DEBUG D#288 => D#290
  # DEBUG D#287 => D#289
  # DEBUG D#285 => D#287
  # DEBUG D#286 => D#288
  # DEBUG __first => D#285
  # DEBUG __last => D#286
  # DEBUG D#284 => D#286
  # DEBUG D#283 => D#285
  # DEBUG D#281 => D#283
  # DEBUG D#282 => D#284
  # DEBUG D.100759 => D#281
  # DEBUG D.100758 => D#282
  # DEBUG D#493 => &D#498->D.29566
  # DEBUG this => D#493
  # DEBUG D#491 => D#493->_M_impl._M_end_of_storage
  # DEBUG D#490 => (long int) D#491
  _10 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#489 => (long int) _10
  # DEBUG D#488 => D#490 - D#489
  # DEBUG D#487 => D#488 /[ex] 8
  # DEBUG D#484 => D#493
  # DEBUG D#485 => (long unsigned int) D#487
  # DEBUG __p => _10
  # DEBUG this => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  if (_10 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#481 => &D#482->_M_impl
  # DEBUG D#479 => D#481
  # DEBUG D#480 => D#483
  # DEBUG __p => _10
  # DEBUG __a => D#479
  # DEBUG __n => D#480
  # DEBUG D#478 => D#480
  # DEBUG D#477 => D#479
  # DEBUG D#475 => D#477
  # DEBUG D#476 => D#478
  # DEBUG __p => _10
  # DEBUG this => D#475
  # DEBUG D.134122 => D#476
  operator delete (_10);

  <bb 13>:
  # DEBUG D#486 => &D#493->_M_impl
  # DEBUG this => D#486
  # DEBUG this => D#486
  # DEBUG this => D#486
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#497 => &D#2827->_fullname
  # DEBUG this => D#497
  # DEBUG this => D#497
  # DEBUG this => D#497
  _11 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  _12 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_11 != _12)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#497].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#497
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  # DEBUG D#464 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _11
  # DEBUG this => D#458
  # DEBUG D.134135 => D#459
  operator delete (_11);

  <bb 15>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#496 => &D#2827->_name
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  _13 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  _14 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_13 != _14)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#496].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#496
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  # DEBUG D#464 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _13
  # DEBUG this => D#458
  # DEBUG D.134150 => D#459
  operator delete (_13);

  <bb 17>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function PipelineFIFO<T>::~PipelineFIFO() [with T = EventRouter::tArrivalEvent] (_ZN12PipelineFIFOIN11EventRouter13tArrivalEventEED0Ev, funcdef_no=2412, decl_uid=58544, cgraph_uid=761, symbol_order=762)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::~PipelineFIFO() [with T = EventRouter::tArrivalEvent] (struct PipelineFIFO * const this)
{
  struct vector * __first;
  struct vector * _8;
  struct Module * * _10;
  char * const _11;
  const char * _12;
  char * const _13;
  const char * _14;
  struct tArrivalEvent * * _17;
  struct vector * pretmp_26;
  struct vector * prephitmp_27;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.58553._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOIN11EventRouter13tArrivalEventEE + 16B];
  # DEBUG D#2831 => &this_2(D)->_data
  # DEBUG this => D#2831
  # DEBUG D#1156 => &D#2831->D.58509
  # DEBUG this => D#1156
  _8 = MEM[(struct vector *)this_2(D) + 112B].D.58509._M_impl._M_finish;
  __first_15 = MEM[(struct vector *)this_2(D) + 112B].D.58509._M_impl._M_start;
  # DEBUG __first => __first_15
  # DEBUG __last => _8
  # DEBUG __first => __first_15
  if (_8 == __first_15)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_56 = PHI <__first_15(3), __first_18(7)>
  # DEBUG __first => __first_56
  # DEBUG __r => __first_56
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _17 = MEM[(struct _Vector_base *)__first_56]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _17
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _17
  # DEBUG __n => D#1142
  if (_17 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _17
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _17
  # DEBUG this => D#1134
  # DEBUG D.134279 => D#1135
  operator delete (_17);

  <bb 6>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__first_56] ={v} {CLOBBER};
  __first_18 = __first_56 + 24;
  # DEBUG __first => __first_18
  # DEBUG __first => __first_18
  if (_8 == __first_18)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 18>:
  pretmp_26 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;

  <bb 9>:
  # prephitmp_27 = PHI <pretmp_26(18), __first_15(2)>
  # DEBUG D#1157 => &D#2831->D.58509
  # DEBUG this => D#1157
  # DEBUG D#1133 => D#1157->_M_impl._M_end_of_storage
  # DEBUG D#1132 => (long int) D#1133
  # DEBUG D#2832 => MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start
  # DEBUG D#1131 => (long int) D#2832
  # DEBUG D#1130 => D#1132 - D#1131
  # DEBUG D#1129 => D#1130 /[ex] 24
  # DEBUG D#1126 => D#1157
  # DEBUG D#1127 => (long unsigned int) D#1129
  # DEBUG __p => D#2832
  # DEBUG this => D#1126
  # DEBUG __n => D#1127
  # DEBUG D#1125 => D#1127
  # DEBUG D#1124 => D#1126
  if (prephitmp_27 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#1123 => &D#1124->_M_impl
  # DEBUG D#1121 => D#1123
  # DEBUG D#1122 => D#1125
  # DEBUG __p => D#2832
  # DEBUG __a => D#1121
  # DEBUG __n => D#1122
  # DEBUG D#1120 => D#1122
  # DEBUG D#1119 => D#1121
  # DEBUG D#1117 => D#1119
  # DEBUG D#1118 => D#1120
  # DEBUG __p => D#2832
  # DEBUG this => D#1117
  # DEBUG D.134293 => D#1118
  operator delete (prephitmp_27);

  <bb 11>:
  # DEBUG D#1128 => &D#1157->_M_impl
  # DEBUG this => D#1128
  # DEBUG this => D#1128
  # DEBUG this => D#1128
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#2830 => &this_2(D)->D.58553
  # DEBUG this => D#2830
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#498 => &D#2830->_children
  # DEBUG this => D#498
  # DEBUG D#492 => &D#498->D.29566
  # DEBUG this => D#492
  # DEBUG D#495 => D#498->D.29566._M_impl._M_finish
  # DEBUG D#494 => D#498->D.29566._M_impl._M_start
  # DEBUG D#289 => D#494
  # DEBUG D#290 => D#495
  # DEBUG __first => D#289
  # DEBUG __last => D#290
  # DEBUG D.102059 => D#291
  # DEBUG D#288 => D#290
  # DEBUG D#287 => D#289
  # DEBUG D#285 => D#287
  # DEBUG D#286 => D#288
  # DEBUG __first => D#285
  # DEBUG __last => D#286
  # DEBUG D#284 => D#286
  # DEBUG D#283 => D#285
  # DEBUG D#281 => D#283
  # DEBUG D#282 => D#284
  # DEBUG D.100759 => D#281
  # DEBUG D.100758 => D#282
  # DEBUG D#493 => &D#498->D.29566
  # DEBUG this => D#493
  # DEBUG D#491 => D#493->_M_impl._M_end_of_storage
  # DEBUG D#490 => (long int) D#491
  _10 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#489 => (long int) _10
  # DEBUG D#488 => D#490 - D#489
  # DEBUG D#487 => D#488 /[ex] 8
  # DEBUG D#484 => D#493
  # DEBUG D#485 => (long unsigned int) D#487
  # DEBUG __p => _10
  # DEBUG this => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  if (_10 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#481 => &D#482->_M_impl
  # DEBUG D#479 => D#481
  # DEBUG D#480 => D#483
  # DEBUG __p => _10
  # DEBUG __a => D#479
  # DEBUG __n => D#480
  # DEBUG D#478 => D#480
  # DEBUG D#477 => D#479
  # DEBUG D#475 => D#477
  # DEBUG D#476 => D#478
  # DEBUG __p => _10
  # DEBUG this => D#475
  # DEBUG D.134224 => D#476
  operator delete (_10);

  <bb 13>:
  # DEBUG D#486 => &D#493->_M_impl
  # DEBUG this => D#486
  # DEBUG this => D#486
  # DEBUG this => D#486
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#497 => &D#2830->_fullname
  # DEBUG this => D#497
  # DEBUG this => D#497
  # DEBUG this => D#497
  _11 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  _12 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_11 != _12)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#497].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#497
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  # DEBUG D#464 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _11
  # DEBUG this => D#458
  # DEBUG D.134237 => D#459
  operator delete (_11);

  <bb 15>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#496 => &D#2830->_name
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  _13 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  _14 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_13 != _14)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#496].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#496
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  # DEBUG D#464 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _13
  # DEBUG this => D#458
  # DEBUG D.134252 => D#459
  operator delete (_13);

  <bb 17>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function PipelineFIFO<T>::~PipelineFIFO() [with T = Credit] (_ZN12PipelineFIFOI6CreditED0Ev, funcdef_no=2408, decl_uid=57726, cgraph_uid=757, symbol_order=758)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::~PipelineFIFO() [with T = Credit] (struct PipelineFIFO * const this)
{
  struct vector * __first;
  struct vector * _8;
  struct Module * * _10;
  char * const _11;
  const char * _12;
  char * const _13;
  const char * _14;
  struct Credit * * _17;
  struct vector * pretmp_26;
  struct vector * prephitmp_27;

  <bb 2>:
  # DEBUG this => this_2(D)
  this_2(D)->D.57735._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI6CreditE + 16B];
  # DEBUG D#2834 => &this_2(D)->_data
  # DEBUG this => D#2834
  # DEBUG D#1101 => &D#2834->D.57691
  # DEBUG this => D#1101
  _8 = MEM[(struct vector *)this_2(D) + 112B].D.57691._M_impl._M_finish;
  __first_15 = MEM[(struct vector *)this_2(D) + 112B].D.57691._M_impl._M_start;
  # DEBUG __first => __first_15
  # DEBUG __last => _8
  # DEBUG __first => __first_15
  if (_8 == __first_15)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_56 = PHI <__first_15(3), __first_18(7)>
  # DEBUG __first => __first_56
  # DEBUG __r => __first_56
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _17 = MEM[(struct _Vector_base *)__first_56]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _17
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _17
  # DEBUG __n => D#1087
  if (_17 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _17
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _17
  # DEBUG this => D#1079
  # DEBUG D.134381 => D#1080
  operator delete (_17);

  <bb 6>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__first_56] ={v} {CLOBBER};
  __first_18 = __first_56 + 24;
  # DEBUG __first => __first_18
  # DEBUG __first => __first_18
  if (_8 == __first_18)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 18>:
  pretmp_26 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;

  <bb 9>:
  # prephitmp_27 = PHI <pretmp_26(18), __first_15(2)>
  # DEBUG D#1102 => &D#2834->D.57691
  # DEBUG this => D#1102
  # DEBUG D#1078 => D#1102->_M_impl._M_end_of_storage
  # DEBUG D#1077 => (long int) D#1078
  # DEBUG D#2835 => MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start
  # DEBUG D#1076 => (long int) D#2835
  # DEBUG D#1075 => D#1077 - D#1076
  # DEBUG D#1074 => D#1075 /[ex] 24
  # DEBUG D#1071 => D#1102
  # DEBUG D#1072 => (long unsigned int) D#1074
  # DEBUG __p => D#2835
  # DEBUG this => D#1071
  # DEBUG __n => D#1072
  # DEBUG D#1070 => D#1072
  # DEBUG D#1069 => D#1071
  if (prephitmp_27 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#1068 => &D#1069->_M_impl
  # DEBUG D#1066 => D#1068
  # DEBUG D#1067 => D#1070
  # DEBUG __p => D#2835
  # DEBUG __a => D#1066
  # DEBUG __n => D#1067
  # DEBUG D#1065 => D#1067
  # DEBUG D#1064 => D#1066
  # DEBUG D#1062 => D#1064
  # DEBUG D#1063 => D#1065
  # DEBUG __p => D#2835
  # DEBUG this => D#1062
  # DEBUG D.134395 => D#1063
  operator delete (prephitmp_27);

  <bb 11>:
  # DEBUG D#1073 => &D#1102->_M_impl
  # DEBUG this => D#1073
  # DEBUG this => D#1073
  # DEBUG this => D#1073
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#2833 => &this_2(D)->D.57735
  # DEBUG this => D#2833
  MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#498 => &D#2833->_children
  # DEBUG this => D#498
  # DEBUG D#492 => &D#498->D.29566
  # DEBUG this => D#492
  # DEBUG D#495 => D#498->D.29566._M_impl._M_finish
  # DEBUG D#494 => D#498->D.29566._M_impl._M_start
  # DEBUG D#289 => D#494
  # DEBUG D#290 => D#495
  # DEBUG __first => D#289
  # DEBUG __last => D#290
  # DEBUG D.102059 => D#291
  # DEBUG D#288 => D#290
  # DEBUG D#287 => D#289
  # DEBUG D#285 => D#287
  # DEBUG D#286 => D#288
  # DEBUG __first => D#285
  # DEBUG __last => D#286
  # DEBUG D#284 => D#286
  # DEBUG D#283 => D#285
  # DEBUG D#281 => D#283
  # DEBUG D#282 => D#284
  # DEBUG D.100759 => D#281
  # DEBUG D.100758 => D#282
  # DEBUG D#493 => &D#498->D.29566
  # DEBUG this => D#493
  # DEBUG D#491 => D#493->_M_impl._M_end_of_storage
  # DEBUG D#490 => (long int) D#491
  _10 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
  # DEBUG D#489 => (long int) _10
  # DEBUG D#488 => D#490 - D#489
  # DEBUG D#487 => D#488 /[ex] 8
  # DEBUG D#484 => D#493
  # DEBUG D#485 => (long unsigned int) D#487
  # DEBUG __p => _10
  # DEBUG this => D#484
  # DEBUG __n => D#485
  # DEBUG D#483 => D#485
  # DEBUG D#482 => D#484
  if (_10 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#481 => &D#482->_M_impl
  # DEBUG D#479 => D#481
  # DEBUG D#480 => D#483
  # DEBUG __p => _10
  # DEBUG __a => D#479
  # DEBUG __n => D#480
  # DEBUG D#478 => D#480
  # DEBUG D#477 => D#479
  # DEBUG D#475 => D#477
  # DEBUG D#476 => D#478
  # DEBUG __p => _10
  # DEBUG this => D#475
  # DEBUG D.134326 => D#476
  operator delete (_10);

  <bb 13>:
  # DEBUG D#486 => &D#493->_M_impl
  # DEBUG this => D#486
  # DEBUG this => D#486
  # DEBUG this => D#486
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#497 => &D#2833->_fullname
  # DEBUG this => D#497
  # DEBUG this => D#497
  # DEBUG this => D#497
  _11 = MEM[(char * *)this_2(D) + 40B];
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  _12 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
  if (_11 != _12)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#497].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#497
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#497
  # DEBUG this => D#1
  # DEBUG this => D#497
  # DEBUG D#464 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _11
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _11
  # DEBUG this => D#458
  # DEBUG D.134339 => D#459
  operator delete (_11);

  <bb 15>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#497]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#496 => &D#2833->_name
  # DEBUG this => D#496
  # DEBUG this => D#496
  # DEBUG this => D#496
  _13 = MEM[(char * *)this_2(D) + 8B];
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  _14 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
  if (_13 != _14)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#496].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#496
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#496
  # DEBUG this => D#1
  # DEBUG this => D#496
  # DEBUG D#464 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _13
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _13
  # DEBUG this => D#458
  # DEBUG D.134354 => D#459
  operator delete (_13);

  <bb 17>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#496]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  operator delete (this_2(D));
  return;

}



;; Function void std::fill(std::_Bit_iterator, std::_Bit_iterator, const bool&) (_ZSt4fillSt13_Bit_iteratorS_RKb, funcdef_no=1412, decl_uid=27086, cgraph_uid=340, symbol_order=341)

Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::fill(std::_Bit_iterator, std::_Bit_iterator, const bool&) (struct _Bit_iterator __first, struct _Bit_iterator __last, const bool & __x)
{
  const unsigned int __last$_M_offset;
  const unsigned int __first$8;
  const unsigned int __first$8;
  _Bit_type * __first;
  const unsigned int __last$_M_offset;
  _Bit_type * const __last$_M_p;
  _Bit_type * __last;
  _Bit_type * __first;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __last$D26904$_M_p;
  _Bit_type * __first$D26904$_M_p;
  long unsigned int * __first;
  struct _Bit_iterator D.27095;
  struct _Bit_iterator D.27093;
  const int D.27092;
  bool _5;
  bool _11;
  bool _19;
  long unsigned int _22;
  long unsigned int pretmp_27;
  long unsigned int _36;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _54;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  bool _84;
  bool _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _94;
  long unsigned int _97;
  long unsigned int _108;
  long unsigned int _109;
  long unsigned int _112;
  long unsigned int _113;
  int _116;
  int _117;
  bool _118;
  long unsigned int _119;
  bool _120;
  bool _121;

  <bb 2>:
  __first_10 = MEM[(struct _Bit_iterator *)&__first];
  # DEBUG __first => __first_10
  __last$_M_p_16 = MEM[(struct _Bit_iterator *)&__last];
  # DEBUG __last => __last$_M_p_16
  # DEBUG __first$D26904$_M_p => __first_10
  # DEBUG __last$D26904$_M_p => __last$_M_p_16
  if (__first_10 != __last$_M_p_16)
    goto <bb 3>;
  else
    goto <bb 24>;

  <bb 3>:
  _5 = *__x_4(D);
  _116 = (int) _5;
  _117 = -_116;
  __first_9 = __first_10 + 8;
  # DEBUG D#204 => &D.27092
  # DEBUG __first => __first_9
  # DEBUG __last => __last$_M_p_16
  # DEBUG D#203 => D#204
  # DEBUG __value => D#203
  # DEBUG __it => __last$_M_p_16
  # DEBUG __it => __last$_M_p_16
  # DEBUG __it => __first_9
  # DEBUG __it => __first_9
  # DEBUG D#128 => D#203
  # DEBUG __first => __first_9
  # DEBUG __last => __last$_M_p_16
  # DEBUG __value => D#128
  # DEBUG __tmp => _117
  # DEBUG __first => __first_9
  if (__first_9 == __last$_M_p_16)
    goto <bb 4>;
  else
    goto <bb 12>;

  <bb 4>:
  # DEBUG this => &D.27093
  # DEBUG __x => __first_9
  # DEBUG __y => 0
  # DEBUG D#20 => &D.27093.D.26904
  # DEBUG this => D#20
  # DEBUG __x => __first_9
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __first => __first_10
  __first$8_20 = MEM[(struct _Bit_iterator *)&__first + 8B];
  # DEBUG __first$8 => __first$8_20
  # DEBUG __x => _5
  # DEBUG __first$_M_p => __first_10
  # DEBUG __first$_M_offset => __first$8_20
  if (_5 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  goto <bb 17>;

  <bb 6>:

  <bb 7>:
  # __first_6 = PHI <__first_10(6), __first_105(11)>
  # __first$8_1 = PHI <__first$8_20(6), __first$8_104(11)>
  # DEBUG __first$_M_offset => __first$8_1
  # DEBUG __first$_M_p => __first_6
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  _88 = __first$8_1 == 0;
  _84 = __first_9 == __first_6;
  _11 = _88 & _84;
  if (_11 != 0)
    goto <bb 40>;
  else
    goto <bb 8>;

  <bb 8>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _22 = 1 << __first$8_1;
  # DEBUG this => NULL
  # DEBUG __x => __first_6
  # DEBUG __y => _22
  # DEBUG this => NULL
  # DEBUG __x => _5
  _54 = *__first_6;
  _36 = ~_22;
  _119 = _54 & _36;
  *__first_6 = _119;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$8_1 + 1
  if (__first$8_1 == 63)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # DEBUG __first$_M_offset => 0
  __first_101 = __first_6 + 8;
  # DEBUG __first$_M_p => __first_101
  goto <bb 11>;

  <bb 10>:
  __first$8_55 = __first$8_1 + 1;

  <bb 11>:
  # __first_105 = PHI <__first_101(9), __first_6(10)>
  # __first$8_104 = PHI <0(9), __first$8_55(10)>
  goto <bb 7>;

  <bb 12>:
  pretmp_27 = (long unsigned int) _117;

  <bb 13>:
  # __first_82 = PHI <__first_9(12), __first_23(14)>
  # DEBUG __first => __first_82
  *__first_82 = pretmp_27;
  __first_23 = __first_82 + 8;
  # DEBUG __first => __first_23
  # DEBUG __first => __first_23
  if (__last$_M_p_16 == __first_23)
    goto <bb 4>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  __first$8_62 = __first$8_53 + 1;

  <bb 16>:
  # __first_46 = PHI <__first_51(15), __first_63(18)>
  # __first$8_83 = PHI <__first$8_62(15), 0(18)>

  <bb 17>:
  # __first_51 = PHI <__first_46(16), __first_10(5)>
  # __first$8_53 = PHI <__first$8_83(16), __first$8_20(5)>
  # DEBUG __first$_M_offset => __first$8_53
  # DEBUG __first$_M_p => __first_51
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  _118 = __first$8_53 == 0;
  _120 = __first_9 == __first_51;
  _121 = _118 & _120;
  if (_121 != 0)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 18>:
  # DEBUG __first$_M_offset => 0
  __first_63 = __first_51 + 8;
  # DEBUG __first$_M_p => __first_63
  goto <bb 16>;

  <bb 19>:
  __first$_M_offset_44 = __first$_M_offset_35 + 1;

  <bb 20>:
  # __last$_M_p_65 = PHI <__last$_M_p_33(19), __last$_M_p_45(23)>
  # __first$_M_offset_64 = PHI <__first$_M_offset_44(19), 0(23)>

  <bb 21>:
  # __last$_M_p_33 = PHI <__last$_M_p_65(20), __last$_M_p_16(41)>
  # __first$_M_offset_35 = PHI <__first$_M_offset_64(20), 0(41)>
  # DEBUG __first$_M_offset => __first$_M_offset_35
  # DEBUG __first$_M_p => __last$_M_p_33
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_p_16 == __last$_M_p_33)
    goto <bb 22>;
  else
    goto <bb 50>;

  <bb 22>:
  # DEBUG __first$_M_offset => __first$_M_offset_35
  # DEBUG __first$_M_p => __last$_M_p_33
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_offset_26 == __first$_M_offset_35)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 23>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_45 = __last$_M_p_33 + 8;
  # DEBUG __first$_M_p => __last$_M_p_45
  goto <bb 20>;

  <bb 24>:
  _19 = *__x_4(D);
  # DEBUG __first$D26904$_M_p => NULL
  __first$8_15 = MEM[(struct _Bit_iterator *)&__first + 8B];
  # DEBUG __first$8 => __first$8_15
  # DEBUG __last$D26904$_M_p => NULL
  __last$_M_offset_28 = MEM[(struct _Bit_iterator *)&__last + 8B];
  # DEBUG __last$_M_offset => __last$_M_offset_28
  # DEBUG __x => _19
  # DEBUG __first$_M_p => __first_10
  # DEBUG __first$_M_offset => __first$8_15
  if (_19 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  goto <bb 35>;

  <bb 26>:

  <bb 27>:
  # __first_103 = PHI <__first_10(26), __first_29(32)>
  # __first$8_107 = PHI <__first$8_15(26), __first$8_14(32)>
  # DEBUG __first$_M_offset => __first$8_107
  # DEBUG __first$_M_p => __first_103
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_p_16 == __first_103)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG __first$_M_offset => __first$8_107
  # DEBUG __first$_M_p => __first_103
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_offset_28 == __first$8_107)
    goto <bb 38>;
  else
    goto <bb 29>;

  <bb 29>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _109 = 1 << __first$8_107;
  # DEBUG this => NULL
  # DEBUG __x => __first_103
  # DEBUG __y => _109
  # DEBUG this => NULL
  # DEBUG __x => _19
  _108 = *__first_103;
  _113 = ~_109;
  _112 = _108 & _113;
  *__first_103 = _112;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$8_107 + 1
  if (__first$8_107 == 63)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  __first$8_73 = __first$8_107 + 1;
  goto <bb 32>;

  <bb 31>:
  # DEBUG __first$_M_offset => 0
  __first_37 = __first_103 + 8;
  # DEBUG __first$_M_p => __first_37

  <bb 32>:
  # __first_29 = PHI <__first_103(30), __first_37(31)>
  # __first$8_14 = PHI <__first$8_73(30), 0(31)>
  goto <bb 27>;

  <bb 33>:
  __first$8_80 = __first$8_71 + 1;

  <bb 34>:
  # __first_17 = PHI <__first_69(33), __first_81(37)>
  # __first$8_50 = PHI <__first$8_80(33), 0(37)>

  <bb 35>:
  # __first_69 = PHI <__first_17(34), __first_10(25)>
  # __first$8_71 = PHI <__first$8_50(34), __first$8_15(25)>
  # DEBUG __first$_M_offset => __first$8_71
  # DEBUG __first$_M_p => __first_69
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_p_16 == __first_69)
    goto <bb 36>;
  else
    goto <bb 51>;

  <bb 36>:
  # DEBUG __first$_M_offset => __first$8_71
  # DEBUG __first$_M_p => __first_69
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_offset_28 == __first$8_71)
    goto <bb 38>;
  else
    goto <bb 51>;

  <bb 37>:
  # DEBUG __first$_M_offset => 0
  __first_81 = __first_69 + 8;
  # DEBUG __first$_M_p => __first_81
  goto <bb 34>;

  <bb 38>:
  return;

  <bb 39>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _56 = 1 << __first$8_53;
  # DEBUG this => NULL
  # DEBUG __x => __first_51
  # DEBUG __y => _56
  # DEBUG this => NULL
  # DEBUG __x => _5
  _57 = *__first_51;
  _58 = _56 | _57;
  *__first_51 = _58;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$8_53 + 1
  if (__first$8_53 == 63)
    goto <bb 18>;
  else
    goto <bb 15>;

  <bb 40>:
  D.27093 ={v} {CLOBBER};
  # DEBUG this => &D.27095
  # DEBUG __x => __last$_M_p_16
  # DEBUG __y => 0
  # DEBUG D#20 => &D.27095.D.26904
  # DEBUG this => D#20
  # DEBUG __x => __last$_M_p_16
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __last$_M_p => __last$_M_p_16
  __last$_M_offset_26 = MEM[(struct _Bit_iterator *)&__last + 8B];
  # DEBUG __last$_M_offset => __last$_M_offset_26
  # DEBUG __x => _5
  # DEBUG __first$_M_p => __last$_M_p_16
  # DEBUG __first$_M_offset => 0
  if (_5 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  goto <bb 21>;

  <bb 42>:

  <bb 43>:
  # __last$_M_p_86 = PHI <__last$_M_p_16(42), __last$_M_p_32(48)>
  # __first$_M_offset_93 = PHI <0(42), __first$_M_offset_25(48)>
  # DEBUG __first$_M_offset => __first$_M_offset_93
  # DEBUG __first$_M_p => __last$_M_p_86
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_p_16 == __last$_M_p_86)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  # DEBUG __first$_M_offset => __first$_M_offset_93
  # DEBUG __first$_M_p => __last$_M_p_86
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_offset_26 == __first$_M_offset_93)
    goto <bb 49>;
  else
    goto <bb 45>;

  <bb 45>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _97 = 1 << __first$_M_offset_93;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_86
  # DEBUG __y => _97
  # DEBUG this => NULL
  # DEBUG __x => _5
  _94 = *__last$_M_p_86;
  _90 = ~_97;
  _89 = _94 & _90;
  *__last$_M_p_86 = _89;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$_M_offset_93 + 1
  if (__first$_M_offset_93 == 63)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  __first$_M_offset_48 = __first$_M_offset_93 + 1;
  goto <bb 48>;

  <bb 47>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_34 = __last$_M_p_86 + 8;
  # DEBUG __first$_M_p => __last$_M_p_34

  <bb 48>:
  # __last$_M_p_32 = PHI <__last$_M_p_86(46), __last$_M_p_34(47)>
  # __first$_M_offset_25 = PHI <__first$_M_offset_48(46), 0(47)>
  goto <bb 43>;

  <bb 49>:
  D.27095 ={v} {CLOBBER};
  goto <bb 38>;

  <bb 50>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _38 = 1 << __first$_M_offset_35;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_33
  # DEBUG __y => _38
  # DEBUG this => NULL
  # DEBUG __x => _5
  _39 = *__last$_M_p_33;
  _40 = _38 | _39;
  *__last$_M_p_33 = _40;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$_M_offset_35 + 1
  if (__first$_M_offset_35 == 63)
    goto <bb 23>;
  else
    goto <bb 19>;

  <bb 51>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _74 = 1 << __first$8_71;
  # DEBUG this => NULL
  # DEBUG __x => __first_69
  # DEBUG __y => _74
  # DEBUG this => NULL
  # DEBUG __x => _19
  _75 = *__first_69;
  _76 = _74 | _75;
  *__first_69 = _76;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$8_71 + 1
  if (__first$8_71 == 63)
    goto <bb 37>;
  else
    goto <bb 33>;

}



;; Function EventNextVCState::~EventNextVCState() (_ZN16EventNextVCStateD2Ev, funcdef_no=5086, decl_uid=48499, cgraph_uid=3435, symbol_order=3442)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
EventNextVCState::~EventNextVCState() (struct EventNextVCState * const this)
{
  struct list * __first;
  struct _Node * __tmp;
  eNextVCState * _7;
  int * _8;
  int * _9;
  int * _10;
  struct Module * _11;
  int * _14;
  struct list * _49;
  struct list * pretmp_61;
  struct list * prephitmp_62;
  struct _List_node_base * _74;

  <bb 2>:
  this_2(D)->D.48512._vptr.Module = &MEM[(void *)&_ZTV16EventNextVCState + 16B];
  # DEBUG D#888 => &this_2(D)->_state
  # DEBUG this => D#888
  # DEBUG D#870 => &D#888->D.48427
  # DEBUG this => D#870
  # DEBUG D#873 => D#888->D.48427._M_impl._M_finish
  # DEBUG D#872 => D#888->D.48427._M_impl._M_start
  # DEBUG __first => D#872
  # DEBUG __last => D#873
  # DEBUG D.103910 => NULL
  # DEBUG D#443 => D#872
  # DEBUG D#444 => D#873
  # DEBUG __first => D#443
  # DEBUG __last => D#444
  # DEBUG D#442 => D#444
  # DEBUG D#441 => D#443
  # DEBUG D#439 => D#441
  # DEBUG D#440 => D#442
  # DEBUG D.101757 => D#439
  # DEBUG D.101756 => D#440
  # DEBUG D#871 => &D#888->D.48427
  # DEBUG this => D#871
  # DEBUG D#869 => D#871->_M_impl._M_end_of_storage
  # DEBUG D#868 => (long int) D#869
  _7 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
  # DEBUG D#867 => (long int) _7
  # DEBUG D#866 => D#868 - D#867
  # DEBUG D#865 => D#866 /[ex] 4
  # DEBUG D#864 => (long unsigned int) D#865
  # DEBUG this => D#871
  # DEBUG __p => _7
  # DEBUG __n => D#864
  if (_7 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#862 => &D#871->_M_impl
  # DEBUG D#860 => D#862
  # DEBUG D#861 => D#864
  # DEBUG __p => _7
  # DEBUG __a => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  # DEBUG D#856 => D#858
  # DEBUG D#857 => D#859
  # DEBUG __p => _7
  # DEBUG this => D#856
  # DEBUG D.104193 => D#857
  operator delete (_7);

  <bb 4>:
  # DEBUG D#863 => &D#871->_M_impl
  # DEBUG this => D#863
  # DEBUG this => D#863
  # DEBUG this => D#863
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#2841 => &this_2(D)->_waiting
  # DEBUG this => D#2841
  # DEBUG D#882 => &D#2841->D.47680
  # DEBUG this => D#882
  _49 = MEM[(struct vector *)this_2(D) + 200B].D.47680._M_impl._M_finish;
  __first_50 = MEM[(struct vector *)this_2(D) + 200B].D.47680._M_impl._M_start;
  # DEBUG __first => __first_50
  # DEBUG __last => _49
  # DEBUG __first => __first_50
  if (_49 == __first_50)
    goto <bb 13>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __first_81 = PHI <__first_50(5), __first_56(8)>
  # DEBUG __first => __first_81
  # DEBUG __r => __first_81
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_52 = MEM[(struct _List_base *)__first_81]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_52
  # DEBUG __cur => __tmp_52
  _74 = &MEM[(struct _List_base *)__first_81]._M_impl._M_node.D.45287;
  if (__tmp_52 == _74)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 7>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__first_81] ={v} {CLOBBER};
  __first_56 = __first_81 + 24;
  # DEBUG __first => __first_56
  # DEBUG __first => __first_56
  if (_49 == __first_56)
    goto <bb 12>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 6>;

  <bb 9>:

  <bb 10>:
  # __tmp_78 = PHI <__tmp_52(9), __tmp_55(11)>
  # DEBUG __cur => __tmp_78
  # DEBUG __tmp => __tmp_78
  __tmp_55 = __tmp_78->D.69419._M_next;
  # DEBUG __cur => __tmp_55
  # DEBUG D#878 => &__tmp_78->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_78
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_78
  # DEBUG this => D#450
  # DEBUG D.134597 => D#451
  operator delete (__tmp_78);
  # DEBUG __cur => __tmp_55
  if (__tmp_55 == _74)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:
  pretmp_61 = MEM[(struct _Vector_base *)this_2(D) + 200B]._M_impl._M_start;

  <bb 13>:
  # prephitmp_62 = PHI <pretmp_61(12), __first_50(4)>
  # DEBUG D#883 => &D#2841->D.47680
  # DEBUG this => D#883
  # DEBUG D#853 => D#883->_M_impl._M_end_of_storage
  # DEBUG D#852 => (long int) D#853
  # DEBUG D#2842 => MEM[(struct _Vector_base *)this_2(D) + 200B]._M_impl._M_start
  # DEBUG D#851 => (long int) D#2842
  # DEBUG D#850 => D#852 - D#851
  # DEBUG D#849 => D#850 /[ex] 24
  # DEBUG D#846 => D#883
  # DEBUG D#847 => (long unsigned int) D#849
  # DEBUG __p => D#2842
  # DEBUG this => D#846
  # DEBUG __n => D#847
  # DEBUG D#845 => D#847
  # DEBUG D#844 => D#846
  if (prephitmp_62 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#841 => D#843
  # DEBUG D#842 => D#845
  # DEBUG __p => D#2842
  # DEBUG __a => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#837 => D#839
  # DEBUG D#838 => D#840
  # DEBUG __p => D#2842
  # DEBUG this => D#837
  # DEBUG D.134611 => D#838
  operator delete (prephitmp_62);

  <bb 15>:
  # DEBUG D#848 => &D#883->_M_impl
  # DEBUG this => D#848
  # DEBUG this => D#848
  # DEBUG this => D#848
  MEM[(struct  &)this_2(D) + 200] ={v} {CLOBBER};
  # DEBUG D#887 => &this_2(D)->_inputVC
  # DEBUG this => D#887
  # DEBUG D#515 => &D#887->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#887->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#887->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#887->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _8 = MEM[(struct _Vector_base *)this_2(D) + 176B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _8
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _8
  # DEBUG __n => D#509
  if (_8 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _8
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _8
  # DEBUG this => D#501
  # DEBUG D.104178 => D#502
  operator delete (_8);

  <bb 17>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 176] ={v} {CLOBBER};
  # DEBUG D#886 => &this_2(D)->_input
  # DEBUG this => D#886
  # DEBUG D#515 => &D#886->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#886->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#886->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#886->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _9 = MEM[(struct _Vector_base *)this_2(D) + 152B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _9
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _9
  # DEBUG __n => D#509
  if (_9 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _9
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _9
  # DEBUG this => D#501
  # DEBUG D.104163 => D#502
  operator delete (_9);

  <bb 19>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 152] ={v} {CLOBBER};
  # DEBUG D#885 => &this_2(D)->_presence
  # DEBUG this => D#885
  # DEBUG D#515 => &D#885->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#885->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#885->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#885->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _10 = MEM[(struct _Vector_base *)this_2(D) + 128B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _10
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _10
  # DEBUG __n => D#509
  if (_10 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _10
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _10
  # DEBUG this => D#501
  # DEBUG D.104148 => D#502
  operator delete (_10);

  <bb 21>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 128] ={v} {CLOBBER};
  # DEBUG D#884 => &this_2(D)->_credits
  # DEBUG this => D#884
  # DEBUG D#515 => &D#884->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#884->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#884->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#884->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _14 = MEM[(struct _Vector_base *)this_2(D) + 104B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _14
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _14
  # DEBUG __n => D#509
  if (_14 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _14
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _14
  # DEBUG this => D#501
  # DEBUG D.104133 => D#502
  operator delete (_14);

  <bb 23>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 104] ={v} {CLOBBER};
  _11 = &this_2(D)->D.48512;
  Module::~Module (_11);
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function void EventRouter::_IncomingFlits() (_ZN11EventRouter14_IncomingFlitsEv, funcdef_no=2166, decl_uid=54545, cgraph_uid=515, symbol_order=516)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
void EventRouter::_IncomingFlits() (struct EventRouter * const this)
{
  signed long graphite_IV.4347;
  struct tArrivalEvent * & D.135064;
  struct tArrivalEvent * * D.135063;
  struct vector & D.135062;
  struct vector * D.135061;
  char_type D.135056;
  char __c;
  char_type D.135053;
  char __c;
  char_type D.135050;
  struct basic_ostream & D.135044;
  char_type D.135041;
  char __c;
  char_type D.135038;
  char __c;
  char_type D.135035;
  struct basic_ostream & D.135029;
  char_type D.134994;
  char __c;
  char_type D.134991;
  char __c;
  char_type D.134988;
  struct basic_ostream & D.134982;
  int l;
  int out_port;
  int out_vc;
  int vc;
  int input;
  struct tArrivalEvent * aevt;
  struct Buffer * cur_buf;
  struct Flit * f;
  const struct string D.62972;
  const struct string D.62968;
  const struct string D.62962;
  struct PipelineFIFO * _10;
  struct Flit * * const _11;
  long unsigned int _13;
  long unsigned int _14;
  struct queue & _15;
  long unsigned int _16;
  long unsigned int _22;
  struct Flit * * const _23;
  bool _25;
  int (*__vtbl_ptr_type) () * _28;
  struct Module * _29;
  char * const _32;
  char * const _34;
  void (*<T75c3>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _36;
  bool _38;
  int pretmp_40;
  char * const _44;
  char * const _46;
  int out_vc.464_47;
  int out_port.465_48;
  bool _52;
  int (*__vtbl_ptr_type) () * _55;
  struct Module * _56;
  char * const _60;
  bool _64;
  int _70;
  struct ostream * gWatchOut.466_71;
  struct basic_ostream & _73;
  const size_type _74;
  const size_type _75;
  struct basic_ostream & _77;
  struct basic_ostream & _79;
  int _81;
  bool _82;
  int _88;
  bool _92;
  bool _94;
  bool _96;
  int _98;
  struct PipelineFIFO * _100;
  const size_type _102;
  struct basic_ostream & _104;
  struct Buffer * * _106;
  struct vector * _107;
  struct vector * _108;
  struct queue * _109;
  _Bit_type * _110;
  _Bit_type * _111;
  long unsigned int _112;
  unsigned int _113;
  unsigned int _114;
  long unsigned int _115;
  long unsigned int _116;
  _Bit_type * _117;
  long unsigned int _118;
  long unsigned int _119;
  struct vector & _120;
  long unsigned int _121;
  struct Buffer * & _122;
  struct Flit * * _124;
  struct Flit * * _125;
  struct Flit * * _126;
  struct VC * * _127;
  long unsigned int _128;
  struct VC * & _129;
  struct VC * _130;
  struct VC * * const _131;
  struct VC * const & _132;
  struct VC * _133;
  const struct OutputSet * _134;
  struct VC * * _135;
  struct VC * & _136;
  struct VC * _137;
  long unsigned int _138;
  long unsigned int _139;
  _Bit_type * _145;
  struct vector & _146;
  long int _147;
  char * const _148;
  struct basic_ostream & _149;
  long int _150;
  char * const _151;
  struct basic_ostream & _152;
  const int _153;
  struct VC * * const _154;
  long unsigned int _155;
  struct VC * const & _156;
  struct VC * _157;
  const int _158;
  int _159;
  long unsigned int _160;
  struct vector * _161;
  long unsigned int _162;
  struct vector & _163;
  struct tArrivalEvent * * _164;
  long unsigned int _165;
  struct tArrivalEvent * & _166;
  const int _167;
  struct VC * * const _168;
  long unsigned int _169;
  struct VC * const & _170;
  struct VC * _171;
  const int _172;
  long int _173;
  char * const _174;
  struct basic_ostream & _175;
  char * const _176;
  const struct __ctype_type * _182;
  const struct __ctype_type * _224;
  const struct __ctype_type * _229;
  struct Flit * * _230;
  struct Flit * * * _231;
  struct Flit * * * _232;
  struct Flit * * _233;
  struct Flit * * _234;
  long int _239;
  sizetype _240;
  struct basic_ios * _241;
  struct basic_ostream & _244;
  int _245;
  char _246;
  char_type _249;
  int (*__vtbl_ptr_type) () * _254;
  int (*__vtbl_ptr_type) () _255;
  void * PROF_259;
  char_type _261;
  int prephitmp_265;
  struct tArrivalEvent * & _266;
  struct tArrivalEvent * * _268;
  int pretmp_269;
  int prephitmp_270;
  long int _273;
  sizetype _274;
  struct basic_ios * _275;
  struct basic_ostream & _278;
  struct basic_ostream & _279;
  char _280;
  int pretmp_281;
  int pretmp_282;
  char_type _283;
  int prephitmp_284;
  long unsigned int _285;
  struct Module * pretmp_287;
  int (*__vtbl_ptr_type) () * _288;
  int (*__vtbl_ptr_type) () _289;
  struct Module * prephitmp_290;
  long unsigned int _291;
  struct vector & _292;
  void * PROF_293;
  int pretmp_294;
  char_type _295;
  long unsigned int pretmp_296;
  int pretmp_297;
  int (*__vtbl_ptr_type) () * _298;
  long int _299;
  sizetype _300;
  struct basic_ios * _301;
  struct vector * _302;
  struct basic_ostream & _304;
  char _306;
  long unsigned int pretmp_307;
  int pretmp_308;
  char_type _309;
  int pretmp_310;
  int pretmp_313;
  int (*__vtbl_ptr_type) () * _314;
  int (*__vtbl_ptr_type) () _315;
  int prephitmp_316;
  signed long _317;
  void * PROF_319;
  char_type _321;
  signed long _328;
  bool _330;
  int prephitmp_343;
  int pretmp_348;
  int _353;

  <bb 2>:
  _10 = this_9(D)->_arrival_pipe;
  # DEBUG this => _10
  # DEBUG val => 0B
  # DEBUG l => 0
  # DEBUG l => 0
  _353 = _10->_lanes;
  if (_353 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG input => 0
  _245 = this_9(D)->D.54631._inputs;
  if (_245 <= 0)
    goto <bb 4>;
  else
    goto <bb 10>;

  <bb 4>:
  return;

  <bb 5>:
  pretmp_348 = _10->_pipe_ptr;
  pretmp_296 = (long unsigned int) pretmp_348;
  pretmp_307 = pretmp_296 * 8;
  _330 = _353 > 0;
  if (_330 != 0)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 6>:
  _328 = (signed long) _353;
  _317 = _328 + -1;

  <bb 7>:
  # graphite_IV.4347_311 = PHI <0(6), graphite_IV.4347_305(8)>
  # DEBUG l => NULL
  _302 = MEM[(struct vector * *)_10 + 112B];
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _291 = (long unsigned int) graphite_IV.4347_311;
  _285 = _291 * 24;
  _292 = _302 + _285;
  _268 = MEM[(struct tArrivalEvent * * *)_292];
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _266 = _268 + pretmp_307;
  *_266 = 0B;
  # DEBUG l => NULL
  # DEBUG l => NULL
  graphite_IV.4347_305 = graphite_IV.4347_311 + 1;
  if (graphite_IV.4347_311 < _317)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  goto <bb 3>;

  <bb 10>:

  <bb 11>:
  # input_263 = PHI <0(10), input_105(58)>
  # prephitmp_265 = PHI <_245(10), prephitmp_316(58)>
  # DEBUG input => input_263
  _13 = (long unsigned int) input_263;
  # DEBUG D#1046 => &this_9(D)->_input_buffer
  _109 = MEM[(struct queue * *)this_9(D) + 384B];
  # DEBUG D#78 => D#1046
  # DEBUG __n => _13
  # DEBUG this => D#78
  _16 = _13 * 80;
  _15 = _109 + _16;
  # DEBUG this => NULL
  # DEBUG this => D#134
  # DEBUG D#132 => &D#134->D.44077._M_impl._M_start
  # DEBUG D#133 => &D#134->D.44077._M_impl._M_finish
  _11 = MEM[(struct Flit * * *)_15 + 48B];
  # DEBUG D#130 => D#133
  _23 = MEM[(struct Flit * * *)_15 + 16B];
  # DEBUG D#131 => D#132
  # DEBUG __x => D#130
  # DEBUG __y => D#131
  if (_11 != _23)
    goto <bb 12>;
  else
    goto <bb 57>;

  <bb 12>:
  # DEBUG D#1047 => &this_9(D)->_input_buffer
  # DEBUG D#78 => D#1047
  # DEBUG __n => _13
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG this => D#238
  # DEBUG this => D#238
  # DEBUG D#152 => &D#238->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#237 => MEM[(const struct iterator &)D#238 + 16]._M_first
  # DEBUG D.100496 => D#237
  # DEBUG D#236 => MEM[(const struct iterator &)D#238 + 16]._M_last
  # DEBUG D.100497 => D#236
  # DEBUG D#235 => MEM[(const struct iterator &)D#238 + 16]._M_node
  # DEBUG D.100498 => D#235
  # DEBUG this => D#234
  f_17 = *_23;
  # DEBUG f => f_17
  # DEBUG D#1048 => &this_9(D)->_input_buffer
  # DEBUG D#78 => D#1048
  # DEBUG __n => _13
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG D#2849 => &_15->c
  # DEBUG this => D#2849
  _124 = MEM[(struct deque *)_15].D.44077._M_impl._M_start._M_last;
  _125 = _124 + 18446744073709551608;
  if (_23 != _125)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # DEBUG D#1045 => D#2849->D.44077._M_impl._M_start._M_cur
  # DEBUG D#1044 => &D#2849->D.44077._M_impl
  # DEBUG D#412 => D#1044
  # DEBUG D#413 => D#1045
  # DEBUG __a => D#412
  # DEBUG __p => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#412
  # DEBUG D#408 => D#410
  # DEBUG D#409 => D#411
  # DEBUG this => D#408
  # DEBUG __p => D#409
  _126 = _23 + 8;
  MEM[(struct deque *)_15].D.44077._M_impl._M_start._M_cur = _126;
  goto <bb 15>;

  <bb 14>:
  # DEBUG this => D#2849
  # DEBUG this => D#2849
  # DEBUG D#1043 => D#2849->D.44077._M_impl._M_start._M_cur
  # DEBUG D#1040 => &D#2849->D.44077
  # DEBUG this => D#1040
  # DEBUG D#413 => D#1043
  # DEBUG __a => D#412
  # DEBUG __p => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#412
  # DEBUG D#408 => D#410
  # DEBUG D#409 => D#411
  # DEBUG this => D#408
  # DEBUG __p => D#409
  _230 = MEM[(struct deque *)_15].D.44077._M_impl._M_start._M_first;
  # DEBUG D#1042 => &D#2849->D.44077
  # DEBUG D#1039 => D#1042
  # DEBUG __p => _230
  # DEBUG this => D#1039
  # DEBUG D#1038 => D#1039
  # DEBUG __size => 8
  # DEBUG D#1037 => &D#1038->_M_impl
  # DEBUG D#1017 => D#1037
  # DEBUG __p => _230
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _230
  # DEBUG this => D#1013
  # DEBUG D.134960 => D#1014
  operator delete (_230);
  _231 = MEM[(struct deque *)_15].D.44077._M_impl._M_start._M_node;
  _232 = _231 + 8;
  # DEBUG D#1041 => &D#2849->D.44077._M_impl._M_start
  # DEBUG this => D#1041
  # DEBUG __new_node => _232
  MEM[(struct _Deque_iterator *)_15 + 16B]._M_node = _232;
  _233 = MEM[(struct Flit * * *)_231 + 8B];
  MEM[(struct _Deque_iterator *)_15 + 16B]._M_first = _233;
  # DEBUG __size => 8
  _234 = _233 + 512;
  MEM[(struct _Deque_iterator *)_15 + 16B]._M_last = _234;
  MEM[(struct deque *)_15].D.44077._M_impl._M_start._M_cur = _233;

  <bb 15>:
  # DEBUG D#1049 => &this_9(D)->_buf
  _106 = MEM[(struct Buffer * * *)this_9(D) + 288B];
  # DEBUG D#70 => D#1049
  # DEBUG __n => _13
  # DEBUG this => D#70
  _121 = _13 * 8;
  _122 = _106 + _121;
  cur_buf_19 = *_122;
  # DEBUG cur_buf => cur_buf_19
  vc_20 = f_17->vc;
  # DEBUG vc => vc_20
  Buffer::AddFlit (cur_buf_19, vc_20, f_17);
  _22 = (long unsigned int) vc_20;
  # DEBUG D#1050 => &this_9(D)->_active
  _107 = MEM[(struct vector * *)this_9(D) + 312B];
  # DEBUG D#71 => D#1050
  # DEBUG __n => _13
  # DEBUG this => D#71
  _119 = _13 * 40;
  _120 = _107 + _119;
  _110 = MEM[(_Bit_type * *)_120];
  # DEBUG __n => _22
  # DEBUG this => D#82
  _113 = (unsigned int) _22;
  _114 = _113 & 63;
  _115 = _22 >> 6;
  _116 = _115 * 8;
  _117 = _110 + _116;
  # DEBUG this => NULL
  # DEBUG __x => _117
  # DEBUG __y => _114
  # DEBUG this => D#20
  # DEBUG __x => _117
  # DEBUG __y => _114
  # DEBUG this => D#20
  # DEBUG this => D#21
  # DEBUG this => D#21
  _118 = 1 << _114;
  # DEBUG this => NULL
  # DEBUG __x => _117
  # DEBUG __y => _118
  # DEBUG this => &D.62959
  _14 = *_117;
  _112 = _14 & _118;
  if (_112 == 0)
    goto <bb 16>;
  else
    goto <bb 34>;

  <bb 16>:
  _25 = f_17->head;
  if (_25 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  pretmp_287 = &this_9(D)->D.54631.D.43102.D.29663;
  goto <bb 28>;

  <bb 18>:
  # DEBUG __out => &cout
  # DEBUG __s => "Non-head flit:"
  # DEBUG __s => "Non-head flit:"
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Non-head flit:", 14);
  # DEBUG this => &cout
  # DEBUG __pf => endl
  # DEBUG __os => &cout
  _28 = cout._vptr.basic_ostream;
  _239 = MEM[(long int *)_28 + -24B];
  _240 = (sizetype) _239;
  _241 = &cout + _240;
  # DEBUG this => _241
  # DEBUG __c => 10
  _182 = MEM[(const struct basic_ios *)_241]._M_ctype;
  # DEBUG __f => _182
  if (_182 == 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  std::__throw_bad_cast ();

  <bb 20>:
  # DEBUG this => _182
  # DEBUG __c => 10
  _246 = MEM[(const struct ctype *)_182]._M_widen_ok;
  if (_246 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _249 = MEM[(const struct ctype *)_182]._M_widen[10];
  pretmp_294 = (int) _249;
  goto <bb 24>;

  <bb 22>:
  # DEBUG this => _182
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_182);
  _254 = MEM[(const struct ctype *)_182].D.16885._vptr.facet;
  _255 = MEM[(int (*__vtbl_ptr_type) () *)_254 + 48B];
  PROF_259 = [obj_type_ref] OBJ_TYPE_REF(_255;(const struct ctype)_182->6);
  if (PROF_259 == do_widen)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  _261 = OBJ_TYPE_REF(_255;(const struct ctype)_182->6) (_182, 10);
  pretmp_297 = (int) _261;

  <bb 24>:
  # prephitmp_343 = PHI <pretmp_294(21), 10(22), pretmp_297(23)>
  _244 = std::basic_ostream<char>::put (&cout, prephitmp_343);
  # DEBUG __os => _244
  std::basic_ostream<char>::flush (_244);
  operator<< (&cout, f_17);
  # DEBUG D#140 => &D.62961
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.62961
  # DEBUG this => &D.62962
  # DEBUG __s => "Received non-head flit at idle VC"
  # DEBUG __a => D#918
  # DEBUG D#917 => D#918
  # DEBUG this => &D.62962
  # DEBUG D#915 => &D.62962._M_dataplus
  # DEBUG D#360 => D#917
  # DEBUG this => D#915
  # DEBUG __dat => &D.62962.D.11539._M_local_buf
  # DEBUG __a => D#360
  # DEBUG D#359 => D#360
  # DEBUG D#357 => D#915
  # DEBUG D#358 => D#359
  # DEBUG this => D#357
  # DEBUG __a => D#358
  # DEBUG D#356 => D#358
  # DEBUG D#355 => D#357
  # DEBUG this => D#355
  # DEBUG D.101082 => D#356
  MEM[(struct _Alloc_hider *)&D.62962]._M_p = &D.62962.D.11539._M_local_buf;
  # DEBUG __s => "Received non-head flit at idle VC"
  # DEBUG this => &D.62962
  # DEBUG __beg => "Received non-head flit at idle VC"
  # DEBUG __end => &MEM[(void *)"Received non-head flit at idle VC" + 33B]
  # DEBUG this => &D.62962
  # DEBUG __beg => "Received non-head flit at idle VC"
  # DEBUG __end => &MEM[(void *)"Received non-head flit at idle VC" + 33B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.241 (&D.62962, "Received non-head flit at idle VC", &MEM[(void *)"Received non-head flit at idle VC" + 33B]);
  _29 = &this_9(D)->D.54631.D.43102.D.29663;
  Module::Error (_29, &D.62962);

  <bb 25>:
  # DEBUG this => &D.62962
  # DEBUG this => &D.62962
  # DEBUG this => &D.62962
  _32 = MEM[(char * *)&D.62962];
  # DEBUG D#1 => &D.62962
  # DEBUG this => D#1
  # DEBUG this => &D.62962
  if (&D.62962.D.11539._M_local_buf != _32)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#467 => D.62962.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.62962
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.62962
  # DEBUG this => D#1
  # DEBUG this => &D.62962
  # DEBUG D#464 => &D.62962._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _32
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _32
  # DEBUG this => D#458
  # DEBUG D.106555 => D#459
  operator delete (_32);

  <bb 27>:
  # DEBUG D#468 => &D.62962._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.62962 ={v} {CLOBBER};
  # DEBUG this => &D.62961
  # DEBUG this => &D.62961

  <bb 28>:
  # prephitmp_290 = PHI <pretmp_287(17), _29(27)>
  # DEBUG D#2850 => &this_9(D)->D.54631
  _36 = this_9(D)->_rf;
  # DEBUG this => cur_buf_19
  # DEBUG vc => vc_20
  # DEBUG rf => _36
  # DEBUG router => D#2850
  # DEBUG f => f_17
  # DEBUG in_channel => input_263
  # DEBUG D#34 => &cur_buf_19->_vc
  _127 = MEM[(struct VC * * *)cur_buf_19 + 104B];
  # DEBUG D#33 => D#34
  # DEBUG __n => _22
  # DEBUG this => D#33
  _128 = _22 * 8;
  _129 = _127 + _128;
  _130 = *_129;
  VC::Route (_130, _36, prephitmp_290, f_17, input_263);
  # DEBUG this => cur_buf_19
  # DEBUG vc => vc_20
  # DEBUG D#38 => &MEM[(const struct Buffer *)cur_buf_19]._vc
  _131 = MEM[(struct VC * * *)cur_buf_19 + 104B];
  # DEBUG D#37 => D#38
  # DEBUG __n => _22
  # DEBUG this => D#37
  _132 = _131 + _128;
  _133 = *_132;
  _134 = VC::GetRouteSet (_133);
  # DEBUG route_set => _134
  _38 = OutputSet::GetPortVC (_134, &out_port, &out_vc);
  if (_38 != 0)
    goto <bb 33>;
  else
    goto <bb 29>;

  <bb 29>:
  # DEBUG D#140 => &D.62967
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.62967
  # DEBUG this => &D.62968
  # DEBUG __s => "The event-driven router requires routing functions with a single (port,vc) output"
  # DEBUG __a => D#918
  # DEBUG D#917 => D#918
  # DEBUG this => &D.62968
  # DEBUG D#915 => &D.62968._M_dataplus
  # DEBUG D#360 => D#917
  # DEBUG this => D#915
  # DEBUG __dat => &D.62968.D.11539._M_local_buf
  # DEBUG __a => D#360
  # DEBUG D#359 => D#360
  # DEBUG D#357 => D#915
  # DEBUG D#358 => D#359
  # DEBUG this => D#357
  # DEBUG __a => D#358
  # DEBUG D#356 => D#358
  # DEBUG D#355 => D#357
  # DEBUG this => D#355
  # DEBUG D.101082 => D#356
  MEM[(struct _Alloc_hider *)&D.62968]._M_p = &D.62968.D.11539._M_local_buf;
  # DEBUG __s => "The event-driven router requires routing functions with a single (port,vc) output"
  # DEBUG this => &D.62968
  # DEBUG __beg => "The event-driven router requires routing functions with a single (port,vc) output"
  # DEBUG __end => &MEM[(void *)"The event-driven router requires routing functions with a single (port,vc) output" + 81B]
  # DEBUG this => &D.62968
  # DEBUG __beg => "The event-driven router requires routing functions with a single (port,vc) output"
  # DEBUG __end => &MEM[(void *)"The event-driven router requires routing functions with a single (port,vc) output" + 81B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.241 (&D.62968, "The event-driven router requires routing functions with a single (port,vc) output", &MEM[(void *)"The event-driven router requires routing functions with a single (port,vc) output" + 81B]);
  Module::Error (prephitmp_290, &D.62968);

  <bb 30>:
  # DEBUG this => &D.62968
  # DEBUG this => &D.62968
  # DEBUG this => &D.62968
  _44 = MEM[(char * *)&D.62968];
  # DEBUG D#1 => &D.62968
  # DEBUG this => D#1
  # DEBUG this => &D.62968
  if (&D.62968.D.11539._M_local_buf != _44)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # DEBUG D#467 => D.62968.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.62968
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.62968
  # DEBUG this => D#1
  # DEBUG this => &D.62968
  # DEBUG D#464 => &D.62968._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _44
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _44
  # DEBUG this => D#458
  # DEBUG D.106586 => D#459
  operator delete (_44);

  <bb 32>:
  # DEBUG D#468 => &D.62968._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.62968 ={v} {CLOBBER};
  # DEBUG this => &D.62967
  # DEBUG this => &D.62967

  <bb 33>:
  out_vc.464_47 = out_vc;
  out_port.465_48 = out_port;
  # DEBUG this => cur_buf_19
  # DEBUG vc => vc_20
  # DEBUG out_port => out_port.465_48
  # DEBUG out_vc => out_vc.464_47
  # DEBUG D#35 => &cur_buf_19->_vc
  _135 = MEM[(struct VC * * *)cur_buf_19 + 104B];
  # DEBUG D#33 => D#35
  # DEBUG __n => _22
  # DEBUG this => D#33
  _136 = _135 + _128;
  _137 = *_136;
  VC::SetOutput (_137, out_port.465_48, out_vc.464_47);
  # DEBUG D#1051 => &this_9(D)->_active
  _108 = MEM[(struct vector * *)this_9(D) + 312B];
  # DEBUG D#71 => D#1051
  # DEBUG __n => _13
  # DEBUG this => D#71
  _146 = _108 + _119;
  _111 = MEM[(_Bit_type * *)_146];
  # DEBUG __n => _22
  # DEBUG this => D#82
  _145 = _111 + _116;
  # DEBUG this => NULL
  # DEBUG __x => _145
  # DEBUG __y => _114
  # DEBUG this => D#20
  # DEBUG __x => _145
  # DEBUG __y => _114
  # DEBUG this => D#20
  # DEBUG this => D#21
  # DEBUG this => D#21
  # DEBUG this => NULL
  # DEBUG __x => _145
  # DEBUG __y => _118
  # DEBUG this => &D.62969
  # DEBUG __x => 1
  _138 = *_145;
  _139 = _118 | _138;
  *_145 = _139;
  out_vc ={v} {CLOBBER};
  out_port ={v} {CLOBBER};
  goto <bb 39>;

  <bb 34>:
  _52 = f_17->head;
  if (_52 != 0)
    goto <bb 35>;
  else
    goto <bb 39>;

  <bb 35>:
  operator<< (&cout, f_17);
  # DEBUG D#140 => &D.62971
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.62971
  # DEBUG this => &D.62972
  # DEBUG __s => "Received head flit at non-idle VC."
  # DEBUG __a => D#918
  # DEBUG D#917 => D#918
  # DEBUG this => &D.62972
  # DEBUG D#915 => &D.62972._M_dataplus
  # DEBUG D#360 => D#917
  # DEBUG this => D#915
  # DEBUG __dat => &D.62972.D.11539._M_local_buf
  # DEBUG __a => D#360
  # DEBUG D#359 => D#360
  # DEBUG D#357 => D#915
  # DEBUG D#358 => D#359
  # DEBUG this => D#357
  # DEBUG __a => D#358
  # DEBUG D#356 => D#358
  # DEBUG D#355 => D#357
  # DEBUG this => D#355
  # DEBUG D.101082 => D#356
  MEM[(struct _Alloc_hider *)&D.62972]._M_p = &D.62972.D.11539._M_local_buf;
  # DEBUG __s => "Received head flit at non-idle VC."
  # DEBUG this => &D.62972
  # DEBUG __beg => "Received head flit at non-idle VC."
  # DEBUG __end => &MEM[(void *)"Received head flit at non-idle VC." + 34B]
  # DEBUG this => &D.62972
  # DEBUG __beg => "Received head flit at non-idle VC."
  # DEBUG __end => &MEM[(void *)"Received head flit at non-idle VC." + 34B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.241 (&D.62972, "Received head flit at non-idle VC.", &MEM[(void *)"Received head flit at non-idle VC." + 34B]);
  _56 = &this_9(D)->D.54631.D.43102.D.29663;
  Module::Error (_56, &D.62972);

  <bb 36>:
  # DEBUG this => &D.62972
  # DEBUG this => &D.62972
  # DEBUG this => &D.62972
  _60 = MEM[(char * *)&D.62972];
  # DEBUG D#1 => &D.62972
  # DEBUG this => D#1
  # DEBUG this => &D.62972
  if (&D.62972.D.11539._M_local_buf != _60)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  # DEBUG D#467 => D.62972.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.62972
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.62972
  # DEBUG this => D#1
  # DEBUG this => &D.62972
  # DEBUG D#464 => &D.62972._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _60
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _60
  # DEBUG this => D#458
  # DEBUG D.106624 => D#459
  operator delete (_60);

  <bb 38>:
  # DEBUG D#468 => &D.62972._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.62972 ={v} {CLOBBER};
  # DEBUG this => &D.62971
  # DEBUG this => &D.62971

  <bb 39>:
  _64 = f_17->watch;
  if (_64 != 0)
    goto <bb 40>;
  else
    goto <bb 46>;

  <bb 40>:
  # DEBUG this => cur_buf_19
  # DEBUG vc => vc_20
  # DEBUG D#40 => &MEM[(const struct Buffer *)cur_buf_19]._vc
  _154 = MEM[(struct VC * * *)cur_buf_19 + 104B];
  # DEBUG D#37 => D#40
  # DEBUG __n => _22
  # DEBUG this => D#37
  _155 = _22 * 8;
  _156 = _154 + _155;
  _157 = *_156;
  _158 = MEM[(int *)_157 + 196B];
  # DEBUG D#32 => _157
  # DEBUG this => D#32
  # DEBUG this => cur_buf_19
  # DEBUG vc => vc_20
  # DEBUG D#39 => &MEM[(const struct Buffer *)cur_buf_19]._vc
  # DEBUG D#37 => D#39
  # DEBUG __n => _22
  # DEBUG this => D#37
  _153 = MEM[(int *)_157 + 192B];
  # DEBUG D#31 => _157
  # DEBUG this => D#31
  # DEBUG D#1052 => &this_9(D)->D.54631.D.43102.D.29663
  # DEBUG this => D#1052
  # DEBUG D#1053 => &this_9(D)->D.54631.D.43102.D.29663
  # DEBUG this => D#1053
  _70 = GetSimTime ();
  gWatchOut.466_71 = gWatchOut;
  _73 = std::basic_ostream<char>::operator<< (gWatchOut.466_71, _70);
  # DEBUG __out => _73
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_73, " | ", 3);
  # DEBUG __os => _73
  # DEBUG __str => NULL
  _74 = MEM[(long unsigned int *)this_9(D) + 48B];
  # DEBUG this => D#3
  _150 = (long int) _74;
  # DEBUG this => NULL
  _151 = MEM[(char * *)this_9(D) + 40B];
  # DEBUG this => D#1
  _152 = std::__ostream_insert<char, std::char_traits<char> > (_73, _151, _150);
  # DEBUG __out => _152
  # DEBUG __s => " | "
  # DEBUG __s => " | "
  std::__ostream_insert<char, std::char_traits<char> > (_152, " | ", 3);
  # DEBUG __out => _152
  # DEBUG __s => "Received flit at "
  # DEBUG __s => "Received flit at "
  std::__ostream_insert<char, std::char_traits<char> > (_152, "Received flit at ", 17);
  # DEBUG __os => _152
  # DEBUG __str => NULL
  _75 = MEM[(long unsigned int *)this_9(D) + 48B];
  # DEBUG this => D#3
  _147 = (long int) _75;
  # DEBUG this => NULL
  _148 = MEM[(char * *)this_9(D) + 40B];
  # DEBUG this => D#1
  _149 = std::__ostream_insert<char, std::char_traits<char> > (_152, _148, _147);
  # DEBUG __out => _149
  # DEBUG __s => ".  Output port = "
  # DEBUG __s => ".  Output port = "
  std::__ostream_insert<char, std::char_traits<char> > (_149, ".  Output port = ", 17);
  _77 = std::basic_ostream<char>::operator<< (_149, _153);
  # DEBUG __out => _77
  # DEBUG __s => ", output VC = "
  # DEBUG __s => ", output VC = "
  std::__ostream_insert<char, std::char_traits<char> > (_77, ", output VC = ", 14);
  _79 = std::basic_ostream<char>::operator<< (_77, _158);
  # DEBUG this => _79
  # DEBUG __pf => endl
  # DEBUG __os => _79
  _55 = _79->_vptr.basic_ostream;
  _273 = MEM[(long int *)_55 + -24B];
  _274 = (sizetype) _273;
  _275 = _79 + _274;
  # DEBUG this => _275
  # DEBUG __c => 10
  _224 = MEM[(const struct basic_ios *)_275]._M_ctype;
  # DEBUG __f => _224
  if (_224 == 0B)
    goto <bb 19>;
  else
    goto <bb 41>;

  <bb 41>:
  # DEBUG this => _224
  # DEBUG __c => 10
  _280 = MEM[(const struct ctype *)_224]._M_widen_ok;
  if (_280 != 0)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  _283 = MEM[(const struct ctype *)_224]._M_widen[10];
  pretmp_281 = (int) _283;
  goto <bb 45>;

  <bb 43>:
  # DEBUG this => _224
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_224);
  _288 = MEM[(const struct ctype *)_224].D.16885._vptr.facet;
  _289 = MEM[(int (*__vtbl_ptr_type) () *)_288 + 48B];
  PROF_293 = [obj_type_ref] OBJ_TYPE_REF(_289;(const struct ctype)_224->6);
  if (PROF_293 == do_widen)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  _295 = OBJ_TYPE_REF(_289;(const struct ctype)_224->6) (_224, 10);
  pretmp_282 = (int) _295;

  <bb 45>:
  # prephitmp_284 = PHI <pretmp_281(42), 10(43), pretmp_282(44)>
  _278 = std::basic_ostream<char>::put (_79, prephitmp_284);
  # DEBUG __os => _278
  _279 = std::basic_ostream<char>::flush (_278);
  operator<< (_279, f_17);

  <bb 46>:
  _81 = this_9(D)->_vct;
  if (_81 == 0)
    goto <bb 49>;
  else
    goto <bb 47>;

  <bb 47>:
  _82 = f_17->head;
  if (_82 != 0)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 48>:
  pretmp_310 = this_9(D)->D.54631._inputs;
  goto <bb 57>;

  <bb 49>:
  aevt_84 = operator new (28);
  # DEBUG aevt => aevt_84
  aevt_84->input = input_263;
  # DEBUG this => cur_buf_19
  # DEBUG vc => vc_20
  # DEBUG D#39 => &MEM[(const struct Buffer *)cur_buf_19]._vc
  _168 = MEM[(struct VC * * *)cur_buf_19 + 104B];
  # DEBUG D#37 => D#39
  # DEBUG __n => _22
  # DEBUG this => D#37
  _169 = _22 * 8;
  _170 = _168 + _169;
  _171 = *_170;
  _172 = MEM[(int *)_171 + 192B];
  # DEBUG D#31 => _171
  # DEBUG this => D#31
  aevt_84->output = _172;
  _88 = f_17->vc;
  aevt_84->src_vc = _88;
  # DEBUG this => cur_buf_19
  # DEBUG vc => vc_20
  # DEBUG D#40 => &MEM[(const struct Buffer *)cur_buf_19]._vc
  # DEBUG D#37 => D#40
  # DEBUG __n => _22
  # DEBUG this => D#37
  _167 = MEM[(int *)_171 + 196B];
  # DEBUG D#32 => _171
  # DEBUG this => D#32
  aevt_84->dst_vc = _167;
  _92 = f_17->head;
  aevt_84->head = _92;
  _94 = f_17->tail;
  aevt_84->tail = _94;
  _96 = f_17->watch;
  aevt_84->watch = _96;
  _98 = f_17->id;
  aevt_84->id = _98;
  _100 = this_9(D)->_arrival_pipe;
  # DEBUG this => _100
  # DEBUG val => aevt_84
  # DEBUG lane => input_263
  _159 = _100->_pipe_ptr;
  _160 = (long unsigned int) _159;
  # DEBUG D#189 => &_100->_data
  _161 = MEM[(struct vector * *)_100 + 112B];
  # DEBUG D#150 => D#189
  # DEBUG __n => _13
  # DEBUG this => D#150
  _162 = _13 * 24;
  _163 = _161 + _162;
  _164 = MEM[(struct tArrivalEvent * * *)_163];
  # DEBUG __n => _160
  # DEBUG this => D#187
  _165 = _160 * 8;
  _166 = _164 + _165;
  *_166 = aevt_84;
  if (_96 != 0)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  pretmp_308 = this_9(D)->D.54631._inputs;
  goto <bb 57>;

  <bb 51>:
  # DEBUG D#1054 => &this_9(D)->D.54631.D.43102.D.29663
  # DEBUG this => D#1054
  # DEBUG __out => &cout
  # DEBUG __s => "Injected arrival event at "
  # DEBUG __s => "Injected arrival event at "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Injected arrival event at ", 26);
  # DEBUG __os => &cout
  # DEBUG __str => NULL
  _102 = MEM[(long unsigned int *)this_9(D) + 48B];
  # DEBUG this => D#3
  _173 = (long int) _102;
  # DEBUG this => NULL
  _174 = MEM[(char * *)this_9(D) + 40B];
  # DEBUG this => D#1
  _175 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _174, _173);
  # DEBUG __out => _175
  # DEBUG __s => " for flit "
  # DEBUG __s => " for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_175, " for flit ", 10);
  _104 = std::basic_ostream<char>::operator<< (_175, _98);
  # DEBUG this => _104
  # DEBUG __pf => endl
  # DEBUG __os => _104
  _298 = _104->_vptr.basic_ostream;
  _299 = MEM[(long int *)_298 + -24B];
  _300 = (sizetype) _299;
  _301 = _104 + _300;
  # DEBUG this => _301
  # DEBUG __c => 10
  _229 = MEM[(const struct basic_ios *)_301]._M_ctype;
  # DEBUG __f => _229
  if (_229 == 0B)
    goto <bb 19>;
  else
    goto <bb 52>;

  <bb 52>:
  # DEBUG this => _229
  # DEBUG __c => 10
  _306 = MEM[(const struct ctype *)_229]._M_widen_ok;
  if (_306 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _309 = MEM[(const struct ctype *)_229]._M_widen[10];
  pretmp_40 = (int) _309;
  goto <bb 56>;

  <bb 54>:
  # DEBUG this => _229
  # DEBUG __c => 10
  std::ctype<char>::_M_widen_init (_229);
  _314 = MEM[(const struct ctype *)_229].D.16885._vptr.facet;
  _315 = MEM[(int (*__vtbl_ptr_type) () *)_314 + 48B];
  PROF_319 = [obj_type_ref] OBJ_TYPE_REF(_315;(const struct ctype)_229->6);
  if (PROF_319 == do_widen)
    goto <bb 56>;
  else
    goto <bb 55>;

  <bb 55>:
  _321 = OBJ_TYPE_REF(_315;(const struct ctype)_229->6) (_229, 10);
  pretmp_269 = (int) _321;

  <bb 56>:
  # prephitmp_270 = PHI <pretmp_40(53), 10(54), pretmp_269(55)>
  _304 = std::basic_ostream<char>::put (_104, prephitmp_270);
  # DEBUG __os => _304
  std::basic_ostream<char>::flush (_304);
  pretmp_313 = this_9(D)->D.54631._inputs;

  <bb 57>:
  # prephitmp_316 = PHI <prephitmp_265(11), pretmp_308(50), pretmp_310(48), pretmp_313(56)>
  input_105 = input_263 + 1;
  # DEBUG input => input_105
  # DEBUG input => input_105
  if (input_105 >= prephitmp_316)
    goto <bb 4>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 11>;

<L27>:
  # DEBUG this => &D.62962
  # DEBUG this => &D.62962
  # DEBUG this => &D.62962
  _176 = MEM[(char * *)&D.62962];
  # DEBUG D#1 => &D.62962
  # DEBUG this => D#1
  # DEBUG this => &D.62962
  if (&D.62962.D.11539._M_local_buf != _176)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  # DEBUG D#467 => D.62962.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.62962
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.62962
  # DEBUG this => D#1
  # DEBUG this => &D.62962
  # DEBUG D#464 => &D.62962._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _176
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _176
  # DEBUG this => D#458
  # DEBUG D.106715 => D#459
  operator delete (_176);

  <bb 61>:
  # DEBUG D#468 => &D.62962._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.62962 ={v} {CLOBBER};
  resx 4

<L29>:
  # DEBUG this => &D.62968
  # DEBUG this => &D.62968
  # DEBUG this => &D.62968
  _34 = MEM[(char * *)&D.62968];
  # DEBUG D#1 => &D.62968
  # DEBUG this => D#1
  # DEBUG this => &D.62968
  if (&D.62968.D.11539._M_local_buf != _34)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#467 => D.62968.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.62968
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.62968
  # DEBUG this => D#1
  # DEBUG this => &D.62968
  # DEBUG D#464 => &D.62968._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _34
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _34
  # DEBUG this => D#458
  # DEBUG D.106732 => D#459
  operator delete (_34);

  <bb 64>:
  # DEBUG D#468 => &D.62968._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.62968 ={v} {CLOBBER};
  resx 8

<L32>:
  # DEBUG this => &D.62972
  # DEBUG this => &D.62972
  # DEBUG this => &D.62972
  _46 = MEM[(char * *)&D.62972];
  # DEBUG D#1 => &D.62972
  # DEBUG this => D#1
  # DEBUG this => &D.62972
  if (&D.62972.D.11539._M_local_buf != _46)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG D#467 => D.62972.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.62972
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.62972
  # DEBUG this => D#1
  # DEBUG this => &D.62972
  # DEBUG D#464 => &D.62972._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _46
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _46
  # DEBUG this => D#458
  # DEBUG D.106749 => D#459
  operator delete (_46);

  <bb 67>:
  # DEBUG D#468 => &D.62972._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.62972 ={v} {CLOBBER};
  resx 14

}



;; Function void EventRouter::_SendFlits() (_ZN11EventRouter10_SendFlitsEv, funcdef_no=2173, decl_uid=54570, cgraph_uid=522, symbol_order=523)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void EventRouter::_SendFlits() (struct EventRouter * const this)
{
  struct Flit * f;
  int output;
  long unsigned int _7;
  struct queue & _8;
  long unsigned int _9;
  struct Flit * * const _11;
  struct Flit * * const _12;
  struct FlitChannel * _13;
  int (*__vtbl_ptr_type) () * _14;
  int (*__vtbl_ptr_type) () _15;
  struct FlitChannel * * _18;
  struct queue * _19;
  long unsigned int _20;
  struct FlitChannel * & _21;
  struct Flit * * _23;
  struct Flit * * _24;
  struct Flit * * _25;
  struct Flit * * _29;
  struct Flit * * * _30;
  struct Flit * * * _31;
  struct Flit * * _32;
  struct Flit * * _33;
  int _41;
  int prephitmp_58;
  int pretmp_60;
  int prephitmp_61;

  <bb 2>:
  # DEBUG output => 0
  # DEBUG output => 0
  _41 = this_5(D)->D.54631._outputs;
  if (_41 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # output_42 = PHI <0(4), output_17(11)>
  # prephitmp_58 = PHI <_41(4), prephitmp_61(11)>
  # DEBUG output => output_42
  _7 = (long unsigned int) output_42;
  # DEBUG D#1055 => &this_5(D)->_output_buffer
  _19 = MEM[(struct queue * *)this_5(D) + 408B];
  # DEBUG D#78 => D#1055
  # DEBUG __n => _7
  # DEBUG this => D#78
  _9 = _7 * 80;
  _8 = _19 + _9;
  # DEBUG this => NULL
  # DEBUG this => D#134
  # DEBUG D#132 => &D#134->D.44077._M_impl._M_start
  # DEBUG D#133 => &D#134->D.44077._M_impl._M_finish
  _12 = MEM[(struct Flit * * *)_8 + 48B];
  # DEBUG D#130 => D#133
  _11 = MEM[(struct Flit * * *)_8 + 16B];
  # DEBUG D#131 => D#132
  # DEBUG __x => D#130
  # DEBUG __y => D#131
  if (_11 != _12)
    goto <bb 6>;
  else
    goto <bb 10>;

  <bb 6>:
  # DEBUG D#1056 => &this_5(D)->_output_buffer
  # DEBUG D#78 => D#1056
  # DEBUG __n => _7
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG this => D#238
  # DEBUG this => D#238
  # DEBUG D#152 => &D#238->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#237 => MEM[(const struct iterator &)D#238 + 16]._M_first
  # DEBUG D.100496 => D#237
  # DEBUG D#236 => MEM[(const struct iterator &)D#238 + 16]._M_last
  # DEBUG D.100497 => D#236
  # DEBUG D#235 => MEM[(const struct iterator &)D#238 + 16]._M_node
  # DEBUG D.100498 => D#235
  # DEBUG this => D#234
  f_10 = *_11;
  # DEBUG f => f_10
  # DEBUG D#1057 => &this_5(D)->_output_buffer
  # DEBUG D#78 => D#1057
  # DEBUG __n => _7
  # DEBUG this => D#78
  # DEBUG this => NULL
  # DEBUG D#2863 => &_8->c
  # DEBUG this => D#2863
  _23 = MEM[(struct deque *)_8].D.44077._M_impl._M_start._M_last;
  _24 = _23 + 18446744073709551608;
  if (_11 != _24)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#1045 => D#2863->D.44077._M_impl._M_start._M_cur
  # DEBUG D#1044 => &D#2863->D.44077._M_impl
  # DEBUG D#412 => D#1044
  # DEBUG D#413 => D#1045
  # DEBUG __a => D#412
  # DEBUG __p => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#412
  # DEBUG D#408 => D#410
  # DEBUG D#409 => D#411
  # DEBUG this => D#408
  # DEBUG __p => D#409
  _25 = _11 + 8;
  MEM[(struct deque *)_8].D.44077._M_impl._M_start._M_cur = _25;
  goto <bb 9>;

  <bb 8>:
  # DEBUG this => D#2863
  # DEBUG this => D#2863
  # DEBUG D#1043 => D#2863->D.44077._M_impl._M_start._M_cur
  # DEBUG D#1040 => &D#2863->D.44077
  # DEBUG this => D#1040
  # DEBUG D#413 => D#1043
  # DEBUG __a => D#412
  # DEBUG __p => D#413
  # DEBUG D#411 => D#413
  # DEBUG D#410 => D#412
  # DEBUG D#408 => D#410
  # DEBUG D#409 => D#411
  # DEBUG this => D#408
  # DEBUG __p => D#409
  _29 = MEM[(struct deque *)_8].D.44077._M_impl._M_start._M_first;
  # DEBUG D#1042 => &D#2863->D.44077
  # DEBUG D#1039 => D#1042
  # DEBUG __p => _29
  # DEBUG this => D#1039
  # DEBUG D#1038 => D#1039
  # DEBUG __size => 8
  # DEBUG D#1037 => &D#1038->_M_impl
  # DEBUG D#1017 => D#1037
  # DEBUG __p => _29
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _29
  # DEBUG this => D#1013
  # DEBUG D.135163 => D#1014
  operator delete (_29);
  _30 = MEM[(struct deque *)_8].D.44077._M_impl._M_start._M_node;
  _31 = _30 + 8;
  # DEBUG D#1041 => &D#2863->D.44077._M_impl._M_start
  # DEBUG this => D#1041
  # DEBUG __new_node => _31
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_node = _31;
  _32 = MEM[(struct Flit * * *)_30 + 8B];
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_first = _32;
  # DEBUG __size => 8
  _33 = _32 + 512;
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_last = _33;
  MEM[(struct deque *)_8].D.44077._M_impl._M_start._M_cur = _32;

  <bb 9>:
  # DEBUG D#1058 => &this_5(D)->D.54631._output_channels
  _18 = MEM[(struct FlitChannel * * *)this_5(D) + 192B];
  # DEBUG D#77 => D#1058
  # DEBUG __n => _7
  # DEBUG this => D#77
  _20 = _7 * 8;
  _21 = _18 + _20;
  _13 = *_21;
  _14 = _13->D.35808.D.35202.D.29663._vptr.Module;
  _15 = MEM[(int (*__vtbl_ptr_type) () *)_14 + 48B];
  OBJ_TYPE_REF(_15;(struct FlitChannel)_13->6) (_13, f_10);
  pretmp_60 = this_5(D)->D.54631._outputs;

  <bb 10>:
  # prephitmp_61 = PHI <prephitmp_58(5), pretmp_60(9)>
  output_17 = output_42 + 1;
  # DEBUG output => output_17
  # DEBUG output => output_17
  if (output_17 >= prephitmp_61)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 5>;

}



;; Function void EventRouter::_SendCredits() (_ZN11EventRouter12_SendCreditsEv, funcdef_no=2174, decl_uid=54572, cgraph_uid=523, symbol_order=524)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void EventRouter::_SendCredits() (struct EventRouter * const this)
{
  struct Credit * c;
  int input;
  long unsigned int _7;
  struct queue & _8;
  long unsigned int _9;
  struct Credit * * const _11;
  struct Credit * * const _12;
  struct Channel * _13;
  int (*__vtbl_ptr_type) () * _14;
  int (*__vtbl_ptr_type) () _15;
  struct Channel * * _18;
  struct queue * _19;
  long unsigned int _20;
  struct Channel * & _21;
  struct Credit * * _23;
  struct Credit * * _24;
  struct Credit * * _25;
  void * PROF_29;
  struct Credit * * _31;
  struct Credit * * * _32;
  struct Credit * * * _33;
  struct Credit * * _34;
  struct Credit * * _35;
  int _44;
  int prephitmp_61;
  int pretmp_63;
  int pretmp_64;
  int prephitmp_65;

  <bb 2>:
  # DEBUG input => 0
  # DEBUG input => 0
  _44 = this_5(D)->D.54631._inputs;
  if (_44 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # input_45 = PHI <0(4), input_17(13)>
  # prephitmp_61 = PHI <_44(4), prephitmp_65(13)>
  # DEBUG input => input_45
  _7 = (long unsigned int) input_45;
  # DEBUG D#1110 => &this_5(D)->_in_cred_buffer
  _19 = MEM[(struct queue * *)this_5(D) + 432B];
  # DEBUG D#80 => D#1110
  # DEBUG __n => _7
  # DEBUG this => D#80
  _9 = _7 * 80;
  _8 = _19 + _9;
  # DEBUG this => NULL
  # DEBUG this => D#253
  # DEBUG D#251 => &D#253->D.59602._M_impl._M_start
  # DEBUG D#252 => &D#253->D.59602._M_impl._M_finish
  _12 = MEM[(struct Credit * * *)_8 + 48B];
  # DEBUG D#249 => D#252
  _11 = MEM[(struct Credit * * *)_8 + 16B];
  # DEBUG D#250 => D#251
  # DEBUG __x => D#249
  # DEBUG __y => D#250
  if (_11 != _12)
    goto <bb 6>;
  else
    goto <bb 12>;

  <bb 6>:
  # DEBUG D#1111 => &this_5(D)->_in_cred_buffer
  # DEBUG D#80 => D#1111
  # DEBUG __n => _7
  # DEBUG this => D#80
  # DEBUG this => NULL
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG D#159 => &D#258->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#257 => MEM[(const struct iterator &)D#258 + 16]._M_first
  # DEBUG D.100586 => D#257
  # DEBUG D#256 => MEM[(const struct iterator &)D#258 + 16]._M_last
  # DEBUG D.100587 => D#256
  # DEBUG D#255 => MEM[(const struct iterator &)D#258 + 16]._M_node
  # DEBUG D.100588 => D#255
  # DEBUG this => D#254
  c_10 = *_11;
  # DEBUG c => c_10
  # DEBUG D#1112 => &this_5(D)->_in_cred_buffer
  # DEBUG D#80 => D#1112
  # DEBUG __n => _7
  # DEBUG this => D#80
  # DEBUG this => NULL
  # DEBUG D#2865 => &_8->c
  # DEBUG this => D#2865
  _23 = MEM[(struct deque *)_8].D.59602._M_impl._M_start._M_last;
  _24 = _23 + 18446744073709551608;
  if (_11 != _24)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#1109 => D#2865->D.59602._M_impl._M_start._M_cur
  # DEBUG D#1108 => &D#2865->D.59602._M_impl
  # DEBUG D#421 => D#1108
  # DEBUG D#422 => D#1109
  # DEBUG __a => D#421
  # DEBUG __p => D#422
  # DEBUG D#420 => D#422
  # DEBUG D#419 => D#421
  # DEBUG D#417 => D#419
  # DEBUG D#418 => D#420
  # DEBUG this => D#417
  # DEBUG __p => D#418
  _25 = _11 + 8;
  MEM[(struct deque *)_8].D.59602._M_impl._M_start._M_cur = _25;
  goto <bb 9>;

  <bb 8>:
  # DEBUG this => D#2865
  # DEBUG this => D#2865
  # DEBUG D#1107 => D#2865->D.59602._M_impl._M_start._M_cur
  # DEBUG D#1104 => &D#2865->D.59602
  # DEBUG this => D#1104
  # DEBUG D#422 => D#1107
  # DEBUG __a => D#421
  # DEBUG __p => D#422
  # DEBUG D#420 => D#422
  # DEBUG D#419 => D#421
  # DEBUG D#417 => D#419
  # DEBUG D#418 => D#420
  # DEBUG this => D#417
  # DEBUG __p => D#418
  _31 = MEM[(struct deque *)_8].D.59602._M_impl._M_start._M_first;
  # DEBUG D#1106 => &D#2865->D.59602
  # DEBUG this => D#1106
  # DEBUG __p => _31
  # DEBUG __size => 8
  # DEBUG D#1103 => &D#1106->_M_impl
  # DEBUG D#1083 => D#1103
  # DEBUG __p => _31
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _31
  # DEBUG this => D#1079
  # DEBUG D.135194 => D#1080
  operator delete (_31);
  _32 = MEM[(struct deque *)_8].D.59602._M_impl._M_start._M_node;
  _33 = _32 + 8;
  # DEBUG D#1105 => &D#2865->D.59602._M_impl._M_start
  # DEBUG this => D#1105
  # DEBUG __new_node => _33
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_node = _33;
  _34 = MEM[(struct Credit * * *)_32 + 8B];
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_first = _34;
  # DEBUG __size => 8
  _35 = _34 + 512;
  MEM[(struct _Deque_iterator *)_8 + 16B]._M_last = _35;
  MEM[(struct deque *)_8].D.59602._M_impl._M_start._M_cur = _34;

  <bb 9>:
  # DEBUG D#1113 => &this_5(D)->D.54631._input_credits
  _18 = MEM[(struct Channel * * *)this_5(D) + 168B];
  # DEBUG D#79 => D#1113
  # DEBUG __n => _7
  # DEBUG this => D#79
  _20 = _7 * 8;
  _21 = _18 + _20;
  _13 = *_21;
  _14 = _13->D.62933.D.29663._vptr.Module;
  _15 = MEM[(int (*__vtbl_ptr_type) () *)_14 + 48B];
  PROF_29 = [obj_type_ref] OBJ_TYPE_REF(_15;(struct Channel)_13->6);
  if (PROF_29 == Send)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => _13
  # DEBUG data => c_10
  _13->_input = c_10;
  pretmp_63 = this_5(D)->D.54631._inputs;
  goto <bb 12>;

  <bb 11>:
  OBJ_TYPE_REF(_15;(struct Channel)_13->6) (_13, c_10);
  pretmp_64 = this_5(D)->D.54631._inputs;

  <bb 12>:
  # prephitmp_65 = PHI <prephitmp_61(5), pretmp_63(10), pretmp_64(11)>
  input_17 = input_45 + 1;
  # DEBUG input => input_17
  # DEBUG input => input_17
  if (input_17 >= prephitmp_65)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 5>;

}



;; Function void EventNextVCState::IncrWaiting(int, int, int) (_ZN16EventNextVCState11IncrWaitingEiii, funcdef_no=2189, decl_uid=48465, cgraph_uid=538, symbol_order=539)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void EventNextVCState::IncrWaiting(int, int, int) (struct EventNextVCState * const this, int vc, int w_input, int w_vc)
{
  struct _List_node_base * match$_M_node;
  const struct string D.64076;
  long unsigned int _6;
  struct tWaiting * _9;
  int _10;
  int _12;
  struct list & _14;
  long unsigned int _15;
  int _17;
  int _18;
  struct Module * _21;
  char * const _23;
  char * const _25;
  struct list * _30;
  struct tWaiting * _42;
  struct _List_node_base * _48;

  <bb 2>:
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  _6 = (long unsigned int) vc_5(D);
  # DEBUG D#919 => &this_7(D)->_waiting
  _30 = MEM[(struct list * *)this_7(D) + 200B];
  # DEBUG D#119 => D#919
  # DEBUG __n => _6
  # DEBUG this => D#119
  _15 = _6 * 24;
  _14 = _30 + _15;
  match$_M_node_31 = MEM[(struct _List_node_base * *)_14];
  # DEBUG this => D#197
  # DEBUG this => NULL
  # DEBUG __x => match$_M_node_31
  # DEBUG match$_M_node => match$_M_node_31
  # DEBUG match$_M_node => match$_M_node_31
  # DEBUG D#920 => &this_7(D)->_waiting
  # DEBUG D#119 => D#920
  # DEBUG __n => _6
  # DEBUG this => D#119
  # DEBUG this => NULL
  _48 = &_14->D.63942._M_impl._M_node.D.45287;
  # DEBUG this => NULL
  # DEBUG __x => _48
  # DEBUG this => &match
  # DEBUG __x => &D.64072
  if (match$_M_node_31 != _48)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 3>:

  <bb 4>:
  # match$_M_node_57 = PHI <match$_M_node_31(3), match$_M_node_32(17)>
  # DEBUG match$_M_node => match$_M_node_57
  # DEBUG D#920 => &this_7(D)->_waiting
  # DEBUG D#119 => D#920
  # DEBUG __n => _6
  # DEBUG this => D#119
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _48
  # DEBUG this => &match
  # DEBUG __x => &D.64072
  # DEBUG this => &match
  _9 = MEM[(struct tWaiting * &)match$_M_node_57 + 16];
  _10 = _9->input;
  if (_10 == w_input_11(D))
    goto <bb 5>;
  else
    goto <bb 16>;

  <bb 5>:
  # DEBUG this => &match
  _12 = _9->vc;
  if (_12 == w_vc_13(D))
    goto <bb 6>;
  else
    goto <bb 16>;

  <bb 6>:
  # _42 = PHI <_9(5)>
  # match$_M_node_41 = PHI <match$_M_node_57(5)>
  # DEBUG D#921 => &this_7(D)->_waiting
  # DEBUG D#119 => D#921
  # DEBUG __n => _6
  # DEBUG this => D#119
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _48
  # DEBUG this => &match
  # DEBUG __x => &D.64073
  if (_48 != match$_M_node_41)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG D#921 => &this_7(D)->_waiting
  # DEBUG D#119 => D#921
  # DEBUG __n => _6
  # DEBUG this => D#119
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _48
  # DEBUG this => &match
  # DEBUG __x => &D.64073
  # DEBUG this => &match
  _17 = _42->pres;
  _18 = _17 + 1;
  _42->pres = _18;
  goto <bb 12>;

  <bb 8>:
  # DEBUG D#921 => &this_7(D)->_waiting
  # DEBUG D#119 => D#921
  # DEBUG __n => _6
  # DEBUG this => D#119
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => &match
  # DEBUG __x => &D.64073
  # DEBUG D#140 => &D.64075
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.64075
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.64076, "Did not find match in IncrWaiting");
  _21 = &this_7(D)->D.48512;
  Module::Error (_21, &D.64076);

  <bb 9>:
  # DEBUG this => &D.64076
  # DEBUG this => &D.64076
  # DEBUG this => &D.64076
  _25 = MEM[(char * *)&D.64076];
  # DEBUG D#1 => &D.64076
  # DEBUG this => D#1
  # DEBUG this => &D.64076
  if (&D.64076.D.11539._M_local_buf != _25)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#467 => D.64076.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.64076
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.64076
  # DEBUG this => D#1
  # DEBUG this => &D.64076
  # DEBUG D#464 => &D.64076._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _25
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _25
  # DEBUG this => D#458
  # DEBUG D.104598 => D#459
  operator delete (_25);

  <bb 11>:
  # DEBUG D#468 => &D.64076._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.64076 ={v} {CLOBBER};
  # DEBUG this => &D.64075
  # DEBUG this => &D.64075

  <bb 12>:

  <bb 18>:
  # DEBUG D#923 => {CLOBBER}
  # DEBUG match$_M_node => D#923
  return;

<L11>:
  # DEBUG this => &D.64076
  # DEBUG this => &D.64076
  # DEBUG this => &D.64076
  _23 = MEM[(char * *)&D.64076];
  # DEBUG D#1 => &D.64076
  # DEBUG this => D#1
  # DEBUG this => &D.64076
  if (&D.64076.D.11539._M_local_buf != _23)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG D#467 => D.64076.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.64076
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.64076
  # DEBUG this => D#1
  # DEBUG this => &D.64076
  # DEBUG D#464 => &D.64076._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _23
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _23
  # DEBUG this => D#458
  # DEBUG D.104613 => D#459
  operator delete (_23);

  <bb 15>:
  # DEBUG D#468 => &D.64076._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.64076 ={v} {CLOBBER};
  resx 5

  <bb 16>:
  # DEBUG this => &match
  match$_M_node_32 = match$_M_node_57->_M_next;
  # DEBUG match$_M_node => match$_M_node_32
  # DEBUG match$_M_node => match$_M_node_32
  # DEBUG D#920 => &this_7(D)->_waiting
  # DEBUG D#119 => D#920
  # DEBUG __n => _6
  # DEBUG this => D#119
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _48
  # DEBUG this => &match
  # DEBUG __x => &D.64072
  if (match$_M_node_32 != _48)
    goto <bb 17>;
  else
    goto <bb 8>;

  <bb 17>:
  goto <bb 4>;

}



;; Function bool EventNextVCState::IsInputWaiting(int, int, int) const (_ZNK16EventNextVCState14IsInputWaitingEiii, funcdef_no=2190, decl_uid=48456, cgraph_uid=539, symbol_order=540)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
bool EventNextVCState::IsInputWaiting(int, int, int) const (const struct EventNextVCState * const this, int vc, int w_input, int w_vc)
{
  const struct _List_node_base * match$_M_node;
  bool r;
  long unsigned int _6;
  struct tWaiting * _9;
  int _10;
  const struct list & _12;
  int _13;
  long unsigned int _15;
  struct list * const _18;
  const struct _List_node_base * _25;

  <bb 2>:
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  _6 = (long unsigned int) vc_5(D);
  # DEBUG D#199 => &this_7(D)->_waiting
  _18 = MEM[(struct list * *)this_7(D) + 200B];
  # DEBUG D#113 => D#199
  # DEBUG __n => _6
  # DEBUG this => D#113
  _15 = _6 * 24;
  _12 = _18 + _15;
  match$_M_node_19 = MEM[(struct _List_node_base * *)_12];
  # DEBUG this => D#198
  # DEBUG this => NULL
  # DEBUG __x => match$_M_node_19
  # DEBUG match$_M_node => match$_M_node_19
  # DEBUG match$_M_node => match$_M_node_19
  # DEBUG D#200 => &this_7(D)->_waiting
  # DEBUG D#113 => D#200
  # DEBUG __n => _6
  # DEBUG this => D#113
  # DEBUG this => NULL
  _25 = &_12->D.63942._M_impl._M_node.D.45287;
  # DEBUG this => NULL
  # DEBUG __x => _25
  # DEBUG this => &match
  # DEBUG __x => &D.64157
  if (match$_M_node_19 != _25)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # match$_M_node_23 = PHI <match$_M_node_19(3), match$_M_node_20(9)>
  # DEBUG match$_M_node => match$_M_node_23
  # DEBUG D#200 => &this_7(D)->_waiting
  # DEBUG D#113 => D#200
  # DEBUG __n => _6
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _25
  # DEBUG this => &match
  # DEBUG __x => &D.64157
  # DEBUG this => &match
  _9 = MEM[(struct tWaiting * const &)match$_M_node_23 + 16];
  _10 = _9->input;
  if (_10 == w_input_11(D))
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  # DEBUG this => &match
  _13 = _9->vc;
  if (_13 == w_vc_14(D))
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  # match$_M_node_29 = PHI <match$_M_node_23(5)>
  # DEBUG D#201 => &this_7(D)->_waiting
  # DEBUG D#113 => D#201
  # DEBUG __n => _6
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _25
  # DEBUG this => &match
  # DEBUG __x => &D.64158
  r_21 = match$_M_node_29 != _25;

  <bb 7>:
  # r_1 = PHI <r_21(6), 0(8), 0(2)>

  <bb 10>:
  # DEBUG r => r_1
  # DEBUG D#202 => {CLOBBER}
  # DEBUG match$_M_node => D#202
  return r_1;

  <bb 8>:
  # DEBUG this => &match
  match$_M_node_20 = match$_M_node_23->_M_next;
  # DEBUG match$_M_node => match$_M_node_20
  # DEBUG match$_M_node => match$_M_node_20
  # DEBUG D#200 => &this_7(D)->_waiting
  # DEBUG D#113 => D#200
  # DEBUG __n => _6
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _25
  # DEBUG this => &match
  # DEBUG __x => &D.64157
  if (match$_M_node_20 != _25)
    goto <bb 9>;
  else
    goto <bb 7>;

  <bb 9>:
  goto <bb 4>;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::vector<bool>; _Alloc = std::allocator<std::vector<bool> >] (_ZNSt6vectorIS_IbSaIbEESaIS1_EED2Ev, funcdef_no=2254, decl_uid=50016, cgraph_uid=603, symbol_order=604)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::vector<bool>; _Alloc = std::allocator<std::vector<bool> >] (struct vector * const this)
{
  struct vector * __first;
  struct vector * _4;
  struct vector * pretmp_13;
  struct vector * prephitmp_14;
  _Bit_type * _23;
  long unsigned int * const _24;
  long int _26;
  long int _27;
  long int _28;
  long unsigned int _29;
  sizetype _30;
  long unsigned int * _31;

  <bb 2>:
  # DEBUG D#621 => &this_1(D)->D.50019
  # DEBUG this => D#621
  _4 = this_1(D)->D.50019._M_impl._M_finish;
  __first_5 = this_1(D)->D.50019._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 9>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(7)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG D#2905 => &__first_38->D.43009
  # DEBUG this => D#2905
  # DEBUG this => D#2905
  _23 = MEM[(struct _Bvector_base *)__first_38]._M_impl._M_start.D.26904._M_p;
  if (_23 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#567 => &D#2905->_M_impl
  _24 = MEM[(long unsigned int * *)__first_38 + 32B];
  # DEBUG D#324 => D#567
  # DEBUG this => D#324
  _26 = (long int) _24;
  _27 = (long int) _23;
  _28 = _26 - _27;
  # DEBUG D#570 => _28 /[ex] 8
  # DEBUG D#569 => (const size_t) D#570
  # DEBUG __n => D#569
  _29 = (long unsigned int) _28;
  _30 = -_29;
  _31 = _24 + _30;
  # DEBUG D#568 => &D#2905->_M_impl
  # DEBUG D#565 => D#568
  # DEBUG D#566 => D#569
  # DEBUG __p => _31
  # DEBUG __a => D#565
  # DEBUG __n => D#566
  # DEBUG D#564 => D#566
  # DEBUG D#563 => D#565
  # DEBUG D#561 => D#563
  # DEBUG D#562 => D#564
  # DEBUG __p => _31
  # DEBUG this => D#561
  # DEBUG D.135422 => D#562
  operator delete (_31);

  <bb 6>:
  # DEBUG D#571 => &D#2905->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 40;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 12>:
  pretmp_13 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 9>:
  # prephitmp_14 = PHI <pretmp_13(12), __first_5(2)>
  # DEBUG D#622 => &this_1(D)->D.50019
  # DEBUG this => D#622
  # DEBUG D#616 => D#622->_M_impl._M_end_of_storage
  # DEBUG D#615 => (long int) D#616
  # DEBUG D#2906 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#614 => (long int) D#2906
  # DEBUG D#613 => D#615 - D#614
  # DEBUG D#612 => D#613 /[ex] 40
  # DEBUG D#609 => D#622
  # DEBUG D#610 => (long unsigned int) D#612
  # DEBUG __p => D#2906
  # DEBUG this => D#609
  # DEBUG __n => D#610
  # DEBUG D#608 => D#610
  # DEBUG D#607 => D#609
  if (prephitmp_14 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#606 => &D#607->_M_impl
  # DEBUG D#604 => D#606
  # DEBUG D#605 => D#608
  # DEBUG __p => D#2906
  # DEBUG __a => D#604
  # DEBUG __n => D#605
  # DEBUG D#603 => D#605
  # DEBUG D#602 => D#604
  # DEBUG D#600 => D#602
  # DEBUG D#601 => D#603
  # DEBUG __p => D#2906
  # DEBUG this => D#600
  # DEBUG D.102723 => D#601
  operator delete (prephitmp_14);

  <bb 11>:
  # DEBUG D#611 => &D#622->_M_impl
  # DEBUG this => D#611
  # DEBUG this => D#611
  # DEBUG this => D#611
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >] (_ZNSt6vectorISt5queueIP4FlitSt5dequeIS2_SaIS2_EEESaIS6_EED2Ev, funcdef_no=2266, decl_uid=51516, cgraph_uid=615, symbol_order=616)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >] (struct vector * const this)
{
  struct Flit * * * __nstart;
  struct queue * __first;
  struct queue * _4;
  struct Flit * * * pretmp_13;
  struct Flit * * * prephitmp_16;
  struct Flit * * * _20;
  struct Flit * * * _21;
  struct Flit * * * _22;
  struct Flit * * _25;
  struct queue * pretmp_31;
  struct queue * prephitmp_32;

  <bb 2>:
  # DEBUG D#1188 => &this_1(D)->D.51519
  # DEBUG this => D#1188
  _4 = this_1(D)->D.51519._M_impl._M_finish;
  __first_5 = this_1(D)->D.51519._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(12)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  # DEBUG D#2909 => &MEM[(struct deque *)__first_38].D.44077
  # DEBUG this => D#2909
  _20 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _21 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_finish._M_node;
  _22 = _21 + 8;
  __nstart_23 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_start._M_node;
  # DEBUG this => D#2909
  # DEBUG __nstart => __nstart_23
  # DEBUG __nfinish => _22
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_22 <= __nstart_23)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_43 = PHI <__nstart_23(6), __nstart_26(8)>
  # DEBUG __n => __nstart_43
  _25 = *__nstart_43;
  # DEBUG D#1039 => D#2909
  # DEBUG __p => _25
  # DEBUG this => D#1039
  # DEBUG D#1038 => D#1039
  # DEBUG __size => 8
  # DEBUG D#1037 => &D#1038->_M_impl
  # DEBUG D#1017 => D#1037
  # DEBUG __p => _25
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _25
  # DEBUG this => D#1013
  # DEBUG D.135483 => D#1014
  operator delete (_25);
  __nstart_26 = __nstart_43 + 8;
  # DEBUG __n => __nstart_26
  # DEBUG __n => __nstart_26
  if (_22 <= __nstart_26)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 18>:
  pretmp_13 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;

  <bb 10>:
  # prephitmp_16 = PHI <pretmp_13(18), _20(5)>
  # DEBUG D#1172 => D#2909->_M_impl._M_map_size
  # DEBUG D#2911 => MEM[(struct _Deque_base *)__first_38]._M_impl._M_map
  # DEBUG D#1170 => D#2909
  # DEBUG D#1171 => D#1172
  # DEBUG __p => D#2911
  # DEBUG this => D#1170
  # DEBUG __n => D#1171
  # DEBUG D#1169 => D#1171
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1168
  # DEBUG this => D#1167
  # DEBUG D#1166 => D#1167
  # DEBUG this => D#1166
  # DEBUG this => NULL
  # DEBUG D.107691 => NULL
  # DEBUG this => NULL
  # DEBUG D#791 => &__map_alloc
  # DEBUG D#792 => D#1169
  # DEBUG __p => D#2911
  # DEBUG __a => D#791
  # DEBUG __n => D#792
  # DEBUG D#790 => D#792
  # DEBUG D#789 => D#791
  # DEBUG D#787 => D#789
  # DEBUG D#788 => D#790
  # DEBUG __p => D#2911
  # DEBUG this => D#787
  # DEBUG D.135493 => D#788
  operator delete (prephitmp_16);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#1173 => &D#2909->_M_impl
  # DEBUG this => D#1173
  # DEBUG this => D#1173
  # DEBUG this => D#1173
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 80;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 17>:
  pretmp_31 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 14>:
  # prephitmp_32 = PHI <pretmp_31(17), __first_5(2)>
  # DEBUG D#1189 => &this_1(D)->D.51519
  # DEBUG this => D#1189
  # DEBUG D#661 => D#1189->_M_impl._M_end_of_storage
  # DEBUG D#660 => (long int) D#661
  # DEBUG D#2910 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#659 => (long int) D#2910
  # DEBUG D#658 => D#660 - D#659
  # DEBUG D#657 => D#658 /[ex] 80
  # DEBUG D#654 => D#1189
  # DEBUG D#655 => (long unsigned int) D#657
  # DEBUG __p => D#2910
  # DEBUG this => D#654
  # DEBUG __n => D#655
  # DEBUG D#653 => D#655
  # DEBUG D#652 => D#654
  if (prephitmp_32 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#651 => &D#652->_M_impl
  # DEBUG D#649 => D#651
  # DEBUG D#650 => D#653
  # DEBUG __p => D#2910
  # DEBUG __a => D#649
  # DEBUG __n => D#650
  # DEBUG D#648 => D#650
  # DEBUG D#647 => D#649
  # DEBUG D#645 => D#647
  # DEBUG D#646 => D#648
  # DEBUG __p => D#2910
  # DEBUG this => D#645
  # DEBUG D.107862 => D#646
  operator delete (prephitmp_32);

  <bb 16>:
  # DEBUG D#656 => &D#1189->_M_impl
  # DEBUG this => D#656
  # DEBUG this => D#656
  # DEBUG this => D#656
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >] (_ZNSt6vectorISt5queueIP6CreditSt5dequeIS2_SaIS2_EEESaIS6_EED2Ev, funcdef_no=2272, decl_uid=52265, cgraph_uid=621, symbol_order=622)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >] (struct vector * const this)
{
  struct Credit * * * __nstart;
  struct queue * __first;
  struct queue * _4;
  struct Credit * * * pretmp_13;
  struct Credit * * * prephitmp_16;
  struct Credit * * * _20;
  struct Credit * * * _21;
  struct Credit * * * _22;
  struct Credit * * _25;
  struct queue * pretmp_31;
  struct queue * prephitmp_32;

  <bb 2>:
  # DEBUG D#1212 => &this_1(D)->D.52268
  # DEBUG this => D#1212
  _4 = this_1(D)->D.52268._M_impl._M_finish;
  __first_5 = this_1(D)->D.52268._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(12)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  # DEBUG D#2913 => &MEM[(struct deque *)__first_38].D.59602
  # DEBUG this => D#2913
  _20 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _21 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_finish._M_node;
  _22 = _21 + 8;
  __nstart_23 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_start._M_node;
  # DEBUG this => D#2913
  # DEBUG __nstart => __nstart_23
  # DEBUG __nfinish => _22
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_22 <= __nstart_23)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_43 = PHI <__nstart_23(6), __nstart_26(8)>
  # DEBUG __n => __nstart_43
  _25 = *__nstart_43;
  # DEBUG this => D#2913
  # DEBUG __p => _25
  # DEBUG __size => 8
  # DEBUG D#1103 => &D#2913->_M_impl
  # DEBUG D#1083 => D#1103
  # DEBUG __p => _25
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _25
  # DEBUG this => D#1079
  # DEBUG D.135557 => D#1080
  operator delete (_25);
  __nstart_26 = __nstart_43 + 8;
  # DEBUG __n => __nstart_26
  # DEBUG __n => __nstart_26
  if (_22 <= __nstart_26)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 18>:
  pretmp_13 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;

  <bb 10>:
  # prephitmp_16 = PHI <pretmp_13(18), _20(5)>
  # DEBUG D#1196 => D#2913->_M_impl._M_map_size
  # DEBUG D#2915 => MEM[(struct _Deque_base *)__first_38]._M_impl._M_map
  # DEBUG D#1194 => D#2913
  # DEBUG D#1195 => D#1196
  # DEBUG __p => D#2915
  # DEBUG this => D#1194
  # DEBUG __n => D#1195
  # DEBUG D#1193 => D#1195
  # DEBUG D#1192 => D#1194
  # DEBUG D#1191 => D#1192
  # DEBUG this => D#1191
  # DEBUG D#1190 => D#1191
  # DEBUG this => D#1190
  # DEBUG this => NULL
  # DEBUG D.107893 => NULL
  # DEBUG this => NULL
  # DEBUG D#803 => &__map_alloc
  # DEBUG D#804 => D#1193
  # DEBUG __p => D#2915
  # DEBUG __a => D#803
  # DEBUG __n => D#804
  # DEBUG D#802 => D#804
  # DEBUG D#801 => D#803
  # DEBUG D#799 => D#801
  # DEBUG D#800 => D#802
  # DEBUG __p => D#2915
  # DEBUG this => D#799
  # DEBUG D.135567 => D#800
  operator delete (prephitmp_16);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#1197 => &D#2913->_M_impl
  # DEBUG this => D#1197
  # DEBUG this => D#1197
  # DEBUG this => D#1197
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 80;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 17>:
  pretmp_31 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 14>:
  # prephitmp_32 = PHI <pretmp_31(17), __first_5(2)>
  # DEBUG D#1213 => &this_1(D)->D.52268
  # DEBUG this => D#1213
  # DEBUG D#680 => D#1213->_M_impl._M_end_of_storage
  # DEBUG D#679 => (long int) D#680
  # DEBUG D#2914 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#678 => (long int) D#2914
  # DEBUG D#677 => D#679 - D#678
  # DEBUG D#676 => D#677 /[ex] 80
  # DEBUG D#673 => D#1213
  # DEBUG D#674 => (long unsigned int) D#676
  # DEBUG __p => D#2914
  # DEBUG this => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  if (prephitmp_32 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#670 => &D#671->_M_impl
  # DEBUG D#668 => D#670
  # DEBUG D#669 => D#672
  # DEBUG __p => D#2914
  # DEBUG __a => D#668
  # DEBUG __n => D#669
  # DEBUG D#667 => D#669
  # DEBUG D#666 => D#668
  # DEBUG D#664 => D#666
  # DEBUG D#665 => D#667
  # DEBUG __p => D#2914
  # DEBUG this => D#664
  # DEBUG D.108064 => D#665
  operator delete (prephitmp_32);

  <bb 16>:
  # DEBUG D#675 => &D#1213->_M_impl
  # DEBUG this => D#675
  # DEBUG this => D#675
  # DEBUG this => D#675
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<EventRouter::tArrivalEvent*>; _Alloc = std::allocator<std::queue<EventRouter::tArrivalEvent*> >] (_ZNSt6vectorISt5queueIPN11EventRouter13tArrivalEventESt5dequeIS3_SaIS3_EEESaIS7_EED2Ev, funcdef_no=2278, decl_uid=53028, cgraph_uid=627, symbol_order=628)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<EventRouter::tArrivalEvent*>; _Alloc = std::allocator<std::queue<EventRouter::tArrivalEvent*> >] (struct vector * const this)
{
  struct tArrivalEvent * * * __nstart;
  struct queue * __first;
  struct queue * _4;
  struct tArrivalEvent * * * pretmp_13;
  struct tArrivalEvent * * * prephitmp_16;
  struct tArrivalEvent * * * _20;
  struct tArrivalEvent * * * _21;
  struct tArrivalEvent * * * _22;
  struct tArrivalEvent * * _25;
  struct queue * pretmp_31;
  struct queue * prephitmp_32;

  <bb 2>:
  # DEBUG D#1236 => &this_1(D)->D.53031
  # DEBUG this => D#1236
  _4 = this_1(D)->D.53031._M_impl._M_finish;
  __first_5 = this_1(D)->D.53031._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(12)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  # DEBUG D#2917 => &MEM[(struct deque *)__first_38].D.60628
  # DEBUG this => D#2917
  _20 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _21 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_finish._M_node;
  _22 = _21 + 8;
  __nstart_23 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_start._M_node;
  # DEBUG this => D#2917
  # DEBUG __nstart => __nstart_23
  # DEBUG __nfinish => _22
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_22 <= __nstart_23)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_43 = PHI <__nstart_23(6), __nstart_26(8)>
  # DEBUG __n => __nstart_43
  _25 = *__nstart_43;
  # DEBUG this => D#2917
  # DEBUG __p => _25
  # DEBUG __size => 8
  # DEBUG D#1158 => &D#2917->_M_impl
  # DEBUG D#1138 => D#1158
  # DEBUG __p => _25
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _25
  # DEBUG this => D#1134
  # DEBUG D.135631 => D#1135
  operator delete (_25);
  __nstart_26 = __nstart_43 + 8;
  # DEBUG __n => __nstart_26
  # DEBUG __n => __nstart_26
  if (_22 <= __nstart_26)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 18>:
  pretmp_13 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;

  <bb 10>:
  # prephitmp_16 = PHI <pretmp_13(18), _20(5)>
  # DEBUG D#1220 => D#2917->_M_impl._M_map_size
  # DEBUG D#2919 => MEM[(struct _Deque_base *)__first_38]._M_impl._M_map
  # DEBUG D#1218 => D#2917
  # DEBUG D#1219 => D#1220
  # DEBUG __p => D#2919
  # DEBUG this => D#1218
  # DEBUG __n => D#1219
  # DEBUG D#1217 => D#1219
  # DEBUG D#1216 => D#1218
  # DEBUG D#1215 => D#1216
  # DEBUG this => D#1215
  # DEBUG D#1214 => D#1215
  # DEBUG this => D#1214
  # DEBUG this => NULL
  # DEBUG D.108095 => NULL
  # DEBUG this => NULL
  # DEBUG D#815 => &__map_alloc
  # DEBUG D#816 => D#1217
  # DEBUG __p => D#2919
  # DEBUG __a => D#815
  # DEBUG __n => D#816
  # DEBUG D#814 => D#816
  # DEBUG D#813 => D#815
  # DEBUG D#811 => D#813
  # DEBUG D#812 => D#814
  # DEBUG __p => D#2919
  # DEBUG this => D#811
  # DEBUG D.135641 => D#812
  operator delete (prephitmp_16);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#1221 => &D#2917->_M_impl
  # DEBUG this => D#1221
  # DEBUG this => D#1221
  # DEBUG this => D#1221
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 80;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 17>:
  pretmp_31 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 14>:
  # prephitmp_32 = PHI <pretmp_31(17), __first_5(2)>
  # DEBUG D#1237 => &this_1(D)->D.53031
  # DEBUG this => D#1237
  # DEBUG D#699 => D#1237->_M_impl._M_end_of_storage
  # DEBUG D#698 => (long int) D#699
  # DEBUG D#2918 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#697 => (long int) D#2918
  # DEBUG D#696 => D#698 - D#697
  # DEBUG D#695 => D#696 /[ex] 80
  # DEBUG D#692 => D#1237
  # DEBUG D#693 => (long unsigned int) D#695
  # DEBUG __p => D#2918
  # DEBUG this => D#692
  # DEBUG __n => D#693
  # DEBUG D#691 => D#693
  # DEBUG D#690 => D#692
  if (prephitmp_32 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#689 => &D#690->_M_impl
  # DEBUG D#687 => D#689
  # DEBUG D#688 => D#691
  # DEBUG __p => D#2918
  # DEBUG __a => D#687
  # DEBUG __n => D#688
  # DEBUG D#686 => D#688
  # DEBUG D#685 => D#687
  # DEBUG D#683 => D#685
  # DEBUG D#684 => D#686
  # DEBUG __p => D#2918
  # DEBUG this => D#683
  # DEBUG D.108266 => D#684
  operator delete (prephitmp_32);

  <bb 16>:
  # DEBUG D#694 => &D#1237->_M_impl
  # DEBUG this => D#694
  # DEBUG this => D#694
  # DEBUG this => D#694
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<EventRouter::tTransportEvent*>; _Alloc = std::allocator<std::queue<EventRouter::tTransportEvent*> >] (_ZNSt6vectorISt5queueIPN11EventRouter15tTransportEventESt5dequeIS3_SaIS3_EEESaIS7_EED2Ev, funcdef_no=2290, decl_uid=54532, cgraph_uid=639, symbol_order=640)

Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::queue<EventRouter::tTransportEvent*>; _Alloc = std::allocator<std::queue<EventRouter::tTransportEvent*> >] (struct vector * const this)
{
  struct tTransportEvent * * * __nstart;
  struct queue * __first;
  struct queue * _4;
  struct tTransportEvent * * * pretmp_13;
  struct tTransportEvent * * * prephitmp_16;
  struct tTransportEvent * * * _20;
  struct tTransportEvent * * * _21;
  struct tTransportEvent * * * _22;
  struct tTransportEvent * * _25;
  struct queue * pretmp_31;
  struct queue * prephitmp_32;

  <bb 2>:
  # DEBUG D#1273 => &this_1(D)->D.54535
  # DEBUG this => D#1273
  _4 = this_1(D)->D.54535._M_impl._M_finish;
  __first_5 = this_1(D)->D.54535._M_impl._M_start;
  # DEBUG __first => __first_5
  # DEBUG __last => _4
  # DEBUG __first => __first_5
  if (_4 == __first_5)
    goto <bb 14>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_38 = PHI <__first_5(3), __first_9(12)>
  # DEBUG __first => __first_38
  # DEBUG __r => __first_38
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  # DEBUG D#2921 => &MEM[(struct deque *)__first_38].D.61649
  # DEBUG this => D#2921
  _20 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;
  if (_20 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;

  <bb 5>:
  _21 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_finish._M_node;
  _22 = _21 + 8;
  __nstart_23 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_start._M_node;
  # DEBUG this => D#2921
  # DEBUG __nstart => __nstart_23
  # DEBUG __nfinish => _22
  # DEBUG __n => __nstart_23
  # DEBUG __n => __nstart_23
  if (_22 <= __nstart_23)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  # __nstart_43 = PHI <__nstart_23(6), __nstart_26(8)>
  # DEBUG __n => __nstart_43
  _25 = *__nstart_43;
  # DEBUG this => D#2921
  # DEBUG __p => _25
  # DEBUG __size => 8
  # DEBUG D#1244 => &D#2921->_M_impl
  # DEBUG D#1242 => D#1244
  # DEBUG __p => _25
  # DEBUG __a => D#1242
  # DEBUG __n => D#1243
  # DEBUG D#1241 => D#1243
  # DEBUG D#1240 => D#1242
  # DEBUG D#1238 => D#1240
  # DEBUG D#1239 => D#1241
  # DEBUG __p => _25
  # DEBUG this => D#1238
  # DEBUG D.135705 => D#1239
  operator delete (_25);
  __nstart_26 = __nstart_43 + 8;
  # DEBUG __n => __nstart_26
  # DEBUG __n => __nstart_26
  if (_22 <= __nstart_26)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:

  <bb 18>:
  pretmp_13 = MEM[(struct _Deque_base *)__first_38]._M_impl._M_map;

  <bb 10>:
  # prephitmp_16 = PHI <pretmp_13(18), _20(5)>
  # DEBUG D#1257 => D#2921->_M_impl._M_map_size
  # DEBUG D#2923 => MEM[(struct _Deque_base *)__first_38]._M_impl._M_map
  # DEBUG D#1255 => D#2921
  # DEBUG D#1256 => D#1257
  # DEBUG __p => D#2923
  # DEBUG this => D#1255
  # DEBUG __n => D#1256
  # DEBUG D#1254 => D#1256
  # DEBUG D#1253 => D#1255
  # DEBUG D#1252 => D#1253
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1252
  # DEBUG this => D#1251
  # DEBUG this => NULL
  # DEBUG D.108389 => NULL
  # DEBUG this => NULL
  # DEBUG D#825 => &__map_alloc
  # DEBUG D#826 => D#1254
  # DEBUG __p => D#2923
  # DEBUG __a => D#825
  # DEBUG __n => D#826
  # DEBUG D#824 => D#826
  # DEBUG D#823 => D#825
  # DEBUG D#821 => D#823
  # DEBUG D#822 => D#824
  # DEBUG __p => D#2923
  # DEBUG this => D#821
  # DEBUG D.135715 => D#822
  operator delete (prephitmp_16);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 11>:
  # DEBUG D#1258 => &D#2921->_M_impl
  # DEBUG this => D#1258
  # DEBUG this => D#1258
  # DEBUG this => D#1258
  MEM[(struct  &)__first_38] ={v} {CLOBBER};
  __first_9 = __first_38 + 80;
  # DEBUG __first => __first_9
  # DEBUG __first => __first_9
  if (_4 == __first_9)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 4>;

  <bb 13>:

  <bb 17>:
  pretmp_31 = MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start;

  <bb 14>:
  # prephitmp_32 = PHI <pretmp_31(17), __first_5(2)>
  # DEBUG D#1274 => &this_1(D)->D.54535
  # DEBUG this => D#1274
  # DEBUG D#738 => D#1274->_M_impl._M_end_of_storage
  # DEBUG D#737 => (long int) D#738
  # DEBUG D#2922 => MEM[(struct _Vector_base *)this_1(D)]._M_impl._M_start
  # DEBUG D#736 => (long int) D#2922
  # DEBUG D#735 => D#737 - D#736
  # DEBUG D#734 => D#735 /[ex] 80
  # DEBUG D#731 => D#1274
  # DEBUG D#732 => (long unsigned int) D#734
  # DEBUG __p => D#2922
  # DEBUG this => D#731
  # DEBUG __n => D#732
  # DEBUG D#730 => D#732
  # DEBUG D#729 => D#731
  if (prephitmp_32 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#728 => &D#729->_M_impl
  # DEBUG D#726 => D#728
  # DEBUG D#727 => D#730
  # DEBUG __p => D#2922
  # DEBUG __a => D#726
  # DEBUG __n => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#726
  # DEBUG D#722 => D#724
  # DEBUG D#723 => D#725
  # DEBUG __p => D#2922
  # DEBUG this => D#722
  # DEBUG D.108560 => D#723
  operator delete (prephitmp_32);

  <bb 16>:
  # DEBUG D#733 => &D#1274->_M_impl
  # DEBUG this => D#733
  # DEBUG this => D#733
  # DEBUG this => D#733
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt11_Deque_baseIP4FlitSaIS1_EED2Ev, funcdef_no=2815, decl_uid=43583, cgraph_uid=1164, symbol_order=1165)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct _Deque_base * const this)
{
  struct Flit * * * __nstart;
  struct Flit * * * _4;
  struct Flit * * * _5;
  struct Flit * * * _6;
  struct Flit * * _13;
  struct Flit * * * pretmp_16;
  struct Flit * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG D#1039 => this_3(D)
  # DEBUG __p => _13
  # DEBUG this => D#1039
  # DEBUG D#1038 => D#1039
  # DEBUG __size => 8
  # DEBUG D#1037 => &D#1038->_M_impl
  # DEBUG D#1017 => D#1037
  # DEBUG __p => _13
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _13
  # DEBUG this => D#1013
  # DEBUG D.107751 => D#1014
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#1172 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2925 => this_3(D)->_M_impl._M_map
  # DEBUG D#1170 => this_3(D)
  # DEBUG D#1171 => D#1172
  # DEBUG __p => D#2925
  # DEBUG this => D#1170
  # DEBUG __n => D#1171
  # DEBUG D#1169 => D#1171
  # DEBUG D#1168 => D#1170
  # DEBUG D#1167 => D#1168
  # DEBUG this => D#1167
  # DEBUG D#1166 => D#1167
  # DEBUG this => D#1166
  # DEBUG this => NULL
  # DEBUG D.107691 => NULL
  # DEBUG this => NULL
  # DEBUG D#791 => &__map_alloc
  # DEBUG D#792 => D#1169
  # DEBUG __p => D#2925
  # DEBUG __a => D#791
  # DEBUG __n => D#792
  # DEBUG D#790 => D#792
  # DEBUG D#789 => D#791
  # DEBUG D#787 => D#789
  # DEBUG D#788 => D#790
  # DEBUG __p => D#2925
  # DEBUG this => D#787
  # DEBUG D.107738 => D#788
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#1173 => &this_3(D)->_M_impl
  # DEBUG this => D#1173
  # DEBUG this => D#1173
  # DEBUG this => D#1173
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt11_Deque_baseIP6CreditSaIS1_EED2Ev, funcdef_no=2842, decl_uid=59108, cgraph_uid=1191, symbol_order=1192)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct _Deque_base * const this)
{
  struct Credit * * * __nstart;
  struct Credit * * * _4;
  struct Credit * * * _5;
  struct Credit * * * _6;
  struct Credit * * _13;
  struct Credit * * * pretmp_16;
  struct Credit * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => this_3(D)
  # DEBUG __p => _13
  # DEBUG __size => 8
  # DEBUG D#1103 => &this_3(D)->_M_impl
  # DEBUG D#1083 => D#1103
  # DEBUG __p => _13
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _13
  # DEBUG this => D#1079
  # DEBUG D.107953 => D#1080
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#1196 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2927 => this_3(D)->_M_impl._M_map
  # DEBUG D#1194 => this_3(D)
  # DEBUG D#1195 => D#1196
  # DEBUG __p => D#2927
  # DEBUG this => D#1194
  # DEBUG __n => D#1195
  # DEBUG D#1193 => D#1195
  # DEBUG D#1192 => D#1194
  # DEBUG D#1191 => D#1192
  # DEBUG this => D#1191
  # DEBUG D#1190 => D#1191
  # DEBUG this => D#1190
  # DEBUG this => NULL
  # DEBUG D.107893 => NULL
  # DEBUG this => NULL
  # DEBUG D#803 => &__map_alloc
  # DEBUG D#804 => D#1193
  # DEBUG __p => D#2927
  # DEBUG __a => D#803
  # DEBUG __n => D#804
  # DEBUG D#802 => D#804
  # DEBUG D#801 => D#803
  # DEBUG D#799 => D#801
  # DEBUG D#800 => D#802
  # DEBUG __p => D#2927
  # DEBUG this => D#799
  # DEBUG D.107940 => D#800
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#1197 => &this_3(D)->_M_impl
  # DEBUG this => D#1197
  # DEBUG this => D#1197
  # DEBUG this => D#1197
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>] (_ZNSt11_Deque_baseIPN11EventRouter13tArrivalEventESaIS2_EED2Ev, funcdef_no=2871, decl_uid=60134, cgraph_uid=1220, symbol_order=1221)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>] (struct _Deque_base * const this)
{
  struct tArrivalEvent * * * __nstart;
  struct tArrivalEvent * * * _4;
  struct tArrivalEvent * * * _5;
  struct tArrivalEvent * * * _6;
  struct tArrivalEvent * * _13;
  struct tArrivalEvent * * * pretmp_16;
  struct tArrivalEvent * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => this_3(D)
  # DEBUG __p => _13
  # DEBUG __size => 8
  # DEBUG D#1158 => &this_3(D)->_M_impl
  # DEBUG D#1138 => D#1158
  # DEBUG __p => _13
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _13
  # DEBUG this => D#1134
  # DEBUG D.108155 => D#1135
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#1220 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2929 => this_3(D)->_M_impl._M_map
  # DEBUG D#1218 => this_3(D)
  # DEBUG D#1219 => D#1220
  # DEBUG __p => D#2929
  # DEBUG this => D#1218
  # DEBUG __n => D#1219
  # DEBUG D#1217 => D#1219
  # DEBUG D#1216 => D#1218
  # DEBUG D#1215 => D#1216
  # DEBUG this => D#1215
  # DEBUG D#1214 => D#1215
  # DEBUG this => D#1214
  # DEBUG this => NULL
  # DEBUG D.108095 => NULL
  # DEBUG this => NULL
  # DEBUG D#815 => &__map_alloc
  # DEBUG D#816 => D#1217
  # DEBUG __p => D#2929
  # DEBUG __a => D#815
  # DEBUG __n => D#816
  # DEBUG D#814 => D#816
  # DEBUG D#813 => D#815
  # DEBUG D#811 => D#813
  # DEBUG D#812 => D#814
  # DEBUG __p => D#2929
  # DEBUG this => D#811
  # DEBUG D.108142 => D#812
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#1221 => &this_3(D)->_M_impl
  # DEBUG this => D#1221
  # DEBUG this => D#1221
  # DEBUG this => D#1221
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>] (_ZNSt11_Deque_baseIPN11EventRouter15tTransportEventESaIS2_EED2Ev, funcdef_no=2900, decl_uid=61155, cgraph_uid=1249, symbol_order=1250)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>] (struct _Deque_base * const this)
{
  struct tTransportEvent * * * __nstart;
  struct tTransportEvent * * * _4;
  struct tTransportEvent * * * _5;
  struct tTransportEvent * * * _6;
  struct tTransportEvent * * _13;
  struct tTransportEvent * * * pretmp_16;
  struct tTransportEvent * * * prephitmp_17;

  <bb 2>:
  _4 = this_3(D)->_M_impl._M_map;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _5 = this_3(D)->_M_impl._M_finish._M_node;
  _6 = _5 + 8;
  __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
  # DEBUG this => this_3(D)
  # DEBUG __nstart => __nstart_7
  # DEBUG __nfinish => _6
  # DEBUG __n => __nstart_7
  # DEBUG __n => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # DEBUG __n => __nstart_20
  _13 = *__nstart_20;
  # DEBUG this => this_3(D)
  # DEBUG __p => _13
  # DEBUG __size => 8
  # DEBUG D#1244 => &this_3(D)->_M_impl
  # DEBUG D#1242 => D#1244
  # DEBUG __p => _13
  # DEBUG __a => D#1242
  # DEBUG __n => D#1243
  # DEBUG D#1241 => D#1243
  # DEBUG D#1240 => D#1242
  # DEBUG D#1238 => D#1240
  # DEBUG D#1239 => D#1241
  # DEBUG __p => _13
  # DEBUG this => D#1238
  # DEBUG D.108449 => D#1239
  operator delete (_13);
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __n => __nstart_14
  # DEBUG __n => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 10>:
  pretmp_16 = this_3(D)->_M_impl._M_map;

  <bb 8>:
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#1257 => this_3(D)->_M_impl._M_map_size
  # DEBUG D#2931 => this_3(D)->_M_impl._M_map
  # DEBUG D#1255 => this_3(D)
  # DEBUG D#1256 => D#1257
  # DEBUG __p => D#2931
  # DEBUG this => D#1255
  # DEBUG __n => D#1256
  # DEBUG D#1254 => D#1256
  # DEBUG D#1253 => D#1255
  # DEBUG D#1252 => D#1253
  # DEBUG this => D#1252
  # DEBUG D#1251 => D#1252
  # DEBUG this => D#1251
  # DEBUG this => NULL
  # DEBUG D.108389 => NULL
  # DEBUG this => NULL
  # DEBUG D#825 => &__map_alloc
  # DEBUG D#826 => D#1254
  # DEBUG __p => D#2931
  # DEBUG __a => D#825
  # DEBUG __n => D#826
  # DEBUG D#824 => D#826
  # DEBUG D#823 => D#825
  # DEBUG D#821 => D#823
  # DEBUG D#822 => D#824
  # DEBUG __p => D#2931
  # DEBUG this => D#821
  # DEBUG D.108436 => D#822
  operator delete (prephitmp_17);
  # DEBUG this => &__map_alloc
  # DEBUG this => &__map_alloc

  <bb 9>:
  # DEBUG D#1258 => &this_3(D)->_M_impl
  # DEBUG this => D#1258
  # DEBUG this => D#1258
  # DEBUG this => D#1258
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>] (_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi, funcdef_no=2949, decl_uid=33622, cgraph_uid=1298, symbol_order=1299)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>] (struct _Rb_tree * const this, const int & __v)
{
  struct _Rb_tree_node_base * SR.4501;
  struct _Rb_tree_node_base * SR.4500;
  struct _Rb_tree_node_base * __res$8;
  struct _Rb_tree_node_base * __res;
  bool __insert_left;
  struct iterator D.135828;
  struct pair D.135801;
  bool __comp;
  struct _Rb_tree_node_base * const __j$_M_node;
  struct _Rb_tree_node_base * SR.3049;
  struct _Rb_tree_node_base * __res$second;
  struct _Rb_tree_node_base * __res$first;
  struct pair __res;
  struct iterator D.71820;
  struct pair D.95403;
  const int pretmp_15;
  struct _Rb_tree_node_base * _18;
  int prephitmp_20;
  const int _22;
  struct _Rb_tree_node_base * _24;
  struct _Rb_tree_node_base * _25;
  const int pretmp_26;
  struct _Rb_tree_node_base * _27;
  struct _Rb_tree_node_base * const _33;
  const int _36;
  const int _37;
  struct _Rb_tree_node * _38;
  int _40;
  long unsigned int _44;
  long unsigned int _45;
  const int prephitmp_47;
  const int _48;
  const int prephitmp_49;
  const int pretmp_51;
  int pretmp_72;

  <bb 2>:
  # DEBUG D#274 => &D.71763
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#274
  # DEBUG this => this_4(D)
  # DEBUG __k => __v_3(D)
  _18 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 16B];
  # DEBUG D#129 => this_4(D)
  # DEBUG this => D#129
  # DEBUG __x => NULL
  # DEBUG this => this_4(D)
  __j$_M_node_19 = &this_4(D)->_M_impl._M_header;
  # DEBUG __y => NULL
  # DEBUG __comp => 1
  # DEBUG __comp => 1
  # DEBUG __y => __j$_M_node_19
  # DEBUG __x => _18
  if (_18 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_51 = *__v_3(D);
  goto <bb 6>;

  <bb 4>:
  # _33 = PHI <_24(7), _25(8)>
  # DEBUG __comp => D#2934 < _22
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => _33
  if (_33 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # __j$_M_node_59 = PHI <_18(3), _33(5)>
  # DEBUG __comp => 1
  # DEBUG __x => __j$_M_node_59
  # DEBUG __y => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG __x => __j$_M_node_59
  # DEBUG this => __j$_M_node_59
  # DEBUG D#830 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_59]._M_value_field
  # DEBUG __r => D#830
  # DEBUG __x => D#830
  # DEBUG this => D#274
  # DEBUG D#834 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#435 => D#834
  # DEBUG D#2934 => *__v_3(D)
  # DEBUG D#436 => __v_3(D)
  _22 = MEM[(const int &)__j$_M_node_59 + 32];
  # DEBUG D#437 => D#830
  # DEBUG this => D#435
  # DEBUG __x => D#436
  # DEBUG __y => D#437
  # DEBUG __comp => NULL
  if (_22 > pretmp_51)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _24 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 16B];
  # DEBUG D#206 => __j$_M_node_59
  # DEBUG __x => D#206
  goto <bb 4>;

  <bb 8>:
  _25 = MEM[(struct _Rb_tree_node_base * *)__j$_M_node_59 + 24B];
  # DEBUG D#205 => __j$_M_node_59
  # DEBUG __x => D#205
  goto <bb 4>;

  <bb 9>:
  # _48 = PHI <_22(4)>
  # __j$_M_node_23 = PHI <__j$_M_node_59(4)>

  <bb 19>:
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_23
  # DEBUG __j$_M_node => __j$_M_node_23
  if (_48 > pretmp_51)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  # __j$_M_node_73 = PHI <__j$_M_node_23(19), __j$_M_node_19(2)>
  # DEBUG this => &__j
  # DEBUG __x => __j$_M_node_73
  # DEBUG __j$_M_node => __j$_M_node_73
  _27 = MEM[(struct _Rb_tree_node_base * *)this_4(D) + 24B];
  # DEBUG D#438 => this_4(D)
  # DEBUG this => D#438
  # DEBUG this => NULL
  # DEBUG __x => _27
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (_27 == __j$_M_node_73)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG this => &__j
  __j$_M_node_29 = std::_Rb_tree_decrement (__j$_M_node_73);
  # DEBUG __j$_M_node => __j$_M_node_29
  pretmp_15 = *__v_3(D);
  pretmp_26 = MEM[(const int &)__j$_M_node_29 + 32];

  <bb 12>:
  # __j$_M_node_30 = PHI <__j$_M_node_23(19), __j$_M_node_29(11)>
  # __j$_M_node_63 = PHI <__j$_M_node_23(19), __j$_M_node_73(11)>
  # prephitmp_47 = PHI <pretmp_51(19), pretmp_15(11)>
  # prephitmp_49 = PHI <_48(19), pretmp_26(11)>
  # DEBUG __j$_M_node => __j$_M_node_30
  # DEBUG __x => __j$_M_node_30
  # DEBUG __x => __j$_M_node_30
  # DEBUG this => __j$_M_node_30
  # DEBUG D#831 => &MEM[(const struct _Rb_tree_node *)__j$_M_node_30]._M_value_field
  # DEBUG __r => D#831
  # DEBUG __x => D#831
  # DEBUG this => D#274
  # DEBUG D#833 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#435 => D#833
  # DEBUG D#436 => D#831
  # DEBUG D#437 => __v_3(D)
  # DEBUG this => D#435
  # DEBUG __x => D#436
  # DEBUG __y => D#437
  if (prephitmp_47 > prephitmp_49)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  # __res$second_52 = PHI <_27(10), __j$_M_node_63(12)>
  # DEBUG D#832 => {CLOBBER}
  # DEBUG __j$_M_node => D#832
  # DEBUG __res => 0B
  # DEBUG __res$8 => __res$second_52
  # DEBUG __res$first => 0B
  # DEBUG __res$second => __res$second_52
  if (__res$second_52 != 0B)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  # DEBUG this => &__an
  # DEBUG __t => this_4(D)
  # DEBUG __an$_M_t => this_4(D)
  # DEBUG D#1985 => &__an
  # DEBUG this => this_4(D)
  # DEBUG __x => 0B
  # DEBUG __p => __res$second_52
  # DEBUG __v => __v_3(D)
  # DEBUG __node_gen => D#1985
  # DEBUG D#1984 => D#1985
  # DEBUG this => this_4(D)
  if (__j$_M_node_19 == __res$second_52)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  # DEBUG __x => __res$second_52
  # DEBUG __x => __res$second_52
  # DEBUG this => __res$second_52
  # DEBUG D#1982 => &MEM[(const struct _Rb_tree_node *)__res$second_52]._M_value_field
  # DEBUG __r => D#1982
  # DEBUG __x => D#1982
  # DEBUG this => D#274
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#274
  # DEBUG D#1983 => &this_4(D)->_M_impl._M_key_compare
  # DEBUG D#435 => D#1983
  _36 = *__v_3(D);
  _37 = MEM[(const int &)__res$second_52 + 32];
  # DEBUG D#437 => D#1982
  # DEBUG this => D#435
  # DEBUG __x => D#436
  # DEBUG __y => D#437
  __insert_left_35 = _36 < _37;
  pretmp_72 = (int) __insert_left_35;

  <bb 16>:
  # prephitmp_20 = PHI <pretmp_72(15), 1(14)>
  # DEBUG __insert_left => NULL
  # DEBUG D#1981 => D#1984
  # DEBUG __arg => __v_3(D)
  # DEBUG this => D#1981
  # DEBUG D#1980 => D#1981
  # DEBUG D#1979 => D#1980->_M_t
  # DEBUG D#1978 => D#1979
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#1978
  # DEBUG D#1977 => D#1978
  # DEBUG D#1976 => D#1978
  # DEBUG D#1975 => D#1976
  # DEBUG this => D#1975
  # DEBUG D#1974 => D#1975
  # DEBUG this => D#1974
  # DEBUG __n => 1
  # DEBUG __a => D#1973
  # DEBUG D#1972 => D#1973
  # DEBUG D#1970 => D#1972
  # DEBUG D#1971 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1970
  # DEBUG D.135818 => D#1971
  # DEBUG D#1969 => D#1970
  # DEBUG D#1968 => D#1969
  # DEBUG this => D#1968
  _38 = operator new (40);
  # DEBUG __tmp => _38
  # DEBUG D#1672 => D#1977
  # DEBUG __node => _38
  # DEBUG __x => __v_3(D)
  # DEBUG this => D#1672
  # DEBUG D#1671 => D#1672
  # DEBUG this => _38
  # DEBUG D#2933 => &_38->_M_value_field
  # DEBUG __r => D#2933
  # DEBUG D#904 => D#1671
  # DEBUG this => D#904
  # DEBUG D#903 => D#904
  # DEBUG this => D#903
  # DEBUG this => NULL
  # DEBUG D.104339 => NULL
  # DEBUG this => NULL
  # DEBUG __p => D#2933
  # DEBUG __val => __v_3(D)
  # DEBUG this => D#1670
  # DEBUG D#12 => 4
  # DEBUG __p => D#2933
  # DEBUG D.112765 => D#12
  _40 = *__v_3(D);
  MEM[(int *)_38 + 32B] = _40;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __z => _38
  std::_Rb_tree_insert_and_rebalance (prephitmp_20, _38, __res$second_52, __j$_M_node_19);
  _44 = this_4(D)->_M_impl._M_node_count;
  _45 = _44 + 1;
  this_4(D)->_M_impl._M_node_count = _45;
  # DEBUG this => NULL
  # DEBUG __x => _38
  # DEBUG this => &D.71822
  # DEBUG __a => &D.71820
  # DEBUG __b => &D.71821
  MEM[(struct pair *)&D.95403] = _38;
  MEM[(struct pair *)&D.95403 + 8B] = 1;
  D.71820 ={v} {CLOBBER};
  goto <bb 18>;

  <bb 17>:
  # __res$first_74 = PHI <0B(13), __j$_M_node_30(12)>

  <bb 21>:
  # DEBUG D#832 => {CLOBBER}
  # DEBUG __j$_M_node => D#832
  # DEBUG __res => __res$first_74
  # DEBUG __res$8 => NULL
  # DEBUG __res$first => __res$first_74
  # DEBUG __res$second => NULL
  # DEBUG this => &D.71823
  # DEBUG __x => __res$first_74
  # DEBUG this => &D.71825
  # DEBUG __a => &D.71823
  # DEBUG __b => &D.71824
  MEM[(struct pair *)&D.95403] = __res$first_74;
  MEM[(struct pair *)&D.95403 + 8B] = 0;

  <bb 18>:

  <bb 20>:
  # DEBUG D#1988 => {CLOBBER}
  # DEBUG __res$first => D#1988
  # DEBUG D#1989 => {CLOBBER}
  # DEBUG __res$second => D#1989
  return D.95403;

}



;; Function std::vector<bool, _Alloc>::vector(const std::vector<bool, _Alloc>&) [with _Alloc = std::allocator<bool>] (_ZNSt6vectorIbSaIbEEC2ERKS1_, funcdef_no=2327, decl_uid=42980, cgraph_uid=676, symbol_order=677)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<bool, _Alloc>::vector(const std::vector<bool, _Alloc>&) [with _Alloc = std::allocator<bool>] (struct vector * const this, const struct vector & __x)
{
  struct _Bit_iterator D.136085;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.136060;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.136059;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __last$D27024$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D27024$_M_offset;
  struct _Bit_iterator D.136032;
  struct iterator D.136031;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.65398;
  _Bit_type * _3;
  unsigned int _4;
  _Bit_type * _5;
  unsigned int _7;
  struct _Bvector_base * _11;
  long int _13;
  long int _14;
  long int _15;
  long int _16;
  long int _17;
  long int _18;
  long int _19;
  ptrdiff_t _20;
  size_type _21;
  _Bit_type * _22;
  long unsigned int _34;
  size_t _35;
  long unsigned int _36;
  long unsigned int * _37;
  long unsigned int * _38;
  long int _40;
  long unsigned int _41;
  long unsigned int _42;
  unsigned int _48;
  long int __last.51_52;
  long int __first.52_53;
  long int _54;
  long unsigned int _56;
  long unsigned int _81;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int pretmp_85;
  long unsigned int _86;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int _92;
  long unsigned int prephitmp_103;
  _Bit_type cstore_122;

  <bb 2>:
  # DEBUG D#980 => &__x_1(D)->D.43009
  # DEBUG this => D#980
  # DEBUG __a => NULL
  # DEBUG this => &D.65397
  # DEBUG D.105806 => NULL
  # DEBUG this => &D.65397
  # DEBUG D#982 => &this_6(D)->D.43009
  # DEBUG this => D#982
  # DEBUG __a => &D.65397
  # DEBUG this => NULL
  # DEBUG D.103219 => &D.65397
  # DEBUG this => NULL
  # DEBUG D#742 => &D#982->_M_impl
  # DEBUG this => D#742
  # DEBUG __a => NULL
  # DEBUG this => D#742
  # DEBUG __a => NULL
  # DEBUG this => D#742
  # DEBUG D.103193 => NULL
  # DEBUG D#741 => &D#742->_M_start
  # DEBUG this => D#741
  # DEBUG D#19 => &D#741->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)this_6(D)]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)this_6(D)]._M_offset = 0;
  # DEBUG D#740 => &D#742->_M_finish
  # DEBUG this => D#740
  # DEBUG D#19 => &D#740->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)this_6(D) + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)this_6(D) + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)this_6(D)]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.65397
  # DEBUG this => &D.65397
  # DEBUG this => __x_1(D)
  # DEBUG this => __x_1(D)
  # DEBUG D#142 => &__x_1(D)->D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _7 = MEM[(const struct _Bit_iterator *)__x_1(D)].D.26904._M_offset;
  _5 = MEM[(const struct _Bit_iterator *)__x_1(D)].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _5
  # DEBUG __y => _7
  # DEBUG this => D#28
  # DEBUG this => __x_1(D)
  # DEBUG D#143 => &__x_1(D)->D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  _4 = MEM[(const struct _Bit_iterator *)__x_1(D) + 16B].D.26904._M_offset;
  _3 = MEM[(const struct _Bit_iterator *)__x_1(D) + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _3
  # DEBUG __y => _4
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _13 = (long int) _3;
  _14 = (long int) _5;
  _15 = _13 - _14;
  _16 = _15 * 8;
  _17 = (long int) _4;
  _18 = _16 + _17;
  _19 = (long int) _7;
  _20 = _18 - _19;
  _21 = (size_type) _20;
  # DEBUG this => this_6(D)
  # DEBUG __n => _21
  # DEBUG D#967 => &this_6(D)->D.43009
  # DEBUG D#965 => D#967
  # DEBUG __n => _21
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  # DEBUG __n => _21
  _34 = _21 + 63;
  _35 = _34 >> 6;
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => NULL
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#959
  # DEBUG D.135994 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  _36 = _35 * 8;
  _37 = operator new (_36);

  <bb 3>:
  # DEBUG __q => _37
  # DEBUG __n => _21
  _38 = _37 + _36;
  this_6(D)->D.43009._M_impl._M_end_of_storage = _38;
  # DEBUG __r => _37
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  MEM[(struct _Bit_iterator *)this_6(D)] = _37;
  MEM[(struct _Bit_iterator *)this_6(D) + 8B] = 0;
  # DEBUG D#966 => &this_6(D)->D.43009._M_impl._M_start
  # DEBUG this => D#966
  # DEBUG __i => _20
  # DEBUG __tmp$_M_p => _37
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _20
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => _20
  # DEBUG __n => _20
  _40 = _20 / 64;
  _41 = (long unsigned int) _40;
  _42 = _41 * 8;
  __tmp$_M_p_43 = _37 + _42;
  # DEBUG __tmp$_M_p => __tmp$_M_p_43
  __n_44 = _20 % 64;
  # DEBUG __n => __n_44
  if (__n_44 < 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  __n_45 = __n_44 + 64;
  # DEBUG __n => __n_45
  __tmp$_M_p_46 = __tmp$_M_p_43 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_46

  <bb 5>:
  # __n_47 = PHI <__n_44(3), __n_45(4)>
  # __tmp$_M_p_49 = PHI <__tmp$_M_p_43(3), __tmp$_M_p_46(4)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_49
  # DEBUG __n => __n_47
  _48 = (unsigned int) __n_47;
  # DEBUG __tmp$_M_offset => _48
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  MEM[(struct _Bit_iterator *)this_6(D) + 16B] = __tmp$_M_p_49;
  MEM[(struct _Bit_iterator *)this_6(D) + 24B] = _48;
  # DEBUG this => __x_1(D)
  # DEBUG D#143 => &__x_1(D)->D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  __it$D27024$_M_offset_9 = MEM[(const struct _Bit_iterator *)__x_1(D) + 16B].D.26904._M_offset;
  __first$_M_p_23 = MEM[(const struct _Bit_iterator *)__x_1(D) + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => __first$_M_p_23
  # DEBUG __y => __it$D27024$_M_offset_9
  # DEBUG this => D#28
  # DEBUG this => __x_1(D)
  # DEBUG D#142 => &__x_1(D)->D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG D#981 => MEM[(const struct _Bit_iterator *)__x_1(D)].D.26904._M_offset
  _22 = MEM[(const struct _Bit_iterator *)__x_1(D)].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _22
  # DEBUG __y => D#981
  # DEBUG this => D#28
  # DEBUG D.105826 => D#981
  # DEBUG D#976 => this_6(D)
  # DEBUG D#977 => D.84578
  # DEBUG D#978 => D.84577
  # DEBUG D#978 => D.84577
  # DEBUG D#979 => this_6(D)->D.43009._M_impl._M_start
  # DEBUG this => D#976
  # DEBUG __last$D27024$_M_p => __first$_M_p_23
  # DEBUG __first => _22
  # DEBUG __last => __first$_M_p_23
  # DEBUG __result => _37
  # DEBUG __it => __first$_M_p_23
  # DEBUG __it => __first$_M_p_23
  # DEBUG __it => _22
  # DEBUG __it => _22
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _37
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _37
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _37
  __last.51_52 = (long int) __first$_M_p_23;
  __first.52_53 = (long int) _22;
  _54 = __last.51_52 - __first.52_53;
  _Num_55 = _54 /[ex] 8;
  # DEBUG _Num => _Num_55
  if (_Num_55 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_85 = (long unsigned int) _54;
  goto <bb 8>;

  <bb 7>:
  _56 = (long unsigned int) _54;
  __builtin_memmove (_37, _22, _56);

  <bb 8>:
  # prephitmp_103 = PHI <pretmp_85(6), _56(7)>
  __result$_M_p_58 = _37 + prephitmp_103;
  # DEBUG __q => __result$_M_p_58
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_58
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => __result$_M_p_58
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_23
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => __first$_M_p_23
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG D#974 => __last
  # DEBUG D#974 => __last
  # DEBUG __it$D27024$_M_p => __first$_M_p_23
  # DEBUG __it$D27024$_M_offset => __it$D27024$_M_offset_9
  # DEBUG __it$D27024$_M_p => __first$_M_p_23
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __it$D26904$_M_p => __result$_M_p_58
  # DEBUG __it$D26904$_M_offset => 0
  # DEBUG __it$D27024$_M_p => __first$_M_p_23
  # DEBUG __it$D27024$_M_offset => __it$D27024$_M_offset_9
  # DEBUG __it$D27024$_M_p => __first$_M_p_23
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => __first$_M_p_23
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_58
  # DEBUG __result$8 => 0
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  __n_75 = (_Distance) __it$D27024$_M_offset_9;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_58
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_23
  # DEBUG __n => __n_75
  if (__n_75 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  return;

  <bb 10>:

  <bb 11>:
  # __n_116 = PHI <__n_75(10), __n_97(21)>
  # __first$8_117 = PHI <0(10), __first$8_99(21)>
  # __first$_M_p_118 = PHI <__first$_M_p_23(10), __first$_M_p_98(21)>
  # __result$8_119 = PHI <0(10), __result$8_101(21)>
  # __result$_M_p_120 = PHI <__result$_M_p_58(10), __result$_M_p_100(21)>
  # DEBUG __result$8 => __result$8_119
  # DEBUG __result$_M_p => __result$_M_p_120
  # DEBUG __first$8 => __first$8_117
  # DEBUG __first$_M_p => __first$_M_p_118
  # DEBUG __n => __n_116
  # DEBUG D#29 => &__first
  # DEBUG D#29 => &__first
  # DEBUG this => D#29
  # DEBUG this => D#29
  _81 = 1 << __first$8_117;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_118
  # DEBUG __y => _81
  # DEBUG this => NULL
  _83 = *__first$_M_p_118;
  _84 = _81 & _83;
  # DEBUG D#21 => &__result
  # DEBUG D#21 => &__result
  # DEBUG this => D#21
  # DEBUG this => D#21
  _86 = 1 << __result$8_119;
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_120
  # DEBUG __y => _86
  # DEBUG this => NULL
  # DEBUG __x => _84 != 0
  if (_84 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _88 = *__result$_M_p_120;
  _89 = _86 | _88;
  goto <bb 14>;

  <bb 13>:
  _90 = *__result$_M_p_120;
  _91 = ~_86;
  _92 = _90 & _91;

  <bb 14>:
  # cstore_122 = PHI <_89(12), _92(13)>
  *__result$_M_p_120 = cstore_122;
  # DEBUG this => &__first
  # DEBUG D#30 => &__first.D.27024
  # DEBUG this => D#30
  # DEBUG __first$8 => __first$8_117 + 1
  if (__first$8_117 == 63)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  __first$8_93 = __first$8_117 + 1;
  goto <bb 17>;

  <bb 16>:
  # DEBUG __first$8 => 0
  __first$_M_p_94 = __first$_M_p_118 + 8;
  # DEBUG __first$_M_p => __first$_M_p_94

  <bb 17>:
  # __first$_M_p_98 = PHI <__first$_M_p_118(15), __first$_M_p_94(16)>
  # __first$8_99 = PHI <__first$8_93(15), 0(16)>
  # DEBUG __first$8 => __first$8_99
  # DEBUG __first$_M_p => __first$_M_p_98
  # DEBUG this => &__result
  # DEBUG D#22 => &__result.D.26904
  # DEBUG this => D#22
  # DEBUG __result$8 => __result$8_119 + 1
  if (__result$8_119 == 63)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  __result$8_95 = __result$8_119 + 1;
  goto <bb 20>;

  <bb 19>:
  # DEBUG __result$8 => 0
  __result$_M_p_96 = __result$_M_p_120 + 8;
  # DEBUG __result$_M_p => __result$_M_p_96

  <bb 20>:
  # __result$_M_p_100 = PHI <__result$_M_p_120(18), __result$_M_p_96(19)>
  # __result$8_101 = PHI <__result$8_95(18), 0(19)>
  # DEBUG __result$8 => __result$8_101
  # DEBUG __result$_M_p => __result$_M_p_100
  __n_97 = __n_116 + -1;
  # DEBUG __n => __n_97
  # DEBUG __result$8 => __result$8_101
  # DEBUG __result$_M_p => __result$_M_p_100
  # DEBUG __first$8 => __first$8_99
  # DEBUG __first$_M_p => __first$_M_p_98
  # DEBUG __n => __n_97
  if (__n_97 == 0)
    goto <bb 9>;
  else
    goto <bb 21>;

  <bb 21>:
  goto <bb 11>;

<L1>:
  _11 = &this_6(D)->D.43009;
  # DEBUG this => _11
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_11);
  # DEBUG D#571 => &_11->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  resx 3

}



;; Function EventRouter::~EventRouter() (_ZN11EventRouterD2Ev, funcdef_no=2157, decl_uid=54628, cgraph_uid=506, symbol_order=507)

Trying loop 14 as candidate
loop 14 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
EventRouter::~EventRouter() (struct EventRouter * const this)
{
  struct vector * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  int i;
  int o;
  int o;
  int i;
  long unsigned int _21;
  int pretmp_22;
  struct Buffer * _23;
  int (*__vtbl_ptr_type) () * _24;
  int (*__vtbl_ptr_type) () _25;
  long unsigned int _29;
  struct Buffer * & _30;
  struct EventNextVCState * _31;
  int (*__vtbl_ptr_type) () * _32;
  int (*__vtbl_ptr_type) () _33;
  long unsigned int _37;
  long unsigned int _38;
  struct PriorityArbiter * _39;
  int (*__vtbl_ptr_type) () * _40;
  int (*__vtbl_ptr_type) () _41;
  long unsigned int _45;
  struct PriorityArbiter * _47;
  int (*__vtbl_ptr_type) () * _48;
  int (*__vtbl_ptr_type) () _49;
  struct PipelineFIFO * _52;
  int (*__vtbl_ptr_type) () * _53;
  int (*__vtbl_ptr_type) () _54;
  struct PipelineFIFO * _56;
  int (*__vtbl_ptr_type) () * _57;
  int (*__vtbl_ptr_type) () _58;
  struct PipelineFIFO * _60;
  int (*__vtbl_ptr_type) () * _61;
  int (*__vtbl_ptr_type) () _62;
  int * _64;
  int * _65;
  struct _Bvector_base * _66;
  struct queue * _68;
  struct PriorityArbiter * * _69;
  struct vector * _71;
  struct queue * _73;
  int pretmp_74;
  struct queue * _75;
  int prephitmp_76;
  struct queue * _77;
  struct queue * _79;
  struct PriorityArbiter * * _80;
  _Bit_type * _82;
  struct EventNextVCState * * _83;
  struct Router * _84;
  struct _Bvector_base * _87;
  struct PriorityArbiter * * _88;
  struct PriorityArbiter * * _89;
  struct vector * _90;
  struct EventNextVCState * * _92;
  struct vector * _93;
  struct vector * _95;
  struct vector * _97;
  struct vector * _99;
  struct vector * _101;
  struct Buffer * * _103;
  struct vector * _104;
  struct Router * _107;
  struct Buffer * * _109;
  struct EventNextVCState * * _110;
  struct PriorityArbiter * * _111;
  struct PriorityArbiter * * _112;
  long unsigned int _113;
  struct EventNextVCState * & _114;
  long unsigned int _116;
  struct PriorityArbiter * & _117;
  long unsigned int _118;
  struct PriorityArbiter * & _119;
  struct Buffer * * _120;
  struct queue * pretmp_133;
  struct queue * prephitmp_134;
  struct queue * pretmp_138;
  struct queue * prephitmp_139;
  struct queue * pretmp_143;
  struct queue * prephitmp_144;
  struct queue * pretmp_146;
  struct queue * pretmp_150;
  struct queue * prephitmp_151;
  struct vector * prephitmp_155;
  int prephitmp_164;
  void * PROF_202;
  void * PROF_204;
  void * PROF_206;
  struct Module * _209;
  struct vector * _210;
  struct Flit * * _213;
  struct Module * _217;
  struct vector * _218;
  struct Credit * * _221;
  struct Module * _225;
  struct vector * _226;
  struct tArrivalEvent * * _229;
  struct queue * _232;
  int prephitmp_234;
  struct _Deque_base * _235;
  struct _Deque_base * _240;
  struct _Deque_base * _245;
  struct _Deque_base * _250;
  struct _Deque_base * _255;
  struct _Deque_base * _260;
  long unsigned int * const _268;
  long int _270;
  long int _271;
  long int _272;
  long unsigned int _273;
  sizetype _274;
  long unsigned int * _275;
  int prephitmp_302;
  int pretmp_303;
  int prephitmp_304;
  int pretmp_305;
  int pretmp_308;
  int prephitmp_309;
  int pretmp_310;
  int prephitmp_311;
  int prephitmp_319;
  int prephitmp_328;
  struct queue * prephitmp_355;
  struct queue * pretmp_357;
  struct queue * prephitmp_358;
  struct vector * pretmp_364;
  struct vector * prephitmp_365;
  int prephitmp_388;
  struct vector * pretmp_394;
  struct vector * prephitmp_400;
  struct vector * pretmp_401;
  struct vector * prephitmp_402;
  struct vector * pretmp_403;
  int prephitmp_409;
  int prephitmp_413;
  int _438;
  int _460;

  <bb 2>:
  this_18(D)->D.54631.D.43102.D.29663._vptr.Module = &MEM[(void *)&_ZTV11EventRouter + 16B];
  # DEBUG i => 0
  # DEBUG i => 0
  _460 = this_18(D)->D.54631._inputs;
  if (_460 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # prephitmp_388 = PHI <prephitmp_302(9), _460(2)>
  # DEBUG o => 0
  _438 = this_18(D)->D.54631._outputs;
  if (_438 <= 0)
    goto <bb 20>;
  else
    goto <bb 13>;

  <bb 4>:

  <bb 5>:
  # i_464 = PHI <0(4), i_27(10)>
  # prephitmp_409 = PHI <_460(4), prephitmp_304(10)>
  # DEBUG i => i_464
  _21 = (long unsigned int) i_464;
  # DEBUG D#1275 => &this_18(D)->_buf
  _109 = MEM[(struct Buffer * * *)this_18(D) + 288B];
  # DEBUG D#70 => D#1275
  # DEBUG __n => _21
  # DEBUG this => D#70
  _38 = _21 * 8;
  _30 = _109 + _38;
  _23 = *_30;
  if (_23 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  _24 = _23->D.45045._vptr.Module;
  _25 = MEM[(int (*__vtbl_ptr_type) () *)_24 + 8B];
  OBJ_TYPE_REF(_25;(struct Buffer)_23->1) (_23);

  <bb 7>:
  pretmp_303 = this_18(D)->D.54631._inputs;

  <bb 8>:
  # prephitmp_304 = PHI <prephitmp_409(5), pretmp_303(7)>
  i_27 = i_464 + 1;
  # DEBUG i => i_27
  # DEBUG i => i_27
  if (i_27 >= prephitmp_304)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  # prephitmp_302 = PHI <prephitmp_304(8)>
  goto <bb 3>;

  <bb 10>:
  goto <bb 5>;

  <bb 11>:
  # prephitmp_319 = PHI <prephitmp_76(18)>
  # DEBUG o => 0
  if (prephitmp_319 <= 0)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  pretmp_308 = this_18(D)->D.54631._inputs;
  goto <bb 20>;

  <bb 13>:

  <bb 14>:
  # o_462 = PHI <0(13), o_35(19)>
  # prephitmp_164 = PHI <_438(13), prephitmp_76(19)>
  # DEBUG o => o_462
  _29 = (long unsigned int) o_462;
  # DEBUG D#1276 => &this_18(D)->_output_state
  _110 = MEM[(struct EventNextVCState * * *)this_18(D) + 344B];
  # DEBUG D#72 => D#1276
  # DEBUG __n => _29
  # DEBUG this => D#72
  _113 = _29 * 8;
  _114 = _110 + _113;
  _31 = *_114;
  if (_31 != 0B)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  _32 = _31->D.48512._vptr.Module;
  _33 = MEM[(int (*__vtbl_ptr_type) () *)_32 + 8B];
  OBJ_TYPE_REF(_33;(struct EventNextVCState)_31->1) (_31);
  goto <bb 17>;

<L53>:
  goto <bb 144> (<L37>);

  <bb 17>:
  pretmp_74 = this_18(D)->D.54631._outputs;

  <bb 18>:
  # prephitmp_76 = PHI <prephitmp_164(14), pretmp_74(17)>
  o_35 = o_462 + 1;
  # DEBUG o => o_35
  # DEBUG o => o_35
  if (o_35 >= prephitmp_76)
    goto <bb 11>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 14>;

  <bb 20>:
  # prephitmp_309 = PHI <pretmp_305(29), pretmp_308(12), prephitmp_388(3)>
  # DEBUG i => 0
  if (prephitmp_309 <= 0)
    goto <bb 21>;
  else
    goto <bb 30>;

  <bb 21>:
  _52 = this_18(D)->_crossbar_pipe;
  if (_52 != 0B)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 22>:

  <bb 23>:
  # o_463 = PHI <0(22), o_43(28)>
  # prephitmp_328 = PHI <prephitmp_319(22), prephitmp_234(28)>
  # DEBUG o => o_463
  _37 = (long unsigned int) o_463;
  # DEBUG D#1277 => &this_18(D)->_arrival_arbiter
  _111 = MEM[(struct PriorityArbiter * * *)this_18(D) + 512B];
  # DEBUG D#73 => D#1277
  # DEBUG __n => _37
  # DEBUG this => D#73
  _116 = _37 * 8;
  _117 = _111 + _116;
  _39 = *_117;
  if (_39 != 0B)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  _40 = _39->D.46830._vptr.Module;
  _41 = MEM[(int (*__vtbl_ptr_type) () *)_40 + 8B];
  OBJ_TYPE_REF(_41;(struct PriorityArbiter)_39->1) (_39);
  goto <bb 26>;

<L54>:
  goto <bb 144> (<L37>);

  <bb 26>:
  pretmp_22 = this_18(D)->D.54631._outputs;

  <bb 27>:
  # prephitmp_234 = PHI <prephitmp_328(23), pretmp_22(26)>
  o_43 = o_463 + 1;
  # DEBUG o => o_43
  # DEBUG o => o_43
  if (o_43 >= prephitmp_234)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 23>;

  <bb 29>:
  pretmp_305 = this_18(D)->D.54631._inputs;
  goto <bb 20>;

  <bb 30>:

  <bb 31>:
  # i_467 = PHI <0(30), i_51(36)>
  # prephitmp_413 = PHI <prephitmp_309(30), prephitmp_311(36)>
  # DEBUG i => i_467
  _45 = (long unsigned int) i_467;
  # DEBUG D#1278 => &this_18(D)->_transport_arbiter
  _112 = MEM[(struct PriorityArbiter * * *)this_18(D) + 560B];
  # DEBUG D#73 => D#1278
  # DEBUG __n => _45
  # DEBUG this => D#73
  _118 = _45 * 8;
  _119 = _112 + _118;
  _47 = *_119;
  if (_47 != 0B)
    goto <bb 32>;
  else
    goto <bb 35>;

  <bb 32>:
  _48 = _47->D.46830._vptr.Module;
  _49 = MEM[(int (*__vtbl_ptr_type) () *)_48 + 8B];
  OBJ_TYPE_REF(_49;(struct PriorityArbiter)_47->1) (_47);
  goto <bb 34>;

<L55>:
  goto <bb 144> (<L37>);

  <bb 34>:
  pretmp_310 = this_18(D)->D.54631._inputs;

  <bb 35>:
  # prephitmp_311 = PHI <prephitmp_413(31), pretmp_310(34)>
  i_51 = i_467 + 1;
  # DEBUG i => i_51
  # DEBUG i => i_51
  if (i_51 >= prephitmp_311)
    goto <bb 21>;
  else
    goto <bb 36>;

  <bb 36>:
  goto <bb 31>;

  <bb 37>:
  goto <bb 51>;

  <bb 38>:
  _53 = _52->D.56917._vptr.Module;
  _54 = MEM[(int (*__vtbl_ptr_type) () *)_53 + 8B];
  PROF_202 = [obj_type_ref] OBJ_TYPE_REF(_54;(struct PipelineFIFO)_52->1);
  if (PROF_202 == __deleting_dtor )
    goto <bb 39>;
  else
    goto <bb 49>;

  <bb 39>:
  # DEBUG this => _52
  # DEBUG this => _52
  _52->D.56917._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI4FlitE + 16B];
  # DEBUG D#2965 => &_52->_data
  # DEBUG this => D#2965
  # DEBUG D#1035 => &D#2965->D.56873
  # DEBUG this => D#1035
  _210 = MEM[(struct vector *)_52 + 112B].D.56873._M_impl._M_finish;
  __first_211 = MEM[(struct vector *)_52 + 112B].D.56873._M_impl._M_start;
  # DEBUG __first => __first_211
  # DEBUG __last => _210
  # DEBUG __first => __first_211
  if (_210 == __first_211)
    goto <bb 46>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # __first_473 = PHI <__first_211(40), __first_214(44)>
  # DEBUG __first => __first_473
  # DEBUG __r => __first_473
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _213 = MEM[(struct _Vector_base *)__first_473]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _213
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _213
  # DEBUG __n => D#1021
  if (_213 != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _213
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _213
  # DEBUG this => D#1013
  # DEBUG D.136129 => D#1014
  operator delete (_213);

  <bb 43>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__first_473] ={v} {CLOBBER};
  __first_214 = __first_473 + 24;
  # DEBUG __first => __first_214
  # DEBUG __first => __first_214
  if (_210 == __first_214)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 41>;

  <bb 45>:
  pretmp_403 = MEM[(struct _Vector_base *)_52 + 112B]._M_impl._M_start;

  <bb 46>:
  # prephitmp_155 = PHI <pretmp_403(45), __first_211(39)>
  # DEBUG D#1036 => &D#2965->D.56873
  # DEBUG this => D#1036
  # DEBUG D#1012 => D#1036->_M_impl._M_end_of_storage
  # DEBUG D#1011 => (long int) D#1012
  # DEBUG D#2975 => MEM[(struct _Vector_base *)_52 + 112B]._M_impl._M_start
  # DEBUG D#1010 => (long int) D#2975
  # DEBUG D#1009 => D#1011 - D#1010
  # DEBUG D#1008 => D#1009 /[ex] 24
  # DEBUG D#1005 => D#1036
  # DEBUG D#1006 => (long unsigned int) D#1008
  # DEBUG __p => D#2975
  # DEBUG this => D#1005
  # DEBUG __n => D#1006
  # DEBUG D#1004 => D#1006
  # DEBUG D#1003 => D#1005
  if (prephitmp_155 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#1002 => &D#1003->_M_impl
  # DEBUG D#1000 => D#1002
  # DEBUG D#1001 => D#1004
  # DEBUG __p => D#2975
  # DEBUG __a => D#1000
  # DEBUG __n => D#1001
  # DEBUG D#999 => D#1001
  # DEBUG D#998 => D#1000
  # DEBUG D#996 => D#998
  # DEBUG D#997 => D#999
  # DEBUG __p => D#2975
  # DEBUG this => D#996
  # DEBUG D.136143 => D#997
  operator delete (prephitmp_155);

  <bb 48>:
  # DEBUG D#1007 => &D#1036->_M_impl
  # DEBUG this => D#1007
  # DEBUG this => D#1007
  # DEBUG this => D#1007
  MEM[(struct  &)_52 + 112] ={v} {CLOBBER};
  _209 = &_52->D.56917;
  Module::~Module (_209);
  MEM[(struct  &)_52] ={v} {CLOBBER};
  operator delete (_52);
  goto <bb 51>;

  <bb 49>:
  OBJ_TYPE_REF(_54;(struct PipelineFIFO)_52->1) (_52);
  goto <bb 37>;

<L56>:
  goto <bb 144> (<L37>);

  <bb 51>:
  _56 = this_18(D)->_credit_pipe;
  if (_56 != 0B)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 66>;

  <bb 53>:
  _57 = _56->D.57735._vptr.Module;
  _58 = MEM[(int (*__vtbl_ptr_type) () *)_57 + 8B];
  PROF_204 = [obj_type_ref] OBJ_TYPE_REF(_58;(struct PipelineFIFO)_56->1);
  if (PROF_204 == __deleting_dtor )
    goto <bb 54>;
  else
    goto <bb 64>;

  <bb 54>:
  # DEBUG this => _56
  # DEBUG this => _56
  _56->D.57735._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI6CreditE + 16B];
  # DEBUG D#2964 => &_56->_data
  # DEBUG this => D#2964
  # DEBUG D#1101 => &D#2964->D.57691
  # DEBUG this => D#1101
  _218 = MEM[(struct vector *)_56 + 112B].D.57691._M_impl._M_finish;
  __first_219 = MEM[(struct vector *)_56 + 112B].D.57691._M_impl._M_start;
  # DEBUG __first => __first_219
  # DEBUG __last => _218
  # DEBUG __first => __first_219
  if (_218 == __first_219)
    goto <bb 61>;
  else
    goto <bb 55>;

  <bb 55>:

  <bb 56>:
  # __first_471 = PHI <__first_219(55), __first_222(59)>
  # DEBUG __first => __first_471
  # DEBUG __r => __first_471
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _221 = MEM[(struct _Vector_base *)__first_471]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _221
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _221
  # DEBUG __n => D#1087
  if (_221 != 0B)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _221
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _221
  # DEBUG this => D#1079
  # DEBUG D.136170 => D#1080
  operator delete (_221);

  <bb 58>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__first_471] ={v} {CLOBBER};
  __first_222 = __first_471 + 24;
  # DEBUG __first => __first_222
  # DEBUG __first => __first_222
  if (_218 == __first_222)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 56>;

  <bb 60>:
  pretmp_401 = MEM[(struct _Vector_base *)_56 + 112B]._M_impl._M_start;

  <bb 61>:
  # prephitmp_402 = PHI <pretmp_401(60), __first_219(54)>
  # DEBUG D#1102 => &D#2964->D.57691
  # DEBUG this => D#1102
  # DEBUG D#1078 => D#1102->_M_impl._M_end_of_storage
  # DEBUG D#1077 => (long int) D#1078
  # DEBUG D#2974 => MEM[(struct _Vector_base *)_56 + 112B]._M_impl._M_start
  # DEBUG D#1076 => (long int) D#2974
  # DEBUG D#1075 => D#1077 - D#1076
  # DEBUG D#1074 => D#1075 /[ex] 24
  # DEBUG D#1071 => D#1102
  # DEBUG D#1072 => (long unsigned int) D#1074
  # DEBUG __p => D#2974
  # DEBUG this => D#1071
  # DEBUG __n => D#1072
  # DEBUG D#1070 => D#1072
  # DEBUG D#1069 => D#1071
  if (prephitmp_402 != 0B)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  # DEBUG D#1068 => &D#1069->_M_impl
  # DEBUG D#1066 => D#1068
  # DEBUG D#1067 => D#1070
  # DEBUG __p => D#2974
  # DEBUG __a => D#1066
  # DEBUG __n => D#1067
  # DEBUG D#1065 => D#1067
  # DEBUG D#1064 => D#1066
  # DEBUG D#1062 => D#1064
  # DEBUG D#1063 => D#1065
  # DEBUG __p => D#2974
  # DEBUG this => D#1062
  # DEBUG D.136184 => D#1063
  operator delete (prephitmp_402);

  <bb 63>:
  # DEBUG D#1073 => &D#1102->_M_impl
  # DEBUG this => D#1073
  # DEBUG this => D#1073
  # DEBUG this => D#1073
  MEM[(struct  &)_56 + 112] ={v} {CLOBBER};
  _217 = &_56->D.57735;
  Module::~Module (_217);
  MEM[(struct  &)_56] ={v} {CLOBBER};
  operator delete (_56);
  goto <bb 66>;

  <bb 64>:
  OBJ_TYPE_REF(_58;(struct PipelineFIFO)_56->1) (_56);
  goto <bb 52>;

<L57>:
  goto <bb 144> (<L37>);

  <bb 66>:
  _60 = this_18(D)->_arrival_pipe;
  if (_60 != 0B)
    goto <bb 68>;
  else
    goto <bb 67>;

  <bb 67>:
  goto <bb 81>;

  <bb 68>:
  _61 = _60->D.58553._vptr.Module;
  _62 = MEM[(int (*__vtbl_ptr_type) () *)_61 + 8B];
  PROF_206 = [obj_type_ref] OBJ_TYPE_REF(_62;(struct PipelineFIFO)_60->1);
  if (PROF_206 == __deleting_dtor )
    goto <bb 69>;
  else
    goto <bb 79>;

  <bb 69>:
  # DEBUG this => _60
  # DEBUG this => _60
  _60->D.58553._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOIN11EventRouter13tArrivalEventEE + 16B];
  # DEBUG D#2963 => &_60->_data
  # DEBUG this => D#2963
  # DEBUG D#1156 => &D#2963->D.58509
  # DEBUG this => D#1156
  _226 = MEM[(struct vector *)_60 + 112B].D.58509._M_impl._M_finish;
  __first_227 = MEM[(struct vector *)_60 + 112B].D.58509._M_impl._M_start;
  # DEBUG __first => __first_227
  # DEBUG __last => _226
  # DEBUG __first => __first_227
  if (_226 == __first_227)
    goto <bb 76>;
  else
    goto <bb 70>;

  <bb 70>:

  <bb 71>:
  # __first_472 = PHI <__first_227(70), __first_230(74)>
  # DEBUG __first => __first_472
  # DEBUG __r => __first_472
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _229 = MEM[(struct _Vector_base *)__first_472]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _229
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _229
  # DEBUG __n => D#1142
  if (_229 != 0B)
    goto <bb 72>;
  else
    goto <bb 73>;

  <bb 72>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _229
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _229
  # DEBUG this => D#1134
  # DEBUG D.136211 => D#1135
  operator delete (_229);

  <bb 73>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__first_472] ={v} {CLOBBER};
  __first_230 = __first_472 + 24;
  # DEBUG __first => __first_230
  # DEBUG __first => __first_230
  if (_226 == __first_230)
    goto <bb 75>;
  else
    goto <bb 74>;

  <bb 74>:
  goto <bb 71>;

  <bb 75>:
  pretmp_394 = MEM[(struct _Vector_base *)_60 + 112B]._M_impl._M_start;

  <bb 76>:
  # prephitmp_400 = PHI <pretmp_394(75), __first_227(69)>
  # DEBUG D#1157 => &D#2963->D.58509
  # DEBUG this => D#1157
  # DEBUG D#1133 => D#1157->_M_impl._M_end_of_storage
  # DEBUG D#1132 => (long int) D#1133
  # DEBUG D#2973 => MEM[(struct _Vector_base *)_60 + 112B]._M_impl._M_start
  # DEBUG D#1131 => (long int) D#2973
  # DEBUG D#1130 => D#1132 - D#1131
  # DEBUG D#1129 => D#1130 /[ex] 24
  # DEBUG D#1126 => D#1157
  # DEBUG D#1127 => (long unsigned int) D#1129
  # DEBUG __p => D#2973
  # DEBUG this => D#1126
  # DEBUG __n => D#1127
  # DEBUG D#1125 => D#1127
  # DEBUG D#1124 => D#1126
  if (prephitmp_400 != 0B)
    goto <bb 77>;
  else
    goto <bb 78>;

  <bb 77>:
  # DEBUG D#1123 => &D#1124->_M_impl
  # DEBUG D#1121 => D#1123
  # DEBUG D#1122 => D#1125
  # DEBUG __p => D#2973
  # DEBUG __a => D#1121
  # DEBUG __n => D#1122
  # DEBUG D#1120 => D#1122
  # DEBUG D#1119 => D#1121
  # DEBUG D#1117 => D#1119
  # DEBUG D#1118 => D#1120
  # DEBUG __p => D#2973
  # DEBUG this => D#1117
  # DEBUG D.136225 => D#1118
  operator delete (prephitmp_400);

  <bb 78>:
  # DEBUG D#1128 => &D#1157->_M_impl
  # DEBUG this => D#1128
  # DEBUG this => D#1128
  # DEBUG this => D#1128
  MEM[(struct  &)_60 + 112] ={v} {CLOBBER};
  _225 = &_60->D.58553;
  Module::~Module (_225);
  MEM[(struct  &)_60] ={v} {CLOBBER};
  operator delete (_60);
  goto <bb 81>;

  <bb 79>:
  OBJ_TYPE_REF(_62;(struct PipelineFIFO)_60->1) (_60);
  goto <bb 67>;

<L58>:
  goto <bb 144> (<L37>);

  <bb 81>:
  # DEBUG D#1286 => &this_18(D)->_transport_match
  # DEBUG this => D#1286
  # DEBUG D#515 => &D#1286->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#1286->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#1286->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#1286->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _65 = MEM[(struct _Vector_base *)this_18(D) + 624B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _65
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _65
  # DEBUG __n => D#509
  if (_65 != 0B)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _65
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _65
  # DEBUG this => D#501
  # DEBUG D.108670 => D#502
  operator delete (_65);

  <bb 83>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_18(D) + 624] ={v} {CLOBBER};
  # DEBUG D#1285 => &this_18(D)->_transport_free
  # DEBUG this => D#1285
  _66 = &MEM[(struct vector *)this_18(D) + 584B].D.43009;
  # DEBUG this => _66
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_66);
  # DEBUG D#571 => &_66->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)this_18(D) + 584] ={v} {CLOBBER};
  # DEBUG D#1284 => &this_18(D)->_transport_arbiter
  # DEBUG this => D#1284
  # DEBUG D#716 => &D#1284->D.53778
  # DEBUG this => D#716
  # DEBUG D#719 => D#1284->D.53778._M_impl._M_finish
  # DEBUG D#718 => D#1284->D.53778._M_impl._M_start
  # DEBUG __first => D#718
  # DEBUG __last => D#719
  # DEBUG D.103104 => NULL
  # DEBUG D#349 => D#718
  # DEBUG D#350 => D#719
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  # DEBUG D#717 => &D#1284->D.53778
  # DEBUG this => D#717
  # DEBUG D#715 => D#717->_M_impl._M_end_of_storage
  # DEBUG D#714 => (long int) D#715
  _69 = MEM[(struct _Vector_base *)this_18(D) + 560B]._M_impl._M_start;
  # DEBUG D#713 => (long int) _69
  # DEBUG D#712 => D#714 - D#713
  # DEBUG D#711 => D#712 /[ex] 8
  # DEBUG D#710 => (long unsigned int) D#711
  # DEBUG this => D#717
  # DEBUG __p => _69
  # DEBUG __n => D#710
  if (_69 != 0B)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  # DEBUG D#708 => &D#717->_M_impl
  # DEBUG D#706 => D#708
  # DEBUG D#707 => D#710
  # DEBUG __p => _69
  # DEBUG __a => D#706
  # DEBUG __n => D#707
  # DEBUG D#705 => D#707
  # DEBUG D#704 => D#706
  # DEBUG D#702 => D#704
  # DEBUG D#703 => D#705
  # DEBUG __p => _69
  # DEBUG this => D#702
  # DEBUG D.108650 => D#703
  operator delete (_69);

  <bb 85>:
  # DEBUG D#709 => &D#717->_M_impl
  # DEBUG this => D#709
  # DEBUG this => D#709
  # DEBUG this => D#709
  MEM[(struct  &)this_18(D) + 560] ={v} {CLOBBER};
  # DEBUG D#2962 => &this_18(D)->_transport_queue
  # DEBUG this => D#2962
  # DEBUG D#1273 => &D#2962->D.54535
  # DEBUG this => D#1273
  _232 = MEM[(struct vector *)this_18(D) + 536B].D.54535._M_impl._M_finish;
  __first_233 = MEM[(struct vector *)this_18(D) + 536B].D.54535._M_impl._M_start;
  # DEBUG __first => __first_233
  # DEBUG __last => _232
  # DEBUG __first => __first_233
  if (_232 == __first_233)
    goto <bb 90>;
  else
    goto <bb 86>;

  <bb 86>:

  <bb 87>:
  # __first_436 = PHI <__first_233(86), __first_236(88)>
  # DEBUG __first => __first_436
  # DEBUG __r => __first_436
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  _235 = &MEM[(struct deque *)__first_436].D.61649;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (_235);
  MEM[(struct  &)__first_436] ={v} {CLOBBER};
  __first_236 = __first_436 + 80;
  # DEBUG __first => __first_236
  # DEBUG __first => __first_236
  if (_232 == __first_236)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 87>;

  <bb 89>:
  pretmp_133 = MEM[(struct _Vector_base *)this_18(D) + 536B]._M_impl._M_start;

  <bb 90>:
  # prephitmp_134 = PHI <pretmp_133(89), __first_233(85)>
  # DEBUG D#1274 => &D#2962->D.54535
  # DEBUG this => D#1274
  # DEBUG D#738 => D#1274->_M_impl._M_end_of_storage
  # DEBUG D#737 => (long int) D#738
  # DEBUG D#2972 => MEM[(struct _Vector_base *)this_18(D) + 536B]._M_impl._M_start
  # DEBUG D#736 => (long int) D#2972
  # DEBUG D#735 => D#737 - D#736
  # DEBUG D#734 => D#735 /[ex] 80
  # DEBUG D#731 => D#1274
  # DEBUG D#732 => (long unsigned int) D#734
  # DEBUG __p => D#2972
  # DEBUG this => D#731
  # DEBUG __n => D#732
  # DEBUG D#730 => D#732
  # DEBUG D#729 => D#731
  if (prephitmp_134 != 0B)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  # DEBUG D#728 => &D#729->_M_impl
  # DEBUG D#726 => D#728
  # DEBUG D#727 => D#730
  # DEBUG __p => D#2972
  # DEBUG __a => D#726
  # DEBUG __n => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#726
  # DEBUG D#722 => D#724
  # DEBUG D#723 => D#725
  # DEBUG __p => D#2972
  # DEBUG this => D#722
  # DEBUG D.136251 => D#723
  operator delete (prephitmp_134);

  <bb 92>:
  # DEBUG D#733 => &D#1274->_M_impl
  # DEBUG this => D#733
  # DEBUG this => D#733
  # DEBUG this => D#733
  MEM[(struct  &)this_18(D) + 536] ={v} {CLOBBER};
  # DEBUG D#1283 => &this_18(D)->_arrival_arbiter
  # DEBUG this => D#1283
  # DEBUG D#716 => &D#1283->D.53778
  # DEBUG this => D#716
  # DEBUG D#719 => D#1283->D.53778._M_impl._M_finish
  # DEBUG D#718 => D#1283->D.53778._M_impl._M_start
  # DEBUG __first => D#718
  # DEBUG __last => D#719
  # DEBUG D.103104 => NULL
  # DEBUG D#349 => D#718
  # DEBUG D#350 => D#719
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  # DEBUG D#717 => &D#1283->D.53778
  # DEBUG this => D#717
  # DEBUG D#715 => D#717->_M_impl._M_end_of_storage
  # DEBUG D#714 => (long int) D#715
  _80 = MEM[(struct _Vector_base *)this_18(D) + 512B]._M_impl._M_start;
  # DEBUG D#713 => (long int) _80
  # DEBUG D#712 => D#714 - D#713
  # DEBUG D#711 => D#712 /[ex] 8
  # DEBUG D#710 => (long unsigned int) D#711
  # DEBUG this => D#717
  # DEBUG __p => _80
  # DEBUG __n => D#710
  if (_80 != 0B)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  # DEBUG D#708 => &D#717->_M_impl
  # DEBUG D#706 => D#708
  # DEBUG D#707 => D#710
  # DEBUG __p => _80
  # DEBUG __a => D#706
  # DEBUG __n => D#707
  # DEBUG D#705 => D#707
  # DEBUG D#704 => D#706
  # DEBUG D#702 => D#704
  # DEBUG D#703 => D#705
  # DEBUG __p => _80
  # DEBUG this => D#702
  # DEBUG D.108635 => D#703
  operator delete (_80);

  <bb 94>:
  # DEBUG D#709 => &D#717->_M_impl
  # DEBUG this => D#709
  # DEBUG this => D#709
  # DEBUG this => D#709
  MEM[(struct  &)this_18(D) + 512] ={v} {CLOBBER};
  # DEBUG D#2961 => &this_18(D)->_arrival_queue
  # DEBUG this => D#2961
  # DEBUG D#1236 => &D#2961->D.53031
  # DEBUG this => D#1236
  _73 = MEM[(struct vector *)this_18(D) + 488B].D.53031._M_impl._M_finish;
  __first_258 = MEM[(struct vector *)this_18(D) + 488B].D.53031._M_impl._M_start;
  # DEBUG __first => __first_258
  # DEBUG __last => _73
  # DEBUG __first => __first_258
  if (_73 == __first_258)
    goto <bb 99>;
  else
    goto <bb 95>;

  <bb 95>:

  <bb 96>:
  # __first_434 = PHI <__first_258(95), __first_261(97)>
  # DEBUG __first => __first_434
  # DEBUG __r => __first_434
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  _260 = &MEM[(struct deque *)__first_434].D.60628;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (_260);
  MEM[(struct  &)__first_434] ={v} {CLOBBER};
  __first_261 = __first_434 + 80;
  # DEBUG __first => __first_261
  # DEBUG __first => __first_261
  if (_73 == __first_261)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 96>;

  <bb 98>:
  pretmp_138 = MEM[(struct _Vector_base *)this_18(D) + 488B]._M_impl._M_start;

  <bb 99>:
  # prephitmp_139 = PHI <pretmp_138(98), __first_258(94)>
  # DEBUG D#1237 => &D#2961->D.53031
  # DEBUG this => D#1237
  # DEBUG D#699 => D#1237->_M_impl._M_end_of_storage
  # DEBUG D#698 => (long int) D#699
  # DEBUG D#2971 => MEM[(struct _Vector_base *)this_18(D) + 488B]._M_impl._M_start
  # DEBUG D#697 => (long int) D#2971
  # DEBUG D#696 => D#698 - D#697
  # DEBUG D#695 => D#696 /[ex] 80
  # DEBUG D#692 => D#1237
  # DEBUG D#693 => (long unsigned int) D#695
  # DEBUG __p => D#2971
  # DEBUG this => D#692
  # DEBUG __n => D#693
  # DEBUG D#691 => D#693
  # DEBUG D#690 => D#692
  if (prephitmp_139 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

  <bb 100>:
  # DEBUG D#689 => &D#690->_M_impl
  # DEBUG D#687 => D#689
  # DEBUG D#688 => D#691
  # DEBUG __p => D#2971
  # DEBUG __a => D#687
  # DEBUG __n => D#688
  # DEBUG D#686 => D#688
  # DEBUG D#685 => D#687
  # DEBUG D#683 => D#685
  # DEBUG D#684 => D#686
  # DEBUG __p => D#2971
  # DEBUG this => D#683
  # DEBUG D.136381 => D#684
  operator delete (prephitmp_139);

  <bb 101>:
  # DEBUG D#694 => &D#1237->_M_impl
  # DEBUG this => D#694
  # DEBUG this => D#694
  # DEBUG this => D#694
  MEM[(struct  &)this_18(D) + 488] ={v} {CLOBBER};
  # DEBUG D#2960 => &this_18(D)->_out_cred_buffer
  # DEBUG this => D#2960
  # DEBUG D#1212 => &D#2960->D.52268
  # DEBUG this => D#1212
  _75 = MEM[(struct vector *)this_18(D) + 456B].D.52268._M_impl._M_finish;
  __first_253 = MEM[(struct vector *)this_18(D) + 456B].D.52268._M_impl._M_start;
  # DEBUG __first => __first_253
  # DEBUG __last => _75
  # DEBUG __first => __first_253
  if (_75 == __first_253)
    goto <bb 106>;
  else
    goto <bb 102>;

  <bb 102>:

  <bb 103>:
  # __first_435 = PHI <__first_253(102), __first_256(104)>
  # DEBUG __first => __first_435
  # DEBUG __r => __first_435
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _255 = &MEM[(struct deque *)__first_435].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_255);
  MEM[(struct  &)__first_435] ={v} {CLOBBER};
  __first_256 = __first_435 + 80;
  # DEBUG __first => __first_256
  # DEBUG __first => __first_256
  if (_75 == __first_256)
    goto <bb 105>;
  else
    goto <bb 104>;

  <bb 104>:
  goto <bb 103>;

  <bb 105>:
  pretmp_143 = MEM[(struct _Vector_base *)this_18(D) + 456B]._M_impl._M_start;

  <bb 106>:
  # prephitmp_144 = PHI <pretmp_143(105), __first_253(101)>
  # DEBUG D#1213 => &D#2960->D.52268
  # DEBUG this => D#1213
  # DEBUG D#680 => D#1213->_M_impl._M_end_of_storage
  # DEBUG D#679 => (long int) D#680
  # DEBUG D#2970 => MEM[(struct _Vector_base *)this_18(D) + 456B]._M_impl._M_start
  # DEBUG D#678 => (long int) D#2970
  # DEBUG D#677 => D#679 - D#678
  # DEBUG D#676 => D#677 /[ex] 80
  # DEBUG D#673 => D#1213
  # DEBUG D#674 => (long unsigned int) D#676
  # DEBUG __p => D#2970
  # DEBUG this => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  if (prephitmp_144 != 0B)
    goto <bb 107>;
  else
    goto <bb 108>;

  <bb 107>:
  # DEBUG D#670 => &D#671->_M_impl
  # DEBUG D#668 => D#670
  # DEBUG D#669 => D#672
  # DEBUG __p => D#2970
  # DEBUG __a => D#668
  # DEBUG __n => D#669
  # DEBUG D#667 => D#669
  # DEBUG D#666 => D#668
  # DEBUG D#664 => D#666
  # DEBUG D#665 => D#667
  # DEBUG __p => D#2970
  # DEBUG this => D#664
  # DEBUG D.136355 => D#665
  operator delete (prephitmp_144);

  <bb 108>:
  # DEBUG D#675 => &D#1213->_M_impl
  # DEBUG this => D#675
  # DEBUG this => D#675
  # DEBUG this => D#675
  MEM[(struct  &)this_18(D) + 456] ={v} {CLOBBER};
  # DEBUG D#2959 => &this_18(D)->_in_cred_buffer
  # DEBUG this => D#2959
  # DEBUG D#1212 => &D#2959->D.52268
  # DEBUG this => D#1212
  _77 = MEM[(struct vector *)this_18(D) + 432B].D.52268._M_impl._M_finish;
  __first_248 = MEM[(struct vector *)this_18(D) + 432B].D.52268._M_impl._M_start;
  # DEBUG __first => __first_248
  # DEBUG __last => _77
  # DEBUG __first => __first_248
  if (_77 == __first_248)
    goto <bb 113>;
  else
    goto <bb 109>;

  <bb 109>:

  <bb 110>:
  # __first_457 = PHI <__first_248(109), __first_251(111)>
  # DEBUG __first => __first_457
  # DEBUG __r => __first_457
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _250 = &MEM[(struct deque *)__first_457].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_250);
  MEM[(struct  &)__first_457] ={v} {CLOBBER};
  __first_251 = __first_457 + 80;
  # DEBUG __first => __first_251
  # DEBUG __first => __first_251
  if (_77 == __first_251)
    goto <bb 112>;
  else
    goto <bb 111>;

  <bb 111>:
  goto <bb 110>;

  <bb 112>:
  pretmp_146 = MEM[(struct _Vector_base *)this_18(D) + 432B]._M_impl._M_start;

  <bb 113>:
  # prephitmp_355 = PHI <pretmp_146(112), __first_248(108)>
  # DEBUG D#1213 => &D#2959->D.52268
  # DEBUG this => D#1213
  # DEBUG D#680 => D#1213->_M_impl._M_end_of_storage
  # DEBUG D#679 => (long int) D#680
  # DEBUG D#2969 => MEM[(struct _Vector_base *)this_18(D) + 432B]._M_impl._M_start
  # DEBUG D#678 => (long int) D#2969
  # DEBUG D#677 => D#679 - D#678
  # DEBUG D#676 => D#677 /[ex] 80
  # DEBUG D#673 => D#1213
  # DEBUG D#674 => (long unsigned int) D#676
  # DEBUG __p => D#2969
  # DEBUG this => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  if (prephitmp_355 != 0B)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  # DEBUG D#670 => &D#671->_M_impl
  # DEBUG D#668 => D#670
  # DEBUG D#669 => D#672
  # DEBUG __p => D#2969
  # DEBUG __a => D#668
  # DEBUG __n => D#669
  # DEBUG D#667 => D#669
  # DEBUG D#666 => D#668
  # DEBUG D#664 => D#666
  # DEBUG D#665 => D#667
  # DEBUG __p => D#2969
  # DEBUG this => D#664
  # DEBUG D.136329 => D#665
  operator delete (prephitmp_355);

  <bb 115>:
  # DEBUG D#675 => &D#1213->_M_impl
  # DEBUG this => D#675
  # DEBUG this => D#675
  # DEBUG this => D#675
  MEM[(struct  &)this_18(D) + 432] ={v} {CLOBBER};
  # DEBUG D#2958 => &this_18(D)->_output_buffer
  # DEBUG this => D#2958
  # DEBUG D#1188 => &D#2958->D.51519
  # DEBUG this => D#1188
  _79 = MEM[(struct vector *)this_18(D) + 408B].D.51519._M_impl._M_finish;
  __first_243 = MEM[(struct vector *)this_18(D) + 408B].D.51519._M_impl._M_start;
  # DEBUG __first => __first_243
  # DEBUG __last => _79
  # DEBUG __first => __first_243
  if (_79 == __first_243)
    goto <bb 120>;
  else
    goto <bb 116>;

  <bb 116>:

  <bb 117>:
  # __first_456 = PHI <__first_243(116), __first_246(118)>
  # DEBUG __first => __first_456
  # DEBUG __r => __first_456
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _245 = &MEM[(struct deque *)__first_456].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_245);
  MEM[(struct  &)__first_456] ={v} {CLOBBER};
  __first_246 = __first_456 + 80;
  # DEBUG __first => __first_246
  # DEBUG __first => __first_246
  if (_79 == __first_246)
    goto <bb 119>;
  else
    goto <bb 118>;

  <bb 118>:
  goto <bb 117>;

  <bb 119>:
  pretmp_357 = MEM[(struct _Vector_base *)this_18(D) + 408B]._M_impl._M_start;

  <bb 120>:
  # prephitmp_358 = PHI <pretmp_357(119), __first_243(115)>
  # DEBUG D#1189 => &D#2958->D.51519
  # DEBUG this => D#1189
  # DEBUG D#661 => D#1189->_M_impl._M_end_of_storage
  # DEBUG D#660 => (long int) D#661
  # DEBUG D#2968 => MEM[(struct _Vector_base *)this_18(D) + 408B]._M_impl._M_start
  # DEBUG D#659 => (long int) D#2968
  # DEBUG D#658 => D#660 - D#659
  # DEBUG D#657 => D#658 /[ex] 80
  # DEBUG D#654 => D#1189
  # DEBUG D#655 => (long unsigned int) D#657
  # DEBUG __p => D#2968
  # DEBUG this => D#654
  # DEBUG __n => D#655
  # DEBUG D#653 => D#655
  # DEBUG D#652 => D#654
  if (prephitmp_358 != 0B)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  # DEBUG D#651 => &D#652->_M_impl
  # DEBUG D#649 => D#651
  # DEBUG D#650 => D#653
  # DEBUG __p => D#2968
  # DEBUG __a => D#649
  # DEBUG __n => D#650
  # DEBUG D#648 => D#650
  # DEBUG D#647 => D#649
  # DEBUG D#645 => D#647
  # DEBUG D#646 => D#648
  # DEBUG __p => D#2968
  # DEBUG this => D#645
  # DEBUG D.136303 => D#646
  operator delete (prephitmp_358);

  <bb 122>:
  # DEBUG D#656 => &D#1189->_M_impl
  # DEBUG this => D#656
  # DEBUG this => D#656
  # DEBUG this => D#656
  MEM[(struct  &)this_18(D) + 408] ={v} {CLOBBER};
  # DEBUG D#2957 => &this_18(D)->_input_buffer
  # DEBUG this => D#2957
  # DEBUG D#1188 => &D#2957->D.51519
  # DEBUG this => D#1188
  _68 = MEM[(struct vector *)this_18(D) + 384B].D.51519._M_impl._M_finish;
  __first_238 = MEM[(struct vector *)this_18(D) + 384B].D.51519._M_impl._M_start;
  # DEBUG __first => __first_238
  # DEBUG __last => _68
  # DEBUG __first => __first_238
  if (_68 == __first_238)
    goto <bb 127>;
  else
    goto <bb 123>;

  <bb 123>:

  <bb 124>:
  # __first_458 = PHI <__first_238(123), __first_241(125)>
  # DEBUG __first => __first_458
  # DEBUG __r => __first_458
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _240 = &MEM[(struct deque *)__first_458].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_240);
  MEM[(struct  &)__first_458] ={v} {CLOBBER};
  __first_241 = __first_458 + 80;
  # DEBUG __first => __first_241
  # DEBUG __first => __first_241
  if (_68 == __first_241)
    goto <bb 126>;
  else
    goto <bb 125>;

  <bb 125>:
  goto <bb 124>;

  <bb 126>:
  pretmp_150 = MEM[(struct _Vector_base *)this_18(D) + 384B]._M_impl._M_start;

  <bb 127>:
  # prephitmp_151 = PHI <pretmp_150(126), __first_238(122)>
  # DEBUG D#1189 => &D#2957->D.51519
  # DEBUG this => D#1189
  # DEBUG D#661 => D#1189->_M_impl._M_end_of_storage
  # DEBUG D#660 => (long int) D#661
  # DEBUG D#2967 => MEM[(struct _Vector_base *)this_18(D) + 384B]._M_impl._M_start
  # DEBUG D#659 => (long int) D#2967
  # DEBUG D#658 => D#660 - D#659
  # DEBUG D#657 => D#658 /[ex] 80
  # DEBUG D#654 => D#1189
  # DEBUG D#655 => (long unsigned int) D#657
  # DEBUG __p => D#2967
  # DEBUG this => D#654
  # DEBUG __n => D#655
  # DEBUG D#653 => D#655
  # DEBUG D#652 => D#654
  if (prephitmp_151 != 0B)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  # DEBUG D#651 => &D#652->_M_impl
  # DEBUG D#649 => D#651
  # DEBUG D#650 => D#653
  # DEBUG __p => D#2967
  # DEBUG __a => D#649
  # DEBUG __n => D#650
  # DEBUG D#648 => D#650
  # DEBUG D#647 => D#649
  # DEBUG D#645 => D#647
  # DEBUG D#646 => D#648
  # DEBUG __p => D#2967
  # DEBUG this => D#645
  # DEBUG D.136277 => D#646
  operator delete (prephitmp_151);

  <bb 129>:
  # DEBUG D#656 => &D#1189->_M_impl
  # DEBUG this => D#656
  # DEBUG this => D#656
  # DEBUG this => D#656
  MEM[(struct  &)this_18(D) + 384] ={v} {CLOBBER};
  # DEBUG D#1282 => &this_18(D)->_output_state
  # DEBUG this => D#1282
  # DEBUG D#639 => &D#1282->D.50767
  # DEBUG this => D#639
  # DEBUG D#642 => D#1282->D.50767._M_impl._M_finish
  # DEBUG D#641 => D#1282->D.50767._M_impl._M_start
  # DEBUG __first => D#641
  # DEBUG __last => D#642
  # DEBUG D.102816 => NULL
  # DEBUG D#339 => D#641
  # DEBUG D#340 => D#642
  # DEBUG __first => D#339
  # DEBUG __last => D#340
  # DEBUG D#338 => D#340
  # DEBUG D#337 => D#339
  # DEBUG D#335 => D#337
  # DEBUG D#336 => D#338
  # DEBUG D.100983 => D#335
  # DEBUG D.100982 => D#336
  # DEBUG D#640 => &D#1282->D.50767
  # DEBUG this => D#640
  # DEBUG D#638 => D#640->_M_impl._M_end_of_storage
  # DEBUG D#637 => (long int) D#638
  _83 = MEM[(struct _Vector_base *)this_18(D) + 344B]._M_impl._M_start;
  # DEBUG D#636 => (long int) _83
  # DEBUG D#635 => D#637 - D#636
  # DEBUG D#634 => D#635 /[ex] 8
  # DEBUG D#633 => (long unsigned int) D#634
  # DEBUG this => D#640
  # DEBUG __p => _83
  # DEBUG __n => D#633
  if (_83 != 0B)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  # DEBUG D#631 => &D#640->_M_impl
  # DEBUG D#629 => D#631
  # DEBUG D#630 => D#633
  # DEBUG __p => _83
  # DEBUG __a => D#629
  # DEBUG __n => D#630
  # DEBUG D#628 => D#630
  # DEBUG D#627 => D#629
  # DEBUG D#625 => D#627
  # DEBUG D#626 => D#628
  # DEBUG __p => _83
  # DEBUG this => D#625
  # DEBUG D.108620 => D#626
  operator delete (_83);

  <bb 131>:
  # DEBUG D#632 => &D#640->_M_impl
  # DEBUG this => D#632
  # DEBUG this => D#632
  # DEBUG this => D#632
  MEM[(struct  &)this_18(D) + 344] ={v} {CLOBBER};
  # DEBUG D#2956 => &this_18(D)->_active
  # DEBUG this => D#2956
  # DEBUG D#621 => &D#2956->D.50019
  # DEBUG this => D#621
  _71 = MEM[(struct vector *)this_18(D) + 312B].D.50019._M_impl._M_finish;
  __first_263 = MEM[(struct vector *)this_18(D) + 312B].D.50019._M_impl._M_start;
  # DEBUG __first => __first_263
  # DEBUG __last => _71
  # DEBUG __first => __first_263
  if (_71 == __first_263)
    goto <bb 138>;
  else
    goto <bb 132>;

  <bb 132>:

  <bb 133>:
  # __first_455 = PHI <__first_263(132), __first_266(136)>
  # DEBUG __first => __first_455
  # DEBUG __r => __first_455
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG D#2955 => &__first_455->D.43009
  # DEBUG this => D#2955
  # DEBUG this => D#2955
  _82 = MEM[(struct _Bvector_base *)__first_455]._M_impl._M_start.D.26904._M_p;
  if (_82 != 0B)
    goto <bb 134>;
  else
    goto <bb 135>;

  <bb 134>:
  # DEBUG D#567 => &D#2955->_M_impl
  _268 = MEM[(long unsigned int * *)__first_455 + 32B];
  # DEBUG D#324 => D#567
  # DEBUG this => D#324
  _270 = (long int) _268;
  _271 = (long int) _82;
  _272 = _270 - _271;
  # DEBUG D#570 => _272 /[ex] 8
  # DEBUG D#569 => (const size_t) D#570
  # DEBUG __n => D#569
  _273 = (long unsigned int) _272;
  _274 = -_273;
  _275 = _268 + _274;
  # DEBUG D#568 => &D#2955->_M_impl
  # DEBUG D#565 => D#568
  # DEBUG D#566 => D#569
  # DEBUG __p => _275
  # DEBUG __a => D#565
  # DEBUG __n => D#566
  # DEBUG D#564 => D#566
  # DEBUG D#563 => D#565
  # DEBUG D#561 => D#563
  # DEBUG D#562 => D#564
  # DEBUG __p => _275
  # DEBUG this => D#561
  # DEBUG D.136422 => D#562
  operator delete (_275);

  <bb 135>:
  # DEBUG D#571 => &D#2955->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__first_455] ={v} {CLOBBER};
  __first_266 = __first_455 + 40;
  # DEBUG __first => __first_266
  # DEBUG __first => __first_266
  if (_71 == __first_266)
    goto <bb 137>;
  else
    goto <bb 136>;

  <bb 136>:
  goto <bb 133>;

  <bb 137>:
  pretmp_364 = MEM[(struct _Vector_base *)this_18(D) + 312B]._M_impl._M_start;

  <bb 138>:
  # prephitmp_365 = PHI <pretmp_364(137), __first_263(131)>
  # DEBUG D#622 => &D#2956->D.50019
  # DEBUG this => D#622
  # DEBUG D#616 => D#622->_M_impl._M_end_of_storage
  # DEBUG D#615 => (long int) D#616
  # DEBUG D#2966 => MEM[(struct _Vector_base *)this_18(D) + 312B]._M_impl._M_start
  # DEBUG D#614 => (long int) D#2966
  # DEBUG D#613 => D#615 - D#614
  # DEBUG D#612 => D#613 /[ex] 40
  # DEBUG D#609 => D#622
  # DEBUG D#610 => (long unsigned int) D#612
  # DEBUG __p => D#2966
  # DEBUG this => D#609
  # DEBUG __n => D#610
  # DEBUG D#608 => D#610
  # DEBUG D#607 => D#609
  if (prephitmp_365 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;

  <bb 139>:
  # DEBUG D#606 => &D#607->_M_impl
  # DEBUG D#604 => D#606
  # DEBUG D#605 => D#608
  # DEBUG __p => D#2966
  # DEBUG __a => D#604
  # DEBUG __n => D#605
  # DEBUG D#603 => D#605
  # DEBUG D#602 => D#604
  # DEBUG D#600 => D#602
  # DEBUG D#601 => D#603
  # DEBUG __p => D#2966
  # DEBUG this => D#600
  # DEBUG D.136410 => D#601
  operator delete (prephitmp_365);

  <bb 140>:
  # DEBUG D#611 => &D#622->_M_impl
  # DEBUG this => D#611
  # DEBUG this => D#611
  # DEBUG this => D#611
  MEM[(struct  &)this_18(D) + 312] ={v} {CLOBBER};
  # DEBUG D#1281 => &this_18(D)->_buf
  # DEBUG this => D#1281
  # DEBUG D#594 => &D#1281->D.49272
  # DEBUG this => D#594
  # DEBUG D#597 => D#1281->D.49272._M_impl._M_finish
  # DEBUG D#596 => D#1281->D.49272._M_impl._M_start
  # DEBUG __first => D#596
  # DEBUG __last => D#597
  # DEBUG D.102545 => NULL
  # DEBUG D#329 => D#596
  # DEBUG D#330 => D#597
  # DEBUG __first => D#329
  # DEBUG __last => D#330
  # DEBUG D#328 => D#330
  # DEBUG D#327 => D#329
  # DEBUG D#325 => D#327
  # DEBUG D#326 => D#328
  # DEBUG D.100933 => D#325
  # DEBUG D.100932 => D#326
  # DEBUG D#595 => &D#1281->D.49272
  # DEBUG this => D#595
  # DEBUG D#593 => D#595->_M_impl._M_end_of_storage
  # DEBUG D#592 => (long int) D#593
  _120 = MEM[(struct _Vector_base *)this_18(D) + 288B]._M_impl._M_start;
  # DEBUG D#591 => (long int) _120
  # DEBUG D#590 => D#592 - D#591
  # DEBUG D#589 => D#590 /[ex] 8
  # DEBUG D#588 => (long unsigned int) D#589
  # DEBUG this => D#595
  # DEBUG __p => _120
  # DEBUG __n => D#588
  if (_120 != 0B)
    goto <bb 141>;
  else
    goto <bb 142>;

  <bb 141>:
  # DEBUG D#586 => &D#595->_M_impl
  # DEBUG D#584 => D#586
  # DEBUG D#585 => D#588
  # DEBUG __p => _120
  # DEBUG __a => D#584
  # DEBUG __n => D#585
  # DEBUG D#583 => D#585
  # DEBUG D#582 => D#584
  # DEBUG D#580 => D#582
  # DEBUG D#581 => D#583
  # DEBUG __p => _120
  # DEBUG this => D#580
  # DEBUG D.108605 => D#581
  operator delete (_120);

  <bb 142>:
  # DEBUG D#587 => &D#595->_M_impl
  # DEBUG this => D#587
  # DEBUG this => D#587
  # DEBUG this => D#587
  MEM[(struct  &)this_18(D) + 288] ={v} {CLOBBER};
  _84 = &this_18(D)->D.54631;
  Router::~Router (_84);
  MEM[(struct  &)this_18(D)] ={v} {CLOBBER};
  return;

<L52>:

<L37>:
  # DEBUG D#1290 => &this_18(D)->_transport_match
  # DEBUG this => D#1290
  # DEBUG D#515 => &D#1290->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#1290->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#1290->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#1290->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _64 = MEM[(struct _Vector_base *)this_18(D) + 624B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _64
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _64
  # DEBUG __n => D#509
  if (_64 != 0B)
    goto <bb 145>;
  else
    goto <bb 146>;

  <bb 145>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _64
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _64
  # DEBUG this => D#501
  # DEBUG D.108685 => D#502
  operator delete (_64);

  <bb 146>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_18(D) + 624] ={v} {CLOBBER};
  resx 15

<L38>:
  # DEBUG D#1289 => &this_18(D)->_transport_free
  # DEBUG this => D#1289
  _87 = &MEM[(struct vector *)this_18(D) + 584B].D.43009;
  # DEBUG this => _87
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_87);
  # DEBUG D#571 => &_87->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)this_18(D) + 584] ={v} {CLOBBER};
  resx 14

<L39>:
  # DEBUG D#1288 => &this_18(D)->_transport_arbiter
  # DEBUG this => D#1288
  # DEBUG D#716 => &D#1288->D.53778
  # DEBUG this => D#716
  # DEBUG D#719 => D#1288->D.53778._M_impl._M_finish
  # DEBUG D#718 => D#1288->D.53778._M_impl._M_start
  # DEBUG __first => D#718
  # DEBUG __last => D#719
  # DEBUG D.103104 => NULL
  # DEBUG D#349 => D#718
  # DEBUG D#350 => D#719
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  # DEBUG D#717 => &D#1288->D.53778
  # DEBUG this => D#717
  # DEBUG D#715 => D#717->_M_impl._M_end_of_storage
  # DEBUG D#714 => (long int) D#715
  _88 = MEM[(struct _Vector_base *)this_18(D) + 560B]._M_impl._M_start;
  # DEBUG D#713 => (long int) _88
  # DEBUG D#712 => D#714 - D#713
  # DEBUG D#711 => D#712 /[ex] 8
  # DEBUG D#710 => (long unsigned int) D#711
  # DEBUG this => D#717
  # DEBUG __p => _88
  # DEBUG __n => D#710
  if (_88 != 0B)
    goto <bb 149>;
  else
    goto <bb 150>;

  <bb 149>:
  # DEBUG D#708 => &D#717->_M_impl
  # DEBUG D#706 => D#708
  # DEBUG D#707 => D#710
  # DEBUG __p => _88
  # DEBUG __a => D#706
  # DEBUG __n => D#707
  # DEBUG D#705 => D#707
  # DEBUG D#704 => D#706
  # DEBUG D#702 => D#704
  # DEBUG D#703 => D#705
  # DEBUG __p => _88
  # DEBUG this => D#702
  # DEBUG D.108705 => D#703
  operator delete (_88);

  <bb 150>:
  # DEBUG D#709 => &D#717->_M_impl
  # DEBUG this => D#709
  # DEBUG this => D#709
  # DEBUG this => D#709
  MEM[(struct  &)this_18(D) + 560] ={v} {CLOBBER};
  resx 13

<L40>:
  _90 = &this_18(D)->_transport_queue;
  std::vector<std::queue<EventRouter::tTransportEvent*> >::~vector (_90);
  resx 12

<L41>:
  # DEBUG D#1287 => &this_18(D)->_arrival_arbiter
  # DEBUG this => D#1287
  # DEBUG D#716 => &D#1287->D.53778
  # DEBUG this => D#716
  # DEBUG D#719 => D#1287->D.53778._M_impl._M_finish
  # DEBUG D#718 => D#1287->D.53778._M_impl._M_start
  # DEBUG __first => D#718
  # DEBUG __last => D#719
  # DEBUG D.103104 => NULL
  # DEBUG D#349 => D#718
  # DEBUG D#350 => D#719
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  # DEBUG D#717 => &D#1287->D.53778
  # DEBUG this => D#717
  # DEBUG D#715 => D#717->_M_impl._M_end_of_storage
  # DEBUG D#714 => (long int) D#715
  _89 = MEM[(struct _Vector_base *)this_18(D) + 512B]._M_impl._M_start;
  # DEBUG D#713 => (long int) _89
  # DEBUG D#712 => D#714 - D#713
  # DEBUG D#711 => D#712 /[ex] 8
  # DEBUG D#710 => (long unsigned int) D#711
  # DEBUG this => D#717
  # DEBUG __p => _89
  # DEBUG __n => D#710
  if (_89 != 0B)
    goto <bb 153>;
  else
    goto <bb 154>;

  <bb 153>:
  # DEBUG D#708 => &D#717->_M_impl
  # DEBUG D#706 => D#708
  # DEBUG D#707 => D#710
  # DEBUG __p => _89
  # DEBUG __a => D#706
  # DEBUG __n => D#707
  # DEBUG D#705 => D#707
  # DEBUG D#704 => D#706
  # DEBUG D#702 => D#704
  # DEBUG D#703 => D#705
  # DEBUG __p => _89
  # DEBUG this => D#702
  # DEBUG D.108720 => D#703
  operator delete (_89);

  <bb 154>:
  # DEBUG D#709 => &D#717->_M_impl
  # DEBUG this => D#709
  # DEBUG this => D#709
  # DEBUG this => D#709
  MEM[(struct  &)this_18(D) + 512] ={v} {CLOBBER};
  resx 11

<L42>:
  _93 = &this_18(D)->_arrival_queue;
  std::vector<std::queue<EventRouter::tArrivalEvent*> >::~vector (_93);
  resx 10

<L43>:
  _95 = &this_18(D)->_out_cred_buffer;
  std::vector<std::queue<Credit*> >::~vector (_95);
  resx 9

<L44>:
  _97 = &this_18(D)->_in_cred_buffer;
  std::vector<std::queue<Credit*> >::~vector (_97);
  resx 8

<L45>:
  _99 = &this_18(D)->_output_buffer;
  std::vector<std::queue<Flit*> >::~vector (_99);
  resx 7

<L46>:
  _101 = &this_18(D)->_input_buffer;
  std::vector<std::queue<Flit*> >::~vector (_101);
  resx 6

<L47>:
  # DEBUG D#1280 => &this_18(D)->_output_state
  # DEBUG this => D#1280
  # DEBUG D#639 => &D#1280->D.50767
  # DEBUG this => D#639
  # DEBUG D#642 => D#1280->D.50767._M_impl._M_finish
  # DEBUG D#641 => D#1280->D.50767._M_impl._M_start
  # DEBUG __first => D#641
  # DEBUG __last => D#642
  # DEBUG D.102816 => NULL
  # DEBUG D#339 => D#641
  # DEBUG D#340 => D#642
  # DEBUG __first => D#339
  # DEBUG __last => D#340
  # DEBUG D#338 => D#340
  # DEBUG D#337 => D#339
  # DEBUG D#335 => D#337
  # DEBUG D#336 => D#338
  # DEBUG D.100983 => D#335
  # DEBUG D.100982 => D#336
  # DEBUG D#640 => &D#1280->D.50767
  # DEBUG this => D#640
  # DEBUG D#638 => D#640->_M_impl._M_end_of_storage
  # DEBUG D#637 => (long int) D#638
  _92 = MEM[(struct _Vector_base *)this_18(D) + 344B]._M_impl._M_start;
  # DEBUG D#636 => (long int) _92
  # DEBUG D#635 => D#637 - D#636
  # DEBUG D#634 => D#635 /[ex] 8
  # DEBUG D#633 => (long unsigned int) D#634
  # DEBUG this => D#640
  # DEBUG __p => _92
  # DEBUG __n => D#633
  if (_92 != 0B)
    goto <bb 161>;
  else
    goto <bb 162>;

  <bb 161>:
  # DEBUG D#631 => &D#640->_M_impl
  # DEBUG D#629 => D#631
  # DEBUG D#630 => D#633
  # DEBUG __p => _92
  # DEBUG __a => D#629
  # DEBUG __n => D#630
  # DEBUG D#628 => D#630
  # DEBUG D#627 => D#629
  # DEBUG D#625 => D#627
  # DEBUG D#626 => D#628
  # DEBUG __p => _92
  # DEBUG this => D#625
  # DEBUG D.108735 => D#626
  operator delete (_92);

  <bb 162>:
  # DEBUG D#632 => &D#640->_M_impl
  # DEBUG this => D#632
  # DEBUG this => D#632
  # DEBUG this => D#632
  MEM[(struct  &)this_18(D) + 344] ={v} {CLOBBER};
  resx 5

<L48>:
  _104 = &this_18(D)->_active;
  std::vector<std::vector<bool> >::~vector (_104);
  resx 4

<L49>:
  # DEBUG D#1279 => &this_18(D)->_buf
  # DEBUG this => D#1279
  # DEBUG D#594 => &D#1279->D.49272
  # DEBUG this => D#594
  # DEBUG D#597 => D#1279->D.49272._M_impl._M_finish
  # DEBUG D#596 => D#1279->D.49272._M_impl._M_start
  # DEBUG __first => D#596
  # DEBUG __last => D#597
  # DEBUG D.102545 => NULL
  # DEBUG D#329 => D#596
  # DEBUG D#330 => D#597
  # DEBUG __first => D#329
  # DEBUG __last => D#330
  # DEBUG D#328 => D#330
  # DEBUG D#327 => D#329
  # DEBUG D#325 => D#327
  # DEBUG D#326 => D#328
  # DEBUG D.100933 => D#325
  # DEBUG D.100932 => D#326
  # DEBUG D#595 => &D#1279->D.49272
  # DEBUG this => D#595
  # DEBUG D#593 => D#595->_M_impl._M_end_of_storage
  # DEBUG D#592 => (long int) D#593
  _103 = MEM[(struct _Vector_base *)this_18(D) + 288B]._M_impl._M_start;
  # DEBUG D#591 => (long int) _103
  # DEBUG D#590 => D#592 - D#591
  # DEBUG D#589 => D#590 /[ex] 8
  # DEBUG D#588 => (long unsigned int) D#589
  # DEBUG this => D#595
  # DEBUG __p => _103
  # DEBUG __n => D#588
  if (_103 != 0B)
    goto <bb 165>;
  else
    goto <bb 166>;

  <bb 165>:
  # DEBUG D#586 => &D#595->_M_impl
  # DEBUG D#584 => D#586
  # DEBUG D#585 => D#588
  # DEBUG __p => _103
  # DEBUG __a => D#584
  # DEBUG __n => D#585
  # DEBUG D#583 => D#585
  # DEBUG D#582 => D#584
  # DEBUG D#580 => D#582
  # DEBUG D#581 => D#583
  # DEBUG __p => _103
  # DEBUG this => D#580
  # DEBUG D.108750 => D#581
  operator delete (_103);

  <bb 166>:
  # DEBUG D#587 => &D#595->_M_impl
  # DEBUG this => D#587
  # DEBUG this => D#587
  # DEBUG this => D#587
  MEM[(struct  &)this_18(D) + 288] ={v} {CLOBBER};
  resx 3

<L50>:
  _107 = &this_18(D)->D.54631;
  Router::~Router (_107);
  resx 2

}



;; Function void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb, funcdef_no=3180, decl_uid=42914, cgraph_uid=1529, symbol_order=1530)

Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (struct vector * const this, struct iterator __position, size_type __n, bool __x)
{
  unsigned int SR.4612;
  _Bit_type * SR.4611;
  const unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.4608;
  _Bit_type * SR.4607;
  unsigned int SR.4606;
  _Bit_type * SR.4605;
  unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.4602;
  _Bit_type * SR.4601;
  unsigned int SR.4600;
  _Bit_type * SR.4599;
  const unsigned int __first$8;
  const unsigned int __first$8;
  _Bit_type * __first;
  const unsigned int __last$_M_offset;
  _Bit_type * const __last$_M_p;
  unsigned int __last$D26904$_M_offset;
  _Bit_type * __last$D26904$_M_p;
  unsigned int __first$D26904$_M_offset;
  _Bit_type * __first;
  unsigned int SR.4589;
  _Bit_type * SR.4588;
  unsigned int __position$8;
  _Bit_type * __position;
  struct _Bit_iterator D.136817;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  struct _Bit_iterator D.136781;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.136780;
  struct _Bit_iterator D.136766;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.136741;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.136740;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  const long unsigned int D.136717;
  const size_type __len;
  size_type D.136716;
  size_type __n;
  _Bit_type * __last$D27024$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D27024$_M_offset;
  struct _Bit_iterator D.136694;
  struct iterator D.136693;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __first$_M_p;
  const unsigned int __first$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  bool __x;
  _Bit_type * __last$D26904$_M_p;
  _Bit_type * __first$D26904$_M_p;
  long unsigned int * __first;
  struct _Bit_iterator D.136622;
  struct _Bit_iterator D.136621;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator D.136597;
  difference_type __n;
  _Bit_type * __last$_M_p;
  const unsigned int __last$8;
  _Bit_type * __result$_M_p;
  unsigned int __result$_M_offset;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  struct _Bit_iterator D.136562;
  struct _Bit_iterator __first;
  struct _Bit_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.136561;
  _Bit_type * SR.2282;
  unsigned int SR.2275;
  _Bit_type * SR.2274;
  unsigned int SR.2273;
  _Bit_type * SR.2272;
  unsigned int __i$8;
  _Bit_type * __i;
  unsigned int __position$8;
  _Bit_type * __position;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct _Bit_iterator D.110331;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct _Bit_iterator D.110293;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator __i;
  struct _Bit_iterator D.93248;
  struct _Bit_iterator D.93244;
  long unsigned int _7;
  long int __n.423_8;
  long unsigned int pretmp_9;
  long int __n.423_16;
  struct _Bvector_base * _18;
  long unsigned int * _20;
  long int _25;
  long int _26;
  long int _27;
  long int _28;
  long int _29;
  ptrdiff_t _30;
  unsigned int _32;
  _Bit_type * _33;
  long unsigned int * const _34;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  ptrdiff_t _41;
  size_type _42;
  _Bit_type * _53;
  unsigned int _55;
  bool _56;
  long int _58;
  long unsigned int _59;
  long unsigned int _60;
  unsigned int _66;
  long int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int * _81;
  long int _89;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int prephitmp_108;
  long unsigned int _123;
  long int pretmp_128;
  bool _131;
  bool _132;
  long int _133;
  long int _134;
  long int _135;
  bool _136;
  long int _137;
  long int _138;
  long unsigned int pretmp_140;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  bool _165;
  long unsigned int pretmp_168;
  bool _174;
  long unsigned int _184;
  long unsigned int _185;
  long unsigned int _186;
  long unsigned int prephitmp_193;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  long unsigned int _213;
  long unsigned int _222;
  long unsigned int _223;
  long unsigned int _224;
  long unsigned int pretmp_233;
  long int __last.51_235;
  long int __first.52_236;
  long int _237;
  long unsigned int _239;
  unsigned int _252;
  long unsigned int _255;
  long int prephitmp_257;
  long unsigned int _260;
  bool _261;
  bool _265;
  long unsigned int _282;
  long unsigned int _284;
  long unsigned int _285;
  long unsigned int _287;
  long unsigned int _289;
  long unsigned int _290;
  long unsigned int _291;
  long unsigned int _292;
  long unsigned int _293;
  unsigned int _305;
  bool _307;
  bool _308;
  long unsigned int prephitmp_309;
  long unsigned int pretmp_310;
  long int _314;
  long int _316;
  long int _317;
  long int _318;
  long int _319;
  long unsigned int _322;
  long unsigned int _323;
  long unsigned int _324;
  long unsigned int _325;
  long unsigned int _326;
  long unsigned int _327;
  long unsigned int _328;
  long unsigned int _329;
  bool _330;
  long unsigned int _331;
  long unsigned int _332;
  long unsigned int _333;
  long unsigned int _334;
  long unsigned int _335;
  bool _345;
  bool _346;
  size_t pretmp_347;
  long unsigned int pretmp_364;
  long unsigned int prephitmp_365;
  _Bit_type cstore_370;
  long unsigned int _377;
  bool _401;
  _Bit_type cstore_413;
  long unsigned int _416;
  long unsigned int _417;
  long unsigned int _418;
  bool _419;
  bool _420;
  _Bit_type cstore_432;
  const unsigned int prephitmp_434;
  long unsigned int _435;
  bool _440;
  long unsigned int _441;
  int _442;
  int _443;

  <bb 2>:
  # DEBUG D#2984 => MEM[(struct _Bit_iterator *)&__position]
  # DEBUG __position => D#2984
  # DEBUG D#2983 => MEM[(struct _Bit_iterator *)&__position + 8B]
  # DEBUG __position$8 => D#2983
  # DEBUG __position => D#2984
  # DEBUG __position$8 => D#2983
  if (__n_2(D) == 0)
    goto <bb 97>;
  else
    goto <bb 3>;

  <bb 3>:
  __first_394 = MEM[(struct _Bit_iterator *)&__position];
  __first$8_421 = MEM[(struct _Bit_iterator *)&__position + 8B];
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#142 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _32 = MEM[(const struct _Bit_iterator *)this_4(D)].D.26904._M_offset;
  _33 = MEM[(const struct _Bit_iterator *)this_4(D)].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#28
  # DEBUG D#373 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl
  _34 = MEM[(long unsigned int * *)this_4(D) + 32B];
  # DEBUG D#324 => D#373
  # DEBUG this => D#324
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _36 = (long int) _34;
  _37 = (long int) _33;
  _38 = _36 - _37;
  _39 = _38 * 8;
  _40 = (long int) _32;
  _41 = _39 - _40;
  _42 = (size_type) _41;
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#142 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG this => D#28
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#28
  # DEBUG this => this_4(D)
  # DEBUG D#143 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  __last$8_6 = MEM[(const struct _Bit_iterator *)this_4(D) + 16B].D.26904._M_offset;
  __last$_M_p_5 = MEM[(const struct _Bit_iterator *)this_4(D) + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _25 = (long int) __last$_M_p_5;
  _26 = _25 - _37;
  _27 = _26 * 8;
  _28 = (long int) __last$8_6;
  _29 = _27 + _28;
  _30 = _29 - _40;
  _31 = (const long unsigned int) _30;
  _7 = _42 - _31;
  if (__n_2(D) <= _7)
    goto <bb 4>;
  else
    goto <bb 59>;

  <bb 4>:
  __n.423_8 = (long int) __n_2(D);
  # DEBUG D#1390 => &this_4(D)->D.43009._M_impl._M_finish
  # DEBUG this => D#1390
  # DEBUG __i => __n.423_8
  # DEBUG __tmp$_M_p => __last$_M_p_5
  # DEBUG __tmp$_M_offset => __last$8_6
  # DEBUG this => &__tmp
  # DEBUG __i => __n.423_8
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => __n.423_8
  __n_68 = __n.423_8 + _28;
  # DEBUG __n => __n_68
  _69 = __n_68 / 64;
  _70 = (long unsigned int) _69;
  _71 = _70 * 8;
  __result$_M_p_72 = __last$_M_p_5 + _71;
  # DEBUG __tmp$_M_p => __result$_M_p_72
  __n_73 = __n_68 % 64;
  # DEBUG __n => __n_73
  if (__n_73 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __n_74 = __n_73 + 64;
  # DEBUG __n => __n_74
  __result$_M_p_75 = __result$_M_p_72 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __result$_M_p_75

  <bb 6>:
  # __n_76 = PHI <__n_73(4), __n_74(5)>
  # __result$_M_p_78 = PHI <__result$_M_p_72(4), __result$_M_p_75(5)>
  # DEBUG __tmp$_M_p => __result$_M_p_78
  # DEBUG __n => __n_76
  __result$_M_offset_77 = (unsigned int) __n_76;
  # DEBUG __tmp$_M_offset => __result$_M_offset_77
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  # DEBUG this => this_4(D)
  # DEBUG D#1381 => __position
  # DEBUG D#1381 => __position
  # DEBUG D#1382 => D.93243
  # DEBUG D#1382 => D.93243
  # DEBUG D#1383 => D.93242
  # DEBUG D#1383 => D.93242
  # DEBUG __it$D26904$_M_p => __last$_M_p_5
  # DEBUG __it$D26904$_M_offset => __last$8_6
  # DEBUG __it$D26904$_M_p => D#2984
  # DEBUG __it$D26904$_M_offset => D#2983
  # DEBUG __it$D26904$_M_p => __result$_M_p_78
  # DEBUG __it$D26904$_M_offset => __result$_M_offset_77
  # DEBUG __it$D26904$_M_p => __last$_M_p_5
  # DEBUG __it$D26904$_M_offset => __last$8_6
  # DEBUG __it$D26904$_M_p => D#2984
  # DEBUG __it$D26904$_M_offset => D#2983
  # DEBUG __simple => 0
  # DEBUG __last$_M_p => __last$_M_p_5
  # DEBUG __last$8 => __last$8_6
  # DEBUG __result$_M_p => __result$_M_p_78
  # DEBUG __result$_M_offset => __result$_M_offset_77
  # DEBUG D#17 => &__last.D.26904
  # DEBUG D#17 => &__last.D.26904
  # DEBUG D#18 => &__first.D.26904
  # DEBUG D#18 => &__first.D.26904
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _133 = (long int) __first_394;
  _134 = _25 - _133;
  _135 = _134 * 8;
  _137 = _28 + _135;
  _138 = (long int) __first$8_421;
  __n_139 = _137 - _138;
  # DEBUG __n => NULL
  # DEBUG __result$_M_offset => __result$_M_offset_77
  # DEBUG __result$_M_p => __result$_M_p_78
  # DEBUG __last$8 => __last$8_6
  # DEBUG __last$_M_p => __last$_M_p_5
  # DEBUG __n => __n_139
  if (__n_139 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  # DEBUG __i => __n.423_8
  # DEBUG __tmp$_M_p => D#2984
  # DEBUG __tmp$_M_offset => D#2983
  # DEBUG this => &__tmp
  # DEBUG __i => __n.423_8
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => __n.423_8
  __n_57 = __n.423_8 + _138;
  # DEBUG __n => __n_57
  _58 = __n_57 / 64;
  _59 = (long unsigned int) _58;
  _60 = _59 * 8;
  __last$_M_p_61 = __first_394 + _60;
  # DEBUG __tmp$_M_p => __last$_M_p_61
  __n_62 = __n_57 % 64;
  # DEBUG __n => __n_62
  if (__n_62 < 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 8>:

  <bb 9>:
  # __n_371 = PHI <__n_139(8), __n_162(19)>
  # __last$8_372 = PHI <__last$8_6(8), __last$8_145(19)>
  # __last$_M_p_373 = PHI <__last$_M_p_5(8), __last$_M_p_153(19)>
  # __result$_M_offset_374 = PHI <__result$_M_offset_77(8), __result$_M_offset_151(19)>
  # __result$_M_p_375 = PHI <__result$_M_p_78(8), __result$_M_p_156(19)>
  # DEBUG __result$_M_offset => __result$_M_offset_374
  # DEBUG __result$_M_p => __result$_M_p_375
  # DEBUG __last$8 => __last$8_372
  # DEBUG __last$_M_p => __last$_M_p_373
  # DEBUG __n => __n_371
  # DEBUG this => &__last
  # DEBUG D#23 => &__last.D.26904
  # DEBUG this => D#23
  # DEBUG __last$8 => __last$8_372 + 4294967295
  if (__last$8_372 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  __last$8_142 = __last$8_372 + 4294967295;
  pretmp_310 = 1 << __last$8_142;
  goto <bb 12>;

  <bb 11>:
  # DEBUG __last$8 => 63
  __last$_M_p_144 = __last$_M_p_373 + 18446744073709551608;
  # DEBUG __last$_M_p => __last$_M_p_144

  <bb 12>:
  # __last$_M_p_153 = PHI <__last$_M_p_373(10), __last$_M_p_144(11)>
  # __last$8_145 = PHI <__last$8_142(10), 63(11)>
  # prephitmp_309 = PHI <pretmp_310(10), 9223372036854775808(11)>
  # DEBUG __last$8 => __last$8_145
  # DEBUG __last$_M_p => __last$_M_p_153
  # DEBUG this => D#21
  # DEBUG this => D#21
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_153
  # DEBUG __y => 1 << __last$8_145
  # DEBUG this => &__result
  # DEBUG D#23 => &__result.D.26904
  # DEBUG this => D#23
  # DEBUG __result$_M_offset => __result$_M_offset_374 + 4294967295
  if (__result$_M_offset_374 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  __result$_M_offset_148 = __result$_M_offset_374 + 4294967295;
  pretmp_9 = 1 << __result$_M_offset_148;
  goto <bb 15>;

  <bb 14>:
  # DEBUG __result$_M_offset => 63
  __result$_M_p_150 = __result$_M_p_375 + 18446744073709551608;
  # DEBUG __result$_M_p => __result$_M_p_150

  <bb 15>:
  # __result$_M_p_156 = PHI <__result$_M_p_375(13), __result$_M_p_150(14)>
  # __result$_M_offset_151 = PHI <__result$_M_offset_148(13), 63(14)>
  # prephitmp_108 = PHI <pretmp_9(13), 9223372036854775808(14)>
  # DEBUG __result$_M_offset => __result$_M_offset_151
  # DEBUG __result$_M_p => __result$_M_p_156
  # DEBUG this => D#21
  # DEBUG this => D#21
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_156
  # DEBUG __y => 1 << __result$_M_offset_151
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  _154 = *__last$_M_p_153;
  _155 = _154 & prephitmp_309;
  # DEBUG this => NULL
  # DEBUG __x => _155 != 0
  if (_155 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _157 = *__result$_M_p_156;
  _158 = prephitmp_108 | _157;
  goto <bb 18>;

  <bb 17>:
  _159 = *__result$_M_p_156;
  _160 = ~prephitmp_108;
  _161 = _159 & _160;

  <bb 18>:
  # cstore_370 = PHI <_158(16), _161(17)>
  *__result$_M_p_156 = cstore_370;
  __n_162 = __n_371 + -1;
  # DEBUG __n => __n_162
  # DEBUG __result$_M_offset => __result$_M_offset_151
  # DEBUG __result$_M_p => __result$_M_p_156
  # DEBUG __last$8 => __last$8_145
  # DEBUG __last$_M_p => __last$_M_p_153
  # DEBUG __n => __n_162
  if (__n_162 <= 0)
    goto <bb 7>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 9>;

  <bb 20>:
  __n_63 = __n_62 + 64;
  # DEBUG __n => __n_63
  __last$_M_p_64 = __last$_M_p_61 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __last$_M_p_64

  <bb 21>:
  # __n_65 = PHI <__n_62(7), __n_63(20)>
  # __last$_M_p_67 = PHI <__last$_M_p_61(7), __last$_M_p_64(20)>
  # DEBUG __tmp$_M_p => __last$_M_p_67
  # DEBUG __n => __n_65
  _66 = (unsigned int) __n_65;
  # DEBUG __tmp$_M_offset => _66
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  # DEBUG __first => D#2984
  # DEBUG __first$D26904$_M_offset => D#2983
  # DEBUG __last$D26904$_M_p => __last$_M_p_67
  # DEBUG __last$D26904$_M_offset => _66
  # DEBUG __x => &__x
  # DEBUG __first$D26904$_M_p => D#2984
  # DEBUG __last$D26904$_M_p => __last$_M_p_67
  if (__last$_M_p_67 != __first_394)
    goto <bb 22>;
  else
    goto <bb 43>;

  <bb 22>:
  _165 = __x;
  _443 = (int) _165;
  _442 = -_443;
  __first_166 = __first_394 + 8;
  # DEBUG D#204 => &D.136620
  # DEBUG __first => __first_166
  # DEBUG __last => __last$_M_p_67
  # DEBUG D#203 => D#204
  # DEBUG __value => D#203
  # DEBUG __it => __last$_M_p_67
  # DEBUG __it => __last$_M_p_67
  # DEBUG __it => __first_166
  # DEBUG __it => __first_166
  # DEBUG D#128 => D#203
  # DEBUG __first => __first_166
  # DEBUG __last => __last$_M_p_67
  # DEBUG __value => D#128
  # DEBUG __tmp => _442
  # DEBUG __first => __first_166
  if (__last$_M_p_67 == __first_166)
    goto <bb 23>;
  else
    goto <bb 31>;

  <bb 23>:
  # DEBUG this => &D.136621
  # DEBUG __x => __first_166
  # DEBUG __y => 0
  # DEBUG D#20 => &D.136621.D.26904
  # DEBUG this => D#20
  # DEBUG __x => __first_166
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __first => D#2984
  # DEBUG __first$8 => D#2983
  # DEBUG __x => _165
  # DEBUG __first$_M_p => D#2984
  # DEBUG __first$_M_offset => D#2983
  if (_165 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  goto <bb 36>;

  <bb 25>:

  <bb 26>:
  # __first_411 = PHI <__first_394(25), __first_359(30)>
  # __first$8_408 = PHI <__first$8_421(25), __first$8_358(30)>
  # DEBUG __first$_M_offset => __first$8_408
  # DEBUG __first$_M_p => __first_411
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  _401 = __first$8_408 == 0;
  _420 = __first_166 == __first_411;
  _419 = _401 & _420;
  if (_419 != 0)
    goto <bb 98>;
  else
    goto <bb 27>;

  <bb 27>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _418 = 1 << __first$8_408;
  # DEBUG this => NULL
  # DEBUG __x => __first_411
  # DEBUG __y => _418
  # DEBUG this => NULL
  # DEBUG __x => _165
  _417 = *__first_411;
  _416 = ~_418;
  _377 = _417 & _416;
  *__first_411 = _377;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$8_408 + 1
  if (__first$8_408 == 63)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  # DEBUG __first$_M_offset => 0
  __first_361 = __first_411 + 8;
  # DEBUG __first$_M_p => __first_361
  goto <bb 30>;

  <bb 29>:
  __first$8_360 = __first$8_408 + 1;

  <bb 30>:
  # __first_359 = PHI <__first_361(28), __first_411(29)>
  # __first$8_358 = PHI <0(28), __first$8_360(29)>
  goto <bb 26>;

  <bb 31>:
  pretmp_233 = (long unsigned int) _442;

  <bb 32>:
  # __first_376 = PHI <__first_166(31), __first_170(33)>
  # DEBUG __first => __first_376
  *__first_376 = pretmp_233;
  __first_170 = __first_376 + 8;
  # DEBUG __first => __first_170
  # DEBUG __first => __first_170
  if (__last$_M_p_67 == __first_170)
    goto <bb 23>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  __first$8_209 = __first$8_200 + 1;

  <bb 35>:
  # __first_192 = PHI <__first_198(34), __first_210(37)>
  # __first$8_231 = PHI <__first$8_209(34), 0(37)>

  <bb 36>:
  # __first_198 = PHI <__first_192(35), __first_394(24)>
  # __first$8_200 = PHI <__first$8_231(35), __first$8_421(24)>
  # DEBUG __first$_M_offset => __first$8_200
  # DEBUG __first$_M_p => __first_198
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  _131 = __first$8_200 == 0;
  _132 = __first_166 == __first_198;
  _265 = _131 & _132;
  if (_265 != 0)
    goto <bb 98>;
  else
    goto <bb 107>;

  <bb 37>:
  # DEBUG __first$_M_offset => 0
  __first_210 = __first_198 + 8;
  # DEBUG __first$_M_p => __first_210
  goto <bb 35>;

  <bb 38>:
  __first$_M_offset_190 = __first$_M_offset_181 + 1;

  <bb 39>:
  # __last$_M_p_212 = PHI <__last$_M_p_179(38), __last$_M_p_191(42)>
  # __first$_M_offset_211 = PHI <__first$_M_offset_190(38), 0(42)>

  <bb 40>:
  # __last$_M_p_179 = PHI <__last$_M_p_212(39), __last$_M_p_67(99)>
  # __first$_M_offset_181 = PHI <__first$_M_offset_211(39), 0(99)>
  # DEBUG __first$_M_offset => __first$_M_offset_181
  # DEBUG __first$_M_p => __last$_M_p_179
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_p_67 == __last$_M_p_179)
    goto <bb 41>;
  else
    goto <bb 108>;

  <bb 41>:
  # DEBUG __first$_M_offset => __first$_M_offset_181
  # DEBUG __first$_M_p => __last$_M_p_179
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (_66 == __first$_M_offset_181)
    goto <bb 109>;
  else
    goto <bb 108>;

  <bb 42>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_191 = __last$_M_p_179 + 8;
  # DEBUG __first$_M_p => __last$_M_p_191
  goto <bb 39>;

  <bb 43>:
  _174 = __x;
  # DEBUG __first$D26904$_M_p => D#2984
  # DEBUG __first$8 => D#2983
  # DEBUG __x => _174
  # DEBUG __first$_M_p => D#2984
  # DEBUG __first$_M_offset => D#2983
  if (_174 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  goto <bb 53>;

  <bb 45>:

  <bb 46>:
  # __first_353 = PHI <__first_394(45), __first_280(50)>
  # __first$8_351 = PHI <__first$8_421(45), __first$8_279(50)>
  # DEBUG __first$_M_offset => __first$8_351
  # DEBUG __first$_M_p => __first_353
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG __first$_M_offset => __first$8_351
  # DEBUG __first$_M_p => __first_353
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  _346 = _66 == __first$8_351;
  _345 = __last$_M_p_67 == __first_353;
  _330 = _345 & _346;
  if (_330 != 0)
    goto <bb 55>;
  else
    goto <bb 47>;

  <bb 47>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _327 = 1 << __first$8_351;
  # DEBUG this => NULL
  # DEBUG __x => __first_353
  # DEBUG __y => _327
  # DEBUG this => NULL
  # DEBUG __x => _174
  _325 = *__first_353;
  _323 = ~_327;
  _322 = _325 & _323;
  *__first_353 = _322;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$8_351 + 1
  if (__first$8_351 == 63)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 48>:
  __first$8_283 = __first$8_351 + 1;
  goto <bb 50>;

  <bb 49>:
  # DEBUG __first$_M_offset => 0
  __first_281 = __first_353 + 8;
  # DEBUG __first$_M_p => __first_281

  <bb 50>:
  # __first_280 = PHI <__first_353(48), __first_281(49)>
  # __first$8_279 = PHI <__first$8_283(48), 0(49)>
  goto <bb 46>;

  <bb 51>:
  __first$8_228 = __first$8_219 + 1;

  <bb 52>:
  # __first_99 = PHI <__first_217(51), __first_229(54)>
  # __first$8_127 = PHI <__first$8_228(51), 0(54)>

  <bb 53>:
  # __first_217 = PHI <__first_99(52), __first_394(44)>
  # __first$8_219 = PHI <__first$8_127(52), __first$8_421(44)>
  # DEBUG __first$_M_offset => __first$8_219
  # DEBUG __first$_M_p => __first_217
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG __first$_M_offset => __first$8_219
  # DEBUG __first$_M_p => __first_217
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  _261 = _66 == __first$8_219;
  _136 = __last$_M_p_67 == __first_217;
  _56 = _136 & _261;
  if (_56 != 0)
    goto <bb 55>;
  else
    goto <bb 110>;

  <bb 54>:
  # DEBUG __first$_M_offset => 0
  __first_229 = __first_217 + 8;
  # DEBUG __first$_M_p => __first_229
  goto <bb 52>;

  <bb 55>:
  # DEBUG D#1399 => &this_4(D)->D.43009._M_impl._M_finish
  # DEBUG this => D#1399
  # DEBUG __i => __n.423_8
  # DEBUG D#24 => &D#1399->D.26904
  # DEBUG this => D#24
  # DEBUG __i => __n.423_8
  # DEBUG D#2982 => MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_offset
  # DEBUG D#2981 => (long int) D#2982
  # DEBUG D#2980 => __n.423_8 + D#2981
  # DEBUG __n => D#2980
  # DEBUG __n => D#2980 % 64
  if (__n_73 < 0)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_p = __result$_M_p_72;
  goto <bb 58>;

  <bb 57>:
  __n_52 = __n_73 + 64;
  # DEBUG __n => __n_52
  _53 = __result$_M_p_72 + 18446744073709551608;
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_p = _53;

  <bb 58>:
  # __n_54 = PHI <__n_73(56), __n_52(57)>
  # DEBUG __n => __n_54
  _55 = (unsigned int) __n_54;
  MEM[(struct _Bit_iterator_base *)this_4(D) + 16B]._M_offset = _55;
  goto <bb 97>;

  <bb 59>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector<bool>::_M_fill_insert"
  # DEBUG D#989 => this_4(D)
  # DEBUG this => D#989
  # DEBUG D#988 => D#989
  # DEBUG __isize => 9223372036854775744
  # DEBUG D#987 => &D#988->D.43009
  # DEBUG this => D#987
  # DEBUG __a => D#986
  # DEBUG D#985 => D#986
  # DEBUG D#957 => D#985
  # DEBUG this => D#957
  # DEBUG __asize => NULL
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#142 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG this => D#28
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#28
  # DEBUG this => this_4(D)
  # DEBUG D#143 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  # DEBUG this => D#28
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _255 = 9223372036854775744 - _31;
  if (__n_2(D) > _255)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  std::__throw_length_error ("vector<bool>::_M_fill_insert");

  <bb 61>:
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#142 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG this => D#28
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#28
  # DEBUG this => this_4(D)
  # DEBUG D#143 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  # DEBUG this => D#28
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#142 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG this => D#28
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#28
  # DEBUG this => this_4(D)
  # DEBUG D#143 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  # DEBUG this => D#28
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  # DEBUG __a => &D.136717
  # DEBUG __b => &__n
  _441 = MAX_EXPR <__n_2(D), _31>;
  __len_259 = _31 + _441;
  # DEBUG __len => __len_259
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#142 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG this => D#28
  # DEBUG __x => _33
  # DEBUG __y => _32
  # DEBUG this => D#28
  # DEBUG this => this_4(D)
  # DEBUG D#143 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  # DEBUG this => D#28
  # DEBUG __x => __last$_M_p_5
  # DEBUG __y => __last$8_6
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  # DEBUG D#989 => this_4(D)
  # DEBUG this => D#989
  # DEBUG D#988 => D#989
  # DEBUG __isize => 9223372036854775744
  # DEBUG D#987 => &D#988->D.43009
  # DEBUG this => D#987
  # DEBUG __a => D#986
  # DEBUG D#985 => D#986
  # DEBUG D#957 => D#985
  # DEBUG this => D#957
  # DEBUG __asize => NULL
  _308 = __len_259 > 9223372036854775744;
  _307 = _31 > __len_259;
  _440 = _307 | _308;
  if (_440 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  pretmp_168 = __len_259 + 63;
  pretmp_347 = pretmp_168 >> 6;
  pretmp_364 = pretmp_347 * 8;

  <bb 63>:
  # prephitmp_365 = PHI <1152921504606846968(61), pretmp_364(62)>
  # DEBUG __len => NULL
  # DEBUG D#1401 => &this_4(D)->D.43009
  # DEBUG D#965 => D#1401
  # DEBUG __n => NULL
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  # DEBUG __n => NULL
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => NULL
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#959
  # DEBUG D.110319 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  _81 = operator new (prephitmp_365);
  # DEBUG __q => _81
  # DEBUG __r => _81
  # DEBUG this => &__start
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG D#20 => &__start.D.26904
  # DEBUG this => D#20
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __start$_M_p => _81
  # DEBUG __start$_M_offset => 0
  # DEBUG this => &D.72526
  # DEBUG __x => &__position
  # DEBUG D#28 => &D.72526.D.27024
  # DEBUG this => D#28
  # DEBUG __x => D#2984
  # DEBUG __y => D#2983
  # DEBUG this => D#28
  # DEBUG this => this_4(D)
  SR.2282_100 = MEM[(struct vector *)this_4(D)];
  # DEBUG D#1400 => MEM[(struct vector *)this_4(D) + 8B]
  # DEBUG this => &D.72525
  # DEBUG __x => &D.72524
  # DEBUG D#28 => &D.72525.D.27024
  # DEBUG this => D#28
  # DEBUG __x => SR.2282_100
  # DEBUG __y => D#1400
  # DEBUG this => D#28
  # DEBUG D.110392 => D#1400
  # DEBUG D#976 => this_4(D)
  # DEBUG D#977 => D.72525
  # DEBUG D#978 => D.72526
  # DEBUG D#978 => D.72526
  # DEBUG D#979 => __start
  # DEBUG this => D#976
  # DEBUG __last$D27024$_M_p => D#2984
  # DEBUG __first => SR.2282_100
  # DEBUG __last => D#2984
  # DEBUG __result => _81
  # DEBUG __it => D#2984
  # DEBUG __it => D#2984
  # DEBUG __it => SR.2282_100
  # DEBUG __it => SR.2282_100
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  # DEBUG __it => _81
  # DEBUG __it => _81
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _81
  __last.51_235 = (long int) __first_394;
  __first.52_236 = (long int) SR.2282_100;
  _237 = __last.51_235 - __first.52_236;
  _Num_238 = _237 /[ex] 8;
  # DEBUG _Num => _Num_238
  if (_Num_238 != 0)
    goto <bb 65>;
  else
    goto <bb 64>;

  <bb 64>:
  pretmp_140 = (long unsigned int) _237;
  goto <bb 66>;

  <bb 65>:
  _239 = (long unsigned int) _237;
  __builtin_memmove (_81, SR.2282_100, _239);

  <bb 66>:
  # prephitmp_193 = PHI <pretmp_140(64), _239(65)>
  __result_241 = _81 + prephitmp_193;
  # DEBUG __q => __result_241
  # DEBUG this => NULL
  # DEBUG __x => __result_241
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => __result_241
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG this => NULL
  # DEBUG __x => D#2984
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => D#2984
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG D#974 => __last
  # DEBUG D#974 => __last
  # DEBUG __it$D27024$_M_p => D#2984
  # DEBUG __it$D27024$_M_offset => D#2983
  # DEBUG __it$D27024$_M_p => D#2984
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __it$D26904$_M_p => __result_241
  # DEBUG __it$D26904$_M_offset => 0
  # DEBUG __it$D27024$_M_p => D#2984
  # DEBUG __it$D27024$_M_offset => D#2983
  # DEBUG __it$D27024$_M_p => D#2984
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __result => __result_241
  # DEBUG __result$8 => 0
  # DEBUG __simple => 0
  # DEBUG __result => __result_241
  # DEBUG __result$8 => 0
  # DEBUG __first$_M_p => D#2984
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __result_241
  # DEBUG __result$8 => 0
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  __n_276 = (_Distance) __first$8_421;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __result_241
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => D#2984
  # DEBUG __n => __n_276
  if (__n_276 == 0)
    goto <bb 80>;
  else
    goto <bb 67>;

  <bb 67>:

  <bb 68>:
  # __n_403 = PHI <__n_276(67), __n_298(78)>
  # __first$8_404 = PHI <0(67), __first$8_300(78)>
  # __first_405 = PHI <__first_394(67), __first_299(78)>
  # __result$8_406 = PHI <0(67), __result$8_302(78)>
  # __result_410 = PHI <__result_241(67), __result_301(78)>
  # DEBUG __result$8 => __result$8_406
  # DEBUG __result$_M_p => __result_410
  # DEBUG __first$8 => __first$8_404
  # DEBUG __first$_M_p => __first_405
  # DEBUG __n => __n_403
  # DEBUG D#29 => &__first
  # DEBUG D#29 => &__first
  # DEBUG this => D#29
  # DEBUG this => D#29
  _282 = 1 << __first$8_404;
  # DEBUG this => NULL
  # DEBUG __x => __first_405
  # DEBUG __y => _282
  # DEBUG this => NULL
  _284 = *__first_405;
  _285 = _282 & _284;
  # DEBUG D#21 => &__result
  # DEBUG D#21 => &__result
  # DEBUG this => D#21
  # DEBUG this => D#21
  _287 = 1 << __result$8_406;
  # DEBUG this => NULL
  # DEBUG __x => __result_410
  # DEBUG __y => _287
  # DEBUG this => NULL
  # DEBUG __x => _285 != 0
  if (_285 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  _289 = *__result_410;
  _290 = _287 | _289;
  goto <bb 71>;

  <bb 70>:
  _291 = *__result_410;
  _292 = ~_287;
  _293 = _291 & _292;

  <bb 71>:
  # cstore_413 = PHI <_290(69), _293(70)>
  *__result_410 = cstore_413;
  # DEBUG this => &__first
  # DEBUG D#30 => &__first.D.27024
  # DEBUG this => D#30
  # DEBUG __first$8 => __first$8_404 + 1
  if (__first$8_404 == 63)
    goto <bb 73>;
  else
    goto <bb 72>;

  <bb 72>:
  __first$8_294 = __first$8_404 + 1;
  goto <bb 74>;

  <bb 73>:
  # DEBUG __first$8 => 0
  __first_295 = __first_405 + 8;
  # DEBUG __first$_M_p => __first_295

  <bb 74>:
  # __first_299 = PHI <__first_405(72), __first_295(73)>
  # __first$8_300 = PHI <__first$8_294(72), 0(73)>
  # DEBUG __first$8 => __first$8_300
  # DEBUG __first$_M_p => __first_299
  # DEBUG this => &__result
  # DEBUG D#22 => &__result.D.26904
  # DEBUG this => D#22
  # DEBUG __result$8 => __result$8_406 + 1
  if (__result$8_406 == 63)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  __result$8_296 = __result$8_406 + 1;
  goto <bb 77>;

  <bb 76>:
  # DEBUG __result$8 => 0
  __result_297 = __result_410 + 8;
  # DEBUG __result$_M_p => __result_297

  <bb 77>:
  # __result_301 = PHI <__result_410(75), __result_297(76)>
  # __result$8_302 = PHI <__result$8_296(75), 0(76)>
  # DEBUG __result$8 => __result$8_302
  # DEBUG __result$_M_p => __result_301
  __n_298 = __n_403 + -1;
  # DEBUG __n => __n_298
  # DEBUG __result$8 => __result$8_302
  # DEBUG __result$_M_p => __result_301
  # DEBUG __first$8 => __first$8_300
  # DEBUG __first$_M_p => __first_299
  # DEBUG __n => __n_298
  if (__n_298 == 0)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  goto <bb 68>;

  <bb 79>:
  # __result_399 = PHI <__result_301(77)>
  # __result$8_386 = PHI <__result$8_302(77)>
  pretmp_128 = (long int) __result$8_386;

  <bb 80>:
  # __result$8_409 = PHI <__result$8_386(79), 0(66)>
  # __result_175 = PHI <__result_399(79), __result_241(66)>
  # prephitmp_257 = PHI <pretmp_128(79), 0(66)>
  # DEBUG __result => __result_175
  # DEBUG __result$8 => __result$8_409
  MEM[(struct _Bit_iterator *)&__i] = __result_175;
  MEM[(struct _Bit_iterator *)&__i + 8B] = __result$8_409;
  # DEBUG __i => __result_175
  # DEBUG __i$8 => __result$8_409
  __n.423_16 = (long int) __n_2(D);
  # DEBUG this => &__i
  # DEBUG __i => __n.423_16
  # DEBUG __tmp$_M_p => __result_175
  # DEBUG __tmp$_M_offset => __result$8_409
  # DEBUG this => &__tmp
  # DEBUG __i => __n.423_16
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => __n.423_16
  __n_88 = __n.423_16 + prephitmp_257;
  # DEBUG __n => __n_88
  _89 = __n_88 / 64;
  _90 = (long unsigned int) _89;
  _91 = _90 * 8;
  __result$_M_p_92 = __result_175 + _91;
  # DEBUG __tmp$_M_p => __result$_M_p_92
  __n_93 = __n_88 % 64;
  # DEBUG __n => __n_93
  if (__n_93 < 0)
    goto <bb 81>;
  else
    goto <bb 111>;

  <bb 81>:
  __n_94 = __n_93 + 64;
  # DEBUG __n => __n_94
  __it$D26904$_M_p_95 = __result$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __it$D26904$_M_p_95
  # DEBUG __tmp$_M_p => __it$D26904$_M_p_95
  # DEBUG __n => __n_94
  _305 = (unsigned int) __n_94;
  # DEBUG __tmp$_M_offset => _305
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  MEM[(struct _Bit_iterator *)&D.93248] = __it$D26904$_M_p_95;
  MEM[(struct _Bit_iterator *)&D.93248 + 8B] = _305;
  std::fill (__i, D.93248, &__x);
  # DEBUG this => &__i
  # DEBUG __i => __n.423_16
  # DEBUG __tmp$_M_p => __result_175
  # DEBUG __tmp$_M_offset => __result$8_409
  # DEBUG this => &__tmp
  # DEBUG __i => __n.423_16
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => __n.423_16
  # DEBUG __n => __n_88
  # DEBUG __tmp$_M_p => __result$_M_p_92
  # DEBUG __n => __n_93
  # DEBUG __n => __n_94
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  # DEBUG this => &__i
  # DEBUG __i => __n.423_16
  # DEBUG __tmp$_M_offset => __result$8_409
  # DEBUG this => &__tmp
  # DEBUG __i => __n.423_16
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => __n.423_16
  # DEBUG __tmp$_M_p => __result$_M_p_92
  # DEBUG __n => __n_93
  # DEBUG __n => __n_94
  # DEBUG __tmp$_M_p => __it$D26904$_M_p_95

  <bb 82>:
  # __result$_M_p_86 = PHI <__result$_M_p_92(111), __it$D26904$_M_p_95(81)>
  # prephitmp_434 = PHI <_252(111), _305(81)>
  # DEBUG __tmp$_M_p => __result$_M_p_86
  # DEBUG __n => NULL
  # DEBUG __tmp$_M_offset => D#2979
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  # DEBUG this => this_4(D)
  __it$D26904$_M_p_111 = MEM[(struct vector *)this_4(D) + 16B];
  __it$D26904$_M_offset_112 = MEM[(struct vector *)this_4(D) + 24B];
  # DEBUG D#1387 => __position
  # DEBUG D#1387 => __position
  # DEBUG D#1388 => D.93250
  # DEBUG D#1388 => D.93250
  # DEBUG D#1389 => D.93249
  # DEBUG D#1389 => D.93249
  # DEBUG __it$D26904$_M_p => __it$D26904$_M_p_111
  # DEBUG __it$D26904$_M_offset => __it$D26904$_M_offset_112
  # DEBUG __it$D26904$_M_p => D#2984
  # DEBUG __it$D26904$_M_offset => D#2983
  # DEBUG __it$D26904$_M_p => __result$_M_p_86
  # DEBUG __it$D26904$_M_offset => D#2979
  # DEBUG __it$D26904$_M_p => __it$D26904$_M_p_111
  # DEBUG __it$D26904$_M_offset => __it$D26904$_M_offset_112
  # DEBUG __it$D26904$_M_p => D#2984
  # DEBUG __it$D26904$_M_offset => D#2983
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => D#2984
  # DEBUG __first$8 => D#2983
  # DEBUG __result$_M_p => __result$_M_p_86
  # DEBUG __result$8 => D#2979
  # DEBUG D#17 => &__last.D.26904
  # DEBUG D#17 => &__last.D.26904
  # DEBUG D#18 => &__first.D.26904
  # DEBUG D#18 => &__first.D.26904
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _314 = (long int) __it$D26904$_M_p_111;
  _316 = _314 - __last.51_235;
  _317 = _316 * 8;
  _318 = (long int) __it$D26904$_M_offset_112;
  _319 = _317 + _318;
  __n_321 = _319 - __n_276;
  # DEBUG __n => NULL
  # DEBUG __result$8 => D#2979
  # DEBUG __result$_M_p => __result$_M_p_86
  # DEBUG __first$8 => D#2983
  # DEBUG __first$_M_p => D#2984
  # DEBUG __n => __n_321
  if (__n_321 <= 0)
    goto <bb 96>;
  else
    goto <bb 83>;

  <bb 83>:

  <bb 84>:
  # __n_380 = PHI <__n_321(83), __n_340(95)>
  # __first$8_422 = PHI <__first$8_421(83), __first$8_342(95)>
  # __result$8_423 = PHI <prephitmp_434(83), __result$8_344(95)>
  # __first_425 = PHI <__first_394(83), __first_341(95)>
  # __result$_M_p_426 = PHI <__result$_M_p_86(83), __result$_M_p_343(95)>
  # DEBUG __result$8 => __result$8_423
  # DEBUG __result$_M_p => __result$_M_p_426
  # DEBUG __first$8 => __first$8_422
  # DEBUG __first$_M_p => __first_425
  # DEBUG __n => __n_380
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _324 = 1 << __first$8_422;
  # DEBUG this => NULL
  # DEBUG __x => __first_425
  # DEBUG __y => _324
  # DEBUG D#21 => &__result
  # DEBUG D#21 => &__result
  # DEBUG this => D#21
  # DEBUG this => D#21
  _326 = 1 << __result$8_423;
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_426
  # DEBUG __y => _326
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG this => NULL
  _328 = *__first_425;
  _329 = _324 & _328;
  # DEBUG this => NULL
  # DEBUG __x => _329 != 0
  if (_329 != 0)
    goto <bb 85>;
  else
    goto <bb 86>;

  <bb 85>:
  _331 = *__result$_M_p_426;
  _332 = _326 | _331;
  goto <bb 87>;

  <bb 86>:
  _333 = *__result$_M_p_426;
  _334 = ~_326;
  _335 = _333 & _334;

  <bb 87>:
  # cstore_432 = PHI <_332(85), _335(86)>
  *__result$_M_p_426 = cstore_432;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$8 => __first$8_422 + 1
  if (__first$8_422 == 63)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  __first$8_336 = __first$8_422 + 1;
  goto <bb 90>;

  <bb 89>:
  # DEBUG __first$8 => 0
  __first_337 = __first_425 + 8;
  # DEBUG __first$_M_p => __first_337

  <bb 90>:
  # __first_341 = PHI <__first_425(88), __first_337(89)>
  # __first$8_342 = PHI <__first$8_336(88), 0(89)>
  # DEBUG __first$8 => __first$8_342
  # DEBUG __first$_M_p => __first_341
  # DEBUG this => &__result
  # DEBUG D#22 => &__result.D.26904
  # DEBUG this => D#22
  # DEBUG __result$8 => __result$8_423 + 1
  if (__result$8_423 == 63)
    goto <bb 92>;
  else
    goto <bb 91>;

  <bb 91>:
  __result$8_338 = __result$8_423 + 1;
  goto <bb 93>;

  <bb 92>:
  # DEBUG __result$8 => 0
  __result$_M_p_339 = __result$_M_p_426 + 8;
  # DEBUG __result$_M_p => __result$_M_p_339

  <bb 93>:
  # __result$_M_p_343 = PHI <__result$_M_p_426(91), __result$_M_p_339(92)>
  # __result$8_344 = PHI <__result$8_338(91), 0(92)>
  # DEBUG __result$8 => __result$8_344
  # DEBUG __result$_M_p => __result$_M_p_343
  __n_340 = __n_380 + -1;
  # DEBUG __n => __n_340
  # DEBUG __result$8 => __result$8_344
  # DEBUG __result$_M_p => __result$_M_p_343
  # DEBUG __first$8 => __first$8_342
  # DEBUG __first$_M_p => __first_341
  # DEBUG __n => __n_340
  if (__n_340 <= 0)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  # __result$_M_p_379 = PHI <__result$_M_p_343(93)>
  # __result$8_378 = PHI <__result$8_344(93)>
  goto <bb 96>;

  <bb 95>:
  goto <bb 84>;

  <bb 96>:
  # __result$8_424 = PHI <__result$8_378(94), prephitmp_434(82)>
  # __result$_M_p_427 = PHI <__result$_M_p_379(94), __result$_M_p_86(82)>
  MEM[(struct _Bit_iterator *)this_4(D) + 16B] = __result$_M_p_427;
  MEM[(struct _Bit_iterator *)this_4(D) + 24B] = __result$8_424;
  _18 = &this_4(D)->D.43009;
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_18);
  # DEBUG __n => NULL
  _20 = _81 + prephitmp_365;
  this_4(D)->D.43009._M_impl._M_end_of_storage = _20;
  MEM[(struct _Bit_iterator *)this_4(D)] = _81;
  MEM[(struct _Bit_iterator *)this_4(D) + 8B] = 0;
  # DEBUG D#1391 => {CLOBBER}
  # DEBUG __start$_M_p => D#1391
  # DEBUG D#1392 => {CLOBBER}
  # DEBUG __start$_M_offset => D#1392
  __i ={v} {CLOBBER};
  # DEBUG D#1393 => {CLOBBER}
  # DEBUG __i => D#1393
  # DEBUG D#1394 => {CLOBBER}
  # DEBUG __i$8 => D#1394

  <bb 97>:
  return;

  <bb 98>:
  D.136621 ={v} {CLOBBER};
  # DEBUG this => &D.136622
  # DEBUG __x => __last$_M_p_67
  # DEBUG __y => 0
  # DEBUG D#20 => &D.136622.D.26904
  # DEBUG this => D#20
  # DEBUG __x => __last$_M_p_67
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __last$_M_p => __last$_M_p_67
  # DEBUG __last$_M_offset => _66
  # DEBUG __x => _165
  # DEBUG __first$_M_p => __last$_M_p_67
  # DEBUG __first$_M_offset => 0
  if (_165 != 0)
    goto <bb 99>;
  else
    goto <bb 100>;

  <bb 99>:
  goto <bb 40>;

  <bb 100>:

  <bb 101>:
  # __last$_M_p_415 = PHI <__last$_M_p_67(100), __last$_M_p_268(106)>
  # __first$_M_offset_84 = PHI <0(100), __first$_M_offset_267(106)>
  # DEBUG __first$_M_offset => __first$_M_offset_84
  # DEBUG __first$_M_p => __last$_M_p_415
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (__last$_M_p_67 == __last$_M_p_415)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  # DEBUG __first$_M_offset => __first$_M_offset_84
  # DEBUG __first$_M_p => __last$_M_p_415
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  # DEBUG this => &__first.D.26904
  # DEBUG __i => &__last.D.26904
  if (_66 == __first$_M_offset_84)
    goto <bb 109>;
  else
    goto <bb 103>;

  <bb 103>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _260 = 1 << __first$_M_offset_84;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_415
  # DEBUG __y => _260
  # DEBUG this => NULL
  # DEBUG __x => _165
  _435 = *__last$_M_p_415;
  _213 = ~_260;
  _123 = _435 & _213;
  *__last$_M_p_415 = _123;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$_M_offset_84 + 1
  if (__first$_M_offset_84 == 63)
    goto <bb 105>;
  else
    goto <bb 104>;

  <bb 104>:
  __first$_M_offset_437 = __first$_M_offset_84 + 1;
  goto <bb 106>;

  <bb 105>:
  # DEBUG __first$_M_offset => 0
  __last$_M_p_436 = __last$_M_p_415 + 8;
  # DEBUG __first$_M_p => __last$_M_p_436

  <bb 106>:
  # __last$_M_p_268 = PHI <__last$_M_p_415(104), __last$_M_p_436(105)>
  # __first$_M_offset_267 = PHI <__first$_M_offset_437(104), 0(105)>
  goto <bb 101>;

  <bb 107>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _203 = 1 << __first$8_200;
  # DEBUG this => NULL
  # DEBUG __x => __first_198
  # DEBUG __y => _203
  # DEBUG this => NULL
  # DEBUG __x => _165
  _204 = *__first_198;
  _205 = _203 | _204;
  *__first_198 = _205;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$8_200 + 1
  if (__first$8_200 == 63)
    goto <bb 37>;
  else
    goto <bb 34>;

  <bb 108>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _184 = 1 << __first$_M_offset_181;
  # DEBUG this => NULL
  # DEBUG __x => __last$_M_p_179
  # DEBUG __y => _184
  # DEBUG this => NULL
  # DEBUG __x => _165
  _185 = *__last$_M_p_179;
  _186 = _184 | _185;
  *__last$_M_p_179 = _186;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$_M_offset_181 + 1
  if (__first$_M_offset_181 == 63)
    goto <bb 42>;
  else
    goto <bb 38>;

  <bb 109>:
  D.136622 ={v} {CLOBBER};
  goto <bb 55>;

  <bb 110>:
  # DEBUG D#21 => &__first
  # DEBUG D#21 => &__first
  # DEBUG this => D#21
  # DEBUG this => D#21
  _222 = 1 << __first$8_219;
  # DEBUG this => NULL
  # DEBUG __x => __first_217
  # DEBUG __y => _222
  # DEBUG this => NULL
  # DEBUG __x => _174
  _223 = *__first_217;
  _224 = _222 | _223;
  *__first_217 = _224;
  # DEBUG this => &__first
  # DEBUG D#22 => &__first.D.26904
  # DEBUG this => D#22
  # DEBUG __first$_M_offset => __first$8_219 + 1
  if (__first$8_219 == 63)
    goto <bb 54>;
  else
    goto <bb 51>;

  <bb 111>:
  # DEBUG __tmp$_M_p => __result$_M_p_92
  # DEBUG __n => __n_93
  _252 = (unsigned int) __n_93;
  # DEBUG __tmp$_M_offset => _252
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  MEM[(struct _Bit_iterator *)&D.93248] = __result$_M_p_92;
  MEM[(struct _Bit_iterator *)&D.93248 + 8B] = _252;
  std::fill (__i, D.93248, &__x);
  # DEBUG this => &__i
  # DEBUG __i => __n.423_16
  # DEBUG __tmp$_M_p => __result_175
  # DEBUG __tmp$_M_offset => __result$8_409
  # DEBUG this => &__tmp
  # DEBUG __i => __n.423_16
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => __n.423_16
  # DEBUG __n => __n_88
  # DEBUG __tmp$_M_p => __result$_M_p_92
  # DEBUG __n => __n_93
  goto <bb 82>;

}



;; Function std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt5dequeIP4FlitSaIS1_EEC2ERKS3_, funcdef_no=2358, decl_uid=44048, cgraph_uid=707, symbol_order=708)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct deque * const this, const struct deque & __x)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.4655;
  struct Flit * * SR.4654;
  struct Flit * * SR.4653;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137004;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.136979;
  struct _Deque_iterator D.136978;
  struct _Deque_iterator D.136977;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.136959;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.136945;
  struct _Deque_iterator D.136944;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.88240;
  struct _Deque_iterator D.88239;
  struct _Deque_iterator D.67524;
  struct _Deque_base * _7;
  struct Flit * * _9;
  struct Flit * * _10;
  struct Flit * * _13;
  struct Flit * * * _15;
  struct Flit * * _17;
  struct Flit * * * _18;
  struct Flit * * * _19;
  long int _20;
  struct Flit * * * _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  struct Flit * * _27;
  long int _28;
  struct Flit * * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  struct Flit * * _34;
  long int _35;
  struct Flit * * _36;
  long int _37;
  long int _38;
  long int _39;
  difference_type _40;
  size_type _41;
  long int _97;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _105;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _112;
  long int _114;
  long int _115;
  long int _116;
  struct Flit * _121;
  struct Flit * * _126;
  struct Flit * * * _138;
  struct Flit * * _139;
  struct Flit * * _140;

  <bb 2>:
  # DEBUG this => __x_2(D)
  # DEBUG D#209 => &__x_2(D)->D.44077._M_impl._M_start
  # DEBUG D#210 => &__x_2(D)->D.44077._M_impl._M_finish
  # DEBUG __x => D#210
  # DEBUG __y => D#209
  # DEBUG __size => 8
  _19 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _20 = (long int) _19;
  _21 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _22 = (long int) _21;
  _23 = _20 - _22;
  _24 = _23 /[ex] 8;
  _25 = _24 + -1;
  _26 = _25 * 64;
  _27 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _28 = (long int) _27;
  _29 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _30 = (long int) _29;
  _31 = _28 - _30;
  _32 = _31 /[ex] 8;
  _33 = _26 + _32;
  _34 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _35 = (long int) _34;
  _36 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _37 = (long int) _36;
  _38 = _35 - _37;
  _39 = _38 /[ex] 8;
  _40 = _33 + _39;
  _41 = (size_type) _40;
  # DEBUG D#1825 => &__x_2(D)->D.44077
  # DEBUG this => D#1825
  # DEBUG __a => NULL
  _7 = &this_6(D)->D.44077;
  # DEBUG this => _7
  # DEBUG __a => NULL
  # DEBUG __num_elements => _41
  # DEBUG D#1581 => &_7->_M_impl
  # DEBUG this => D#1581
  # DEBUG __a => NULL
  # DEBUG this => D#1581
  # DEBUG __a => NULL
  # DEBUG this => D#1581
  # DEBUG D.103517 => NULL
  MEM[(struct _Deque_impl *)this_6(D)]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_6(D)]._M_map_size = 0;
  # DEBUG D#794 => &D#1581->_M_start
  # DEBUG this => D#794
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_node = 0B;
  # DEBUG D#793 => &D#1581->_M_finish
  # DEBUG this => D#793
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_7, _41);
  # DEBUG D#1826 => &this_6(D)->D.44077
  # DEBUG this => D#1826
  # DEBUG D#1827 => &this_6(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.67524
  # DEBUG __x => D#1827
  _9 = MEM[(const struct iterator &)this_6(D) + 16]._M_cur;
  _17 = MEM[(const struct iterator &)this_6(D) + 16]._M_last;
  _18 = MEM[(const struct iterator &)this_6(D) + 16]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#207 => &__x_2(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.88239
  # DEBUG __x => D#207
  _10 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#3001 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _15 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#208 => &__x_2(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.88240
  # DEBUG __x => D#208
  __first$_M_cur_8 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  # DEBUG D#3002 => MEM[(const struct iterator &)__x_2(D) + 16]._M_first
  __first$_M_last_4 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  __first$_M_node_3 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  # DEBUG __result => &D.67524
  # DEBUG D.136941 => D#1824
  # DEBUG this => &D.136945
  # DEBUG __x => &D.67524
  # DEBUG __result => &D.136945
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.136945
  # DEBUG __result => NULL
  # DEBUG this => &D.136959
  # DEBUG __x => NULL
  # DEBUG __result => &D.136959
  # DEBUG this => &D.136979
  # DEBUG __x => &D.136959
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#3001
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#3001
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#3002
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#3002
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __result => &D.136979
  # DEBUG this => NULL
  # DEBUG __x => &D.136979
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#3001
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#3001
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#3002
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#3002
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __first => __first$_M_cur_8
  # DEBUG __first$8 => D#3002
  # DEBUG __first$16 => __first$_M_last_4
  # DEBUG __first$24 => __first$_M_node_3
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.137004
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_8
  # DEBUG __first$_M_first => D#3002
  # DEBUG __first$_M_last => __first$_M_last_4
  # DEBUG __first$_M_node => __first$_M_node_3
  # DEBUG __result => &D.137004
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _97 = (long int) _15;
  _99 = (long int) __first$_M_node_3;
  _100 = _97 - _99;
  _101 = _100 /[ex] 8;
  _102 = _101 + -1;
  _103 = _102 * 64;
  _105 = (long int) _10;
  _107 = (long int) _13;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _103 + _109;
  _112 = (long int) __first$_M_last_4;
  _114 = (long int) __first$_M_cur_8;
  _115 = _112 - _114;
  _116 = _115 /[ex] 8;
  __n_117 = _110 + _116;
  # DEBUG __n => __n_117
  # DEBUG __n => __n_117
  if (__n_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => &D.136944
  # DEBUG __x => &D.137004
  D.137004 ={v} {CLOBBER};
  D.136979 ={v} {CLOBBER};
  D.136959 ={v} {CLOBBER};
  D.136945 ={v} {CLOBBER};
  D.67524 ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __n_54 = PHI <__n_117(4), __n_128(10)>
  # SR.4653_198 = PHI <_9(4), SR.4653_197(10)>
  # SR.4654_195 = PHI <_17(4), SR.4654_194(10)>
  # SR.4655_193 = PHI <_18(4), SR.4655_192(10)>
  # __first$_M_cur_190 = PHI <__first$_M_cur_8(4), __first$_M_cur_189(10)>
  # __first$_M_last_186 = PHI <__first$_M_last_4(4), __first$_M_last_185(10)>
  # __first$_M_node_184 = PHI <__first$_M_node_3(4), __first$_M_node_182(10)>
  # DEBUG __first$_M_node => __first$_M_node_184
  # DEBUG __first$_M_last => __first$_M_last_186
  # DEBUG __first$_M_cur => __first$_M_cur_190
  # DEBUG __n => __n_54
  # DEBUG D#234 => &D.137004
  # DEBUG this => D#234
  # DEBUG D#137 => &__first
  # DEBUG this => D#137
  _121 = MEM[(struct Flit * const &)__first$_M_cur_190];
  *SR.4653_198 = _121;
  # DEBUG this => &__first
  __first$_M_cur_123 = __first$_M_cur_190 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_123
  if (__first$_M_cur_123 == __first$_M_last_186)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => &__first
  __first$_M_node_134 = __first$_M_node_184 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_134
  # DEBUG __first$_M_node => __first$_M_node_134
  __first$_M_cur_135 = MEM[(struct Flit * * *)__first$_M_node_184 + 8B];
  # DEBUG __size => 8
  __first$_M_last_136 = __first$_M_cur_135 + 512;
  # DEBUG __first$_M_last => __first$_M_last_136
  # DEBUG __first$_M_cur => __first$_M_cur_135

  <bb 7>:
  # __first$_M_cur_189 = PHI <__first$_M_cur_123(5), __first$_M_cur_135(6)>
  # __first$_M_last_185 = PHI <__first$_M_last_186(5), __first$_M_last_136(6)>
  # __first$_M_node_182 = PHI <__first$_M_node_184(5), __first$_M_node_134(6)>
  # DEBUG __first$_M_node => __first$_M_node_182
  # DEBUG __first$_M_last => __first$_M_last_185
  # DEBUG __first$_M_cur => __first$_M_cur_189
  # DEBUG this => &D.137004
  _126 = SR.4653_198 + 8;
  if (_126 == SR.4654_195)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &D.137004
  _138 = SR.4655_193 + 8;
  # DEBUG this => &D.137004
  # DEBUG __new_node => _138
  _139 = MEM[(struct Flit * * *)SR.4655_193 + 8B];
  # DEBUG __size => 8
  _140 = _139 + 512;

  <bb 9>:
  # SR.4653_197 = PHI <_126(7), _139(8)>
  # SR.4654_194 = PHI <SR.4654_195(7), _140(8)>
  # SR.4655_192 = PHI <SR.4655_193(7), _138(8)>
  __n_128 = __n_54 + -1;
  # DEBUG __n => __n_128
  # DEBUG __n => __n_128
  if (__n_128 <= 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 5>;

}



;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>] (_ZSt18uninitialized_copyISt15_Deque_iteratorIP4FlitRKS2_PS3_ES0_IS2_RS2_PS2_EET0_T_SB_SA_, funcdef_no=3313, decl_uid=71479, cgraph_uid=1662, symbol_order=1663)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _ForwardIterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.4688;
  struct Flit * * SR.4687;
  struct Flit * * SR.4686;
  struct Flit * * SR.4685;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __last$24;
  struct Flit * * __last$8;
  struct Flit * * __last;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137110;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137085;
  struct _Deque_iterator D.137084;
  struct _Deque_iterator D.137083;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.115152;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Flit * * _4;
  struct Flit * * _5;
  struct Flit * * _6;
  struct Flit * * * _7;
  long int _40;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _48;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _55;
  long int _57;
  long int _58;
  long int _59;
  struct Flit * _64;
  struct Flit * * _69;
  struct Flit * * * _81;
  struct Flit * * _82;
  struct Flit * * _83;

  <bb 2>:
  # DEBUG __assignable => 1
  # DEBUG this => &D.73130
  # DEBUG __x => __result_2(D)
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _7 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  __first$_M_cur_88 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG D#3005 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first$_M_first => D#3005
  __first$_M_last_84 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_84
  __first$_M_node_61 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_61
  __last_11 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last$_M_cur => __last_11
  __last$8_10 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last$_M_first => __last$8_10
  # DEBUG D#3004 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last$_M_last => D#3004
  __last$24_91 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last$_M_node => __last$24_91
  # DEBUG __result => &D.73130
  # DEBUG this => &D.115152
  # DEBUG __x => &D.73130
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#3005
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __last => __last_11
  # DEBUG __last$8 => __last$8_10
  # DEBUG __last$_M_last => D#3004
  # DEBUG __last$24 => __last$24_91
  # DEBUG __result => &D.115152
  # DEBUG this => &D.137085
  # DEBUG __x => &D.115152
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG D#3003 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#3003
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#3003
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#3005
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#3005
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __result => &D.137085
  # DEBUG this => NULL
  # DEBUG __x => &D.137085
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG __it$16 => D#3003
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#3003
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#3005
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#3005
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#3005
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.137110
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG __first$_M_first => D#3005
  # DEBUG __first$_M_last => __first$_M_last_84
  # DEBUG __first$_M_node => __first$_M_node_61
  # DEBUG __result => &D.137110
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _40 = (long int) __last$24_91;
  _42 = (long int) __first$_M_node_61;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _44 + -1;
  _46 = _45 * 64;
  _48 = (long int) __last_11;
  _50 = (long int) __last$8_10;
  _51 = _48 - _50;
  _52 = _51 /[ex] 8;
  _53 = _46 + _52;
  _55 = (long int) __first$_M_last_84;
  _57 = (long int) __first$_M_cur_88;
  _58 = _55 - _57;
  _59 = _58 /[ex] 8;
  __n_60 = _53 + _59;
  # DEBUG __n => __n_60
  # DEBUG __n => __n_60
  if (__n_60 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_12 = PHI <__n_60(3), __n_71(9)>
  # SR.4685_127 = PHI <_4(3), SR.4685_126(9)>
  # SR.4686_124 = PHI <_5(3), SR.4686_123(9)>
  # SR.4687_121 = PHI <_6(3), SR.4687_119(9)>
  # SR.4688_115 = PHI <_7(3), SR.4688_114(9)>
  # __first$_M_cur_112 = PHI <__first$_M_cur_88(3), __first$_M_cur_111(9)>
  # __first$_M_last_106 = PHI <__first$_M_last_84(3), __first$_M_last_105(9)>
  # __first$_M_node_104 = PHI <__first$_M_node_61(3), __first$_M_node_103(9)>
  # DEBUG __first$_M_node => __first$_M_node_104
  # DEBUG __first$_M_last => __first$_M_last_106
  # DEBUG __first$_M_cur => __first$_M_cur_112
  # DEBUG __n => __n_12
  # DEBUG D#234 => &D.137110
  # DEBUG this => D#234
  # DEBUG D#137 => &__first
  # DEBUG this => D#137
  _64 = MEM[(struct Flit * const &)__first$_M_cur_112];
  *SR.4685_127 = _64;
  # DEBUG this => &__first
  __first$_M_cur_66 = __first$_M_cur_112 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_66
  if (__first$_M_cur_66 == __first$_M_last_106)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &__first
  __first$_M_node_77 = __first$_M_node_104 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_77
  # DEBUG __first$_M_node => __first$_M_node_77
  __first$_M_cur_78 = MEM[(struct Flit * * *)__first$_M_node_104 + 8B];
  # DEBUG __size => 8
  __first$_M_last_79 = __first$_M_cur_78 + 512;
  # DEBUG __first$_M_last => __first$_M_last_79
  # DEBUG __first$_M_cur => __first$_M_cur_78

  <bb 6>:
  # __first$_M_cur_111 = PHI <__first$_M_cur_66(4), __first$_M_cur_78(5)>
  # __first$_M_last_105 = PHI <__first$_M_last_106(4), __first$_M_last_79(5)>
  # __first$_M_node_103 = PHI <__first$_M_node_104(4), __first$_M_node_77(5)>
  # DEBUG __first$_M_node => __first$_M_node_103
  # DEBUG __first$_M_last => __first$_M_last_105
  # DEBUG __first$_M_cur => __first$_M_cur_111
  # DEBUG this => &D.137110
  _69 = SR.4685_127 + 8;
  if (_69 == SR.4687_121)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.137110
  _81 = SR.4688_115 + 8;
  # DEBUG this => &D.137110
  # DEBUG __new_node => _81
  _82 = MEM[(struct Flit * * *)SR.4688_115 + 8B];
  # DEBUG __size => 8
  _83 = _82 + 512;

  <bb 8>:
  # SR.4685_126 = PHI <_69(6), _82(7)>
  # SR.4686_123 = PHI <SR.4686_124(6), _82(7)>
  # SR.4687_119 = PHI <SR.4687_121(6), _83(7)>
  # SR.4688_114 = PHI <SR.4688_115(6), _81(7)>
  __n_71 = __n_12 + -1;
  # DEBUG __n => __n_71
  # DEBUG __n => __n_71
  if (__n_71 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.4688_8 = PHI <SR.4688_114(8)>
  # SR.4687_87 = PHI <SR.4687_119(8)>
  # SR.4686_9 = PHI <SR.4686_123(8)>
  # SR.4685_90 = PHI <SR.4685_126(8)>

  <bb 12>:

  <bb 11>:
  # SR.4685_125 = PHI <SR.4685_90(12), _4(2)>
  # SR.4686_122 = PHI <SR.4686_9(12), _5(2)>
  # SR.4687_118 = PHI <SR.4687_87(12), _6(2)>
  # SR.4688_113 = PHI <SR.4688_8(12), _7(2)>
  # DEBUG this => _3(D)
  # DEBUG __x => &D.137110
  _3(D)->_M_cur = SR.4685_125;
  _3(D)->_M_first = SR.4686_122;
  _3(D)->_M_last = SR.4687_118;
  _3(D)->_M_node = SR.4688_113;
  D.137110 ={v} {CLOBBER};
  D.137085 ={v} {CLOBBER};
  D.115152 ={v} {CLOBBER};
  return _3(D);

}



;; Function std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt5dequeIP6CreditSaIS1_EEC2ERKS3_, funcdef_no=2371, decl_uid=59573, cgraph_uid=720, symbol_order=721)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct deque * const this, const struct deque & __x)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.4710;
  struct Credit * * SR.4709;
  struct Credit * * SR.4708;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137278;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137253;
  struct _Deque_iterator D.137252;
  struct _Deque_iterator D.137251;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137233;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137219;
  struct _Deque_iterator D.137218;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.89488;
  struct _Deque_iterator D.89487;
  struct _Deque_iterator D.67825;
  struct _Deque_base * _7;
  struct Credit * * _9;
  struct Credit * * _10;
  struct Credit * * _13;
  struct Credit * * * _15;
  struct Credit * * _17;
  struct Credit * * * _18;
  struct Credit * * * _19;
  long int _20;
  struct Credit * * * _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  struct Credit * * _27;
  long int _28;
  struct Credit * * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  struct Credit * * _34;
  long int _35;
  struct Credit * * _36;
  long int _37;
  long int _38;
  long int _39;
  difference_type _40;
  size_type _41;
  long int _97;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _105;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _112;
  long int _114;
  long int _115;
  long int _116;
  struct Credit * _121;
  struct Credit * * _126;
  struct Credit * * * _138;
  struct Credit * * _139;
  struct Credit * * _140;

  <bb 2>:
  # DEBUG this => __x_2(D)
  # DEBUG D#389 => &__x_2(D)->D.59602._M_impl._M_start
  # DEBUG D#390 => &__x_2(D)->D.59602._M_impl._M_finish
  # DEBUG __x => D#390
  # DEBUG __y => D#389
  # DEBUG __size => 8
  _19 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _20 = (long int) _19;
  _21 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _22 = (long int) _21;
  _23 = _20 - _22;
  _24 = _23 /[ex] 8;
  _25 = _24 + -1;
  _26 = _25 * 64;
  _27 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _28 = (long int) _27;
  _29 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _30 = (long int) _29;
  _31 = _28 - _30;
  _32 = _31 /[ex] 8;
  _33 = _26 + _32;
  _34 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _35 = (long int) _34;
  _36 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _37 = (long int) _36;
  _38 = _35 - _37;
  _39 = _38 /[ex] 8;
  _40 = _33 + _39;
  _41 = (size_type) _40;
  # DEBUG D#1836 => &__x_2(D)->D.59602
  # DEBUG this => D#1836
  # DEBUG __a => NULL
  _7 = &this_6(D)->D.59602;
  # DEBUG this => _7
  # DEBUG __a => NULL
  # DEBUG __num_elements => _41
  # DEBUG D#1612 => &_7->_M_impl
  # DEBUG this => D#1612
  # DEBUG __a => NULL
  # DEBUG this => D#1612
  # DEBUG __a => NULL
  # DEBUG this => D#1612
  # DEBUG D.103570 => NULL
  MEM[(struct _Deque_impl *)this_6(D)]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_6(D)]._M_map_size = 0;
  # DEBUG D#806 => &D#1612->_M_start
  # DEBUG this => D#806
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_node = 0B;
  # DEBUG D#805 => &D#1612->_M_finish
  # DEBUG this => D#805
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_7, _41);
  # DEBUG D#1837 => &this_6(D)->D.59602
  # DEBUG this => D#1837
  # DEBUG D#1838 => &this_6(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.67825
  # DEBUG __x => D#1838
  _9 = MEM[(const struct iterator &)this_6(D) + 16]._M_cur;
  _17 = MEM[(const struct iterator &)this_6(D) + 16]._M_last;
  _18 = MEM[(const struct iterator &)this_6(D) + 16]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#224 => &__x_2(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.89487
  # DEBUG __x => D#224
  _10 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#3007 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _15 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#225 => &__x_2(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.89488
  # DEBUG __x => D#225
  __first$_M_cur_8 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  # DEBUG D#3008 => MEM[(const struct iterator &)__x_2(D) + 16]._M_first
  __first$_M_last_4 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  __first$_M_node_3 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  # DEBUG __result => &D.67825
  # DEBUG D.137215 => D#1835
  # DEBUG this => &D.137219
  # DEBUG __x => &D.67825
  # DEBUG __result => &D.137219
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.137219
  # DEBUG __result => NULL
  # DEBUG this => &D.137233
  # DEBUG __x => NULL
  # DEBUG __result => &D.137233
  # DEBUG this => &D.137253
  # DEBUG __x => &D.137233
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#3007
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#3007
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#3008
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#3008
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __result => &D.137253
  # DEBUG this => NULL
  # DEBUG __x => &D.137253
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#3007
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#3007
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#3008
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#3008
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __first => __first$_M_cur_8
  # DEBUG __first$8 => D#3008
  # DEBUG __first$16 => __first$_M_last_4
  # DEBUG __first$24 => __first$_M_node_3
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.137278
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_8
  # DEBUG __first$_M_first => D#3008
  # DEBUG __first$_M_last => __first$_M_last_4
  # DEBUG __first$_M_node => __first$_M_node_3
  # DEBUG __result => &D.137278
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _97 = (long int) _15;
  _99 = (long int) __first$_M_node_3;
  _100 = _97 - _99;
  _101 = _100 /[ex] 8;
  _102 = _101 + -1;
  _103 = _102 * 64;
  _105 = (long int) _10;
  _107 = (long int) _13;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _103 + _109;
  _112 = (long int) __first$_M_last_4;
  _114 = (long int) __first$_M_cur_8;
  _115 = _112 - _114;
  _116 = _115 /[ex] 8;
  __n_117 = _110 + _116;
  # DEBUG __n => __n_117
  # DEBUG __n => __n_117
  if (__n_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => &D.137218
  # DEBUG __x => &D.137278
  D.137278 ={v} {CLOBBER};
  D.137253 ={v} {CLOBBER};
  D.137233 ={v} {CLOBBER};
  D.137219 ={v} {CLOBBER};
  D.67825 ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __n_54 = PHI <__n_117(4), __n_128(10)>
  # SR.4708_198 = PHI <_9(4), SR.4708_197(10)>
  # SR.4709_195 = PHI <_17(4), SR.4709_194(10)>
  # SR.4710_193 = PHI <_18(4), SR.4710_192(10)>
  # __first$_M_cur_190 = PHI <__first$_M_cur_8(4), __first$_M_cur_189(10)>
  # __first$_M_last_186 = PHI <__first$_M_last_4(4), __first$_M_last_185(10)>
  # __first$_M_node_184 = PHI <__first$_M_node_3(4), __first$_M_node_182(10)>
  # DEBUG __first$_M_node => __first$_M_node_184
  # DEBUG __first$_M_last => __first$_M_last_186
  # DEBUG __first$_M_cur => __first$_M_cur_190
  # DEBUG __n => __n_54
  # DEBUG D#254 => &D.137278
  # DEBUG this => D#254
  # DEBUG D#1834 => &__first
  # DEBUG this => D#1834
  _121 = MEM[(struct Credit * const &)__first$_M_cur_190];
  *SR.4708_198 = _121;
  # DEBUG this => &__first
  __first$_M_cur_123 = __first$_M_cur_190 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_123
  if (__first$_M_cur_123 == __first$_M_last_186)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => &__first
  __first$_M_node_134 = __first$_M_node_184 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_134
  # DEBUG __first$_M_node => __first$_M_node_134
  __first$_M_cur_135 = MEM[(struct Credit * * *)__first$_M_node_184 + 8B];
  # DEBUG __size => 8
  __first$_M_last_136 = __first$_M_cur_135 + 512;
  # DEBUG __first$_M_last => __first$_M_last_136
  # DEBUG __first$_M_cur => __first$_M_cur_135

  <bb 7>:
  # __first$_M_cur_189 = PHI <__first$_M_cur_123(5), __first$_M_cur_135(6)>
  # __first$_M_last_185 = PHI <__first$_M_last_186(5), __first$_M_last_136(6)>
  # __first$_M_node_182 = PHI <__first$_M_node_184(5), __first$_M_node_134(6)>
  # DEBUG __first$_M_node => __first$_M_node_182
  # DEBUG __first$_M_last => __first$_M_last_185
  # DEBUG __first$_M_cur => __first$_M_cur_189
  # DEBUG this => &D.137278
  _126 = SR.4708_198 + 8;
  if (_126 == SR.4709_195)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &D.137278
  _138 = SR.4710_193 + 8;
  # DEBUG this => &D.137278
  # DEBUG __new_node => _138
  _139 = MEM[(struct Credit * * *)SR.4710_193 + 8B];
  # DEBUG __size => 8
  _140 = _139 + 512;

  <bb 9>:
  # SR.4708_197 = PHI <_126(7), _139(8)>
  # SR.4709_194 = PHI <SR.4709_195(7), _140(8)>
  # SR.4710_192 = PHI <SR.4710_193(7), _138(8)>
  __n_128 = __n_54 + -1;
  # DEBUG __n => __n_128
  # DEBUG __n => __n_128
  if (__n_128 <= 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 5>;

}



;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>] (_ZSt18uninitialized_copyISt15_Deque_iteratorIP6CreditRKS2_PS3_ES0_IS2_RS2_PS2_EET0_T_SB_SA_, funcdef_no=3335, decl_uid=71540, cgraph_uid=1684, symbol_order=1685)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _ForwardIterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.4743;
  struct Credit * * SR.4742;
  struct Credit * * SR.4741;
  struct Credit * * SR.4740;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __last$24;
  struct Credit * * __last$8;
  struct Credit * * __last;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137384;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137359;
  struct _Deque_iterator D.137358;
  struct _Deque_iterator D.137357;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.115502;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Credit * * _4;
  struct Credit * * _5;
  struct Credit * * _6;
  struct Credit * * * _7;
  long int _40;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _48;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _55;
  long int _57;
  long int _58;
  long int _59;
  struct Credit * _64;
  struct Credit * * _69;
  struct Credit * * * _81;
  struct Credit * * _82;
  struct Credit * * _83;

  <bb 2>:
  # DEBUG __assignable => 1
  # DEBUG this => &D.73450
  # DEBUG __x => __result_2(D)
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _7 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  __first$_M_cur_88 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG D#3011 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first$_M_first => D#3011
  __first$_M_last_84 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_84
  __first$_M_node_61 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_61
  __last_11 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last$_M_cur => __last_11
  __last$8_10 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last$_M_first => __last$8_10
  # DEBUG D#3010 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last$_M_last => D#3010
  __last$24_91 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last$_M_node => __last$24_91
  # DEBUG __result => &D.73450
  # DEBUG this => &D.115502
  # DEBUG __x => &D.73450
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#3011
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __last => __last_11
  # DEBUG __last$8 => __last$8_10
  # DEBUG __last$_M_last => D#3010
  # DEBUG __last$24 => __last$24_91
  # DEBUG __result => &D.115502
  # DEBUG this => &D.137359
  # DEBUG __x => &D.115502
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG D#3009 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#3009
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#3009
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#3011
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#3011
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __result => &D.137359
  # DEBUG this => NULL
  # DEBUG __x => &D.137359
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG __it$16 => D#3009
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#3009
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#3011
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#3011
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#3011
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.137384
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG __first$_M_first => D#3011
  # DEBUG __first$_M_last => __first$_M_last_84
  # DEBUG __first$_M_node => __first$_M_node_61
  # DEBUG __result => &D.137384
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _40 = (long int) __last$24_91;
  _42 = (long int) __first$_M_node_61;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _44 + -1;
  _46 = _45 * 64;
  _48 = (long int) __last_11;
  _50 = (long int) __last$8_10;
  _51 = _48 - _50;
  _52 = _51 /[ex] 8;
  _53 = _46 + _52;
  _55 = (long int) __first$_M_last_84;
  _57 = (long int) __first$_M_cur_88;
  _58 = _55 - _57;
  _59 = _58 /[ex] 8;
  __n_60 = _53 + _59;
  # DEBUG __n => __n_60
  # DEBUG __n => __n_60
  if (__n_60 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_12 = PHI <__n_60(3), __n_71(9)>
  # SR.4740_127 = PHI <_4(3), SR.4740_126(9)>
  # SR.4741_124 = PHI <_5(3), SR.4741_123(9)>
  # SR.4742_121 = PHI <_6(3), SR.4742_119(9)>
  # SR.4743_115 = PHI <_7(3), SR.4743_114(9)>
  # __first$_M_cur_112 = PHI <__first$_M_cur_88(3), __first$_M_cur_111(9)>
  # __first$_M_last_106 = PHI <__first$_M_last_84(3), __first$_M_last_105(9)>
  # __first$_M_node_104 = PHI <__first$_M_node_61(3), __first$_M_node_103(9)>
  # DEBUG __first$_M_node => __first$_M_node_104
  # DEBUG __first$_M_last => __first$_M_last_106
  # DEBUG __first$_M_cur => __first$_M_cur_112
  # DEBUG __n => __n_12
  # DEBUG D#254 => &D.137384
  # DEBUG this => D#254
  # DEBUG D#1834 => &__first
  # DEBUG this => D#1834
  _64 = MEM[(struct Credit * const &)__first$_M_cur_112];
  *SR.4740_127 = _64;
  # DEBUG this => &__first
  __first$_M_cur_66 = __first$_M_cur_112 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_66
  if (__first$_M_cur_66 == __first$_M_last_106)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &__first
  __first$_M_node_77 = __first$_M_node_104 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_77
  # DEBUG __first$_M_node => __first$_M_node_77
  __first$_M_cur_78 = MEM[(struct Credit * * *)__first$_M_node_104 + 8B];
  # DEBUG __size => 8
  __first$_M_last_79 = __first$_M_cur_78 + 512;
  # DEBUG __first$_M_last => __first$_M_last_79
  # DEBUG __first$_M_cur => __first$_M_cur_78

  <bb 6>:
  # __first$_M_cur_111 = PHI <__first$_M_cur_66(4), __first$_M_cur_78(5)>
  # __first$_M_last_105 = PHI <__first$_M_last_106(4), __first$_M_last_79(5)>
  # __first$_M_node_103 = PHI <__first$_M_node_104(4), __first$_M_node_77(5)>
  # DEBUG __first$_M_node => __first$_M_node_103
  # DEBUG __first$_M_last => __first$_M_last_105
  # DEBUG __first$_M_cur => __first$_M_cur_111
  # DEBUG this => &D.137384
  _69 = SR.4740_127 + 8;
  if (_69 == SR.4742_121)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.137384
  _81 = SR.4743_115 + 8;
  # DEBUG this => &D.137384
  # DEBUG __new_node => _81
  _82 = MEM[(struct Credit * * *)SR.4743_115 + 8B];
  # DEBUG __size => 8
  _83 = _82 + 512;

  <bb 8>:
  # SR.4740_126 = PHI <_69(6), _82(7)>
  # SR.4741_123 = PHI <SR.4741_124(6), _82(7)>
  # SR.4742_119 = PHI <SR.4742_121(6), _83(7)>
  # SR.4743_114 = PHI <SR.4743_115(6), _81(7)>
  __n_71 = __n_12 + -1;
  # DEBUG __n => __n_71
  # DEBUG __n => __n_71
  if (__n_71 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.4743_8 = PHI <SR.4743_114(8)>
  # SR.4742_87 = PHI <SR.4742_119(8)>
  # SR.4741_9 = PHI <SR.4741_123(8)>
  # SR.4740_90 = PHI <SR.4740_126(8)>

  <bb 12>:

  <bb 11>:
  # SR.4740_125 = PHI <SR.4740_90(12), _4(2)>
  # SR.4741_122 = PHI <SR.4741_9(12), _5(2)>
  # SR.4742_118 = PHI <SR.4742_87(12), _6(2)>
  # SR.4743_113 = PHI <SR.4743_8(12), _7(2)>
  # DEBUG this => _3(D)
  # DEBUG __x => &D.137384
  _3(D)->_M_cur = SR.4740_125;
  _3(D)->_M_first = SR.4741_122;
  _3(D)->_M_last = SR.4742_118;
  _3(D)->_M_node = SR.4743_113;
  D.137384 ={v} {CLOBBER};
  D.137359 ={v} {CLOBBER};
  D.115502 ={v} {CLOBBER};
  return _3(D);

}



;; Function std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>] (_ZNSt5dequeIPN11EventRouter13tArrivalEventESaIS2_EEC2ERKS4_, funcdef_no=2384, decl_uid=60599, cgraph_uid=733, symbol_order=734)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>] (struct deque * const this, const struct deque & __x)
{
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_cur;
  struct tArrivalEvent * * * SR.4765;
  struct tArrivalEvent * * SR.4764;
  struct tArrivalEvent * * SR.4763;
  struct tArrivalEvent * * * __first$24;
  struct tArrivalEvent * * __first$16;
  struct tArrivalEvent * * __first$8;
  struct tArrivalEvent * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137552;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137527;
  struct _Deque_iterator D.137526;
  struct _Deque_iterator D.137525;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137507;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137493;
  struct _Deque_iterator D.137492;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.90735;
  struct _Deque_iterator D.90734;
  struct _Deque_iterator D.68126;
  struct _Deque_base * _7;
  struct tArrivalEvent * * _9;
  struct tArrivalEvent * * _10;
  struct tArrivalEvent * * _13;
  struct tArrivalEvent * * * _15;
  struct tArrivalEvent * * _17;
  struct tArrivalEvent * * * _18;
  struct tArrivalEvent * * * _19;
  long int _20;
  struct tArrivalEvent * * * _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  struct tArrivalEvent * * _27;
  long int _28;
  struct tArrivalEvent * * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  struct tArrivalEvent * * _34;
  long int _35;
  struct tArrivalEvent * * _36;
  long int _37;
  long int _38;
  long int _39;
  difference_type _40;
  size_type _41;
  long int _97;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _105;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _112;
  long int _114;
  long int _115;
  long int _116;
  struct tArrivalEvent * _121;
  struct tArrivalEvent * * _126;
  struct tArrivalEvent * * * _138;
  struct tArrivalEvent * * _139;
  struct tArrivalEvent * * _140;

  <bb 2>:
  # DEBUG this => __x_2(D)
  # DEBUG D#392 => &__x_2(D)->D.60628._M_impl._M_start
  # DEBUG D#393 => &__x_2(D)->D.60628._M_impl._M_finish
  # DEBUG __x => D#393
  # DEBUG __y => D#392
  # DEBUG __size => 8
  _19 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _20 = (long int) _19;
  _21 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _22 = (long int) _21;
  _23 = _20 - _22;
  _24 = _23 /[ex] 8;
  _25 = _24 + -1;
  _26 = _25 * 64;
  _27 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _28 = (long int) _27;
  _29 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _30 = (long int) _29;
  _31 = _28 - _30;
  _32 = _31 /[ex] 8;
  _33 = _26 + _32;
  _34 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _35 = (long int) _34;
  _36 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _37 = (long int) _36;
  _38 = _35 - _37;
  _39 = _38 /[ex] 8;
  _40 = _33 + _39;
  _41 = (size_type) _40;
  # DEBUG D#1847 => &__x_2(D)->D.60628
  # DEBUG this => D#1847
  # DEBUG __a => NULL
  _7 = &this_6(D)->D.60628;
  # DEBUG this => _7
  # DEBUG __a => NULL
  # DEBUG __num_elements => _41
  # DEBUG D#1664 => &_7->_M_impl
  # DEBUG this => D#1664
  # DEBUG __a => NULL
  # DEBUG this => D#1664
  # DEBUG __a => NULL
  # DEBUG this => D#1664
  # DEBUG D.103623 => NULL
  MEM[(struct _Deque_impl *)this_6(D)]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_6(D)]._M_map_size = 0;
  # DEBUG D#818 => &D#1664->_M_start
  # DEBUG this => D#818
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_node = 0B;
  # DEBUG D#817 => &D#1664->_M_finish
  # DEBUG this => D#817
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_node = 0B;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_initialize_map (_7, _41);
  # DEBUG D#1848 => &this_6(D)->D.60628
  # DEBUG this => D#1848
  # DEBUG D#1849 => &this_6(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.68126
  # DEBUG __x => D#1849
  _9 = MEM[(const struct iterator &)this_6(D) + 16]._M_cur;
  _17 = MEM[(const struct iterator &)this_6(D) + 16]._M_last;
  _18 = MEM[(const struct iterator &)this_6(D) + 16]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#227 => &__x_2(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.90734
  # DEBUG __x => D#227
  _10 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#3013 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _15 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#228 => &__x_2(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.90735
  # DEBUG __x => D#228
  __first$_M_cur_8 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  # DEBUG D#3014 => MEM[(const struct iterator &)__x_2(D) + 16]._M_first
  __first$_M_last_4 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  __first$_M_node_3 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  # DEBUG __result => &D.68126
  # DEBUG D.137489 => D#1846
  # DEBUG this => &D.137493
  # DEBUG __x => &D.68126
  # DEBUG __result => &D.137493
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.137493
  # DEBUG __result => NULL
  # DEBUG this => &D.137507
  # DEBUG __x => NULL
  # DEBUG __result => &D.137507
  # DEBUG this => &D.137527
  # DEBUG __x => &D.137507
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#3013
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#3013
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#3014
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#3014
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __result => &D.137527
  # DEBUG this => NULL
  # DEBUG __x => &D.137527
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#3013
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#3013
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#3014
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#3014
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __first => __first$_M_cur_8
  # DEBUG __first$8 => D#3014
  # DEBUG __first$16 => __first$_M_last_4
  # DEBUG __first$24 => __first$_M_node_3
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.137552
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_8
  # DEBUG __first$_M_first => D#3014
  # DEBUG __first$_M_last => __first$_M_last_4
  # DEBUG __first$_M_node => __first$_M_node_3
  # DEBUG __result => &D.137552
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _97 = (long int) _15;
  _99 = (long int) __first$_M_node_3;
  _100 = _97 - _99;
  _101 = _100 /[ex] 8;
  _102 = _101 + -1;
  _103 = _102 * 64;
  _105 = (long int) _10;
  _107 = (long int) _13;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _103 + _109;
  _112 = (long int) __first$_M_last_4;
  _114 = (long int) __first$_M_cur_8;
  _115 = _112 - _114;
  _116 = _115 /[ex] 8;
  __n_117 = _110 + _116;
  # DEBUG __n => __n_117
  # DEBUG __n => __n_117
  if (__n_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => &D.137492
  # DEBUG __x => &D.137552
  D.137552 ={v} {CLOBBER};
  D.137527 ={v} {CLOBBER};
  D.137507 ={v} {CLOBBER};
  D.137493 ={v} {CLOBBER};
  D.68126 ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __n_54 = PHI <__n_117(4), __n_128(10)>
  # SR.4763_198 = PHI <_9(4), SR.4763_197(10)>
  # SR.4764_195 = PHI <_17(4), SR.4764_194(10)>
  # SR.4765_193 = PHI <_18(4), SR.4765_192(10)>
  # __first$_M_cur_190 = PHI <__first$_M_cur_8(4), __first$_M_cur_189(10)>
  # __first$_M_last_186 = PHI <__first$_M_last_4(4), __first$_M_last_185(10)>
  # __first$_M_node_184 = PHI <__first$_M_node_3(4), __first$_M_node_182(10)>
  # DEBUG __first$_M_node => __first$_M_node_184
  # DEBUG __first$_M_last => __first$_M_last_186
  # DEBUG __first$_M_cur => __first$_M_cur_190
  # DEBUG __n => __n_54
  # DEBUG D#244 => &D.137552
  # DEBUG this => D#244
  # DEBUG D#1845 => &__first
  # DEBUG this => D#1845
  _121 = MEM[(struct tArrivalEvent * const &)__first$_M_cur_190];
  *SR.4763_198 = _121;
  # DEBUG this => &__first
  __first$_M_cur_123 = __first$_M_cur_190 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_123
  if (__first$_M_cur_123 == __first$_M_last_186)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => &__first
  __first$_M_node_134 = __first$_M_node_184 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_134
  # DEBUG __first$_M_node => __first$_M_node_134
  __first$_M_cur_135 = MEM[(struct tArrivalEvent * * *)__first$_M_node_184 + 8B];
  # DEBUG __size => 8
  __first$_M_last_136 = __first$_M_cur_135 + 512;
  # DEBUG __first$_M_last => __first$_M_last_136
  # DEBUG __first$_M_cur => __first$_M_cur_135

  <bb 7>:
  # __first$_M_cur_189 = PHI <__first$_M_cur_123(5), __first$_M_cur_135(6)>
  # __first$_M_last_185 = PHI <__first$_M_last_186(5), __first$_M_last_136(6)>
  # __first$_M_node_182 = PHI <__first$_M_node_184(5), __first$_M_node_134(6)>
  # DEBUG __first$_M_node => __first$_M_node_182
  # DEBUG __first$_M_last => __first$_M_last_185
  # DEBUG __first$_M_cur => __first$_M_cur_189
  # DEBUG this => &D.137552
  _126 = SR.4763_198 + 8;
  if (_126 == SR.4764_195)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &D.137552
  _138 = SR.4765_193 + 8;
  # DEBUG this => &D.137552
  # DEBUG __new_node => _138
  _139 = MEM[(struct tArrivalEvent * * *)SR.4765_193 + 8B];
  # DEBUG __size => 8
  _140 = _139 + 512;

  <bb 9>:
  # SR.4763_197 = PHI <_126(7), _139(8)>
  # SR.4764_194 = PHI <SR.4764_195(7), _140(8)>
  # SR.4765_192 = PHI <SR.4765_193(7), _138(8)>
  __n_128 = __n_54 + -1;
  # DEBUG __n => __n_128
  # DEBUG __n => __n_128
  if (__n_128 <= 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 5>;

}



;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>; _ForwardIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>] (_ZSt18uninitialized_copyISt15_Deque_iteratorIPN11EventRouter13tArrivalEventERKS3_PS4_ES0_IS3_RS3_PS3_EET0_T_SC_SB_, funcdef_no=3357, decl_uid=71601, cgraph_uid=1706, symbol_order=1707)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>; _ForwardIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_cur;
  struct tArrivalEvent * * * SR.4798;
  struct tArrivalEvent * * SR.4797;
  struct tArrivalEvent * * SR.4796;
  struct tArrivalEvent * * SR.4795;
  struct tArrivalEvent * * * __first$24;
  struct tArrivalEvent * * __first$16;
  struct tArrivalEvent * * __first$8;
  struct tArrivalEvent * * __first;
  struct tArrivalEvent * * * __last$24;
  struct tArrivalEvent * * __last$8;
  struct tArrivalEvent * * __last;
  struct tArrivalEvent * * * __first$24;
  struct tArrivalEvent * * __first$16;
  struct tArrivalEvent * * __first$8;
  struct tArrivalEvent * * __first;
  struct tArrivalEvent * * * __last$_M_node;
  struct tArrivalEvent * * __last$_M_last;
  struct tArrivalEvent * * __last$_M_first;
  struct tArrivalEvent * * __last$_M_cur;
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_first;
  struct tArrivalEvent * * __first$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137658;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137633;
  struct _Deque_iterator D.137632;
  struct _Deque_iterator D.137631;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.115852;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct tArrivalEvent * * _4;
  struct tArrivalEvent * * _5;
  struct tArrivalEvent * * _6;
  struct tArrivalEvent * * * _7;
  long int _40;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _48;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _55;
  long int _57;
  long int _58;
  long int _59;
  struct tArrivalEvent * _64;
  struct tArrivalEvent * * _69;
  struct tArrivalEvent * * * _81;
  struct tArrivalEvent * * _82;
  struct tArrivalEvent * * _83;

  <bb 2>:
  # DEBUG __assignable => 1
  # DEBUG this => &D.73770
  # DEBUG __x => __result_2(D)
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _7 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  __first$_M_cur_88 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG D#3017 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first$_M_first => D#3017
  __first$_M_last_84 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_84
  __first$_M_node_61 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_61
  __last_11 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last$_M_cur => __last_11
  __last$8_10 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last$_M_first => __last$8_10
  # DEBUG D#3016 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last$_M_last => D#3016
  __last$24_91 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last$_M_node => __last$24_91
  # DEBUG __result => &D.73770
  # DEBUG this => &D.115852
  # DEBUG __x => &D.73770
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#3017
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __last => __last_11
  # DEBUG __last$8 => __last$8_10
  # DEBUG __last$_M_last => D#3016
  # DEBUG __last$24 => __last$24_91
  # DEBUG __result => &D.115852
  # DEBUG this => &D.137633
  # DEBUG __x => &D.115852
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG D#3015 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#3015
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#3015
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#3017
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#3017
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __result => &D.137633
  # DEBUG this => NULL
  # DEBUG __x => &D.137633
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG __it$16 => D#3015
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#3015
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#3017
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#3017
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#3017
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.137658
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG __first$_M_first => D#3017
  # DEBUG __first$_M_last => __first$_M_last_84
  # DEBUG __first$_M_node => __first$_M_node_61
  # DEBUG __result => &D.137658
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _40 = (long int) __last$24_91;
  _42 = (long int) __first$_M_node_61;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _44 + -1;
  _46 = _45 * 64;
  _48 = (long int) __last_11;
  _50 = (long int) __last$8_10;
  _51 = _48 - _50;
  _52 = _51 /[ex] 8;
  _53 = _46 + _52;
  _55 = (long int) __first$_M_last_84;
  _57 = (long int) __first$_M_cur_88;
  _58 = _55 - _57;
  _59 = _58 /[ex] 8;
  __n_60 = _53 + _59;
  # DEBUG __n => __n_60
  # DEBUG __n => __n_60
  if (__n_60 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_12 = PHI <__n_60(3), __n_71(9)>
  # SR.4795_127 = PHI <_4(3), SR.4795_126(9)>
  # SR.4796_124 = PHI <_5(3), SR.4796_123(9)>
  # SR.4797_121 = PHI <_6(3), SR.4797_119(9)>
  # SR.4798_115 = PHI <_7(3), SR.4798_114(9)>
  # __first$_M_cur_112 = PHI <__first$_M_cur_88(3), __first$_M_cur_111(9)>
  # __first$_M_last_106 = PHI <__first$_M_last_84(3), __first$_M_last_105(9)>
  # __first$_M_node_104 = PHI <__first$_M_node_61(3), __first$_M_node_103(9)>
  # DEBUG __first$_M_node => __first$_M_node_104
  # DEBUG __first$_M_last => __first$_M_last_106
  # DEBUG __first$_M_cur => __first$_M_cur_112
  # DEBUG __n => __n_12
  # DEBUG D#244 => &D.137658
  # DEBUG this => D#244
  # DEBUG D#1845 => &__first
  # DEBUG this => D#1845
  _64 = MEM[(struct tArrivalEvent * const &)__first$_M_cur_112];
  *SR.4795_127 = _64;
  # DEBUG this => &__first
  __first$_M_cur_66 = __first$_M_cur_112 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_66
  if (__first$_M_cur_66 == __first$_M_last_106)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &__first
  __first$_M_node_77 = __first$_M_node_104 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_77
  # DEBUG __first$_M_node => __first$_M_node_77
  __first$_M_cur_78 = MEM[(struct tArrivalEvent * * *)__first$_M_node_104 + 8B];
  # DEBUG __size => 8
  __first$_M_last_79 = __first$_M_cur_78 + 512;
  # DEBUG __first$_M_last => __first$_M_last_79
  # DEBUG __first$_M_cur => __first$_M_cur_78

  <bb 6>:
  # __first$_M_cur_111 = PHI <__first$_M_cur_66(4), __first$_M_cur_78(5)>
  # __first$_M_last_105 = PHI <__first$_M_last_106(4), __first$_M_last_79(5)>
  # __first$_M_node_103 = PHI <__first$_M_node_104(4), __first$_M_node_77(5)>
  # DEBUG __first$_M_node => __first$_M_node_103
  # DEBUG __first$_M_last => __first$_M_last_105
  # DEBUG __first$_M_cur => __first$_M_cur_111
  # DEBUG this => &D.137658
  _69 = SR.4795_127 + 8;
  if (_69 == SR.4797_121)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.137658
  _81 = SR.4798_115 + 8;
  # DEBUG this => &D.137658
  # DEBUG __new_node => _81
  _82 = MEM[(struct tArrivalEvent * * *)SR.4798_115 + 8B];
  # DEBUG __size => 8
  _83 = _82 + 512;

  <bb 8>:
  # SR.4795_126 = PHI <_69(6), _82(7)>
  # SR.4796_123 = PHI <SR.4796_124(6), _82(7)>
  # SR.4797_119 = PHI <SR.4797_121(6), _83(7)>
  # SR.4798_114 = PHI <SR.4798_115(6), _81(7)>
  __n_71 = __n_12 + -1;
  # DEBUG __n => __n_71
  # DEBUG __n => __n_71
  if (__n_71 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.4798_8 = PHI <SR.4798_114(8)>
  # SR.4797_87 = PHI <SR.4797_119(8)>
  # SR.4796_9 = PHI <SR.4796_123(8)>
  # SR.4795_90 = PHI <SR.4795_126(8)>

  <bb 12>:

  <bb 11>:
  # SR.4795_125 = PHI <SR.4795_90(12), _4(2)>
  # SR.4796_122 = PHI <SR.4796_9(12), _5(2)>
  # SR.4797_118 = PHI <SR.4797_87(12), _6(2)>
  # SR.4798_113 = PHI <SR.4798_8(12), _7(2)>
  # DEBUG this => _3(D)
  # DEBUG __x => &D.137658
  _3(D)->_M_cur = SR.4795_125;
  _3(D)->_M_first = SR.4796_122;
  _3(D)->_M_last = SR.4797_118;
  _3(D)->_M_node = SR.4798_113;
  D.137658 ={v} {CLOBBER};
  D.137633 ={v} {CLOBBER};
  D.115852 ={v} {CLOBBER};
  return _3(D);

}



;; Function std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>] (_ZNSt5dequeIPN11EventRouter15tTransportEventESaIS2_EEC2ERKS4_, funcdef_no=2397, decl_uid=61620, cgraph_uid=746, symbol_order=747)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>::deque(const std::deque<_Tp, _Alloc>&) [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>] (struct deque * const this, const struct deque & __x)
{
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_cur;
  struct tTransportEvent * * * SR.4820;
  struct tTransportEvent * * SR.4819;
  struct tTransportEvent * * SR.4818;
  struct tTransportEvent * * * __first$24;
  struct tTransportEvent * * __first$16;
  struct tTransportEvent * * __first$8;
  struct tTransportEvent * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137826;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137801;
  struct _Deque_iterator D.137800;
  struct _Deque_iterator D.137799;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137781;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137767;
  struct _Deque_iterator D.137766;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.92000;
  struct _Deque_iterator D.91999;
  struct _Deque_iterator D.68427;
  struct _Deque_base * _7;
  struct tTransportEvent * * _9;
  struct tTransportEvent * * _10;
  struct tTransportEvent * * _13;
  struct tTransportEvent * * * _15;
  struct tTransportEvent * * _17;
  struct tTransportEvent * * * _18;
  struct tTransportEvent * * * _19;
  long int _20;
  struct tTransportEvent * * * _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  struct tTransportEvent * * _27;
  long int _28;
  struct tTransportEvent * * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  struct tTransportEvent * * _34;
  long int _35;
  struct tTransportEvent * * _36;
  long int _37;
  long int _38;
  long int _39;
  difference_type _40;
  size_type _41;
  long int _97;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _105;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _112;
  long int _114;
  long int _115;
  long int _116;
  struct tTransportEvent * _121;
  struct tTransportEvent * * _126;
  struct tTransportEvent * * * _138;
  struct tTransportEvent * * _139;
  struct tTransportEvent * * _140;

  <bb 2>:
  # DEBUG this => __x_2(D)
  # DEBUG D#395 => &__x_2(D)->D.61649._M_impl._M_start
  # DEBUG D#396 => &__x_2(D)->D.61649._M_impl._M_finish
  # DEBUG __x => D#396
  # DEBUG __y => D#395
  # DEBUG __size => 8
  _19 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _20 = (long int) _19;
  _21 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _22 = (long int) _21;
  _23 = _20 - _22;
  _24 = _23 /[ex] 8;
  _25 = _24 + -1;
  _26 = _25 * 64;
  _27 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _28 = (long int) _27;
  _29 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _30 = (long int) _29;
  _31 = _28 - _30;
  _32 = _31 /[ex] 8;
  _33 = _26 + _32;
  _34 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _35 = (long int) _34;
  _36 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _37 = (long int) _36;
  _38 = _35 - _37;
  _39 = _38 /[ex] 8;
  _40 = _33 + _39;
  _41 = (size_type) _40;
  # DEBUG D#1858 => &__x_2(D)->D.61649
  # DEBUG this => D#1858
  # DEBUG __a => NULL
  _7 = &this_6(D)->D.61649;
  # DEBUG this => _7
  # DEBUG __a => NULL
  # DEBUG __num_elements => _41
  # DEBUG D#1638 => &_7->_M_impl
  # DEBUG this => D#1638
  # DEBUG __a => NULL
  # DEBUG this => D#1638
  # DEBUG __a => NULL
  # DEBUG this => D#1638
  # DEBUG D.103669 => NULL
  MEM[(struct _Deque_impl *)this_6(D)]._M_map = 0B;
  MEM[(struct _Deque_impl *)this_6(D)]._M_map_size = 0;
  # DEBUG D#828 => &D#1638->_M_start
  # DEBUG this => D#828
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 16B]._M_node = 0B;
  # DEBUG D#827 => &D#1638->_M_finish
  # DEBUG this => D#827
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)this_6(D) + 48B]._M_node = 0B;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_initialize_map (_7, _41);
  # DEBUG D#1859 => &this_6(D)->D.61649
  # DEBUG this => D#1859
  # DEBUG D#1860 => &this_6(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.68427
  # DEBUG __x => D#1860
  _9 = MEM[(const struct iterator &)this_6(D) + 16]._M_cur;
  _17 = MEM[(const struct iterator &)this_6(D) + 16]._M_last;
  _18 = MEM[(const struct iterator &)this_6(D) + 16]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#230 => &__x_2(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.91999
  # DEBUG __x => D#230
  _10 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  # DEBUG D#3019 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
  _15 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG this => __x_2(D)
  # DEBUG D#231 => &__x_2(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.92000
  # DEBUG __x => D#231
  __first$_M_cur_8 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  # DEBUG D#3020 => MEM[(const struct iterator &)__x_2(D) + 16]._M_first
  __first$_M_last_4 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  __first$_M_node_3 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  # DEBUG __result => &D.68427
  # DEBUG D.137763 => D#1857
  # DEBUG this => &D.137767
  # DEBUG __x => &D.68427
  # DEBUG __result => &D.137767
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.137767
  # DEBUG __result => NULL
  # DEBUG this => &D.137781
  # DEBUG __x => NULL
  # DEBUG __result => &D.137781
  # DEBUG this => &D.137801
  # DEBUG __x => &D.137781
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#3019
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#3019
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#3020
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#3020
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __result => &D.137801
  # DEBUG this => NULL
  # DEBUG __x => &D.137801
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _10
  # DEBUG __it$8 => _13
  # DEBUG __it$16 => D#3019
  # DEBUG __it$24 => _15
  # DEBUG __it$_M_cur => _10
  # DEBUG __it$_M_first => _13
  # DEBUG __it$_M_last => D#3019
  # DEBUG __it$_M_node => _15
  # DEBUG __it => __first$_M_cur_8
  # DEBUG __it$8 => D#3020
  # DEBUG __it$16 => __first$_M_last_4
  # DEBUG __it$24 => __first$_M_node_3
  # DEBUG __it$_M_cur => __first$_M_cur_8
  # DEBUG __it$_M_first => D#3020
  # DEBUG __it$_M_last => __first$_M_last_4
  # DEBUG __it$_M_node => __first$_M_node_3
  # DEBUG __first => __first$_M_cur_8
  # DEBUG __first$8 => D#3020
  # DEBUG __first$16 => __first$_M_last_4
  # DEBUG __first$24 => __first$_M_node_3
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.137826
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_8
  # DEBUG __first$_M_first => D#3020
  # DEBUG __first$_M_last => __first$_M_last_4
  # DEBUG __first$_M_node => __first$_M_node_3
  # DEBUG __result => &D.137826
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _97 = (long int) _15;
  _99 = (long int) __first$_M_node_3;
  _100 = _97 - _99;
  _101 = _100 /[ex] 8;
  _102 = _101 + -1;
  _103 = _102 * 64;
  _105 = (long int) _10;
  _107 = (long int) _13;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _103 + _109;
  _112 = (long int) __first$_M_last_4;
  _114 = (long int) __first$_M_cur_8;
  _115 = _112 - _114;
  _116 = _115 /[ex] 8;
  __n_117 = _110 + _116;
  # DEBUG __n => __n_117
  # DEBUG __n => __n_117
  if (__n_117 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG this => &D.137766
  # DEBUG __x => &D.137826
  D.137826 ={v} {CLOBBER};
  D.137801 ={v} {CLOBBER};
  D.137781 ={v} {CLOBBER};
  D.137767 ={v} {CLOBBER};
  D.68427 ={v} {CLOBBER};
  return;

  <bb 4>:

  <bb 5>:
  # __n_54 = PHI <__n_117(4), __n_128(10)>
  # SR.4818_198 = PHI <_9(4), SR.4818_197(10)>
  # SR.4819_195 = PHI <_17(4), SR.4819_194(10)>
  # SR.4820_193 = PHI <_18(4), SR.4820_192(10)>
  # __first$_M_cur_190 = PHI <__first$_M_cur_8(4), __first$_M_cur_189(10)>
  # __first$_M_last_186 = PHI <__first$_M_last_4(4), __first$_M_last_185(10)>
  # __first$_M_node_184 = PHI <__first$_M_node_3(4), __first$_M_node_182(10)>
  # DEBUG __first$_M_node => __first$_M_node_184
  # DEBUG __first$_M_last => __first$_M_last_186
  # DEBUG __first$_M_cur => __first$_M_cur_190
  # DEBUG __n => __n_54
  # DEBUG D#266 => &D.137826
  # DEBUG this => D#266
  # DEBUG D#1856 => &__first
  # DEBUG this => D#1856
  _121 = MEM[(struct tTransportEvent * const &)__first$_M_cur_190];
  *SR.4818_198 = _121;
  # DEBUG this => &__first
  __first$_M_cur_123 = __first$_M_cur_190 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_123
  if (__first$_M_cur_123 == __first$_M_last_186)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => &__first
  __first$_M_node_134 = __first$_M_node_184 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_134
  # DEBUG __first$_M_node => __first$_M_node_134
  __first$_M_cur_135 = MEM[(struct tTransportEvent * * *)__first$_M_node_184 + 8B];
  # DEBUG __size => 8
  __first$_M_last_136 = __first$_M_cur_135 + 512;
  # DEBUG __first$_M_last => __first$_M_last_136
  # DEBUG __first$_M_cur => __first$_M_cur_135

  <bb 7>:
  # __first$_M_cur_189 = PHI <__first$_M_cur_123(5), __first$_M_cur_135(6)>
  # __first$_M_last_185 = PHI <__first$_M_last_186(5), __first$_M_last_136(6)>
  # __first$_M_node_182 = PHI <__first$_M_node_184(5), __first$_M_node_134(6)>
  # DEBUG __first$_M_node => __first$_M_node_182
  # DEBUG __first$_M_last => __first$_M_last_185
  # DEBUG __first$_M_cur => __first$_M_cur_189
  # DEBUG this => &D.137826
  _126 = SR.4818_198 + 8;
  if (_126 == SR.4819_195)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # DEBUG this => &D.137826
  _138 = SR.4820_193 + 8;
  # DEBUG this => &D.137826
  # DEBUG __new_node => _138
  _139 = MEM[(struct tTransportEvent * * *)SR.4820_193 + 8B];
  # DEBUG __size => 8
  _140 = _139 + 512;

  <bb 9>:
  # SR.4818_197 = PHI <_126(7), _139(8)>
  # SR.4819_194 = PHI <SR.4819_195(7), _140(8)>
  # SR.4820_192 = PHI <SR.4820_193(7), _138(8)>
  __n_128 = __n_54 + -1;
  # DEBUG __n => __n_128
  # DEBUG __n => __n_128
  if (__n_128 <= 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  goto <bb 5>;

}



;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>; _ForwardIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>] (_ZSt18uninitialized_copyISt15_Deque_iteratorIPN11EventRouter15tTransportEventERKS3_PS4_ES0_IS3_RS3_PS3_EET0_T_SC_SB_, funcdef_no=3379, decl_uid=71662, cgraph_uid=1728, symbol_order=1729)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>; _ForwardIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_cur;
  struct tTransportEvent * * * SR.4853;
  struct tTransportEvent * * SR.4852;
  struct tTransportEvent * * SR.4851;
  struct tTransportEvent * * SR.4850;
  struct tTransportEvent * * * __first$24;
  struct tTransportEvent * * __first$16;
  struct tTransportEvent * * __first$8;
  struct tTransportEvent * * __first;
  struct tTransportEvent * * * __last$24;
  struct tTransportEvent * * __last$8;
  struct tTransportEvent * * __last;
  struct tTransportEvent * * * __first$24;
  struct tTransportEvent * * __first$16;
  struct tTransportEvent * * __first$8;
  struct tTransportEvent * * __first;
  struct tTransportEvent * * * __last$_M_node;
  struct tTransportEvent * * __last$_M_last;
  struct tTransportEvent * * __last$_M_first;
  struct tTransportEvent * * __last$_M_cur;
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_first;
  struct tTransportEvent * * __first$_M_cur;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.137932;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.137907;
  struct _Deque_iterator D.137906;
  struct _Deque_iterator D.137905;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.116202;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct tTransportEvent * * _4;
  struct tTransportEvent * * _5;
  struct tTransportEvent * * _6;
  struct tTransportEvent * * * _7;
  long int _40;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _48;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _55;
  long int _57;
  long int _58;
  long int _59;
  struct tTransportEvent * _64;
  struct tTransportEvent * * _69;
  struct tTransportEvent * * * _81;
  struct tTransportEvent * * _82;
  struct tTransportEvent * * _83;

  <bb 2>:
  # DEBUG __assignable => 1
  # DEBUG this => &D.74098
  # DEBUG __x => __result_2(D)
  _4 = MEM[(const struct iterator &)__result_2(D)]._M_cur;
  _5 = MEM[(const struct iterator &)__result_2(D)]._M_first;
  _6 = MEM[(const struct iterator &)__result_2(D)]._M_last;
  _7 = MEM[(const struct iterator &)__result_2(D)]._M_node;
  __first$_M_cur_88 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG D#3023 => MEM[(struct _Deque_iterator *)&__first + 8B]
  # DEBUG __first$_M_first => D#3023
  __first$_M_last_84 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_84
  __first$_M_node_61 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_61
  __last_11 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last$_M_cur => __last_11
  __last$8_10 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last$_M_first => __last$8_10
  # DEBUG D#3022 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __last$_M_last => D#3022
  __last$24_91 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last$_M_node => __last$24_91
  # DEBUG __result => &D.74098
  # DEBUG this => &D.116202
  # DEBUG __x => &D.74098
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#3023
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __last => __last_11
  # DEBUG __last$8 => __last$8_10
  # DEBUG __last$_M_last => D#3022
  # DEBUG __last$24 => __last$24_91
  # DEBUG __result => &D.116202
  # DEBUG this => &D.137907
  # DEBUG __x => &D.116202
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG D#3021 => MEM[(struct _Deque_iterator *)&__last + 16B]
  # DEBUG __it$16 => D#3021
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#3021
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#3023
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#3023
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __result => &D.137907
  # DEBUG this => NULL
  # DEBUG __x => &D.137907
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => __last_11
  # DEBUG __it$8 => __last$8_10
  # DEBUG __it$16 => D#3021
  # DEBUG __it$24 => __last$24_91
  # DEBUG __it$_M_cur => __last_11
  # DEBUG __it$_M_first => __last$8_10
  # DEBUG __it$_M_last => D#3021
  # DEBUG __it$_M_node => __last$24_91
  # DEBUG __it => __first$_M_cur_88
  # DEBUG __it$8 => D#3023
  # DEBUG __it$16 => __first$_M_last_84
  # DEBUG __it$24 => __first$_M_node_61
  # DEBUG __it$_M_cur => __first$_M_cur_88
  # DEBUG __it$_M_first => D#3023
  # DEBUG __it$_M_last => __first$_M_last_84
  # DEBUG __it$_M_node => __first$_M_node_61
  # DEBUG __first => __first$_M_cur_88
  # DEBUG __first$8 => D#3023
  # DEBUG __first$16 => __first$_M_last_84
  # DEBUG __first$24 => __first$_M_node_61
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.137932
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_88
  # DEBUG __first$_M_first => D#3023
  # DEBUG __first$_M_last => __first$_M_last_84
  # DEBUG __first$_M_node => __first$_M_node_61
  # DEBUG __result => &D.137932
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _40 = (long int) __last$24_91;
  _42 = (long int) __first$_M_node_61;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _44 + -1;
  _46 = _45 * 64;
  _48 = (long int) __last_11;
  _50 = (long int) __last$8_10;
  _51 = _48 - _50;
  _52 = _51 /[ex] 8;
  _53 = _46 + _52;
  _55 = (long int) __first$_M_last_84;
  _57 = (long int) __first$_M_cur_88;
  _58 = _55 - _57;
  _59 = _58 /[ex] 8;
  __n_60 = _53 + _59;
  # DEBUG __n => __n_60
  # DEBUG __n => __n_60
  if (__n_60 <= 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_12 = PHI <__n_60(3), __n_71(9)>
  # SR.4850_127 = PHI <_4(3), SR.4850_126(9)>
  # SR.4851_124 = PHI <_5(3), SR.4851_123(9)>
  # SR.4852_121 = PHI <_6(3), SR.4852_119(9)>
  # SR.4853_115 = PHI <_7(3), SR.4853_114(9)>
  # __first$_M_cur_112 = PHI <__first$_M_cur_88(3), __first$_M_cur_111(9)>
  # __first$_M_last_106 = PHI <__first$_M_last_84(3), __first$_M_last_105(9)>
  # __first$_M_node_104 = PHI <__first$_M_node_61(3), __first$_M_node_103(9)>
  # DEBUG __first$_M_node => __first$_M_node_104
  # DEBUG __first$_M_last => __first$_M_last_106
  # DEBUG __first$_M_cur => __first$_M_cur_112
  # DEBUG __n => __n_12
  # DEBUG D#266 => &D.137932
  # DEBUG this => D#266
  # DEBUG D#1856 => &__first
  # DEBUG this => D#1856
  _64 = MEM[(struct tTransportEvent * const &)__first$_M_cur_112];
  *SR.4850_127 = _64;
  # DEBUG this => &__first
  __first$_M_cur_66 = __first$_M_cur_112 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_66
  if (__first$_M_cur_66 == __first$_M_last_106)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG this => &__first
  __first$_M_node_77 = __first$_M_node_104 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_77
  # DEBUG __first$_M_node => __first$_M_node_77
  __first$_M_cur_78 = MEM[(struct tTransportEvent * * *)__first$_M_node_104 + 8B];
  # DEBUG __size => 8
  __first$_M_last_79 = __first$_M_cur_78 + 512;
  # DEBUG __first$_M_last => __first$_M_last_79
  # DEBUG __first$_M_cur => __first$_M_cur_78

  <bb 6>:
  # __first$_M_cur_111 = PHI <__first$_M_cur_66(4), __first$_M_cur_78(5)>
  # __first$_M_last_105 = PHI <__first$_M_last_106(4), __first$_M_last_79(5)>
  # __first$_M_node_103 = PHI <__first$_M_node_104(4), __first$_M_node_77(5)>
  # DEBUG __first$_M_node => __first$_M_node_103
  # DEBUG __first$_M_last => __first$_M_last_105
  # DEBUG __first$_M_cur => __first$_M_cur_111
  # DEBUG this => &D.137932
  _69 = SR.4850_127 + 8;
  if (_69 == SR.4852_121)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.137932
  _81 = SR.4853_115 + 8;
  # DEBUG this => &D.137932
  # DEBUG __new_node => _81
  _82 = MEM[(struct tTransportEvent * * *)SR.4853_115 + 8B];
  # DEBUG __size => 8
  _83 = _82 + 512;

  <bb 8>:
  # SR.4850_126 = PHI <_69(6), _82(7)>
  # SR.4851_123 = PHI <SR.4851_124(6), _82(7)>
  # SR.4852_119 = PHI <SR.4852_121(6), _83(7)>
  # SR.4853_114 = PHI <SR.4853_115(6), _81(7)>
  __n_71 = __n_12 + -1;
  # DEBUG __n => __n_71
  # DEBUG __n => __n_71
  if (__n_71 <= 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  # SR.4853_8 = PHI <SR.4853_114(8)>
  # SR.4852_87 = PHI <SR.4852_119(8)>
  # SR.4851_9 = PHI <SR.4851_123(8)>
  # SR.4850_90 = PHI <SR.4850_126(8)>

  <bb 12>:

  <bb 11>:
  # SR.4850_125 = PHI <SR.4850_90(12), _4(2)>
  # SR.4851_122 = PHI <SR.4851_9(12), _5(2)>
  # SR.4852_118 = PHI <SR.4852_87(12), _6(2)>
  # SR.4853_113 = PHI <SR.4853_8(12), _7(2)>
  # DEBUG this => _3(D)
  # DEBUG __x => &D.137932
  _3(D)->_M_cur = SR.4850_125;
  _3(D)->_M_first = SR.4851_122;
  _3(D)->_M_last = SR.4852_118;
  _3(D)->_M_node = SR.4853_113;
  D.137932 ={v} {CLOBBER};
  D.137907 ={v} {CLOBBER};
  D.116202 ={v} {CLOBBER};
  return _3(D);

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=3387, decl_uid=35705, cgraph_uid=1736, symbol_order=1737)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.138034;
  const size_type __len;
  size_type D.138033;
  size_type __n;
  eNextVCState * D.138024;
  const ptrdiff_t _Num;
  eNextVCState * D.138015;
  int * const __position;
  int * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  int * __first;
  long unsigned int __n;
  int * __first;
  const ptrdiff_t _Num;
  int * __first;
  int * __new_finish;
  const size_type __elems_after;
  value_type __x_copy;
  int * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  eNextVCState * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  int * pretmp_29;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  int * _41;
  int * _43;
  long int _47;
  int * _48;
  long int __first.439_49;
  int * _53;
  const int _56;
  long unsigned int _59;
  long int _66;
  long unsigned int _68;
  int * _70;
  long unsigned int _74;
  long unsigned int _77;
  long unsigned int prephitmp_102;
  long unsigned int pretmp_103;
  long int _104;
  long unsigned int _106;
  sizetype _107;
  eNextVCState * _108;
  eNextVCState * _112;
  eNextVCState * iftmp.529_113;
  bool _114;
  long int _116;
  long int _117;
  long int _118;
  long unsigned int _120;
  long int prephitmp_121;
  long unsigned int _133;
  long int prephitmp_137;
  long int pretmp_138;
  long int pretmp_140;
  bool _142;
  long int _143;
  long int _144;
  long int pretmp_145;
  int * prephitmp_146;
  int * pretmp_147;
  eNextVCState * prephitmp_148;
  eNextVCState * pretmp_149;
  long int _150;
  long int _151;
  bool _152;
  long int _153;
  long int _156;
  long int _157;
  long int _158;
  long unsigned int _160;
  long unsigned int pretmp_162;
  long unsigned int prephitmp_163;
  long unsigned int pretmp_164;
  long unsigned int prephitmp_165;
  int * pretmp_166;
  int * prephitmp_167;
  long unsigned int pretmp_168;
  long unsigned int prephitmp_169;
  int * pretmp_173;
  int * prephitmp_174;

  <bb 2>:
  # DEBUG D#3029 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3029
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.35782._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.35782._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#233 => &this_4(D)->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#233
  # DEBUG __lhs => &D.74154
  # DEBUG __rhs => &__position
  # DEBUG this => &D.74154
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 4;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2175 => &this_4(D)->D.35782
  # DEBUG this => D#2175
  _39 = __n_2(D) * 4;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2167
  # DEBUG D#2166 => D#2167
  # DEBUG D#2165 => D#2166
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.122275 => D#2165
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.439_49 = (long int) _41;
  _47 = _8 - __first.439_49;
  _Num_45 = _47 /[ex] 4;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_173 = this_4(D)->D.35782._M_impl._M_finish;

  <bb 8>:
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  _43 = prephitmp_174 + _39;
  this_4(D)->D.35782._M_impl._M_finish = _43;
  # DEBUG this => &__position
  # DEBUG __first => D#3029
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG __first => D#3029
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG __first => D#3029
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#3029
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _104 = __first.439_49 - _27;
  _Num_105 = _104 /[ex] 4;
  # DEBUG _Num => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = (long unsigned int) _104;
  _107 = -_106;
  _108 = __first_7 + _107;
  __builtin_memmove (_108, __position_16, _106);

  <bb 10>:
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#1292 => &__x_copy
  # DEBUG __first => D#3029
  # DEBUG __last => _48
  # DEBUG D#1291 => D#1292
  # DEBUG __value => D#1291
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG D#829 => D#1291
  # DEBUG __first => D#3029
  # DEBUG __last => _48
  # DEBUG __value => D#829
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3029
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_109 = PHI <__position_16(11), __position_55(13)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy_35;
  __position_55 = __position_109 + 4;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2176 => &this_4(D)->D.35782
  # DEBUG this => D#2176
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#1790 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1789 => D#1790
  # DEBUG __x => D#1789
  # DEBUG D.122360 => D#1791
  # DEBUG D#1788 => D#1789
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1787 => D#1788
  # DEBUG __x => D#1787
  # DEBUG __assignable => 1
  # DEBUG D#1786 => D#1787
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1785 => D#1786
  # DEBUG __x => D#1785
  # DEBUG D#1784 => D#1785
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1783 => D#1784
  # DEBUG __value => D#1783
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#1782 => D#1783
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#1782
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_111 = PHI <__n_50(15), __n_63(18)>
  # __first_76 = PHI <__first_7(15), __first_64(18)>
  # DEBUG __niter => __n_111
  # DEBUG __first => __first_76
  *__first_76 = __x_copy_35;
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_76 + 4;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _160 = __n_50 * 4;
  __first_123 = __first_7 + _160;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_125 = PHI <__first_123(17), __first_7(14)>
  this_4(D)->D.35782._M_impl._M_finish = __first_125;
  # DEBUG D#2177 => &this_4(D)->D.35782
  # DEBUG this => D#2177
  # DEBUG this => &__position
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __alloc => D#2167
  # DEBUG D#2166 => D#2167
  # DEBUG D#2165 => D#2166
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG D.122322 => D#2165
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __assignable => 1
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_125
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG __simple => 1
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __result => __first_125
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_168 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_125, __position_16, _59);
  pretmp_166 = this_4(D)->D.35782._M_impl._M_finish;

  <bb 22>:
  # prephitmp_167 = PHI <__first_125(20), pretmp_166(21)>
  # prephitmp_169 = PHI <pretmp_168(20), _59(21)>
  _53 = prephitmp_167 + prephitmp_169;
  this_4(D)->D.35782._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#1292 => &__x_copy
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG D#1291 => D#1292
  # DEBUG __value => D#1291
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG D#829 => D#1291
  # DEBUG __first => D#3029
  # DEBUG __last => __first_7
  # DEBUG __value => D#829
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3029
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_110 = PHI <__position_16(23), __position_58(25)>
  # DEBUG __first => __position_110
  *__position_110 = __x_copy_35;
  __position_58 = __position_110 + 4;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1698 => this_4(D)
  # DEBUG this => D#1698
  # DEBUG D#1697 => D#1698
  # DEBUG D#1696 => &D#1697->D.48427
  # DEBUG this => D#1696
  # DEBUG __a => D#1695
  # DEBUG D#1694 => D#1695
  # DEBUG D#1693 => D#1694
  # DEBUG this => D#1693
  _17 = MEM[(eNextVCState * *)this_4(D)];
  # DEBUG D#194 => this_4(D)
  # DEBUG D#194 => this_4(D)
  # DEBUG this => D#194
  # DEBUG this => D#194
  _116 = (long int) _17;
  _117 = _8 - _116;
  _118 = _117 /[ex] 4;
  _119 = (const long unsigned int) _118;
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#194 => this_4(D)
  # DEBUG D#194 => this_4(D)
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG D#194 => this_4(D)
  # DEBUG D#194 => this_4(D)
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG __a => &D.138034
  # DEBUG __b => &__n
  _77 = MAX_EXPR <__n_2(D), _119>;
  __len_124 = _77 + _119;
  # DEBUG __len => __len_124
  # DEBUG D#194 => this_4(D)
  # DEBUG D#194 => this_4(D)
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG D#1698 => this_4(D)
  # DEBUG this => D#1698
  # DEBUG D#1697 => D#1698
  # DEBUG D#1696 => &D#1697->D.48427
  # DEBUG this => D#1696
  # DEBUG __a => D#1695
  # DEBUG D#1694 => D#1695
  # DEBUG D#1693 => D#1694
  # DEBUG this => D#1693
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_164 = __len_124 * 4;

  <bb 30>:
  # _156 = PHI <_144(44), _151(29)>
  # _157 = PHI <_143(44), _150(29)>
  # prephitmp_165 = PHI <18446744073709551612(44), pretmp_164(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#398 => &this_4(D)->D.35782._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#398
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74187
  # DEBUG this => &__position
  # DEBUG this => &D.74187
  # DEBUG D#2188 => _157 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#2188
  # DEBUG D#2187 => &this_4(D)->D.35782
  # DEBUG D#1326 => D#2187
  # DEBUG __n => NULL
  # DEBUG this => D#1706
  # DEBUG D#1705 => D#1706
  # DEBUG D#1704 => &D#1705->_M_impl
  # DEBUG D#1703 => D#1704
  # DEBUG __n => NULL
  # DEBUG __a => D#1703
  # DEBUG D#1702 => D#1703
  # DEBUG D#1700 => D#1702
  # DEBUG D#1701 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1700
  # DEBUG D.138022 => D#1701
  # DEBUG D#1699 => D#1700
  # DEBUG D#1693 => D#1699
  # DEBUG this => D#1693
  _112 = operator new (prephitmp_165);
  pretmp_29 = this_4(D)->D.35782._M_impl._M_start;
  pretmp_147 = this_4(D)->D.35782._M_impl._M_finish;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long int) pretmp_147;
  pretmp_138 = (long int) pretmp_29;
  pretmp_140 = _156 - pretmp_138;

  <bb 31>:
  # iftmp.529_113 = PHI <0B(45), _112(30)>
  # _158 = PHI <_151(45), _156(30)>
  # _153 = PHI <_150(45), _157(30)>
  # prephitmp_146 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_148 = PHI <0B(45), pretmp_149(30)>
  # prephitmp_121 = PHI <_8(45), pretmp_145(30)>
  # prephitmp_137 = PHI <_150(45), pretmp_140(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2171 => &this_4(D)->D.35782
  # DEBUG this => D#2171
  _19 = (long unsigned int) _153;
  __first_20 = iftmp.529_113 + _19;
  _56 = MEM[(const int &)__x_21(D)];
  # DEBUG D#1790 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1789 => D#1790
  # DEBUG __x => D#1789
  # DEBUG D.122477 => D#1791
  # DEBUG D#1788 => D#1789
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1787 => D#1788
  # DEBUG __x => D#1787
  # DEBUG __assignable => 1
  # DEBUG D#1786 => D#1787
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1785 => D#1786
  # DEBUG __x => D#1785
  # DEBUG D#1784 => D#1785
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1783 => D#1784
  # DEBUG __value => D#1783
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#1782 => D#1783
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#1782
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_132 = PHI <__n_79(33), __n_2(D)(31)>
  # __first_155 = PHI <__first_80(33), __first_20(31)>
  # DEBUG __niter => __n_132
  # DEBUG __first => __first_155
  *__first_155 = _56;
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_155 + 4;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2172 => &this_4(D)->D.35782
  # DEBUG this => D#2172
  # DEBUG this => &__position
  # DEBUG D#3028 => this_4(D)->D.35782._M_impl._M_start
  # DEBUG __first => D#3028
  # DEBUG __last => D#3029
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2169
  # DEBUG D#2168 => D#2169
  # DEBUG D#2165 => D#2168
  # DEBUG __first => D#3028
  # DEBUG __last => D#3029
  # DEBUG __result => NULL
  # DEBUG D.122439 => D#2165
  # DEBUG __first => D#3028
  # DEBUG __last => D#3029
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3028
  # DEBUG __last => D#3029
  # DEBUG __result => NULL
  # DEBUG __first => D#3028
  # DEBUG __last => D#3029
  # DEBUG __result => NULL
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG __it => D#3028
  # DEBUG __it => D#3028
  # DEBUG __first => D#3028
  # DEBUG __last => D#3029
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG __it => D#3028
  # DEBUG __it => D#3028
  # DEBUG __first => D#3028
  # DEBUG __last => D#3029
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3028
  # DEBUG __last => D#3029
  # DEBUG __result => NULL
  # DEBUG D#3027 => (long int) D#3028
  # DEBUG D#3026 => _158 - D#3027
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_103 = (long unsigned int) prephitmp_137;
  goto <bb 37>;

  <bb 36>:
  _74 = (long unsigned int) prephitmp_137;
  __builtin_memmove (iftmp.529_113, prephitmp_146, _74);

  <bb 37>:
  # prephitmp_102 = PHI <pretmp_103(35), _74(36)>
  # DEBUG D#3025 => (long unsigned int) D#3026
  # DEBUG __new_finish => iftmp.529_113 + D#3025
  _25 = __n_2(D) * 4;
  _133 = _25 + prephitmp_102;
  __new_finish_26 = iftmp.529_113 + _133;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2173 => &this_4(D)->D.35782
  # DEBUG this => D#2173
  # DEBUG D#3024 => this_4(D)->D.35782._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#3029
  # DEBUG __last => D#3024
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2169
  # DEBUG D#2168 => D#2169
  # DEBUG D#2165 => D#2168
  # DEBUG __first => D#3029
  # DEBUG __last => D#3024
  # DEBUG __result => __new_finish_26
  # DEBUG D.122400 => D#2165
  # DEBUG __first => D#3029
  # DEBUG __last => D#3024
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3029
  # DEBUG __last => D#3024
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3029
  # DEBUG __last => D#3024
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#3024
  # DEBUG __it => D#3024
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG __first => D#3029
  # DEBUG __last => D#3024
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#3024
  # DEBUG __it => D#3024
  # DEBUG __it => D#3029
  # DEBUG __it => D#3029
  # DEBUG __first => D#3029
  # DEBUG __last => D#3024
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#3029
  # DEBUG __last => D#3024
  # DEBUG __result => __new_finish_26
  _66 = prephitmp_121 - _158;
  _Num_67 = _66 /[ex] 4;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_162 = (long unsigned int) _66;
  goto <bb 40>;

  <bb 39>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 40>:
  # prephitmp_163 = PHI <pretmp_162(38), _68(39)>
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finish => _70
  # DEBUG D#2174 => &this_4(D)->D.35782
  # DEBUG this => D#2174
  # DEBUG D#2186 => this_4(D)->D.35782._M_impl._M_finish
  # DEBUG D#2185 => this_4(D)->D.35782._M_impl._M_start
  # DEBUG __first => D#2185
  # DEBUG __last => D#2186
  # DEBUG D.122393 => NULL
  # DEBUG D#296 => D#2185
  # DEBUG D#297 => D#2186
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#2184 => this_4(D)->D.35782._M_impl._M_end_of_storage
  # DEBUG D#2183 => (long int) D#2184
  # DEBUG D#2182 => (long int) D#3028
  # DEBUG D#2181 => D#2183 - D#2182
  # DEBUG D#2180 => D#2181 /[ex] 4
  # DEBUG D#2179 => (long unsigned int) D#2180
  # DEBUG D#2178 => &this_4(D)->D.35782
  # DEBUG this => D#2178
  # DEBUG __p => D#3028
  # DEBUG __n => D#2179
  if (prephitmp_146 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#507 => &D#2178->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#2179
  # DEBUG __p => D#3028
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => D#3028
  # DEBUG this => D#501
  # DEBUG D.122389 => D#502
  operator delete (prephitmp_146);

  <bb 42>:
  this_4(D)->D.35782._M_impl._M_start = iftmp.529_113;
  this_4(D)->D.35782._M_impl._M_finish = _70;
  this_4(D)->D.35782._M_impl._M_end_of_storage = prephitmp_148;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#398 => &this_4(D)->D.35782._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#398
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74187
  # DEBUG this => &__position
  _144 = (long int) __position_16;
  # DEBUG this => &D.74187
  _143 = _144 - _116;
  # DEBUG D#2188 => _143 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#2188
  # DEBUG D#2187 => &this_4(D)->D.35782
  # DEBUG D#1326 => D#2187
  # DEBUG __n => NULL
  # DEBUG this => D#1706
  # DEBUG D#1705 => D#1706
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#398 => &this_4(D)->D.35782._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#398
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74187
  # DEBUG this => &__position
  _151 = (long int) __position_16;
  # DEBUG this => &D.74187
  _150 = _151 - _116;
  # DEBUG D#2188 => _150 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#2188
  # DEBUG D#2187 => &this_4(D)->D.35782
  # DEBUG D#1326 => D#2187
  # DEBUG __n => NULL
  # DEBUG this => D#1706
  # DEBUG D#1705 => D#1706
  if (__len_124 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = EventNextVCState::eNextVCState; _Alloc = std::allocator<EventNextVCState::eNextVCState>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<EventNextVCState::eNextVCState*, std::vector<EventNextVCState::eNextVCState> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = EventNextVCState::eNextVCState*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = EventNextVCState::eNextVCState] (_ZNSt6vectorIN16EventNextVCState12eNextVCStateESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3468, decl_uid=48350, cgraph_uid=1817, symbol_order=1818)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = EventNextVCState::eNextVCState; _Alloc = std::allocator<EventNextVCState::eNextVCState>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<EventNextVCState::eNextVCState*, std::vector<EventNextVCState::eNextVCState> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = EventNextVCState::eNextVCState*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = EventNextVCState::eNextVCState] (struct vector * const this, struct iterator __position, size_type __n, const value_type & __x)
{
  const long unsigned int D.138163;
  const size_type __len;
  size_type D.138162;
  size_type __n;
  eNextVCState * D.138153;
  const ptrdiff_t _Num;
  eNextVCState * D.138144;
  eNextVCState * const __position;
  eNextVCState * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  eNextVCState * __first;
  long unsigned int __n;
  eNextVCState * __first;
  const ptrdiff_t _Num;
  eNextVCState * __first;
  eNextVCState * __new_finish;
  const size_type __elems_after;
  eNextVCState * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  eNextVCState * const _16;
  long unsigned int _18;
  difference_type _21;
  long int _22;
  long unsigned int _24;
  long int _26;
  eNextVCState * pretmp_28;
  eNextVCState __x_copy.519_34;
  long unsigned int _37;
  long unsigned int _38;
  sizetype _39;
  eNextVCState * _40;
  eNextVCState * _42;
  long int _46;
  eNextVCState * _47;
  long int __first.524_48;
  eNextVCState * _52;
  long unsigned int _57;
  long int _64;
  long unsigned int _66;
  eNextVCState * _68;
  long unsigned int _72;
  long unsigned int _75;
  long int _103;
  long unsigned int _105;
  sizetype _106;
  eNextVCState * _107;
  eNextVCState * _111;
  eNextVCState * iftmp.529_112;
  bool _113;
  const eNextVCState pretmp_114;
  long int _115;
  long int _116;
  long int _117;
  long unsigned int _119;
  long int prephitmp_120;
  long unsigned int _132;
  long int prephitmp_136;
  long int pretmp_137;
  bool _139;
  long int _140;
  long int _141;
  long int pretmp_142;
  long int pretmp_144;
  eNextVCState * prephitmp_145;
  eNextVCState * pretmp_146;
  eNextVCState * prephitmp_147;
  eNextVCState * pretmp_148;
  long int _149;
  long int _150;
  bool _151;
  long int _152;
  long int _155;
  long int _156;
  long int _157;
  long unsigned int _159;
  long unsigned int pretmp_161;
  long unsigned int prephitmp_162;
  long unsigned int pretmp_163;
  long unsigned int prephitmp_164;
  long unsigned int pretmp_165;
  long unsigned int prephitmp_166;
  eNextVCState * pretmp_167;
  eNextVCState * prephitmp_168;
  long unsigned int pretmp_169;
  long unsigned int prephitmp_170;
  eNextVCState * pretmp_174;
  eNextVCState * prephitmp_175;

  <bb 2>:
  # DEBUG D#3097 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3097
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_15 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.48427._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.48427._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 4;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy.519_34 = *__x_20(D);
  # DEBUG __x_copy => __x_copy.519_34
  # DEBUG this => this_4(D)
  # DEBUG D#278 => &this_4(D)->D.48427._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#278
  # DEBUG __lhs => &D.74391
  # DEBUG __rhs => &__position
  # DEBUG this => &D.74391
  # DEBUG this => &__position
  _26 = (long int) __position_15;
  _22 = _8 - _26;
  _21 = _22 /[ex] 4;
  __elems_after_36 = (const size_type) _21;
  # DEBUG __elems_after => __elems_after_36
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_36)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#2430 => &this_4(D)->D.48427
  # DEBUG this => D#2430
  _38 = __n_2(D) * 4;
  _39 = -_38;
  _40 = __first_7 + _39;
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2422
  # DEBUG D#2421 => D#2422
  # DEBUG D#2420 => D#2421
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.127538 => D#2420
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _40
  # DEBUG __it => _40
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _40
  # DEBUG __it => _40
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _40
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.524_48 = (long int) _40;
  _46 = _8 - __first.524_48;
  _Num_44 = _46 /[ex] 4;
  # DEBUG _Num => _Num_44
  if (_Num_44 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _37 = (long unsigned int) _46;
  __builtin_memmove (__first_7, _40, _37);
  pretmp_174 = this_4(D)->D.48427._M_impl._M_finish;

  <bb 8>:
  # prephitmp_175 = PHI <__first_7(6), pretmp_174(7)>
  _42 = prephitmp_175 + _38;
  this_4(D)->D.48427._M_impl._M_finish = _42;
  # DEBUG this => &__position
  # DEBUG __first => D#3097
  # DEBUG __last => _40
  # DEBUG __result => __first_7
  # DEBUG __it => _40
  # DEBUG __it => _40
  # DEBUG __it => D#3097
  # DEBUG __it => D#3097
  # DEBUG __first => D#3097
  # DEBUG __last => _40
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _40
  # DEBUG __it => _40
  # DEBUG __it => D#3097
  # DEBUG __it => D#3097
  # DEBUG __first => D#3097
  # DEBUG __last => _40
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#3097
  # DEBUG __last => _40
  # DEBUG __result => __first_7
  _103 = __first.524_48 - _26;
  _Num_104 = _103 /[ex] 4;
  # DEBUG _Num => _Num_104
  if (_Num_104 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _105 = (long unsigned int) _103;
  _106 = -_105;
  _107 = __first_7 + _106;
  __builtin_memmove (_107, __position_15, _105);

  <bb 10>:
  # DEBUG this => &__position
  _47 = __position_15 + _38;
  # DEBUG this => &__position
  # DEBUG __first => D#3097
  # DEBUG __last => _47
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3097
  if (__position_15 == _47)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_108 = PHI <__position_15(11), __position_54(13)>
  # DEBUG __first => __position_108
  *__position_108 = __x_copy.519_34;
  __position_54 = __position_108 + 4;
  # DEBUG __first => __position_54
  # DEBUG __first => __position_54
  if (_47 == __position_54)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#2431 => &this_4(D)->D.48427
  # DEBUG this => D#2431
  __n_49 = __n_2(D) - __elems_after_36;
  # DEBUG __first => __first_7
  # DEBUG __n => __n_49
  # DEBUG __x => &__x_copy
  # DEBUG __niter => __n_49
  # DEBUG __first => __first_7
  if (__n_49 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_110 = PHI <__n_49(15), __n_61(18)>
  # __first_74 = PHI <__first_7(15), __first_62(18)>
  # DEBUG __niter => __n_110
  # DEBUG __first => __first_74
  *__first_74 = __x_copy.519_34;
  __n_61 = __n_110 + 18446744073709551615;
  # DEBUG __niter => __n_61
  __first_62 = __first_74 + 4;
  # DEBUG __first => __first_62
  # DEBUG __niter => __n_61
  # DEBUG __first => __first_62
  if (__n_61 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _159 = __n_49 * 4;
  __first_122 = __first_7 + _159;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_124 = PHI <__first_122(17), __first_7(14)>
  this_4(D)->D.48427._M_impl._M_finish = __first_124;
  # DEBUG D#2432 => &this_4(D)->D.48427
  # DEBUG this => D#2432
  # DEBUG this => &__position
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __alloc => D#2422
  # DEBUG D#2421 => D#2422
  # DEBUG D#2420 => D#2421
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG D.127583 => D#2420
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __assignable => 1
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3097
  # DEBUG __it => D#3097
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __it => __first_124
  # DEBUG __it => __first_124
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3097
  # DEBUG __it => D#3097
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG __simple => 1
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __result => __first_124
  # DEBUG _Num => _21
  if (_21 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_169 = (long unsigned int) _22;
  goto <bb 22>;

  <bb 21>:
  _57 = (long unsigned int) _22;
  __builtin_memmove (__first_124, __position_15, _57);
  pretmp_167 = this_4(D)->D.48427._M_impl._M_finish;

  <bb 22>:
  # prephitmp_168 = PHI <__first_124(20), pretmp_167(21)>
  # prephitmp_170 = PHI <pretmp_169(20), _57(21)>
  _52 = prephitmp_168 + prephitmp_170;
  this_4(D)->D.48427._M_impl._M_finish = _52;
  # DEBUG this => &__position
  # DEBUG __first => D#3097
  # DEBUG __last => __first_7
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3097
  if (__first_7 == __position_15)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_109 = PHI <__position_15(23), __position_56(25)>
  # DEBUG __first => __position_109
  *__position_109 = __x_copy.519_34;
  __position_56 = __position_109 + 4;
  # DEBUG __first => __position_56
  # DEBUG __first => __position_56
  if (__first_7 == __position_56)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1698 => this_4(D)
  # DEBUG this => D#1698
  # DEBUG D#1697 => D#1698
  # DEBUG D#1696 => &D#1697->D.48427
  # DEBUG this => D#1696
  # DEBUG __a => D#1695
  # DEBUG D#1694 => D#1695
  # DEBUG D#1693 => D#1694
  # DEBUG this => D#1693
  _16 = MEM[(eNextVCState * *)this_4(D)];
  # DEBUG D#194 => this_4(D)
  # DEBUG D#194 => this_4(D)
  # DEBUG this => D#194
  # DEBUG this => D#194
  _115 = (long int) _16;
  _116 = _8 - _115;
  _117 = _116 /[ex] 4;
  _118 = (const long unsigned int) _117;
  _119 = 4611686018427387903 - _118;
  if (__n_2(D) > _119)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#194 => this_4(D)
  # DEBUG D#194 => this_4(D)
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG D#194 => this_4(D)
  # DEBUG D#194 => this_4(D)
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG __a => &D.138163
  # DEBUG __b => &__n
  _75 = MAX_EXPR <__n_2(D), _118>;
  __len_123 = _75 + _118;
  # DEBUG __len => __len_123
  # DEBUG D#194 => this_4(D)
  # DEBUG D#194 => this_4(D)
  # DEBUG this => D#194
  # DEBUG this => D#194
  # DEBUG D#1698 => this_4(D)
  # DEBUG this => D#1698
  # DEBUG D#1697 => D#1698
  # DEBUG D#1696 => &D#1697->D.48427
  # DEBUG this => D#1696
  # DEBUG __a => D#1695
  # DEBUG D#1694 => D#1695
  # DEBUG D#1693 => D#1694
  # DEBUG this => D#1693
  _151 = __len_123 > 4611686018427387903;
  _139 = _118 > __len_123;
  _113 = _139 | _151;
  if (_113 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_165 = __len_123 * 4;

  <bb 30>:
  # _155 = PHI <_141(44), _150(29)>
  # _156 = PHI <_140(44), _149(29)>
  # prephitmp_166 = PHI <18446744073709551612(44), pretmp_165(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#456 => &this_4(D)->D.48427._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#456
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74424
  # DEBUG this => &__position
  # DEBUG this => &D.74424
  # DEBUG D#2443 => _156 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#2443
  # DEBUG D#2442 => &this_4(D)->D.48427
  # DEBUG D#1706 => D#2442
  # DEBUG __n => NULL
  # DEBUG this => D#1706
  # DEBUG D#1705 => D#1706
  # DEBUG D#1704 => &D#1705->_M_impl
  # DEBUG D#1703 => D#1704
  # DEBUG __n => NULL
  # DEBUG __a => D#1703
  # DEBUG D#1702 => D#1703
  # DEBUG D#1700 => D#1702
  # DEBUG D#1701 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1700
  # DEBUG D.138151 => D#1701
  # DEBUG D#1699 => D#1700
  # DEBUG D#1693 => D#1699
  # DEBUG this => D#1693
  _111 = operator new (prephitmp_166);
  pretmp_28 = this_4(D)->D.48427._M_impl._M_start;
  pretmp_146 = this_4(D)->D.48427._M_impl._M_finish;
  pretmp_148 = _111 + prephitmp_166;
  pretmp_144 = (long int) pretmp_146;
  pretmp_142 = (long int) pretmp_28;
  pretmp_137 = _155 - pretmp_142;

  <bb 31>:
  # iftmp.529_112 = PHI <0B(45), _111(30)>
  # _157 = PHI <_150(45), _155(30)>
  # _152 = PHI <_149(45), _156(30)>
  # prephitmp_145 = PHI <_16(45), pretmp_28(30)>
  # prephitmp_147 = PHI <0B(45), pretmp_148(30)>
  # prephitmp_120 = PHI <_8(45), pretmp_144(30)>
  # prephitmp_136 = PHI <_149(45), pretmp_137(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2426 => &this_4(D)->D.48427
  # DEBUG this => D#2426
  _18 = (long unsigned int) _152;
  __first_19 = iftmp.529_112 + _18;
  # DEBUG __first => __first_19
  # DEBUG __n => __n_2(D)
  # DEBUG __x => __x_20(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_19
  pretmp_114 = MEM[(const eNextVCState &)__x_20(D)];

  <bb 32>:
  # __n_131 = PHI <__n_78(33), __n_2(D)(31)>
  # __first_154 = PHI <__first_79(33), __first_19(31)>
  # DEBUG __niter => __n_131
  # DEBUG __first => __first_154
  *__first_154 = pretmp_114;
  __n_78 = __n_131 + 18446744073709551615;
  # DEBUG __niter => __n_78
  __first_79 = __first_154 + 4;
  # DEBUG __first => __first_79
  # DEBUG __niter => __n_78
  # DEBUG __first => __first_79
  if (__n_78 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2427 => &this_4(D)->D.48427
  # DEBUG this => D#2427
  # DEBUG this => &__position
  # DEBUG D#3096 => this_4(D)->D.48427._M_impl._M_start
  # DEBUG __first => D#3096
  # DEBUG __last => D#3097
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2424
  # DEBUG D#2423 => D#2424
  # DEBUG D#2420 => D#2423
  # DEBUG __first => D#3096
  # DEBUG __last => D#3097
  # DEBUG __result => NULL
  # DEBUG D.127698 => D#2420
  # DEBUG __first => D#3096
  # DEBUG __last => D#3097
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3096
  # DEBUG __last => D#3097
  # DEBUG __result => NULL
  # DEBUG __first => D#3096
  # DEBUG __last => D#3097
  # DEBUG __result => NULL
  # DEBUG __it => D#3097
  # DEBUG __it => D#3097
  # DEBUG __it => D#3096
  # DEBUG __it => D#3096
  # DEBUG __first => D#3096
  # DEBUG __last => D#3097
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3097
  # DEBUG __it => D#3097
  # DEBUG __it => D#3096
  # DEBUG __it => D#3096
  # DEBUG __first => D#3096
  # DEBUG __last => D#3097
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3096
  # DEBUG __last => D#3097
  # DEBUG __result => NULL
  # DEBUG D#3095 => (long int) D#3096
  # DEBUG D#3094 => _157 - D#3095
  _Num_71 = prephitmp_136 /[ex] 4;
  # DEBUG _Num => _Num_71
  if (_Num_71 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_161 = (long unsigned int) prephitmp_136;
  goto <bb 37>;

  <bb 36>:
  _72 = (long unsigned int) prephitmp_136;
  __builtin_memmove (iftmp.529_112, prephitmp_145, _72);

  <bb 37>:
  # prephitmp_162 = PHI <pretmp_161(35), _72(36)>
  # DEBUG D#3093 => (long unsigned int) D#3094
  # DEBUG __new_finish => iftmp.529_112 + D#3093
  _24 = __n_2(D) * 4;
  _132 = _24 + prephitmp_162;
  __new_finish_25 = iftmp.529_112 + _132;
  # DEBUG __new_finish => __new_finish_25
  # DEBUG D#2428 => &this_4(D)->D.48427
  # DEBUG this => D#2428
  # DEBUG D#3092 => this_4(D)->D.48427._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#3097
  # DEBUG __last => D#3092
  # DEBUG __result => __new_finish_25
  # DEBUG __alloc => D#2424
  # DEBUG D#2423 => D#2424
  # DEBUG D#2420 => D#2423
  # DEBUG __first => D#3097
  # DEBUG __last => D#3092
  # DEBUG __result => __new_finish_25
  # DEBUG D.127659 => D#2420
  # DEBUG __first => D#3097
  # DEBUG __last => D#3092
  # DEBUG __result => __new_finish_25
  # DEBUG __assignable => 1
  # DEBUG __first => D#3097
  # DEBUG __last => D#3092
  # DEBUG __result => __new_finish_25
  # DEBUG __first => D#3097
  # DEBUG __last => D#3092
  # DEBUG __result => __new_finish_25
  # DEBUG __it => D#3092
  # DEBUG __it => D#3092
  # DEBUG __it => D#3097
  # DEBUG __it => D#3097
  # DEBUG __first => D#3097
  # DEBUG __last => D#3092
  # DEBUG __result => __new_finish_25
  # DEBUG __it => __new_finish_25
  # DEBUG __it => __new_finish_25
  # DEBUG __it => D#3092
  # DEBUG __it => D#3092
  # DEBUG __it => D#3097
  # DEBUG __it => D#3097
  # DEBUG __first => D#3097
  # DEBUG __last => D#3092
  # DEBUG __result => __new_finish_25
  # DEBUG __simple => 1
  # DEBUG __first => D#3097
  # DEBUG __last => D#3092
  # DEBUG __result => __new_finish_25
  _64 = prephitmp_120 - _157;
  _Num_65 = _64 /[ex] 4;
  # DEBUG _Num => _Num_65
  if (_Num_65 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_163 = (long unsigned int) _64;
  goto <bb 40>;

  <bb 39>:
  _66 = (long unsigned int) _64;
  __builtin_memcpy (__new_finish_25, __position_15, _66);

  <bb 40>:
  # prephitmp_164 = PHI <pretmp_163(38), _66(39)>
  _68 = __new_finish_25 + prephitmp_164;
  # DEBUG __new_finish => _68
  # DEBUG D#2429 => &this_4(D)->D.48427
  # DEBUG this => D#2429
  # DEBUG D#2441 => this_4(D)->D.48427._M_impl._M_finish
  # DEBUG D#2440 => this_4(D)->D.48427._M_impl._M_start
  # DEBUG __first => D#2440
  # DEBUG __last => D#2441
  # DEBUG D.127652 => NULL
  # DEBUG D#443 => D#2440
  # DEBUG D#444 => D#2441
  # DEBUG __first => D#443
  # DEBUG __last => D#444
  # DEBUG D#442 => D#444
  # DEBUG D#441 => D#443
  # DEBUG D#439 => D#441
  # DEBUG D#440 => D#442
  # DEBUG D.101757 => D#439
  # DEBUG D.101756 => D#440
  # DEBUG D#2439 => this_4(D)->D.48427._M_impl._M_end_of_storage
  # DEBUG D#2438 => (long int) D#2439
  # DEBUG D#2437 => (long int) D#3096
  # DEBUG D#2436 => D#2438 - D#2437
  # DEBUG D#2435 => D#2436 /[ex] 4
  # DEBUG D#2434 => (long unsigned int) D#2435
  # DEBUG D#2433 => &this_4(D)->D.48427
  # DEBUG this => D#2433
  # DEBUG __p => D#3096
  # DEBUG __n => D#2434
  if (prephitmp_145 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#862 => &D#2433->_M_impl
  # DEBUG D#860 => D#862
  # DEBUG D#861 => D#2434
  # DEBUG __p => D#3096
  # DEBUG __a => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  # DEBUG D#856 => D#858
  # DEBUG D#857 => D#859
  # DEBUG __p => D#3096
  # DEBUG this => D#856
  # DEBUG D.127648 => D#857
  operator delete (prephitmp_145);

  <bb 42>:
  this_4(D)->D.48427._M_impl._M_start = iftmp.529_112;
  this_4(D)->D.48427._M_impl._M_finish = _68;
  this_4(D)->D.48427._M_impl._M_end_of_storage = prephitmp_147;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#456 => &this_4(D)->D.48427._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#456
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74424
  # DEBUG this => &__position
  _141 = (long int) __position_15;
  # DEBUG this => &D.74424
  _140 = _141 - _115;
  # DEBUG D#2443 => _140 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#2443
  # DEBUG D#2442 => &this_4(D)->D.48427
  # DEBUG D#1706 => D#2442
  # DEBUG __n => NULL
  # DEBUG this => D#1706
  # DEBUG D#1705 => D#1706
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#456 => &this_4(D)->D.48427._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#456
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74424
  # DEBUG this => &__position
  _150 = (long int) __position_15;
  # DEBUG this => &D.74424
  _149 = _150 - _115;
  # DEBUG D#2443 => _149 /[ex] 4
  # DEBUG __elems_before => (const size_type) D#2443
  # DEBUG D#2442 => &this_4(D)->D.48427
  # DEBUG D#1706 => D#2442
  # DEBUG __n => NULL
  # DEBUG this => D#1706
  # DEBUG D#1705 => D#1706
  if (__len_123 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function std::vector<bool, _Alloc>& std::vector<bool, _Alloc>::operator=(const std::vector<bool, _Alloc>&) [with _Alloc = std::allocator<bool>] (_ZNSt6vectorIbSaIbEEaSERKS1_, funcdef_no=4405, decl_uid=42645, cgraph_uid=2754, symbol_order=2755)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::vector<bool, _Alloc>& std::vector<bool, _Alloc>::operator=(const std::vector<bool, _Alloc>&) [with _Alloc = std::allocator<bool>] (struct vector * const this, const struct vector & __x)
{
  unsigned int SR.5028;
  _Bit_type * SR.5027;
  const unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.5024;
  _Bit_type * SR.5023;
  unsigned int SR.5022;
  _Bit_type * SR.5021;
  unsigned int __result$8;
  _Bit_type * __result;
  unsigned int SR.5018;
  _Bit_type * SR.5017;
  unsigned int SR.5016;
  _Bit_type * SR.5015;
  unsigned int SR.5014;
  _Bit_type * SR.5013;
  struct _Bit_iterator D.138373;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.138348;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.138347;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __last$D27024$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D27024$_M_offset;
  struct _Bit_iterator D.138320;
  struct iterator D.138319;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  _Bit_type * SR.1849;
  struct iterator D.78829;
  long unsigned int * const _6;
  _Bit_type * _7;
  struct _Bvector_base * _8;
  unsigned int _10;
  _Bit_type * const pretmp_11;
  _Bit_type * prephitmp_16;
  long int _17;
  long int _18;
  long int _19;
  long int _20;
  long int _21;
  ptrdiff_t _22;
  size_type _23;
  unsigned int _24;
  _Bit_type * _25;
  unsigned int _26;
  _Bit_type * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  ptrdiff_t _35;
  size_type _36;
  unsigned int _37;
  _Bit_type * _38;
  unsigned int _39;
  _Bit_type * _40;
  long int _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _47;
  ptrdiff_t _48;
  size_type _49;
  long unsigned int _53;
  size_t _54;
  long unsigned int _55;
  long unsigned int * _56;
  long unsigned int * _57;
  long int pretmp_58;
  long int _59;
  long unsigned int _60;
  long unsigned int _61;
  unsigned int _67;
  _Bit_type * const prephitmp_69;
  long unsigned int _75;
  long unsigned int pretmp_85;
  long int prephitmp_86;
  long int pretmp_89;
  long unsigned int prephitmp_91;
  _Distance pretmp_92;
  _Distance prephitmp_93;
  _Bit_type * const prephitmp_95;
  long int pretmp_96;
  const unsigned int pretmp_99;
  long unsigned int _100;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _105;
  long unsigned int _107;
  long unsigned int _108;
  long unsigned int _109;
  long unsigned int _110;
  long unsigned int _111;
  _Bit_type * const pretmp_123;
  _Bit_type cstore_141;

  <bb 2>:
  if (__x_3(D) == this_4(D))
    goto <bb 25>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG this => __x_3(D)
  # DEBUG this => __x_3(D)
  # DEBUG D#142 => &__x_3(D)->D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _24 = MEM[(const struct _Bit_iterator *)__x_3(D)].D.26904._M_offset;
  _25 = MEM[(const struct _Bit_iterator *)__x_3(D)].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _25
  # DEBUG __y => _24
  # DEBUG this => D#28
  # DEBUG this => __x_3(D)
  # DEBUG D#143 => &__x_3(D)->D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  _26 = MEM[(const struct _Bit_iterator *)__x_3(D) + 16B].D.26904._M_offset;
  _27 = MEM[(const struct _Bit_iterator *)__x_3(D) + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _27
  # DEBUG __y => _26
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _28 = (long int) _27;
  _29 = (long int) _25;
  _30 = _28 - _29;
  _31 = _30 * 8;
  _32 = (long int) _26;
  _33 = _31 + _32;
  _34 = (long int) _24;
  _35 = _33 - _34;
  _36 = (size_type) _35;
  # DEBUG this => this_4(D)
  # DEBUG this => this_4(D)
  # DEBUG D#142 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _10 = MEM[(const struct _Bit_iterator *)this_4(D)].D.26904._M_offset;
  _7 = MEM[(const struct _Bit_iterator *)this_4(D)].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _7
  # DEBUG __y => _10
  # DEBUG this => D#28
  # DEBUG D#373 => &MEM[(const struct vector *)this_4(D)].D.43009._M_impl
  _6 = MEM[(long unsigned int * *)this_4(D) + 32B];
  # DEBUG D#324 => D#373
  # DEBUG this => D#324
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _17 = (long int) _6;
  _18 = (long int) _7;
  _19 = _17 - _18;
  _20 = _19 * 8;
  _21 = (long int) _10;
  _22 = _20 - _21;
  _23 = (size_type) _22;
  if (_23 < _36)
    goto <bb 4>;
  else
    goto <bb 7>;

  <bb 4>:
  _8 = &this_4(D)->D.43009;
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_8);
  # DEBUG this => __x_3(D)
  # DEBUG this => __x_3(D)
  # DEBUG D#142 => &__x_3(D)->D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _37 = MEM[(const struct _Bit_iterator *)__x_3(D)].D.26904._M_offset;
  _38 = MEM[(const struct _Bit_iterator *)__x_3(D)].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _38
  # DEBUG __y => _37
  # DEBUG this => D#28
  # DEBUG this => __x_3(D)
  # DEBUG D#143 => &__x_3(D)->D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  _39 = MEM[(const struct _Bit_iterator *)__x_3(D) + 16B].D.26904._M_offset;
  _40 = MEM[(const struct _Bit_iterator *)__x_3(D) + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _40
  # DEBUG __y => _39
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _41 = (long int) _40;
  _42 = (long int) _38;
  _43 = _41 - _42;
  _44 = _43 * 8;
  _45 = (long int) _39;
  _46 = _44 + _45;
  _47 = (long int) _37;
  _48 = _46 - _47;
  _49 = (size_type) _48;
  # DEBUG this => this_4(D)
  # DEBUG __n => _49
  # DEBUG D#967 => &this_4(D)->D.43009
  # DEBUG D#965 => D#967
  # DEBUG __n => _49
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  # DEBUG __n => _49
  _53 = _49 + 63;
  _54 = _53 >> 6;
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => NULL
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#959
  # DEBUG D.138282 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  _55 = _54 * 8;
  _56 = operator new (_55);
  # DEBUG __q => _56
  # DEBUG __n => _49
  _57 = _56 + _55;
  this_4(D)->D.43009._M_impl._M_end_of_storage = _57;
  # DEBUG __r => _56
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  MEM[(struct _Bit_iterator *)this_4(D)] = _56;
  MEM[(struct _Bit_iterator *)this_4(D) + 8B] = 0;
  # DEBUG D#966 => &this_4(D)->D.43009._M_impl._M_start
  # DEBUG this => D#966
  # DEBUG __i => _48
  # DEBUG __tmp$_M_p => _56
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _48
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => _48
  # DEBUG __n => _48
  _59 = _48 / 64;
  _60 = (long unsigned int) _59;
  _61 = _60 * 8;
  __tmp$_M_p_62 = _56 + _61;
  # DEBUG __tmp$_M_p => __tmp$_M_p_62
  __n_63 = _48 % 64;
  # DEBUG __n => __n_63
  if (__n_63 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __n_64 = __n_63 + 64;
  # DEBUG __n => __n_64
  __tmp$_M_p_65 = __tmp$_M_p_62 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_65

  <bb 6>:
  # __n_66 = PHI <__n_63(4), __n_64(5)>
  # __tmp$_M_p_68 = PHI <__tmp$_M_p_62(4), __tmp$_M_p_65(5)>

  <bb 27>:
  # DEBUG __tmp$_M_p => __tmp$_M_p_68
  # DEBUG __n => __n_66
  _67 = (unsigned int) __n_66;
  # DEBUG __tmp$_M_offset => _67
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  MEM[(struct _Bit_iterator *)this_4(D) + 16B] = __tmp$_M_p_68;
  MEM[(struct _Bit_iterator *)this_4(D) + 24B] = _67;
  pretmp_99 = MEM[(const struct _Bit_iterator *)__x_3(D) + 16B].D.26904._M_offset;
  pretmp_123 = MEM[(const struct _Bit_iterator *)__x_3(D)].D.26904._M_p;
  pretmp_11 = MEM[(const struct _Bit_iterator *)__x_3(D) + 16B].D.26904._M_p;
  pretmp_58 = (long int) pretmp_11;
  pretmp_96 = (long int) pretmp_123;
  pretmp_89 = pretmp_58 - pretmp_96;
  pretmp_92 = (_Distance) pretmp_99;

  <bb 7>:
  # prephitmp_95 = PHI <_25(3), pretmp_123(27)>
  # prephitmp_69 = PHI <_27(3), pretmp_11(27)>
  # prephitmp_16 = PHI <_7(3), _56(27)>
  # prephitmp_86 = PHI <_30(3), pretmp_89(27)>
  # prephitmp_93 = PHI <_32(3), pretmp_92(27)>
  # DEBUG this => this_4(D)
  # DEBUG D#3163 => MEM[(struct vector *)this_4(D)]
  # DEBUG D#984 => MEM[(struct vector *)this_4(D) + 8B]
  # DEBUG D.105887 => D#984
  # DEBUG this => __x_3(D)
  # DEBUG D#143 => &__x_3(D)->D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  # DEBUG D#3162 => MEM[(const struct _Bit_iterator *)__x_3(D) + 16B].D.26904._M_offset
  # DEBUG D#3161 => MEM[(const struct _Bit_iterator *)__x_3(D) + 16B].D.26904._M_p
  # DEBUG this => D#28
  # DEBUG __x => D#3161
  # DEBUG __y => D#3162
  # DEBUG this => D#28
  # DEBUG this => __x_3(D)
  # DEBUG D#142 => &__x_3(D)->D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG D#983 => MEM[(const struct _Bit_iterator *)__x_3(D)].D.26904._M_offset
  # DEBUG D#3160 => MEM[(const struct _Bit_iterator *)__x_3(D)].D.26904._M_p
  # DEBUG this => D#28
  # DEBUG __x => D#3160
  # DEBUG __y => D#983
  # DEBUG this => D#28
  # DEBUG D.105891 => D#983
  # DEBUG D#976 => this_4(D)
  # DEBUG D#977 => D.84862
  # DEBUG D#978 => D.84861
  # DEBUG D#978 => D.84861
  # DEBUG D#979 => D.84860
  # DEBUG this => D#976
  # DEBUG __last$D27024$_M_p => D#3161
  # DEBUG __first => D#3160
  # DEBUG __last => D#3161
  # DEBUG __result => D#3163
  # DEBUG __it => D#3161
  # DEBUG __it => D#3161
  # DEBUG __it => D#3160
  # DEBUG __it => D#3160
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#3163
  # DEBUG __it => D#3163
  # DEBUG __it => D#3163
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#3163
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => D#3163
  _Num_74 = prephitmp_86 /[ex] 8;
  # DEBUG _Num => _Num_74
  if (_Num_74 != 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  pretmp_85 = (long unsigned int) prephitmp_86;
  goto <bb 10>;

  <bb 9>:
  _75 = (long unsigned int) prephitmp_86;
  __builtin_memmove (prephitmp_16, prephitmp_95, _75);

  <bb 10>:
  # prephitmp_91 = PHI <pretmp_85(8), _75(9)>
  SR.5013_77 = prephitmp_16 + prephitmp_91;
  # DEBUG __q => SR.5013_77
  # DEBUG this => NULL
  # DEBUG __x => SR.5013_77
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => SR.5013_77
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG this => NULL
  # DEBUG __x => D#3161
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => D#3161
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG D#974 => __last
  # DEBUG D#974 => __last
  # DEBUG __it$D27024$_M_p => D#3161
  # DEBUG __it$D27024$_M_offset => D#3162
  # DEBUG __it$D27024$_M_p => D#3161
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __it$D26904$_M_p => SR.5013_77
  # DEBUG __it$D26904$_M_offset => 0
  # DEBUG __it$D27024$_M_p => D#3161
  # DEBUG __it$D27024$_M_offset => D#3162
  # DEBUG __it$D27024$_M_p => D#3161
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __result => SR.5013_77
  # DEBUG __result$8 => 0
  # DEBUG __simple => 0
  # DEBUG __result => SR.5013_77
  # DEBUG __result$8 => 0
  # DEBUG __first$_M_p => D#3161
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => SR.5013_77
  # DEBUG __result$8 => 0
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => SR.5013_77
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => D#3161
  # DEBUG __n => (_Distance) D#3162
  if (prephitmp_93 == 0)
    goto <bb 24>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __n_134 = PHI <prephitmp_93(11), __n_116(23)>
  # __first$8_137 = PHI <0(11), __first$8_118(23)>
  # __first$_M_p_138 = PHI <prephitmp_69(11), __first$_M_p_117(23)>
  # SR.5014_81 = PHI <0(11), SR.5014_120(23)>
  # SR.5013_13 = PHI <SR.5013_77(11), SR.5013_119(23)>
  # DEBUG __result$8 => SR.5014_81
  # DEBUG __result$_M_p => SR.5013_13
  # DEBUG __first$8 => __first$8_137
  # DEBUG __first$_M_p => __first$_M_p_138
  # DEBUG __n => __n_134
  # DEBUG D#29 => &__first
  # DEBUG D#29 => &__first
  # DEBUG this => D#29
  # DEBUG this => D#29
  _100 = 1 << __first$8_137;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_138
  # DEBUG __y => _100
  # DEBUG this => NULL
  _102 = *__first$_M_p_138;
  _103 = _100 & _102;
  # DEBUG D#21 => &__result
  # DEBUG D#21 => &__result
  # DEBUG this => D#21
  # DEBUG this => D#21
  _105 = 1 << SR.5014_81;
  # DEBUG this => NULL
  # DEBUG __x => SR.5013_13
  # DEBUG __y => _105
  # DEBUG this => NULL
  # DEBUG __x => _103 != 0
  if (_103 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _107 = *SR.5013_13;
  _108 = _105 | _107;
  goto <bb 15>;

  <bb 14>:
  _109 = *SR.5013_13;
  _110 = ~_105;
  _111 = _109 & _110;

  <bb 15>:
  # cstore_141 = PHI <_108(13), _111(14)>
  *SR.5013_13 = cstore_141;
  # DEBUG this => &__first
  # DEBUG D#30 => &__first.D.27024
  # DEBUG this => D#30
  # DEBUG __first$8 => __first$8_137 + 1
  if (__first$8_137 == 63)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  __first$8_112 = __first$8_137 + 1;
  goto <bb 18>;

  <bb 17>:
  # DEBUG __first$8 => 0
  __first$_M_p_113 = __first$_M_p_138 + 8;
  # DEBUG __first$_M_p => __first$_M_p_113

  <bb 18>:
  # __first$_M_p_117 = PHI <__first$_M_p_138(16), __first$_M_p_113(17)>
  # __first$8_118 = PHI <__first$8_112(16), 0(17)>
  # DEBUG __first$8 => __first$8_118
  # DEBUG __first$_M_p => __first$_M_p_117
  # DEBUG this => &__result
  # DEBUG D#22 => &__result.D.26904
  # DEBUG this => D#22
  # DEBUG __result$8 => SR.5014_81 + 1
  if (SR.5014_81 == 63)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  SR.5014_114 = SR.5014_81 + 1;
  goto <bb 21>;

  <bb 20>:
  # DEBUG __result$8 => 0
  SR.5013_115 = SR.5013_13 + 8;
  # DEBUG __result$_M_p => SR.5013_115

  <bb 21>:
  # SR.5013_119 = PHI <SR.5013_13(19), SR.5013_115(20)>
  # SR.5014_120 = PHI <SR.5014_114(19), 0(20)>
  # DEBUG __result$8 => SR.5014_120
  # DEBUG __result$_M_p => SR.5013_119
  __n_116 = __n_134 + -1;
  # DEBUG __n => __n_116
  # DEBUG __result$8 => SR.5014_120
  # DEBUG __result$_M_p => SR.5013_119
  # DEBUG __first$8 => __first$8_118
  # DEBUG __first$_M_p => __first$_M_p_117
  # DEBUG __n => __n_116
  if (__n_116 == 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  # SR.5013_144 = PHI <SR.5013_119(21)>
  # SR.5014_143 = PHI <SR.5014_120(21)>

  <bb 26>:
  goto <bb 24>;

  <bb 23>:
  goto <bb 12>;

  <bb 24>:
  # SR.5014_82 = PHI <SR.5014_143(26), 0(10)>
  # SR.5013_80 = PHI <SR.5013_144(26), SR.5013_77(10)>

  <bb 28>:
  # DEBUG __result => SR.5013_80
  # DEBUG __result$8 => SR.5014_82
  MEM[(struct _Bit_iterator *)this_4(D) + 16B] = SR.5013_80;
  MEM[(struct _Bit_iterator *)this_4(D) + 24B] = SR.5014_82;

  <bb 25>:

  <bb 29>:
  return this_4(D);

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<bool>*; _Size = long unsigned int; _Tp = std::vector<bool>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIbSaIbEEmS4_EET_S6_T0_RKT1_, funcdef_no=4406, decl_uid=77380, cgraph_uid=2755, symbol_order=2756)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<bool>*; _Size = long unsigned int; _Tp = std::vector<bool>; bool _TrivialValueType = false] (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  struct _Bit_iterator D.138550;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.138525;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.138524;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __last$D27024$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D27024$_M_offset;
  struct _Bit_iterator D.138497;
  struct iterator D.138496;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.138448;
  struct _Bvector_base * _7;
  void * _12;
  long unsigned int _19;
  unsigned int _26;
  _Bit_type * _27;
  unsigned int _28;
  _Bit_type * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  ptrdiff_t _37;
  size_type _38;
  _Bit_type * _41;
  struct _Bvector_base * _43;
  size_t _44;
  long unsigned int _45;
  long unsigned int * _46;
  long unsigned int * _47;
  long int _49;
  long unsigned int _50;
  long unsigned int _51;
  unsigned int _57;
  long int __last.51_62;
  long int __first.52_63;
  long int _64;
  long unsigned int _66;
  long unsigned int _92;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int prephitmp_96;
  long unsigned int _97;
  long unsigned int pretmp_98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  _Bit_type cstore_138;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 28>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_135 = PHI <__n_5(D)(3), __n_10(27)>
  # __first_136 = PHI <__first_4(D)(3), __first_11(27)>
  # DEBUG __cur => __first_136
  # DEBUG __n => __n_135
  # DEBUG __r => __first_136
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 40
  # DEBUG __p => NULL
  # DEBUG D.109329 => D#12
  if (__first_136 != 0B)
    goto <bb 5>;
  else
    goto <bb 25>;

  <bb 5>:
  # DEBUG this => __first_136
  # DEBUG __x => __x_8(D)
  # DEBUG D#980 => &__x_8(D)->D.43009
  # DEBUG this => D#980
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.105806 => NULL
  # DEBUG this => NULL
  # DEBUG D#982 => &__first_136->D.43009
  # DEBUG this => D#982
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.103219 => NULL
  # DEBUG this => NULL
  # DEBUG D#742 => &D#982->_M_impl
  # DEBUG this => D#742
  # DEBUG __a => NULL
  # DEBUG this => D#742
  # DEBUG __a => NULL
  # DEBUG this => D#742
  # DEBUG D.103193 => NULL
  # DEBUG D#741 => &D#742->_M_start
  # DEBUG this => D#741
  # DEBUG D#19 => &D#741->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)__first_136]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__first_136]._M_offset = 0;
  # DEBUG D#740 => &D#742->_M_finish
  # DEBUG this => D#740
  # DEBUG D#19 => &D#740->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)__first_136 + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__first_136 + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)__first_136]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => __x_8(D)
  # DEBUG this => __x_8(D)
  # DEBUG D#142 => &__x_8(D)->D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _26 = MEM[(const struct _Bit_iterator *)__x_8(D)].D.26904._M_offset;
  _27 = MEM[(const struct _Bit_iterator *)__x_8(D)].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _27
  # DEBUG __y => _26
  # DEBUG this => D#28
  # DEBUG this => __x_8(D)
  # DEBUG D#143 => &__x_8(D)->D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  _28 = MEM[(const struct _Bit_iterator *)__x_8(D) + 16B].D.26904._M_offset;
  _29 = MEM[(const struct _Bit_iterator *)__x_8(D) + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _29
  # DEBUG __y => _28
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _30 = (long int) _29;
  _31 = (long int) _27;
  _32 = _30 - _31;
  _33 = _32 * 8;
  _34 = (long int) _28;
  _35 = _33 + _34;
  _36 = (long int) _26;
  _37 = _35 - _36;
  _38 = (size_type) _37;
  # DEBUG this => __first_136
  # DEBUG __n => _38
  # DEBUG D#967 => &__first_136->D.43009
  # DEBUG D#965 => D#967
  # DEBUG __n => _38
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  # DEBUG __n => _38
  _19 = _38 + 63;
  _44 = _19 >> 6;
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => NULL
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#959
  # DEBUG D.138459 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  _45 = _44 * 8;
  _46 = operator new (_45);

  <bb 6>:
  # DEBUG __q => _46
  # DEBUG __n => _38
  _47 = _46 + _45;
  __first_136->D.43009._M_impl._M_end_of_storage = _47;
  # DEBUG __r => _46
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  MEM[(struct _Bit_iterator *)__first_136] = _46;
  MEM[(struct _Bit_iterator *)__first_136 + 8B] = 0;
  # DEBUG D#966 => &__first_136->D.43009._M_impl._M_start
  # DEBUG this => D#966
  # DEBUG __i => _37
  # DEBUG __tmp$_M_p => _46
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _37
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => _37
  # DEBUG __n => _37
  _49 = _37 / 64;
  _50 = (long unsigned int) _49;
  _51 = _50 * 8;
  __tmp$_M_p_52 = _46 + _51;
  # DEBUG __tmp$_M_p => __tmp$_M_p_52
  __n_53 = _37 % 64;
  # DEBUG __n => __n_53
  if (__n_53 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __n_54 = __n_53 + 64;
  # DEBUG __n => __n_54
  __tmp$_M_p_55 = __tmp$_M_p_52 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_55

  <bb 8>:
  # __n_56 = PHI <__n_53(6), __n_54(7)>
  # __tmp$_M_p_58 = PHI <__tmp$_M_p_52(6), __tmp$_M_p_55(7)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_58
  # DEBUG __n => __n_56
  _57 = (unsigned int) __n_56;
  # DEBUG __tmp$_M_offset => _57
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  MEM[(struct _Bit_iterator *)__first_136 + 16B] = __tmp$_M_p_58;
  MEM[(struct _Bit_iterator *)__first_136 + 24B] = _57;
  # DEBUG this => __x_8(D)
  # DEBUG D#143 => &__x_8(D)->D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  __it$D27024$_M_offset_39 = MEM[(const struct _Bit_iterator *)__x_8(D) + 16B].D.26904._M_offset;
  __first$_M_p_40 = MEM[(const struct _Bit_iterator *)__x_8(D) + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => __it$D27024$_M_offset_39
  # DEBUG this => D#28
  # DEBUG this => __x_8(D)
  # DEBUG D#142 => &__x_8(D)->D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG D#981 => MEM[(const struct _Bit_iterator *)__x_8(D)].D.26904._M_offset
  _41 = MEM[(const struct _Bit_iterator *)__x_8(D)].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _41
  # DEBUG __y => D#981
  # DEBUG this => D#28
  # DEBUG D.105826 => D#981
  # DEBUG D#976 => __first_136
  # DEBUG D#979 => __first_136->D.43009._M_impl._M_start
  # DEBUG this => D#976
  # DEBUG __last$D27024$_M_p => __first$_M_p_40
  # DEBUG __first => _41
  # DEBUG __last => __first$_M_p_40
  # DEBUG __result => _46
  # DEBUG __it => __first$_M_p_40
  # DEBUG __it => __first$_M_p_40
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  # DEBUG __it => _46
  # DEBUG __it => _46
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  __last.51_62 = (long int) __first$_M_p_40;
  __first.52_63 = (long int) _41;
  _64 = __last.51_62 - __first.52_63;
  _Num_65 = _64 /[ex] 8;
  # DEBUG _Num => _Num_65
  if (_Num_65 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  pretmp_98 = (long unsigned int) _64;
  goto <bb 11>;

  <bb 10>:
  _66 = (long unsigned int) _64;
  __builtin_memmove (_46, _41, _66);

  <bb 11>:
  # prephitmp_96 = PHI <pretmp_98(9), _66(10)>
  __result$_M_p_68 = _46 + prephitmp_96;
  # DEBUG __q => __result$_M_p_68
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_68
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => __result$_M_p_68
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG D#974 => __last
  # DEBUG D#974 => __last
  # DEBUG __it$D27024$_M_p => __first$_M_p_40
  # DEBUG __it$D27024$_M_offset => __it$D27024$_M_offset_39
  # DEBUG __it$D27024$_M_p => __first$_M_p_40
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __it$D26904$_M_p => __result$_M_p_68
  # DEBUG __it$D26904$_M_offset => 0
  # DEBUG __it$D27024$_M_p => __first$_M_p_40
  # DEBUG __it$D27024$_M_offset => __it$D27024$_M_offset_39
  # DEBUG __it$D27024$_M_p => __first$_M_p_40
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => __first$_M_p_40
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_68
  # DEBUG __result$8 => 0
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  __n_86 = (_Distance) __it$D27024$_M_offset_39;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_68
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_40
  # DEBUG __n => __n_86
  if (__n_86 == 0)
    goto <bb 25>;
  else
    goto <bb 12>;

  <bb 12>:

  <bb 13>:
  # __n_145 = PHI <__n_86(12), __n_108(23)>
  # __first$8_146 = PHI <0(12), __first$8_110(23)>
  # __first$_M_p_82 = PHI <__first$_M_p_40(12), __first$_M_p_109(23)>
  # __result$8_83 = PHI <0(12), __result$8_112(23)>
  # __result$_M_p_80 = PHI <__result$_M_p_68(12), __result$_M_p_111(23)>
  # DEBUG __result$8 => __result$8_83
  # DEBUG __result$_M_p => __result$_M_p_80
  # DEBUG __first$8 => __first$8_146
  # DEBUG __first$_M_p => __first$_M_p_82
  # DEBUG __n => __n_145
  # DEBUG D#29 => &__first
  # DEBUG D#29 => &__first
  # DEBUG this => D#29
  # DEBUG this => D#29
  _92 = 1 << __first$8_146;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_82
  # DEBUG __y => _92
  # DEBUG this => NULL
  _94 = *__first$_M_p_82;
  _95 = _92 & _94;
  # DEBUG D#21 => &__result
  # DEBUG D#21 => &__result
  # DEBUG this => D#21
  # DEBUG this => D#21
  _97 = 1 << __result$8_83;
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_80
  # DEBUG __y => _97
  # DEBUG this => NULL
  # DEBUG __x => _95 != 0
  if (_95 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _99 = *__result$_M_p_80;
  _100 = _97 | _99;
  goto <bb 16>;

  <bb 15>:
  _101 = *__result$_M_p_80;
  _102 = ~_97;
  _103 = _101 & _102;

  <bb 16>:
  # cstore_138 = PHI <_100(14), _103(15)>
  *__result$_M_p_80 = cstore_138;
  # DEBUG this => &__first
  # DEBUG D#30 => &__first.D.27024
  # DEBUG this => D#30
  # DEBUG __first$8 => __first$8_146 + 1
  if (__first$8_146 == 63)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  __first$8_104 = __first$8_146 + 1;
  goto <bb 19>;

  <bb 18>:
  # DEBUG __first$8 => 0
  __first$_M_p_105 = __first$_M_p_82 + 8;
  # DEBUG __first$_M_p => __first$_M_p_105

  <bb 19>:
  # __first$_M_p_109 = PHI <__first$_M_p_82(17), __first$_M_p_105(18)>
  # __first$8_110 = PHI <__first$8_104(17), 0(18)>
  # DEBUG __first$8 => __first$8_110
  # DEBUG __first$_M_p => __first$_M_p_109
  # DEBUG this => &__result
  # DEBUG D#22 => &__result.D.26904
  # DEBUG this => D#22
  # DEBUG __result$8 => __result$8_83 + 1
  if (__result$8_83 == 63)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  __result$8_106 = __result$8_83 + 1;
  goto <bb 22>;

  <bb 21>:
  # DEBUG __result$8 => 0
  __result$_M_p_107 = __result$_M_p_80 + 8;
  # DEBUG __result$_M_p => __result$_M_p_107

  <bb 22>:
  # __result$_M_p_111 = PHI <__result$_M_p_80(20), __result$_M_p_107(21)>
  # __result$8_112 = PHI <__result$8_106(20), 0(21)>
  # DEBUG __result$8 => __result$8_112
  # DEBUG __result$_M_p => __result$_M_p_111
  __n_108 = __n_145 + -1;
  # DEBUG __n => __n_108
  # DEBUG __result$8 => __result$8_112
  # DEBUG __result$_M_p => __result$_M_p_111
  # DEBUG __first$8 => __first$8_110
  # DEBUG __first$_M_p => __first$_M_p_109
  # DEBUG __n => __n_108
  if (__n_108 == 0)
    goto <bb 25>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 13>;

  # __first_2 = PHI <__first_136(5)>
<L7>:
  _43 = &__first_2->D.43009;
  # DEBUG this => _43
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_43);
  # DEBUG D#571 => &_43->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__first_2] ={v} {CLOBBER};
  resx 4

  <bb 25>:
  __n_10 = __n_135 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_136 + 40;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # __first_9 = PHI <__first_11(25)>
  goto <bb 28>;

  <bb 27>:
  goto <bb 4>;

  <bb 28>:
  # __first_139 = PHI <__first_9(26), __first_4(D)(2)>
  return __first_139;

<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_2
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_2
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_2)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __cxa_rethrow ();

  <bb 31>:

  <bb 32>:
  # __first_142 = PHI <__first_4(D)(31), __first_17(33)>
  # DEBUG __first => __first_142
  # DEBUG __r => __first_142
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _7 = &__first_142->D.43009;
  # DEBUG this => _7
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_7);
  # DEBUG D#571 => &_7->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__first_142] ={v} {CLOBBER};
  __first_17 = __first_142 + 40;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (__first_17 == __first_2)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<Flit*>*; _Size = long unsigned int; _Tp = std::queue<Flit*>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5queueIP4FlitSt5dequeIS4_SaIS4_EEEmS8_EET_SA_T0_RKT1_, funcdef_no=4506, decl_uid=78229, cgraph_uid=2855, symbol_order=2856)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<Flit*>*; _Size = long unsigned int; _Tp = std::queue<Flit*>; bool _TrivialValueType = false] (struct queue * __first, long unsigned int __n, const struct queue & __x)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.5066;
  struct Flit * * SR.5065;
  struct Flit * * SR.5064;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.138679;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138654;
  struct _Deque_iterator D.138653;
  struct _Deque_iterator D.138652;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138634;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138620;
  struct _Deque_iterator D.138619;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138612;
  struct _Deque_iterator D.138611;
  struct _Deque_iterator D.138610;
  void * _12;
  struct _Deque_base * _18;
  struct Flit * * * _25;
  long int _26;
  struct Flit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Flit * * _33;
  long int _34;
  struct Flit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Flit * * _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Flit * * _49;
  struct Flit * * _51;
  struct Flit * * * _52;
  struct Flit * * _53;
  struct Flit * * _54;
  struct Flit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Flit * _117;
  struct Flit * * _122;
  struct Flit * * * _134;
  struct Flit * * _135;
  struct Flit * * _136;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_154 = PHI <__n_5(D)(3), __n_10(16)>
  # __first_155 = PHI <__first_4(D)(3), __first_11(16)>
  # DEBUG __cur => __first_155
  # DEBUG __n => __n_154
  # DEBUG __r => __first_155
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.115207 => D#12
  if (__first_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.115317 => __x_8(D)
  # DEBUG D#3169 => &__x_8(D)->c
  # DEBUG D#3171 => &__first_155->c
  # DEBUG this => D#3171
  # DEBUG __x => D#3169
  # DEBUG this => D#3169
  # DEBUG D#209 => &D#3169->D.44077._M_impl._M_start
  # DEBUG D#210 => &D#3169->D.44077._M_impl._M_finish
  # DEBUG __x => D#210
  # DEBUG __y => D#209
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1825 => &D#3169->D.44077
  # DEBUG this => D#1825
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__first_155].D.44077;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1581 => &_48->_M_impl
  # DEBUG this => D#1581
  # DEBUG __a => NULL
  # DEBUG this => D#1581
  # DEBUG __a => NULL
  # DEBUG this => D#1581
  # DEBUG D.103517 => NULL
  MEM[(struct _Deque_impl *)__first_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_155]._M_map_size = 0;
  # DEBUG D#794 => &D#1581->_M_start
  # DEBUG this => D#794
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_node = 0B;
  # DEBUG D#793 => &D#1581->_M_finish
  # DEBUG this => D#793
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1826 => &D#3171->D.44077
  # DEBUG this => D#1826
  # DEBUG D#1827 => &D#3171->D.44077._M_impl._M_start
  # DEBUG this => &D.138610
  # DEBUG __x => D#1827
  _49 = MEM[(const struct iterator &)__first_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__first_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__first_155 + 16]._M_node;
  # DEBUG this => D#3169
  # DEBUG D#207 => &D#3169->D.44077._M_impl._M_finish
  # DEBUG this => &D.138611
  # DEBUG __x => D#207
  _53 = MEM[(const struct iterator &)__x_8(D) + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__x_8(D) + 48]._M_first;
  # DEBUG D#3170 => MEM[(const struct iterator &)__x_8(D) + 48]._M_last
  _56 = MEM[(const struct iterator &)__x_8(D) + 48]._M_node;
  # DEBUG this => D#3169
  # DEBUG D#208 => &D#3169->D.44077._M_impl._M_start
  # DEBUG this => &D.138612
  # DEBUG __x => D#208
  __first$_M_cur_57 = MEM[(const struct iterator &)__x_8(D) + 16]._M_cur;
  # DEBUG D#3172 => MEM[(const struct iterator &)__x_8(D) + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__x_8(D) + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__x_8(D) + 16]._M_node;
  # DEBUG __result => &D.138610
  # DEBUG D.138616 => D#1824
  # DEBUG this => &D.138620
  # DEBUG __x => &D.138610
  # DEBUG __result => &D.138620
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.138620
  # DEBUG __result => NULL
  # DEBUG this => &D.138634
  # DEBUG __x => NULL
  # DEBUG __result => &D.138634
  # DEBUG this => &D.138654
  # DEBUG __x => &D.138634
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3170
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3170
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3172
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3172
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.138654
  # DEBUG this => NULL
  # DEBUG __x => &D.138654
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3170
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3170
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3172
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3172
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#3172
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.138679
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#3172
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.138679
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.138619
  # DEBUG __x => &D.138679
  D.138679 ={v} {CLOBBER};
  D.138654 ={v} {CLOBBER};
  D.138634 ={v} {CLOBBER};
  D.138620 ={v} {CLOBBER};
  D.138610 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.5064_217 = PHI <_49(8), SR.5064_216(14)>
  # SR.5065_214 = PHI <_51(8), SR.5065_213(14)>
  # SR.5066_212 = PHI <_52(8), SR.5066_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#234 => &D.138679
  # DEBUG this => D#234
  # DEBUG D#137 => &__first
  # DEBUG this => D#137
  _117 = MEM[(struct Flit * const &)__first$_M_cur_209];
  *SR.5064_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Flit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.138679
  _122 = SR.5064_217 + 8;
  if (_122 == SR.5065_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.138679
  _134 = SR.5066_212 + 8;
  # DEBUG this => &D.138679
  # DEBUG __new_node => _134
  _135 = MEM[(struct Flit * * *)SR.5066_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.5064_216 = PHI <_122(11), _135(12)>
  # SR.5065_213 = PHI <SR.5065_214(11), _136(12)>
  # SR.5066_211 = PHI <SR.5066_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __n_10 = __n_154 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_155 + 80;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __first_194 = PHI <__first_11(15)>

  <bb 18>:
  # __first_156 = PHI <__first_194(17), __first_4(D)(2)>
  return __first_156;

  # __first_193 = PHI <__first_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __first_158 = PHI <__first_4(D)(21), __first_19(23)>
  # DEBUG __first => __first_158
  # DEBUG __r => __first_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _18 = &MEM[(struct deque *)__first_158].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_18);
  MEM[(struct  &)__first_158] ={v} {CLOBBER};
  __first_19 = __first_158 + 80;
  # DEBUG __first => __first_19
  # DEBUG __first => __first_19
  if (__first_19 == __first_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<Credit*>*; _Size = long unsigned int; _Tp = std::queue<Credit*>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5queueIP6CreditSt5dequeIS4_SaIS4_EEEmS8_EET_SA_T0_RKT1_, funcdef_no=4520, decl_uid=78305, cgraph_uid=2869, symbol_order=2870)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<Credit*>*; _Size = long unsigned int; _Tp = std::queue<Credit*>; bool _TrivialValueType = false] (struct queue * __first, long unsigned int __n, const struct queue & __x)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.5105;
  struct Credit * * SR.5104;
  struct Credit * * SR.5103;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.138836;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138811;
  struct _Deque_iterator D.138810;
  struct _Deque_iterator D.138809;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138791;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138777;
  struct _Deque_iterator D.138776;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138769;
  struct _Deque_iterator D.138768;
  struct _Deque_iterator D.138767;
  void * _12;
  struct _Deque_base * _18;
  struct Credit * * * _25;
  long int _26;
  struct Credit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Credit * * _33;
  long int _34;
  struct Credit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Credit * * _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Credit * * _49;
  struct Credit * * _51;
  struct Credit * * * _52;
  struct Credit * * _53;
  struct Credit * * _54;
  struct Credit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Credit * _117;
  struct Credit * * _122;
  struct Credit * * * _134;
  struct Credit * * _135;
  struct Credit * * _136;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_154 = PHI <__n_5(D)(3), __n_10(16)>
  # __first_155 = PHI <__first_4(D)(3), __first_11(16)>
  # DEBUG __cur => __first_155
  # DEBUG __n => __n_154
  # DEBUG __r => __first_155
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.115557 => D#12
  if (__first_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.115667 => __x_8(D)
  # DEBUG D#3174 => &__x_8(D)->c
  # DEBUG D#3176 => &__first_155->c
  # DEBUG this => D#3176
  # DEBUG __x => D#3174
  # DEBUG this => D#3174
  # DEBUG D#389 => &D#3174->D.59602._M_impl._M_start
  # DEBUG D#390 => &D#3174->D.59602._M_impl._M_finish
  # DEBUG __x => D#390
  # DEBUG __y => D#389
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1836 => &D#3174->D.59602
  # DEBUG this => D#1836
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__first_155].D.59602;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1612 => &_48->_M_impl
  # DEBUG this => D#1612
  # DEBUG __a => NULL
  # DEBUG this => D#1612
  # DEBUG __a => NULL
  # DEBUG this => D#1612
  # DEBUG D.103570 => NULL
  MEM[(struct _Deque_impl *)__first_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_155]._M_map_size = 0;
  # DEBUG D#806 => &D#1612->_M_start
  # DEBUG this => D#806
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_node = 0B;
  # DEBUG D#805 => &D#1612->_M_finish
  # DEBUG this => D#805
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1837 => &D#3176->D.59602
  # DEBUG this => D#1837
  # DEBUG D#1838 => &D#3176->D.59602._M_impl._M_start
  # DEBUG this => &D.138767
  # DEBUG __x => D#1838
  _49 = MEM[(const struct iterator &)__first_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__first_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__first_155 + 16]._M_node;
  # DEBUG this => D#3174
  # DEBUG D#224 => &D#3174->D.59602._M_impl._M_finish
  # DEBUG this => &D.138768
  # DEBUG __x => D#224
  _53 = MEM[(const struct iterator &)__x_8(D) + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__x_8(D) + 48]._M_first;
  # DEBUG D#3175 => MEM[(const struct iterator &)__x_8(D) + 48]._M_last
  _56 = MEM[(const struct iterator &)__x_8(D) + 48]._M_node;
  # DEBUG this => D#3174
  # DEBUG D#225 => &D#3174->D.59602._M_impl._M_start
  # DEBUG this => &D.138769
  # DEBUG __x => D#225
  __first$_M_cur_57 = MEM[(const struct iterator &)__x_8(D) + 16]._M_cur;
  # DEBUG D#3177 => MEM[(const struct iterator &)__x_8(D) + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__x_8(D) + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__x_8(D) + 16]._M_node;
  # DEBUG __result => &D.138767
  # DEBUG D.138773 => D#1835
  # DEBUG this => &D.138777
  # DEBUG __x => &D.138767
  # DEBUG __result => &D.138777
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.138777
  # DEBUG __result => NULL
  # DEBUG this => &D.138791
  # DEBUG __x => NULL
  # DEBUG __result => &D.138791
  # DEBUG this => &D.138811
  # DEBUG __x => &D.138791
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3175
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3175
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3177
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3177
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.138811
  # DEBUG this => NULL
  # DEBUG __x => &D.138811
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3175
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3175
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3177
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3177
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#3177
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.138836
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#3177
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.138836
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.138776
  # DEBUG __x => &D.138836
  D.138836 ={v} {CLOBBER};
  D.138811 ={v} {CLOBBER};
  D.138791 ={v} {CLOBBER};
  D.138777 ={v} {CLOBBER};
  D.138767 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.5103_217 = PHI <_49(8), SR.5103_216(14)>
  # SR.5104_214 = PHI <_51(8), SR.5104_213(14)>
  # SR.5105_212 = PHI <_52(8), SR.5105_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#254 => &D.138836
  # DEBUG this => D#254
  # DEBUG D#1834 => &__first
  # DEBUG this => D#1834
  _117 = MEM[(struct Credit * const &)__first$_M_cur_209];
  *SR.5103_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Credit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.138836
  _122 = SR.5103_217 + 8;
  if (_122 == SR.5104_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.138836
  _134 = SR.5105_212 + 8;
  # DEBUG this => &D.138836
  # DEBUG __new_node => _134
  _135 = MEM[(struct Credit * * *)SR.5105_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.5103_216 = PHI <_122(11), _135(12)>
  # SR.5104_213 = PHI <SR.5104_214(11), _136(12)>
  # SR.5105_211 = PHI <SR.5105_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __n_10 = __n_154 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_155 + 80;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __first_194 = PHI <__first_11(15)>

  <bb 18>:
  # __first_156 = PHI <__first_194(17), __first_4(D)(2)>
  return __first_156;

  # __first_193 = PHI <__first_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __first_158 = PHI <__first_4(D)(21), __first_19(23)>
  # DEBUG __first => __first_158
  # DEBUG __r => __first_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _18 = &MEM[(struct deque *)__first_158].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_18);
  MEM[(struct  &)__first_158] ={v} {CLOBBER};
  __first_19 = __first_158 + 80;
  # DEBUG __first => __first_19
  # DEBUG __first => __first_19
  if (__first_19 == __first_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<EventRouter::tArrivalEvent*>*; _Size = long unsigned int; _Tp = std::queue<EventRouter::tArrivalEvent*>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5queueIPN11EventRouter13tArrivalEventESt5dequeIS5_SaIS5_EEEmS9_EET_SB_T0_RKT1_, funcdef_no=4534, decl_uid=78381, cgraph_uid=2883, symbol_order=2884)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<EventRouter::tArrivalEvent*>*; _Size = long unsigned int; _Tp = std::queue<EventRouter::tArrivalEvent*>; bool _TrivialValueType = false] (struct queue * __first, long unsigned int __n, const struct queue & __x)
{
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_cur;
  struct tArrivalEvent * * * SR.5144;
  struct tArrivalEvent * * SR.5143;
  struct tArrivalEvent * * SR.5142;
  struct tArrivalEvent * * * __first$24;
  struct tArrivalEvent * * __first$16;
  struct tArrivalEvent * * __first$8;
  struct tArrivalEvent * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.138993;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138968;
  struct _Deque_iterator D.138967;
  struct _Deque_iterator D.138966;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138948;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138934;
  struct _Deque_iterator D.138933;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.138926;
  struct _Deque_iterator D.138925;
  struct _Deque_iterator D.138924;
  void * _12;
  struct _Deque_base * _18;
  struct tArrivalEvent * * * _25;
  long int _26;
  struct tArrivalEvent * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct tArrivalEvent * * _33;
  long int _34;
  struct tArrivalEvent * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct tArrivalEvent * * _40;
  long int _41;
  struct tArrivalEvent * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct tArrivalEvent * * _49;
  struct tArrivalEvent * * _51;
  struct tArrivalEvent * * * _52;
  struct tArrivalEvent * * _53;
  struct tArrivalEvent * * _54;
  struct tArrivalEvent * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct tArrivalEvent * _117;
  struct tArrivalEvent * * _122;
  struct tArrivalEvent * * * _134;
  struct tArrivalEvent * * _135;
  struct tArrivalEvent * * _136;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_154 = PHI <__n_5(D)(3), __n_10(16)>
  # __first_155 = PHI <__first_4(D)(3), __first_11(16)>
  # DEBUG __cur => __first_155
  # DEBUG __n => __n_154
  # DEBUG __r => __first_155
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.115907 => D#12
  if (__first_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.116017 => __x_8(D)
  # DEBUG D#3179 => &__x_8(D)->c
  # DEBUG D#3181 => &__first_155->c
  # DEBUG this => D#3181
  # DEBUG __x => D#3179
  # DEBUG this => D#3179
  # DEBUG D#392 => &D#3179->D.60628._M_impl._M_start
  # DEBUG D#393 => &D#3179->D.60628._M_impl._M_finish
  # DEBUG __x => D#393
  # DEBUG __y => D#392
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1847 => &D#3179->D.60628
  # DEBUG this => D#1847
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__first_155].D.60628;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1664 => &_48->_M_impl
  # DEBUG this => D#1664
  # DEBUG __a => NULL
  # DEBUG this => D#1664
  # DEBUG __a => NULL
  # DEBUG this => D#1664
  # DEBUG D.103623 => NULL
  MEM[(struct _Deque_impl *)__first_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_155]._M_map_size = 0;
  # DEBUG D#818 => &D#1664->_M_start
  # DEBUG this => D#818
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_node = 0B;
  # DEBUG D#817 => &D#1664->_M_finish
  # DEBUG this => D#817
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_node = 0B;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1848 => &D#3181->D.60628
  # DEBUG this => D#1848
  # DEBUG D#1849 => &D#3181->D.60628._M_impl._M_start
  # DEBUG this => &D.138924
  # DEBUG __x => D#1849
  _49 = MEM[(const struct iterator &)__first_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__first_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__first_155 + 16]._M_node;
  # DEBUG this => D#3179
  # DEBUG D#227 => &D#3179->D.60628._M_impl._M_finish
  # DEBUG this => &D.138925
  # DEBUG __x => D#227
  _53 = MEM[(const struct iterator &)__x_8(D) + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__x_8(D) + 48]._M_first;
  # DEBUG D#3180 => MEM[(const struct iterator &)__x_8(D) + 48]._M_last
  _56 = MEM[(const struct iterator &)__x_8(D) + 48]._M_node;
  # DEBUG this => D#3179
  # DEBUG D#228 => &D#3179->D.60628._M_impl._M_start
  # DEBUG this => &D.138926
  # DEBUG __x => D#228
  __first$_M_cur_57 = MEM[(const struct iterator &)__x_8(D) + 16]._M_cur;
  # DEBUG D#3182 => MEM[(const struct iterator &)__x_8(D) + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__x_8(D) + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__x_8(D) + 16]._M_node;
  # DEBUG __result => &D.138924
  # DEBUG D.138930 => D#1846
  # DEBUG this => &D.138934
  # DEBUG __x => &D.138924
  # DEBUG __result => &D.138934
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.138934
  # DEBUG __result => NULL
  # DEBUG this => &D.138948
  # DEBUG __x => NULL
  # DEBUG __result => &D.138948
  # DEBUG this => &D.138968
  # DEBUG __x => &D.138948
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3180
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3180
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3182
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3182
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.138968
  # DEBUG this => NULL
  # DEBUG __x => &D.138968
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3180
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3180
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3182
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3182
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#3182
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.138993
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#3182
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.138993
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.138933
  # DEBUG __x => &D.138993
  D.138993 ={v} {CLOBBER};
  D.138968 ={v} {CLOBBER};
  D.138948 ={v} {CLOBBER};
  D.138934 ={v} {CLOBBER};
  D.138924 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.5142_217 = PHI <_49(8), SR.5142_216(14)>
  # SR.5143_214 = PHI <_51(8), SR.5143_213(14)>
  # SR.5144_212 = PHI <_52(8), SR.5144_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#244 => &D.138993
  # DEBUG this => D#244
  # DEBUG D#1845 => &__first
  # DEBUG this => D#1845
  _117 = MEM[(struct tArrivalEvent * const &)__first$_M_cur_209];
  *SR.5142_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct tArrivalEvent * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.138993
  _122 = SR.5142_217 + 8;
  if (_122 == SR.5143_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.138993
  _134 = SR.5144_212 + 8;
  # DEBUG this => &D.138993
  # DEBUG __new_node => _134
  _135 = MEM[(struct tArrivalEvent * * *)SR.5144_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.5142_216 = PHI <_122(11), _135(12)>
  # SR.5143_213 = PHI <SR.5143_214(11), _136(12)>
  # SR.5144_211 = PHI <SR.5144_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __n_10 = __n_154 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_155 + 80;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __first_194 = PHI <__first_11(15)>

  <bb 18>:
  # __first_156 = PHI <__first_194(17), __first_4(D)(2)>
  return __first_156;

  # __first_193 = PHI <__first_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __first_158 = PHI <__first_4(D)(21), __first_19(23)>
  # DEBUG __first => __first_158
  # DEBUG __r => __first_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  _18 = &MEM[(struct deque *)__first_158].D.60628;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (_18);
  MEM[(struct  &)__first_158] ={v} {CLOBBER};
  __first_19 = __first_158 + 80;
  # DEBUG __first => __first_19
  # DEBUG __first => __first_19
  if (__first_19 == __first_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<EventRouter::tTransportEvent*>*; _Size = long unsigned int; _Tp = std::queue<EventRouter::tTransportEvent*>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt5queueIPN11EventRouter15tTransportEventESt5dequeIS5_SaIS5_EEEmS9_EET_SB_T0_RKT1_, funcdef_no=4550, decl_uid=78471, cgraph_uid=2899, symbol_order=2900)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::queue<EventRouter::tTransportEvent*>*; _Size = long unsigned int; _Tp = std::queue<EventRouter::tTransportEvent*>; bool _TrivialValueType = false] (struct queue * __first, long unsigned int __n, const struct queue & __x)
{
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_cur;
  struct tTransportEvent * * * SR.5183;
  struct tTransportEvent * * SR.5182;
  struct tTransportEvent * * SR.5181;
  struct tTransportEvent * * * __first$24;
  struct tTransportEvent * * __first$16;
  struct tTransportEvent * * __first$8;
  struct tTransportEvent * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.139150;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.139125;
  struct _Deque_iterator D.139124;
  struct _Deque_iterator D.139123;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.139105;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.139091;
  struct _Deque_iterator D.139090;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.139083;
  struct _Deque_iterator D.139082;
  struct _Deque_iterator D.139081;
  void * _12;
  struct _Deque_base * _18;
  struct tTransportEvent * * * _25;
  long int _26;
  struct tTransportEvent * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct tTransportEvent * * _33;
  long int _34;
  struct tTransportEvent * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct tTransportEvent * * _40;
  long int _41;
  struct tTransportEvent * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct tTransportEvent * * _49;
  struct tTransportEvent * * _51;
  struct tTransportEvent * * * _52;
  struct tTransportEvent * * _53;
  struct tTransportEvent * * _54;
  struct tTransportEvent * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct tTransportEvent * _117;
  struct tTransportEvent * * _122;
  struct tTransportEvent * * * _134;
  struct tTransportEvent * * _135;
  struct tTransportEvent * * _136;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_154 = PHI <__n_5(D)(3), __n_10(16)>
  # __first_155 = PHI <__first_4(D)(3), __first_11(16)>
  # DEBUG __cur => __first_155
  # DEBUG __n => __n_154
  # DEBUG __r => __first_155
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.116257 => D#12
  if (__first_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.116367 => __x_8(D)
  # DEBUG D#3184 => &__x_8(D)->c
  # DEBUG D#3186 => &__first_155->c
  # DEBUG this => D#3186
  # DEBUG __x => D#3184
  # DEBUG this => D#3184
  # DEBUG D#395 => &D#3184->D.61649._M_impl._M_start
  # DEBUG D#396 => &D#3184->D.61649._M_impl._M_finish
  # DEBUG __x => D#396
  # DEBUG __y => D#395
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__x_8(D) + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__x_8(D) + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1858 => &D#3184->D.61649
  # DEBUG this => D#1858
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__first_155].D.61649;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1638 => &_48->_M_impl
  # DEBUG this => D#1638
  # DEBUG __a => NULL
  # DEBUG this => D#1638
  # DEBUG __a => NULL
  # DEBUG this => D#1638
  # DEBUG D.103669 => NULL
  MEM[(struct _Deque_impl *)__first_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__first_155]._M_map_size = 0;
  # DEBUG D#828 => &D#1638->_M_start
  # DEBUG this => D#828
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 16B]._M_node = 0B;
  # DEBUG D#827 => &D#1638->_M_finish
  # DEBUG this => D#827
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__first_155 + 48B]._M_node = 0B;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1859 => &D#3186->D.61649
  # DEBUG this => D#1859
  # DEBUG D#1860 => &D#3186->D.61649._M_impl._M_start
  # DEBUG this => &D.139081
  # DEBUG __x => D#1860
  _49 = MEM[(const struct iterator &)__first_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__first_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__first_155 + 16]._M_node;
  # DEBUG this => D#3184
  # DEBUG D#230 => &D#3184->D.61649._M_impl._M_finish
  # DEBUG this => &D.139082
  # DEBUG __x => D#230
  _53 = MEM[(const struct iterator &)__x_8(D) + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__x_8(D) + 48]._M_first;
  # DEBUG D#3185 => MEM[(const struct iterator &)__x_8(D) + 48]._M_last
  _56 = MEM[(const struct iterator &)__x_8(D) + 48]._M_node;
  # DEBUG this => D#3184
  # DEBUG D#231 => &D#3184->D.61649._M_impl._M_start
  # DEBUG this => &D.139083
  # DEBUG __x => D#231
  __first$_M_cur_57 = MEM[(const struct iterator &)__x_8(D) + 16]._M_cur;
  # DEBUG D#3187 => MEM[(const struct iterator &)__x_8(D) + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__x_8(D) + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__x_8(D) + 16]._M_node;
  # DEBUG __result => &D.139081
  # DEBUG D.139087 => D#1857
  # DEBUG this => &D.139091
  # DEBUG __x => &D.139081
  # DEBUG __result => &D.139091
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.139091
  # DEBUG __result => NULL
  # DEBUG this => &D.139105
  # DEBUG __x => NULL
  # DEBUG __result => &D.139105
  # DEBUG this => &D.139125
  # DEBUG __x => &D.139105
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3185
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3185
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3187
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3187
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.139125
  # DEBUG this => NULL
  # DEBUG __x => &D.139125
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3185
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3185
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3187
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3187
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#3187
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.139150
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#3187
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.139150
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.139090
  # DEBUG __x => &D.139150
  D.139150 ={v} {CLOBBER};
  D.139125 ={v} {CLOBBER};
  D.139105 ={v} {CLOBBER};
  D.139091 ={v} {CLOBBER};
  D.139081 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.5181_217 = PHI <_49(8), SR.5181_216(14)>
  # SR.5182_214 = PHI <_51(8), SR.5182_213(14)>
  # SR.5183_212 = PHI <_52(8), SR.5183_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#266 => &D.139150
  # DEBUG this => D#266
  # DEBUG D#1856 => &__first
  # DEBUG this => D#1856
  _117 = MEM[(struct tTransportEvent * const &)__first$_M_cur_209];
  *SR.5181_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct tTransportEvent * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.139150
  _122 = SR.5181_217 + 8;
  if (_122 == SR.5182_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.139150
  _134 = SR.5183_212 + 8;
  # DEBUG this => &D.139150
  # DEBUG __new_node => _134
  _135 = MEM[(struct tTransportEvent * * *)SR.5183_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.5181_216 = PHI <_122(11), _135(12)>
  # SR.5182_213 = PHI <SR.5182_214(11), _136(12)>
  # SR.5183_211 = PHI <SR.5183_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __n_10 = __n_154 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_155 + 80;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __first_194 = PHI <__first_11(15)>

  <bb 18>:
  # __first_156 = PHI <__first_194(17), __first_4(D)(2)>
  return __first_156;

  # __first_193 = PHI <__first_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_193
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __first_158 = PHI <__first_4(D)(21), __first_19(23)>
  # DEBUG __first => __first_158
  # DEBUG __r => __first_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  _18 = &MEM[(struct deque *)__first_158].D.61649;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (_18);
  MEM[(struct  &)__first_158] ={v} {CLOBBER};
  __first_19 = __first_158 + 80;
  # DEBUG __first => __first_19
  # DEBUG __first => __first_19
  if (__first_19 == __first_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::__cxx11::list<_Tp, _Alloc>& std::__cxx11::list<_Tp, _Alloc>::operator=(const std::__cxx11::list<_Tp, _Alloc>&) [with _Tp = EventNextVCState::tWaiting*; _Alloc = std::allocator<EventNextVCState::tWaiting*>] (_ZNSt7__cxx114listIPN16EventNextVCState8tWaitingESaIS3_EEaSERKS5_, funcdef_no=4576, decl_uid=63663, cgraph_uid=2925, symbol_order=2926)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::__cxx11::list<_Tp, _Alloc>& std::__cxx11::list<_Tp, _Alloc>::operator=(const std::__cxx11::list<_Tp, _Alloc>&) [with _Tp = EventNextVCState::tWaiting*; _Alloc = std::allocator<EventNextVCState::tWaiting*>] (struct list * const this, const struct list & __x)
{
  struct iterator __position;
  struct _List_iterator D.139309;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  const struct _List_node_base * __first;
  const struct _List_node_base * const __last$_M_node;
  struct _List_const_iterator __first;
  struct _List_const_iterator __last;
  struct list __tmp;
  struct _Node * __tmp;
  struct _List_node_base * __position;
  struct iterator __position;
  struct _List_const_iterator __first;
  struct _List_const_iterator __last;
  struct iterator D.139237;
  struct _List_node_base * const __first$_M_node;
  struct iterator __first;
  struct iterator __last;
  const struct _List_node_base * __first2$_M_node;
  struct _List_node_base * __first1$_M_node;
  struct const_iterator __last2;
  struct const_iterator __first2;
  struct iterator __last1;
  struct iterator __first1;
  struct iterator D.79813;
  struct _List_node_base * _7;
  struct tWaiting * _9;
  const struct _List_node_base * _11;
  long unsigned int _30;
  long unsigned int _31;
  struct _List_node_base * _32;
  const long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  bool _41;
  struct _List_node * _48;
  struct tWaiting * _50;
  struct _List_node_base * _52;
  long unsigned int _53;
  long unsigned int _54;
  bool _61;
  bool _62;
  bool _63;
  struct _List_node_base * prephitmp_78;
  struct _List_node_base * pretmp_93;
  bool _112;
  bool _114;

  <bb 2>:
  if (this_4(D) != __x_5(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 24>;

  <bb 4>:
  __first1$_M_node_16 = MEM[(struct _List_node_base * *)this_4(D)];
  # DEBUG D#197 => this_4(D)
  # DEBUG this => D#197
  # DEBUG this => NULL
  # DEBUG __x => __first1$_M_node_16
  # DEBUG __first1$_M_node => __first1$_M_node_16
  # DEBUG this => this_4(D)
  _7 = &this_4(D)->D.63942._M_impl._M_node.D.45287;
  # DEBUG this => NULL
  # DEBUG __x => _7
  # DEBUG __last1$_M_node => _7
  __first2$_M_node_17 = MEM[(struct _List_node_base * *)__x_5(D)];
  # DEBUG D#198 => __x_5(D)
  # DEBUG this => D#198
  # DEBUG this => NULL
  # DEBUG __x => __first2$_M_node_17
  # DEBUG __first2$_M_node => __first2$_M_node_17
  # DEBUG this => __x_5(D)
  _11 = &__x_5(D)->D.63942._M_impl._M_node.D.45287;
  # DEBUG this => NULL
  # DEBUG __x => _11
  # DEBUG __last2$_M_node => _11
  # DEBUG __first2$_M_node => __first2$_M_node_17
  # DEBUG __first1$_M_node => __first1$_M_node_16
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  _61 = _11 != __first2$_M_node_17;
  _62 = _7 != __first1$_M_node_16;
  _63 = _61 & _62;
  if (_63 != 0)
    goto <bb 25>;
  else
    goto <bb 29>;

  <bb 5>:

  <bb 6>:
  # __first1$_M_node_49 = PHI <__first1$_M_node_72(5), __first1$_M_node_29(7)>
  # DEBUG __first$_M_node => __first1$_M_node_49
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => this_4(D)
  # DEBUG __position$_M_node => __first1$_M_node_49
  __first1$_M_node_29 = __first1$_M_node_49->_M_next;
  # DEBUG this => &__ret
  # DEBUG __x => __first1$_M_node_29
  # DEBUG __ret$_M_node => __first1$_M_node_29
  # DEBUG this => &__position
  # DEBUG this => this_4(D)
  # DEBUG __position => __first1$_M_node_49
  # DEBUG __position$_M_node => __first1$_M_node_49
  # DEBUG D#892 => &this_4(D)->D.63942
  # DEBUG D#280 => D#892
  # DEBUG __n => 1
  # DEBUG this => D#280
  _30 = MEM[(long unsigned int *)this_4(D) + 16B];
  _31 = _30 + 18446744073709551615;
  MEM[(long unsigned int *)this_4(D) + 16B] = _31;
  std::__detail::_List_node_base::_M_unhook (__first1$_M_node_49);
  # DEBUG __n => __first1$_M_node_49
  # DEBUG D#893 => &MEM[(struct _Node *)__first1$_M_node_49]._M_data
  # DEBUG __r => D#893
  # DEBUG D#895 => &this_4(D)->D.63942
  # DEBUG D#877 => D#895
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#894 => &this_4(D)->D.63942
  # DEBUG D#454 => D#894
  # DEBUG __p => __first1$_M_node_49
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __first1$_M_node_49
  # DEBUG this => D#450
  # DEBUG D.139232 => D#451
  operator delete (__first1$_M_node_49);
  # DEBUG D#1792 => {CLOBBER}
  # DEBUG __ret$_M_node => D#1792
  # DEBUG __first$_M_node => __first1$_M_node_29
  # DEBUG __first$_M_node => __first1$_M_node_29
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_7 != __first1$_M_node_29)
    goto <bb 7>;
  else
    goto <bb 3>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  # DEBUG this => this_4(D)
  # DEBUG D#2022 => this_4(D)
  # DEBUG this => D#2022
  # DEBUG D#2021 => D#2022
  # DEBUG D#2020 => &D#2021->D.63942
  # DEBUG D#2019 => D#2020
  # DEBUG this => D#2019
  # DEBUG D#2018 => D#2019
  # DEBUG this => D#2018
  # DEBUG this => NULL
  # DEBUG D.118434 => NULL
  # DEBUG this => NULL
  # DEBUG this => &__tmp
  # DEBUG __a => &D.139273
  # DEBUG this => NULL
  # DEBUG D.118474 => &D.139273
  # DEBUG this => NULL
  # DEBUG D#2024 => &__tmp.D.63942
  # DEBUG this => D#2024
  # DEBUG __a => NULL
  # DEBUG D#902 => &D#2024->_M_impl
  # DEBUG this => D#902
  # DEBUG __a => NULL
  # DEBUG this => D#902
  # DEBUG __a => NULL
  # DEBUG this => D#902
  # DEBUG D.104323 => NULL
  MEM[(struct _List_impl *)&__tmp]._M_node._M_data = 0;
  # DEBUG this => D#2024
  MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287._M_next = &MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287;
  MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287._M_prev = &MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287;
  # DEBUG D#449 => D#2024
  # DEBUG __n => 0
  # DEBUG this => D#449
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &__tmp
  # DEBUG __first => __first2$_M_node_101
  # DEBUG __last$_M_node => _11
  # DEBUG __first$_M_node => __first2$_M_node_101
  # DEBUG __first$_M_node => __first2$_M_node_101
  # DEBUG this => &__first
  # DEBUG __x => &__last

  <bb 9>:
  # __first2$_M_node_57 = PHI <__first2$_M_node_44(11), __first2$_M_node_101(8)>
  # DEBUG __first$_M_node => __first2$_M_node_57
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#3189 => &MEM[(const struct _Node *)__first2$_M_node_57]._M_data
  # DEBUG this => &__tmp
  # DEBUG __x => NULL
  # DEBUG this => &__tmp
  # DEBUG this => NULL
  # DEBUG __x => &__tmp.D.63942._M_impl._M_node.D.45287
  # DEBUG this => &__tmp
  # DEBUG __x => D#3189
  # DEBUG D#1304 => &__tmp
  # DEBUG __x => D#3189
  # DEBUG this => D#1304
  # DEBUG D#1303 => D#1304
  # DEBUG D#1302 => D#1304
  # DEBUG D#1301 => &D#1302->D.63942
  # DEBUG D#1299 => D#1301
  # DEBUG this => D#1299
  # DEBUG D#1298 => D#1299
  # DEBUG D#1297 => &D#1298->_M_impl
  # DEBUG D#1295 => D#1297
  # DEBUG D#1296 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1295
  # DEBUG D.139320 => D#1296
  # DEBUG D#1294 => D#1295
  # DEBUG D#1293 => D#1294
  # DEBUG this => D#1293
  _48 = operator new (24);

  <bb 10>:
  # DEBUG __p => _48
  # DEBUG D#3190 => &MEM[(struct _Node *)_48]._M_data
  # DEBUG __r => D#3190
  # DEBUG D#1300 => &D#1303->D.63942
  # DEBUG D#877 => D#1300
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#3189
  # DEBUG this => D#457
  # DEBUG D#12 => 8
  # DEBUG __p => NULL
  # DEBUG D.101844 => D#12
  _50 = MEM[(struct tWaiting * const &)__first2$_M_node_57 + 16];
  MEM[(struct tWaiting * *)_48 + 16B] = _50;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _48
  _52 = &MEM[(struct _Node *)_48].D.69419;
  std::__detail::_List_node_base::_M_hook (_52, &__tmp.D.63942._M_impl._M_node.D.45287);
  # DEBUG D#1305 => &__tmp.D.63942
  # DEBUG D#279 => D#1305
  # DEBUG __n => 1
  # DEBUG this => D#279
  _53 = MEM[(long unsigned int *)&__tmp + 16B];
  _54 = _53 + 1;
  MEM[(long unsigned int *)&__tmp + 16B] = _54;
  # DEBUG this => &__first
  __first2$_M_node_44 = __first2$_M_node_57->_M_next;
  # DEBUG __first$_M_node => __first2$_M_node_44
  # DEBUG __first$_M_node => __first2$_M_node_44
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_11 != __first2$_M_node_44)
    goto <bb 11>;
  else
    goto <bb 17>;

  <bb 11>:
  goto <bb 9>;

<L15>:
  # DEBUG D#2023 => &__tmp.D.63942
  # DEBUG this => D#2023
  # DEBUG this => D#2023
  __tmp_45 = MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_45
  # DEBUG __cur => __tmp_45
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287 == __tmp_45)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  # DEBUG D#879 => &D#2023->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  resx 3

  <bb 14>:

  <bb 15>:
  # __tmp_39 = PHI <__tmp_45(14), __tmp_47(16)>
  # DEBUG __cur => __tmp_39
  # DEBUG __tmp => __tmp_39
  __tmp_47 = __tmp_39->D.69419._M_next;
  # DEBUG __cur => __tmp_47
  # DEBUG D#878 => &__tmp_39->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#2023
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#2023
  # DEBUG __p => __tmp_39
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_39
  # DEBUG this => D#450
  # DEBUG D.139286 => D#451
  operator delete (__tmp_39);
  # DEBUG __cur => __tmp_47
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287 == __tmp_47)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

  <bb 17>:
  # DEBUG this => &D.139273
  # DEBUG this => &D.139273
  # DEBUG this => this_4(D)
  # DEBUG __position => _7
  # DEBUG __x => &__tmp
  # DEBUG this => &__tmp
  _32 = __tmp.D.63942._M_impl._M_node.D.45287._M_next;
  if (&__tmp.D.63942._M_impl._M_node.D.45287 != _32)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG D#2195 => this_4(D)
  # DEBUG D#2196 => &__tmp
  # DEBUG this => D#2195
  # DEBUG __x => D#2196
  # DEBUG D#2194 => D#2195
  # DEBUG D#2193 => D#2196
  # DEBUG D#2191 => &D#2193->D.63942
  # DEBUG this => D#2191
  # DEBUG D#2192 => &D#2194->D.63942
  # DEBUG this => D#2192
  # DEBUG D.122554 => D#2189
  # DEBUG D.122553 => D#2190
  # DEBUG this => &__tmp
  # DEBUG this => NULL
  # DEBUG __x => &__tmp.D.63942._M_impl._M_node.D.45287
  # DEBUG D#197 => &__tmp
  # DEBUG this => D#197
  # DEBUG this => NULL
  # DEBUG __x => _32
  # DEBUG this => &__position
  # DEBUG D#2025 => this_4(D)
  # DEBUG __position$_M_node => _7
  # DEBUG __first$_M_node => _32
  # DEBUG __last$_M_node => &__tmp.D.63942._M_impl._M_node.D.45287
  # DEBUG this => D#2025
  std::__detail::_List_node_base::_M_transfer (_7, _32, &__tmp.D.63942._M_impl._M_node.D.45287);
  # DEBUG D#2197 => &__tmp.D.63942
  _33 = MEM[(long unsigned int *)&__tmp + 16B];
  # DEBUG D#2026 => D#2197
  # DEBUG this => D#2026
  # DEBUG D#2198 => &this_4(D)->D.63942
  # DEBUG D#279 => D#2198
  # DEBUG __n => NULL
  # DEBUG this => D#279
  _34 = MEM[(long unsigned int *)this_4(D) + 16B];
  _35 = _33 + _34;
  MEM[(long unsigned int *)this_4(D) + 16B] = _35;
  # DEBUG D#2199 => &__tmp.D.63942
  # DEBUG D#449 => D#2199
  # DEBUG __n => 0
  # DEBUG this => D#449
  MEM[(long unsigned int *)&__tmp + 16B] = 0;
  pretmp_93 = MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287._M_next;

  <bb 19>:
  # prephitmp_78 = PHI <_32(17), pretmp_93(18)>
  # DEBUG this => &__tmp
  # DEBUG D#880 => &__tmp.D.63942
  # DEBUG this => D#880
  # DEBUG this => D#880
  # DEBUG D#3191 => MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287._M_next
  # DEBUG __cur => D#3191
  # DEBUG __cur => D#3191
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287 == prephitmp_78)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  __tmp ={v} {CLOBBER};
  goto <bb 24>;

  <bb 21>:

  <bb 22>:
  # __tmp_1 = PHI <prephitmp_78(21), __tmp_38(23)>
  # DEBUG __cur => __tmp_1
  # DEBUG __tmp => __tmp_1
  __tmp_38 = __tmp_1->D.69419._M_next;
  # DEBUG __cur => __tmp_38
  # DEBUG D#878 => &__tmp_1->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_1
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_1
  # DEBUG this => D#450
  # DEBUG D.139267 => D#451
  operator delete (__tmp_1);
  # DEBUG __cur => __tmp_38
  if (&MEM[(struct _List_base *)&__tmp]._M_impl._M_node.D.45287 == __tmp_38)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  return this_4(D);

  <bb 25>:

  <bb 26>:
  # __first2$_M_node_100 = PHI <__first2$_M_node_17(25), __first2$_M_node_18(28)>
  # __first1$_M_node_71 = PHI <__first1$_M_node_16(25), __first1$_M_node_19(28)>
  # DEBUG __first2$_M_node => __first2$_M_node_100
  # DEBUG __first1$_M_node => __first1$_M_node_71
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  # DEBUG this => &__first1
  # DEBUG this => &__first2
  _9 = MEM[(struct tWaiting * const &)__first2$_M_node_100 + 16];
  MEM[(struct tWaiting * &)__first1$_M_node_71 + 16] = _9;
  # DEBUG this => &__first1
  __first1$_M_node_19 = __first1$_M_node_71->_M_next;
  # DEBUG __first1$_M_node => __first1$_M_node_19
  # DEBUG this => &__first2
  __first2$_M_node_18 = __first2$_M_node_100->_M_next;
  # DEBUG __first2$_M_node => __first2$_M_node_18
  # DEBUG __first2$_M_node => __first2$_M_node_18
  # DEBUG __first1$_M_node => __first1$_M_node_19
  # DEBUG this => &__first1
  # DEBUG __x => &__last1
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  _41 = _11 != __first2$_M_node_18;
  _112 = _7 != __first1$_M_node_19;
  _114 = _41 & _112;
  if (_114 != 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  # __first2$_M_node_15 = PHI <__first2$_M_node_18(26)>
  # __first1$_M_node_14 = PHI <__first1$_M_node_19(26)>
  goto <bb 29>;

  <bb 28>:
  goto <bb 26>;

  <bb 29>:
  # __first2$_M_node_101 = PHI <__first2$_M_node_15(27), __first2$_M_node_17(4)>
  # __first1$_M_node_72 = PHI <__first1$_M_node_14(27), __first1$_M_node_16(4)>
  # DEBUG this => &__first2
  # DEBUG __x => &__last2
  if (_11 == __first2$_M_node_101)
    goto <bb 30>;
  else
    goto <bb 8>;

  <bb 30>:
  # DEBUG __first$_M_node => __first1$_M_node_72
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_7 != __first1$_M_node_72)
    goto <bb 5>;
  else
    goto <bb 3>;

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::__cxx11::list<EventNextVCState::tWaiting*>*; _Size = long unsigned int; _Tp = std::__cxx11::list<EventNextVCState::tWaiting*>; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPNSt7__cxx114listIPN16EventNextVCState8tWaitingESaIS6_EEEmS8_EET_SA_T0_RKT1_, funcdef_no=4577, decl_uid=78605, cgraph_uid=2926, symbol_order=2927)

Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::__cxx11::list<EventNextVCState::tWaiting*>*; _Size = long unsigned int; _Tp = std::__cxx11::list<EventNextVCState::tWaiting*>; bool _TrivialValueType = false] (struct list * __first, long unsigned int __n, const struct list & __x)
{
  struct iterator __position;
  struct _List_iterator D.139370;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  void * _12;
  struct _List_node * _23;
  struct _List_node_base * _30;
  const struct _List_node_base * _31;
  struct tWaiting * _41;
  struct _List_node_base * _43;
  long unsigned int _44;
  long unsigned int _45;
  struct _List_node_base * _55;
  struct _List_node_base * _61;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_76 = PHI <__n_5(D)(3), __n_10(16)>
  # __first_77 = PHI <__first_4(D)(3), __first_11(16)>
  # DEBUG __cur => __first_77
  # DEBUG __n => __n_76
  # DEBUG __r => __first_77
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.112803 => D#12
  if (__first_77 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __first_77
  # DEBUG __x => __x_8(D)
  # DEBUG D#1307 => &__x_8(D)->D.63942
  # DEBUG this => D#1307
  # DEBUG D#1309 => &__first_77->D.63942
  # DEBUG this => D#1309
  # DEBUG __a => NULL
  # DEBUG D#902 => &D#1309->_M_impl
  # DEBUG this => D#902
  # DEBUG __a => NULL
  # DEBUG this => D#902
  # DEBUG __a => NULL
  # DEBUG this => D#902
  # DEBUG D.104323 => NULL
  MEM[(struct _List_impl *)__first_77]._M_node._M_data = 0;
  # DEBUG this => D#1309
  _30 = &MEM[(struct _List_base *)__first_77]._M_impl._M_node.D.45287;
  MEM[(struct _List_base *)__first_77]._M_impl._M_node.D.45287._M_next = _30;
  MEM[(struct _List_base *)__first_77]._M_impl._M_node.D.45287._M_prev = _30;
  # DEBUG D#449 => D#1309
  # DEBUG __n => 0
  # DEBUG this => D#449
  # DEBUG this => __x_8(D)
  _31 = &__x_8(D)->D.63942._M_impl._M_node.D.45287;
  # DEBUG this => NULL
  # DEBUG __x => _31
  __first$_M_node_32 = MEM[(struct _List_node_base * *)__x_8(D)];
  # DEBUG D#198 => __x_8(D)
  # DEBUG this => D#198
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_32
  # DEBUG this => __first_77
  # DEBUG __first => __first$_M_node_32
  # DEBUG __last$_M_node => _31
  # DEBUG __first$_M_node => __first$_M_node_32
  # DEBUG __first$_M_node => __first$_M_node_32
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_31 != __first$_M_node_32)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 6>:

  <bb 7>:
  # __first$_M_node_81 = PHI <__first$_M_node_32(6), __first$_M_node_36(9)>
  # DEBUG __first$_M_node => __first$_M_node_81
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#3193 => &MEM[(const struct _Node *)__first$_M_node_81]._M_data
  # DEBUG this => __first_77
  # DEBUG __x => NULL
  # DEBUG this => __first_77
  # DEBUG this => NULL
  # DEBUG __x => _30
  # DEBUG this => __first_77
  # DEBUG __x => D#3193
  # DEBUG D#1304 => __first_77
  # DEBUG __x => D#3193
  # DEBUG this => D#1304
  # DEBUG D#1303 => D#1304
  # DEBUG D#1302 => D#1304
  # DEBUG D#1301 => &D#1302->D.63942
  # DEBUG D#1299 => D#1301
  # DEBUG this => D#1299
  # DEBUG D#1298 => D#1299
  # DEBUG D#1297 => &D#1298->_M_impl
  # DEBUG D#1295 => D#1297
  # DEBUG D#1296 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1295
  # DEBUG D.139381 => D#1296
  # DEBUG D#1294 => D#1295
  # DEBUG D#1293 => D#1294
  # DEBUG this => D#1293
  _23 = operator new (24);

  <bb 8>:
  # DEBUG __p => _23
  # DEBUG D#3194 => &MEM[(struct _Node *)_23]._M_data
  # DEBUG __r => D#3194
  # DEBUG D#1300 => &D#1303->D.63942
  # DEBUG D#877 => D#1300
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#3193
  # DEBUG this => D#457
  # DEBUG D#12 => 8
  # DEBUG __p => NULL
  # DEBUG D.101844 => D#12
  _41 = MEM[(struct tWaiting * const &)__first$_M_node_81 + 16];
  MEM[(struct tWaiting * *)_23 + 16B] = _41;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _23
  _43 = &MEM[(struct _Node *)_23].D.69419;
  std::__detail::_List_node_base::_M_hook (_43, _30);
  # DEBUG D#1305 => &__first_77->D.63942
  # DEBUG D#279 => D#1305
  # DEBUG __n => 1
  # DEBUG this => D#279
  _44 = MEM[(long unsigned int *)__first_77 + 16B];
  _45 = _44 + 1;
  MEM[(long unsigned int *)__first_77 + 16B] = _45;
  # DEBUG this => &__first
  __first$_M_node_36 = __first$_M_node_81->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_36
  # DEBUG __first$_M_node => __first$_M_node_36
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_31 != __first$_M_node_36)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 9>:
  goto <bb 7>;

  # _61 = PHI <_30(7)>
  # __first_62 = PHI <__first_77(7)>
<L7>:
  # DEBUG D#1308 => &__first_62->D.63942
  # DEBUG this => D#1308
  # DEBUG this => D#1308
  __tmp_37 = MEM[(struct _List_base *)__first_62]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_37
  # DEBUG __cur => __tmp_37
  if (_61 == __tmp_37)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#879 => &D#1308->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__first_62] ={v} {CLOBBER};
  resx 4

  <bb 12>:

  <bb 13>:
  # __tmp_82 = PHI <__tmp_37(12), __tmp_39(14)>
  # DEBUG __cur => __tmp_82
  # DEBUG __tmp => __tmp_82
  __tmp_39 = __tmp_82->D.69419._M_next;
  # DEBUG __cur => __tmp_39
  # DEBUG D#878 => &__tmp_82->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#1308
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#1308
  # DEBUG __p => __tmp_82
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_82
  # DEBUG this => D#450
  # DEBUG D.139350 => D#451
  operator delete (__tmp_82);
  # DEBUG __cur => __tmp_39
  if (_61 == __tmp_39)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  __n_10 = __n_76 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_77 + 24;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __first_28 = PHI <__first_11(15)>

  <bb 18>:
  # __first_75 = PHI <__first_28(17), __first_4(D)(2)>
  return __first_75;

<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_62
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_62
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_62)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __first_74 = PHI <__first_4(D)(21), __first_20(27)>
  # DEBUG __first => __first_74
  # DEBUG __r => __first_74
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_7 = MEM[(struct _List_base *)__first_74]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_7
  # DEBUG __cur => __tmp_7
  _55 = &MEM[(struct _List_base *)__first_74]._M_impl._M_node.D.45287;
  if (__tmp_7 == _55)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__first_74] ={v} {CLOBBER};
  __first_20 = __first_74 + 24;
  # DEBUG __first => __first_20
  # DEBUG __first => __first_20
  if (__first_20 == __first_62)
    goto <bb 20>;
  else
    goto <bb 27>;

  <bb 24>:

  <bb 25>:
  # __tmp_66 = PHI <__tmp_7(24), __tmp_19(26)>
  # DEBUG __cur => __tmp_66
  # DEBUG __tmp => __tmp_66
  __tmp_19 = __tmp_66->D.69419._M_next;
  # DEBUG __cur => __tmp_19
  # DEBUG D#878 => &__tmp_66->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_66
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_66
  # DEBUG this => D#450
  # DEBUG D.112938 => D#451
  operator delete (__tmp_66);
  # DEBUG __cur => __tmp_19
  if (__tmp_19 == _55)
    goto <bb 23>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 25>;

  <bb 27>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<bool>*; _ForwardIterator = std::vector<bool>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIbSaIbEES5_EET0_T_S7_S6_, funcdef_no=4603, decl_uid=78799, cgraph_uid=2952, symbol_order=2953)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<bool>*; _ForwardIterator = std::vector<bool>*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct _Bit_iterator D.139552;
  _Distance __n;
  _Bit_type * __first$_M_p;
  const unsigned int __first$8;
  _Bit_type * __result$_M_p;
  const unsigned int __result$8;
  struct _Bit_const_iterator __first;
  struct _Bit_const_iterator __last;
  struct _Bit_iterator __result;
  struct _Bit_iterator D.139527;
  struct _Bit_iterator __result;
  struct _Bit_const_iterator __last;
  struct _Bit_const_iterator __first;
  struct _Bit_iterator D.139526;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D27024$_M_p;
  unsigned int __it$D27024$_M_offset;
  _Bit_type * __it$D26904$_M_p;
  unsigned int __it$D26904$_M_offset;
  _Bit_type * __last$D27024$_M_p;
  const ptrdiff_t _Num;
  unsigned int __it$D27024$_M_offset;
  struct _Bit_iterator D.139499;
  struct iterator D.139498;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator D.139450;
  struct _Bvector_base * _8;
  void * _12;
  long unsigned int _19;
  unsigned int _26;
  _Bit_type * _27;
  unsigned int _28;
  _Bit_type * _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  ptrdiff_t _37;
  size_type _38;
  _Bit_type * _41;
  struct _Bvector_base * _43;
  size_t _44;
  long unsigned int _45;
  long unsigned int * _46;
  long unsigned int * _47;
  long int _49;
  long unsigned int _50;
  long unsigned int _51;
  unsigned int _57;
  long int __last.51_62;
  long int __first.52_63;
  long int _64;
  long unsigned int _66;
  long unsigned int _92;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int prephitmp_96;
  long unsigned int _97;
  long unsigned int pretmp_98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  _Bit_type cstore_138;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 28>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_135 = PHI <__first_5(D)(3), __first_10(27)>
  # __result_136 = PHI <__result_4(D)(3), __result_11(27)>
  # DEBUG __cur => __result_136
  # DEBUG __first => __first_135
  # DEBUG __r => __result_136
  # DEBUG __p => NULL
  # DEBUG __value => __first_135
  # DEBUG D#12 => 40
  # DEBUG __p => NULL
  # DEBUG D.109329 => D#12
  if (__result_136 != 0B)
    goto <bb 5>;
  else
    goto <bb 25>;

  <bb 5>:
  # DEBUG this => __result_136
  # DEBUG __x => __first_135
  # DEBUG D#980 => &MEM[(const struct vector *)__first_135].D.43009
  # DEBUG this => D#980
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.105806 => NULL
  # DEBUG this => NULL
  # DEBUG D#982 => &__result_136->D.43009
  # DEBUG this => D#982
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG D.103219 => NULL
  # DEBUG this => NULL
  # DEBUG D#742 => &D#982->_M_impl
  # DEBUG this => D#742
  # DEBUG __a => NULL
  # DEBUG this => D#742
  # DEBUG __a => NULL
  # DEBUG this => D#742
  # DEBUG D.103193 => NULL
  # DEBUG D#741 => &D#742->_M_start
  # DEBUG this => D#741
  # DEBUG D#19 => &D#741->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)__result_136]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__result_136]._M_offset = 0;
  # DEBUG D#740 => &D#742->_M_finish
  # DEBUG this => D#740
  # DEBUG D#19 => &D#740->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)__result_136 + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)__result_136 + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)__result_136]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => __first_135
  # DEBUG this => __first_135
  # DEBUG D#142 => &MEM[(const struct vector *)__first_135].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _26 = MEM[(const struct _Bit_iterator *)__first_135].D.26904._M_offset;
  _27 = MEM[(const struct _Bit_iterator *)__first_135].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _27
  # DEBUG __y => _26
  # DEBUG this => D#28
  # DEBUG this => __first_135
  # DEBUG D#143 => &MEM[(const struct vector *)__first_135].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  _28 = MEM[(const struct _Bit_iterator *)__first_135 + 16B].D.26904._M_offset;
  _29 = MEM[(const struct _Bit_iterator *)__first_135 + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _29
  # DEBUG __y => _28
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _30 = (long int) _29;
  _31 = (long int) _27;
  _32 = _30 - _31;
  _33 = _32 * 8;
  _34 = (long int) _28;
  _35 = _33 + _34;
  _36 = (long int) _26;
  _37 = _35 - _36;
  _38 = (size_type) _37;
  # DEBUG this => __result_136
  # DEBUG __n => _38
  # DEBUG D#967 => &__result_136->D.43009
  # DEBUG D#965 => D#967
  # DEBUG __n => _38
  # DEBUG this => D#965
  # DEBUG D#964 => D#965
  # DEBUG __n => _38
  _19 = _38 + 63;
  _44 = _19 >> 6;
  # DEBUG D#963 => &D#964->_M_impl
  # DEBUG D#962 => D#963
  # DEBUG __n => NULL
  # DEBUG __a => D#962
  # DEBUG D#961 => D#962
  # DEBUG D#959 => D#961
  # DEBUG D#960 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#959
  # DEBUG D.139461 => D#960
  # DEBUG D#958 => D#959
  # DEBUG D#957 => D#958
  # DEBUG this => D#957
  _45 = _44 * 8;
  _46 = operator new (_45);

  <bb 6>:
  # DEBUG __q => _46
  # DEBUG __n => _38
  _47 = _46 + _45;
  __result_136->D.43009._M_impl._M_end_of_storage = _47;
  # DEBUG __r => _46
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => NULL
  # DEBUG __y => 0
  # DEBUG this => D#20
  MEM[(struct _Bit_iterator *)__result_136] = _46;
  MEM[(struct _Bit_iterator *)__result_136 + 8B] = 0;
  # DEBUG D#966 => &__result_136->D.43009._M_impl._M_start
  # DEBUG this => D#966
  # DEBUG __i => _37
  # DEBUG __tmp$_M_p => _46
  # DEBUG __tmp$_M_offset => 0
  # DEBUG this => &__tmp
  # DEBUG __i => _37
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => _37
  # DEBUG __n => _37
  _49 = _37 / 64;
  _50 = (long unsigned int) _49;
  _51 = _50 * 8;
  __tmp$_M_p_52 = _46 + _51;
  # DEBUG __tmp$_M_p => __tmp$_M_p_52
  __n_53 = _37 % 64;
  # DEBUG __n => __n_53
  if (__n_53 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __n_54 = __n_53 + 64;
  # DEBUG __n => __n_54
  __tmp$_M_p_55 = __tmp$_M_p_52 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_55

  <bb 8>:
  # __n_56 = PHI <__n_53(6), __n_54(7)>
  # __tmp$_M_p_58 = PHI <__tmp$_M_p_52(6), __tmp$_M_p_55(7)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_58
  # DEBUG __n => __n_56
  _57 = (unsigned int) __n_56;
  # DEBUG __tmp$_M_offset => _57
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  MEM[(struct _Bit_iterator *)__result_136 + 16B] = __tmp$_M_p_58;
  MEM[(struct _Bit_iterator *)__result_136 + 24B] = _57;
  # DEBUG this => __first_135
  # DEBUG D#143 => &MEM[(const struct vector *)__first_135].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  __it$D27024$_M_offset_39 = MEM[(const struct _Bit_iterator *)__first_135 + 16B].D.26904._M_offset;
  __first$_M_p_40 = MEM[(const struct _Bit_iterator *)__first_135 + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => __it$D27024$_M_offset_39
  # DEBUG this => D#28
  # DEBUG this => __first_135
  # DEBUG D#142 => &MEM[(const struct vector *)__first_135].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG D#981 => MEM[(const struct _Bit_iterator *)__first_135].D.26904._M_offset
  _41 = MEM[(const struct _Bit_iterator *)__first_135].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _41
  # DEBUG __y => D#981
  # DEBUG this => D#28
  # DEBUG D.105826 => D#981
  # DEBUG D#976 => __result_136
  # DEBUG D#979 => __result_136->D.43009._M_impl._M_start
  # DEBUG this => D#976
  # DEBUG __last$D27024$_M_p => __first$_M_p_40
  # DEBUG __first => _41
  # DEBUG __last => __first$_M_p_40
  # DEBUG __result => _46
  # DEBUG __it => __first$_M_p_40
  # DEBUG __it => __first$_M_p_40
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  # DEBUG __it => _46
  # DEBUG __it => _46
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => _46
  __last.51_62 = (long int) __first$_M_p_40;
  __first.52_63 = (long int) _41;
  _64 = __last.51_62 - __first.52_63;
  _Num_65 = _64 /[ex] 8;
  # DEBUG _Num => _Num_65
  if (_Num_65 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  pretmp_98 = (long unsigned int) _64;
  goto <bb 11>;

  <bb 10>:
  _66 = (long unsigned int) _64;
  __builtin_memmove (_46, _41, _66);

  <bb 11>:
  # prephitmp_96 = PHI <pretmp_98(9), _66(10)>
  __result$_M_p_68 = _46 + prephitmp_96;
  # DEBUG __q => __result$_M_p_68
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_68
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG __x => __result$_M_p_68
  # DEBUG __y => 0
  # DEBUG this => D#20
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG __x => __first$_M_p_40
  # DEBUG __y => 0
  # DEBUG this => D#27
  # DEBUG D#974 => __last
  # DEBUG D#974 => __last
  # DEBUG __it$D27024$_M_p => __first$_M_p_40
  # DEBUG __it$D27024$_M_offset => __it$D27024$_M_offset_39
  # DEBUG __it$D27024$_M_p => __first$_M_p_40
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __it$D26904$_M_p => __result$_M_p_68
  # DEBUG __it$D26904$_M_offset => 0
  # DEBUG __it$D27024$_M_p => __first$_M_p_40
  # DEBUG __it$D27024$_M_offset => __it$D27024$_M_offset_39
  # DEBUG __it$D27024$_M_p => __first$_M_p_40
  # DEBUG __it$D27024$_M_offset => 0
  # DEBUG __simple => 0
  # DEBUG __first$_M_p => __first$_M_p_40
  # DEBUG __first$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_68
  # DEBUG __result$8 => 0
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#17 => &__last.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG D#18 => &__first.D.27024
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  __n_86 = (_Distance) __it$D27024$_M_offset_39;
  # DEBUG __n => NULL
  # DEBUG __result$8 => 0
  # DEBUG __result$_M_p => __result$_M_p_68
  # DEBUG __first$8 => 0
  # DEBUG __first$_M_p => __first$_M_p_40
  # DEBUG __n => __n_86
  if (__n_86 == 0)
    goto <bb 25>;
  else
    goto <bb 12>;

  <bb 12>:

  <bb 13>:
  # __n_145 = PHI <__n_86(12), __n_108(23)>
  # __first$8_146 = PHI <0(12), __first$8_110(23)>
  # __first$_M_p_82 = PHI <__first$_M_p_40(12), __first$_M_p_109(23)>
  # __result$8_83 = PHI <0(12), __result$8_112(23)>
  # __result$_M_p_81 = PHI <__result$_M_p_68(12), __result$_M_p_111(23)>
  # DEBUG __result$8 => __result$8_83
  # DEBUG __result$_M_p => __result$_M_p_81
  # DEBUG __first$8 => __first$8_146
  # DEBUG __first$_M_p => __first$_M_p_82
  # DEBUG __n => __n_145
  # DEBUG D#29 => &__first
  # DEBUG D#29 => &__first
  # DEBUG this => D#29
  # DEBUG this => D#29
  _92 = 1 << __first$8_146;
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_p_82
  # DEBUG __y => _92
  # DEBUG this => NULL
  _94 = *__first$_M_p_82;
  _95 = _92 & _94;
  # DEBUG D#21 => &__result
  # DEBUG D#21 => &__result
  # DEBUG this => D#21
  # DEBUG this => D#21
  _97 = 1 << __result$8_83;
  # DEBUG this => NULL
  # DEBUG __x => __result$_M_p_81
  # DEBUG __y => _97
  # DEBUG this => NULL
  # DEBUG __x => _95 != 0
  if (_95 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _99 = *__result$_M_p_81;
  _100 = _97 | _99;
  goto <bb 16>;

  <bb 15>:
  _101 = *__result$_M_p_81;
  _102 = ~_97;
  _103 = _101 & _102;

  <bb 16>:
  # cstore_138 = PHI <_100(14), _103(15)>
  *__result$_M_p_81 = cstore_138;
  # DEBUG this => &__first
  # DEBUG D#30 => &__first.D.27024
  # DEBUG this => D#30
  # DEBUG __first$8 => __first$8_146 + 1
  if (__first$8_146 == 63)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  __first$8_104 = __first$8_146 + 1;
  goto <bb 19>;

  <bb 18>:
  # DEBUG __first$8 => 0
  __first$_M_p_105 = __first$_M_p_82 + 8;
  # DEBUG __first$_M_p => __first$_M_p_105

  <bb 19>:
  # __first$_M_p_109 = PHI <__first$_M_p_82(17), __first$_M_p_105(18)>
  # __first$8_110 = PHI <__first$8_104(17), 0(18)>
  # DEBUG __first$8 => __first$8_110
  # DEBUG __first$_M_p => __first$_M_p_109
  # DEBUG this => &__result
  # DEBUG D#22 => &__result.D.26904
  # DEBUG this => D#22
  # DEBUG __result$8 => __result$8_83 + 1
  if (__result$8_83 == 63)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  __result$8_106 = __result$8_83 + 1;
  goto <bb 22>;

  <bb 21>:
  # DEBUG __result$8 => 0
  __result$_M_p_107 = __result$_M_p_81 + 8;
  # DEBUG __result$_M_p => __result$_M_p_107

  <bb 22>:
  # __result$_M_p_111 = PHI <__result$_M_p_81(20), __result$_M_p_107(21)>
  # __result$8_112 = PHI <__result$8_106(20), 0(21)>
  # DEBUG __result$8 => __result$8_112
  # DEBUG __result$_M_p => __result$_M_p_111
  __n_108 = __n_145 + -1;
  # DEBUG __n => __n_108
  # DEBUG __result$8 => __result$8_112
  # DEBUG __result$_M_p => __result$_M_p_111
  # DEBUG __first$8 => __first$8_110
  # DEBUG __first$_M_p => __first$_M_p_109
  # DEBUG __n => __n_108
  if (__n_108 == 0)
    goto <bb 25>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 13>;

  # __result_2 = PHI <__result_136(5)>
<L7>:
  _43 = &__result_2->D.43009;
  # DEBUG this => _43
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_43);
  # DEBUG D#571 => &_43->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__result_2] ={v} {CLOBBER};
  resx 4

  <bb 25>:
  __first_10 = __first_135 + 40;
  # DEBUG __first => __first_10
  __result_11 = __result_136 + 40;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # __result_9 = PHI <__result_11(25)>
  goto <bb 28>;

  <bb 27>:
  goto <bb 4>;

  <bb 28>:
  # __result_139 = PHI <__result_9(26), __result_4(D)(2)>
  return __result_139;

<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_2
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_2
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_2)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  __cxa_rethrow ();

  <bb 31>:

  <bb 32>:
  # __result_142 = PHI <__result_4(D)(31), __result_17(33)>
  # DEBUG __first => __result_142
  # DEBUG __r => __result_142
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _8 = &__result_142->D.43009;
  # DEBUG this => _8
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_8);
  # DEBUG D#571 => &_8->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__result_142] ={v} {CLOBBER};
  __result_17 = __result_142 + 40;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_2)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<bool>; _Alloc = std::allocator<std::vector<bool> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<bool>*, std::vector<std::vector<bool> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<bool>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<bool>] (_ZNSt6vectorIS_IbSaIbEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3171, decl_uid=49942, cgraph_uid=1520, symbol_order=1521)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<bool>; _Alloc = std::allocator<std::vector<bool> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<bool>*, std::vector<std::vector<bool> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<bool>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<bool>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.139612;
  const size_type __len;
  size_type D.139611;
  size_type __n;
  struct vector * D.139602;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  _Bit_type * _17;
  bool _18;
  struct vector * _20;
  struct vector * const _23;
  long int __last.55_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  long int _48;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  struct vector * _67;
  long unsigned int _70;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct vector * _82;
  struct vector * _90;
  struct _Bvector_base * _93;
  struct _Bvector_base * _96;
  struct vector * prephitmp_122;
  long unsigned int pretmp_141;
  long unsigned int prephitmp_142;
  struct vector * _147;
  long unsigned int _149;
  bool _150;
  long int _151;
  long int _152;
  long int _153;
  long unsigned int _155;
  long unsigned int * const _161;
  long int _163;
  long int _164;
  long int _165;
  long unsigned int _166;
  sizetype _167;
  long unsigned int * _168;
  struct vector * pretmp_171;
  long unsigned int prephitmp_172;
  long int _183;
  long int _184;
  long int _186;
  difference_type _190;
  long int _193;
  long int _194;
  bool _195;
  long int _205;
  difference_type _206;

  <bb 2>:
  # DEBUG D#3201 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3201
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 49>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.50019._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.50019._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 40;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 29>;

  <bb 4>:
  std::vector<bool>::vector (&__x_copy, __x_28(D));
  # DEBUG this => this_9(D)
  # DEBUG D#214 => &this_9(D)->D.50019._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#214
  __old_finish_29 = MEM[(struct vector * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.72460
  # DEBUG __rhs => &__position
  # DEBUG this => &D.72460
  _48 = (long int) __old_finish_29;
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = _48 - _36;
  _30 = _34 /[ex] 40;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_29
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#1365 => &this_9(D)->D.50019
  # DEBUG this => D#1365
  _59 = __n_7(D) * 40;
  _60 = -_59;
  __last_61 = __old_finish_29 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __alloc => D#1343
  # DEBUG D#1342 => D#1343
  # DEBUG D#1341 => D#1342
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG D.109594 => D#1341
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_29
  # DEBUG __result => __old_finish_29
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<bool>*, std::vector<bool>*> (__last_61, __old_finish_29, __old_finish_29);

  <bb 6>:
  _62 = this_9(D)->D.50019._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.50019._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3201
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3201
  # DEBUG __it => D#3201
  # DEBUG __first => D#3201
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __old_finish_29
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3201
  # DEBUG __it => D#3201
  # DEBUG __first => D#3201
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  # DEBUG __simple => 0
  # DEBUG __first => D#3201
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_29
  __last.55_25 = (long int) __last_61;
  _78 = __last.55_25 - _36;
  __n_73 = _78 /[ex] 40;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => __old_finish_29
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3201
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3201
  if (__position_22 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_89 = PHI <__old_finish_29(8), __old_finish_65(12)>
  # __last_86 = PHI <__last_61(8), __last_68(12)>
  # __n_181 = PHI <__n_73(8), __n_58(12)>
  # DEBUG __n => __n_181
  # DEBUG __result => __old_finish_89
  # DEBUG __last => __last_86
  __last_68 = __last_86 + 18446744073709551576;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_89 + 18446744073709551576;
  # DEBUG __result => __old_finish_65
  std::vector<bool>::operator= (__old_finish_65, __last_68);
  goto <bb 11>;

<L20>:
  goto <bb 51> (<L10>);

  <bb 11>:
  __n_58 = __n_181 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy.D.43009
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&__x_copy.D.43009);
  # DEBUG D#571 => &MEM[(struct _Bvector_base *)&__x_copy]._M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  __x_copy ={v} {CLOBBER};
  goto <bb 49>;

  <bb 14>:

  <bb 15>:
  # __position_197 = PHI <__position_22(14), __position_81(18)>
  # DEBUG __first => __position_197
  std::vector<bool>::operator= (__position_197, &__x_copy);
  goto <bb 17>;

<L21>:
  goto <bb 51> (<L10>);

  <bb 17>:
  __position_81 = __position_197 + 40;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#1366 => &this_9(D)->D.50019
  # DEBUG this => D#1366
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_29
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.109640 => D#1346
  # DEBUG __first => __old_finish_29
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _82 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<bool>*, long unsigned int, std::vector<bool> > (__old_finish_29, _70, &__x_copy);
  goto <bb 21>;

<L22>:
  goto <bb 51> (<L10>);

  <bb 21>:
  this_9(D)->D.50019._M_impl._M_finish = _82;
  # DEBUG D#1367 => &this_9(D)->D.50019
  # DEBUG this => D#1367
  # DEBUG this => &__position
  # DEBUG __first => D#3201
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _82
  # DEBUG __alloc => D#1343
  # DEBUG D#1342 => D#1343
  # DEBUG D#1341 => D#1342
  # DEBUG __first => D#3201
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _82
  # DEBUG D.109653 => D#1341
  # DEBUG __first => D#3201
  # DEBUG __last => __old_finish_29
  # DEBUG __result => _82
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<bool>*, std::vector<bool>*> (__position_22, __old_finish_29, _82);
  goto <bb 23>;

<L23>:
  goto <bb 51> (<L10>);

  <bb 23>:
  _74 = this_9(D)->D.50019._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.50019._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3201
  # DEBUG __last => __old_finish_29
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3201
  if (__position_22 == __old_finish_29)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __position_91 = PHI <__position_22(24), __position_84(28)>
  # DEBUG __first => __position_91
  std::vector<bool>::operator= (__position_91, &__x_copy);
  goto <bb 27>;

<L24>:
  goto <bb 51> (<L10>);

  <bb 27>:
  __position_84 = __position_91 + 40;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__old_finish_29 == __position_84)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1352 => this_9(D)
  # DEBUG this => D#1352
  # DEBUG D#1351 => D#1352
  # DEBUG D#1350 => &D#1351->D.50019
  # DEBUG this => D#1350
  # DEBUG __a => D#1349
  # DEBUG D#1348 => D#1349
  # DEBUG D#1347 => D#1348
  # DEBUG this => D#1347
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#144 => this_9(D)
  # DEBUG D#144 => this_9(D)
  # DEBUG this => D#144
  # DEBUG this => D#144
  _151 = (long int) _23;
  _152 = _13 - _151;
  _153 = _152 /[ex] 40;
  _154 = (const long unsigned int) _153;
  _155 = 461168601842738790 - _154;
  if (__n_7(D) > _155)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 31>:
  # DEBUG D#144 => this_9(D)
  # DEBUG D#144 => this_9(D)
  # DEBUG this => D#144
  # DEBUG this => D#144
  # DEBUG D#144 => this_9(D)
  # DEBUG D#144 => this_9(D)
  # DEBUG this => D#144
  # DEBUG this => D#144
  # DEBUG __a => &D.139612
  # DEBUG __b => &__n
  _149 = MAX_EXPR <__n_7(D), _154>;
  __len_159 = _149 + _154;
  # DEBUG __len => __len_159
  # DEBUG D#144 => this_9(D)
  # DEBUG D#144 => this_9(D)
  # DEBUG this => D#144
  # DEBUG this => D#144
  # DEBUG D#1352 => this_9(D)
  # DEBUG this => D#1352
  # DEBUG D#1351 => D#1352
  # DEBUG D#1350 => &D#1351->D.50019
  # DEBUG this => D#1350
  # DEBUG __a => D#1349
  # DEBUG D#1348 => D#1349
  # DEBUG D#1347 => D#1348
  # DEBUG this => D#1347
  _150 = __len_159 > 461168601842738790;
  _195 = _154 > __len_159;
  _18 = _150 | _195;
  if (_18 != 0)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 32>:
  pretmp_141 = __len_159 * 40;

  <bb 33>:
  # __elems_before_175 = PHI <__elems_before_191(64), __elems_before_185(32)>
  # _184 = PHI <_194(64), _205(32)>
  # prephitmp_142 = PHI <18446744073709551600(64), pretmp_141(32)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#372 => &this_9(D)->D.50019._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#372
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72493
  # DEBUG this => &__position
  # DEBUG this => &D.72493
  # DEBUG __elems_before => __elems_before_175
  # DEBUG D#1377 => &this_9(D)->D.50019
  # DEBUG D#1360 => D#1377
  # DEBUG __n => NULL
  # DEBUG this => D#1360
  # DEBUG D#1359 => D#1360
  # DEBUG D#1358 => &D#1359->_M_impl
  # DEBUG D#1357 => D#1358
  # DEBUG __n => NULL
  # DEBUG __a => D#1357
  # DEBUG D#1356 => D#1357
  # DEBUG D#1354 => D#1356
  # DEBUG D#1355 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1354
  # DEBUG D.139600 => D#1355
  # DEBUG D#1353 => D#1354
  # DEBUG D#1347 => D#1353
  # DEBUG this => D#1347
  _147 = operator new (prephitmp_142);

  <bb 34>:
  # __new_finish_148 = PHI <0B(65), _147(33)>
  # __elems_before_182 = PHI <__elems_before_185(65), __elems_before_175(33)>
  # _186 = PHI <_205(65), _184(33)>
  # prephitmp_172 = PHI <0(65), prephitmp_142(33)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#1361 => &this_9(D)->D.50019
  # DEBUG this => D#1361
  _26 = (long unsigned int) _186;
  __first_27 = __new_finish_148 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.109684 => D#1346
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<bool>*, long unsigned int, std::vector<bool> > (__first_27, __n_7(D), __x_28(D));

  <bb 35>:
  # DEBUG __new_finish => 0B
  # DEBUG D#1362 => &this_9(D)->D.50019
  # DEBUG this => D#1362
  # DEBUG this => &__position
  _31 = this_9(D)->D.50019._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#3201
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1345
  # DEBUG D#1344 => D#1345
  # DEBUG D#1341 => D#1344
  # DEBUG __first => _31
  # DEBUG __last => D#3201
  # DEBUG __result => NULL
  # DEBUG D.109705 => D#1341
  # DEBUG __first => _31
  # DEBUG __last => D#3201
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<bool>*, std::vector<bool>*> (_31, __position_22, __new_finish_148);
  goto <bb 37>;

<L26>:
  goto <bb 53> (<L13>);

  <bb 37>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 40;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#1363 => &this_9(D)->D.50019
  # DEBUG this => D#1363
  _35 = this_9(D)->D.50019._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3201
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1345
  # DEBUG D#1344 => D#1345
  # DEBUG D#1341 => D#1344
  # DEBUG __first => D#3201
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.109724 => D#1341
  # DEBUG __first => D#3201
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _90 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<bool>*, std::vector<bool>*> (__position_22, _35, __new_finish_33);
  goto <bb 39>;

<L27>:
  goto <bb 53> (<L13>);

  <bb 39>:
  # DEBUG __new_finish => _90
  # DEBUG D#1364 => &this_9(D)->D.50019
  # DEBUG this => D#1364
  _37 = this_9(D)->D.50019._M_impl._M_finish;
  __first_38 = this_9(D)->D.50019._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 46>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # __first_200 = PHI <__first_38(40), __first_92(44)>
  # DEBUG __first => __first_200
  # DEBUG __r => __first_200
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG D#3199 => &__first_200->D.43009
  # DEBUG this => D#3199
  # DEBUG this => D#3199
  _17 = MEM[(struct _Bvector_base *)__first_200]._M_impl._M_start.D.26904._M_p;
  if (_17 != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#567 => &D#3199->_M_impl
  _161 = MEM[(long unsigned int * *)__first_200 + 32B];
  # DEBUG D#324 => D#567
  # DEBUG this => D#324
  _163 = (long int) _161;
  _164 = (long int) _17;
  _165 = _163 - _164;
  # DEBUG D#570 => _165 /[ex] 8
  # DEBUG D#569 => (const size_t) D#570
  # DEBUG __n => D#569
  _166 = (long unsigned int) _165;
  _167 = -_166;
  _168 = _161 + _167;
  # DEBUG D#568 => &D#3199->_M_impl
  # DEBUG D#565 => D#568
  # DEBUG D#566 => D#569
  # DEBUG __p => _168
  # DEBUG __a => D#565
  # DEBUG __n => D#566
  # DEBUG D#564 => D#566
  # DEBUG D#563 => D#565
  # DEBUG D#561 => D#563
  # DEBUG D#562 => D#564
  # DEBUG __p => _168
  # DEBUG this => D#561
  # DEBUG D.139620 => D#562
  operator delete (_168);

  <bb 43>:
  # DEBUG D#571 => &D#3199->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__first_200] ={v} {CLOBBER};
  __first_92 = __first_200 + 40;
  # DEBUG __first => __first_92
  # DEBUG __first => __first_92
  if (_37 == __first_92)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  goto <bb 41>;

  <bb 45>:
  pretmp_171 = this_9(D)->D.50019._M_impl._M_start;

  <bb 46>:
  # prephitmp_122 = PHI <pretmp_171(45), __first_38(39)>
  # DEBUG D#1375 => this_9(D)->D.50019._M_impl._M_end_of_storage
  # DEBUG D#1374 => (long int) D#1375
  # DEBUG D#3200 => this_9(D)->D.50019._M_impl._M_start
  # DEBUG D#1373 => (long int) D#3200
  # DEBUG D#1372 => D#1374 - D#1373
  # DEBUG D#1371 => D#1372 /[ex] 40
  # DEBUG D#1370 => &this_9(D)->D.50019
  # DEBUG D#609 => D#1370
  # DEBUG D#610 => (long unsigned int) D#1371
  # DEBUG __p => D#3200
  # DEBUG this => D#609
  # DEBUG __n => D#610
  # DEBUG D#608 => D#610
  # DEBUG D#607 => D#609
  if (prephitmp_122 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  # DEBUG D#606 => &D#607->_M_impl
  # DEBUG D#604 => D#606
  # DEBUG D#605 => D#608
  # DEBUG __p => D#3200
  # DEBUG __a => D#604
  # DEBUG __n => D#605
  # DEBUG D#603 => D#605
  # DEBUG D#602 => D#604
  # DEBUG D#600 => D#602
  # DEBUG D#601 => D#603
  # DEBUG __p => D#3200
  # DEBUG this => D#600
  # DEBUG D.109747 => D#601
  operator delete (prephitmp_122);

  <bb 48>:
  this_9(D)->D.50019._M_impl._M_start = __new_finish_148;
  this_9(D)->D.50019._M_impl._M_finish = _90;
  _44 = __new_finish_148 + prephitmp_172;
  this_9(D)->D.50019._M_impl._M_end_of_storage = _44;

  <bb 49>:
  return;

<L19>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG this => &__x_copy.D.43009
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&__x_copy.D.43009);
  # DEBUG D#571 => &MEM[(struct _Bvector_base *)&__x_copy]._M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  resx 2

<L25>:

  # __new_finish_1 = PHI <__new_finish_148(52), 0B(36), __new_finish_33(38)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 55>;
  else
    goto <bb 54>;

  <bb 54>:
  goto <bb 58>;

  <bb 55>:
  # DEBUG D#1368 => &this_9(D)->D.50019
  # DEBUG this => D#1368
  _49 = __n_7(D) + __elems_before_182;
  _50 = _49 * 40;
  _51 = __new_finish_148 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 56>:
  # __first_80 = PHI <__first_27(55), __first_94(57)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 60>;
  else
    goto <bb 57>;

  <bb 57>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _93 = &__first_80->D.43009;
  # DEBUG this => _93
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_93);
  # DEBUG D#571 => &_93->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_94 = __first_80 + 40;
  # DEBUG __first => __first_94
  goto <bb 56>;

  <bb 58>:
  # __new_finish_95 = PHI <__new_finish_148(54), __new_finish_97(59)>
  # DEBUG __first => __new_finish_95
  if (__new_finish_1 == __new_finish_95)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  # DEBUG __r => __new_finish_95
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _96 = &__new_finish_95->D.43009;
  # DEBUG this => _96
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_96);
  # DEBUG D#571 => &_96->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__new_finish_95] ={v} {CLOBBER};
  __new_finish_97 = __new_finish_95 + 40;
  # DEBUG __first => __new_finish_97
  goto <bb 58>;

  <bb 60>:
  # DEBUG D#1376 => &this_9(D)->D.50019
  # DEBUG D#609 => D#1376
  # DEBUG __p => NULL
  # DEBUG this => D#609
  # DEBUG __n => D#610
  # DEBUG D#608 => D#610
  # DEBUG D#607 => D#609
  if (__new_finish_148 != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  # DEBUG D#606 => &D#607->_M_impl
  # DEBUG D#604 => D#606
  # DEBUG D#605 => D#608
  # DEBUG __p => NULL
  # DEBUG __a => D#604
  # DEBUG __n => D#605
  # DEBUG D#603 => D#605
  # DEBUG D#602 => D#604
  # DEBUG D#600 => D#602
  # DEBUG D#601 => D#603
  # DEBUG __p => NULL
  # DEBUG this => D#600
  # DEBUG D.109810 => D#601
  operator delete (__new_finish_148);

  <bb 62>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 64>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#372 => &this_9(D)->D.50019._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#372
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72493
  # DEBUG this => &__position
  _193 = (long int) __position_22;
  # DEBUG this => &D.72493
  _194 = _193 - _151;
  _190 = _194 /[ex] 40;
  __elems_before_191 = (const size_type) _190;
  # DEBUG __elems_before => __elems_before_191
  # DEBUG D#1377 => &this_9(D)->D.50019
  # DEBUG D#1360 => D#1377
  # DEBUG __n => NULL
  # DEBUG this => D#1360
  # DEBUG D#1359 => D#1360
  goto <bb 33>;

  <bb 65>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#372 => &this_9(D)->D.50019._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#372
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72493
  # DEBUG this => &__position
  _183 = (long int) __position_22;
  # DEBUG this => &D.72493
  _205 = _183 - _151;
  _206 = _205 /[ex] 40;
  __elems_before_185 = (const size_type) _206;
  # DEBUG __elems_before => __elems_before_185
  # DEBUG D#1377 => &this_9(D)->D.50019
  # DEBUG D#1360 => D#1377
  # DEBUG __n => NULL
  # DEBUG this => D#1360
  # DEBUG D#1359 => D#1360
  if (__len_159 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<Flit*, std::allocator<Flit*> >*; _Size = long unsigned int; _Tp = std::vector<Flit*, std::allocator<Flit*> >; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIP4FlitSaIS4_EEmS6_EET_S8_T0_RKT1_, funcdef_no=4623, decl_uid=78993, cgraph_uid=2972, symbol_order=2973)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<Flit*, std::allocator<Flit*> >*; _Size = long unsigned int; _Tp = std::vector<Flit*, std::allocator<Flit*> >; bool _TrivialValueType = false] (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  struct tArrivalEvent * * D.139804;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct Flit * * _7;
  void * _12;
  long unsigned int _20;
  struct Flit * * const _27;
  struct Flit * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct Flit * * _36;
  struct Flit * * const _37;
  struct Flit * * const _38;
  long int __last.100_39;
  long int __first.101_40;
  long int _41;
  long unsigned int _43;
  struct Flit * * _45;
  struct tArrivalEvent * * _46;
  struct tArrivalEvent * * iftmp.160_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_71 = PHI <__n_5(D)(3), __n_10(17)>
  # __first_70 = PHI <__first_4(D)(3), __first_11(17)>
  # DEBUG __cur => __first_70
  # DEBUG __n => __n_71
  # DEBUG __r => __first_70
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.118764 => D#12
  if (__first_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __first_70
  # DEBUG __x => __x_8(D)
  # DEBUG D#2028 => &__x_8(D)->D.66320
  # DEBUG this => D#2028
  # DEBUG __a => NULL
  _27 = MEM[(struct Flit * * *)__x_8(D)];
  # DEBUG D#217 => __x_8(D)
  _28 = MEM[(struct Flit * * *)__x_8(D) + 8B];
  # DEBUG D#217 => __x_8(D)
  # DEBUG this => D#217
  # DEBUG this => D#217
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#2030 => &__first_70->D.66320
  # DEBUG this => D#2030
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1567 => &D#2030->_M_impl
  # DEBUG this => D#1567
  # DEBUG __a => NULL
  # DEBUG this => D#1567
  # DEBUG __a => NULL
  # DEBUG this => D#1567
  # DEBUG D.103517 => NULL
  MEM[(struct _Vector_impl *)__first_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_70]._M_end_of_storage = 0B;
  # DEBUG this => D#2030
  # DEBUG __n => NULL
  # DEBUG D#1565 => D#2030
  # DEBUG __n => _33
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _33
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#1641
  # DEBUG D.139802 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __first_9 = PHI <__first_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __first_35 = PHI <__first_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.160_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_start = iftmp.160_47;
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_finish = iftmp.160_47;
  _36 = iftmp.160_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#2029 => &__first_70->D.66320
  # DEBUG this => D#2029
  _37 = MEM[(struct Flit * * *)__x_8(D) + 8B];
  # DEBUG D#376 => __x_8(D)
  # DEBUG this => D#376
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct Flit * * *)__x_8(D)];
  # DEBUG D#377 => __x_8(D)
  # DEBUG this => D#377
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.139766 => D#2027
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.100_39 = (long int) _37;
  __first.101_40 = (long int) _38;
  _41 = __last.100_39 - __first.101_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.160_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.160_47 + prephitmp_2;
  __first_70->D.66320._M_impl._M_finish = _45;

  <bb 15>:
  __n_10 = __n_71 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_70 + 24;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __first_18 = PHI <__first_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __first_67 = PHI <__first_18(16), __first_4(D)(2)>
  return __first_67;

<L7>:

  # __first_44 = PHI <__first_35(10), __first_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_44
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_44
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __first_63 = PHI <__first_4(D)(22), __first_17(26)>
  # DEBUG __first => __first_63
  # DEBUG __r => __first_63
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _7 = MEM[(struct _Vector_base *)__first_63]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _7
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _7
  # DEBUG __n => D#1021
  if (_7 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _7
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _7
  # DEBUG this => D#1013
  # DEBUG D.118901 => D#1014
  operator delete (_7);

  <bb 25>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__first_63] ={v} {CLOBBER};
  __first_17 = __first_63 + 24;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (__first_17 == __first_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<Credit*, std::allocator<Credit*> >*; _Size = long unsigned int; _Tp = std::vector<Credit*, std::allocator<Credit*> >; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIP6CreditSaIS4_EEmS6_EET_S8_T0_RKT1_, funcdef_no=4638, decl_uid=79073, cgraph_uid=2987, symbol_order=2988)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<Credit*, std::allocator<Credit*> >*; _Size = long unsigned int; _Tp = std::vector<Credit*, std::allocator<Credit*> >; bool _TrivialValueType = false] (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  struct tArrivalEvent * * D.139941;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct Credit * * _7;
  void * _12;
  long unsigned int _20;
  struct Credit * * const _27;
  struct Credit * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct Credit * * _36;
  struct Credit * * const _37;
  struct Credit * * const _38;
  long int __last.126_39;
  long int __first.127_40;
  long int _41;
  long unsigned int _43;
  struct Credit * * _45;
  struct tArrivalEvent * * _46;
  struct tArrivalEvent * * iftmp.160_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_71 = PHI <__n_5(D)(3), __n_10(17)>
  # __first_70 = PHI <__first_4(D)(3), __first_11(17)>
  # DEBUG __cur => __first_70
  # DEBUG __n => __n_71
  # DEBUG __r => __first_70
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.119912 => D#12
  if (__first_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __first_70
  # DEBUG __x => __x_8(D)
  # DEBUG D#2074 => &__x_8(D)->D.66869
  # DEBUG this => D#2074
  # DEBUG __a => NULL
  _27 = MEM[(struct Credit * * *)__x_8(D)];
  # DEBUG D#219 => __x_8(D)
  _28 = MEM[(struct Credit * * *)__x_8(D) + 8B];
  # DEBUG D#219 => __x_8(D)
  # DEBUG this => D#219
  # DEBUG this => D#219
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#2076 => &__first_70->D.66869
  # DEBUG this => D#2076
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1597 => &D#2076->_M_impl
  # DEBUG this => D#1597
  # DEBUG __a => NULL
  # DEBUG this => D#1597
  # DEBUG __a => NULL
  # DEBUG this => D#1597
  # DEBUG D.103570 => NULL
  MEM[(struct _Vector_impl *)__first_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_70]._M_end_of_storage = 0B;
  # DEBUG this => D#2076
  # DEBUG __n => NULL
  # DEBUG D#1595 => D#2076
  # DEBUG __n => _33
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _33
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#1641
  # DEBUG D.139939 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __first_9 = PHI <__first_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __first_35 = PHI <__first_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.160_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_start = iftmp.160_47;
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_finish = iftmp.160_47;
  _36 = iftmp.160_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#2075 => &__first_70->D.66869
  # DEBUG this => D#2075
  _37 = MEM[(struct Credit * * *)__x_8(D) + 8B];
  # DEBUG D#380 => __x_8(D)
  # DEBUG this => D#380
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct Credit * * *)__x_8(D)];
  # DEBUG D#381 => __x_8(D)
  # DEBUG this => D#381
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.139903 => D#2073
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.126_39 = (long int) _37;
  __first.127_40 = (long int) _38;
  _41 = __last.126_39 - __first.127_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.160_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.160_47 + prephitmp_2;
  __first_70->D.66869._M_impl._M_finish = _45;

  <bb 15>:
  __n_10 = __n_71 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_70 + 24;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __first_18 = PHI <__first_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __first_67 = PHI <__first_18(16), __first_4(D)(2)>
  return __first_67;

<L7>:

  # __first_44 = PHI <__first_35(10), __first_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_44
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_44
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __first_63 = PHI <__first_4(D)(22), __first_17(26)>
  # DEBUG __first => __first_63
  # DEBUG __r => __first_63
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _7 = MEM[(struct _Vector_base *)__first_63]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _7
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _7
  # DEBUG __n => D#1087
  if (_7 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _7
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _7
  # DEBUG this => D#1079
  # DEBUG D.120049 => D#1080
  operator delete (_7);

  <bb 25>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__first_63] ={v} {CLOBBER};
  __first_17 = __first_63 + 24;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (__first_17 == __first_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*; _Size = long unsigned int; _Tp = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >; bool _TrivialValueType = false] (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIPN11EventRouter13tArrivalEventESaIS5_EEmS7_EET_S9_T0_RKT1_, funcdef_no=4653, decl_uid=79153, cgraph_uid=3002, symbol_order=3003)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_fill_n<_TrivialValueType>::__uninit_fill_n(_ForwardIterator, _Size, const _Tp&) [with _ForwardIterator = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*; _Size = long unsigned int; _Tp = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >; bool _TrivialValueType = false] (struct vector * __first, long unsigned int __n, const struct vector & __x)
{
  struct tArrivalEvent * * D.140078;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct tArrivalEvent * * _7;
  void * _12;
  long unsigned int _20;
  struct tArrivalEvent * * const _27;
  struct tArrivalEvent * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct tArrivalEvent * * _36;
  struct tArrivalEvent * * const _37;
  struct tArrivalEvent * * const _38;
  long int __last.162_39;
  long int __first.163_40;
  long int _41;
  long unsigned int _43;
  struct tArrivalEvent * * _45;
  struct tArrivalEvent * * _46;
  struct tArrivalEvent * * iftmp.160_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __first_4(D)
  # DEBUG __cur => __first_4(D)
  # DEBUG __n => __n_5(D)
  if (__n_5(D) == 0)
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __n_71 = PHI <__n_5(D)(3), __n_10(17)>
  # __first_70 = PHI <__first_4(D)(3), __first_11(17)>
  # DEBUG __cur => __first_70
  # DEBUG __n => __n_71
  # DEBUG __r => __first_70
  # DEBUG __p => NULL
  # DEBUG __value => __x_8(D)
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.121060 => D#12
  if (__first_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __first_70
  # DEBUG __x => __x_8(D)
  # DEBUG D#2120 => &__x_8(D)->D.67418
  # DEBUG this => D#2120
  # DEBUG __a => NULL
  _27 = MEM[(struct tArrivalEvent * * *)__x_8(D)];
  # DEBUG D#221 => __x_8(D)
  _28 = MEM[(struct tArrivalEvent * * *)__x_8(D) + 8B];
  # DEBUG D#221 => __x_8(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#2122 => &__first_70->D.67418
  # DEBUG this => D#2122
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1649 => &D#2122->_M_impl
  # DEBUG this => D#1649
  # DEBUG __a => NULL
  # DEBUG this => D#1649
  # DEBUG __a => NULL
  # DEBUG this => D#1649
  # DEBUG D.103623 => NULL
  MEM[(struct _Vector_impl *)__first_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__first_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__first_70]._M_end_of_storage = 0B;
  # DEBUG this => D#2122
  # DEBUG __n => NULL
  # DEBUG D#1647 => D#2122
  # DEBUG __n => _33
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _33
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#1641
  # DEBUG D.140076 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __first_9 = PHI <__first_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __first_35 = PHI <__first_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.160_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_start = iftmp.160_47;
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_finish = iftmp.160_47;
  _36 = iftmp.160_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__first_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#2121 => &__first_70->D.67418
  # DEBUG this => D#2121
  _37 = MEM[(struct tArrivalEvent * * *)__x_8(D) + 8B];
  # DEBUG D#384 => __x_8(D)
  # DEBUG this => D#384
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct tArrivalEvent * * *)__x_8(D)];
  # DEBUG D#385 => __x_8(D)
  # DEBUG this => D#385
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.140040 => D#2119
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.162_39 = (long int) _37;
  __first.163_40 = (long int) _38;
  _41 = __last.162_39 - __first.163_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.160_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.160_47 + prephitmp_2;
  __first_70->D.67418._M_impl._M_finish = _45;

  <bb 15>:
  __n_10 = __n_71 + 18446744073709551615;
  # DEBUG __n => __n_10
  __first_11 = __first_70 + 24;
  # DEBUG __cur => __first_11
  # DEBUG __cur => __first_11
  # DEBUG __n => __n_10
  if (__n_10 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __first_18 = PHI <__first_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __first_67 = PHI <__first_18(16), __first_4(D)(2)>
  return __first_67;

<L7>:

  # __first_44 = PHI <__first_35(10), __first_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_44
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __first_44
  # DEBUG __first => __first_4(D)
  if (__first_4(D) == __first_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __first_63 = PHI <__first_4(D)(22), __first_17(26)>
  # DEBUG __first => __first_63
  # DEBUG __r => __first_63
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _7 = MEM[(struct _Vector_base *)__first_63]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _7
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _7
  # DEBUG __n => D#1142
  if (_7 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _7
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _7
  # DEBUG this => D#1134
  # DEBUG D.121197 => D#1135
  operator delete (_7);

  <bb 25>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__first_63] ={v} {CLOBBER};
  __first_17 = __first_63 + 24;
  # DEBUG __first => __first_17
  # DEBUG __first => __first_17
  if (__first_17 == __first_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Flit*>*; _ForwardIterator = std::queue<Flit*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5queueIP4FlitSt5dequeIS4_SaIS4_EEES9_EET0_T_SB_SA_, funcdef_no=4667, decl_uid=79232, cgraph_uid=3016, symbol_order=3017)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Flit*>*; _ForwardIterator = std::queue<Flit*>*; bool _TrivialValueTypes = false] (struct queue * __first, struct queue * __last, struct queue * __result)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.5372;
  struct Flit * * SR.5371;
  struct Flit * * SR.5370;
  struct Flit * * * __first$24;
  struct Flit * * __first$16;
  struct Flit * * __first$8;
  struct Flit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.140197;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140172;
  struct _Deque_iterator D.140171;
  struct _Deque_iterator D.140170;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct Flit * * __it;
  struct Flit * * __it$8;
  struct Flit * * __it$16;
  struct Flit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140152;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140138;
  struct _Deque_iterator D.140137;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140130;
  struct _Deque_iterator D.140129;
  struct _Deque_iterator D.140128;
  void * _12;
  struct _Deque_base * _18;
  struct Flit * * * _25;
  long int _26;
  struct Flit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Flit * * _33;
  long int _34;
  struct Flit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Flit * * _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Flit * * _49;
  struct Flit * * _51;
  struct Flit * * * _52;
  struct Flit * * _53;
  struct Flit * * _54;
  struct Flit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Flit * _117;
  struct Flit * * _122;
  struct Flit * * * _134;
  struct Flit * * _135;
  struct Flit * * _136;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_154 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_155 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_155
  # DEBUG __first => __first_154
  # DEBUG __r => __result_155
  # DEBUG __p => NULL
  # DEBUG __value => __first_154
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.115207 => D#12
  if (__result_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.115216 => __first_154
  # DEBUG D#3228 => &MEM[(const struct queue &)__first_154].c
  # DEBUG D#3230 => &__result_155->c
  # DEBUG this => D#3230
  # DEBUG __x => D#3228
  # DEBUG this => D#3228
  # DEBUG D#209 => &D#3228->D.44077._M_impl._M_start
  # DEBUG D#210 => &D#3228->D.44077._M_impl._M_finish
  # DEBUG __x => D#210
  # DEBUG __y => D#209
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1825 => &D#3228->D.44077
  # DEBUG this => D#1825
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__result_155].D.44077;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1581 => &_48->_M_impl
  # DEBUG this => D#1581
  # DEBUG __a => NULL
  # DEBUG this => D#1581
  # DEBUG __a => NULL
  # DEBUG this => D#1581
  # DEBUG D.103517 => NULL
  MEM[(struct _Deque_impl *)__result_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__result_155]._M_map_size = 0;
  # DEBUG D#794 => &D#1581->_M_start
  # DEBUG this => D#794
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_node = 0B;
  # DEBUG D#793 => &D#1581->_M_finish
  # DEBUG this => D#793
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1826 => &D#3230->D.44077
  # DEBUG this => D#1826
  # DEBUG D#1827 => &D#3230->D.44077._M_impl._M_start
  # DEBUG this => &D.140128
  # DEBUG __x => D#1827
  _49 = MEM[(const struct iterator &)__result_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__result_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__result_155 + 16]._M_node;
  # DEBUG this => D#3228
  # DEBUG D#207 => &D#3228->D.44077._M_impl._M_finish
  # DEBUG this => &D.140129
  # DEBUG __x => D#207
  _53 = MEM[(const struct iterator &)__first_154 + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__first_154 + 48]._M_first;
  # DEBUG D#3229 => MEM[(const struct iterator &)__first_154 + 48]._M_last
  _56 = MEM[(const struct iterator &)__first_154 + 48]._M_node;
  # DEBUG this => D#3228
  # DEBUG D#208 => &D#3228->D.44077._M_impl._M_start
  # DEBUG this => &D.140130
  # DEBUG __x => D#208
  __first$_M_cur_57 = MEM[(const struct iterator &)__first_154 + 16]._M_cur;
  # DEBUG D#3231 => MEM[(const struct iterator &)__first_154 + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__first_154 + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__first_154 + 16]._M_node;
  # DEBUG __result => &D.140128
  # DEBUG D.140134 => D#1824
  # DEBUG this => &D.140138
  # DEBUG __x => &D.140128
  # DEBUG __result => &D.140138
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.140138
  # DEBUG __result => NULL
  # DEBUG this => &D.140152
  # DEBUG __x => NULL
  # DEBUG __result => &D.140152
  # DEBUG this => &D.140172
  # DEBUG __x => &D.140152
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3229
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3229
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3231
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3231
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.140172
  # DEBUG this => NULL
  # DEBUG __x => &D.140172
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3229
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3229
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3231
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3231
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#3231
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.140197
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#3231
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.140197
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.140137
  # DEBUG __x => &D.140197
  D.140197 ={v} {CLOBBER};
  D.140172 ={v} {CLOBBER};
  D.140152 ={v} {CLOBBER};
  D.140138 ={v} {CLOBBER};
  D.140128 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.5370_217 = PHI <_49(8), SR.5370_216(14)>
  # SR.5371_214 = PHI <_51(8), SR.5371_213(14)>
  # SR.5372_212 = PHI <_52(8), SR.5372_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#234 => &D.140197
  # DEBUG this => D#234
  # DEBUG D#137 => &__first
  # DEBUG this => D#137
  _117 = MEM[(struct Flit * const &)__first$_M_cur_209];
  *SR.5370_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Flit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.140197
  _122 = SR.5370_217 + 8;
  if (_122 == SR.5371_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.140197
  _134 = SR.5372_212 + 8;
  # DEBUG this => &D.140197
  # DEBUG __new_node => _134
  _135 = MEM[(struct Flit * * *)SR.5372_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.5370_216 = PHI <_122(11), _135(12)>
  # SR.5371_213 = PHI <SR.5371_214(11), _136(12)>
  # SR.5372_211 = PHI <SR.5372_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __first_10 = __first_154 + 80;
  # DEBUG __first => __first_10
  __result_11 = __result_155 + 80;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_194 = PHI <__result_11(15)>

  <bb 18>:
  # __result_156 = PHI <__result_194(17), __result_4(D)(2)>
  return __result_156;

  # __result_193 = PHI <__result_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_158 = PHI <__result_4(D)(21), __result_19(23)>
  # DEBUG __first => __result_158
  # DEBUG __r => __result_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _18 = &MEM[(struct deque *)__result_158].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_18);
  MEM[(struct  &)__result_158] ={v} {CLOBBER};
  __result_19 = __result_158 + 80;
  # DEBUG __first => __result_19
  # DEBUG __first => __result_19
  if (__result_19 == __result_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Flit*] (_ZSt4copyIP4FlitESt15_Deque_iteratorIT_RS3_PS3_ES2_IS3_RKS3_PS7_ESA_S6_, funcdef_no=4670, decl_uid=79262, cgraph_uid=3019, symbol_order=3020)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Flit*] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.140283;
  const difference_type __offset;
  struct _Self & D.140276;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.80444;
  const long int D.80445;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  struct Flit * * * _22;
  long unsigned int __clen.200_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  struct Flit * * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.199_56;
  long int _57;
  struct Flit * * * _65;
  struct Flit * * _73;
  long int _74;
  long int _75;
  long int _76;
  struct Flit * * _81;
  long int iftmp.205_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.205_87;
  struct Flit * * * _88;
  long int iftmp.205_89;
  long unsigned int __node_offset.207_90;
  long unsigned int _91;
  struct Flit * * * _92;
  struct Flit * * _93;
  struct Flit * * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  struct Flit * * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.195_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.195_115;
  long int iftmp.195_117;
  long unsigned int __node_offset.197_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  struct Flit * * pretmp_214;
  struct Flit * * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  struct Flit * * const prephitmp_227;
  struct Flit * * const pretmp_228;
  struct Flit * * const prephitmp_229;
  struct Flit * * const prephitmp_230;
  struct Flit * * const prephitmp_238;
  struct Flit * * const prephitmp_239;
  struct Flit * * const prephitmp_240;
  struct Flit * * const pretmp_241;
  struct Flit * * const prephitmp_242;
  struct Flit * * const pretmp_243;
  struct Flit * * const prephitmp_244;
  struct Flit * * const pretmp_245;
  struct Flit * * const prephitmp_246;
  struct Flit * * pretmp_247;
  struct Flit * * prephitmp_248;
  struct Flit * * pretmp_249;
  struct Flit * * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 64;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 8;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.199_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#3235 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 8;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 8;
  # DEBUG __a => &D.80444
  # DEBUG __b => &D.80445
  _30 = MIN_EXPR <_12, __len.199_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#3233
  __clen.200_26 = (long unsigned int) __clen_59;
  _27 = __clen.200_26 * 8;
  # DEBUG D#3236 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3236
  # DEBUG __result => D#3235
  # DEBUG __it => D#3236
  # DEBUG __it => D#3236
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3236
  # DEBUG __result => D#3235
  # DEBUG __it => D#3235
  # DEBUG __it => D#3235
  # DEBUG __it => D#3236
  # DEBUG __it => D#3236
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3236
  # DEBUG __result => D#3235
  # DEBUG __simple => 1
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3236
  # DEBUG __result => D#3235
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 8;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#3233
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 8;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 8
  _143 = (unsigned long) __offset_105;
  if (_143 <= 63)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 8
  iftmp.195_110 = __offset_105 >> 6;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 8
  _113 = _112 >> 6;
  _114 = (long int) _113;
  iftmp.195_115 = ~_114;

  <bb 11>:
  # iftmp.195_117 = PHI <iftmp.195_110(9), iftmp.195_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.195_117
  __node_offset.197_118 = (long unsigned int) iftmp.195_117;
  _119 = __node_offset.197_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 8
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 8
  _123 = iftmp.195_117 * 64;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 8;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#3233
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 8;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 8
  _144 = (unsigned long) __offset_77;
  if (_144 <= 63)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 8
  iftmp.205_82 = __offset_77 >> 6;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 8
  _85 = _84 >> 6;
  _86 = (long int) _85;
  iftmp.205_87 = ~_86;

  <bb 15>:
  # iftmp.205_89 = PHI <iftmp.205_82(13), iftmp.205_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.205_89
  _88 = *__result_6(D)._M_node;
  __node_offset.207_90 = (long unsigned int) iftmp.205_89;
  _91 = __node_offset.207_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 8
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 8
  _95 = iftmp.205_89 * 64;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 8;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.199_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#3234 => {CLOBBER}
  # DEBUG __len => D#3234
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Credit*>*; _ForwardIterator = std::queue<Credit*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5queueIP6CreditSt5dequeIS4_SaIS4_EEES9_EET0_T_SB_SA_, funcdef_no=4680, decl_uid=79342, cgraph_uid=3029, symbol_order=3030)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<Credit*>*; _ForwardIterator = std::queue<Credit*>*; bool _TrivialValueTypes = false] (struct queue * __first, struct queue * __last, struct queue * __result)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.5422;
  struct Credit * * SR.5421;
  struct Credit * * SR.5420;
  struct Credit * * * __first$24;
  struct Credit * * __first$16;
  struct Credit * * __first$8;
  struct Credit * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.140390;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140365;
  struct _Deque_iterator D.140364;
  struct _Deque_iterator D.140363;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct Credit * * __it;
  struct Credit * * __it$8;
  struct Credit * * __it$16;
  struct Credit * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140345;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140331;
  struct _Deque_iterator D.140330;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140323;
  struct _Deque_iterator D.140322;
  struct _Deque_iterator D.140321;
  void * _12;
  struct _Deque_base * _18;
  struct Credit * * * _25;
  long int _26;
  struct Credit * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct Credit * * _33;
  long int _34;
  struct Credit * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct Credit * * _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct Credit * * _49;
  struct Credit * * _51;
  struct Credit * * * _52;
  struct Credit * * _53;
  struct Credit * * _54;
  struct Credit * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct Credit * _117;
  struct Credit * * _122;
  struct Credit * * * _134;
  struct Credit * * _135;
  struct Credit * * _136;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_154 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_155 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_155
  # DEBUG __first => __first_154
  # DEBUG __r => __result_155
  # DEBUG __p => NULL
  # DEBUG __value => __first_154
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.115557 => D#12
  if (__result_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.115566 => __first_154
  # DEBUG D#3237 => &MEM[(const struct queue &)__first_154].c
  # DEBUG D#3239 => &__result_155->c
  # DEBUG this => D#3239
  # DEBUG __x => D#3237
  # DEBUG this => D#3237
  # DEBUG D#389 => &D#3237->D.59602._M_impl._M_start
  # DEBUG D#390 => &D#3237->D.59602._M_impl._M_finish
  # DEBUG __x => D#390
  # DEBUG __y => D#389
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1836 => &D#3237->D.59602
  # DEBUG this => D#1836
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__result_155].D.59602;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1612 => &_48->_M_impl
  # DEBUG this => D#1612
  # DEBUG __a => NULL
  # DEBUG this => D#1612
  # DEBUG __a => NULL
  # DEBUG this => D#1612
  # DEBUG D.103570 => NULL
  MEM[(struct _Deque_impl *)__result_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__result_155]._M_map_size = 0;
  # DEBUG D#806 => &D#1612->_M_start
  # DEBUG this => D#806
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_node = 0B;
  # DEBUG D#805 => &D#1612->_M_finish
  # DEBUG this => D#805
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1837 => &D#3239->D.59602
  # DEBUG this => D#1837
  # DEBUG D#1838 => &D#3239->D.59602._M_impl._M_start
  # DEBUG this => &D.140321
  # DEBUG __x => D#1838
  _49 = MEM[(const struct iterator &)__result_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__result_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__result_155 + 16]._M_node;
  # DEBUG this => D#3237
  # DEBUG D#224 => &D#3237->D.59602._M_impl._M_finish
  # DEBUG this => &D.140322
  # DEBUG __x => D#224
  _53 = MEM[(const struct iterator &)__first_154 + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__first_154 + 48]._M_first;
  # DEBUG D#3238 => MEM[(const struct iterator &)__first_154 + 48]._M_last
  _56 = MEM[(const struct iterator &)__first_154 + 48]._M_node;
  # DEBUG this => D#3237
  # DEBUG D#225 => &D#3237->D.59602._M_impl._M_start
  # DEBUG this => &D.140323
  # DEBUG __x => D#225
  __first$_M_cur_57 = MEM[(const struct iterator &)__first_154 + 16]._M_cur;
  # DEBUG D#3240 => MEM[(const struct iterator &)__first_154 + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__first_154 + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__first_154 + 16]._M_node;
  # DEBUG __result => &D.140321
  # DEBUG D.140327 => D#1835
  # DEBUG this => &D.140331
  # DEBUG __x => &D.140321
  # DEBUG __result => &D.140331
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.140331
  # DEBUG __result => NULL
  # DEBUG this => &D.140345
  # DEBUG __x => NULL
  # DEBUG __result => &D.140345
  # DEBUG this => &D.140365
  # DEBUG __x => &D.140345
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3238
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3238
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3240
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3240
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.140365
  # DEBUG this => NULL
  # DEBUG __x => &D.140365
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3238
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3238
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3240
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3240
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#3240
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.140390
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#3240
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.140390
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.140330
  # DEBUG __x => &D.140390
  D.140390 ={v} {CLOBBER};
  D.140365 ={v} {CLOBBER};
  D.140345 ={v} {CLOBBER};
  D.140331 ={v} {CLOBBER};
  D.140321 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.5420_217 = PHI <_49(8), SR.5420_216(14)>
  # SR.5421_214 = PHI <_51(8), SR.5421_213(14)>
  # SR.5422_212 = PHI <_52(8), SR.5422_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#254 => &D.140390
  # DEBUG this => D#254
  # DEBUG D#1834 => &__first
  # DEBUG this => D#1834
  _117 = MEM[(struct Credit * const &)__first$_M_cur_209];
  *SR.5420_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct Credit * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.140390
  _122 = SR.5420_217 + 8;
  if (_122 == SR.5421_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.140390
  _134 = SR.5422_212 + 8;
  # DEBUG this => &D.140390
  # DEBUG __new_node => _134
  _135 = MEM[(struct Credit * * *)SR.5422_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.5420_216 = PHI <_122(11), _135(12)>
  # SR.5421_213 = PHI <SR.5421_214(11), _136(12)>
  # SR.5422_211 = PHI <SR.5422_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __first_10 = __first_154 + 80;
  # DEBUG __first => __first_10
  __result_11 = __result_155 + 80;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_194 = PHI <__result_11(15)>

  <bb 18>:
  # __result_156 = PHI <__result_194(17), __result_4(D)(2)>
  return __result_156;

  # __result_193 = PHI <__result_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_158 = PHI <__result_4(D)(21), __result_19(23)>
  # DEBUG __first => __result_158
  # DEBUG __r => __result_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _18 = &MEM[(struct deque *)__result_158].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_18);
  MEM[(struct  &)__result_158] ={v} {CLOBBER};
  __result_19 = __result_158 + 80;
  # DEBUG __first => __result_19
  # DEBUG __first => __result_19
  if (__result_19 == __result_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Credit*] (_ZSt4copyIP6CreditESt15_Deque_iteratorIT_RS3_PS3_ES2_IS3_RKS3_PS7_ESA_S6_, funcdef_no=4683, decl_uid=79372, cgraph_uid=3032, symbol_order=3033)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = Credit*] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.140476;
  const difference_type __offset;
  struct _Self & D.140469;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.80534;
  const long int D.80535;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  struct Credit * * * _22;
  long unsigned int __clen.257_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  struct Credit * * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.256_56;
  long int _57;
  struct Credit * * * _65;
  struct Credit * * _73;
  long int _74;
  long int _75;
  long int _76;
  struct Credit * * _81;
  long int iftmp.262_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.262_87;
  struct Credit * * * _88;
  long int iftmp.262_89;
  long unsigned int __node_offset.264_90;
  long unsigned int _91;
  struct Credit * * * _92;
  struct Credit * * _93;
  struct Credit * * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  struct Credit * * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.252_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.252_115;
  long int iftmp.252_117;
  long unsigned int __node_offset.254_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  struct Credit * * pretmp_214;
  struct Credit * * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  struct Credit * * const prephitmp_227;
  struct Credit * * const pretmp_228;
  struct Credit * * const prephitmp_229;
  struct Credit * * const prephitmp_230;
  struct Credit * * const prephitmp_238;
  struct Credit * * const prephitmp_239;
  struct Credit * * const prephitmp_240;
  struct Credit * * const pretmp_241;
  struct Credit * * const prephitmp_242;
  struct Credit * * const pretmp_243;
  struct Credit * * const prephitmp_244;
  struct Credit * * const pretmp_245;
  struct Credit * * const prephitmp_246;
  struct Credit * * pretmp_247;
  struct Credit * * prephitmp_248;
  struct Credit * * pretmp_249;
  struct Credit * * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 64;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 8;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.256_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#3244 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 8;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 8;
  # DEBUG __a => &D.80534
  # DEBUG __b => &D.80535
  _30 = MIN_EXPR <_12, __len.256_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#3242
  __clen.257_26 = (long unsigned int) __clen_59;
  _27 = __clen.257_26 * 8;
  # DEBUG D#3245 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3245
  # DEBUG __result => D#3244
  # DEBUG __it => D#3245
  # DEBUG __it => D#3245
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3245
  # DEBUG __result => D#3244
  # DEBUG __it => D#3244
  # DEBUG __it => D#3244
  # DEBUG __it => D#3245
  # DEBUG __it => D#3245
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3245
  # DEBUG __result => D#3244
  # DEBUG __simple => 1
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3245
  # DEBUG __result => D#3244
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 8;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#3242
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 8;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 8
  _143 = (unsigned long) __offset_105;
  if (_143 <= 63)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 8
  iftmp.252_110 = __offset_105 >> 6;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 8
  _113 = _112 >> 6;
  _114 = (long int) _113;
  iftmp.252_115 = ~_114;

  <bb 11>:
  # iftmp.252_117 = PHI <iftmp.252_110(9), iftmp.252_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.252_117
  __node_offset.254_118 = (long unsigned int) iftmp.252_117;
  _119 = __node_offset.254_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 8
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 8
  _123 = iftmp.252_117 * 64;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 8;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#3242
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 8;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 8
  _144 = (unsigned long) __offset_77;
  if (_144 <= 63)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 8
  iftmp.262_82 = __offset_77 >> 6;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 8
  _85 = _84 >> 6;
  _86 = (long int) _85;
  iftmp.262_87 = ~_86;

  <bb 15>:
  # iftmp.262_89 = PHI <iftmp.262_82(13), iftmp.262_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.262_89
  _88 = *__result_6(D)._M_node;
  __node_offset.264_90 = (long unsigned int) iftmp.262_89;
  _91 = __node_offset.264_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 8
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 8
  _95 = iftmp.262_89 * 64;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 8;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.256_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#3243 => {CLOBBER}
  # DEBUG __len => D#3243
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<EventRouter::tArrivalEvent*>*; _ForwardIterator = std::queue<EventRouter::tArrivalEvent*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5queueIPN11EventRouter13tArrivalEventESt5dequeIS5_SaIS5_EEESA_EET0_T_SC_SB_, funcdef_no=4693, decl_uid=79452, cgraph_uid=3042, symbol_order=3043)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<EventRouter::tArrivalEvent*>*; _ForwardIterator = std::queue<EventRouter::tArrivalEvent*>*; bool _TrivialValueTypes = false] (struct queue * __first, struct queue * __last, struct queue * __result)
{
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_cur;
  struct tArrivalEvent * * * SR.5472;
  struct tArrivalEvent * * SR.5471;
  struct tArrivalEvent * * SR.5470;
  struct tArrivalEvent * * * __first$24;
  struct tArrivalEvent * * __first$16;
  struct tArrivalEvent * * __first$8;
  struct tArrivalEvent * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.140582;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140557;
  struct _Deque_iterator D.140556;
  struct _Deque_iterator D.140555;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct tArrivalEvent * * __it;
  struct tArrivalEvent * * __it$8;
  struct tArrivalEvent * * __it$16;
  struct tArrivalEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140537;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140523;
  struct _Deque_iterator D.140522;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140515;
  struct _Deque_iterator D.140514;
  struct _Deque_iterator D.140513;
  void * _12;
  struct _Deque_base * _18;
  struct tArrivalEvent * * * _25;
  long int _26;
  struct tArrivalEvent * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct tArrivalEvent * * _33;
  long int _34;
  struct tArrivalEvent * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct tArrivalEvent * * _40;
  long int _41;
  struct tArrivalEvent * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct tArrivalEvent * * _49;
  struct tArrivalEvent * * _51;
  struct tArrivalEvent * * * _52;
  struct tArrivalEvent * * _53;
  struct tArrivalEvent * * _54;
  struct tArrivalEvent * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct tArrivalEvent * _117;
  struct tArrivalEvent * * _122;
  struct tArrivalEvent * * * _134;
  struct tArrivalEvent * * _135;
  struct tArrivalEvent * * _136;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_154 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_155 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_155
  # DEBUG __first => __first_154
  # DEBUG __r => __result_155
  # DEBUG __p => NULL
  # DEBUG __value => __first_154
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.115907 => D#12
  if (__result_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.115916 => __first_154
  # DEBUG D#3246 => &MEM[(const struct queue &)__first_154].c
  # DEBUG D#3248 => &__result_155->c
  # DEBUG this => D#3248
  # DEBUG __x => D#3246
  # DEBUG this => D#3246
  # DEBUG D#392 => &D#3246->D.60628._M_impl._M_start
  # DEBUG D#393 => &D#3246->D.60628._M_impl._M_finish
  # DEBUG __x => D#393
  # DEBUG __y => D#392
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1847 => &D#3246->D.60628
  # DEBUG this => D#1847
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__result_155].D.60628;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1664 => &_48->_M_impl
  # DEBUG this => D#1664
  # DEBUG __a => NULL
  # DEBUG this => D#1664
  # DEBUG __a => NULL
  # DEBUG this => D#1664
  # DEBUG D.103623 => NULL
  MEM[(struct _Deque_impl *)__result_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__result_155]._M_map_size = 0;
  # DEBUG D#818 => &D#1664->_M_start
  # DEBUG this => D#818
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_node = 0B;
  # DEBUG D#817 => &D#1664->_M_finish
  # DEBUG this => D#817
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_node = 0B;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1848 => &D#3248->D.60628
  # DEBUG this => D#1848
  # DEBUG D#1849 => &D#3248->D.60628._M_impl._M_start
  # DEBUG this => &D.140513
  # DEBUG __x => D#1849
  _49 = MEM[(const struct iterator &)__result_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__result_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__result_155 + 16]._M_node;
  # DEBUG this => D#3246
  # DEBUG D#227 => &D#3246->D.60628._M_impl._M_finish
  # DEBUG this => &D.140514
  # DEBUG __x => D#227
  _53 = MEM[(const struct iterator &)__first_154 + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__first_154 + 48]._M_first;
  # DEBUG D#3247 => MEM[(const struct iterator &)__first_154 + 48]._M_last
  _56 = MEM[(const struct iterator &)__first_154 + 48]._M_node;
  # DEBUG this => D#3246
  # DEBUG D#228 => &D#3246->D.60628._M_impl._M_start
  # DEBUG this => &D.140515
  # DEBUG __x => D#228
  __first$_M_cur_57 = MEM[(const struct iterator &)__first_154 + 16]._M_cur;
  # DEBUG D#3249 => MEM[(const struct iterator &)__first_154 + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__first_154 + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__first_154 + 16]._M_node;
  # DEBUG __result => &D.140513
  # DEBUG D.140519 => D#1846
  # DEBUG this => &D.140523
  # DEBUG __x => &D.140513
  # DEBUG __result => &D.140523
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.140523
  # DEBUG __result => NULL
  # DEBUG this => &D.140537
  # DEBUG __x => NULL
  # DEBUG __result => &D.140537
  # DEBUG this => &D.140557
  # DEBUG __x => &D.140537
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3247
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3247
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3249
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3249
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.140557
  # DEBUG this => NULL
  # DEBUG __x => &D.140557
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3247
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3247
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3249
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3249
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#3249
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.140582
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#3249
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.140582
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.140522
  # DEBUG __x => &D.140582
  D.140582 ={v} {CLOBBER};
  D.140557 ={v} {CLOBBER};
  D.140537 ={v} {CLOBBER};
  D.140523 ={v} {CLOBBER};
  D.140513 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.5470_217 = PHI <_49(8), SR.5470_216(14)>
  # SR.5471_214 = PHI <_51(8), SR.5471_213(14)>
  # SR.5472_212 = PHI <_52(8), SR.5472_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#244 => &D.140582
  # DEBUG this => D#244
  # DEBUG D#1845 => &__first
  # DEBUG this => D#1845
  _117 = MEM[(struct tArrivalEvent * const &)__first$_M_cur_209];
  *SR.5470_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct tArrivalEvent * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.140582
  _122 = SR.5470_217 + 8;
  if (_122 == SR.5471_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.140582
  _134 = SR.5472_212 + 8;
  # DEBUG this => &D.140582
  # DEBUG __new_node => _134
  _135 = MEM[(struct tArrivalEvent * * *)SR.5472_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.5470_216 = PHI <_122(11), _135(12)>
  # SR.5471_213 = PHI <SR.5471_214(11), _136(12)>
  # SR.5472_211 = PHI <SR.5472_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __first_10 = __first_154 + 80;
  # DEBUG __first => __first_10
  __result_11 = __result_155 + 80;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_194 = PHI <__result_11(15)>

  <bb 18>:
  # __result_156 = PHI <__result_194(17), __result_4(D)(2)>
  return __result_156;

  # __result_193 = PHI <__result_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_158 = PHI <__result_4(D)(21), __result_19(23)>
  # DEBUG __first => __result_158
  # DEBUG __r => __result_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  _18 = &MEM[(struct deque *)__result_158].D.60628;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (_18);
  MEM[(struct  &)__result_158] ={v} {CLOBBER};
  __result_19 = __result_158 + 80;
  # DEBUG __first => __result_19
  # DEBUG __first => __result_19
  if (__result_19 == __result_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = EventRouter::tArrivalEvent*] (_ZSt4copyIPN11EventRouter13tArrivalEventEESt15_Deque_iteratorIT_RS4_PS4_ES3_IS4_RKS4_PS8_ESB_S7_, funcdef_no=4696, decl_uid=79482, cgraph_uid=3045, symbol_order=3046)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = EventRouter::tArrivalEvent*] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_first;
  struct tArrivalEvent * * __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.140668;
  const difference_type __offset;
  struct _Self & D.140661;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.80624;
  const long int D.80625;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  struct tArrivalEvent * * * _22;
  long unsigned int __clen.314_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct tArrivalEvent * * _42;
  long int _43;
  struct tArrivalEvent * * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.313_56;
  long int _57;
  struct tArrivalEvent * * * _65;
  struct tArrivalEvent * * _73;
  long int _74;
  long int _75;
  long int _76;
  struct tArrivalEvent * * _81;
  long int iftmp.319_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.319_87;
  struct tArrivalEvent * * * _88;
  long int iftmp.319_89;
  long unsigned int __node_offset.321_90;
  long unsigned int _91;
  struct tArrivalEvent * * * _92;
  struct tArrivalEvent * * _93;
  struct tArrivalEvent * * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  struct tArrivalEvent * * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.309_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.309_115;
  long int iftmp.309_117;
  long unsigned int __node_offset.311_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  struct tArrivalEvent * * pretmp_214;
  struct tArrivalEvent * * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  struct tArrivalEvent * * const prephitmp_227;
  struct tArrivalEvent * * const pretmp_228;
  struct tArrivalEvent * * const prephitmp_229;
  struct tArrivalEvent * * const prephitmp_230;
  struct tArrivalEvent * * const prephitmp_238;
  struct tArrivalEvent * * const prephitmp_239;
  struct tArrivalEvent * * const prephitmp_240;
  struct tArrivalEvent * * const pretmp_241;
  struct tArrivalEvent * * const prephitmp_242;
  struct tArrivalEvent * * const pretmp_243;
  struct tArrivalEvent * * const prephitmp_244;
  struct tArrivalEvent * * const pretmp_245;
  struct tArrivalEvent * * const prephitmp_246;
  struct tArrivalEvent * * pretmp_247;
  struct tArrivalEvent * * prephitmp_248;
  struct tArrivalEvent * * pretmp_249;
  struct tArrivalEvent * * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 64;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 8;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.313_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#3253 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 8;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 8;
  # DEBUG __a => &D.80624
  # DEBUG __b => &D.80625
  _30 = MIN_EXPR <_12, __len.313_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#3251
  __clen.314_26 = (long unsigned int) __clen_59;
  _27 = __clen.314_26 * 8;
  # DEBUG D#3254 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3254
  # DEBUG __result => D#3253
  # DEBUG __it => D#3254
  # DEBUG __it => D#3254
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3254
  # DEBUG __result => D#3253
  # DEBUG __it => D#3253
  # DEBUG __it => D#3253
  # DEBUG __it => D#3254
  # DEBUG __it => D#3254
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3254
  # DEBUG __result => D#3253
  # DEBUG __simple => 1
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3254
  # DEBUG __result => D#3253
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 8;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#3251
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 8;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 8
  _143 = (unsigned long) __offset_105;
  if (_143 <= 63)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 8
  iftmp.309_110 = __offset_105 >> 6;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 8
  _113 = _112 >> 6;
  _114 = (long int) _113;
  iftmp.309_115 = ~_114;

  <bb 11>:
  # iftmp.309_117 = PHI <iftmp.309_110(9), iftmp.309_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.309_117
  __node_offset.311_118 = (long unsigned int) iftmp.309_117;
  _119 = __node_offset.311_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 8
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 8
  _123 = iftmp.309_117 * 64;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 8;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#3251
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 8;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 8
  _144 = (unsigned long) __offset_77;
  if (_144 <= 63)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 8
  iftmp.319_82 = __offset_77 >> 6;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 8
  _85 = _84 >> 6;
  _86 = (long int) _85;
  iftmp.319_87 = ~_86;

  <bb 15>:
  # iftmp.319_89 = PHI <iftmp.319_82(13), iftmp.319_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.319_89
  _88 = *__result_6(D)._M_node;
  __node_offset.321_90 = (long unsigned int) iftmp.319_89;
  _91 = __node_offset.321_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 8
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 8
  _95 = iftmp.319_89 * 64;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 8;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.313_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#3252 => {CLOBBER}
  # DEBUG __len => D#3252
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<EventRouter::tTransportEvent*>*; _ForwardIterator = std::queue<EventRouter::tTransportEvent*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5queueIPN11EventRouter15tTransportEventESt5dequeIS5_SaIS5_EEESA_EET0_T_SC_SB_, funcdef_no=4706, decl_uid=79564, cgraph_uid=3055, symbol_order=3056)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::queue<EventRouter::tTransportEvent*>*; _ForwardIterator = std::queue<EventRouter::tTransportEvent*>*; bool _TrivialValueTypes = false] (struct queue * __first, struct queue * __last, struct queue * __result)
{
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_cur;
  struct tTransportEvent * * * SR.5522;
  struct tTransportEvent * * SR.5521;
  struct tTransportEvent * * SR.5520;
  struct tTransportEvent * * * __first$24;
  struct tTransportEvent * * __first$16;
  struct tTransportEvent * * __first$8;
  struct tTransportEvent * * __first;
  _Distance __n;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.140774;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140749;
  struct _Deque_iterator D.140748;
  struct _Deque_iterator D.140747;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct tTransportEvent * * __it;
  struct tTransportEvent * * __it$8;
  struct tTransportEvent * * __it$16;
  struct tTransportEvent * * * __it$24;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140729;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140715;
  struct _Deque_iterator D.140714;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.140707;
  struct _Deque_iterator D.140706;
  struct _Deque_iterator D.140705;
  void * _12;
  struct _Deque_base * _18;
  struct tTransportEvent * * * _25;
  long int _26;
  struct tTransportEvent * * * _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  struct tTransportEvent * * _33;
  long int _34;
  struct tTransportEvent * * _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  struct tTransportEvent * * _40;
  long int _41;
  struct tTransportEvent * * _42;
  long int _43;
  long int _44;
  long int _45;
  difference_type _46;
  size_type _47;
  struct _Deque_base * _48;
  struct tTransportEvent * * _49;
  struct tTransportEvent * * _51;
  struct tTransportEvent * * * _52;
  struct tTransportEvent * * _53;
  struct tTransportEvent * * _54;
  struct tTransportEvent * * * _56;
  long int _93;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _101;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _108;
  long int _110;
  long int _111;
  long int _112;
  struct tTransportEvent * _117;
  struct tTransportEvent * * _122;
  struct tTransportEvent * * * _134;
  struct tTransportEvent * * _135;
  struct tTransportEvent * * _136;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_154 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_155 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_155
  # DEBUG __first => __first_154
  # DEBUG __r => __result_155
  # DEBUG __p => NULL
  # DEBUG __value => __first_154
  # DEBUG D#12 => 80
  # DEBUG __p => NULL
  # DEBUG D.116257 => D#12
  if (__result_155 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => NULL
  # DEBUG D.116266 => __first_154
  # DEBUG D#3255 => &MEM[(const struct queue &)__first_154].c
  # DEBUG D#3257 => &__result_155->c
  # DEBUG this => D#3257
  # DEBUG __x => D#3255
  # DEBUG this => D#3255
  # DEBUG D#395 => &D#3255->D.61649._M_impl._M_start
  # DEBUG D#396 => &D#3255->D.61649._M_impl._M_finish
  # DEBUG __x => D#396
  # DEBUG __y => D#395
  # DEBUG __size => 8
  _25 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_node;
  _26 = (long int) _25;
  _27 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_node;
  _28 = (long int) _27;
  _29 = _26 - _28;
  _30 = _29 /[ex] 8;
  _31 = _30 + -1;
  _32 = _31 * 64;
  _33 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_cur;
  _34 = (long int) _33;
  _35 = MEM[(const struct _Deque_iterator &)__first_154 + 48]._M_first;
  _36 = (long int) _35;
  _37 = _34 - _36;
  _38 = _37 /[ex] 8;
  _39 = _32 + _38;
  _40 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_last;
  _41 = (long int) _40;
  _42 = MEM[(const struct _Deque_iterator &)__first_154 + 16]._M_cur;
  _43 = (long int) _42;
  _44 = _41 - _43;
  _45 = _44 /[ex] 8;
  _46 = _39 + _45;
  _47 = (size_type) _46;
  # DEBUG D#1858 => &D#3255->D.61649
  # DEBUG this => D#1858
  # DEBUG __a => NULL
  _48 = &MEM[(struct deque *)__result_155].D.61649;
  # DEBUG this => _48
  # DEBUG __a => NULL
  # DEBUG __num_elements => _47
  # DEBUG D#1638 => &_48->_M_impl
  # DEBUG this => D#1638
  # DEBUG __a => NULL
  # DEBUG this => D#1638
  # DEBUG __a => NULL
  # DEBUG this => D#1638
  # DEBUG D.103669 => NULL
  MEM[(struct _Deque_impl *)__result_155]._M_map = 0B;
  MEM[(struct _Deque_impl *)__result_155]._M_map_size = 0;
  # DEBUG D#828 => &D#1638->_M_start
  # DEBUG this => D#828
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 16B]._M_node = 0B;
  # DEBUG D#827 => &D#1638->_M_finish
  # DEBUG this => D#827
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)__result_155 + 48B]._M_node = 0B;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_initialize_map (_48, _47);

  <bb 6>:
  # DEBUG D#1859 => &D#3257->D.61649
  # DEBUG this => D#1859
  # DEBUG D#1860 => &D#3257->D.61649._M_impl._M_start
  # DEBUG this => &D.140705
  # DEBUG __x => D#1860
  _49 = MEM[(const struct iterator &)__result_155 + 16]._M_cur;
  _51 = MEM[(const struct iterator &)__result_155 + 16]._M_last;
  _52 = MEM[(const struct iterator &)__result_155 + 16]._M_node;
  # DEBUG this => D#3255
  # DEBUG D#230 => &D#3255->D.61649._M_impl._M_finish
  # DEBUG this => &D.140706
  # DEBUG __x => D#230
  _53 = MEM[(const struct iterator &)__first_154 + 48]._M_cur;
  _54 = MEM[(const struct iterator &)__first_154 + 48]._M_first;
  # DEBUG D#3256 => MEM[(const struct iterator &)__first_154 + 48]._M_last
  _56 = MEM[(const struct iterator &)__first_154 + 48]._M_node;
  # DEBUG this => D#3255
  # DEBUG D#231 => &D#3255->D.61649._M_impl._M_start
  # DEBUG this => &D.140707
  # DEBUG __x => D#231
  __first$_M_cur_57 = MEM[(const struct iterator &)__first_154 + 16]._M_cur;
  # DEBUG D#3258 => MEM[(const struct iterator &)__first_154 + 16]._M_first
  __first$_M_last_59 = MEM[(const struct iterator &)__first_154 + 16]._M_last;
  __first$_M_node_60 = MEM[(const struct iterator &)__first_154 + 16]._M_node;
  # DEBUG __result => &D.140705
  # DEBUG D.140711 => D#1857
  # DEBUG this => &D.140715
  # DEBUG __x => &D.140705
  # DEBUG __result => &D.140715
  # DEBUG __assignable => 1
  # DEBUG this => NULL
  # DEBUG __x => &D.140715
  # DEBUG __result => NULL
  # DEBUG this => &D.140729
  # DEBUG __x => NULL
  # DEBUG __result => &D.140729
  # DEBUG this => &D.140749
  # DEBUG __x => &D.140729
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3256
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3256
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3258
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3258
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __result => &D.140749
  # DEBUG this => NULL
  # DEBUG __x => &D.140749
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __it => _53
  # DEBUG __it$8 => _54
  # DEBUG __it$16 => D#3256
  # DEBUG __it$24 => _56
  # DEBUG __it$_M_cur => _53
  # DEBUG __it$_M_first => _54
  # DEBUG __it$_M_last => D#3256
  # DEBUG __it$_M_node => _56
  # DEBUG __it => __first$_M_cur_57
  # DEBUG __it$8 => D#3258
  # DEBUG __it$16 => __first$_M_last_59
  # DEBUG __it$24 => __first$_M_node_60
  # DEBUG __it$_M_cur => __first$_M_cur_57
  # DEBUG __it$_M_first => D#3258
  # DEBUG __it$_M_last => __first$_M_last_59
  # DEBUG __it$_M_node => __first$_M_node_60
  # DEBUG __first => __first$_M_cur_57
  # DEBUG __first$8 => D#3258
  # DEBUG __first$16 => __first$_M_last_59
  # DEBUG __first$24 => __first$_M_node_60
  # DEBUG __result => NULL
  # DEBUG __simple => 0
  # DEBUG this => &D.140774
  # DEBUG __x => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_57
  # DEBUG __first$_M_first => D#3258
  # DEBUG __first$_M_last => __first$_M_last_59
  # DEBUG __first$_M_node => __first$_M_node_60
  # DEBUG __result => &D.140774
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _93 = (long int) _56;
  _95 = (long int) __first$_M_node_60;
  _96 = _93 - _95;
  _97 = _96 /[ex] 8;
  _98 = _97 + -1;
  _99 = _98 * 64;
  _101 = (long int) _53;
  _103 = (long int) _54;
  _104 = _101 - _103;
  _105 = _104 /[ex] 8;
  _106 = _99 + _105;
  _108 = (long int) __first$_M_last_59;
  _110 = (long int) __first$_M_cur_57;
  _111 = _108 - _110;
  _112 = _111 /[ex] 8;
  __n_113 = _106 + _112;
  # DEBUG __n => __n_113
  # DEBUG __n => __n_113
  if (__n_113 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &D.140714
  # DEBUG __x => &D.140774
  D.140774 ={v} {CLOBBER};
  D.140749 ={v} {CLOBBER};
  D.140729 ={v} {CLOBBER};
  D.140715 ={v} {CLOBBER};
  D.140705 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 8>:

  <bb 9>:
  # __n_161 = PHI <__n_113(8), __n_124(14)>
  # SR.5520_217 = PHI <_49(8), SR.5520_216(14)>
  # SR.5521_214 = PHI <_51(8), SR.5521_213(14)>
  # SR.5522_212 = PHI <_52(8), SR.5522_211(14)>
  # __first$_M_cur_209 = PHI <__first$_M_cur_57(8), __first$_M_cur_208(14)>
  # __first$_M_last_205 = PHI <__first$_M_last_59(8), __first$_M_last_204(14)>
  # __first$_M_node_203 = PHI <__first$_M_node_60(8), __first$_M_node_201(14)>
  # DEBUG __first$_M_node => __first$_M_node_203
  # DEBUG __first$_M_last => __first$_M_last_205
  # DEBUG __first$_M_cur => __first$_M_cur_209
  # DEBUG __n => __n_161
  # DEBUG D#266 => &D.140774
  # DEBUG this => D#266
  # DEBUG D#1856 => &__first
  # DEBUG this => D#1856
  _117 = MEM[(struct tTransportEvent * const &)__first$_M_cur_209];
  *SR.5520_217 = _117;
  # DEBUG this => &__first
  __first$_M_cur_119 = __first$_M_cur_209 + 8;
  # DEBUG __first$_M_cur => __first$_M_cur_119
  if (__first$_M_cur_119 == __first$_M_last_205)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG this => &__first
  __first$_M_node_130 = __first$_M_node_203 + 8;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_130
  # DEBUG __first$_M_node => __first$_M_node_130
  __first$_M_cur_131 = MEM[(struct tTransportEvent * * *)__first$_M_node_203 + 8B];
  # DEBUG __size => 8
  __first$_M_last_132 = __first$_M_cur_131 + 512;
  # DEBUG __first$_M_last => __first$_M_last_132
  # DEBUG __first$_M_cur => __first$_M_cur_131

  <bb 11>:
  # __first$_M_cur_208 = PHI <__first$_M_cur_119(9), __first$_M_cur_131(10)>
  # __first$_M_last_204 = PHI <__first$_M_last_205(9), __first$_M_last_132(10)>
  # __first$_M_node_201 = PHI <__first$_M_node_203(9), __first$_M_node_130(10)>
  # DEBUG __first$_M_node => __first$_M_node_201
  # DEBUG __first$_M_last => __first$_M_last_204
  # DEBUG __first$_M_cur => __first$_M_cur_208
  # DEBUG this => &D.140774
  _122 = SR.5520_217 + 8;
  if (_122 == SR.5521_214)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG this => &D.140774
  _134 = SR.5522_212 + 8;
  # DEBUG this => &D.140774
  # DEBUG __new_node => _134
  _135 = MEM[(struct tTransportEvent * * *)SR.5522_212 + 8B];
  # DEBUG __size => 8
  _136 = _135 + 512;

  <bb 13>:
  # SR.5520_216 = PHI <_122(11), _135(12)>
  # SR.5521_213 = PHI <SR.5521_214(11), _136(12)>
  # SR.5522_211 = PHI <SR.5522_212(11), _134(12)>
  __n_124 = __n_161 + -1;
  # DEBUG __n => __n_124
  # DEBUG __n => __n_124
  if (__n_124 <= 0)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  __first_10 = __first_154 + 80;
  # DEBUG __first => __first_10
  __result_11 = __result_155 + 80;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_194 = PHI <__result_11(15)>

  <bb 18>:
  # __result_156 = PHI <__result_194(17), __result_4(D)(2)>
  return __result_156;

  # __result_193 = PHI <__result_155(5)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_193
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_193)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_158 = PHI <__result_4(D)(21), __result_19(23)>
  # DEBUG __first => __result_158
  # DEBUG __r => __result_158
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  _18 = &MEM[(struct deque *)__result_158].D.61649;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (_18);
  MEM[(struct  &)__result_158] ={v} {CLOBBER};
  __result_19 = __result_158 + 80;
  # DEBUG __first => __result_19
  # DEBUG __first => __result_19
  if (__result_19 == __result_193)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = EventRouter::tTransportEvent*] (_ZSt4copyIPN11EventRouter15tTransportEventEESt15_Deque_iteratorIT_RS4_PS4_ES3_IS4_RKS4_PS8_ESB_S7_, funcdef_no=4709, decl_uid=79594, cgraph_uid=3058, symbol_order=3059)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = EventRouter::tTransportEvent*] (struct _Deque_iterator __first, struct _Deque_iterator __last, struct _Deque_iterator & restrict __result)
{
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_first;
  struct tTransportEvent * * __first$_M_cur;
  const difference_type __offset;
  struct _Self & D.140860;
  const difference_type __offset;
  struct _Self & D.140853;
  const ptrdiff_t _Num;
  const difference_type __clen;
  difference_type __len;
  const long int D.80720;
  const long int D.80721;
  long int _8;
  long int _10;
  long int _11;
  long int _15;
  long int _17;
  long int _18;
  long int _21;
  struct tTransportEvent * * * _22;
  long unsigned int __clen.372_26;
  long unsigned int _27;
  long int _30;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct tTransportEvent * * _42;
  long int _43;
  struct tTransportEvent * * _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _50;
  long int _52;
  long int _53;
  long int _54;
  long int __len.371_56;
  long int _57;
  struct tTransportEvent * * * _65;
  struct tTransportEvent * * _73;
  long int _74;
  long int _75;
  long int _76;
  struct tTransportEvent * * _81;
  long int iftmp.380_82;
  long unsigned int _84;
  long unsigned int _85;
  long int _86;
  long int iftmp.380_87;
  struct tTransportEvent * * * _88;
  long int iftmp.380_89;
  long unsigned int __node_offset.382_90;
  long unsigned int _91;
  struct tTransportEvent * * * _92;
  struct tTransportEvent * * _93;
  struct tTransportEvent * * _94;
  long int _95;
  long int _96;
  long unsigned int _97;
  long unsigned int _98;
  struct tTransportEvent * * _99;
  long int _102;
  long int _103;
  long int _104;
  long int iftmp.367_110;
  long unsigned int _112;
  long unsigned int _113;
  long int _114;
  long int iftmp.367_115;
  long int iftmp.367_117;
  long unsigned int __node_offset.369_118;
  long unsigned int _119;
  long int _123;
  long int _124;
  long unsigned int _125;
  long unsigned int _126;
  unsigned long _143;
  unsigned long _144;
  struct tTransportEvent * * pretmp_214;
  struct tTransportEvent * * prephitmp_215;
  long int pretmp_216;
  long int prephitmp_217;
  struct tTransportEvent * * const prephitmp_227;
  struct tTransportEvent * * const pretmp_228;
  struct tTransportEvent * * const prephitmp_229;
  struct tTransportEvent * * const prephitmp_230;
  struct tTransportEvent * * const prephitmp_238;
  struct tTransportEvent * * const prephitmp_239;
  struct tTransportEvent * * const prephitmp_240;
  struct tTransportEvent * * const pretmp_241;
  struct tTransportEvent * * const prephitmp_242;
  struct tTransportEvent * * const pretmp_243;
  struct tTransportEvent * * const prephitmp_244;
  struct tTransportEvent * * const pretmp_245;
  struct tTransportEvent * * const prephitmp_246;
  struct tTransportEvent * * pretmp_247;
  struct tTransportEvent * * prephitmp_248;
  struct tTransportEvent * * pretmp_249;
  struct tTransportEvent * * prephitmp_250;

  <bb 2>:
  __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first$_M_cur => __first$_M_cur_78
  __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first$_M_first => __first$_M_first_146
  __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first$_M_last => __first$_M_last_145
  __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first$_M_node => __first$_M_node_147
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _22 = __last._M_node;
  _21 = (long int) _22;
  _37 = (long int) __first$_M_node_147;
  _38 = _21 - _37;
  _39 = _38 /[ex] 8;
  _40 = _39 + -1;
  _41 = _40 * 64;
  _42 = __last._M_cur;
  _43 = (long int) _42;
  _44 = __last._M_first;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _50 = (long int) __first$_M_last_145;
  _52 = (long int) __first$_M_cur_78;
  _53 = _50 - _52;
  _54 = _53 /[ex] 8;
  __len_55 = _48 + _54;
  # DEBUG __len => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
  pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 19>;

  <bb 4>:
  pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  <bb 5>:
  # __len.371_56 = PHI <__len_55(4), __len_32(17)>
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_node => __first$_M_node_23
  # DEBUG __first$_M_last => __first$_M_last_130
  # DEBUG __first$_M_first => __first$_M_first_132
  # DEBUG __first$_M_cur => __first$_M_cur_129
  _8 = (long int) prephitmp_248;
  # DEBUG D#3262 => *__result_6(D)._M_cur
  _10 = (long int) prephitmp_250;
  _11 = _8 - _10;
  _12 = _11 /[ex] 8;
  _15 = (long int) __first$_M_last_130;
  _17 = (long int) __first$_M_cur_129;
  _18 = _15 - _17;
  _19 = _18 /[ex] 8;
  # DEBUG __a => &D.80720
  # DEBUG __b => &D.80721
  _30 = MIN_EXPR <_12, __len.371_56>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clen => D#3260
  __clen.372_26 = (long unsigned int) __clen_59;
  _27 = __clen.372_26 * 8;
  # DEBUG D#3263 => __first$_M_cur_129 + _27
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3263
  # DEBUG __result => D#3262
  # DEBUG __it => D#3263
  # DEBUG __it => D#3263
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => __first$_M_cur_129
  # DEBUG __last => D#3263
  # DEBUG __result => D#3262
  # DEBUG __it => D#3262
  # DEBUG __it => D#3262
  # DEBUG __it => D#3263
  # DEBUG __it => D#3263
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __it => __first$_M_cur_129
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  _57 = (long int) _27;
  _Num_58 = _57 /[ex] 8;
  # DEBUG _Num => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
  pretmp_214 = __result_6(D)->_M_cur;
  pretmp_216 = (long int) pretmp_214;

  <bb 7>:
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG this => &__first
  # DEBUG __n => D#3260
  _102 = (long int) __first$_M_first_132;
  _103 = _17 - _102;
  _104 = _103 /[ex] 8;
  __offset_105 = __clen_59 + _104;
  # DEBUG __offset => __offset_105
  # DEBUG __size => 8
  _143 = (unsigned long) __offset_105;
  if (_143 <= 63)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;

  <bb 9>:
  # DEBUG __size => 8
  iftmp.367_110 = __offset_105 >> 6;
  goto <bb 11>;

  <bb 10>:
  _112 = ~_143;
  # DEBUG __size => 8
  _113 = _112 >> 6;
  _114 = (long int) _113;
  iftmp.367_115 = ~_114;

  <bb 11>:
  # iftmp.367_117 = PHI <iftmp.367_110(9), iftmp.367_115(10)>

  <bb 24>:
  # DEBUG __node_offset => iftmp.367_117
  __node_offset.369_118 = (long unsigned int) iftmp.367_117;
  _119 = __node_offset.369_118 * 8;
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG this => &__first
  # DEBUG __new_node => __first$_M_node_120
  # DEBUG __first$_M_node => __first$_M_node_120
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_first => __first$_M_first_121
  # DEBUG __size => 8
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_last => __first$_M_last_122
  # DEBUG __size => 8
  _123 = iftmp.367_117 * 64;
  _124 = __offset_105 - _123;
  _125 = (long unsigned int) _124;
  _126 = _125 * 8;
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_cur => __first$_M_cur_127

  <bb 12>:
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_node => __first$_M_node_106
  # DEBUG __first$_M_last => __first$_M_last_1
  # DEBUG __first$_M_first => __first$_M_first_131
  # DEBUG __first$_M_cur => __first$_M_cur_133
  # DEBUG this => __result_6(D)
  # DEBUG __n => D#3260
  _73 = *__result_6(D)._M_first;
  _74 = (long int) _73;
  _75 = prephitmp_217 - _74;
  _76 = _75 /[ex] 8;
  __offset_77 = __clen_59 + _76;
  # DEBUG __offset => __offset_77
  # DEBUG __size => 8
  _144 = (unsigned long) __offset_77;
  if (_144 <= 63)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 13>:
  # DEBUG __size => 8
  iftmp.380_82 = __offset_77 >> 6;
  goto <bb 15>;

  <bb 14>:
  _84 = ~_144;
  # DEBUG __size => 8
  _85 = _84 >> 6;
  _86 = (long int) _85;
  iftmp.380_87 = ~_86;

  <bb 15>:
  # iftmp.380_89 = PHI <iftmp.380_82(13), iftmp.380_87(14)>

  <bb 25>:
  # DEBUG __node_offset => iftmp.380_89
  _88 = *__result_6(D)._M_node;
  __node_offset.382_90 = (long unsigned int) iftmp.380_89;
  _91 = __node_offset.382_90 * 8;
  _92 = _88 + _91;
  # DEBUG this => __result_6(D)
  # DEBUG __new_node => _92
  *__result_6(D)._M_node = _92;
  _93 = *_92;
  *__result_6(D)._M_first = _93;
  # DEBUG __size => 8
  _94 = _93 + 512;
  *__result_6(D)._M_last = _94;
  # DEBUG __size => 8
  _95 = iftmp.380_89 * 64;
  _96 = __offset_77 - _95;
  _97 = (long unsigned int) _96;
  _98 = _97 * 8;
  _99 = _93 + _98;
  *__result_6(D)._M_cur = _99;

  <bb 16>:
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  __len_32 = __len.371_56 - __clen_59;
  # DEBUG __len => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>

  <bb 23>:

  <bb 19>:
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  <bb 26>:
  # DEBUG this => _34(D)
  # DEBUG __x => __result_6(D)
  _34(D)->_M_cur = prephitmp_242;
  _34(D)->_M_first = prephitmp_244;
  _34(D)->_M_last = prephitmp_246;
  _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
  _34(D)->_M_node = _65;
  # DEBUG D#3261 => {CLOBBER}
  # DEBUG __len => D#3261
  return _34(D);

  <bb 20>:
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 21>:
  _81 = prephitmp_215 + _27;
  *__result_6(D)._M_cur = _81;
  pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
  goto <bb 16>;

  <bb 22>:
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::list<EventNextVCState::tWaiting*>*; _ForwardIterator = std::__cxx11::list<EventNextVCState::tWaiting*>*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx114listIPN16EventNextVCState8tWaitingESaIS6_EEES9_EET0_T_SB_SA_, funcdef_no=4735, decl_uid=79776, cgraph_uid=3084, symbol_order=3085)

Trying loop 2 as candidate
loop 2 is not innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is not innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::list<EventNextVCState::tWaiting*>*; _ForwardIterator = std::__cxx11::list<EventNextVCState::tWaiting*>*; bool _TrivialValueTypes = false] (struct list * __first, struct list * __last, struct list * __result)
{
  struct iterator __position;
  struct _List_iterator D.140907;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct _Node * __tmp;
  void * _12;
  struct _List_node * _23;
  struct _List_node_base * _30;
  const struct _List_node_base * _31;
  struct tWaiting * _41;
  struct _List_node_base * _43;
  long unsigned int _44;
  long unsigned int _45;
  struct _List_node_base * _55;
  struct _List_node_base * _61;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_77 = PHI <__first_5(D)(3), __first_10(16)>
  # __result_78 = PHI <__result_4(D)(3), __result_11(16)>
  # DEBUG __cur => __result_78
  # DEBUG __first => __first_77
  # DEBUG __r => __result_78
  # DEBUG __p => NULL
  # DEBUG __value => __first_77
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.112803 => D#12
  if (__result_78 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_78
  # DEBUG __x => __first_77
  # DEBUG D#1307 => &MEM[(const struct list *)__first_77].D.63942
  # DEBUG this => D#1307
  # DEBUG D#1309 => &__result_78->D.63942
  # DEBUG this => D#1309
  # DEBUG __a => NULL
  # DEBUG D#902 => &D#1309->_M_impl
  # DEBUG this => D#902
  # DEBUG __a => NULL
  # DEBUG this => D#902
  # DEBUG __a => NULL
  # DEBUG this => D#902
  # DEBUG D.104323 => NULL
  MEM[(struct _List_impl *)__result_78]._M_node._M_data = 0;
  # DEBUG this => D#1309
  _30 = &MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.45287;
  MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.45287._M_next = _30;
  MEM[(struct _List_base *)__result_78]._M_impl._M_node.D.45287._M_prev = _30;
  # DEBUG D#449 => D#1309
  # DEBUG __n => 0
  # DEBUG this => D#449
  # DEBUG this => __first_77
  _31 = &MEM[(const struct list *)__first_77].D.63942._M_impl._M_node.D.45287;
  # DEBUG this => NULL
  # DEBUG __x => _31
  __first$_M_node_32 = MEM[(struct _List_node_base * *)__first_77];
  # DEBUG D#198 => __first_77
  # DEBUG this => D#198
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_32
  # DEBUG this => __result_78
  # DEBUG __first => __first$_M_node_32
  # DEBUG __last$_M_node => _31
  # DEBUG __first$_M_node => __first$_M_node_32
  # DEBUG __first$_M_node => __first$_M_node_32
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_31 != __first$_M_node_32)
    goto <bb 6>;
  else
    goto <bb 15>;

  <bb 6>:

  <bb 7>:
  # __first$_M_node_81 = PHI <__first$_M_node_32(6), __first$_M_node_36(9)>
  # DEBUG __first$_M_node => __first$_M_node_81
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#3264 => &MEM[(const struct _Node *)__first$_M_node_81]._M_data
  # DEBUG this => __result_78
  # DEBUG __x => NULL
  # DEBUG this => __result_78
  # DEBUG this => NULL
  # DEBUG __x => _30
  # DEBUG this => __result_78
  # DEBUG __x => D#3264
  # DEBUG D#1304 => __result_78
  # DEBUG __x => D#3264
  # DEBUG this => D#1304
  # DEBUG D#1303 => D#1304
  # DEBUG D#1302 => D#1304
  # DEBUG D#1301 => &D#1302->D.63942
  # DEBUG D#1299 => D#1301
  # DEBUG this => D#1299
  # DEBUG D#1298 => D#1299
  # DEBUG D#1297 => &D#1298->_M_impl
  # DEBUG D#1295 => D#1297
  # DEBUG D#1296 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1295
  # DEBUG D.140918 => D#1296
  # DEBUG D#1294 => D#1295
  # DEBUG D#1293 => D#1294
  # DEBUG this => D#1293
  _23 = operator new (24);

  <bb 8>:
  # DEBUG __p => _23
  # DEBUG D#3265 => &MEM[(struct _Node *)_23]._M_data
  # DEBUG __r => D#3265
  # DEBUG D#1300 => &D#1303->D.63942
  # DEBUG D#877 => D#1300
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#3264
  # DEBUG this => D#457
  # DEBUG D#12 => 8
  # DEBUG __p => NULL
  # DEBUG D.101844 => D#12
  _41 = MEM[(struct tWaiting * const &)__first$_M_node_81 + 16];
  MEM[(struct tWaiting * *)_23 + 16B] = _41;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _23
  _43 = &MEM[(struct _Node *)_23].D.69419;
  std::__detail::_List_node_base::_M_hook (_43, _30);
  # DEBUG D#1305 => &__result_78->D.63942
  # DEBUG D#279 => D#1305
  # DEBUG __n => 1
  # DEBUG this => D#279
  _44 = MEM[(long unsigned int *)__result_78 + 16B];
  _45 = _44 + 1;
  MEM[(long unsigned int *)__result_78 + 16B] = _45;
  # DEBUG this => &__first
  __first$_M_node_36 = __first$_M_node_81->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_36
  # DEBUG __first$_M_node => __first$_M_node_36
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_31 != __first$_M_node_36)
    goto <bb 9>;
  else
    goto <bb 15>;

  <bb 9>:
  goto <bb 7>;

  # _61 = PHI <_30(7)>
  # __result_62 = PHI <__result_78(7)>
<L7>:
  # DEBUG D#1308 => &__result_62->D.63942
  # DEBUG this => D#1308
  # DEBUG this => D#1308
  __tmp_37 = MEM[(struct _List_base *)__result_62]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_37
  # DEBUG __cur => __tmp_37
  if (_61 == __tmp_37)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#879 => &D#1308->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__result_62] ={v} {CLOBBER};
  resx 4

  <bb 12>:

  <bb 13>:
  # __tmp_82 = PHI <__tmp_37(12), __tmp_39(14)>
  # DEBUG __cur => __tmp_82
  # DEBUG __tmp => __tmp_82
  __tmp_39 = __tmp_82->D.69419._M_next;
  # DEBUG __cur => __tmp_39
  # DEBUG D#878 => &__tmp_82->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#1308
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#1308
  # DEBUG __p => __tmp_82
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_82
  # DEBUG this => D#450
  # DEBUG D.140887 => D#451
  operator delete (__tmp_82);
  # DEBUG __cur => __tmp_39
  if (_61 == __tmp_39)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  __first_10 = __first_77 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_78 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 4>;

  <bb 17>:
  # __result_28 = PHI <__result_11(15)>

  <bb 18>:
  # __result_76 = PHI <__result_28(17), __result_4(D)(2)>
  return __result_76;

<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_62
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_62
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_62)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __cxa_rethrow ();

  <bb 21>:

  <bb 22>:
  # __result_75 = PHI <__result_4(D)(21), __result_20(27)>
  # DEBUG __first => __result_75
  # DEBUG __r => __result_75
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_8 = MEM[(struct _List_base *)__result_75]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_8
  # DEBUG __cur => __tmp_8
  _55 = &MEM[(struct _List_base *)__result_75]._M_impl._M_node.D.45287;
  if (__tmp_8 == _55)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__result_75] ={v} {CLOBBER};
  __result_20 = __result_75 + 24;
  # DEBUG __first => __result_20
  # DEBUG __first => __result_20
  if (__result_20 == __result_62)
    goto <bb 20>;
  else
    goto <bb 27>;

  <bb 24>:

  <bb 25>:
  # __tmp_65 = PHI <__tmp_8(24), __tmp_19(26)>
  # DEBUG __cur => __tmp_65
  # DEBUG __tmp => __tmp_65
  __tmp_19 = __tmp_65->D.69419._M_next;
  # DEBUG __cur => __tmp_19
  # DEBUG D#878 => &__tmp_65->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_65
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_65
  # DEBUG this => D#450
  # DEBUG D.112827 => D#451
  operator delete (__tmp_65);
  # DEBUG __cur => __tmp_19
  if (__tmp_19 == _55)
    goto <bb 23>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 25>;

  <bb 27>:
  goto <bb 22>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::list<EventNextVCState::tWaiting*>; _Alloc = std::allocator<std::__cxx11::list<EventNextVCState::tWaiting*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::list<EventNextVCState::tWaiting*>*, std::vector<std::__cxx11::list<EventNextVCState::tWaiting*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::list<EventNextVCState::tWaiting*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::list<EventNextVCState::tWaiting*>] (_ZNSt6vectorINSt7__cxx114listIPN16EventNextVCState8tWaitingESaIS4_EEESaIS6_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS6_S8_EEmRKS6_, funcdef_no=3464, decl_uid=47603, cgraph_uid=1813, symbol_order=1814)

Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 13 as candidate
loop 13 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is not innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is not innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::__cxx11::list<EventNextVCState::tWaiting*>; _Alloc = std::allocator<std::__cxx11::list<EventNextVCState::tWaiting*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::list<EventNextVCState::tWaiting*>*, std::vector<std::__cxx11::list<EventNextVCState::tWaiting*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::list<EventNextVCState::tWaiting*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::list<EventNextVCState::tWaiting*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.141015;
  const size_type __len;
  size_type D.141014;
  size_type __n;
  struct vector * D.141005;
  struct iterator __position;
  struct _List_iterator D.140979;
  const struct _List_node_base * __first$_M_node;
  struct _Node * __tmp;
  struct list * const __position;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * __first;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct list * __first;
  struct _Node * __tmp;
  struct list * __first;
  struct list * __first;
  difference_type __n;
  struct list * __last;
  struct list * __new_finish;
  const size_type __elems_before;
  struct list * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct list * _10;
  long int _11;
  struct list * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  bool _18;
  struct list * _20;
  struct vector * const _23;
  long int __last.503_25;
  long unsigned int _26;
  difference_type _30;
  struct list * _31;
  long unsigned int _32;
  long int _34;
  struct list * _35;
  long int _36;
  struct list * _37;
  struct list * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct list * _51;
  struct _List_node * _55;
  long unsigned int _59;
  sizetype _60;
  struct list * _62;
  struct list * _63;
  struct list * _67;
  long unsigned int _70;
  struct list * _74;
  long unsigned int _75;
  struct list * _76;
  long int _78;
  struct list * _82;
  struct list * _93;
  long int prephitmp_129;
  struct list * pretmp_137;
  struct list * prephitmp_138;
  long unsigned int prephitmp_143;
  long unsigned int pretmp_161;
  long unsigned int prephitmp_162;
  struct list * const pretmp_163;
  struct list * const prephitmp_164;
  long int pretmp_165;
  const struct _List_node_base * _167;
  struct tWaiting * _177;
  struct _List_node_base * _179;
  long unsigned int _180;
  long unsigned int _181;
  struct vector * _183;
  long unsigned int _185;
  long int _187;
  long int _188;
  long int _189;
  long unsigned int _191;
  struct _List_node_base * _206;
  long int _231;
  difference_type _232;
  struct _List_node_base * _234;
  long int _238;
  long int _239;
  bool _240;
  long int _241;
  difference_type _242;
  long int _244;
  long int _245;
  bool _250;
  struct _List_node_base * _252;

  <bb 2>:
  # DEBUG D#3271 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3271
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 66>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.47680._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.47680._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 44>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#1307 => &MEM[(const struct list *)__x_28(D)].D.63942
  # DEBUG this => D#1307
  # DEBUG D#1309 => &__x_copy.D.63942
  # DEBUG this => D#1309
  # DEBUG __a => NULL
  # DEBUG D#902 => &D#1309->_M_impl
  # DEBUG this => D#902
  # DEBUG __a => NULL
  # DEBUG this => D#902
  # DEBUG __a => NULL
  # DEBUG this => D#902
  # DEBUG D.104323 => NULL
  MEM[(struct _List_impl *)&__x_copy]._M_node._M_data = 0;
  # DEBUG this => D#1309
  MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287._M_next = &MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287;
  MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287._M_prev = &MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287;
  # DEBUG D#449 => D#1309
  # DEBUG __n => 0
  # DEBUG this => D#449
  # DEBUG this => __x_28(D)
  _167 = &MEM[(const struct list *)__x_28(D)].D.63942._M_impl._M_node.D.45287;
  # DEBUG this => NULL
  # DEBUG __x => _167
  __first$_M_node_168 = MEM[(struct _List_node_base * *)__x_28(D)];
  # DEBUG D#198 => __x_28(D)
  # DEBUG this => D#198
  # DEBUG this => NULL
  # DEBUG __x => __first$_M_node_168
  # DEBUG this => &__x_copy
  # DEBUG __first => __first$_M_node_168
  # DEBUG __last$_M_node => _167
  # DEBUG __first$_M_node => __first$_M_node_168
  # DEBUG __first$_M_node => __first$_M_node_168
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_167 != __first$_M_node_168)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:

  <bb 6>:
  # __first$_M_node_282 = PHI <__first$_M_node_168(5), __first$_M_node_172(8)>
  # DEBUG __first$_M_node => __first$_M_node_282
  # DEBUG this => &__first
  # DEBUG __x => &__last
  # DEBUG this => &__first
  # DEBUG D#3267 => &MEM[(const struct _Node *)__first$_M_node_282]._M_data
  # DEBUG this => &__x_copy
  # DEBUG __x => NULL
  # DEBUG this => &__x_copy
  # DEBUG this => NULL
  # DEBUG __x => &__x_copy.D.63942._M_impl._M_node.D.45287
  # DEBUG this => &__x_copy
  # DEBUG __x => D#3267
  # DEBUG D#1304 => &__x_copy
  # DEBUG __x => D#3267
  # DEBUG this => D#1304
  # DEBUG D#1303 => D#1304
  # DEBUG D#1302 => D#1304
  # DEBUG D#1301 => &D#1302->D.63942
  # DEBUG D#1299 => D#1301
  # DEBUG this => D#1299
  # DEBUG D#1298 => D#1299
  # DEBUG D#1297 => &D#1298->_M_impl
  # DEBUG D#1295 => D#1297
  # DEBUG D#1296 => 0B
  # DEBUG __n => 1
  # DEBUG this => D#1295
  # DEBUG D.140990 => D#1296
  # DEBUG D#1294 => D#1295
  # DEBUG D#1293 => D#1294
  # DEBUG this => D#1293
  _55 = operator new (24);

  <bb 7>:
  # DEBUG __p => _55
  # DEBUG D#3268 => &MEM[(struct _Node *)_55]._M_data
  # DEBUG __r => D#3268
  # DEBUG D#1300 => &D#1303->D.63942
  # DEBUG D#877 => D#1300
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG __p => NULL
  # DEBUG __val => D#3267
  # DEBUG this => D#457
  # DEBUG D#12 => 8
  # DEBUG __p => NULL
  # DEBUG D.101844 => D#12
  _177 = MEM[(struct tWaiting * const &)__first$_M_node_282 + 16];
  MEM[(struct tWaiting * *)_55 + 16B] = _177;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __tmp => _55
  _179 = &MEM[(struct _Node *)_55].D.69419;
  std::__detail::_List_node_base::_M_hook (_179, &__x_copy.D.63942._M_impl._M_node.D.45287);
  # DEBUG D#1305 => &__x_copy.D.63942
  # DEBUG D#279 => D#1305
  # DEBUG __n => 1
  # DEBUG this => D#279
  _180 = MEM[(long unsigned int *)&__x_copy + 16B];
  _181 = _180 + 1;
  MEM[(long unsigned int *)&__x_copy + 16B] = _181;
  # DEBUG this => &__first
  __first$_M_node_172 = __first$_M_node_282->_M_next;
  # DEBUG __first$_M_node => __first$_M_node_172
  # DEBUG __first$_M_node => __first$_M_node_172
  # DEBUG this => &__first
  # DEBUG __x => &__last
  if (_167 != __first$_M_node_172)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 6>;

  <bb 9>:
  pretmp_163 = MEM[(struct list * const &)this_9(D) + 8];
  pretmp_165 = (long int) pretmp_163;
  goto <bb 15>;

<L19>:
  # DEBUG D#1308 => &__x_copy.D.63942
  # DEBUG this => D#1308
  # DEBUG this => D#1308
  __tmp_173 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_173
  # DEBUG __cur => __tmp_173
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287 == __tmp_173)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#879 => &D#1308->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  resx 12

  <bb 12>:

  <bb 13>:
  # __tmp_283 = PHI <__tmp_173(12), __tmp_175(14)>
  # DEBUG __cur => __tmp_283
  # DEBUG __tmp => __tmp_283
  __tmp_175 = __tmp_283->D.69419._M_next;
  # DEBUG __cur => __tmp_175
  # DEBUG D#878 => &__tmp_283->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#1308
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#1308
  # DEBUG __p => __tmp_283
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_283
  # DEBUG this => D#450
  # DEBUG D.140959 => D#451
  operator delete (__tmp_283);
  # DEBUG __cur => __tmp_175
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287 == __tmp_175)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  # prephitmp_164 = PHI <pretmp_163(9), _12(4)>
  # prephitmp_129 = PHI <pretmp_165(9), _13(4)>
  # DEBUG this => this_9(D)
  # DEBUG D#277 => &this_9(D)->D.47680._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#277
  # DEBUG D#3269 => MEM[(struct list * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.74344
  # DEBUG __rhs => &__position
  # DEBUG this => &D.74344
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_129 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#3269
  if (__n_7(D) < __elems_after_57)
    goto <bb 16>;
  else
    goto <bb 30>;

  <bb 16>:
  # DEBUG D#2212 => &this_9(D)->D.47680
  # DEBUG this => D#2212
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_164 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#3269
  # DEBUG __result => D#3269
  # DEBUG __alloc => D#1675
  # DEBUG D#1674 => D#1675
  # DEBUG D#1673 => D#1674
  # DEBUG __first => __last_61
  # DEBUG __last => D#3269
  # DEBUG __result => D#3269
  # DEBUG D.122759 => D#1673
  # DEBUG __first => __last_61
  # DEBUG __last => D#3269
  # DEBUG __result => D#3269
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<EventNextVCState::tWaiting*>*, std::__cxx11::list<EventNextVCState::tWaiting*>*> (__last_61, prephitmp_164, prephitmp_164);

  <bb 17>:
  _62 = this_9(D)->D.47680._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.47680._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3271
  # DEBUG __last => __last_61
  # DEBUG __result => D#3269
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3271
  # DEBUG __it => D#3271
  # DEBUG __first => D#3271
  # DEBUG __last => __last_61
  # DEBUG __result => D#3269
  # DEBUG __it => D#3269
  # DEBUG __it => D#3269
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3271
  # DEBUG __it => D#3271
  # DEBUG __first => D#3271
  # DEBUG __last => __last_61
  # DEBUG __result => D#3269
  # DEBUG __simple => 0
  # DEBUG __first => D#3271
  # DEBUG __last => __last_61
  # DEBUG __result => D#3269
  __last.503_25 = (long int) __last_61;
  _78 = __last.503_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#3269
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3271
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3271
  if (__position_22 == _67)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 19>:

  <bb 20>:
  # __old_finish_246 = PHI <prephitmp_164(19), __old_finish_65(23)>
  # __last_247 = PHI <__last_61(19), __last_68(23)>
  # __n_203 = PHI <__n_73(19), __n_58(23)>
  # DEBUG __n => __n_203
  # DEBUG __result => __old_finish_246
  # DEBUG __last => __last_247
  __last_68 = __last_247 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_246 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::__cxx11::list<EventNextVCState::tWaiting*>::operator= (__old_finish_65, __last_68);
  goto <bb 22>;

<L21>:
  goto <bb 68> (<L10>);

  <bb 22>:
  __n_58 = __n_203 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 18>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 20>;

  <bb 24>:
  # DEBUG this => &__x_copy
  # DEBUG D#880 => &__x_copy.D.63942
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_85 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_85
  # DEBUG __cur => __tmp_85
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287 == __tmp_85)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 25>:

  <bb 26>:
  # __position_227 = PHI <__position_22(25), __position_81(29)>
  # DEBUG __first => __position_227
  std::__cxx11::list<EventNextVCState::tWaiting*>::operator= (__position_227, &__x_copy);
  goto <bb 28>;

<L22>:
  goto <bb 68> (<L10>);

  <bb 28>:
  __position_81 = __position_227 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 24>;
  else
    goto <bb 29>;

  <bb 29>:
  goto <bb 26>;

  <bb 30>:
  # DEBUG D#2213 => &this_9(D)->D.47680
  # DEBUG this => D#2213
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#3269
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.122805 => D#1678
  # DEBUG __first => D#3269
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _82 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::__cxx11::list<EventNextVCState::tWaiting*>*, long unsigned int, std::__cxx11::list<EventNextVCState::tWaiting*> > (prephitmp_164, _70, &__x_copy);
  goto <bb 32>;

<L23>:
  goto <bb 68> (<L10>);

  <bb 32>:
  this_9(D)->D.47680._M_impl._M_finish = _82;
  # DEBUG D#2214 => &this_9(D)->D.47680
  # DEBUG this => D#2214
  # DEBUG this => &__position
  # DEBUG __first => D#3271
  # DEBUG __last => D#3269
  # DEBUG __result => _82
  # DEBUG __alloc => D#1675
  # DEBUG D#1674 => D#1675
  # DEBUG D#1673 => D#1674
  # DEBUG __first => D#3271
  # DEBUG __last => D#3269
  # DEBUG __result => _82
  # DEBUG D.122818 => D#1673
  # DEBUG __first => D#3271
  # DEBUG __last => D#3269
  # DEBUG __result => _82
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<EventNextVCState::tWaiting*>*, std::__cxx11::list<EventNextVCState::tWaiting*>*> (__position_22, prephitmp_164, _82);
  goto <bb 34>;

<L24>:
  goto <bb 68> (<L10>);

  <bb 34>:
  _74 = this_9(D)->D.47680._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.47680._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3271
  # DEBUG __last => D#3269
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3271
  if (__position_22 == prephitmp_164)
    goto <bb 24>;
  else
    goto <bb 35>;

  <bb 35>:

  <bb 36>:
  # __position_170 = PHI <__position_22(35), __position_84(39)>
  # DEBUG __first => __position_170
  std::__cxx11::list<EventNextVCState::tWaiting*>::operator= (__position_170, &__x_copy);
  goto <bb 38>;

<L25>:
  goto <bb 68> (<L10>);

  <bb 38>:
  __position_84 = __position_170 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_164)
    goto <bb 24>;
  else
    goto <bb 39>;

  <bb 39>:
  goto <bb 36>;

  <bb 40>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  __x_copy ={v} {CLOBBER};
  goto <bb 66>;

  <bb 41>:

  <bb 42>:
  # __tmp_260 = PHI <__tmp_85(41), __tmp_87(43)>
  # DEBUG __cur => __tmp_260
  # DEBUG __tmp => __tmp_260
  __tmp_87 = __tmp_260->D.69419._M_next;
  # DEBUG __cur => __tmp_87
  # DEBUG D#878 => &__tmp_260->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_260
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_260
  # DEBUG this => D#450
  # DEBUG D.122850 => D#451
  operator delete (__tmp_260);
  # DEBUG __cur => __tmp_87
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287 == __tmp_87)
    goto <bb 40>;
  else
    goto <bb 43>;

  <bb 43>:
  goto <bb 42>;

  <bb 44>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1773 => this_9(D)
  # DEBUG this => D#1773
  # DEBUG D#1772 => D#1773
  # DEBUG D#1771 => &D#1772->D.58509
  # DEBUG this => D#1771
  # DEBUG __a => D#1770
  # DEBUG D#1769 => D#1770
  # DEBUG D#1768 => D#1769
  # DEBUG this => D#1768
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  _187 = (long int) _23;
  _188 = _13 - _187;
  _189 = _188 /[ex] 24;
  _190 = (const long unsigned int) _189;
  _191 = 768614336404564650 - _190;
  if (__n_7(D) > _191)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 46>:
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG __a => &D.141015
  # DEBUG __b => &__n
  _185 = MAX_EXPR <__n_7(D), _190>;
  __len_195 = _185 + _190;
  # DEBUG __len => __len_195
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG D#1773 => this_9(D)
  # DEBUG this => D#1773
  # DEBUG D#1772 => D#1773
  # DEBUG D#1771 => &D#1772->D.58509
  # DEBUG this => D#1771
  # DEBUG __a => D#1770
  # DEBUG D#1769 => D#1770
  # DEBUG D#1768 => D#1769
  # DEBUG this => D#1768
  _240 = __len_195 > 768614336404564650;
  _250 = _190 > __len_195;
  _18 = _240 | _250;
  if (_18 != 0)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 47>:
  pretmp_161 = __len_195 * 24;

  <bb 48>:
  # __elems_before_197 = PHI <__elems_before_243(95), __elems_before_186(47)>
  # _238 = PHI <_245(95), _231(47)>
  # prephitmp_162 = PHI <18446744073709551600(95), pretmp_161(47)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#455 => &this_9(D)->D.47680._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#455
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74377
  # DEBUG this => &__position
  # DEBUG this => &D.74377
  # DEBUG __elems_before => __elems_before_197
  # DEBUG D#2224 => &this_9(D)->D.47680
  # DEBUG D#1692 => D#2224
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  # DEBUG D#1779 => &D#1780->_M_impl
  # DEBUG D#1778 => D#1779
  # DEBUG __n => NULL
  # DEBUG __a => D#1778
  # DEBUG D#1777 => D#1778
  # DEBUG D#1775 => D#1777
  # DEBUG D#1776 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1775
  # DEBUG D.141003 => D#1776
  # DEBUG D#1774 => D#1775
  # DEBUG D#1768 => D#1774
  # DEBUG this => D#1768
  _183 = operator new (prephitmp_162);

  <bb 49>:
  # __new_finish_184 = PHI <0B(96), _183(48)>
  # __elems_before_205 = PHI <__elems_before_186(96), __elems_before_197(48)>
  # _239 = PHI <_231(96), _238(48)>
  # prephitmp_143 = PHI <0(96), prephitmp_162(48)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2208 => &this_9(D)->D.47680
  # DEBUG this => D#2208
  _26 = (long unsigned int) _239;
  __first_27 = __new_finish_184 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.122858 => D#1678
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::__cxx11::list<EventNextVCState::tWaiting*>*, long unsigned int, std::__cxx11::list<EventNextVCState::tWaiting*> > (__first_27, __n_7(D), __x_28(D));

  <bb 50>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2209 => &this_9(D)->D.47680
  # DEBUG this => D#2209
  # DEBUG this => &__position
  _31 = this_9(D)->D.47680._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#3271
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1677
  # DEBUG D#1676 => D#1677
  # DEBUG D#1673 => D#1676
  # DEBUG __first => _31
  # DEBUG __last => D#3271
  # DEBUG __result => NULL
  # DEBUG D.122879 => D#1673
  # DEBUG __first => _31
  # DEBUG __last => D#3271
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<EventNextVCState::tWaiting*>*, std::__cxx11::list<EventNextVCState::tWaiting*>*> (_31, __position_22, __new_finish_184);
  goto <bb 52>;

<L27>:
  goto <bb 74> (<L13>);

  <bb 52>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2210 => &this_9(D)->D.47680
  # DEBUG this => D#2210
  _35 = this_9(D)->D.47680._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3271
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#1677
  # DEBUG D#1676 => D#1677
  # DEBUG D#1673 => D#1676
  # DEBUG __first => D#3271
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.122898 => D#1673
  # DEBUG __first => D#3271
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _93 = std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::list<EventNextVCState::tWaiting*>*, std::__cxx11::list<EventNextVCState::tWaiting*>*> (__position_22, _35, __new_finish_33);
  goto <bb 54>;

<L28>:
  goto <bb 74> (<L13>);

  <bb 54>:
  # DEBUG __new_finish => _93
  # DEBUG D#2211 => &this_9(D)->D.47680
  # DEBUG this => D#2211
  _37 = this_9(D)->D.47680._M_impl._M_finish;
  __first_38 = this_9(D)->D.47680._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 63>;
  else
    goto <bb 55>;

  <bb 55>:

  <bb 56>:
  # __first_192 = PHI <__first_38(55), __first_98(58)>
  # DEBUG __first => __first_192
  # DEBUG __r => __first_192
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_94 = MEM[(struct _List_base *)__first_192]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_94
  # DEBUG __cur => __tmp_94
  _252 = &MEM[(struct _List_base *)__first_192]._M_impl._M_node.D.45287;
  if (__tmp_94 == _252)
    goto <bb 57>;
  else
    goto <bb 59>;

  <bb 57>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__first_192] ={v} {CLOBBER};
  __first_98 = __first_192 + 24;
  # DEBUG __first => __first_98
  # DEBUG __first => __first_98
  if (_37 == __first_98)
    goto <bb 62>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 56>;

  <bb 59>:

  <bb 60>:
  # __tmp_261 = PHI <__tmp_94(59), __tmp_97(61)>
  # DEBUG __cur => __tmp_261
  # DEBUG __tmp => __tmp_261
  __tmp_97 = __tmp_261->D.69419._M_next;
  # DEBUG __cur => __tmp_97
  # DEBUG D#878 => &__tmp_261->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_261
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_261
  # DEBUG this => D#450
  # DEBUG D.122941 => D#451
  operator delete (__tmp_261);
  # DEBUG __cur => __tmp_97
  if (__tmp_97 == _252)
    goto <bb 57>;
  else
    goto <bb 61>;

  <bb 61>:
  goto <bb 60>;

  <bb 62>:
  pretmp_137 = this_9(D)->D.47680._M_impl._M_start;

  <bb 63>:
  # prephitmp_138 = PHI <pretmp_137(62), __first_38(54)>
  # DEBUG D#2222 => this_9(D)->D.47680._M_impl._M_end_of_storage
  # DEBUG D#2221 => (long int) D#2222
  # DEBUG D#3270 => this_9(D)->D.47680._M_impl._M_start
  # DEBUG D#2220 => (long int) D#3270
  # DEBUG D#2219 => D#2221 - D#2220
  # DEBUG D#2218 => D#2219 /[ex] 24
  # DEBUG D#2217 => &this_9(D)->D.47680
  # DEBUG D#846 => D#2217
  # DEBUG D#847 => (long unsigned int) D#2218
  # DEBUG __p => D#3270
  # DEBUG this => D#846
  # DEBUG __n => D#847
  # DEBUG D#845 => D#847
  # DEBUG D#844 => D#846
  if (prephitmp_138 != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#841 => D#843
  # DEBUG D#842 => D#845
  # DEBUG __p => D#3270
  # DEBUG __a => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#837 => D#839
  # DEBUG D#838 => D#840
  # DEBUG __p => D#3270
  # DEBUG this => D#837
  # DEBUG D.122921 => D#838
  operator delete (prephitmp_138);

  <bb 65>:
  this_9(D)->D.47680._M_impl._M_start = __new_finish_184;
  this_9(D)->D.47680._M_impl._M_finish = _93;
  _44 = __new_finish_184 + prephitmp_143;
  this_9(D)->D.47680._M_impl._M_end_of_storage = _44;

  <bb 66>:
  return;

<L20>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#880 => &__x_copy.D.63942
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_99 = MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_99
  # DEBUG __cur => __tmp_99
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287 == __tmp_99)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  resx 2

  <bb 70>:

  <bb 71>:
  # __tmp_262 = PHI <__tmp_99(70), __tmp_101(72)>
  # DEBUG __cur => __tmp_262
  # DEBUG __tmp => __tmp_262
  __tmp_101 = __tmp_262->D.69419._M_next;
  # DEBUG __cur => __tmp_101
  # DEBUG D#878 => &__tmp_262->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_262
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_262
  # DEBUG this => D#450
  # DEBUG D.122957 => D#451
  operator delete (__tmp_262);
  # DEBUG __cur => __tmp_101
  if (&MEM[(struct _List_base *)&__x_copy]._M_impl._M_node.D.45287 == __tmp_101)
    goto <bb 69>;
  else
    goto <bb 72>;

  <bb 72>:
  goto <bb 71>;

<L26>:

  # __new_finish_1 = PHI <__new_finish_184(73), 0B(51), __new_finish_33(53)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 77>;
  else
    goto <bb 75>;

  <bb 75>:
  # DEBUG __first => __new_finish_184
  if (__new_finish_1 == __new_finish_184)
    goto <bb 76>;
  else
    goto <bb 85>;

  <bb 76>:
  # DEBUG D#2223 => &this_9(D)->D.47680
  # DEBUG D#846 => D#2223
  # DEBUG __p => NULL
  # DEBUG this => D#846
  # DEBUG __n => D#847
  # DEBUG D#845 => D#847
  # DEBUG D#844 => D#846
  if (__new_finish_184 != 0B)
    goto <bb 92>;
  else
    goto <bb 93>;

  <bb 77>:
  # DEBUG D#2215 => &this_9(D)->D.47680
  # DEBUG this => D#2215
  _49 = __n_7(D) + __elems_before_205;
  _50 = _49 * 24;
  _51 = __new_finish_184 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51
  # DEBUG __first => __first_27
  if (__first_27 == _51)
    goto <bb 76>;
  else
    goto <bb 78>;

  <bb 78>:

  <bb 79>:
  # __first_19 = PHI <__first_27(78), __first_106(81)>
  # DEBUG __first => __first_19
  # DEBUG __r => __first_19
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_102 = MEM[(struct _List_base *)__first_19]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_102
  # DEBUG __cur => __tmp_102
  _234 = &MEM[(struct _List_base *)__first_19]._M_impl._M_node.D.45287;
  if (__tmp_102 == _234)
    goto <bb 80>;
  else
    goto <bb 82>;

  <bb 80>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__first_19] ={v} {CLOBBER};
  __first_106 = __first_19 + 24;
  # DEBUG __first => __first_106
  # DEBUG __first => __first_106
  if (_51 == __first_106)
    goto <bb 76>;
  else
    goto <bb 81>;

  <bb 81>:
  goto <bb 79>;

  <bb 82>:

  <bb 83>:
  # __tmp_263 = PHI <__tmp_102(82), __tmp_105(84)>
  # DEBUG __cur => __tmp_263
  # DEBUG __tmp => __tmp_263
  __tmp_105 = __tmp_263->D.69419._M_next;
  # DEBUG __cur => __tmp_105
  # DEBUG D#878 => &__tmp_263->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_263
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_263
  # DEBUG this => D#450
  # DEBUG D.122980 => D#451
  operator delete (__tmp_263);
  # DEBUG __cur => __tmp_105
  if (__tmp_105 == _234)
    goto <bb 80>;
  else
    goto <bb 84>;

  <bb 84>:
  goto <bb 83>;

  <bb 85>:

  <bb 86>:
  # __new_finish_264 = PHI <__new_finish_184(85), __new_finish_112(88)>
  # DEBUG __first => __new_finish_264
  # DEBUG __r => __new_finish_264
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_108 = MEM[(struct _List_base *)__new_finish_264]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_108
  # DEBUG __cur => __tmp_108
  _206 = &MEM[(struct _List_base *)__new_finish_264]._M_impl._M_node.D.45287;
  if (__tmp_108 == _206)
    goto <bb 87>;
  else
    goto <bb 89>;

  <bb 87>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__new_finish_264] ={v} {CLOBBER};
  __new_finish_112 = __new_finish_264 + 24;
  # DEBUG __first => __new_finish_112
  # DEBUG __first => __new_finish_112
  if (__new_finish_1 == __new_finish_112)
    goto <bb 76>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 86>;

  <bb 89>:

  <bb 90>:
  # __tmp_265 = PHI <__tmp_108(89), __tmp_111(91)>
  # DEBUG __cur => __tmp_265
  # DEBUG __tmp => __tmp_265
  __tmp_111 = __tmp_265->D.69419._M_next;
  # DEBUG __cur => __tmp_111
  # DEBUG D#878 => &__tmp_265->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_265
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_265
  # DEBUG this => D#450
  # DEBUG D.123005 => D#451
  operator delete (__tmp_265);
  # DEBUG __cur => __tmp_111
  if (__tmp_111 == _206)
    goto <bb 87>;
  else
    goto <bb 91>;

  <bb 91>:
  goto <bb 90>;

  <bb 92>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#841 => D#843
  # DEBUG D#842 => D#845
  # DEBUG __p => NULL
  # DEBUG __a => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#837 => D#839
  # DEBUG D#838 => D#840
  # DEBUG __p => NULL
  # DEBUG this => D#837
  # DEBUG D.123020 => D#838
  operator delete (__new_finish_184);

  <bb 93>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 95>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#455 => &this_9(D)->D.47680._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#455
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74377
  # DEBUG this => &__position
  _244 = (long int) __position_22;
  # DEBUG this => &D.74377
  _245 = _244 - _187;
  _242 = _245 /[ex] 24;
  __elems_before_243 = (const size_type) _242;
  # DEBUG __elems_before => __elems_before_243
  # DEBUG D#2224 => &this_9(D)->D.47680
  # DEBUG D#1692 => D#2224
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  goto <bb 48>;

  <bb 96>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#455 => &this_9(D)->D.47680._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#455
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74377
  # DEBUG this => &__position
  _241 = (long int) __position_22;
  # DEBUG this => &D.74377
  _231 = _241 - _187;
  _232 = _231 /[ex] 24;
  __elems_before_186 = (const size_type) _232;
  # DEBUG __elems_before => __elems_before_186
  # DEBUG D#2224 => &this_9(D)->D.47680
  # DEBUG D#1692 => D#2224
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  if (__len_195 != 0)
    goto <bb 47>;
  else
    goto <bb 49>;

}



;; Function EventNextVCState::EventNextVCState(const Configuration&, Module*, const string&) (_ZN16EventNextVCStateC2ERK13ConfigurationP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2180, decl_uid=48507, cgraph_uid=529, symbol_order=530)

Trying loop 5 as candidate
loop 5 is not innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is not innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
EventNextVCState::EventNextVCState(const Configuration&, Module*, const string&) (struct EventNextVCState * const this, const struct Configuration & config, struct Module * parent, const struct string & name)
{
  struct list * __first;
  struct _Node * __tmp;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  struct list * __pos;
  struct _Node * __tmp;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct iterator __position;
  value_type __x;
  struct _Node * __tmp;
  struct _Node * __tmp;
  struct value_type D.63967;
  const struct string D.63965;
  const struct string D.63963;
  struct Module * _3;
  int _16;
  char * const _19;
  int * const _21;
  int _23;
  char * const _26;
  int _27;
  long unsigned int _29;
  struct vector * _30;
  int * const _31;
  struct vector * _34;
  int * const _35;
  struct vector * _38;
  int * const _39;
  struct vector * _42;
  struct list * const _43;
  struct vector * _47;
  eNextVCState * const _48;
  char * const _49;
  struct vector * _53;
  struct list * _54;
  eNextVCState * _55;
  char * const _60;
  int * _61;
  int * _64;
  int * _65;
  int * _66;
  int pretmp_163;
  int * const _172;
  long int _173;
  long int _174;
  long int _175;
  long int _176;
  size_type _177;
  long unsigned int _178;
  long unsigned int _179;
  int * _180;
  int * const _181;
  long int _182;
  long int _183;
  long int _184;
  long int _185;
  size_type _186;
  long unsigned int _187;
  long unsigned int _188;
  int * _189;
  int * const _190;
  long int _191;
  long int _192;
  long int _193;
  long int _194;
  size_type _195;
  long unsigned int _196;
  long unsigned int _197;
  int * _198;
  int * const _199;
  long int _200;
  long int _201;
  long int _202;
  long int _203;
  size_type _204;
  long unsigned int _205;
  long unsigned int _206;
  int * _207;
  struct list * const _208;
  long int _209;
  long int _210;
  long int _211;
  long int _212;
  size_type _213;
  long unsigned int _214;
  long unsigned int _215;
  eNextVCState * const _223;
  long int _224;
  long int _225;
  long int _226;
  long int _227;
  size_type _228;
  long unsigned int _229;
  long unsigned int _230;
  eNextVCState * _231;
  struct list * prephitmp_296;
  struct list * pretmp_297;
  struct _List_node_base * _318;
  struct _List_node_base * _319;
  int prephitmp_344;
  int pretmp_354;
  long unsigned int pretmp_356;
  long unsigned int prephitmp_357;
  int pretmp_365;
  long unsigned int pretmp_367;
  long unsigned int prephitmp_368;
  int pretmp_376;
  long unsigned int pretmp_378;
  long unsigned int prephitmp_379;
  int pretmp_387;
  long unsigned int pretmp_389;
  long unsigned int prephitmp_390;
  int pretmp_400;
  int pretmp_401;
  long unsigned int pretmp_403;
  long unsigned int pretmp_404;
  long unsigned int prephitmp_405;
  struct _List_node_base * pretmp_416;
  struct _List_node_base * prephitmp_417;
  struct _List_node_base * pretmp_419;
  struct _List_node_base * prephitmp_420;

  <bb 2>:
  _3 = &this_2(D)->D.48512;
  Module::Module (_3, parent_5(D), name_6(D));
  this_2(D)->D.48512._vptr.Module = &MEM[(void *)&_ZTV16EventNextVCState + 16B];
  # DEBUG D#2454 => &this_2(D)->_credits
  # DEBUG this => D#2454
  # DEBUG D#500 => &D#2454->D.35782
  # DEBUG this => D#500
  # DEBUG D#499 => &D#500->_M_impl
  # DEBUG this => D#499
  # DEBUG this => D#499
  # DEBUG this => D#499
  MEM[(struct _Vector_impl *)this_2(D) + 104B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 104B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 104B]._M_end_of_storage = 0B;
  # DEBUG D#2453 => &this_2(D)->_presence
  # DEBUG this => D#2453
  # DEBUG D#500 => &D#2453->D.35782
  # DEBUG this => D#500
  # DEBUG D#499 => &D#500->_M_impl
  # DEBUG this => D#499
  # DEBUG this => D#499
  # DEBUG this => D#499
  MEM[(struct _Vector_impl *)this_2(D) + 128B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 128B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 128B]._M_end_of_storage = 0B;
  # DEBUG D#2452 => &this_2(D)->_input
  # DEBUG this => D#2452
  # DEBUG D#500 => &D#2452->D.35782
  # DEBUG this => D#500
  # DEBUG D#499 => &D#500->_M_impl
  # DEBUG this => D#499
  # DEBUG this => D#499
  # DEBUG this => D#499
  MEM[(struct _Vector_impl *)this_2(D) + 152B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 152B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 152B]._M_end_of_storage = 0B;
  # DEBUG D#2451 => &this_2(D)->_inputVC
  # DEBUG this => D#2451
  # DEBUG D#500 => &D#2451->D.35782
  # DEBUG this => D#500
  # DEBUG D#499 => &D#500->_M_impl
  # DEBUG this => D#499
  # DEBUG this => D#499
  # DEBUG this => D#499
  MEM[(struct _Vector_impl *)this_2(D) + 176B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 176B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 176B]._M_end_of_storage = 0B;
  # DEBUG D#2450 => &this_2(D)->_waiting
  # DEBUG this => D#2450
  # DEBUG D#836 => &D#2450->D.47680
  # DEBUG this => D#836
  # DEBUG D#835 => &D#836->_M_impl
  # DEBUG this => D#835
  # DEBUG this => D#835
  # DEBUG this => D#835
  MEM[(struct _Vector_impl *)this_2(D) + 200B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 200B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 200B]._M_end_of_storage = 0B;
  # DEBUG D#2449 => &this_2(D)->_state
  # DEBUG this => D#2449
  # DEBUG D#855 => &D#2449->D.48427
  # DEBUG this => D#855
  # DEBUG D#854 => &D#855->_M_impl
  # DEBUG this => D#854
  # DEBUG this => D#854
  # DEBUG this => D#854
  MEM[(struct _Vector_impl *)this_2(D) + 224B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 224B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_2(D) + 224B]._M_end_of_storage = 0B;
  # DEBUG D#140 => &D.63964
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.63964
  # DEBUG this => &D.63963
  # DEBUG __s => "vc_buf_size"
  # DEBUG __a => D#918
  # DEBUG D#917 => D#918
  # DEBUG this => &D.63963
  # DEBUG D#915 => &D.63963._M_dataplus
  # DEBUG D#360 => D#917
  # DEBUG this => D#915
  # DEBUG __dat => &D.63963.D.11539._M_local_buf
  # DEBUG __a => D#360
  # DEBUG D#359 => D#360
  # DEBUG D#357 => D#915
  # DEBUG D#358 => D#359
  # DEBUG this => D#357
  # DEBUG __a => D#358
  # DEBUG D#356 => D#358
  # DEBUG D#355 => D#357
  # DEBUG this => D#355
  # DEBUG D.101082 => D#356
  MEM[(struct _Alloc_hider *)&D.63963]._M_p = &D.63963.D.11539._M_local_buf;
  # DEBUG __s => "vc_buf_size"
  # DEBUG this => &D.63963
  # DEBUG __beg => "vc_buf_size"
  # DEBUG __end => &MEM[(void *)"vc_buf_size" + 11B]
  # DEBUG this => &D.63963
  # DEBUG __beg => "vc_buf_size"
  # DEBUG __end => &MEM[(void *)"vc_buf_size" + 11B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.241 (&D.63963, "vc_buf_size", &MEM[(void *)"vc_buf_size" + 11B]);

  <bb 3>:
  _16 = Configuration::GetInt (config_14(D), &D.63963);

  <bb 4>:
  this_2(D)->_buf_size = _16;
  # DEBUG this => &D.63963
  # DEBUG this => &D.63963
  # DEBUG this => &D.63963
  _19 = MEM[(char * *)&D.63963];
  # DEBUG D#1 => &D.63963
  # DEBUG this => D#1
  # DEBUG this => &D.63963
  if (&D.63963.D.11539._M_local_buf != _19)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#467 => D.63963.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63963
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63963
  # DEBUG this => D#1
  # DEBUG this => &D.63963
  # DEBUG D#464 => &D.63963._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _19
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _19
  # DEBUG this => D#458
  # DEBUG D.127831 => D#459
  operator delete (_19);

  <bb 6>:
  # DEBUG D#468 => &D.63963._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63963 ={v} {CLOBBER};
  # DEBUG this => &D.63964
  # DEBUG this => &D.63964
  # DEBUG D#140 => &D.63966
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.63966
  # DEBUG this => &D.63965
  # DEBUG __s => "num_vcs"
  # DEBUG __a => D#918
  # DEBUG D#917 => D#918
  # DEBUG this => &D.63965
  # DEBUG D#915 => &D.63965._M_dataplus
  # DEBUG D#360 => D#917
  # DEBUG this => D#915
  # DEBUG __dat => &D.63965.D.11539._M_local_buf
  # DEBUG __a => D#360
  # DEBUG D#359 => D#360
  # DEBUG D#357 => D#915
  # DEBUG D#358 => D#359
  # DEBUG this => D#357
  # DEBUG __a => D#358
  # DEBUG D#356 => D#358
  # DEBUG D#355 => D#357
  # DEBUG this => D#355
  # DEBUG D.101082 => D#356
  MEM[(struct _Alloc_hider *)&D.63965]._M_p = &D.63965.D.11539._M_local_buf;
  # DEBUG __s => "num_vcs"
  # DEBUG this => &D.63965
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  # DEBUG this => &D.63965
  # DEBUG __beg => "num_vcs"
  # DEBUG __end => &MEM[(void *)"num_vcs" + 7B]
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.241 (&D.63965, "num_vcs", &MEM[(void *)"num_vcs" + 7B]);
  goto <bb 8>;

<L13>:
  goto <bb 77> (<L5>);

  <bb 8>:
  _23 = Configuration::GetInt (config_14(D), &D.63965);

  <bb 9>:
  this_2(D)->_vcs = _23;
  # DEBUG this => &D.63965
  # DEBUG this => &D.63965
  # DEBUG this => &D.63965
  _26 = MEM[(char * *)&D.63965];
  # DEBUG D#1 => &D.63965
  # DEBUG this => D#1
  # DEBUG this => &D.63965
  if (&D.63965.D.11539._M_local_buf != _26)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  # DEBUG D#467 => D.63965.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63965
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63965
  # DEBUG this => D#1
  # DEBUG this => &D.63965
  # DEBUG D#464 => &D.63965._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _26
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _26
  # DEBUG this => D#458
  # DEBUG D.127848 => D#459
  operator delete (_26);
  pretmp_163 = this_2(D)->_vcs;

  <bb 11>:
  # prephitmp_344 = PHI <_23(9), pretmp_163(10)>
  # DEBUG D#468 => &D.63965._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63965 ={v} {CLOBBER};
  # DEBUG this => &D.63966
  # DEBUG this => &D.63966
  _27 = this_2(D)->_buf_size;
  _29 = (long unsigned int) prephitmp_344;
  # DEBUG D#3293 => &this_2(D)->_credits
  # DEBUG this => D#3293
  # DEBUG __new_size => _29
  __x = _27;
  # DEBUG __x => __x
  _21 = MEM[(int * *)this_2(D) + 104B];
  # DEBUG D#138 => D#3293
  _172 = MEM[(int * *)this_2(D) + 112B];
  # DEBUG D#138 => D#3293
  # DEBUG this => D#138
  # DEBUG this => D#138
  _173 = (long int) _172;
  _174 = (long int) _21;
  _175 = _173 - _174;
  _176 = _175 /[ex] 4;
  _177 = (size_type) _176;
  if (_29 > _177)
    goto <bb 12>;
  else
    goto <bb 15>;

  <bb 12>:
  # DEBUG D#138 => D#3293
  # DEBUG D#138 => D#3293
  # DEBUG this => D#138
  # DEBUG this => D#138
  _178 = _29 - _177;
  # DEBUG this => D#3293
  # DEBUG D#233 => &D#3293->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#233
  # DEBUG this => D#3293
  MEM[(struct __normal_iterator *)&__position] = _172;
  # DEBUG __n => _178
  # DEBUG __x => &__x
  _30 = &this_2(D)->_credits;
  std::vector<int>::_M_fill_insert (_30, __position, _178, &__x);
  goto <bb 14>;

<L14>:
  goto <bb 77> (<L5>);

  <bb 14>:
  pretmp_354 = this_2(D)->_vcs;
  pretmp_356 = (long unsigned int) pretmp_354;
  goto <bb 17>;

  <bb 15>:
  # DEBUG D#138 => D#3293
  # DEBUG D#138 => D#3293
  # DEBUG this => D#138
  # DEBUG this => D#138
  if (_29 < _177)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _179 = _29 * 4;
  _180 = _21 + _179;
  # DEBUG D#301 => D#3293
  # DEBUG __pos => _180
  # DEBUG D#300 => D#301
  # DEBUG this => D#300
  # DEBUG D#298 => &D#300->D.35782
  # DEBUG this => D#298
  # DEBUG D#299 => D#300->D.35782._M_impl._M_finish
  # DEBUG __first => _180
  # DEBUG __last => D#299
  # DEBUG D.100813 => NULL
  # DEBUG D#296 => _180
  # DEBUG D#297 => D#299
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  MEM[(int * *)this_2(D) + 112B] = _180;

  <bb 17>:
  # prephitmp_357 = PHI <_29(15), pretmp_356(14), _29(16)>
  # DEBUG D#3287 => this_2(D)->_vcs
  # DEBUG D#3292 => &this_2(D)->_presence
  # DEBUG this => D#3292
  # DEBUG __new_size => (long unsigned int) D#3287
  __x = 0;
  # DEBUG __x => __x
  _31 = MEM[(int * *)this_2(D) + 128B];
  # DEBUG D#138 => D#3292
  _181 = MEM[(int * *)this_2(D) + 136B];
  # DEBUG D#138 => D#3292
  # DEBUG this => D#138
  # DEBUG this => D#138
  _182 = (long int) _181;
  _183 = (long int) _31;
  _184 = _182 - _183;
  _185 = _184 /[ex] 4;
  _186 = (size_type) _185;
  if (_186 < prephitmp_357)
    goto <bb 18>;
  else
    goto <bb 21>;

  <bb 18>:
  # DEBUG D#138 => D#3292
  # DEBUG D#138 => D#3292
  # DEBUG this => D#138
  # DEBUG this => D#138
  _187 = prephitmp_357 - _186;
  # DEBUG this => D#3292
  # DEBUG D#233 => &D#3292->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#233
  # DEBUG this => D#3292
  MEM[(struct __normal_iterator *)&__position] = _181;
  # DEBUG __n => _187
  # DEBUG __x => &__x
  _34 = &this_2(D)->_presence;
  std::vector<int>::_M_fill_insert (_34, __position, _187, &__x);
  goto <bb 20>;

<L15>:
  goto <bb 77> (<L5>);

  <bb 20>:
  pretmp_365 = this_2(D)->_vcs;
  pretmp_367 = (long unsigned int) pretmp_365;
  goto <bb 23>;

  <bb 21>:
  # DEBUG D#138 => D#3292
  # DEBUG D#138 => D#3292
  # DEBUG this => D#138
  # DEBUG this => D#138
  if (_186 > prephitmp_357)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _188 = prephitmp_357 * 4;
  _189 = _31 + _188;
  # DEBUG D#301 => D#3292
  # DEBUG __pos => _189
  # DEBUG D#300 => D#301
  # DEBUG this => D#300
  # DEBUG D#298 => &D#300->D.35782
  # DEBUG this => D#298
  # DEBUG D#299 => D#300->D.35782._M_impl._M_finish
  # DEBUG __first => _189
  # DEBUG __last => D#299
  # DEBUG D.100813 => NULL
  # DEBUG D#296 => _189
  # DEBUG D#297 => D#299
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  MEM[(int * *)this_2(D) + 136B] = _189;

  <bb 23>:
  # prephitmp_368 = PHI <prephitmp_357(21), pretmp_367(20), prephitmp_357(22)>
  # DEBUG D#3286 => this_2(D)->_vcs
  # DEBUG D#3291 => &this_2(D)->_input
  # DEBUG this => D#3291
  # DEBUG __new_size => (long unsigned int) D#3286
  __x = 0;
  # DEBUG __x => __x
  _35 = MEM[(int * *)this_2(D) + 152B];
  # DEBUG D#138 => D#3291
  _190 = MEM[(int * *)this_2(D) + 160B];
  # DEBUG D#138 => D#3291
  # DEBUG this => D#138
  # DEBUG this => D#138
  _191 = (long int) _190;
  _192 = (long int) _35;
  _193 = _191 - _192;
  _194 = _193 /[ex] 4;
  _195 = (size_type) _194;
  if (_195 < prephitmp_368)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  # DEBUG D#138 => D#3291
  # DEBUG D#138 => D#3291
  # DEBUG this => D#138
  # DEBUG this => D#138
  _196 = prephitmp_368 - _195;
  # DEBUG this => D#3291
  # DEBUG D#233 => &D#3291->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#233
  # DEBUG this => D#3291
  MEM[(struct __normal_iterator *)&__position] = _190;
  # DEBUG __n => _196
  # DEBUG __x => &__x
  _38 = &this_2(D)->_input;
  std::vector<int>::_M_fill_insert (_38, __position, _196, &__x);
  goto <bb 26>;

<L16>:
  goto <bb 77> (<L5>);

  <bb 26>:
  pretmp_376 = this_2(D)->_vcs;
  pretmp_378 = (long unsigned int) pretmp_376;
  goto <bb 29>;

  <bb 27>:
  # DEBUG D#138 => D#3291
  # DEBUG D#138 => D#3291
  # DEBUG this => D#138
  # DEBUG this => D#138
  if (_195 > prephitmp_368)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _197 = prephitmp_368 * 4;
  _198 = _35 + _197;
  # DEBUG D#301 => D#3291
  # DEBUG __pos => _198
  # DEBUG D#300 => D#301
  # DEBUG this => D#300
  # DEBUG D#298 => &D#300->D.35782
  # DEBUG this => D#298
  # DEBUG D#299 => D#300->D.35782._M_impl._M_finish
  # DEBUG __first => _198
  # DEBUG __last => D#299
  # DEBUG D.100813 => NULL
  # DEBUG D#296 => _198
  # DEBUG D#297 => D#299
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  MEM[(int * *)this_2(D) + 160B] = _198;

  <bb 29>:
  # prephitmp_379 = PHI <prephitmp_368(27), pretmp_378(26), prephitmp_368(28)>
  # DEBUG D#3285 => this_2(D)->_vcs
  # DEBUG D#3290 => &this_2(D)->_inputVC
  # DEBUG this => D#3290
  # DEBUG __new_size => (long unsigned int) D#3285
  __x = 0;
  # DEBUG __x => __x
  _39 = MEM[(int * *)this_2(D) + 176B];
  # DEBUG D#138 => D#3290
  _199 = MEM[(int * *)this_2(D) + 184B];
  # DEBUG D#138 => D#3290
  # DEBUG this => D#138
  # DEBUG this => D#138
  _200 = (long int) _199;
  _201 = (long int) _39;
  _202 = _200 - _201;
  _203 = _202 /[ex] 4;
  _204 = (size_type) _203;
  if (_204 < prephitmp_379)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 30>:
  # DEBUG D#138 => D#3290
  # DEBUG D#138 => D#3290
  # DEBUG this => D#138
  # DEBUG this => D#138
  _205 = prephitmp_379 - _204;
  # DEBUG this => D#3290
  # DEBUG D#233 => &D#3290->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#233
  # DEBUG this => D#3290
  MEM[(struct __normal_iterator *)&__position] = _199;
  # DEBUG __n => _205
  # DEBUG __x => &__x
  _42 = &this_2(D)->_inputVC;
  std::vector<int>::_M_fill_insert (_42, __position, _205, &__x);
  goto <bb 32>;

<L17>:
  goto <bb 77> (<L5>);

  <bb 32>:
  pretmp_387 = this_2(D)->_vcs;
  pretmp_389 = (long unsigned int) pretmp_387;
  goto <bb 35>;

  <bb 33>:
  # DEBUG D#138 => D#3290
  # DEBUG D#138 => D#3290
  # DEBUG this => D#138
  # DEBUG this => D#138
  if (_204 > prephitmp_379)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _206 = prephitmp_379 * 4;
  _207 = _39 + _206;
  # DEBUG D#301 => D#3290
  # DEBUG __pos => _207
  # DEBUG D#300 => D#301
  # DEBUG this => D#300
  # DEBUG D#298 => &D#300->D.35782
  # DEBUG this => D#298
  # DEBUG D#299 => D#300->D.35782._M_impl._M_finish
  # DEBUG __first => _207
  # DEBUG __last => D#299
  # DEBUG D.100813 => NULL
  # DEBUG D#296 => _207
  # DEBUG D#297 => D#299
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  MEM[(int * *)this_2(D) + 184B] = _207;

  <bb 35>:
  # prephitmp_390 = PHI <prephitmp_379(33), pretmp_389(32), prephitmp_379(34)>
  # DEBUG this => &D.63967
  # DEBUG D#875 => &D.63967.D.63942
  # DEBUG this => D#875
  # DEBUG D#874 => &D#875->_M_impl
  # DEBUG this => D#874
  # DEBUG this => D#874
  # DEBUG this => D#874
  MEM[(struct _List_impl *)&D.63967]._M_node._M_data = 0;
  # DEBUG this => D#875
  MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287._M_next = &MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287;
  MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287._M_prev = &MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287;
  # DEBUG D#449 => D#875
  # DEBUG __n => 0
  # DEBUG this => D#449
  # DEBUG D#3284 => this_2(D)->_vcs
  # DEBUG D#3289 => &this_2(D)->_waiting
  # DEBUG this => D#3289
  # DEBUG __new_size => (long unsigned int) D#3284
  # DEBUG __x => &D.63967
  _43 = MEM[(struct list * *)this_2(D) + 200B];
  # DEBUG D#193 => D#3289
  _208 = MEM[(struct list * *)this_2(D) + 208B];
  # DEBUG D#193 => D#3289
  # DEBUG this => D#193
  # DEBUG this => D#193
  _209 = (long int) _208;
  _210 = (long int) _43;
  _211 = _209 - _210;
  _212 = _211 /[ex] 24;
  _213 = (size_type) _212;
  if (_213 < prephitmp_390)
    goto <bb 36>;
  else
    goto <bb 38>;

  <bb 36>:
  # DEBUG D#193 => D#3289
  # DEBUG D#193 => D#3289
  # DEBUG this => D#193
  # DEBUG this => D#193
  _214 = prephitmp_390 - _213;
  # DEBUG this => D#3289
  # DEBUG D#277 => &D#3289->D.47680._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#277
  # DEBUG this => D#3289
  MEM[(struct __normal_iterator *)&__position] = _208;
  # DEBUG __n => _214
  # DEBUG __x => &D.63967
  _47 = &this_2(D)->_waiting;
  std::vector<std::__cxx11::list<EventNextVCState::tWaiting*> >::_M_fill_insert (_47, __position, _214, &D.63967);

  <bb 37>:
  pretmp_419 = MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287._M_next;
  goto <bb 49>;

  <bb 38>:
  # DEBUG D#193 => D#3289
  # DEBUG D#193 => D#3289
  # DEBUG this => D#193
  # DEBUG this => D#193
  if (_213 > prephitmp_390)
    goto <bb 39>;
  else
    goto <bb 55>;

  <bb 39>:
  _215 = prephitmp_390 * 24;
  __pos_216 = _43 + _215;
  # DEBUG D#891 => D#3289
  # DEBUG __pos => __pos_216
  # DEBUG D#890 => D#891
  # DEBUG this => D#890
  # DEBUG D#889 => &D#890->D.47680
  # DEBUG this => D#889
  # DEBUG __first => __pos_216
  # DEBUG __last => _208
  # DEBUG __first => __pos_216
  if (_208 == __pos_216)
    goto <bb 48>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # __pos_165 = PHI <__pos_216(40), __pos_222(43)>
  # DEBUG __first => __pos_165
  # DEBUG __r => __pos_165
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_218 = MEM[(struct _List_base *)__pos_165]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_218
  # DEBUG __cur => __tmp_218
  _318 = &MEM[(struct _List_base *)__pos_165]._M_impl._M_node.D.45287;
  if (__tmp_218 == _318)
    goto <bb 42>;
  else
    goto <bb 44>;

  <bb 42>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__pos_165] ={v} {CLOBBER};
  __pos_222 = __pos_165 + 24;
  # DEBUG __first => __pos_222
  # DEBUG __first => __pos_222
  if (_208 == __pos_222)
    goto <bb 47>;
  else
    goto <bb 43>;

  <bb 43>:
  goto <bb 41>;

  <bb 44>:

  <bb 45>:
  # __tmp_335 = PHI <__tmp_218(44), __tmp_221(46)>
  # DEBUG __cur => __tmp_335
  # DEBUG __tmp => __tmp_335
  __tmp_221 = __tmp_335->D.69419._M_next;
  # DEBUG __cur => __tmp_221
  # DEBUG D#878 => &__tmp_335->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_335
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_335
  # DEBUG this => D#450
  # DEBUG D.141183 => D#451
  operator delete (__tmp_335);
  # DEBUG __cur => __tmp_221
  if (__tmp_221 == _318)
    goto <bb 42>;
  else
    goto <bb 46>;

  <bb 46>:
  goto <bb 45>;

  <bb 47>:
  pretmp_416 = MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287._M_next;

  <bb 48>:
  # prephitmp_417 = PHI <pretmp_416(47), &MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287(39)>
  MEM[(struct list * *)this_2(D) + 208B] = __pos_216;

  <bb 49>:
  # prephitmp_420 = PHI <prephitmp_417(48), pretmp_419(37)>
  # DEBUG this => &D.63967
  # DEBUG D#880 => &D.63967.D.63942
  # DEBUG this => D#880
  # DEBUG this => D#880
  # DEBUG D#3283 => MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287._M_next
  # DEBUG __cur => D#3283
  # DEBUG __cur => D#3283
  if (&MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287 == prephitmp_420)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  pretmp_401 = this_2(D)->_vcs;
  pretmp_404 = (long unsigned int) pretmp_401;
  goto <bb 55>;

  <bb 51>:

  <bb 52>:
  # __tmp_313 = PHI <prephitmp_420(51), __tmp_10(53)>
  # DEBUG __cur => __tmp_313
  # DEBUG __tmp => __tmp_313
  __tmp_10 = __tmp_313->D.69419._M_next;
  # DEBUG __cur => __tmp_10
  # DEBUG D#878 => &__tmp_313->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_313
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_313
  # DEBUG this => D#450
  # DEBUG D.127868 => D#451
  operator delete (__tmp_313);
  # DEBUG __cur => __tmp_10
  if (&MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287 == __tmp_10)
    goto <bb 54>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 52>;

  <bb 54>:
  pretmp_400 = this_2(D)->_vcs;
  pretmp_403 = (long unsigned int) pretmp_400;

  <bb 55>:
  # prephitmp_405 = PHI <pretmp_403(54), pretmp_404(50), prephitmp_390(38)>
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  D.63967 ={v} {CLOBBER};
  # DEBUG D#3282 => this_2(D)->_vcs
  # DEBUG D#3288 => &this_2(D)->_state
  # DEBUG this => D#3288
  # DEBUG __new_size => (long unsigned int) D#3282
  __x = 0;
  # DEBUG __x => __x
  _48 = MEM[(eNextVCState * *)this_2(D) + 224B];
  # DEBUG D#194 => D#3288
  _223 = MEM[(eNextVCState * *)this_2(D) + 232B];
  # DEBUG D#194 => D#3288
  # DEBUG this => D#194
  # DEBUG this => D#194
  _224 = (long int) _223;
  _225 = (long int) _48;
  _226 = _224 - _225;
  _227 = _226 /[ex] 4;
  _228 = (size_type) _227;
  if (_228 < prephitmp_405)
    goto <bb 56>;
  else
    goto <bb 59>;

  <bb 56>:
  # DEBUG D#194 => D#3288
  # DEBUG D#194 => D#3288
  # DEBUG this => D#194
  # DEBUG this => D#194
  _229 = prephitmp_405 - _228;
  # DEBUG this => D#3288
  # DEBUG D#278 => &D#3288->D.48427._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#278
  # DEBUG this => D#3288
  MEM[(struct __normal_iterator *)&__position] = _223;
  # DEBUG __n => _229
  # DEBUG __x => &__x
  _53 = &this_2(D)->_state;
  std::vector<EventNextVCState::eNextVCState>::_M_fill_insert (_53, __position, _229, &__x);
  goto <bb 58>;

<L18>:
  goto <bb 77> (<L5>);

  <bb 58>:
  goto <bb 61>;

  <bb 59>:
  # DEBUG D#194 => D#3288
  # DEBUG D#194 => D#3288
  # DEBUG this => D#194
  # DEBUG this => D#194
  if (_228 > prephitmp_405)
    goto <bb 60>;
  else
    goto <bb 58>;

  <bb 60>:
  _230 = prephitmp_405 * 4;
  _231 = _48 + _230;
  # DEBUG D#448 => D#3288
  # DEBUG __pos => _231
  # DEBUG D#447 => D#448
  # DEBUG this => D#447
  # DEBUG D#445 => &D#447->D.48427
  # DEBUG this => D#445
  # DEBUG D#446 => D#447->D.48427._M_impl._M_finish
  # DEBUG __first => _231
  # DEBUG __last => D#446
  # DEBUG D.101773 => NULL
  # DEBUG D#443 => _231
  # DEBUG D#444 => D#446
  # DEBUG __first => D#443
  # DEBUG __last => D#444
  # DEBUG D#442 => D#444
  # DEBUG D#441 => D#443
  # DEBUG D#439 => D#441
  # DEBUG D#440 => D#442
  # DEBUG D.101757 => D#439
  # DEBUG D.101756 => D#440
  MEM[(eNextVCState * *)this_2(D) + 232B] = _231;

  <bb 61>:
  return;

<L0>:
  # DEBUG this => &D.63963
  # DEBUG this => &D.63963
  # DEBUG this => &D.63963
  _49 = MEM[(char * *)&D.63963];
  # DEBUG D#1 => &D.63963
  # DEBUG this => D#1
  # DEBUG this => &D.63963
  if (&D.63963.D.11539._M_local_buf != _49)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  # DEBUG D#467 => D.63963.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63963
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63963
  # DEBUG this => D#1
  # DEBUG this => &D.63963
  # DEBUG D#464 => &D.63963._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _49
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _49
  # DEBUG this => D#458
  # DEBUG D.127881 => D#459
  operator delete (_49);

  <bb 64>:
  # DEBUG D#468 => &D.63963._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63963 ={v} {CLOBBER};
  resx 9

<L19>:
  goto <bb 77> (<L5>);

<L2>:
  # DEBUG this => &D.63965
  # DEBUG this => &D.63965
  # DEBUG this => &D.63965
  _60 = MEM[(char * *)&D.63965];
  # DEBUG D#1 => &D.63965
  # DEBUG this => D#1
  # DEBUG this => &D.63965
  if (&D.63965.D.11539._M_local_buf != _60)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  # DEBUG D#467 => D.63965.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63965
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63965
  # DEBUG this => D#1
  # DEBUG this => &D.63965
  # DEBUG D#464 => &D.63965._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _60
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _60
  # DEBUG this => D#458
  # DEBUG D.127898 => D#459
  operator delete (_60);

  <bb 68>:
  # DEBUG D#468 => &D.63965._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63965 ={v} {CLOBBER};
  resx 13

<L20>:
  goto <bb 77> (<L5>);

<L4>:
  # DEBUG this => &D.63967
  # DEBUG D#880 => &D.63967.D.63942
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_58 = MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_58
  # DEBUG __cur => __tmp_58
  if (&MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287 == __tmp_58)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  D.63967 ={v} {CLOBBER};
  resx 16

  <bb 72>:

  <bb 73>:
  # __tmp_314 = PHI <__tmp_58(72), __tmp_20(74)>
  # DEBUG __cur => __tmp_314
  # DEBUG __tmp => __tmp_314
  __tmp_20 = __tmp_314->D.69419._M_next;
  # DEBUG __cur => __tmp_20
  # DEBUG D#878 => &__tmp_314->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_314
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_314
  # DEBUG this => D#450
  # DEBUG D.127916 => D#451
  operator delete (__tmp_314);
  # DEBUG __cur => __tmp_20
  if (&MEM[(struct _List_base *)&D.63967]._M_impl._M_node.D.45287 == __tmp_20)
    goto <bb 71>;
  else
    goto <bb 74>;

  <bb 74>:
  goto <bb 73>;

<L21>:
  goto <bb 77> (<L5>);

<L12>:

<L5>:
  # DEBUG D#2448 => &this_2(D)->_state
  # DEBUG this => D#2448
  # DEBUG D#870 => &D#2448->D.48427
  # DEBUG this => D#870
  # DEBUG D#873 => D#2448->D.48427._M_impl._M_finish
  # DEBUG D#872 => D#2448->D.48427._M_impl._M_start
  # DEBUG __first => D#872
  # DEBUG __last => D#873
  # DEBUG D.103910 => NULL
  # DEBUG D#443 => D#872
  # DEBUG D#444 => D#873
  # DEBUG __first => D#443
  # DEBUG __last => D#444
  # DEBUG D#442 => D#444
  # DEBUG D#441 => D#443
  # DEBUG D#439 => D#441
  # DEBUG D#440 => D#442
  # DEBUG D.101757 => D#439
  # DEBUG D.101756 => D#440
  # DEBUG D#871 => &D#2448->D.48427
  # DEBUG this => D#871
  # DEBUG D#869 => D#871->_M_impl._M_end_of_storage
  # DEBUG D#868 => (long int) D#869
  _55 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
  # DEBUG D#867 => (long int) _55
  # DEBUG D#866 => D#868 - D#867
  # DEBUG D#865 => D#866 /[ex] 4
  # DEBUG D#864 => (long unsigned int) D#865
  # DEBUG this => D#871
  # DEBUG __p => _55
  # DEBUG __n => D#864
  if (_55 != 0B)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  # DEBUG D#862 => &D#871->_M_impl
  # DEBUG D#860 => D#862
  # DEBUG D#861 => D#864
  # DEBUG __p => _55
  # DEBUG __a => D#860
  # DEBUG __n => D#861
  # DEBUG D#859 => D#861
  # DEBUG D#858 => D#860
  # DEBUG D#856 => D#858
  # DEBUG D#857 => D#859
  # DEBUG __p => _55
  # DEBUG this => D#856
  # DEBUG D.127931 => D#857
  operator delete (_55);

  <bb 79>:
  # DEBUG D#863 => &D#871->_M_impl
  # DEBUG this => D#863
  # DEBUG this => D#863
  # DEBUG this => D#863
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  resx 7

<L6>:
  # DEBUG D#3279 => &this_2(D)->_waiting
  # DEBUG this => D#3279
  # DEBUG D#882 => &D#3279->D.47680
  # DEBUG this => D#882
  _54 = MEM[(struct vector *)this_2(D) + 200B].D.47680._M_impl._M_finish;
  __first_232 = MEM[(struct vector *)this_2(D) + 200B].D.47680._M_impl._M_start;
  # DEBUG __first => __first_232
  # DEBUG __last => _54
  # DEBUG __first => __first_232
  if (_54 == __first_232)
    goto <bb 89>;
  else
    goto <bb 81>;

  <bb 81>:

  <bb 82>:
  # __first_336 = PHI <__first_232(81), __first_238(84)>
  # DEBUG __first => __first_336
  # DEBUG __r => __first_336
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#880
  # DEBUG this => D#880
  __tmp_234 = MEM[(struct _List_base *)__first_336]._M_impl._M_node.D.45287._M_next;
  # DEBUG __cur => __tmp_234
  # DEBUG __cur => __tmp_234
  _319 = &MEM[(struct _List_base *)__first_336]._M_impl._M_node.D.45287;
  if (__tmp_234 == _319)
    goto <bb 83>;
  else
    goto <bb 85>;

  <bb 83>:
  # DEBUG D#879 => &D#880->_M_impl
  # DEBUG this => D#879
  # DEBUG this => D#879
  # DEBUG this => D#879
  MEM[(struct  &)__first_336] ={v} {CLOBBER};
  __first_238 = __first_336 + 24;
  # DEBUG __first => __first_238
  # DEBUG __first => __first_238
  if (_54 == __first_238)
    goto <bb 88>;
  else
    goto <bb 84>;

  <bb 84>:
  goto <bb 82>;

  <bb 85>:

  <bb 86>:
  # __tmp_333 = PHI <__tmp_234(85), __tmp_237(87)>
  # DEBUG __cur => __tmp_333
  # DEBUG __tmp => __tmp_333
  __tmp_237 = __tmp_333->D.69419._M_next;
  # DEBUG __cur => __tmp_237
  # DEBUG D#878 => &__tmp_333->_M_data
  # DEBUG __r => D#878
  # DEBUG D#877 => D#880
  # DEBUG this => D#877
  # DEBUG D#876 => D#877
  # DEBUG this => D#876
  # DEBUG this => NULL
  # DEBUG D.103932 => NULL
  # DEBUG this => NULL
  # DEBUG this => D#275
  # DEBUG __p => D#276
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#454 => D#880
  # DEBUG __p => __tmp_333
  # DEBUG this => D#454
  # DEBUG D#453 => D#454
  # DEBUG D#452 => &D#453->_M_impl
  # DEBUG D#450 => D#452
  # DEBUG D#451 => 1
  # DEBUG __p => __tmp_333
  # DEBUG this => D#450
  # DEBUG D.141224 => D#451
  operator delete (__tmp_333);
  # DEBUG __cur => __tmp_237
  if (__tmp_237 == _319)
    goto <bb 83>;
  else
    goto <bb 87>;

  <bb 87>:
  goto <bb 86>;

  <bb 88>:
  pretmp_297 = MEM[(struct _Vector_base *)this_2(D) + 200B]._M_impl._M_start;

  <bb 89>:
  # prephitmp_296 = PHI <pretmp_297(88), __first_232(80)>
  # DEBUG D#883 => &D#3279->D.47680
  # DEBUG this => D#883
  # DEBUG D#853 => D#883->_M_impl._M_end_of_storage
  # DEBUG D#852 => (long int) D#853
  # DEBUG D#3281 => MEM[(struct _Vector_base *)this_2(D) + 200B]._M_impl._M_start
  # DEBUG D#851 => (long int) D#3281
  # DEBUG D#850 => D#852 - D#851
  # DEBUG D#849 => D#850 /[ex] 24
  # DEBUG D#846 => D#883
  # DEBUG D#847 => (long unsigned int) D#849
  # DEBUG __p => D#3281
  # DEBUG this => D#846
  # DEBUG __n => D#847
  # DEBUG D#845 => D#847
  # DEBUG D#844 => D#846
  if (prephitmp_296 != 0B)
    goto <bb 90>;
  else
    goto <bb 91>;

  <bb 90>:
  # DEBUG D#843 => &D#844->_M_impl
  # DEBUG D#841 => D#843
  # DEBUG D#842 => D#845
  # DEBUG __p => D#3281
  # DEBUG __a => D#841
  # DEBUG __n => D#842
  # DEBUG D#840 => D#842
  # DEBUG D#839 => D#841
  # DEBUG D#837 => D#839
  # DEBUG D#838 => D#840
  # DEBUG __p => D#3281
  # DEBUG this => D#837
  # DEBUG D.141238 => D#838
  operator delete (prephitmp_296);

  <bb 91>:
  # DEBUG D#848 => &D#883->_M_impl
  # DEBUG this => D#848
  # DEBUG this => D#848
  # DEBUG this => D#848
  MEM[(struct  &)this_2(D) + 200] ={v} {CLOBBER};
  resx 6

<L7>:
  # DEBUG D#2447 => &this_2(D)->_inputVC
  # DEBUG this => D#2447
  # DEBUG D#515 => &D#2447->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#2447->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#2447->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#2447->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _61 = MEM[(struct _Vector_base *)this_2(D) + 176B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _61
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _61
  # DEBUG __n => D#509
  if (_61 != 0B)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _61
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _61
  # DEBUG this => D#501
  # DEBUG D.127946 => D#502
  operator delete (_61);

  <bb 94>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 176] ={v} {CLOBBER};
  resx 5

<L8>:
  # DEBUG D#2446 => &this_2(D)->_input
  # DEBUG this => D#2446
  # DEBUG D#515 => &D#2446->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#2446->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#2446->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#2446->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _64 = MEM[(struct _Vector_base *)this_2(D) + 152B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _64
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _64
  # DEBUG __n => D#509
  if (_64 != 0B)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _64
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _64
  # DEBUG this => D#501
  # DEBUG D.127961 => D#502
  operator delete (_64);

  <bb 97>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 152] ={v} {CLOBBER};
  resx 4

<L9>:
  # DEBUG D#2445 => &this_2(D)->_presence
  # DEBUG this => D#2445
  # DEBUG D#515 => &D#2445->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#2445->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#2445->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#2445->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _65 = MEM[(struct _Vector_base *)this_2(D) + 128B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _65
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _65
  # DEBUG __n => D#509
  if (_65 != 0B)
    goto <bb 99>;
  else
    goto <bb 100>;

  <bb 99>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _65
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _65
  # DEBUG this => D#501
  # DEBUG D.127976 => D#502
  operator delete (_65);

  <bb 100>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 128] ={v} {CLOBBER};
  resx 3

<L10>:
  # DEBUG D#2444 => &this_2(D)->_credits
  # DEBUG this => D#2444
  # DEBUG D#515 => &D#2444->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#2444->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#2444->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#2444->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _66 = MEM[(struct _Vector_base *)this_2(D) + 104B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _66
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _66
  # DEBUG __n => D#509
  if (_66 != 0B)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _66
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _66
  # DEBUG this => D#501
  # DEBUG D.127991 => D#502
  operator delete (_66);

  <bb 103>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_2(D) + 104] ={v} {CLOBBER};
  resx 2

<L11>:
  Module::~Module (_3);
  resx 1

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Flit*, std::allocator<Flit*> >*; _ForwardIterator = std::vector<Flit*, std::allocator<Flit*> >*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIP4FlitSaIS4_EES7_EET0_T_S9_S8_, funcdef_no=4757, decl_uid=80016, cgraph_uid=3106, symbol_order=3107)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Flit*, std::allocator<Flit*> >*; _ForwardIterator = std::vector<Flit*, std::allocator<Flit*> >*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct tArrivalEvent * * D.141337;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct Flit * * _8;
  void * _12;
  long unsigned int _20;
  struct Flit * * const _27;
  struct Flit * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct Flit * * _36;
  struct Flit * * const _37;
  struct Flit * * const _38;
  long int __last.100_39;
  long int __first.101_40;
  long int _41;
  long unsigned int _43;
  struct Flit * * _45;
  struct tArrivalEvent * * _46;
  struct tArrivalEvent * * iftmp.160_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.118764 => D#12
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#2028 => &MEM[(const struct vector *)__first_71].D.66320
  # DEBUG this => D#2028
  # DEBUG __a => NULL
  _27 = MEM[(struct Flit * * *)__first_71];
  # DEBUG D#217 => __first_71
  _28 = MEM[(struct Flit * * *)__first_71 + 8B];
  # DEBUG D#217 => __first_71
  # DEBUG this => D#217
  # DEBUG this => D#217
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#2030 => &__result_70->D.66320
  # DEBUG this => D#2030
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1567 => &D#2030->_M_impl
  # DEBUG this => D#1567
  # DEBUG __a => NULL
  # DEBUG this => D#1567
  # DEBUG __a => NULL
  # DEBUG this => D#1567
  # DEBUG D.103517 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#2030
  # DEBUG __n => NULL
  # DEBUG D#1565 => D#2030
  # DEBUG __n => _33
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _33
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#1641
  # DEBUG D.141335 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.160_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.160_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.160_47;
  _36 = iftmp.160_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#2029 => &__result_70->D.66320
  # DEBUG this => D#2029
  _37 = MEM[(struct Flit * * *)__first_71 + 8B];
  # DEBUG D#376 => __first_71
  # DEBUG this => D#376
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct Flit * * *)__first_71];
  # DEBUG D#377 => __first_71
  # DEBUG this => D#377
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.141299 => D#2027
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.100_39 = (long int) _37;
  __first.101_40 = (long int) _38;
  _41 = __last.100_39 - __first.101_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.160_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.160_47 + prephitmp_2;
  __result_70->D.66320._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _8
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _8
  # DEBUG __n => D#1021
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _8
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _8
  # DEBUG this => D#1013
  # DEBUG D.118789 => D#1014
  operator delete (_8);

  <bb 25>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Flit*, std::allocator<Flit*> >; _Alloc = std::allocator<std::vector<Flit*, std::allocator<Flit*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<std::vector<Flit*, std::allocator<Flit*> >, std::allocator<std::vector<Flit*, std::allocator<Flit*> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Flit*, std::allocator<Flit*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Flit*, std::allocator<Flit*> >] (_ZNSt6vectorIS_IP4FlitSaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=3672, decl_uid=56796, cgraph_uid=2021, symbol_order=2022)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Flit*, std::allocator<Flit*> >; _Alloc = std::allocator<std::vector<Flit*, std::allocator<Flit*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<std::vector<Flit*, std::allocator<Flit*> >, std::allocator<std::vector<Flit*, std::allocator<Flit*> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Flit*, std::allocator<Flit*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Flit*, std::allocator<Flit*> >] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.141435;
  const size_type __len;
  size_type D.141434;
  size_type __n;
  struct vector * D.141425;
  struct tArrivalEvent * * D.141416;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  bool _18;
  struct vector * _20;
  struct vector * const _23;
  long int __last.103_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long unsigned int _55;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  struct vector * _67;
  long unsigned int _70;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct vector * _82;
  struct Flit * * const prephitmp_83;
  struct Flit * * _85;
  long unsigned int prephitmp_89;
  struct vector * _91;
  struct Flit * * _92;
  struct Flit * * _94;
  struct Flit * * _95;
  struct Flit * * _98;
  const ptrdiff_t pretmp_100;
  long int pretmp_101;
  struct Flit * * const pretmp_103;
  long unsigned int pretmp_116;
  long unsigned int prephitmp_117;
  struct vector * const pretmp_118;
  struct vector * const prephitmp_119;
  long int pretmp_142;
  long int prephitmp_143;
  long unsigned int pretmp_144;
  long unsigned int prephitmp_145;
  struct Flit * * const pretmp_146;
  long unsigned int prephitmp_150;
  struct vector * pretmp_151;
  struct vector * prephitmp_152;
  struct Flit * * const _153;
  struct Flit * * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  struct Flit * * _162;
  struct Flit * * _171;
  struct tArrivalEvent * * _172;
  struct tArrivalEvent * * iftmp.160_173;
  struct vector * _175;
  long unsigned int _177;
  long int _178;
  long int _179;
  long int _180;
  long int _181;
  long unsigned int _183;
  const ptrdiff_t prephitmp_185;
  long unsigned int pretmp_186;
  long int _214;
  long int _215;
  bool _219;
  long int _220;
  difference_type _224;
  long int _226;
  difference_type _227;
  long int _228;
  bool _231;
  long int pretmp_235;
  long int pretmp_236;

  <bb 2>:
  # DEBUG D#3302 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3302
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 58>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.56873._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.56873._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 38>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#2028 => &MEM[(const struct vector *)__x_28(D)].D.66320
  # DEBUG this => D#2028
  # DEBUG __a => NULL
  _153 = MEM[(struct Flit * * *)__x_28(D)];
  # DEBUG D#217 => __x_28(D)
  _154 = MEM[(struct Flit * * *)__x_28(D) + 8B];
  # DEBUG D#217 => __x_28(D)
  # DEBUG this => D#217
  # DEBUG this => D#217
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 8;
  _159 = (size_type) _158;
  # DEBUG D#2030 => &__x_copy.D.66320
  # DEBUG this => D#2030
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1567 => &D#2030->_M_impl
  # DEBUG this => D#1567
  # DEBUG __a => NULL
  # DEBUG this => D#1567
  # DEBUG __a => NULL
  # DEBUG this => D#1567
  # DEBUG D.103517 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#2030
  # DEBUG __n => NULL
  # DEBUG D#1565 => D#2030
  # DEBUG __n => _159
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_144 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _159
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#1641
  # DEBUG D.141414 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_159 > 2305843009213693951)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_118 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_142 = (long int) pretmp_118;
  pretmp_146 = MEM[(struct Flit * * *)__x_28(D) + 8B];
  pretmp_103 = MEM[(struct Flit * * *)__x_28(D)];
  pretmp_101 = (long int) pretmp_146;
  pretmp_236 = (long int) pretmp_103;
  pretmp_235 = pretmp_101 - pretmp_236;
  pretmp_100 = pretmp_235 /[ex] 8;
  pretmp_186 = (long unsigned int) pretmp_235;

  <bb 9>:
  # iftmp.160_173 = PHI <0B(5), _172(8)>
  # prephitmp_119 = PHI <_12(5), pretmp_118(8)>
  # prephitmp_143 = PHI <_13(5), pretmp_142(8)>
  # prephitmp_145 = PHI <pretmp_144(5), _55(8)>
  # prephitmp_83 = PHI <_153(5), pretmp_103(8)>
  # prephitmp_185 = PHI <_158(5), pretmp_100(8)>
  # prephitmp_89 = PHI <pretmp_144(5), pretmp_186(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.160_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.160_173;
  _162 = iftmp.160_173 + prephitmp_145;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#2029 => &__x_copy.D.66320
  # DEBUG this => D#2029
  # DEBUG D#3300 => MEM[(struct Flit * * *)__x_28(D) + 8B]
  # DEBUG D#376 => __x_28(D)
  # DEBUG this => D#376
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#3299 => MEM[(struct Flit * * *)__x_28(D)]
  # DEBUG D#377 => __x_28(D)
  # DEBUG this => D#377
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#3299
  # DEBUG __last => D#3300
  # DEBUG __result => NULL
  # DEBUG D.141378 => D#2027
  # DEBUG __first => D#3299
  # DEBUG __last => D#3300
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3299
  # DEBUG __last => D#3300
  # DEBUG __result => NULL
  # DEBUG __first => D#3299
  # DEBUG __last => D#3300
  # DEBUG __result => NULL
  # DEBUG __it => D#3300
  # DEBUG __it$_M_current => D#3300
  # DEBUG __it => D#3299
  # DEBUG __it$_M_current => D#3299
  # DEBUG __first => D#3299
  # DEBUG __last => D#3300
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3300
  # DEBUG __it => D#3300
  # DEBUG this => NULL
  # DEBUG __it => D#3299
  # DEBUG __it => D#3299
  # DEBUG this => NULL
  # DEBUG __first => D#3299
  # DEBUG __last => D#3300
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3299
  # DEBUG __last => D#3300
  # DEBUG __result => NULL
  # DEBUG D#3298 => (long int) D#3300
  # DEBUG D#3297 => (long int) D#3299
  # DEBUG D#3296 => D#3298 - D#3297
  # DEBUG _Num => D#3296 /[ex] 8
  if (prephitmp_185 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.160_173, prephitmp_83, prephitmp_89);

  <bb 11>:
  _171 = iftmp.160_173 + prephitmp_89;
  __x_copy.D.66320._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#378 => &this_9(D)->D.56873._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#378
  # DEBUG D#3295 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.75527
  # DEBUG __rhs => &__position
  # DEBUG this => &D.75527
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_143 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#3295
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  # DEBUG D#2315 => &this_9(D)->D.56873
  # DEBUG this => D#2315
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_119 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#3295
  # DEBUG __result => D#3295
  # DEBUG __alloc => D#2033
  # DEBUG D#2032 => D#2033
  # DEBUG D#2031 => D#2032
  # DEBUG __first => __last_61
  # DEBUG __last => D#3295
  # DEBUG __result => D#3295
  # DEBUG D.125145 => D#2031
  # DEBUG __first => __last_61
  # DEBUG __last => D#3295
  # DEBUG __result => D#3295
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<Flit*, std::allocator<Flit*> >*> (__last_61, prephitmp_119, prephitmp_119);

  <bb 13>:
  _62 = this_9(D)->D.56873._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.56873._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3302
  # DEBUG __last => __last_61
  # DEBUG __result => D#3295
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3302
  # DEBUG __it => D#3302
  # DEBUG __first => D#3302
  # DEBUG __last => __last_61
  # DEBUG __result => D#3295
  # DEBUG __it => D#3295
  # DEBUG __it => D#3295
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3302
  # DEBUG __it => D#3302
  # DEBUG __first => D#3302
  # DEBUG __last => __last_61
  # DEBUG __result => D#3295
  # DEBUG __simple => 0
  # DEBUG __first => D#3302
  # DEBUG __last => __last_61
  # DEBUG __result => D#3295
  __last.103_25 = (long int) __last_61;
  _78 = __last.103_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#3295
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3302
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3302
  if (__position_22 == _67)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 15>:

  <bb 16>:
  # __old_finish_87 = PHI <prephitmp_119(15), __old_finish_65(19)>
  # __last_211 = PHI <__last_61(15), __last_68(19)>
  # __n_19 = PHI <__n_73(15), __n_58(19)>
  # DEBUG __n => __n_19
  # DEBUG __result => __old_finish_87
  # DEBUG __last => __last_211
  __last_68 = __last_211 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_87 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<Flit*, std::allocator<Flit*> >::operator= (__old_finish_65, __last_68);
  goto <bb 18>;

<L20>:
  goto <bb 60> (<L10>);

  <bb 18>:
  __n_58 = __n_19 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 16>;

  <bb 20>:
  # DEBUG this => &__x_copy
  # DEBUG D#1027 => &__x_copy.D.66320
  # DEBUG this => D#1027
  # DEBUG D#1030 => __x_copy.D.66320._M_impl._M_finish
  # DEBUG D#1029 => __x_copy.D.66320._M_impl._M_start
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG D#1028 => &__x_copy.D.66320
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _85
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _85
  # DEBUG __n => D#1021
  if (_85 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 21>:

  <bb 22>:
  # __position_90 = PHI <__position_22(21), __position_81(25)>
  # DEBUG __first => __position_90
  std::vector<Flit*, std::allocator<Flit*> >::operator= (__position_90, &__x_copy);
  goto <bb 24>;

<L21>:
  goto <bb 60> (<L10>);

  <bb 24>:
  __position_81 = __position_90 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 22>;

  <bb 26>:
  # DEBUG D#2316 => &this_9(D)->D.56873
  # DEBUG this => D#2316
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#3295
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.125191 => D#2036
  # DEBUG __first => D#3295
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _82 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<Flit*, std::allocator<Flit*> >*, long unsigned int, std::vector<Flit*, std::allocator<Flit*> > > (prephitmp_119, _70, &__x_copy);
  goto <bb 28>;

<L22>:
  goto <bb 60> (<L10>);

  <bb 28>:
  this_9(D)->D.56873._M_impl._M_finish = _82;
  # DEBUG D#2317 => &this_9(D)->D.56873
  # DEBUG this => D#2317
  # DEBUG this => &__position
  # DEBUG __first => D#3302
  # DEBUG __last => D#3295
  # DEBUG __result => _82
  # DEBUG __alloc => D#2033
  # DEBUG D#2032 => D#2033
  # DEBUG D#2031 => D#2032
  # DEBUG __first => D#3302
  # DEBUG __last => D#3295
  # DEBUG __result => _82
  # DEBUG D.125204 => D#2031
  # DEBUG __first => D#3302
  # DEBUG __last => D#3295
  # DEBUG __result => _82
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<Flit*, std::allocator<Flit*> >*> (__position_22, prephitmp_119, _82);
  goto <bb 30>;

<L23>:
  goto <bb 60> (<L10>);

  <bb 30>:
  _74 = this_9(D)->D.56873._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.56873._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3302
  # DEBUG __last => D#3295
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3302
  if (__position_22 == prephitmp_119)
    goto <bb 20>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # __position_222 = PHI <__position_22(31), __position_84(35)>
  # DEBUG __first => __position_222
  std::vector<Flit*, std::allocator<Flit*> >::operator= (__position_222, &__x_copy);
  goto <bb 34>;

<L24>:
  goto <bb 60> (<L10>);

  <bb 34>:
  __position_84 = __position_222 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_119)
    goto <bb 20>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 32>;

  <bb 36>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _85
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _85
  # DEBUG this => D#1013
  # DEBUG D.125237 => D#1014
  operator delete (_85);

  <bb 37>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  __x_copy ={v} {CLOBBER};
  goto <bb 58>;

  <bb 38>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1773 => this_9(D)
  # DEBUG this => D#1773
  # DEBUG D#1772 => D#1773
  # DEBUG D#1771 => &D#1772->D.58509
  # DEBUG this => D#1771
  # DEBUG __a => D#1770
  # DEBUG D#1769 => D#1770
  # DEBUG D#1768 => D#1769
  # DEBUG this => D#1768
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  _179 = (long int) _23;
  _180 = _13 - _179;
  _181 = _180 /[ex] 24;
  _182 = (const long unsigned int) _181;
  _183 = 768614336404564650 - _182;
  if (__n_7(D) > _183)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 40>:
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG __a => &D.141435
  # DEBUG __b => &__n
  _177 = MAX_EXPR <__n_7(D), _182>;
  __len_187 = _177 + _182;
  # DEBUG __len => __len_187
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG D#1773 => this_9(D)
  # DEBUG this => D#1773
  # DEBUG D#1772 => D#1773
  # DEBUG D#1771 => &D#1772->D.58509
  # DEBUG this => D#1771
  # DEBUG __a => D#1770
  # DEBUG D#1769 => D#1770
  # DEBUG D#1768 => D#1769
  # DEBUG this => D#1768
  _219 = __len_187 > 768614336404564650;
  _231 = _182 > __len_187;
  _18 = _219 | _231;
  if (_18 != 0)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 41>:
  pretmp_116 = __len_187 * 24;

  <bb 42>:
  # __elems_before_196 = PHI <__elems_before_225(79), __elems_before_213(41)>
  # _214 = PHI <_226(79), _178(41)>
  # prephitmp_117 = PHI <18446744073709551600(79), pretmp_116(41)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#757 => &this_9(D)->D.56873._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#757
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75560
  # DEBUG this => &__position
  # DEBUG this => &D.75560
  # DEBUG __elems_before => __elems_before_196
  # DEBUG D#2327 => &this_9(D)->D.56873
  # DEBUG D#1751 => D#2327
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  # DEBUG D#1779 => &D#1780->_M_impl
  # DEBUG D#1778 => D#1779
  # DEBUG __n => NULL
  # DEBUG __a => D#1778
  # DEBUG D#1777 => D#1778
  # DEBUG D#1775 => D#1777
  # DEBUG D#1776 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1775
  # DEBUG D.141423 => D#1776
  # DEBUG D#1774 => D#1775
  # DEBUG D#1768 => D#1774
  # DEBUG this => D#1768
  _175 = operator new (prephitmp_117);

  <bb 43>:
  # __new_finish_176 = PHI <0B(80), _175(42)>
  # __elems_before_223 = PHI <__elems_before_213(80), __elems_before_196(42)>
  # _215 = PHI <_178(80), _214(42)>
  # prephitmp_150 = PHI <0(80), prephitmp_117(42)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2311 => &this_9(D)->D.56873
  # DEBUG this => D#2311
  _26 = (long unsigned int) _215;
  __first_27 = __new_finish_176 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.125245 => D#2036
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<Flit*, std::allocator<Flit*> >*, long unsigned int, std::vector<Flit*, std::allocator<Flit*> > > (__first_27, __n_7(D), __x_28(D));

  <bb 44>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2312 => &this_9(D)->D.56873
  # DEBUG this => D#2312
  # DEBUG this => &__position
  _31 = this_9(D)->D.56873._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#3302
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2035
  # DEBUG D#2034 => D#2035
  # DEBUG D#2031 => D#2034
  # DEBUG __first => _31
  # DEBUG __last => D#3302
  # DEBUG __result => NULL
  # DEBUG D.125266 => D#2031
  # DEBUG __first => _31
  # DEBUG __last => D#3302
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<Flit*, std::allocator<Flit*> >*> (_31, __position_22, __new_finish_176);
  goto <bb 46>;

<L26>:
  goto <bb 64> (<L13>);

  <bb 46>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2313 => &this_9(D)->D.56873
  # DEBUG this => D#2313
  _35 = this_9(D)->D.56873._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3302
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#2035
  # DEBUG D#2034 => D#2035
  # DEBUG D#2031 => D#2034
  # DEBUG __first => D#3302
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.125285 => D#2031
  # DEBUG __first => D#3302
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Flit*, std::allocator<Flit*> >*, std::vector<Flit*, std::allocator<Flit*> >*> (__position_22, _35, __new_finish_33);
  goto <bb 48>;

<L27>:
  goto <bb 64> (<L13>);

  <bb 48>:
  # DEBUG __new_finish => _91
  # DEBUG D#2314 => &this_9(D)->D.56873
  # DEBUG this => D#2314
  _37 = this_9(D)->D.56873._M_impl._M_finish;
  __first_38 = this_9(D)->D.56873._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 55>;
  else
    goto <bb 49>;

  <bb 49>:

  <bb 50>:
  # __first_232 = PHI <__first_38(49), __first_93(53)>
  # DEBUG __first => __first_232
  # DEBUG __r => __first_232
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _92 = MEM[(struct _Vector_base *)__first_232]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _92
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _92
  # DEBUG __n => D#1021
  if (_92 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _92
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _92
  # DEBUG this => D#1013
  # DEBUG D.125329 => D#1014
  operator delete (_92);

  <bb 52>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__first_232] ={v} {CLOBBER};
  __first_93 = __first_232 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 54>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 50>;

  <bb 54>:
  pretmp_151 = this_9(D)->D.56873._M_impl._M_start;

  <bb 55>:
  # prephitmp_152 = PHI <pretmp_151(54), __first_38(48)>
  # DEBUG D#2325 => this_9(D)->D.56873._M_impl._M_end_of_storage
  # DEBUG D#2324 => (long int) D#2325
  # DEBUG D#3301 => this_9(D)->D.56873._M_impl._M_start
  # DEBUG D#2323 => (long int) D#3301
  # DEBUG D#2322 => D#2324 - D#2323
  # DEBUG D#2321 => D#2322 /[ex] 24
  # DEBUG D#2320 => &this_9(D)->D.56873
  # DEBUG D#1005 => D#2320
  # DEBUG D#1006 => (long unsigned int) D#2321
  # DEBUG __p => D#3301
  # DEBUG this => D#1005
  # DEBUG __n => D#1006
  # DEBUG D#1004 => D#1006
  # DEBUG D#1003 => D#1005
  if (prephitmp_152 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#1002 => &D#1003->_M_impl
  # DEBUG D#1000 => D#1002
  # DEBUG D#1001 => D#1004
  # DEBUG __p => D#3301
  # DEBUG __a => D#1000
  # DEBUG __n => D#1001
  # DEBUG D#999 => D#1001
  # DEBUG D#998 => D#1000
  # DEBUG D#996 => D#998
  # DEBUG D#997 => D#999
  # DEBUG __p => D#3301
  # DEBUG this => D#996
  # DEBUG D.125308 => D#997
  operator delete (prephitmp_152);

  <bb 57>:
  this_9(D)->D.56873._M_impl._M_start = __new_finish_176;
  this_9(D)->D.56873._M_impl._M_finish = _91;
  _44 = __new_finish_176 + prephitmp_150;
  this_9(D)->D.56873._M_impl._M_end_of_storage = _44;

  <bb 58>:
  return;

<L19>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1027 => &__x_copy.D.66320
  # DEBUG this => D#1027
  # DEBUG D#1030 => __x_copy.D.66320._M_impl._M_finish
  # DEBUG D#1029 => __x_copy.D.66320._M_impl._M_start
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG D#1028 => &__x_copy.D.66320
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _94
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _94
  # DEBUG __n => D#1021
  if (_94 != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _94
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _94
  # DEBUG this => D#1013
  # DEBUG D.125346 => D#1014
  operator delete (_94);

  <bb 62>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  resx 2

<L25>:

  # __new_finish_1 = PHI <__new_finish_176(63), 0B(45), __new_finish_33(47)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 66>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 71>;

  <bb 66>:
  # DEBUG D#2318 => &this_9(D)->D.56873
  # DEBUG this => D#2318
  _49 = __n_7(D) + __elems_before_223;
  _50 = _49 * 24;
  _51 = __new_finish_176 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 67>:
  # __first_80 = PHI <__first_27(66), __first_96(70)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 75>;
  else
    goto <bb 68>;

  <bb 68>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _95
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _95
  # DEBUG __n => D#1021
  if (_95 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _95
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _95
  # DEBUG this => D#1013
  # DEBUG D.125370 => D#1014
  operator delete (_95);

  <bb 70>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 67>;

  <bb 71>:
  # __new_finish_97 = PHI <__new_finish_176(65), __new_finish_99(74)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 75>;
  else
    goto <bb 72>;

  <bb 72>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _98
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _98
  # DEBUG __n => D#1021
  if (_98 != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _98
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _98
  # DEBUG this => D#1013
  # DEBUG D.125396 => D#1014
  operator delete (_98);

  <bb 74>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 71>;

  <bb 75>:
  # DEBUG D#2326 => &this_9(D)->D.56873
  # DEBUG D#1005 => D#2326
  # DEBUG __p => NULL
  # DEBUG this => D#1005
  # DEBUG __n => D#1006
  # DEBUG D#1004 => D#1006
  # DEBUG D#1003 => D#1005
  if (__new_finish_176 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG D#1002 => &D#1003->_M_impl
  # DEBUG D#1000 => D#1002
  # DEBUG D#1001 => D#1004
  # DEBUG __p => NULL
  # DEBUG __a => D#1000
  # DEBUG __n => D#1001
  # DEBUG D#999 => D#1001
  # DEBUG D#998 => D#1000
  # DEBUG D#996 => D#998
  # DEBUG D#997 => D#999
  # DEBUG __p => NULL
  # DEBUG this => D#996
  # DEBUG D.125411 => D#997
  operator delete (__new_finish_176);

  <bb 77>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 79>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#757 => &this_9(D)->D.56873._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#757
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75560
  # DEBUG this => &__position
  _228 = (long int) __position_22;
  # DEBUG this => &D.75560
  _226 = _228 - _179;
  _227 = _226 /[ex] 24;
  __elems_before_225 = (const size_type) _227;
  # DEBUG __elems_before => __elems_before_225
  # DEBUG D#2327 => &this_9(D)->D.56873
  # DEBUG D#1751 => D#2327
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  goto <bb 42>;

  <bb 80>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#757 => &this_9(D)->D.56873._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#757
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75560
  # DEBUG this => &__position
  _220 = (long int) __position_22;
  # DEBUG this => &D.75560
  _178 = _220 - _179;
  _224 = _178 /[ex] 24;
  __elems_before_213 = (const size_type) _224;
  # DEBUG __elems_before => __elems_before_213
  # DEBUG D#2327 => &this_9(D)->D.56873
  # DEBUG D#1751 => D#2327
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  if (__len_187 != 0)
    goto <bb 41>;
  else
    goto <bb 43>;

}



;; Function PipelineFIFO<T>::PipelineFIFO(Module*, const string&, int, int) [with T = Flit; std::__cxx11::string = std::__cxx11::basic_string<char>] (_ZN12PipelineFIFOI4FlitEC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, funcdef_no=2340, decl_uid=56902, cgraph_uid=689, symbol_order=690)

Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::PipelineFIFO(Module*, const string&, int, int) [with T = Flit; std::__cxx11::string = std::__cxx11::basic_string<char>] (struct PipelineFIFO * const this, struct Module * parent, const struct string & name, int lanes, int depth)
{
  struct vector * __first;
  struct tArrivalEvent * * D.141806;
  const size_type __len;
  const long unsigned int D.141797;
  size_type D.141796;
  size_type __n;
  const ptrdiff_t _Num;
  struct tTransportEvent * * D.141787;
  struct Flit * __x_copy;
  const size_type __elems_after;
  struct Flit * * __new_finish;
  struct Flit * * __first;
  const ptrdiff_t _Num;
  struct Flit * * __first;
  long unsigned int __n;
  struct Flit * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Flit * * __first;
  struct Flit * * const __position;
  struct iterator __position;
  size_type __n;
  struct Flit * __x;
  struct iterator __position;
  struct iterator __position;
  struct vector * __pos;
  int l;
  struct value_type D.66328;
  struct Module * _5;
  int _16;
  long unsigned int _19;
  long unsigned int _20;
  struct vector * _21;
  struct Flit * * const _22;
  int _25;
  long unsigned int _26;
  long unsigned int _27;
  struct vector & _28;
  struct vector * _35;
  struct Flit * * _36;
  long unsigned int _56;
  long unsigned int prephitmp_58;
  long unsigned int pretmp_59;
  long unsigned int prephitmp_60;
  long unsigned int pretmp_61;
  long unsigned int prephitmp_62;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long unsigned int _76;
  struct Flit * * _77;
  struct Flit * * _78;
  long int _79;
  int pretmp_80;
  int pretmp_81;
  long int _82;
  long int _83;
  long unsigned int _84;
  int pretmp_86;
  int prephitmp_87;
  struct Flit * * prephitmp_90;
  bool _91;
  struct tArrivalEvent * * pretmp_92;
  long unsigned int pretmp_93;
  struct tArrivalEvent * * prephitmp_94;
  int _104;
  long unsigned int _105;
  struct Flit * * _106;
  struct vector * prephitmp_111;
  long unsigned int _113;
  struct Flit * * _126;
  long int __first.101_127;
  long int _128;
  long unsigned int _130;
  long unsigned int _133;
  struct Flit * * _135;
  long int __last.100_136;
  long int _137;
  long unsigned int _139;
  struct Flit * * _141;
  struct Flit * * _142;
  sizetype _148;
  int prephitmp_151;
  long unsigned int _162;
  struct tArrivalEvent * * _169;
  struct tArrivalEvent * * iftmp.160_170;
  struct vector * _171;
  struct Flit * * _174;
  struct Flit * * pretmp_182;
  bool _183;
  struct vector * pretmp_184;
  sizetype _199;
  long int _212;
  bool _214;
  long int _216;
  long int _222;
  long unsigned int _241;

  <bb 2>:
  _5 = &this_4(D)->D.56917;
  Module::Module (_5, parent_7(D), name_8(D));
  this_4(D)->D.56917._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI4FlitE + 16B];
  this_4(D)->_lanes = lanes_11(D);
  this_4(D)->_depth = depth_13(D);
  # DEBUG D#2329 => &this_4(D)->_data
  # DEBUG this => D#2329
  # DEBUG D#995 => &D#2329->D.56873
  # DEBUG this => D#995
  # DEBUG D#994 => &D#995->_M_impl
  # DEBUG this => D#994
  # DEBUG this => D#994
  # DEBUG this => D#994
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_end_of_storage = 0B;
  _16 = depth_13(D) + 1;
  this_4(D)->_pipe_len = _16;
  this_4(D)->_pipe_ptr = 0;
  # DEBUG this => &D.66328
  # DEBUG D#784 => &D.66328.D.66320
  # DEBUG this => D#784
  # DEBUG D#783 => &D#784->_M_impl
  # DEBUG this => D#783
  # DEBUG this => D#783
  # DEBUG this => D#783
  MEM[(struct _Vector_impl *)&D.66328]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.66328]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.66328]._M_end_of_storage = 0B;
  _20 = (long unsigned int) lanes_11(D);
  # DEBUG D#3314 => &this_4(D)->_data
  # DEBUG this => D#3314
  # DEBUG __new_size => _20
  # DEBUG __x => &D.66328
  # DEBUG D#218 => D#3314
  # DEBUG D#218 => D#3314
  # DEBUG this => D#218
  # DEBUG this => D#218
  if (_20 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#218 => D#3314
  # DEBUG D#218 => D#3314
  # DEBUG this => D#218
  # DEBUG this => D#218
  # DEBUG this => D#3314
  # DEBUG D#378 => &D#3314->D.56873._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#378
  # DEBUG this => D#3314
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _20
  # DEBUG __x => &D.66328
  _21 = &this_4(D)->_data;
  std::vector<std::vector<Flit*, std::allocator<Flit*> >, std::allocator<std::vector<Flit*, std::allocator<Flit*> > > >::_M_fill_insert (_21, __position, _20, &D.66328);

  <bb 4>:
  pretmp_182 = MEM[(struct _Vector_base *)&D.66328]._M_impl._M_start;

  <bb 5>:
  # prephitmp_90 = PHI <0B(2), pretmp_182(4)>
  # DEBUG this => &D.66328
  # DEBUG D#1027 => &D.66328.D.66320
  # DEBUG this => D#1027
  # DEBUG D#1030 => D.66328.D.66320._M_impl._M_finish
  # DEBUG D#1029 => D.66328.D.66320._M_impl._M_start
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG D#1028 => &D.66328.D.66320
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  # DEBUG D#3313 => MEM[(struct _Vector_base *)&D.66328]._M_impl._M_start
  # DEBUG D#1024 => (long int) D#3313
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => D#3313
  # DEBUG __n => D#1021
  if (prephitmp_90 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => D#3313
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => D#3313
  # DEBUG this => D#1013
  # DEBUG D.125492 => D#1014
  operator delete (prephitmp_90);

  <bb 7>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  D.66328 ={v} {CLOBBER};
  # DEBUG l => 0
  # DEBUG l => 0
  _104 = this_4(D)->_lanes;
  if (_104 <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  return;

  <bb 9>:

  <bb 10>:
  # l_194 = PHI <0(9), l_30(31)>
  # prephitmp_151 = PHI <_104(9), prephitmp_87(31)>
  # DEBUG l => l_194
  _25 = this_4(D)->_pipe_len;
  _26 = (long unsigned int) _25;
  _27 = (long unsigned int) l_194;
  # DEBUG D#2328 => &this_4(D)->_data
  _35 = MEM[(struct vector * *)this_4(D) + 112B];
  # DEBUG D#148 => D#2328
  # DEBUG __n => _27
  # DEBUG this => D#148
  _19 = _27 * 24;
  _28 = _35 + _19;
  # DEBUG this => _28
  # DEBUG __new_size => _26
  # DEBUG __x => 0B
  # DEBUG __x => 0B
  _22 = MEM[(struct Flit * * *)_28];
  # DEBUG D#217 => _28
  __first_69 = MEM[(struct Flit * * *)_28 + 8B];
  # DEBUG D#217 => _28
  # DEBUG this => D#217
  # DEBUG this => D#217
  _70 = (long int) __first_69;
  _71 = (long int) _22;
  _72 = _70 - _71;
  _73 = _72 /[ex] 8;
  _74 = (const long unsigned int) _73;
  if (_26 > _74)
    goto <bb 11>;
  else
    goto <bb 28>;

  <bb 11>:
  # DEBUG D#217 => _28
  # DEBUG D#217 => _28
  # DEBUG this => D#217
  # DEBUG this => D#217
  __n_75 = _26 - _74;
  # DEBUG this => _28
  # DEBUG D#379 => &_28->D.66320._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#379
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __x => &__x
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __x => &__x
  # DEBUG __position => __first_69
  _78 = _28->D.66320._M_impl._M_end_of_storage;
  _79 = (long int) _78;
  _82 = _79 - _70;
  _83 = _82 /[ex] 8;
  _84 = (long unsigned int) _83;
  if (__n_75 <= _84)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _199 = __n_75 * 8;
  __builtin_memset (__first_69, 0, _199);
  _241 = __n_75 * 8;
  __first_219 = __first_69 + _241;
  _28->D.66320._M_impl._M_finish = __first_219;
  # DEBUG D#2061 => &_28->D.66320
  # DEBUG this => D#2061
  # DEBUG this => &__position
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __alloc => D#2051
  # DEBUG D#2050 => D#2051
  # DEBUG D#2049 => D#2050
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG D.141582 => D#2049
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __assignable => 1
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __it => __first_219
  # DEBUG __it => __first_219
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __simple => 1
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG _Num => 0
  # DEBUG this => &__position
  # DEBUG D#1432 => &__x_copy
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG D#1431 => D#1432
  # DEBUG __value => D#1431
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG D#1059 => D#1431
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __value => D#1059
  # DEBUG __tmp => 0B
  # DEBUG __first => __first_69
  pretmp_80 = this_4(D)->_lanes;
  goto <bb 30>;

  <bb 13>:
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __n => __n_75
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1669 => _28
  # DEBUG this => D#1669
  # DEBUG D#1668 => D#1669
  # DEBUG D#1667 => &D#1668->D.67418
  # DEBUG this => D#1667
  # DEBUG __a => D#1666
  # DEBUG D#1665 => D#1666
  # DEBUG D#1639 => D#1665
  # DEBUG this => D#1639
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  _162 = 2305843009213693951 - _74;
  if (__n_75 > _162)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 15>:
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.141797
  # DEBUG __b => &__n
  _56 = MAX_EXPR <_74, __n_75>;
  __len_166 = _56 + _74;
  # DEBUG __len => __len_166
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#1669 => _28
  # DEBUG this => D#1669
  # DEBUG D#1668 => D#1669
  # DEBUG D#1667 => &D#1668->D.67418
  # DEBUG this => D#1667
  # DEBUG __a => D#1666
  # DEBUG D#1665 => D#1666
  # DEBUG D#1639 => D#1665
  # DEBUG this => D#1639
  _183 = __len_166 > 2305843009213693951;
  _214 = _74 > __len_166;
  _91 = _183 | _214;
  if (_91 != 0)
    goto <bb 16>;
  else
    goto <bb 48>;

  <bb 16>:
  # prephitmp_62 = PHI <18446744073709551608(15), pretmp_61(49)>
  # DEBUG __len => NULL
  # DEBUG this => _28
  # DEBUG D#758 => &_28->D.66320._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#758
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#2072 => _72 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2072
  # DEBUG D#2071 => &_28->D.66320
  # DEBUG D#1565 => D#2071
  # DEBUG __n => NULL
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => NULL
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1641
  # DEBUG D.141804 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  _169 = operator new (prephitmp_62);
  goto <bb 18>;

<L7>:
  goto <bb 37> (<L4>);

  <bb 18>:
  pretmp_92 = _169 + prephitmp_62;

  <bb 19>:
  # iftmp.160_170 = PHI <0B(48), _169(18)>
  # prephitmp_94 = PHI <0B(48), pretmp_92(18)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2055 => &_28->D.66320
  # DEBUG this => D#2055
  # DEBUG D#3316 => (long unsigned int) _72
  # DEBUG D#3315 => iftmp.160_170 + D#3316
  # DEBUG D#1802 => &__x
  # DEBUG __first => D#3315
  # DEBUG __n => __n_75
  # DEBUG D#1801 => D#1802
  # DEBUG __x => D#1801
  # DEBUG D.141672 => D#1803
  # DEBUG D#1800 => D#1801
  # DEBUG __first => D#3315
  # DEBUG __n => __n_75
  # DEBUG D#1799 => D#1800
  # DEBUG __x => D#1799
  # DEBUG __assignable => 1
  # DEBUG D#1798 => D#1799
  # DEBUG __first => D#3315
  # DEBUG __n => __n_75
  # DEBUG D#1797 => D#1798
  # DEBUG __x => D#1797
  # DEBUG D#1796 => D#1797
  # DEBUG __first => D#3315
  # DEBUG __n => __n_75
  # DEBUG D#1795 => D#1796
  # DEBUG __value => D#1795
  # DEBUG __it => D#3315
  # DEBUG __it => D#3315
  # DEBUG D#1794 => D#1795
  # DEBUG __first => D#3315
  # DEBUG __n => __n_75
  # DEBUG __value => D#1794
  # DEBUG __tmp => 0B
  # DEBUG __niter => __n_75
  # DEBUG __niter => __n_75
  # DEBUG __first => D#3315
  _148 = __n_75 * 8;
  _216 = (long int) __first_69;
  _222 = (long int) _22;
  _212 = _216 - _222;
  _105 = (long unsigned int) _212;
  _106 = iftmp.160_170 + _105;
  __builtin_memset (_106, 0, _148);
  # DEBUG __new_finish => 0B
  # DEBUG D#2056 => &_28->D.66320
  # DEBUG this => D#2056
  # DEBUG this => &__position
  _126 = _28->D.66320._M_impl._M_start;
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2053
  # DEBUG D#2052 => D#2053
  # DEBUG D#2049 => D#2052
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG D.141695 => D#2049
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  __first.101_127 = (long int) _126;
  _128 = _70 - __first.101_127;
  _Num_129 = _128 /[ex] 8;
  # DEBUG _Num => _Num_129
  if (_Num_129 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_93 = (long unsigned int) _128;
  goto <bb 22>;

  <bb 21>:
  _130 = (long unsigned int) _128;
  __builtin_memmove (iftmp.160_170, _126, _130);

  <bb 22>:
  # prephitmp_58 = PHI <pretmp_93(20), _130(21)>
  # DEBUG D#3312 => (long unsigned int) _128
  # DEBUG __new_finish => iftmp.160_170 + D#3312
  _133 = __n_75 * 8;
  _113 = prephitmp_58 + _133;
  __new_finish_134 = iftmp.160_170 + _113;
  # DEBUG __new_finish => __new_finish_134
  # DEBUG D#2057 => &_28->D.66320
  # DEBUG this => D#2057
  _135 = _28->D.66320._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __alloc => D#2053
  # DEBUG D#2052 => D#2053
  # DEBUG D#2049 => D#2052
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG D.141729 => D#2049
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __assignable => 1
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __it => _135
  # DEBUG __it => _135
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __it => __new_finish_134
  # DEBUG __it => __new_finish_134
  # DEBUG __it => _135
  # DEBUG __it => _135
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __simple => 1
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  __last.100_136 = (long int) _135;
  _137 = __last.100_136 - _70;
  _Num_138 = _137 /[ex] 8;
  # DEBUG _Num => _Num_138
  if (_Num_138 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  pretmp_59 = (long unsigned int) _137;
  goto <bb 25>;

  <bb 24>:
  _139 = (long unsigned int) _137;
  __builtin_memmove (__new_finish_134, __first_69, _139);

  <bb 25>:
  # prephitmp_60 = PHI <pretmp_59(23), _139(24)>
  _141 = __new_finish_134 + prephitmp_60;
  # DEBUG __new_finish => _141
  # DEBUG D#2058 => &_28->D.66320
  # DEBUG this => D#2058
  # DEBUG D#2070 => _28->D.66320._M_impl._M_finish
  # DEBUG D#2069 => _28->D.66320._M_impl._M_start
  # DEBUG __first => D#2069
  # DEBUG __last => D#2070
  # DEBUG D.119473 => NULL
  # DEBUG D#751 => D#2069
  # DEBUG D#752 => D#2070
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG D#2068 => _28->D.66320._M_impl._M_end_of_storage
  # DEBUG D#2067 => (long int) D#2068
  _142 = _28->D.66320._M_impl._M_start;
  # DEBUG D#2066 => (long int) _142
  # DEBUG D#2065 => D#2067 - D#2066
  # DEBUG D#2064 => D#2065 /[ex] 8
  # DEBUG D#2063 => (long unsigned int) D#2064
  # DEBUG D#2062 => &_28->D.66320
  # DEBUG this => D#2062
  # DEBUG __p => _142
  # DEBUG __n => D#2063
  if (_142 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#1019 => &D#2062->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#2063
  # DEBUG __p => _142
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _142
  # DEBUG this => D#1013
  # DEBUG D.141767 => D#1014
  operator delete (_142);

  <bb 27>:
  _28->D.66320._M_impl._M_start = iftmp.160_170;
  _28->D.66320._M_impl._M_finish = _141;
  _28->D.66320._M_impl._M_end_of_storage = prephitmp_94;
  pretmp_86 = this_4(D)->_lanes;
  goto <bb 30>;

  <bb 28>:
  # DEBUG D#217 => _28
  # DEBUG D#217 => _28
  # DEBUG this => D#217
  # DEBUG this => D#217
  if (_26 < _74)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _76 = _26 * 8;
  _77 = _22 + _76;
  # DEBUG D#756 => _28
  # DEBUG __pos => _77
  # DEBUG D#755 => D#756
  # DEBUG this => D#755
  # DEBUG D#753 => &D#755->D.66320
  # DEBUG this => D#753
  # DEBUG D#754 => D#755->D.66320._M_impl._M_finish
  # DEBUG __first => _77
  # DEBUG __last => D#754
  # DEBUG D.103313 => NULL
  # DEBUG D#751 => _77
  # DEBUG D#752 => D#754
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  MEM[(struct Flit * * *)_28 + 8B] = _77;
  pretmp_81 = this_4(D)->_lanes;

  <bb 30>:
  # prephitmp_87 = PHI <prephitmp_151(28), pretmp_80(12), pretmp_81(29), pretmp_86(27)>
  l_30 = l_194 + 1;
  # DEBUG l => l_30
  # DEBUG l => l_30
  if (l_30 >= prephitmp_87)
    goto <bb 8>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 10>;

<L3>:
  # DEBUG this => &D.66328
  # DEBUG D#1027 => &D.66328.D.66320
  # DEBUG this => D#1027
  # DEBUG D#1030 => D.66328.D.66320._M_impl._M_finish
  # DEBUG D#1029 => D.66328.D.66320._M_impl._M_start
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG D#1028 => &D.66328.D.66320
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _36 = MEM[(struct _Vector_base *)&D.66328]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _36
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _36
  # DEBUG __n => D#1021
  if (_36 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _36
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _36
  # DEBUG this => D#1013
  # DEBUG D.125511 => D#1014
  operator delete (_36);

  <bb 34>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  D.66328 ={v} {CLOBBER};
  resx 3

<L8>:
  goto <bb 37> (<L4>);

<L6>:

<L4>:
  # DEBUG this => D#3314
  # DEBUG D#1035 => &D#3314->D.56873
  # DEBUG this => D#1035
  _171 = MEM[(struct vector *)this_4(D) + 112B].D.56873._M_impl._M_finish;
  __first_172 = MEM[(struct vector *)this_4(D) + 112B].D.56873._M_impl._M_start;
  # DEBUG __first => __first_172
  # DEBUG __last => _171
  # DEBUG __first => __first_172
  if (_171 == __first_172)
    goto <bb 44>;
  else
    goto <bb 38>;

  <bb 38>:

  <bb 39>:
  # __first_96 = PHI <__first_172(38), __first_175(42)>
  # DEBUG __first => __first_96
  # DEBUG __r => __first_96
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1027
  # DEBUG __first => D#1029
  # DEBUG __last => D#1030
  # DEBUG D.106193 => NULL
  # DEBUG D#751 => D#1029
  # DEBUG D#752 => D#1030
  # DEBUG __first => D#751
  # DEBUG __last => D#752
  # DEBUG D#750 => D#752
  # DEBUG D#749 => D#751
  # DEBUG D#747 => D#749
  # DEBUG D#748 => D#750
  # DEBUG D.103297 => D#747
  # DEBUG D.103296 => D#748
  # DEBUG this => D#1028
  # DEBUG D#1026 => D#1028->_M_impl._M_end_of_storage
  # DEBUG D#1025 => (long int) D#1026
  _174 = MEM[(struct _Vector_base *)__first_96]._M_impl._M_start;
  # DEBUG D#1024 => (long int) _174
  # DEBUG D#1023 => D#1025 - D#1024
  # DEBUG D#1022 => D#1023 /[ex] 8
  # DEBUG D#1021 => (long unsigned int) D#1022
  # DEBUG this => D#1028
  # DEBUG __p => _174
  # DEBUG __n => D#1021
  if (_174 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG D#1019 => &D#1028->_M_impl
  # DEBUG D#1017 => D#1019
  # DEBUG D#1018 => D#1021
  # DEBUG __p => _174
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _174
  # DEBUG this => D#1013
  # DEBUG D.141827 => D#1014
  operator delete (_174);

  <bb 41>:
  # DEBUG D#1020 => &D#1028->_M_impl
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  # DEBUG this => D#1020
  MEM[(struct  &)__first_96] ={v} {CLOBBER};
  __first_175 = __first_96 + 24;
  # DEBUG __first => __first_175
  # DEBUG __first => __first_175
  if (_171 == __first_175)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 39>;

  <bb 43>:
  pretmp_184 = MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start;

  <bb 44>:
  # prephitmp_111 = PHI <pretmp_184(43), __first_172(37)>
  # DEBUG D#1036 => &D#3314->D.56873
  # DEBUG this => D#1036
  # DEBUG D#1012 => D#1036->_M_impl._M_end_of_storage
  # DEBUG D#1011 => (long int) D#1012
  # DEBUG D#3311 => MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start
  # DEBUG D#1010 => (long int) D#3311
  # DEBUG D#1009 => D#1011 - D#1010
  # DEBUG D#1008 => D#1009 /[ex] 24
  # DEBUG D#1005 => D#1036
  # DEBUG D#1006 => (long unsigned int) D#1008
  # DEBUG __p => D#3311
  # DEBUG this => D#1005
  # DEBUG __n => D#1006
  # DEBUG D#1004 => D#1006
  # DEBUG D#1003 => D#1005
  if (prephitmp_111 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#1002 => &D#1003->_M_impl
  # DEBUG D#1000 => D#1002
  # DEBUG D#1001 => D#1004
  # DEBUG __p => D#3311
  # DEBUG __a => D#1000
  # DEBUG __n => D#1001
  # DEBUG D#999 => D#1001
  # DEBUG D#998 => D#1000
  # DEBUG D#996 => D#998
  # DEBUG D#997 => D#999
  # DEBUG __p => D#3311
  # DEBUG this => D#996
  # DEBUG D.141841 => D#997
  operator delete (prephitmp_111);

  <bb 46>:
  # DEBUG D#1007 => &D#1036->_M_impl
  # DEBUG this => D#1007
  # DEBUG this => D#1007
  # DEBUG this => D#1007
  MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
  resx 2

<L5>:
  Module::~Module (_5);
  resx 1

  <bb 48>:
  # DEBUG __len => NULL
  # DEBUG this => _28
  # DEBUG D#758 => &_28->D.66320._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#758
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#2072 => _72 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2072
  # DEBUG D#2071 => &_28->D.66320
  # DEBUG D#1565 => D#2071
  # DEBUG __n => __len_166
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (__len_166 != 0)
    goto <bb 49>;
  else
    goto <bb 19>;

  <bb 49>:
  pretmp_61 = __len_166 * 8;
  goto <bb 16>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Credit*, std::allocator<Credit*> >*; _ForwardIterator = std::vector<Credit*, std::allocator<Credit*> >*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIP6CreditSaIS4_EES7_EET0_T_S9_S8_, funcdef_no=4772, decl_uid=80149, cgraph_uid=3121, symbol_order=3122)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<Credit*, std::allocator<Credit*> >*; _ForwardIterator = std::vector<Credit*, std::allocator<Credit*> >*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct tArrivalEvent * * D.141932;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct Credit * * _8;
  void * _12;
  long unsigned int _20;
  struct Credit * * const _27;
  struct Credit * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct Credit * * _36;
  struct Credit * * const _37;
  struct Credit * * const _38;
  long int __last.126_39;
  long int __first.127_40;
  long int _41;
  long unsigned int _43;
  struct Credit * * _45;
  struct tArrivalEvent * * _46;
  struct tArrivalEvent * * iftmp.160_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.119912 => D#12
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#2074 => &MEM[(const struct vector *)__first_71].D.66869
  # DEBUG this => D#2074
  # DEBUG __a => NULL
  _27 = MEM[(struct Credit * * *)__first_71];
  # DEBUG D#219 => __first_71
  _28 = MEM[(struct Credit * * *)__first_71 + 8B];
  # DEBUG D#219 => __first_71
  # DEBUG this => D#219
  # DEBUG this => D#219
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#2076 => &__result_70->D.66869
  # DEBUG this => D#2076
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1597 => &D#2076->_M_impl
  # DEBUG this => D#1597
  # DEBUG __a => NULL
  # DEBUG this => D#1597
  # DEBUG __a => NULL
  # DEBUG this => D#1597
  # DEBUG D.103570 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#2076
  # DEBUG __n => NULL
  # DEBUG D#1595 => D#2076
  # DEBUG __n => _33
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _33
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#1641
  # DEBUG D.141930 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.160_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.160_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.160_47;
  _36 = iftmp.160_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#2075 => &__result_70->D.66869
  # DEBUG this => D#2075
  _37 = MEM[(struct Credit * * *)__first_71 + 8B];
  # DEBUG D#380 => __first_71
  # DEBUG this => D#380
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct Credit * * *)__first_71];
  # DEBUG D#381 => __first_71
  # DEBUG this => D#381
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.141894 => D#2073
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.126_39 = (long int) _37;
  __first.127_40 = (long int) _38;
  _41 = __last.126_39 - __first.127_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.160_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.160_47 + prephitmp_2;
  __result_70->D.66869._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _8
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _8
  # DEBUG __n => D#1087
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _8
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _8
  # DEBUG this => D#1079
  # DEBUG D.119937 => D#1080
  operator delete (_8);

  <bb 25>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Credit*, std::allocator<Credit*> >; _Alloc = std::allocator<std::vector<Credit*, std::allocator<Credit*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Credit*, std::allocator<Credit*> >*, std::vector<std::vector<Credit*, std::allocator<Credit*> >, std::allocator<std::vector<Credit*, std::allocator<Credit*> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Credit*, std::allocator<Credit*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Credit*, std::allocator<Credit*> >] (_ZNSt6vectorIS_IP6CreditSaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_, funcdef_no=3701, decl_uid=57614, cgraph_uid=2050, symbol_order=2051)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<Credit*, std::allocator<Credit*> >; _Alloc = std::allocator<std::vector<Credit*, std::allocator<Credit*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<Credit*, std::allocator<Credit*> >*, std::vector<std::vector<Credit*, std::allocator<Credit*> >, std::allocator<std::vector<Credit*, std::allocator<Credit*> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<Credit*, std::allocator<Credit*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<Credit*, std::allocator<Credit*> >] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.142030;
  const size_type __len;
  size_type D.142029;
  size_type __n;
  struct vector * D.142020;
  struct tArrivalEvent * * D.142011;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  bool _18;
  struct vector * _20;
  struct vector * const _23;
  long int __last.129_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long unsigned int _55;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  struct vector * _67;
  long unsigned int _70;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct vector * _82;
  struct Credit * * const prephitmp_83;
  struct Credit * * _85;
  long unsigned int prephitmp_89;
  struct vector * _91;
  struct Credit * * _92;
  struct Credit * * _94;
  struct Credit * * _95;
  struct Credit * * _98;
  const ptrdiff_t pretmp_100;
  long int pretmp_101;
  struct Credit * * const pretmp_103;
  long unsigned int pretmp_116;
  long unsigned int prephitmp_117;
  struct vector * const pretmp_118;
  struct vector * const prephitmp_119;
  long int pretmp_142;
  long int prephitmp_143;
  long unsigned int pretmp_144;
  long unsigned int prephitmp_145;
  struct Credit * * const pretmp_146;
  long unsigned int prephitmp_150;
  struct vector * pretmp_151;
  struct vector * prephitmp_152;
  struct Credit * * const _153;
  struct Credit * * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  struct Credit * * _162;
  struct Credit * * _171;
  struct tArrivalEvent * * _172;
  struct tArrivalEvent * * iftmp.160_173;
  struct vector * _175;
  long unsigned int _177;
  long int _178;
  long int _179;
  long int _180;
  long int _181;
  long unsigned int _183;
  const ptrdiff_t prephitmp_185;
  long unsigned int pretmp_186;
  long int _214;
  long int _215;
  bool _219;
  long int _220;
  difference_type _224;
  long int _226;
  difference_type _227;
  long int _228;
  bool _231;
  long int pretmp_235;
  long int pretmp_236;

  <bb 2>:
  # DEBUG D#3330 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3330
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 58>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.57691._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.57691._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 38>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#2074 => &MEM[(const struct vector *)__x_28(D)].D.66869
  # DEBUG this => D#2074
  # DEBUG __a => NULL
  _153 = MEM[(struct Credit * * *)__x_28(D)];
  # DEBUG D#219 => __x_28(D)
  _154 = MEM[(struct Credit * * *)__x_28(D) + 8B];
  # DEBUG D#219 => __x_28(D)
  # DEBUG this => D#219
  # DEBUG this => D#219
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 8;
  _159 = (size_type) _158;
  # DEBUG D#2076 => &__x_copy.D.66869
  # DEBUG this => D#2076
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1597 => &D#2076->_M_impl
  # DEBUG this => D#1597
  # DEBUG __a => NULL
  # DEBUG this => D#1597
  # DEBUG __a => NULL
  # DEBUG this => D#1597
  # DEBUG D.103570 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#2076
  # DEBUG __n => NULL
  # DEBUG D#1595 => D#2076
  # DEBUG __n => _159
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_144 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _159
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#1641
  # DEBUG D.142009 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_159 > 2305843009213693951)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_118 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_142 = (long int) pretmp_118;
  pretmp_146 = MEM[(struct Credit * * *)__x_28(D) + 8B];
  pretmp_103 = MEM[(struct Credit * * *)__x_28(D)];
  pretmp_101 = (long int) pretmp_146;
  pretmp_236 = (long int) pretmp_103;
  pretmp_235 = pretmp_101 - pretmp_236;
  pretmp_100 = pretmp_235 /[ex] 8;
  pretmp_186 = (long unsigned int) pretmp_235;

  <bb 9>:
  # iftmp.160_173 = PHI <0B(5), _172(8)>
  # prephitmp_119 = PHI <_12(5), pretmp_118(8)>
  # prephitmp_143 = PHI <_13(5), pretmp_142(8)>
  # prephitmp_145 = PHI <pretmp_144(5), _55(8)>
  # prephitmp_83 = PHI <_153(5), pretmp_103(8)>
  # prephitmp_185 = PHI <_158(5), pretmp_100(8)>
  # prephitmp_89 = PHI <pretmp_144(5), pretmp_186(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.160_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.160_173;
  _162 = iftmp.160_173 + prephitmp_145;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#2075 => &__x_copy.D.66869
  # DEBUG this => D#2075
  # DEBUG D#3328 => MEM[(struct Credit * * *)__x_28(D) + 8B]
  # DEBUG D#380 => __x_28(D)
  # DEBUG this => D#380
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#3327 => MEM[(struct Credit * * *)__x_28(D)]
  # DEBUG D#381 => __x_28(D)
  # DEBUG this => D#381
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#3327
  # DEBUG __last => D#3328
  # DEBUG __result => NULL
  # DEBUG D.141973 => D#2073
  # DEBUG __first => D#3327
  # DEBUG __last => D#3328
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3327
  # DEBUG __last => D#3328
  # DEBUG __result => NULL
  # DEBUG __first => D#3327
  # DEBUG __last => D#3328
  # DEBUG __result => NULL
  # DEBUG __it => D#3328
  # DEBUG __it$_M_current => D#3328
  # DEBUG __it => D#3327
  # DEBUG __it$_M_current => D#3327
  # DEBUG __first => D#3327
  # DEBUG __last => D#3328
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3328
  # DEBUG __it => D#3328
  # DEBUG this => NULL
  # DEBUG __it => D#3327
  # DEBUG __it => D#3327
  # DEBUG this => NULL
  # DEBUG __first => D#3327
  # DEBUG __last => D#3328
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3327
  # DEBUG __last => D#3328
  # DEBUG __result => NULL
  # DEBUG D#3326 => (long int) D#3328
  # DEBUG D#3325 => (long int) D#3327
  # DEBUG D#3324 => D#3326 - D#3325
  # DEBUG _Num => D#3324 /[ex] 8
  if (prephitmp_185 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.160_173, prephitmp_83, prephitmp_89);

  <bb 11>:
  _171 = iftmp.160_173 + prephitmp_89;
  __x_copy.D.66869._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#382 => &this_9(D)->D.57691._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#382
  # DEBUG D#3323 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.75674
  # DEBUG __rhs => &__position
  # DEBUG this => &D.75674
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_143 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#3323
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  # DEBUG D#2348 => &this_9(D)->D.57691
  # DEBUG this => D#2348
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_119 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#3323
  # DEBUG __result => D#3323
  # DEBUG __alloc => D#2079
  # DEBUG D#2078 => D#2079
  # DEBUG D#2077 => D#2078
  # DEBUG __first => __last_61
  # DEBUG __last => D#3323
  # DEBUG __result => D#3323
  # DEBUG D.125817 => D#2077
  # DEBUG __first => __last_61
  # DEBUG __last => D#3323
  # DEBUG __result => D#3323
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Credit*, std::allocator<Credit*> >*, std::vector<Credit*, std::allocator<Credit*> >*> (__last_61, prephitmp_119, prephitmp_119);

  <bb 13>:
  _62 = this_9(D)->D.57691._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.57691._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3330
  # DEBUG __last => __last_61
  # DEBUG __result => D#3323
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3330
  # DEBUG __it => D#3330
  # DEBUG __first => D#3330
  # DEBUG __last => __last_61
  # DEBUG __result => D#3323
  # DEBUG __it => D#3323
  # DEBUG __it => D#3323
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3330
  # DEBUG __it => D#3330
  # DEBUG __first => D#3330
  # DEBUG __last => __last_61
  # DEBUG __result => D#3323
  # DEBUG __simple => 0
  # DEBUG __first => D#3330
  # DEBUG __last => __last_61
  # DEBUG __result => D#3323
  __last.129_25 = (long int) __last_61;
  _78 = __last.129_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#3323
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3330
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3330
  if (__position_22 == _67)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 15>:

  <bb 16>:
  # __old_finish_87 = PHI <prephitmp_119(15), __old_finish_65(19)>
  # __last_211 = PHI <__last_61(15), __last_68(19)>
  # __n_19 = PHI <__n_73(15), __n_58(19)>
  # DEBUG __n => __n_19
  # DEBUG __result => __old_finish_87
  # DEBUG __last => __last_211
  __last_68 = __last_211 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_87 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<Credit*, std::allocator<Credit*> >::operator= (__old_finish_65, __last_68);
  goto <bb 18>;

<L20>:
  goto <bb 60> (<L10>);

  <bb 18>:
  __n_58 = __n_19 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 16>;

  <bb 20>:
  # DEBUG this => &__x_copy
  # DEBUG D#1093 => &__x_copy.D.66869
  # DEBUG this => D#1093
  # DEBUG D#1096 => __x_copy.D.66869._M_impl._M_finish
  # DEBUG D#1095 => __x_copy.D.66869._M_impl._M_start
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG D#1094 => &__x_copy.D.66869
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _85
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _85
  # DEBUG __n => D#1087
  if (_85 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 21>:

  <bb 22>:
  # __position_90 = PHI <__position_22(21), __position_81(25)>
  # DEBUG __first => __position_90
  std::vector<Credit*, std::allocator<Credit*> >::operator= (__position_90, &__x_copy);
  goto <bb 24>;

<L21>:
  goto <bb 60> (<L10>);

  <bb 24>:
  __position_81 = __position_90 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 22>;

  <bb 26>:
  # DEBUG D#2349 => &this_9(D)->D.57691
  # DEBUG this => D#2349
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#3323
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.125863 => D#2082
  # DEBUG __first => D#3323
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _82 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<Credit*, std::allocator<Credit*> >*, long unsigned int, std::vector<Credit*, std::allocator<Credit*> > > (prephitmp_119, _70, &__x_copy);
  goto <bb 28>;

<L22>:
  goto <bb 60> (<L10>);

  <bb 28>:
  this_9(D)->D.57691._M_impl._M_finish = _82;
  # DEBUG D#2350 => &this_9(D)->D.57691
  # DEBUG this => D#2350
  # DEBUG this => &__position
  # DEBUG __first => D#3330
  # DEBUG __last => D#3323
  # DEBUG __result => _82
  # DEBUG __alloc => D#2079
  # DEBUG D#2078 => D#2079
  # DEBUG D#2077 => D#2078
  # DEBUG __first => D#3330
  # DEBUG __last => D#3323
  # DEBUG __result => _82
  # DEBUG D.125876 => D#2077
  # DEBUG __first => D#3330
  # DEBUG __last => D#3323
  # DEBUG __result => _82
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<Credit*, std::allocator<Credit*> >*, std::vector<Credit*, std::allocator<Credit*> >*> (__position_22, prephitmp_119, _82);
  goto <bb 30>;

<L23>:
  goto <bb 60> (<L10>);

  <bb 30>:
  _74 = this_9(D)->D.57691._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.57691._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3330
  # DEBUG __last => D#3323
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3330
  if (__position_22 == prephitmp_119)
    goto <bb 20>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # __position_222 = PHI <__position_22(31), __position_84(35)>
  # DEBUG __first => __position_222
  std::vector<Credit*, std::allocator<Credit*> >::operator= (__position_222, &__x_copy);
  goto <bb 34>;

<L24>:
  goto <bb 60> (<L10>);

  <bb 34>:
  __position_84 = __position_222 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_119)
    goto <bb 20>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 32>;

  <bb 36>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _85
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _85
  # DEBUG this => D#1079
  # DEBUG D.125909 => D#1080
  operator delete (_85);

  <bb 37>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  __x_copy ={v} {CLOBBER};
  goto <bb 58>;

  <bb 38>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1773 => this_9(D)
  # DEBUG this => D#1773
  # DEBUG D#1772 => D#1773
  # DEBUG D#1771 => &D#1772->D.58509
  # DEBUG this => D#1771
  # DEBUG __a => D#1770
  # DEBUG D#1769 => D#1770
  # DEBUG D#1768 => D#1769
  # DEBUG this => D#1768
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  _179 = (long int) _23;
  _180 = _13 - _179;
  _181 = _180 /[ex] 24;
  _182 = (const long unsigned int) _181;
  _183 = 768614336404564650 - _182;
  if (__n_7(D) > _183)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 40>:
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG __a => &D.142030
  # DEBUG __b => &__n
  _177 = MAX_EXPR <__n_7(D), _182>;
  __len_187 = _177 + _182;
  # DEBUG __len => __len_187
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG D#1773 => this_9(D)
  # DEBUG this => D#1773
  # DEBUG D#1772 => D#1773
  # DEBUG D#1771 => &D#1772->D.58509
  # DEBUG this => D#1771
  # DEBUG __a => D#1770
  # DEBUG D#1769 => D#1770
  # DEBUG D#1768 => D#1769
  # DEBUG this => D#1768
  _219 = __len_187 > 768614336404564650;
  _231 = _182 > __len_187;
  _18 = _219 | _231;
  if (_18 != 0)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 41>:
  pretmp_116 = __len_187 * 24;

  <bb 42>:
  # __elems_before_196 = PHI <__elems_before_225(79), __elems_before_213(41)>
  # _214 = PHI <_226(79), _178(41)>
  # prephitmp_117 = PHI <18446744073709551600(79), pretmp_116(41)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#769 => &this_9(D)->D.57691._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#769
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75707
  # DEBUG this => &__position
  # DEBUG this => &D.75707
  # DEBUG __elems_before => __elems_before_196
  # DEBUG D#2360 => &this_9(D)->D.57691
  # DEBUG D#1766 => D#2360
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  # DEBUG D#1779 => &D#1780->_M_impl
  # DEBUG D#1778 => D#1779
  # DEBUG __n => NULL
  # DEBUG __a => D#1778
  # DEBUG D#1777 => D#1778
  # DEBUG D#1775 => D#1777
  # DEBUG D#1776 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1775
  # DEBUG D.142018 => D#1776
  # DEBUG D#1774 => D#1775
  # DEBUG D#1768 => D#1774
  # DEBUG this => D#1768
  _175 = operator new (prephitmp_117);

  <bb 43>:
  # __new_finish_176 = PHI <0B(80), _175(42)>
  # __elems_before_223 = PHI <__elems_before_213(80), __elems_before_196(42)>
  # _215 = PHI <_178(80), _214(42)>
  # prephitmp_150 = PHI <0(80), prephitmp_117(42)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2344 => &this_9(D)->D.57691
  # DEBUG this => D#2344
  _26 = (long unsigned int) _215;
  __first_27 = __new_finish_176 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.125917 => D#2082
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<Credit*, std::allocator<Credit*> >*, long unsigned int, std::vector<Credit*, std::allocator<Credit*> > > (__first_27, __n_7(D), __x_28(D));

  <bb 44>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2345 => &this_9(D)->D.57691
  # DEBUG this => D#2345
  # DEBUG this => &__position
  _31 = this_9(D)->D.57691._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#3330
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2081
  # DEBUG D#2080 => D#2081
  # DEBUG D#2077 => D#2080
  # DEBUG __first => _31
  # DEBUG __last => D#3330
  # DEBUG __result => NULL
  # DEBUG D.125938 => D#2077
  # DEBUG __first => _31
  # DEBUG __last => D#3330
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Credit*, std::allocator<Credit*> >*, std::vector<Credit*, std::allocator<Credit*> >*> (_31, __position_22, __new_finish_176);
  goto <bb 46>;

<L26>:
  goto <bb 64> (<L13>);

  <bb 46>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2346 => &this_9(D)->D.57691
  # DEBUG this => D#2346
  _35 = this_9(D)->D.57691._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3330
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#2081
  # DEBUG D#2080 => D#2081
  # DEBUG D#2077 => D#2080
  # DEBUG __first => D#3330
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.125957 => D#2077
  # DEBUG __first => D#3330
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<Credit*, std::allocator<Credit*> >*, std::vector<Credit*, std::allocator<Credit*> >*> (__position_22, _35, __new_finish_33);
  goto <bb 48>;

<L27>:
  goto <bb 64> (<L13>);

  <bb 48>:
  # DEBUG __new_finish => _91
  # DEBUG D#2347 => &this_9(D)->D.57691
  # DEBUG this => D#2347
  _37 = this_9(D)->D.57691._M_impl._M_finish;
  __first_38 = this_9(D)->D.57691._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 55>;
  else
    goto <bb 49>;

  <bb 49>:

  <bb 50>:
  # __first_232 = PHI <__first_38(49), __first_93(53)>
  # DEBUG __first => __first_232
  # DEBUG __r => __first_232
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _92 = MEM[(struct _Vector_base *)__first_232]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _92
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _92
  # DEBUG __n => D#1087
  if (_92 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _92
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _92
  # DEBUG this => D#1079
  # DEBUG D.126001 => D#1080
  operator delete (_92);

  <bb 52>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__first_232] ={v} {CLOBBER};
  __first_93 = __first_232 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 54>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 50>;

  <bb 54>:
  pretmp_151 = this_9(D)->D.57691._M_impl._M_start;

  <bb 55>:
  # prephitmp_152 = PHI <pretmp_151(54), __first_38(48)>
  # DEBUG D#2358 => this_9(D)->D.57691._M_impl._M_end_of_storage
  # DEBUG D#2357 => (long int) D#2358
  # DEBUG D#3329 => this_9(D)->D.57691._M_impl._M_start
  # DEBUG D#2356 => (long int) D#3329
  # DEBUG D#2355 => D#2357 - D#2356
  # DEBUG D#2354 => D#2355 /[ex] 24
  # DEBUG D#2353 => &this_9(D)->D.57691
  # DEBUG D#1071 => D#2353
  # DEBUG D#1072 => (long unsigned int) D#2354
  # DEBUG __p => D#3329
  # DEBUG this => D#1071
  # DEBUG __n => D#1072
  # DEBUG D#1070 => D#1072
  # DEBUG D#1069 => D#1071
  if (prephitmp_152 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#1068 => &D#1069->_M_impl
  # DEBUG D#1066 => D#1068
  # DEBUG D#1067 => D#1070
  # DEBUG __p => D#3329
  # DEBUG __a => D#1066
  # DEBUG __n => D#1067
  # DEBUG D#1065 => D#1067
  # DEBUG D#1064 => D#1066
  # DEBUG D#1062 => D#1064
  # DEBUG D#1063 => D#1065
  # DEBUG __p => D#3329
  # DEBUG this => D#1062
  # DEBUG D.125980 => D#1063
  operator delete (prephitmp_152);

  <bb 57>:
  this_9(D)->D.57691._M_impl._M_start = __new_finish_176;
  this_9(D)->D.57691._M_impl._M_finish = _91;
  _44 = __new_finish_176 + prephitmp_150;
  this_9(D)->D.57691._M_impl._M_end_of_storage = _44;

  <bb 58>:
  return;

<L19>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1093 => &__x_copy.D.66869
  # DEBUG this => D#1093
  # DEBUG D#1096 => __x_copy.D.66869._M_impl._M_finish
  # DEBUG D#1095 => __x_copy.D.66869._M_impl._M_start
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG D#1094 => &__x_copy.D.66869
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _94
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _94
  # DEBUG __n => D#1087
  if (_94 != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _94
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _94
  # DEBUG this => D#1079
  # DEBUG D.126018 => D#1080
  operator delete (_94);

  <bb 62>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  resx 2

<L25>:

  # __new_finish_1 = PHI <__new_finish_176(63), 0B(45), __new_finish_33(47)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 66>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 71>;

  <bb 66>:
  # DEBUG D#2351 => &this_9(D)->D.57691
  # DEBUG this => D#2351
  _49 = __n_7(D) + __elems_before_223;
  _50 = _49 * 24;
  _51 = __new_finish_176 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 67>:
  # __first_80 = PHI <__first_27(66), __first_96(70)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 75>;
  else
    goto <bb 68>;

  <bb 68>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _95
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _95
  # DEBUG __n => D#1087
  if (_95 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _95
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _95
  # DEBUG this => D#1079
  # DEBUG D.126042 => D#1080
  operator delete (_95);

  <bb 70>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 67>;

  <bb 71>:
  # __new_finish_97 = PHI <__new_finish_176(65), __new_finish_99(74)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 75>;
  else
    goto <bb 72>;

  <bb 72>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _98
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _98
  # DEBUG __n => D#1087
  if (_98 != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _98
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _98
  # DEBUG this => D#1079
  # DEBUG D.126068 => D#1080
  operator delete (_98);

  <bb 74>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 71>;

  <bb 75>:
  # DEBUG D#2359 => &this_9(D)->D.57691
  # DEBUG D#1071 => D#2359
  # DEBUG __p => NULL
  # DEBUG this => D#1071
  # DEBUG __n => D#1072
  # DEBUG D#1070 => D#1072
  # DEBUG D#1069 => D#1071
  if (__new_finish_176 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG D#1068 => &D#1069->_M_impl
  # DEBUG D#1066 => D#1068
  # DEBUG D#1067 => D#1070
  # DEBUG __p => NULL
  # DEBUG __a => D#1066
  # DEBUG __n => D#1067
  # DEBUG D#1065 => D#1067
  # DEBUG D#1064 => D#1066
  # DEBUG D#1062 => D#1064
  # DEBUG D#1063 => D#1065
  # DEBUG __p => NULL
  # DEBUG this => D#1062
  # DEBUG D.126083 => D#1063
  operator delete (__new_finish_176);

  <bb 77>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 79>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#769 => &this_9(D)->D.57691._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#769
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75707
  # DEBUG this => &__position
  _228 = (long int) __position_22;
  # DEBUG this => &D.75707
  _226 = _228 - _179;
  _227 = _226 /[ex] 24;
  __elems_before_225 = (const size_type) _227;
  # DEBUG __elems_before => __elems_before_225
  # DEBUG D#2360 => &this_9(D)->D.57691
  # DEBUG D#1766 => D#2360
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  goto <bb 42>;

  <bb 80>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#769 => &this_9(D)->D.57691._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#769
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75707
  # DEBUG this => &__position
  _220 = (long int) __position_22;
  # DEBUG this => &D.75707
  _178 = _220 - _179;
  _224 = _178 /[ex] 24;
  __elems_before_213 = (const size_type) _224;
  # DEBUG __elems_before => __elems_before_213
  # DEBUG D#2360 => &this_9(D)->D.57691
  # DEBUG D#1766 => D#2360
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  if (__len_187 != 0)
    goto <bb 41>;
  else
    goto <bb 43>;

}



;; Function PipelineFIFO<T>::PipelineFIFO(Module*, const string&, int, int) [with T = Credit; std::__cxx11::string = std::__cxx11::basic_string<char>] (_ZN12PipelineFIFOI6CreditEC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, funcdef_no=2343, decl_uid=57720, cgraph_uid=692, symbol_order=693)

Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::PipelineFIFO(Module*, const string&, int, int) [with T = Credit; std::__cxx11::string = std::__cxx11::basic_string<char>] (struct PipelineFIFO * const this, struct Module * parent, const struct string & name, int lanes, int depth)
{
  struct vector * __first;
  struct tArrivalEvent * * D.142401;
  const size_type __len;
  const long unsigned int D.142392;
  size_type D.142391;
  size_type __n;
  const ptrdiff_t _Num;
  struct tTransportEvent * * D.142382;
  struct Credit * __x_copy;
  const size_type __elems_after;
  struct Credit * * __new_finish;
  struct Credit * * __first;
  const ptrdiff_t _Num;
  struct Credit * * __first;
  long unsigned int __n;
  struct Credit * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Credit * * __first;
  struct Credit * * const __position;
  struct iterator __position;
  size_type __n;
  struct Credit * __x;
  struct iterator __position;
  struct iterator __position;
  struct vector * __pos;
  int l;
  struct value_type D.66877;
  struct Module * _5;
  int _16;
  long unsigned int _19;
  long unsigned int _20;
  struct vector * _21;
  struct Credit * * const _22;
  int _25;
  long unsigned int _26;
  long unsigned int _27;
  struct vector & _28;
  struct vector * _35;
  struct Credit * * _36;
  long unsigned int _56;
  long unsigned int prephitmp_58;
  long unsigned int pretmp_59;
  long unsigned int prephitmp_60;
  long unsigned int pretmp_61;
  long unsigned int prephitmp_62;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long unsigned int _76;
  struct Credit * * _77;
  struct Credit * * _78;
  long int _79;
  int pretmp_80;
  int pretmp_81;
  long int _82;
  long int _83;
  long unsigned int _84;
  int pretmp_86;
  int prephitmp_87;
  struct Credit * * prephitmp_90;
  bool _91;
  struct tArrivalEvent * * pretmp_92;
  long unsigned int pretmp_93;
  struct tArrivalEvent * * prephitmp_94;
  int _104;
  long unsigned int _105;
  struct Credit * * _106;
  struct vector * prephitmp_111;
  long unsigned int _113;
  struct Credit * * _126;
  long int __first.127_127;
  long int _128;
  long unsigned int _130;
  long unsigned int _133;
  struct Credit * * _135;
  long int __last.126_136;
  long int _137;
  long unsigned int _139;
  struct Credit * * _141;
  struct Credit * * _142;
  sizetype _148;
  int prephitmp_151;
  long unsigned int _162;
  struct tArrivalEvent * * _169;
  struct tArrivalEvent * * iftmp.160_170;
  struct vector * _171;
  struct Credit * * _174;
  struct Credit * * pretmp_182;
  bool _183;
  struct vector * pretmp_184;
  sizetype _199;
  long int _212;
  bool _214;
  long int _216;
  long int _222;
  long unsigned int _241;

  <bb 2>:
  _5 = &this_4(D)->D.57735;
  Module::Module (_5, parent_7(D), name_8(D));
  this_4(D)->D.57735._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOI6CreditE + 16B];
  this_4(D)->_lanes = lanes_11(D);
  this_4(D)->_depth = depth_13(D);
  # DEBUG D#2362 => &this_4(D)->_data
  # DEBUG this => D#2362
  # DEBUG D#1061 => &D#2362->D.57691
  # DEBUG this => D#1061
  # DEBUG D#1060 => &D#1061->_M_impl
  # DEBUG this => D#1060
  # DEBUG this => D#1060
  # DEBUG this => D#1060
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_end_of_storage = 0B;
  _16 = depth_13(D) + 1;
  this_4(D)->_pipe_len = _16;
  this_4(D)->_pipe_ptr = 0;
  # DEBUG this => &D.66877
  # DEBUG D#796 => &D.66877.D.66869
  # DEBUG this => D#796
  # DEBUG D#795 => &D#796->_M_impl
  # DEBUG this => D#795
  # DEBUG this => D#795
  # DEBUG this => D#795
  MEM[(struct _Vector_impl *)&D.66877]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.66877]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.66877]._M_end_of_storage = 0B;
  _20 = (long unsigned int) lanes_11(D);
  # DEBUG D#3342 => &this_4(D)->_data
  # DEBUG this => D#3342
  # DEBUG __new_size => _20
  # DEBUG __x => &D.66877
  # DEBUG D#220 => D#3342
  # DEBUG D#220 => D#3342
  # DEBUG this => D#220
  # DEBUG this => D#220
  if (_20 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#220 => D#3342
  # DEBUG D#220 => D#3342
  # DEBUG this => D#220
  # DEBUG this => D#220
  # DEBUG this => D#3342
  # DEBUG D#382 => &D#3342->D.57691._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#382
  # DEBUG this => D#3342
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _20
  # DEBUG __x => &D.66877
  _21 = &this_4(D)->_data;
  std::vector<std::vector<Credit*, std::allocator<Credit*> >, std::allocator<std::vector<Credit*, std::allocator<Credit*> > > >::_M_fill_insert (_21, __position, _20, &D.66877);

  <bb 4>:
  pretmp_182 = MEM[(struct _Vector_base *)&D.66877]._M_impl._M_start;

  <bb 5>:
  # prephitmp_90 = PHI <0B(2), pretmp_182(4)>
  # DEBUG this => &D.66877
  # DEBUG D#1093 => &D.66877.D.66869
  # DEBUG this => D#1093
  # DEBUG D#1096 => D.66877.D.66869._M_impl._M_finish
  # DEBUG D#1095 => D.66877.D.66869._M_impl._M_start
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG D#1094 => &D.66877.D.66869
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  # DEBUG D#3341 => MEM[(struct _Vector_base *)&D.66877]._M_impl._M_start
  # DEBUG D#1090 => (long int) D#3341
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => D#3341
  # DEBUG __n => D#1087
  if (prephitmp_90 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => D#3341
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => D#3341
  # DEBUG this => D#1079
  # DEBUG D.126164 => D#1080
  operator delete (prephitmp_90);

  <bb 7>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  D.66877 ={v} {CLOBBER};
  # DEBUG l => 0
  # DEBUG l => 0
  _104 = this_4(D)->_lanes;
  if (_104 <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  return;

  <bb 9>:

  <bb 10>:
  # l_194 = PHI <0(9), l_30(31)>
  # prephitmp_151 = PHI <_104(9), prephitmp_87(31)>
  # DEBUG l => l_194
  _25 = this_4(D)->_pipe_len;
  _26 = (long unsigned int) _25;
  _27 = (long unsigned int) l_194;
  # DEBUG D#2361 => &this_4(D)->_data
  _35 = MEM[(struct vector * *)this_4(D) + 112B];
  # DEBUG D#149 => D#2361
  # DEBUG __n => _27
  # DEBUG this => D#149
  _19 = _27 * 24;
  _28 = _35 + _19;
  # DEBUG this => _28
  # DEBUG __new_size => _26
  # DEBUG __x => 0B
  # DEBUG __x => 0B
  _22 = MEM[(struct Credit * * *)_28];
  # DEBUG D#219 => _28
  __first_69 = MEM[(struct Credit * * *)_28 + 8B];
  # DEBUG D#219 => _28
  # DEBUG this => D#219
  # DEBUG this => D#219
  _70 = (long int) __first_69;
  _71 = (long int) _22;
  _72 = _70 - _71;
  _73 = _72 /[ex] 8;
  _74 = (const long unsigned int) _73;
  if (_26 > _74)
    goto <bb 11>;
  else
    goto <bb 28>;

  <bb 11>:
  # DEBUG D#219 => _28
  # DEBUG D#219 => _28
  # DEBUG this => D#219
  # DEBUG this => D#219
  __n_75 = _26 - _74;
  # DEBUG this => _28
  # DEBUG D#383 => &_28->D.66869._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#383
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __x => &__x
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __x => &__x
  # DEBUG __position => __first_69
  _78 = _28->D.66869._M_impl._M_end_of_storage;
  _79 = (long int) _78;
  _82 = _79 - _70;
  _83 = _82 /[ex] 8;
  _84 = (long unsigned int) _83;
  if (__n_75 <= _84)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _199 = __n_75 * 8;
  __builtin_memset (__first_69, 0, _199);
  _241 = __n_75 * 8;
  __first_219 = __first_69 + _241;
  _28->D.66869._M_impl._M_finish = __first_219;
  # DEBUG D#2107 => &_28->D.66869
  # DEBUG this => D#2107
  # DEBUG this => &__position
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __alloc => D#2097
  # DEBUG D#2096 => D#2097
  # DEBUG D#2095 => D#2096
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG D.142177 => D#2095
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __assignable => 1
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __it => __first_219
  # DEBUG __it => __first_219
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __simple => 1
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG _Num => 0
  # DEBUG this => &__position
  # DEBUG D#1434 => &__x_copy
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG D#1433 => D#1434
  # DEBUG __value => D#1433
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG D#1114 => D#1433
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __value => D#1114
  # DEBUG __tmp => 0B
  # DEBUG __first => __first_69
  pretmp_80 = this_4(D)->_lanes;
  goto <bb 30>;

  <bb 13>:
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __n => __n_75
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1669 => _28
  # DEBUG this => D#1669
  # DEBUG D#1668 => D#1669
  # DEBUG D#1667 => &D#1668->D.67418
  # DEBUG this => D#1667
  # DEBUG __a => D#1666
  # DEBUG D#1665 => D#1666
  # DEBUG D#1639 => D#1665
  # DEBUG this => D#1639
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  _162 = 2305843009213693951 - _74;
  if (__n_75 > _162)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 15>:
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.142392
  # DEBUG __b => &__n
  _56 = MAX_EXPR <_74, __n_75>;
  __len_166 = _56 + _74;
  # DEBUG __len => __len_166
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#1669 => _28
  # DEBUG this => D#1669
  # DEBUG D#1668 => D#1669
  # DEBUG D#1667 => &D#1668->D.67418
  # DEBUG this => D#1667
  # DEBUG __a => D#1666
  # DEBUG D#1665 => D#1666
  # DEBUG D#1639 => D#1665
  # DEBUG this => D#1639
  _183 = __len_166 > 2305843009213693951;
  _214 = _74 > __len_166;
  _91 = _183 | _214;
  if (_91 != 0)
    goto <bb 16>;
  else
    goto <bb 48>;

  <bb 16>:
  # prephitmp_62 = PHI <18446744073709551608(15), pretmp_61(49)>
  # DEBUG __len => NULL
  # DEBUG this => _28
  # DEBUG D#770 => &_28->D.66869._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#770
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#2118 => _72 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2118
  # DEBUG D#2117 => &_28->D.66869
  # DEBUG D#1595 => D#2117
  # DEBUG __n => NULL
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => NULL
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1641
  # DEBUG D.142399 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  _169 = operator new (prephitmp_62);
  goto <bb 18>;

<L7>:
  goto <bb 37> (<L4>);

  <bb 18>:
  pretmp_92 = _169 + prephitmp_62;

  <bb 19>:
  # iftmp.160_170 = PHI <0B(48), _169(18)>
  # prephitmp_94 = PHI <0B(48), pretmp_92(18)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2101 => &_28->D.66869
  # DEBUG this => D#2101
  # DEBUG D#3344 => (long unsigned int) _72
  # DEBUG D#3343 => iftmp.160_170 + D#3344
  # DEBUG D#1812 => &__x
  # DEBUG __first => D#3343
  # DEBUG __n => __n_75
  # DEBUG D#1811 => D#1812
  # DEBUG __x => D#1811
  # DEBUG D.142267 => D#1813
  # DEBUG D#1810 => D#1811
  # DEBUG __first => D#3343
  # DEBUG __n => __n_75
  # DEBUG D#1809 => D#1810
  # DEBUG __x => D#1809
  # DEBUG __assignable => 1
  # DEBUG D#1808 => D#1809
  # DEBUG __first => D#3343
  # DEBUG __n => __n_75
  # DEBUG D#1807 => D#1808
  # DEBUG __x => D#1807
  # DEBUG D#1806 => D#1807
  # DEBUG __first => D#3343
  # DEBUG __n => __n_75
  # DEBUG D#1805 => D#1806
  # DEBUG __value => D#1805
  # DEBUG __it => D#3343
  # DEBUG __it => D#3343
  # DEBUG D#1804 => D#1805
  # DEBUG __first => D#3343
  # DEBUG __n => __n_75
  # DEBUG __value => D#1804
  # DEBUG __tmp => 0B
  # DEBUG __niter => __n_75
  # DEBUG __niter => __n_75
  # DEBUG __first => D#3343
  _148 = __n_75 * 8;
  _216 = (long int) __first_69;
  _222 = (long int) _22;
  _212 = _216 - _222;
  _105 = (long unsigned int) _212;
  _106 = iftmp.160_170 + _105;
  __builtin_memset (_106, 0, _148);
  # DEBUG __new_finish => 0B
  # DEBUG D#2102 => &_28->D.66869
  # DEBUG this => D#2102
  # DEBUG this => &__position
  _126 = _28->D.66869._M_impl._M_start;
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2099
  # DEBUG D#2098 => D#2099
  # DEBUG D#2095 => D#2098
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG D.142290 => D#2095
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  __first.127_127 = (long int) _126;
  _128 = _70 - __first.127_127;
  _Num_129 = _128 /[ex] 8;
  # DEBUG _Num => _Num_129
  if (_Num_129 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_93 = (long unsigned int) _128;
  goto <bb 22>;

  <bb 21>:
  _130 = (long unsigned int) _128;
  __builtin_memmove (iftmp.160_170, _126, _130);

  <bb 22>:
  # prephitmp_58 = PHI <pretmp_93(20), _130(21)>
  # DEBUG D#3340 => (long unsigned int) _128
  # DEBUG __new_finish => iftmp.160_170 + D#3340
  _133 = __n_75 * 8;
  _113 = prephitmp_58 + _133;
  __new_finish_134 = iftmp.160_170 + _113;
  # DEBUG __new_finish => __new_finish_134
  # DEBUG D#2103 => &_28->D.66869
  # DEBUG this => D#2103
  _135 = _28->D.66869._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __alloc => D#2099
  # DEBUG D#2098 => D#2099
  # DEBUG D#2095 => D#2098
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG D.142324 => D#2095
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __assignable => 1
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __it => _135
  # DEBUG __it => _135
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __it => __new_finish_134
  # DEBUG __it => __new_finish_134
  # DEBUG __it => _135
  # DEBUG __it => _135
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __simple => 1
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  __last.126_136 = (long int) _135;
  _137 = __last.126_136 - _70;
  _Num_138 = _137 /[ex] 8;
  # DEBUG _Num => _Num_138
  if (_Num_138 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  pretmp_59 = (long unsigned int) _137;
  goto <bb 25>;

  <bb 24>:
  _139 = (long unsigned int) _137;
  __builtin_memmove (__new_finish_134, __first_69, _139);

  <bb 25>:
  # prephitmp_60 = PHI <pretmp_59(23), _139(24)>
  _141 = __new_finish_134 + prephitmp_60;
  # DEBUG __new_finish => _141
  # DEBUG D#2104 => &_28->D.66869
  # DEBUG this => D#2104
  # DEBUG D#2116 => _28->D.66869._M_impl._M_finish
  # DEBUG D#2115 => _28->D.66869._M_impl._M_start
  # DEBUG __first => D#2115
  # DEBUG __last => D#2116
  # DEBUG D.120621 => NULL
  # DEBUG D#763 => D#2115
  # DEBUG D#764 => D#2116
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG D#2114 => _28->D.66869._M_impl._M_end_of_storage
  # DEBUG D#2113 => (long int) D#2114
  _142 = _28->D.66869._M_impl._M_start;
  # DEBUG D#2112 => (long int) _142
  # DEBUG D#2111 => D#2113 - D#2112
  # DEBUG D#2110 => D#2111 /[ex] 8
  # DEBUG D#2109 => (long unsigned int) D#2110
  # DEBUG D#2108 => &_28->D.66869
  # DEBUG this => D#2108
  # DEBUG __p => _142
  # DEBUG __n => D#2109
  if (_142 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#1085 => &D#2108->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#2109
  # DEBUG __p => _142
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _142
  # DEBUG this => D#1079
  # DEBUG D.142362 => D#1080
  operator delete (_142);

  <bb 27>:
  _28->D.66869._M_impl._M_start = iftmp.160_170;
  _28->D.66869._M_impl._M_finish = _141;
  _28->D.66869._M_impl._M_end_of_storage = prephitmp_94;
  pretmp_86 = this_4(D)->_lanes;
  goto <bb 30>;

  <bb 28>:
  # DEBUG D#219 => _28
  # DEBUG D#219 => _28
  # DEBUG this => D#219
  # DEBUG this => D#219
  if (_26 < _74)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _76 = _26 * 8;
  _77 = _22 + _76;
  # DEBUG D#768 => _28
  # DEBUG __pos => _77
  # DEBUG D#767 => D#768
  # DEBUG this => D#767
  # DEBUG D#765 => &D#767->D.66869
  # DEBUG this => D#765
  # DEBUG D#766 => D#767->D.66869._M_impl._M_finish
  # DEBUG __first => _77
  # DEBUG __last => D#766
  # DEBUG D.103377 => NULL
  # DEBUG D#763 => _77
  # DEBUG D#764 => D#766
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  MEM[(struct Credit * * *)_28 + 8B] = _77;
  pretmp_81 = this_4(D)->_lanes;

  <bb 30>:
  # prephitmp_87 = PHI <prephitmp_151(28), pretmp_80(12), pretmp_81(29), pretmp_86(27)>
  l_30 = l_194 + 1;
  # DEBUG l => l_30
  # DEBUG l => l_30
  if (l_30 >= prephitmp_87)
    goto <bb 8>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 10>;

<L3>:
  # DEBUG this => &D.66877
  # DEBUG D#1093 => &D.66877.D.66869
  # DEBUG this => D#1093
  # DEBUG D#1096 => D.66877.D.66869._M_impl._M_finish
  # DEBUG D#1095 => D.66877.D.66869._M_impl._M_start
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG D#1094 => &D.66877.D.66869
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _36 = MEM[(struct _Vector_base *)&D.66877]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _36
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _36
  # DEBUG __n => D#1087
  if (_36 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _36
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _36
  # DEBUG this => D#1079
  # DEBUG D.126183 => D#1080
  operator delete (_36);

  <bb 34>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  D.66877 ={v} {CLOBBER};
  resx 3

<L8>:
  goto <bb 37> (<L4>);

<L6>:

<L4>:
  # DEBUG this => D#3342
  # DEBUG D#1101 => &D#3342->D.57691
  # DEBUG this => D#1101
  _171 = MEM[(struct vector *)this_4(D) + 112B].D.57691._M_impl._M_finish;
  __first_172 = MEM[(struct vector *)this_4(D) + 112B].D.57691._M_impl._M_start;
  # DEBUG __first => __first_172
  # DEBUG __last => _171
  # DEBUG __first => __first_172
  if (_171 == __first_172)
    goto <bb 44>;
  else
    goto <bb 38>;

  <bb 38>:

  <bb 39>:
  # __first_96 = PHI <__first_172(38), __first_175(42)>
  # DEBUG __first => __first_96
  # DEBUG __r => __first_96
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1093
  # DEBUG __first => D#1095
  # DEBUG __last => D#1096
  # DEBUG D.106944 => NULL
  # DEBUG D#763 => D#1095
  # DEBUG D#764 => D#1096
  # DEBUG __first => D#763
  # DEBUG __last => D#764
  # DEBUG D#762 => D#764
  # DEBUG D#761 => D#763
  # DEBUG D#759 => D#761
  # DEBUG D#760 => D#762
  # DEBUG D.103361 => D#759
  # DEBUG D.103360 => D#760
  # DEBUG this => D#1094
  # DEBUG D#1092 => D#1094->_M_impl._M_end_of_storage
  # DEBUG D#1091 => (long int) D#1092
  _174 = MEM[(struct _Vector_base *)__first_96]._M_impl._M_start;
  # DEBUG D#1090 => (long int) _174
  # DEBUG D#1089 => D#1091 - D#1090
  # DEBUG D#1088 => D#1089 /[ex] 8
  # DEBUG D#1087 => (long unsigned int) D#1088
  # DEBUG this => D#1094
  # DEBUG __p => _174
  # DEBUG __n => D#1087
  if (_174 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG D#1085 => &D#1094->_M_impl
  # DEBUG D#1083 => D#1085
  # DEBUG D#1084 => D#1087
  # DEBUG __p => _174
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _174
  # DEBUG this => D#1079
  # DEBUG D.142422 => D#1080
  operator delete (_174);

  <bb 41>:
  # DEBUG D#1086 => &D#1094->_M_impl
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  # DEBUG this => D#1086
  MEM[(struct  &)__first_96] ={v} {CLOBBER};
  __first_175 = __first_96 + 24;
  # DEBUG __first => __first_175
  # DEBUG __first => __first_175
  if (_171 == __first_175)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 39>;

  <bb 43>:
  pretmp_184 = MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start;

  <bb 44>:
  # prephitmp_111 = PHI <pretmp_184(43), __first_172(37)>
  # DEBUG D#1102 => &D#3342->D.57691
  # DEBUG this => D#1102
  # DEBUG D#1078 => D#1102->_M_impl._M_end_of_storage
  # DEBUG D#1077 => (long int) D#1078
  # DEBUG D#3339 => MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start
  # DEBUG D#1076 => (long int) D#3339
  # DEBUG D#1075 => D#1077 - D#1076
  # DEBUG D#1074 => D#1075 /[ex] 24
  # DEBUG D#1071 => D#1102
  # DEBUG D#1072 => (long unsigned int) D#1074
  # DEBUG __p => D#3339
  # DEBUG this => D#1071
  # DEBUG __n => D#1072
  # DEBUG D#1070 => D#1072
  # DEBUG D#1069 => D#1071
  if (prephitmp_111 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#1068 => &D#1069->_M_impl
  # DEBUG D#1066 => D#1068
  # DEBUG D#1067 => D#1070
  # DEBUG __p => D#3339
  # DEBUG __a => D#1066
  # DEBUG __n => D#1067
  # DEBUG D#1065 => D#1067
  # DEBUG D#1064 => D#1066
  # DEBUG D#1062 => D#1064
  # DEBUG D#1063 => D#1065
  # DEBUG __p => D#3339
  # DEBUG this => D#1062
  # DEBUG D.142436 => D#1063
  operator delete (prephitmp_111);

  <bb 46>:
  # DEBUG D#1073 => &D#1102->_M_impl
  # DEBUG this => D#1073
  # DEBUG this => D#1073
  # DEBUG this => D#1073
  MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
  resx 2

<L5>:
  Module::~Module (_5);
  resx 1

  <bb 48>:
  # DEBUG __len => NULL
  # DEBUG this => _28
  # DEBUG D#770 => &_28->D.66869._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#770
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#2118 => _72 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2118
  # DEBUG D#2117 => &_28->D.66869
  # DEBUG D#1595 => D#2117
  # DEBUG __n => __len_166
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (__len_166 != 0)
    goto <bb 49>;
  else
    goto <bb 19>;

  <bb 49>:
  pretmp_61 = __len_166 * 8;
  goto <bb 16>;

}



;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*; _ForwardIterator = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIPN11EventRouter13tArrivalEventESaIS5_EES8_EET0_T_SA_S9_, funcdef_no=4787, decl_uid=80282, cgraph_uid=3136, symbol_order=3137)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*; _ForwardIterator = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*; bool _TrivialValueTypes = false] (struct vector * __first, struct vector * __last, struct vector * __result)
{
  struct tArrivalEvent * * D.142526;
  const ptrdiff_t _Num;
  long unsigned int prephitmp_2;
  long unsigned int pretmp_3;
  struct tArrivalEvent * * _8;
  void * _12;
  long unsigned int _20;
  struct tArrivalEvent * * const _27;
  struct tArrivalEvent * * const _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  size_type _33;
  long unsigned int pretmp_34;
  struct tArrivalEvent * * _36;
  struct tArrivalEvent * * const _37;
  struct tArrivalEvent * * const _38;
  long int __last.162_39;
  long int __first.163_40;
  long int _41;
  long unsigned int _43;
  struct tArrivalEvent * * _45;
  struct tArrivalEvent * * _46;
  struct tArrivalEvent * * iftmp.160_47;
  long unsigned int prephitmp_56;

  <bb 2>:
  # DEBUG __cur => __result_4(D)
  # DEBUG __cur => __result_4(D)
  # DEBUG __first => __first_5(D)
  if (__first_5(D) == __last_7(D))
    goto <bb 18>;
  else
    goto <bb 3>;

  <bb 3>:

  <bb 4>:
  # __first_71 = PHI <__first_5(D)(3), __first_10(17)>
  # __result_70 = PHI <__result_4(D)(3), __result_11(17)>
  # DEBUG __cur => __result_70
  # DEBUG __first => __first_71
  # DEBUG __r => __result_70
  # DEBUG __p => NULL
  # DEBUG __value => __first_71
  # DEBUG D#12 => 24
  # DEBUG __p => NULL
  # DEBUG D.121060 => D#12
  if (__result_70 != 0B)
    goto <bb 5>;
  else
    goto <bb 15>;

  <bb 5>:
  # DEBUG this => __result_70
  # DEBUG __x => __first_71
  # DEBUG D#2120 => &MEM[(const struct vector *)__first_71].D.67418
  # DEBUG this => D#2120
  # DEBUG __a => NULL
  _27 = MEM[(struct tArrivalEvent * * *)__first_71];
  # DEBUG D#221 => __first_71
  _28 = MEM[(struct tArrivalEvent * * *)__first_71 + 8B];
  # DEBUG D#221 => __first_71
  # DEBUG this => D#221
  # DEBUG this => D#221
  _29 = (long int) _28;
  _30 = (long int) _27;
  _31 = _29 - _30;
  _32 = _31 /[ex] 8;
  _33 = (size_type) _32;
  # DEBUG D#2122 => &__result_70->D.67418
  # DEBUG this => D#2122
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1649 => &D#2122->_M_impl
  # DEBUG this => D#1649
  # DEBUG __a => NULL
  # DEBUG this => D#1649
  # DEBUG __a => NULL
  # DEBUG this => D#1649
  # DEBUG D.103623 => NULL
  MEM[(struct _Vector_impl *)__result_70]._M_start = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_finish = 0B;
  MEM[(struct _Vector_impl *)__result_70]._M_end_of_storage = 0B;
  # DEBUG this => D#2122
  # DEBUG __n => NULL
  # DEBUG D#1647 => D#2122
  # DEBUG __n => _33
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_33 != 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  pretmp_3 = (long unsigned int) _31;
  goto <bb 11>;

  <bb 7>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _33
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _33
  # DEBUG this => D#1641
  # DEBUG D.142524 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_33 > 2305843009213693951)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # __result_9 = PHI <__result_70(7)>
  std::__throw_bad_alloc ();

  <bb 9>:
  _20 = (long unsigned int) _31;
  _46 = operator new (_20);
  goto <bb 11>;

  # __result_35 = PHI <__result_70(9)>
<L8>:
  goto <bb 20> (<L4>);

  <bb 11>:
  # iftmp.160_47 = PHI <0B(6), _46(9)>
  # prephitmp_56 = PHI <pretmp_3(6), _20(9)>
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_start = iftmp.160_47;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_finish = iftmp.160_47;
  _36 = iftmp.160_47 + prephitmp_56;
  MEM[(struct _Vector_base *)__result_70]._M_impl._M_end_of_storage = _36;
  # DEBUG D#2121 => &__result_70->D.67418
  # DEBUG this => D#2121
  _37 = MEM[(struct tArrivalEvent * * *)__first_71 + 8B];
  # DEBUG D#384 => __first_71
  # DEBUG this => D#384
  # DEBUG this => NULL
  # DEBUG __i => NULL
  _38 = MEM[(struct tArrivalEvent * * *)__first_71];
  # DEBUG D#385 => __first_71
  # DEBUG this => D#385
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG D.142488 => D#2119
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => _37
  # DEBUG __it$_M_current => _37
  # DEBUG __it => _38
  # DEBUG __it$_M_current => _38
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG __it => _37
  # DEBUG this => NULL
  # DEBUG __it => _38
  # DEBUG __it => _38
  # DEBUG this => NULL
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _38
  # DEBUG __last => _37
  # DEBUG __result => NULL
  __last.162_39 = (long int) _37;
  __first.163_40 = (long int) _38;
  _41 = __last.162_39 - __first.163_40;
  _Num_42 = _41 /[ex] 8;
  # DEBUG _Num => _Num_42
  if (_Num_42 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  pretmp_34 = (long unsigned int) _41;
  goto <bb 14>;

  <bb 13>:
  _43 = (long unsigned int) _41;
  __builtin_memmove (iftmp.160_47, _38, _43);

  <bb 14>:
  # prephitmp_2 = PHI <pretmp_34(12), _43(13)>
  _45 = iftmp.160_47 + prephitmp_2;
  __result_70->D.67418._M_impl._M_finish = _45;

  <bb 15>:
  __first_10 = __first_71 + 24;
  # DEBUG __first => __first_10
  __result_11 = __result_70 + 24;
  # DEBUG __cur => __result_11
  # DEBUG __cur => __result_11
  # DEBUG __first => __first_10
  if (__last_7(D) == __first_10)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  # __result_18 = PHI <__result_11(15)>
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # __result_63 = PHI <__result_18(16), __result_4(D)(2)>
  return __result_63;

<L7>:

  # __result_44 = PHI <__result_35(10), __result_9(19)>
<L4>:
  _12 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_12);
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  # DEBUG __last => __result_44
  # DEBUG __first => __result_4(D)
  if (__result_4(D) == __result_44)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  __cxa_rethrow ();

  <bb 22>:

  <bb 23>:
  # __result_64 = PHI <__result_4(D)(22), __result_17(26)>
  # DEBUG __first => __result_64
  # DEBUG __r => __result_64
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _8 = MEM[(struct _Vector_base *)__result_64]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _8
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _8
  # DEBUG __n => D#1142
  if (_8 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _8
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _8
  # DEBUG this => D#1134
  # DEBUG D.121085 => D#1135
  operator delete (_8);

  <bb 25>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__result_64] ={v} {CLOBBER};
  __result_17 = __result_64 + 24;
  # DEBUG __first => __result_17
  # DEBUG __first => __result_17
  if (__result_17 == __result_44)
    goto <bb 21>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 23>;

<L6>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >; _Alloc = std::allocator<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*, std::vector<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >, std::allocator<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >] (_ZNSt6vectorIS_IPN11EventRouter13tArrivalEventESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_, funcdef_no=3730, decl_uid=58432, cgraph_uid=2079, symbol_order=2080)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >; _Alloc = std::allocator<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*, std::vector<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >, std::allocator<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.142624;
  const size_type __len;
  size_type D.142623;
  size_type __n;
  struct vector * D.142614;
  struct tArrivalEvent * * D.142605;
  const ptrdiff_t _Num;
  struct vector * const __position;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  struct vector * __first;
  difference_type __n;
  struct vector * __last;
  struct vector * __new_finish;
  const size_type __elems_before;
  struct vector * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct vector * _10;
  long int _11;
  struct vector * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  bool _18;
  struct vector * _20;
  struct vector * const _23;
  long int __last.165_25;
  long unsigned int _26;
  difference_type _30;
  struct vector * _31;
  long unsigned int _32;
  long int _34;
  struct vector * _35;
  long int _36;
  struct vector * _37;
  struct vector * _44;
  void * _46;
  sizetype _49;
  sizetype _50;
  struct vector * _51;
  long unsigned int _55;
  long unsigned int _59;
  sizetype _60;
  struct vector * _62;
  struct vector * _63;
  struct vector * _67;
  long unsigned int _70;
  struct vector * _74;
  long unsigned int _75;
  struct vector * _76;
  long int _78;
  struct vector * _82;
  struct tArrivalEvent * * const prephitmp_83;
  struct tArrivalEvent * * _85;
  long unsigned int prephitmp_89;
  struct vector * _91;
  struct tArrivalEvent * * _92;
  struct tArrivalEvent * * _94;
  struct tArrivalEvent * * _95;
  struct tArrivalEvent * * _98;
  const ptrdiff_t pretmp_100;
  long int pretmp_101;
  struct tArrivalEvent * * const pretmp_103;
  long unsigned int pretmp_116;
  long unsigned int prephitmp_117;
  struct vector * const pretmp_118;
  struct vector * const prephitmp_119;
  long int pretmp_142;
  long int prephitmp_143;
  long unsigned int pretmp_144;
  long unsigned int prephitmp_145;
  struct tArrivalEvent * * const pretmp_146;
  long unsigned int prephitmp_150;
  struct vector * pretmp_151;
  struct vector * prephitmp_152;
  struct tArrivalEvent * * const _153;
  struct tArrivalEvent * * const _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  size_type _159;
  struct tArrivalEvent * * _162;
  struct tArrivalEvent * * _171;
  struct tArrivalEvent * * _172;
  struct tArrivalEvent * * iftmp.160_173;
  struct vector * _175;
  long unsigned int _177;
  long int _178;
  long int _179;
  long int _180;
  long int _181;
  long unsigned int _183;
  const ptrdiff_t prephitmp_185;
  long unsigned int pretmp_186;
  long int _214;
  long int _215;
  bool _219;
  long int _220;
  difference_type _224;
  long int _226;
  difference_type _227;
  long int _228;
  bool _231;
  long int pretmp_235;
  long int pretmp_236;

  <bb 2>:
  # DEBUG D#3358 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3358
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 58>;

  <bb 3>:
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.58509._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.58509._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 24;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 38>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG __x => __x_28(D)
  # DEBUG D#2120 => &MEM[(const struct vector *)__x_28(D)].D.67418
  # DEBUG this => D#2120
  # DEBUG __a => NULL
  _153 = MEM[(struct tArrivalEvent * * *)__x_28(D)];
  # DEBUG D#221 => __x_28(D)
  _154 = MEM[(struct tArrivalEvent * * *)__x_28(D) + 8B];
  # DEBUG D#221 => __x_28(D)
  # DEBUG this => D#221
  # DEBUG this => D#221
  _155 = (long int) _154;
  _156 = (long int) _153;
  _157 = _155 - _156;
  _158 = _157 /[ex] 8;
  _159 = (size_type) _158;
  # DEBUG D#2122 => &__x_copy.D.67418
  # DEBUG this => D#2122
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#1649 => &D#2122->_M_impl
  # DEBUG this => D#1649
  # DEBUG __a => NULL
  # DEBUG this => D#1649
  # DEBUG __a => NULL
  # DEBUG this => D#1649
  # DEBUG D.103623 => NULL
  MEM[(struct _Vector_impl *)&__x_copy]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__x_copy]._M_end_of_storage = 0B;
  # DEBUG this => D#2122
  # DEBUG __n => NULL
  # DEBUG D#1647 => D#2122
  # DEBUG __n => _159
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_144 = (long unsigned int) _157;
  goto <bb 9>;

  <bb 6>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _159
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _159
  # DEBUG this => D#1641
  # DEBUG D.142603 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_159 > 2305843009213693951)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  std::__throw_bad_alloc ();

  <bb 8>:
  _55 = (long unsigned int) _157;
  _172 = operator new (_55);
  pretmp_118 = MEM[(struct vector * const &)this_9(D) + 8];
  pretmp_142 = (long int) pretmp_118;
  pretmp_146 = MEM[(struct tArrivalEvent * * *)__x_28(D) + 8B];
  pretmp_103 = MEM[(struct tArrivalEvent * * *)__x_28(D)];
  pretmp_101 = (long int) pretmp_146;
  pretmp_236 = (long int) pretmp_103;
  pretmp_235 = pretmp_101 - pretmp_236;
  pretmp_100 = pretmp_235 /[ex] 8;
  pretmp_186 = (long unsigned int) pretmp_235;

  <bb 9>:
  # iftmp.160_173 = PHI <0B(5), _172(8)>
  # prephitmp_119 = PHI <_12(5), pretmp_118(8)>
  # prephitmp_143 = PHI <_13(5), pretmp_142(8)>
  # prephitmp_145 = PHI <pretmp_144(5), _55(8)>
  # prephitmp_83 = PHI <_153(5), pretmp_103(8)>
  # prephitmp_185 = PHI <_158(5), pretmp_100(8)>
  # prephitmp_89 = PHI <pretmp_144(5), pretmp_186(8)>
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start = iftmp.160_173;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_finish = iftmp.160_173;
  _162 = iftmp.160_173 + prephitmp_145;
  MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_end_of_storage = _162;
  # DEBUG D#2121 => &__x_copy.D.67418
  # DEBUG this => D#2121
  # DEBUG D#3356 => MEM[(struct tArrivalEvent * * *)__x_28(D) + 8B]
  # DEBUG D#384 => __x_28(D)
  # DEBUG this => D#384
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#3355 => MEM[(struct tArrivalEvent * * *)__x_28(D)]
  # DEBUG D#385 => __x_28(D)
  # DEBUG this => D#385
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __first => D#3355
  # DEBUG __last => D#3356
  # DEBUG __result => NULL
  # DEBUG D.142567 => D#2119
  # DEBUG __first => D#3355
  # DEBUG __last => D#3356
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3355
  # DEBUG __last => D#3356
  # DEBUG __result => NULL
  # DEBUG __first => D#3355
  # DEBUG __last => D#3356
  # DEBUG __result => NULL
  # DEBUG __it => D#3356
  # DEBUG __it$_M_current => D#3356
  # DEBUG __it => D#3355
  # DEBUG __it$_M_current => D#3355
  # DEBUG __first => D#3355
  # DEBUG __last => D#3356
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3356
  # DEBUG __it => D#3356
  # DEBUG this => NULL
  # DEBUG __it => D#3355
  # DEBUG __it => D#3355
  # DEBUG this => NULL
  # DEBUG __first => D#3355
  # DEBUG __last => D#3356
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3355
  # DEBUG __last => D#3356
  # DEBUG __result => NULL
  # DEBUG D#3354 => (long int) D#3356
  # DEBUG D#3353 => (long int) D#3355
  # DEBUG D#3352 => D#3354 - D#3353
  # DEBUG _Num => D#3352 /[ex] 8
  if (prephitmp_185 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  __builtin_memmove (iftmp.160_173, prephitmp_83, prephitmp_89);

  <bb 11>:
  _171 = iftmp.160_173 + prephitmp_89;
  __x_copy.D.67418._M_impl._M_finish = _171;
  # DEBUG this => this_9(D)
  # DEBUG D#386 => &this_9(D)->D.58509._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#386
  # DEBUG D#3351 => MEM[(struct vector * const &)this_9(D) + 8]
  # DEBUG __lhs => &D.75821
  # DEBUG __rhs => &__position
  # DEBUG this => &D.75821
  # DEBUG this => &__position
  _36 = (long int) __position_22;
  _34 = prephitmp_143 - _36;
  _30 = _34 /[ex] 24;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => D#3351
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 26>;

  <bb 12>:
  # DEBUG D#2381 => &this_9(D)->D.58509
  # DEBUG this => D#2381
  _59 = __n_7(D) * 24;
  _60 = -_59;
  __last_61 = prephitmp_119 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => D#3351
  # DEBUG __result => D#3351
  # DEBUG __alloc => D#2125
  # DEBUG D#2124 => D#2125
  # DEBUG D#2123 => D#2124
  # DEBUG __first => __last_61
  # DEBUG __last => D#3351
  # DEBUG __result => D#3351
  # DEBUG D.126489 => D#2123
  # DEBUG __first => __last_61
  # DEBUG __last => D#3351
  # DEBUG __result => D#3351
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*, std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*> (__last_61, prephitmp_119, prephitmp_119);

  <bb 13>:
  _62 = this_9(D)->D.58509._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.58509._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3358
  # DEBUG __last => __last_61
  # DEBUG __result => D#3351
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3358
  # DEBUG __it => D#3358
  # DEBUG __first => D#3358
  # DEBUG __last => __last_61
  # DEBUG __result => D#3351
  # DEBUG __it => D#3351
  # DEBUG __it => D#3351
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3358
  # DEBUG __it => D#3358
  # DEBUG __first => D#3358
  # DEBUG __last => __last_61
  # DEBUG __result => D#3351
  # DEBUG __simple => 0
  # DEBUG __first => D#3358
  # DEBUG __last => __last_61
  # DEBUG __result => D#3351
  __last.165_25 = (long int) __last_61;
  _78 = __last.165_25 - _36;
  __n_73 = _78 /[ex] 24;
  # DEBUG __n => __n_73
  # DEBUG __n => __n_73
  # DEBUG __result => D#3351
  # DEBUG __last => __last_61
  if (__n_73 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  # DEBUG this => &__position
  _67 = __position_22 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3358
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3358
  if (__position_22 == _67)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 15>:

  <bb 16>:
  # __old_finish_87 = PHI <prephitmp_119(15), __old_finish_65(19)>
  # __last_211 = PHI <__last_61(15), __last_68(19)>
  # __n_19 = PHI <__n_73(15), __n_58(19)>
  # DEBUG __n => __n_19
  # DEBUG __result => __old_finish_87
  # DEBUG __last => __last_211
  __last_68 = __last_211 + 18446744073709551592;
  # DEBUG __last => __last_68
  __old_finish_65 = __old_finish_87 + 18446744073709551592;
  # DEBUG __result => __old_finish_65
  std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::operator= (__old_finish_65, __last_68);
  goto <bb 18>;

<L20>:
  goto <bb 60> (<L10>);

  <bb 18>:
  __n_58 = __n_19 + -1;
  # DEBUG __n => __n_58
  # DEBUG __n => __n_58
  # DEBUG __result => __old_finish_65
  # DEBUG __last => __last_68
  if (__n_58 <= 0)
    goto <bb 14>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 16>;

  <bb 20>:
  # DEBUG this => &__x_copy
  # DEBUG D#1148 => &__x_copy.D.67418
  # DEBUG this => D#1148
  # DEBUG D#1151 => __x_copy.D.67418._M_impl._M_finish
  # DEBUG D#1150 => __x_copy.D.67418._M_impl._M_start
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG D#1149 => &__x_copy.D.67418
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _85 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _85
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _85
  # DEBUG __n => D#1142
  if (_85 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 21>:

  <bb 22>:
  # __position_90 = PHI <__position_22(21), __position_81(25)>
  # DEBUG __first => __position_90
  std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::operator= (__position_90, &__x_copy);
  goto <bb 24>;

<L21>:
  goto <bb 60> (<L10>);

  <bb 24>:
  __position_81 = __position_90 + 24;
  # DEBUG __first => __position_81
  # DEBUG __first => __position_81
  if (_67 == __position_81)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 22>;

  <bb 26>:
  # DEBUG D#2382 => &this_9(D)->D.58509
  # DEBUG this => D#2382
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => D#3351
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.126535 => D#2128
  # DEBUG __first => D#3351
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _82 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*, long unsigned int, std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> > > (prephitmp_119, _70, &__x_copy);
  goto <bb 28>;

<L22>:
  goto <bb 60> (<L10>);

  <bb 28>:
  this_9(D)->D.58509._M_impl._M_finish = _82;
  # DEBUG D#2383 => &this_9(D)->D.58509
  # DEBUG this => D#2383
  # DEBUG this => &__position
  # DEBUG __first => D#3358
  # DEBUG __last => D#3351
  # DEBUG __result => _82
  # DEBUG __alloc => D#2125
  # DEBUG D#2124 => D#2125
  # DEBUG D#2123 => D#2124
  # DEBUG __first => D#3358
  # DEBUG __last => D#3351
  # DEBUG __result => _82
  # DEBUG D.126548 => D#2123
  # DEBUG __first => D#3358
  # DEBUG __last => D#3351
  # DEBUG __result => _82
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*, std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*> (__position_22, prephitmp_119, _82);
  goto <bb 30>;

<L23>:
  goto <bb 60> (<L10>);

  <bb 30>:
  _74 = this_9(D)->D.58509._M_impl._M_finish;
  _75 = (long unsigned int) _34;
  _76 = _74 + _75;
  this_9(D)->D.58509._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3358
  # DEBUG __last => D#3351
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3358
  if (__position_22 == prephitmp_119)
    goto <bb 20>;
  else
    goto <bb 31>;

  <bb 31>:

  <bb 32>:
  # __position_222 = PHI <__position_22(31), __position_84(35)>
  # DEBUG __first => __position_222
  std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::operator= (__position_222, &__x_copy);
  goto <bb 34>;

<L24>:
  goto <bb 60> (<L10>);

  <bb 34>:
  __position_84 = __position_222 + 24;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (__position_84 == prephitmp_119)
    goto <bb 20>;
  else
    goto <bb 35>;

  <bb 35>:
  goto <bb 32>;

  <bb 36>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _85
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _85
  # DEBUG this => D#1134
  # DEBUG D.126581 => D#1135
  operator delete (_85);

  <bb 37>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  __x_copy ={v} {CLOBBER};
  goto <bb 58>;

  <bb 38>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1773 => this_9(D)
  # DEBUG this => D#1773
  # DEBUG D#1772 => D#1773
  # DEBUG D#1771 => &D#1772->D.58509
  # DEBUG this => D#1771
  # DEBUG __a => D#1770
  # DEBUG D#1769 => D#1770
  # DEBUG D#1768 => D#1769
  # DEBUG this => D#1768
  _23 = MEM[(struct vector * *)this_9(D)];
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  _179 = (long int) _23;
  _180 = _13 - _179;
  _181 = _180 /[ex] 24;
  _182 = (const long unsigned int) _181;
  _183 = 768614336404564650 - _182;
  if (__n_7(D) > _183)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 40>:
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG __a => &D.142624
  # DEBUG __b => &__n
  _177 = MAX_EXPR <__n_7(D), _182>;
  __len_187 = _177 + _182;
  # DEBUG __len => __len_187
  # DEBUG D#222 => this_9(D)
  # DEBUG D#222 => this_9(D)
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG D#1773 => this_9(D)
  # DEBUG this => D#1773
  # DEBUG D#1772 => D#1773
  # DEBUG D#1771 => &D#1772->D.58509
  # DEBUG this => D#1771
  # DEBUG __a => D#1770
  # DEBUG D#1769 => D#1770
  # DEBUG D#1768 => D#1769
  # DEBUG this => D#1768
  _219 = __len_187 > 768614336404564650;
  _231 = _182 > __len_187;
  _18 = _219 | _231;
  if (_18 != 0)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 41>:
  pretmp_116 = __len_187 * 24;

  <bb 42>:
  # __elems_before_196 = PHI <__elems_before_225(79), __elems_before_213(41)>
  # _214 = PHI <_226(79), _178(41)>
  # prephitmp_117 = PHI <18446744073709551600(79), pretmp_116(41)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#781 => &this_9(D)->D.58509._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#781
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75854
  # DEBUG this => &__position
  # DEBUG this => &D.75854
  # DEBUG __elems_before => __elems_before_196
  # DEBUG D#2393 => &this_9(D)->D.58509
  # DEBUG D#1781 => D#2393
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  # DEBUG D#1779 => &D#1780->_M_impl
  # DEBUG D#1778 => D#1779
  # DEBUG __n => NULL
  # DEBUG __a => D#1778
  # DEBUG D#1777 => D#1778
  # DEBUG D#1775 => D#1777
  # DEBUG D#1776 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1775
  # DEBUG D.142612 => D#1776
  # DEBUG D#1774 => D#1775
  # DEBUG D#1768 => D#1774
  # DEBUG this => D#1768
  _175 = operator new (prephitmp_117);

  <bb 43>:
  # __new_finish_176 = PHI <0B(80), _175(42)>
  # __elems_before_223 = PHI <__elems_before_213(80), __elems_before_196(42)>
  # _215 = PHI <_178(80), _214(42)>
  # prephitmp_150 = PHI <0(80), prephitmp_117(42)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2377 => &this_9(D)->D.58509
  # DEBUG this => D#2377
  _26 = (long unsigned int) _215;
  __first_27 = __new_finish_176 + _26;
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG D.126589 => D#2128
  # DEBUG __first => __first_27
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_28(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*, long unsigned int, std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> > > (__first_27, __n_7(D), __x_28(D));

  <bb 44>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2378 => &this_9(D)->D.58509
  # DEBUG this => D#2378
  # DEBUG this => &__position
  _31 = this_9(D)->D.58509._M_impl._M_start;
  # DEBUG __first => _31
  # DEBUG __last => D#3358
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2127
  # DEBUG D#2126 => D#2127
  # DEBUG D#2123 => D#2126
  # DEBUG __first => _31
  # DEBUG __last => D#3358
  # DEBUG __result => NULL
  # DEBUG D.126610 => D#2123
  # DEBUG __first => _31
  # DEBUG __last => D#3358
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*, std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*> (_31, __position_22, __new_finish_176);
  goto <bb 46>;

<L26>:
  goto <bb 64> (<L13>);

  <bb 46>:
  # DEBUG __new_finish => _20
  _32 = __n_7(D) * 24;
  __new_finish_33 = _20 + _32;
  # DEBUG __new_finish => __new_finish_33
  # DEBUG D#2379 => &this_9(D)->D.58509
  # DEBUG this => D#2379
  _35 = this_9(D)->D.58509._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3358
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __alloc => D#2127
  # DEBUG D#2126 => D#2127
  # DEBUG D#2123 => D#2126
  # DEBUG __first => D#3358
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG D.126629 => D#2123
  # DEBUG __first => D#3358
  # DEBUG __last => _35
  # DEBUG __result => __new_finish_33
  # DEBUG __assignable => 1
  _91 = std::__uninitialized_copy<false>::__uninit_copy<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*, std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >*> (__position_22, _35, __new_finish_33);
  goto <bb 48>;

<L27>:
  goto <bb 64> (<L13>);

  <bb 48>:
  # DEBUG __new_finish => _91
  # DEBUG D#2380 => &this_9(D)->D.58509
  # DEBUG this => D#2380
  _37 = this_9(D)->D.58509._M_impl._M_finish;
  __first_38 = this_9(D)->D.58509._M_impl._M_start;
  # DEBUG __first => __first_38
  # DEBUG __last => _37
  # DEBUG __first => __first_38
  if (_37 == __first_38)
    goto <bb 55>;
  else
    goto <bb 49>;

  <bb 49>:

  <bb 50>:
  # __first_232 = PHI <__first_38(49), __first_93(53)>
  # DEBUG __first => __first_232
  # DEBUG __r => __first_232
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _92 = MEM[(struct _Vector_base *)__first_232]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _92
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _92
  # DEBUG __n => D#1142
  if (_92 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _92
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _92
  # DEBUG this => D#1134
  # DEBUG D.126673 => D#1135
  operator delete (_92);

  <bb 52>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__first_232] ={v} {CLOBBER};
  __first_93 = __first_232 + 24;
  # DEBUG __first => __first_93
  # DEBUG __first => __first_93
  if (_37 == __first_93)
    goto <bb 54>;
  else
    goto <bb 53>;

  <bb 53>:
  goto <bb 50>;

  <bb 54>:
  pretmp_151 = this_9(D)->D.58509._M_impl._M_start;

  <bb 55>:
  # prephitmp_152 = PHI <pretmp_151(54), __first_38(48)>
  # DEBUG D#2391 => this_9(D)->D.58509._M_impl._M_end_of_storage
  # DEBUG D#2390 => (long int) D#2391
  # DEBUG D#3357 => this_9(D)->D.58509._M_impl._M_start
  # DEBUG D#2389 => (long int) D#3357
  # DEBUG D#2388 => D#2390 - D#2389
  # DEBUG D#2387 => D#2388 /[ex] 24
  # DEBUG D#2386 => &this_9(D)->D.58509
  # DEBUG D#1126 => D#2386
  # DEBUG D#1127 => (long unsigned int) D#2387
  # DEBUG __p => D#3357
  # DEBUG this => D#1126
  # DEBUG __n => D#1127
  # DEBUG D#1125 => D#1127
  # DEBUG D#1124 => D#1126
  if (prephitmp_152 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # DEBUG D#1123 => &D#1124->_M_impl
  # DEBUG D#1121 => D#1123
  # DEBUG D#1122 => D#1125
  # DEBUG __p => D#3357
  # DEBUG __a => D#1121
  # DEBUG __n => D#1122
  # DEBUG D#1120 => D#1122
  # DEBUG D#1119 => D#1121
  # DEBUG D#1117 => D#1119
  # DEBUG D#1118 => D#1120
  # DEBUG __p => D#3357
  # DEBUG this => D#1117
  # DEBUG D.126652 => D#1118
  operator delete (prephitmp_152);

  <bb 57>:
  this_9(D)->D.58509._M_impl._M_start = __new_finish_176;
  this_9(D)->D.58509._M_impl._M_finish = _91;
  _44 = __new_finish_176 + prephitmp_150;
  this_9(D)->D.58509._M_impl._M_end_of_storage = _44;

  <bb 58>:
  return;

<L19>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1148 => &__x_copy.D.67418
  # DEBUG this => D#1148
  # DEBUG D#1151 => __x_copy.D.67418._M_impl._M_finish
  # DEBUG D#1150 => __x_copy.D.67418._M_impl._M_start
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG D#1149 => &__x_copy.D.67418
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _94 = MEM[(struct _Vector_base *)&__x_copy]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _94
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _94
  # DEBUG __n => D#1142
  if (_94 != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _94
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _94
  # DEBUG this => D#1134
  # DEBUG D.126690 => D#1135
  operator delete (_94);

  <bb 62>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  resx 2

<L25>:

  # __new_finish_1 = PHI <__new_finish_176(63), 0B(45), __new_finish_33(47)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _46 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_46);
  if (__new_finish_1 == 0B)
    goto <bb 66>;
  else
    goto <bb 65>;

  <bb 65>:
  goto <bb 71>;

  <bb 66>:
  # DEBUG D#2384 => &this_9(D)->D.58509
  # DEBUG this => D#2384
  _49 = __n_7(D) + __elems_before_223;
  _50 = _49 * 24;
  _51 = __new_finish_176 + _50;
  # DEBUG __first => __first_27
  # DEBUG __last => _51

  <bb 67>:
  # __first_80 = PHI <__first_27(66), __first_96(70)>
  # DEBUG __first => __first_80
  if (_51 == __first_80)
    goto <bb 75>;
  else
    goto <bb 68>;

  <bb 68>:
  # DEBUG __r => __first_80
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _95 = MEM[(struct _Vector_base *)__first_80]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _95
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _95
  # DEBUG __n => D#1142
  if (_95 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _95
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _95
  # DEBUG this => D#1134
  # DEBUG D.126714 => D#1135
  operator delete (_95);

  <bb 70>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  __first_96 = __first_80 + 24;
  # DEBUG __first => __first_96
  goto <bb 67>;

  <bb 71>:
  # __new_finish_97 = PHI <__new_finish_176(65), __new_finish_99(74)>
  # DEBUG __first => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 75>;
  else
    goto <bb 72>;

  <bb 72>:
  # DEBUG __r => __new_finish_97
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _98 = MEM[(struct _Vector_base *)__new_finish_97]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _98
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _98
  # DEBUG __n => D#1142
  if (_98 != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _98
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _98
  # DEBUG this => D#1134
  # DEBUG D.126740 => D#1135
  operator delete (_98);

  <bb 74>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __first => __new_finish_99
  goto <bb 71>;

  <bb 75>:
  # DEBUG D#2392 => &this_9(D)->D.58509
  # DEBUG D#1126 => D#2392
  # DEBUG __p => NULL
  # DEBUG this => D#1126
  # DEBUG __n => D#1127
  # DEBUG D#1125 => D#1127
  # DEBUG D#1124 => D#1126
  if (__new_finish_176 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  # DEBUG D#1123 => &D#1124->_M_impl
  # DEBUG D#1121 => D#1123
  # DEBUG D#1122 => D#1125
  # DEBUG __p => NULL
  # DEBUG __a => D#1121
  # DEBUG __n => D#1122
  # DEBUG D#1120 => D#1122
  # DEBUG D#1119 => D#1121
  # DEBUG D#1117 => D#1119
  # DEBUG D#1118 => D#1120
  # DEBUG __p => NULL
  # DEBUG this => D#1117
  # DEBUG D.126755 => D#1118
  operator delete (__new_finish_176);

  <bb 77>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 79>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#781 => &this_9(D)->D.58509._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#781
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75854
  # DEBUG this => &__position
  _228 = (long int) __position_22;
  # DEBUG this => &D.75854
  _226 = _228 - _179;
  _227 = _226 /[ex] 24;
  __elems_before_225 = (const size_type) _227;
  # DEBUG __elems_before => __elems_before_225
  # DEBUG D#2393 => &this_9(D)->D.58509
  # DEBUG D#1781 => D#2393
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  goto <bb 42>;

  <bb 80>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#781 => &this_9(D)->D.58509._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#781
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.75854
  # DEBUG this => &__position
  _220 = (long int) __position_22;
  # DEBUG this => &D.75854
  _178 = _220 - _179;
  _224 = _178 /[ex] 24;
  __elems_before_213 = (const size_type) _224;
  # DEBUG __elems_before => __elems_before_213
  # DEBUG D#2393 => &this_9(D)->D.58509
  # DEBUG D#1781 => D#2393
  # DEBUG __n => NULL
  # DEBUG this => D#1781
  # DEBUG D#1780 => D#1781
  if (__len_187 != 0)
    goto <bb 41>;
  else
    goto <bb 43>;

}



;; Function PipelineFIFO<T>::PipelineFIFO(Module*, const string&, int, int) [with T = EventRouter::tArrivalEvent; std::__cxx11::string = std::__cxx11::basic_string<char>] (_ZN12PipelineFIFOIN11EventRouter13tArrivalEventEEC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, funcdef_no=2346, decl_uid=58538, cgraph_uid=695, symbol_order=696)

Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
PipelineFIFO<T>::PipelineFIFO(Module*, const string&, int, int) [with T = EventRouter::tArrivalEvent; std::__cxx11::string = std::__cxx11::basic_string<char>] (struct PipelineFIFO * const this, struct Module * parent, const struct string & name, int lanes, int depth)
{
  struct vector * __first;
  struct tArrivalEvent * * D.142994;
  const size_type __len;
  const long unsigned int D.142985;
  size_type D.142984;
  size_type __n;
  const ptrdiff_t _Num;
  struct tTransportEvent * * D.142975;
  struct tArrivalEvent * __x_copy;
  const size_type __elems_after;
  struct tArrivalEvent * * __new_finish;
  struct tArrivalEvent * * __first;
  const ptrdiff_t _Num;
  struct tArrivalEvent * * __first;
  long unsigned int __n;
  struct tArrivalEvent * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct tArrivalEvent * * __first;
  struct tArrivalEvent * * const __position;
  struct iterator __position;
  size_type __n;
  struct tArrivalEvent * __x;
  struct iterator __position;
  struct iterator __position;
  struct vector * __pos;
  int l;
  struct value_type D.67426;
  struct Module * _5;
  int _16;
  long unsigned int _19;
  long unsigned int _20;
  struct vector * _21;
  struct tArrivalEvent * * const _22;
  int _25;
  long unsigned int _26;
  long unsigned int _27;
  struct vector & _28;
  struct vector * _35;
  struct tArrivalEvent * * _36;
  long unsigned int _56;
  long unsigned int prephitmp_58;
  long unsigned int pretmp_59;
  long unsigned int prephitmp_60;
  long unsigned int pretmp_61;
  long unsigned int prephitmp_62;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long unsigned int _76;
  struct tArrivalEvent * * _77;
  struct tArrivalEvent * * _78;
  long int _79;
  int pretmp_80;
  int pretmp_81;
  long int _82;
  long int _83;
  long unsigned int _84;
  int pretmp_86;
  int prephitmp_87;
  struct tArrivalEvent * * prephitmp_90;
  bool _91;
  struct tArrivalEvent * * pretmp_92;
  long unsigned int pretmp_93;
  struct tArrivalEvent * * prephitmp_94;
  int _104;
  long unsigned int _105;
  struct tArrivalEvent * * _106;
  struct vector * prephitmp_111;
  long unsigned int _113;
  struct tArrivalEvent * * _126;
  long int __first.163_127;
  long int _128;
  long unsigned int _130;
  long unsigned int _133;
  struct tArrivalEvent * * _135;
  long int __last.162_136;
  long int _137;
  long unsigned int _139;
  struct tArrivalEvent * * _141;
  struct tArrivalEvent * * _142;
  sizetype _148;
  int prephitmp_151;
  long unsigned int _162;
  struct tArrivalEvent * * _169;
  struct tArrivalEvent * * iftmp.160_170;
  struct vector * _171;
  struct tArrivalEvent * * _174;
  struct tArrivalEvent * * pretmp_182;
  bool _183;
  struct vector * pretmp_184;
  sizetype _199;
  long int _212;
  bool _214;
  long int _216;
  long int _222;
  long unsigned int _241;

  <bb 2>:
  _5 = &this_4(D)->D.58553;
  Module::Module (_5, parent_7(D), name_8(D));
  this_4(D)->D.58553._vptr.Module = &MEM[(void *)&_ZTV12PipelineFIFOIN11EventRouter13tArrivalEventEE + 16B];
  this_4(D)->_lanes = lanes_11(D);
  this_4(D)->_depth = depth_13(D);
  # DEBUG D#2395 => &this_4(D)->_data
  # DEBUG this => D#2395
  # DEBUG D#1116 => &D#2395->D.58509
  # DEBUG this => D#1116
  # DEBUG D#1115 => &D#1116->_M_impl
  # DEBUG this => D#1115
  # DEBUG this => D#1115
  # DEBUG this => D#1115
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D) + 112B]._M_end_of_storage = 0B;
  _16 = depth_13(D) + 1;
  this_4(D)->_pipe_len = _16;
  this_4(D)->_pipe_ptr = 0;
  # DEBUG this => &D.67426
  # DEBUG D#808 => &D.67426.D.67418
  # DEBUG this => D#808
  # DEBUG D#807 => &D#808->_M_impl
  # DEBUG this => D#807
  # DEBUG this => D#807
  # DEBUG this => D#807
  MEM[(struct _Vector_impl *)&D.67426]._M_start = 0B;
  MEM[(struct _Vector_impl *)&D.67426]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&D.67426]._M_end_of_storage = 0B;
  _20 = (long unsigned int) lanes_11(D);
  # DEBUG D#3370 => &this_4(D)->_data
  # DEBUG this => D#3370
  # DEBUG __new_size => _20
  # DEBUG __x => &D.67426
  # DEBUG D#222 => D#3370
  # DEBUG D#222 => D#3370
  # DEBUG this => D#222
  # DEBUG this => D#222
  if (_20 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG D#222 => D#3370
  # DEBUG D#222 => D#3370
  # DEBUG this => D#222
  # DEBUG this => D#222
  # DEBUG this => D#3370
  # DEBUG D#386 => &D#3370->D.58509._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#386
  # DEBUG this => D#3370
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _20
  # DEBUG __x => &D.67426
  _21 = &this_4(D)->_data;
  std::vector<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >, std::allocator<std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> > > >::_M_fill_insert (_21, __position, _20, &D.67426);

  <bb 4>:
  pretmp_182 = MEM[(struct _Vector_base *)&D.67426]._M_impl._M_start;

  <bb 5>:
  # prephitmp_90 = PHI <0B(2), pretmp_182(4)>
  # DEBUG this => &D.67426
  # DEBUG D#1148 => &D.67426.D.67418
  # DEBUG this => D#1148
  # DEBUG D#1151 => D.67426.D.67418._M_impl._M_finish
  # DEBUG D#1150 => D.67426.D.67418._M_impl._M_start
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG D#1149 => &D.67426.D.67418
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  # DEBUG D#3369 => MEM[(struct _Vector_base *)&D.67426]._M_impl._M_start
  # DEBUG D#1145 => (long int) D#3369
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => D#3369
  # DEBUG __n => D#1142
  if (prephitmp_90 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => D#3369
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => D#3369
  # DEBUG this => D#1134
  # DEBUG D.126836 => D#1135
  operator delete (prephitmp_90);

  <bb 7>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  D.67426 ={v} {CLOBBER};
  # DEBUG l => 0
  # DEBUG l => 0
  _104 = this_4(D)->_lanes;
  if (_104 <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  return;

  <bb 9>:

  <bb 10>:
  # l_194 = PHI <0(9), l_30(31)>
  # prephitmp_151 = PHI <_104(9), prephitmp_87(31)>
  # DEBUG l => l_194
  _25 = this_4(D)->_pipe_len;
  _26 = (long unsigned int) _25;
  _27 = (long unsigned int) l_194;
  # DEBUG D#2394 => &this_4(D)->_data
  _35 = MEM[(struct vector * *)this_4(D) + 112B];
  # DEBUG D#150 => D#2394
  # DEBUG __n => _27
  # DEBUG this => D#150
  _19 = _27 * 24;
  _28 = _35 + _19;
  # DEBUG this => _28
  # DEBUG __new_size => _26
  # DEBUG __x => 0B
  # DEBUG __x => 0B
  _22 = MEM[(struct tArrivalEvent * * *)_28];
  # DEBUG D#221 => _28
  __first_69 = MEM[(struct tArrivalEvent * * *)_28 + 8B];
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  _70 = (long int) __first_69;
  _71 = (long int) _22;
  _72 = _70 - _71;
  _73 = _72 /[ex] 8;
  _74 = (const long unsigned int) _73;
  if (_26 > _74)
    goto <bb 11>;
  else
    goto <bb 28>;

  <bb 11>:
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  __n_75 = _26 - _74;
  # DEBUG this => _28
  # DEBUG D#387 => &_28->D.67418._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#387
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __x => &__x
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __x => &__x
  # DEBUG __position => __first_69
  _78 = _28->D.67418._M_impl._M_end_of_storage;
  _79 = (long int) _78;
  _82 = _79 - _70;
  _83 = _82 /[ex] 8;
  _84 = (long unsigned int) _83;
  if (__n_75 <= _84)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _199 = __n_75 * 8;
  __builtin_memset (__first_69, 0, _199);
  _241 = __n_75 * 8;
  __first_219 = __first_69 + _241;
  _28->D.67418._M_impl._M_finish = __first_219;
  # DEBUG D#2153 => &_28->D.67418
  # DEBUG this => D#2153
  # DEBUG this => &__position
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __alloc => D#2143
  # DEBUG D#2142 => D#2143
  # DEBUG D#2141 => D#2142
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG D.142770 => D#2141
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __assignable => 1
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __it => __first_219
  # DEBUG __it => __first_219
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG __simple => 1
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __result => __first_219
  # DEBUG _Num => 0
  # DEBUG this => &__position
  # DEBUG D#1436 => &__x_copy
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG D#1435 => D#1436
  # DEBUG __value => D#1435
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG D#1165 => D#1435
  # DEBUG __first => __first_69
  # DEBUG __last => __first_69
  # DEBUG __value => D#1165
  # DEBUG __tmp => 0B
  # DEBUG __first => __first_69
  pretmp_80 = this_4(D)->_lanes;
  goto <bb 30>;

  <bb 13>:
  # DEBUG this => _28
  # DEBUG __n => __n_75
  # DEBUG __n => __n_75
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1669 => _28
  # DEBUG this => D#1669
  # DEBUG D#1668 => D#1669
  # DEBUG D#1667 => &D#1668->D.67418
  # DEBUG this => D#1667
  # DEBUG __a => D#1666
  # DEBUG D#1665 => D#1666
  # DEBUG D#1639 => D#1665
  # DEBUG this => D#1639
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  _162 = 2305843009213693951 - _74;
  if (__n_75 > _162)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 15>:
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG __a => &D.142985
  # DEBUG __b => &__n
  _56 = MAX_EXPR <_74, __n_75>;
  __len_166 = _56 + _74;
  # DEBUG __len => __len_166
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  # DEBUG D#1669 => _28
  # DEBUG this => D#1669
  # DEBUG D#1668 => D#1669
  # DEBUG D#1667 => &D#1668->D.67418
  # DEBUG this => D#1667
  # DEBUG __a => D#1666
  # DEBUG D#1665 => D#1666
  # DEBUG D#1639 => D#1665
  # DEBUG this => D#1639
  _183 = __len_166 > 2305843009213693951;
  _214 = _74 > __len_166;
  _91 = _183 | _214;
  if (_91 != 0)
    goto <bb 16>;
  else
    goto <bb 48>;

  <bb 16>:
  # prephitmp_62 = PHI <18446744073709551608(15), pretmp_61(49)>
  # DEBUG __len => NULL
  # DEBUG this => _28
  # DEBUG D#782 => &_28->D.67418._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#782
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#2164 => _72 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2164
  # DEBUG D#2163 => &_28->D.67418
  # DEBUG D#1647 => D#2163
  # DEBUG __n => NULL
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => NULL
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1641
  # DEBUG D.142992 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  _169 = operator new (prephitmp_62);
  goto <bb 18>;

<L7>:
  goto <bb 37> (<L4>);

  <bb 18>:
  pretmp_92 = _169 + prephitmp_62;

  <bb 19>:
  # iftmp.160_170 = PHI <0B(48), _169(18)>
  # prephitmp_94 = PHI <0B(48), pretmp_92(18)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2147 => &_28->D.67418
  # DEBUG this => D#2147
  # DEBUG D#3372 => (long unsigned int) _72
  # DEBUG D#3371 => iftmp.160_170 + D#3372
  # DEBUG D#1822 => &__x
  # DEBUG __first => D#3371
  # DEBUG __n => __n_75
  # DEBUG D#1821 => D#1822
  # DEBUG __x => D#1821
  # DEBUG D.142860 => D#1823
  # DEBUG D#1820 => D#1821
  # DEBUG __first => D#3371
  # DEBUG __n => __n_75
  # DEBUG D#1819 => D#1820
  # DEBUG __x => D#1819
  # DEBUG __assignable => 1
  # DEBUG D#1818 => D#1819
  # DEBUG __first => D#3371
  # DEBUG __n => __n_75
  # DEBUG D#1817 => D#1818
  # DEBUG __x => D#1817
  # DEBUG D#1816 => D#1817
  # DEBUG __first => D#3371
  # DEBUG __n => __n_75
  # DEBUG D#1815 => D#1816
  # DEBUG __value => D#1815
  # DEBUG __it => D#3371
  # DEBUG __it => D#3371
  # DEBUG D#1814 => D#1815
  # DEBUG __first => D#3371
  # DEBUG __n => __n_75
  # DEBUG __value => D#1814
  # DEBUG __tmp => 0B
  # DEBUG __niter => __n_75
  # DEBUG __niter => __n_75
  # DEBUG __first => D#3371
  _148 = __n_75 * 8;
  _216 = (long int) __first_69;
  _222 = (long int) _22;
  _212 = _216 - _222;
  _105 = (long unsigned int) _212;
  _106 = iftmp.160_170 + _105;
  __builtin_memset (_106, 0, _148);
  # DEBUG __new_finish => 0B
  # DEBUG D#2148 => &_28->D.67418
  # DEBUG this => D#2148
  # DEBUG this => &__position
  _126 = _28->D.67418._M_impl._M_start;
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2145
  # DEBUG D#2144 => D#2145
  # DEBUG D#2141 => D#2144
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG D.142883 => D#2141
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __it => _126
  # DEBUG __it => _126
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => _126
  # DEBUG __last => __first_69
  # DEBUG __result => NULL
  __first.163_127 = (long int) _126;
  _128 = _70 - __first.163_127;
  _Num_129 = _128 /[ex] 8;
  # DEBUG _Num => _Num_129
  if (_Num_129 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_93 = (long unsigned int) _128;
  goto <bb 22>;

  <bb 21>:
  _130 = (long unsigned int) _128;
  __builtin_memmove (iftmp.160_170, _126, _130);

  <bb 22>:
  # prephitmp_58 = PHI <pretmp_93(20), _130(21)>
  # DEBUG D#3368 => (long unsigned int) _128
  # DEBUG __new_finish => iftmp.160_170 + D#3368
  _133 = __n_75 * 8;
  _113 = prephitmp_58 + _133;
  __new_finish_134 = iftmp.160_170 + _113;
  # DEBUG __new_finish => __new_finish_134
  # DEBUG D#2149 => &_28->D.67418
  # DEBUG this => D#2149
  _135 = _28->D.67418._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __alloc => D#2145
  # DEBUG D#2144 => D#2145
  # DEBUG D#2141 => D#2144
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG D.142917 => D#2141
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __assignable => 1
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __it => _135
  # DEBUG __it => _135
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __it => __new_finish_134
  # DEBUG __it => __new_finish_134
  # DEBUG __it => _135
  # DEBUG __it => _135
  # DEBUG __it => __first_69
  # DEBUG __it => __first_69
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  # DEBUG __simple => 1
  # DEBUG __first => __first_69
  # DEBUG __last => _135
  # DEBUG __result => __new_finish_134
  __last.162_136 = (long int) _135;
  _137 = __last.162_136 - _70;
  _Num_138 = _137 /[ex] 8;
  # DEBUG _Num => _Num_138
  if (_Num_138 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  pretmp_59 = (long unsigned int) _137;
  goto <bb 25>;

  <bb 24>:
  _139 = (long unsigned int) _137;
  __builtin_memmove (__new_finish_134, __first_69, _139);

  <bb 25>:
  # prephitmp_60 = PHI <pretmp_59(23), _139(24)>
  _141 = __new_finish_134 + prephitmp_60;
  # DEBUG __new_finish => _141
  # DEBUG D#2150 => &_28->D.67418
  # DEBUG this => D#2150
  # DEBUG D#2162 => _28->D.67418._M_impl._M_finish
  # DEBUG D#2161 => _28->D.67418._M_impl._M_start
  # DEBUG __first => D#2161
  # DEBUG __last => D#2162
  # DEBUG D.121769 => NULL
  # DEBUG D#775 => D#2161
  # DEBUG D#776 => D#2162
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG D#2160 => _28->D.67418._M_impl._M_end_of_storage
  # DEBUG D#2159 => (long int) D#2160
  _142 = _28->D.67418._M_impl._M_start;
  # DEBUG D#2158 => (long int) _142
  # DEBUG D#2157 => D#2159 - D#2158
  # DEBUG D#2156 => D#2157 /[ex] 8
  # DEBUG D#2155 => (long unsigned int) D#2156
  # DEBUG D#2154 => &_28->D.67418
  # DEBUG this => D#2154
  # DEBUG __p => _142
  # DEBUG __n => D#2155
  if (_142 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  # DEBUG D#1140 => &D#2154->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#2155
  # DEBUG __p => _142
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _142
  # DEBUG this => D#1134
  # DEBUG D.142955 => D#1135
  operator delete (_142);

  <bb 27>:
  _28->D.67418._M_impl._M_start = iftmp.160_170;
  _28->D.67418._M_impl._M_finish = _141;
  _28->D.67418._M_impl._M_end_of_storage = prephitmp_94;
  pretmp_86 = this_4(D)->_lanes;
  goto <bb 30>;

  <bb 28>:
  # DEBUG D#221 => _28
  # DEBUG D#221 => _28
  # DEBUG this => D#221
  # DEBUG this => D#221
  if (_26 < _74)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _76 = _26 * 8;
  _77 = _22 + _76;
  # DEBUG D#780 => _28
  # DEBUG __pos => _77
  # DEBUG D#779 => D#780
  # DEBUG this => D#779
  # DEBUG D#777 => &D#779->D.67418
  # DEBUG this => D#777
  # DEBUG D#778 => D#779->D.67418._M_impl._M_finish
  # DEBUG __first => _77
  # DEBUG __last => D#778
  # DEBUG D.103441 => NULL
  # DEBUG D#775 => _77
  # DEBUG D#776 => D#778
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  MEM[(struct tArrivalEvent * * *)_28 + 8B] = _77;
  pretmp_81 = this_4(D)->_lanes;

  <bb 30>:
  # prephitmp_87 = PHI <prephitmp_151(28), pretmp_80(12), pretmp_81(29), pretmp_86(27)>
  l_30 = l_194 + 1;
  # DEBUG l => l_30
  # DEBUG l => l_30
  if (l_30 >= prephitmp_87)
    goto <bb 8>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 10>;

<L3>:
  # DEBUG this => &D.67426
  # DEBUG D#1148 => &D.67426.D.67418
  # DEBUG this => D#1148
  # DEBUG D#1151 => D.67426.D.67418._M_impl._M_finish
  # DEBUG D#1150 => D.67426.D.67418._M_impl._M_start
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG D#1149 => &D.67426.D.67418
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _36 = MEM[(struct _Vector_base *)&D.67426]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _36
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _36
  # DEBUG __n => D#1142
  if (_36 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _36
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _36
  # DEBUG this => D#1134
  # DEBUG D.126855 => D#1135
  operator delete (_36);

  <bb 34>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  D.67426 ={v} {CLOBBER};
  resx 3

<L8>:
  goto <bb 37> (<L4>);

<L6>:

<L4>:
  # DEBUG this => D#3370
  # DEBUG D#1156 => &D#3370->D.58509
  # DEBUG this => D#1156
  _171 = MEM[(struct vector *)this_4(D) + 112B].D.58509._M_impl._M_finish;
  __first_172 = MEM[(struct vector *)this_4(D) + 112B].D.58509._M_impl._M_start;
  # DEBUG __first => __first_172
  # DEBUG __last => _171
  # DEBUG __first => __first_172
  if (_171 == __first_172)
    goto <bb 44>;
  else
    goto <bb 38>;

  <bb 38>:

  <bb 39>:
  # __first_96 = PHI <__first_172(38), __first_175(42)>
  # DEBUG __first => __first_96
  # DEBUG __r => __first_96
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1148
  # DEBUG __first => D#1150
  # DEBUG __last => D#1151
  # DEBUG D.107397 => NULL
  # DEBUG D#775 => D#1150
  # DEBUG D#776 => D#1151
  # DEBUG __first => D#775
  # DEBUG __last => D#776
  # DEBUG D#774 => D#776
  # DEBUG D#773 => D#775
  # DEBUG D#771 => D#773
  # DEBUG D#772 => D#774
  # DEBUG D.103425 => D#771
  # DEBUG D.103424 => D#772
  # DEBUG this => D#1149
  # DEBUG D#1147 => D#1149->_M_impl._M_end_of_storage
  # DEBUG D#1146 => (long int) D#1147
  _174 = MEM[(struct _Vector_base *)__first_96]._M_impl._M_start;
  # DEBUG D#1145 => (long int) _174
  # DEBUG D#1144 => D#1146 - D#1145
  # DEBUG D#1143 => D#1144 /[ex] 8
  # DEBUG D#1142 => (long unsigned int) D#1143
  # DEBUG this => D#1149
  # DEBUG __p => _174
  # DEBUG __n => D#1142
  if (_174 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG D#1140 => &D#1149->_M_impl
  # DEBUG D#1138 => D#1140
  # DEBUG D#1139 => D#1142
  # DEBUG __p => _174
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _174
  # DEBUG this => D#1134
  # DEBUG D.143015 => D#1135
  operator delete (_174);

  <bb 41>:
  # DEBUG D#1141 => &D#1149->_M_impl
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  # DEBUG this => D#1141
  MEM[(struct  &)__first_96] ={v} {CLOBBER};
  __first_175 = __first_96 + 24;
  # DEBUG __first => __first_175
  # DEBUG __first => __first_175
  if (_171 == __first_175)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 39>;

  <bb 43>:
  pretmp_184 = MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start;

  <bb 44>:
  # prephitmp_111 = PHI <pretmp_184(43), __first_172(37)>
  # DEBUG D#1157 => &D#3370->D.58509
  # DEBUG this => D#1157
  # DEBUG D#1133 => D#1157->_M_impl._M_end_of_storage
  # DEBUG D#1132 => (long int) D#1133
  # DEBUG D#3367 => MEM[(struct _Vector_base *)this_4(D) + 112B]._M_impl._M_start
  # DEBUG D#1131 => (long int) D#3367
  # DEBUG D#1130 => D#1132 - D#1131
  # DEBUG D#1129 => D#1130 /[ex] 24
  # DEBUG D#1126 => D#1157
  # DEBUG D#1127 => (long unsigned int) D#1129
  # DEBUG __p => D#3367
  # DEBUG this => D#1126
  # DEBUG __n => D#1127
  # DEBUG D#1125 => D#1127
  # DEBUG D#1124 => D#1126
  if (prephitmp_111 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#1123 => &D#1124->_M_impl
  # DEBUG D#1121 => D#1123
  # DEBUG D#1122 => D#1125
  # DEBUG __p => D#3367
  # DEBUG __a => D#1121
  # DEBUG __n => D#1122
  # DEBUG D#1120 => D#1122
  # DEBUG D#1119 => D#1121
  # DEBUG D#1117 => D#1119
  # DEBUG D#1118 => D#1120
  # DEBUG __p => D#3367
  # DEBUG this => D#1117
  # DEBUG D.143029 => D#1118
  operator delete (prephitmp_111);

  <bb 46>:
  # DEBUG D#1128 => &D#1157->_M_impl
  # DEBUG this => D#1128
  # DEBUG this => D#1128
  # DEBUG this => D#1128
  MEM[(struct  &)this_4(D) + 112] ={v} {CLOBBER};
  resx 2

<L5>:
  Module::~Module (_5);
  resx 1

  <bb 48>:
  # DEBUG __len => NULL
  # DEBUG this => _28
  # DEBUG D#782 => &_28->D.67418._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#782
  # DEBUG __lhs => &__position
  # DEBUG __rhs => NULL
  # DEBUG this => &__position
  # DEBUG this => NULL
  # DEBUG D#2164 => _72 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2164
  # DEBUG D#2163 => &_28->D.67418
  # DEBUG D#1647 => D#2163
  # DEBUG __n => __len_166
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (__len_166 != 0)
    goto <bb 49>;
  else
    goto <bb 19>;

  <bb 49>:
  pretmp_61 = __len_166 * 8;
  goto <bb 16>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIPN11EventRouter13tArrivalEventESaIS2_EE23_M_new_elements_at_backEm, funcdef_no=4990, decl_uid=60571, cgraph_uid=3339, symbol_order=3340)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct tArrivalEvent * * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  struct tArrivalEvent * * * _13;
  struct tArrivalEvent * * * _16;
  long unsigned int _17;
  struct tArrivalEvent * * * _18;
  void * _21;
  struct tArrivalEvent * * * _23;
  long unsigned int _24;
  struct tArrivalEvent * * * _25;
  struct tArrivalEvent * * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  struct tArrivalEvent * * _35;
  long int _36;
  struct tArrivalEvent * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct tArrivalEvent * * _42;
  long int _43;
  struct tArrivalEvent * * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  struct tArrivalEvent * * _50;
  long unsigned int _53;
  long unsigned int _54;
  struct tArrivalEvent * * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#2473 => this_6(D)
  # DEBUG this => D#2473
  # DEBUG D#2472 => D#2473
  # DEBUG D#2471 => &D#2472->D.60628
  # DEBUG this => D#2471
  # DEBUG __a => D#1666
  # DEBUG D#1665 => D#1666
  # DEBUG D#1639 => D#1665
  # DEBUG this => D#1639
  # DEBUG this => this_6(D)
  # DEBUG D#392 => &MEM[(const struct deque *)this_6(D)].D.60628._M_impl._M_start
  # DEBUG D#393 => &MEM[(const struct deque *)this_6(D)].D.60628._M_impl._M_finish
  # DEBUG __x => D#393
  # DEBUG __y => D#392
  # DEBUG __size => 8
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 64;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 2305843009213693951 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 8
  _12 = __new_elems_10(D) + 63;
  # DEBUG __size => 8
  __new_nodes_14 = _12 >> 6;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.60628._M_impl._M_map_size;
  _57 = this_6(D)->D.60628._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.60628._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#2475 => &this_6(D)->D.60628
  # DEBUG D#1652 => D#2475
  # DEBUG this => D#1652
  # DEBUG D#1651 => D#1652
  # DEBUG __size => 8
  # DEBUG D#1650 => &D#1651->_M_impl
  # DEBUG D#1644 => D#1650
  # DEBUG __n => NULL
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1641
  # DEBUG D.128211 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.60628._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#2474 => &this_6(D)->D.60628
  # DEBUG this => D#2474
  # DEBUG __p => _26
  # DEBUG __size => 8
  # DEBUG D#1158 => &D#2474->_M_impl
  # DEBUG D#1138 => D#1158
  # DEBUG __p => _26
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _26
  # DEBUG this => D#1134
  # DEBUG D.128221 => D#1135
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIPN11EventRouter13tArrivalEventESaIS2_EE24_M_new_elements_at_frontEm, funcdef_no=4988, decl_uid=60568, cgraph_uid=3337, symbol_order=3338)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct tArrivalEvent * * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  struct tArrivalEvent * * * _14;
  struct tArrivalEvent * * _16;
  struct tArrivalEvent * * * _17;
  long unsigned int _18;
  sizetype _19;
  struct tArrivalEvent * * * _20;
  void * _23;
  struct tArrivalEvent * * * _25;
  long unsigned int _26;
  sizetype _27;
  struct tArrivalEvent * * * _28;
  struct tArrivalEvent * * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct tArrivalEvent * * _39;
  long int _40;
  struct tArrivalEvent * * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  struct tArrivalEvent * * _46;
  long int _47;
  struct tArrivalEvent * * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  struct tArrivalEvent * * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#2473 => this_6(D)
  # DEBUG this => D#2473
  # DEBUG D#2472 => D#2473
  # DEBUG D#2471 => &D#2472->D.60628
  # DEBUG this => D#2471
  # DEBUG __a => D#1666
  # DEBUG D#1665 => D#1666
  # DEBUG D#1639 => D#1665
  # DEBUG this => D#1639
  # DEBUG this => this_6(D)
  # DEBUG D#392 => &MEM[(const struct deque *)this_6(D)].D.60628._M_impl._M_start
  # DEBUG D#393 => &MEM[(const struct deque *)this_6(D)].D.60628._M_impl._M_finish
  # DEBUG __x => D#393
  # DEBUG __y => D#392
  # DEBUG __size => 8
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 64;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 8;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 2305843009213693951 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 8
  _13 = __new_elems_11(D) + 63;
  # DEBUG __size => 8
  __new_nodes_15 = _13 >> 6;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.60628._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.60628._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#2477 => &this_6(D)->D.60628
  # DEBUG D#1652 => D#2477
  # DEBUG this => D#1652
  # DEBUG D#1651 => D#1652
  # DEBUG __size => 8
  # DEBUG D#1650 => &D#1651->_M_impl
  # DEBUG D#1644 => D#1650
  # DEBUG __n => NULL
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1641
  # DEBUG D.128242 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.60628._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#2476 => &this_6(D)->D.60628
  # DEBUG this => D#2476
  # DEBUG __p => _29
  # DEBUG __size => 8
  # DEBUG D#1158 => &D#2476->_M_impl
  # DEBUG D#1138 => D#1158
  # DEBUG __p => _29
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _29
  # DEBUG this => D#1134
  # DEBUG D.128252 => D#1135
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIPN11EventRouter15tTransportEventESaIS2_EE23_M_new_elements_at_backEm, funcdef_no=5003, decl_uid=61592, cgraph_uid=3352, symbol_order=3353)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct tTransportEvent * * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  struct tTransportEvent * * * _13;
  struct tTransportEvent * * * _16;
  long unsigned int _17;
  struct tTransportEvent * * * _18;
  void * _21;
  struct tTransportEvent * * * _23;
  long unsigned int _24;
  struct tTransportEvent * * * _25;
  struct tTransportEvent * * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  struct tTransportEvent * * _35;
  long int _36;
  struct tTransportEvent * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct tTransportEvent * * _42;
  long int _43;
  struct tTransportEvent * * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  struct tTransportEvent * * _50;
  long unsigned int _53;
  long unsigned int _54;
  struct tTransportEvent * * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#2484 => this_6(D)
  # DEBUG this => D#2484
  # DEBUG D#2483 => D#2484
  # DEBUG D#2482 => &D#2483->D.61649
  # DEBUG this => D#2482
  # DEBUG __a => D#2481
  # DEBUG D#2480 => D#2481
  # DEBUG D#1618 => D#2480
  # DEBUG this => D#1618
  # DEBUG this => this_6(D)
  # DEBUG D#395 => &MEM[(const struct deque *)this_6(D)].D.61649._M_impl._M_start
  # DEBUG D#396 => &MEM[(const struct deque *)this_6(D)].D.61649._M_impl._M_finish
  # DEBUG __x => D#396
  # DEBUG __y => D#395
  # DEBUG __size => 8
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 64;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 2305843009213693951 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 8
  _12 = __new_elems_10(D) + 63;
  # DEBUG __size => 8
  __new_nodes_14 = _12 >> 6;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.61649._M_impl._M_map_size;
  _57 = this_6(D)->D.61649._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.61649._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#2488 => &this_6(D)->D.61649
  # DEBUG D#1626 => D#2488
  # DEBUG this => D#1626
  # DEBUG D#1625 => D#1626
  # DEBUG __size => 8
  # DEBUG D#1624 => &D#1625->_M_impl
  # DEBUG D#1623 => D#1624
  # DEBUG __n => NULL
  # DEBUG __a => D#1623
  # DEBUG D#1622 => D#1623
  # DEBUG D#1620 => D#1622
  # DEBUG D#1621 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1620
  # DEBUG D.128463 => D#1621
  # DEBUG D#1619 => D#1620
  # DEBUG D#1618 => D#1619
  # DEBUG this => D#1618
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.61649._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#2487 => &this_6(D)->D.61649
  # DEBUG this => D#2487
  # DEBUG __p => _26
  # DEBUG __size => 8
  # DEBUG D#1244 => &D#2487->_M_impl
  # DEBUG D#1242 => D#1244
  # DEBUG __p => _26
  # DEBUG __a => D#1242
  # DEBUG __n => D#1243
  # DEBUG D#1241 => D#1243
  # DEBUG D#1240 => D#1242
  # DEBUG D#1238 => D#1240
  # DEBUG D#1239 => D#1241
  # DEBUG __p => _26
  # DEBUG this => D#1238
  # DEBUG D.128473 => D#1239
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIPN11EventRouter15tTransportEventESaIS2_EE24_M_new_elements_at_frontEm, funcdef_no=5001, decl_uid=61589, cgraph_uid=3350, symbol_order=3351)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct tTransportEvent * * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  struct tTransportEvent * * * _14;
  struct tTransportEvent * * _16;
  struct tTransportEvent * * * _17;
  long unsigned int _18;
  sizetype _19;
  struct tTransportEvent * * * _20;
  void * _23;
  struct tTransportEvent * * * _25;
  long unsigned int _26;
  sizetype _27;
  struct tTransportEvent * * * _28;
  struct tTransportEvent * * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct tTransportEvent * * _39;
  long int _40;
  struct tTransportEvent * * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  struct tTransportEvent * * _46;
  long int _47;
  struct tTransportEvent * * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  struct tTransportEvent * * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#2484 => this_6(D)
  # DEBUG this => D#2484
  # DEBUG D#2483 => D#2484
  # DEBUG D#2482 => &D#2483->D.61649
  # DEBUG this => D#2482
  # DEBUG __a => D#2481
  # DEBUG D#2480 => D#2481
  # DEBUG D#1618 => D#2480
  # DEBUG this => D#1618
  # DEBUG this => this_6(D)
  # DEBUG D#395 => &MEM[(const struct deque *)this_6(D)].D.61649._M_impl._M_start
  # DEBUG D#396 => &MEM[(const struct deque *)this_6(D)].D.61649._M_impl._M_finish
  # DEBUG __x => D#396
  # DEBUG __y => D#395
  # DEBUG __size => 8
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 64;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 8;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 2305843009213693951 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 8
  _13 = __new_elems_11(D) + 63;
  # DEBUG __size => 8
  __new_nodes_15 = _13 >> 6;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.61649._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.61649._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#2486 => &this_6(D)->D.61649
  # DEBUG D#1626 => D#2486
  # DEBUG this => D#1626
  # DEBUG D#1625 => D#1626
  # DEBUG __size => 8
  # DEBUG D#1624 => &D#1625->_M_impl
  # DEBUG D#1623 => D#1624
  # DEBUG __n => NULL
  # DEBUG __a => D#1623
  # DEBUG D#1622 => D#1623
  # DEBUG D#1620 => D#1622
  # DEBUG D#1621 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1620
  # DEBUG D.128435 => D#1621
  # DEBUG D#1619 => D#1620
  # DEBUG D#1618 => D#1619
  # DEBUG this => D#1618
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.61649._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#2485 => &this_6(D)->D.61649
  # DEBUG this => D#2485
  # DEBUG __p => _29
  # DEBUG __size => 8
  # DEBUG D#1244 => &D#2485->_M_impl
  # DEBUG D#1242 => D#1244
  # DEBUG __p => _29
  # DEBUG __a => D#1242
  # DEBUG __n => D#1243
  # DEBUG D#1241 => D#1243
  # DEBUG D#1240 => D#1242
  # DEBUG D#1238 => D#1240
  # DEBUG D#1239 => D#1241
  # DEBUG __p => _29
  # DEBUG this => D#1238
  # DEBUG D.128445 => D#1239
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>; _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIPN11EventRouter15tTransportEventESaIS2_EE13_M_insert_auxISt15_Deque_iteratorIS2_RKS2_PS7_EEEvS6_IS2_RS2_PS2_ET_SE_m, funcdef_no=4951, decl_uid=81843, cgraph_uid=3300, symbol_order=3301)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>; _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  struct tTransportEvent * * * __last1$_M_node;
  struct tTransportEvent * * __last1$_M_last;
  struct tTransportEvent * * __last1$_M_first;
  struct tTransportEvent * * __last1$_M_cur;
  struct tTransportEvent * * * __first1$_M_node;
  struct tTransportEvent * * __first1$_M_last;
  struct tTransportEvent * * __first1$_M_first;
  struct tTransportEvent * * __first1$_M_cur;
  struct tTransportEvent * * * SR.5969;
  struct tTransportEvent * * SR.5968;
  struct tTransportEvent * * SR.5967;
  struct tTransportEvent * * SR.5966;
  struct tTransportEvent * * * __last2$_M_node;
  struct tTransportEvent * * __last2$_M_last;
  struct tTransportEvent * * __last2$_M_first;
  struct tTransportEvent * * __last2$_M_cur;
  struct tTransportEvent * * * __first2$_M_node;
  struct tTransportEvent * * __first2$_M_last;
  struct tTransportEvent * * __first2$_M_first;
  struct tTransportEvent * * __first2$_M_cur;
  struct tTransportEvent * * * SR.5957;
  struct tTransportEvent * * SR.5956;
  struct tTransportEvent * * SR.5955;
  struct tTransportEvent * * SR.5954;
  struct tTransportEvent * * * __new_finish$_M_node;
  struct tTransportEvent * * __new_finish$_M_last;
  struct tTransportEvent * * __new_finish$_M_first;
  struct tTransportEvent * * __new_finish$_M_cur;
  struct tTransportEvent * * * SR.5949;
  struct tTransportEvent * * SR.5948;
  struct tTransportEvent * * SR.5947;
  struct tTransportEvent * * SR.5946;
  struct tTransportEvent * * * __new_start$_M_node;
  struct tTransportEvent * * __new_start$_M_last;
  struct tTransportEvent * * __new_start$_M_first;
  struct tTransportEvent * * __new_start$_M_cur;
  struct _Deque_iterator D.143621;
  struct _Deque_iterator D.143620;
  struct _Deque_iterator D.143619;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.143618;
  struct _Deque_iterator D.143617;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  difference_type __len;
  difference_type __llen;
  struct tTransportEvent * * __lend;
  difference_type __rlen;
  struct tTransportEvent * * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.143572;
  struct _Deque_iterator D.143571;
  struct _Deque_iterator D.143570;
  struct _Deque_iterator D.143569;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator D.143540;
  struct _Deque_iterator D.143539;
  struct _Deque_iterator D.143538;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.143537;
  struct _Deque_iterator D.143536;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  struct _Self __tmp;
  struct _Deque_iterator D.143507;
  struct _Deque_iterator D.143506;
  struct _Deque_iterator D.143505;
  struct _Deque_iterator D.143504;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.82458;
  struct _Deque_iterator D.82452;
  struct _Deque_iterator D.82453;
  struct _Deque_iterator D.82454;
  struct _Deque_iterator D.82439;
  struct _Deque_iterator D.82433;
  struct _Deque_iterator D.82434;
  struct _Deque_iterator D.82435;
  struct _Deque_iterator D.82421;
  struct _Deque_iterator D.82422;
  struct _Deque_iterator D.82423;
  struct _Self D.82418;
  struct _Deque_iterator D.82411;
  struct _Deque_iterator D.82403;
  struct _Deque_iterator D.82404;
  struct _Deque_iterator D.82407;
  struct _Self D.82387;
  struct _Deque_iterator D.82383;
  struct _Deque_iterator D.82384;
  struct _Deque_iterator D.82385;
  struct _Deque_iterator D.82371;
  struct _Deque_iterator D.82372;
  struct _Deque_iterator D.82373;
  struct _Self D.82363;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.396_10;
  struct tTransportEvent * * * const prephitmp_13;
  struct tTransportEvent * * * const prephitmp_20;
  struct tTransportEvent * * _27;
  struct tTransportEvent * * _28;
  struct tTransportEvent * * _29;
  long int _38;
  struct tTransportEvent * * _39;
  struct tTransportEvent * * _42;
  struct tTransportEvent * * _48;
  struct iterator * _56;
  struct tTransportEvent * * _57;
  long int _62;
  struct tTransportEvent * * _63;
  struct tTransportEvent * * _69;
  struct tTransportEvent * * _75;
  struct tTransportEvent * * * _80;
  long int __len.400_81;
  struct tTransportEvent * * _82;
  struct tTransportEvent * * _88;
  long int _93;
  long int _94;
  struct tTransportEvent * * _95;
  long int _96;
  struct tTransportEvent * * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  struct tTransportEvent * * * _104;
  long int _105;
  struct tTransportEvent * * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  struct tTransportEvent * * _112;
  long int _113;
  struct tTransportEvent * * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  struct tTransportEvent * * _119;
  long int _120;
  struct tTransportEvent * * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  struct tTransportEvent * * _126;
  struct tTransportEvent * * _127;
  struct tTransportEvent * * _128;
  struct tTransportEvent * * * _129;
  struct tTransportEvent * * const pretmp_130;
  struct tTransportEvent * * const prephitmp_131;
  struct tTransportEvent * * * const pretmp_132;
  struct tTransportEvent * * _133;
  struct tTransportEvent * * _134;
  struct tTransportEvent * * * _135;
  struct tTransportEvent * * _136;
  struct tTransportEvent * * _137;
  struct tTransportEvent * * * _138;
  struct tTransportEvent * * const pretmp_140;
  struct tTransportEvent * * const prephitmp_141;
  struct tTransportEvent * * _145;
  struct tTransportEvent * * _146;
  struct tTransportEvent * * * _147;
  struct tTransportEvent * * _148;
  struct tTransportEvent * * _149;
  struct tTransportEvent * * * _150;
  struct tTransportEvent * * pretmp_151;
  struct tTransportEvent * * _154;
  struct tTransportEvent * * _155;
  struct tTransportEvent * * * _156;
  struct tTransportEvent * * _157;
  struct tTransportEvent * * _161;
  struct tTransportEvent * * * _162;
  struct tTransportEvent * * _166;
  struct tTransportEvent * * _167;
  struct tTransportEvent * * * _168;
  struct tTransportEvent * * _169;
  struct tTransportEvent * * _170;
  struct tTransportEvent * * * _171;
  struct tTransportEvent * * _172;
  struct tTransportEvent * * _173;
  struct tTransportEvent * * _174;
  struct tTransportEvent * * * _175;
  struct tTransportEvent * * _176;
  struct tTransportEvent * * _177;
  struct tTransportEvent * * * _178;
  struct tTransportEvent * * _179;
  struct tTransportEvent * * _180;
  struct tTransportEvent * * * _181;
  struct tTransportEvent * * prephitmp_269;
  struct tTransportEvent * * const pretmp_271;
  struct _Self & _272;
  struct tTransportEvent * * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.383_284;
  long int _289;
  struct _Self & _290;
  struct tTransportEvent * * const prephitmp_295;
  struct tTransportEvent * * prephitmp_301;
  struct tTransportEvent * * prephitmp_302;
  struct tTransportEvent * * pretmp_303;
  struct tTransportEvent * * pretmp_304;
  struct tTransportEvent * * prephitmp_306;
  struct tTransportEvent * * _307;
  struct tTransportEvent * * _308;
  struct tTransportEvent * * * _309;
  struct _Self & _310;
  struct tTransportEvent * * _311;
  struct tTransportEvent * * _312;
  struct tTransportEvent * * _313;
  struct tTransportEvent * * * _314;
  struct tTransportEvent * * _326;
  struct tTransportEvent * * _327;
  struct tTransportEvent * * _328;
  struct tTransportEvent * * * _329;
  long int _333;
  struct _Self & _334;
  long int _339;
  long int _342;
  long int _343;
  long int _344;
  long unsigned int _346;
  long int __n.394_347;
  struct _Self & _352;
  long int _369;
  long int _371;
  long int _372;
  long int _373;
  long int _374;
  long int _375;
  long int _377;
  long int _379;
  long int _380;
  long int _381;
  long int _382;
  long int _384;
  long int _386;
  long int _387;
  long int _388;
  struct tTransportEvent * * const prephitmp_390;
  long int _392;
  long int _394;
  long int _395;
  long int _398;
  long int _400;
  long int _401;
  struct tTransportEvent * * * _403;
  struct tTransportEvent * * _404;
  struct tTransportEvent * * * _406;
  struct tTransportEvent * * _407;
  struct tTransportEvent * * const pretmp_409;
  struct tTransportEvent * * const prephitmp_410;
  struct tTransportEvent * * * const prephitmp_411;
  long unsigned int __clen.409_415;
  long unsigned int _416;
  sizetype _417;
  struct tTransportEvent * * _419;
  long int _421;
  struct tTransportEvent * * _431;
  struct tTransportEvent * * _432;
  struct tTransportEvent * * _433;
  struct tTransportEvent * * * _434;
  struct tTransportEvent * * * const pretmp_445;
  struct tTransportEvent * * const prephitmp_446;
  struct tTransportEvent * * const prephitmp_494;
  struct tTransportEvent * * const pretmp_495;
  struct tTransportEvent * * const pretmp_557;
  struct tTransportEvent * * * const pretmp_558;
  struct tTransportEvent * * const prephitmp_559;
  struct tTransportEvent * * const pretmp_560;
  struct tTransportEvent * * pretmp_570;
  long int _575;
  struct tTransportEvent * * const pretmp_576;

  <bb 2>:
  # DEBUG D#2732 => &this_4(D)->D.61649._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#2732
  # DEBUG __size => 8
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 64;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 8;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 8;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#395 => &MEM[(const struct deque *)this_4(D)].D.61649._M_impl._M_start
  # DEBUG D#396 => &MEM[(const struct deque *)this_4(D)].D.61649._M_impl._M_finish
  # DEBUG __x => D#396
  # DEBUG __y => D#395
  # DEBUG __size => 8
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 64;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 8;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.396_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.396_10)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.61649._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 8;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_271 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_140 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_130 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_132 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;

  <bb 5>:
  # prephitmp_131 = PHI <_121(3), pretmp_271(4)>
  # prephitmp_295 = PHI <_278(3), pretmp_140(4)>
  # prephitmp_141 = PHI <_119(3), pretmp_130(4)>
  # prephitmp_13 = PHI <_106(3), pretmp_132(4)>
  __n.383_284 = (long int) __n_11(D);
  # DEBUG D#3388 => &this_4(D)->D.61649._M_impl._M_start
  # DEBUG this => D#3388
  # DEBUG __n => __n.383_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#3388
  __tmp._M_cur = prephitmp_131;
  __tmp._M_first = prephitmp_295;
  __tmp._M_last = prephitmp_141;
  __tmp._M_node = prephitmp_13;
  # DEBUG this => &__tmp
  # DEBUG __n => __n.383_284
  _289 = -__n.383_284;
  _290 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator+= (&__tmp, _289);
  # DEBUG this => &__new_start
  # DEBUG __x => _290
  __new_start$_M_cur_291 = MEM[(const struct iterator &)_290]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_291
  __new_start$_M_first_292 = MEM[(const struct iterator &)_290]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_292
  __new_start$_M_last_293 = MEM[(const struct iterator &)_290]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_293
  __new_start$_M_node_294 = MEM[(const struct iterator &)_290]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_294
  __tmp ={v} {CLOBBER};
  # DEBUG D#2733 => &this_4(D)->D.61649._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#2733
  _126 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  # DEBUG __old_start$_M_cur => _126
  _127 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  # DEBUG __old_start$_M_first => _127
  _128 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  # DEBUG __old_start$_M_last => _128
  _129 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __old_start$_M_node => _129
  # DEBUG D#3389 => &this_4(D)->D.61649._M_impl._M_start
  # DEBUG this => D#3389
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#3389
  __tmp._M_cur = _126;
  __tmp._M_first = _127;
  __tmp._M_last = _128;
  __tmp._M_node = _129;
  _272 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator+= (&__tmp, _125);
  # DEBUG this => &D.82363
  # DEBUG __x => _272
  SR.5946_273 = MEM[(const struct iterator &)_272]._M_cur;
  SR.5947_274 = MEM[(const struct iterator &)_272]._M_first;
  SR.5948_275 = MEM[(const struct iterator &)_272]._M_last;
  SR.5949_276 = MEM[(const struct iterator &)_272]._M_node;
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.5946_273;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.5947_274;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.5948_275;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.5949_276;
  if (_125 >= __n.383_284)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => D#3389
  # DEBUG __n => __n.383_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#3389
  _29 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp._M_cur = _29;
  _307 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  __tmp._M_first = _307;
  _308 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  __tmp._M_last = _308;
  _309 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  __tmp._M_node = _309;
  _310 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator+= (&__tmp, __n.383_284);
  # DEBUG this => &__start_n
  # DEBUG __x => _310
  _311 = MEM[(const struct iterator &)_310]._M_cur;
  _312 = MEM[(const struct iterator &)_310]._M_first;
  _313 = MEM[(const struct iterator &)_310]._M_last;
  _314 = MEM[(const struct iterator &)_310]._M_node;
  __tmp ={v} {CLOBBER};
  # DEBUG D#2734 => &this_4(D)->D.61649
  # DEBUG this => D#2734
  # DEBUG this => &D.82373
  # DEBUG __x => &__new_start
  D.82373._M_cur = __new_start$_M_cur_291;
  D.82373._M_first = __new_start$_M_first_292;
  D.82373._M_last = __new_start$_M_last_293;
  D.82373._M_node = __new_start$_M_node_294;
  # DEBUG this => &D.82372
  # DEBUG __x => &__start_n
  D.82372._M_cur = _311;
  D.82372._M_first = _312;
  D.82372._M_last = _313;
  D.82372._M_node = _314;
  # DEBUG D#2735 => &this_4(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.82371
  # DEBUG __x => D#2735
  _27 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  D.82371._M_cur = _27;
  _136 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  D.82371._M_first = _136;
  _137 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  D.82371._M_last = _137;
  _138 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  D.82371._M_node = _138;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter15tTransportEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.640 (&D.82371, &D.82372, &D.82373);
  D.82371 ={v} {CLOBBER};
  D.82372 ={v} {CLOBBER};
  D.82373 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_291;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_292;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_293;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_294;
  # DEBUG this => &D.82385
  # DEBUG __x => &__old_start
  # DEBUG this => &D.82384
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.82383
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.82383
  # DEBUG __last => &D.82384
  # DEBUG __result => &D.82385
  # DEBUG this => &D.143507
  # DEBUG __x => &D.82385
  D.143507._M_cur = _126;
  D.143507._M_first = _127;
  D.143507._M_last = _128;
  D.143507._M_node = _129;
  # DEBUG this => &D.143506
  # DEBUG __x => &D.82384
  D.143506._M_cur = _28;
  D.143506._M_first = _133;
  D.143506._M_last = _134;
  D.143506._M_node = _135;
  # DEBUG this => &D.143505
  # DEBUG __x => &D.82383
  D.143505._M_cur = _311;
  D.143505._M_first = _312;
  D.143505._M_last = _313;
  D.143505._M_node = _314;
  D.143504 = std::copy<EventRouter::tTransportEvent*> (D.143505, D.143506, &D.143507); [return slot optimization]
  D.143505 ={v} {CLOBBER};
  D.143506 ={v} {CLOBBER};
  D.143507 ={v} {CLOBBER};
  D.82383 ={v} {CLOBBER};
  D.82384 ={v} {CLOBBER};
  D.82385 ={v} {CLOBBER};
  D.82387 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator- (__pos_6(D), __n.383_284); [return slot optimization]
  std::copy<EventRouter::tTransportEvent*> (__first, __last, &D.82387);
  D.82387 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 8>;

  <bb 7>:
  __mid = __first;
  _38 = __n.383_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#2414 => &__mid
  # DEBUG D.128298 => D#2414
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>::operator+= (&__mid, _38);
  # DEBUG D#2736 => &this_4(D)->D.61649
  # DEBUG this => D#2736
  # DEBUG D#3391 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.82407
  # DEBUG __x => &__new_start
  # DEBUG this => &D.82404
  # DEBUG __x => __pos_6(D)
  _42 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _148 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _149 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _150 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG D#2737 => &this_4(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.82403
  # DEBUG __x => D#2737
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _145 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.82403
  # DEBUG __last1 => &D.82404
  __first2$_M_cur_527 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first2$_M_cur => __first2$_M_cur_527
  __first2$_M_first_52 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first2$_M_first => __first2$_M_first_52
  __first2$_M_last_47 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first2$_M_last => __first2$_M_last_47
  __first2$_M_node_513 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first2$_M_node => __first2$_M_node_513
  __last2$_M_cur_512 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __last2$_M_cur => __last2$_M_cur_512
  __last2$_M_first_26 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __last2$_M_first => __last2$_M_first_26
  __last2$_M_last_17 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __last2$_M_last => __last2$_M_last_17
  __last2$_M_node_16 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __last2$_M_node => __last2$_M_node_16
  # DEBUG __result => &D.82407
  # DEBUG __alloc => D#3391
  # DEBUG this => &D.143540
  # DEBUG __x => &D.82407
  D.143540._M_cur = __new_start$_M_cur_291;
  D.143540._M_first = __new_start$_M_first_292;
  D.143540._M_last = __new_start$_M_last_293;
  D.143540._M_node = __new_start$_M_node_294;
  # DEBUG this => &D.143539
  # DEBUG __x => &D.82404
  D.143539._M_cur = _42;
  D.143539._M_first = _148;
  D.143539._M_last = _149;
  D.143539._M_node = _150;
  # DEBUG this => &D.143538
  # DEBUG __x => &D.82403
  D.143538._M_cur = _48;
  D.143538._M_first = _145;
  D.143538._M_last = _146;
  D.143538._M_node = _147;
  # DEBUG D#2731 => D#3391
  __mid = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter15tTransportEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.640 (&D.143538, &D.143539, &D.143540); [return slot optimization]
  D.143538 ={v} {CLOBBER};
  D.143539 ={v} {CLOBBER};
  D.143540 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  _326 = __mid._M_cur;
  _327 = __mid._M_first;
  _328 = __mid._M_last;
  _329 = __mid._M_node;
  # DEBUG D#1857 => D#3391
  MEM[(struct _Deque_iterator *)&__first] = __first2$_M_cur_527;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first2$_M_first_52;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first2$_M_last_47;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first2$_M_node_513;
  MEM[(struct _Deque_iterator *)&__last] = __last2$_M_cur_512;
  MEM[(struct _Deque_iterator *)&__last + 8B] = __last2$_M_first_26;
  MEM[(struct _Deque_iterator *)&__last + 16B] = __last2$_M_last_17;
  MEM[(struct _Deque_iterator *)&__last + 24B] = __last2$_M_node_16;
  # DEBUG __result => NULL
  # DEBUG D.143530 => D#1857
  # DEBUG this => &D.143537
  # DEBUG __x => NULL
  D.143537._M_cur = _326;
  D.143537._M_first = _327;
  D.143537._M_last = _328;
  D.143537._M_node = _329;
  D.143536 = std::uninitialized_copy<std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>, std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**> > (__first, __last, &D.143537); [return slot optimization]
  D.143537 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.82403 ={v} {CLOBBER};
  D.82404 ={v} {CLOBBER};
  D.82407 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_291;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_292;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_293;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_294;
  # DEBUG this => &D.82411
  # DEBUG __x => &__old_start
  D.82411._M_cur = _126;
  D.82411._M_first = _127;
  D.82411._M_last = _128;
  D.82411._M_node = _129;
  std::copy<EventRouter::tTransportEvent*> (__mid, __last, &D.82411);
  D.82411 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};

  <bb 8>:

  <bb 24>:
  # DEBUG D#3396 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#3396
  # DEBUG D#3397 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#3397
  # DEBUG D#3398 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#3398
  # DEBUG D#3399 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#3399
  return;

  <bb 9>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.61649._M_impl._M_finish._M_last;
  _339 = (long int) _57;
  _342 = _339 - _96;
  _343 = _342 /[ex] 8;
  _344 = _343 + -1;
  __vacancies_345 = (const size_type) _344;
  # DEBUG __vacancies => __vacancies_345
  if (__n_11(D) > __vacancies_345)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _346 = __n_11(D) - __vacancies_345;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_new_elements_at_back (this_4(D), _346);
  pretmp_560 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_409 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_557 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_558 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;

  <bb 11>:
  # prephitmp_559 = PHI <_95(9), pretmp_560(10)>
  # prephitmp_410 = PHI <_97(9), pretmp_409(10)>
  # prephitmp_390 = PHI <_57(9), pretmp_557(10)>
  # prephitmp_411 = PHI <_80(9), pretmp_558(10)>
  __n.394_347 = (long int) __n_11(D);
  # DEBUG D#3390 => &this_4(D)->D.61649._M_impl._M_finish
  # DEBUG this => D#3390
  # DEBUG __n => __n.394_347
  # DEBUG this => &__tmp
  # DEBUG __x => D#3390
  __tmp._M_cur = prephitmp_559;
  __tmp._M_first = prephitmp_410;
  __tmp._M_last = prephitmp_390;
  __tmp._M_node = prephitmp_411;
  _352 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator+= (&__tmp, __n.394_347);
  # DEBUG this => &__new_finish
  # DEBUG __x => _352
  __new_finish$_M_cur_353 = MEM[(const struct iterator &)_352]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_353
  __new_finish$_M_first_354 = MEM[(const struct iterator &)_352]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_354
  __new_finish$_M_last_355 = MEM[(const struct iterator &)_352]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_355
  __new_finish$_M_node_356 = MEM[(const struct iterator &)_352]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_356
  __tmp ={v} {CLOBBER};
  # DEBUG D#2738 => &this_4(D)->D.61649._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#2738
  _39 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  # DEBUG __old_finish$_M_cur => _39
  _154 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __old_finish$_M_first => _154
  _155 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __old_finish$_M_last => _155
  _156 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __old_finish$_M_node => _156
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#3406 => &this_4(D)->D.61649._M_impl._M_finish
  # DEBUG this => D#3406
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#3406
  __tmp._M_cur = _39;
  __tmp._M_first = _154;
  __tmp._M_last = _155;
  __tmp._M_node = _156;
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  _333 = -__elemsafter_55;
  _334 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator+= (&__tmp, _333);
  # DEBUG this => &D.82418
  # DEBUG __x => _334
  SR.5954_335 = MEM[(const struct iterator &)_334]._M_cur;
  SR.5955_336 = MEM[(const struct iterator &)_334]._M_first;
  SR.5956_337 = MEM[(const struct iterator &)_334]._M_last;
  SR.5957_338 = MEM[(const struct iterator &)_334]._M_node;
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.5954_335;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.5955_336;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.5956_337;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.5957_338;
  if (__elemsafter_55 > __n.394_347)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  _56 = &this_4(D)->D.61649._M_impl._M_finish;
  __finish_n = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator- (_56, __n.394_347); [return slot optimization]
  # DEBUG D#2739 => &this_4(D)->D.61649
  # DEBUG this => D#2739
  # DEBUG D#2740 => &this_4(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.82423
  # DEBUG __x => D#2740
  _63 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  D.82423._M_cur = _63;
  _169 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  D.82423._M_first = _169;
  _170 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  D.82423._M_last = _170;
  _171 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  D.82423._M_node = _171;
  # DEBUG D#2741 => &this_4(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.82422
  # DEBUG __x => D#2741
  D.82422._M_cur = _63;
  D.82422._M_first = _169;
  D.82422._M_last = _170;
  D.82422._M_node = _171;
  # DEBUG this => &D.82421
  # DEBUG __x => &__finish_n
  _69 = __finish_n._M_cur;
  D.82421._M_cur = _69;
  _166 = __finish_n._M_first;
  D.82421._M_first = _166;
  _167 = __finish_n._M_last;
  D.82421._M_last = _167;
  _168 = __finish_n._M_node;
  D.82421._M_node = _168;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter15tTransportEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.640 (&D.82421, &D.82422, &D.82423);
  D.82421 ={v} {CLOBBER};
  D.82422 ={v} {CLOBBER};
  D.82423 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_353;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_354;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_355;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_356;
  # DEBUG this => &D.82435
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.82434
  # DEBUG __x => &__finish_n
  SR.5966_70 = __finish_n._M_cur;
  SR.5967_163 = __finish_n._M_first;
  SR.5968_164 = __finish_n._M_last;
  SR.5969_165 = __finish_n._M_node;
  # DEBUG this => &D.82433
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.82433
  # DEBUG __last => &D.82434
  # DEBUG __result => &D.82435
  # DEBUG this => &D.143572
  # DEBUG __x => &D.82435
  D.143572._M_cur = _39;
  D.143572._M_first = _154;
  D.143572._M_last = _155;
  D.143572._M_node = _156;
  # DEBUG this => &D.143571
  # DEBUG __x => &D.82434
  # DEBUG this => &D.143570
  # DEBUG __x => &D.82433
  MEM[(struct _Deque_iterator *)&__last] = SR.5966_70;
  MEM[(struct _Deque_iterator *)&__last + 8B] = SR.5967_163;
  MEM[(struct _Deque_iterator *)&__last + 16B] = SR.5968_164;
  MEM[(struct _Deque_iterator *)&__last + 24B] = SR.5969_165;
  # DEBUG __result => &D.143572
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _369 = (long int) SR.5969_165;
  _371 = (long int) _162;
  _372 = _369 - _371;
  _373 = _372 /[ex] 8;
  _374 = _373 + -1;
  _375 = _374 * 64;
  _377 = (long int) SR.5966_70;
  _379 = (long int) SR.5967_163;
  _380 = _377 - _379;
  _381 = _380 /[ex] 8;
  _382 = _375 + _381;
  _384 = (long int) _161;
  _386 = (long int) _75;
  _387 = _384 - _386;
  _388 = _387 /[ex] 8;
  __len_389 = _382 + _388;
  # DEBUG __len => __len_389
  if (__len_389 <= 0)
    goto <bb 21>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # __len.400_81 = PHI <__len_389(13), __len_422(19)>
  # prephitmp_269 = PHI <SR.5966_70(13), pretmp_570(19)>
  # prephitmp_301 = PHI <SR.5967_163(13), pretmp_151(19)>
  # prephitmp_306 = PHI <_39(13), pretmp_303(19)>
  # prephitmp_302 = PHI <_154(13), pretmp_304(19)>
  # DEBUG D#3405 => __last._M_cur
  _392 = (long int) prephitmp_269;
  _394 = (long int) prephitmp_301;
  _395 = _392 - _394;
  __llen_396 = _395 /[ex] 8;
  # DEBUG __llen => __llen_396
  # DEBUG __lend => D#3405
  # DEBUG D#3404 => D.143572._M_cur
  _398 = (long int) prephitmp_306;
  _400 = (long int) prephitmp_302;
  _401 = _398 - _400;
  __rlen_402 = _401 /[ex] 8;
  # DEBUG __rlen => __rlen_402
  # DEBUG __rend => D#3404
  if (__llen_396 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG __size => 8
  # DEBUG __llen => 64
  _403 = __last._M_node;
  _404 = MEM[(struct tTransportEvent * * *)_403 + -8B];
  __lend_405 = _404 + 512;
  # DEBUG __lend => __lend_405

  <bb 16>:
  # __lend_418 = PHI <prephitmp_269(14), __lend_405(15)>
  # __llen_571 = PHI <__llen_396(14), 64(15)>
  # DEBUG __llen => __llen_571
  # DEBUG __lend => __lend_418
  if (__rlen_402 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG __size => 8
  # DEBUG __rlen => 64
  _406 = D.143572._M_node;
  _407 = MEM[(struct tTransportEvent * * *)_406 + -8B];
  __rend_408 = _407 + 512;
  # DEBUG __rend => __rend_408

  <bb 18>:
  # __rend_420 = PHI <prephitmp_306(16), __rend_408(17)>
  # __rlen_566 = PHI <__rlen_402(16), 64(17)>
  # DEBUG __rlen => __rlen_566
  # DEBUG __rend => __rend_420
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _575 = MIN_EXPR <__len.400_81, __llen_571>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_413 = MIN_EXPR <__rlen_566, _575>;
  # DEBUG __clen => D#3387
  __clen.409_415 = (long unsigned int) __clen_413;
  _416 = __clen.409_415 * 8;
  _417 = -_416;
  _419 = __lend_418 + _417;
  std::copy_backward<EventRouter::tTransportEvent**, EventRouter::tTransportEvent**> (_419, __lend_418, __rend_420);
  # DEBUG this => &__last
  # DEBUG __n => D#3387
  _421 = -__clen_413;
  std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>::operator+= (&__last, _421);
  # DEBUG this => &D.143572
  # DEBUG __n => D#3387
  std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator+= (&D.143572, _421);
  __len_422 = __len.400_81 - __clen_413;
  # DEBUG __len => __len_422
  # DEBUG D#3393 => {CLOBBER}
  # DEBUG __llen => D#3393
  # DEBUG D#3394 => {CLOBBER}
  # DEBUG __rlen => D#3394
  if (__len_422 <= 0)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  pretmp_570 = __last._M_cur;
  pretmp_151 = __last._M_first;
  pretmp_303 = D.143572._M_cur;
  pretmp_304 = D.143572._M_first;
  goto <bb 14>;

  <bb 20>:

  <bb 23>:
  pretmp_576 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_495 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_445 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 21>:
  # prephitmp_494 = PHI <pretmp_576(23), _75(12)>
  # prephitmp_446 = PHI <pretmp_495(23), _161(12)>
  # prephitmp_20 = PHI <pretmp_445(23), _162(12)>
  # DEBUG this => &D.143569
  # DEBUG __x => &D.143572
  # DEBUG D#3395 => {CLOBBER}
  # DEBUG __len => D#3395
  D.143570 ={v} {CLOBBER};
  D.143572 ={v} {CLOBBER};
  D.82433 ={v} {CLOBBER};
  D.82434 ={v} {CLOBBER};
  D.82435 ={v} {CLOBBER};
  # DEBUG this => &D.82439
  # DEBUG __x => __pos_6(D)
  D.82439._M_cur = prephitmp_494;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.82439._M_first = _157;
  D.82439._M_last = prephitmp_446;
  D.82439._M_node = prephitmp_20;
  std::copy<EventRouter::tTransportEvent*> (__first, __last, &D.82439);
  D.82439 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 8>;

  <bb 22>:
  __mid = __first;
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#2414 => &__mid
  # DEBUG D.128298 => D#2414
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>::operator+= (&__mid, __elemsafter_55);
  # DEBUG D#2742 => &this_4(D)->D.61649
  # DEBUG this => D#2742
  # DEBUG D#3392 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#2743 => &this_4(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.82454
  # DEBUG __x => D#2743
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#2744 => &this_4(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.82453
  # DEBUG __x => D#2744
  # DEBUG this => &D.82452
  # DEBUG __x => __pos_6(D)
  _88 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _176 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _177 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _178 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  __first1$_M_cur_218 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first1$_M_cur => __first1$_M_cur_218
  __first1$_M_first_473 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __first1$_M_first => __first1$_M_first_473
  __first1$_M_last_474 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first1$_M_last => __first1$_M_last_474
  __first1$_M_node_475 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first1$_M_node => __first1$_M_node_475
  __last1$_M_cur_476 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last1$_M_cur_476
  __last1$_M_first_194 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last1$_M_first_194
  __last1$_M_last_195 = MEM[(struct _Deque_iterator *)&__last + 16B];
  # DEBUG __last1$_M_last => __last1$_M_last_195
  __last1$_M_node_196 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last1$_M_node_196
  # DEBUG __first2 => &D.82452
  # DEBUG __last2 => &D.82453
  # DEBUG __result => &D.82454
  # DEBUG __alloc => D#3392
  # DEBUG this => NULL
  # DEBUG __x => &D.82454
  # DEBUG D#1857 => D#3392
  MEM[(struct _Deque_iterator *)&__first] = __first1$_M_cur_218;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first1$_M_first_473;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first1$_M_last_474;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first1$_M_node_475;
  MEM[(struct _Deque_iterator *)&__last] = __last1$_M_cur_476;
  MEM[(struct _Deque_iterator *)&__last + 8B] = __last1$_M_first_194;
  MEM[(struct _Deque_iterator *)&__last + 16B] = __last1$_M_last_195;
  MEM[(struct _Deque_iterator *)&__last + 24B] = __last1$_M_node_196;
  # DEBUG __result => NULL
  # DEBUG D.143605 => D#1857
  # DEBUG this => &D.143618
  # DEBUG __x => NULL
  D.143618._M_cur = _82;
  D.143618._M_first = _179;
  D.143618._M_last = _180;
  D.143618._M_node = _181;
  __mid = std::uninitialized_copy<std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>, std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**> > (__first, __last, &D.143618); [return slot optimization]
  D.143618 ={v} {CLOBBER};
  # DEBUG this => &D.143621
  # DEBUG __x => &__mid
  _431 = __mid._M_cur;
  D.143621._M_cur = _431;
  _432 = __mid._M_first;
  D.143621._M_first = _432;
  _433 = __mid._M_last;
  D.143621._M_last = _433;
  _434 = __mid._M_node;
  D.143621._M_node = _434;
  # DEBUG this => &D.143620
  # DEBUG __x => &D.82453
  D.143620._M_cur = _82;
  D.143620._M_first = _179;
  D.143620._M_last = _180;
  D.143620._M_node = _181;
  # DEBUG this => &D.143619
  # DEBUG __x => &D.82452
  D.143619._M_cur = _88;
  D.143619._M_first = _176;
  D.143619._M_last = _177;
  D.143619._M_node = _178;
  # DEBUG D#2731 => D#3392
  D.143617 = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter15tTransportEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.640 (&D.143619, &D.143620, &D.143621); [return slot optimization]
  D.143619 ={v} {CLOBBER};
  D.143620 ={v} {CLOBBER};
  D.143621 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.82452 ={v} {CLOBBER};
  D.82453 ={v} {CLOBBER};
  D.82454 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_353;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_354;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_355;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_356;
  # DEBUG this => &D.82458
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.82458._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.82458._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.82458._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.82458._M_node = _175;
  std::copy<EventRouter::tTransportEvent*> (__first, __mid, &D.82458);
  D.82458 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 8>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>] (_ZNSt5dequeIPN11EventRouter15tTransportEventESaIS2_EEaSERKS4_, funcdef_no=4549, decl_uid=61228, cgraph_uid=2898, symbol_order=2899)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = EventRouter::tTransportEvent*; _Alloc = std::allocator<EventRouter::tTransportEvent*>] (struct deque * const this, const struct deque & __x)
{
  struct tTransportEvent * * * __new_finish$_M_node;
  struct tTransportEvent * * __new_finish$_M_last;
  struct tTransportEvent * * __new_finish$_M_first;
  struct tTransportEvent * * __new_finish$_M_cur;
  struct tTransportEvent * * * __new_start$_M_node;
  struct tTransportEvent * * __new_start$_M_last;
  struct tTransportEvent * * __new_start$_M_first;
  struct tTransportEvent * * __new_start$_M_cur;
  struct tTransportEvent * * * __last$_M_node;
  struct tTransportEvent * * __last$_M_last;
  struct tTransportEvent * * __last$_M_first;
  struct tTransportEvent * * __last$_M_cur;
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_first;
  struct tTransportEvent * * __first$_M_cur;
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_first;
  struct tTransportEvent * * __first$_M_cur;
  struct tTransportEvent * * * __last$_M_node;
  struct tTransportEvent * * __last$_M_last;
  struct tTransportEvent * * __last$_M_first;
  struct tTransportEvent * * __last$_M_cur;
  struct tTransportEvent * * * __last$_M_node;
  struct tTransportEvent * * __last$_M_last;
  struct tTransportEvent * * __last$_M_first;
  struct tTransportEvent * * __last$_M_cur;
  struct tTransportEvent * * * __first$_M_node;
  struct tTransportEvent * * __first$_M_last;
  struct tTransportEvent * * __first$_M_first;
  struct tTransportEvent * * __first$_M_cur;
  struct tTransportEvent * * * SR.5998;
  struct tTransportEvent * * SR.5997;
  struct tTransportEvent * * SR.5996;
  struct tTransportEvent * * SR.5995;
  struct tTransportEvent * * * SR.5994;
  struct tTransportEvent * * SR.5993;
  struct tTransportEvent * * SR.5992;
  struct tTransportEvent * * SR.5991;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.143786;
  struct _Deque_iterator D.143785;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.143766;
  struct _Deque_iterator D.143765;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.143758;
  struct _Deque_iterator D.143757;
  struct iterator D.143756;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.143744;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.143736;
  struct iterator D.143735;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct tTransportEvent * * * __nstart;
  struct const_iterator __mid;
  struct iterator D.79613;
  struct _Deque_iterator D.92330;
  struct _Deque_iterator D.92329;
  struct _Deque_iterator D.79605;
  struct const_iterator D.79601;
  struct _Deque_iterator D.92326;
  struct _Deque_iterator D.92325;
  struct _Deque_iterator D.79598;
  struct _Deque_iterator D.79599;
  long int _5;
  struct tTransportEvent * * * _6;
  struct tTransportEvent * * _9;
  struct tTransportEvent * * _12;
  struct tTransportEvent * * _13;
  struct _Self & _14;
  struct tTransportEvent * * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  struct tTransportEvent * * _28;
  long int _29;
  struct tTransportEvent * * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  struct tTransportEvent * * * _43;
  long int _44;
  struct tTransportEvent * * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  struct tTransportEvent * * _51;
  long int _52;
  struct tTransportEvent * * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  struct tTransportEvent * * _58;
  long int _59;
  struct tTransportEvent * * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  struct tTransportEvent * * _66;
  struct tTransportEvent * * _67;
  struct tTransportEvent * * _68;
  struct tTransportEvent * * _70;
  struct tTransportEvent * * _72;
  struct tTransportEvent * * _73;
  struct tTransportEvent * * * _74;
  struct tTransportEvent * * _75;
  struct tTransportEvent * * _76;
  struct tTransportEvent * * * _77;
  struct tTransportEvent * * _78;
  struct tTransportEvent * * _79;
  struct tTransportEvent * * * _80;
  struct tTransportEvent * * * _114;
  struct tTransportEvent * * * _115;
  struct tTransportEvent * * * _116;
  struct tTransportEvent * * _119;
  long int _129;
  long int _130;
  long int _131;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  long int _138;
  long int _139;
  long int _140;
  long int _141;
  long int _142;
  long int _143;
  difference_type _144;
  struct tTransportEvent * * _147;
  struct tTransportEvent * * _153;
  struct tTransportEvent * * _154;
  struct tTransportEvent * * _155;
  struct tTransportEvent * * * _156;
  long int _165;
  struct tTransportEvent * * _166;
  long int _167;
  long int _168;
  long int _169;
  long unsigned int _171;
  struct tTransportEvent * * _176;
  struct tTransportEvent * * * _177;
  long int _178;
  struct _Self & _179;
  long int _189;
  long int _191;
  long int _192;
  long int _193;
  long int _194;
  long unsigned int _196;
  struct tTransportEvent * * _200;
  struct tTransportEvent * * * _202;
  struct _Self & _203;
  struct tTransportEvent * * const prephitmp_242;
  struct tTransportEvent * * const pretmp_243;
  struct tTransportEvent * * const prephitmp_251;
  struct tTransportEvent * * const pretmp_252;
  struct tTransportEvent * * const prephitmp_265;
  struct tTransportEvent * * const pretmp_266;
  struct tTransportEvent * * const prephitmp_267;
  struct tTransportEvent * * const pretmp_268;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#395 => &MEM[(const struct deque *)this_3(D)].D.61649._M_impl._M_start
  # DEBUG D#396 => &MEM[(const struct deque *)this_3(D)].D.61649._M_impl._M_finish
  # DEBUG __x => D#396
  # DEBUG __y => D#395
  # DEBUG __size => 8
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 64;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 8;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 8;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#395 => &__x_2(D)->D.61649._M_impl._M_start
  # DEBUG D#396 => &__x_2(D)->D.61649._M_impl._M_finish
  # DEBUG __x => D#396
  # DEBUG __y => D#395
  # DEBUG __size => 8
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.5994_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.5994_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 64;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 8;
  _34 = _27 + _33;
  SR.5993_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.5993_35;
  SR.5991_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.5991_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#2751 => &this_3(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.79598
  # DEBUG __x => D#2751
  D.79598._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.79598._M_first = _68;
  D.79598._M_last = _58;
  D.79598._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#230 => &__x_2(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.92325
  # DEBUG __x => D#230
  D.92325._M_cur = _28;
  D.92325._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.92325._M_last = _67;
  D.92325._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#231 => &__x_2(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.92326
  # DEBUG __x => D#231
  D.92326._M_cur = SR.5991_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.92326._M_first = _66;
  D.92326._M_last = SR.5993_35;
  D.92326._M_node = SR.5994_22;
  D.79599 = std::copy<EventRouter::tTransportEvent*> (D.92326, D.92325, &D.79598); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.79599
  # DEBUG D#1535 => &this_3(D)->D.61649
  # DEBUG this => D#1535
  # DEBUG this => this_3(D)
  # DEBUG D#172 => &this_3(D)->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1542 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.111686 => D#1542
  # DEBUG D#1541 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.111687 => D#1541
  # DEBUG D#1540 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.111688 => D#1540
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.111689 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.79599
  # DEBUG D#1539 => MEM[(const struct iterator &)&D.79599]._M_cur
  # DEBUG D.111690 => D#1539
  # DEBUG D#1538 => MEM[(const struct iterator &)&D.79599]._M_first
  # DEBUG D.111691 => D#1538
  # DEBUG D#1537 => MEM[(const struct iterator &)&D.79599]._M_last
  # DEBUG D.111692 => D#1537
  _115 = MEM[(const struct iterator &)&D.79599]._M_node;
  # DEBUG D.111693 => _115
  # DEBUG D#174 => this_3(D)
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.111675 => D#177
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#1536 => &this_3(D)->D.61649
  # DEBUG this => D#1536
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.61649._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.79599];
  D.79599 ={v} {CLOBBER};
  D.79598 ={v} {CLOBBER};
  goto <bb 17>;

  <bb 6>:

  <bb 7>:
  # __nstart_99 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_99
  _119 = *__nstart_99;
  # DEBUG this => D#1536
  # DEBUG __p => _119
  # DEBUG __size => 8
  # DEBUG D#1244 => &D#1536->_M_impl
  # DEBUG D#1242 => D#1244
  # DEBUG __p => _119
  # DEBUG __a => D#1242
  # DEBUG __n => D#1243
  # DEBUG D#1241 => D#1243
  # DEBUG D#1240 => D#1242
  # DEBUG D#1238 => D#1240
  # DEBUG D#1239 => D#1241
  # DEBUG __p => _119
  # DEBUG this => D#1238
  # DEBUG D.143719 => D#1239
  operator delete (_119);
  __nstart_120 = __nstart_99 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#231 => &__x_2(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.79601
  # DEBUG __x => D#231
  SR.5992_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.79601
  # DEBUG __n => _64
  MEM[(struct _Deque_iterator *)&__tmp] = SR.5991_37;
  MEM[(struct _Deque_iterator *)&__tmp + 8B] = SR.5992_81;
  MEM[(struct _Deque_iterator *)&__tmp + 16B] = SR.5993_35;
  MEM[(struct _Deque_iterator *)&__tmp + 24B] = SR.5994_22;
  _14 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>::operator+= (&__tmp, _64);
  __mid = MEM[(const struct _Deque_iterator &)_14];
  __tmp ={v} {CLOBBER};
  # DEBUG D#2749 => &this_3(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.79605
  # DEBUG __x => D#2749
  _9 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  D.79605._M_cur = _9;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.79605._M_first = _78;
  _79 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  D.79605._M_last = _79;
  _80 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  D.79605._M_node = _80;
  # DEBUG this => __x_2(D)
  # DEBUG D#231 => &__x_2(D)->D.61649._M_impl._M_start
  # DEBUG this => &D.92329
  # DEBUG __x => D#231
  _12 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  D.92329._M_cur = _12;
  _75 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.92329._M_first = _75;
  _76 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  D.92329._M_last = _76;
  _77 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  D.92329._M_node = _77;
  std::copy<EventRouter::tTransportEvent*> (D.92329, __mid, &D.79605);
  D.79605 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#230 => &__x_2(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.92330
  # DEBUG __x => D#230
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  _73 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#2750 => &this_3(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.79613
  # DEBUG __x => D#2750
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.79613
  __first$_M_cur_225 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first$_M_cur => __first$_M_cur_225
  __first$_M_first_224 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __first$_M_first => __first$_M_first_224
  __first$_M_last_219 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first$_M_last => __first$_M_last_219
  __first$_M_node_218 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => NULL
  # DEBUG __x => &D.79613
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_225
  # DEBUG __first$_M_first => __first$_M_first_224
  # DEBUG __first$_M_last => __first$_M_last_219
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => &D.143735
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.143735
  # DEBUG __first$_M_cur => __first$_M_cur_225
  # DEBUG __first$_M_first => __first$_M_first_224
  # DEBUG __first$_M_last => __first$_M_last_219
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG D#2418 => __first
  # DEBUG D#2418 => __first
  # DEBUG D#2418 => __first
  # DEBUG D#2419 => __last
  # DEBUG D#2419 => __last
  # DEBUG D#2419 => __last
  # DEBUG D.127186 => D#2414
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 8
  _129 = (long int) _74;
  _130 = (long int) __first$_M_node_218;
  _131 = _129 - _130;
  _132 = _131 /[ex] 8;
  _133 = _132 + -1;
  _134 = _133 * 64;
  _135 = (long int) _13;
  _136 = (long int) _72;
  _137 = _135 - _136;
  _138 = _137 /[ex] 8;
  _139 = _134 + _138;
  _140 = (long int) __first$_M_last_219;
  _141 = (long int) __first$_M_cur_225;
  _142 = _140 - _141;
  _143 = _142 /[ex] 8;
  _144 = _139 + _143;
  __n_145 = (const size_type) _144;
  # DEBUG __n => __n_145
  _147 = this_3(D)->D.61649._M_impl._M_start._M_cur;
  if (_17 == _147)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_145
  _165 = (long int) _17;
  _166 = this_3(D)->D.61649._M_impl._M_start._M_first;
  _167 = (long int) _166;
  _168 = _165 - _167;
  _169 = _168 /[ex] 8;
  __vacancies_170 = (const size_type) _169;
  # DEBUG __vacancies => __vacancies_170
  if (__n_145 > __vacancies_170)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _171 = __n_145 - __vacancies_170;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_new_elements_at_front (this_3(D), _171);
  pretmp_268 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_266 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;

  <bb 12>:
  # prephitmp_267 = PHI <_147(10), pretmp_268(11)>
  # prephitmp_265 = PHI <_166(10), pretmp_266(11)>
  # DEBUG D#3408 => &this_3(D)->D.61649._M_impl._M_start
  # DEBUG this => D#3408
  # DEBUG __n => _144
  # DEBUG this => &__tmp
  # DEBUG __x => D#3408
  __tmp._M_cur = prephitmp_267;
  __tmp._M_first = prephitmp_265;
  _176 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  __tmp._M_last = _176;
  _177 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  __tmp._M_node = _177;
  # DEBUG this => &__tmp
  # DEBUG __n => _144
  _178 = -_144;
  _179 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator+= (&__tmp, _178);
  # DEBUG this => &__new_start
  # DEBUG __x => _179
  __new_start$_M_cur_180 = MEM[(const struct iterator &)_179]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_180
  __new_start$_M_first_181 = MEM[(const struct iterator &)_179]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_181
  __new_start$_M_last_182 = MEM[(const struct iterator &)_179]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_182
  __new_start$_M_node_183 = MEM[(const struct iterator &)_179]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_183
  __tmp ={v} {CLOBBER};
  # DEBUG D#2745 => &this_3(D)->D.61649
  # DEBUG this => D#2745
  # DEBUG this => &D.143758
  # DEBUG __x => &__new_start
  MEM[(struct _Deque_iterator *)&__first] = __first$_M_cur_225;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first$_M_first_224;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first$_M_last_219;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first$_M_node_218;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.143758
  # DEBUG D.143762 => D#1857
  # DEBUG this => &D.143766
  # DEBUG __x => &D.143758
  D.143766._M_cur = __new_start$_M_cur_180;
  D.143766._M_first = __new_start$_M_first_181;
  D.143766._M_last = __new_start$_M_last_182;
  D.143766._M_node = __new_start$_M_node_183;
  D.143765 = std::uninitialized_copy<std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>, std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**> > (__first, __last, &D.143766); [return slot optimization]
  D.143766 ={v} {CLOBBER};
  D.143758 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_180;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_181;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_182;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_183;
  # DEBUG D#3413 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#3413
  # DEBUG D#3414 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#3414
  # DEBUG D#3415 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#3415
  # DEBUG D#3416 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#3416
  goto <bb 16>;

  <bb 13>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_145
  _189 = (long int) _70;
  _191 = (long int) _17;
  _192 = _189 - _191;
  _193 = _192 /[ex] 8;
  _194 = _193 + -1;
  __vacancies_195 = (const size_type) _194;
  # DEBUG __vacancies => __vacancies_195
  if (__n_145 > __vacancies_195)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _196 = __n_145 - __vacancies_195;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_new_elements_at_back (this_3(D), _196);
  pretmp_252 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;

  <bb 15>:
  # prephitmp_251 = PHI <_17(13), pretmp_252(14)>
  # prephitmp_242 = PHI <_70(13), pretmp_243(14)>
  # DEBUG D#3407 => &this_3(D)->D.61649._M_impl._M_finish
  # DEBUG this => D#3407
  # DEBUG __n => _144
  # DEBUG this => &__tmp
  # DEBUG __x => D#3407
  __tmp._M_cur = prephitmp_251;
  _200 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  __tmp._M_first = _200;
  __tmp._M_last = prephitmp_242;
  _202 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  __tmp._M_node = _202;
  _203 = std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**>::operator+= (&__tmp, _144);
  # DEBUG this => &__new_finish
  # DEBUG __x => _203
  __new_finish$_M_cur_204 = MEM[(const struct iterator &)_203]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_204
  __new_finish$_M_first_205 = MEM[(const struct iterator &)_203]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_205
  __new_finish$_M_last_206 = MEM[(const struct iterator &)_203]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_206
  __new_finish$_M_node_207 = MEM[(const struct iterator &)_203]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_207
  __tmp ={v} {CLOBBER};
  # DEBUG D#2746 => &this_3(D)->D.61649
  # DEBUG this => D#2746
  # DEBUG D#2747 => &this_3(D)->D.61649._M_impl._M_finish
  # DEBUG this => &D.143757
  # DEBUG __x => D#2747
  _153 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  _154 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  _155 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  _156 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  MEM[(struct _Deque_iterator *)&__first] = __first$_M_cur_225;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first$_M_first_224;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first$_M_last_219;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first$_M_node_218;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.143757
  # DEBUG D.143782 => D#1857
  # DEBUG this => &D.143786
  # DEBUG __x => &D.143757
  D.143786._M_cur = _153;
  D.143786._M_first = _154;
  D.143786._M_last = _155;
  D.143786._M_node = _156;
  D.143785 = std::uninitialized_copy<std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent* const&, EventRouter::tTransportEvent* const*>, std::_Deque_iterator<EventRouter::tTransportEvent*, EventRouter::tTransportEvent*&, EventRouter::tTransportEvent**> > (__first, __last, &D.143786); [return slot optimization]
  D.143786 ={v} {CLOBBER};
  D.143757 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_204;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_205;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_206;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_207;
  # DEBUG D#3409 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#3409
  # DEBUG D#3410 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#3410
  # DEBUG D#3411 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#3411
  # DEBUG D#3412 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#3412

  <bb 16>:
  D.143735 ={v} {CLOBBER};
  D.79613 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};

  <bb 17>:
  return this_3(D);

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<EventRouter::tTransportEvent*>; _Alloc = std::allocator<std::queue<EventRouter::tTransportEvent*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<EventRouter::tTransportEvent*>*, std::vector<std::queue<EventRouter::tTransportEvent*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<EventRouter::tTransportEvent*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<EventRouter::tTransportEvent*>] (_ZNSt6vectorISt5queueIPN11EventRouter15tTransportEventESt5dequeIS3_SaIS3_EEESaIS7_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS7_S9_EEmRKS7_, funcdef_no=3383, decl_uid=54458, cgraph_uid=1732, symbol_order=1733)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<EventRouter::tTransportEvent*>; _Alloc = std::allocator<std::queue<EventRouter::tTransportEvent*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<EventRouter::tTransportEvent*>*, std::vector<std::queue<EventRouter::tTransportEvent*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<EventRouter::tTransportEvent*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<EventRouter::tTransportEvent*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.143879;
  const size_type __len;
  size_type D.143878;
  size_type __n;
  struct queue * D.143869;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  bool _18;
  struct queue * _20;
  long int __last.360_21;
  struct queue * const _24;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct queue * _32;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _38;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  const struct deque * _52;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _62;
  struct queue * _63;
  struct queue * _67;
  long unsigned int _70;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  struct queue * _85;
  struct deque * _87;
  struct queue * _94;
  struct _Deque_base * _95;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  struct queue * prephitmp_120;
  long unsigned int pretmp_134;
  long unsigned int prephitmp_135;
  struct queue * _137;
  long unsigned int _139;
  bool _140;
  long int _141;
  long int _142;
  long int _143;
  long unsigned int _145;
  struct queue * pretmp_152;
  long unsigned int prephitmp_153;
  long int _163;
  long int _164;
  difference_type _165;
  difference_type _168;
  long int _172;
  long int _173;
  bool _174;
  long int _177;
  long int _183;

  <bb 2>:
  # DEBUG D#3418 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3418
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 47>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.54535._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.54535._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 29>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.131512 => __x_29(D)
  _52 = &MEM[(const struct queue &)__x_29(D)].c;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::deque (&__x_copy.c, _52);
  # DEBUG this => this_9(D)
  # DEBUG D#232 => &this_9(D)->D.54535._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#232
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.74107
  # DEBUG __rhs => &__position
  # DEBUG this => &D.74107
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#2756 => &this_9(D)->D.54535
  # DEBUG this => D#2756
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#1863
  # DEBUG D#1862 => D#1863
  # DEBUG D#1861 => D#1862
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.131525 => D#1861
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<EventRouter::tTransportEvent*>*, std::queue<EventRouter::tTransportEvent*>*> (__last_61, __old_finish_26, __old_finish_26);

  <bb 6>:
  _62 = this_9(D)->D.54535._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.54535._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3418
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3418
  # DEBUG __it => D#3418
  # DEBUG __first => D#3418
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3418
  # DEBUG __it => D#3418
  # DEBUG __first => D#3418
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#3418
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.360_21 = (long int) __last_61;
  _73 = __last.360_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3418
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3418
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_171 = PHI <__old_finish_26(8), __old_finish_58(12)>
  # __last_161 = PHI <__last_61(8), __last_66(12)>
  # __n_166 = PHI <__n_72(8), __n_81(12)>
  # DEBUG __n => __n_166
  # DEBUG __result => __old_finish_171
  # DEBUG __last => __last_161
  __last_66 = __last_161 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_171 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.131555 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::operator= (_80, _56);
  goto <bb 11>;

<L20>:
  goto <bb 49> (<L10>);

  <bb 11>:
  __n_81 = __n_166 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#1268 => &__x_copy.c
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.61649);
  __x_copy ={v} {CLOBBER};
  goto <bb 47>;

  <bb 14>:

  <bb 15>:
  # __position_157 = PHI <__position_23(14), __position_84(18)>
  # DEBUG __first => __position_157
  # DEBUG this => __position_157
  # DEBUG D.131566 => &__x_copy
  _83 = &__position_157->c;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::operator= (_83, &__x_copy.c);
  goto <bb 17>;

<L21>:
  goto <bb 49> (<L10>);

  <bb 17>:
  __position_84 = __position_157 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#2757 => &this_9(D)->D.54535
  # DEBUG this => D#2757
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.131575 => D#1866
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _85 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<EventRouter::tTransportEvent*>*, long unsigned int, std::queue<EventRouter::tTransportEvent*> > (__old_finish_26, _70, &__x_copy);
  goto <bb 21>;

<L22>:
  goto <bb 49> (<L10>);

  <bb 21>:
  this_9(D)->D.54535._M_impl._M_finish = _85;
  # DEBUG D#2758 => &this_9(D)->D.54535
  # DEBUG this => D#2758
  # DEBUG this => &__position
  # DEBUG __first => D#3418
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __alloc => D#1863
  # DEBUG D#1862 => D#1863
  # DEBUG D#1861 => D#1862
  # DEBUG __first => D#3418
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG D.131588 => D#1861
  # DEBUG __first => D#3418
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<EventRouter::tTransportEvent*>*, std::queue<EventRouter::tTransportEvent*>*> (__position_23, __old_finish_26, _85);
  goto <bb 23>;

<L23>:
  goto <bb 49> (<L10>);

  <bb 23>:
  _74 = this_9(D)->D.54535._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.54535._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3418
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3418
  if (__position_23 == __old_finish_26)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __position_170 = PHI <__position_23(24), __position_88(28)>
  # DEBUG __first => __position_170
  # DEBUG this => __position_170
  # DEBUG D.131609 => &__x_copy
  _87 = &__position_170->c;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::operator= (_87, &__x_copy.c);
  goto <bb 27>;

<L24>:
  goto <bb 49> (<L10>);

  <bb 27>:
  __position_88 = __position_170 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1548 => this_9(D)
  # DEBUG this => D#1548
  # DEBUG D#1547 => D#1548
  # DEBUG D#1546 => &D#1547->D.54535
  # DEBUG this => D#1546
  # DEBUG __a => D#1545
  # DEBUG D#1544 => D#1545
  # DEBUG D#1543 => D#1544
  # DEBUG this => D#1543
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  _141 = (long int) _24;
  _142 = _13 - _141;
  _143 = _142 /[ex] 80;
  _144 = (const long unsigned int) _143;
  _145 = 230584300921369395 - _144;
  if (__n_7(D) > _145)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 31>:
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG __a => &D.143879
  # DEBUG __b => &__n
  _139 = MAX_EXPR <__n_7(D), _144>;
  __len_149 = _139 + _144;
  # DEBUG __len => __len_149
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG D#1548 => this_9(D)
  # DEBUG this => D#1548
  # DEBUG D#1547 => D#1548
  # DEBUG D#1546 => &D#1547->D.54535
  # DEBUG this => D#1546
  # DEBUG __a => D#1545
  # DEBUG D#1544 => D#1545
  # DEBUG D#1543 => D#1544
  # DEBUG this => D#1543
  _140 = __len_149 > 230584300921369395;
  _174 = _144 > __len_149;
  _18 = _140 | _174;
  if (_18 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 32>:
  pretmp_134 = __len_149 * 80;

  <bb 33>:
  # __elems_before_156 = PHI <__elems_before_169(62), __elems_before_181(32)>
  # _183 = PHI <_173(62), _164(32)>
  # prephitmp_135 = PHI <18446744073709551600(62), pretmp_134(32)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#397 => &this_9(D)->D.54535._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#397
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74140
  # DEBUG this => &__position
  # DEBUG this => &D.74140
  # DEBUG __elems_before => __elems_before_156
  # DEBUG D#2768 => &this_9(D)->D.54535
  # DEBUG D#1556 => D#2768
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  # DEBUG D#1554 => &D#1555->_M_impl
  # DEBUG D#1553 => D#1554
  # DEBUG __n => NULL
  # DEBUG __a => D#1553
  # DEBUG D#1552 => D#1553
  # DEBUG D#1550 => D#1552
  # DEBUG D#1551 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1550
  # DEBUG D.143867 => D#1551
  # DEBUG D#1549 => D#1550
  # DEBUG D#1543 => D#1549
  # DEBUG this => D#1543
  _137 = operator new (prephitmp_135);

  <bb 34>:
  # __new_finish_138 = PHI <0B(63), _137(33)>
  # __elems_before_182 = PHI <__elems_before_181(63), __elems_before_156(33)>
  # _177 = PHI <_164(63), _183(33)>
  # prephitmp_153 = PHI <0(63), prephitmp_135(33)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2752 => &this_9(D)->D.54535
  # DEBUG this => D#2752
  _27 = (long unsigned int) _177;
  __first_28 = __new_finish_138 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.131618 => D#1866
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<EventRouter::tTransportEvent*>*, long unsigned int, std::queue<EventRouter::tTransportEvent*> > (__first_28, __n_7(D), __x_29(D));

  <bb 35>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2753 => &this_9(D)->D.54535
  # DEBUG this => D#2753
  # DEBUG this => &__position
  _32 = this_9(D)->D.54535._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#3418
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1865
  # DEBUG D#1864 => D#1865
  # DEBUG D#1861 => D#1864
  # DEBUG __first => _32
  # DEBUG __last => D#3418
  # DEBUG __result => NULL
  # DEBUG D.131639 => D#1861
  # DEBUG __first => _32
  # DEBUG __last => D#3418
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<EventRouter::tTransportEvent*>*, std::queue<EventRouter::tTransportEvent*>*> (_32, __position_23, __new_finish_138);
  goto <bb 37>;

<L26>:
  goto <bb 51> (<L13>);

  <bb 37>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 80;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#2754 => &this_9(D)->D.54535
  # DEBUG this => D#2754
  _36 = this_9(D)->D.54535._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3418
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#1865
  # DEBUG D#1864 => D#1865
  # DEBUG D#1861 => D#1864
  # DEBUG __first => D#3418
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.131658 => D#1861
  # DEBUG __first => D#3418
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _94 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<EventRouter::tTransportEvent*>*, std::queue<EventRouter::tTransportEvent*>*> (__position_23, _36, __new_finish_34);
  goto <bb 39>;

<L27>:
  goto <bb 51> (<L13>);

  <bb 39>:
  # DEBUG __new_finish => _94
  # DEBUG D#2755 => &this_9(D)->D.54535
  # DEBUG this => D#2755
  _38 = this_9(D)->D.54535._M_impl._M_finish;
  __first_39 = this_9(D)->D.54535._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 44>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # __first_90 = PHI <__first_39(40), __first_96(42)>
  # DEBUG __first => __first_90
  # DEBUG __r => __first_90
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  _95 = &MEM[(struct deque *)__first_90].D.61649;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (_95);
  MEM[(struct  &)__first_90] ={v} {CLOBBER};
  __first_96 = __first_90 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 41>;

  <bb 43>:
  pretmp_152 = this_9(D)->D.54535._M_impl._M_start;

  <bb 44>:
  # prephitmp_120 = PHI <pretmp_152(43), __first_39(39)>
  # DEBUG D#2766 => this_9(D)->D.54535._M_impl._M_end_of_storage
  # DEBUG D#2765 => (long int) D#2766
  # DEBUG D#3417 => this_9(D)->D.54535._M_impl._M_start
  # DEBUG D#2764 => (long int) D#3417
  # DEBUG D#2763 => D#2765 - D#2764
  # DEBUG D#2762 => D#2763 /[ex] 80
  # DEBUG D#2761 => &this_9(D)->D.54535
  # DEBUG D#731 => D#2761
  # DEBUG D#732 => (long unsigned int) D#2762
  # DEBUG __p => D#3417
  # DEBUG this => D#731
  # DEBUG __n => D#732
  # DEBUG D#730 => D#732
  # DEBUG D#729 => D#731
  if (prephitmp_120 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#728 => &D#729->_M_impl
  # DEBUG D#726 => D#728
  # DEBUG D#727 => D#730
  # DEBUG __p => D#3417
  # DEBUG __a => D#726
  # DEBUG __n => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#726
  # DEBUG D#722 => D#724
  # DEBUG D#723 => D#725
  # DEBUG __p => D#3417
  # DEBUG this => D#722
  # DEBUG D.131681 => D#723
  operator delete (prephitmp_120);

  <bb 46>:
  this_9(D)->D.54535._M_impl._M_start = __new_finish_138;
  this_9(D)->D.54535._M_impl._M_finish = _94;
  _45 = __new_finish_138 + prephitmp_153;
  this_9(D)->D.54535._M_impl._M_end_of_storage = _45;

  <bb 47>:
  return;

<L19>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1268 => &__x_copy.c
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.61649);
  resx 2

<L25>:

  # __new_finish_1 = PHI <__new_finish_138(50), 0B(36), __new_finish_34(38)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 56>;

  <bb 53>:
  # DEBUG D#2759 => &this_9(D)->D.54535
  # DEBUG this => D#2759
  _49 = __n_7(D) + __elems_before_182;
  _50 = _49 * 80;
  _51 = __new_finish_138 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51

  <bb 54>:
  # __first_79 = PHI <__first_28(53), __first_98(55)>
  # DEBUG __first => __first_79
  if (_51 == __first_79)
    goto <bb 58>;
  else
    goto <bb 55>;

  <bb 55>:
  # DEBUG __r => __first_79
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  _97 = &MEM[(struct deque *)__first_79].D.61649;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (_97);
  MEM[(struct  &)__first_79] ={v} {CLOBBER};
  __first_98 = __first_79 + 80;
  # DEBUG __first => __first_98
  goto <bb 54>;

  <bb 56>:
  # __new_finish_99 = PHI <__new_finish_138(52), __new_finish_101(57)>
  # DEBUG __first => __new_finish_99
  if (__new_finish_1 == __new_finish_99)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:
  # DEBUG __r => __new_finish_99
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  _100 = &MEM[(struct deque *)__new_finish_99].D.61649;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_99] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_99 + 80;
  # DEBUG __first => __new_finish_101
  goto <bb 56>;

  <bb 58>:
  # DEBUG D#2767 => &this_9(D)->D.54535
  # DEBUG D#731 => D#2767
  # DEBUG __p => NULL
  # DEBUG this => D#731
  # DEBUG __n => D#732
  # DEBUG D#730 => D#732
  # DEBUG D#729 => D#731
  if (__new_finish_138 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#728 => &D#729->_M_impl
  # DEBUG D#726 => D#728
  # DEBUG D#727 => D#730
  # DEBUG __p => NULL
  # DEBUG __a => D#726
  # DEBUG __n => D#727
  # DEBUG D#725 => D#727
  # DEBUG D#724 => D#726
  # DEBUG D#722 => D#724
  # DEBUG D#723 => D#725
  # DEBUG __p => NULL
  # DEBUG this => D#722
  # DEBUG D.131732 => D#723
  operator delete (__new_finish_138);

  <bb 60>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 62>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#397 => &this_9(D)->D.54535._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#397
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74140
  # DEBUG this => &__position
  _172 = (long int) __position_23;
  # DEBUG this => &D.74140
  _173 = _172 - _141;
  _168 = _173 /[ex] 80;
  __elems_before_169 = (const size_type) _168;
  # DEBUG __elems_before => __elems_before_169
  # DEBUG D#2768 => &this_9(D)->D.54535
  # DEBUG D#1556 => D#2768
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  goto <bb 33>;

  <bb 63>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#397 => &this_9(D)->D.54535._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#397
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.74140
  # DEBUG this => &__position
  _163 = (long int) __position_23;
  # DEBUG this => &D.74140
  _164 = _163 - _141;
  _165 = _164 /[ex] 80;
  __elems_before_181 = (const size_type) _165;
  # DEBUG __elems_before => __elems_before_181
  # DEBUG D#2768 => &this_9(D)->D.54535
  # DEBUG D#1556 => D#2768
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  if (__len_149 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

}



;; Function void EventRouter::_ArrivalArb(int) (_ZN11EventRouter11_ArrivalArbEi, funcdef_no=2169, decl_uid=54551, cgraph_uid=518, symbol_order=519)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void EventRouter::_ArrivalArb(int) (struct EventRouter * const this, int output)
{
  bool r;
  const struct _List_node_base * match$_M_node;
  int vc;
  static const char __PRETTY_FUNCTION__[35] = "void EventRouter::_ArrivalArb(int)";
  int pres;
  int credits;
  int input;
  struct tWaiting * w;
  struct Credit * c;
  struct tTransportEvent * tevt;
  struct tArrivalEvent * aevt;
  const struct string D.63071;
  const struct string D.63068;
  const struct string D.63064;
  long unsigned int _11;
  long unsigned int _14;
  eNextVCState _15;
  const eNextVCState & _16;
  long unsigned int _18;
  eNextVCState * const _19;
  long unsigned int _20;
  int _22;
  struct EventNextVCState * _23;
  int _24;
  const int & _25;
  int _26;
  bool _27;
  int * const _31;
  bool _32;
  struct Module * _34;
  struct deque * _36;
  char * const _38;
  char * const _40;
  bool _42;
  bool _43;
  bool _44;
  struct EventNextVCState * _48;
  int _54;
  const int & _56;
  struct EventNextVCState * _57;
  int * const _60;
  struct PriorityArbiter * _61;
  struct PriorityArbiter * _63;
  long unsigned int _66;
  bool _68;
  int _69;
  struct basic_ostream & _71;
  int _72;
  int _73;
  struct EventNextVCState * _74;
  bool _75;
  int _79;
  int _81;
  bool _83;
  int _86;
  struct Credit * * _87;
  struct EventNextVCState * _88;
  struct Credit * * _90;
  int _91;
  int _92;
  struct Credit * * _93;
  int _95;
  struct Module * _97;
  char * const _100;
  char * const _102;
  int _103;
  struct basic_ostream & _105;
  struct Module * _108;
  long unsigned int _110;
  char * const _112;
  int _116;
  int _117;
  const size_type _118;
  struct EventNextVCState * _119;
  struct queue & _120;
  long unsigned int _121;
  struct Credit * * const _122;
  struct Credit * * const _124;
  const struct _List_node_base * _127;
  struct EventNextVCState * * _128;
  struct EventNextVCState * * _129;
  struct EventNextVCState * * _130;
  struct EventNextVCState * * _131;
  struct EventNextVCState * * _132;
  struct EventNextVCState * * _133;
  struct PriorityArbiter * * _134;
  struct PriorityArbiter * * _135;
  struct queue * _136;
  struct queue * _137;
  struct queue * _138;
  struct EventNextVCState * & _139;
  struct _Rb_tree_node_base * const _140;
  struct queue & _141;
  int * const _143;
  const int & _144;
  int _145;
  int _146;
  int * const _147;
  const int & _148;
  int _149;
  struct EventNextVCState * & _150;
  int _151;
  int * _152;
  int & _153;
  int _154;
  int * _155;
  int & _156;
  struct EventNextVCState * & _157;
  struct PriorityArbiter * & _159;
  struct PriorityArbiter * & _160;
  struct tArrivalEvent * * _162;
  struct tArrivalEvent * * _163;
  struct tArrivalEvent * * _164;
  struct tArrivalEvent * * _165;
  long unsigned int _166;
  struct queue & _167;
  const size_type _168;
  long int _169;
  char * const _170;
  struct basic_ostream & _171;
  long unsigned int _172;
  eNextVCState * const _173;
  long unsigned int _174;
  const eNextVCState & _175;
  eNextVCState _176;
  struct EventNextVCState * & _177;
  int _178;
  long unsigned int _179;
  int * _180;
  long unsigned int _181;
  int & _182;
  int * _183;
  int & _184;
  struct EventNextVCState * & _185;
  struct list * const _186;
  long unsigned int _187;
  const struct list & _188;
  struct tWaiting * _192;
  int _193;
  int _194;
  struct EventNextVCState * & _198;
  int _199;
  int * const _200;
  long unsigned int _201;
  const int & _202;
  int _203;
  int * const _204;
  const int & _205;
  int _206;
  char * const _207;
  struct tTransportEvent * * _214;
  struct Credit * * _269;
  struct Credit * * * _270;
  struct Credit * * * _271;
  struct Credit * * _272;
  struct Credit * * _273;
  struct tTransportEvent * * _274;
  struct tTransportEvent * * _275;
  struct tTransportEvent * * _278;
  struct tTransportEvent * * _279;
  struct tTransportEvent * * _280;
  struct tTransportEvent * * * _282;
  struct tTransportEvent * * * _283;
  struct tTransportEvent * * _284;
  struct tTransportEvent * * _285;
  long unsigned int _287;
  struct tTransportEvent * * * _288;
  long int _289;
  struct tTransportEvent * * * _290;
  long int _291;
  long int _292;
  long int _293;
  long unsigned int _294;
  long unsigned int _295;
  struct tArrivalEvent * * _296;
  struct tArrivalEvent * * * _297;
  struct tArrivalEvent * * * _298;
  struct tArrivalEvent * * _299;
  struct tArrivalEvent * * _300;
  struct tTransportEvent * * pretmp_319;
  struct tTransportEvent * * * prephitmp_325;
  struct tTransportEvent * * prephitmp_326;
  struct tTransportEvent * * * pretmp_327;
  long unsigned int prephitmp_373;
  long unsigned int pretmp_376;

  <bb 2>:
  _11 = (long unsigned int) output_10(D);
  # DEBUG D#1924 => &this_12(D)->_out_cred_buffer
  _136 = MEM[(struct queue * *)this_12(D) + 456B];
  # DEBUG D#80 => D#1924
  # DEBUG __n => _11
  # DEBUG this => D#80
  _121 = _11 * 80;
  _120 = _136 + _121;
  # DEBUG this => NULL
  # DEBUG this => D#253
  # DEBUG D#251 => &D#253->D.59602._M_impl._M_start
  # DEBUG D#252 => &D#253->D.59602._M_impl._M_finish
  _124 = MEM[(struct Credit * * *)_120 + 48B];
  # DEBUG D#249 => D#252
  _122 = MEM[(struct Credit * * *)_120 + 16B];
  # DEBUG D#250 => D#251
  # DEBUG __x => D#249
  # DEBUG __y => D#250
  if (_122 != _124)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  pretmp_376 = _11 * 8;
  goto <bb 41>;

  <bb 4>:
  # DEBUG D#1925 => &this_12(D)->_out_cred_buffer
  # DEBUG D#80 => D#1925
  # DEBUG __n => _11
  # DEBUG this => D#80
  # DEBUG this => NULL
  # DEBUG this => D#258
  # DEBUG this => D#258
  # DEBUG D#159 => &D#258->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#257 => MEM[(const struct iterator &)D#258 + 16]._M_first
  # DEBUG D.100586 => D#257
  # DEBUG D#256 => MEM[(const struct iterator &)D#258 + 16]._M_last
  # DEBUG D.100587 => D#256
  # DEBUG D#255 => MEM[(const struct iterator &)D#258 + 16]._M_node
  # DEBUG D.100588 => D#255
  # DEBUG this => D#254
  c_17 = *_122;
  # DEBUG c => c_17
  # DEBUG D#1926 => &this_12(D)->_out_cred_buffer
  # DEBUG D#80 => D#1926
  # DEBUG __n => _11
  # DEBUG this => D#80
  # DEBUG this => NULL
  # DEBUG D#3456 => &_120->c
  # DEBUG this => D#3456
  _87 = MEM[(struct deque *)_120].D.59602._M_impl._M_start._M_last;
  _93 = _87 + 18446744073709551608;
  if (_93 != _122)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG D#1109 => D#3456->D.59602._M_impl._M_start._M_cur
  # DEBUG D#1108 => &D#3456->D.59602._M_impl
  # DEBUG D#421 => D#1108
  # DEBUG D#422 => D#1109
  # DEBUG __a => D#421
  # DEBUG __p => D#422
  # DEBUG D#420 => D#422
  # DEBUG D#419 => D#421
  # DEBUG D#417 => D#419
  # DEBUG D#418 => D#420
  # DEBUG this => D#417
  # DEBUG __p => D#418
  _90 = _122 + 8;
  MEM[(struct deque *)_120].D.59602._M_impl._M_start._M_cur = _90;
  goto <bb 7>;

  <bb 6>:
  # DEBUG this => D#3456
  # DEBUG this => D#3456
  # DEBUG D#1107 => D#3456->D.59602._M_impl._M_start._M_cur
  # DEBUG D#1104 => &D#3456->D.59602
  # DEBUG this => D#1104
  # DEBUG D#422 => D#1107
  # DEBUG __a => D#421
  # DEBUG __p => D#422
  # DEBUG D#420 => D#422
  # DEBUG D#419 => D#421
  # DEBUG D#417 => D#419
  # DEBUG D#418 => D#420
  # DEBUG this => D#417
  # DEBUG __p => D#418
  _269 = MEM[(struct deque *)_120].D.59602._M_impl._M_start._M_first;
  # DEBUG D#1106 => &D#3456->D.59602
  # DEBUG this => D#1106
  # DEBUG __p => _269
  # DEBUG __size => 8
  # DEBUG D#1103 => &D#1106->_M_impl
  # DEBUG D#1083 => D#1103
  # DEBUG __p => _269
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _269
  # DEBUG this => D#1079
  # DEBUG D.144104 => D#1080
  operator delete (_269);
  _270 = MEM[(struct deque *)_120].D.59602._M_impl._M_start._M_node;
  _271 = _270 + 8;
  # DEBUG D#1105 => &D#3456->D.59602._M_impl._M_start
  # DEBUG this => D#1105
  # DEBUG __new_node => _271
  MEM[(struct _Deque_iterator *)_120 + 16B]._M_node = _271;
  _272 = MEM[(struct Credit * * *)_270 + 8B];
  MEM[(struct _Deque_iterator *)_120 + 16B]._M_first = _272;
  # DEBUG __size => 8
  _273 = _272 + 512;
  MEM[(struct _Deque_iterator *)_120 + 16B]._M_last = _273;
  MEM[(struct deque *)_120].D.59602._M_impl._M_start._M_cur = _272;

  <bb 7>:
  # DEBUG D#1927 => &c_17->vc
  # DEBUG this => D#1927
  # DEBUG D#192 => &MEM[(const struct set *)D#1927]._M_t
  _118 = MEM[(long unsigned int *)c_17 + 40B];
  # DEBUG D#191 => D#192
  # DEBUG this => D#191
  if (_118 != 1)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __assert_fail ("c->vc.size() == 1", "routers/event_router.cpp", 473, &__PRETTY_FUNCTION__);

  <bb 9>:
  # DEBUG D#1928 => &c_17->vc
  # DEBUG this => D#1928
  # DEBUG D#260 => &MEM[(const struct set *)D#1928]._M_t
  _140 = MEM[(struct _Rb_tree_node_base * *)c_17 + 24B];
  # DEBUG D#259 => D#260
  # DEBUG this => D#259
  # DEBUG this => NULL
  # DEBUG __x => _140
  # DEBUG this => &D.63060
  # DEBUG this => _140
  # DEBUG D#1929 => &MEM[(const struct _Rb_tree_node *)_140]._M_value_field
  # DEBUG __r => D#1929
  vc_21 = MEM[(const int &)_140 + 32];
  # DEBUG vc => vc_21
  # DEBUG D#1930 => &this_12(D)->_output_state
  _128 = MEM[(struct EventNextVCState * * *)this_12(D) + 344B];
  # DEBUG D#72 => D#1930
  # DEBUG __n => _11
  # DEBUG this => D#72
  _14 = _11 * 8;
  _139 = _128 + _14;
  _23 = *_139;
  # DEBUG this => _23
  # DEBUG vc => vc_21
  if (vc_21 < 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  EventNextVCState::_ZNK16EventNextVCState8GetStateEi.part.43 ();

  <bb 11>:
  _22 = MEM[(const struct EventNextVCState *)_23]._vcs;
  if (vc_21 >= _22)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 12>:
  _20 = (long unsigned int) vc_21;
  # DEBUG D#87 => &MEM[(const struct EventNextVCState *)_23]._state
  # DEBUG D#3463 => MEM[(eNextVCState * *)_23 + 224B]
  # DEBUG D#86 => D#87
  # DEBUG __n => _20
  # DEBUG this => D#86
  _18 = _20 * 4;
  # DEBUG D#3462 => D#3463 + _18
  # DEBUG D#3461 => *D#3462
  # DEBUG state => D#3461
  # DEBUG D#1931 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1931
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _23
  # DEBUG vc => vc_21
  # DEBUG D#98 => &MEM[(const struct EventNextVCState *)_23]._credits
  _31 = MEM[(int * *)_23 + 104B];
  # DEBUG D#92 => D#98
  # DEBUG __n => _20
  # DEBUG this => D#92
  _25 = _31 + _18;
  _24 = *_25;
  # DEBUG credits => _24
  # DEBUG D#1932 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1932
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _23
  # DEBUG vc => vc_21
  # DEBUG D#93 => &MEM[(const struct EventNextVCState *)_23]._presence
  # DEBUG D#3460 => MEM[(int * *)_23 + 128B]
  # DEBUG D#92 => D#93
  # DEBUG __n => _20
  # DEBUG this => D#92
  # DEBUG D#3459 => D#3460 + _18
  # DEBUG D#3458 => *D#3459
  # DEBUG pres => D#3458
  _26 = this_12(D)->_vct;
  if (_26 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 13>:
  _27 = c_17->head;
  if (_27 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:

  <bb 92>:
  goto <bb 40>;

  <bb 15>:
  credits_28 = _24 + 1;
  # DEBUG credits => credits_28
  # DEBUG D#1933 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1933
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _23
  # DEBUG vc => vc_21
  # DEBUG value => credits_28
  # DEBUG D#42 => &_23->_credits
  # DEBUG D#41 => D#42
  # DEBUG __n => _20
  # DEBUG this => D#41
  MEM[(int &)_25] = credits_28;
  EventRouter::_ProcessWaiting (this_12(D), output_10(D), vc_21);
  goto <bb 40>;

  <bb 16>:
  _19 = MEM[(eNextVCState * *)_23 + 224B];
  _16 = _19 + _18;
  _15 = *_16;
  _60 = MEM[(int * *)_23 + 128B];
  _56 = _60 + _18;
  _54 = *_56;
  credits_30 = _24 + 1;
  # DEBUG credits => credits_30
  # DEBUG D#1934 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1934
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _23
  # DEBUG vc => vc_21
  # DEBUG value => credits_30
  # DEBUG D#42 => &_23->_credits
  # DEBUG D#41 => D#42
  # DEBUG __n => _20
  # DEBUG this => D#41
  MEM[(int &)_25] = credits_30;
  _32 = c_17->tail;
  if (_32 != 0)
    goto <bb 17>;
  else
    goto <bb 23>;

  <bb 17>:
  if (_15 != 1)
    goto <bb 18>;
  else
    goto <bb 22>;

  <bb 18>:
  # DEBUG D#140 => &D.63063
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.63063
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.63064, "Received tail credit at non-busy output VC");
  _34 = &this_12(D)->D.54631.D.43102.D.29663;
  Module::Error (_34, &D.63064);

  <bb 19>:
  # DEBUG this => &D.63064
  # DEBUG this => &D.63064
  # DEBUG this => &D.63064
  _38 = MEM[(char * *)&D.63064];
  # DEBUG D#1 => &D.63064
  # DEBUG this => D#1
  # DEBUG this => &D.63064
  if (&D.63064.D.11539._M_local_buf != _38)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  # DEBUG D#467 => D.63064.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63064
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63064
  # DEBUG this => D#1
  # DEBUG this => &D.63064
  # DEBUG D#464 => &D.63064._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _38
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _38
  # DEBUG this => D#458
  # DEBUG D.117295 => D#459
  operator delete (_38);

  <bb 21>:
  # DEBUG D#468 => &D.63064._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63064 ={v} {CLOBBER};
  # DEBUG this => &D.63063
  # DEBUG this => &D.63063

  <bb 22>:
  EventRouter::_ProcessWaiting (this_12(D), output_10(D), vc_21);
  goto <bb 40>;

  <bb 23>:
  _42 = _15 == 1;
  _43 = _54 > 0;
  _44 = _42 & _43;
  if (_44 != 0)
    goto <bb 24>;
  else
    goto <bb 14>;

  <bb 24>:
  tevt_46 = operator new (20);
  # DEBUG tevt => tevt_46
  # DEBUG D#1935 => &this_12(D)->_output_state
  _129 = MEM[(struct EventNextVCState * * *)this_12(D) + 344B];
  # DEBUG D#72 => D#1935
  # DEBUG __n => _11
  # DEBUG this => D#72
  _150 = _129 + _14;
  _48 = *_150;
  # DEBUG this => _48
  # DEBUG vc => vc_21
  _146 = MEM[(const struct EventNextVCState *)_48]._vcs;
  if (vc_21 >= _146)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  EventNextVCState::_ZNK16EventNextVCState8GetInputEi.part.47 ();

  <bb 26>:
  # DEBUG D#103 => &MEM[(const struct EventNextVCState *)_48]._input
  _147 = MEM[(int * *)_48 + 152B];
  # DEBUG D#92 => D#103
  # DEBUG __n => _20
  # DEBUG this => D#92
  _148 = _147 + _18;
  _149 = *_148;
  tevt_46->input = _149;
  # DEBUG D#1936 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1936
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _48
  # DEBUG vc => vc_21
  # DEBUG D#108 => &MEM[(const struct EventNextVCState *)_48]._inputVC
  _143 = MEM[(int * *)_48 + 176B];
  # DEBUG D#92 => D#108
  # DEBUG __n => _20
  # DEBUG this => D#92
  _144 = _143 + _18;
  _145 = *_144;
  tevt_46->src_vc = _145;
  tevt_46->dst_vc = vc_21;
  tevt_46->watch = 0;
  tevt_46->id = -1;
  # DEBUG D#1937 => &this_12(D)->_transport_queue
  _137 = MEM[(struct queue * *)this_12(D) + 536B];
  # DEBUG D#81 => D#1937
  # DEBUG __n => _11
  # DEBUG this => D#81
  _141 = _137 + _121;
  # DEBUG this => NULL
  # DEBUG __x => &tevt
  # DEBUG D#3457 => &_141->c
  # DEBUG this => D#3457
  # DEBUG __x => &tevt
  _214 = MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_cur;
  _274 = MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_last;
  _275 = _274 + 18446744073709551608;
  if (_214 != _275)
    goto <bb 27>;
  else
    goto <bb 30>;

  <bb 27>:
  # DEBUG D#1899 => &D#3457->D.61649._M_impl
  # DEBUG D#407 => D#1899
  # DEBUG __p => _214
  # DEBUG __arg => &tevt
  # DEBUG __a => D#407
  # DEBUG D#406 => D#407
  # DEBUG D#405 => D#406
  # DEBUG __p => _214
  # DEBUG __val => &tevt
  # DEBUG this => D#405
  # DEBUG D#12 => 8
  # DEBUG __p => _214
  # DEBUG D.101582 => D#12
  if (_214 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  *_214 = tevt_46;
  pretmp_319 = MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_cur;

  <bb 29>:
  # prephitmp_326 = PHI <_214(27), pretmp_319(28)>

  <bb 90>:
  _278 = prephitmp_326 + 8;
  MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_cur = _278;
  goto <bb 35>;

  <bb 30>:
  # DEBUG this => D#3457
  # DEBUG __t => &tevt
  # DEBUG this => D#3457
  # DEBUG __nodes_to_add => 1
  _287 = MEM[(struct deque *)_141].D.61649._M_impl._M_map_size;
  _288 = MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_node;
  _289 = (long int) _288;
  _290 = MEM[(struct deque *)_141].D.61649._M_impl._M_map;
  _291 = (long int) _290;
  _292 = _289 - _291;
  _293 = _292 /[ex] -8;
  _294 = (long unsigned int) _293;
  _295 = _287 + _294;
  if (_295 <= 1)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  _36 = &_141->c;
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_reallocate_map (_36, 1, 0);
  pretmp_327 = MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_node;

  <bb 32>:
  # prephitmp_325 = PHI <pretmp_327(31), _288(30)>
  # DEBUG D#1898 => &D#3457->D.61649
  # DEBUG D#1626 => D#1898
  # DEBUG this => D#1626
  # DEBUG D#1625 => D#1626
  # DEBUG __size => 8
  # DEBUG D#1624 => &D#1625->_M_impl
  # DEBUG D#1623 => D#1624
  # DEBUG __n => NULL
  # DEBUG __a => D#1623
  # DEBUG D#1622 => D#1623
  # DEBUG D#1620 => D#1622
  # DEBUG D#1621 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1620
  # DEBUG D.144123 => D#1621
  # DEBUG D#1619 => D#1620
  # DEBUG D#1618 => D#1619
  # DEBUG this => D#1618
  _279 = operator new (512);
  MEM[(struct tTransportEvent * * *)prephitmp_325 + 8B] = _279;
  _280 = MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_cur;
  # DEBUG D#1897 => &D#3457->D.61649._M_impl
  # DEBUG D#405 => D#1897
  # DEBUG __p => _280
  # DEBUG __val => &tevt
  # DEBUG this => D#405
  # DEBUG D#12 => 8
  # DEBUG __p => _280
  # DEBUG D.101582 => D#12
  if (_280 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  *_280 = tevt_46;

  <bb 34>:

  <bb 91>:
  _282 = MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_node;
  _283 = _282 + 8;
  # DEBUG D#1896 => &D#3457->D.61649._M_impl._M_finish
  # DEBUG this => D#1896
  # DEBUG __new_node => _283
  MEM[(struct _Deque_iterator *)_141 + 48B]._M_node = _283;
  _284 = MEM[(struct tTransportEvent * * *)_282 + 8B];
  MEM[(struct _Deque_iterator *)_141 + 48B]._M_first = _284;
  # DEBUG __size => 8
  _285 = _284 + 512;
  MEM[(struct _Deque_iterator *)_141 + 48B]._M_last = _285;
  MEM[(struct deque *)_141].D.61649._M_impl._M_finish._M_cur = _284;

  <bb 35>:
  pres_55 = _54 + -1;
  # DEBUG pres => pres_55
  # DEBUG credits => _24
  # DEBUG D#1938 => &this_12(D)->_output_state
  _130 = MEM[(struct EventNextVCState * * *)this_12(D) + 344B];
  # DEBUG D#72 => D#1938
  # DEBUG __n => _11
  # DEBUG this => D#72
  _157 = _130 + _14;
  _57 = *_157;
  # DEBUG this => _57
  # DEBUG vc => vc_21
  # DEBUG value => pres_55
  _154 = _57->_vcs;
  if (vc_21 >= _154)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#50 => _57
  # DEBUG D#51 => vc_21
  # DEBUG D#52 => pres_55
  EventNextVCState::_ZN16EventNextVCState11SetPresenceEii.part.24 ();

  <bb 37>:
  # DEBUG D#49 => &_57->_presence
  _155 = MEM[(int * *)_57 + 128B];
  # DEBUG D#41 => D#49
  # DEBUG __n => _20
  # DEBUG this => D#41
  _156 = _155 + _18;
  *_156 = pres_55;
  # DEBUG D#1939 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1939
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _57
  # DEBUG vc => vc_21
  # DEBUG value => _24
  _151 = _57->_vcs;
  if (vc_21 >= _151)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#43 => _57
  # DEBUG D#44 => vc_21
  # DEBUG D#45 => _24
  EventNextVCState::_ZN16EventNextVCState10SetCreditsEii.part.23 ();

  <bb 39>:
  # DEBUG D#42 => &_57->_credits
  _152 = MEM[(int * *)_57 + 104B];
  # DEBUG D#41 => D#42
  # DEBUG __n => _20
  # DEBUG this => D#41
  _153 = _152 + _18;
  *_153 = _24;

  <bb 40>:
  Credit::Free (c_17);

  <bb 41>:
  # prephitmp_373 = PHI <pretmp_376(3), _14(40)>
  # DEBUG D#1940 => &this_12(D)->_arrival_arbiter
  _134 = MEM[(struct PriorityArbiter * * *)this_12(D) + 512B];
  # DEBUG D#73 => D#1940
  # DEBUG __n => _11
  # DEBUG this => D#73
  _159 = _134 + prephitmp_373;
  _61 = *_159;
  PriorityArbiter::Arbitrate (_61);
  # DEBUG D#1941 => &this_12(D)->_arrival_arbiter
  _135 = MEM[(struct PriorityArbiter * * *)this_12(D) + 512B];
  # DEBUG D#73 => D#1941
  # DEBUG __n => _11
  # DEBUG this => D#73
  _160 = _135 + prephitmp_373;
  _63 = *_160;
  input_65 = PriorityArbiter::Match (_63);
  # DEBUG input => input_65
  if (input_65 != -1)
    goto <bb 42>;
  else
    goto <bb 78>;

  <bb 42>:
  _66 = (long unsigned int) input_65;
  # DEBUG D#1942 => &this_12(D)->_arrival_queue
  _138 = MEM[(struct queue * *)this_12(D) + 488B];
  # DEBUG D#83 => D#1942
  # DEBUG __n => _66
  # DEBUG this => D#83
  _166 = _66 * 80;
  _167 = _138 + _166;
  # DEBUG this => NULL
  # DEBUG this => D#248
  # DEBUG this => D#248
  # DEBUG D#166 => &D#248->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  _165 = MEM[(const struct iterator &)_167 + 16]._M_cur;
  # DEBUG D#247 => MEM[(const struct iterator &)D#248 + 16]._M_first
  # DEBUG D.100541 => D#247
  # DEBUG D#246 => MEM[(const struct iterator &)D#248 + 16]._M_last
  # DEBUG D.100542 => D#246
  # DEBUG D#245 => MEM[(const struct iterator &)D#248 + 16]._M_node
  # DEBUG D.100543 => D#245
  # DEBUG this => D#244
  aevt_67 = *_165;
  # DEBUG aevt => aevt_67
  # DEBUG D#1943 => &this_12(D)->_arrival_queue
  # DEBUG D#83 => D#1943
  # DEBUG __n => _66
  # DEBUG this => D#83
  # DEBUG this => NULL
  # DEBUG D#3455 => &_167->c
  # DEBUG this => D#3455
  _162 = MEM[(struct deque *)_167].D.60628._M_impl._M_start._M_last;
  _163 = _162 + 18446744073709551608;
  if (_163 != _165)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  # DEBUG D#1164 => D#3455->D.60628._M_impl._M_start._M_cur
  # DEBUG D#1163 => &D#3455->D.60628._M_impl
  # DEBUG D#427 => D#1163
  # DEBUG D#428 => D#1164
  # DEBUG __a => D#427
  # DEBUG __p => D#428
  # DEBUG D#426 => D#428
  # DEBUG D#425 => D#427
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#426
  # DEBUG this => D#423
  # DEBUG __p => D#424
  _164 = _165 + 8;
  MEM[(struct deque *)_167].D.60628._M_impl._M_start._M_cur = _164;
  goto <bb 45>;

  <bb 44>:
  # DEBUG this => D#3455
  # DEBUG this => D#3455
  # DEBUG D#1162 => D#3455->D.60628._M_impl._M_start._M_cur
  # DEBUG D#1159 => &D#3455->D.60628
  # DEBUG this => D#1159
  # DEBUG D#428 => D#1162
  # DEBUG __a => D#427
  # DEBUG __p => D#428
  # DEBUG D#426 => D#428
  # DEBUG D#425 => D#427
  # DEBUG D#423 => D#425
  # DEBUG D#424 => D#426
  # DEBUG this => D#423
  # DEBUG __p => D#424
  _296 = MEM[(struct deque *)_167].D.60628._M_impl._M_start._M_first;
  # DEBUG D#1161 => &D#3455->D.60628
  # DEBUG this => D#1161
  # DEBUG __p => _296
  # DEBUG __size => 8
  # DEBUG D#1158 => &D#1161->_M_impl
  # DEBUG D#1138 => D#1158
  # DEBUG __p => _296
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _296
  # DEBUG this => D#1134
  # DEBUG D.144141 => D#1135
  operator delete (_296);
  _297 = MEM[(struct deque *)_167].D.60628._M_impl._M_start._M_node;
  _298 = _297 + 8;
  # DEBUG D#1160 => &D#3455->D.60628._M_impl._M_start
  # DEBUG this => D#1160
  # DEBUG __new_node => _298
  MEM[(struct _Deque_iterator *)_167 + 16B]._M_node = _298;
  _299 = MEM[(struct tArrivalEvent * * *)_297 + 8B];
  MEM[(struct _Deque_iterator *)_167 + 16B]._M_first = _299;
  # DEBUG __size => 8
  _300 = _299 + 512;
  MEM[(struct _Deque_iterator *)_167 + 16B]._M_last = _300;
  MEM[(struct deque *)_167].D.60628._M_impl._M_start._M_cur = _299;

  <bb 45>:
  _68 = aevt_67->watch;
  if (_68 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  _69 = aevt_67->id;
  # DEBUG D#1944 => &this_12(D)->D.54631.D.43102.D.29663
  # DEBUG this => D#1944
  # DEBUG D#1945 => &MEM[(const struct Module *)this_12(D)]._fullname
  # DEBUG __out => &cout
  # DEBUG __s => "Processing arrival event at "
  # DEBUG __s => "Processing arrival event at "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "Processing arrival event at ", 28);
  # DEBUG __os => &cout
  # DEBUG __str => D#1945
  _168 = MEM[(long unsigned int *)this_12(D) + 48B];
  # DEBUG D#3 => D#1945
  # DEBUG this => D#3
  _169 = (long int) _168;
  # DEBUG this => D#1945
  _170 = MEM[(char * *)this_12(D) + 40B];
  # DEBUG D#1 => D#1945
  # DEBUG this => D#1
  _171 = std::__ostream_insert<char, std::char_traits<char> > (&cout, _170, _169);
  # DEBUG __out => _171
  # DEBUG __s => " for flit "
  # DEBUG __s => " for flit "
  std::__ostream_insert<char, std::char_traits<char> > (_171, " for flit ", 10);
  _71 = std::basic_ostream<char>::operator<< (_171, _69);
  # DEBUG this => _71
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_71);

  <bb 47>:
  _73 = aevt_67->dst_vc;
  # DEBUG D#1946 => &this_12(D)->_output_state
  _131 = MEM[(struct EventNextVCState * * *)this_12(D) + 344B];
  # DEBUG D#72 => D#1946
  # DEBUG __n => _11
  # DEBUG this => D#72
  _177 = _131 + prephitmp_373;
  _74 = *_177;
  # DEBUG this => _74
  # DEBUG vc => _73
  if (_73 < 0)
    goto <bb 10>;
  else
    goto <bb 48>;

  <bb 48>:
  _72 = MEM[(const struct EventNextVCState *)_74]._vcs;
  if (_72 <= _73)
    goto <bb 10>;
  else
    goto <bb 49>;

  <bb 49>:
  _172 = (long unsigned int) _73;
  # DEBUG D#87 => &MEM[(const struct EventNextVCState *)_74]._state
  _173 = MEM[(eNextVCState * *)_74 + 224B];
  # DEBUG D#86 => D#87
  # DEBUG __n => _172
  # DEBUG this => D#86
  _174 = _172 * 4;
  _175 = _173 + _174;
  _176 = *_175;
  # DEBUG state => _176
  _75 = aevt_67->head;
  if (_75 != 0)
    goto <bb 50>;
  else
    goto <bb 56>;

  <bb 50>:
  if (_176 == 0)
    goto <bb 51>;
  else
    goto <bb 55>;

  <bb 51>:
  # DEBUG D#1952 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1952
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _74
  # DEBUG vc => _73
  # DEBUG state => 1
  # DEBUG D#121 => &_74->_state
  # DEBUG D#120 => D#121
  # DEBUG __n => _172
  # DEBUG this => D#120
  MEM[(eNextVCState &)_175] = 1;
  # DEBUG D#1953 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1953
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _74
  # DEBUG vc => _73
  # DEBUG input => input_65
  # DEBUG D#56 => &_74->_input
  _183 = MEM[(int * *)_74 + 152B];
  # DEBUG D#41 => D#56
  # DEBUG __n => _172
  # DEBUG this => D#41
  _184 = _183 + _174;
  *_184 = input_65;
  _91 = aevt_67->src_vc;
  _92 = aevt_67->dst_vc;
  # DEBUG D#1954 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1954
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _74
  # DEBUG vc => _92
  # DEBUG in_vc => _91
  if (_92 < 0)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  _178 = _74->_vcs;
  if (_92 >= _178)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG D#64 => _74
  # DEBUG D#65 => _92
  # DEBUG D#66 => _91
  EventNextVCState::_ZN16EventNextVCState10SetInputVCEii.part.26 ();

  <bb 54>:
  _179 = (long unsigned int) _92;
  # DEBUG D#63 => &_74->_inputVC
  _180 = MEM[(int * *)_74 + 176B];
  # DEBUG D#41 => D#63
  # DEBUG __n => _179
  # DEBUG this => D#41
  _181 = _179 * 4;
  _182 = _180 + _181;
  *_182 = _91;
  EventRouter::_SendTransport (this_12(D), input_65, output_10(D), aevt_67);
  goto <bb 77>;

  <bb 55>:
  w_77 = operator new (20);
  # DEBUG w => w_77
  w_77->input = input_65;
  _79 = aevt_67->src_vc;
  w_77->vc = _79;
  _81 = aevt_67->id;
  w_77->id = _81;
  _83 = aevt_67->watch;
  w_77->watch = _83;
  w_77->pres = 1;
  _86 = aevt_67->dst_vc;
  # DEBUG D#1947 => &this_12(D)->_output_state
  _132 = MEM[(struct EventNextVCState * * *)this_12(D) + 344B];
  # DEBUG D#72 => D#1947
  # DEBUG __n => _11
  # DEBUG this => D#72
  _185 = _132 + prephitmp_373;
  _88 = *_185;
  EventNextVCState::PushWaiting (_88, _86, w_77);
  goto <bb 77>;

  <bb 56>:
  _95 = this_12(D)->_vct;
  if (_95 != 0)
    goto <bb 57>;
  else
    goto <bb 61>;

  <bb 57>:
  # DEBUG D#140 => &D.63067
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.63067
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.63068, "Received arrival event for non-head flit in cut-through mode");
  _97 = &this_12(D)->D.54631.D.43102.D.29663;
  Module::Error (_97, &D.63068);

  <bb 58>:
  # DEBUG this => &D.63068
  # DEBUG this => &D.63068
  # DEBUG this => &D.63068
  _100 = MEM[(char * *)&D.63068];
  # DEBUG D#1 => &D.63068
  # DEBUG this => D#1
  # DEBUG this => &D.63068
  if (&D.63068.D.11539._M_local_buf != _100)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#467 => D.63068.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63068
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63068
  # DEBUG this => D#1
  # DEBUG this => &D.63068
  # DEBUG D#464 => &D.63068._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _100
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _100
  # DEBUG this => D#458
  # DEBUG D.117435 => D#459
  operator delete (_100);

  <bb 60>:
  # DEBUG D#468 => &D.63068._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63068 ={v} {CLOBBER};
  # DEBUG this => &D.63067
  # DEBUG this => &D.63067

  <bb 61>:
  if (_176 != 1)
    goto <bb 62>;
  else
    goto <bb 66>;

  <bb 62>:
  _103 = aevt_67->id;
  # DEBUG __out => &cout
  # DEBUG __s => "flit id = "
  # DEBUG __s => "flit id = "
  std::__ostream_insert<char, std::char_traits<char> > (&cout, "flit id = ", 10);
  _105 = std::basic_ostream<char>::operator<< (&cout, _103);
  # DEBUG this => _105
  # DEBUG __pf => endl
  std::endl<char, std::char_traits<char> > (_105);
  # DEBUG D#140 => &D.63070
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.63070
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.63071, "Received a body flit at a non-busy output VC");
  _108 = &this_12(D)->D.54631.D.43102.D.29663;
  Module::Error (_108, &D.63071);

  <bb 63>:
  # DEBUG this => &D.63071
  # DEBUG this => &D.63071
  # DEBUG this => &D.63071
  _112 = MEM[(char * *)&D.63071];
  # DEBUG D#1 => &D.63071
  # DEBUG this => D#1
  # DEBUG this => &D.63071
  if (&D.63071.D.11539._M_local_buf != _112)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  # DEBUG D#467 => D.63071.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63071
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63071
  # DEBUG this => D#1
  # DEBUG this => &D.63071
  # DEBUG D#464 => &D.63071._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _112
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _112
  # DEBUG this => D#458
  # DEBUG D.117460 => D#459
  operator delete (_112);

  <bb 65>:
  # DEBUG D#468 => &D.63071._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63071 ={v} {CLOBBER};
  # DEBUG this => &D.63070
  # DEBUG this => &D.63070

  <bb 66>:
  _116 = aevt_67->src_vc;
  _117 = aevt_67->dst_vc;
  # DEBUG D#1948 => &this_12(D)->_output_state
  _133 = MEM[(struct EventNextVCState * * *)this_12(D) + 344B];
  # DEBUG D#72 => D#1948
  # DEBUG __n => _11
  # DEBUG this => D#72
  _198 = _133 + prephitmp_373;
  _119 = *_198;
  # DEBUG this => _119
  # DEBUG vc => _117
  # DEBUG w_input => input_65
  # DEBUG w_vc => _116
  # DEBUG this => &match
  # DEBUG match$_M_node => 0B
  _110 = (long unsigned int) _117;
  # DEBUG D#199 => &MEM[(const struct EventNextVCState *)_119]._waiting
  _186 = MEM[(struct list * *)_119 + 200B];
  # DEBUG D#113 => D#199
  # DEBUG __n => _110
  # DEBUG this => D#113
  _187 = _110 * 24;
  _188 = _186 + _187;
  match$_M_node_189 = MEM[(struct _List_node_base * *)_188];
  # DEBUG this => D#198
  # DEBUG this => NULL
  # DEBUG __x => match$_M_node_189
  # DEBUG match$_M_node => match$_M_node_189
  # DEBUG match$_M_node => match$_M_node_189
  # DEBUG D#200 => &MEM[(const struct EventNextVCState *)_119]._waiting
  # DEBUG D#113 => D#200
  # DEBUG __n => _110
  # DEBUG this => D#113
  # DEBUG this => NULL
  _127 = &_188->D.63942._M_impl._M_node.D.45287;
  # DEBUG this => NULL
  # DEBUG __x => _127
  # DEBUG this => &match
  # DEBUG __x => NULL
  if (_127 != match$_M_node_189)
    goto <bb 67>;
  else
    goto <bb 71>;

  <bb 67>:

  <bb 68>:
  # match$_M_node_197 = PHI <match$_M_node_189(67), match$_M_node_196(89)>
  # DEBUG match$_M_node => match$_M_node_197
  # DEBUG D#200 => &MEM[(const struct EventNextVCState *)_119]._waiting
  # DEBUG D#113 => D#200
  # DEBUG __n => _110
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _127
  # DEBUG this => &match
  # DEBUG __x => NULL
  # DEBUG this => &match
  _192 = MEM[(struct tWaiting * const &)match$_M_node_197 + 16];
  _193 = _192->input;
  if (input_65 == _193)
    goto <bb 69>;
  else
    goto <bb 88>;

  <bb 69>:
  # DEBUG this => &match
  _194 = _192->vc;
  if (_116 == _194)
    goto <bb 70>;
  else
    goto <bb 88>;

  <bb 70>:
  # match$_M_node_379 = PHI <match$_M_node_197(69)>
  # DEBUG D#201 => &MEM[(const struct EventNextVCState *)_119]._waiting
  # DEBUG D#113 => D#201
  # DEBUG __n => _110
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _127
  # DEBUG this => &match
  # DEBUG __x => NULL
  if (_127 != match$_M_node_379)
    goto <bb 76>;
  else
    goto <bb 71>;

  <bb 71>:
  # DEBUG r => NULL
  # DEBUG D#202 => {CLOBBER}
  # DEBUG match$_M_node => D#202
  # DEBUG D#1949 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1949
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _119
  # DEBUG vc => _117
  if (_117 < 0)
    goto <bb 25>;
  else
    goto <bb 72>;

  <bb 72>:
  _199 = MEM[(const struct EventNextVCState *)_119]._vcs;
  if (_117 >= _199)
    goto <bb 25>;
  else
    goto <bb 73>;

  <bb 73>:
  # DEBUG D#103 => &MEM[(const struct EventNextVCState *)_119]._input
  _200 = MEM[(int * *)_119 + 152B];
  # DEBUG D#92 => D#103
  # DEBUG __n => _110
  # DEBUG this => D#92
  _201 = _110 * 4;
  _202 = _200 + _201;
  _203 = *_202;
  if (input_65 == _203)
    goto <bb 74>;
  else
    goto <bb 76>;

  <bb 74>:
  # DEBUG D#1950 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1950
  # DEBUG __n => _11
  # DEBUG this => D#72
  # DEBUG this => _119
  # DEBUG vc => _117
  # DEBUG D#108 => &MEM[(const struct EventNextVCState *)_119]._inputVC
  _204 = MEM[(int * *)_119 + 176B];
  # DEBUG D#92 => D#108
  # DEBUG __n => _110
  # DEBUG this => D#92
  _205 = _204 + _201;
  _206 = *_205;
  if (_116 == _206)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  EventRouter::_SendTransport (this_12(D), input_65, output_10(D), aevt_67);
  goto <bb 77>;

  <bb 76>:
  # DEBUG D#1951 => &this_12(D)->_output_state
  # DEBUG D#72 => D#1951
  # DEBUG __n => _11
  # DEBUG this => D#72
  EventNextVCState::IncrWaiting (_119, _117, input_65, _116);

  <bb 77>:
  operator delete (aevt_67);

  <bb 78>:

  <bb 93>:
  # DEBUG D#3454 => {CLOBBER}
  # DEBUG tevt => D#3454
  return;

<L47>:
  # DEBUG this => &D.63064
  # DEBUG this => &D.63064
  # DEBUG this => &D.63064
  _207 = MEM[(char * *)&D.63064];
  # DEBUG D#1 => &D.63064
  # DEBUG this => D#1
  # DEBUG this => &D.63064
  if (&D.63064.D.11539._M_local_buf != _207)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  # DEBUG D#467 => D.63064.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63064
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63064
  # DEBUG this => D#1
  # DEBUG this => &D.63064
  # DEBUG D#464 => &D.63064._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _207
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _207
  # DEBUG this => D#458
  # DEBUG D.117514 => D#459
  operator delete (_207);

  <bb 81>:
  # DEBUG D#468 => &D.63064._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63064 ={v} {CLOBBER};
  resx 5

<L49>:
  # DEBUG this => &D.63068
  # DEBUG this => &D.63068
  # DEBUG this => &D.63068
  _40 = MEM[(char * *)&D.63068];
  # DEBUG D#1 => &D.63068
  # DEBUG this => D#1
  # DEBUG this => &D.63068
  if (&D.63068.D.11539._M_local_buf != _40)
    goto <bb 83>;
  else
    goto <bb 84>;

  <bb 83>:
  # DEBUG D#467 => D.63068.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63068
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63068
  # DEBUG this => D#1
  # DEBUG this => &D.63068
  # DEBUG D#464 => &D.63068._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _40
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _40
  # DEBUG this => D#458
  # DEBUG D.117531 => D#459
  operator delete (_40);

  <bb 84>:
  # DEBUG D#468 => &D.63068._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63068 ={v} {CLOBBER};
  resx 9

<L51>:
  # DEBUG this => &D.63071
  # DEBUG this => &D.63071
  # DEBUG this => &D.63071
  _102 = MEM[(char * *)&D.63071];
  # DEBUG D#1 => &D.63071
  # DEBUG this => D#1
  # DEBUG this => &D.63071
  if (&D.63071.D.11539._M_local_buf != _102)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  # DEBUG D#467 => D.63071.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.63071
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.63071
  # DEBUG this => D#1
  # DEBUG this => &D.63071
  # DEBUG D#464 => &D.63071._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _102
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _102
  # DEBUG this => D#458
  # DEBUG D.117548 => D#459
  operator delete (_102);

  <bb 87>:
  # DEBUG D#468 => &D.63071._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.63071 ={v} {CLOBBER};
  resx 13

  <bb 88>:
  # DEBUG this => &match
  match$_M_node_196 = match$_M_node_197->_M_next;
  # DEBUG match$_M_node => match$_M_node_196
  # DEBUG match$_M_node => match$_M_node_196
  # DEBUG D#200 => &MEM[(const struct EventNextVCState *)_119]._waiting
  # DEBUG D#113 => D#200
  # DEBUG __n => _110
  # DEBUG this => D#113
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __x => _127
  # DEBUG this => &match
  # DEBUG __x => NULL
  if (_127 != match$_M_node_196)
    goto <bb 89>;
  else
    goto <bb 71>;

  <bb 89>:
  goto <bb 68>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE24_M_new_elements_at_frontEm, funcdef_no=4976, decl_uid=59542, cgraph_uid=3325, symbol_order=3326)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Credit * * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  struct Credit * * * _14;
  struct Credit * * _16;
  struct Credit * * * _17;
  long unsigned int _18;
  sizetype _19;
  struct Credit * * * _20;
  void * _23;
  struct Credit * * * _25;
  long unsigned int _26;
  sizetype _27;
  struct Credit * * * _28;
  struct Credit * * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct Credit * * _39;
  long int _40;
  struct Credit * * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  struct Credit * * _46;
  long int _47;
  struct Credit * * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  struct Credit * * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#2465 => this_6(D)
  # DEBUG this => D#2465
  # DEBUG D#2464 => D#2465
  # DEBUG D#2463 => &D#2464->D.59602
  # DEBUG this => D#2463
  # DEBUG __a => D#1614
  # DEBUG D#1613 => D#1614
  # DEBUG D#1587 => D#1613
  # DEBUG this => D#1587
  # DEBUG this => this_6(D)
  # DEBUG D#389 => &MEM[(const struct deque *)this_6(D)].D.59602._M_impl._M_start
  # DEBUG D#390 => &MEM[(const struct deque *)this_6(D)].D.59602._M_impl._M_finish
  # DEBUG __x => D#390
  # DEBUG __y => D#389
  # DEBUG __size => 8
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 64;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 8;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 2305843009213693951 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 8
  _13 = __new_elems_11(D) + 63;
  # DEBUG __size => 8
  __new_nodes_15 = _13 >> 6;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.59602._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.59602._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#2469 => &this_6(D)->D.59602
  # DEBUG D#1600 => D#2469
  # DEBUG this => D#1600
  # DEBUG D#1599 => D#1600
  # DEBUG __size => 8
  # DEBUG D#1598 => &D#1599->_M_impl
  # DEBUG D#1592 => D#1598
  # DEBUG __n => NULL
  # DEBUG __a => D#1592
  # DEBUG D#1591 => D#1592
  # DEBUG D#1589 => D#1591
  # DEBUG D#1590 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1589
  # DEBUG D.128148 => D#1590
  # DEBUG D#1588 => D#1589
  # DEBUG D#1587 => D#1588
  # DEBUG this => D#1587
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.59602._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#2468 => &this_6(D)->D.59602
  # DEBUG this => D#2468
  # DEBUG __p => _29
  # DEBUG __size => 8
  # DEBUG D#1103 => &D#2468->_M_impl
  # DEBUG D#1083 => D#1103
  # DEBUG __p => _29
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _29
  # DEBUG this => D#1079
  # DEBUG D.128158 => D#1080
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void EventRouter::_ReceiveCredits() (_ZN11EventRouter15_ReceiveCreditsEv, funcdef_no=2164, decl_uid=54543, cgraph_uid=513, symbol_order=514)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void EventRouter::_ReceiveCredits() (struct EventRouter * const this)
{
  struct Credit * D.144245;
  int output;
  struct Credit * c;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  struct Channel * _9;
  int (*__vtbl_ptr_type) () * _10;
  int (*__vtbl_ptr_type) () _11;
  struct Channel * * _17;
  struct queue * _18;
  struct Channel * & _19;
  struct deque * _20;
  long unsigned int _21;
  struct queue & _22;
  void * PROF_24;
  struct Credit * * _29;
  struct Credit * * _30;
  struct Credit * * _31;
  struct Credit * * _34;
  struct Credit * * _35;
  struct Credit * * _36;
  struct Credit * * * _38;
  struct Credit * * * _39;
  struct Credit * * _40;
  struct Credit * * _41;
  int _42;
  long unsigned int _43;
  struct Credit * * * _44;
  long int _45;
  struct Credit * * * _46;
  long int _47;
  long int _48;
  long int _49;
  long unsigned int _50;
  long unsigned int _51;
  struct Credit * * * pretmp_95;
  struct Credit * * * prephitmp_96;
  struct Credit * * pretmp_97;
  struct Credit * * prephitmp_98;

  <bb 2>:
  # DEBUG output => 0
  # DEBUG output => 0
  _42 = this_5(D)->D.54631._outputs;
  if (_42 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#3482 => {CLOBBER}
  # DEBUG c => D#3482
  return;

  <bb 4>:

  <bb 5>:
  # output_68 = PHI <0(4), output_15(19)>
  # DEBUG output => output_68
  _7 = (long unsigned int) output_68;
  # DEBUG D#1887 => &this_5(D)->D.54631._output_credits
  _17 = MEM[(struct Channel * * *)this_5(D) + 216B];
  # DEBUG D#79 => D#1887
  # DEBUG __n => _7
  # DEBUG this => D#79
  _8 = _7 * 8;
  _19 = _17 + _8;
  _9 = *_19;
  _10 = _9->D.62933.D.29663._vptr.Module;
  _11 = MEM[(int (*__vtbl_ptr_type) () *)_10 + 56B];
  PROF_24 = [obj_type_ref] OBJ_TYPE_REF(_11;(struct Channel)_9->7);
  if (PROF_24 == Receive)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => _9
  c_28 = _9->_output;
  goto <bb 8>;

  <bb 7>:
  c_26 = OBJ_TYPE_REF(_11;(struct Channel)_9->7) (_9);

  <bb 8>:
  # c_13 = PHI <c_26(7), c_28(6)>
  # DEBUG c => c_13
  if (c_13 != 0B)
    goto <bb 9>;
  else
    goto <bb 18>;

  <bb 9>:
  # DEBUG D#1888 => &this_5(D)->_out_cred_buffer
  _18 = MEM[(struct queue * *)this_5(D) + 456B];
  # DEBUG D#80 => D#1888
  # DEBUG __n => _7
  # DEBUG this => D#80
  _21 = _7 * 80;
  _22 = _18 + _21;
  # DEBUG this => NULL
  # DEBUG __x => &c
  # DEBUG D#3483 => &_22->c
  # DEBUG this => D#3483
  # DEBUG __x => &c
  _29 = MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_cur;
  _30 = MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_last;
  _31 = _30 + 18446744073709551608;
  if (_29 != _31)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  # DEBUG D#1886 => &D#3483->D.59602._M_impl
  # DEBUG D#404 => D#1886
  # DEBUG __p => _29
  # DEBUG __arg => &c
  # DEBUG __a => D#404
  # DEBUG D#403 => D#404
  # DEBUG D#402 => D#403
  # DEBUG __p => _29
  # DEBUG __val => &c
  # DEBUG this => D#402
  # DEBUG D#12 => 8
  # DEBUG __p => _29
  # DEBUG D.101556 => D#12
  if (_29 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  *_29 = c_13;
  pretmp_97 = MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_cur;

  <bb 12>:
  # prephitmp_98 = PHI <_29(10), pretmp_97(11)>
  _34 = prephitmp_98 + 8;
  MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_cur = _34;
  goto <bb 18>;

  <bb 13>:
  # DEBUG this => D#3483
  # DEBUG __t => &c
  # DEBUG this => D#3483
  # DEBUG __nodes_to_add => 1
  _43 = MEM[(struct deque *)_22].D.59602._M_impl._M_map_size;
  _44 = MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_node;
  _45 = (long int) _44;
  _46 = MEM[(struct deque *)_22].D.59602._M_impl._M_map;
  _47 = (long int) _46;
  _48 = _45 - _47;
  _49 = _48 /[ex] -8;
  _50 = (long unsigned int) _49;
  _51 = _43 + _50;
  if (_51 <= 1)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _20 = &_22->c;
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (_20, 1, 0);
  pretmp_95 = MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_node;

  <bb 15>:
  # prephitmp_96 = PHI <pretmp_95(14), _44(13)>
  # DEBUG D#1885 => &D#3483->D.59602
  # DEBUG D#1600 => D#1885
  # DEBUG this => D#1600
  # DEBUG D#1599 => D#1600
  # DEBUG __size => 8
  # DEBUG D#1598 => &D#1599->_M_impl
  # DEBUG D#1592 => D#1598
  # DEBUG __n => NULL
  # DEBUG __a => D#1592
  # DEBUG D#1591 => D#1592
  # DEBUG D#1589 => D#1591
  # DEBUG D#1590 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1589
  # DEBUG D.144261 => D#1590
  # DEBUG D#1588 => D#1589
  # DEBUG D#1587 => D#1588
  # DEBUG this => D#1587
  _35 = operator new (512);
  MEM[(struct Credit * * *)prephitmp_96 + 8B] = _35;
  _36 = MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_cur;
  # DEBUG D#1884 => &D#3483->D.59602._M_impl
  # DEBUG D#402 => D#1884
  # DEBUG __p => _36
  # DEBUG __val => &c
  # DEBUG this => D#402
  # DEBUG D#12 => 8
  # DEBUG __p => _36
  # DEBUG D.101556 => D#12
  if (_36 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  *_36 = c_13;

  <bb 17>:
  _38 = MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_node;
  _39 = _38 + 8;
  # DEBUG D#1883 => &D#3483->D.59602._M_impl._M_finish
  # DEBUG this => D#1883
  # DEBUG __new_node => _39
  MEM[(struct _Deque_iterator *)_22 + 48B]._M_node = _39;
  _40 = MEM[(struct Credit * * *)_38 + 8B];
  MEM[(struct _Deque_iterator *)_22 + 48B]._M_first = _40;
  # DEBUG __size => 8
  _41 = _40 + 512;
  MEM[(struct _Deque_iterator *)_22 + 48B]._M_last = _41;
  MEM[(struct deque *)_22].D.59602._M_impl._M_finish._M_cur = _40;

  <bb 18>:
  output_15 = output_68 + 1;
  # DEBUG output => output_15
  # DEBUG output => output_15
  _6 = this_5(D)->D.54631._outputs;
  if (_6 <= output_15)
    goto <bb 3>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 5>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE23_M_new_elements_at_backEm, funcdef_no=4978, decl_uid=59545, cgraph_uid=3327, symbol_order=3328)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Credit * * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  struct Credit * * * _13;
  struct Credit * * * _16;
  long unsigned int _17;
  struct Credit * * * _18;
  void * _21;
  struct Credit * * * _23;
  long unsigned int _24;
  struct Credit * * * _25;
  struct Credit * * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  struct Credit * * _35;
  long int _36;
  struct Credit * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Credit * * _42;
  long int _43;
  struct Credit * * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  struct Credit * * _50;
  long unsigned int _53;
  long unsigned int _54;
  struct Credit * * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#2465 => this_6(D)
  # DEBUG this => D#2465
  # DEBUG D#2464 => D#2465
  # DEBUG D#2463 => &D#2464->D.59602
  # DEBUG this => D#2463
  # DEBUG __a => D#1614
  # DEBUG D#1613 => D#1614
  # DEBUG D#1587 => D#1613
  # DEBUG this => D#1587
  # DEBUG this => this_6(D)
  # DEBUG D#389 => &MEM[(const struct deque *)this_6(D)].D.59602._M_impl._M_start
  # DEBUG D#390 => &MEM[(const struct deque *)this_6(D)].D.59602._M_impl._M_finish
  # DEBUG __x => D#390
  # DEBUG __y => D#389
  # DEBUG __size => 8
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 64;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 2305843009213693951 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 8
  _12 = __new_elems_10(D) + 63;
  # DEBUG __size => 8
  __new_nodes_14 = _12 >> 6;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.59602._M_impl._M_map_size;
  _57 = this_6(D)->D.59602._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.59602._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#2467 => &this_6(D)->D.59602
  # DEBUG D#1600 => D#2467
  # DEBUG this => D#1600
  # DEBUG D#1599 => D#1600
  # DEBUG __size => 8
  # DEBUG D#1598 => &D#1599->_M_impl
  # DEBUG D#1592 => D#1598
  # DEBUG __n => NULL
  # DEBUG __a => D#1592
  # DEBUG D#1591 => D#1592
  # DEBUG D#1589 => D#1591
  # DEBUG D#1590 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1589
  # DEBUG D.128117 => D#1590
  # DEBUG D#1588 => D#1589
  # DEBUG D#1587 => D#1588
  # DEBUG this => D#1587
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.59602._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#2466 => &this_6(D)->D.59602
  # DEBUG this => D#2466
  # DEBUG __p => _26
  # DEBUG __size => 8
  # DEBUG D#1103 => &D#2466->_M_impl
  # DEBUG D#1083 => D#1103
  # DEBUG __p => _26
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _26
  # DEBUG this => D#1079
  # DEBUG D.128127 => D#1080
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void EventRouter::_OutputQueuing() (_ZN11EventRouter14_OutputQueuingEv, funcdef_no=2172, decl_uid=54568, cgraph_uid=521, symbol_order=522)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void EventRouter::_OutputQueuing() (struct EventRouter * const this)
{
  int input;
  int output;
  struct Credit * c;
  struct Flit * f;
  struct PipelineFIFO * _10;
  struct vector * _11;
  long unsigned int _14;
  struct PipelineFIFO * _17;
  long unsigned int _18;
  int _20;
  struct queue * _24;
  struct queue * _25;
  long unsigned int _26;
  struct vector & _27;
  struct Flit * * _28;
  long unsigned int _29;
  struct Flit * & _30;
  struct deque * _32;
  long unsigned int _33;
  struct queue & _34;
  int _35;
  long unsigned int _36;
  long unsigned int _37;
  struct vector * _38;
  long unsigned int _39;
  struct vector & _40;
  struct Credit * * _41;
  long unsigned int _42;
  struct Credit * & _43;
  struct deque * _45;
  long unsigned int _46;
  struct queue & _47;
  struct Flit * * _50;
  struct Flit * * _51;
  struct Flit * * _52;
  struct Flit * * _55;
  struct Flit * * _56;
  struct Flit * * _57;
  struct Flit * * * _59;
  struct Flit * * * _60;
  struct Flit * * _61;
  struct Flit * * _62;
  long unsigned int _64;
  struct Flit * * * _65;
  long int _66;
  struct Flit * * * _67;
  long int _68;
  long int _69;
  long int _70;
  long unsigned int _71;
  long unsigned int _72;
  struct Credit * * _73;
  struct Credit * * _74;
  struct Credit * * _75;
  struct Credit * * _78;
  struct Credit * * _79;
  struct Credit * * _80;
  struct Credit * * * _82;
  struct Credit * * * _83;
  struct Credit * * _84;
  struct Credit * * _85;
  long unsigned int _87;
  struct Credit * * * _88;
  long int _89;
  struct Credit * * * _90;
  long int _91;
  long int _92;
  long int _93;
  long unsigned int _94;
  long unsigned int _95;
  int _125;
  int _126;
  int prephitmp_173;
  struct Flit * * * pretmp_181;
  struct Flit * * * prephitmp_182;
  struct Flit * * pretmp_183;
  struct Flit * * prephitmp_184;
  int prephitmp_207;
  struct Credit * * * pretmp_215;
  struct Credit * * * prephitmp_216;
  struct Credit * * pretmp_217;
  struct Credit * * prephitmp_218;
  int pretmp_219;
  int prephitmp_220;
  int pretmp_221;
  int prephitmp_222;

  <bb 2>:
  # DEBUG output => 0
  # DEBUG output => 0
  _125 = this_8(D)->D.54631._outputs;
  if (_125 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  # DEBUG input => 0
  _126 = this_8(D)->D.54631._inputs;
  if (_126 <= 0)
    goto <bb 4>;
  else
    goto <bb 18>;

  <bb 4>:
  # DEBUG D#3487 => {CLOBBER}
  # DEBUG f => D#3487
  # DEBUG D#3488 => {CLOBBER}
  # DEBUG c => D#3488
  return;

  <bb 5>:

  <bb 6>:
  # output_124 = PHI <0(5), output_15(17)>
  # prephitmp_173 = PHI <_125(5), prephitmp_220(17)>
  # DEBUG output => output_124
  _10 = this_8(D)->_crossbar_pipe;
  # DEBUG this => _10
  # DEBUG lane => output_124
  _20 = _10->_pipe_ptr;
  _18 = (long unsigned int) _20;
  _14 = (long unsigned int) output_124;
  # DEBUG D#182 => &_10->_data
  _11 = MEM[(struct vector * *)_10 + 112B];
  # DEBUG D#148 => D#182
  # DEBUG __n => _14
  # DEBUG this => D#148
  _26 = _14 * 24;
  _27 = _11 + _26;
  _28 = MEM[(struct Flit * * *)_27];
  # DEBUG __n => _18
  # DEBUG this => D#179
  _29 = _18 * 8;
  _30 = _28 + _29;
  f_31 = *_30;
  # DEBUG f => f_31
  if (f_31 != 0B)
    goto <bb 7>;
  else
    goto <bb 16>;

  <bb 7>:
  # DEBUG D#1889 => &this_8(D)->_output_buffer
  _24 = MEM[(struct queue * *)this_8(D) + 408B];
  # DEBUG D#78 => D#1889
  # DEBUG __n => _14
  # DEBUG this => D#78
  _33 = _14 * 80;
  _34 = _24 + _33;
  # DEBUG this => NULL
  # DEBUG __x => &f
  # DEBUG D#3490 => &_34->c
  # DEBUG this => D#3490
  # DEBUG __x => &f
  _50 = MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_cur;
  _51 = MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_last;
  _52 = _51 + 18446744073709551608;
  if (_50 != _52)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # DEBUG D#1875 => &D#3490->D.44077._M_impl
  # DEBUG D#401 => D#1875
  # DEBUG __p => _50
  # DEBUG __arg => &f
  # DEBUG __a => D#401
  # DEBUG D#400 => D#401
  # DEBUG D#399 => D#400
  # DEBUG __p => _50
  # DEBUG __val => &f
  # DEBUG this => D#399
  # DEBUG D#12 => 8
  # DEBUG __p => _50
  # DEBUG D.101530 => D#12
  if (_50 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  *_50 = f_31;
  pretmp_183 = MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_cur;

  <bb 10>:
  # prephitmp_184 = PHI <_50(8), pretmp_183(9)>
  _55 = prephitmp_184 + 8;
  MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_cur = _55;
  goto <bb 16>;

  <bb 11>:
  # DEBUG this => D#3490
  # DEBUG __t => &f
  # DEBUG this => D#3490
  # DEBUG __nodes_to_add => 1
  _64 = MEM[(struct deque *)_34].D.44077._M_impl._M_map_size;
  _65 = MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_node;
  _66 = (long int) _65;
  _67 = MEM[(struct deque *)_34].D.44077._M_impl._M_map;
  _68 = (long int) _67;
  _69 = _66 - _68;
  _70 = _69 /[ex] -8;
  _71 = (long unsigned int) _70;
  _72 = _64 + _71;
  if (_72 <= 1)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _32 = &_34->c;
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (_32, 1, 0);
  pretmp_181 = MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_node;

  <bb 13>:
  # prephitmp_182 = PHI <pretmp_181(12), _65(11)>
  # DEBUG D#1874 => &D#3490->D.44077
  # DEBUG D#1570 => D#1874
  # DEBUG this => D#1570
  # DEBUG D#1569 => D#1570
  # DEBUG __size => 8
  # DEBUG D#1568 => &D#1569->_M_impl
  # DEBUG D#1562 => D#1568
  # DEBUG __n => NULL
  # DEBUG __a => D#1562
  # DEBUG D#1561 => D#1562
  # DEBUG D#1559 => D#1561
  # DEBUG D#1560 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1559
  # DEBUG D.144348 => D#1560
  # DEBUG D#1558 => D#1559
  # DEBUG D#1557 => D#1558
  # DEBUG this => D#1557
  _56 = operator new (512);
  MEM[(struct Flit * * *)prephitmp_182 + 8B] = _56;
  _57 = MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_cur;
  # DEBUG D#1873 => &D#3490->D.44077._M_impl
  # DEBUG D#399 => D#1873
  # DEBUG __p => _57
  # DEBUG __val => &f
  # DEBUG this => D#399
  # DEBUG D#12 => 8
  # DEBUG __p => _57
  # DEBUG D.101530 => D#12
  if (_57 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  *_57 = f_31;

  <bb 15>:
  _59 = MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_node;
  _60 = _59 + 8;
  # DEBUG D#1872 => &D#3490->D.44077._M_impl._M_finish
  # DEBUG this => D#1872
  # DEBUG __new_node => _60
  MEM[(struct _Deque_iterator *)_34 + 48B]._M_node = _60;
  _61 = MEM[(struct Flit * * *)_59 + 8B];
  MEM[(struct _Deque_iterator *)_34 + 48B]._M_first = _61;
  # DEBUG __size => 8
  _62 = _61 + 512;
  MEM[(struct _Deque_iterator *)_34 + 48B]._M_last = _62;
  MEM[(struct deque *)_34].D.44077._M_impl._M_finish._M_cur = _61;
  pretmp_219 = this_8(D)->D.54631._outputs;

  <bb 16>:
  # prephitmp_220 = PHI <prephitmp_173(6), pretmp_219(15), prephitmp_173(10)>
  output_15 = output_124 + 1;
  # DEBUG output => output_15
  # DEBUG output => output_15
  if (output_15 >= prephitmp_220)
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 17>:
  goto <bb 6>;

  <bb 18>:

  <bb 19>:
  # input_13 = PHI <0(18), input_21(30)>
  # prephitmp_207 = PHI <_126(18), prephitmp_222(30)>
  # DEBUG input => input_13
  _17 = this_8(D)->_credit_pipe;
  # DEBUG this => _17
  # DEBUG lane => input_13
  _35 = _17->_pipe_ptr;
  _36 = (long unsigned int) _35;
  _37 = (long unsigned int) input_13;
  # DEBUG D#186 => &_17->_data
  _38 = MEM[(struct vector * *)_17 + 112B];
  # DEBUG D#149 => D#186
  # DEBUG __n => _37
  # DEBUG this => D#149
  _39 = _37 * 24;
  _40 = _38 + _39;
  _41 = MEM[(struct Credit * * *)_40];
  # DEBUG __n => _36
  # DEBUG this => D#183
  _42 = _36 * 8;
  _43 = _41 + _42;
  c_44 = *_43;
  # DEBUG c => c_44
  if (c_44 != 0B)
    goto <bb 20>;
  else
    goto <bb 29>;

  <bb 20>:
  # DEBUG D#1890 => &this_8(D)->_in_cred_buffer
  _25 = MEM[(struct queue * *)this_8(D) + 432B];
  # DEBUG D#80 => D#1890
  # DEBUG __n => _37
  # DEBUG this => D#80
  _46 = _37 * 80;
  _47 = _25 + _46;
  # DEBUG this => NULL
  # DEBUG __x => &c
  # DEBUG D#3489 => &_47->c
  # DEBUG this => D#3489
  # DEBUG __x => &c
  _73 = MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_cur;
  _74 = MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_last;
  _75 = _74 + 18446744073709551608;
  if (_73 != _75)
    goto <bb 21>;
  else
    goto <bb 24>;

  <bb 21>:
  # DEBUG D#1886 => &D#3489->D.59602._M_impl
  # DEBUG D#404 => D#1886
  # DEBUG __p => _73
  # DEBUG __arg => &c
  # DEBUG __a => D#404
  # DEBUG D#403 => D#404
  # DEBUG D#402 => D#403
  # DEBUG __p => _73
  # DEBUG __val => &c
  # DEBUG this => D#402
  # DEBUG D#12 => 8
  # DEBUG __p => _73
  # DEBUG D.101556 => D#12
  if (_73 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  *_73 = c_44;
  pretmp_217 = MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_cur;

  <bb 23>:
  # prephitmp_218 = PHI <_73(21), pretmp_217(22)>
  _78 = prephitmp_218 + 8;
  MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_cur = _78;
  goto <bb 29>;

  <bb 24>:
  # DEBUG this => D#3489
  # DEBUG __t => &c
  # DEBUG this => D#3489
  # DEBUG __nodes_to_add => 1
  _87 = MEM[(struct deque *)_47].D.59602._M_impl._M_map_size;
  _88 = MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_node;
  _89 = (long int) _88;
  _90 = MEM[(struct deque *)_47].D.59602._M_impl._M_map;
  _91 = (long int) _90;
  _92 = _89 - _91;
  _93 = _92 /[ex] -8;
  _94 = (long unsigned int) _93;
  _95 = _87 + _94;
  if (_95 <= 1)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  _45 = &_47->c;
  std::deque<Credit*, std::allocator<Credit*> >::_M_reallocate_map (_45, 1, 0);
  pretmp_215 = MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_node;

  <bb 26>:
  # prephitmp_216 = PHI <pretmp_215(25), _88(24)>
  # DEBUG D#1885 => &D#3489->D.59602
  # DEBUG D#1600 => D#1885
  # DEBUG this => D#1600
  # DEBUG D#1599 => D#1600
  # DEBUG __size => 8
  # DEBUG D#1598 => &D#1599->_M_impl
  # DEBUG D#1592 => D#1598
  # DEBUG __n => NULL
  # DEBUG __a => D#1592
  # DEBUG D#1591 => D#1592
  # DEBUG D#1589 => D#1591
  # DEBUG D#1590 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1589
  # DEBUG D.144372 => D#1590
  # DEBUG D#1588 => D#1589
  # DEBUG D#1587 => D#1588
  # DEBUG this => D#1587
  _79 = operator new (512);
  MEM[(struct Credit * * *)prephitmp_216 + 8B] = _79;
  _80 = MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_cur;
  # DEBUG D#1884 => &D#3489->D.59602._M_impl
  # DEBUG D#402 => D#1884
  # DEBUG __p => _80
  # DEBUG __val => &c
  # DEBUG this => D#402
  # DEBUG D#12 => 8
  # DEBUG __p => _80
  # DEBUG D.101556 => D#12
  if (_80 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  *_80 = c_44;

  <bb 28>:
  _82 = MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_node;
  _83 = _82 + 8;
  # DEBUG D#1883 => &D#3489->D.59602._M_impl._M_finish
  # DEBUG this => D#1883
  # DEBUG __new_node => _83
  MEM[(struct _Deque_iterator *)_47 + 48B]._M_node = _83;
  _84 = MEM[(struct Credit * * *)_82 + 8B];
  MEM[(struct _Deque_iterator *)_47 + 48B]._M_first = _84;
  # DEBUG __size => 8
  _85 = _84 + 512;
  MEM[(struct _Deque_iterator *)_47 + 48B]._M_last = _85;
  MEM[(struct deque *)_47].D.59602._M_impl._M_finish._M_cur = _84;
  pretmp_221 = this_8(D)->D.54631._inputs;

  <bb 29>:
  # prephitmp_222 = PHI <prephitmp_207(19), pretmp_221(28), prephitmp_207(23)>
  input_21 = input_13 + 1;
  # DEBUG input => input_21
  # DEBUG input => input_21
  if (input_21 >= prephitmp_222)
    goto <bb 4>;
  else
    goto <bb 30>;

  <bb 30>:
  goto <bb 19>;

}



;; Function virtual void EventRouter::_InternalStep() (_ZN11EventRouter13_InternalStepEv, funcdef_no=2161, decl_uid=54574, cgraph_uid=510, symbol_order=511)

Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
virtual void EventRouter::_InternalStep() (struct EventRouter * const this)
{
  signed long graphite_IV.6145;
  struct Flit * & D.144441;
  struct Flit * * D.144440;
  struct vector & D.144439;
  struct vector * D.144438;
  signed long graphite_IV.6144;
  struct Credit * & D.144436;
  struct Credit * * D.144435;
  struct vector & D.144434;
  struct vector * D.144433;
  struct tTransportEvent * tevt;
  int l;
  int l;
  int input;
  int output;
  int input;
  int output;
  int input;
  int output;
  struct PipelineFIFO * _16;
  int _17;
  long unsigned int _18;
  int _20;
  struct PriorityArbiter * _22;
  int _25;
  int _28;
  int _31;
  long unsigned int _32;
  int _33;
  struct PriorityArbiter * _35;
  struct PipelineFIFO * _38;
  int _39;
  struct PipelineFIFO * _40;
  int _45;
  struct PipelineFIFO * _48;
  struct PipelineFIFO * _50;
  int _51;
  struct PriorityArbiter * * _53;
  struct PriorityArbiter * * _54;
  int _55;
  int _56;
  int _57;
  int _59;
  long unsigned int _60;
  struct PriorityArbiter * & _61;
  long unsigned int _62;
  struct PriorityArbiter * & _63;
  int _87;
  int _89;
  int _90;
  int _91;
  long unsigned int _98;
  struct queue * _99;
  long unsigned int _100;
  struct queue & _101;
  struct tTransportEvent * * const _102;
  struct tTransportEvent * * const _103;
  int _105;
  long unsigned int _106;
  struct PriorityArbiter * * _107;
  long unsigned int _108;
  struct PriorityArbiter * & _109;
  struct PriorityArbiter * _110;
  int _115;
  int _119;
  int _121;
  int _125;
  bool _128;
  int _133;
  int _135;
  signed long _149;
  struct Flit * & _163;
  struct Flit * * _164;
  long unsigned int _165;
  long unsigned int _166;
  struct vector & _167;
  struct vector * _168;
  int prephitmp_173;
  int pretmp_175;
  int prephitmp_177;
  signed long _178;
  signed long _179;
  bool _180;
  struct Credit * & _189;
  struct Credit * * _190;
  int pretmp_191;
  long unsigned int pretmp_193;
  long unsigned int pretmp_196;
  long unsigned int _198;
  long unsigned int _199;
  struct vector & _200;
  struct vector * _204;
  signed long _207;
  int _208;
  int _209;
  int _210;
  int prephitmp_211;
  int pretmp_219;
  long unsigned int pretmp_221;
  long unsigned int pretmp_224;
  int pretmp_228;
  int prephitmp_229;
  int prephitmp_231;
  int pretmp_239;
  int prephitmp_240;

  <bb 2>:
  EventRouter::_IncomingFlits (this_14(D));
  _16 = this_14(D)->_arrival_pipe;
  _55 = MEM[(int *)_16 + 104B];
  # DEBUG D#74 => _16
  # DEBUG D#74 => _16
  # DEBUG this => D#74
  # DEBUG this => D#74
  _33 = MEM[(int *)_16 + 108B];
  _20 = _33 + 1;
  _59 = _20 % _55;
  MEM[(int *)_16 + 108B] = _59;
  # DEBUG output => 0
  # DEBUG output => 0
  _135 = this_14(D)->D.54631._outputs;
  if (_135 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # prephitmp_173 = PHI <_210(6), _135(2)>
  # DEBUG input => 0
  _125 = this_14(D)->D.54631._inputs;
  if (_125 <= 0)
    goto <bb 44>;
  else
    goto <bb 9>;

  <bb 4>:

  <bb 5>:
  # output_136 = PHI <0(4), output_24(7)>
  # DEBUG output => output_136
  _18 = (long unsigned int) output_136;
  # DEBUG D#2016 => &this_14(D)->_arrival_arbiter
  _53 = MEM[(struct PriorityArbiter * * *)this_14(D) + 512B];
  # DEBUG D#73 => D#2016
  # DEBUG __n => _18
  # DEBUG this => D#73
  _60 = _18 * 8;
  _61 = _53 + _60;
  _22 = *_61;
  PriorityArbiter::Clear (_22);
  output_24 = output_136 + 1;
  # DEBUG output => output_24
  # DEBUG output => output_24
  _17 = this_14(D)->D.54631._outputs;
  if (_17 <= output_24)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # _210 = PHI <_17(5)>
  goto <bb 3>;

  <bb 7>:
  goto <bb 5>;

  <bb 8>:
  # _209 = PHI <_25(10)>
  # DEBUG output => 0
  _119 = this_14(D)->D.54631._outputs;
  if (_119 <= 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # input_137 = PHI <0(9), input_27(11)>
  # DEBUG input => input_137
  EventRouter::_ArrivalRequests (this_14(D), input_137);
  input_27 = input_137 + 1;
  # DEBUG input => input_27
  # DEBUG input => input_27
  _25 = this_14(D)->D.54631._inputs;
  if (_25 <= input_27)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:
  # prephitmp_229 = PHI <pretmp_228(16), _209(8)>
  # prephitmp_231 = PHI <_208(16), _119(8)>
  # DEBUG input => 0
  if (prephitmp_229 <= 0)
    goto <bb 21>;
  else
    goto <bb 17>;

  <bb 13>:

  <bb 14>:
  # output_138 = PHI <0(13), output_30(15)>
  # DEBUG output => output_138
  EventRouter::_ArrivalArb (this_14(D), output_138);
  output_30 = output_138 + 1;
  # DEBUG output => output_30
  # DEBUG output => output_30
  _28 = this_14(D)->D.54631._outputs;
  if (_28 <= output_30)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  goto <bb 14>;

  <bb 16>:
  # _208 = PHI <_28(14)>
  pretmp_228 = this_14(D)->D.54631._inputs;
  goto <bb 12>;

  <bb 17>:

  <bb 18>:
  # input_139 = PHI <0(17), input_37(19)>
  # DEBUG input => input_139
  _32 = (long unsigned int) input_139;
  # DEBUG D#2017 => &this_14(D)->_transport_arbiter
  _54 = MEM[(struct PriorityArbiter * * *)this_14(D) + 560B];
  # DEBUG D#73 => D#2017
  # DEBUG __n => _32
  # DEBUG this => D#73
  _62 = _32 * 8;
  _63 = _54 + _62;
  _35 = *_63;
  PriorityArbiter::Clear (_35);
  input_37 = input_139 + 1;
  # DEBUG input => input_37
  # DEBUG input => input_37
  _31 = this_14(D)->D.54631._inputs;
  if (_31 <= input_37)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 18>;

  <bb 20>:
  pretmp_175 = this_14(D)->D.54631._outputs;

  <bb 21>:
  # prephitmp_177 = PHI <pretmp_175(20), prephitmp_231(12), prephitmp_173(44)>
  _38 = this_14(D)->_crossbar_pipe;
  # DEBUG this => _38
  # DEBUG val => 0B
  # DEBUG l => 0
  # DEBUG l => 0
  _121 = _38->_lanes;
  if (_121 <= 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _40 = this_14(D)->_credit_pipe;
  # DEBUG this => _40
  # DEBUG val => 0B
  # DEBUG l => 0
  _133 = _40->_lanes;
  if (_133 <= 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 23>:
  pretmp_219 = _38->_pipe_ptr;
  pretmp_221 = (long unsigned int) pretmp_219;
  pretmp_224 = pretmp_221 * 8;
  _180 = _121 > 0;
  if (_180 != 0)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  _179 = (signed long) _121;
  _178 = _179 + -1;

  <bb 25>:
  # graphite_IV.6145_174 = PHI <0(24), graphite_IV.6145_172(26)>
  # DEBUG l => NULL
  _168 = MEM[(struct vector * *)_38 + 112B];
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _166 = (long unsigned int) graphite_IV.6145_174;
  _165 = _166 * 24;
  _167 = _168 + _165;
  _164 = MEM[(struct Flit * * *)_167];
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _163 = _164 + pretmp_224;
  *_163 = 0B;
  # DEBUG l => NULL
  # DEBUG l => NULL
  graphite_IV.6145_172 = graphite_IV.6145_174 + 1;
  if (graphite_IV.6145_174 < _178)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  goto <bb 25>;

  <bb 27>:
  goto <bb 22>;

  <bb 28>:
  # DEBUG output => 0
  if (prephitmp_177 <= 0)
    goto <bb 34>;
  else
    goto <bb 36>;

  <bb 29>:
  pretmp_191 = _40->_pipe_ptr;
  pretmp_193 = (long unsigned int) pretmp_191;
  pretmp_196 = pretmp_193 * 8;
  _128 = _133 > 0;
  if (_128 != 0)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 30>:
  _149 = (signed long) _133;
  _207 = _149 + -1;

  <bb 31>:
  # graphite_IV.6144_206 = PHI <0(30), graphite_IV.6144_205(32)>
  # DEBUG l => NULL
  _204 = MEM[(struct vector * *)_40 + 112B];
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _199 = (long unsigned int) graphite_IV.6144_206;
  _198 = _199 * 24;
  _200 = _204 + _198;
  _190 = MEM[(struct Credit * * *)_200];
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _189 = _190 + pretmp_196;
  *_189 = 0B;
  # DEBUG l => NULL
  # DEBUG l => NULL
  graphite_IV.6144_205 = graphite_IV.6144_206 + 1;
  if (graphite_IV.6144_206 < _207)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  goto <bb 31>;

  <bb 33>:
  goto <bb 28>;

  <bb 34>:
  # DEBUG input => 0
  _115 = this_14(D)->D.54631._inputs;
  if (_115 <= 0)
    goto <bb 35>;
  else
    goto <bb 41>;

  <bb 35>:
  _48 = this_14(D)->_crossbar_pipe;
  _56 = MEM[(int *)_48 + 104B];
  # DEBUG D#75 => _48
  # DEBUG D#75 => _48
  # DEBUG this => D#75
  # DEBUG this => D#75
  _51 = MEM[(int *)_48 + 108B];
  _90 = _51 + 1;
  _91 = _90 % _56;
  MEM[(int *)_48 + 108B] = _91;
  _50 = this_14(D)->_credit_pipe;
  _57 = MEM[(int *)_50 + 104B];
  # DEBUG D#76 => _50
  # DEBUG D#76 => _50
  # DEBUG this => D#76
  # DEBUG this => D#76
  _39 = MEM[(int *)_50 + 108B];
  _87 = _39 + 1;
  _89 = _87 % _57;
  MEM[(int *)_50 + 108B] = _89;
  EventRouter::_OutputQueuing (this_14(D));
  return;

  <bb 36>:

  <bb 37>:
  # output_140 = PHI <0(36), output_44(40)>
  # prephitmp_211 = PHI <prephitmp_177(36), prephitmp_240(40)>
  # DEBUG output => output_140
  # DEBUG this => this_14(D)
  # DEBUG output => output_140
  _98 = (long unsigned int) output_140;
  # DEBUG D#271 => &this_14(D)->_transport_queue
  _99 = MEM[(struct queue * *)this_14(D) + 536B];
  # DEBUG D#81 => D#271
  # DEBUG __n => _98
  # DEBUG this => D#81
  _100 = _98 * 80;
  _101 = _99 + _100;
  # DEBUG this => NULL
  # DEBUG this => D#265
  # DEBUG D#263 => &D#265->D.61649._M_impl._M_start
  # DEBUG D#264 => &D#265->D.61649._M_impl._M_finish
  _102 = MEM[(struct tTransportEvent * * *)_101 + 48B];
  # DEBUG D#261 => D#264
  _103 = MEM[(struct tTransportEvent * * *)_101 + 16B];
  # DEBUG D#262 => D#263
  # DEBUG __x => D#261
  # DEBUG __y => D#262
  if (_102 != _103)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#272 => &this_14(D)->_transport_queue
  # DEBUG D#81 => D#272
  # DEBUG __n => _98
  # DEBUG this => D#81
  # DEBUG this => NULL
  # DEBUG this => D#270
  # DEBUG this => D#270
  # DEBUG D#173 => &D#270->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#269 => MEM[(const struct iterator &)D#270 + 16]._M_first
  # DEBUG D.100659 => D#269
  # DEBUG D#268 => MEM[(const struct iterator &)D#270 + 16]._M_last
  # DEBUG D.100660 => D#268
  # DEBUG D#267 => MEM[(const struct iterator &)D#270 + 16]._M_node
  # DEBUG D.100661 => D#267
  # DEBUG this => D#266
  tevt_104 = *_103;
  # DEBUG tevt => tevt_104
  _105 = tevt_104->input;
  _106 = (long unsigned int) _105;
  # DEBUG D#273 => &this_14(D)->_transport_arbiter
  _107 = MEM[(struct PriorityArbiter * * *)this_14(D) + 560B];
  # DEBUG D#73 => D#273
  # DEBUG __n => _106
  # DEBUG this => D#73
  _108 = _106 * 8;
  _109 = _107 + _108;
  _110 = *_109;
  PriorityArbiter::AddRequest (_110, output_140, 0, 0);
  pretmp_239 = this_14(D)->D.54631._outputs;

  <bb 39>:
  # prephitmp_240 = PHI <pretmp_239(38), prephitmp_211(37)>
  output_44 = output_140 + 1;
  # DEBUG output => output_44
  # DEBUG output => output_44
  if (output_44 >= prephitmp_240)
    goto <bb 34>;
  else
    goto <bb 40>;

  <bb 40>:
  goto <bb 37>;

  <bb 41>:

  <bb 42>:
  # input_141 = PHI <0(41), input_47(43)>
  # DEBUG input => input_141
  EventRouter::_TransportArb (this_14(D), input_141);
  input_47 = input_141 + 1;
  # DEBUG input => input_47
  # DEBUG input => input_47
  _45 = this_14(D)->D.54631._inputs;
  if (_45 <= input_47)
    goto <bb 35>;
  else
    goto <bb 43>;

  <bb 43>:
  goto <bb 42>;

  <bb 44>:
  # DEBUG output => 0
  if (prephitmp_173 <= 0)
    goto <bb 21>;
  else
    goto <bb 13>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE24_M_new_elements_at_frontEm, funcdef_no=4964, decl_uid=44017, cgraph_uid=3313, symbol_order=3314)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Flit * * * _8;
  long unsigned int _10;
  long int _12;
  long unsigned int _13;
  struct Flit * * * _14;
  struct Flit * * _16;
  struct Flit * * * _17;
  long unsigned int _18;
  sizetype _19;
  struct Flit * * * _20;
  void * _23;
  struct Flit * * * _25;
  long unsigned int _26;
  sizetype _27;
  struct Flit * * * _28;
  struct Flit * * _29;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  struct Flit * * _39;
  long int _40;
  struct Flit * * _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  struct Flit * * _46;
  long int _47;
  struct Flit * * _48;
  long int _49;
  long int _50;
  long int _51;
  difference_type _52;
  size_type _53;
  struct Flit * * * _54;
  long int _55;
  long int _56;
  long int _57;
  long unsigned int _58;

  <bb 2>:
  # DEBUG D#2457 => this_6(D)
  # DEBUG this => D#2457
  # DEBUG D#2456 => D#2457
  # DEBUG D#2455 => &D#2456->D.44077
  # DEBUG this => D#2455
  # DEBUG __a => D#1583
  # DEBUG D#1582 => D#1583
  # DEBUG D#1557 => D#1582
  # DEBUG this => D#1557
  # DEBUG this => this_6(D)
  # DEBUG D#209 => &MEM[(const struct deque *)this_6(D)].D.44077._M_impl._M_start
  # DEBUG D#210 => &MEM[(const struct deque *)this_6(D)].D.44077._M_impl._M_finish
  # DEBUG __x => D#210
  # DEBUG __y => D#209
  # DEBUG __size => 8
  _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _12 = (long int) _14;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _35 = _12 - _7;
  _36 = _35 /[ex] 8;
  _37 = _36 + -1;
  _38 = _37 * 64;
  _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _40 = (long int) _39;
  _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = _43 /[ex] 8;
  _45 = _38 + _44;
  _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _47 = (long int) _46;
  _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _49 = (long int) _48;
  _50 = _47 - _49;
  _51 = _50 /[ex] 8;
  _52 = _45 + _51;
  _53 = (size_type) _52;
  _10 = 2305843009213693951 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_front");

  <bb 4>:
  # DEBUG __size => 8
  _13 = __new_elems_11(D) + 63;
  # DEBUG __size => 8
  __new_nodes_15 = _13 >> 6;
  # DEBUG __new_nodes => __new_nodes_15
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_15
  _54 = this_6(D)->D.44077._M_impl._M_map;
  _55 = (long int) _54;
  _56 = _7 - _55;
  _57 = _56 /[ex] 8;
  _58 = (long unsigned int) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_22(11)>
  # DEBUG __i => __i_67
  _17 = this_6(D)->D.44077._M_impl._M_start._M_node;
  _18 = __i_67 * 8;
  _19 = -_18;
  _20 = _17 + _19;
  # DEBUG D#2461 => &this_6(D)->D.44077
  # DEBUG D#1570 => D#2461
  # DEBUG this => D#1570
  # DEBUG D#1569 => D#1570
  # DEBUG __size => 8
  # DEBUG D#1568 => &D#1569->_M_impl
  # DEBUG D#1562 => D#1568
  # DEBUG __n => NULL
  # DEBUG __a => D#1562
  # DEBUG D#1561 => D#1562
  # DEBUG D#1559 => D#1561
  # DEBUG D#1560 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1559
  # DEBUG D.128054 => D#1560
  # DEBUG D#1558 => D#1559
  # DEBUG D#1557 => D#1558
  # DEBUG this => D#1557
  _16 = operator new (512);

  <bb 10>:
  *_20 = _16;
  __i_22 = __i_67 + 1;
  # DEBUG __i => __i_22
  # DEBUG __i => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_76 = PHI <__i_67(9)>
<L5>:
  _23 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_23);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_68 = PHI <1(14), __j_31(16)>
  # DEBUG __j => __j_68
  _25 = this_6(D)->D.44077._M_impl._M_start._M_node;
  _26 = __j_68 * 8;
  _27 = -_26;
  _28 = _25 + _27;
  _29 = *_28;
  # DEBUG D#2460 => &this_6(D)->D.44077
  # DEBUG D#1039 => D#2460
  # DEBUG __p => _29
  # DEBUG this => D#1039
  # DEBUG D#1038 => D#1039
  # DEBUG __size => 8
  # DEBUG D#1037 => &D#1038->_M_impl
  # DEBUG D#1017 => D#1037
  # DEBUG __p => _29
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _29
  # DEBUG this => D#1013
  # DEBUG D.128064 => D#1014
  operator delete (_29);
  __j_31 = __j_68 + 1;
  # DEBUG __j => __j_31
  # DEBUG __j => __j_31
  if (__j_31 >= __i_76)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void EventRouter::_ReceiveFlits() (_ZN11EventRouter13_ReceiveFlitsEv, funcdef_no=2163, decl_uid=54541, cgraph_uid=512, symbol_order=513)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void EventRouter::_ReceiveFlits() (struct EventRouter * const this)
{
  struct Flit * D.144519;
  int input;
  struct Flit * f;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  struct FlitChannel * _9;
  struct Channel * _10;
  int (*__vtbl_ptr_type) () * _11;
  int (*__vtbl_ptr_type) () _12;
  struct FlitChannel * * _18;
  struct queue * _19;
  struct FlitChannel * & _20;
  struct deque * _21;
  long unsigned int _22;
  struct queue & _23;
  void * PROF_25;
  struct Flit * * _30;
  struct Flit * * _31;
  struct Flit * * _32;
  struct Flit * * _35;
  struct Flit * * _36;
  struct Flit * * _37;
  struct Flit * * * _39;
  struct Flit * * * _40;
  struct Flit * * _41;
  struct Flit * * _42;
  int _43;
  long unsigned int _44;
  struct Flit * * * _45;
  long int _46;
  struct Flit * * * _47;
  long int _48;
  long int _49;
  long int _50;
  long unsigned int _51;
  long unsigned int _52;
  struct Flit * * * pretmp_96;
  struct Flit * * * prephitmp_97;
  struct Flit * * pretmp_98;
  struct Flit * * prephitmp_99;

  <bb 2>:
  # DEBUG input => 0
  # DEBUG input => 0
  _43 = this_5(D)->D.54631._inputs;
  if (_43 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  # DEBUG D#3497 => {CLOBBER}
  # DEBUG f => D#3497
  return;

  <bb 4>:

  <bb 5>:
  # input_69 = PHI <0(4), input_16(19)>
  # DEBUG input => input_69
  _7 = (long unsigned int) input_69;
  # DEBUG D#1876 => &this_5(D)->D.54631._input_channels
  _18 = MEM[(struct FlitChannel * * *)this_5(D) + 144B];
  # DEBUG D#77 => D#1876
  # DEBUG __n => _7
  # DEBUG this => D#77
  _8 = _7 * 8;
  _20 = _18 + _8;
  _9 = *_20;
  _10 = &_9->D.35808;
  _11 = MEM[(struct Channel *)_9].D.35202.D.29663._vptr.Module;
  _12 = MEM[(int (*__vtbl_ptr_type) () *)_11 + 56B];
  PROF_25 = [obj_type_ref] OBJ_TYPE_REF(_12;(struct Channel)_10->7);
  if (PROF_25 == Receive)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => _10
  f_29 = MEM[(struct Channel *)_9]._output;
  goto <bb 8>;

  <bb 7>:
  f_27 = OBJ_TYPE_REF(_12;(struct Channel)_10->7) (_10);

  <bb 8>:
  # f_14 = PHI <f_27(7), f_29(6)>
  # DEBUG f => f_14
  if (f_14 != 0B)
    goto <bb 9>;
  else
    goto <bb 18>;

  <bb 9>:
  # DEBUG D#1877 => &this_5(D)->_input_buffer
  _19 = MEM[(struct queue * *)this_5(D) + 384B];
  # DEBUG D#78 => D#1877
  # DEBUG __n => _7
  # DEBUG this => D#78
  _22 = _7 * 80;
  _23 = _19 + _22;
  # DEBUG this => NULL
  # DEBUG __x => &f
  # DEBUG D#3498 => &_23->c
  # DEBUG this => D#3498
  # DEBUG __x => &f
  _30 = MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_cur;
  _31 = MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_last;
  _32 = _31 + 18446744073709551608;
  if (_30 != _32)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  # DEBUG D#1875 => &D#3498->D.44077._M_impl
  # DEBUG D#401 => D#1875
  # DEBUG __p => _30
  # DEBUG __arg => &f
  # DEBUG __a => D#401
  # DEBUG D#400 => D#401
  # DEBUG D#399 => D#400
  # DEBUG __p => _30
  # DEBUG __val => &f
  # DEBUG this => D#399
  # DEBUG D#12 => 8
  # DEBUG __p => _30
  # DEBUG D.101530 => D#12
  if (_30 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  *_30 = f_14;
  pretmp_98 = MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_cur;

  <bb 12>:
  # prephitmp_99 = PHI <_30(10), pretmp_98(11)>
  _35 = prephitmp_99 + 8;
  MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_cur = _35;
  goto <bb 18>;

  <bb 13>:
  # DEBUG this => D#3498
  # DEBUG __t => &f
  # DEBUG this => D#3498
  # DEBUG __nodes_to_add => 1
  _44 = MEM[(struct deque *)_23].D.44077._M_impl._M_map_size;
  _45 = MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_node;
  _46 = (long int) _45;
  _47 = MEM[(struct deque *)_23].D.44077._M_impl._M_map;
  _48 = (long int) _47;
  _49 = _46 - _48;
  _50 = _49 /[ex] -8;
  _51 = (long unsigned int) _50;
  _52 = _44 + _51;
  if (_52 <= 1)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _21 = &_23->c;
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (_21, 1, 0);
  pretmp_96 = MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_node;

  <bb 15>:
  # prephitmp_97 = PHI <pretmp_96(14), _45(13)>
  # DEBUG D#1874 => &D#3498->D.44077
  # DEBUG D#1570 => D#1874
  # DEBUG this => D#1570
  # DEBUG D#1569 => D#1570
  # DEBUG __size => 8
  # DEBUG D#1568 => &D#1569->_M_impl
  # DEBUG D#1562 => D#1568
  # DEBUG __n => NULL
  # DEBUG __a => D#1562
  # DEBUG D#1561 => D#1562
  # DEBUG D#1559 => D#1561
  # DEBUG D#1560 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1559
  # DEBUG D.144535 => D#1560
  # DEBUG D#1558 => D#1559
  # DEBUG D#1557 => D#1558
  # DEBUG this => D#1557
  _36 = operator new (512);
  MEM[(struct Flit * * *)prephitmp_97 + 8B] = _36;
  _37 = MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_cur;
  # DEBUG D#1873 => &D#3498->D.44077._M_impl
  # DEBUG D#399 => D#1873
  # DEBUG __p => _37
  # DEBUG __val => &f
  # DEBUG this => D#399
  # DEBUG D#12 => 8
  # DEBUG __p => _37
  # DEBUG D.101530 => D#12
  if (_37 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  *_37 = f_14;

  <bb 17>:
  _39 = MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_node;
  _40 = _39 + 8;
  # DEBUG D#1872 => &D#3498->D.44077._M_impl._M_finish
  # DEBUG this => D#1872
  # DEBUG __new_node => _40
  MEM[(struct _Deque_iterator *)_23 + 48B]._M_node = _40;
  _41 = MEM[(struct Flit * * *)_39 + 8B];
  MEM[(struct _Deque_iterator *)_23 + 48B]._M_first = _41;
  # DEBUG __size => 8
  _42 = _41 + 512;
  MEM[(struct _Deque_iterator *)_23 + 48B]._M_last = _42;
  MEM[(struct deque *)_23].D.44077._M_impl._M_finish._M_cur = _41;

  <bb 18>:
  input_16 = input_69 + 1;
  # DEBUG input => input_16
  # DEBUG input => input_16
  _6 = this_5(D)->D.54631._inputs;
  if (_6 <= input_16)
    goto <bb 3>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 5>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE23_M_new_elements_at_backEm, funcdef_no=4966, decl_uid=44020, cgraph_uid=3315, symbol_order=3316)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, size_type __new_elems)
{
  size_type __j;
  size_type __i;
  const size_type __new_nodes;
  long int _7;
  struct Flit * * * _8;
  long unsigned int _9;
  long int _11;
  long unsigned int _12;
  struct Flit * * * _13;
  struct Flit * * * _16;
  long unsigned int _17;
  struct Flit * * * _18;
  void * _21;
  struct Flit * * * _23;
  long unsigned int _24;
  struct Flit * * * _25;
  struct Flit * * _26;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  struct Flit * * _35;
  long int _36;
  struct Flit * * _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  struct Flit * * _42;
  long int _43;
  struct Flit * * _44;
  long int _45;
  long int _46;
  long int _47;
  difference_type _48;
  size_type _49;
  struct Flit * * _50;
  long unsigned int _53;
  long unsigned int _54;
  struct Flit * * * _57;
  long int _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2>:
  # DEBUG D#2457 => this_6(D)
  # DEBUG this => D#2457
  # DEBUG D#2456 => D#2457
  # DEBUG D#2455 => &D#2456->D.44077
  # DEBUG this => D#2455
  # DEBUG __a => D#1583
  # DEBUG D#1582 => D#1583
  # DEBUG D#1557 => D#1582
  # DEBUG this => D#1557
  # DEBUG this => this_6(D)
  # DEBUG D#209 => &MEM[(const struct deque *)this_6(D)].D.44077._M_impl._M_start
  # DEBUG D#210 => &MEM[(const struct deque *)this_6(D)].D.44077._M_impl._M_finish
  # DEBUG __x => D#210
  # DEBUG __y => D#209
  # DEBUG __size => 8
  _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
  _11 = (long int) _13;
  _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
  _7 = (long int) _8;
  _31 = _11 - _7;
  _32 = _31 /[ex] 8;
  _33 = _32 + -1;
  _34 = _33 * 64;
  _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
  _36 = (long int) _35;
  _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
  _38 = (long int) _37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
  _43 = (long int) _42;
  _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
  _45 = (long int) _44;
  _46 = _43 - _45;
  _47 = _46 /[ex] 8;
  _48 = _41 + _47;
  _49 = (size_type) _48;
  _9 = 2305843009213693951 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  std::__throw_length_error ("deque::_M_new_elements_at_back");

  <bb 4>:
  # DEBUG __size => 8
  _12 = __new_elems_10(D) + 63;
  # DEBUG __size => 8
  __new_nodes_14 = _12 >> 6;
  # DEBUG __new_nodes => __new_nodes_14
  # DEBUG this => this_6(D)
  # DEBUG __nodes_to_add => __new_nodes_14
  _53 = __new_nodes_14 + 1;
  _54 = this_6(D)->D.44077._M_impl._M_map_size;
  _57 = this_6(D)->D.44077._M_impl._M_map;
  _58 = (long int) _57;
  _59 = _11 - _58;
  _60 = _59 /[ex] -8;
  _61 = (long unsigned int) _60;
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  std::deque<Flit*, std::allocator<Flit*> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  <bb 6>:
  # DEBUG __i => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  return;

  <bb 8>:

  <bb 9>:
  # __i_67 = PHI <1(8), __i_20(11)>
  # DEBUG __i => __i_67
  _16 = this_6(D)->D.44077._M_impl._M_finish._M_node;
  _17 = __i_67 * 8;
  _18 = _16 + _17;
  # DEBUG D#2459 => &this_6(D)->D.44077
  # DEBUG D#1570 => D#2459
  # DEBUG this => D#1570
  # DEBUG D#1569 => D#1570
  # DEBUG __size => 8
  # DEBUG D#1568 => &D#1569->_M_impl
  # DEBUG D#1562 => D#1568
  # DEBUG __n => NULL
  # DEBUG __a => D#1562
  # DEBUG D#1561 => D#1562
  # DEBUG D#1559 => D#1561
  # DEBUG D#1560 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1559
  # DEBUG D.128023 => D#1560
  # DEBUG D#1558 => D#1559
  # DEBUG D#1557 => D#1558
  # DEBUG this => D#1557
  _50 = operator new (512);

  <bb 10>:
  *_18 = _50;
  __i_20 = __i_67 + 1;
  # DEBUG __i => __i_20
  # DEBUG __i => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 9>;

  # __i_65 = PHI <__i_67(9)>
<L5>:
  _21 = __builtin_eh_pointer (1);
  __cxa_begin_catch (_21);
  # DEBUG __j => 1
  # DEBUG __j => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __cxa_rethrow ();

  <bb 14>:

  <bb 15>:
  # __j_66 = PHI <1(14), __j_27(16)>
  # DEBUG __j => __j_66
  _23 = this_6(D)->D.44077._M_impl._M_finish._M_node;
  _24 = __j_66 * 8;
  _25 = _23 + _24;
  _26 = *_25;
  # DEBUG D#2458 => &this_6(D)->D.44077
  # DEBUG D#1039 => D#2458
  # DEBUG __p => _26
  # DEBUG this => D#1039
  # DEBUG D#1038 => D#1039
  # DEBUG __size => 8
  # DEBUG D#1037 => &D#1038->_M_impl
  # DEBUG D#1017 => D#1037
  # DEBUG __p => _26
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _26
  # DEBUG this => D#1013
  # DEBUG D.128033 => D#1014
  operator delete (_26);
  __j_27 = __j_66 + 1;
  # DEBUG __j => __j_27
  # DEBUG __j => __j_27
  if (__j_27 >= __i_65)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 16>:
  goto <bb 15>;

<L10>:
  __cxa_end_catch ();
  resx 2

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>; _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIPN11EventRouter13tArrivalEventESaIS2_EE13_M_insert_auxISt15_Deque_iteratorIS2_RKS2_PS7_EEEvS6_IS2_RS2_PS2_ET_SE_m, funcdef_no=4944, decl_uid=81794, cgraph_uid=3293, symbol_order=3294)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>; _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  struct tArrivalEvent * * * __last1$_M_node;
  struct tArrivalEvent * * __last1$_M_last;
  struct tArrivalEvent * * __last1$_M_first;
  struct tArrivalEvent * * __last1$_M_cur;
  struct tArrivalEvent * * * __first1$_M_node;
  struct tArrivalEvent * * __first1$_M_last;
  struct tArrivalEvent * * __first1$_M_first;
  struct tArrivalEvent * * __first1$_M_cur;
  struct tArrivalEvent * * * SR.6240;
  struct tArrivalEvent * * SR.6239;
  struct tArrivalEvent * * SR.6238;
  struct tArrivalEvent * * SR.6237;
  struct tArrivalEvent * * * __last2$_M_node;
  struct tArrivalEvent * * __last2$_M_last;
  struct tArrivalEvent * * __last2$_M_first;
  struct tArrivalEvent * * __last2$_M_cur;
  struct tArrivalEvent * * * __first2$_M_node;
  struct tArrivalEvent * * __first2$_M_last;
  struct tArrivalEvent * * __first2$_M_first;
  struct tArrivalEvent * * __first2$_M_cur;
  struct tArrivalEvent * * * SR.6228;
  struct tArrivalEvent * * SR.6227;
  struct tArrivalEvent * * SR.6226;
  struct tArrivalEvent * * SR.6225;
  struct tArrivalEvent * * * __new_finish$_M_node;
  struct tArrivalEvent * * __new_finish$_M_last;
  struct tArrivalEvent * * __new_finish$_M_first;
  struct tArrivalEvent * * __new_finish$_M_cur;
  struct tArrivalEvent * * * SR.6220;
  struct tArrivalEvent * * SR.6219;
  struct tArrivalEvent * * SR.6218;
  struct tArrivalEvent * * SR.6217;
  struct tArrivalEvent * * * __new_start$_M_node;
  struct tArrivalEvent * * __new_start$_M_last;
  struct tArrivalEvent * * __new_start$_M_first;
  struct tArrivalEvent * * __new_start$_M_cur;
  struct _Deque_iterator D.144744;
  struct _Deque_iterator D.144743;
  struct _Deque_iterator D.144742;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.144741;
  struct _Deque_iterator D.144740;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  difference_type __len;
  difference_type __llen;
  struct tArrivalEvent * * __lend;
  difference_type __rlen;
  struct tArrivalEvent * * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.144695;
  struct _Deque_iterator D.144694;
  struct _Deque_iterator D.144693;
  struct _Deque_iterator D.144692;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator D.144663;
  struct _Deque_iterator D.144662;
  struct _Deque_iterator D.144661;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.144660;
  struct _Deque_iterator D.144659;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  struct _Self __tmp;
  struct _Deque_iterator D.144630;
  struct _Deque_iterator D.144629;
  struct _Deque_iterator D.144628;
  struct _Deque_iterator D.144627;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.82317;
  struct _Deque_iterator D.82311;
  struct _Deque_iterator D.82312;
  struct _Deque_iterator D.82313;
  struct _Deque_iterator D.82298;
  struct _Deque_iterator D.82292;
  struct _Deque_iterator D.82293;
  struct _Deque_iterator D.82294;
  struct _Deque_iterator D.82280;
  struct _Deque_iterator D.82281;
  struct _Deque_iterator D.82282;
  struct _Self D.82277;
  struct _Deque_iterator D.82270;
  struct _Deque_iterator D.82262;
  struct _Deque_iterator D.82263;
  struct _Deque_iterator D.82266;
  struct _Self D.82246;
  struct _Deque_iterator D.82242;
  struct _Deque_iterator D.82243;
  struct _Deque_iterator D.82244;
  struct _Deque_iterator D.82230;
  struct _Deque_iterator D.82231;
  struct _Deque_iterator D.82232;
  struct _Self D.82222;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.335_10;
  struct tArrivalEvent * * * const prephitmp_13;
  struct tArrivalEvent * * * const prephitmp_20;
  struct tArrivalEvent * * _27;
  struct tArrivalEvent * * _28;
  struct tArrivalEvent * * _29;
  long int _38;
  struct tArrivalEvent * * _39;
  struct tArrivalEvent * * _42;
  struct tArrivalEvent * * _48;
  struct iterator * _56;
  struct tArrivalEvent * * _57;
  long int _62;
  struct tArrivalEvent * * _63;
  struct tArrivalEvent * * _69;
  struct tArrivalEvent * * _75;
  struct tArrivalEvent * * * _80;
  long int __len.339_81;
  struct tArrivalEvent * * _82;
  struct tArrivalEvent * * _88;
  long int _93;
  long int _94;
  struct tArrivalEvent * * _95;
  long int _96;
  struct tArrivalEvent * * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  struct tArrivalEvent * * * _104;
  long int _105;
  struct tArrivalEvent * * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  struct tArrivalEvent * * _112;
  long int _113;
  struct tArrivalEvent * * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  struct tArrivalEvent * * _119;
  long int _120;
  struct tArrivalEvent * * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  struct tArrivalEvent * * _126;
  struct tArrivalEvent * * _127;
  struct tArrivalEvent * * _128;
  struct tArrivalEvent * * * _129;
  struct tArrivalEvent * * const pretmp_130;
  struct tArrivalEvent * * const prephitmp_131;
  struct tArrivalEvent * * * const pretmp_132;
  struct tArrivalEvent * * _133;
  struct tArrivalEvent * * _134;
  struct tArrivalEvent * * * _135;
  struct tArrivalEvent * * _136;
  struct tArrivalEvent * * _137;
  struct tArrivalEvent * * * _138;
  struct tArrivalEvent * * const pretmp_140;
  struct tArrivalEvent * * const prephitmp_141;
  struct tArrivalEvent * * _145;
  struct tArrivalEvent * * _146;
  struct tArrivalEvent * * * _147;
  struct tArrivalEvent * * _148;
  struct tArrivalEvent * * _149;
  struct tArrivalEvent * * * _150;
  struct tArrivalEvent * * pretmp_151;
  struct tArrivalEvent * * _154;
  struct tArrivalEvent * * _155;
  struct tArrivalEvent * * * _156;
  struct tArrivalEvent * * _157;
  struct tArrivalEvent * * _161;
  struct tArrivalEvent * * * _162;
  struct tArrivalEvent * * _166;
  struct tArrivalEvent * * _167;
  struct tArrivalEvent * * * _168;
  struct tArrivalEvent * * _169;
  struct tArrivalEvent * * _170;
  struct tArrivalEvent * * * _171;
  struct tArrivalEvent * * _172;
  struct tArrivalEvent * * _173;
  struct tArrivalEvent * * _174;
  struct tArrivalEvent * * * _175;
  struct tArrivalEvent * * _176;
  struct tArrivalEvent * * _177;
  struct tArrivalEvent * * * _178;
  struct tArrivalEvent * * _179;
  struct tArrivalEvent * * _180;
  struct tArrivalEvent * * * _181;
  struct tArrivalEvent * * prephitmp_269;
  struct tArrivalEvent * * const pretmp_271;
  struct _Self & _272;
  struct tArrivalEvent * * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.322_284;
  long int _289;
  struct _Self & _290;
  struct tArrivalEvent * * const prephitmp_295;
  struct tArrivalEvent * * prephitmp_301;
  struct tArrivalEvent * * prephitmp_302;
  struct tArrivalEvent * * pretmp_303;
  struct tArrivalEvent * * pretmp_304;
  struct tArrivalEvent * * prephitmp_306;
  struct tArrivalEvent * * _307;
  struct tArrivalEvent * * _308;
  struct tArrivalEvent * * * _309;
  struct _Self & _310;
  struct tArrivalEvent * * _311;
  struct tArrivalEvent * * _312;
  struct tArrivalEvent * * _313;
  struct tArrivalEvent * * * _314;
  struct tArrivalEvent * * _326;
  struct tArrivalEvent * * _327;
  struct tArrivalEvent * * _328;
  struct tArrivalEvent * * * _329;
  long int _333;
  struct _Self & _334;
  long int _339;
  long int _342;
  long int _343;
  long int _344;
  long unsigned int _346;
  long int __n.333_347;
  struct _Self & _352;
  long int _369;
  long int _371;
  long int _372;
  long int _373;
  long int _374;
  long int _375;
  long int _377;
  long int _379;
  long int _380;
  long int _381;
  long int _382;
  long int _384;
  long int _386;
  long int _387;
  long int _388;
  struct tArrivalEvent * * const prephitmp_390;
  long int _392;
  long int _394;
  long int _395;
  long int _398;
  long int _400;
  long int _401;
  struct tArrivalEvent * * * _403;
  struct tArrivalEvent * * _404;
  struct tArrivalEvent * * * _406;
  struct tArrivalEvent * * _407;
  struct tArrivalEvent * * const pretmp_409;
  struct tArrivalEvent * * const prephitmp_410;
  struct tArrivalEvent * * * const prephitmp_411;
  long unsigned int __clen.348_415;
  long unsigned int _416;
  sizetype _417;
  struct tArrivalEvent * * _419;
  long int _421;
  struct tArrivalEvent * * _431;
  struct tArrivalEvent * * _432;
  struct tArrivalEvent * * _433;
  struct tArrivalEvent * * * _434;
  struct tArrivalEvent * * * const pretmp_445;
  struct tArrivalEvent * * const prephitmp_446;
  struct tArrivalEvent * * const prephitmp_494;
  struct tArrivalEvent * * const pretmp_495;
  struct tArrivalEvent * * const pretmp_557;
  struct tArrivalEvent * * * const pretmp_558;
  struct tArrivalEvent * * const prephitmp_559;
  struct tArrivalEvent * * const pretmp_560;
  struct tArrivalEvent * * pretmp_570;
  long int _575;
  struct tArrivalEvent * * const pretmp_576;

  <bb 2>:
  # DEBUG D#2692 => &this_4(D)->D.60628._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#2692
  # DEBUG __size => 8
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 64;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 8;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 8;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#392 => &MEM[(const struct deque *)this_4(D)].D.60628._M_impl._M_start
  # DEBUG D#393 => &MEM[(const struct deque *)this_4(D)].D.60628._M_impl._M_finish
  # DEBUG __x => D#393
  # DEBUG __y => D#392
  # DEBUG __size => 8
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 64;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 8;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.335_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.335_10)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.60628._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 8;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_271 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_140 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_130 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_132 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;

  <bb 5>:
  # prephitmp_131 = PHI <_121(3), pretmp_271(4)>
  # prephitmp_295 = PHI <_278(3), pretmp_140(4)>
  # prephitmp_141 = PHI <_119(3), pretmp_130(4)>
  # prephitmp_13 = PHI <_106(3), pretmp_132(4)>
  __n.322_284 = (long int) __n_11(D);
  # DEBUG D#3503 => &this_4(D)->D.60628._M_impl._M_start
  # DEBUG this => D#3503
  # DEBUG __n => __n.322_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#3503
  __tmp._M_cur = prephitmp_131;
  __tmp._M_first = prephitmp_295;
  __tmp._M_last = prephitmp_141;
  __tmp._M_node = prephitmp_13;
  # DEBUG this => &__tmp
  # DEBUG __n => __n.322_284
  _289 = -__n.322_284;
  _290 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator+= (&__tmp, _289);
  # DEBUG this => &__new_start
  # DEBUG __x => _290
  __new_start$_M_cur_291 = MEM[(const struct iterator &)_290]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_291
  __new_start$_M_first_292 = MEM[(const struct iterator &)_290]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_292
  __new_start$_M_last_293 = MEM[(const struct iterator &)_290]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_293
  __new_start$_M_node_294 = MEM[(const struct iterator &)_290]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_294
  __tmp ={v} {CLOBBER};
  # DEBUG D#2693 => &this_4(D)->D.60628._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#2693
  _126 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  # DEBUG __old_start$_M_cur => _126
  _127 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  # DEBUG __old_start$_M_first => _127
  _128 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  # DEBUG __old_start$_M_last => _128
  _129 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __old_start$_M_node => _129
  # DEBUG D#3504 => &this_4(D)->D.60628._M_impl._M_start
  # DEBUG this => D#3504
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#3504
  __tmp._M_cur = _126;
  __tmp._M_first = _127;
  __tmp._M_last = _128;
  __tmp._M_node = _129;
  _272 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator+= (&__tmp, _125);
  # DEBUG this => &D.82222
  # DEBUG __x => _272
  SR.6217_273 = MEM[(const struct iterator &)_272]._M_cur;
  SR.6218_274 = MEM[(const struct iterator &)_272]._M_first;
  SR.6219_275 = MEM[(const struct iterator &)_272]._M_last;
  SR.6220_276 = MEM[(const struct iterator &)_272]._M_node;
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.6217_273;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.6218_274;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.6219_275;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.6220_276;
  if (_125 >= __n.322_284)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => D#3504
  # DEBUG __n => __n.322_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#3504
  _29 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp._M_cur = _29;
  _307 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  __tmp._M_first = _307;
  _308 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  __tmp._M_last = _308;
  _309 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  __tmp._M_node = _309;
  _310 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator+= (&__tmp, __n.322_284);
  # DEBUG this => &__start_n
  # DEBUG __x => _310
  _311 = MEM[(const struct iterator &)_310]._M_cur;
  _312 = MEM[(const struct iterator &)_310]._M_first;
  _313 = MEM[(const struct iterator &)_310]._M_last;
  _314 = MEM[(const struct iterator &)_310]._M_node;
  __tmp ={v} {CLOBBER};
  # DEBUG D#2694 => &this_4(D)->D.60628
  # DEBUG this => D#2694
  # DEBUG this => &D.82232
  # DEBUG __x => &__new_start
  D.82232._M_cur = __new_start$_M_cur_291;
  D.82232._M_first = __new_start$_M_first_292;
  D.82232._M_last = __new_start$_M_last_293;
  D.82232._M_node = __new_start$_M_node_294;
  # DEBUG this => &D.82231
  # DEBUG __x => &__start_n
  D.82231._M_cur = _311;
  D.82231._M_first = _312;
  D.82231._M_last = _313;
  D.82231._M_node = _314;
  # DEBUG D#2695 => &this_4(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.82230
  # DEBUG __x => D#2695
  _27 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  D.82230._M_cur = _27;
  _136 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  D.82230._M_first = _136;
  _137 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  D.82230._M_last = _137;
  _138 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  D.82230._M_node = _138;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter13tArrivalEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.637 (&D.82230, &D.82231, &D.82232);
  D.82230 ={v} {CLOBBER};
  D.82231 ={v} {CLOBBER};
  D.82232 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_291;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_292;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_293;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_294;
  # DEBUG this => &D.82244
  # DEBUG __x => &__old_start
  # DEBUG this => &D.82243
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.82242
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.82242
  # DEBUG __last => &D.82243
  # DEBUG __result => &D.82244
  # DEBUG this => &D.144630
  # DEBUG __x => &D.82244
  D.144630._M_cur = _126;
  D.144630._M_first = _127;
  D.144630._M_last = _128;
  D.144630._M_node = _129;
  # DEBUG this => &D.144629
  # DEBUG __x => &D.82243
  D.144629._M_cur = _28;
  D.144629._M_first = _133;
  D.144629._M_last = _134;
  D.144629._M_node = _135;
  # DEBUG this => &D.144628
  # DEBUG __x => &D.82242
  D.144628._M_cur = _311;
  D.144628._M_first = _312;
  D.144628._M_last = _313;
  D.144628._M_node = _314;
  D.144627 = std::copy<EventRouter::tArrivalEvent*> (D.144628, D.144629, &D.144630); [return slot optimization]
  D.144628 ={v} {CLOBBER};
  D.144629 ={v} {CLOBBER};
  D.144630 ={v} {CLOBBER};
  D.82242 ={v} {CLOBBER};
  D.82243 ={v} {CLOBBER};
  D.82244 ={v} {CLOBBER};
  D.82246 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator- (__pos_6(D), __n.322_284); [return slot optimization]
  std::copy<EventRouter::tArrivalEvent*> (__first, __last, &D.82246);
  D.82246 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 8>;

  <bb 7>:
  __mid = __first;
  _38 = __n.322_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#2408 => &__mid
  # DEBUG D.128275 => D#2408
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>::operator+= (&__mid, _38);
  # DEBUG D#2696 => &this_4(D)->D.60628
  # DEBUG this => D#2696
  # DEBUG D#3506 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.82266
  # DEBUG __x => &__new_start
  # DEBUG this => &D.82263
  # DEBUG __x => __pos_6(D)
  _42 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _148 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _149 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _150 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG D#2697 => &this_4(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.82262
  # DEBUG __x => D#2697
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _145 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.82262
  # DEBUG __last1 => &D.82263
  __first2$_M_cur_527 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first2$_M_cur => __first2$_M_cur_527
  __first2$_M_first_52 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first2$_M_first => __first2$_M_first_52
  __first2$_M_last_47 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first2$_M_last => __first2$_M_last_47
  __first2$_M_node_513 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first2$_M_node => __first2$_M_node_513
  __last2$_M_cur_512 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __last2$_M_cur => __last2$_M_cur_512
  __last2$_M_first_26 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __last2$_M_first => __last2$_M_first_26
  __last2$_M_last_17 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __last2$_M_last => __last2$_M_last_17
  __last2$_M_node_16 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __last2$_M_node => __last2$_M_node_16
  # DEBUG __result => &D.82266
  # DEBUG __alloc => D#3506
  # DEBUG this => &D.144663
  # DEBUG __x => &D.82266
  D.144663._M_cur = __new_start$_M_cur_291;
  D.144663._M_first = __new_start$_M_first_292;
  D.144663._M_last = __new_start$_M_last_293;
  D.144663._M_node = __new_start$_M_node_294;
  # DEBUG this => &D.144662
  # DEBUG __x => &D.82263
  D.144662._M_cur = _42;
  D.144662._M_first = _148;
  D.144662._M_last = _149;
  D.144662._M_node = _150;
  # DEBUG this => &D.144661
  # DEBUG __x => &D.82262
  D.144661._M_cur = _48;
  D.144661._M_first = _145;
  D.144661._M_last = _146;
  D.144661._M_node = _147;
  # DEBUG D#2691 => D#3506
  __mid = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter13tArrivalEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.637 (&D.144661, &D.144662, &D.144663); [return slot optimization]
  D.144661 ={v} {CLOBBER};
  D.144662 ={v} {CLOBBER};
  D.144663 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  _326 = __mid._M_cur;
  _327 = __mid._M_first;
  _328 = __mid._M_last;
  _329 = __mid._M_node;
  # DEBUG D#1846 => D#3506
  MEM[(struct _Deque_iterator *)&__first] = __first2$_M_cur_527;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first2$_M_first_52;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first2$_M_last_47;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first2$_M_node_513;
  MEM[(struct _Deque_iterator *)&__last] = __last2$_M_cur_512;
  MEM[(struct _Deque_iterator *)&__last + 8B] = __last2$_M_first_26;
  MEM[(struct _Deque_iterator *)&__last + 16B] = __last2$_M_last_17;
  MEM[(struct _Deque_iterator *)&__last + 24B] = __last2$_M_node_16;
  # DEBUG __result => NULL
  # DEBUG D.144653 => D#1846
  # DEBUG this => &D.144660
  # DEBUG __x => NULL
  D.144660._M_cur = _326;
  D.144660._M_first = _327;
  D.144660._M_last = _328;
  D.144660._M_node = _329;
  D.144659 = std::uninitialized_copy<std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>, std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**> > (__first, __last, &D.144660); [return slot optimization]
  D.144660 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.82262 ={v} {CLOBBER};
  D.82263 ={v} {CLOBBER};
  D.82266 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_291;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_292;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_293;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_294;
  # DEBUG this => &D.82270
  # DEBUG __x => &__old_start
  D.82270._M_cur = _126;
  D.82270._M_first = _127;
  D.82270._M_last = _128;
  D.82270._M_node = _129;
  std::copy<EventRouter::tArrivalEvent*> (__mid, __last, &D.82270);
  D.82270 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};

  <bb 8>:

  <bb 24>:
  # DEBUG D#3511 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#3511
  # DEBUG D#3512 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#3512
  # DEBUG D#3513 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#3513
  # DEBUG D#3514 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#3514
  return;

  <bb 9>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.60628._M_impl._M_finish._M_last;
  _339 = (long int) _57;
  _342 = _339 - _96;
  _343 = _342 /[ex] 8;
  _344 = _343 + -1;
  __vacancies_345 = (const size_type) _344;
  # DEBUG __vacancies => __vacancies_345
  if (__n_11(D) > __vacancies_345)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _346 = __n_11(D) - __vacancies_345;
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_new_elements_at_back (this_4(D), _346);
  pretmp_560 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_409 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_557 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_558 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;

  <bb 11>:
  # prephitmp_559 = PHI <_95(9), pretmp_560(10)>
  # prephitmp_410 = PHI <_97(9), pretmp_409(10)>
  # prephitmp_390 = PHI <_57(9), pretmp_557(10)>
  # prephitmp_411 = PHI <_80(9), pretmp_558(10)>
  __n.333_347 = (long int) __n_11(D);
  # DEBUG D#3505 => &this_4(D)->D.60628._M_impl._M_finish
  # DEBUG this => D#3505
  # DEBUG __n => __n.333_347
  # DEBUG this => &__tmp
  # DEBUG __x => D#3505
  __tmp._M_cur = prephitmp_559;
  __tmp._M_first = prephitmp_410;
  __tmp._M_last = prephitmp_390;
  __tmp._M_node = prephitmp_411;
  _352 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator+= (&__tmp, __n.333_347);
  # DEBUG this => &__new_finish
  # DEBUG __x => _352
  __new_finish$_M_cur_353 = MEM[(const struct iterator &)_352]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_353
  __new_finish$_M_first_354 = MEM[(const struct iterator &)_352]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_354
  __new_finish$_M_last_355 = MEM[(const struct iterator &)_352]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_355
  __new_finish$_M_node_356 = MEM[(const struct iterator &)_352]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_356
  __tmp ={v} {CLOBBER};
  # DEBUG D#2698 => &this_4(D)->D.60628._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#2698
  _39 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  # DEBUG __old_finish$_M_cur => _39
  _154 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __old_finish$_M_first => _154
  _155 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __old_finish$_M_last => _155
  _156 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __old_finish$_M_node => _156
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#3521 => &this_4(D)->D.60628._M_impl._M_finish
  # DEBUG this => D#3521
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#3521
  __tmp._M_cur = _39;
  __tmp._M_first = _154;
  __tmp._M_last = _155;
  __tmp._M_node = _156;
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  _333 = -__elemsafter_55;
  _334 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator+= (&__tmp, _333);
  # DEBUG this => &D.82277
  # DEBUG __x => _334
  SR.6225_335 = MEM[(const struct iterator &)_334]._M_cur;
  SR.6226_336 = MEM[(const struct iterator &)_334]._M_first;
  SR.6227_337 = MEM[(const struct iterator &)_334]._M_last;
  SR.6228_338 = MEM[(const struct iterator &)_334]._M_node;
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.6225_335;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.6226_336;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.6227_337;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.6228_338;
  if (__elemsafter_55 > __n.333_347)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  _56 = &this_4(D)->D.60628._M_impl._M_finish;
  __finish_n = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator- (_56, __n.333_347); [return slot optimization]
  # DEBUG D#2699 => &this_4(D)->D.60628
  # DEBUG this => D#2699
  # DEBUG D#2700 => &this_4(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.82282
  # DEBUG __x => D#2700
  _63 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  D.82282._M_cur = _63;
  _169 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  D.82282._M_first = _169;
  _170 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  D.82282._M_last = _170;
  _171 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  D.82282._M_node = _171;
  # DEBUG D#2701 => &this_4(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.82281
  # DEBUG __x => D#2701
  D.82281._M_cur = _63;
  D.82281._M_first = _169;
  D.82281._M_last = _170;
  D.82281._M_node = _171;
  # DEBUG this => &D.82280
  # DEBUG __x => &__finish_n
  _69 = __finish_n._M_cur;
  D.82280._M_cur = _69;
  _166 = __finish_n._M_first;
  D.82280._M_first = _166;
  _167 = __finish_n._M_last;
  D.82280._M_last = _167;
  _168 = __finish_n._M_node;
  D.82280._M_node = _168;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter13tArrivalEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.637 (&D.82280, &D.82281, &D.82282);
  D.82280 ={v} {CLOBBER};
  D.82281 ={v} {CLOBBER};
  D.82282 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_353;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_354;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_355;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_356;
  # DEBUG this => &D.82294
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.82293
  # DEBUG __x => &__finish_n
  SR.6237_70 = __finish_n._M_cur;
  SR.6238_163 = __finish_n._M_first;
  SR.6239_164 = __finish_n._M_last;
  SR.6240_165 = __finish_n._M_node;
  # DEBUG this => &D.82292
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.82292
  # DEBUG __last => &D.82293
  # DEBUG __result => &D.82294
  # DEBUG this => &D.144695
  # DEBUG __x => &D.82294
  D.144695._M_cur = _39;
  D.144695._M_first = _154;
  D.144695._M_last = _155;
  D.144695._M_node = _156;
  # DEBUG this => &D.144694
  # DEBUG __x => &D.82293
  # DEBUG this => &D.144693
  # DEBUG __x => &D.82292
  MEM[(struct _Deque_iterator *)&__last] = SR.6237_70;
  MEM[(struct _Deque_iterator *)&__last + 8B] = SR.6238_163;
  MEM[(struct _Deque_iterator *)&__last + 16B] = SR.6239_164;
  MEM[(struct _Deque_iterator *)&__last + 24B] = SR.6240_165;
  # DEBUG __result => &D.144695
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _369 = (long int) SR.6240_165;
  _371 = (long int) _162;
  _372 = _369 - _371;
  _373 = _372 /[ex] 8;
  _374 = _373 + -1;
  _375 = _374 * 64;
  _377 = (long int) SR.6237_70;
  _379 = (long int) SR.6238_163;
  _380 = _377 - _379;
  _381 = _380 /[ex] 8;
  _382 = _375 + _381;
  _384 = (long int) _161;
  _386 = (long int) _75;
  _387 = _384 - _386;
  _388 = _387 /[ex] 8;
  __len_389 = _382 + _388;
  # DEBUG __len => __len_389
  if (__len_389 <= 0)
    goto <bb 21>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # __len.339_81 = PHI <__len_389(13), __len_422(19)>
  # prephitmp_269 = PHI <SR.6237_70(13), pretmp_570(19)>
  # prephitmp_301 = PHI <SR.6238_163(13), pretmp_151(19)>
  # prephitmp_306 = PHI <_39(13), pretmp_303(19)>
  # prephitmp_302 = PHI <_154(13), pretmp_304(19)>
  # DEBUG D#3520 => __last._M_cur
  _392 = (long int) prephitmp_269;
  _394 = (long int) prephitmp_301;
  _395 = _392 - _394;
  __llen_396 = _395 /[ex] 8;
  # DEBUG __llen => __llen_396
  # DEBUG __lend => D#3520
  # DEBUG D#3519 => D.144695._M_cur
  _398 = (long int) prephitmp_306;
  _400 = (long int) prephitmp_302;
  _401 = _398 - _400;
  __rlen_402 = _401 /[ex] 8;
  # DEBUG __rlen => __rlen_402
  # DEBUG __rend => D#3519
  if (__llen_396 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG __size => 8
  # DEBUG __llen => 64
  _403 = __last._M_node;
  _404 = MEM[(struct tArrivalEvent * * *)_403 + -8B];
  __lend_405 = _404 + 512;
  # DEBUG __lend => __lend_405

  <bb 16>:
  # __lend_418 = PHI <prephitmp_269(14), __lend_405(15)>
  # __llen_571 = PHI <__llen_396(14), 64(15)>
  # DEBUG __llen => __llen_571
  # DEBUG __lend => __lend_418
  if (__rlen_402 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG __size => 8
  # DEBUG __rlen => 64
  _406 = D.144695._M_node;
  _407 = MEM[(struct tArrivalEvent * * *)_406 + -8B];
  __rend_408 = _407 + 512;
  # DEBUG __rend => __rend_408

  <bb 18>:
  # __rend_420 = PHI <prephitmp_306(16), __rend_408(17)>
  # __rlen_566 = PHI <__rlen_402(16), 64(17)>
  # DEBUG __rlen => __rlen_566
  # DEBUG __rend => __rend_420
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _575 = MIN_EXPR <__len.339_81, __llen_571>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_413 = MIN_EXPR <__rlen_566, _575>;
  # DEBUG __clen => D#3502
  __clen.348_415 = (long unsigned int) __clen_413;
  _416 = __clen.348_415 * 8;
  _417 = -_416;
  _419 = __lend_418 + _417;
  std::copy_backward<EventRouter::tTransportEvent**, EventRouter::tTransportEvent**> (_419, __lend_418, __rend_420);
  # DEBUG this => &__last
  # DEBUG __n => D#3502
  _421 = -__clen_413;
  std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>::operator+= (&__last, _421);
  # DEBUG this => &D.144695
  # DEBUG __n => D#3502
  std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator+= (&D.144695, _421);
  __len_422 = __len.339_81 - __clen_413;
  # DEBUG __len => __len_422
  # DEBUG D#3508 => {CLOBBER}
  # DEBUG __llen => D#3508
  # DEBUG D#3509 => {CLOBBER}
  # DEBUG __rlen => D#3509
  if (__len_422 <= 0)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  pretmp_570 = __last._M_cur;
  pretmp_151 = __last._M_first;
  pretmp_303 = D.144695._M_cur;
  pretmp_304 = D.144695._M_first;
  goto <bb 14>;

  <bb 20>:

  <bb 23>:
  pretmp_576 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_495 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_445 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 21>:
  # prephitmp_494 = PHI <pretmp_576(23), _75(12)>
  # prephitmp_446 = PHI <pretmp_495(23), _161(12)>
  # prephitmp_20 = PHI <pretmp_445(23), _162(12)>
  # DEBUG this => &D.144692
  # DEBUG __x => &D.144695
  # DEBUG D#3510 => {CLOBBER}
  # DEBUG __len => D#3510
  D.144693 ={v} {CLOBBER};
  D.144695 ={v} {CLOBBER};
  D.82292 ={v} {CLOBBER};
  D.82293 ={v} {CLOBBER};
  D.82294 ={v} {CLOBBER};
  # DEBUG this => &D.82298
  # DEBUG __x => __pos_6(D)
  D.82298._M_cur = prephitmp_494;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.82298._M_first = _157;
  D.82298._M_last = prephitmp_446;
  D.82298._M_node = prephitmp_20;
  std::copy<EventRouter::tArrivalEvent*> (__first, __last, &D.82298);
  D.82298 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 8>;

  <bb 22>:
  __mid = __first;
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#2408 => &__mid
  # DEBUG D.128275 => D#2408
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>::operator+= (&__mid, __elemsafter_55);
  # DEBUG D#2702 => &this_4(D)->D.60628
  # DEBUG this => D#2702
  # DEBUG D#3507 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#2703 => &this_4(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.82313
  # DEBUG __x => D#2703
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#2704 => &this_4(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.82312
  # DEBUG __x => D#2704
  # DEBUG this => &D.82311
  # DEBUG __x => __pos_6(D)
  _88 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _176 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _177 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _178 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  __first1$_M_cur_218 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first1$_M_cur => __first1$_M_cur_218
  __first1$_M_first_473 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __first1$_M_first => __first1$_M_first_473
  __first1$_M_last_474 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first1$_M_last => __first1$_M_last_474
  __first1$_M_node_475 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first1$_M_node => __first1$_M_node_475
  __last1$_M_cur_476 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last1$_M_cur_476
  __last1$_M_first_194 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last1$_M_first_194
  __last1$_M_last_195 = MEM[(struct _Deque_iterator *)&__last + 16B];
  # DEBUG __last1$_M_last => __last1$_M_last_195
  __last1$_M_node_196 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last1$_M_node_196
  # DEBUG __first2 => &D.82311
  # DEBUG __last2 => &D.82312
  # DEBUG __result => &D.82313
  # DEBUG __alloc => D#3507
  # DEBUG this => NULL
  # DEBUG __x => &D.82313
  # DEBUG D#1846 => D#3507
  MEM[(struct _Deque_iterator *)&__first] = __first1$_M_cur_218;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first1$_M_first_473;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first1$_M_last_474;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first1$_M_node_475;
  MEM[(struct _Deque_iterator *)&__last] = __last1$_M_cur_476;
  MEM[(struct _Deque_iterator *)&__last + 8B] = __last1$_M_first_194;
  MEM[(struct _Deque_iterator *)&__last + 16B] = __last1$_M_last_195;
  MEM[(struct _Deque_iterator *)&__last + 24B] = __last1$_M_node_196;
  # DEBUG __result => NULL
  # DEBUG D.144728 => D#1846
  # DEBUG this => &D.144741
  # DEBUG __x => NULL
  D.144741._M_cur = _82;
  D.144741._M_first = _179;
  D.144741._M_last = _180;
  D.144741._M_node = _181;
  __mid = std::uninitialized_copy<std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>, std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**> > (__first, __last, &D.144741); [return slot optimization]
  D.144741 ={v} {CLOBBER};
  # DEBUG this => &D.144744
  # DEBUG __x => &__mid
  _431 = __mid._M_cur;
  D.144744._M_cur = _431;
  _432 = __mid._M_first;
  D.144744._M_first = _432;
  _433 = __mid._M_last;
  D.144744._M_last = _433;
  _434 = __mid._M_node;
  D.144744._M_node = _434;
  # DEBUG this => &D.144743
  # DEBUG __x => &D.82312
  D.144743._M_cur = _82;
  D.144743._M_first = _179;
  D.144743._M_last = _180;
  D.144743._M_node = _181;
  # DEBUG this => &D.144742
  # DEBUG __x => &D.82311
  D.144742._M_cur = _88;
  D.144742._M_first = _176;
  D.144742._M_last = _177;
  D.144742._M_node = _178;
  # DEBUG D#2691 => D#3507
  D.144740 = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIPN11EventRouter13tArrivalEventERS3_PS3_ES6_SaIS3_EET0_T_S9_S8_RT1_.isra.637 (&D.144742, &D.144743, &D.144744); [return slot optimization]
  D.144742 ={v} {CLOBBER};
  D.144743 ={v} {CLOBBER};
  D.144744 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.82311 ={v} {CLOBBER};
  D.82312 ={v} {CLOBBER};
  D.82313 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_353;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_354;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_355;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_356;
  # DEBUG this => &D.82317
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.82317._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.82317._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.82317._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.82317._M_node = _175;
  std::copy<EventRouter::tArrivalEvent*> (__first, __mid, &D.82317);
  D.82317 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 8>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>] (_ZNSt5dequeIPN11EventRouter13tArrivalEventESaIS2_EEaSERKS4_, funcdef_no=4533, decl_uid=60207, cgraph_uid=2882, symbol_order=2883)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = EventRouter::tArrivalEvent*; _Alloc = std::allocator<EventRouter::tArrivalEvent*>] (struct deque * const this, const struct deque & __x)
{
  struct tArrivalEvent * * * __new_finish$_M_node;
  struct tArrivalEvent * * __new_finish$_M_last;
  struct tArrivalEvent * * __new_finish$_M_first;
  struct tArrivalEvent * * __new_finish$_M_cur;
  struct tArrivalEvent * * * __new_start$_M_node;
  struct tArrivalEvent * * __new_start$_M_last;
  struct tArrivalEvent * * __new_start$_M_first;
  struct tArrivalEvent * * __new_start$_M_cur;
  struct tArrivalEvent * * * __last$_M_node;
  struct tArrivalEvent * * __last$_M_last;
  struct tArrivalEvent * * __last$_M_first;
  struct tArrivalEvent * * __last$_M_cur;
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_first;
  struct tArrivalEvent * * __first$_M_cur;
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_first;
  struct tArrivalEvent * * __first$_M_cur;
  struct tArrivalEvent * * * __last$_M_node;
  struct tArrivalEvent * * __last$_M_last;
  struct tArrivalEvent * * __last$_M_first;
  struct tArrivalEvent * * __last$_M_cur;
  struct tArrivalEvent * * * __last$_M_node;
  struct tArrivalEvent * * __last$_M_last;
  struct tArrivalEvent * * __last$_M_first;
  struct tArrivalEvent * * __last$_M_cur;
  struct tArrivalEvent * * * __first$_M_node;
  struct tArrivalEvent * * __first$_M_last;
  struct tArrivalEvent * * __first$_M_first;
  struct tArrivalEvent * * __first$_M_cur;
  struct tArrivalEvent * * * SR.6269;
  struct tArrivalEvent * * SR.6268;
  struct tArrivalEvent * * SR.6267;
  struct tArrivalEvent * * SR.6266;
  struct tArrivalEvent * * * SR.6265;
  struct tArrivalEvent * * SR.6264;
  struct tArrivalEvent * * SR.6263;
  struct tArrivalEvent * * SR.6262;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.144909;
  struct _Deque_iterator D.144908;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.144889;
  struct _Deque_iterator D.144888;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.144881;
  struct _Deque_iterator D.144880;
  struct iterator D.144879;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.144867;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.144859;
  struct iterator D.144858;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct tArrivalEvent * * * __nstart;
  struct const_iterator __mid;
  struct iterator D.79501;
  struct _Deque_iterator D.91061;
  struct _Deque_iterator D.91060;
  struct _Deque_iterator D.79493;
  struct const_iterator D.79489;
  struct _Deque_iterator D.91057;
  struct _Deque_iterator D.91056;
  struct _Deque_iterator D.79486;
  struct _Deque_iterator D.79487;
  long int _5;
  struct tArrivalEvent * * * _6;
  struct tArrivalEvent * * _9;
  struct tArrivalEvent * * _12;
  struct tArrivalEvent * * _13;
  struct _Self & _14;
  struct tArrivalEvent * * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  struct tArrivalEvent * * _28;
  long int _29;
  struct tArrivalEvent * * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  struct tArrivalEvent * * * _43;
  long int _44;
  struct tArrivalEvent * * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  struct tArrivalEvent * * _51;
  long int _52;
  struct tArrivalEvent * * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  struct tArrivalEvent * * _58;
  long int _59;
  struct tArrivalEvent * * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  struct tArrivalEvent * * _66;
  struct tArrivalEvent * * _67;
  struct tArrivalEvent * * _68;
  struct tArrivalEvent * * _70;
  struct tArrivalEvent * * _72;
  struct tArrivalEvent * * _73;
  struct tArrivalEvent * * * _74;
  struct tArrivalEvent * * _75;
  struct tArrivalEvent * * _76;
  struct tArrivalEvent * * * _77;
  struct tArrivalEvent * * _78;
  struct tArrivalEvent * * _79;
  struct tArrivalEvent * * * _80;
  struct tArrivalEvent * * * _114;
  struct tArrivalEvent * * * _115;
  struct tArrivalEvent * * * _116;
  struct tArrivalEvent * * _119;
  long int _129;
  long int _130;
  long int _131;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  long int _138;
  long int _139;
  long int _140;
  long int _141;
  long int _142;
  long int _143;
  difference_type _144;
  struct tArrivalEvent * * _147;
  struct tArrivalEvent * * _153;
  struct tArrivalEvent * * _154;
  struct tArrivalEvent * * _155;
  struct tArrivalEvent * * * _156;
  long int _165;
  struct tArrivalEvent * * _166;
  long int _167;
  long int _168;
  long int _169;
  long unsigned int _171;
  struct tArrivalEvent * * _176;
  struct tArrivalEvent * * * _177;
  long int _178;
  struct _Self & _179;
  long int _189;
  long int _191;
  long int _192;
  long int _193;
  long int _194;
  long unsigned int _196;
  struct tArrivalEvent * * _200;
  struct tArrivalEvent * * * _202;
  struct _Self & _203;
  struct tArrivalEvent * * const prephitmp_242;
  struct tArrivalEvent * * const pretmp_243;
  struct tArrivalEvent * * const prephitmp_251;
  struct tArrivalEvent * * const pretmp_252;
  struct tArrivalEvent * * const prephitmp_265;
  struct tArrivalEvent * * const pretmp_266;
  struct tArrivalEvent * * const prephitmp_267;
  struct tArrivalEvent * * const pretmp_268;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#392 => &MEM[(const struct deque *)this_3(D)].D.60628._M_impl._M_start
  # DEBUG D#393 => &MEM[(const struct deque *)this_3(D)].D.60628._M_impl._M_finish
  # DEBUG __x => D#393
  # DEBUG __y => D#392
  # DEBUG __size => 8
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 64;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 8;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 8;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#392 => &__x_2(D)->D.60628._M_impl._M_start
  # DEBUG D#393 => &__x_2(D)->D.60628._M_impl._M_finish
  # DEBUG __x => D#393
  # DEBUG __y => D#392
  # DEBUG __size => 8
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.6265_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.6265_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 64;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 8;
  _34 = _27 + _33;
  SR.6264_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.6264_35;
  SR.6262_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.6262_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#2711 => &this_3(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.79486
  # DEBUG __x => D#2711
  D.79486._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.79486._M_first = _68;
  D.79486._M_last = _58;
  D.79486._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#227 => &__x_2(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.91056
  # DEBUG __x => D#227
  D.91056._M_cur = _28;
  D.91056._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.91056._M_last = _67;
  D.91056._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#228 => &__x_2(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.91057
  # DEBUG __x => D#228
  D.91057._M_cur = SR.6262_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.91057._M_first = _66;
  D.91057._M_last = SR.6264_35;
  D.91057._M_node = SR.6265_22;
  D.79487 = std::copy<EventRouter::tArrivalEvent*> (D.91057, D.91056, &D.79486); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.79487
  # DEBUG D#1505 => &this_3(D)->D.60628
  # DEBUG this => D#1505
  # DEBUG this => this_3(D)
  # DEBUG D#165 => &this_3(D)->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1512 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.111466 => D#1512
  # DEBUG D#1511 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.111467 => D#1511
  # DEBUG D#1510 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.111468 => D#1510
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.111469 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.79487
  # DEBUG D#1509 => MEM[(const struct iterator &)&D.79487]._M_cur
  # DEBUG D.111470 => D#1509
  # DEBUG D#1508 => MEM[(const struct iterator &)&D.79487]._M_first
  # DEBUG D.111471 => D#1508
  # DEBUG D#1507 => MEM[(const struct iterator &)&D.79487]._M_last
  # DEBUG D.111472 => D#1507
  _115 = MEM[(const struct iterator &)&D.79487]._M_node;
  # DEBUG D.111473 => _115
  # DEBUG D#167 => this_3(D)
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.111455 => D#170
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#1506 => &this_3(D)->D.60628
  # DEBUG this => D#1506
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.60628._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.79487];
  D.79487 ={v} {CLOBBER};
  D.79486 ={v} {CLOBBER};
  goto <bb 17>;

  <bb 6>:

  <bb 7>:
  # __nstart_99 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_99
  _119 = *__nstart_99;
  # DEBUG this => D#1506
  # DEBUG __p => _119
  # DEBUG __size => 8
  # DEBUG D#1158 => &D#1506->_M_impl
  # DEBUG D#1138 => D#1158
  # DEBUG __p => _119
  # DEBUG __a => D#1138
  # DEBUG __n => D#1139
  # DEBUG D#1137 => D#1139
  # DEBUG D#1136 => D#1138
  # DEBUG D#1134 => D#1136
  # DEBUG D#1135 => D#1137
  # DEBUG __p => _119
  # DEBUG this => D#1134
  # DEBUG D.144842 => D#1135
  operator delete (_119);
  __nstart_120 = __nstart_99 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#228 => &__x_2(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.79489
  # DEBUG __x => D#228
  SR.6263_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.79489
  # DEBUG __n => _64
  MEM[(struct _Deque_iterator *)&__tmp] = SR.6262_37;
  MEM[(struct _Deque_iterator *)&__tmp + 8B] = SR.6263_81;
  MEM[(struct _Deque_iterator *)&__tmp + 16B] = SR.6264_35;
  MEM[(struct _Deque_iterator *)&__tmp + 24B] = SR.6265_22;
  _14 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>::operator+= (&__tmp, _64);
  __mid = MEM[(const struct _Deque_iterator &)_14];
  __tmp ={v} {CLOBBER};
  # DEBUG D#2709 => &this_3(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.79493
  # DEBUG __x => D#2709
  _9 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  D.79493._M_cur = _9;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.79493._M_first = _78;
  _79 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  D.79493._M_last = _79;
  _80 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  D.79493._M_node = _80;
  # DEBUG this => __x_2(D)
  # DEBUG D#228 => &__x_2(D)->D.60628._M_impl._M_start
  # DEBUG this => &D.91060
  # DEBUG __x => D#228
  _12 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  D.91060._M_cur = _12;
  _75 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.91060._M_first = _75;
  _76 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  D.91060._M_last = _76;
  _77 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  D.91060._M_node = _77;
  std::copy<EventRouter::tArrivalEvent*> (D.91060, __mid, &D.79493);
  D.79493 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#227 => &__x_2(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.91061
  # DEBUG __x => D#227
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  _73 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#2710 => &this_3(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.79501
  # DEBUG __x => D#2710
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.79501
  __first$_M_cur_225 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first$_M_cur => __first$_M_cur_225
  __first$_M_first_224 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __first$_M_first => __first$_M_first_224
  __first$_M_last_219 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first$_M_last => __first$_M_last_219
  __first$_M_node_218 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => NULL
  # DEBUG __x => &D.79501
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_225
  # DEBUG __first$_M_first => __first$_M_first_224
  # DEBUG __first$_M_last => __first$_M_last_219
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => &D.144858
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.144858
  # DEBUG __first$_M_cur => __first$_M_cur_225
  # DEBUG __first$_M_first => __first$_M_first_224
  # DEBUG __first$_M_last => __first$_M_last_219
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG D#2412 => __first
  # DEBUG D#2412 => __first
  # DEBUG D#2412 => __first
  # DEBUG D#2413 => __last
  # DEBUG D#2413 => __last
  # DEBUG D#2413 => __last
  # DEBUG D.127038 => D#2408
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 8
  _129 = (long int) _74;
  _130 = (long int) __first$_M_node_218;
  _131 = _129 - _130;
  _132 = _131 /[ex] 8;
  _133 = _132 + -1;
  _134 = _133 * 64;
  _135 = (long int) _13;
  _136 = (long int) _72;
  _137 = _135 - _136;
  _138 = _137 /[ex] 8;
  _139 = _134 + _138;
  _140 = (long int) __first$_M_last_219;
  _141 = (long int) __first$_M_cur_225;
  _142 = _140 - _141;
  _143 = _142 /[ex] 8;
  _144 = _139 + _143;
  __n_145 = (const size_type) _144;
  # DEBUG __n => __n_145
  _147 = this_3(D)->D.60628._M_impl._M_start._M_cur;
  if (_17 == _147)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_145
  _165 = (long int) _17;
  _166 = this_3(D)->D.60628._M_impl._M_start._M_first;
  _167 = (long int) _166;
  _168 = _165 - _167;
  _169 = _168 /[ex] 8;
  __vacancies_170 = (const size_type) _169;
  # DEBUG __vacancies => __vacancies_170
  if (__n_145 > __vacancies_170)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _171 = __n_145 - __vacancies_170;
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_new_elements_at_front (this_3(D), _171);
  pretmp_268 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_266 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;

  <bb 12>:
  # prephitmp_267 = PHI <_147(10), pretmp_268(11)>
  # prephitmp_265 = PHI <_166(10), pretmp_266(11)>
  # DEBUG D#3523 => &this_3(D)->D.60628._M_impl._M_start
  # DEBUG this => D#3523
  # DEBUG __n => _144
  # DEBUG this => &__tmp
  # DEBUG __x => D#3523
  __tmp._M_cur = prephitmp_267;
  __tmp._M_first = prephitmp_265;
  _176 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  __tmp._M_last = _176;
  _177 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  __tmp._M_node = _177;
  # DEBUG this => &__tmp
  # DEBUG __n => _144
  _178 = -_144;
  _179 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator+= (&__tmp, _178);
  # DEBUG this => &__new_start
  # DEBUG __x => _179
  __new_start$_M_cur_180 = MEM[(const struct iterator &)_179]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_180
  __new_start$_M_first_181 = MEM[(const struct iterator &)_179]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_181
  __new_start$_M_last_182 = MEM[(const struct iterator &)_179]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_182
  __new_start$_M_node_183 = MEM[(const struct iterator &)_179]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_183
  __tmp ={v} {CLOBBER};
  # DEBUG D#2705 => &this_3(D)->D.60628
  # DEBUG this => D#2705
  # DEBUG this => &D.144881
  # DEBUG __x => &__new_start
  MEM[(struct _Deque_iterator *)&__first] = __first$_M_cur_225;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first$_M_first_224;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first$_M_last_219;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first$_M_node_218;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.144881
  # DEBUG D.144885 => D#1846
  # DEBUG this => &D.144889
  # DEBUG __x => &D.144881
  D.144889._M_cur = __new_start$_M_cur_180;
  D.144889._M_first = __new_start$_M_first_181;
  D.144889._M_last = __new_start$_M_last_182;
  D.144889._M_node = __new_start$_M_node_183;
  D.144888 = std::uninitialized_copy<std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>, std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**> > (__first, __last, &D.144889); [return slot optimization]
  D.144889 ={v} {CLOBBER};
  D.144881 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_180;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_181;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_182;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_183;
  # DEBUG D#3528 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#3528
  # DEBUG D#3529 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#3529
  # DEBUG D#3530 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#3530
  # DEBUG D#3531 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#3531
  goto <bb 16>;

  <bb 13>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_145
  _189 = (long int) _70;
  _191 = (long int) _17;
  _192 = _189 - _191;
  _193 = _192 /[ex] 8;
  _194 = _193 + -1;
  __vacancies_195 = (const size_type) _194;
  # DEBUG __vacancies => __vacancies_195
  if (__n_145 > __vacancies_195)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _196 = __n_145 - __vacancies_195;
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_new_elements_at_back (this_3(D), _196);
  pretmp_252 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;

  <bb 15>:
  # prephitmp_251 = PHI <_17(13), pretmp_252(14)>
  # prephitmp_242 = PHI <_70(13), pretmp_243(14)>
  # DEBUG D#3522 => &this_3(D)->D.60628._M_impl._M_finish
  # DEBUG this => D#3522
  # DEBUG __n => _144
  # DEBUG this => &__tmp
  # DEBUG __x => D#3522
  __tmp._M_cur = prephitmp_251;
  _200 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  __tmp._M_first = _200;
  __tmp._M_last = prephitmp_242;
  _202 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  __tmp._M_node = _202;
  _203 = std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**>::operator+= (&__tmp, _144);
  # DEBUG this => &__new_finish
  # DEBUG __x => _203
  __new_finish$_M_cur_204 = MEM[(const struct iterator &)_203]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_204
  __new_finish$_M_first_205 = MEM[(const struct iterator &)_203]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_205
  __new_finish$_M_last_206 = MEM[(const struct iterator &)_203]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_206
  __new_finish$_M_node_207 = MEM[(const struct iterator &)_203]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_207
  __tmp ={v} {CLOBBER};
  # DEBUG D#2706 => &this_3(D)->D.60628
  # DEBUG this => D#2706
  # DEBUG D#2707 => &this_3(D)->D.60628._M_impl._M_finish
  # DEBUG this => &D.144880
  # DEBUG __x => D#2707
  _153 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  _154 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  _155 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  _156 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  MEM[(struct _Deque_iterator *)&__first] = __first$_M_cur_225;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first$_M_first_224;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first$_M_last_219;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first$_M_node_218;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.144880
  # DEBUG D.144905 => D#1846
  # DEBUG this => &D.144909
  # DEBUG __x => &D.144880
  D.144909._M_cur = _153;
  D.144909._M_first = _154;
  D.144909._M_last = _155;
  D.144909._M_node = _156;
  D.144908 = std::uninitialized_copy<std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent* const&, EventRouter::tArrivalEvent* const*>, std::_Deque_iterator<EventRouter::tArrivalEvent*, EventRouter::tArrivalEvent*&, EventRouter::tArrivalEvent**> > (__first, __last, &D.144909); [return slot optimization]
  D.144909 ={v} {CLOBBER};
  D.144880 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_204;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_205;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_206;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_207;
  # DEBUG D#3524 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#3524
  # DEBUG D#3525 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#3525
  # DEBUG D#3526 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#3526
  # DEBUG D#3527 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#3527

  <bb 16>:
  D.144858 ={v} {CLOBBER};
  D.79501 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};

  <bb 17>:
  return this_3(D);

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<EventRouter::tArrivalEvent*>; _Alloc = std::allocator<std::queue<EventRouter::tArrivalEvent*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<EventRouter::tArrivalEvent*>*, std::vector<std::queue<EventRouter::tArrivalEvent*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<EventRouter::tArrivalEvent*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<EventRouter::tArrivalEvent*>] (_ZNSt6vectorISt5queueIPN11EventRouter13tArrivalEventESt5dequeIS3_SaIS3_EEESaIS7_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS7_S9_EEmRKS7_, funcdef_no=3361, decl_uid=52954, cgraph_uid=1710, symbol_order=1711)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<EventRouter::tArrivalEvent*>; _Alloc = std::allocator<std::queue<EventRouter::tArrivalEvent*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<EventRouter::tArrivalEvent*>*, std::vector<std::queue<EventRouter::tArrivalEvent*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<EventRouter::tArrivalEvent*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<EventRouter::tArrivalEvent*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.145002;
  const size_type __len;
  size_type D.145001;
  size_type __n;
  struct queue * D.144992;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  bool _18;
  struct queue * _20;
  long int __last.302_21;
  struct queue * const _24;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct queue * _32;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _38;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  const struct deque * _52;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _62;
  struct queue * _63;
  struct queue * _67;
  long unsigned int _70;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  struct queue * _85;
  struct deque * _87;
  struct queue * _94;
  struct _Deque_base * _95;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  struct queue * prephitmp_120;
  long unsigned int pretmp_134;
  long unsigned int prephitmp_135;
  struct queue * _137;
  long unsigned int _139;
  bool _140;
  long int _141;
  long int _142;
  long int _143;
  long unsigned int _145;
  struct queue * pretmp_152;
  long unsigned int prephitmp_153;
  long int _163;
  long int _164;
  difference_type _165;
  difference_type _168;
  long int _172;
  long int _173;
  bool _174;
  long int _177;
  long int _183;

  <bb 2>:
  # DEBUG D#3533 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3533
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 47>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.53031._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.53031._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 29>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.130775 => __x_29(D)
  _52 = &MEM[(const struct queue &)__x_29(D)].c;
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::deque (&__x_copy.c, _52);
  # DEBUG this => this_9(D)
  # DEBUG D#229 => &this_9(D)->D.53031._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#229
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.73779
  # DEBUG __rhs => &__position
  # DEBUG this => &D.73779
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#2716 => &this_9(D)->D.53031
  # DEBUG this => D#2716
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#1852
  # DEBUG D#1851 => D#1852
  # DEBUG D#1850 => D#1851
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.130788 => D#1850
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<EventRouter::tArrivalEvent*>*, std::queue<EventRouter::tArrivalEvent*>*> (__last_61, __old_finish_26, __old_finish_26);

  <bb 6>:
  _62 = this_9(D)->D.53031._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.53031._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3533
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3533
  # DEBUG __it => D#3533
  # DEBUG __first => D#3533
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3533
  # DEBUG __it => D#3533
  # DEBUG __first => D#3533
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#3533
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.302_21 = (long int) __last_61;
  _73 = __last.302_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3533
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3533
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_171 = PHI <__old_finish_26(8), __old_finish_58(12)>
  # __last_161 = PHI <__last_61(8), __last_66(12)>
  # __n_166 = PHI <__n_72(8), __n_81(12)>
  # DEBUG __n => __n_166
  # DEBUG __result => __old_finish_171
  # DEBUG __last => __last_161
  __last_66 = __last_161 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_171 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.130818 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::operator= (_80, _56);
  goto <bb 11>;

<L20>:
  goto <bb 49> (<L10>);

  <bb 11>:
  __n_81 = __n_166 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#1231 => &__x_copy.c
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.60628);
  __x_copy ={v} {CLOBBER};
  goto <bb 47>;

  <bb 14>:

  <bb 15>:
  # __position_157 = PHI <__position_23(14), __position_84(18)>
  # DEBUG __first => __position_157
  # DEBUG this => __position_157
  # DEBUG D.130829 => &__x_copy
  _83 = &__position_157->c;
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::operator= (_83, &__x_copy.c);
  goto <bb 17>;

<L21>:
  goto <bb 49> (<L10>);

  <bb 17>:
  __position_84 = __position_157 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#2717 => &this_9(D)->D.53031
  # DEBUG this => D#2717
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.130838 => D#1855
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _85 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<EventRouter::tArrivalEvent*>*, long unsigned int, std::queue<EventRouter::tArrivalEvent*> > (__old_finish_26, _70, &__x_copy);
  goto <bb 21>;

<L22>:
  goto <bb 49> (<L10>);

  <bb 21>:
  this_9(D)->D.53031._M_impl._M_finish = _85;
  # DEBUG D#2718 => &this_9(D)->D.53031
  # DEBUG this => D#2718
  # DEBUG this => &__position
  # DEBUG __first => D#3533
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __alloc => D#1852
  # DEBUG D#1851 => D#1852
  # DEBUG D#1850 => D#1851
  # DEBUG __first => D#3533
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG D.130851 => D#1850
  # DEBUG __first => D#3533
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<EventRouter::tArrivalEvent*>*, std::queue<EventRouter::tArrivalEvent*>*> (__position_23, __old_finish_26, _85);
  goto <bb 23>;

<L23>:
  goto <bb 49> (<L10>);

  <bb 23>:
  _74 = this_9(D)->D.53031._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.53031._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3533
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3533
  if (__position_23 == __old_finish_26)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __position_170 = PHI <__position_23(24), __position_88(28)>
  # DEBUG __first => __position_170
  # DEBUG this => __position_170
  # DEBUG D.130872 => &__x_copy
  _87 = &__position_170->c;
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::operator= (_87, &__x_copy.c);
  goto <bb 27>;

<L24>:
  goto <bb 49> (<L10>);

  <bb 27>:
  __position_88 = __position_170 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1548 => this_9(D)
  # DEBUG this => D#1548
  # DEBUG D#1547 => D#1548
  # DEBUG D#1546 => &D#1547->D.54535
  # DEBUG this => D#1546
  # DEBUG __a => D#1545
  # DEBUG D#1544 => D#1545
  # DEBUG D#1543 => D#1544
  # DEBUG this => D#1543
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  _141 = (long int) _24;
  _142 = _13 - _141;
  _143 = _142 /[ex] 80;
  _144 = (const long unsigned int) _143;
  _145 = 230584300921369395 - _144;
  if (__n_7(D) > _145)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 31>:
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG __a => &D.145002
  # DEBUG __b => &__n
  _139 = MAX_EXPR <__n_7(D), _144>;
  __len_149 = _139 + _144;
  # DEBUG __len => __len_149
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG D#1548 => this_9(D)
  # DEBUG this => D#1548
  # DEBUG D#1547 => D#1548
  # DEBUG D#1546 => &D#1547->D.54535
  # DEBUG this => D#1546
  # DEBUG __a => D#1545
  # DEBUG D#1544 => D#1545
  # DEBUG D#1543 => D#1544
  # DEBUG this => D#1543
  _140 = __len_149 > 230584300921369395;
  _174 = _144 > __len_149;
  _18 = _140 | _174;
  if (_18 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 32>:
  pretmp_134 = __len_149 * 80;

  <bb 33>:
  # __elems_before_156 = PHI <__elems_before_169(62), __elems_before_181(32)>
  # _183 = PHI <_173(62), _164(32)>
  # prephitmp_135 = PHI <18446744073709551600(62), pretmp_134(32)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#394 => &this_9(D)->D.53031._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#394
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73812
  # DEBUG this => &__position
  # DEBUG this => &D.73812
  # DEBUG __elems_before => __elems_before_156
  # DEBUG D#2728 => &this_9(D)->D.53031
  # DEBUG D#1526 => D#2728
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  # DEBUG D#1554 => &D#1555->_M_impl
  # DEBUG D#1553 => D#1554
  # DEBUG __n => NULL
  # DEBUG __a => D#1553
  # DEBUG D#1552 => D#1553
  # DEBUG D#1550 => D#1552
  # DEBUG D#1551 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1550
  # DEBUG D.144990 => D#1551
  # DEBUG D#1549 => D#1550
  # DEBUG D#1543 => D#1549
  # DEBUG this => D#1543
  _137 = operator new (prephitmp_135);

  <bb 34>:
  # __new_finish_138 = PHI <0B(63), _137(33)>
  # __elems_before_182 = PHI <__elems_before_181(63), __elems_before_156(33)>
  # _177 = PHI <_164(63), _183(33)>
  # prephitmp_153 = PHI <0(63), prephitmp_135(33)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2712 => &this_9(D)->D.53031
  # DEBUG this => D#2712
  _27 = (long unsigned int) _177;
  __first_28 = __new_finish_138 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.130881 => D#1855
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<EventRouter::tArrivalEvent*>*, long unsigned int, std::queue<EventRouter::tArrivalEvent*> > (__first_28, __n_7(D), __x_29(D));

  <bb 35>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2713 => &this_9(D)->D.53031
  # DEBUG this => D#2713
  # DEBUG this => &__position
  _32 = this_9(D)->D.53031._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#3533
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1854
  # DEBUG D#1853 => D#1854
  # DEBUG D#1850 => D#1853
  # DEBUG __first => _32
  # DEBUG __last => D#3533
  # DEBUG __result => NULL
  # DEBUG D.130902 => D#1850
  # DEBUG __first => _32
  # DEBUG __last => D#3533
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<EventRouter::tArrivalEvent*>*, std::queue<EventRouter::tArrivalEvent*>*> (_32, __position_23, __new_finish_138);
  goto <bb 37>;

<L26>:
  goto <bb 51> (<L13>);

  <bb 37>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 80;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#2714 => &this_9(D)->D.53031
  # DEBUG this => D#2714
  _36 = this_9(D)->D.53031._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3533
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#1854
  # DEBUG D#1853 => D#1854
  # DEBUG D#1850 => D#1853
  # DEBUG __first => D#3533
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.130921 => D#1850
  # DEBUG __first => D#3533
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _94 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<EventRouter::tArrivalEvent*>*, std::queue<EventRouter::tArrivalEvent*>*> (__position_23, _36, __new_finish_34);
  goto <bb 39>;

<L27>:
  goto <bb 51> (<L13>);

  <bb 39>:
  # DEBUG __new_finish => _94
  # DEBUG D#2715 => &this_9(D)->D.53031
  # DEBUG this => D#2715
  _38 = this_9(D)->D.53031._M_impl._M_finish;
  __first_39 = this_9(D)->D.53031._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 44>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # __first_90 = PHI <__first_39(40), __first_96(42)>
  # DEBUG __first => __first_90
  # DEBUG __r => __first_90
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  _95 = &MEM[(struct deque *)__first_90].D.60628;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (_95);
  MEM[(struct  &)__first_90] ={v} {CLOBBER};
  __first_96 = __first_90 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 41>;

  <bb 43>:
  pretmp_152 = this_9(D)->D.53031._M_impl._M_start;

  <bb 44>:
  # prephitmp_120 = PHI <pretmp_152(43), __first_39(39)>
  # DEBUG D#2726 => this_9(D)->D.53031._M_impl._M_end_of_storage
  # DEBUG D#2725 => (long int) D#2726
  # DEBUG D#3532 => this_9(D)->D.53031._M_impl._M_start
  # DEBUG D#2724 => (long int) D#3532
  # DEBUG D#2723 => D#2725 - D#2724
  # DEBUG D#2722 => D#2723 /[ex] 80
  # DEBUG D#2721 => &this_9(D)->D.53031
  # DEBUG D#692 => D#2721
  # DEBUG D#693 => (long unsigned int) D#2722
  # DEBUG __p => D#3532
  # DEBUG this => D#692
  # DEBUG __n => D#693
  # DEBUG D#691 => D#693
  # DEBUG D#690 => D#692
  if (prephitmp_120 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#689 => &D#690->_M_impl
  # DEBUG D#687 => D#689
  # DEBUG D#688 => D#691
  # DEBUG __p => D#3532
  # DEBUG __a => D#687
  # DEBUG __n => D#688
  # DEBUG D#686 => D#688
  # DEBUG D#685 => D#687
  # DEBUG D#683 => D#685
  # DEBUG D#684 => D#686
  # DEBUG __p => D#3532
  # DEBUG this => D#683
  # DEBUG D.130944 => D#684
  operator delete (prephitmp_120);

  <bb 46>:
  this_9(D)->D.53031._M_impl._M_start = __new_finish_138;
  this_9(D)->D.53031._M_impl._M_finish = _94;
  _45 = __new_finish_138 + prephitmp_153;
  this_9(D)->D.53031._M_impl._M_end_of_storage = _45;

  <bb 47>:
  return;

<L19>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1231 => &__x_copy.c
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.60628);
  resx 2

<L25>:

  # __new_finish_1 = PHI <__new_finish_138(50), 0B(36), __new_finish_34(38)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 56>;

  <bb 53>:
  # DEBUG D#2719 => &this_9(D)->D.53031
  # DEBUG this => D#2719
  _49 = __n_7(D) + __elems_before_182;
  _50 = _49 * 80;
  _51 = __new_finish_138 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51

  <bb 54>:
  # __first_79 = PHI <__first_28(53), __first_98(55)>
  # DEBUG __first => __first_79
  if (_51 == __first_79)
    goto <bb 58>;
  else
    goto <bb 55>;

  <bb 55>:
  # DEBUG __r => __first_79
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  _97 = &MEM[(struct deque *)__first_79].D.60628;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (_97);
  MEM[(struct  &)__first_79] ={v} {CLOBBER};
  __first_98 = __first_79 + 80;
  # DEBUG __first => __first_98
  goto <bb 54>;

  <bb 56>:
  # __new_finish_99 = PHI <__new_finish_138(52), __new_finish_101(57)>
  # DEBUG __first => __new_finish_99
  if (__new_finish_1 == __new_finish_99)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:
  # DEBUG __r => __new_finish_99
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  _100 = &MEM[(struct deque *)__new_finish_99].D.60628;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_99] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_99 + 80;
  # DEBUG __first => __new_finish_101
  goto <bb 56>;

  <bb 58>:
  # DEBUG D#2727 => &this_9(D)->D.53031
  # DEBUG D#692 => D#2727
  # DEBUG __p => NULL
  # DEBUG this => D#692
  # DEBUG __n => D#693
  # DEBUG D#691 => D#693
  # DEBUG D#690 => D#692
  if (__new_finish_138 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#689 => &D#690->_M_impl
  # DEBUG D#687 => D#689
  # DEBUG D#688 => D#691
  # DEBUG __p => NULL
  # DEBUG __a => D#687
  # DEBUG __n => D#688
  # DEBUG D#686 => D#688
  # DEBUG D#685 => D#687
  # DEBUG D#683 => D#685
  # DEBUG D#684 => D#686
  # DEBUG __p => NULL
  # DEBUG this => D#683
  # DEBUG D.130995 => D#684
  operator delete (__new_finish_138);

  <bb 60>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 62>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#394 => &this_9(D)->D.53031._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#394
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73812
  # DEBUG this => &__position
  _172 = (long int) __position_23;
  # DEBUG this => &D.73812
  _173 = _172 - _141;
  _168 = _173 /[ex] 80;
  __elems_before_169 = (const size_type) _168;
  # DEBUG __elems_before => __elems_before_169
  # DEBUG D#2728 => &this_9(D)->D.53031
  # DEBUG D#1526 => D#2728
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  goto <bb 33>;

  <bb 63>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#394 => &this_9(D)->D.53031._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#394
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73812
  # DEBUG this => &__position
  _163 = (long int) __position_23;
  # DEBUG this => &D.73812
  _164 = _163 - _141;
  _165 = _164 /[ex] 80;
  __elems_before_181 = (const size_type) _165;
  # DEBUG __elems_before => __elems_before_181
  # DEBUG D#2728 => &this_9(D)->D.53031
  # DEBUG D#1526 => D#2728
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  if (__len_149 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP6CreditSaIS1_EE13_M_insert_auxISt15_Deque_iteratorIS1_RKS1_PS6_EEEvS5_IS1_RS1_PS1_ET_SD_m, funcdef_no=4940, decl_uid=81761, cgraph_uid=3289, symbol_order=3290)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>; _Tp = Credit*; _Alloc = std::allocator<Credit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Credit*, Credit*&, Credit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  struct Credit * * * __last1$_M_node;
  struct Credit * * __last1$_M_last;
  struct Credit * * __last1$_M_first;
  struct Credit * * __last1$_M_cur;
  struct Credit * * * __first1$_M_node;
  struct Credit * * __first1$_M_last;
  struct Credit * * __first1$_M_first;
  struct Credit * * __first1$_M_cur;
  struct Credit * * * SR.6384;
  struct Credit * * SR.6383;
  struct Credit * * SR.6382;
  struct Credit * * SR.6381;
  struct Credit * * * __last2$_M_node;
  struct Credit * * __last2$_M_last;
  struct Credit * * __last2$_M_first;
  struct Credit * * __last2$_M_cur;
  struct Credit * * * __first2$_M_node;
  struct Credit * * __first2$_M_last;
  struct Credit * * __first2$_M_first;
  struct Credit * * __first2$_M_cur;
  struct Credit * * * SR.6372;
  struct Credit * * SR.6371;
  struct Credit * * SR.6370;
  struct Credit * * SR.6369;
  struct Credit * * * __new_finish$_M_node;
  struct Credit * * __new_finish$_M_last;
  struct Credit * * __new_finish$_M_first;
  struct Credit * * __new_finish$_M_cur;
  struct Credit * * * SR.6364;
  struct Credit * * SR.6363;
  struct Credit * * SR.6362;
  struct Credit * * SR.6361;
  struct Credit * * * __new_start$_M_node;
  struct Credit * * __new_start$_M_last;
  struct Credit * * __new_start$_M_first;
  struct Credit * * __new_start$_M_cur;
  struct _Deque_iterator D.145221;
  struct _Deque_iterator D.145220;
  struct _Deque_iterator D.145219;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.145218;
  struct _Deque_iterator D.145217;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  difference_type __len;
  difference_type __llen;
  struct Credit * * __lend;
  difference_type __rlen;
  struct Credit * * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.145172;
  struct _Deque_iterator D.145171;
  struct _Deque_iterator D.145170;
  struct _Deque_iterator D.145169;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator D.145140;
  struct _Deque_iterator D.145139;
  struct _Deque_iterator D.145138;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.145137;
  struct _Deque_iterator D.145136;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  struct _Self __tmp;
  struct _Deque_iterator D.145107;
  struct _Deque_iterator D.145106;
  struct _Deque_iterator D.145105;
  struct _Deque_iterator D.145104;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.82193;
  struct _Deque_iterator D.82187;
  struct _Deque_iterator D.82188;
  struct _Deque_iterator D.82189;
  struct _Deque_iterator D.82174;
  struct _Deque_iterator D.82168;
  struct _Deque_iterator D.82169;
  struct _Deque_iterator D.82170;
  struct _Deque_iterator D.82156;
  struct _Deque_iterator D.82157;
  struct _Deque_iterator D.82158;
  struct _Self D.82153;
  struct _Deque_iterator D.82146;
  struct _Deque_iterator D.82138;
  struct _Deque_iterator D.82139;
  struct _Deque_iterator D.82142;
  struct _Self D.82122;
  struct _Deque_iterator D.82118;
  struct _Deque_iterator D.82119;
  struct _Deque_iterator D.82120;
  struct _Deque_iterator D.82106;
  struct _Deque_iterator D.82107;
  struct _Deque_iterator D.82108;
  struct _Self D.82098;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.278_10;
  struct Credit * * * const prephitmp_13;
  struct Credit * * * const prephitmp_20;
  struct Credit * * _27;
  struct Credit * * _28;
  struct Credit * * _29;
  long int _38;
  struct Credit * * _39;
  struct Credit * * _42;
  struct Credit * * _48;
  struct iterator * _56;
  struct Credit * * _57;
  long int _62;
  struct Credit * * _63;
  struct Credit * * _69;
  struct Credit * * _75;
  struct Credit * * * _80;
  long int __len.282_81;
  struct Credit * * _82;
  struct Credit * * _88;
  long int _93;
  long int _94;
  struct Credit * * _95;
  long int _96;
  struct Credit * * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  struct Credit * * * _104;
  long int _105;
  struct Credit * * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  struct Credit * * _112;
  long int _113;
  struct Credit * * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  struct Credit * * _119;
  long int _120;
  struct Credit * * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  struct Credit * * _126;
  struct Credit * * _127;
  struct Credit * * _128;
  struct Credit * * * _129;
  struct Credit * * const pretmp_130;
  struct Credit * * const prephitmp_131;
  struct Credit * * * const pretmp_132;
  struct Credit * * _133;
  struct Credit * * _134;
  struct Credit * * * _135;
  struct Credit * * _136;
  struct Credit * * _137;
  struct Credit * * * _138;
  struct Credit * * const pretmp_140;
  struct Credit * * const prephitmp_141;
  struct Credit * * _145;
  struct Credit * * _146;
  struct Credit * * * _147;
  struct Credit * * _148;
  struct Credit * * _149;
  struct Credit * * * _150;
  struct Credit * * pretmp_151;
  struct Credit * * _154;
  struct Credit * * _155;
  struct Credit * * * _156;
  struct Credit * * _157;
  struct Credit * * _161;
  struct Credit * * * _162;
  struct Credit * * _166;
  struct Credit * * _167;
  struct Credit * * * _168;
  struct Credit * * _169;
  struct Credit * * _170;
  struct Credit * * * _171;
  struct Credit * * _172;
  struct Credit * * _173;
  struct Credit * * _174;
  struct Credit * * * _175;
  struct Credit * * _176;
  struct Credit * * _177;
  struct Credit * * * _178;
  struct Credit * * _179;
  struct Credit * * _180;
  struct Credit * * * _181;
  struct Credit * * prephitmp_269;
  struct Credit * * const pretmp_271;
  struct _Self & _272;
  struct Credit * * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.265_284;
  long int _289;
  struct _Self & _290;
  struct Credit * * const prephitmp_295;
  struct Credit * * prephitmp_301;
  struct Credit * * prephitmp_302;
  struct Credit * * pretmp_303;
  struct Credit * * pretmp_304;
  struct Credit * * prephitmp_306;
  struct Credit * * _307;
  struct Credit * * _308;
  struct Credit * * * _309;
  struct _Self & _310;
  struct Credit * * _311;
  struct Credit * * _312;
  struct Credit * * _313;
  struct Credit * * * _314;
  struct Credit * * _326;
  struct Credit * * _327;
  struct Credit * * _328;
  struct Credit * * * _329;
  long int _333;
  struct _Self & _334;
  long int _339;
  long int _342;
  long int _343;
  long int _344;
  long unsigned int _346;
  long int __n.276_347;
  struct _Self & _352;
  long int _369;
  long int _371;
  long int _372;
  long int _373;
  long int _374;
  long int _375;
  long int _377;
  long int _379;
  long int _380;
  long int _381;
  long int _382;
  long int _384;
  long int _386;
  long int _387;
  long int _388;
  struct Credit * * const prephitmp_390;
  long int _392;
  long int _394;
  long int _395;
  long int _398;
  long int _400;
  long int _401;
  struct Credit * * * _403;
  struct Credit * * _404;
  struct Credit * * * _406;
  struct Credit * * _407;
  struct Credit * * const pretmp_409;
  struct Credit * * const prephitmp_410;
  struct Credit * * * const prephitmp_411;
  long unsigned int __clen.291_415;
  long unsigned int _416;
  sizetype _417;
  struct Credit * * _419;
  long int _421;
  struct Credit * * _431;
  struct Credit * * _432;
  struct Credit * * _433;
  struct Credit * * * _434;
  struct Credit * * * const pretmp_445;
  struct Credit * * const prephitmp_446;
  struct Credit * * const prephitmp_494;
  struct Credit * * const pretmp_495;
  struct Credit * * const pretmp_557;
  struct Credit * * * const pretmp_558;
  struct Credit * * const prephitmp_559;
  struct Credit * * const pretmp_560;
  struct Credit * * pretmp_570;
  long int _575;
  struct Credit * * const pretmp_576;

  <bb 2>:
  # DEBUG D#2652 => &this_4(D)->D.59602._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#2652
  # DEBUG __size => 8
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 64;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 8;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 8;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#389 => &MEM[(const struct deque *)this_4(D)].D.59602._M_impl._M_start
  # DEBUG D#390 => &MEM[(const struct deque *)this_4(D)].D.59602._M_impl._M_finish
  # DEBUG __x => D#390
  # DEBUG __y => D#389
  # DEBUG __size => 8
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 64;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 8;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.278_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.278_10)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.59602._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 8;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_271 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_140 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_130 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_132 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;

  <bb 5>:
  # prephitmp_131 = PHI <_121(3), pretmp_271(4)>
  # prephitmp_295 = PHI <_278(3), pretmp_140(4)>
  # prephitmp_141 = PHI <_119(3), pretmp_130(4)>
  # prephitmp_13 = PHI <_106(3), pretmp_132(4)>
  __n.265_284 = (long int) __n_11(D);
  # DEBUG D#3544 => &this_4(D)->D.59602._M_impl._M_start
  # DEBUG this => D#3544
  # DEBUG __n => __n.265_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#3544
  __tmp._M_cur = prephitmp_131;
  __tmp._M_first = prephitmp_295;
  __tmp._M_last = prephitmp_141;
  __tmp._M_node = prephitmp_13;
  # DEBUG this => &__tmp
  # DEBUG __n => __n.265_284
  _289 = -__n.265_284;
  _290 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, _289);
  # DEBUG this => &__new_start
  # DEBUG __x => _290
  __new_start$_M_cur_291 = MEM[(const struct iterator &)_290]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_291
  __new_start$_M_first_292 = MEM[(const struct iterator &)_290]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_292
  __new_start$_M_last_293 = MEM[(const struct iterator &)_290]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_293
  __new_start$_M_node_294 = MEM[(const struct iterator &)_290]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_294
  __tmp ={v} {CLOBBER};
  # DEBUG D#2653 => &this_4(D)->D.59602._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#2653
  _126 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  # DEBUG __old_start$_M_cur => _126
  _127 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  # DEBUG __old_start$_M_first => _127
  _128 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  # DEBUG __old_start$_M_last => _128
  _129 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __old_start$_M_node => _129
  # DEBUG D#3545 => &this_4(D)->D.59602._M_impl._M_start
  # DEBUG this => D#3545
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#3545
  __tmp._M_cur = _126;
  __tmp._M_first = _127;
  __tmp._M_last = _128;
  __tmp._M_node = _129;
  _272 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, _125);
  # DEBUG this => &D.82098
  # DEBUG __x => _272
  SR.6361_273 = MEM[(const struct iterator &)_272]._M_cur;
  SR.6362_274 = MEM[(const struct iterator &)_272]._M_first;
  SR.6363_275 = MEM[(const struct iterator &)_272]._M_last;
  SR.6364_276 = MEM[(const struct iterator &)_272]._M_node;
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.6361_273;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.6362_274;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.6363_275;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.6364_276;
  if (_125 >= __n.265_284)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => D#3545
  # DEBUG __n => __n.265_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#3545
  _29 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp._M_cur = _29;
  _307 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  __tmp._M_first = _307;
  _308 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  __tmp._M_last = _308;
  _309 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  __tmp._M_node = _309;
  _310 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, __n.265_284);
  # DEBUG this => &__start_n
  # DEBUG __x => _310
  _311 = MEM[(const struct iterator &)_310]._M_cur;
  _312 = MEM[(const struct iterator &)_310]._M_first;
  _313 = MEM[(const struct iterator &)_310]._M_last;
  _314 = MEM[(const struct iterator &)_310]._M_node;
  __tmp ={v} {CLOBBER};
  # DEBUG D#2654 => &this_4(D)->D.59602
  # DEBUG this => D#2654
  # DEBUG this => &D.82108
  # DEBUG __x => &__new_start
  D.82108._M_cur = __new_start$_M_cur_291;
  D.82108._M_first = __new_start$_M_first_292;
  D.82108._M_last = __new_start$_M_last_293;
  D.82108._M_node = __new_start$_M_node_294;
  # DEBUG this => &D.82107
  # DEBUG __x => &__start_n
  D.82107._M_cur = _311;
  D.82107._M_first = _312;
  D.82107._M_last = _313;
  D.82107._M_node = _314;
  # DEBUG D#2655 => &this_4(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.82106
  # DEBUG __x => D#2655
  _27 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  D.82106._M_cur = _27;
  _136 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  D.82106._M_first = _136;
  _137 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  D.82106._M_last = _137;
  _138 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  D.82106._M_node = _138;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.634 (&D.82106, &D.82107, &D.82108);
  D.82106 ={v} {CLOBBER};
  D.82107 ={v} {CLOBBER};
  D.82108 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_291;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_292;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_293;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_294;
  # DEBUG this => &D.82120
  # DEBUG __x => &__old_start
  # DEBUG this => &D.82119
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.82118
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.82118
  # DEBUG __last => &D.82119
  # DEBUG __result => &D.82120
  # DEBUG this => &D.145107
  # DEBUG __x => &D.82120
  D.145107._M_cur = _126;
  D.145107._M_first = _127;
  D.145107._M_last = _128;
  D.145107._M_node = _129;
  # DEBUG this => &D.145106
  # DEBUG __x => &D.82119
  D.145106._M_cur = _28;
  D.145106._M_first = _133;
  D.145106._M_last = _134;
  D.145106._M_node = _135;
  # DEBUG this => &D.145105
  # DEBUG __x => &D.82118
  D.145105._M_cur = _311;
  D.145105._M_first = _312;
  D.145105._M_last = _313;
  D.145105._M_node = _314;
  D.145104 = std::copy<Credit*> (D.145105, D.145106, &D.145107); [return slot optimization]
  D.145105 ={v} {CLOBBER};
  D.145106 ={v} {CLOBBER};
  D.145107 ={v} {CLOBBER};
  D.82118 ={v} {CLOBBER};
  D.82119 ={v} {CLOBBER};
  D.82120 ={v} {CLOBBER};
  D.82122 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator- (__pos_6(D), __n.265_284); [return slot optimization]
  std::copy<Credit*> (__first, __last, &D.82122);
  D.82122 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 8>;

  <bb 7>:
  __mid = __first;
  _38 = __n.265_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#2402 => &__mid
  # DEBUG D.128181 => D#2402
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>::operator+= (&__mid, _38);
  # DEBUG D#2656 => &this_4(D)->D.59602
  # DEBUG this => D#2656
  # DEBUG D#3547 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.82142
  # DEBUG __x => &__new_start
  # DEBUG this => &D.82139
  # DEBUG __x => __pos_6(D)
  _42 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _148 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _149 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _150 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG D#2657 => &this_4(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.82138
  # DEBUG __x => D#2657
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _145 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.82138
  # DEBUG __last1 => &D.82139
  __first2$_M_cur_527 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first2$_M_cur => __first2$_M_cur_527
  __first2$_M_first_52 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first2$_M_first => __first2$_M_first_52
  __first2$_M_last_47 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first2$_M_last => __first2$_M_last_47
  __first2$_M_node_513 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first2$_M_node => __first2$_M_node_513
  __last2$_M_cur_512 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __last2$_M_cur => __last2$_M_cur_512
  __last2$_M_first_26 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __last2$_M_first => __last2$_M_first_26
  __last2$_M_last_17 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __last2$_M_last => __last2$_M_last_17
  __last2$_M_node_16 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __last2$_M_node => __last2$_M_node_16
  # DEBUG __result => &D.82142
  # DEBUG __alloc => D#3547
  # DEBUG this => &D.145140
  # DEBUG __x => &D.82142
  D.145140._M_cur = __new_start$_M_cur_291;
  D.145140._M_first = __new_start$_M_first_292;
  D.145140._M_last = __new_start$_M_last_293;
  D.145140._M_node = __new_start$_M_node_294;
  # DEBUG this => &D.145139
  # DEBUG __x => &D.82139
  D.145139._M_cur = _42;
  D.145139._M_first = _148;
  D.145139._M_last = _149;
  D.145139._M_node = _150;
  # DEBUG this => &D.145138
  # DEBUG __x => &D.82138
  D.145138._M_cur = _48;
  D.145138._M_first = _145;
  D.145138._M_last = _146;
  D.145138._M_node = _147;
  # DEBUG D#2651 => D#3547
  __mid = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.634 (&D.145138, &D.145139, &D.145140); [return slot optimization]
  D.145138 ={v} {CLOBBER};
  D.145139 ={v} {CLOBBER};
  D.145140 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  _326 = __mid._M_cur;
  _327 = __mid._M_first;
  _328 = __mid._M_last;
  _329 = __mid._M_node;
  # DEBUG D#1835 => D#3547
  MEM[(struct _Deque_iterator *)&__first] = __first2$_M_cur_527;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first2$_M_first_52;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first2$_M_last_47;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first2$_M_node_513;
  MEM[(struct _Deque_iterator *)&__last] = __last2$_M_cur_512;
  MEM[(struct _Deque_iterator *)&__last + 8B] = __last2$_M_first_26;
  MEM[(struct _Deque_iterator *)&__last + 16B] = __last2$_M_last_17;
  MEM[(struct _Deque_iterator *)&__last + 24B] = __last2$_M_node_16;
  # DEBUG __result => NULL
  # DEBUG D.145130 => D#1835
  # DEBUG this => &D.145137
  # DEBUG __x => NULL
  D.145137._M_cur = _326;
  D.145137._M_first = _327;
  D.145137._M_last = _328;
  D.145137._M_node = _329;
  D.145136 = std::uninitialized_copy<std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>, std::_Deque_iterator<Credit*, Credit*&, Credit**> > (__first, __last, &D.145137); [return slot optimization]
  D.145137 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.82138 ={v} {CLOBBER};
  D.82139 ={v} {CLOBBER};
  D.82142 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_291;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_292;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_293;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_294;
  # DEBUG this => &D.82146
  # DEBUG __x => &__old_start
  D.82146._M_cur = _126;
  D.82146._M_first = _127;
  D.82146._M_last = _128;
  D.82146._M_node = _129;
  std::copy<Credit*> (__mid, __last, &D.82146);
  D.82146 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};

  <bb 8>:

  <bb 24>:
  # DEBUG D#3552 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#3552
  # DEBUG D#3553 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#3553
  # DEBUG D#3554 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#3554
  # DEBUG D#3555 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#3555
  return;

  <bb 9>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.59602._M_impl._M_finish._M_last;
  _339 = (long int) _57;
  _342 = _339 - _96;
  _343 = _342 /[ex] 8;
  _344 = _343 + -1;
  __vacancies_345 = (const size_type) _344;
  # DEBUG __vacancies => __vacancies_345
  if (__n_11(D) > __vacancies_345)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _346 = __n_11(D) - __vacancies_345;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_back (this_4(D), _346);
  pretmp_560 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_409 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_557 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_558 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;

  <bb 11>:
  # prephitmp_559 = PHI <_95(9), pretmp_560(10)>
  # prephitmp_410 = PHI <_97(9), pretmp_409(10)>
  # prephitmp_390 = PHI <_57(9), pretmp_557(10)>
  # prephitmp_411 = PHI <_80(9), pretmp_558(10)>
  __n.276_347 = (long int) __n_11(D);
  # DEBUG D#3546 => &this_4(D)->D.59602._M_impl._M_finish
  # DEBUG this => D#3546
  # DEBUG __n => __n.276_347
  # DEBUG this => &__tmp
  # DEBUG __x => D#3546
  __tmp._M_cur = prephitmp_559;
  __tmp._M_first = prephitmp_410;
  __tmp._M_last = prephitmp_390;
  __tmp._M_node = prephitmp_411;
  _352 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, __n.276_347);
  # DEBUG this => &__new_finish
  # DEBUG __x => _352
  __new_finish$_M_cur_353 = MEM[(const struct iterator &)_352]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_353
  __new_finish$_M_first_354 = MEM[(const struct iterator &)_352]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_354
  __new_finish$_M_last_355 = MEM[(const struct iterator &)_352]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_355
  __new_finish$_M_node_356 = MEM[(const struct iterator &)_352]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_356
  __tmp ={v} {CLOBBER};
  # DEBUG D#2658 => &this_4(D)->D.59602._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#2658
  _39 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  # DEBUG __old_finish$_M_cur => _39
  _154 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __old_finish$_M_first => _154
  _155 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __old_finish$_M_last => _155
  _156 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __old_finish$_M_node => _156
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#3562 => &this_4(D)->D.59602._M_impl._M_finish
  # DEBUG this => D#3562
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#3562
  __tmp._M_cur = _39;
  __tmp._M_first = _154;
  __tmp._M_last = _155;
  __tmp._M_node = _156;
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  _333 = -__elemsafter_55;
  _334 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, _333);
  # DEBUG this => &D.82153
  # DEBUG __x => _334
  SR.6369_335 = MEM[(const struct iterator &)_334]._M_cur;
  SR.6370_336 = MEM[(const struct iterator &)_334]._M_first;
  SR.6371_337 = MEM[(const struct iterator &)_334]._M_last;
  SR.6372_338 = MEM[(const struct iterator &)_334]._M_node;
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.6369_335;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.6370_336;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.6371_337;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.6372_338;
  if (__elemsafter_55 > __n.276_347)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  _56 = &this_4(D)->D.59602._M_impl._M_finish;
  __finish_n = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator- (_56, __n.276_347); [return slot optimization]
  # DEBUG D#2659 => &this_4(D)->D.59602
  # DEBUG this => D#2659
  # DEBUG D#2660 => &this_4(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.82158
  # DEBUG __x => D#2660
  _63 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  D.82158._M_cur = _63;
  _169 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  D.82158._M_first = _169;
  _170 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  D.82158._M_last = _170;
  _171 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  D.82158._M_node = _171;
  # DEBUG D#2661 => &this_4(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.82157
  # DEBUG __x => D#2661
  D.82157._M_cur = _63;
  D.82157._M_first = _169;
  D.82157._M_last = _170;
  D.82157._M_node = _171;
  # DEBUG this => &D.82156
  # DEBUG __x => &__finish_n
  _69 = __finish_n._M_cur;
  D.82156._M_cur = _69;
  _166 = __finish_n._M_first;
  D.82156._M_first = _166;
  _167 = __finish_n._M_last;
  D.82156._M_last = _167;
  _168 = __finish_n._M_node;
  D.82156._M_node = _168;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.634 (&D.82156, &D.82157, &D.82158);
  D.82156 ={v} {CLOBBER};
  D.82157 ={v} {CLOBBER};
  D.82158 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_353;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_354;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_355;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_356;
  # DEBUG this => &D.82170
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.82169
  # DEBUG __x => &__finish_n
  SR.6381_70 = __finish_n._M_cur;
  SR.6382_163 = __finish_n._M_first;
  SR.6383_164 = __finish_n._M_last;
  SR.6384_165 = __finish_n._M_node;
  # DEBUG this => &D.82168
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.82168
  # DEBUG __last => &D.82169
  # DEBUG __result => &D.82170
  # DEBUG this => &D.145172
  # DEBUG __x => &D.82170
  D.145172._M_cur = _39;
  D.145172._M_first = _154;
  D.145172._M_last = _155;
  D.145172._M_node = _156;
  # DEBUG this => &D.145171
  # DEBUG __x => &D.82169
  # DEBUG this => &D.145170
  # DEBUG __x => &D.82168
  MEM[(struct _Deque_iterator *)&__last] = SR.6381_70;
  MEM[(struct _Deque_iterator *)&__last + 8B] = SR.6382_163;
  MEM[(struct _Deque_iterator *)&__last + 16B] = SR.6383_164;
  MEM[(struct _Deque_iterator *)&__last + 24B] = SR.6384_165;
  # DEBUG __result => &D.145172
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _369 = (long int) SR.6384_165;
  _371 = (long int) _162;
  _372 = _369 - _371;
  _373 = _372 /[ex] 8;
  _374 = _373 + -1;
  _375 = _374 * 64;
  _377 = (long int) SR.6381_70;
  _379 = (long int) SR.6382_163;
  _380 = _377 - _379;
  _381 = _380 /[ex] 8;
  _382 = _375 + _381;
  _384 = (long int) _161;
  _386 = (long int) _75;
  _387 = _384 - _386;
  _388 = _387 /[ex] 8;
  __len_389 = _382 + _388;
  # DEBUG __len => __len_389
  if (__len_389 <= 0)
    goto <bb 21>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # __len.282_81 = PHI <__len_389(13), __len_422(19)>
  # prephitmp_269 = PHI <SR.6381_70(13), pretmp_570(19)>
  # prephitmp_301 = PHI <SR.6382_163(13), pretmp_151(19)>
  # prephitmp_306 = PHI <_39(13), pretmp_303(19)>
  # prephitmp_302 = PHI <_154(13), pretmp_304(19)>
  # DEBUG D#3561 => __last._M_cur
  _392 = (long int) prephitmp_269;
  _394 = (long int) prephitmp_301;
  _395 = _392 - _394;
  __llen_396 = _395 /[ex] 8;
  # DEBUG __llen => __llen_396
  # DEBUG __lend => D#3561
  # DEBUG D#3560 => D.145172._M_cur
  _398 = (long int) prephitmp_306;
  _400 = (long int) prephitmp_302;
  _401 = _398 - _400;
  __rlen_402 = _401 /[ex] 8;
  # DEBUG __rlen => __rlen_402
  # DEBUG __rend => D#3560
  if (__llen_396 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG __size => 8
  # DEBUG __llen => 64
  _403 = __last._M_node;
  _404 = MEM[(struct Credit * * *)_403 + -8B];
  __lend_405 = _404 + 512;
  # DEBUG __lend => __lend_405

  <bb 16>:
  # __lend_418 = PHI <prephitmp_269(14), __lend_405(15)>
  # __llen_571 = PHI <__llen_396(14), 64(15)>
  # DEBUG __llen => __llen_571
  # DEBUG __lend => __lend_418
  if (__rlen_402 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG __size => 8
  # DEBUG __rlen => 64
  _406 = D.145172._M_node;
  _407 = MEM[(struct Credit * * *)_406 + -8B];
  __rend_408 = _407 + 512;
  # DEBUG __rend => __rend_408

  <bb 18>:
  # __rend_420 = PHI <prephitmp_306(16), __rend_408(17)>
  # __rlen_566 = PHI <__rlen_402(16), 64(17)>
  # DEBUG __rlen => __rlen_566
  # DEBUG __rend => __rend_420
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _575 = MIN_EXPR <__len.282_81, __llen_571>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_413 = MIN_EXPR <__rlen_566, _575>;
  # DEBUG __clen => D#3543
  __clen.291_415 = (long unsigned int) __clen_413;
  _416 = __clen.291_415 * 8;
  _417 = -_416;
  _419 = __lend_418 + _417;
  std::copy_backward<EventRouter::tTransportEvent**, EventRouter::tTransportEvent**> (_419, __lend_418, __rend_420);
  # DEBUG this => &__last
  # DEBUG __n => D#3543
  _421 = -__clen_413;
  std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>::operator+= (&__last, _421);
  # DEBUG this => &D.145172
  # DEBUG __n => D#3543
  std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&D.145172, _421);
  __len_422 = __len.282_81 - __clen_413;
  # DEBUG __len => __len_422
  # DEBUG D#3549 => {CLOBBER}
  # DEBUG __llen => D#3549
  # DEBUG D#3550 => {CLOBBER}
  # DEBUG __rlen => D#3550
  if (__len_422 <= 0)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  pretmp_570 = __last._M_cur;
  pretmp_151 = __last._M_first;
  pretmp_303 = D.145172._M_cur;
  pretmp_304 = D.145172._M_first;
  goto <bb 14>;

  <bb 20>:

  <bb 23>:
  pretmp_576 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_495 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_445 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 21>:
  # prephitmp_494 = PHI <pretmp_576(23), _75(12)>
  # prephitmp_446 = PHI <pretmp_495(23), _161(12)>
  # prephitmp_20 = PHI <pretmp_445(23), _162(12)>
  # DEBUG this => &D.145169
  # DEBUG __x => &D.145172
  # DEBUG D#3551 => {CLOBBER}
  # DEBUG __len => D#3551
  D.145170 ={v} {CLOBBER};
  D.145172 ={v} {CLOBBER};
  D.82168 ={v} {CLOBBER};
  D.82169 ={v} {CLOBBER};
  D.82170 ={v} {CLOBBER};
  # DEBUG this => &D.82174
  # DEBUG __x => __pos_6(D)
  D.82174._M_cur = prephitmp_494;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.82174._M_first = _157;
  D.82174._M_last = prephitmp_446;
  D.82174._M_node = prephitmp_20;
  std::copy<Credit*> (__first, __last, &D.82174);
  D.82174 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 8>;

  <bb 22>:
  __mid = __first;
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#2402 => &__mid
  # DEBUG D.128181 => D#2402
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>::operator+= (&__mid, __elemsafter_55);
  # DEBUG D#2662 => &this_4(D)->D.59602
  # DEBUG this => D#2662
  # DEBUG D#3548 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#2663 => &this_4(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.82189
  # DEBUG __x => D#2663
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#2664 => &this_4(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.82188
  # DEBUG __x => D#2664
  # DEBUG this => &D.82187
  # DEBUG __x => __pos_6(D)
  _88 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _176 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _177 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _178 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  __first1$_M_cur_218 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first1$_M_cur => __first1$_M_cur_218
  __first1$_M_first_473 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __first1$_M_first => __first1$_M_first_473
  __first1$_M_last_474 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first1$_M_last => __first1$_M_last_474
  __first1$_M_node_475 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first1$_M_node => __first1$_M_node_475
  __last1$_M_cur_476 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last1$_M_cur_476
  __last1$_M_first_194 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last1$_M_first_194
  __last1$_M_last_195 = MEM[(struct _Deque_iterator *)&__last + 16B];
  # DEBUG __last1$_M_last => __last1$_M_last_195
  __last1$_M_node_196 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last1$_M_node_196
  # DEBUG __first2 => &D.82187
  # DEBUG __last2 => &D.82188
  # DEBUG __result => &D.82189
  # DEBUG __alloc => D#3548
  # DEBUG this => NULL
  # DEBUG __x => &D.82189
  # DEBUG D#1835 => D#3548
  MEM[(struct _Deque_iterator *)&__first] = __first1$_M_cur_218;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first1$_M_first_473;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first1$_M_last_474;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first1$_M_node_475;
  MEM[(struct _Deque_iterator *)&__last] = __last1$_M_cur_476;
  MEM[(struct _Deque_iterator *)&__last + 8B] = __last1$_M_first_194;
  MEM[(struct _Deque_iterator *)&__last + 16B] = __last1$_M_last_195;
  MEM[(struct _Deque_iterator *)&__last + 24B] = __last1$_M_node_196;
  # DEBUG __result => NULL
  # DEBUG D.145205 => D#1835
  # DEBUG this => &D.145218
  # DEBUG __x => NULL
  D.145218._M_cur = _82;
  D.145218._M_first = _179;
  D.145218._M_last = _180;
  D.145218._M_node = _181;
  __mid = std::uninitialized_copy<std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>, std::_Deque_iterator<Credit*, Credit*&, Credit**> > (__first, __last, &D.145218); [return slot optimization]
  D.145218 ={v} {CLOBBER};
  # DEBUG this => &D.145221
  # DEBUG __x => &__mid
  _431 = __mid._M_cur;
  D.145221._M_cur = _431;
  _432 = __mid._M_first;
  D.145221._M_first = _432;
  _433 = __mid._M_last;
  D.145221._M_last = _433;
  _434 = __mid._M_node;
  D.145221._M_node = _434;
  # DEBUG this => &D.145220
  # DEBUG __x => &D.82188
  D.145220._M_cur = _82;
  D.145220._M_first = _179;
  D.145220._M_last = _180;
  D.145220._M_node = _181;
  # DEBUG this => &D.145219
  # DEBUG __x => &D.82187
  D.145219._M_cur = _88;
  D.145219._M_first = _176;
  D.145219._M_last = _177;
  D.145219._M_node = _178;
  # DEBUG D#2651 => D#3548
  D.145217 = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP6CreditRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.634 (&D.145219, &D.145220, &D.145221); [return slot optimization]
  D.145219 ={v} {CLOBBER};
  D.145220 ={v} {CLOBBER};
  D.145221 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.82187 ={v} {CLOBBER};
  D.82188 ={v} {CLOBBER};
  D.82189 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_353;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_354;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_355;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_356;
  # DEBUG this => &D.82193
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.82193._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.82193._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.82193._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.82193._M_node = _175;
  std::copy<Credit*> (__first, __mid, &D.82193);
  D.82193 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 8>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (_ZNSt5dequeIP6CreditSaIS1_EEaSERKS3_, funcdef_no=4519, decl_uid=59181, cgraph_uid=2868, symbol_order=2869)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Credit*; _Alloc = std::allocator<Credit*>] (struct deque * const this, const struct deque & __x)
{
  struct Credit * * * __new_finish$_M_node;
  struct Credit * * __new_finish$_M_last;
  struct Credit * * __new_finish$_M_first;
  struct Credit * * __new_finish$_M_cur;
  struct Credit * * * __new_start$_M_node;
  struct Credit * * __new_start$_M_last;
  struct Credit * * __new_start$_M_first;
  struct Credit * * __new_start$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __last$_M_node;
  struct Credit * * __last$_M_last;
  struct Credit * * __last$_M_first;
  struct Credit * * __last$_M_cur;
  struct Credit * * * __first$_M_node;
  struct Credit * * __first$_M_last;
  struct Credit * * __first$_M_first;
  struct Credit * * __first$_M_cur;
  struct Credit * * * SR.6413;
  struct Credit * * SR.6412;
  struct Credit * * SR.6411;
  struct Credit * * SR.6410;
  struct Credit * * * SR.6409;
  struct Credit * * SR.6408;
  struct Credit * * SR.6407;
  struct Credit * * SR.6406;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.145386;
  struct _Deque_iterator D.145385;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.145366;
  struct _Deque_iterator D.145365;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.145358;
  struct _Deque_iterator D.145357;
  struct iterator D.145356;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.145344;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.145336;
  struct iterator D.145335;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Credit * * * __nstart;
  struct const_iterator __mid;
  struct iterator D.79391;
  struct _Deque_iterator D.89814;
  struct _Deque_iterator D.89813;
  struct _Deque_iterator D.79383;
  struct const_iterator D.79379;
  struct _Deque_iterator D.89810;
  struct _Deque_iterator D.89809;
  struct _Deque_iterator D.79376;
  struct _Deque_iterator D.79377;
  long int _5;
  struct Credit * * * _6;
  struct Credit * * _9;
  struct Credit * * _12;
  struct Credit * * _13;
  struct _Self & _14;
  struct Credit * * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  struct Credit * * _28;
  long int _29;
  struct Credit * * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  struct Credit * * * _43;
  long int _44;
  struct Credit * * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  struct Credit * * _51;
  long int _52;
  struct Credit * * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  struct Credit * * _58;
  long int _59;
  struct Credit * * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  struct Credit * * _66;
  struct Credit * * _67;
  struct Credit * * _68;
  struct Credit * * _70;
  struct Credit * * _72;
  struct Credit * * _73;
  struct Credit * * * _74;
  struct Credit * * _75;
  struct Credit * * _76;
  struct Credit * * * _77;
  struct Credit * * _78;
  struct Credit * * _79;
  struct Credit * * * _80;
  struct Credit * * * _114;
  struct Credit * * * _115;
  struct Credit * * * _116;
  struct Credit * * _119;
  long int _129;
  long int _130;
  long int _131;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  long int _138;
  long int _139;
  long int _140;
  long int _141;
  long int _142;
  long int _143;
  difference_type _144;
  struct Credit * * _147;
  struct Credit * * _153;
  struct Credit * * _154;
  struct Credit * * _155;
  struct Credit * * * _156;
  long int _165;
  struct Credit * * _166;
  long int _167;
  long int _168;
  long int _169;
  long unsigned int _171;
  struct Credit * * _176;
  struct Credit * * * _177;
  long int _178;
  struct _Self & _179;
  long int _189;
  long int _191;
  long int _192;
  long int _193;
  long int _194;
  long unsigned int _196;
  struct Credit * * _200;
  struct Credit * * * _202;
  struct _Self & _203;
  struct Credit * * const prephitmp_242;
  struct Credit * * const pretmp_243;
  struct Credit * * const prephitmp_251;
  struct Credit * * const pretmp_252;
  struct Credit * * const prephitmp_265;
  struct Credit * * const pretmp_266;
  struct Credit * * const prephitmp_267;
  struct Credit * * const pretmp_268;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#389 => &MEM[(const struct deque *)this_3(D)].D.59602._M_impl._M_start
  # DEBUG D#390 => &MEM[(const struct deque *)this_3(D)].D.59602._M_impl._M_finish
  # DEBUG __x => D#390
  # DEBUG __y => D#389
  # DEBUG __size => 8
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 64;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 8;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 8;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#389 => &__x_2(D)->D.59602._M_impl._M_start
  # DEBUG D#390 => &__x_2(D)->D.59602._M_impl._M_finish
  # DEBUG __x => D#390
  # DEBUG __y => D#389
  # DEBUG __size => 8
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.6409_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.6409_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 64;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 8;
  _34 = _27 + _33;
  SR.6408_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.6408_35;
  SR.6406_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.6406_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#2671 => &this_3(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.79376
  # DEBUG __x => D#2671
  D.79376._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.79376._M_first = _68;
  D.79376._M_last = _58;
  D.79376._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#224 => &__x_2(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.89809
  # DEBUG __x => D#224
  D.89809._M_cur = _28;
  D.89809._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.89809._M_last = _67;
  D.89809._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#225 => &__x_2(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.89810
  # DEBUG __x => D#225
  D.89810._M_cur = SR.6406_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.89810._M_first = _66;
  D.89810._M_last = SR.6408_35;
  D.89810._M_node = SR.6409_22;
  D.79377 = std::copy<Credit*> (D.89810, D.89809, &D.79376); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.79377
  # DEBUG D#1475 => &this_3(D)->D.59602
  # DEBUG this => D#1475
  # DEBUG this => this_3(D)
  # DEBUG D#158 => &this_3(D)->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1482 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.111246 => D#1482
  # DEBUG D#1481 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.111247 => D#1481
  # DEBUG D#1480 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.111248 => D#1480
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.111249 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.79377
  # DEBUG D#1479 => MEM[(const struct iterator &)&D.79377]._M_cur
  # DEBUG D.111250 => D#1479
  # DEBUG D#1478 => MEM[(const struct iterator &)&D.79377]._M_first
  # DEBUG D.111251 => D#1478
  # DEBUG D#1477 => MEM[(const struct iterator &)&D.79377]._M_last
  # DEBUG D.111252 => D#1477
  _115 = MEM[(const struct iterator &)&D.79377]._M_node;
  # DEBUG D.111253 => _115
  # DEBUG D#160 => this_3(D)
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.111235 => D#163
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#1476 => &this_3(D)->D.59602
  # DEBUG this => D#1476
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.59602._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.79377];
  D.79377 ={v} {CLOBBER};
  D.79376 ={v} {CLOBBER};
  goto <bb 17>;

  <bb 6>:

  <bb 7>:
  # __nstart_99 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_99
  _119 = *__nstart_99;
  # DEBUG this => D#1476
  # DEBUG __p => _119
  # DEBUG __size => 8
  # DEBUG D#1103 => &D#1476->_M_impl
  # DEBUG D#1083 => D#1103
  # DEBUG __p => _119
  # DEBUG __a => D#1083
  # DEBUG __n => D#1084
  # DEBUG D#1082 => D#1084
  # DEBUG D#1081 => D#1083
  # DEBUG D#1079 => D#1081
  # DEBUG D#1080 => D#1082
  # DEBUG __p => _119
  # DEBUG this => D#1079
  # DEBUG D.145319 => D#1080
  operator delete (_119);
  __nstart_120 = __nstart_99 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#225 => &__x_2(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.79379
  # DEBUG __x => D#225
  SR.6407_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.79379
  # DEBUG __n => _64
  MEM[(struct _Deque_iterator *)&__tmp] = SR.6406_37;
  MEM[(struct _Deque_iterator *)&__tmp + 8B] = SR.6407_81;
  MEM[(struct _Deque_iterator *)&__tmp + 16B] = SR.6408_35;
  MEM[(struct _Deque_iterator *)&__tmp + 24B] = SR.6409_22;
  _14 = std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>::operator+= (&__tmp, _64);
  __mid = MEM[(const struct _Deque_iterator &)_14];
  __tmp ={v} {CLOBBER};
  # DEBUG D#2669 => &this_3(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.79383
  # DEBUG __x => D#2669
  _9 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  D.79383._M_cur = _9;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.79383._M_first = _78;
  _79 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  D.79383._M_last = _79;
  _80 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  D.79383._M_node = _80;
  # DEBUG this => __x_2(D)
  # DEBUG D#225 => &__x_2(D)->D.59602._M_impl._M_start
  # DEBUG this => &D.89813
  # DEBUG __x => D#225
  _12 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  D.89813._M_cur = _12;
  _75 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.89813._M_first = _75;
  _76 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  D.89813._M_last = _76;
  _77 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  D.89813._M_node = _77;
  std::copy<Credit*> (D.89813, __mid, &D.79383);
  D.79383 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#224 => &__x_2(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.89814
  # DEBUG __x => D#224
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  _73 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#2670 => &this_3(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.79391
  # DEBUG __x => D#2670
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.79391
  __first$_M_cur_225 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first$_M_cur => __first$_M_cur_225
  __first$_M_first_224 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __first$_M_first => __first$_M_first_224
  __first$_M_last_219 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first$_M_last => __first$_M_last_219
  __first$_M_node_218 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => NULL
  # DEBUG __x => &D.79391
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_225
  # DEBUG __first$_M_first => __first$_M_first_224
  # DEBUG __first$_M_last => __first$_M_last_219
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => &D.145335
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.145335
  # DEBUG __first$_M_cur => __first$_M_cur_225
  # DEBUG __first$_M_first => __first$_M_first_224
  # DEBUG __first$_M_last => __first$_M_last_219
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG D#2406 => __first
  # DEBUG D#2406 => __first
  # DEBUG D#2406 => __first
  # DEBUG D#2407 => __last
  # DEBUG D#2407 => __last
  # DEBUG D#2407 => __last
  # DEBUG D.126967 => D#2402
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 8
  _129 = (long int) _74;
  _130 = (long int) __first$_M_node_218;
  _131 = _129 - _130;
  _132 = _131 /[ex] 8;
  _133 = _132 + -1;
  _134 = _133 * 64;
  _135 = (long int) _13;
  _136 = (long int) _72;
  _137 = _135 - _136;
  _138 = _137 /[ex] 8;
  _139 = _134 + _138;
  _140 = (long int) __first$_M_last_219;
  _141 = (long int) __first$_M_cur_225;
  _142 = _140 - _141;
  _143 = _142 /[ex] 8;
  _144 = _139 + _143;
  __n_145 = (const size_type) _144;
  # DEBUG __n => __n_145
  _147 = this_3(D)->D.59602._M_impl._M_start._M_cur;
  if (_17 == _147)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_145
  _165 = (long int) _17;
  _166 = this_3(D)->D.59602._M_impl._M_start._M_first;
  _167 = (long int) _166;
  _168 = _165 - _167;
  _169 = _168 /[ex] 8;
  __vacancies_170 = (const size_type) _169;
  # DEBUG __vacancies => __vacancies_170
  if (__n_145 > __vacancies_170)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _171 = __n_145 - __vacancies_170;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_front (this_3(D), _171);
  pretmp_268 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_266 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;

  <bb 12>:
  # prephitmp_267 = PHI <_147(10), pretmp_268(11)>
  # prephitmp_265 = PHI <_166(10), pretmp_266(11)>
  # DEBUG D#3564 => &this_3(D)->D.59602._M_impl._M_start
  # DEBUG this => D#3564
  # DEBUG __n => _144
  # DEBUG this => &__tmp
  # DEBUG __x => D#3564
  __tmp._M_cur = prephitmp_267;
  __tmp._M_first = prephitmp_265;
  _176 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  __tmp._M_last = _176;
  _177 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  __tmp._M_node = _177;
  # DEBUG this => &__tmp
  # DEBUG __n => _144
  _178 = -_144;
  _179 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, _178);
  # DEBUG this => &__new_start
  # DEBUG __x => _179
  __new_start$_M_cur_180 = MEM[(const struct iterator &)_179]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_180
  __new_start$_M_first_181 = MEM[(const struct iterator &)_179]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_181
  __new_start$_M_last_182 = MEM[(const struct iterator &)_179]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_182
  __new_start$_M_node_183 = MEM[(const struct iterator &)_179]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_183
  __tmp ={v} {CLOBBER};
  # DEBUG D#2665 => &this_3(D)->D.59602
  # DEBUG this => D#2665
  # DEBUG this => &D.145358
  # DEBUG __x => &__new_start
  MEM[(struct _Deque_iterator *)&__first] = __first$_M_cur_225;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first$_M_first_224;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first$_M_last_219;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first$_M_node_218;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.145358
  # DEBUG D.145362 => D#1835
  # DEBUG this => &D.145366
  # DEBUG __x => &D.145358
  D.145366._M_cur = __new_start$_M_cur_180;
  D.145366._M_first = __new_start$_M_first_181;
  D.145366._M_last = __new_start$_M_last_182;
  D.145366._M_node = __new_start$_M_node_183;
  D.145365 = std::uninitialized_copy<std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>, std::_Deque_iterator<Credit*, Credit*&, Credit**> > (__first, __last, &D.145366); [return slot optimization]
  D.145366 ={v} {CLOBBER};
  D.145358 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_180;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_181;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_182;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_183;
  # DEBUG D#3569 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#3569
  # DEBUG D#3570 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#3570
  # DEBUG D#3571 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#3571
  # DEBUG D#3572 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#3572
  goto <bb 16>;

  <bb 13>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_145
  _189 = (long int) _70;
  _191 = (long int) _17;
  _192 = _189 - _191;
  _193 = _192 /[ex] 8;
  _194 = _193 + -1;
  __vacancies_195 = (const size_type) _194;
  # DEBUG __vacancies => __vacancies_195
  if (__n_145 > __vacancies_195)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _196 = __n_145 - __vacancies_195;
  std::deque<Credit*, std::allocator<Credit*> >::_M_new_elements_at_back (this_3(D), _196);
  pretmp_252 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;

  <bb 15>:
  # prephitmp_251 = PHI <_17(13), pretmp_252(14)>
  # prephitmp_242 = PHI <_70(13), pretmp_243(14)>
  # DEBUG D#3563 => &this_3(D)->D.59602._M_impl._M_finish
  # DEBUG this => D#3563
  # DEBUG __n => _144
  # DEBUG this => &__tmp
  # DEBUG __x => D#3563
  __tmp._M_cur = prephitmp_251;
  _200 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  __tmp._M_first = _200;
  __tmp._M_last = prephitmp_242;
  _202 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  __tmp._M_node = _202;
  _203 = std::_Deque_iterator<Credit*, Credit*&, Credit**>::operator+= (&__tmp, _144);
  # DEBUG this => &__new_finish
  # DEBUG __x => _203
  __new_finish$_M_cur_204 = MEM[(const struct iterator &)_203]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_204
  __new_finish$_M_first_205 = MEM[(const struct iterator &)_203]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_205
  __new_finish$_M_last_206 = MEM[(const struct iterator &)_203]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_206
  __new_finish$_M_node_207 = MEM[(const struct iterator &)_203]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_207
  __tmp ={v} {CLOBBER};
  # DEBUG D#2666 => &this_3(D)->D.59602
  # DEBUG this => D#2666
  # DEBUG D#2667 => &this_3(D)->D.59602._M_impl._M_finish
  # DEBUG this => &D.145357
  # DEBUG __x => D#2667
  _153 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  _154 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  _155 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  _156 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  MEM[(struct _Deque_iterator *)&__first] = __first$_M_cur_225;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first$_M_first_224;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first$_M_last_219;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first$_M_node_218;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.145357
  # DEBUG D.145382 => D#1835
  # DEBUG this => &D.145386
  # DEBUG __x => &D.145357
  D.145386._M_cur = _153;
  D.145386._M_first = _154;
  D.145386._M_last = _155;
  D.145386._M_node = _156;
  D.145385 = std::uninitialized_copy<std::_Deque_iterator<Credit*, Credit* const&, Credit* const*>, std::_Deque_iterator<Credit*, Credit*&, Credit**> > (__first, __last, &D.145386); [return slot optimization]
  D.145386 ={v} {CLOBBER};
  D.145357 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_204;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_205;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_206;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_207;
  # DEBUG D#3565 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#3565
  # DEBUG D#3566 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#3566
  # DEBUG D#3567 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#3567
  # DEBUG D#3568 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#3568

  <bb 16>:
  D.145335 ={v} {CLOBBER};
  D.79391 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};

  <bb 17>:
  return this_3(D);

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Credit*>*, std::vector<std::queue<Credit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Credit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Credit*>] (_ZNSt6vectorISt5queueIP6CreditSt5dequeIS2_SaIS2_EEESaIS6_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS6_S8_EEmRKS6_, funcdef_no=3339, decl_uid=52191, cgraph_uid=1688, symbol_order=1689)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Credit*>; _Alloc = std::allocator<std::queue<Credit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Credit*>*, std::vector<std::queue<Credit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Credit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Credit*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.145479;
  const size_type __len;
  size_type D.145478;
  size_type __n;
  struct queue * D.145469;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  bool _18;
  struct queue * _20;
  long int __last.245_21;
  struct queue * const _24;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct queue * _32;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _38;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  const struct deque * _52;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _62;
  struct queue * _63;
  struct queue * _67;
  long unsigned int _70;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  struct queue * _85;
  struct deque * _87;
  struct queue * _94;
  struct _Deque_base * _95;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  struct queue * prephitmp_120;
  long unsigned int pretmp_134;
  long unsigned int prephitmp_135;
  struct queue * _137;
  long unsigned int _139;
  bool _140;
  long int _141;
  long int _142;
  long int _143;
  long unsigned int _145;
  struct queue * pretmp_152;
  long unsigned int prephitmp_153;
  long int _163;
  long int _164;
  difference_type _165;
  difference_type _168;
  long int _172;
  long int _173;
  bool _174;
  long int _177;
  long int _183;

  <bb 2>:
  # DEBUG D#3574 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3574
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 47>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.52268._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.52268._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 29>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.130038 => __x_29(D)
  _52 = &MEM[(const struct queue &)__x_29(D)].c;
  std::deque<Credit*, std::allocator<Credit*> >::deque (&__x_copy.c, _52);
  # DEBUG this => this_9(D)
  # DEBUG D#226 => &this_9(D)->D.52268._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#226
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.73459
  # DEBUG __rhs => &__position
  # DEBUG this => &D.73459
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#2676 => &this_9(D)->D.52268
  # DEBUG this => D#2676
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#1841
  # DEBUG D#1840 => D#1841
  # DEBUG D#1839 => D#1840
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.130051 => D#1839
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__last_61, __old_finish_26, __old_finish_26);

  <bb 6>:
  _62 = this_9(D)->D.52268._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.52268._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3574
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __first => D#3574
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3574
  # DEBUG __it => D#3574
  # DEBUG __first => D#3574
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#3574
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.245_21 = (long int) __last_61;
  _73 = __last.245_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3574
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3574
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_171 = PHI <__old_finish_26(8), __old_finish_58(12)>
  # __last_161 = PHI <__last_61(8), __last_66(12)>
  # __n_166 = PHI <__n_72(8), __n_81(12)>
  # DEBUG __n => __n_166
  # DEBUG __result => __old_finish_171
  # DEBUG __last => __last_161
  __last_66 = __last_161 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_171 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.130081 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_80, _56);
  goto <bb 11>;

<L20>:
  goto <bb 49> (<L10>);

  <bb 11>:
  __n_81 = __n_166 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#1207 => &__x_copy.c
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.59602);
  __x_copy ={v} {CLOBBER};
  goto <bb 47>;

  <bb 14>:

  <bb 15>:
  # __position_157 = PHI <__position_23(14), __position_84(18)>
  # DEBUG __first => __position_157
  # DEBUG this => __position_157
  # DEBUG D.130092 => &__x_copy
  _83 = &__position_157->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_83, &__x_copy.c);
  goto <bb 17>;

<L21>:
  goto <bb 49> (<L10>);

  <bb 17>:
  __position_84 = __position_157 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#2677 => &this_9(D)->D.52268
  # DEBUG this => D#2677
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.130101 => D#1844
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _85 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<Credit*>*, long unsigned int, std::queue<Credit*> > (__old_finish_26, _70, &__x_copy);
  goto <bb 21>;

<L22>:
  goto <bb 49> (<L10>);

  <bb 21>:
  this_9(D)->D.52268._M_impl._M_finish = _85;
  # DEBUG D#2678 => &this_9(D)->D.52268
  # DEBUG this => D#2678
  # DEBUG this => &__position
  # DEBUG __first => D#3574
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __alloc => D#1841
  # DEBUG D#1840 => D#1841
  # DEBUG D#1839 => D#1840
  # DEBUG __first => D#3574
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG D.130114 => D#1839
  # DEBUG __first => D#3574
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__position_23, __old_finish_26, _85);
  goto <bb 23>;

<L23>:
  goto <bb 49> (<L10>);

  <bb 23>:
  _74 = this_9(D)->D.52268._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.52268._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3574
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3574
  if (__position_23 == __old_finish_26)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __position_170 = PHI <__position_23(24), __position_88(28)>
  # DEBUG __first => __position_170
  # DEBUG this => __position_170
  # DEBUG D.130135 => &__x_copy
  _87 = &__position_170->c;
  std::deque<Credit*, std::allocator<Credit*> >::operator= (_87, &__x_copy.c);
  goto <bb 27>;

<L24>:
  goto <bb 49> (<L10>);

  <bb 27>:
  __position_88 = __position_170 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1548 => this_9(D)
  # DEBUG this => D#1548
  # DEBUG D#1547 => D#1548
  # DEBUG D#1546 => &D#1547->D.54535
  # DEBUG this => D#1546
  # DEBUG __a => D#1545
  # DEBUG D#1544 => D#1545
  # DEBUG D#1543 => D#1544
  # DEBUG this => D#1543
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  _141 = (long int) _24;
  _142 = _13 - _141;
  _143 = _142 /[ex] 80;
  _144 = (const long unsigned int) _143;
  _145 = 230584300921369395 - _144;
  if (__n_7(D) > _145)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 31>:
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG __a => &D.145479
  # DEBUG __b => &__n
  _139 = MAX_EXPR <__n_7(D), _144>;
  __len_149 = _139 + _144;
  # DEBUG __len => __len_149
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG D#1548 => this_9(D)
  # DEBUG this => D#1548
  # DEBUG D#1547 => D#1548
  # DEBUG D#1546 => &D#1547->D.54535
  # DEBUG this => D#1546
  # DEBUG __a => D#1545
  # DEBUG D#1544 => D#1545
  # DEBUG D#1543 => D#1544
  # DEBUG this => D#1543
  _140 = __len_149 > 230584300921369395;
  _174 = _144 > __len_149;
  _18 = _140 | _174;
  if (_18 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 32>:
  pretmp_134 = __len_149 * 80;

  <bb 33>:
  # __elems_before_156 = PHI <__elems_before_169(62), __elems_before_181(32)>
  # _183 = PHI <_173(62), _164(32)>
  # prephitmp_135 = PHI <18446744073709551600(62), pretmp_134(32)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#391 => &this_9(D)->D.52268._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#391
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73492
  # DEBUG this => &__position
  # DEBUG this => &D.73492
  # DEBUG __elems_before => __elems_before_156
  # DEBUG D#2688 => &this_9(D)->D.52268
  # DEBUG D#1496 => D#2688
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  # DEBUG D#1554 => &D#1555->_M_impl
  # DEBUG D#1553 => D#1554
  # DEBUG __n => NULL
  # DEBUG __a => D#1553
  # DEBUG D#1552 => D#1553
  # DEBUG D#1550 => D#1552
  # DEBUG D#1551 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1550
  # DEBUG D.145467 => D#1551
  # DEBUG D#1549 => D#1550
  # DEBUG D#1543 => D#1549
  # DEBUG this => D#1543
  _137 = operator new (prephitmp_135);

  <bb 34>:
  # __new_finish_138 = PHI <0B(63), _137(33)>
  # __elems_before_182 = PHI <__elems_before_181(63), __elems_before_156(33)>
  # _177 = PHI <_164(63), _183(33)>
  # prephitmp_153 = PHI <0(63), prephitmp_135(33)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2672 => &this_9(D)->D.52268
  # DEBUG this => D#2672
  _27 = (long unsigned int) _177;
  __first_28 = __new_finish_138 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.130144 => D#1844
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<Credit*>*, long unsigned int, std::queue<Credit*> > (__first_28, __n_7(D), __x_29(D));

  <bb 35>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2673 => &this_9(D)->D.52268
  # DEBUG this => D#2673
  # DEBUG this => &__position
  _32 = this_9(D)->D.52268._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1843
  # DEBUG D#1842 => D#1843
  # DEBUG D#1839 => D#1842
  # DEBUG __first => _32
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG D.130165 => D#1839
  # DEBUG __first => _32
  # DEBUG __last => D#3574
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (_32, __position_23, __new_finish_138);
  goto <bb 37>;

<L26>:
  goto <bb 51> (<L13>);

  <bb 37>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 80;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#2674 => &this_9(D)->D.52268
  # DEBUG this => D#2674
  _36 = this_9(D)->D.52268._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3574
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#1843
  # DEBUG D#1842 => D#1843
  # DEBUG D#1839 => D#1842
  # DEBUG __first => D#3574
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.130184 => D#1839
  # DEBUG __first => D#3574
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _94 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Credit*>*, std::queue<Credit*>*> (__position_23, _36, __new_finish_34);
  goto <bb 39>;

<L27>:
  goto <bb 51> (<L13>);

  <bb 39>:
  # DEBUG __new_finish => _94
  # DEBUG D#2675 => &this_9(D)->D.52268
  # DEBUG this => D#2675
  _38 = this_9(D)->D.52268._M_impl._M_finish;
  __first_39 = this_9(D)->D.52268._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 44>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # __first_90 = PHI <__first_39(40), __first_96(42)>
  # DEBUG __first => __first_90
  # DEBUG __r => __first_90
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _95 = &MEM[(struct deque *)__first_90].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_95);
  MEM[(struct  &)__first_90] ={v} {CLOBBER};
  __first_96 = __first_90 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 41>;

  <bb 43>:
  pretmp_152 = this_9(D)->D.52268._M_impl._M_start;

  <bb 44>:
  # prephitmp_120 = PHI <pretmp_152(43), __first_39(39)>
  # DEBUG D#2686 => this_9(D)->D.52268._M_impl._M_end_of_storage
  # DEBUG D#2685 => (long int) D#2686
  # DEBUG D#3573 => this_9(D)->D.52268._M_impl._M_start
  # DEBUG D#2684 => (long int) D#3573
  # DEBUG D#2683 => D#2685 - D#2684
  # DEBUG D#2682 => D#2683 /[ex] 80
  # DEBUG D#2681 => &this_9(D)->D.52268
  # DEBUG D#673 => D#2681
  # DEBUG D#674 => (long unsigned int) D#2682
  # DEBUG __p => D#3573
  # DEBUG this => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  if (prephitmp_120 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#670 => &D#671->_M_impl
  # DEBUG D#668 => D#670
  # DEBUG D#669 => D#672
  # DEBUG __p => D#3573
  # DEBUG __a => D#668
  # DEBUG __n => D#669
  # DEBUG D#667 => D#669
  # DEBUG D#666 => D#668
  # DEBUG D#664 => D#666
  # DEBUG D#665 => D#667
  # DEBUG __p => D#3573
  # DEBUG this => D#664
  # DEBUG D.130207 => D#665
  operator delete (prephitmp_120);

  <bb 46>:
  this_9(D)->D.52268._M_impl._M_start = __new_finish_138;
  this_9(D)->D.52268._M_impl._M_finish = _94;
  _45 = __new_finish_138 + prephitmp_153;
  this_9(D)->D.52268._M_impl._M_end_of_storage = _45;

  <bb 47>:
  return;

<L19>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1207 => &__x_copy.c
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.59602);
  resx 2

<L25>:

  # __new_finish_1 = PHI <__new_finish_138(50), 0B(36), __new_finish_34(38)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 56>;

  <bb 53>:
  # DEBUG D#2679 => &this_9(D)->D.52268
  # DEBUG this => D#2679
  _49 = __n_7(D) + __elems_before_182;
  _50 = _49 * 80;
  _51 = __new_finish_138 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51

  <bb 54>:
  # __first_79 = PHI <__first_28(53), __first_98(55)>
  # DEBUG __first => __first_79
  if (_51 == __first_79)
    goto <bb 58>;
  else
    goto <bb 55>;

  <bb 55>:
  # DEBUG __r => __first_79
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _97 = &MEM[(struct deque *)__first_79].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_97);
  MEM[(struct  &)__first_79] ={v} {CLOBBER};
  __first_98 = __first_79 + 80;
  # DEBUG __first => __first_98
  goto <bb 54>;

  <bb 56>:
  # __new_finish_99 = PHI <__new_finish_138(52), __new_finish_101(57)>
  # DEBUG __first => __new_finish_99
  if (__new_finish_1 == __new_finish_99)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:
  # DEBUG __r => __new_finish_99
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _100 = &MEM[(struct deque *)__new_finish_99].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_99] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_99 + 80;
  # DEBUG __first => __new_finish_101
  goto <bb 56>;

  <bb 58>:
  # DEBUG D#2687 => &this_9(D)->D.52268
  # DEBUG D#673 => D#2687
  # DEBUG __p => NULL
  # DEBUG this => D#673
  # DEBUG __n => D#674
  # DEBUG D#672 => D#674
  # DEBUG D#671 => D#673
  if (__new_finish_138 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#670 => &D#671->_M_impl
  # DEBUG D#668 => D#670
  # DEBUG D#669 => D#672
  # DEBUG __p => NULL
  # DEBUG __a => D#668
  # DEBUG __n => D#669
  # DEBUG D#667 => D#669
  # DEBUG D#666 => D#668
  # DEBUG D#664 => D#666
  # DEBUG D#665 => D#667
  # DEBUG __p => NULL
  # DEBUG this => D#664
  # DEBUG D.130258 => D#665
  operator delete (__new_finish_138);

  <bb 60>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 62>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#391 => &this_9(D)->D.52268._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#391
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73492
  # DEBUG this => &__position
  _172 = (long int) __position_23;
  # DEBUG this => &D.73492
  _173 = _172 - _141;
  _168 = _173 /[ex] 80;
  __elems_before_169 = (const size_type) _168;
  # DEBUG __elems_before => __elems_before_169
  # DEBUG D#2688 => &this_9(D)->D.52268
  # DEBUG D#1496 => D#2688
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  goto <bb 33>;

  <bb 63>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#391 => &this_9(D)->D.52268._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#391
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73492
  # DEBUG this => &__position
  _163 = (long int) __position_23;
  # DEBUG this => &D.73492
  _164 = _163 - _141;
  _165 = _164 /[ex] 80;
  __elems_before_181 = (const size_type) _165;
  # DEBUG __elems_before => __elems_before_181
  # DEBUG D#2688 => &this_9(D)->D.52268
  # DEBUG D#1496 => D#2688
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  if (__len_149 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIP4FlitSaIS1_EE13_M_insert_auxISt15_Deque_iteratorIS1_RKS1_PS6_EEEvS5_IS1_RS1_PS1_ET_SD_m, funcdef_no=4936, decl_uid=81728, cgraph_uid=3285, symbol_order=3286)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>; _Tp = Flit*; _Alloc = std::allocator<Flit*>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<Flit*, Flit*&, Flit**>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct deque * const this, struct iterator & restrict __pos, struct _Deque_iterator __first, struct _Deque_iterator __last, size_type __n)
{
  struct Flit * * * __last1$_M_node;
  struct Flit * * __last1$_M_last;
  struct Flit * * __last1$_M_first;
  struct Flit * * __last1$_M_cur;
  struct Flit * * * __first1$_M_node;
  struct Flit * * __first1$_M_last;
  struct Flit * * __first1$_M_first;
  struct Flit * * __first1$_M_cur;
  struct Flit * * * SR.6528;
  struct Flit * * SR.6527;
  struct Flit * * SR.6526;
  struct Flit * * SR.6525;
  struct Flit * * * __last2$_M_node;
  struct Flit * * __last2$_M_last;
  struct Flit * * __last2$_M_first;
  struct Flit * * __last2$_M_cur;
  struct Flit * * * __first2$_M_node;
  struct Flit * * __first2$_M_last;
  struct Flit * * __first2$_M_first;
  struct Flit * * __first2$_M_cur;
  struct Flit * * * SR.6516;
  struct Flit * * SR.6515;
  struct Flit * * SR.6514;
  struct Flit * * SR.6513;
  struct Flit * * * __new_finish$_M_node;
  struct Flit * * __new_finish$_M_last;
  struct Flit * * __new_finish$_M_first;
  struct Flit * * __new_finish$_M_cur;
  struct Flit * * * SR.6508;
  struct Flit * * SR.6507;
  struct Flit * * SR.6506;
  struct Flit * * SR.6505;
  struct Flit * * * __new_start$_M_node;
  struct Flit * * __new_start$_M_last;
  struct Flit * * __new_start$_M_first;
  struct Flit * * __new_start$_M_cur;
  struct _Deque_iterator D.145698;
  struct _Deque_iterator D.145697;
  struct _Deque_iterator D.145696;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.145695;
  struct _Deque_iterator D.145694;
  struct _Deque_iterator __first1;
  struct _Deque_iterator __last1;
  difference_type __len;
  difference_type __llen;
  struct Flit * * __lend;
  difference_type __rlen;
  struct Flit * * __rend;
  const difference_type __clen;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.145649;
  struct _Deque_iterator D.145648;
  struct _Deque_iterator D.145647;
  struct _Deque_iterator D.145646;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator D.145617;
  struct _Deque_iterator D.145616;
  struct _Deque_iterator D.145615;
  struct _Deque_iterator __mid;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct _Deque_iterator D.145614;
  struct _Deque_iterator D.145613;
  struct _Deque_iterator __first2;
  struct _Deque_iterator __last2;
  struct _Self __tmp;
  struct _Deque_iterator D.145584;
  struct _Deque_iterator D.145583;
  struct _Deque_iterator D.145582;
  struct _Deque_iterator D.145581;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Self __tmp;
  struct _Deque_iterator __mid;
  struct iterator __finish_n;
  const difference_type __elemsafter;
  struct iterator __new_finish;
  struct _Deque_iterator __mid;
  struct iterator __start_n;
  struct iterator __new_start;
  struct _Deque_iterator D.82069;
  struct _Deque_iterator D.82063;
  struct _Deque_iterator D.82064;
  struct _Deque_iterator D.82065;
  struct _Deque_iterator D.82050;
  struct _Deque_iterator D.82044;
  struct _Deque_iterator D.82045;
  struct _Deque_iterator D.82046;
  struct _Deque_iterator D.82032;
  struct _Deque_iterator D.82033;
  struct _Deque_iterator D.82034;
  struct _Self D.82029;
  struct _Deque_iterator D.82022;
  struct _Deque_iterator D.82014;
  struct _Deque_iterator D.82015;
  struct _Deque_iterator D.82018;
  struct _Self D.81998;
  struct _Deque_iterator D.81994;
  struct _Deque_iterator D.81995;
  struct _Deque_iterator D.81996;
  struct _Deque_iterator D.81982;
  struct _Deque_iterator D.81983;
  struct _Deque_iterator D.81984;
  struct _Self D.81974;
  long int _7;
  long int _8;
  long unsigned int _9;
  long unsigned int __elemsbefore.221_10;
  struct Flit * * * const prephitmp_13;
  struct Flit * * * const prephitmp_20;
  struct Flit * * _27;
  struct Flit * * _28;
  struct Flit * * _29;
  long int _38;
  struct Flit * * _39;
  struct Flit * * _42;
  struct Flit * * _48;
  struct iterator * _56;
  struct Flit * * _57;
  long int _62;
  struct Flit * * _63;
  struct Flit * * _69;
  struct Flit * * _75;
  struct Flit * * * _80;
  long int __len.225_81;
  struct Flit * * _82;
  struct Flit * * _88;
  long int _93;
  long int _94;
  struct Flit * * _95;
  long int _96;
  struct Flit * * _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  difference_type _102;
  size_type _103;
  struct Flit * * * _104;
  long int _105;
  struct Flit * * * _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  struct Flit * * _112;
  long int _113;
  struct Flit * * _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  struct Flit * * _119;
  long int _120;
  struct Flit * * _121;
  long int _122;
  long int _123;
  long int _124;
  difference_type _125;
  struct Flit * * _126;
  struct Flit * * _127;
  struct Flit * * _128;
  struct Flit * * * _129;
  struct Flit * * const pretmp_130;
  struct Flit * * const prephitmp_131;
  struct Flit * * * const pretmp_132;
  struct Flit * * _133;
  struct Flit * * _134;
  struct Flit * * * _135;
  struct Flit * * _136;
  struct Flit * * _137;
  struct Flit * * * _138;
  struct Flit * * const pretmp_140;
  struct Flit * * const prephitmp_141;
  struct Flit * * _145;
  struct Flit * * _146;
  struct Flit * * * _147;
  struct Flit * * _148;
  struct Flit * * _149;
  struct Flit * * * _150;
  struct Flit * * pretmp_151;
  struct Flit * * _154;
  struct Flit * * _155;
  struct Flit * * * _156;
  struct Flit * * _157;
  struct Flit * * _161;
  struct Flit * * * _162;
  struct Flit * * _166;
  struct Flit * * _167;
  struct Flit * * * _168;
  struct Flit * * _169;
  struct Flit * * _170;
  struct Flit * * * _171;
  struct Flit * * _172;
  struct Flit * * _173;
  struct Flit * * _174;
  struct Flit * * * _175;
  struct Flit * * _176;
  struct Flit * * _177;
  struct Flit * * * _178;
  struct Flit * * _179;
  struct Flit * * _180;
  struct Flit * * * _181;
  struct Flit * * prephitmp_269;
  struct Flit * * const pretmp_271;
  struct _Self & _272;
  struct Flit * * _278;
  long int _279;
  long int _280;
  long int _281;
  long unsigned int _283;
  long int __n.208_284;
  long int _289;
  struct _Self & _290;
  struct Flit * * const prephitmp_295;
  struct Flit * * prephitmp_301;
  struct Flit * * prephitmp_302;
  struct Flit * * pretmp_303;
  struct Flit * * pretmp_304;
  struct Flit * * prephitmp_306;
  struct Flit * * _307;
  struct Flit * * _308;
  struct Flit * * * _309;
  struct _Self & _310;
  struct Flit * * _311;
  struct Flit * * _312;
  struct Flit * * _313;
  struct Flit * * * _314;
  struct Flit * * _326;
  struct Flit * * _327;
  struct Flit * * _328;
  struct Flit * * * _329;
  long int _333;
  struct _Self & _334;
  long int _339;
  long int _342;
  long int _343;
  long int _344;
  long unsigned int _346;
  long int __n.219_347;
  struct _Self & _352;
  long int _369;
  long int _371;
  long int _372;
  long int _373;
  long int _374;
  long int _375;
  long int _377;
  long int _379;
  long int _380;
  long int _381;
  long int _382;
  long int _384;
  long int _386;
  long int _387;
  long int _388;
  struct Flit * * const prephitmp_390;
  long int _392;
  long int _394;
  long int _395;
  long int _398;
  long int _400;
  long int _401;
  struct Flit * * * _403;
  struct Flit * * _404;
  struct Flit * * * _406;
  struct Flit * * _407;
  struct Flit * * const pretmp_409;
  struct Flit * * const prephitmp_410;
  struct Flit * * * const prephitmp_411;
  long unsigned int __clen.234_415;
  long unsigned int _416;
  sizetype _417;
  struct Flit * * _419;
  long int _421;
  struct Flit * * _431;
  struct Flit * * _432;
  struct Flit * * _433;
  struct Flit * * * _434;
  struct Flit * * * const pretmp_445;
  struct Flit * * const prephitmp_446;
  struct Flit * * const prephitmp_494;
  struct Flit * * const pretmp_495;
  struct Flit * * const pretmp_557;
  struct Flit * * * const pretmp_558;
  struct Flit * * const prephitmp_559;
  struct Flit * * const pretmp_560;
  struct Flit * * pretmp_570;
  long int _575;
  struct Flit * * const pretmp_576;

  <bb 2>:
  # DEBUG D#2612 => &this_4(D)->D.44077._M_impl._M_start
  # DEBUG __x => __pos_6(D)
  # DEBUG __y => D#2612
  # DEBUG __size => 8
  _104 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_node;
  _105 = (long int) _104;
  _106 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_node;
  _107 = (long int) _106;
  _108 = _105 - _107;
  _109 = _108 /[ex] 8;
  _110 = _109 + -1;
  _111 = _110 * 64;
  _112 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_cur;
  _113 = (long int) _112;
  _114 = MEM[(const struct _Deque_iterator &)__pos_6(D)]._M_first;
  _115 = (long int) _114;
  _116 = _113 - _115;
  _117 = _116 /[ex] 8;
  _118 = _111 + _117;
  _119 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_last;
  _120 = (long int) _119;
  _121 = MEM[(const struct _Deque_iterator &)this_4(D) + 16]._M_cur;
  _122 = (long int) _121;
  _123 = _120 - _122;
  _124 = _123 /[ex] 8;
  _125 = _118 + _124;
  # DEBUG __elemsbefore => _125
  # DEBUG this => this_4(D)
  # DEBUG D#209 => &MEM[(const struct deque *)this_4(D)].D.44077._M_impl._M_start
  # DEBUG D#210 => &MEM[(const struct deque *)this_4(D)].D.44077._M_impl._M_finish
  # DEBUG __x => D#210
  # DEBUG __y => D#209
  # DEBUG __size => 8
  _80 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_node;
  _62 = (long int) _80;
  _8 = _62 - _107;
  _7 = _8 /[ex] 8;
  _93 = _7 + -1;
  _94 = _93 * 64;
  _95 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_cur;
  _96 = (long int) _95;
  _97 = MEM[(const struct _Deque_iterator &)this_4(D) + 48]._M_first;
  _98 = (long int) _97;
  _99 = _96 - _98;
  _100 = _99 /[ex] 8;
  _101 = _94 + _100;
  _102 = _101 + _124;
  _103 = (size_type) _102;
  # DEBUG __length => _103
  _9 = _103 >> 1;
  __elemsbefore.221_10 = (long unsigned int) _125;
  if (_9 > __elemsbefore.221_10)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _278 = this_4(D)->D.44077._M_impl._M_start._M_first;
  _279 = (long int) _278;
  _280 = _122 - _279;
  _281 = _280 /[ex] 8;
  __vacancies_282 = (const size_type) _281;
  # DEBUG __vacancies => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _283 = __n_11(D) - __vacancies_282;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_front (this_4(D), _283);
  pretmp_271 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  pretmp_140 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  pretmp_130 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  pretmp_132 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;

  <bb 5>:
  # prephitmp_131 = PHI <_121(3), pretmp_271(4)>
  # prephitmp_295 = PHI <_278(3), pretmp_140(4)>
  # prephitmp_141 = PHI <_119(3), pretmp_130(4)>
  # prephitmp_13 = PHI <_106(3), pretmp_132(4)>
  __n.208_284 = (long int) __n_11(D);
  # DEBUG D#3585 => &this_4(D)->D.44077._M_impl._M_start
  # DEBUG this => D#3585
  # DEBUG __n => __n.208_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#3585
  __tmp._M_cur = prephitmp_131;
  __tmp._M_first = prephitmp_295;
  __tmp._M_last = prephitmp_141;
  __tmp._M_node = prephitmp_13;
  # DEBUG this => &__tmp
  # DEBUG __n => __n.208_284
  _289 = -__n.208_284;
  _290 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, _289);
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  __new_start$_M_cur_291 = MEM[(const struct iterator &)_290]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_291
  __new_start$_M_first_292 = MEM[(const struct iterator &)_290]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_292
  __new_start$_M_last_293 = MEM[(const struct iterator &)_290]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_293
  __new_start$_M_node_294 = MEM[(const struct iterator &)_290]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_294
  __tmp ={v} {CLOBBER};
  # DEBUG D#2613 => &this_4(D)->D.44077._M_impl._M_start
  # DEBUG this => &__old_start
  # DEBUG __x => D#2613
  _126 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  # DEBUG __old_start$_M_cur => _126
  _127 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  # DEBUG __old_start$_M_first => _127
  _128 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  # DEBUG __old_start$_M_last => _128
  _129 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __old_start$_M_node => _129
  # DEBUG D#3586 => &this_4(D)->D.44077._M_impl._M_start
  # DEBUG this => D#3586
  # DEBUG __n => _125
  # DEBUG this => &__tmp
  # DEBUG __x => D#3586
  __tmp._M_cur = _126;
  __tmp._M_first = _127;
  __tmp._M_last = _128;
  __tmp._M_node = _129;
  _272 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, _125);
  # DEBUG this => &D.81974
  # DEBUG __x => _272
  SR.6505_273 = MEM[(const struct iterator &)_272]._M_cur;
  SR.6506_274 = MEM[(const struct iterator &)_272]._M_first;
  SR.6507_275 = MEM[(const struct iterator &)_272]._M_last;
  SR.6508_276 = MEM[(const struct iterator &)_272]._M_node;
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.6505_273;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.6506_274;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.6507_275;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.6508_276;
  if (_125 >= __n.208_284)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG this => D#3586
  # DEBUG __n => __n.208_284
  # DEBUG this => &__tmp
  # DEBUG __x => D#3586
  _29 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  __tmp._M_cur = _29;
  _307 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  __tmp._M_first = _307;
  _308 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  __tmp._M_last = _308;
  _309 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  __tmp._M_node = _309;
  _310 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, __n.208_284);
  # DEBUG this => &__start_n
  # DEBUG __x => _310
  _311 = MEM[(const struct iterator &)_310]._M_cur;
  _312 = MEM[(const struct iterator &)_310]._M_first;
  _313 = MEM[(const struct iterator &)_310]._M_last;
  _314 = MEM[(const struct iterator &)_310]._M_node;
  __tmp ={v} {CLOBBER};
  # DEBUG D#2614 => &this_4(D)->D.44077
  # DEBUG this => D#2614
  # DEBUG this => &D.81984
  # DEBUG __x => &__new_start
  D.81984._M_cur = __new_start$_M_cur_291;
  D.81984._M_first = __new_start$_M_first_292;
  D.81984._M_last = __new_start$_M_last_293;
  D.81984._M_node = __new_start$_M_node_294;
  # DEBUG this => &D.81983
  # DEBUG __x => &__start_n
  D.81983._M_cur = _311;
  D.81983._M_first = _312;
  D.81983._M_last = _313;
  D.81983._M_node = _314;
  # DEBUG D#2615 => &this_4(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.81982
  # DEBUG __x => D#2615
  _27 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  D.81982._M_cur = _27;
  _136 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  D.81982._M_first = _136;
  _137 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  D.81982._M_last = _137;
  _138 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  D.81982._M_node = _138;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.631 (&D.81982, &D.81983, &D.81984);
  D.81982 ={v} {CLOBBER};
  D.81983 ={v} {CLOBBER};
  D.81984 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_291;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_292;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_293;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_294;
  # DEBUG this => &D.81996
  # DEBUG __x => &__old_start
  # DEBUG this => &D.81995
  # DEBUG __x => __pos_6(D)
  _28 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _133 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _134 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _135 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG this => &D.81994
  # DEBUG __x => &__start_n
  # DEBUG __first => &D.81994
  # DEBUG __last => &D.81995
  # DEBUG __result => &D.81996
  # DEBUG this => &D.145584
  # DEBUG __x => &D.81996
  D.145584._M_cur = _126;
  D.145584._M_first = _127;
  D.145584._M_last = _128;
  D.145584._M_node = _129;
  # DEBUG this => &D.145583
  # DEBUG __x => &D.81995
  D.145583._M_cur = _28;
  D.145583._M_first = _133;
  D.145583._M_last = _134;
  D.145583._M_node = _135;
  # DEBUG this => &D.145582
  # DEBUG __x => &D.81994
  D.145582._M_cur = _311;
  D.145582._M_first = _312;
  D.145582._M_last = _313;
  D.145582._M_node = _314;
  D.145581 = std::copy<Flit*> (D.145582, D.145583, &D.145584); [return slot optimization]
  D.145582 ={v} {CLOBBER};
  D.145583 ={v} {CLOBBER};
  D.145584 ={v} {CLOBBER};
  D.81994 ={v} {CLOBBER};
  D.81995 ={v} {CLOBBER};
  D.81996 ={v} {CLOBBER};
  D.81998 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator- (__pos_6(D), __n.208_284); [return slot optimization]
  std::copy<Flit*> (__first, __last, &D.81998);
  D.81998 ={v} {CLOBBER};
  __start_n ={v} {CLOBBER};
  goto <bb 8>;

  <bb 7>:
  __mid = __first;
  _38 = __n.208_284 - _125;
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  # DEBUG __d => _38
  # DEBUG D#2396 => &__mid
  # DEBUG D.128087 => D#2396
  # DEBUG __i => &__mid
  # DEBUG __n => _38
  std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>::operator+= (&__mid, _38);
  # DEBUG D#2616 => &this_4(D)->D.44077
  # DEBUG this => D#2616
  # DEBUG D#3588 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG this => &D.82018
  # DEBUG __x => &__new_start
  # DEBUG this => &D.82015
  # DEBUG __x => __pos_6(D)
  _42 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _148 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _149 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _150 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG D#2617 => &this_4(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.82014
  # DEBUG __x => D#2617
  _48 = MEM[(const struct iterator &)this_4(D) + 16]._M_cur;
  _145 = MEM[(const struct iterator &)this_4(D) + 16]._M_first;
  _146 = MEM[(const struct iterator &)this_4(D) + 16]._M_last;
  _147 = MEM[(const struct iterator &)this_4(D) + 16]._M_node;
  # DEBUG __first1 => &D.82014
  # DEBUG __last1 => &D.82015
  __first2$_M_cur_527 = MEM[(struct _Deque_iterator *)&__first];
  # DEBUG __first2$_M_cur => __first2$_M_cur_527
  __first2$_M_first_52 = MEM[(struct _Deque_iterator *)&__first + 8B];
  # DEBUG __first2$_M_first => __first2$_M_first_52
  __first2$_M_last_47 = MEM[(struct _Deque_iterator *)&__first + 16B];
  # DEBUG __first2$_M_last => __first2$_M_last_47
  __first2$_M_node_513 = MEM[(struct _Deque_iterator *)&__first + 24B];
  # DEBUG __first2$_M_node => __first2$_M_node_513
  __last2$_M_cur_512 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __last2$_M_cur => __last2$_M_cur_512
  __last2$_M_first_26 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __last2$_M_first => __last2$_M_first_26
  __last2$_M_last_17 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __last2$_M_last => __last2$_M_last_17
  __last2$_M_node_16 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __last2$_M_node => __last2$_M_node_16
  # DEBUG __result => &D.82018
  # DEBUG __alloc => D#3588
  # DEBUG this => &D.145617
  # DEBUG __x => &D.82018
  D.145617._M_cur = __new_start$_M_cur_291;
  D.145617._M_first = __new_start$_M_first_292;
  D.145617._M_last = __new_start$_M_last_293;
  D.145617._M_node = __new_start$_M_node_294;
  # DEBUG this => &D.145616
  # DEBUG __x => &D.82015
  D.145616._M_cur = _42;
  D.145616._M_first = _148;
  D.145616._M_last = _149;
  D.145616._M_node = _150;
  # DEBUG this => &D.145615
  # DEBUG __x => &D.82014
  D.145615._M_cur = _48;
  D.145615._M_first = _145;
  D.145615._M_last = _146;
  D.145615._M_node = _147;
  # DEBUG D#2611 => D#3588
  __mid = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.631 (&D.145615, &D.145616, &D.145617); [return slot optimization]
  D.145615 ={v} {CLOBBER};
  D.145616 ={v} {CLOBBER};
  D.145617 ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG __x => &__mid
  _326 = __mid._M_cur;
  _327 = __mid._M_first;
  _328 = __mid._M_last;
  _329 = __mid._M_node;
  # DEBUG D#1824 => D#3588
  MEM[(struct _Deque_iterator *)&__first] = __first2$_M_cur_527;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first2$_M_first_52;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first2$_M_last_47;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first2$_M_node_513;
  MEM[(struct _Deque_iterator *)&__last] = __last2$_M_cur_512;
  MEM[(struct _Deque_iterator *)&__last + 8B] = __last2$_M_first_26;
  MEM[(struct _Deque_iterator *)&__last + 16B] = __last2$_M_last_17;
  MEM[(struct _Deque_iterator *)&__last + 24B] = __last2$_M_node_16;
  # DEBUG __result => NULL
  # DEBUG D.145607 => D#1824
  # DEBUG this => &D.145614
  # DEBUG __x => NULL
  D.145614._M_cur = _326;
  D.145614._M_first = _327;
  D.145614._M_last = _328;
  D.145614._M_node = _329;
  D.145613 = std::uninitialized_copy<std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>, std::_Deque_iterator<Flit*, Flit*&, Flit**> > (__first, __last, &D.145614); [return slot optimization]
  D.145614 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.82014 ={v} {CLOBBER};
  D.82015 ={v} {CLOBBER};
  D.82018 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 16B] = __new_start$_M_cur_291;
  MEM[(struct deque *)this_4(D) + 24B] = __new_start$_M_first_292;
  MEM[(struct deque *)this_4(D) + 32B] = __new_start$_M_last_293;
  MEM[(struct deque *)this_4(D) + 40B] = __new_start$_M_node_294;
  # DEBUG this => &D.82022
  # DEBUG __x => &__old_start
  D.82022._M_cur = _126;
  D.82022._M_first = _127;
  D.82022._M_last = _128;
  D.82022._M_node = _129;
  std::copy<Flit*> (__mid, __last, &D.82022);
  D.82022 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};

  <bb 8>:

  <bb 24>:
  # DEBUG D#3593 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#3593
  # DEBUG D#3594 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#3594
  # DEBUG D#3595 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#3595
  # DEBUG D#3596 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#3596
  return;

  <bb 9>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_11(D)
  _57 = this_4(D)->D.44077._M_impl._M_finish._M_last;
  _339 = (long int) _57;
  _342 = _339 - _96;
  _343 = _342 /[ex] 8;
  _344 = _343 + -1;
  __vacancies_345 = (const size_type) _344;
  # DEBUG __vacancies => __vacancies_345
  if (__n_11(D) > __vacancies_345)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _346 = __n_11(D) - __vacancies_345;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_back (this_4(D), _346);
  pretmp_560 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  pretmp_409 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  pretmp_557 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  pretmp_558 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;

  <bb 11>:
  # prephitmp_559 = PHI <_95(9), pretmp_560(10)>
  # prephitmp_410 = PHI <_97(9), pretmp_409(10)>
  # prephitmp_390 = PHI <_57(9), pretmp_557(10)>
  # prephitmp_411 = PHI <_80(9), pretmp_558(10)>
  __n.219_347 = (long int) __n_11(D);
  # DEBUG D#3587 => &this_4(D)->D.44077._M_impl._M_finish
  # DEBUG this => D#3587
  # DEBUG __n => __n.219_347
  # DEBUG this => &__tmp
  # DEBUG __x => D#3587
  __tmp._M_cur = prephitmp_559;
  __tmp._M_first = prephitmp_410;
  __tmp._M_last = prephitmp_390;
  __tmp._M_node = prephitmp_411;
  _352 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, __n.219_347);
  # DEBUG this => &__new_finish
  # DEBUG __x => _352
  __new_finish$_M_cur_353 = MEM[(const struct iterator &)_352]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_353
  __new_finish$_M_first_354 = MEM[(const struct iterator &)_352]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_354
  __new_finish$_M_last_355 = MEM[(const struct iterator &)_352]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_355
  __new_finish$_M_node_356 = MEM[(const struct iterator &)_352]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_356
  __tmp ={v} {CLOBBER};
  # DEBUG D#2618 => &this_4(D)->D.44077._M_impl._M_finish
  # DEBUG this => &__old_finish
  # DEBUG __x => D#2618
  _39 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  # DEBUG __old_finish$_M_cur => _39
  _154 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  # DEBUG __old_finish$_M_first => _154
  _155 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  # DEBUG __old_finish$_M_last => _155
  _156 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG __old_finish$_M_node => _156
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafter => __elemsafter_55
  # DEBUG D#3603 => &this_4(D)->D.44077._M_impl._M_finish
  # DEBUG this => D#3603
  # DEBUG __n => __elemsafter_55
  # DEBUG this => &__tmp
  # DEBUG __x => D#3603
  __tmp._M_cur = _39;
  __tmp._M_first = _154;
  __tmp._M_last = _155;
  __tmp._M_node = _156;
  # DEBUG this => &__tmp
  # DEBUG __n => __elemsafter_55
  _333 = -__elemsafter_55;
  _334 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, _333);
  # DEBUG this => &D.82029
  # DEBUG __x => NULL
  SR.6513_335 = MEM[(const struct iterator &)_334]._M_cur;
  SR.6514_336 = MEM[(const struct iterator &)_334]._M_first;
  SR.6515_337 = MEM[(const struct iterator &)_334]._M_last;
  SR.6516_338 = MEM[(const struct iterator &)_334]._M_node;
  __tmp ={v} {CLOBBER};
  MEM[(struct iterator &)__pos_6(D)] = SR.6513_335;
  MEM[(struct iterator &)__pos_6(D) + 8] = SR.6514_336;
  MEM[(struct iterator &)__pos_6(D) + 16] = SR.6515_337;
  MEM[(struct iterator &)__pos_6(D) + 24] = SR.6516_338;
  if (__elemsafter_55 > __n.219_347)
    goto <bb 12>;
  else
    goto <bb 22>;

  <bb 12>:
  _56 = &this_4(D)->D.44077._M_impl._M_finish;
  __finish_n = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator- (_56, __n.219_347); [return slot optimization]
  # DEBUG D#2619 => &this_4(D)->D.44077
  # DEBUG this => D#2619
  # DEBUG D#2620 => &this_4(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.82034
  # DEBUG __x => D#2620
  _63 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  D.82034._M_cur = _63;
  _169 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  D.82034._M_first = _169;
  _170 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  D.82034._M_last = _170;
  _171 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  D.82034._M_node = _171;
  # DEBUG D#2621 => &this_4(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.82033
  # DEBUG __x => D#2621
  D.82033._M_cur = _63;
  D.82033._M_first = _169;
  D.82033._M_last = _170;
  D.82033._M_node = _171;
  # DEBUG this => &D.82032
  # DEBUG __x => &__finish_n
  _69 = __finish_n._M_cur;
  D.82032._M_cur = _69;
  _166 = __finish_n._M_first;
  D.82032._M_first = _166;
  _167 = __finish_n._M_last;
  D.82032._M_last = _167;
  _168 = __finish_n._M_node;
  D.82032._M_node = _168;
  std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.631 (&D.82032, &D.82033, &D.82034);
  D.82032 ={v} {CLOBBER};
  D.82033 ={v} {CLOBBER};
  D.82034 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_353;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_354;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_355;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_356;
  # DEBUG this => &D.82046
  # DEBUG __x => &__old_finish
  # DEBUG this => &D.82045
  # DEBUG __x => &__finish_n
  SR.6525_70 = __finish_n._M_cur;
  SR.6526_163 = __finish_n._M_first;
  SR.6527_164 = __finish_n._M_last;
  SR.6528_165 = __finish_n._M_node;
  # DEBUG this => &D.82044
  # DEBUG __x => __pos_6(D)
  _75 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _161 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _162 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  # DEBUG __first => &D.82044
  # DEBUG __last => &D.82045
  # DEBUG __result => &D.82046
  # DEBUG this => &D.145649
  # DEBUG __x => &D.82046
  D.145649._M_cur = _39;
  D.145649._M_first = _154;
  D.145649._M_last = _155;
  D.145649._M_node = _156;
  # DEBUG this => &D.145648
  # DEBUG __x => &D.82045
  # DEBUG this => &D.145647
  # DEBUG __x => &D.82044
  MEM[(struct _Deque_iterator *)&__last] = SR.6525_70;
  MEM[(struct _Deque_iterator *)&__last + 8B] = SR.6526_163;
  MEM[(struct _Deque_iterator *)&__last + 16B] = SR.6527_164;
  MEM[(struct _Deque_iterator *)&__last + 24B] = SR.6528_165;
  # DEBUG __result => &D.145649
  # DEBUG __x => &__last
  # DEBUG __y => &__first
  # DEBUG __size => 8
  _369 = (long int) SR.6528_165;
  _371 = (long int) _162;
  _372 = _369 - _371;
  _373 = _372 /[ex] 8;
  _374 = _373 + -1;
  _375 = _374 * 64;
  _377 = (long int) SR.6525_70;
  _379 = (long int) SR.6526_163;
  _380 = _377 - _379;
  _381 = _380 /[ex] 8;
  _382 = _375 + _381;
  _384 = (long int) _161;
  _386 = (long int) _75;
  _387 = _384 - _386;
  _388 = _387 /[ex] 8;
  __len_389 = _382 + _388;
  # DEBUG __len => __len_389
  if (__len_389 <= 0)
    goto <bb 21>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # __len.225_81 = PHI <__len_389(13), __len_422(19)>
  # prephitmp_269 = PHI <SR.6525_70(13), pretmp_570(19)>
  # prephitmp_301 = PHI <SR.6526_163(13), pretmp_151(19)>
  # prephitmp_306 = PHI <_39(13), pretmp_303(19)>
  # prephitmp_302 = PHI <_154(13), pretmp_304(19)>
  # DEBUG D#3602 => __last._M_cur
  _392 = (long int) prephitmp_269;
  _394 = (long int) prephitmp_301;
  _395 = _392 - _394;
  __llen_396 = _395 /[ex] 8;
  # DEBUG __llen => __llen_396
  # DEBUG __lend => D#3602
  # DEBUG D#3601 => D.145649._M_cur
  _398 = (long int) prephitmp_306;
  _400 = (long int) prephitmp_302;
  _401 = _398 - _400;
  __rlen_402 = _401 /[ex] 8;
  # DEBUG __rlen => __rlen_402
  # DEBUG __rend => D#3601
  if (__llen_396 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG __size => 8
  # DEBUG __llen => 64
  _403 = __last._M_node;
  _404 = MEM[(struct Flit * * *)_403 + -8B];
  __lend_405 = _404 + 512;
  # DEBUG __lend => __lend_405

  <bb 16>:
  # __lend_418 = PHI <prephitmp_269(14), __lend_405(15)>
  # __llen_571 = PHI <__llen_396(14), 64(15)>
  # DEBUG __llen => __llen_571
  # DEBUG __lend => __lend_418
  if (__rlen_402 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG __size => 8
  # DEBUG __rlen => 64
  _406 = D.145649._M_node;
  _407 = MEM[(struct Flit * * *)_406 + -8B];
  __rend_408 = _407 + 512;
  # DEBUG __rend => __rend_408

  <bb 18>:
  # __rend_420 = PHI <prephitmp_306(16), __rend_408(17)>
  # __rlen_566 = PHI <__rlen_402(16), 64(17)>
  # DEBUG __rlen => __rlen_566
  # DEBUG __rend => __rend_420
  # DEBUG __a => &__llen
  # DEBUG __b => &__rlen
  _575 = MIN_EXPR <__len.225_81, __llen_571>;
  # DEBUG __a => &__len
  # DEBUG __b => NULL
  __clen_413 = MIN_EXPR <__rlen_566, _575>;
  # DEBUG __clen => D#3584
  __clen.234_415 = (long unsigned int) __clen_413;
  _416 = __clen.234_415 * 8;
  _417 = -_416;
  _419 = __lend_418 + _417;
  std::copy_backward<EventRouter::tTransportEvent**, EventRouter::tTransportEvent**> (_419, __lend_418, __rend_420);
  # DEBUG this => &__last
  # DEBUG __n => D#3584
  _421 = -__clen_413;
  std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>::operator+= (&__last, _421);
  # DEBUG this => &D.145649
  # DEBUG __n => D#3584
  std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&D.145649, _421);
  __len_422 = __len.225_81 - __clen_413;
  # DEBUG __len => __len_422
  # DEBUG D#3590 => {CLOBBER}
  # DEBUG __llen => D#3590
  # DEBUG D#3591 => {CLOBBER}
  # DEBUG __rlen => D#3591
  if (__len_422 <= 0)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  pretmp_570 = __last._M_cur;
  pretmp_151 = __last._M_first;
  pretmp_303 = D.145649._M_cur;
  pretmp_304 = D.145649._M_first;
  goto <bb 14>;

  <bb 20>:

  <bb 23>:
  pretmp_576 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  pretmp_495 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  pretmp_445 = MEM[(const struct iterator &)__pos_6(D)]._M_node;

  <bb 21>:
  # prephitmp_494 = PHI <pretmp_576(23), _75(12)>
  # prephitmp_446 = PHI <pretmp_495(23), _161(12)>
  # prephitmp_20 = PHI <pretmp_445(23), _162(12)>
  # DEBUG this => &D.145646
  # DEBUG __x => &D.145649
  # DEBUG D#3592 => {CLOBBER}
  # DEBUG __len => D#3592
  D.145647 ={v} {CLOBBER};
  D.145649 ={v} {CLOBBER};
  D.82044 ={v} {CLOBBER};
  D.82045 ={v} {CLOBBER};
  D.82046 ={v} {CLOBBER};
  # DEBUG this => &D.82050
  # DEBUG __x => __pos_6(D)
  D.82050._M_cur = prephitmp_494;
  _157 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.82050._M_first = _157;
  D.82050._M_last = prephitmp_446;
  D.82050._M_node = prephitmp_20;
  std::copy<Flit*> (__first, __last, &D.82050);
  D.82050 ={v} {CLOBBER};
  __finish_n ={v} {CLOBBER};
  goto <bb 8>;

  <bb 22>:
  __mid = __first;
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  # DEBUG __d => __elemsafter_55
  # DEBUG D#2396 => &__mid
  # DEBUG D.128087 => D#2396
  # DEBUG __i => &__mid
  # DEBUG __n => __elemsafter_55
  std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>::operator+= (&__mid, __elemsafter_55);
  # DEBUG D#2622 => &this_4(D)->D.44077
  # DEBUG this => D#2622
  # DEBUG D#3589 => &MEM[(struct _Deque_base *)this_4(D)]._M_impl
  # DEBUG D#2623 => &this_4(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.82065
  # DEBUG __x => D#2623
  _82 = MEM[(const struct iterator &)this_4(D) + 48]._M_cur;
  _179 = MEM[(const struct iterator &)this_4(D) + 48]._M_first;
  _180 = MEM[(const struct iterator &)this_4(D) + 48]._M_last;
  _181 = MEM[(const struct iterator &)this_4(D) + 48]._M_node;
  # DEBUG D#2624 => &this_4(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.82064
  # DEBUG __x => D#2624
  # DEBUG this => &D.82063
  # DEBUG __x => __pos_6(D)
  _88 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  _176 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  _177 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  _178 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  __first1$_M_cur_218 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first1$_M_cur => __first1$_M_cur_218
  __first1$_M_first_473 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __first1$_M_first => __first1$_M_first_473
  __first1$_M_last_474 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first1$_M_last => __first1$_M_last_474
  __first1$_M_node_475 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first1$_M_node => __first1$_M_node_475
  __last1$_M_cur_476 = MEM[(struct _Deque_iterator *)&__last];
  # DEBUG __last1$_M_cur => __last1$_M_cur_476
  __last1$_M_first_194 = MEM[(struct _Deque_iterator *)&__last + 8B];
  # DEBUG __last1$_M_first => __last1$_M_first_194
  __last1$_M_last_195 = MEM[(struct _Deque_iterator *)&__last + 16B];
  # DEBUG __last1$_M_last => __last1$_M_last_195
  __last1$_M_node_196 = MEM[(struct _Deque_iterator *)&__last + 24B];
  # DEBUG __last1$_M_node => __last1$_M_node_196
  # DEBUG __first2 => &D.82063
  # DEBUG __last2 => &D.82064
  # DEBUG __result => &D.82065
  # DEBUG __alloc => D#3589
  # DEBUG this => NULL
  # DEBUG __x => &D.82065
  # DEBUG D#1824 => D#3589
  MEM[(struct _Deque_iterator *)&__first] = __first1$_M_cur_218;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first1$_M_first_473;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first1$_M_last_474;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first1$_M_node_475;
  MEM[(struct _Deque_iterator *)&__last] = __last1$_M_cur_476;
  MEM[(struct _Deque_iterator *)&__last + 8B] = __last1$_M_first_194;
  MEM[(struct _Deque_iterator *)&__last + 16B] = __last1$_M_last_195;
  MEM[(struct _Deque_iterator *)&__last + 24B] = __last1$_M_node_196;
  # DEBUG __result => NULL
  # DEBUG D.145682 => D#1824
  # DEBUG this => &D.145695
  # DEBUG __x => NULL
  D.145695._M_cur = _82;
  D.145695._M_first = _179;
  D.145695._M_last = _180;
  D.145695._M_node = _181;
  __mid = std::uninitialized_copy<std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>, std::_Deque_iterator<Flit*, Flit*&, Flit**> > (__first, __last, &D.145695); [return slot optimization]
  D.145695 ={v} {CLOBBER};
  # DEBUG this => &D.145698
  # DEBUG __x => &__mid
  _431 = __mid._M_cur;
  D.145698._M_cur = _431;
  _432 = __mid._M_first;
  D.145698._M_first = _432;
  _433 = __mid._M_last;
  D.145698._M_last = _433;
  _434 = __mid._M_node;
  D.145698._M_node = _434;
  # DEBUG this => &D.145697
  # DEBUG __x => &D.82064
  D.145697._M_cur = _82;
  D.145697._M_first = _179;
  D.145697._M_last = _180;
  D.145697._M_node = _181;
  # DEBUG this => &D.145696
  # DEBUG __x => &D.82063
  D.145696._M_cur = _88;
  D.145696._M_first = _176;
  D.145696._M_last = _177;
  D.145696._M_node = _178;
  # DEBUG D#2611 => D#3589
  D.145694 = std::_ZSt22__uninitialized_move_aISt15_Deque_iteratorIP4FlitRS2_PS2_ES5_SaIS2_EET0_T_S8_S7_RT1_.isra.631 (&D.145696, &D.145697, &D.145698); [return slot optimization]
  D.145696 ={v} {CLOBBER};
  D.145697 ={v} {CLOBBER};
  D.145698 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  D.82063 ={v} {CLOBBER};
  D.82064 ={v} {CLOBBER};
  D.82065 ={v} {CLOBBER};
  MEM[(struct deque *)this_4(D) + 48B] = __new_finish$_M_cur_353;
  MEM[(struct deque *)this_4(D) + 56B] = __new_finish$_M_first_354;
  MEM[(struct deque *)this_4(D) + 64B] = __new_finish$_M_last_355;
  MEM[(struct deque *)this_4(D) + 72B] = __new_finish$_M_node_356;
  # DEBUG this => &D.82069
  # DEBUG __x => __pos_6(D)
  _172 = MEM[(const struct iterator &)__pos_6(D)]._M_cur;
  D.82069._M_cur = _172;
  _173 = MEM[(const struct iterator &)__pos_6(D)]._M_first;
  D.82069._M_first = _173;
  _174 = MEM[(const struct iterator &)__pos_6(D)]._M_last;
  D.82069._M_last = _174;
  _175 = MEM[(const struct iterator &)__pos_6(D)]._M_node;
  D.82069._M_node = _175;
  std::copy<Flit*> (__first, __mid, &D.82069);
  D.82069 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};
  goto <bb 8>;

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (_ZNSt5dequeIP4FlitSaIS1_EEaSERKS3_, funcdef_no=4505, decl_uid=43656, cgraph_uid=2854, symbol_order=2855)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = Flit*; _Alloc = std::allocator<Flit*>] (struct deque * const this, const struct deque & __x)
{
  struct Flit * * * __new_finish$_M_node;
  struct Flit * * __new_finish$_M_last;
  struct Flit * * __new_finish$_M_first;
  struct Flit * * __new_finish$_M_cur;
  struct Flit * * * __new_start$_M_node;
  struct Flit * * __new_start$_M_last;
  struct Flit * * __new_start$_M_first;
  struct Flit * * __new_start$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __last$_M_node;
  struct Flit * * __last$_M_last;
  struct Flit * * __last$_M_first;
  struct Flit * * __last$_M_cur;
  struct Flit * * * __first$_M_node;
  struct Flit * * __first$_M_last;
  struct Flit * * __first$_M_first;
  struct Flit * * __first$_M_cur;
  struct Flit * * * SR.6557;
  struct Flit * * SR.6556;
  struct Flit * * SR.6555;
  struct Flit * * SR.6554;
  struct Flit * * * SR.6553;
  struct Flit * * SR.6552;
  struct Flit * * SR.6551;
  struct Flit * * SR.6550;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.145863;
  struct _Deque_iterator D.145862;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Self __tmp;
  const size_type __vacancies;
  struct _Deque_iterator D.145843;
  struct _Deque_iterator D.145842;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct _Deque_iterator D.145835;
  struct _Deque_iterator D.145834;
  struct iterator D.145833;
  const size_type __n;
  struct iterator __new_start;
  struct iterator __new_finish;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct forward_iterator_tag D.145821;
  struct _Self __tmp;
  struct _Deque_iterator __last;
  struct _Deque_iterator __first;
  struct forward_iterator_tag D.145813;
  struct iterator D.145812;
  struct _Deque_iterator __first;
  struct _Deque_iterator __last;
  struct Flit * * * __nstart;
  struct const_iterator __mid;
  struct iterator D.79281;
  struct _Deque_iterator D.88566;
  struct _Deque_iterator D.88565;
  struct _Deque_iterator D.79273;
  struct const_iterator D.79269;
  struct _Deque_iterator D.88562;
  struct _Deque_iterator D.88561;
  struct _Deque_iterator D.79266;
  struct _Deque_iterator D.79267;
  long int _5;
  struct Flit * * * _6;
  struct Flit * * _9;
  struct Flit * * _12;
  struct Flit * * _13;
  struct _Self & _14;
  struct Flit * * _17;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  struct Flit * * _28;
  long int _29;
  struct Flit * * _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _36;
  long int _38;
  long int _39;
  long int _40;
  difference_type _41;
  size_type _42;
  struct Flit * * * _43;
  long int _44;
  struct Flit * * * _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  struct Flit * * _51;
  long int _52;
  struct Flit * * _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  struct Flit * * _58;
  long int _59;
  struct Flit * * _60;
  long int _61;
  long int _62;
  long int _63;
  difference_type _64;
  size_type _65;
  struct Flit * * _66;
  struct Flit * * _67;
  struct Flit * * _68;
  struct Flit * * _70;
  struct Flit * * _72;
  struct Flit * * _73;
  struct Flit * * * _74;
  struct Flit * * _75;
  struct Flit * * _76;
  struct Flit * * * _77;
  struct Flit * * _78;
  struct Flit * * _79;
  struct Flit * * * _80;
  struct Flit * * * _114;
  struct Flit * * * _115;
  struct Flit * * * _116;
  struct Flit * * _119;
  long int _129;
  long int _130;
  long int _131;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  long int _138;
  long int _139;
  long int _140;
  long int _141;
  long int _142;
  long int _143;
  difference_type _144;
  struct Flit * * _147;
  struct Flit * * _153;
  struct Flit * * _154;
  struct Flit * * _155;
  struct Flit * * * _156;
  long int _165;
  struct Flit * * _166;
  long int _167;
  long int _168;
  long int _169;
  long unsigned int _171;
  struct Flit * * _176;
  struct Flit * * * _177;
  long int _178;
  struct _Self & _179;
  long int _189;
  long int _191;
  long int _192;
  long int _193;
  long int _194;
  long unsigned int _196;
  struct Flit * * _200;
  struct Flit * * * _202;
  struct _Self & _203;
  struct Flit * * const prephitmp_242;
  struct Flit * * const pretmp_243;
  struct Flit * * const prephitmp_251;
  struct Flit * * const pretmp_252;
  struct Flit * * const prephitmp_265;
  struct Flit * * const pretmp_266;
  struct Flit * * const prephitmp_267;
  struct Flit * * const pretmp_268;

  <bb 2>:
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 3>:
  # DEBUG this => this_3(D)
  # DEBUG D#209 => &MEM[(const struct deque *)this_3(D)].D.44077._M_impl._M_start
  # DEBUG D#210 => &MEM[(const struct deque *)this_3(D)].D.44077._M_impl._M_finish
  # DEBUG __x => D#210
  # DEBUG __y => D#209
  # DEBUG __size => 8
  _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
  _44 = (long int) _43;
  _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
  _46 = (long int) _45;
  _47 = _44 - _46;
  _48 = _47 /[ex] 8;
  _49 = _48 + -1;
  _50 = _49 * 64;
  _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
  _52 = (long int) _51;
  _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
  _54 = (long int) _53;
  _55 = _52 - _54;
  _56 = _55 /[ex] 8;
  _57 = _50 + _56;
  _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
  _59 = (long int) _58;
  _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
  _61 = (long int) _60;
  _62 = _59 - _61;
  _63 = _62 /[ex] 8;
  _64 = _57 + _63;
  _65 = (size_type) _64;
  # DEBUG __len => _65
  # DEBUG this => __x_2(D)
  # DEBUG D#209 => &__x_2(D)->D.44077._M_impl._M_start
  # DEBUG D#210 => &__x_2(D)->D.44077._M_impl._M_finish
  # DEBUG __x => D#210
  # DEBUG __y => D#209
  # DEBUG __size => 8
  _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
  _5 = (long int) _6;
  SR.6553_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
  _23 = (long int) SR.6553_22;
  _24 = _5 - _23;
  _25 = _24 /[ex] 8;
  _26 = _25 + -1;
  _27 = _26 * 64;
  _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
  _29 = (long int) _28;
  _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
  _31 = (long int) _30;
  _32 = _29 - _31;
  _33 = _32 /[ex] 8;
  _34 = _27 + _33;
  SR.6552_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
  _36 = (long int) SR.6552_35;
  SR.6550_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
  _38 = (long int) SR.6550_37;
  _39 = _36 - _38;
  _40 = _39 /[ex] 8;
  _41 = _34 + _40;
  _42 = (size_type) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  # DEBUG D#2631 => &this_3(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.79266
  # DEBUG __x => D#2631
  D.79266._M_cur = _60;
  _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.79266._M_first = _68;
  D.79266._M_last = _58;
  D.79266._M_node = _45;
  # DEBUG this => __x_2(D)
  # DEBUG D#207 => &__x_2(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.88561
  # DEBUG __x => D#207
  D.88561._M_cur = _28;
  D.88561._M_first = _30;
  _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  D.88561._M_last = _67;
  D.88561._M_node = _6;
  # DEBUG this => __x_2(D)
  # DEBUG D#208 => &__x_2(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.88562
  # DEBUG __x => D#208
  D.88562._M_cur = SR.6550_37;
  _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.88562._M_first = _66;
  D.88562._M_last = SR.6552_35;
  D.88562._M_node = SR.6553_22;
  D.79267 = std::copy<Flit*> (D.88562, D.88561, &D.79266); [return slot optimization]
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.79267
  # DEBUG D#1445 => &this_3(D)->D.44077
  # DEBUG this => D#1445
  # DEBUG this => this_3(D)
  # DEBUG D#151 => &this_3(D)->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1452 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
  # DEBUG D.111026 => D#1452
  # DEBUG D#1451 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
  # DEBUG D.111027 => D#1451
  # DEBUG D#1450 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
  # DEBUG D.111028 => D#1450
  _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  # DEBUG D.111029 => _114
  # DEBUG this => NULL
  # DEBUG __x => &D.79267
  # DEBUG D#1449 => MEM[(const struct iterator &)&D.79267]._M_cur
  # DEBUG D.111030 => D#1449
  # DEBUG D#1448 => MEM[(const struct iterator &)&D.79267]._M_first
  # DEBUG D.111031 => D#1448
  # DEBUG D#1447 => MEM[(const struct iterator &)&D.79267]._M_last
  # DEBUG D.111032 => D#1447
  _115 = MEM[(const struct iterator &)&D.79267]._M_node;
  # DEBUG D.111033 => _115
  # DEBUG D#153 => this_3(D)
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.111015 => D#156
  _116 = _114 + 8;
  __nstart_117 = _115 + 8;
  # DEBUG D#1446 => &this_3(D)->D.44077
  # DEBUG this => D#1446
  # DEBUG __nstart => __nstart_117
  # DEBUG __nfinish => _116
  # DEBUG __n => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  this_3(D)->D.44077._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.79267];
  D.79267 ={v} {CLOBBER};
  D.79266 ={v} {CLOBBER};
  goto <bb 17>;

  <bb 6>:

  <bb 7>:
  # __nstart_99 = PHI <__nstart_117(6), __nstart_120(8)>
  # DEBUG __n => __nstart_99
  _119 = *__nstart_99;
  # DEBUG D#1039 => D#1446
  # DEBUG __p => _119
  # DEBUG this => D#1039
  # DEBUG D#1038 => D#1039
  # DEBUG __size => 8
  # DEBUG D#1037 => &D#1038->_M_impl
  # DEBUG D#1017 => D#1037
  # DEBUG __p => _119
  # DEBUG __a => D#1017
  # DEBUG __n => D#1018
  # DEBUG D#1016 => D#1018
  # DEBUG D#1015 => D#1017
  # DEBUG D#1013 => D#1015
  # DEBUG D#1014 => D#1016
  # DEBUG __p => _119
  # DEBUG this => D#1013
  # DEBUG D.145796 => D#1014
  operator delete (_119);
  __nstart_120 = __nstart_99 + 8;
  # DEBUG __n => __nstart_120
  # DEBUG __n => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  # DEBUG this => __x_2(D)
  # DEBUG D#208 => &__x_2(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.79269
  # DEBUG __x => D#208
  SR.6551_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  # DEBUG this => &D.79269
  # DEBUG __n => _64
  MEM[(struct _Deque_iterator *)&__tmp] = SR.6550_37;
  MEM[(struct _Deque_iterator *)&__tmp + 8B] = SR.6551_81;
  MEM[(struct _Deque_iterator *)&__tmp + 16B] = SR.6552_35;
  MEM[(struct _Deque_iterator *)&__tmp + 24B] = SR.6553_22;
  _14 = std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>::operator+= (&__tmp, _64);
  __mid = MEM[(const struct _Deque_iterator &)_14];
  __tmp ={v} {CLOBBER};
  # DEBUG D#2629 => &this_3(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.79273
  # DEBUG __x => D#2629
  _9 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  D.79273._M_cur = _9;
  _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
  D.79273._M_first = _78;
  _79 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  D.79273._M_last = _79;
  _80 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  D.79273._M_node = _80;
  # DEBUG this => __x_2(D)
  # DEBUG D#208 => &__x_2(D)->D.44077._M_impl._M_start
  # DEBUG this => &D.88565
  # DEBUG __x => D#208
  _12 = MEM[(const struct iterator &)__x_2(D) + 16]._M_cur;
  D.88565._M_cur = _12;
  _75 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
  D.88565._M_first = _75;
  _76 = MEM[(const struct iterator &)__x_2(D) + 16]._M_last;
  D.88565._M_last = _76;
  _77 = MEM[(const struct iterator &)__x_2(D) + 16]._M_node;
  D.88565._M_node = _77;
  std::copy<Flit*> (D.88565, __mid, &D.79273);
  D.79273 ={v} {CLOBBER};
  # DEBUG this => __x_2(D)
  # DEBUG D#207 => &__x_2(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.88566
  # DEBUG __x => D#207
  _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
  _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
  _73 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
  _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
  # DEBUG D#2630 => &this_3(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.79281
  # DEBUG __x => D#2630
  _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  # DEBUG this => this_3(D)
  # DEBUG __position => &D.79281
  __first$_M_cur_225 = MEM[(struct _Deque_iterator *)&__mid];
  # DEBUG __first$_M_cur => __first$_M_cur_225
  __first$_M_first_224 = MEM[(struct _Deque_iterator *)&__mid + 8B];
  # DEBUG __first$_M_first => __first$_M_first_224
  __first$_M_last_219 = MEM[(struct _Deque_iterator *)&__mid + 16B];
  # DEBUG __first$_M_last => __first$_M_last_219
  __first$_M_node_218 = MEM[(struct _Deque_iterator *)&__mid + 24B];
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => NULL
  # DEBUG __x => &D.79281
  # DEBUG this => this_3(D)
  # DEBUG __pos => NULL
  # DEBUG __first$_M_cur => __first$_M_cur_225
  # DEBUG __first$_M_first => __first$_M_first_224
  # DEBUG __first$_M_last => __first$_M_last_219
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG this => &D.145812
  # DEBUG __x => NULL
  # DEBUG this => this_3(D)
  # DEBUG __pos => &D.145812
  # DEBUG __first$_M_cur => __first$_M_cur_225
  # DEBUG __first$_M_first => __first$_M_first_224
  # DEBUG __first$_M_last => __first$_M_last_219
  # DEBUG __first$_M_node => __first$_M_node_218
  # DEBUG __last$_M_cur => _13
  # DEBUG __last$_M_first => _72
  # DEBUG __last$_M_last => _73
  # DEBUG __last$_M_node => _74
  # DEBUG D#2400 => __first
  # DEBUG D#2400 => __first
  # DEBUG D#2400 => __first
  # DEBUG D#2401 => __last
  # DEBUG D#2401 => __last
  # DEBUG D#2401 => __last
  # DEBUG D.126896 => D#2396
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __size => 8
  _129 = (long int) _74;
  _130 = (long int) __first$_M_node_218;
  _131 = _129 - _130;
  _132 = _131 /[ex] 8;
  _133 = _132 + -1;
  _134 = _133 * 64;
  _135 = (long int) _13;
  _136 = (long int) _72;
  _137 = _135 - _136;
  _138 = _137 /[ex] 8;
  _139 = _134 + _138;
  _140 = (long int) __first$_M_last_219;
  _141 = (long int) __first$_M_cur_225;
  _142 = _140 - _141;
  _143 = _142 /[ex] 8;
  _144 = _139 + _143;
  __n_145 = (const size_type) _144;
  # DEBUG __n => __n_145
  _147 = this_3(D)->D.44077._M_impl._M_start._M_cur;
  if (_17 == _147)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_145
  _165 = (long int) _17;
  _166 = this_3(D)->D.44077._M_impl._M_start._M_first;
  _167 = (long int) _166;
  _168 = _165 - _167;
  _169 = _168 /[ex] 8;
  __vacancies_170 = (const size_type) _169;
  # DEBUG __vacancies => __vacancies_170
  if (__n_145 > __vacancies_170)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _171 = __n_145 - __vacancies_170;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_front (this_3(D), _171);
  pretmp_268 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
  pretmp_266 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;

  <bb 12>:
  # prephitmp_267 = PHI <_147(10), pretmp_268(11)>
  # prephitmp_265 = PHI <_166(10), pretmp_266(11)>
  # DEBUG D#3605 => &this_3(D)->D.44077._M_impl._M_start
  # DEBUG this => D#3605
  # DEBUG __n => _144
  # DEBUG this => &__tmp
  # DEBUG __x => D#3605
  __tmp._M_cur = prephitmp_267;
  __tmp._M_first = prephitmp_265;
  _176 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
  __tmp._M_last = _176;
  _177 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
  __tmp._M_node = _177;
  # DEBUG this => &__tmp
  # DEBUG __n => _144
  _178 = -_144;
  _179 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, _178);
  # DEBUG this => &__new_start
  # DEBUG __x => NULL
  __new_start$_M_cur_180 = MEM[(const struct iterator &)_179]._M_cur;
  # DEBUG __new_start$_M_cur => __new_start$_M_cur_180
  __new_start$_M_first_181 = MEM[(const struct iterator &)_179]._M_first;
  # DEBUG __new_start$_M_first => __new_start$_M_first_181
  __new_start$_M_last_182 = MEM[(const struct iterator &)_179]._M_last;
  # DEBUG __new_start$_M_last => __new_start$_M_last_182
  __new_start$_M_node_183 = MEM[(const struct iterator &)_179]._M_node;
  # DEBUG __new_start$_M_node => __new_start$_M_node_183
  __tmp ={v} {CLOBBER};
  # DEBUG D#2625 => &this_3(D)->D.44077
  # DEBUG this => D#2625
  # DEBUG this => &D.145835
  # DEBUG __x => &__new_start
  MEM[(struct _Deque_iterator *)&__first] = __first$_M_cur_225;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first$_M_first_224;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first$_M_last_219;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first$_M_node_218;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.145835
  # DEBUG D.145839 => D#1824
  # DEBUG this => &D.145843
  # DEBUG __x => &D.145835
  D.145843._M_cur = __new_start$_M_cur_180;
  D.145843._M_first = __new_start$_M_first_181;
  D.145843._M_last = __new_start$_M_last_182;
  D.145843._M_node = __new_start$_M_node_183;
  D.145842 = std::uninitialized_copy<std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>, std::_Deque_iterator<Flit*, Flit*&, Flit**> > (__first, __last, &D.145843); [return slot optimization]
  D.145843 ={v} {CLOBBER};
  D.145835 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_180;
  MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_181;
  MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_182;
  MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_183;
  # DEBUG D#3610 => {CLOBBER}
  # DEBUG __new_start$_M_cur => D#3610
  # DEBUG D#3611 => {CLOBBER}
  # DEBUG __new_start$_M_first => D#3611
  # DEBUG D#3612 => {CLOBBER}
  # DEBUG __new_start$_M_last => D#3612
  # DEBUG D#3613 => {CLOBBER}
  # DEBUG __new_start$_M_node => D#3613
  goto <bb 16>;

  <bb 13>:
  _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  # DEBUG this => this_3(D)
  # DEBUG __n => __n_145
  _189 = (long int) _70;
  _191 = (long int) _17;
  _192 = _189 - _191;
  _193 = _192 /[ex] 8;
  _194 = _193 + -1;
  __vacancies_195 = (const size_type) _194;
  # DEBUG __vacancies => __vacancies_195
  if (__n_145 > __vacancies_195)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _196 = __n_145 - __vacancies_195;
  std::deque<Flit*, std::allocator<Flit*> >::_M_new_elements_at_back (this_3(D), _196);
  pretmp_252 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  pretmp_243 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;

  <bb 15>:
  # prephitmp_251 = PHI <_17(13), pretmp_252(14)>
  # prephitmp_242 = PHI <_70(13), pretmp_243(14)>
  # DEBUG D#3604 => &this_3(D)->D.44077._M_impl._M_finish
  # DEBUG this => D#3604
  # DEBUG __n => _144
  # DEBUG this => &__tmp
  # DEBUG __x => D#3604
  __tmp._M_cur = prephitmp_251;
  _200 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  __tmp._M_first = _200;
  __tmp._M_last = prephitmp_242;
  _202 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  __tmp._M_node = _202;
  _203 = std::_Deque_iterator<Flit*, Flit*&, Flit**>::operator+= (&__tmp, _144);
  # DEBUG this => &__new_finish
  # DEBUG __x => _203
  __new_finish$_M_cur_204 = MEM[(const struct iterator &)_203]._M_cur;
  # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_204
  __new_finish$_M_first_205 = MEM[(const struct iterator &)_203]._M_first;
  # DEBUG __new_finish$_M_first => __new_finish$_M_first_205
  __new_finish$_M_last_206 = MEM[(const struct iterator &)_203]._M_last;
  # DEBUG __new_finish$_M_last => __new_finish$_M_last_206
  __new_finish$_M_node_207 = MEM[(const struct iterator &)_203]._M_node;
  # DEBUG __new_finish$_M_node => __new_finish$_M_node_207
  __tmp ={v} {CLOBBER};
  # DEBUG D#2626 => &this_3(D)->D.44077
  # DEBUG this => D#2626
  # DEBUG D#2627 => &this_3(D)->D.44077._M_impl._M_finish
  # DEBUG this => &D.145834
  # DEBUG __x => D#2627
  _153 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
  _154 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
  _155 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
  _156 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
  MEM[(struct _Deque_iterator *)&__first] = __first$_M_cur_225;
  MEM[(struct _Deque_iterator *)&__first + 8B] = __first$_M_first_224;
  MEM[(struct _Deque_iterator *)&__first + 16B] = __first$_M_last_219;
  MEM[(struct _Deque_iterator *)&__first + 24B] = __first$_M_node_218;
  MEM[(struct _Deque_iterator *)&__last] = _13;
  MEM[(struct _Deque_iterator *)&__last + 8B] = _72;
  MEM[(struct _Deque_iterator *)&__last + 16B] = _73;
  MEM[(struct _Deque_iterator *)&__last + 24B] = _74;
  # DEBUG __result => &D.145834
  # DEBUG D.145859 => D#1824
  # DEBUG this => &D.145863
  # DEBUG __x => &D.145834
  D.145863._M_cur = _153;
  D.145863._M_first = _154;
  D.145863._M_last = _155;
  D.145863._M_node = _156;
  D.145862 = std::uninitialized_copy<std::_Deque_iterator<Flit*, Flit* const&, Flit* const*>, std::_Deque_iterator<Flit*, Flit*&, Flit**> > (__first, __last, &D.145863); [return slot optimization]
  D.145863 ={v} {CLOBBER};
  D.145834 ={v} {CLOBBER};
  MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_204;
  MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_205;
  MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_206;
  MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_207;
  # DEBUG D#3606 => {CLOBBER}
  # DEBUG __new_finish$_M_cur => D#3606
  # DEBUG D#3607 => {CLOBBER}
  # DEBUG __new_finish$_M_first => D#3607
  # DEBUG D#3608 => {CLOBBER}
  # DEBUG __new_finish$_M_last => D#3608
  # DEBUG D#3609 => {CLOBBER}
  # DEBUG __new_finish$_M_node => D#3609

  <bb 16>:
  D.145812 ={v} {CLOBBER};
  D.79281 ={v} {CLOBBER};
  __mid ={v} {CLOBBER};

  <bb 17>:
  return this_3(D);

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Flit*>*, std::vector<std::queue<Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Flit*>] (_ZNSt6vectorISt5queueIP4FlitSt5dequeIS2_SaIS2_EEESaIS6_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS6_S8_EEmRKS6_, funcdef_no=3317, decl_uid=51442, cgraph_uid=1666, symbol_order=1667)

Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<Flit*>; _Alloc = std::allocator<std::queue<Flit*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<Flit*>*, std::vector<std::queue<Flit*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<Flit*>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<Flit*>] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.145956;
  const size_type __len;
  size_type D.145955;
  size_type __n;
  struct queue * D.145946;
  struct queue * const __position;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  struct queue * __first;
  difference_type __n;
  struct queue * __last;
  struct queue * __new_finish;
  const size_type __elems_before;
  struct queue * __old_finish;
  const size_type __elems_after;
  struct value_type __x_copy;
  struct queue * _10;
  long int _11;
  struct queue * _12;
  long int _13;
  long int _14;
  long int _15;
  long unsigned int _16;
  bool _18;
  struct queue * _20;
  long int __last.188_21;
  struct queue * const _24;
  long unsigned int _27;
  difference_type _30;
  long int _31;
  struct queue * _32;
  long unsigned int _33;
  long int _35;
  struct queue * _36;
  long int _37;
  struct queue * _38;
  struct queue * _45;
  void * _47;
  sizetype _49;
  sizetype _50;
  struct queue * _51;
  const struct deque * _52;
  const struct deque * _56;
  long unsigned int _59;
  sizetype _60;
  struct queue * _62;
  struct queue * _63;
  struct queue * _67;
  long unsigned int _70;
  long int _73;
  struct queue * _74;
  long unsigned int _75;
  struct queue * _76;
  struct deque * _80;
  struct deque * _83;
  struct queue * _85;
  struct deque * _87;
  struct queue * _94;
  struct _Deque_base * _95;
  struct _Deque_base * _97;
  struct _Deque_base * _100;
  struct queue * prephitmp_120;
  long unsigned int pretmp_134;
  long unsigned int prephitmp_135;
  struct queue * _137;
  long unsigned int _139;
  bool _140;
  long int _141;
  long int _142;
  long int _143;
  long unsigned int _145;
  struct queue * pretmp_152;
  long unsigned int prephitmp_153;
  long int _163;
  long int _164;
  difference_type _165;
  difference_type _168;
  long int _172;
  long int _173;
  bool _174;
  long int _177;
  long int _183;

  <bb 2>:
  # DEBUG D#3615 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3615
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 47>;

  <bb 3>:
  __position_23 = MEM[(struct __normal_iterator *)&__position];
  _10 = this_9(D)->D.51519._M_impl._M_end_of_storage;
  _11 = (long int) _10;
  _12 = this_9(D)->D.51519._M_impl._M_finish;
  _13 = (long int) _12;
  _14 = _11 - _13;
  _15 = _14 /[ex] 80;
  _16 = (long unsigned int) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 29>;

  <bb 4>:
  # DEBUG this => &__x_copy
  # DEBUG D.129301 => __x_29(D)
  _52 = &MEM[(const struct queue &)__x_29(D)].c;
  std::deque<Flit*, std::allocator<Flit*> >::deque (&__x_copy.c, _52);
  # DEBUG this => this_9(D)
  # DEBUG D#223 => &this_9(D)->D.51519._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#223
  __old_finish_26 = MEM[(struct queue * const &)this_9(D) + 8];
  # DEBUG __lhs => &D.73139
  # DEBUG __rhs => &__position
  # DEBUG this => &D.73139
  _37 = (long int) __old_finish_26;
  # DEBUG this => &__position
  _35 = (long int) __position_23;
  _31 = _37 - _35;
  _30 = _31 /[ex] 80;
  __elems_after_57 = (const size_type) _30;
  # DEBUG __elems_after => __elems_after_57
  # DEBUG __old_finish => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 5>;
  else
    goto <bb 19>;

  <bb 5>:
  # DEBUG D#2636 => &this_9(D)->D.51519
  # DEBUG this => D#2636
  _59 = __n_7(D) * 80;
  _60 = -_59;
  __last_61 = __old_finish_26 + _60;
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __alloc => D#1830
  # DEBUG D#1829 => D#1830
  # DEBUG D#1828 => D#1829
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG D.129314 => D#1828
  # DEBUG __first => __last_61
  # DEBUG __last => __old_finish_26
  # DEBUG __result => __old_finish_26
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__last_61, __old_finish_26, __old_finish_26);

  <bb 6>:
  _62 = this_9(D)->D.51519._M_impl._M_finish;
  _63 = _62 + _59;
  this_9(D)->D.51519._M_impl._M_finish = _63;
  # DEBUG this => &__position
  # DEBUG __first => D#3615
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3615
  # DEBUG __it => D#3615
  # DEBUG __first => D#3615
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __old_finish_26
  # DEBUG __it => __last_61
  # DEBUG __it => __last_61
  # DEBUG __it => D#3615
  # DEBUG __it => D#3615
  # DEBUG __first => D#3615
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  # DEBUG __simple => 0
  # DEBUG __first => D#3615
  # DEBUG __last => __last_61
  # DEBUG __result => __old_finish_26
  __last.188_21 = (long int) __last_61;
  _73 = __last.188_21 - _35;
  __n_72 = _73 /[ex] 80;
  # DEBUG __n => __n_72
  # DEBUG __n => __n_72
  # DEBUG __result => __old_finish_26
  # DEBUG __last => __last_61
  if (__n_72 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  # DEBUG this => &__position
  _67 = __position_23 + _59;
  # DEBUG this => &__position
  # DEBUG __first => D#3615
  # DEBUG __last => _67
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3615
  if (__position_23 == _67)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 8>:

  <bb 9>:
  # __old_finish_171 = PHI <__old_finish_26(8), __old_finish_58(12)>
  # __last_161 = PHI <__last_61(8), __last_66(12)>
  # __n_166 = PHI <__n_72(8), __n_81(12)>
  # DEBUG __n => __n_166
  # DEBUG __result => __old_finish_171
  # DEBUG __last => __last_161
  __last_66 = __last_161 + 18446744073709551536;
  # DEBUG __last => __last_66
  __old_finish_58 = __old_finish_171 + 18446744073709551536;
  # DEBUG __result => __old_finish_58
  # DEBUG this => __old_finish_58
  # DEBUG D.129344 => __last_66
  _56 = &MEM[(const struct queue &)__last_66].c;
  _80 = &__old_finish_58->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_80, _56);
  goto <bb 11>;

<L20>:
  goto <bb 49> (<L10>);

  <bb 11>:
  __n_81 = __n_166 + -1;
  # DEBUG __n => __n_81
  # DEBUG __n => __n_81
  # DEBUG __result => __old_finish_58
  # DEBUG __last => __last_66
  if (__n_81 <= 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  # DEBUG this => &__x_copy
  # DEBUG D#1183 => &__x_copy.c
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.44077);
  __x_copy ={v} {CLOBBER};
  goto <bb 47>;

  <bb 14>:

  <bb 15>:
  # __position_157 = PHI <__position_23(14), __position_84(18)>
  # DEBUG __first => __position_157
  # DEBUG this => __position_157
  # DEBUG D.129355 => &__x_copy
  _83 = &__position_157->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_83, &__x_copy.c);
  goto <bb 17>;

<L21>:
  goto <bb 49> (<L10>);

  <bb 17>:
  __position_84 = __position_157 + 80;
  # DEBUG __first => __position_84
  # DEBUG __first => __position_84
  if (_67 == __position_84)
    goto <bb 13>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 15>;

  <bb 19>:
  # DEBUG D#2637 => &this_9(D)->D.51519
  # DEBUG this => D#2637
  _70 = __n_7(D) - __elems_after_57;
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG D.129364 => D#1833
  # DEBUG __first => __old_finish_26
  # DEBUG __n => _70
  # DEBUG __x => &__x_copy
  # DEBUG __assignable => 1
  _85 = std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<Flit*>*, long unsigned int, std::queue<Flit*> > (__old_finish_26, _70, &__x_copy);
  goto <bb 21>;

<L22>:
  goto <bb 49> (<L10>);

  <bb 21>:
  this_9(D)->D.51519._M_impl._M_finish = _85;
  # DEBUG D#2638 => &this_9(D)->D.51519
  # DEBUG this => D#2638
  # DEBUG this => &__position
  # DEBUG __first => D#3615
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __alloc => D#1830
  # DEBUG D#1829 => D#1830
  # DEBUG D#1828 => D#1829
  # DEBUG __first => D#3615
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG D.129377 => D#1828
  # DEBUG __first => D#3615
  # DEBUG __last => __old_finish_26
  # DEBUG __result => _85
  # DEBUG __assignable => 1
  std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__position_23, __old_finish_26, _85);
  goto <bb 23>;

<L23>:
  goto <bb 49> (<L10>);

  <bb 23>:
  _74 = this_9(D)->D.51519._M_impl._M_finish;
  _75 = (long unsigned int) _31;
  _76 = _74 + _75;
  this_9(D)->D.51519._M_impl._M_finish = _76;
  # DEBUG this => &__position
  # DEBUG __first => D#3615
  # DEBUG __last => __old_finish_26
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#3615
  if (__position_23 == __old_finish_26)
    goto <bb 13>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # __position_170 = PHI <__position_23(24), __position_88(28)>
  # DEBUG __first => __position_170
  # DEBUG this => __position_170
  # DEBUG D.129398 => &__x_copy
  _87 = &__position_170->c;
  std::deque<Flit*, std::allocator<Flit*> >::operator= (_87, &__x_copy.c);
  goto <bb 27>;

<L24>:
  goto <bb 49> (<L10>);

  <bb 27>:
  __position_88 = __position_170 + 80;
  # DEBUG __first => __position_88
  # DEBUG __first => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  # DEBUG this => this_9(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __n => __n_7(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#1548 => this_9(D)
  # DEBUG this => D#1548
  # DEBUG D#1547 => D#1548
  # DEBUG D#1546 => &D#1547->D.54535
  # DEBUG this => D#1546
  # DEBUG __a => D#1545
  # DEBUG D#1544 => D#1545
  # DEBUG D#1543 => D#1544
  # DEBUG this => D#1543
  _24 = MEM[(struct queue * *)this_9(D)];
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  _141 = (long int) _24;
  _142 = _13 - _141;
  _143 = _142 /[ex] 80;
  _144 = (const long unsigned int) _143;
  _145 = 230584300921369395 - _144;
  if (__n_7(D) > _145)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 31>:
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG __a => &D.145956
  # DEBUG __b => &__n
  _139 = MAX_EXPR <__n_7(D), _144>;
  __len_149 = _139 + _144;
  # DEBUG __len => __len_149
  # DEBUG D#178 => this_9(D)
  # DEBUG D#178 => this_9(D)
  # DEBUG this => D#178
  # DEBUG this => D#178
  # DEBUG D#1548 => this_9(D)
  # DEBUG this => D#1548
  # DEBUG D#1547 => D#1548
  # DEBUG D#1546 => &D#1547->D.54535
  # DEBUG this => D#1546
  # DEBUG __a => D#1545
  # DEBUG D#1544 => D#1545
  # DEBUG D#1543 => D#1544
  # DEBUG this => D#1543
  _140 = __len_149 > 230584300921369395;
  _174 = _144 > __len_149;
  _18 = _140 | _174;
  if (_18 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 32>:
  pretmp_134 = __len_149 * 80;

  <bb 33>:
  # __elems_before_156 = PHI <__elems_before_169(62), __elems_before_181(32)>
  # _183 = PHI <_173(62), _164(32)>
  # prephitmp_135 = PHI <18446744073709551600(62), pretmp_134(32)>
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#388 => &this_9(D)->D.51519._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#388
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73172
  # DEBUG this => &__position
  # DEBUG this => &D.73172
  # DEBUG __elems_before => __elems_before_156
  # DEBUG D#2648 => &this_9(D)->D.51519
  # DEBUG D#1466 => D#2648
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  # DEBUG D#1554 => &D#1555->_M_impl
  # DEBUG D#1553 => D#1554
  # DEBUG __n => NULL
  # DEBUG __a => D#1553
  # DEBUG D#1552 => D#1553
  # DEBUG D#1550 => D#1552
  # DEBUG D#1551 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#1550
  # DEBUG D.145944 => D#1551
  # DEBUG D#1549 => D#1550
  # DEBUG D#1543 => D#1549
  # DEBUG this => D#1543
  _137 = operator new (prephitmp_135);

  <bb 34>:
  # __new_finish_138 = PHI <0B(63), _137(33)>
  # __elems_before_182 = PHI <__elems_before_181(63), __elems_before_156(33)>
  # _177 = PHI <_164(63), _183(33)>
  # prephitmp_153 = PHI <0(63), prephitmp_135(33)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2632 => &this_9(D)->D.51519
  # DEBUG this => D#2632
  _27 = (long unsigned int) _177;
  __first_28 = __new_finish_138 + _27;
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG D.129407 => D#1833
  # DEBUG __first => __first_28
  # DEBUG __n => __n_7(D)
  # DEBUG __x => __x_29(D)
  # DEBUG __assignable => 1
  std::__uninitialized_fill_n<false>::__uninit_fill_n<std::queue<Flit*>*, long unsigned int, std::queue<Flit*> > (__first_28, __n_7(D), __x_29(D));

  <bb 35>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2633 => &this_9(D)->D.51519
  # DEBUG this => D#2633
  # DEBUG this => &__position
  _32 = this_9(D)->D.51519._M_impl._M_start;
  # DEBUG __first => _32
  # DEBUG __last => D#3615
  # DEBUG __result => NULL
  # DEBUG __alloc => D#1832
  # DEBUG D#1831 => D#1832
  # DEBUG D#1828 => D#1831
  # DEBUG __first => _32
  # DEBUG __last => D#3615
  # DEBUG __result => NULL
  # DEBUG D.129428 => D#1828
  # DEBUG __first => _32
  # DEBUG __last => D#3615
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  _20 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (_32, __position_23, __new_finish_138);
  goto <bb 37>;

<L26>:
  goto <bb 51> (<L13>);

  <bb 37>:
  # DEBUG __new_finish => _20
  _33 = __n_7(D) * 80;
  __new_finish_34 = _20 + _33;
  # DEBUG __new_finish => __new_finish_34
  # DEBUG D#2634 => &this_9(D)->D.51519
  # DEBUG this => D#2634
  _36 = this_9(D)->D.51519._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3615
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __alloc => D#1832
  # DEBUG D#1831 => D#1832
  # DEBUG D#1828 => D#1831
  # DEBUG __first => D#3615
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG D.129447 => D#1828
  # DEBUG __first => D#3615
  # DEBUG __last => _36
  # DEBUG __result => __new_finish_34
  # DEBUG __assignable => 1
  _94 = std::__uninitialized_copy<false>::__uninit_copy<std::queue<Flit*>*, std::queue<Flit*>*> (__position_23, _36, __new_finish_34);
  goto <bb 39>;

<L27>:
  goto <bb 51> (<L13>);

  <bb 39>:
  # DEBUG __new_finish => _94
  # DEBUG D#2635 => &this_9(D)->D.51519
  # DEBUG this => D#2635
  _38 = this_9(D)->D.51519._M_impl._M_finish;
  __first_39 = this_9(D)->D.51519._M_impl._M_start;
  # DEBUG __first => __first_39
  # DEBUG __last => _38
  # DEBUG __first => __first_39
  if (_38 == __first_39)
    goto <bb 44>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # __first_90 = PHI <__first_39(40), __first_96(42)>
  # DEBUG __first => __first_90
  # DEBUG __r => __first_90
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _95 = &MEM[(struct deque *)__first_90].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_95);
  MEM[(struct  &)__first_90] ={v} {CLOBBER};
  __first_96 = __first_90 + 80;
  # DEBUG __first => __first_96
  # DEBUG __first => __first_96
  if (_38 == __first_96)
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  goto <bb 41>;

  <bb 43>:
  pretmp_152 = this_9(D)->D.51519._M_impl._M_start;

  <bb 44>:
  # prephitmp_120 = PHI <pretmp_152(43), __first_39(39)>
  # DEBUG D#2646 => this_9(D)->D.51519._M_impl._M_end_of_storage
  # DEBUG D#2645 => (long int) D#2646
  # DEBUG D#3614 => this_9(D)->D.51519._M_impl._M_start
  # DEBUG D#2644 => (long int) D#3614
  # DEBUG D#2643 => D#2645 - D#2644
  # DEBUG D#2642 => D#2643 /[ex] 80
  # DEBUG D#2641 => &this_9(D)->D.51519
  # DEBUG D#654 => D#2641
  # DEBUG D#655 => (long unsigned int) D#2642
  # DEBUG __p => D#3614
  # DEBUG this => D#654
  # DEBUG __n => D#655
  # DEBUG D#653 => D#655
  # DEBUG D#652 => D#654
  if (prephitmp_120 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  # DEBUG D#651 => &D#652->_M_impl
  # DEBUG D#649 => D#651
  # DEBUG D#650 => D#653
  # DEBUG __p => D#3614
  # DEBUG __a => D#649
  # DEBUG __n => D#650
  # DEBUG D#648 => D#650
  # DEBUG D#647 => D#649
  # DEBUG D#645 => D#647
  # DEBUG D#646 => D#648
  # DEBUG __p => D#3614
  # DEBUG this => D#645
  # DEBUG D.129470 => D#646
  operator delete (prephitmp_120);

  <bb 46>:
  this_9(D)->D.51519._M_impl._M_start = __new_finish_138;
  this_9(D)->D.51519._M_impl._M_finish = _94;
  _45 = __new_finish_138 + prephitmp_153;
  this_9(D)->D.51519._M_impl._M_end_of_storage = _45;

  <bb 47>:
  return;

<L19>:

<L10>:
  # DEBUG this => &__x_copy
  # DEBUG D#1183 => &__x_copy.c
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&__x_copy].D.44077);
  resx 2

<L25>:

  # __new_finish_1 = PHI <__new_finish_138(50), 0B(36), __new_finish_34(38)>
<L13>:
  # DEBUG __new_finish => __new_finish_1
  _47 = __builtin_eh_pointer (9);
  __cxa_begin_catch (_47);
  if (__new_finish_1 == 0B)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 56>;

  <bb 53>:
  # DEBUG D#2639 => &this_9(D)->D.51519
  # DEBUG this => D#2639
  _49 = __n_7(D) + __elems_before_182;
  _50 = _49 * 80;
  _51 = __new_finish_138 + _50;
  # DEBUG __first => __first_28
  # DEBUG __last => _51

  <bb 54>:
  # __first_79 = PHI <__first_28(53), __first_98(55)>
  # DEBUG __first => __first_79
  if (_51 == __first_79)
    goto <bb 58>;
  else
    goto <bb 55>;

  <bb 55>:
  # DEBUG __r => __first_79
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _97 = &MEM[(struct deque *)__first_79].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_97);
  MEM[(struct  &)__first_79] ={v} {CLOBBER};
  __first_98 = __first_79 + 80;
  # DEBUG __first => __first_98
  goto <bb 54>;

  <bb 56>:
  # __new_finish_99 = PHI <__new_finish_138(52), __new_finish_101(57)>
  # DEBUG __first => __new_finish_99
  if (__new_finish_1 == __new_finish_99)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:
  # DEBUG __r => __new_finish_99
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _100 = &MEM[(struct deque *)__new_finish_99].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_100);
  MEM[(struct  &)__new_finish_99] ={v} {CLOBBER};
  __new_finish_101 = __new_finish_99 + 80;
  # DEBUG __first => __new_finish_101
  goto <bb 56>;

  <bb 58>:
  # DEBUG D#2647 => &this_9(D)->D.51519
  # DEBUG D#654 => D#2647
  # DEBUG __p => NULL
  # DEBUG this => D#654
  # DEBUG __n => D#655
  # DEBUG D#653 => D#655
  # DEBUG D#652 => D#654
  if (__new_finish_138 != 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  # DEBUG D#651 => &D#652->_M_impl
  # DEBUG D#649 => D#651
  # DEBUG D#650 => D#653
  # DEBUG __p => NULL
  # DEBUG __a => D#649
  # DEBUG __n => D#650
  # DEBUG D#648 => D#650
  # DEBUG D#647 => D#649
  # DEBUG D#645 => D#647
  # DEBUG D#646 => D#648
  # DEBUG __p => NULL
  # DEBUG this => D#645
  # DEBUG D.129521 => D#646
  operator delete (__new_finish_138);

  <bb 60>:
  __cxa_rethrow ();

<L18>:
  __cxa_end_catch ();
  resx 10

  <bb 62>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#388 => &this_9(D)->D.51519._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#388
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73172
  # DEBUG this => &__position
  _172 = (long int) __position_23;
  # DEBUG this => &D.73172
  _173 = _172 - _141;
  _168 = _173 /[ex] 80;
  __elems_before_169 = (const size_type) _168;
  # DEBUG __elems_before => __elems_before_169
  # DEBUG D#2648 => &this_9(D)->D.51519
  # DEBUG D#1466 => D#2648
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  goto <bb 33>;

  <bb 63>:
  # DEBUG __len => NULL
  # DEBUG this => this_9(D)
  # DEBUG D#388 => &this_9(D)->D.51519._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#388
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.73172
  # DEBUG this => &__position
  _163 = (long int) __position_23;
  # DEBUG this => &D.73172
  _164 = _163 - _141;
  _165 = _164 /[ex] 80;
  __elems_before_181 = (const size_type) _165;
  # DEBUG __elems_before => __elems_before_181
  # DEBUG D#2648 => &this_9(D)->D.51519
  # DEBUG D#1466 => D#2648
  # DEBUG __n => NULL
  # DEBUG this => D#1556
  # DEBUG D#1555 => D#1556
  if (__len_149 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = PriorityArbiter*; _Alloc = std::allocator<PriorityArbiter*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<PriorityArbiter**, std::vector<PriorityArbiter*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = PriorityArbiter**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = PriorityArbiter*] (_ZNSt6vectorIP15PriorityArbiterSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3188, decl_uid=53701, cgraph_uid=1537, symbol_order=1538)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = PriorityArbiter*; _Alloc = std::allocator<PriorityArbiter*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<PriorityArbiter**, std::vector<PriorityArbiter*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = PriorityArbiter**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = PriorityArbiter*] (struct vector * const this, struct iterator __position, size_type __n, struct PriorityArbiter * const & __x)
{
  struct tArrivalEvent * * D.146038;
  struct PriorityArbiter * * const __position;
  struct PriorityArbiter * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct PriorityArbiter * * __first;
  long unsigned int __n;
  struct PriorityArbiter * * __first;
  const ptrdiff_t _Num;
  struct PriorityArbiter * * __first;
  struct PriorityArbiter * * __new_finish;
  const size_type __elems_after;
  struct PriorityArbiter * __x_copy;
  struct PriorityArbiter * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  const size_type _13;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct PriorityArbiter * * _28;
  struct PriorityArbiter * * _33;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct PriorityArbiter * * _41;
  struct PriorityArbiter * * _43;
  long int _47;
  struct PriorityArbiter * * _48;
  long int __first.85_49;
  struct PriorityArbiter * * _53;
  struct PriorityArbiter * const _56;
  long unsigned int _59;
  long int __last.84_65;
  long int _66;
  long unsigned int _68;
  struct PriorityArbiter * * _70;
  long unsigned int _74;
  long int _81;
  long int _82;
  long int _83;
  struct PriorityArbiter * * _84;
  long unsigned int _102;
  struct tArrivalEvent * * _103;
  struct tArrivalEvent * * iftmp.160_104;
  long unsigned int _107;
  long int pretmp_109;
  long unsigned int pretmp_111;
  long int prephitmp_112;
  struct PriorityArbiter * * prephitmp_115;
  struct PriorityArbiter * * pretmp_120;
  long int pretmp_126;
  long unsigned int prephitmp_134;
  long unsigned int pretmp_137;
  long unsigned int prephitmp_138;
  long unsigned int pretmp_139;
  long unsigned int prephitmp_140;
  struct PriorityArbiter * * pretmp_141;
  struct PriorityArbiter * * prephitmp_142;
  long unsigned int pretmp_143;
  long unsigned int prephitmp_144;
  long unsigned int _145;
  struct PriorityArbiter * * pretmp_148;
  struct PriorityArbiter * * prephitmp_149;

  <bb 2>:
  # DEBUG D#3629 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3629
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 41>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.53778._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.53778._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 24>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#216 => &this_4(D)->D.53778._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG __lhs => &D.72592
  # DEBUG __rhs => &__position
  # DEBUG this => &D.72592
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 12>;

  <bb 6>:
  # DEBUG D#2283 => &this_4(D)->D.53778
  # DEBUG this => D#2283
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2275
  # DEBUG D#2274 => D#2275
  # DEBUG D#2273 => D#2274
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.124576 => D#2273
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.85_49 = (long int) _41;
  _47 = _8 - __first.85_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_148 = this_4(D)->D.53778._M_impl._M_finish;

  <bb 8>:
  # prephitmp_149 = PHI <__first_7(6), pretmp_148(7)>
  _43 = prephitmp_149 + _39;
  this_4(D)->D.53778._M_impl._M_finish = _43;
  # DEBUG this => &__position
  std::copy_backward<EventRouter::tTransportEvent**, EventRouter::tTransportEvent**> (__position_16, _41, __first_7);
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#993 => &__x_copy
  # DEBUG __first => D#3629
  # DEBUG __last => _48
  # DEBUG D#992 => D#993
  # DEBUG __value => D#992
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3629
  # DEBUG __it => D#3629
  # DEBUG D#746 => D#992
  # DEBUG __first => D#3629
  # DEBUG __last => _48
  # DEBUG __value => D#746
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3629
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # __position_76 = PHI <__position_16(9), __position_55(11)>
  # DEBUG __first => __position_76
  *__position_76 = __x_copy_35;
  __position_55 = __position_76 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:
  # DEBUG D#2284 => &this_4(D)->D.53778
  # DEBUG this => D#2284
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#1735 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1734 => D#1735
  # DEBUG __x => D#1734
  # DEBUG D.124661 => D#1736
  # DEBUG D#1733 => D#1734
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1732 => D#1733
  # DEBUG __x => D#1732
  # DEBUG __assignable => 1
  # DEBUG D#1731 => D#1732
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1730 => D#1731
  # DEBUG __x => D#1730
  # DEBUG D#1729 => D#1730
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1728 => D#1729
  # DEBUG __value => D#1728
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#1727 => D#1728
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#1727
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # __n_117 = PHI <__n_50(13), __n_63(16)>
  # __first_118 = PHI <__first_7(13), __first_64(16)>
  # DEBUG __niter => __n_117
  # DEBUG __first => __first_118
  *__first_118 = __x_copy_35;
  __n_63 = __n_117 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_118 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _145 = __n_50 * 8;
  __first_124 = __first_7 + _145;
  goto <bb 17>;

  <bb 16>:
  goto <bb 14>;

  <bb 17>:
  # __first_114 = PHI <__first_124(15), __first_7(12)>
  this_4(D)->D.53778._M_impl._M_finish = __first_114;
  # DEBUG D#2285 => &this_4(D)->D.53778
  # DEBUG this => D#2285
  # DEBUG this => &__position
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __alloc => D#2275
  # DEBUG D#2274 => D#2275
  # DEBUG D#2273 => D#2274
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG D.124623 => D#2273
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __assignable => 1
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3629
  # DEBUG __it => D#3629
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __it => __first_114
  # DEBUG __it => __first_114
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3629
  # DEBUG __it => D#3629
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __simple => 1
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  pretmp_143 = (long unsigned int) _23;
  goto <bb 20>;

  <bb 19>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_114, __position_16, _59);
  pretmp_141 = this_4(D)->D.53778._M_impl._M_finish;

  <bb 20>:
  # prephitmp_142 = PHI <__first_114(18), pretmp_141(19)>
  # prephitmp_144 = PHI <pretmp_143(18), _59(19)>
  _53 = prephitmp_142 + prephitmp_144;
  this_4(D)->D.53778._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#993 => &__x_copy
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG D#992 => D#993
  # DEBUG __value => D#992
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3629
  # DEBUG __it => D#3629
  # DEBUG D#746 => D#992
  # DEBUG __first => D#3629
  # DEBUG __last => __first_7
  # DEBUG __value => D#746
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3629
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 21>;

  <bb 21>:

  <bb 22>:
  # __position_116 = PHI <__position_16(21), __position_58(23)>
  # DEBUG __first => __position_116
  *__position_116 = __x_copy_35;
  __position_58 = __position_116 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  _13 = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_check_len (this_4(D), __n_2(D), "vector::_M_fill_insert");
  # DEBUG __len => _13
  # DEBUG this => this_4(D)
  # DEBUG D#375 => &this_4(D)->D.53778._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#375
  _84 = MEM[(struct PriorityArbiter * * const &)this_4(D)];
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72625
  # DEBUG this => &__position
  _81 = (long int) __position_16;
  # DEBUG this => &D.72625
  _82 = (long int) _84;
  _83 = _81 - _82;
  # DEBUG D#2296 => _83 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2296
  # DEBUG D#2295 => &this_4(D)->D.53778
  # DEBUG D#1430 => D#2295
  # DEBUG __n => _13
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_13 != 0)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  pretmp_111 = _13 * 8;
  goto <bb 29>;

  <bb 26>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _13
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _13
  # DEBUG this => D#1641
  # DEBUG D.146036 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_13 > 2305843009213693951)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_bad_alloc ();

  <bb 28>:
  _102 = _13 * 8;
  _103 = operator new (_102);
  pretmp_120 = this_4(D)->D.53778._M_impl._M_start;
  pretmp_126 = (long int) pretmp_120;
  pretmp_109 = _81 - pretmp_126;

  <bb 29>:
  # iftmp.160_104 = PHI <0B(25), _103(28)>
  # prephitmp_115 = PHI <_84(25), pretmp_120(28)>
  # prephitmp_112 = PHI <_83(25), pretmp_109(28)>
  # prephitmp_134 = PHI <pretmp_111(25), _102(28)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2279 => &this_4(D)->D.53778
  # DEBUG this => D#2279
  _19 = (long unsigned int) _83;
  __first_20 = iftmp.160_104 + _19;
  _56 = MEM[(struct PriorityArbiter * const &)__x_21(D)];
  # DEBUG D#1735 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1734 => D#1735
  # DEBUG __x => D#1734
  # DEBUG D.124778 => D#1736
  # DEBUG D#1733 => D#1734
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1732 => D#1733
  # DEBUG __x => D#1732
  # DEBUG __assignable => 1
  # DEBUG D#1731 => D#1732
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1730 => D#1731
  # DEBUG __x => D#1730
  # DEBUG D#1729 => D#1730
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1728 => D#1729
  # DEBUG __value => D#1728
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#1727 => D#1728
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#1727
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 30>:
  # __n_133 = PHI <__n_79(31), __n_2(D)(29)>
  # __first_132 = PHI <__first_80(31), __first_20(29)>
  # DEBUG __niter => __n_133
  # DEBUG __first => __first_132
  *__first_132 = _56;
  __n_79 = __n_133 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_132 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 30>;

  <bb 32>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2280 => &this_4(D)->D.53778
  # DEBUG this => D#2280
  # DEBUG this => &__position
  # DEBUG D#3628 => this_4(D)->D.53778._M_impl._M_start
  # DEBUG __first => D#3628
  # DEBUG __last => D#3629
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2277
  # DEBUG D#2276 => D#2277
  # DEBUG D#2273 => D#2276
  # DEBUG __first => D#3628
  # DEBUG __last => D#3629
  # DEBUG __result => NULL
  # DEBUG D.124740 => D#2273
  # DEBUG __first => D#3628
  # DEBUG __last => D#3629
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3628
  # DEBUG __last => D#3629
  # DEBUG __result => NULL
  # DEBUG __first => D#3628
  # DEBUG __last => D#3629
  # DEBUG __result => NULL
  # DEBUG __it => D#3629
  # DEBUG __it => D#3629
  # DEBUG __it => D#3628
  # DEBUG __it => D#3628
  # DEBUG __first => D#3628
  # DEBUG __last => D#3629
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3629
  # DEBUG __it => D#3629
  # DEBUG __it => D#3628
  # DEBUG __it => D#3628
  # DEBUG __first => D#3628
  # DEBUG __last => D#3629
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3628
  # DEBUG __last => D#3629
  # DEBUG __result => NULL
  # DEBUG D#3627 => (long int) D#3628
  # DEBUG D#3626 => _81 - D#3627
  _Num_73 = prephitmp_112 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  pretmp_137 = (long unsigned int) prephitmp_112;
  goto <bb 35>;

  <bb 34>:
  _74 = (long unsigned int) prephitmp_112;
  __builtin_memmove (iftmp.160_104, prephitmp_115, _74);

  <bb 35>:
  # prephitmp_138 = PHI <pretmp_137(33), _74(34)>
  # DEBUG D#3625 => (long unsigned int) D#3626
  # DEBUG __new_finish => iftmp.160_104 + D#3625
  _25 = __n_2(D) * 8;
  _107 = _25 + prephitmp_138;
  __new_finish_26 = iftmp.160_104 + _107;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2281 => &this_4(D)->D.53778
  # DEBUG this => D#2281
  _28 = this_4(D)->D.53778._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3629
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2277
  # DEBUG D#2276 => D#2277
  # DEBUG D#2273 => D#2276
  # DEBUG __first => D#3629
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG D.124701 => D#2273
  # DEBUG __first => D#3629
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3629
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3629
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __it => _28
  # DEBUG __it => _28
  # DEBUG __it => D#3629
  # DEBUG __it => D#3629
  # DEBUG __first => D#3629
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => _28
  # DEBUG __it => _28
  # DEBUG __it => D#3629
  # DEBUG __it => D#3629
  # DEBUG __first => D#3629
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#3629
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  __last.84_65 = (long int) _28;
  _66 = __last.84_65 - _81;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  pretmp_139 = (long unsigned int) _66;
  goto <bb 38>;

  <bb 37>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 38>:
  # prephitmp_140 = PHI <pretmp_139(36), _68(37)>
  _70 = __new_finish_26 + prephitmp_140;
  # DEBUG __new_finish => _70
  # DEBUG D#2282 => &this_4(D)->D.53778
  # DEBUG this => D#2282
  # DEBUG D#2294 => this_4(D)->D.53778._M_impl._M_finish
  # DEBUG D#2293 => this_4(D)->D.53778._M_impl._M_start
  # DEBUG __first => D#2293
  # DEBUG __last => D#2294
  # DEBUG D.124694 => NULL
  # DEBUG D#349 => D#2293
  # DEBUG D#350 => D#2294
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  # DEBUG D#2292 => this_4(D)->D.53778._M_impl._M_end_of_storage
  # DEBUG D#2291 => (long int) D#2292
  # DEBUG D#2290 => (long int) D#3628
  # DEBUG D#2289 => D#2291 - D#2290
  # DEBUG D#2288 => D#2289 /[ex] 8
  # DEBUG D#2287 => (long unsigned int) D#2288
  # DEBUG D#2286 => &this_4(D)->D.53778
  # DEBUG this => D#2286
  # DEBUG __p => D#3628
  # DEBUG __n => D#2287
  if (prephitmp_115 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#708 => &D#2286->_M_impl
  # DEBUG D#706 => D#708
  # DEBUG D#707 => D#2287
  # DEBUG __p => D#3628
  # DEBUG __a => D#706
  # DEBUG __n => D#707
  # DEBUG D#705 => D#707
  # DEBUG D#704 => D#706
  # DEBUG D#702 => D#704
  # DEBUG D#703 => D#705
  # DEBUG __p => D#3628
  # DEBUG this => D#702
  # DEBUG D.124690 => D#703
  operator delete (prephitmp_115);

  <bb 40>:
  this_4(D)->D.53778._M_impl._M_start = iftmp.160_104;
  this_4(D)->D.53778._M_impl._M_finish = _70;
  _33 = iftmp.160_104 + prephitmp_134;
  this_4(D)->D.53778._M_impl._M_end_of_storage = _33;

  <bb 41>:
  return;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = EventNextVCState*; _Alloc = std::allocator<EventNextVCState*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<EventNextVCState**, std::vector<EventNextVCState*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = EventNextVCState**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = EventNextVCState*] (_ZNSt6vectorIP16EventNextVCStateSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3184, decl_uid=50690, cgraph_uid=1533, symbol_order=1534)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = EventNextVCState*; _Alloc = std::allocator<EventNextVCState*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<EventNextVCState**, std::vector<EventNextVCState*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = EventNextVCState**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = EventNextVCState*] (struct vector * const this, struct iterator __position, size_type __n, struct EventNextVCState * const & __x)
{
  struct tArrivalEvent * * D.146135;
  struct EventNextVCState * * const __position;
  struct EventNextVCState * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct EventNextVCState * * __first;
  long unsigned int __n;
  struct EventNextVCState * * __first;
  const ptrdiff_t _Num;
  struct EventNextVCState * * __first;
  struct EventNextVCState * * __new_finish;
  const size_type __elems_after;
  struct EventNextVCState * __x_copy;
  struct EventNextVCState * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  const size_type _13;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct EventNextVCState * * _28;
  struct EventNextVCState * * _33;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct EventNextVCState * * _41;
  struct EventNextVCState * * _43;
  long int _47;
  struct EventNextVCState * * _48;
  long int __first.71_49;
  struct EventNextVCState * * _53;
  struct EventNextVCState * const _56;
  long unsigned int _59;
  long int __last.70_65;
  long int _66;
  long unsigned int _68;
  struct EventNextVCState * * _70;
  long unsigned int _74;
  long int _81;
  long int _82;
  long int _83;
  struct EventNextVCState * * _84;
  long unsigned int _102;
  struct tArrivalEvent * * _103;
  struct tArrivalEvent * * iftmp.160_104;
  long unsigned int _107;
  long int pretmp_109;
  long unsigned int pretmp_111;
  long int prephitmp_112;
  struct EventNextVCState * * prephitmp_115;
  struct EventNextVCState * * pretmp_120;
  long int pretmp_126;
  long unsigned int prephitmp_134;
  long unsigned int pretmp_137;
  long unsigned int prephitmp_138;
  long unsigned int pretmp_139;
  long unsigned int prephitmp_140;
  struct EventNextVCState * * pretmp_141;
  struct EventNextVCState * * prephitmp_142;
  long unsigned int pretmp_143;
  long unsigned int prephitmp_144;
  long unsigned int _145;
  struct EventNextVCState * * pretmp_148;
  struct EventNextVCState * * prephitmp_149;

  <bb 2>:
  # DEBUG D#3667 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3667
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 41>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.50767._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.50767._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 24>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#215 => &this_4(D)->D.50767._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#215
  # DEBUG __lhs => &D.72545
  # DEBUG __rhs => &__position
  # DEBUG this => &D.72545
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 12>;

  <bb 6>:
  # DEBUG D#2259 => &this_4(D)->D.50767
  # DEBUG this => D#2259
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2251
  # DEBUG D#2250 => D#2251
  # DEBUG D#2249 => D#2250
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.123989 => D#2249
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.71_49 = (long int) _41;
  _47 = _8 - __first.71_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_148 = this_4(D)->D.50767._M_impl._M_finish;

  <bb 8>:
  # prephitmp_149 = PHI <__first_7(6), pretmp_148(7)>
  _43 = prephitmp_149 + _39;
  this_4(D)->D.50767._M_impl._M_finish = _43;
  # DEBUG this => &__position
  std::copy_backward<EventRouter::tTransportEvent**, EventRouter::tTransportEvent**> (__position_16, _41, __first_7);
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#991 => &__x_copy
  # DEBUG __first => D#3667
  # DEBUG __last => _48
  # DEBUG D#990 => D#991
  # DEBUG __value => D#990
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3667
  # DEBUG __it => D#3667
  # DEBUG D#745 => D#990
  # DEBUG __first => D#3667
  # DEBUG __last => _48
  # DEBUG __value => D#745
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3667
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # __position_76 = PHI <__position_16(9), __position_55(11)>
  # DEBUG __first => __position_76
  *__position_76 = __x_copy_35;
  __position_55 = __position_76 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:
  # DEBUG D#2260 => &this_4(D)->D.50767
  # DEBUG this => D#2260
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#1725 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1724 => D#1725
  # DEBUG __x => D#1724
  # DEBUG D.124074 => D#1726
  # DEBUG D#1723 => D#1724
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1722 => D#1723
  # DEBUG __x => D#1722
  # DEBUG __assignable => 1
  # DEBUG D#1721 => D#1722
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1720 => D#1721
  # DEBUG __x => D#1720
  # DEBUG D#1719 => D#1720
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1718 => D#1719
  # DEBUG __value => D#1718
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#1717 => D#1718
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#1717
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # __n_117 = PHI <__n_50(13), __n_63(16)>
  # __first_118 = PHI <__first_7(13), __first_64(16)>
  # DEBUG __niter => __n_117
  # DEBUG __first => __first_118
  *__first_118 = __x_copy_35;
  __n_63 = __n_117 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_118 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _145 = __n_50 * 8;
  __first_124 = __first_7 + _145;
  goto <bb 17>;

  <bb 16>:
  goto <bb 14>;

  <bb 17>:
  # __first_114 = PHI <__first_124(15), __first_7(12)>
  this_4(D)->D.50767._M_impl._M_finish = __first_114;
  # DEBUG D#2261 => &this_4(D)->D.50767
  # DEBUG this => D#2261
  # DEBUG this => &__position
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __alloc => D#2251
  # DEBUG D#2250 => D#2251
  # DEBUG D#2249 => D#2250
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG D.124036 => D#2249
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __assignable => 1
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3667
  # DEBUG __it => D#3667
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __it => __first_114
  # DEBUG __it => __first_114
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3667
  # DEBUG __it => D#3667
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __simple => 1
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  pretmp_143 = (long unsigned int) _23;
  goto <bb 20>;

  <bb 19>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_114, __position_16, _59);
  pretmp_141 = this_4(D)->D.50767._M_impl._M_finish;

  <bb 20>:
  # prephitmp_142 = PHI <__first_114(18), pretmp_141(19)>
  # prephitmp_144 = PHI <pretmp_143(18), _59(19)>
  _53 = prephitmp_142 + prephitmp_144;
  this_4(D)->D.50767._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#991 => &__x_copy
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG D#990 => D#991
  # DEBUG __value => D#990
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3667
  # DEBUG __it => D#3667
  # DEBUG D#745 => D#990
  # DEBUG __first => D#3667
  # DEBUG __last => __first_7
  # DEBUG __value => D#745
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3667
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 21>;

  <bb 21>:

  <bb 22>:
  # __position_116 = PHI <__position_16(21), __position_58(23)>
  # DEBUG __first => __position_116
  *__position_116 = __x_copy_35;
  __position_58 = __position_116 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  _13 = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_check_len (this_4(D), __n_2(D), "vector::_M_fill_insert");
  # DEBUG __len => _13
  # DEBUG this => this_4(D)
  # DEBUG D#374 => &this_4(D)->D.50767._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#374
  _84 = MEM[(struct EventNextVCState * * const &)this_4(D)];
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72578
  # DEBUG this => &__position
  _81 = (long int) __position_16;
  # DEBUG this => &D.72578
  _82 = (long int) _84;
  _83 = _81 - _82;
  # DEBUG D#2272 => _83 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2272
  # DEBUG D#2271 => &this_4(D)->D.50767
  # DEBUG D#1416 => D#2271
  # DEBUG __n => _13
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_13 != 0)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  pretmp_111 = _13 * 8;
  goto <bb 29>;

  <bb 26>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _13
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _13
  # DEBUG this => D#1641
  # DEBUG D.146133 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_13 > 2305843009213693951)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_bad_alloc ();

  <bb 28>:
  _102 = _13 * 8;
  _103 = operator new (_102);
  pretmp_120 = this_4(D)->D.50767._M_impl._M_start;
  pretmp_126 = (long int) pretmp_120;
  pretmp_109 = _81 - pretmp_126;

  <bb 29>:
  # iftmp.160_104 = PHI <0B(25), _103(28)>
  # prephitmp_115 = PHI <_84(25), pretmp_120(28)>
  # prephitmp_112 = PHI <_83(25), pretmp_109(28)>
  # prephitmp_134 = PHI <pretmp_111(25), _102(28)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2255 => &this_4(D)->D.50767
  # DEBUG this => D#2255
  _19 = (long unsigned int) _83;
  __first_20 = iftmp.160_104 + _19;
  _56 = MEM[(struct EventNextVCState * const &)__x_21(D)];
  # DEBUG D#1725 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1724 => D#1725
  # DEBUG __x => D#1724
  # DEBUG D.124191 => D#1726
  # DEBUG D#1723 => D#1724
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1722 => D#1723
  # DEBUG __x => D#1722
  # DEBUG __assignable => 1
  # DEBUG D#1721 => D#1722
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1720 => D#1721
  # DEBUG __x => D#1720
  # DEBUG D#1719 => D#1720
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1718 => D#1719
  # DEBUG __value => D#1718
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#1717 => D#1718
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#1717
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 30>:
  # __n_133 = PHI <__n_79(31), __n_2(D)(29)>
  # __first_132 = PHI <__first_80(31), __first_20(29)>
  # DEBUG __niter => __n_133
  # DEBUG __first => __first_132
  *__first_132 = _56;
  __n_79 = __n_133 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_132 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 30>;

  <bb 32>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2256 => &this_4(D)->D.50767
  # DEBUG this => D#2256
  # DEBUG this => &__position
  # DEBUG D#3666 => this_4(D)->D.50767._M_impl._M_start
  # DEBUG __first => D#3666
  # DEBUG __last => D#3667
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2253
  # DEBUG D#2252 => D#2253
  # DEBUG D#2249 => D#2252
  # DEBUG __first => D#3666
  # DEBUG __last => D#3667
  # DEBUG __result => NULL
  # DEBUG D.124153 => D#2249
  # DEBUG __first => D#3666
  # DEBUG __last => D#3667
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3666
  # DEBUG __last => D#3667
  # DEBUG __result => NULL
  # DEBUG __first => D#3666
  # DEBUG __last => D#3667
  # DEBUG __result => NULL
  # DEBUG __it => D#3667
  # DEBUG __it => D#3667
  # DEBUG __it => D#3666
  # DEBUG __it => D#3666
  # DEBUG __first => D#3666
  # DEBUG __last => D#3667
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3667
  # DEBUG __it => D#3667
  # DEBUG __it => D#3666
  # DEBUG __it => D#3666
  # DEBUG __first => D#3666
  # DEBUG __last => D#3667
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3666
  # DEBUG __last => D#3667
  # DEBUG __result => NULL
  # DEBUG D#3665 => (long int) D#3666
  # DEBUG D#3664 => _81 - D#3665
  _Num_73 = prephitmp_112 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  pretmp_137 = (long unsigned int) prephitmp_112;
  goto <bb 35>;

  <bb 34>:
  _74 = (long unsigned int) prephitmp_112;
  __builtin_memmove (iftmp.160_104, prephitmp_115, _74);

  <bb 35>:
  # prephitmp_138 = PHI <pretmp_137(33), _74(34)>
  # DEBUG D#3663 => (long unsigned int) D#3664
  # DEBUG __new_finish => iftmp.160_104 + D#3663
  _25 = __n_2(D) * 8;
  _107 = _25 + prephitmp_138;
  __new_finish_26 = iftmp.160_104 + _107;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2257 => &this_4(D)->D.50767
  # DEBUG this => D#2257
  _28 = this_4(D)->D.50767._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3667
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2253
  # DEBUG D#2252 => D#2253
  # DEBUG D#2249 => D#2252
  # DEBUG __first => D#3667
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG D.124114 => D#2249
  # DEBUG __first => D#3667
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3667
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3667
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __it => _28
  # DEBUG __it => _28
  # DEBUG __it => D#3667
  # DEBUG __it => D#3667
  # DEBUG __first => D#3667
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => _28
  # DEBUG __it => _28
  # DEBUG __it => D#3667
  # DEBUG __it => D#3667
  # DEBUG __first => D#3667
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#3667
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  __last.70_65 = (long int) _28;
  _66 = __last.70_65 - _81;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  pretmp_139 = (long unsigned int) _66;
  goto <bb 38>;

  <bb 37>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 38>:
  # prephitmp_140 = PHI <pretmp_139(36), _68(37)>
  _70 = __new_finish_26 + prephitmp_140;
  # DEBUG __new_finish => _70
  # DEBUG D#2258 => &this_4(D)->D.50767
  # DEBUG this => D#2258
  # DEBUG D#2270 => this_4(D)->D.50767._M_impl._M_finish
  # DEBUG D#2269 => this_4(D)->D.50767._M_impl._M_start
  # DEBUG __first => D#2269
  # DEBUG __last => D#2270
  # DEBUG D.124107 => NULL
  # DEBUG D#339 => D#2269
  # DEBUG D#340 => D#2270
  # DEBUG __first => D#339
  # DEBUG __last => D#340
  # DEBUG D#338 => D#340
  # DEBUG D#337 => D#339
  # DEBUG D#335 => D#337
  # DEBUG D#336 => D#338
  # DEBUG D.100983 => D#335
  # DEBUG D.100982 => D#336
  # DEBUG D#2268 => this_4(D)->D.50767._M_impl._M_end_of_storage
  # DEBUG D#2267 => (long int) D#2268
  # DEBUG D#2266 => (long int) D#3666
  # DEBUG D#2265 => D#2267 - D#2266
  # DEBUG D#2264 => D#2265 /[ex] 8
  # DEBUG D#2263 => (long unsigned int) D#2264
  # DEBUG D#2262 => &this_4(D)->D.50767
  # DEBUG this => D#2262
  # DEBUG __p => D#3666
  # DEBUG __n => D#2263
  if (prephitmp_115 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#631 => &D#2262->_M_impl
  # DEBUG D#629 => D#631
  # DEBUG D#630 => D#2263
  # DEBUG __p => D#3666
  # DEBUG __a => D#629
  # DEBUG __n => D#630
  # DEBUG D#628 => D#630
  # DEBUG D#627 => D#629
  # DEBUG D#625 => D#627
  # DEBUG D#626 => D#628
  # DEBUG __p => D#3666
  # DEBUG this => D#625
  # DEBUG D.124103 => D#626
  operator delete (prephitmp_115);

  <bb 40>:
  this_4(D)->D.50767._M_impl._M_start = iftmp.160_104;
  this_4(D)->D.50767._M_impl._M_finish = _70;
  _33 = iftmp.160_104 + prephitmp_134;
  this_4(D)->D.50767._M_impl._M_end_of_storage = _33;

  <bb 41>:
  return;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Buffer*; _Alloc = std::allocator<Buffer*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Buffer**, std::vector<Buffer*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Buffer**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Buffer*] (_ZNSt6vectorIP6BufferSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=3150, decl_uid=49195, cgraph_uid=1499, symbol_order=1500)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Buffer*; _Alloc = std::allocator<Buffer*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Buffer**, std::vector<Buffer*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Buffer**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Buffer*] (struct vector * const this, struct iterator __position, size_type __n, struct Buffer * const & __x)
{
  struct tArrivalEvent * * D.146232;
  struct Buffer * * const __position;
  struct Buffer * * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct Buffer * * __first;
  long unsigned int __n;
  struct Buffer * * __first;
  const ptrdiff_t _Num;
  struct Buffer * * __first;
  struct Buffer * * __new_finish;
  const size_type __elems_after;
  struct Buffer * __x_copy;
  struct Buffer * * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  const size_type _13;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct Buffer * * _28;
  struct Buffer * * _33;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  struct Buffer * * _41;
  struct Buffer * * _43;
  long int _47;
  struct Buffer * * _48;
  long int __first.40_49;
  struct Buffer * * _53;
  struct Buffer * const _56;
  long unsigned int _59;
  long int __last.39_65;
  long int _66;
  long unsigned int _68;
  struct Buffer * * _70;
  long unsigned int _74;
  long int _81;
  long int _82;
  long int _83;
  struct Buffer * * _84;
  long unsigned int _102;
  struct tArrivalEvent * * _103;
  struct tArrivalEvent * * iftmp.160_104;
  long unsigned int _107;
  long int pretmp_109;
  long unsigned int pretmp_111;
  long int prephitmp_112;
  struct Buffer * * prephitmp_115;
  struct Buffer * * pretmp_120;
  long int pretmp_126;
  long unsigned int prephitmp_134;
  long unsigned int pretmp_137;
  long unsigned int prephitmp_138;
  long unsigned int pretmp_139;
  long unsigned int prephitmp_140;
  struct Buffer * * pretmp_141;
  struct Buffer * * prephitmp_142;
  long unsigned int pretmp_143;
  long unsigned int prephitmp_144;
  long unsigned int _145;
  struct Buffer * * pretmp_148;
  struct Buffer * * prephitmp_149;

  <bb 2>:
  # DEBUG D#3705 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#3705
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 41>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.49272._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.49272._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 8;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 24>;

  <bb 5>:
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copy => __x_copy_35
  # DEBUG this => this_4(D)
  # DEBUG D#213 => &this_4(D)->D.49272._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#213
  # DEBUG __lhs => &D.72346
  # DEBUG __rhs => &__position
  # DEBUG this => &D.72346
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 8;
  __elems_after_37 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_37
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 12>;

  <bb 6>:
  # DEBUG D#2235 => &this_4(D)->D.49272
  # DEBUG this => D#2235
  _39 = __n_2(D) * 8;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#2227
  # DEBUG D#2226 => D#2227
  # DEBUG D#2225 => D#2226
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.123402 => D#2225
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.40_49 = (long int) _41;
  _47 = _8 - __first.40_49;
  _Num_45 = _47 /[ex] 8;
  # DEBUG _Num => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _38 = (long unsigned int) _47;
  __builtin_memmove (__first_7, _41, _38);
  pretmp_148 = this_4(D)->D.49272._M_impl._M_finish;

  <bb 8>:
  # prephitmp_149 = PHI <__first_7(6), pretmp_148(7)>
  _43 = prephitmp_149 + _39;
  this_4(D)->D.49272._M_impl._M_finish = _43;
  # DEBUG this => &__position
  std::copy_backward<EventRouter::tTransportEvent**, EventRouter::tTransportEvent**> (__position_16, _41, __first_7);
  # DEBUG this => &__position
  _48 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG D#956 => &__x_copy
  # DEBUG __first => D#3705
  # DEBUG __last => _48
  # DEBUG D#955 => D#956
  # DEBUG __value => D#955
  # DEBUG __it => _48
  # DEBUG __it => _48
  # DEBUG __it => D#3705
  # DEBUG __it => D#3705
  # DEBUG D#739 => D#955
  # DEBUG __first => D#3705
  # DEBUG __last => _48
  # DEBUG __value => D#739
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3705
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 9>:

  <bb 10>:
  # __position_76 = PHI <__position_16(9), __position_55(11)>
  # DEBUG __first => __position_76
  *__position_76 = __x_copy_35;
  __position_55 = __position_76 + 8;
  # DEBUG __first => __position_55
  # DEBUG __first => __position_55
  if (_48 == __position_55)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:
  # DEBUG D#2236 => &this_4(D)->D.49272
  # DEBUG this => D#2236
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#1715 => &__x_copy
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1714 => D#1715
  # DEBUG __x => D#1714
  # DEBUG D.123487 => D#1716
  # DEBUG D#1713 => D#1714
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1712 => D#1713
  # DEBUG __x => D#1712
  # DEBUG __assignable => 1
  # DEBUG D#1711 => D#1712
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1710 => D#1711
  # DEBUG __x => D#1710
  # DEBUG D#1709 => D#1710
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG D#1708 => D#1709
  # DEBUG __value => D#1708
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG D#1707 => D#1708
  # DEBUG __first => __first_7
  # DEBUG __n => __n_50
  # DEBUG __value => D#1707
  # DEBUG __tmp => __x_copy_35
  # DEBUG __niter => __n_50
  # DEBUG __niter => __n_50
  # DEBUG __first => __first_7
  if (__n_50 == 0)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # __n_117 = PHI <__n_50(13), __n_63(16)>
  # __first_118 = PHI <__first_7(13), __first_64(16)>
  # DEBUG __niter => __n_117
  # DEBUG __first => __first_118
  *__first_118 = __x_copy_35;
  __n_63 = __n_117 + 18446744073709551615;
  # DEBUG __niter => __n_63
  __first_64 = __first_118 + 8;
  # DEBUG __first => __first_64
  # DEBUG __niter => __n_63
  # DEBUG __first => __first_64
  if (__n_63 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _145 = __n_50 * 8;
  __first_124 = __first_7 + _145;
  goto <bb 17>;

  <bb 16>:
  goto <bb 14>;

  <bb 17>:
  # __first_114 = PHI <__first_124(15), __first_7(12)>
  this_4(D)->D.49272._M_impl._M_finish = __first_114;
  # DEBUG D#2237 => &this_4(D)->D.49272
  # DEBUG this => D#2237
  # DEBUG this => &__position
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __alloc => D#2227
  # DEBUG D#2226 => D#2227
  # DEBUG D#2225 => D#2226
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG D.123449 => D#2225
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __assignable => 1
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3705
  # DEBUG __it => D#3705
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __it => __first_114
  # DEBUG __it => __first_114
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3705
  # DEBUG __it => D#3705
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG __simple => 1
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __result => __first_114
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  pretmp_143 = (long unsigned int) _23;
  goto <bb 20>;

  <bb 19>:
  _59 = (long unsigned int) _23;
  __builtin_memmove (__first_114, __position_16, _59);
  pretmp_141 = this_4(D)->D.49272._M_impl._M_finish;

  <bb 20>:
  # prephitmp_142 = PHI <__first_114(18), pretmp_141(19)>
  # prephitmp_144 = PHI <pretmp_143(18), _59(19)>
  _53 = prephitmp_142 + prephitmp_144;
  this_4(D)->D.49272._M_impl._M_finish = _53;
  # DEBUG this => &__position
  # DEBUG D#956 => &__x_copy
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG D#955 => D#956
  # DEBUG __value => D#955
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#3705
  # DEBUG __it => D#3705
  # DEBUG D#739 => D#955
  # DEBUG __first => D#3705
  # DEBUG __last => __first_7
  # DEBUG __value => D#739
  # DEBUG __tmp => __x_copy_35
  # DEBUG __first => D#3705
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 21>;

  <bb 21>:

  <bb 22>:
  # __position_116 = PHI <__position_16(21), __position_58(23)>
  # DEBUG __first => __position_116
  *__position_116 = __x_copy_35;
  __position_58 = __position_116 + 8;
  # DEBUG __first => __position_58
  # DEBUG __first => __position_58
  if (__first_7 == __position_58)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:
  goto <bb 22>;

  <bb 24>:
  _13 = std::vector<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_check_len (this_4(D), __n_2(D), "vector::_M_fill_insert");
  # DEBUG __len => _13
  # DEBUG this => this_4(D)
  # DEBUG D#367 => &this_4(D)->D.49272._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#367
  _84 = MEM[(struct Buffer * * const &)this_4(D)];
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.72379
  # DEBUG this => &__position
  _81 = (long int) __position_16;
  # DEBUG this => &D.72379
  _82 = (long int) _84;
  _83 = _81 - _82;
  # DEBUG D#2248 => _83 /[ex] 8
  # DEBUG __elems_before => (const size_type) D#2248
  # DEBUG D#2247 => &this_4(D)->D.49272
  # DEBUG D#1340 => D#2247
  # DEBUG __n => _13
  # DEBUG this => D#1647
  # DEBUG D#1646 => D#1647
  if (_13 != 0)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  pretmp_111 = _13 * 8;
  goto <bb 29>;

  <bb 26>:
  # DEBUG D#1645 => &D#1646->_M_impl
  # DEBUG D#1644 => D#1645
  # DEBUG __n => _13
  # DEBUG __a => D#1644
  # DEBUG D#1643 => D#1644
  # DEBUG D#1641 => D#1643
  # DEBUG D#1642 => 0B
  # DEBUG __n => _13
  # DEBUG this => D#1641
  # DEBUG D.146230 => D#1642
  # DEBUG D#1640 => D#1641
  # DEBUG D#1639 => D#1640
  # DEBUG this => D#1639
  if (_13 > 2305843009213693951)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_bad_alloc ();

  <bb 28>:
  _102 = _13 * 8;
  _103 = operator new (_102);
  pretmp_120 = this_4(D)->D.49272._M_impl._M_start;
  pretmp_126 = (long int) pretmp_120;
  pretmp_109 = _81 - pretmp_126;

  <bb 29>:
  # iftmp.160_104 = PHI <0B(25), _103(28)>
  # prephitmp_115 = PHI <_84(25), pretmp_120(28)>
  # prephitmp_112 = PHI <_83(25), pretmp_109(28)>
  # prephitmp_134 = PHI <pretmp_111(25), _102(28)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#2231 => &this_4(D)->D.49272
  # DEBUG this => D#2231
  _19 = (long unsigned int) _83;
  __first_20 = iftmp.160_104 + _19;
  _56 = MEM[(struct Buffer * const &)__x_21(D)];
  # DEBUG D#1715 => __x_21(D)
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1714 => D#1715
  # DEBUG __x => D#1714
  # DEBUG D.123604 => D#1716
  # DEBUG D#1713 => D#1714
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1712 => D#1713
  # DEBUG __x => D#1712
  # DEBUG __assignable => 1
  # DEBUG D#1711 => D#1712
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1710 => D#1711
  # DEBUG __x => D#1710
  # DEBUG D#1709 => D#1710
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG D#1708 => D#1709
  # DEBUG __value => D#1708
  # DEBUG __it => __first_20
  # DEBUG __it => __first_20
  # DEBUG D#1707 => D#1708
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __value => D#1707
  # DEBUG __tmp => _56
  # DEBUG __niter => __n_2(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 30>:
  # __n_133 = PHI <__n_79(31), __n_2(D)(29)>
  # __first_132 = PHI <__first_80(31), __first_20(29)>
  # DEBUG __niter => __n_133
  # DEBUG __first => __first_132
  *__first_132 = _56;
  __n_79 = __n_133 + 18446744073709551615;
  # DEBUG __niter => __n_79
  __first_80 = __first_132 + 8;
  # DEBUG __first => __first_80
  # DEBUG __niter => __n_79
  # DEBUG __first => __first_80
  if (__n_79 == 0)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 30>;

  <bb 32>:
  # DEBUG __new_finish => 0B
  # DEBUG D#2232 => &this_4(D)->D.49272
  # DEBUG this => D#2232
  # DEBUG this => &__position
  # DEBUG D#3704 => this_4(D)->D.49272._M_impl._M_start
  # DEBUG __first => D#3704
  # DEBUG __last => D#3705
  # DEBUG __result => NULL
  # DEBUG __alloc => D#2229
  # DEBUG D#2228 => D#2229
  # DEBUG D#2225 => D#2228
  # DEBUG __first => D#3704
  # DEBUG __last => D#3705
  # DEBUG __result => NULL
  # DEBUG D.123566 => D#2225
  # DEBUG __first => D#3704
  # DEBUG __last => D#3705
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#3704
  # DEBUG __last => D#3705
  # DEBUG __result => NULL
  # DEBUG __first => D#3704
  # DEBUG __last => D#3705
  # DEBUG __result => NULL
  # DEBUG __it => D#3705
  # DEBUG __it => D#3705
  # DEBUG __it => D#3704
  # DEBUG __it => D#3704
  # DEBUG __first => D#3704
  # DEBUG __last => D#3705
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#3705
  # DEBUG __it => D#3705
  # DEBUG __it => D#3704
  # DEBUG __it => D#3704
  # DEBUG __first => D#3704
  # DEBUG __last => D#3705
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#3704
  # DEBUG __last => D#3705
  # DEBUG __result => NULL
  # DEBUG D#3703 => (long int) D#3704
  # DEBUG D#3702 => _81 - D#3703
  _Num_73 = prephitmp_112 /[ex] 8;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  pretmp_137 = (long unsigned int) prephitmp_112;
  goto <bb 35>;

  <bb 34>:
  _74 = (long unsigned int) prephitmp_112;
  __builtin_memmove (iftmp.160_104, prephitmp_115, _74);

  <bb 35>:
  # prephitmp_138 = PHI <pretmp_137(33), _74(34)>
  # DEBUG D#3701 => (long unsigned int) D#3702
  # DEBUG __new_finish => iftmp.160_104 + D#3701
  _25 = __n_2(D) * 8;
  _107 = _25 + prephitmp_138;
  __new_finish_26 = iftmp.160_104 + _107;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#2233 => &this_4(D)->D.49272
  # DEBUG this => D#2233
  _28 = this_4(D)->D.49272._M_impl._M_finish;
  # DEBUG this => &__position
  # DEBUG __first => D#3705
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#2229
  # DEBUG D#2228 => D#2229
  # DEBUG D#2225 => D#2228
  # DEBUG __first => D#3705
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG D.123527 => D#2225
  # DEBUG __first => D#3705
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#3705
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#3705
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __it => _28
  # DEBUG __it => _28
  # DEBUG __it => D#3705
  # DEBUG __it => D#3705
  # DEBUG __first => D#3705
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => _28
  # DEBUG __it => _28
  # DEBUG __it => D#3705
  # DEBUG __it => D#3705
  # DEBUG __first => D#3705
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#3705
  # DEBUG __last => _28
  # DEBUG __result => __new_finish_26
  __last.39_65 = (long int) _28;
  _66 = __last.39_65 - _81;
  _Num_67 = _66 /[ex] 8;
  # DEBUG _Num => _Num_67
  if (_Num_67 != 0)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  pretmp_139 = (long unsigned int) _66;
  goto <bb 38>;

  <bb 37>:
  _68 = (long unsigned int) _66;
  __builtin_memcpy (__new_finish_26, __position_16, _68);

  <bb 38>:
  # prephitmp_140 = PHI <pretmp_139(36), _68(37)>
  _70 = __new_finish_26 + prephitmp_140;
  # DEBUG __new_finish => _70
  # DEBUG D#2234 => &this_4(D)->D.49272
  # DEBUG this => D#2234
  # DEBUG D#2246 => this_4(D)->D.49272._M_impl._M_finish
  # DEBUG D#2245 => this_4(D)->D.49272._M_impl._M_start
  # DEBUG __first => D#2245
  # DEBUG __last => D#2246
  # DEBUG D.123520 => NULL
  # DEBUG D#329 => D#2245
  # DEBUG D#330 => D#2246
  # DEBUG __first => D#329
  # DEBUG __last => D#330
  # DEBUG D#328 => D#330
  # DEBUG D#327 => D#329
  # DEBUG D#325 => D#327
  # DEBUG D#326 => D#328
  # DEBUG D.100933 => D#325
  # DEBUG D.100932 => D#326
  # DEBUG D#2244 => this_4(D)->D.49272._M_impl._M_end_of_storage
  # DEBUG D#2243 => (long int) D#2244
  # DEBUG D#2242 => (long int) D#3704
  # DEBUG D#2241 => D#2243 - D#2242
  # DEBUG D#2240 => D#2241 /[ex] 8
  # DEBUG D#2239 => (long unsigned int) D#2240
  # DEBUG D#2238 => &this_4(D)->D.49272
  # DEBUG this => D#2238
  # DEBUG __p => D#3704
  # DEBUG __n => D#2239
  if (prephitmp_115 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # DEBUG D#586 => &D#2238->_M_impl
  # DEBUG D#584 => D#586
  # DEBUG D#585 => D#2239
  # DEBUG __p => D#3704
  # DEBUG __a => D#584
  # DEBUG __n => D#585
  # DEBUG D#583 => D#585
  # DEBUG D#582 => D#584
  # DEBUG D#580 => D#582
  # DEBUG D#581 => D#583
  # DEBUG __p => D#3704
  # DEBUG this => D#580
  # DEBUG D.123516 => D#581
  operator delete (prephitmp_115);

  <bb 40>:
  this_4(D)->D.49272._M_impl._M_start = iftmp.160_104;
  this_4(D)->D.49272._M_impl._M_finish = _70;
  _33 = iftmp.160_104 + prephitmp_134;
  this_4(D)->D.49272._M_impl._M_end_of_storage = _33;

  <bb 41>:
  return;

}



;; Function EventRouter::EventRouter(const Configuration&, Module*, const string&, int, int, int) (_ZN11EventRouterC2ERK13ConfigurationP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiii, funcdef_no=2154, decl_uid=54614, cgraph_uid=503, symbol_order=504)

Trying loop 12 as candidate
loop 12 is innermost
loop is not parallel according to graphite
Trying loop 11 as candidate
loop 11 is innermost
loop is not parallel according to graphite
Trying loop 10 as candidate
loop 10 is innermost
loop is not parallel according to graphite
Trying loop 9 as candidate
loop 9 is innermost
loop is not parallel according to graphite
Trying loop 8 as candidate
loop 8 is innermost
loop is not parallel according to graphite
Trying loop 7 as candidate
loop 7 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 6 as candidate
loop 6 is innermost
loop is not parallel according to graphite
Trying loop 5 as candidate
loop 5 is innermost
loop is not parallel according to graphite
EventRouter::EventRouter(const Configuration&, Module*, const string&, int, int, int) (struct EventRouter * const this, const struct Configuration & config, struct Module * parent, const struct string & name, int id, int inputs, int outputs)
{
  struct _Rb_tree_node_base * SR.6862;
  struct _Rb_tree_node_base * SR.6861;
  struct iterator __position;
  value_type __x;
  _Bit_type * __tmp$_M_p;
  difference_type __n;
  struct iterator __position;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct queue * __pos;
  struct iterator __position;
  struct PriorityArbiter * __x;
  struct iterator __position;
  struct PriorityArbiter * __x;
  struct basic_ostream & D.146563;
  struct iterator __position;
  struct EventNextVCState * __x;
  struct iterator __position;
  difference_type __n;
  _Bit_type * __tmp$_M_p;
  struct iterator __position;
  struct vector * __pos;
  struct iterator __position;
  struct Buffer * __x;
  struct basic_string & D.146484;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.146444;
  const size_type __size;
  const size_type __osize;
  const size_type __len;
  int __r;
  const difference_type __d;
  int D.146429;
  struct iterator D.146414;
  struct _Rb_tree_node * __y;
  struct basic_string & D.146358;
  struct _Rb_tree_node_base * SR.4090;
  struct iterator D.131879;
  int i;
  int o;
  int o;
  int i;
  struct string rf;
  struct ostringstream module_name;
  struct deque D.61823;
  struct value_type D.61822;
  struct deque D.61821;
  struct value_type D.61820;
  struct deque D.61819;
  struct value_type D.61818;
  struct deque D.61817;
  struct value_type D.61816;
  struct deque D.61815;
  struct value_type D.61814;
  struct deque D.61813;
  struct value_type D.61812;
  const struct string D.61809;
  const struct string D.61805;
  const struct string D.61801;
  struct __string_type D.61798;
  struct __string_type D.61793;
  struct __string_type D.61788;
  struct __string_type D.61783;
  struct value_type D.61779;
  struct basic_string D.61778;
  const struct string D.61772;
  struct string D.61771;
  struct basic_string D.61770;
  const struct string D.61775;
  struct string D.61774;
  const struct string D.61767;
  const struct string D.61765;
  struct vector * pretmp_1;
  struct vector * pretmp_2;
  struct _Rb_tree_node_base * cstore_3;
  struct vector * pretmp_4;
  struct vector * prephitmp_6;
  struct vector * pretmp_7;
  struct vector * pretmp_8;
  struct vector * pretmp_9;
  struct Router * _31;
  long unsigned int _41;
  struct Buffer * & _42;
  int _46;
  char * const _49;
  struct PriorityArbiter * & _50;
  int _53;
  struct vector * pretmp_55;
  char * const _57;
  long unsigned int _58;
  struct vector * pretmp_64;
  char * const _65;
  char * const _67;
  char * const _69;
  char * const _71;
  char * const _73;
  char * const _75;
  const size_type _76;
  struct vector * pretmp_77;
  void (*<T75c3>) (const struct Router *, const struct Flit *, int, struct OutputSet *, bool) _81;
  int _83;
  long unsigned int _84;
  struct vector * _85;
  struct vector * const _86;
  struct vector * _89;
  unsigned int _90;
  int _92;
  char * const _94;
  void * _96;
  struct vector * pretmp_97;
  int _98;
  long unsigned int _100;
  struct EventNextVCState * & _101;
  int _105;
  long unsigned int _106;
  long unsigned int _107;
  struct EventNextVCState * * const _108;
  char * const _111;
  int _113;
  long unsigned int _114;
  struct vector * _115;
  struct vector * pretmp_116;
  int _117;
  struct basic_ostream & _119;
  struct PriorityArbiter * * const _120;
  char * const _121;
  void * _123;
  struct vector * pretmp_124;
  long unsigned int _126;
  char * const _132;
  long unsigned int _134;
  struct vector * _135;
  struct PriorityArbiter * * const _136;
  int _137;
  char * const _139;
  void * _141;
  int _142;
  long unsigned int _145;
  char * const _151;
  int _153;
  long unsigned int _154;
  struct vector * _155;
  struct queue * const _156;
  int _157;
  char * const _159;
  void * _161;
  int _162;
  struct vector * pretmp_163;
  long unsigned int _165;
  char * const _171;
  struct vector & _173;
  void * _176;
  int _177;
  int _178;
  struct vector * pretmp_179;
  char * const _183;
  long unsigned int _184;
  void * _187;
  int _188;
  int _189;
  char * const _193;
  void * _196;
  int _197;
  char * const _201;
  int _202;
  long unsigned int _203;
  struct vector * _204;
  struct queue * const _205;
  int _208;
  long unsigned int _209;
  struct vector * _210;
  struct queue * const _211;
  int _214;
  long unsigned int _215;
  struct vector * _216;
  struct queue * const _217;
  int _220;
  long unsigned int _221;
  struct vector * _222;
  struct queue * const _223;
  int _226;
  long unsigned int _227;
  struct vector * _228;
  struct queue * const _229;
  int _232;
  long unsigned int _233;
  struct vector * _234;
  unsigned int _235;
  char * const _236;
  int _239;
  long unsigned int _240;
  struct vector * _241;
  int * const _242;
  struct vector * _245;
  struct vector * pretmp_246;
  char * const _247;
  char * const _248;
  struct vector * pretmp_251;
  char * const _253;
  char * const _269;
  char * const _272;
  char * const _273;
  int * _275;
  char * const _276;
  char * const _278;
  char * const _281;
  char * const _282;
  char * const _285;
  char * const _287;
  char * const _289;
  struct vector * pretmp_293;
  struct PriorityArbiter * * _295;
  struct PriorityArbiter * * _296;
  struct EventNextVCState * * _299;
  struct Buffer * * _310;
  struct Buffer * * _315;
  struct vector * _316;
  struct EventNextVCState * * _317;
  struct PriorityArbiter * * _318;
  struct PriorityArbiter * * _319;
  long unsigned int _320;
  struct PriorityArbiter * & _321;
  struct vector * pretmp_400;
  struct vector * pretmp_401;
  struct vector * pretmp_402;
  struct vector * pretmp_403;
  struct vector * pretmp_405;
  struct vector * pretmp_406;
  struct vector * pretmp_407;
  struct vector * pretmp_408;
  struct vector * prephitmp_410;
  struct vector * pretmp_411;
  struct vector * pretmp_412;
  struct vector * pretmp_415;
  struct vector * pretmp_416;
  struct vector * pretmp_417;
  struct vector * pretmp_418;
  struct vector * pretmp_420;
  struct vector * pretmp_421;
  struct vector * pretmp_422;
  struct vector * pretmp_423;
  struct vector * pretmp_425;
  struct vector * pretmp_426;
  struct vector * pretmp_427;
  struct vector * pretmp_428;
  struct vector * pretmp_430;
  struct vector * pretmp_431;
  struct vector * pretmp_432;
  struct vector * pretmp_433;
  const size_type _434;
  struct vector * pretmp_435;
  struct vector * pretmp_437;
  struct vector * pretmp_438;
  struct vector * pretmp_439;
  struct vector * pretmp_440;
  struct vector * pretmp_452;
  struct vector * pretmp_453;
  struct vector * pretmp_454;
  struct vector * pretmp_455;
  struct vector * pretmp_456;
  struct vector * pretmp_460;
  struct vector * pretmp_461;
  struct vector * pretmp_462;
  struct vector * pretmp_463;
  struct vector * pretmp_472;
  struct vector * pretmp_473;
  struct vector * pretmp_474;
  struct vector * pretmp_475;
  struct vector * pretmp_484;
  struct vector * pretmp_485;
  struct vector * pretmp_486;
  struct vector * pretmp_487;
  struct vector * pretmp_496;
  struct vector * pretmp_497;
  struct vector * pretmp_498;
  struct vector * pretmp_499;
  struct vector * pretmp_506;
  struct vector * pretmp_507;
  struct vector * pretmp_508;
  struct vector * pretmp_509;
  struct vector * pretmp_511;
  struct vector * pretmp_512;
  struct vector * pretmp_514;
  struct vector * pretmp_516;
  struct vector * pretmp_517;
  struct vector * pretmp_518;
  struct vector * prephitmp_519;
  struct vector * prephitmp_550;
  struct vector * pretmp_551;
  struct vector * prephitmp_568;
  struct vector * pretmp_570;
  struct vector * pretmp_584;
  struct vector * prephitmp_587;
  struct vector * prephitmp_601;
  struct vector * pretmp_602;
  struct vector * prephitmp_619;
  struct vector * pretmp_621;
  char * const _755;
  const size_type _756;
  char * _757;
  char * const _758;
  const size_type _759;
  struct vector * pretmp_760;
  struct vector * pretmp_761;
  struct vector * pretmp_762;
  char * const _763;
  const size_type _764;
  char * _765;
  const size_type _766;
  char * const _767;
  char * const _768;
  struct vector * pretmp_770;
  struct vector * pretmp_771;
  struct vector * pretmp_775;
  struct vector * pretmp_776;
  struct vector * pretmp_777;
  struct vector * pretmp_782;
  char * const _784;
  long unsigned int _786;
  struct vector * pretmp_790;
  const size_type _792;
  struct vector * pretmp_793;
  struct vector * pretmp_794;
  char * const _795;
  long unsigned int _798;
  struct vector * pretmp_802;
  struct vector * pretmp_803;
  struct vector * pretmp_804;
  long unsigned int _806;
  const size_type _807;
  char * const _808;
  char * const _809;
  long unsigned int _810;
  struct vector * pretmp_811;
  struct Buffer * * const _812;
  struct Buffer * * const _813;
  long int _814;
  long int _815;
  long int _816;
  long int _817;
  size_type _818;
  long unsigned int _819;
  long unsigned int _820;
  struct Buffer * * _821;
  struct vector * const _822;
  long int _823;
  long int _824;
  long int _825;
  long int _826;
  size_type _827;
  long unsigned int _828;
  long unsigned int _829;
  struct vector * pretmp_831;
  struct _Bvector_base * _832;
  _Bit_type * _834;
  unsigned int _835;
  _Bit_type * _836;
  long int _837;
  long int _838;
  long int _839;
  long int _840;
  long int _841;
  long int _842;
  long int _843;
  ptrdiff_t _844;
  size_type _845;
  long int __new_size.421_846;
  long int _848;
  long unsigned int _849;
  long unsigned int _850;
  unsigned int _856;
  long unsigned int _858;
  struct vector * prephitmp_859;
  struct EventNextVCState * * const _860;
  long int _861;
  long int _862;
  long int _863;
  long int _864;
  size_type _865;
  long unsigned int _866;
  long unsigned int _867;
  struct EventNextVCState * * _868;
  struct vector * pretmp_869;
  struct PriorityArbiter * * const _870;
  long int _871;
  long int _872;
  long int _873;
  long int _874;
  size_type _875;
  long unsigned int _876;
  long unsigned int _877;
  struct PriorityArbiter * * _878;
  struct PriorityArbiter * * const _879;
  long int _880;
  long int _881;
  long int _882;
  long int _883;
  size_type _884;
  long unsigned int _885;
  long unsigned int _886;
  struct PriorityArbiter * * _887;
  struct queue * const _888;
  long int _889;
  long int _890;
  long int _891;
  long int _892;
  size_type _893;
  long unsigned int _894;
  long unsigned int _895;
  struct vector * pretmp_897;
  struct _Deque_base * _898;
  struct queue * const _900;
  long int _901;
  long int _902;
  long int _903;
  long int _904;
  size_type _905;
  long unsigned int _906;
  long unsigned int _907;
  struct vector * pretmp_909;
  struct _Deque_base * _910;
  struct queue * const _912;
  long int _913;
  long int _914;
  long int _915;
  long int _916;
  size_type _917;
  long unsigned int _918;
  long unsigned int _919;
  struct vector * pretmp_921;
  struct _Deque_base * _922;
  struct queue * const _924;
  long int _925;
  long int _926;
  long int _927;
  long int _928;
  size_type _929;
  long unsigned int _930;
  long unsigned int _931;
  struct vector * pretmp_933;
  struct _Deque_base * _934;
  struct queue * const _936;
  long int _937;
  long int _938;
  long int _939;
  long int _940;
  size_type _941;
  long unsigned int _942;
  long unsigned int _943;
  struct vector * pretmp_945;
  struct _Deque_base * _946;
  struct queue * const _948;
  long int _949;
  long int _950;
  long int _951;
  long int _952;
  size_type _953;
  long unsigned int _954;
  long unsigned int _955;
  struct vector * pretmp_957;
  struct _Deque_base * _958;
  _Bit_type * _960;
  unsigned int _961;
  _Bit_type * _962;
  long int _963;
  long int _964;
  long int _965;
  long int _966;
  long int _967;
  long int _968;
  long int _969;
  ptrdiff_t _970;
  size_type _971;
  long int __new_size.421_972;
  long int _974;
  long unsigned int _975;
  long unsigned int _976;
  unsigned int _982;
  long unsigned int _984;
  struct vector * pretmp_985;
  int * const _986;
  long int _987;
  long int _988;
  long int _989;
  long int _990;
  size_type _991;
  long unsigned int _992;
  long unsigned int _993;
  int * _994;
  struct vector * pretmp_995;
  int (*__vtbl_ptr_type) () * iftmp.13_996;
  long int _997;
  sizetype iftmp.14_998;
  struct basic_ios * _999;
  int (*__vtbl_ptr_type) () * iftmp.15_1000;
  struct vector * pretmp_1001;
  struct vector * pretmp_1007;
  struct vector * pretmp_1009;
  struct vector * pretmp_1013;
  struct vector * pretmp_1017;
  struct vector * pretmp_1019;
  struct vector * pretmp_1023;
  struct vector * pretmp_1025;
  struct vector * pretmp_1027;
  struct vector * pretmp_1029;
  struct vector * pretmp_1038;
  struct vector * pretmp_1042;
  struct vector * pretmp_1043;
  struct vector * pretmp_1044;
  struct vector * pretmp_1045;
  struct vector * pretmp_1047;
  struct vector * pretmp_1048;
  struct vector * pretmp_1049;
  struct vector * pretmp_1050;
  struct vector * pretmp_1051;
  struct vector * pretmp_1052;
  struct vector * pretmp_1053;
  struct vector * pretmp_1054;
  struct vector * pretmp_1069;
  struct vector * pretmp_1070;
  struct vector * pretmp_1071;
  struct vector * pretmp_1072;
  struct vector * prephitmp_1097;
  struct vector * pretmp_1109;
  struct vector * prephitmp_1115;
  struct vector * pretmp_1127;
  struct vector * pretmp_1147;
  struct vector * prephitmp_1153;
  struct vector * pretmp_1163;
  struct vector * pretmp_1164;
  struct vector * pretmp_1165;
  struct vector * pretmp_1166;
  struct vector * pretmp_1167;
  struct vector * pretmp_1168;
  struct vector * pretmp_1169;
  struct vector * pretmp_1170;
  struct vector * pretmp_1171;
  struct vector * pretmp_1172;
  struct vector * pretmp_1173;
  struct vector * pretmp_1174;
  struct vector * pretmp_1176;
  struct vector * pretmp_1177;
  struct vector * pretmp_1178;
  struct vector * pretmp_1179;
  struct vector * pretmp_1180;
  struct vector * pretmp_1183;
  struct vector * pretmp_1184;
  struct vector * pretmp_1185;
  struct vector * pretmp_1186;
  struct vector * pretmp_1187;
  struct vector * pretmp_1188;
  struct vector * pretmp_1189;
  struct vector * pretmp_1190;
  struct vector * pretmp_1191;
  struct vector * pretmp_1192;
  struct vector * pretmp_1194;
  struct vector * pretmp_1195;
  struct vector * pretmp_1196;
  struct vector * pretmp_1197;
  struct vector * pretmp_1198;
  struct vector * pretmp_1199;
  struct vector * pretmp_1200;
  struct vector * pretmp_1201;
  struct vector * pretmp_1202;
  struct vector * pretmp_1203;
  struct vector * pretmp_1216;
  struct vector * pretmp_1218;
  struct vector * pretmp_1220;
  int _1222;
  struct vector * pretmp_1224;
  struct vector * prephitmp_1226;
  struct vector * pretmp_1228;
  struct vector * pretmp_1229;
  struct vector * pretmp_1231;
  struct vector * pretmp_1232;
  struct vector * pretmp_1234;
  struct vector * pretmp_1235;
  struct vector * pretmp_1236;
  struct vector * pretmp_1237;
  struct vector * pretmp_1240;
  struct vector * pretmp_1241;
  struct vector * pretmp_1242;
  struct vector * pretmp_1243;
  struct vector * pretmp_1244;
  struct vector * pretmp_1245;
  struct vector * pretmp_1246;
  struct vector * pretmp_1247;
  struct vector * pretmp_1248;
  struct vector * pretmp_1249;
  struct vector * pretmp_1250;
  struct vector * pretmp_1251;
  struct vector * pretmp_1252;
  struct vector * pretmp_1253;
  struct vector * pretmp_1254;
  struct vector * pretmp_1255;
  struct vector * pretmp_1257;
  struct vector * pretmp_1258;
  struct vector * prephitmp_1259;
  struct vector * pretmp_1260;
  struct vector * pretmp_1261;
  struct vector * pretmp_1262;
  struct vector * pretmp_1263;
  struct vector * pretmp_1264;
  struct vector * pretmp_1265;
  struct vector * pretmp_1266;
  struct vector * pretmp_1267;
  struct vector * pretmp_1268;
  struct vector * pretmp_1269;
  struct vector * pretmp_1270;
  struct vector * pretmp_1271;
  struct vector * pretmp_1272;
  struct vector * pretmp_1273;
  struct vector * pretmp_1274;
  struct vector * pretmp_1275;
  struct vector * pretmp_1276;
  struct vector * pretmp_1277;
  struct vector * pretmp_1278;
  struct vector * pretmp_1279;
  struct vector * pretmp_1280;
  struct vector * pretmp_1281;
  struct vector * pretmp_1282;
  struct vector * pretmp_1283;
  struct vector * pretmp_1284;
  struct vector * pretmp_1285;
  struct vector * pretmp_1286;
  struct vector * pretmp_1294;
  struct vector * pretmp_1297;
  int _1299;
  struct vector * pretmp_1306;
  struct vector * pretmp_1307;
  struct vector * pretmp_1308;
  struct vector * pretmp_1309;
  struct vector * pretmp_1310;
  struct vector * pretmp_1311;
  struct vector * pretmp_1312;
  struct vector * pretmp_1313;
  struct vector * pretmp_1314;
  struct vector * pretmp_1315;
  struct vector * pretmp_1316;
  struct vector * pretmp_1317;
  struct vector * pretmp_1318;
  struct vector * pretmp_1319;
  struct vector * pretmp_1320;
  struct vector * pretmp_1321;
  struct vector * pretmp_1322;
  struct vector * pretmp_1323;
  struct vector * pretmp_1324;
  struct vector * pretmp_1325;
  struct vector * pretmp_1326;
  struct vector * prephitmp_1327;
  struct vector * pretmp_1328;
  struct vector * pretmp_1329;
  struct vector * pretmp_1330;
  struct vector * pretmp_1331;
  struct vector * pretmp_1332;
  struct vector * pretmp_1333;
  struct vector * pretmp_1334;
  struct vector * pretmp_1335;
  struct vector * pretmp_1336;
  struct vector * pretmp_1337;
  struct vector * pretmp_1338;
  struct vector * pretmp_1339;
  struct vector * pretmp_1340;
  struct vector * pretmp_1341;
  struct vector * pretmp_1342;
  struct vector * pretmp_1343;
  struct vector * pretmp_1344;
  struct vector * pretmp_1345;
  struct vector * pretmp_1346;
  struct vector * pretmp_1347;
  struct vector * pretmp_1348;
  struct vector * pretmp_1349;
  struct vector * pretmp_1350;
  struct vector * pretmp_1351;
  struct vector * pretmp_1352;
  struct vector * pretmp_1353;
  struct vector * pretmp_1354;
  struct vector * pretmp_1355;
  struct vector * pretmp_1356;
  struct vector * pretmp_1357;
  struct vector * pretmp_1358;
  struct vector * pretmp_1359;
  struct vector * pretmp_1360;
  struct vector * pretmp_1361;
  struct vector * pretmp_1362;
  struct vector * pretmp_1363;
  struct vector * pretmp_1364;
  struct vector * pretmp_1365;
  struct vector * pretmp_1366;
  struct vector * pretmp_1367;
  struct vector * pretmp_1368;
  struct vector * pretmp_1369;
  struct vector * pretmp_1370;
  struct vector * pretmp_1371;
  struct vector * pretmp_1372;
  struct vector * pretmp_1373;
  struct vector * pretmp_1374;
  struct vector * prephitmp_1375;
  int pretmp_1385;
  long unsigned int pretmp_1387;
  long unsigned int prephitmp_1388;
  int pretmp_1395;
  int prephitmp_1396;
  void * _1400;
  void * _1401;
  void * _1402;
  int _1403;
  void * _1404;
  int prephitmp_1406;
  int pretmp_1417;
  int prephitmp_1418;
  struct vector * pretmp_1419;
  struct vector * prephitmp_1420;
  struct vector * pretmp_1421;
  struct vector * prephitmp_1422;
  struct vector * pretmp_1423;
  struct vector * prephitmp_1424;
  struct vector * pretmp_1425;
  struct vector * prephitmp_1426;
  struct vector * pretmp_1427;
  struct vector * prephitmp_1428;
  struct vector * pretmp_1429;
  struct vector * prephitmp_1430;
  int pretmp_1431;
  long unsigned int pretmp_1433;
  long unsigned int prephitmp_1434;
  const size_type pretmp_1448;
  const size_type prephitmp_1449;
  const size_type pretmp_1450;
  char * const pretmp_1452;
  struct vector * pretmp_1460;
  struct vector * pretmp_1461;
  struct vector * pretmp_1462;
  struct vector * pretmp_1463;
  struct vector * pretmp_1464;
  struct vector * pretmp_1465;
  struct vector * prephitmp_1466;
  struct vector * pretmp_1467;
  struct vector * pretmp_1468;
  struct vector * pretmp_1469;
  struct vector * pretmp_1470;
  struct vector * pretmp_1471;
  struct vector * pretmp_1472;
  struct vector * prephitmp_1473;
  struct vector * pretmp_1474;
  struct vector * pretmp_1475;
  struct vector * pretmp_1476;
  struct vector * pretmp_1477;
  struct vector * pretmp_1478;
  struct vector * pretmp_1479;
  struct vector * prephitmp_1480;
  struct vector * pretmp_1481;
  struct vector * pretmp_1482;
  struct vector * pretmp_1483;
  struct vector * pretmp_1484;
  struct vector * pretmp_1485;
  struct vector * pretmp_1486;
  struct vector * prephitmp_1487;
  struct vector * pretmp_1488;
  struct vector * pretmp_1489;
  struct vector * pretmp_1490;
  struct vector * pretmp_1491;
  struct vector * pretmp_1492;
  struct vector * pretmp_1493;
  struct vector * prephitmp_1494;
  struct vector * pretmp_1495;
  struct vector * pretmp_1496;
  struct vector * pretmp_1497;
  struct vector * pretmp_1498;
  struct vector * pretmp_1499;
  struct vector * pretmp_1500;
  struct vector * prephitmp_1501;
  struct vector * pretmp_1502;
  struct vector * pretmp_1503;
  struct vector * pretmp_1504;
  struct vector * pretmp_1505;
  struct vector * pretmp_1506;
  struct vector * pretmp_1507;
  struct vector * prephitmp_1508;
  struct vector * pretmp_1509;
  struct vector * pretmp_1510;
  struct vector * pretmp_1511;
  struct vector * pretmp_1512;
  struct vector * pretmp_1513;
  struct vector * pretmp_1514;
  struct vector * prephitmp_1515;
  int pretmp_1516;
  int prephitmp_1517;

  <bb 2>:
  _31 = &this_30(D)->D.54631;
  Router::Router (_31, config_33(D), parent_34(D), name_35(D), id_36(D), inputs_37(D), outputs_38(D));
  this_30(D)->D.54631.D.43102.D.29663._vptr.Module = &MEM[(void *)&_ZTV11EventRouter + 16B];
  # DEBUG D#2795 => &this_30(D)->_buf
  # DEBUG this => D#2795
  # DEBUG D#579 => &D#2795->D.49272
  # DEBUG this => D#579
  # DEBUG D#578 => &D#579->_M_impl
  # DEBUG this => D#578
  # DEBUG this => D#578
  # DEBUG this => D#578
  MEM[(struct _Vector_impl *)this_30(D) + 288B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 288B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 288B]._M_end_of_storage = 0B;
  # DEBUG D#2794 => &this_30(D)->_active
  # DEBUG this => D#2794
  # DEBUG D#599 => &D#2794->D.50019
  # DEBUG this => D#599
  # DEBUG D#598 => &D#599->_M_impl
  # DEBUG this => D#598
  # DEBUG this => D#598
  # DEBUG this => D#598
  MEM[(struct _Vector_impl *)this_30(D) + 312B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 312B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 312B]._M_end_of_storage = 0B;
  # DEBUG D#2793 => &this_30(D)->_output_state
  # DEBUG this => D#2793
  # DEBUG D#624 => &D#2793->D.50767
  # DEBUG this => D#624
  # DEBUG D#623 => &D#624->_M_impl
  # DEBUG this => D#623
  # DEBUG this => D#623
  # DEBUG this => D#623
  MEM[(struct _Vector_impl *)this_30(D) + 344B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 344B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 344B]._M_end_of_storage = 0B;
  # DEBUG D#2792 => &this_30(D)->_input_buffer
  # DEBUG this => D#2792
  # DEBUG D#644 => &D#2792->D.51519
  # DEBUG this => D#644
  # DEBUG D#643 => &D#644->_M_impl
  # DEBUG this => D#643
  # DEBUG this => D#643
  # DEBUG this => D#643
  MEM[(struct _Vector_impl *)this_30(D) + 384B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 384B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 384B]._M_end_of_storage = 0B;
  # DEBUG D#2791 => &this_30(D)->_output_buffer
  # DEBUG this => D#2791
  # DEBUG D#644 => &D#2791->D.51519
  # DEBUG this => D#644
  # DEBUG D#643 => &D#644->_M_impl
  # DEBUG this => D#643
  # DEBUG this => D#643
  # DEBUG this => D#643
  MEM[(struct _Vector_impl *)this_30(D) + 408B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 408B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 408B]._M_end_of_storage = 0B;
  # DEBUG D#2790 => &this_30(D)->_in_cred_buffer
  # DEBUG this => D#2790
  # DEBUG D#663 => &D#2790->D.52268
  # DEBUG this => D#663
  # DEBUG D#662 => &D#663->_M_impl
  # DEBUG this => D#662
  # DEBUG this => D#662
  # DEBUG this => D#662
  MEM[(struct _Vector_impl *)this_30(D) + 432B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 432B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 432B]._M_end_of_storage = 0B;
  # DEBUG D#2789 => &this_30(D)->_out_cred_buffer
  # DEBUG this => D#2789
  # DEBUG D#663 => &D#2789->D.52268
  # DEBUG this => D#663
  # DEBUG D#662 => &D#663->_M_impl
  # DEBUG this => D#662
  # DEBUG this => D#662
  # DEBUG this => D#662
  MEM[(struct _Vector_impl *)this_30(D) + 456B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 456B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 456B]._M_end_of_storage = 0B;
  # DEBUG D#2788 => &this_30(D)->_arrival_queue
  # DEBUG this => D#2788
  # DEBUG D#682 => &D#2788->D.53031
  # DEBUG this => D#682
  # DEBUG D#681 => &D#682->_M_impl
  # DEBUG this => D#681
  # DEBUG this => D#681
  # DEBUG this => D#681
  MEM[(struct _Vector_impl *)this_30(D) + 488B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 488B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 488B]._M_end_of_storage = 0B;
  # DEBUG D#2787 => &this_30(D)->_arrival_arbiter
  # DEBUG this => D#2787
  # DEBUG D#701 => &D#2787->D.53778
  # DEBUG this => D#701
  # DEBUG D#700 => &D#701->_M_impl
  # DEBUG this => D#700
  # DEBUG this => D#700
  # DEBUG this => D#700
  MEM[(struct _Vector_impl *)this_30(D) + 512B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 512B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 512B]._M_end_of_storage = 0B;
  # DEBUG D#2786 => &this_30(D)->_transport_queue
  # DEBUG this => D#2786
  # DEBUG D#721 => &D#2786->D.54535
  # DEBUG this => D#721
  # DEBUG D#720 => &D#721->_M_impl
  # DEBUG this => D#720
  # DEBUG this => D#720
  # DEBUG this => D#720
  MEM[(struct _Vector_impl *)this_30(D) + 536B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 536B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 536B]._M_end_of_storage = 0B;
  # DEBUG D#2785 => &this_30(D)->_transport_arbiter
  # DEBUG this => D#2785
  # DEBUG D#701 => &D#2785->D.53778
  # DEBUG this => D#701
  # DEBUG D#700 => &D#701->_M_impl
  # DEBUG this => D#700
  # DEBUG this => D#700
  # DEBUG this => D#700
  MEM[(struct _Vector_impl *)this_30(D) + 560B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 560B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 560B]._M_end_of_storage = 0B;
  # DEBUG D#2784 => &this_30(D)->_transport_free
  # DEBUG this => D#2784
  # DEBUG D#371 => &D#2784->D.43009
  # DEBUG this => D#371
  # DEBUG D#370 => &D#371->_M_impl
  # DEBUG this => D#370
  # DEBUG this => D#370
  # DEBUG this => D#370
  # DEBUG D#369 => &D#370->_M_start
  # DEBUG this => D#369
  # DEBUG D#19 => &D#369->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)this_30(D) + 584B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)this_30(D) + 584B]._M_offset = 0;
  # DEBUG D#368 => &D#370->_M_finish
  # DEBUG this => D#368
  # DEBUG D#19 => &D#368->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)this_30(D) + 600B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)this_30(D) + 600B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)this_30(D) + 584B]._M_end_of_storage = 0B;
  # DEBUG D#2783 => &this_30(D)->_transport_match
  # DEBUG this => D#2783
  # DEBUG D#500 => &D#2783->D.35782
  # DEBUG this => D#500
  # DEBUG D#499 => &D#500->_M_impl
  # DEBUG this => D#499
  # DEBUG this => D#499
  # DEBUG this => D#499
  MEM[(struct _Vector_impl *)this_30(D) + 624B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 624B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_30(D) + 624B]._M_end_of_storage = 0B;
  std::__cxx11::basic_ostringstream<char>::basic_ostringstream (&module_name, 16);

  <bb 3>:
  # DEBUG D#140 => &D.61766
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.61766
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.61765, "num_vcs");

  <bb 4>:
  _46 = Configuration::GetInt (config_33(D), &D.61765);

  <bb 5>:
  this_30(D)->_vcs = _46;
  # DEBUG this => &D.61765
  # DEBUG this => &D.61765
  # DEBUG this => &D.61765
  _49 = MEM[(char * *)&D.61765];
  # DEBUG D#1 => &D.61765
  # DEBUG this => D#1
  # DEBUG this => &D.61765
  if (&D.61765.D.11539._M_local_buf != _49)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  # DEBUG D#467 => D.61765.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61765
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61765
  # DEBUG this => D#1
  # DEBUG this => &D.61765
  # DEBUG D#464 => &D.61765._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _49
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _49
  # DEBUG this => D#458
  # DEBUG D.131843 => D#459
  operator delete (_49);

  <bb 7>:
  # DEBUG D#468 => &D.61765._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61765 ={v} {CLOBBER};
  # DEBUG this => &D.61766
  # DEBUG this => &D.61766
  # DEBUG D#140 => &D.61768
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.61768
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.61767, "vct");
  goto <bb 9>;

<L84>:
  pretmp_1465 = &this_30(D)->_active;
  pretmp_1472 = &this_30(D)->_input_buffer;
  pretmp_1479 = &this_30(D)->_output_buffer;
  pretmp_1486 = &this_30(D)->_in_cred_buffer;
  pretmp_1493 = &this_30(D)->_out_cred_buffer;
  pretmp_1500 = &this_30(D)->_arrival_queue;
  pretmp_1507 = &this_30(D)->_transport_queue;
  pretmp_1514 = &this_30(D)->_transport_free;
  goto <bb 417> (<L63>);

  <bb 9>:
  _53 = Configuration::GetInt (config_33(D), &D.61767);

  <bb 10>:
  this_30(D)->_vct = _53;
  # DEBUG this => &D.61767
  # DEBUG this => &D.61767
  # DEBUG this => &D.61767
  _57 = MEM[(char * *)&D.61767];
  # DEBUG D#1 => &D.61767
  # DEBUG this => D#1
  # DEBUG this => &D.61767
  if (&D.61767.D.11539._M_local_buf != _57)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  # DEBUG D#467 => D.61767.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61767
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61767
  # DEBUG this => D#1
  # DEBUG this => &D.61767
  # DEBUG D#464 => &D.61767._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _57
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _57
  # DEBUG this => D#458
  # DEBUG D.131861 => D#459
  operator delete (_57);

  <bb 12>:
  # DEBUG D#468 => &D.61767._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61767 ={v} {CLOBBER};
  # DEBUG this => &D.61768
  # DEBUG this => &D.61768
  # DEBUG D#140 => &D.61776
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.61776
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.61775, "topology");
  goto <bb 14>;

<L85>:
  pretmp_1461 = &this_30(D)->_active;
  pretmp_1468 = &this_30(D)->_input_buffer;
  pretmp_1475 = &this_30(D)->_output_buffer;
  pretmp_1482 = &this_30(D)->_in_cred_buffer;
  pretmp_1489 = &this_30(D)->_out_cred_buffer;
  pretmp_1496 = &this_30(D)->_arrival_queue;
  pretmp_1503 = &this_30(D)->_transport_queue;
  pretmp_1510 = &this_30(D)->_transport_free;
  goto <bb 417> (<L63>);

  <bb 14>:
  D.61774 = Configuration::GetStr (config_33(D), &D.61775); [return slot optimization]

  <bb 15>:
  # DEBUG D#140 => &D.61773
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.61773
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.61772, "routing_function");

  <bb 16>:
  D.61771 = Configuration::GetStr (config_33(D), &D.61772); [return slot optimization]

  <bb 17>:
  # DEBUG __lhs => &D.61771
  # DEBUG __rhs => "_"
  # DEBUG this => &D.61770
  # DEBUG __str => &D.61771
  # DEBUG this => &D.61771
  # DEBUG D#935 => &D.61771._M_dataplus
  # DEBUG this => &D.61770
  # DEBUG D#936 => &D.61770._M_dataplus
  # DEBUG D#360 => D#935
  # DEBUG this => D#936
  # DEBUG __dat => &D.61770.D.11539._M_local_buf
  # DEBUG __a => D#360
  # DEBUG D#359 => D#360
  # DEBUG D#357 => D#936
  # DEBUG D#358 => D#359
  # DEBUG this => D#357
  # DEBUG __a => D#358
  # DEBUG D#356 => D#358
  # DEBUG D#355 => D#357
  # DEBUG this => D#355
  # DEBUG D.101082 => D#356
  MEM[(struct _Alloc_hider *)&D.61770]._M_p = &D.61770.D.11539._M_local_buf;
  _755 = MEM[(char * *)&D.61771];
  # DEBUG D#1 => &D.61771
  # DEBUG this => D#1
  _756 = MEM[(long unsigned int *)&D.61771 + 8B];
  # DEBUG D#2 => &D.61771
  # DEBUG this => D#2
  _757 = _755 + _756;
  # DEBUG D#1 => &D.61771
  # DEBUG this => D#1
  # DEBUG this => &D.61770
  # DEBUG __beg => _755
  # DEBUG __end => _757
  # DEBUG this => &D.61770
  # DEBUG __beg => _755
  # DEBUG __end => _757
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.249 (&D.61770, _755, _757);

  <bb 18>:
  # DEBUG this => &D.61770
  # DEBUG __s => "_"
  # DEBUG __s => "_"
  # DEBUG __n => NULL
  # DEBUG this => &D.61770
  # DEBUG __n1 => 0
  # DEBUG __n2 => NULL
  # DEBUG __s => "basic_string::append"
  # DEBUG D#930 => &D.61770
  # DEBUG this => D#930
  # DEBUG D#929 => D#930
  # DEBUG D#928 => D#930
  # DEBUG this => D#928
  # DEBUG D#927 => &D#929->_M_dataplus
  # DEBUG D#926 => D#927
  # DEBUG __a => D#926
  # DEBUG D#925 => D#926
  # DEBUG D#924 => D#925
  # DEBUG this => D#924
  _759 = MEM[(long unsigned int *)&D.61770 + 8B];
  # DEBUG D#3 => &D.61770
  # DEBUG this => D#3
  if (_759 == 9223372036854775807)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  std::__throw_length_error ("basic_string::append");

  <bb 20>:
  std::__cxx11::basic_string<char>::_M_append (&D.61770, "_", 1);
  goto <bb 22>;

<L91>:
  goto <bb 24> (<L79>);

  <bb 22>:
  # DEBUG __lhs => &D.61770
  # DEBUG __rhs => &D.61774
  # DEBUG this => &rf
  # DEBUG __str => &D.61770
  # DEBUG this => &D.61770
  # DEBUG D#935 => &D.61770._M_dataplus
  # DEBUG this => &rf
  # DEBUG D#936 => &rf._M_dataplus
  # DEBUG D#360 => D#935
  # DEBUG this => D#936
  # DEBUG __dat => &rf.D.11539._M_local_buf
  # DEBUG __a => D#360
  # DEBUG D#359 => D#360
  # DEBUG D#357 => D#936
  # DEBUG D#358 => D#359
  # DEBUG this => D#357
  # DEBUG __a => D#358
  # DEBUG D#356 => D#358
  # DEBUG D#355 => D#357
  # DEBUG this => D#355
  # DEBUG D.101082 => D#356
  MEM[(struct _Alloc_hider *)&rf]._M_p = &rf.D.11539._M_local_buf;
  _763 = MEM[(char * *)&D.61770];
  # DEBUG D#1 => &D.61770
  # DEBUG this => D#1
  _764 = MEM[(long unsigned int *)&D.61770 + 8B];
  # DEBUG D#2 => &D.61770
  # DEBUG this => D#2
  _765 = _763 + _764;
  # DEBUG D#1 => &D.61770
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG __beg => _763
  # DEBUG __end => _765
  # DEBUG this => &rf
  # DEBUG __beg => _763
  # DEBUG __end => _765
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.249 (&rf, _763, _765);
  goto <bb 28>;

<L90>:

<L79>:
  # DEBUG this => &D.61770
  # DEBUG this => &D.61770
  # DEBUG this => &D.61770
  _758 = MEM[(char * *)&D.61770];
  # DEBUG D#1 => &D.61770
  # DEBUG this => D#1
  # DEBUG this => &D.61770
  if (&D.61770.D.11539._M_local_buf != _758)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  # DEBUG D#467 => D.61770.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61770
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61770
  # DEBUG this => D#1
  # DEBUG this => &D.61770
  # DEBUG D#464 => &D.61770._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _758
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _758
  # DEBUG this => D#458
  # DEBUG D.146333 => D#459
  operator delete (_758);

  <bb 26>:
  # DEBUG D#468 => &D.61770._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  resx 132

<L93>:
  goto <bb 307> (<L21>);

  <bb 28>:
  # DEBUG this => &rf
  # DEBUG __str => &D.61774
  _766 = MEM[(long unsigned int *)&D.61774 + 8B];
  # DEBUG D#3 => &D.61774
  # DEBUG this => D#3
  _767 = MEM[(char * *)&D.61774];
  # DEBUG D#1 => &D.61774
  # DEBUG this => D#1
  std::__cxx11::basic_string<char>::_M_append (&rf, _767, _766);
  goto <bb 33>;

<L80>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _768 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _768)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  # DEBUG D#467 => rf.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &rf
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#464 => &rf._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _768
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _768
  # DEBUG this => D#458
  # DEBUG D.146371 => D#459
  operator delete (_768);

  <bb 31>:
  # DEBUG D#468 => &rf._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  resx 133

<L94>:
  goto <bb 302> (<L19>);

  <bb 33>:
  # DEBUG this => &D.61770
  # DEBUG this => &D.61770
  # DEBUG this => &D.61770
  _67 = MEM[(char * *)&D.61770];
  # DEBUG D#1 => &D.61770
  # DEBUG this => D#1
  # DEBUG this => &D.61770
  if (&D.61770.D.11539._M_local_buf != _67)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # DEBUG D#467 => D.61770.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61770
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61770
  # DEBUG this => D#1
  # DEBUG this => &D.61770
  # DEBUG D#464 => &D.61770._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _67
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _67
  # DEBUG this => D#458
  # DEBUG D.131952 => D#459
  operator delete (_67);

  <bb 35>:
  # DEBUG D#468 => &D.61770._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61770 ={v} {CLOBBER};
  # DEBUG this => &D.61771
  # DEBUG this => &D.61771
  # DEBUG this => &D.61771
  _69 = MEM[(char * *)&D.61771];
  # DEBUG D#1 => &D.61771
  # DEBUG this => D#1
  # DEBUG this => &D.61771
  if (&D.61771.D.11539._M_local_buf != _69)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  # DEBUG D#467 => D.61771.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61771
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61771
  # DEBUG this => D#1
  # DEBUG this => &D.61771
  # DEBUG D#464 => &D.61771._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _69
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _69
  # DEBUG this => D#458
  # DEBUG D.131937 => D#459
  operator delete (_69);

  <bb 37>:
  # DEBUG D#468 => &D.61771._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61771 ={v} {CLOBBER};
  # DEBUG this => &D.61772
  # DEBUG this => &D.61772
  # DEBUG this => &D.61772
  _71 = MEM[(char * *)&D.61772];
  # DEBUG D#1 => &D.61772
  # DEBUG this => D#1
  # DEBUG this => &D.61772
  if (&D.61772.D.11539._M_local_buf != _71)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  # DEBUG D#467 => D.61772.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61772
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61772
  # DEBUG this => D#1
  # DEBUG this => &D.61772
  # DEBUG D#464 => &D.61772._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _71
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _71
  # DEBUG this => D#458
  # DEBUG D.131922 => D#459
  operator delete (_71);

  <bb 39>:
  # DEBUG D#468 => &D.61772._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61772 ={v} {CLOBBER};
  # DEBUG this => &D.61773
  # DEBUG this => &D.61773
  # DEBUG this => &D.61774
  # DEBUG this => &D.61774
  # DEBUG this => &D.61774
  _73 = MEM[(char * *)&D.61774];
  # DEBUG D#1 => &D.61774
  # DEBUG this => D#1
  # DEBUG this => &D.61774
  if (&D.61774.D.11539._M_local_buf != _73)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  # DEBUG D#467 => D.61774.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61774
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61774
  # DEBUG this => D#1
  # DEBUG this => &D.61774
  # DEBUG D#464 => &D.61774._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _73
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _73
  # DEBUG this => D#458
  # DEBUG D.131905 => D#459
  operator delete (_73);

  <bb 41>:
  # DEBUG D#468 => &D.61774._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61774 ={v} {CLOBBER};
  # DEBUG this => &D.61775
  # DEBUG this => &D.61775
  # DEBUG this => &D.61775
  _75 = MEM[(char * *)&D.61775];
  # DEBUG D#1 => &D.61775
  # DEBUG this => D#1
  # DEBUG this => &D.61775
  if (&D.61775.D.11539._M_local_buf != _75)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  # DEBUG D#467 => D.61775.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61775
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61775
  # DEBUG this => D#1
  # DEBUG this => &D.61775
  # DEBUG D#464 => &D.61775._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _75
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _75
  # DEBUG this => D#458
  # DEBUG D.131890 => D#459
  operator delete (_75);

  <bb 43>:
  # DEBUG D#468 => &D.61775._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61775 ={v} {CLOBBER};
  # DEBUG this => &D.61776
  # DEBUG this => &D.61776
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG __x => &rf
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG __k => &rf
  # DEBUG this => &gRoutingFunctionMap._M_t
  __y_769 = MEM[(struct _Rb_tree_node_base * *)&gRoutingFunctionMap + 16B];
  # DEBUG D#211 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#211
  # DEBUG D#952 => &gRoutingFunctionMap._M_t
  # DEBUG __x => NULL
  # DEBUG __y => NULL
  # DEBUG __k => &rf
  # DEBUG __y => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG __x => __y_769
  if (__y_769 == 0B)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  pretmp_1450 = MEM[(long unsigned int *)&rf + 8B];
  pretmp_1452 = MEM[(char * *)&rf];
  goto <bb 48>;

  <bb 45>:
  pretmp_1448 = MEM[(long unsigned int *)&rf + 8B];
  goto <bb 61>;

  <bb 46>:
  # __y_779 = PHI <__y_773(53), __y_774(54)>
  # __y_778 = PHI <__y_1214(53), __y_1002(54)>
  # DEBUG __y => __y_778
  # DEBUG __x => __y_779
  if (__y_779 == 0B)
    goto <bb 55>;
  else
    goto <bb 47>;

  <bb 47>:

  <bb 48>:
  # __y_1214 = PHI <__y_769(44), __y_779(47)>
  # __y_1002 = PHI <&MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(44), __y_778(47)>
  # DEBUG __y => __y_1002
  # DEBUG __x => __y_1214
  # DEBUG __x => __y_1214
  # DEBUG __x => __y_1214
  # DEBUG this => __y_1214
  # DEBUG D#947 => &MEM[(const struct _Rb_tree_node *)__y_1214]._M_value_field
  # DEBUG __r => D#947
  # DEBUG __x => D#947
  # DEBUG this => D#366
  # DEBUG D#3741 => &MEM[(const struct pair &)__y_1214 + 32].first
  # DEBUG D#950 => &D#951->_M_impl._M_key_compare
  # DEBUG D#949 => D#950
  # DEBUG __x => D#3741
  # DEBUG __y => &rf
  # DEBUG this => D#949
  # DEBUG __lhs => D#3741
  # DEBUG __rhs => &rf
  # DEBUG this => D#3741
  # DEBUG __str => &rf
  _434 = MEM[(long unsigned int *)__y_1214 + 40B];
  # DEBUG D#3 => D#3741
  # DEBUG this => D#3
  # DEBUG __size => _434
  # DEBUG D#3761 => MEM[(long unsigned int *)&rf + 8B]
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  # DEBUG __osize => D#3761
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_772 = MIN_EXPR <_434, pretmp_1450>;
  # DEBUG __len => D#3739
  # DEBUG this => &rf
  # DEBUG D#3760 => MEM[(char * *)&rf]
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  _784 = MEM[(char * *)__y_1214 + 32B];
  # DEBUG D#1 => D#3741
  # DEBUG this => D#1
  # DEBUG __s1 => _784
  # DEBUG __s2 => D#3760
  # DEBUG __n => D#3739
  __r_785 = __builtin_memcmp (_784, pretmp_1452, __len_772);
  # DEBUG __r => NULL
  if (__r_785 == 0)
    goto <bb 49>;
  else
    goto <bb 52>;

  <bb 49>:
  # DEBUG __n1 => _434
  # DEBUG __n2 => D#3761
  _786 = _434 - pretmp_1450;
  __d_787 = (const difference_type) _786;
  # DEBUG __d => __d_787
  if (__d_787 > 2147483647)
    goto <bb 53>;
  else
    goto <bb 50>;

  <bb 50>:
  if (__d_787 < -2147483648)
    goto <bb 54>;
  else
    goto <bb 51>;

  <bb 51>:
  __r_788 = (int) _786;

  <bb 52>:
  # __r_789 = PHI <__r_785(48), __r_788(51)>
  # DEBUG __r => __r_789
  # DEBUG D#3747 => {CLOBBER}
  # DEBUG __size => D#3747
  # DEBUG D#3748 => {CLOBBER}
  # DEBUG __osize => D#3748
  if (__r_789 >= 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  # DEBUG __r => NULL
  # DEBUG __y => __y_1214
  __y_773 = MEM[(struct _Rb_tree_node_base * *)__y_1214 + 16B];
  # DEBUG D#364 => __y_1214
  # DEBUG __x => D#364
  # DEBUG __x => NULL
  goto <bb 46>;

  <bb 54>:
  # DEBUG __r => NULL
  __y_774 = MEM[(struct _Rb_tree_node_base * *)__y_1214 + 24B];
  # DEBUG D#365 => __y_1214
  # DEBUG __x => D#365
  # DEBUG __x => NULL
  goto <bb 46>;

  <bb 55>:
  # __y_1399 = PHI <__y_778(46)>
  # DEBUG this => NULL
  # DEBUG __x => __y_1399
  # DEBUG __j$_M_node => __y_1399
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &__j
  # DEBUG __x => NULL
  if (__y_1399 == &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header)
    goto <bb 61>;
  else
    goto <bb 56>;

  <bb 56>:
  # DEBUG __x => __y_1399
  # DEBUG __x => __y_1399
  # DEBUG this => __y_1399
  # DEBUG D#948 => &MEM[(const struct _Rb_tree_node *)__y_1399]._M_value_field
  # DEBUG __r => D#948
  # DEBUG __x => D#948
  # DEBUG this => D#366
  # DEBUG D#3742 => &MEM[(const struct pair &)__y_1399 + 32].first
  # DEBUG D#954 => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_key_compare
  # DEBUG D#949 => D#954
  # DEBUG __x => &rf
  # DEBUG __y => D#3742
  # DEBUG this => D#949
  # DEBUG __lhs => &rf
  # DEBUG __rhs => D#3742
  # DEBUG this => &rf
  # DEBUG __str => D#3742
  # DEBUG D#3759 => MEM[(long unsigned int *)&rf + 8B]
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  # DEBUG __size => D#3759
  _792 = MEM[(long unsigned int *)__y_1399 + 40B];
  # DEBUG D#3 => D#3742
  # DEBUG this => D#3
  # DEBUG __osize => _792
  # DEBUG __a => &__size
  # DEBUG __b => &__osize
  __len_143 = MIN_EXPR <_792, pretmp_1450>;
  # DEBUG __len => D#3740
  # DEBUG this => D#3742
  _795 = MEM[(char * *)__y_1399 + 32B];
  # DEBUG D#1 => D#3742
  # DEBUG this => D#1
  # DEBUG D#3758 => MEM[(char * *)&rf]
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG __s1 => D#3758
  # DEBUG __s2 => _795
  # DEBUG __n => D#3740
  __r_797 = __builtin_memcmp (pretmp_1452, _795, __len_143);
  # DEBUG __r => NULL
  if (__r_797 == 0)
    goto <bb 57>;
  else
    goto <bb 60>;

  <bb 57>:
  # DEBUG __n1 => D#3759
  # DEBUG __n2 => _792
  _798 = pretmp_1450 - _792;
  __d_799 = (const difference_type) _798;
  # DEBUG __d => __d_799
  if (__d_799 > 2147483647)
    goto <bb 77>;
  else
    goto <bb 58>;

  <bb 58>:
  if (__d_799 < -2147483648)
    goto <bb 61>;
  else
    goto <bb 59>;

  <bb 59>:
  __r_800 = (int) _798;

  <bb 60>:
  # __r_801 = PHI <__r_797(56), __r_800(59)>
  # DEBUG __r => __r_801
  # DEBUG D#3753 => {CLOBBER}
  # DEBUG __size => D#3753
  # DEBUG D#3754 => {CLOBBER}
  # DEBUG __osize => D#3754
  if (__r_801 < 0)
    goto <bb 61>;
  else
    goto <bb 77>;

  <bb 61>:
  # prephitmp_1449 = PHI <pretmp_1450(55), pretmp_1450(60), pretmp_1450(58), pretmp_1448(45)>
  # DEBUG this => &gRoutingFunctionMap._M_t
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG D#953 => {CLOBBER}
  # DEBUG __j$_M_node => D#953
  # DEBUG rf_iter$_M_node => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#212 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#212
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &rf_iter
  # DEBUG __x => &D.61777
  # DEBUG D#953 => {CLOBBER}
  # DEBUG __j$_M_node => D#953
  # DEBUG rf_iter$_M_node => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &gRoutingFunctionMap
  # DEBUG D#212 => &gRoutingFunctionMap._M_t
  # DEBUG this => D#212
  # DEBUG this => NULL
  # DEBUG __x => &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header
  # DEBUG this => &rf_iter
  # DEBUG __x => &D.61777
  # DEBUG __lhs => "Invalid routing function: "
  # DEBUG __rhs => &rf
  # DEBUG __s => "Invalid routing function: "
  # DEBUG __len => NULL
  # DEBUG this => &D.61778
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG this => &D.61778
  # DEBUG D#361 => &D.61778._M_dataplus
  # DEBUG this => D#361
  # DEBUG __dat => &D.61778.D.11539._M_local_buf
  # DEBUG __a => D#360
  # DEBUG D#359 => D#360
  # DEBUG D#357 => D#361
  # DEBUG D#358 => D#359
  # DEBUG this => D#357
  # DEBUG __a => D#358
  # DEBUG D#356 => D#358
  # DEBUG D#355 => D#357
  # DEBUG this => D#355
  # DEBUG D.101082 => D#356
  MEM[(struct _Alloc_hider *)&D.61778]._M_p = &D.61778.D.11539._M_local_buf;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &D.61778
  # DEBUG __n => 0
  # DEBUG D#8 => &D.61778
  # DEBUG __length => 0
  # DEBUG this => D#8
  MEM[(size_type *)&D.61778 + 8B] = 0;
  # DEBUG D#1 => &D.61778
  # DEBUG this => D#1
  # DEBUG __c1 => &D.61778.D.11539._M_local_buf
  # DEBUG __c2 => D#11
  MEM[(char_type &)&D.61778 + 16] = 0;
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  _806 = prephitmp_1449 + 26;
  std::__cxx11::basic_string<char>::reserve (&D.61778, _806);

  <bb 62>:
  # DEBUG this => &D.61778
  # DEBUG __s => "Invalid routing function: "
  # DEBUG __n => 26
  # DEBUG this => &D.61778
  # DEBUG __n1 => 0
  # DEBUG __n2 => 26
  # DEBUG __s => "basic_string::append"
  # DEBUG D#930 => &D.61778
  # DEBUG this => D#930
  # DEBUG D#929 => D#930
  # DEBUG D#928 => D#930
  # DEBUG this => D#928
  # DEBUG D#927 => &D#929->_M_dataplus
  # DEBUG D#926 => D#927
  # DEBUG __a => D#926
  # DEBUG D#925 => D#926
  # DEBUG D#924 => D#925
  # DEBUG this => D#924
  _76 = MEM[(long unsigned int *)&D.61778 + 8B];
  # DEBUG D#3 => &D.61778
  # DEBUG this => D#3
  _810 = 9223372036854775807 - _76;
  if (_810 <= 25)
    goto <bb 63>;
  else
    goto <bb 65>;

  <bb 63>:
  std::__throw_length_error ("basic_string::append");

<L96>:
  goto <bb 70> (<L81>);

  <bb 65>:
  std::__cxx11::basic_string<char>::_M_append (&D.61778, "Invalid routing function: ", 26);
  goto <bb 67>;

<L97>:
  goto <bb 70> (<L81>);

  <bb 67>:
  # DEBUG this => &D.61778
  # DEBUG __str => &rf
  _807 = MEM[(long unsigned int *)&rf + 8B];
  # DEBUG D#3 => &rf
  # DEBUG this => D#3
  _808 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  std::__cxx11::basic_string<char>::_M_append (&D.61778, _808, _807);
  goto <bb 73>;

<L98>:
  goto <bb 70> (<L81>);

<L95>:

<L81>:
  # DEBUG this => &D.61778
  # DEBUG this => &D.61778
  # DEBUG this => &D.61778
  _809 = MEM[(char * *)&D.61778];
  # DEBUG D#1 => &D.61778
  # DEBUG this => D#1
  # DEBUG this => &D.61778
  if (&D.61778.D.11539._M_local_buf != _809)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  # DEBUG D#467 => D.61778.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61778
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61778
  # DEBUG this => D#1
  # DEBUG this => &D.61778
  # DEBUG D#464 => &D.61778._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _809
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _809
  # DEBUG this => D#458
  # DEBUG D.146460 => D#459
  operator delete (_809);

  <bb 72>:
  # DEBUG D#468 => &D.61778._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  resx 134

  <bb 73>:
  Module::Error (_31, &D.61778);

  <bb 74>:
  # DEBUG this => &D.61778
  # DEBUG this => &D.61778
  # DEBUG this => &D.61778
  _65 = MEM[(char * *)&D.61778];
  # DEBUG D#1 => &D.61778
  # DEBUG this => D#1
  # DEBUG this => &D.61778
  if (&D.61778.D.11539._M_local_buf != _65)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  # DEBUG D#467 => D.61778.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61778
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61778
  # DEBUG this => D#1
  # DEBUG this => &D.61778
  # DEBUG D#464 => &D.61778._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _65
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _65
  # DEBUG this => D#458
  # DEBUG D.131967 => D#459
  operator delete (_65);

  <bb 76>:
  # DEBUG D#468 => &D.61778._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61778 ={v} {CLOBBER};

  <bb 77>:
  # cstore_3 = PHI <__y_1399(60), &MEM[(struct _Rb_tree *)&gRoutingFunctionMap]._M_impl._M_header(76), __y_1399(57)>
  # DEBUG this => &rf_iter
  # DEBUG this => cstore_3
  # DEBUG D#2769 => &MEM[(struct _Rb_tree_node *)cstore_3]._M_value_field
  # DEBUG __r => D#2769
  _81 = MEM[(struct pair *)cstore_3 + 32B].second;
  this_30(D)->_rf = _81;
  _83 = this_30(D)->D.54631._inputs;
  _84 = (long unsigned int) _83;
  # DEBUG D#3766 => &this_30(D)->_buf
  # DEBUG this => D#3766
  # DEBUG __new_size => _84
  __x = 0B;
  # DEBUG __x => __x
  _812 = MEM[(struct Buffer * * *)this_30(D) + 288B];
  # DEBUG D#141 => D#3766
  _813 = MEM[(struct Buffer * * *)this_30(D) + 296B];
  # DEBUG D#141 => D#3766
  # DEBUG this => D#141
  # DEBUG this => D#141
  _814 = (long int) _813;
  _815 = (long int) _812;
  _816 = _814 - _815;
  _817 = _816 /[ex] 8;
  _818 = (size_type) _817;
  if (_84 > _818)
    goto <bb 78>;
  else
    goto <bb 81>;

  <bb 78>:
  # DEBUG D#141 => D#3766
  # DEBUG D#141 => D#3766
  # DEBUG this => D#141
  # DEBUG this => D#141
  _819 = _84 - _818;
  # DEBUG this => D#3766
  # DEBUG D#213 => &D#3766->D.49272._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#213
  # DEBUG this => D#3766
  MEM[(struct __normal_iterator *)&__position] = _813;
  # DEBUG __n => _819
  # DEBUG __x => &__x
  _85 = &this_30(D)->_buf;
  std::vector<Buffer*>::_M_fill_insert (_85, __position, _819, &__x);
  goto <bb 80>;

<L100>:
  pretmp_517 = &this_30(D)->_active;
  pretmp_512 = &this_30(D)->_input_buffer;
  pretmp_412 = &this_30(D)->_output_buffer;
  pretmp_1188 = &this_30(D)->_in_cred_buffer;
  pretmp_1013 = &this_30(D)->_out_cred_buffer;
  pretmp_1183 = &this_30(D)->_arrival_queue;
  pretmp_1187 = &this_30(D)->_transport_queue;
  pretmp_1333 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 80>:
  pretmp_1385 = this_30(D)->D.54631._inputs;
  pretmp_1387 = (long unsigned int) pretmp_1385;
  goto <bb 83>;

  <bb 81>:
  # DEBUG D#141 => D#3766
  # DEBUG D#141 => D#3766
  # DEBUG this => D#141
  # DEBUG this => D#141
  if (_84 < _818)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  _820 = _84 * 8;
  _821 = _812 + _820;
  # DEBUG D#334 => D#3766
  # DEBUG __pos => _821
  # DEBUG D#333 => D#334
  # DEBUG this => D#333
  # DEBUG D#331 => &D#333->D.49272
  # DEBUG this => D#331
  # DEBUG D#332 => D#333->D.49272._M_impl._M_finish
  # DEBUG __first => _821
  # DEBUG __last => D#332
  # DEBUG D.100949 => NULL
  # DEBUG D#329 => _821
  # DEBUG D#330 => D#332
  # DEBUG __first => D#329
  # DEBUG __last => D#330
  # DEBUG D#328 => D#330
  # DEBUG D#327 => D#329
  # DEBUG D#325 => D#327
  # DEBUG D#326 => D#328
  # DEBUG D.100933 => D#325
  # DEBUG D.100932 => D#326
  MEM[(struct Buffer * * *)this_30(D) + 296B] = _821;

  <bb 83>:
  # prephitmp_1388 = PHI <_84(81), pretmp_1387(80), _84(82)>
  # DEBUG this => &D.61779
  # DEBUG D#371 => &D.61779.D.43009
  # DEBUG this => D#371
  # DEBUG D#370 => &D#371->_M_impl
  # DEBUG this => D#370
  # DEBUG this => D#370
  # DEBUG this => D#370
  # DEBUG D#369 => &D#370->_M_start
  # DEBUG this => D#369
  # DEBUG D#19 => &D#369->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)&D.61779]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)&D.61779]._M_offset = 0;
  # DEBUG D#368 => &D#370->_M_finish
  # DEBUG this => D#368
  # DEBUG D#19 => &D#368->D.26904
  # DEBUG this => D#19
  # DEBUG __x => 0B
  # DEBUG __y => 0
  # DEBUG this => D#19
  MEM[(struct _Bit_iterator_base *)&D.61779 + 16B]._M_p = 0B;
  MEM[(struct _Bit_iterator_base *)&D.61779 + 16B]._M_offset = 0;
  MEM[(struct _Bvector_impl *)&D.61779]._M_end_of_storage = 0B;
  # DEBUG D#3757 => this_30(D)->D.54631._inputs
  _89 = &this_30(D)->_active;
  # DEBUG this => _89
  # DEBUG __new_size => (long unsigned int) D#3757
  # DEBUG __x => &D.61779
  _86 = MEM[(struct vector * *)this_30(D) + 312B];
  # DEBUG D#144 => _89
  _822 = MEM[(struct vector * *)this_30(D) + 320B];
  # DEBUG D#144 => _89
  # DEBUG this => D#144
  # DEBUG this => D#144
  _823 = (long int) _822;
  _824 = (long int) _86;
  _825 = _823 - _824;
  _826 = _825 /[ex] 40;
  _827 = (size_type) _826;
  if (_827 < prephitmp_1388)
    goto <bb 84>;
  else
    goto <bb 86>;

  <bb 84>:
  # DEBUG D#144 => _89
  # DEBUG D#144 => _89
  # DEBUG this => D#144
  # DEBUG this => D#144
  _828 = prephitmp_1388 - _827;
  # DEBUG this => _89
  # DEBUG D#214 => &_89->D.50019._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#214
  # DEBUG this => _89
  MEM[(struct __normal_iterator *)&__position] = _822;
  # DEBUG __n => _828
  # DEBUG __x => &D.61779
  std::vector<std::vector<bool> >::_M_fill_insert (_89, __position, _828, &D.61779);

  <bb 85>:
  goto <bb 92>;

  <bb 86>:
  # DEBUG D#144 => _89
  # DEBUG D#144 => _89
  # DEBUG this => D#144
  # DEBUG this => D#144
  if (_827 > prephitmp_1388)
    goto <bb 87>;
  else
    goto <bb 85>;

  <bb 87>:
  _829 = prephitmp_1388 * 40;
  __pos_830 = _86 + _829;
  # DEBUG D#620 => _89
  # DEBUG __pos => __pos_830
  # DEBUG D#619 => D#620
  # DEBUG this => D#619
  # DEBUG D#618 => &D#619->D.50019
  # DEBUG this => D#618
  # DEBUG __first => __pos_830
  # DEBUG __last => _822
  # DEBUG __first => __pos_830
  if (_822 == __pos_830)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  MEM[(struct vector * *)this_30(D) + 320B] = __pos_830;
  goto <bb 92>;

  <bb 89>:

  <bb 90>:
  # __pos_1298 = PHI <__pos_830(89), __pos_833(91)>
  # DEBUG __first => __pos_1298
  # DEBUG __r => __pos_1298
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  _832 = &__pos_1298->D.43009;
  # DEBUG this => _832
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (_832);
  # DEBUG D#571 => &_832->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)__pos_1298] ={v} {CLOBBER};
  __pos_833 = __pos_1298 + 40;
  # DEBUG __first => __pos_833
  # DEBUG __first => __pos_833
  if (_822 == __pos_833)
    goto <bb 88>;
  else
    goto <bb 91>;

  <bb 91>:
  goto <bb 90>;

  <bb 92>:
  # DEBUG this => &D.61779
  # DEBUG this => &D.61779.D.43009
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&D.61779.D.43009);
  # DEBUG D#571 => &MEM[(struct _Bvector_base *)&D.61779]._M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  D.61779 ={v} {CLOBBER};
  # DEBUG i => 0
  # DEBUG i => 0
  _1222 = this_30(D)->D.54631._inputs;
  if (_1222 <= 0)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  _113 = this_30(D)->D.54631._outputs;
  _114 = (long unsigned int) _113;
  # DEBUG D#3765 => &this_30(D)->_output_state
  # DEBUG this => D#3765
  # DEBUG __new_size => _114
  __x = 0B;
  # DEBUG __x => __x
  _108 = MEM[(struct EventNextVCState * * *)this_30(D) + 344B];
  # DEBUG D#146 => D#3765
  _860 = MEM[(struct EventNextVCState * * *)this_30(D) + 352B];
  # DEBUG D#146 => D#3765
  # DEBUG this => D#146
  # DEBUG this => D#146
  _861 = (long int) _860;
  _862 = (long int) _108;
  _863 = _861 - _862;
  _864 = _863 /[ex] 8;
  _865 = (size_type) _864;
  if (_114 > _865)
    goto <bb 115>;
  else
    goto <bb 118>;

  <bb 94>:

  <bb 95>:
  # i_1219 = PHI <0(94), i_109(114)>
  # DEBUG i => i_1219
  # DEBUG __out => &module_name.D.23228
  # DEBUG __s => "buf_"
  # DEBUG __s => "buf_"
  std::__ostream_insert<char, std::char_traits<char> > (&module_name.D.23228, "buf_", 4);
  goto <bb 97>;

<L101>:
  pretmp_514 = &this_30(D)->_input_buffer;
  pretmp_416 = &this_30(D)->_output_buffer;
  pretmp_9 = &this_30(D)->_in_cred_buffer;
  pretmp_1216 = &this_30(D)->_out_cred_buffer;
  pretmp_55 = &this_30(D)->_arrival_queue;
  pretmp_1253 = &this_30(D)->_transport_queue;
  pretmp_1336 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 97>:
  std::basic_ostream<char>::operator<< (&module_name.D.23228, i_1219);
  goto <bb 99>;

<L102>:
  pretmp_506 = &this_30(D)->_input_buffer;
  pretmp_417 = &this_30(D)->_output_buffer;
  pretmp_921 = &this_30(D)->_in_cred_buffer;
  pretmp_1007 = &this_30(D)->_out_cred_buffer;
  pretmp_179 = &this_30(D)->_arrival_queue;
  pretmp_1252 = &this_30(D)->_transport_queue;
  pretmp_1337 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 99>:
  # DEBUG this => &module_name
  D.61783 = std::__cxx11::basic_stringbuf<char>::str (&module_name._M_stringbuf); [return slot optimization]
  goto <bb 101>;

<L103>:
  pretmp_507 = &this_30(D)->_input_buffer;
  pretmp_418 = &this_30(D)->_output_buffer;
  pretmp_1023 = &this_30(D)->_in_cred_buffer;
  pretmp_775 = &this_30(D)->_out_cred_buffer;
  pretmp_116 = &this_30(D)->_arrival_queue;
  pretmp_1249 = &this_30(D)->_transport_queue;
  pretmp_1338 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 101>:
  _96 = operator new (128);

  <bb 102>:
  _98 = this_30(D)->D.54631._outputs;
  Buffer::Buffer (_96, config_33(D), _98, _31, &D.61783);

  <bb 103>:
  _100 = (long unsigned int) i_1219;
  # DEBUG D#2770 => &this_30(D)->_buf
  _315 = MEM[(struct Buffer * * *)this_30(D) + 288B];
  # DEBUG D#70 => D#2770
  # DEBUG __n => _100
  # DEBUG this => D#70
  _41 = _100 * 8;
  _42 = _315 + _41;
  *_42 = _96;
  # DEBUG this => &D.61783
  # DEBUG this => &D.61783
  # DEBUG this => &D.61783
  _94 = MEM[(char * *)&D.61783];
  # DEBUG D#1 => &D.61783
  # DEBUG this => D#1
  # DEBUG this => &D.61783
  if (&D.61783.D.11539._M_local_buf != _94)
    goto <bb 104>;
  else
    goto <bb 105>;

  <bb 104>:
  # DEBUG D#467 => D.61783.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61783
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61783
  # DEBUG this => D#1
  # DEBUG this => &D.61783
  # DEBUG D#464 => &D.61783._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _94
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _94
  # DEBUG this => D#458
  # DEBUG D.132006 => D#459
  operator delete (_94);

  <bb 105>:
  # DEBUG D#468 => &D.61783._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61783 ={v} {CLOBBER};
  std::basic_ostream<char>::seekp (&module_name.D.23228, 0, 0);
  goto <bb 107>;

<L105>:
  pretmp_509 = &this_30(D)->_input_buffer;
  pretmp_421 = &this_30(D)->_output_buffer;
  pretmp_124 = &this_30(D)->_in_cred_buffer;
  pretmp_1306 = &this_30(D)->_out_cred_buffer;
  pretmp_1274 = &this_30(D)->_arrival_queue;
  pretmp_1247 = &this_30(D)->_transport_queue;
  pretmp_1340 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 107>:
  _105 = this_30(D)->_vcs;
  _106 = (long unsigned int) _105;
  # DEBUG D#2771 => &this_30(D)->_active
  _316 = MEM[(struct vector * *)this_30(D) + 312B];
  # DEBUG D#71 => D#2771
  # DEBUG __n => _100
  # DEBUG this => D#71
  _184 = _100 * 40;
  _173 = _316 + _184;
  # DEBUG this => _173
  # DEBUG __new_size => _106
  # DEBUG __x => 0
  # DEBUG this => _173
  # DEBUG this => _173
  # DEBUG D#142 => &MEM[(const struct vector *)_173].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _90 = MEM[(const struct _Bit_iterator *)_173].D.26904._M_offset;
  _834 = MEM[(const struct _Bit_iterator *)_173].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _834
  # DEBUG __y => _90
  # DEBUG this => D#28
  # DEBUG this => _173
  # DEBUG D#143 => &MEM[(const struct vector *)_173].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  _835 = MEM[(const struct _Bit_iterator *)_173 + 16B].D.26904._M_offset;
  _836 = MEM[(const struct _Bit_iterator *)_173 + 16B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _836
  # DEBUG __y => _835
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _837 = (long int) _836;
  _838 = (long int) _834;
  _839 = _837 - _838;
  _840 = _839 * 8;
  _841 = (long int) _835;
  _842 = _840 + _841;
  _843 = (long int) _90;
  _844 = _842 - _843;
  _845 = (size_type) _844;
  if (_106 < _845)
    goto <bb 108>;
  else
    goto <bb 111>;

  <bb 108>:
  __new_size.421_846 = (long int) _105;
  # DEBUG this => _173
  # DEBUG this => NULL
  # DEBUG __i => __new_size.421_846
  # DEBUG __tmp$_M_p => _834
  # DEBUG __tmp$_M_offset => _90
  # DEBUG this => &__tmp
  # DEBUG __i => __new_size.421_846
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => __new_size.421_846
  __n_847 = _843 + __new_size.421_846;
  # DEBUG __n => __n_847
  _848 = __n_847 / 64;
  _849 = (long unsigned int) _848;
  _850 = _849 * 8;
  __tmp$_M_p_851 = _834 + _850;
  # DEBUG __tmp$_M_p => __tmp$_M_p_851
  __n_852 = __n_847 % 64;
  # DEBUG __n => __n_852
  if (__n_852 < 0)
    goto <bb 109>;
  else
    goto <bb 110>;

  <bb 109>:
  __n_853 = __n_852 + 64;
  # DEBUG __n => __n_853
  __tmp$_M_p_854 = __tmp$_M_p_851 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_854

  <bb 110>:
  # __n_855 = PHI <__n_852(108), __n_853(109)>
  # __tmp$_M_p_857 = PHI <__tmp$_M_p_851(108), __tmp$_M_p_854(109)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_857
  # DEBUG __n => __n_855
  _856 = (unsigned int) __n_855;
  # DEBUG __tmp$_M_offset => _856
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  # DEBUG this => _173
  MEM[(struct _Bit_iterator *)_173 + 16B] = __tmp$_M_p_857;
  MEM[(struct _Bit_iterator *)_173 + 24B] = _856;
  goto <bb 113>;

  <bb 111>:
  # DEBUG this => _173
  # DEBUG this => _173
  # DEBUG D#142 => &MEM[(const struct vector *)_173].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG this => D#28
  # DEBUG __x => _834
  # DEBUG __y => _90
  # DEBUG this => D#28
  # DEBUG this => _173
  # DEBUG D#143 => &MEM[(const struct vector *)_173].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  # DEBUG this => D#28
  # DEBUG __x => _836
  # DEBUG __y => _835
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _858 = _106 - _845;
  # DEBUG this => _173
  # DEBUG D#1402 => &__x
  # DEBUG this => _173
  MEM[(struct _Bit_iterator *)&__position] = _836;
  MEM[(struct _Bit_iterator *)&__position + 8B] = _835;
  # DEBUG __n => _858
  # DEBUG __x => D#1402
  std::vector<bool>::_M_fill_insert (_173, __position, _858, 0);
  goto <bb 113>;

<L106>:
  pretmp_496 = &this_30(D)->_input_buffer;
  pretmp_422 = &this_30(D)->_output_buffer;
  pretmp_933 = &this_30(D)->_in_cred_buffer;
  pretmp_1220 = &this_30(D)->_out_cred_buffer;
  pretmp_1178 = &this_30(D)->_arrival_queue;
  pretmp_1241 = &this_30(D)->_transport_queue;
  pretmp_1341 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 113>:
  i_109 = i_1219 + 1;
  # DEBUG i => i_109
  # DEBUG i => i_109
  _92 = this_30(D)->D.54631._inputs;
  if (_92 <= i_109)
    goto <bb 93>;
  else
    goto <bb 114>;

  <bb 114>:
  goto <bb 95>;

  <bb 115>:
  # DEBUG D#146 => D#3765
  # DEBUG D#146 => D#3765
  # DEBUG this => D#146
  # DEBUG this => D#146
  _866 = _114 - _865;
  # DEBUG this => D#3765
  # DEBUG D#215 => &D#3765->D.50767._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#215
  # DEBUG this => D#3765
  MEM[(struct __normal_iterator *)&__position] = _860;
  # DEBUG __n => _866
  # DEBUG __x => &__x
  _115 = &this_30(D)->_output_state;
  std::vector<EventNextVCState*>::_M_fill_insert (_115, __position, _866, &__x);
  goto <bb 117>;

<L107>:
  pretmp_497 = &this_30(D)->_input_buffer;
  pretmp_423 = &this_30(D)->_output_buffer;
  pretmp_1025 = &this_30(D)->_in_cred_buffer;
  pretmp_1307 = &this_30(D)->_out_cred_buffer;
  pretmp_1273 = &this_30(D)->_arrival_queue;
  pretmp_1248 = &this_30(D)->_transport_queue;
  pretmp_1342 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 117>:
  pretmp_1395 = this_30(D)->D.54631._outputs;
  goto <bb 120>;

  <bb 118>:
  # DEBUG D#146 => D#3765
  # DEBUG D#146 => D#3765
  # DEBUG this => D#146
  # DEBUG this => D#146
  if (_114 < _865)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 119>:
  _867 = _114 * 8;
  _868 = _108 + _867;
  # DEBUG D#344 => D#3765
  # DEBUG __pos => _868
  # DEBUG D#343 => D#344
  # DEBUG this => D#343
  # DEBUG D#341 => &D#343->D.50767
  # DEBUG this => D#341
  # DEBUG D#342 => D#343->D.50767._M_impl._M_finish
  # DEBUG __first => _868
  # DEBUG __last => D#342
  # DEBUG D.100999 => NULL
  # DEBUG D#339 => _868
  # DEBUG D#340 => D#342
  # DEBUG __first => D#339
  # DEBUG __last => D#340
  # DEBUG D#338 => D#340
  # DEBUG D#337 => D#339
  # DEBUG D#335 => D#337
  # DEBUG D#336 => D#338
  # DEBUG D.100983 => D#335
  # DEBUG D.100982 => D#336
  MEM[(struct EventNextVCState * * *)this_30(D) + 352B] = _868;

  <bb 120>:
  # prephitmp_1396 = PHI <pretmp_1395(117), _113(119), _113(118)>
  # DEBUG o => 0
  if (prephitmp_1396 <= 0)
    goto <bb 139>;
  else
    goto <bb 121>;

  <bb 121>:

  <bb 122>:
  # o_1303 = PHI <0(121), o_130(138)>
  # DEBUG o => o_1303
  # DEBUG __out => &module_name.D.23228
  # DEBUG __s => "output"
  # DEBUG __s => "output"
  std::__ostream_insert<char, std::char_traits<char> > (&module_name.D.23228, "output", 6);
  goto <bb 124>;

<L108>:
  pretmp_498 = &this_30(D)->_input_buffer;
  pretmp_425 = &this_30(D)->_output_buffer;
  pretmp_77 = &this_30(D)->_in_cred_buffer;
  pretmp_1285 = &this_30(D)->_out_cred_buffer;
  pretmp_1177 = &this_30(D)->_arrival_queue;
  pretmp_1242 = &this_30(D)->_transport_queue;
  pretmp_1343 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 124>:
  _119 = std::basic_ostream<char>::operator<< (&module_name.D.23228, o_1303);
  goto <bb 126>;

<L109>:
  pretmp_499 = &this_30(D)->_input_buffer;
  pretmp_426 = &this_30(D)->_output_buffer;
  pretmp_1051 = &this_30(D)->_in_cred_buffer;
  pretmp_1286 = &this_30(D)->_out_cred_buffer;
  pretmp_1270 = &this_30(D)->_arrival_queue;
  pretmp_1245 = &this_30(D)->_transport_queue;
  pretmp_1344 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 126>:
  # DEBUG __out => _119
  # DEBUG __s => "_vc_state"
  # DEBUG __s => "_vc_state"
  std::__ostream_insert<char, std::char_traits<char> > (_119, "_vc_state", 9);
  goto <bb 128>;

<L110>:
  pretmp_484 = &this_30(D)->_input_buffer;
  pretmp_427 = &this_30(D)->_output_buffer;
  pretmp_945 = &this_30(D)->_in_cred_buffer;
  pretmp_1201 = &this_30(D)->_out_cred_buffer;
  pretmp_1174 = &this_30(D)->_arrival_queue;
  pretmp_1166 = &this_30(D)->_transport_queue;
  pretmp_1345 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 128>:
  # DEBUG this => &module_name
  D.61788 = std::__cxx11::basic_stringbuf<char>::str (&module_name._M_stringbuf); [return slot optimization]
  goto <bb 130>;

<L111>:
  pretmp_485 = &this_30(D)->_input_buffer;
  pretmp_428 = &this_30(D)->_output_buffer;
  pretmp_1027 = &this_30(D)->_in_cred_buffer;
  pretmp_1284 = &this_30(D)->_out_cred_buffer;
  pretmp_1271 = &this_30(D)->_arrival_queue;
  pretmp_1165 = &this_30(D)->_transport_queue;
  pretmp_1346 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 130>:
  _123 = operator new (248);

  <bb 131>:
  EventNextVCState::EventNextVCState (_123, config_33(D), _31, &D.61788);

  <bb 132>:
  _126 = (long unsigned int) o_1303;
  # DEBUG D#2772 => &this_30(D)->_output_state
  _317 = MEM[(struct EventNextVCState * * *)this_30(D) + 344B];
  # DEBUG D#72 => D#2772
  # DEBUG __n => _126
  # DEBUG this => D#72
  _107 = _126 * 8;
  _101 = _317 + _107;
  *_101 = _123;
  # DEBUG this => &D.61788
  # DEBUG this => &D.61788
  # DEBUG this => &D.61788
  _121 = MEM[(char * *)&D.61788];
  # DEBUG D#1 => &D.61788
  # DEBUG this => D#1
  # DEBUG this => &D.61788
  if (&D.61788.D.11539._M_local_buf != _121)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:
  # DEBUG D#467 => D.61788.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61788
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61788
  # DEBUG this => D#1
  # DEBUG this => &D.61788
  # DEBUG D#464 => &D.61788._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _121
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _121
  # DEBUG this => D#458
  # DEBUG D.132034 => D#459
  operator delete (_121);

  <bb 134>:
  # DEBUG D#468 => &D.61788._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61788 ={v} {CLOBBER};
  std::basic_ostream<char>::seekp (&module_name.D.23228, 0, 0);
  goto <bb 136>;

<L113>:
  pretmp_487 = &this_30(D)->_input_buffer;
  pretmp_431 = &this_30(D)->_output_buffer;
  pretmp_782 = &this_30(D)->_in_cred_buffer;
  pretmp_1283 = &this_30(D)->_out_cred_buffer;
  pretmp_1194 = &this_30(D)->_arrival_queue;
  pretmp_1163 = &this_30(D)->_transport_queue;
  pretmp_1348 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 136>:
  o_130 = o_1303 + 1;
  # DEBUG o => o_130
  # DEBUG o => o_130
  _117 = this_30(D)->D.54631._outputs;
  if (_117 <= o_130)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  # _1403 = PHI <_117(136)>
  goto <bb 139>;

  <bb 138>:
  goto <bb 122>;

  <bb 139>:
  # _1299 = PHI <_1403(137), prephitmp_1396(120)>
  # prephitmp_1406 = PHI <_1403(137), prephitmp_1396(120)>
  _134 = (long unsigned int) _1299;
  # DEBUG D#3764 => &this_30(D)->_arrival_arbiter
  # DEBUG this => D#3764
  # DEBUG __new_size => _134
  __x = 0B;
  # DEBUG __x => __x
  _120 = MEM[(struct PriorityArbiter * * *)this_30(D) + 512B];
  # DEBUG D#147 => D#3764
  _870 = MEM[(struct PriorityArbiter * * *)this_30(D) + 520B];
  # DEBUG D#147 => D#3764
  # DEBUG this => D#147
  # DEBUG this => D#147
  _871 = (long int) _870;
  _872 = (long int) _120;
  _873 = _871 - _872;
  _874 = _873 /[ex] 8;
  _875 = (size_type) _874;
  if (_134 > _875)
    goto <bb 140>;
  else
    goto <bb 143>;

  <bb 140>:
  # DEBUG D#147 => D#3764
  # DEBUG D#147 => D#3764
  # DEBUG this => D#147
  # DEBUG this => D#147
  _876 = _134 - _875;
  # DEBUG this => D#3764
  # DEBUG D#216 => &D#3764->D.53778._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG this => D#3764
  MEM[(struct __normal_iterator *)&__position] = _870;
  # DEBUG __n => _876
  # DEBUG __x => &__x
  _135 = &this_30(D)->_arrival_arbiter;
  std::vector<PriorityArbiter*>::_M_fill_insert (_135, __position, _876, &__x);
  goto <bb 142>;

<L114>:
  pretmp_472 = &this_30(D)->_input_buffer;
  pretmp_432 = &this_30(D)->_output_buffer;
  pretmp_957 = &this_30(D)->_in_cred_buffer;
  pretmp_1202 = &this_30(D)->_out_cred_buffer;
  pretmp_1173 = &this_30(D)->_arrival_queue;
  pretmp_1001 = &this_30(D)->_transport_queue;
  pretmp_1349 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 142>:
  pretmp_1516 = this_30(D)->D.54631._outputs;
  goto <bb 145>;

  <bb 143>:
  # DEBUG D#147 => D#3764
  # DEBUG D#147 => D#3764
  # DEBUG this => D#147
  # DEBUG this => D#147
  if (_134 < _875)
    goto <bb 144>;
  else
    goto <bb 145>;

  <bb 144>:
  _877 = _134 * 8;
  _878 = _120 + _877;
  # DEBUG D#354 => D#3764
  # DEBUG __pos => _878
  # DEBUG D#353 => D#354
  # DEBUG this => D#353
  # DEBUG D#351 => &D#353->D.53778
  # DEBUG this => D#351
  # DEBUG D#352 => D#353->D.53778._M_impl._M_finish
  # DEBUG __first => _878
  # DEBUG __last => D#352
  # DEBUG D.101061 => NULL
  # DEBUG D#349 => _878
  # DEBUG D#350 => D#352
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  MEM[(struct PriorityArbiter * * *)this_30(D) + 520B] = _878;

  <bb 145>:
  # prephitmp_1517 = PHI <pretmp_1516(142), prephitmp_1406(144), prephitmp_1406(143)>
  # DEBUG o => 0
  if (prephitmp_1517 <= 0)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  _153 = this_30(D)->D.54631._inputs;
  _154 = (long unsigned int) _153;
  # DEBUG D#3763 => &this_30(D)->_transport_arbiter
  # DEBUG this => D#3763
  # DEBUG __new_size => _154
  __x = 0B;
  # DEBUG __x => __x
  _136 = MEM[(struct PriorityArbiter * * *)this_30(D) + 560B];
  # DEBUG D#147 => D#3763
  _879 = MEM[(struct PriorityArbiter * * *)this_30(D) + 568B];
  # DEBUG D#147 => D#3763
  # DEBUG this => D#147
  # DEBUG this => D#147
  _880 = (long int) _879;
  _881 = (long int) _136;
  _882 = _880 - _881;
  _883 = _882 /[ex] 8;
  _884 = (size_type) _883;
  if (_154 > _884)
    goto <bb 162>;
  else
    goto <bb 165>;

  <bb 147>:

  <bb 148>:
  # o_1217 = PHI <0(147), o_149(161)>
  # DEBUG o => o_1217
  # DEBUG __out => &module_name.D.23228
  # DEBUG __s => "arrival_arb_output"
  # DEBUG __s => "arrival_arb_output"
  std::__ostream_insert<char, std::char_traits<char> > (&module_name.D.23228, "arrival_arb_output", 18);
  goto <bb 150>;

<L115>:
  pretmp_473 = &this_30(D)->_input_buffer;
  pretmp_433 = &this_30(D)->_output_buffer;
  pretmp_1029 = &this_30(D)->_in_cred_buffer;
  pretmp_762 = &this_30(D)->_out_cred_buffer;
  pretmp_869 = &this_30(D)->_arrival_queue;
  pretmp_1244 = &this_30(D)->_transport_queue;
  pretmp_1350 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 150>:
  std::basic_ostream<char>::operator<< (&module_name.D.23228, o_1217);
  goto <bb 152>;

<L116>:
  pretmp_474 = &this_30(D)->_input_buffer;
  pretmp_405 = &this_30(D)->_output_buffer;
  pretmp_1042 = &this_30(D)->_in_cred_buffer;
  pretmp_1281 = &this_30(D)->_out_cred_buffer;
  pretmp_163 = &this_30(D)->_arrival_queue;
  pretmp_1243 = &this_30(D)->_transport_queue;
  pretmp_1351 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 152>:
  # DEBUG this => &module_name
  D.61793 = std::__cxx11::basic_stringbuf<char>::str (&module_name._M_stringbuf); [return slot optimization]
  goto <bb 154>;

<L117>:
  pretmp_475 = &this_30(D)->_input_buffer;
  pretmp_406 = &this_30(D)->_output_buffer;
  pretmp_1043 = &this_30(D)->_in_cred_buffer;
  pretmp_1282 = &this_30(D)->_out_cred_buffer;
  pretmp_435 = &this_30(D)->_arrival_queue;
  pretmp_246 = &this_30(D)->_transport_queue;
  pretmp_1352 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 154>:
  _141 = operator new (136);

  <bb 155>:
  _142 = this_30(D)->D.54631._inputs;
  PriorityArbiter::PriorityArbiter (_141, config_33(D), _31, &D.61793, _142);

  <bb 156>:
  _145 = (long unsigned int) o_1217;
  # DEBUG D#2773 => &this_30(D)->_arrival_arbiter
  _318 = MEM[(struct PriorityArbiter * * *)this_30(D) + 512B];
  # DEBUG D#73 => D#2773
  # DEBUG __n => _145
  # DEBUG this => D#73
  _58 = _145 * 8;
  _50 = _318 + _58;
  *_50 = _141;
  # DEBUG this => &D.61793
  # DEBUG this => &D.61793
  # DEBUG this => &D.61793
  _139 = MEM[(char * *)&D.61793];
  # DEBUG D#1 => &D.61793
  # DEBUG this => D#1
  # DEBUG this => &D.61793
  if (&D.61793.D.11539._M_local_buf != _139)
    goto <bb 157>;
  else
    goto <bb 158>;

  <bb 157>:
  # DEBUG D#467 => D.61793.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61793
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61793
  # DEBUG this => D#1
  # DEBUG this => &D.61793
  # DEBUG D#464 => &D.61793._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _139
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _139
  # DEBUG this => D#458
  # DEBUG D.132058 => D#459
  operator delete (_139);

  <bb 158>:
  # DEBUG D#468 => &D.61793._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61793 ={v} {CLOBBER};
  std::basic_ostream<char>::seekp (&module_name.D.23228, 0, 0);
  goto <bb 160>;

<L119>:
  pretmp_461 = &this_30(D)->_input_buffer;
  pretmp_408 = &this_30(D)->_output_buffer;
  pretmp_1045 = &this_30(D)->_in_cred_buffer;
  pretmp_1280 = &this_30(D)->_out_cred_buffer;
  pretmp_1269 = &this_30(D)->_arrival_queue;
  pretmp_777 = &this_30(D)->_transport_queue;
  pretmp_1354 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 160>:
  o_149 = o_1217 + 1;
  # DEBUG o => o_149
  # DEBUG o => o_149
  _137 = this_30(D)->D.54631._outputs;
  if (_137 <= o_149)
    goto <bb 146>;
  else
    goto <bb 161>;

  <bb 161>:
  goto <bb 148>;

  <bb 162>:
  # DEBUG D#147 => D#3763
  # DEBUG D#147 => D#3763
  # DEBUG this => D#147
  # DEBUG this => D#147
  _885 = _154 - _884;
  # DEBUG this => D#3763
  # DEBUG D#216 => &D#3763->D.53778._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#216
  # DEBUG this => D#3763
  MEM[(struct __normal_iterator *)&__position] = _879;
  # DEBUG __n => _885
  # DEBUG __x => &__x
  _155 = &this_30(D)->_transport_arbiter;
  std::vector<PriorityArbiter*>::_M_fill_insert (_155, __position, _885, &__x);
  goto <bb 164>;

<L120>:
  pretmp_462 = &this_30(D)->_input_buffer;
  pretmp_400 = &this_30(D)->_output_buffer;
  pretmp_1047 = &this_30(D)->_in_cred_buffer;
  pretmp_1200 = &this_30(D)->_out_cred_buffer;
  pretmp_1170 = &this_30(D)->_arrival_queue;
  pretmp_760 = &this_30(D)->_transport_queue;
  pretmp_1355 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 164>:
  pretmp_1417 = this_30(D)->D.54631._inputs;
  goto <bb 167>;

  <bb 165>:
  # DEBUG D#147 => D#3763
  # DEBUG D#147 => D#3763
  # DEBUG this => D#147
  # DEBUG this => D#147
  if (_154 < _884)
    goto <bb 166>;
  else
    goto <bb 167>;

  <bb 166>:
  _886 = _154 * 8;
  _887 = _136 + _886;
  # DEBUG D#354 => D#3763
  # DEBUG __pos => _887
  # DEBUG D#353 => D#354
  # DEBUG this => D#353
  # DEBUG D#351 => &D#353->D.53778
  # DEBUG this => D#351
  # DEBUG D#352 => D#353->D.53778._M_impl._M_finish
  # DEBUG __first => _887
  # DEBUG __last => D#352
  # DEBUG D.101061 => NULL
  # DEBUG D#349 => _887
  # DEBUG D#350 => D#352
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  MEM[(struct PriorityArbiter * * *)this_30(D) + 568B] = _887;

  <bb 167>:
  # prephitmp_1418 = PHI <pretmp_1417(164), _153(166), _153(165)>
  # DEBUG i => 0
  if (prephitmp_1418 <= 0)
    goto <bb 168>;
  else
    goto <bb 169>;

  <bb 168>:
  # DEBUG D#140 => &D.61802
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.61802
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.61801, "crossbar_pipeline");
  goto <bb 185>;

  <bb 169>:

  <bb 170>:
  # i_1060 = PHI <0(169), i_169(183)>
  # DEBUG i => i_1060
  # DEBUG __out => &module_name.D.23228
  # DEBUG __s => "transport_arb_input"
  # DEBUG __s => "transport_arb_input"
  std::__ostream_insert<char, std::char_traits<char> > (&module_name.D.23228, "transport_arb_input", 19);
  goto <bb 172>;

<L121>:
  pretmp_463 = &this_30(D)->_input_buffer;
  pretmp_401 = &this_30(D)->_output_buffer;
  pretmp_1048 = &this_30(D)->_in_cred_buffer;
  pretmp_1279 = &this_30(D)->_out_cred_buffer;
  pretmp_1267 = &this_30(D)->_arrival_queue;
  pretmp_1308 = &this_30(D)->_transport_queue;
  pretmp_1356 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 172>:
  std::basic_ostream<char>::operator<< (&module_name.D.23228, i_1060);
  goto <bb 174>;

<L122>:
  pretmp_1069 = &this_30(D)->_input_buffer;
  pretmp_402 = &this_30(D)->_output_buffer;
  pretmp_1049 = &this_30(D)->_in_cred_buffer;
  pretmp_1199 = &this_30(D)->_out_cred_buffer;
  pretmp_1172 = &this_30(D)->_arrival_queue;
  pretmp_1309 = &this_30(D)->_transport_queue;
  pretmp_1357 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 174>:
  # DEBUG this => &module_name
  D.61798 = std::__cxx11::basic_stringbuf<char>::str (&module_name._M_stringbuf); [return slot optimization]
  goto <bb 176>;

<L123>:
  pretmp_1070 = &this_30(D)->_input_buffer;
  pretmp_403 = &this_30(D)->_output_buffer;
  pretmp_1050 = &this_30(D)->_in_cred_buffer;
  pretmp_1197 = &this_30(D)->_out_cred_buffer;
  pretmp_1266 = &this_30(D)->_arrival_queue;
  pretmp_1310 = &this_30(D)->_transport_queue;
  pretmp_1358 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 176>:
  _161 = operator new (136);

  <bb 177>:
  _162 = this_30(D)->D.54631._outputs;
  PriorityArbiter::PriorityArbiter (_161, config_33(D), _31, &D.61798, _162);

  <bb 178>:
  _165 = (long unsigned int) i_1060;
  # DEBUG D#2774 => &this_30(D)->_transport_arbiter
  _319 = MEM[(struct PriorityArbiter * * *)this_30(D) + 560B];
  # DEBUG D#73 => D#2774
  # DEBUG __n => _165
  # DEBUG this => D#73
  _320 = _165 * 8;
  _321 = _319 + _320;
  *_321 = _161;
  # DEBUG this => &D.61798
  # DEBUG this => &D.61798
  # DEBUG this => &D.61798
  _159 = MEM[(char * *)&D.61798];
  # DEBUG D#1 => &D.61798
  # DEBUG this => D#1
  # DEBUG this => &D.61798
  if (&D.61798.D.11539._M_local_buf != _159)
    goto <bb 179>;
  else
    goto <bb 180>;

  <bb 179>:
  # DEBUG D#467 => D.61798.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61798
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61798
  # DEBUG this => D#1
  # DEBUG this => &D.61798
  # DEBUG D#464 => &D.61798._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _159
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _159
  # DEBUG this => D#458
  # DEBUG D.132082 => D#459
  operator delete (_159);

  <bb 180>:
  # DEBUG D#468 => &D.61798._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61798 ={v} {CLOBBER};
  std::basic_ostream<char>::seekp (&module_name.D.23228, 0, 0);
  goto <bb 182>;

<L125>:
  pretmp_1072 = &this_30(D)->_input_buffer;
  pretmp_1017 = &this_30(D)->_output_buffer;
  pretmp_909 = &this_30(D)->_in_cred_buffer;
  pretmp_1195 = &this_30(D)->_out_cred_buffer;
  pretmp_251 = &this_30(D)->_arrival_queue;
  pretmp_1312 = &this_30(D)->_transport_queue;
  pretmp_1360 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 182>:
  i_169 = i_1060 + 1;
  # DEBUG i => i_169
  # DEBUG i => i_169
  _157 = this_30(D)->D.54631._inputs;
  if (_157 <= i_169)
    goto <bb 168>;
  else
    goto <bb 183>;

  <bb 183>:
  goto <bb 170>;

<L126>:
  pretmp_438 = &this_30(D)->_input_buffer;
  pretmp_1294 = &this_30(D)->_output_buffer;
  pretmp_2 = &this_30(D)->_in_cred_buffer;
  pretmp_1185 = &this_30(D)->_out_cred_buffer;
  pretmp_1262 = &this_30(D)->_arrival_queue;
  pretmp_1324 = &this_30(D)->_transport_queue;
  pretmp_1372 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 185>:
  _176 = operator new (136);

  <bb 186>:
  _177 = this_30(D)->D.54631._crossbar_delay;
  _178 = this_30(D)->D.54631._outputs;
  PipelineFIFO<Flit>::PipelineFIFO (_176, _31, &D.61801, _178, _177);

  <bb 187>:
  this_30(D)->_crossbar_pipe = _176;
  # DEBUG this => &D.61801
  # DEBUG this => &D.61801
  # DEBUG this => &D.61801
  _183 = MEM[(char * *)&D.61801];
  # DEBUG D#1 => &D.61801
  # DEBUG this => D#1
  # DEBUG this => &D.61801
  if (&D.61801.D.11539._M_local_buf != _183)
    goto <bb 188>;
  else
    goto <bb 189>;

  <bb 188>:
  # DEBUG D#467 => D.61801.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61801
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61801
  # DEBUG this => D#1
  # DEBUG this => &D.61801
  # DEBUG D#464 => &D.61801._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _183
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _183
  # DEBUG this => D#458
  # DEBUG D.132105 => D#459
  operator delete (_183);

  <bb 189>:
  # DEBUG D#468 => &D.61801._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61801 ={v} {CLOBBER};
  # DEBUG this => &D.61802
  # DEBUG this => &D.61802
  # DEBUG D#140 => &D.61806
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.61806
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.61805, "credit_pipeline");
  goto <bb 191>;

<L128>:
  pretmp_440 = &this_30(D)->_input_buffer;
  pretmp_790 = &this_30(D)->_output_buffer;
  pretmp_1229 = &this_30(D)->_in_cred_buffer;
  pretmp_776 = &this_30(D)->_out_cred_buffer;
  pretmp_1258 = &this_30(D)->_arrival_queue;
  pretmp_1326 = &this_30(D)->_transport_queue;
  pretmp_1374 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 191>:
  _187 = operator new (136);

  <bb 192>:
  _188 = this_30(D)->D.54631._credit_delay;
  _189 = this_30(D)->D.54631._inputs;
  PipelineFIFO<Credit>::PipelineFIFO (_187, _31, &D.61805, _189, _188);

  <bb 193>:
  this_30(D)->_credit_pipe = _187;
  # DEBUG this => &D.61805
  # DEBUG this => &D.61805
  # DEBUG this => &D.61805
  _193 = MEM[(char * *)&D.61805];
  # DEBUG D#1 => &D.61805
  # DEBUG this => D#1
  # DEBUG this => &D.61805
  if (&D.61805.D.11539._M_local_buf != _193)
    goto <bb 194>;
  else
    goto <bb 195>;

  <bb 194>:
  # DEBUG D#467 => D.61805.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61805
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61805
  # DEBUG this => D#1
  # DEBUG this => &D.61805
  # DEBUG D#464 => &D.61805._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _193
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _193
  # DEBUG this => D#458
  # DEBUG D.132123 => D#459
  operator delete (_193);

  <bb 195>:
  # DEBUG D#468 => &D.61805._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61805 ={v} {CLOBBER};
  # DEBUG this => &D.61806
  # DEBUG this => &D.61806
  # DEBUG D#140 => &D.61810
  # DEBUG this => D#140
  # DEBUG D#139 => D#140
  # DEBUG this => D#139
  # DEBUG D#918 => &D.61810
  std::__cxx11::basic_string<char>::_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.243 (&D.61809, "arrival_pipeline");
  goto <bb 197>;

<L130>:
  pretmp_486 = &this_30(D)->_input_buffer;
  pretmp_430 = &this_30(D)->_output_buffer;
  pretmp_794 = &this_30(D)->_in_cred_buffer;
  pretmp_1203 = &this_30(D)->_out_cred_buffer;
  pretmp_1272 = &this_30(D)->_arrival_queue;
  pretmp_1164 = &this_30(D)->_transport_queue;
  pretmp_1347 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 197>:
  _196 = operator new (136);

  <bb 198>:
  _197 = this_30(D)->D.54631._inputs;
  PipelineFIFO<EventRouter::tArrivalEvent>::PipelineFIFO (_196, _31, &D.61809, _197, 0);

  <bb 199>:
  this_30(D)->_arrival_pipe = _196;
  # DEBUG this => &D.61809
  # DEBUG this => &D.61809
  # DEBUG this => &D.61809
  _201 = MEM[(char * *)&D.61809];
  # DEBUG D#1 => &D.61809
  # DEBUG this => D#1
  # DEBUG this => &D.61809
  if (&D.61809.D.11539._M_local_buf != _201)
    goto <bb 200>;
  else
    goto <bb 201>;

  <bb 200>:
  # DEBUG D#467 => D.61809.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61809
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61809
  # DEBUG this => D#1
  # DEBUG this => &D.61809
  # DEBUG D#464 => &D.61809._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _201
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _201
  # DEBUG this => D#458
  # DEBUG D.132145 => D#459
  operator delete (_201);

  <bb 201>:
  # DEBUG D#468 => &D.61809._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61809 ={v} {CLOBBER};
  # DEBUG this => &D.61810
  # DEBUG this => &D.61810
  # DEBUG this => &D.61813
  # DEBUG this => &D.61813.D.44077
  # DEBUG D#1579 => &MEM[(struct _Deque_base *)&D.61813]._M_impl
  # DEBUG this => D#1579
  # DEBUG this => D#1579
  # DEBUG this => D#1579
  MEM[(struct _Deque_impl *)&D.61813]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.61813]._M_map_size = 0;
  # DEBUG D#786 => &D#1579->_M_start
  # DEBUG this => D#786
  MEM[(struct _Deque_iterator *)&D.61813 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61813 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61813 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61813 + 16B]._M_node = 0B;
  # DEBUG D#785 => &D#1579->_M_finish
  # DEBUG this => D#785
  MEM[(struct _Deque_iterator *)&D.61813 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61813 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61813 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61813 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (&D.61813.D.44077, 0);
  goto <bb 203>;

<L132>:
  pretmp_452 = &this_30(D)->_input_buffer;
  pretmp_897 = &this_30(D)->_output_buffer;
  pretmp_1054 = &this_30(D)->_in_cred_buffer;
  pretmp_1192 = &this_30(D)->_out_cred_buffer;
  pretmp_1167 = &this_30(D)->_arrival_queue;
  pretmp_1313 = &this_30(D)->_transport_queue;
  pretmp_1361 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 203>:
  # DEBUG this => &D.61812
  # DEBUG __c => &D.61813
  std::deque<Flit*, std::allocator<Flit*> >::deque (&D.61812.c, &D.61813);

  <bb 204>:
  _202 = this_30(D)->D.54631._inputs;
  _203 = (long unsigned int) _202;
  _204 = &this_30(D)->_input_buffer;
  # DEBUG this => _204
  # DEBUG __new_size => _203
  # DEBUG __x => &D.61812
  _156 = MEM[(struct queue * *)this_30(D) + 384B];
  # DEBUG D#157 => _204
  _888 = MEM[(struct queue * *)this_30(D) + 392B];
  # DEBUG D#157 => _204
  # DEBUG this => D#157
  # DEBUG this => D#157
  _889 = (long int) _888;
  _890 = (long int) _156;
  _891 = _889 - _890;
  _892 = _891 /[ex] 80;
  _893 = (size_type) _892;
  if (_203 > _893)
    goto <bb 205>;
  else
    goto <bb 207>;

  <bb 205>:
  # DEBUG D#157 => _204
  # DEBUG D#157 => _204
  # DEBUG this => D#157
  # DEBUG this => D#157
  _894 = _203 - _893;
  # DEBUG this => _204
  # DEBUG D#223 => &_204->D.51519._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#223
  # DEBUG this => _204
  MEM[(struct __normal_iterator *)&__position] = _888;
  # DEBUG __n => _894
  # DEBUG __x => &D.61812
  std::vector<std::queue<Flit*> >::_M_fill_insert (_204, __position, _894, &D.61812);

  <bb 206>:
  goto <bb 213>;

  <bb 207>:
  # DEBUG D#157 => _204
  # DEBUG D#157 => _204
  # DEBUG this => D#157
  # DEBUG this => D#157
  if (_203 < _893)
    goto <bb 208>;
  else
    goto <bb 206>;

  <bb 208>:
  _895 = _203 * 80;
  __pos_896 = _156 + _895;
  # DEBUG D#1187 => _204
  # DEBUG __pos => __pos_896
  # DEBUG D#1186 => D#1187
  # DEBUG this => D#1186
  # DEBUG D#1185 => &D#1186->D.51519
  # DEBUG this => D#1185
  # DEBUG __first => __pos_896
  # DEBUG __last => _888
  # DEBUG __first => __pos_896
  if (_888 == __pos_896)
    goto <bb 209>;
  else
    goto <bb 210>;

  <bb 209>:
  MEM[(struct queue * *)this_30(D) + 392B] = __pos_896;
  goto <bb 213>;

  <bb 210>:

  <bb 211>:
  # __pos_1210 = PHI <__pos_896(210), __pos_899(212)>
  # DEBUG __first => __pos_1210
  # DEBUG __r => __pos_1210
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _898 = &MEM[(struct deque *)__pos_1210].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_898);
  MEM[(struct  &)__pos_1210] ={v} {CLOBBER};
  __pos_899 = __pos_1210 + 80;
  # DEBUG __first => __pos_899
  # DEBUG __first => __pos_899
  if (_888 == __pos_899)
    goto <bb 209>;
  else
    goto <bb 212>;

  <bb 212>:
  goto <bb 211>;

  <bb 213>:
  # DEBUG this => &D.61812
  # DEBUG D#1183 => &D.61812.c
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.61812].D.44077);
  D.61812 ={v} {CLOBBER};
  # DEBUG this => &D.61813
  # DEBUG D#1174 => &D.61813.D.44077
  # DEBUG this => D#1174
  # DEBUG this => &D.61813
  # DEBUG D#151 => &D.61813.D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)&D.61813 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)&D.61813 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)&D.61813 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)&D.61813 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => &D.61813
  # DEBUG D#152 => &D.61813.D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)&D.61813 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)&D.61813 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)&D.61813 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)&D.61813 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => &D.61813
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.61813.D.44077);
  D.61813 ={v} {CLOBBER};
  # DEBUG this => &D.61815
  # DEBUG this => &D.61815.D.44077
  # DEBUG D#1579 => &MEM[(struct _Deque_base *)&D.61815]._M_impl
  # DEBUG this => D#1579
  # DEBUG this => D#1579
  # DEBUG this => D#1579
  MEM[(struct _Deque_impl *)&D.61815]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.61815]._M_map_size = 0;
  # DEBUG D#786 => &D#1579->_M_start
  # DEBUG this => D#786
  MEM[(struct _Deque_iterator *)&D.61815 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61815 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61815 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61815 + 16B]._M_node = 0B;
  # DEBUG D#785 => &D#1579->_M_finish
  # DEBUG this => D#785
  MEM[(struct _Deque_iterator *)&D.61815 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61815 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61815 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61815 + 48B]._M_node = 0B;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::_M_initialize_map (&D.61815.D.44077, 0);
  goto <bb 215>;

<L134>:
  pretmp_793 = &this_30(D)->_output_buffer;
  pretmp_1052 = &this_30(D)->_in_cred_buffer;
  pretmp_771 = &this_30(D)->_out_cred_buffer;
  pretmp_1169 = &this_30(D)->_arrival_queue;
  pretmp_1315 = &this_30(D)->_transport_queue;
  pretmp_1363 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 215>:
  # DEBUG this => &D.61814
  # DEBUG __c => &D.61815
  std::deque<Flit*, std::allocator<Flit*> >::deque (&D.61814.c, &D.61815);

  <bb 216>:
  _208 = this_30(D)->D.54631._outputs;
  _209 = (long unsigned int) _208;
  _210 = &this_30(D)->_output_buffer;
  # DEBUG this => _210
  # DEBUG __new_size => _209
  # DEBUG __x => &D.61814
  _205 = MEM[(struct queue * *)this_30(D) + 408B];
  # DEBUG D#157 => _210
  _900 = MEM[(struct queue * *)this_30(D) + 416B];
  # DEBUG D#157 => _210
  # DEBUG this => D#157
  # DEBUG this => D#157
  _901 = (long int) _900;
  _902 = (long int) _205;
  _903 = _901 - _902;
  _904 = _903 /[ex] 80;
  _905 = (size_type) _904;
  if (_209 > _905)
    goto <bb 217>;
  else
    goto <bb 219>;

  <bb 217>:
  # DEBUG D#157 => _210
  # DEBUG D#157 => _210
  # DEBUG this => D#157
  # DEBUG this => D#157
  _906 = _209 - _905;
  # DEBUG this => _210
  # DEBUG D#223 => &_210->D.51519._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#223
  # DEBUG this => _210
  MEM[(struct __normal_iterator *)&__position] = _900;
  # DEBUG __n => _906
  # DEBUG __x => &D.61814
  std::vector<std::queue<Flit*> >::_M_fill_insert (_210, __position, _906, &D.61814);

  <bb 218>:
  goto <bb 225>;

  <bb 219>:
  # DEBUG D#157 => _210
  # DEBUG D#157 => _210
  # DEBUG this => D#157
  # DEBUG this => D#157
  if (_209 < _905)
    goto <bb 220>;
  else
    goto <bb 218>;

  <bb 220>:
  _907 = _209 * 80;
  __pos_908 = _205 + _907;
  # DEBUG D#1187 => _210
  # DEBUG __pos => __pos_908
  # DEBUG D#1186 => D#1187
  # DEBUG this => D#1186
  # DEBUG D#1185 => &D#1186->D.51519
  # DEBUG this => D#1185
  # DEBUG __first => __pos_908
  # DEBUG __last => _900
  # DEBUG __first => __pos_908
  if (_900 == __pos_908)
    goto <bb 221>;
  else
    goto <bb 222>;

  <bb 221>:
  MEM[(struct queue * *)this_30(D) + 416B] = __pos_908;
  goto <bb 225>;

  <bb 222>:

  <bb 223>:
  # __pos_1296 = PHI <__pos_908(222), __pos_911(224)>
  # DEBUG __first => __pos_1296
  # DEBUG __r => __pos_1296
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  _910 = &MEM[(struct deque *)__pos_1296].D.44077;
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (_910);
  MEM[(struct  &)__pos_1296] ={v} {CLOBBER};
  __pos_911 = __pos_1296 + 80;
  # DEBUG __first => __pos_911
  # DEBUG __first => __pos_911
  if (_900 == __pos_911)
    goto <bb 221>;
  else
    goto <bb 224>;

  <bb 224>:
  goto <bb 223>;

  <bb 225>:
  # DEBUG this => &D.61814
  # DEBUG D#1183 => &D.61814.c
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.61814].D.44077);
  D.61814 ={v} {CLOBBER};
  # DEBUG this => &D.61815
  # DEBUG D#1174 => &D.61815.D.44077
  # DEBUG this => D#1174
  # DEBUG this => &D.61815
  # DEBUG D#151 => &D.61815.D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)&D.61815 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)&D.61815 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)&D.61815 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)&D.61815 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => &D.61815
  # DEBUG D#152 => &D.61815.D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)&D.61815 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)&D.61815 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)&D.61815 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)&D.61815 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => &D.61815
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.61815.D.44077);
  D.61815 ={v} {CLOBBER};
  # DEBUG this => &D.61817
  # DEBUG this => &D.61817.D.59602
  # DEBUG D#1610 => &MEM[(struct _Deque_base *)&D.61817]._M_impl
  # DEBUG this => D#1610
  # DEBUG this => D#1610
  # DEBUG this => D#1610
  MEM[(struct _Deque_impl *)&D.61817]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.61817]._M_map_size = 0;
  # DEBUG D#798 => &D#1610->_M_start
  # DEBUG this => D#798
  MEM[(struct _Deque_iterator *)&D.61817 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61817 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61817 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61817 + 16B]._M_node = 0B;
  # DEBUG D#797 => &D#1610->_M_finish
  # DEBUG this => D#797
  MEM[(struct _Deque_iterator *)&D.61817 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61817 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61817 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61817 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (&D.61817.D.59602, 0);
  goto <bb 227>;

<L136>:
  pretmp_293 = &this_30(D)->_in_cred_buffer;
  pretmp_1189 = &this_30(D)->_out_cred_buffer;
  pretmp_1168 = &this_30(D)->_arrival_queue;
  pretmp_1317 = &this_30(D)->_transport_queue;
  pretmp_1365 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 227>:
  # DEBUG this => &D.61816
  # DEBUG __c => &D.61817
  std::deque<Credit*, std::allocator<Credit*> >::deque (&D.61816.c, &D.61817);

  <bb 228>:
  _214 = this_30(D)->D.54631._inputs;
  _215 = (long unsigned int) _214;
  _216 = &this_30(D)->_in_cred_buffer;
  # DEBUG this => _216
  # DEBUG __new_size => _215
  # DEBUG __x => &D.61816
  _211 = MEM[(struct queue * *)this_30(D) + 432B];
  # DEBUG D#164 => _216
  _912 = MEM[(struct queue * *)this_30(D) + 440B];
  # DEBUG D#164 => _216
  # DEBUG this => D#164
  # DEBUG this => D#164
  _913 = (long int) _912;
  _914 = (long int) _211;
  _915 = _913 - _914;
  _916 = _915 /[ex] 80;
  _917 = (size_type) _916;
  if (_215 > _917)
    goto <bb 229>;
  else
    goto <bb 231>;

  <bb 229>:
  # DEBUG D#164 => _216
  # DEBUG D#164 => _216
  # DEBUG this => D#164
  # DEBUG this => D#164
  _918 = _215 - _917;
  # DEBUG this => _216
  # DEBUG D#226 => &_216->D.52268._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#226
  # DEBUG this => _216
  MEM[(struct __normal_iterator *)&__position] = _912;
  # DEBUG __n => _918
  # DEBUG __x => &D.61816
  std::vector<std::queue<Credit*> >::_M_fill_insert (_216, __position, _918, &D.61816);

  <bb 230>:
  goto <bb 237>;

  <bb 231>:
  # DEBUG D#164 => _216
  # DEBUG D#164 => _216
  # DEBUG this => D#164
  # DEBUG this => D#164
  if (_215 < _917)
    goto <bb 232>;
  else
    goto <bb 230>;

  <bb 232>:
  _919 = _215 * 80;
  __pos_920 = _211 + _919;
  # DEBUG D#1211 => _216
  # DEBUG __pos => __pos_920
  # DEBUG D#1210 => D#1211
  # DEBUG this => D#1210
  # DEBUG D#1209 => &D#1210->D.52268
  # DEBUG this => D#1209
  # DEBUG __first => __pos_920
  # DEBUG __last => _912
  # DEBUG __first => __pos_920
  if (_912 == __pos_920)
    goto <bb 233>;
  else
    goto <bb 234>;

  <bb 233>:
  MEM[(struct queue * *)this_30(D) + 440B] = __pos_920;
  goto <bb 237>;

  <bb 234>:

  <bb 235>:
  # __pos_1212 = PHI <__pos_920(234), __pos_923(236)>
  # DEBUG __first => __pos_1212
  # DEBUG __r => __pos_1212
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _922 = &MEM[(struct deque *)__pos_1212].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_922);
  MEM[(struct  &)__pos_1212] ={v} {CLOBBER};
  __pos_923 = __pos_1212 + 80;
  # DEBUG __first => __pos_923
  # DEBUG __first => __pos_923
  if (_912 == __pos_923)
    goto <bb 233>;
  else
    goto <bb 236>;

  <bb 236>:
  goto <bb 235>;

  <bb 237>:
  # DEBUG this => &D.61816
  # DEBUG D#1207 => &D.61816.c
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&D.61816].D.59602);
  D.61816 ={v} {CLOBBER};
  # DEBUG this => &D.61817
  # DEBUG D#1198 => &D.61817.D.59602
  # DEBUG this => D#1198
  # DEBUG this => &D.61817
  # DEBUG D#158 => &D.61817.D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)&D.61817 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)&D.61817 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)&D.61817 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)&D.61817 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => &D.61817
  # DEBUG D#159 => &D.61817.D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)&D.61817 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)&D.61817 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)&D.61817 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)&D.61817 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => &D.61817
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&D.61817.D.59602);
  D.61817 ={v} {CLOBBER};
  # DEBUG this => &D.61819
  # DEBUG this => &D.61819.D.59602
  # DEBUG D#1610 => &MEM[(struct _Deque_base *)&D.61819]._M_impl
  # DEBUG this => D#1610
  # DEBUG this => D#1610
  # DEBUG this => D#1610
  MEM[(struct _Deque_impl *)&D.61819]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.61819]._M_map_size = 0;
  # DEBUG D#798 => &D#1610->_M_start
  # DEBUG this => D#798
  MEM[(struct _Deque_iterator *)&D.61819 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61819 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61819 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61819 + 16B]._M_node = 0B;
  # DEBUG D#797 => &D#1610->_M_finish
  # DEBUG this => D#797
  MEM[(struct _Deque_iterator *)&D.61819 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61819 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61819 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61819 + 48B]._M_node = 0B;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::_M_initialize_map (&D.61819.D.59602, 0);
  goto <bb 239>;

<L138>:
  pretmp_1191 = &this_30(D)->_out_cred_buffer;
  pretmp_1263 = &this_30(D)->_arrival_queue;
  pretmp_1319 = &this_30(D)->_transport_queue;
  pretmp_1367 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 239>:
  # DEBUG this => &D.61818
  # DEBUG __c => &D.61819
  std::deque<Credit*, std::allocator<Credit*> >::deque (&D.61818.c, &D.61819);

  <bb 240>:
  _220 = this_30(D)->D.54631._outputs;
  _221 = (long unsigned int) _220;
  _222 = &this_30(D)->_out_cred_buffer;
  # DEBUG this => _222
  # DEBUG __new_size => _221
  # DEBUG __x => &D.61818
  _217 = MEM[(struct queue * *)this_30(D) + 456B];
  # DEBUG D#164 => _222
  _924 = MEM[(struct queue * *)this_30(D) + 464B];
  # DEBUG D#164 => _222
  # DEBUG this => D#164
  # DEBUG this => D#164
  _925 = (long int) _924;
  _926 = (long int) _217;
  _927 = _925 - _926;
  _928 = _927 /[ex] 80;
  _929 = (size_type) _928;
  if (_221 > _929)
    goto <bb 241>;
  else
    goto <bb 243>;

  <bb 241>:
  # DEBUG D#164 => _222
  # DEBUG D#164 => _222
  # DEBUG this => D#164
  # DEBUG this => D#164
  _930 = _221 - _929;
  # DEBUG this => _222
  # DEBUG D#226 => &_222->D.52268._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#226
  # DEBUG this => _222
  MEM[(struct __normal_iterator *)&__position] = _924;
  # DEBUG __n => _930
  # DEBUG __x => &D.61818
  std::vector<std::queue<Credit*> >::_M_fill_insert (_222, __position, _930, &D.61818);

  <bb 242>:
  goto <bb 249>;

  <bb 243>:
  # DEBUG D#164 => _222
  # DEBUG D#164 => _222
  # DEBUG this => D#164
  # DEBUG this => D#164
  if (_221 < _929)
    goto <bb 244>;
  else
    goto <bb 242>;

  <bb 244>:
  _931 = _221 * 80;
  __pos_932 = _217 + _931;
  # DEBUG D#1211 => _222
  # DEBUG __pos => __pos_932
  # DEBUG D#1210 => D#1211
  # DEBUG this => D#1210
  # DEBUG D#1209 => &D#1210->D.52268
  # DEBUG this => D#1209
  # DEBUG __first => __pos_932
  # DEBUG __last => _924
  # DEBUG __first => __pos_932
  if (_924 == __pos_932)
    goto <bb 245>;
  else
    goto <bb 246>;

  <bb 245>:
  MEM[(struct queue * *)this_30(D) + 464B] = __pos_932;
  goto <bb 249>;

  <bb 246>:

  <bb 247>:
  # __pos_1295 = PHI <__pos_932(246), __pos_935(248)>
  # DEBUG __first => __pos_1295
  # DEBUG __r => __pos_1295
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  _934 = &MEM[(struct deque *)__pos_1295].D.59602;
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (_934);
  MEM[(struct  &)__pos_1295] ={v} {CLOBBER};
  __pos_935 = __pos_1295 + 80;
  # DEBUG __first => __pos_935
  # DEBUG __first => __pos_935
  if (_924 == __pos_935)
    goto <bb 245>;
  else
    goto <bb 248>;

  <bb 248>:
  goto <bb 247>;

  <bb 249>:
  # DEBUG this => &D.61818
  # DEBUG D#1207 => &D.61818.c
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&D.61818].D.59602);
  D.61818 ={v} {CLOBBER};
  # DEBUG this => &D.61819
  # DEBUG D#1198 => &D.61819.D.59602
  # DEBUG this => D#1198
  # DEBUG this => &D.61819
  # DEBUG D#158 => &D.61819.D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)&D.61819 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)&D.61819 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)&D.61819 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)&D.61819 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => &D.61819
  # DEBUG D#159 => &D.61819.D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)&D.61819 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)&D.61819 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)&D.61819 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)&D.61819 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => &D.61819
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&D.61819.D.59602);
  D.61819 ={v} {CLOBBER};
  # DEBUG this => &D.61821
  # DEBUG this => &D.61821.D.60628
  # DEBUG D#1662 => &MEM[(struct _Deque_base *)&D.61821]._M_impl
  # DEBUG this => D#1662
  # DEBUG this => D#1662
  # DEBUG this => D#1662
  MEM[(struct _Deque_impl *)&D.61821]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.61821]._M_map_size = 0;
  # DEBUG D#810 => &D#1662->_M_start
  # DEBUG this => D#810
  MEM[(struct _Deque_iterator *)&D.61821 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61821 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61821 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61821 + 16B]._M_node = 0B;
  # DEBUG D#809 => &D#1662->_M_finish
  # DEBUG this => D#809
  MEM[(struct _Deque_iterator *)&D.61821 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61821 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61821 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61821 + 48B]._M_node = 0B;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::_M_initialize_map (&D.61821.D.60628, 0);
  goto <bb 251>;

<L140>:
  pretmp_1236 = &this_30(D)->_arrival_queue;
  pretmp_1321 = &this_30(D)->_transport_queue;
  pretmp_1369 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 251>:
  # DEBUG this => &D.61820
  # DEBUG __c => &D.61821
  std::deque<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::deque (&D.61820.c, &D.61821);

  <bb 252>:
  _226 = this_30(D)->D.54631._inputs;
  _227 = (long unsigned int) _226;
  _228 = &this_30(D)->_arrival_queue;
  # DEBUG this => _228
  # DEBUG __new_size => _227
  # DEBUG __x => &D.61820
  _223 = MEM[(struct queue * *)this_30(D) + 488B];
  # DEBUG D#171 => _228
  _936 = MEM[(struct queue * *)this_30(D) + 496B];
  # DEBUG D#171 => _228
  # DEBUG this => D#171
  # DEBUG this => D#171
  _937 = (long int) _936;
  _938 = (long int) _223;
  _939 = _937 - _938;
  _940 = _939 /[ex] 80;
  _941 = (size_type) _940;
  if (_227 > _941)
    goto <bb 253>;
  else
    goto <bb 255>;

  <bb 253>:
  # DEBUG D#171 => _228
  # DEBUG D#171 => _228
  # DEBUG this => D#171
  # DEBUG this => D#171
  _942 = _227 - _941;
  # DEBUG this => _228
  # DEBUG D#229 => &_228->D.53031._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#229
  # DEBUG this => _228
  MEM[(struct __normal_iterator *)&__position] = _936;
  # DEBUG __n => _942
  # DEBUG __x => &D.61820
  std::vector<std::queue<EventRouter::tArrivalEvent*> >::_M_fill_insert (_228, __position, _942, &D.61820);

  <bb 254>:
  goto <bb 261>;

  <bb 255>:
  # DEBUG D#171 => _228
  # DEBUG D#171 => _228
  # DEBUG this => D#171
  # DEBUG this => D#171
  if (_227 < _941)
    goto <bb 256>;
  else
    goto <bb 254>;

  <bb 256>:
  _943 = _227 * 80;
  __pos_944 = _223 + _943;
  # DEBUG D#1235 => _228
  # DEBUG __pos => __pos_944
  # DEBUG D#1234 => D#1235
  # DEBUG this => D#1234
  # DEBUG D#1233 => &D#1234->D.53031
  # DEBUG this => D#1233
  # DEBUG __first => __pos_944
  # DEBUG __last => _936
  # DEBUG __first => __pos_944
  if (_936 == __pos_944)
    goto <bb 257>;
  else
    goto <bb 258>;

  <bb 257>:
  MEM[(struct queue * *)this_30(D) + 496B] = __pos_944;
  goto <bb 261>;

  <bb 258>:

  <bb 259>:
  # __pos_1211 = PHI <__pos_944(258), __pos_947(260)>
  # DEBUG __first => __pos_1211
  # DEBUG __r => __pos_1211
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  _946 = &MEM[(struct deque *)__pos_1211].D.60628;
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (_946);
  MEM[(struct  &)__pos_1211] ={v} {CLOBBER};
  __pos_947 = __pos_1211 + 80;
  # DEBUG __first => __pos_947
  # DEBUG __first => __pos_947
  if (_936 == __pos_947)
    goto <bb 257>;
  else
    goto <bb 260>;

  <bb 260>:
  goto <bb 259>;

  <bb 261>:
  # DEBUG this => &D.61820
  # DEBUG D#1231 => &D.61820.c
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (&MEM[(struct deque *)&D.61820].D.60628);
  D.61820 ={v} {CLOBBER};
  # DEBUG this => &D.61821
  # DEBUG D#1222 => &D.61821.D.60628
  # DEBUG this => D#1222
  # DEBUG this => &D.61821
  # DEBUG D#165 => &D.61821.D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)&D.61821 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)&D.61821 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)&D.61821 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)&D.61821 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => &D.61821
  # DEBUG D#166 => &D.61821.D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)&D.61821 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)&D.61821 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)&D.61821 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)&D.61821 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => &D.61821
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (&D.61821.D.60628);
  D.61821 ={v} {CLOBBER};
  # DEBUG this => &D.61823
  # DEBUG this => &D.61823.D.61649
  # DEBUG D#1636 => &MEM[(struct _Deque_base *)&D.61823]._M_impl
  # DEBUG this => D#1636
  # DEBUG this => D#1636
  # DEBUG this => D#1636
  MEM[(struct _Deque_impl *)&D.61823]._M_map = 0B;
  MEM[(struct _Deque_impl *)&D.61823]._M_map_size = 0;
  # DEBUG D#820 => &D#1636->_M_start
  # DEBUG this => D#820
  MEM[(struct _Deque_iterator *)&D.61823 + 16B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61823 + 16B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61823 + 16B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61823 + 16B]._M_node = 0B;
  # DEBUG D#819 => &D#1636->_M_finish
  # DEBUG this => D#819
  MEM[(struct _Deque_iterator *)&D.61823 + 48B]._M_cur = 0B;
  MEM[(struct _Deque_iterator *)&D.61823 + 48B]._M_first = 0B;
  MEM[(struct _Deque_iterator *)&D.61823 + 48B]._M_last = 0B;
  MEM[(struct _Deque_iterator *)&D.61823 + 48B]._M_node = 0B;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::_M_initialize_map (&D.61823.D.61649, 0);
  goto <bb 263>;

<L142>:
  pretmp_1323 = &this_30(D)->_transport_queue;
  pretmp_1371 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  <bb 263>:
  # DEBUG this => &D.61822
  # DEBUG __c => &D.61823
  std::deque<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::deque (&D.61822.c, &D.61823);

  <bb 264>:
  _232 = this_30(D)->D.54631._outputs;
  _233 = (long unsigned int) _232;
  _234 = &this_30(D)->_transport_queue;
  # DEBUG this => _234
  # DEBUG __new_size => _233
  # DEBUG __x => &D.61822
  _229 = MEM[(struct queue * *)this_30(D) + 536B];
  # DEBUG D#178 => _234
  _948 = MEM[(struct queue * *)this_30(D) + 544B];
  # DEBUG D#178 => _234
  # DEBUG this => D#178
  # DEBUG this => D#178
  _949 = (long int) _948;
  _950 = (long int) _229;
  _951 = _949 - _950;
  _952 = _951 /[ex] 80;
  _953 = (size_type) _952;
  if (_233 > _953)
    goto <bb 265>;
  else
    goto <bb 267>;

  <bb 265>:
  # DEBUG D#178 => _234
  # DEBUG D#178 => _234
  # DEBUG this => D#178
  # DEBUG this => D#178
  _954 = _233 - _953;
  # DEBUG this => _234
  # DEBUG D#232 => &_234->D.54535._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#232
  # DEBUG this => _234
  MEM[(struct __normal_iterator *)&__position] = _948;
  # DEBUG __n => _954
  # DEBUG __x => &D.61822
  std::vector<std::queue<EventRouter::tTransportEvent*> >::_M_fill_insert (_234, __position, _954, &D.61822);

  <bb 266>:
  goto <bb 273>;

  <bb 267>:
  # DEBUG D#178 => _234
  # DEBUG D#178 => _234
  # DEBUG this => D#178
  # DEBUG this => D#178
  if (_233 < _953)
    goto <bb 268>;
  else
    goto <bb 266>;

  <bb 268>:
  _955 = _233 * 80;
  __pos_956 = _229 + _955;
  # DEBUG D#1272 => _234
  # DEBUG __pos => __pos_956
  # DEBUG D#1271 => D#1272
  # DEBUG this => D#1271
  # DEBUG D#1270 => &D#1271->D.54535
  # DEBUG this => D#1270
  # DEBUG __first => __pos_956
  # DEBUG __last => _948
  # DEBUG __first => __pos_956
  if (_948 == __pos_956)
    goto <bb 269>;
  else
    goto <bb 270>;

  <bb 269>:
  MEM[(struct queue * *)this_30(D) + 544B] = __pos_956;
  goto <bb 273>;

  <bb 270>:

  <bb 271>:
  # __pos_1003 = PHI <__pos_956(270), __pos_959(272)>
  # DEBUG __first => __pos_1003
  # DEBUG __r => __pos_1003
  # DEBUG __pointer => NULL
  # DEBUG this => NULL
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  _958 = &MEM[(struct deque *)__pos_1003].D.61649;
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (_958);
  MEM[(struct  &)__pos_1003] ={v} {CLOBBER};
  __pos_959 = __pos_1003 + 80;
  # DEBUG __first => __pos_959
  # DEBUG __first => __pos_959
  if (_948 == __pos_959)
    goto <bb 269>;
  else
    goto <bb 272>;

  <bb 272>:
  goto <bb 271>;

  <bb 273>:
  # DEBUG this => &D.61822
  # DEBUG D#1268 => &D.61822.c
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (&MEM[(struct deque *)&D.61822].D.61649);
  D.61822 ={v} {CLOBBER};
  # DEBUG this => &D.61823
  # DEBUG D#1259 => &D.61823.D.61649
  # DEBUG this => D#1259
  # DEBUG this => &D.61823
  # DEBUG D#172 => &D.61823.D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)&D.61823 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)&D.61823 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)&D.61823 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)&D.61823 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => &D.61823
  # DEBUG D#173 => &D.61823.D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)&D.61823 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)&D.61823 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)&D.61823 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)&D.61823 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => &D.61823
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (&D.61823.D.61649);
  D.61823 ={v} {CLOBBER};
  _239 = this_30(D)->D.54631._inputs;
  _240 = (long unsigned int) _239;
  _241 = &this_30(D)->_transport_free;
  # DEBUG this => _241
  # DEBUG __new_size => _240
  # DEBUG __x => 1
  # DEBUG this => _241
  # DEBUG this => _241
  # DEBUG D#142 => &MEM[(const struct vector *)_241].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  _235 = MEM[(const struct _Bit_iterator *)this_30(D) + 584B].D.26904._M_offset;
  _960 = MEM[(const struct _Bit_iterator *)this_30(D) + 584B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _960
  # DEBUG __y => _235
  # DEBUG this => D#28
  # DEBUG this => _241
  # DEBUG D#143 => &MEM[(const struct vector *)_241].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  _961 = MEM[(const struct _Bit_iterator *)this_30(D) + 600B].D.26904._M_offset;
  _962 = MEM[(const struct _Bit_iterator *)this_30(D) + 600B].D.26904._M_p;
  # DEBUG this => D#28
  # DEBUG __x => _962
  # DEBUG __y => _961
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _963 = (long int) _962;
  _964 = (long int) _960;
  _965 = _963 - _964;
  _966 = _965 * 8;
  _967 = (long int) _961;
  _968 = _966 + _967;
  _969 = (long int) _235;
  _970 = _968 - _969;
  _971 = (size_type) _970;
  if (_240 < _971)
    goto <bb 274>;
  else
    goto <bb 277>;

  <bb 274>:
  __new_size.421_972 = (long int) _239;
  # DEBUG this => _241
  # DEBUG this => NULL
  # DEBUG __i => __new_size.421_972
  # DEBUG __tmp$_M_p => _960
  # DEBUG __tmp$_M_offset => _235
  # DEBUG this => &__tmp
  # DEBUG __i => __new_size.421_972
  # DEBUG D#24 => &__tmp.D.26904
  # DEBUG this => D#24
  # DEBUG __i => __new_size.421_972
  __n_973 = _969 + __new_size.421_972;
  # DEBUG __n => __n_973
  _974 = __n_973 / 64;
  _975 = (long unsigned int) _974;
  _976 = _975 * 8;
  __tmp$_M_p_977 = _960 + _976;
  # DEBUG __tmp$_M_p => __tmp$_M_p_977
  __n_978 = __n_973 % 64;
  # DEBUG __n => __n_978
  if (__n_978 < 0)
    goto <bb 275>;
  else
    goto <bb 276>;

  <bb 275>:
  __n_979 = __n_978 + 64;
  # DEBUG __n => __n_979
  __tmp$_M_p_980 = __tmp$_M_p_977 + 18446744073709551608;
  # DEBUG __tmp$_M_p => __tmp$_M_p_980

  <bb 276>:
  # __n_981 = PHI <__n_978(274), __n_979(275)>
  # __tmp$_M_p_983 = PHI <__tmp$_M_p_977(274), __tmp$_M_p_980(275)>
  # DEBUG __tmp$_M_p => __tmp$_M_p_983
  # DEBUG __n => __n_981
  _982 = (unsigned int) __n_981;
  # DEBUG __tmp$_M_offset => _982
  # DEBUG D#25 => {CLOBBER}
  # DEBUG __tmp$_M_p => D#25
  # DEBUG D#26 => {CLOBBER}
  # DEBUG __tmp$_M_offset => D#26
  # DEBUG this => _241
  MEM[(struct _Bit_iterator *)this_30(D) + 600B] = __tmp$_M_p_983;
  MEM[(struct _Bit_iterator *)this_30(D) + 608B] = _982;
  goto <bb 280>;

  <bb 277>:
  # DEBUG this => _241
  # DEBUG this => _241
  # DEBUG D#142 => &MEM[(const struct vector *)_241].D.43009._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#142
  # DEBUG this => D#28
  # DEBUG __x => _960
  # DEBUG __y => _235
  # DEBUG this => D#28
  # DEBUG this => _241
  # DEBUG D#143 => &MEM[(const struct vector *)_241].D.43009._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#143
  # DEBUG this => D#28
  # DEBUG __x => _962
  # DEBUG __y => _961
  # DEBUG this => D#28
  # DEBUG __x => D#17
  # DEBUG __x => D#17
  # DEBUG __y => D#18
  # DEBUG __y => D#18
  _984 = _240 - _971;
  # DEBUG this => _241
  # DEBUG D#1402 => &__x
  # DEBUG this => _241
  MEM[(struct _Bit_iterator *)&__position] = _962;
  MEM[(struct _Bit_iterator *)&__position + 8B] = _961;
  # DEBUG __n => _984
  # DEBUG __x => D#1402
  std::vector<bool>::_M_fill_insert (_241, __position, _984, 1);
  goto <bb 279>;

<L144>:
  goto <bb 412> (<L62>);

  <bb 279>:
  pretmp_1431 = this_30(D)->D.54631._inputs;
  pretmp_1433 = (long unsigned int) pretmp_1431;

  <bb 280>:
  # prephitmp_1434 = PHI <pretmp_1433(279), _240(276)>
  # DEBUG D#3756 => this_30(D)->D.54631._inputs
  # DEBUG D#3762 => &this_30(D)->_transport_match
  # DEBUG this => D#3762
  # DEBUG __new_size => (long unsigned int) D#3756
  __x = -1;
  # DEBUG __x => __x
  _242 = MEM[(int * *)this_30(D) + 624B];
  # DEBUG D#138 => D#3762
  _986 = MEM[(int * *)this_30(D) + 632B];
  # DEBUG D#138 => D#3762
  # DEBUG this => D#138
  # DEBUG this => D#138
  _987 = (long int) _986;
  _988 = (long int) _242;
  _989 = _987 - _988;
  _990 = _989 /[ex] 4;
  _991 = (size_type) _990;
  if (_991 < prephitmp_1434)
    goto <bb 281>;
  else
    goto <bb 284>;

  <bb 281>:
  # DEBUG D#138 => D#3762
  # DEBUG D#138 => D#3762
  # DEBUG this => D#138
  # DEBUG this => D#138
  _992 = prephitmp_1434 - _991;
  # DEBUG this => D#3762
  # DEBUG D#233 => &D#3762->D.35782._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#233
  # DEBUG this => D#3762
  MEM[(struct __normal_iterator *)&__position] = _986;
  # DEBUG __n => _992
  # DEBUG __x => &__x
  _245 = &this_30(D)->_transport_match;
  std::vector<int>::_M_fill_insert (_245, __position, _992, &__x);
  goto <bb 283>;

<L145>:
  goto <bb 412> (<L62>);

  <bb 283>:
  goto <bb 286>;

  <bb 284>:
  # DEBUG D#138 => D#3762
  # DEBUG D#138 => D#3762
  # DEBUG this => D#138
  # DEBUG this => D#138
  if (_991 > prephitmp_1434)
    goto <bb 285>;
  else
    goto <bb 283>;

  <bb 285>:
  _993 = prephitmp_1434 * 4;
  _994 = _242 + _993;
  # DEBUG D#301 => D#3762
  # DEBUG __pos => _994
  # DEBUG D#300 => D#301
  # DEBUG this => D#300
  # DEBUG D#298 => &D#300->D.35782
  # DEBUG this => D#298
  # DEBUG D#299 => D#300->D.35782._M_impl._M_finish
  # DEBUG __first => _994
  # DEBUG __last => D#299
  # DEBUG D.100813 => NULL
  # DEBUG D#296 => _994
  # DEBUG D#297 => D#299
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  MEM[(int * *)this_30(D) + 632B] = _994;

  <bb 286>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _236 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _236)
    goto <bb 287>;
  else
    goto <bb 288>;

  <bb 287>:
  # DEBUG D#467 => rf.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &rf
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#464 => &rf._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _236
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _236
  # DEBUG this => D#458
  # DEBUG D.132215 => D#459
  operator delete (_236);

  <bb 288>:
  # DEBUG D#468 => &rf._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)&rf] ={v} {CLOBBER};
  # DEBUG this => &module_name
  module_name.D.23228._vptr.basic_ostream = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 24B];
  MEM[(struct basic_ios *)&module_name + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 64B];
  # DEBUG this => &module_name._M_stringbuf
  MEM[(struct basic_stringbuf *)&module_name + 8B].D.23078._vptr.basic_streambuf = &MEM[(void *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE + 16B];
  # DEBUG D#470 => &MEM[(struct basic_stringbuf *)&module_name + 8B]._M_string
  # DEBUG this => D#470
  # DEBUG this => D#470
  # DEBUG this => D#470
  _248 = MEM[(char * *)&module_name + 80B];
  # DEBUG D#1 => D#470
  # DEBUG this => D#1
  # DEBUG this => D#470
  if (&MEM[(const struct basic_string *)&module_name + 80B].D.11539._M_local_buf != _248)
    goto <bb 289>;
  else
    goto <bb 290>;

  <bb 289>:
  # DEBUG D#467 => MEM[(struct basic_string *)D#470].D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => D#470
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => D#470
  # DEBUG this => D#1
  # DEBUG this => D#470
  # DEBUG D#464 => &MEM[(struct basic_string *)D#470]._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _248
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _248
  # DEBUG this => D#458
  # DEBUG D.146770 => D#459
  operator delete (_248);

  <bb 290>:
  # DEBUG D#468 => &MEM[(struct basic_string *)D#470]._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)&module_name + 80] ={v} {CLOBBER};
  # DEBUG D#469 => &MEM[(struct basic_stringbuf *)&module_name + 8B].D.23078
  # DEBUG this => D#469
  MEM[(struct basic_streambuf *)&module_name + 8B]._vptr.basic_streambuf = &MEM[(void *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEE + 16B];
  std::locale::~locale (&MEM[(struct basic_streambuf *)&module_name + 8B]._M_buf_locale);
  MEM[(struct  &)&module_name + 8] ={v} {CLOBBER};
  # DEBUG this => &module_name.D.23228
  # DEBUG __vtt_parm => &MEM[(void *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]
  iftmp.13_996 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B];
  _997 = MEM[(long int *)iftmp.13_996 + -24B];
  iftmp.14_998 = (sizetype) _997;
  _999 = &module_name.D.23228 + iftmp.14_998;
  iftmp.15_1000 = MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B];
  _999->D.19921._vptr.ios_base = iftmp.15_1000;
  MEM[(struct  &)&module_name] ={v} {CLOBBER};
  # DEBUG D#474 => &module_name.D.23231
  # DEBUG this => D#474
  MEM[(struct basic_ios *)&module_name + 112B].D.19921._vptr.ios_base = &MEM[(void *)&_ZTVSt9basic_iosIcSt11char_traitsIcEE + 16B];
  std::ios_base::~ios_base (&MEM[(struct basic_ios *)&module_name + 112B].D.19921);
  goto <bb 292>;

<L146>:
  goto <bb 420> (<L64>);

  <bb 292>:
  module_name ={v} {CLOBBER};
  rf ={v} {CLOBBER};
  # DEBUG D#2775 => {CLOBBER}
  # DEBUG rf_iter$_M_node => D#2775
  return;

<L15>:
  # DEBUG this => &D.61765
  # DEBUG this => &D.61765
  # DEBUG this => &D.61765
  _247 = MEM[(char * *)&D.61765];
  # DEBUG D#1 => &D.61765
  # DEBUG this => D#1
  # DEBUG this => &D.61765
  if (&D.61765.D.11539._M_local_buf != _247)
    goto <bb 294>;
  else
    goto <bb 295>;

  <bb 294>:
  # DEBUG D#467 => D.61765.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61765
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61765
  # DEBUG this => D#1
  # DEBUG this => &D.61765
  # DEBUG D#464 => &D.61765._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _247
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _247
  # DEBUG this => D#458
  # DEBUG D.132230 => D#459
  operator delete (_247);

  <bb 295>:
  # DEBUG D#468 => &D.61765._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61765 ={v} {CLOBBER};
  resx 18

<L147>:
  pretmp_1464 = &this_30(D)->_active;
  pretmp_1471 = &this_30(D)->_input_buffer;
  pretmp_1478 = &this_30(D)->_output_buffer;
  pretmp_1485 = &this_30(D)->_in_cred_buffer;
  pretmp_1492 = &this_30(D)->_out_cred_buffer;
  pretmp_1499 = &this_30(D)->_arrival_queue;
  pretmp_1506 = &this_30(D)->_transport_queue;
  pretmp_1513 = &this_30(D)->_transport_free;
  goto <bb 417> (<L63>);

<L17>:
  # DEBUG this => &D.61767
  # DEBUG this => &D.61767
  # DEBUG this => &D.61767
  _289 = MEM[(char * *)&D.61767];
  # DEBUG D#1 => &D.61767
  # DEBUG this => D#1
  # DEBUG this => &D.61767
  if (&D.61767.D.11539._M_local_buf != _289)
    goto <bb 298>;
  else
    goto <bb 299>;

  <bb 298>:
  # DEBUG D#467 => D.61767.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61767
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61767
  # DEBUG this => D#1
  # DEBUG this => &D.61767
  # DEBUG D#464 => &D.61767._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _289
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _289
  # DEBUG this => D#458
  # DEBUG D.132247 => D#459
  operator delete (_289);

  <bb 299>:
  # DEBUG D#468 => &D.61767._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61767 ={v} {CLOBBER};
  resx 22

<L148>:
  pretmp_1460 = &this_30(D)->_active;
  pretmp_1467 = &this_30(D)->_input_buffer;
  pretmp_1474 = &this_30(D)->_output_buffer;
  pretmp_1481 = &this_30(D)->_in_cred_buffer;
  pretmp_1488 = &this_30(D)->_out_cred_buffer;
  pretmp_1495 = &this_30(D)->_arrival_queue;
  pretmp_1502 = &this_30(D)->_transport_queue;
  pretmp_1509 = &this_30(D)->_transport_free;
  goto <bb 417> (<L63>);

<L92>:

<L19>:
  # DEBUG this => &D.61770
  # DEBUG this => &D.61770
  # DEBUG this => &D.61770
  _287 = MEM[(char * *)&D.61770];
  # DEBUG D#1 => &D.61770
  # DEBUG this => D#1
  # DEBUG this => &D.61770
  if (&D.61770.D.11539._M_local_buf != _287)
    goto <bb 303>;
  else
    goto <bb 304>;

  <bb 303>:
  # DEBUG D#467 => D.61770.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61770
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61770
  # DEBUG this => D#1
  # DEBUG this => &D.61770
  # DEBUG D#464 => &D.61770._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _287
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _287
  # DEBUG this => D#458
  # DEBUG D.132264 => D#459
  operator delete (_287);

  <bb 304>:
  # DEBUG D#468 => &D.61770._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61770 ={v} {CLOBBER};
  resx 31

<L149>:
  goto <bb 307> (<L21>);

<L89>:

<L21>:
  # DEBUG this => &D.61771
  # DEBUG this => &D.61771
  # DEBUG this => &D.61771
  _276 = MEM[(char * *)&D.61771];
  # DEBUG D#1 => &D.61771
  # DEBUG this => D#1
  # DEBUG this => &D.61771
  if (&D.61771.D.11539._M_local_buf != _276)
    goto <bb 308>;
  else
    goto <bb 309>;

  <bb 308>:
  # DEBUG D#467 => D.61771.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61771
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61771
  # DEBUG this => D#1
  # DEBUG this => &D.61771
  # DEBUG D#464 => &D.61771._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _276
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _276
  # DEBUG this => D#458
  # DEBUG D.132279 => D#459
  operator delete (_276);

  <bb 309>:
  # DEBUG D#468 => &D.61771._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61771 ={v} {CLOBBER};
  resx 30

<L150>:
  goto <bb 312> (<L23>);

<L88>:

<L23>:
  # DEBUG this => &D.61772
  # DEBUG this => &D.61772
  # DEBUG this => &D.61772
  _278 = MEM[(char * *)&D.61772];
  # DEBUG D#1 => &D.61772
  # DEBUG this => D#1
  # DEBUG this => &D.61772
  if (&D.61772.D.11539._M_local_buf != _278)
    goto <bb 313>;
  else
    goto <bb 314>;

  <bb 313>:
  # DEBUG D#467 => D.61772.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61772
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61772
  # DEBUG this => D#1
  # DEBUG this => &D.61772
  # DEBUG D#464 => &D.61772._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _278
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _278
  # DEBUG this => D#458
  # DEBUG D.132294 => D#459
  operator delete (_278);

  <bb 314>:
  # DEBUG D#468 => &D.61772._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61772 ={v} {CLOBBER};
  resx 29

<L151>:
  goto <bb 317> (<L25>);

<L87>:

<L25>:
  # DEBUG this => &D.61773
  # DEBUG this => &D.61773
  # DEBUG this => &D.61774
  # DEBUG this => &D.61774
  # DEBUG this => &D.61774
  _281 = MEM[(char * *)&D.61774];
  # DEBUG D#1 => &D.61774
  # DEBUG this => D#1
  # DEBUG this => &D.61774
  if (&D.61774.D.11539._M_local_buf != _281)
    goto <bb 318>;
  else
    goto <bb 319>;

  <bb 318>:
  # DEBUG D#467 => D.61774.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61774
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61774
  # DEBUG this => D#1
  # DEBUG this => &D.61774
  # DEBUG D#464 => &D.61774._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _281
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _281
  # DEBUG this => D#458
  # DEBUG D.132311 => D#459
  operator delete (_281);

  <bb 319>:
  # DEBUG D#468 => &D.61774._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61774 ={v} {CLOBBER};
  resx 27

<L152>:
  goto <bb 322> (<L28>);

<L86>:

<L28>:
  # DEBUG this => &D.61775
  # DEBUG this => &D.61775
  # DEBUG this => &D.61775
  _282 = MEM[(char * *)&D.61775];
  # DEBUG D#1 => &D.61775
  # DEBUG this => D#1
  # DEBUG this => &D.61775
  if (&D.61775.D.11539._M_local_buf != _282)
    goto <bb 323>;
  else
    goto <bb 324>;

  <bb 323>:
  # DEBUG D#467 => D.61775.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61775
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61775
  # DEBUG this => D#1
  # DEBUG this => &D.61775
  # DEBUG D#464 => &D.61775._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _282
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _282
  # DEBUG this => D#458
  # DEBUG D.132326 => D#459
  operator delete (_282);

  <bb 324>:
  # DEBUG D#468 => &D.61775._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61775 ={v} {CLOBBER};
  resx 26

<L153>:
  pretmp_1462 = &this_30(D)->_active;
  pretmp_1469 = &this_30(D)->_input_buffer;
  pretmp_1476 = &this_30(D)->_output_buffer;
  pretmp_1483 = &this_30(D)->_in_cred_buffer;
  pretmp_1490 = &this_30(D)->_out_cred_buffer;
  pretmp_1497 = &this_30(D)->_arrival_queue;
  pretmp_1504 = &this_30(D)->_transport_queue;
  pretmp_1511 = &this_30(D)->_transport_free;
  goto <bb 417> (<L63>);

<L31>:
  # DEBUG this => &D.61778
  # DEBUG this => &D.61778
  # DEBUG this => &D.61778
  _285 = MEM[(char * *)&D.61778];
  # DEBUG D#1 => &D.61778
  # DEBUG this => D#1
  # DEBUG this => &D.61778
  if (&D.61778.D.11539._M_local_buf != _285)
    goto <bb 327>;
  else
    goto <bb 328>;

  <bb 327>:
  # DEBUG D#467 => D.61778.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61778
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61778
  # DEBUG this => D#1
  # DEBUG this => &D.61778
  # DEBUG D#464 => &D.61778._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _285
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _285
  # DEBUG this => D#458
  # DEBUG D.132343 => D#459
  operator delete (_285);

  <bb 328>:
  # DEBUG D#468 => &D.61778._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61778 ={v} {CLOBBER};
  resx 53

<L154>:
  pretmp_518 = &this_30(D)->_active;
  pretmp_437 = &this_30(D)->_input_buffer;
  pretmp_1231 = &this_30(D)->_output_buffer;
  pretmp_7 = &this_30(D)->_in_cred_buffer;
  pretmp_1190 = &this_30(D)->_out_cred_buffer;
  pretmp_1260 = &this_30(D)->_arrival_queue;
  pretmp_1322 = &this_30(D)->_transport_queue;
  pretmp_1370 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L32>:
  # DEBUG this => &D.61779
  # DEBUG this => &D.61779.D.43009
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (&D.61779.D.43009);
  # DEBUG D#571 => &MEM[(struct _Bvector_base *)&D.61779]._M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  D.61779 ={v} {CLOBBER};
  resx 55

<L155>:
  pretmp_456 = &this_30(D)->_input_buffer;
  pretmp_1237 = &this_30(D)->_output_buffer;
  pretmp_761 = &this_30(D)->_in_cred_buffer;
  pretmp_1277 = &this_30(D)->_out_cred_buffer;
  pretmp_1235 = &this_30(D)->_arrival_queue;
  pretmp_1320 = &this_30(D)->_transport_queue;
  pretmp_1368 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  # _1404 = PHI <_96(102)>
<L33>:
  operator delete (_1404);
  resx 58

<L156>:
  goto <bb 335> (<L34>);

<L104>:

<L34>:
  # DEBUG this => &D.61783
  # DEBUG this => &D.61783
  # DEBUG this => &D.61783
  _273 = MEM[(char * *)&D.61783];
  # DEBUG D#1 => &D.61783
  # DEBUG this => D#1
  # DEBUG this => &D.61783
  if (&D.61783.D.11539._M_local_buf != _273)
    goto <bb 336>;
  else
    goto <bb 337>;

  <bb 336>:
  # DEBUG D#467 => D.61783.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61783
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61783
  # DEBUG this => D#1
  # DEBUG this => &D.61783
  # DEBUG D#464 => &D.61783._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _273
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _273
  # DEBUG this => D#458
  # DEBUG D.132363 => D#459
  operator delete (_273);

  <bb 337>:
  # DEBUG D#468 => &D.61783._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61783 ={v} {CLOBBER};
  resx 57

<L157>:
  pretmp_455 = &this_30(D)->_input_buffer;
  pretmp_1019 = &this_30(D)->_output_buffer;
  pretmp_811 = &this_30(D)->_in_cred_buffer;
  pretmp_1278 = &this_30(D)->_out_cred_buffer;
  pretmp_995 = &this_30(D)->_arrival_queue;
  pretmp_1318 = &this_30(D)->_transport_queue;
  pretmp_1366 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  # _1402 = PHI <_123(131)>
<L35>:
  operator delete (_1402);
  resx 62

<L158>:
  goto <bb 342> (<L36>);

<L112>:

<L36>:
  # DEBUG this => &D.61788
  # DEBUG this => &D.61788
  # DEBUG this => &D.61788
  _111 = MEM[(char * *)&D.61788];
  # DEBUG D#1 => &D.61788
  # DEBUG this => D#1
  # DEBUG this => &D.61788
  if (&D.61788.D.11539._M_local_buf != _111)
    goto <bb 343>;
  else
    goto <bb 344>;

  <bb 343>:
  # DEBUG D#467 => D.61788.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61788
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61788
  # DEBUG this => D#1
  # DEBUG this => &D.61788
  # DEBUG D#464 => &D.61788._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _111
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _111
  # DEBUG this => D#458
  # DEBUG D.132378 => D#459
  operator delete (_111);

  <bb 344>:
  # DEBUG D#468 => &D.61788._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61788 ={v} {CLOBBER};
  resx 61

<L159>:
  pretmp_454 = &this_30(D)->_input_buffer;
  pretmp_8 = &this_30(D)->_output_buffer;
  pretmp_1009 = &this_30(D)->_in_cred_buffer;
  pretmp_803 = &this_30(D)->_out_cred_buffer;
  pretmp_1264 = &this_30(D)->_arrival_queue;
  pretmp_1316 = &this_30(D)->_transport_queue;
  pretmp_1364 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  # _1401 = PHI <_141(155)>
<L37>:
  operator delete (_1401);
  resx 66

<L160>:
  goto <bb 349> (<L38>);

<L118>:

<L38>:
  # DEBUG this => &D.61793
  # DEBUG this => &D.61793
  # DEBUG this => &D.61793
  _132 = MEM[(char * *)&D.61793];
  # DEBUG D#1 => &D.61793
  # DEBUG this => D#1
  # DEBUG this => &D.61793
  if (&D.61793.D.11539._M_local_buf != _132)
    goto <bb 350>;
  else
    goto <bb 351>;

  <bb 350>:
  # DEBUG D#467 => D.61793.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61793
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61793
  # DEBUG this => D#1
  # DEBUG this => &D.61793
  # DEBUG D#464 => &D.61793._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _132
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _132
  # DEBUG this => D#458
  # DEBUG D.132393 => D#459
  operator delete (_132);

  <bb 351>:
  # DEBUG D#468 => &D.61793._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61793 ={v} {CLOBBER};
  resx 65

<L161>:
  pretmp_453 = &this_30(D)->_input_buffer;
  pretmp_802 = &this_30(D)->_output_buffer;
  pretmp_1053 = &this_30(D)->_in_cred_buffer;
  pretmp_64 = &this_30(D)->_out_cred_buffer;
  pretmp_1265 = &this_30(D)->_arrival_queue;
  pretmp_1314 = &this_30(D)->_transport_queue;
  pretmp_1362 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

  # _1400 = PHI <_161(177)>
<L39>:
  operator delete (_1400);
  resx 70

<L162>:
  goto <bb 356> (<L40>);

<L124>:

<L40>:
  # DEBUG this => &D.61798
  # DEBUG this => &D.61798
  # DEBUG this => &D.61798
  _151 = MEM[(char * *)&D.61798];
  # DEBUG D#1 => &D.61798
  # DEBUG this => D#1
  # DEBUG this => &D.61798
  if (&D.61798.D.11539._M_local_buf != _151)
    goto <bb 357>;
  else
    goto <bb 358>;

  <bb 357>:
  # DEBUG D#467 => D.61798.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61798
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61798
  # DEBUG this => D#1
  # DEBUG this => &D.61798
  # DEBUG D#464 => &D.61798._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _151
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _151
  # DEBUG this => D#458
  # DEBUG D.132408 => D#459
  operator delete (_151);

  <bb 358>:
  # DEBUG D#468 => &D.61798._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61798 ={v} {CLOBBER};
  resx 69

<L163>:
  pretmp_1071 = &this_30(D)->_input_buffer;
  pretmp_1038 = &this_30(D)->_output_buffer;
  pretmp_1240 = &this_30(D)->_in_cred_buffer;
  pretmp_1196 = &this_30(D)->_out_cred_buffer;
  pretmp_1171 = &this_30(D)->_arrival_queue;
  pretmp_1311 = &this_30(D)->_transport_queue;
  pretmp_1359 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L41>:
  operator delete (_176);
  resx 75

<L164>:
  goto <bb 363> (<L42>);

<L127>:

<L42>:
  # DEBUG this => &D.61801
  # DEBUG this => &D.61801
  # DEBUG this => &D.61801
  _171 = MEM[(char * *)&D.61801];
  # DEBUG D#1 => &D.61801
  # DEBUG this => D#1
  # DEBUG this => &D.61801
  if (&D.61801.D.11539._M_local_buf != _171)
    goto <bb 364>;
  else
    goto <bb 365>;

  <bb 364>:
  # DEBUG D#467 => D.61801.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61801
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61801
  # DEBUG this => D#1
  # DEBUG this => &D.61801
  # DEBUG D#464 => &D.61801._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _171
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _171
  # DEBUG this => D#458
  # DEBUG D.132423 => D#459
  operator delete (_171);

  <bb 365>:
  # DEBUG D#468 => &D.61801._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61801 ={v} {CLOBBER};
  resx 74

<L165>:
  pretmp_439 = &this_30(D)->_input_buffer;
  pretmp_1297 = &this_30(D)->_output_buffer;
  pretmp_1228 = &this_30(D)->_in_cred_buffer;
  pretmp_804 = &this_30(D)->_out_cred_buffer;
  pretmp_1261 = &this_30(D)->_arrival_queue;
  pretmp_1325 = &this_30(D)->_transport_queue;
  pretmp_1373 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L44>:
  operator delete (_187);
  resx 81

<L166>:
  goto <bb 370> (<L45>);

<L129>:

<L45>:
  # DEBUG this => &D.61805
  # DEBUG this => &D.61805
  # DEBUG this => &D.61805
  _272 = MEM[(char * *)&D.61805];
  # DEBUG D#1 => &D.61805
  # DEBUG this => D#1
  # DEBUG this => &D.61805
  if (&D.61805.D.11539._M_local_buf != _272)
    goto <bb 371>;
  else
    goto <bb 372>;

  <bb 371>:
  # DEBUG D#467 => D.61805.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61805
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61805
  # DEBUG this => D#1
  # DEBUG this => &D.61805
  # DEBUG D#464 => &D.61805._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _272
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _272
  # DEBUG this => D#458
  # DEBUG D.132440 => D#459
  operator delete (_272);

  <bb 372>:
  # DEBUG D#468 => &D.61805._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61805 ={v} {CLOBBER};
  resx 80

<L167>:
  pretmp_460 = &this_30(D)->_input_buffer;
  pretmp_407 = &this_30(D)->_output_buffer;
  pretmp_1044 = &this_30(D)->_in_cred_buffer;
  pretmp_1198 = &this_30(D)->_out_cred_buffer;
  pretmp_1268 = &this_30(D)->_arrival_queue;
  pretmp_985 = &this_30(D)->_transport_queue;
  pretmp_1353 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L47>:
  operator delete (_196);
  resx 87

<L168>:
  goto <bb 377> (<L48>);

<L131>:

<L48>:
  # DEBUG this => &D.61809
  # DEBUG this => &D.61809
  # DEBUG this => &D.61809
  _269 = MEM[(char * *)&D.61809];
  # DEBUG D#1 => &D.61809
  # DEBUG this => D#1
  # DEBUG this => &D.61809
  if (&D.61809.D.11539._M_local_buf != _269)
    goto <bb 378>;
  else
    goto <bb 379>;

  <bb 378>:
  # DEBUG D#467 => D.61809.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &D.61809
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &D.61809
  # DEBUG this => D#1
  # DEBUG this => &D.61809
  # DEBUG D#464 => &D.61809._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _269
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _269
  # DEBUG this => D#458
  # DEBUG D.132457 => D#459
  operator delete (_269);

  <bb 379>:
  # DEBUG D#468 => &D.61809._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  D.61809 ={v} {CLOBBER};
  resx 86

<L169>:
  pretmp_508 = &this_30(D)->_input_buffer;
  pretmp_420 = &this_30(D)->_output_buffer;
  pretmp_97 = &this_30(D)->_in_cred_buffer;
  pretmp_770 = &this_30(D)->_out_cred_buffer;
  pretmp_1176 = &this_30(D)->_arrival_queue;
  pretmp_1250 = &this_30(D)->_transport_queue;
  pretmp_1339 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L50>:
  # DEBUG this => &D.61812
  # DEBUG D#1183 => &D.61812.c
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.61812].D.44077);
  D.61812 ={v} {CLOBBER};
  resx 92

<L170>:
  goto <bb 384> (<L51>);

<L133>:
  pretmp_1419 = &this_30(D)->_input_buffer;

  # prephitmp_1420 = PHI <pretmp_1419(383), _204(382)>
<L51>:
  # DEBUG this => &D.61813
  # DEBUG D#1174 => &D.61813.D.44077
  # DEBUG this => D#1174
  # DEBUG this => &D.61813
  # DEBUG D#151 => &D.61813.D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)&D.61813 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)&D.61813 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)&D.61813 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)&D.61813 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => &D.61813
  # DEBUG D#152 => &D.61813.D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)&D.61813 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)&D.61813 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)&D.61813 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)&D.61813 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => &D.61813
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.61813.D.44077);
  D.61813 ={v} {CLOBBER};
  resx 91

<L171>:
  pretmp_415 = &this_30(D)->_output_buffer;
  pretmp_4 = &this_30(D)->_in_cred_buffer;
  pretmp_1218 = &this_30(D)->_out_cred_buffer;
  pretmp_1180 = &this_30(D)->_arrival_queue;
  pretmp_1251 = &this_30(D)->_transport_queue;
  pretmp_1335 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L52>:
  # DEBUG this => &D.61814
  # DEBUG D#1183 => &D.61814.c
  # DEBUG this => D#1183
  # DEBUG D#1174 => &D#1183->D.44077
  # DEBUG this => D#1174
  # DEBUG this => D#1183
  # DEBUG D#151 => &D#1183->D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)D#1183 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)D#1183 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)D#1183 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)D#1183 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => D#1183
  # DEBUG D#152 => &D#1183->D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)D#1183 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)D#1183 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)D#1183 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)D#1183 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => D#1183
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&MEM[(struct deque *)&D.61814].D.44077);
  D.61814 ={v} {CLOBBER};
  resx 96

<L172>:
  goto <bb 389> (<L53>);

<L135>:
  pretmp_1421 = &this_30(D)->_output_buffer;

  # prephitmp_1422 = PHI <pretmp_1421(388), _210(387)>
<L53>:
  # DEBUG this => &D.61815
  # DEBUG D#1174 => &D.61815.D.44077
  # DEBUG this => D#1174
  # DEBUG this => &D.61815
  # DEBUG D#151 => &D.61815.D.44077._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#151
  # DEBUG D#1182 => MEM[(const struct iterator &)&D.61815 + 48]._M_cur
  # DEBUG D.107773 => D#1182
  # DEBUG D#1181 => MEM[(const struct iterator &)&D.61815 + 48]._M_first
  # DEBUG D.107774 => D#1181
  # DEBUG D#1180 => MEM[(const struct iterator &)&D.61815 + 48]._M_last
  # DEBUG D.107775 => D#1180
  # DEBUG D#1179 => MEM[(const struct iterator &)&D.61815 + 48]._M_node
  # DEBUG D.107776 => D#1179
  # DEBUG this => &D.61815
  # DEBUG D#152 => &D.61815.D.44077._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#152
  # DEBUG D#1178 => MEM[(const struct iterator &)&D.61815 + 16]._M_cur
  # DEBUG D.107769 => D#1178
  # DEBUG D#1177 => MEM[(const struct iterator &)&D.61815 + 16]._M_first
  # DEBUG D.107770 => D#1177
  # DEBUG D#1176 => MEM[(const struct iterator &)&D.61815 + 16]._M_last
  # DEBUG D.107771 => D#1176
  # DEBUG D#1175 => MEM[(const struct iterator &)&D.61815 + 16]._M_node
  # DEBUG D.107772 => D#1175
  # DEBUG D#153 => &D.61815
  # DEBUG this => D#153
  # DEBUG __first => D#154
  # DEBUG __last => D#155
  # DEBUG D.107757 => D#156
  std::_Deque_base<Flit*, std::allocator<Flit*> >::~_Deque_base (&D.61815.D.44077);
  D.61815 ={v} {CLOBBER};
  resx 95

<L173>:
  pretmp_1224 = &this_30(D)->_in_cred_buffer;
  pretmp_831 = &this_30(D)->_out_cred_buffer;
  pretmp_1179 = &this_30(D)->_arrival_queue;
  pretmp_1246 = &this_30(D)->_transport_queue;
  pretmp_1334 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L54>:
  # DEBUG this => &D.61816
  # DEBUG D#1207 => &D.61816.c
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&D.61816].D.59602);
  D.61816 ={v} {CLOBBER};
  resx 100

<L174>:
  goto <bb 394> (<L55>);

<L137>:
  pretmp_1423 = &this_30(D)->_in_cred_buffer;

  # prephitmp_1424 = PHI <pretmp_1423(393), _216(392)>
<L55>:
  # DEBUG this => &D.61817
  # DEBUG D#1198 => &D.61817.D.59602
  # DEBUG this => D#1198
  # DEBUG this => &D.61817
  # DEBUG D#158 => &D.61817.D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)&D.61817 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)&D.61817 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)&D.61817 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)&D.61817 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => &D.61817
  # DEBUG D#159 => &D.61817.D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)&D.61817 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)&D.61817 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)&D.61817 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)&D.61817 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => &D.61817
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&D.61817.D.59602);
  D.61817 ={v} {CLOBBER};
  resx 99

<L175>:
  pretmp_1234 = &this_30(D)->_out_cred_buffer;
  pretmp_1275 = &this_30(D)->_arrival_queue;
  pretmp_1186 = &this_30(D)->_transport_queue;
  pretmp_1332 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L56>:
  # DEBUG this => &D.61818
  # DEBUG D#1207 => &D.61818.c
  # DEBUG this => D#1207
  # DEBUG D#1198 => &D#1207->D.59602
  # DEBUG this => D#1198
  # DEBUG this => D#1207
  # DEBUG D#158 => &D#1207->D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)D#1207 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)D#1207 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)D#1207 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)D#1207 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => D#1207
  # DEBUG D#159 => &D#1207->D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)D#1207 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)D#1207 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)D#1207 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)D#1207 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => D#1207
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&MEM[(struct deque *)&D.61818].D.59602);
  D.61818 ={v} {CLOBBER};
  resx 104

<L176>:
  goto <bb 399> (<L57>);

<L139>:
  pretmp_1425 = &this_30(D)->_out_cred_buffer;

  # prephitmp_1426 = PHI <pretmp_1425(398), _222(397)>
<L57>:
  # DEBUG this => &D.61819
  # DEBUG D#1198 => &D.61819.D.59602
  # DEBUG this => D#1198
  # DEBUG this => &D.61819
  # DEBUG D#158 => &D.61819.D.59602._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#158
  # DEBUG D#1206 => MEM[(const struct iterator &)&D.61819 + 48]._M_cur
  # DEBUG D.107975 => D#1206
  # DEBUG D#1205 => MEM[(const struct iterator &)&D.61819 + 48]._M_first
  # DEBUG D.107976 => D#1205
  # DEBUG D#1204 => MEM[(const struct iterator &)&D.61819 + 48]._M_last
  # DEBUG D.107977 => D#1204
  # DEBUG D#1203 => MEM[(const struct iterator &)&D.61819 + 48]._M_node
  # DEBUG D.107978 => D#1203
  # DEBUG this => &D.61819
  # DEBUG D#159 => &D.61819.D.59602._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#159
  # DEBUG D#1202 => MEM[(const struct iterator &)&D.61819 + 16]._M_cur
  # DEBUG D.107971 => D#1202
  # DEBUG D#1201 => MEM[(const struct iterator &)&D.61819 + 16]._M_first
  # DEBUG D.107972 => D#1201
  # DEBUG D#1200 => MEM[(const struct iterator &)&D.61819 + 16]._M_last
  # DEBUG D.107973 => D#1200
  # DEBUG D#1199 => MEM[(const struct iterator &)&D.61819 + 16]._M_node
  # DEBUG D.107974 => D#1199
  # DEBUG D#160 => &D.61819
  # DEBUG this => D#160
  # DEBUG __first => D#161
  # DEBUG __last => D#162
  # DEBUG D.107959 => D#163
  std::_Deque_base<Credit*, std::allocator<Credit*> >::~_Deque_base (&D.61819.D.59602);
  D.61819 ={v} {CLOBBER};
  resx 103

<L177>:
  pretmp_1184 = &this_30(D)->_arrival_queue;
  pretmp_1255 = &this_30(D)->_transport_queue;
  pretmp_1331 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L58>:
  # DEBUG this => &D.61820
  # DEBUG D#1231 => &D.61820.c
  # DEBUG this => D#1231
  # DEBUG D#1222 => &D#1231->D.60628
  # DEBUG this => D#1222
  # DEBUG this => D#1231
  # DEBUG D#165 => &D#1231->D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)D#1231 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)D#1231 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)D#1231 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)D#1231 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => D#1231
  # DEBUG D#166 => &D#1231->D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)D#1231 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)D#1231 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)D#1231 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)D#1231 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => D#1231
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (&MEM[(struct deque *)&D.61820].D.60628);
  D.61820 ={v} {CLOBBER};
  resx 108

<L178>:
  goto <bb 404> (<L59>);

<L141>:
  pretmp_1427 = &this_30(D)->_arrival_queue;

  # prephitmp_1428 = PHI <pretmp_1427(403), _228(402)>
<L59>:
  # DEBUG this => &D.61821
  # DEBUG D#1222 => &D.61821.D.60628
  # DEBUG this => D#1222
  # DEBUG this => &D.61821
  # DEBUG D#165 => &D.61821.D.60628._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#165
  # DEBUG D#1230 => MEM[(const struct iterator &)&D.61821 + 48]._M_cur
  # DEBUG D.108177 => D#1230
  # DEBUG D#1229 => MEM[(const struct iterator &)&D.61821 + 48]._M_first
  # DEBUG D.108178 => D#1229
  # DEBUG D#1228 => MEM[(const struct iterator &)&D.61821 + 48]._M_last
  # DEBUG D.108179 => D#1228
  # DEBUG D#1227 => MEM[(const struct iterator &)&D.61821 + 48]._M_node
  # DEBUG D.108180 => D#1227
  # DEBUG this => &D.61821
  # DEBUG D#166 => &D.61821.D.60628._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#166
  # DEBUG D#1226 => MEM[(const struct iterator &)&D.61821 + 16]._M_cur
  # DEBUG D.108173 => D#1226
  # DEBUG D#1225 => MEM[(const struct iterator &)&D.61821 + 16]._M_first
  # DEBUG D.108174 => D#1225
  # DEBUG D#1224 => MEM[(const struct iterator &)&D.61821 + 16]._M_last
  # DEBUG D.108175 => D#1224
  # DEBUG D#1223 => MEM[(const struct iterator &)&D.61821 + 16]._M_node
  # DEBUG D.108176 => D#1223
  # DEBUG D#167 => &D.61821
  # DEBUG this => D#167
  # DEBUG __first => D#168
  # DEBUG __last => D#169
  # DEBUG D.108161 => D#170
  std::_Deque_base<EventRouter::tArrivalEvent*, std::allocator<EventRouter::tArrivalEvent*> >::~_Deque_base (&D.61821.D.60628);
  D.61821 ={v} {CLOBBER};
  resx 107

<L179>:
  pretmp_1254 = &this_30(D)->_transport_queue;
  pretmp_1329 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L60>:
  # DEBUG this => &D.61822
  # DEBUG D#1268 => &D.61822.c
  # DEBUG this => D#1268
  # DEBUG D#1259 => &D#1268->D.61649
  # DEBUG this => D#1259
  # DEBUG this => D#1268
  # DEBUG D#172 => &D#1268->D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)D#1268 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)D#1268 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)D#1268 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)D#1268 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => D#1268
  # DEBUG D#173 => &D#1268->D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)D#1268 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)D#1268 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)D#1268 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)D#1268 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => D#1268
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (&MEM[(struct deque *)&D.61822].D.61649);
  D.61822 ={v} {CLOBBER};
  resx 112

<L180>:
  goto <bb 409> (<L61>);

<L143>:
  pretmp_1429 = &this_30(D)->_transport_queue;

  # prephitmp_1430 = PHI <pretmp_1429(408), _234(407)>
<L61>:
  # DEBUG this => &D.61823
  # DEBUG D#1259 => &D.61823.D.61649
  # DEBUG this => D#1259
  # DEBUG this => &D.61823
  # DEBUG D#172 => &D.61823.D.61649._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __x => D#172
  # DEBUG D#1267 => MEM[(const struct iterator &)&D.61823 + 48]._M_cur
  # DEBUG D.108471 => D#1267
  # DEBUG D#1266 => MEM[(const struct iterator &)&D.61823 + 48]._M_first
  # DEBUG D.108472 => D#1266
  # DEBUG D#1265 => MEM[(const struct iterator &)&D.61823 + 48]._M_last
  # DEBUG D.108473 => D#1265
  # DEBUG D#1264 => MEM[(const struct iterator &)&D.61823 + 48]._M_node
  # DEBUG D.108474 => D#1264
  # DEBUG this => &D.61823
  # DEBUG D#173 => &D.61823.D.61649._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __x => D#173
  # DEBUG D#1263 => MEM[(const struct iterator &)&D.61823 + 16]._M_cur
  # DEBUG D.108467 => D#1263
  # DEBUG D#1262 => MEM[(const struct iterator &)&D.61823 + 16]._M_first
  # DEBUG D.108468 => D#1262
  # DEBUG D#1261 => MEM[(const struct iterator &)&D.61823 + 16]._M_last
  # DEBUG D.108469 => D#1261
  # DEBUG D#1260 => MEM[(const struct iterator &)&D.61823 + 16]._M_node
  # DEBUG D.108470 => D#1260
  # DEBUG D#174 => &D.61823
  # DEBUG this => D#174
  # DEBUG __first => D#175
  # DEBUG __last => D#176
  # DEBUG D.108455 => D#177
  std::_Deque_base<EventRouter::tTransportEvent*, std::allocator<EventRouter::tTransportEvent*> >::~_Deque_base (&D.61823.D.61649);
  D.61823 ={v} {CLOBBER};
  resx 111

<L181>:
  pretmp_1328 = &this_30(D)->_transport_free;
  goto <bb 412> (<L62>);

<L99>:
  pretmp_516 = &this_30(D)->_active;
  pretmp_511 = &this_30(D)->_input_buffer;
  pretmp_411 = &this_30(D)->_output_buffer;
  pretmp_1232 = &this_30(D)->_in_cred_buffer;
  pretmp_1 = &this_30(D)->_out_cred_buffer;
  pretmp_1276 = &this_30(D)->_arrival_queue;
  pretmp_1257 = &this_30(D)->_transport_queue;
  pretmp_1330 = &this_30(D)->_transport_free;

  # prephitmp_519 = PHI <_89(410), _89(405), pretmp_516(411), _89(400), _89(395), pretmp_517(79), _89(390), _89(385), _89(96), _89(98), _89(100), _89(380), _89(106), _89(112), _89(116), _89(123), _89(125), _89(127), _89(129), _89(196), _89(135), _89(141), _89(149), _89(151), _89(153), _89(373), _89(159), _89(163), _89(171), _89(173), _89(175), _89(359), _89(181), _89(202), _89(352), _89(214), _89(345), _89(226), _89(338), _89(238), _89(331), _89(250), pretmp_518(329), _89(262), _89(282), _89(278), _89(184), _89(366), _89(190)>
  # prephitmp_410 = PHI <_204(410), _204(405), pretmp_511(411), _204(400), _204(395), pretmp_512(79), _204(390), prephitmp_1420(385), pretmp_514(96), pretmp_506(98), pretmp_507(100), pretmp_508(380), pretmp_509(106), pretmp_496(112), pretmp_497(116), pretmp_498(123), pretmp_499(125), pretmp_484(127), pretmp_485(129), pretmp_486(196), pretmp_487(135), pretmp_472(141), pretmp_473(149), pretmp_474(151), pretmp_475(153), pretmp_460(373), pretmp_461(159), pretmp_462(163), pretmp_463(171), pretmp_1069(173), pretmp_1070(175), pretmp_1071(359), pretmp_1072(181), pretmp_452(202), pretmp_453(352), _204(214), pretmp_454(345), _204(226), pretmp_455(338), _204(238), pretmp_456(331), _204(250), pretmp_437(329), _204(262), _204(282), _204(278), pretmp_438(184), pretmp_439(366), pretmp_440(190)>
  # prephitmp_1226 = PHI <_210(410), _210(405), pretmp_411(411), _210(400), _210(395), pretmp_412(79), prephitmp_1422(390), pretmp_415(385), pretmp_416(96), pretmp_417(98), pretmp_418(100), pretmp_420(380), pretmp_421(106), pretmp_422(112), pretmp_423(116), pretmp_425(123), pretmp_426(125), pretmp_427(127), pretmp_428(129), pretmp_430(196), pretmp_431(135), pretmp_432(141), pretmp_433(149), pretmp_405(151), pretmp_406(153), pretmp_407(373), pretmp_408(159), pretmp_400(163), pretmp_401(171), pretmp_402(173), pretmp_403(175), pretmp_1038(359), pretmp_1017(181), pretmp_897(202), pretmp_802(352), pretmp_793(214), pretmp_8(345), _210(226), pretmp_1019(338), _210(238), pretmp_1237(331), _210(250), pretmp_1231(329), _210(262), _210(282), _210(278), pretmp_1294(184), pretmp_1297(366), pretmp_790(190)>
  # prephitmp_6 = PHI <_216(410), _216(405), pretmp_1232(411), _216(400), prephitmp_1424(395), pretmp_1188(79), pretmp_1224(390), pretmp_4(385), pretmp_9(96), pretmp_921(98), pretmp_1023(100), pretmp_97(380), pretmp_124(106), pretmp_933(112), pretmp_1025(116), pretmp_77(123), pretmp_1051(125), pretmp_945(127), pretmp_1027(129), pretmp_794(196), pretmp_782(135), pretmp_957(141), pretmp_1029(149), pretmp_1042(151), pretmp_1043(153), pretmp_1044(373), pretmp_1045(159), pretmp_1047(163), pretmp_1048(171), pretmp_1049(173), pretmp_1050(175), pretmp_1240(359), pretmp_909(181), pretmp_1054(202), pretmp_1053(352), pretmp_1052(214), pretmp_1009(345), pretmp_293(226), pretmp_811(338), _216(238), pretmp_761(331), _216(250), pretmp_7(329), _216(262), _216(282), _216(278), pretmp_2(184), pretmp_1228(366), pretmp_1229(190)>
  # prephitmp_859 = PHI <_222(410), _222(405), pretmp_1(411), prephitmp_1426(400), pretmp_1234(395), pretmp_1013(79), pretmp_831(390), pretmp_1218(385), pretmp_1216(96), pretmp_1007(98), pretmp_775(100), pretmp_770(380), pretmp_1306(106), pretmp_1220(112), pretmp_1307(116), pretmp_1285(123), pretmp_1286(125), pretmp_1201(127), pretmp_1284(129), pretmp_1203(196), pretmp_1283(135), pretmp_1202(141), pretmp_762(149), pretmp_1281(151), pretmp_1282(153), pretmp_1198(373), pretmp_1280(159), pretmp_1200(163), pretmp_1279(171), pretmp_1199(173), pretmp_1197(175), pretmp_1196(359), pretmp_1195(181), pretmp_1192(202), pretmp_64(352), pretmp_771(214), pretmp_803(345), pretmp_1189(226), pretmp_1278(338), pretmp_1191(238), pretmp_1277(331), _222(250), pretmp_1190(329), _222(262), _222(282), _222(278), pretmp_1185(184), pretmp_804(366), pretmp_776(190)>
  # prephitmp_1259 = PHI <_228(410), prephitmp_1428(405), pretmp_1276(411), pretmp_1184(400), pretmp_1275(395), pretmp_1183(79), pretmp_1179(390), pretmp_1180(385), pretmp_55(96), pretmp_179(98), pretmp_116(100), pretmp_1176(380), pretmp_1274(106), pretmp_1178(112), pretmp_1273(116), pretmp_1177(123), pretmp_1270(125), pretmp_1174(127), pretmp_1271(129), pretmp_1272(196), pretmp_1194(135), pretmp_1173(141), pretmp_869(149), pretmp_163(151), pretmp_435(153), pretmp_1268(373), pretmp_1269(159), pretmp_1170(163), pretmp_1267(171), pretmp_1172(173), pretmp_1266(175), pretmp_1171(359), pretmp_251(181), pretmp_1167(202), pretmp_1265(352), pretmp_1169(214), pretmp_1264(345), pretmp_1168(226), pretmp_995(338), pretmp_1263(238), pretmp_1235(331), pretmp_1236(250), pretmp_1260(329), _228(262), _228(282), _228(278), pretmp_1262(184), pretmp_1261(366), pretmp_1258(190)>
  # prephitmp_1327 = PHI <prephitmp_1430(410), pretmp_1254(405), pretmp_1257(411), pretmp_1255(400), pretmp_1186(395), pretmp_1187(79), pretmp_1246(390), pretmp_1251(385), pretmp_1253(96), pretmp_1252(98), pretmp_1249(100), pretmp_1250(380), pretmp_1247(106), pretmp_1241(112), pretmp_1248(116), pretmp_1242(123), pretmp_1245(125), pretmp_1166(127), pretmp_1165(129), pretmp_1164(196), pretmp_1163(135), pretmp_1001(141), pretmp_1244(149), pretmp_1243(151), pretmp_246(153), pretmp_985(373), pretmp_777(159), pretmp_760(163), pretmp_1308(171), pretmp_1309(173), pretmp_1310(175), pretmp_1311(359), pretmp_1312(181), pretmp_1313(202), pretmp_1314(352), pretmp_1315(214), pretmp_1316(345), pretmp_1317(226), pretmp_1318(338), pretmp_1319(238), pretmp_1320(331), pretmp_1321(250), pretmp_1322(329), pretmp_1323(262), _234(282), _234(278), pretmp_1324(184), pretmp_1325(366), pretmp_1326(190)>
  # prephitmp_1375 = PHI <pretmp_1328(410), pretmp_1329(405), pretmp_1330(411), pretmp_1331(400), pretmp_1332(395), pretmp_1333(79), pretmp_1334(390), pretmp_1335(385), pretmp_1336(96), pretmp_1337(98), pretmp_1338(100), pretmp_1339(380), pretmp_1340(106), pretmp_1341(112), pretmp_1342(116), pretmp_1343(123), pretmp_1344(125), pretmp_1345(127), pretmp_1346(129), pretmp_1347(196), pretmp_1348(135), pretmp_1349(141), pretmp_1350(149), pretmp_1351(151), pretmp_1352(153), pretmp_1353(373), pretmp_1354(159), pretmp_1355(163), pretmp_1356(171), pretmp_1357(173), pretmp_1358(175), pretmp_1359(359), pretmp_1360(181), pretmp_1361(202), pretmp_1362(352), pretmp_1363(214), pretmp_1364(345), pretmp_1365(226), pretmp_1366(338), pretmp_1367(238), pretmp_1368(331), pretmp_1369(250), pretmp_1370(329), pretmp_1371(262), _241(282), _241(278), pretmp_1372(184), pretmp_1373(366), pretmp_1374(190)>
<L62>:
  # DEBUG this => &rf
  # DEBUG this => &rf
  # DEBUG this => &rf
  _253 = MEM[(char * *)&rf];
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  if (&rf.D.11539._M_local_buf != _253)
    goto <bb 413>;
  else
    goto <bb 414>;

  <bb 413>:
  # DEBUG D#467 => rf.D.11539._M_allocated_capacity
  # DEBUG D#466 => D#467
  # DEBUG this => &rf
  # DEBUG __size => D#466
  # DEBUG D#465 => D#466
  # DEBUG D#1 => &rf
  # DEBUG this => D#1
  # DEBUG this => &rf
  # DEBUG D#464 => &rf._M_dataplus
  # DEBUG D#462 => D#464
  # DEBUG D#463 => D#465 + 1
  # DEBUG __p => _253
  # DEBUG __a => D#462
  # DEBUG __n => D#463
  # DEBUG D#461 => D#463
  # DEBUG D#460 => D#462
  # DEBUG D#458 => D#460
  # DEBUG D#459 => D#461
  # DEBUG __p => _253
  # DEBUG this => D#458
  # DEBUG D.132492 => D#459
  operator delete (_253);

  <bb 414>:
  # DEBUG D#468 => &rf._M_dataplus
  # DEBUG this => D#468
  # DEBUG this => D#468
  # DEBUG this => D#468
  MEM[(struct  &)&rf] ={v} {CLOBBER};
  resx 51

<L182>:
  goto <bb 417> (<L63>);

<L83>:
  pretmp_1463 = &this_30(D)->_active;
  pretmp_1470 = &this_30(D)->_input_buffer;
  pretmp_1477 = &this_30(D)->_output_buffer;
  pretmp_1484 = &this_30(D)->_in_cred_buffer;
  pretmp_1491 = &this_30(D)->_out_cred_buffer;
  pretmp_1498 = &this_30(D)->_arrival_queue;
  pretmp_1505 = &this_30(D)->_transport_queue;
  pretmp_1512 = &this_30(D)->_transport_free;

  # prephitmp_1466 = PHI <prephitmp_519(415), pretmp_1460(300), pretmp_1461(13), pretmp_1462(325), pretmp_1463(416), pretmp_1464(296), pretmp_1465(8)>
  # prephitmp_1473 = PHI <prephitmp_410(415), pretmp_1467(300), pretmp_1468(13), pretmp_1469(325), pretmp_1470(416), pretmp_1471(296), pretmp_1472(8)>
  # prephitmp_1480 = PHI <prephitmp_1226(415), pretmp_1474(300), pretmp_1475(13), pretmp_1476(325), pretmp_1477(416), pretmp_1478(296), pretmp_1479(8)>
  # prephitmp_1487 = PHI <prephitmp_6(415), pretmp_1481(300), pretmp_1482(13), pretmp_1483(325), pretmp_1484(416), pretmp_1485(296), pretmp_1486(8)>
  # prephitmp_1494 = PHI <prephitmp_859(415), pretmp_1488(300), pretmp_1489(13), pretmp_1490(325), pretmp_1491(416), pretmp_1492(296), pretmp_1493(8)>
  # prephitmp_1501 = PHI <prephitmp_1259(415), pretmp_1495(300), pretmp_1496(13), pretmp_1497(325), pretmp_1498(416), pretmp_1499(296), pretmp_1500(8)>
  # prephitmp_1508 = PHI <prephitmp_1327(415), pretmp_1502(300), pretmp_1503(13), pretmp_1504(325), pretmp_1505(416), pretmp_1506(296), pretmp_1507(8)>
  # prephitmp_1515 = PHI <prephitmp_1375(415), pretmp_1509(300), pretmp_1510(13), pretmp_1511(325), pretmp_1512(416), pretmp_1513(296), pretmp_1514(8)>
<L63>:
  std::__cxx11::basic_ostringstream<char>::~basic_ostringstream (&module_name);
  resx 16

<L183>:
  goto <bb 420> (<L64>);

<L82>:
  pretmp_1147 = &this_30(D)->_active;
  pretmp_1127 = &this_30(D)->_input_buffer;
  pretmp_621 = &this_30(D)->_output_buffer;
  pretmp_602 = &this_30(D)->_in_cred_buffer;
  pretmp_584 = &this_30(D)->_out_cred_buffer;
  pretmp_1109 = &this_30(D)->_arrival_queue;
  pretmp_570 = &this_30(D)->_transport_queue;
  pretmp_551 = &this_30(D)->_transport_free;

  # prephitmp_1153 = PHI <pretmp_1147(419), _89(291), prephitmp_1466(418)>
  # prephitmp_619 = PHI <pretmp_1127(419), _204(291), prephitmp_1473(418)>
  # prephitmp_601 = PHI <pretmp_621(419), _210(291), prephitmp_1480(418)>
  # prephitmp_1115 = PHI <pretmp_602(419), _216(291), prephitmp_1487(418)>
  # prephitmp_587 = PHI <pretmp_584(419), _222(291), prephitmp_1494(418)>
  # prephitmp_568 = PHI <pretmp_1109(419), _228(291), prephitmp_1501(418)>
  # prephitmp_550 = PHI <pretmp_570(419), _234(291), prephitmp_1508(418)>
  # prephitmp_1097 = PHI <pretmp_551(419), _241(291), prephitmp_1515(418)>
<L64>:
  # DEBUG D#2776 => {CLOBBER}
  # DEBUG rf_iter$_M_node => D#2776
  module_name ={v} {CLOBBER};
  rf ={v} {CLOBBER};
  # DEBUG D#2782 => &this_30(D)->_transport_match
  # DEBUG this => D#2782
  # DEBUG D#515 => &D#2782->D.35782
  # DEBUG this => D#515
  # DEBUG D#518 => D#2782->D.35782._M_impl._M_finish
  # DEBUG D#517 => D#2782->D.35782._M_impl._M_start
  # DEBUG __first => D#517
  # DEBUG __last => D#518
  # DEBUG D.102199 => NULL
  # DEBUG D#296 => D#517
  # DEBUG D#297 => D#518
  # DEBUG __first => D#296
  # DEBUG __last => D#297
  # DEBUG D#295 => D#297
  # DEBUG D#294 => D#296
  # DEBUG D#292 => D#294
  # DEBUG D#293 => D#295
  # DEBUG D.100797 => D#292
  # DEBUG D.100796 => D#293
  # DEBUG D#516 => &D#2782->D.35782
  # DEBUG this => D#516
  # DEBUG D#514 => D#516->_M_impl._M_end_of_storage
  # DEBUG D#513 => (long int) D#514
  _275 = MEM[(struct _Vector_base *)this_30(D) + 624B]._M_impl._M_start;
  # DEBUG D#512 => (long int) _275
  # DEBUG D#511 => D#513 - D#512
  # DEBUG D#510 => D#511 /[ex] 4
  # DEBUG D#509 => (long unsigned int) D#510
  # DEBUG this => D#516
  # DEBUG __p => _275
  # DEBUG __n => D#509
  if (_275 != 0B)
    goto <bb 421>;
  else
    goto <bb 422>;

  <bb 421>:
  # DEBUG D#507 => &D#516->_M_impl
  # DEBUG D#505 => D#507
  # DEBUG D#506 => D#509
  # DEBUG __p => _275
  # DEBUG __a => D#505
  # DEBUG __n => D#506
  # DEBUG D#504 => D#506
  # DEBUG D#503 => D#505
  # DEBUG D#501 => D#503
  # DEBUG D#502 => D#504
  # DEBUG __p => _275
  # DEBUG this => D#501
  # DEBUG D.132509 => D#502
  operator delete (_275);

  <bb 422>:
  # DEBUG D#508 => &D#516->_M_impl
  # DEBUG this => D#508
  # DEBUG this => D#508
  # DEBUG this => D#508
  MEM[(struct  &)this_30(D) + 624] ={v} {CLOBBER};
  resx 14

<L66>:
  # DEBUG D#2781 => &this_30(D)->_transport_free
  # DEBUG this => D#2781
  # DEBUG D#3755 => &MEM[(struct vector *)this_30(D) + 584B].D.43009
  # DEBUG this => D#3755
  std::_Bvector_base<std::allocator<bool> >::_M_deallocate (prephitmp_1097);
  # DEBUG D#571 => &D#3755->_M_impl
  # DEBUG this => D#571
  # DEBUG this => D#571
  # DEBUG this => D#571
  MEM[(struct  &)this_30(D) + 584] ={v} {CLOBBER};
  resx 13

<L67>:
  # DEBUG D#2780 => &this_30(D)->_transport_arbiter
  # DEBUG this => D#2780
  # DEBUG D#716 => &D#2780->D.53778
  # DEBUG this => D#716
  # DEBUG D#719 => D#2780->D.53778._M_impl._M_finish
  # DEBUG D#718 => D#2780->D.53778._M_impl._M_start
  # DEBUG __first => D#718
  # DEBUG __last => D#719
  # DEBUG D.103104 => NULL
  # DEBUG D#349 => D#718
  # DEBUG D#350 => D#719
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  # DEBUG D#717 => &D#2780->D.53778
  # DEBUG this => D#717
  # DEBUG D#715 => D#717->_M_impl._M_end_of_storage
  # DEBUG D#714 => (long int) D#715
  _295 = MEM[(struct _Vector_base *)this_30(D) + 560B]._M_impl._M_start;
  # DEBUG D#713 => (long int) _295
  # DEBUG D#712 => D#714 - D#713
  # DEBUG D#711 => D#712 /[ex] 8
  # DEBUG D#710 => (long unsigned int) D#711
  # DEBUG this => D#717
  # DEBUG __p => _295
  # DEBUG __n => D#710
  if (_295 != 0B)
    goto <bb 425>;
  else
    goto <bb 426>;

  <bb 425>:
  # DEBUG D#708 => &D#717->_M_impl
  # DEBUG D#706 => D#708
  # DEBUG D#707 => D#710
  # DEBUG __p => _295
  # DEBUG __a => D#706
  # DEBUG __n => D#707
  # DEBUG D#705 => D#707
  # DEBUG D#704 => D#706
  # DEBUG D#702 => D#704
  # DEBUG D#703 => D#705
  # DEBUG __p => _295
  # DEBUG this => D#702
  # DEBUG D.132529 => D#703
  operator delete (_295);

  <bb 426>:
  # DEBUG D#709 => &D#717->_M_impl
  # DEBUG this => D#709
  # DEBUG this => D#709
  # DEBUG this => D#709
  MEM[(struct  &)this_30(D) + 560] ={v} {CLOBBER};
  resx 12

<L68>:
  std::vector<std::queue<EventRouter::tTransportEvent*> >::~vector (prephitmp_550);
  resx 11

<L69>:
  # DEBUG D#2779 => &this_30(D)->_arrival_arbiter
  # DEBUG this => D#2779
  # DEBUG D#716 => &D#2779->D.53778
  # DEBUG this => D#716
  # DEBUG D#719 => D#2779->D.53778._M_impl._M_finish
  # DEBUG D#718 => D#2779->D.53778._M_impl._M_start
  # DEBUG __first => D#718
  # DEBUG __last => D#719
  # DEBUG D.103104 => NULL
  # DEBUG D#349 => D#718
  # DEBUG D#350 => D#719
  # DEBUG __first => D#349
  # DEBUG __last => D#350
  # DEBUG D#348 => D#350
  # DEBUG D#347 => D#349
  # DEBUG D#345 => D#347
  # DEBUG D#346 => D#348
  # DEBUG D.101045 => D#345
  # DEBUG D.101044 => D#346
  # DEBUG D#717 => &D#2779->D.53778
  # DEBUG this => D#717
  # DEBUG D#715 => D#717->_M_impl._M_end_of_storage
  # DEBUG D#714 => (long int) D#715
  _296 = MEM[(struct _Vector_base *)this_30(D) + 512B]._M_impl._M_start;
  # DEBUG D#713 => (long int) _296
  # DEBUG D#712 => D#714 - D#713
  # DEBUG D#711 => D#712 /[ex] 8
  # DEBUG D#710 => (long unsigned int) D#711
  # DEBUG this => D#717
  # DEBUG __p => _296
  # DEBUG __n => D#710
  if (_296 != 0B)
    goto <bb 429>;
  else
    goto <bb 430>;

  <bb 429>:
  # DEBUG D#708 => &D#717->_M_impl
  # DEBUG D#706 => D#708
  # DEBUG D#707 => D#710
  # DEBUG __p => _296
  # DEBUG __a => D#706
  # DEBUG __n => D#707
  # DEBUG D#705 => D#707
  # DEBUG D#704 => D#706
  # DEBUG D#702 => D#704
  # DEBUG D#703 => D#705
  # DEBUG __p => _296
  # DEBUG this => D#702
  # DEBUG D.132544 => D#703
  operator delete (_296);

  <bb 430>:
  # DEBUG D#709 => &D#717->_M_impl
  # DEBUG this => D#709
  # DEBUG this => D#709
  # DEBUG this => D#709
  MEM[(struct  &)this_30(D) + 512] ={v} {CLOBBER};
  resx 10

<L70>:
  std::vector<std::queue<EventRouter::tArrivalEvent*> >::~vector (prephitmp_568);
  resx 9

<L71>:
  std::vector<std::queue<Credit*> >::~vector (prephitmp_587);
  resx 8

<L72>:
  std::vector<std::queue<Credit*> >::~vector (prephitmp_1115);
  resx 7

<L73>:
  std::vector<std::queue<Flit*> >::~vector (prephitmp_601);
  resx 6

<L74>:
  std::vector<std::queue<Flit*> >::~vector (prephitmp_619);
  resx 5

<L75>:
  # DEBUG D#2778 => &this_30(D)->_output_state
  # DEBUG this => D#2778
  # DEBUG D#639 => &D#2778->D.50767
  # DEBUG this => D#639
  # DEBUG D#642 => D#2778->D.50767._M_impl._M_finish
  # DEBUG D#641 => D#2778->D.50767._M_impl._M_start
  # DEBUG __first => D#641
  # DEBUG __last => D#642
  # DEBUG D.102816 => NULL
  # DEBUG D#339 => D#641
  # DEBUG D#340 => D#642
  # DEBUG __first => D#339
  # DEBUG __last => D#340
  # DEBUG D#338 => D#340
  # DEBUG D#337 => D#339
  # DEBUG D#335 => D#337
  # DEBUG D#336 => D#338
  # DEBUG D.100983 => D#335
  # DEBUG D.100982 => D#336
  # DEBUG D#640 => &D#2778->D.50767
  # DEBUG this => D#640
  # DEBUG D#638 => D#640->_M_impl._M_end_of_storage
  # DEBUG D#637 => (long int) D#638
  _299 = MEM[(struct _Vector_base *)this_30(D) + 344B]._M_impl._M_start;
  # DEBUG D#636 => (long int) _299
  # DEBUG D#635 => D#637 - D#636
  # DEBUG D#634 => D#635 /[ex] 8
  # DEBUG D#633 => (long unsigned int) D#634
  # DEBUG this => D#640
  # DEBUG __p => _299
  # DEBUG __n => D#633
  if (_299 != 0B)
    goto <bb 437>;
  else
    goto <bb 438>;

  <bb 437>:
  # DEBUG D#631 => &D#640->_M_impl
  # DEBUG D#629 => D#631
  # DEBUG D#630 => D#633
  # DEBUG __p => _299
  # DEBUG __a => D#629
  # DEBUG __n => D#630
  # DEBUG D#628 => D#630
  # DEBUG D#627 => D#629
  # DEBUG D#625 => D#627
  # DEBUG D#626 => D#628
  # DEBUG __p => _299
  # DEBUG this => D#625
  # DEBUG D.132559 => D#626
  operator delete (_299);

  <bb 438>:
  # DEBUG D#632 => &D#640->_M_impl
  # DEBUG this => D#632
  # DEBUG this => D#632
  # DEBUG this => D#632
  MEM[(struct  &)this_30(D) + 344] ={v} {CLOBBER};
  resx 4

<L76>:
  std::vector<std::vector<bool> >::~vector (prephitmp_1153);
  resx 3

<L77>:
  # DEBUG D#2777 => &this_30(D)->_buf
  # DEBUG this => D#2777
  # DEBUG D#594 => &D#2777->D.49272
  # DEBUG this => D#594
  # DEBUG D#597 => D#2777->D.49272._M_impl._M_finish
  # DEBUG D#596 => D#2777->D.49272._M_impl._M_start
  # DEBUG __first => D#596
  # DEBUG __last => D#597
  # DEBUG D.102545 => NULL
  # DEBUG D#329 => D#596
  # DEBUG D#330 => D#597
  # DEBUG __first => D#329
  # DEBUG __last => D#330
  # DEBUG D#328 => D#330
  # DEBUG D#327 => D#329
  # DEBUG D#325 => D#327
  # DEBUG D#326 => D#328
  # DEBUG D.100933 => D#325
  # DEBUG D.100932 => D#326
  # DEBUG D#595 => &D#2777->D.49272
  # DEBUG this => D#595
  # DEBUG D#593 => D#595->_M_impl._M_end_of_storage
  # DEBUG D#592 => (long int) D#593
  _310 = MEM[(struct _Vector_base *)this_30(D) + 288B]._M_impl._M_start;
  # DEBUG D#591 => (long int) _310
  # DEBUG D#590 => D#592 - D#591
  # DEBUG D#589 => D#590 /[ex] 8
  # DEBUG D#588 => (long unsigned int) D#589
  # DEBUG this => D#595
  # DEBUG __p => _310
  # DEBUG __n => D#588
  if (_310 != 0B)
    goto <bb 441>;
  else
    goto <bb 442>;

  <bb 441>:
  # DEBUG D#586 => &D#595->_M_impl
  # DEBUG D#584 => D#586
  # DEBUG D#585 => D#588
  # DEBUG __p => _310
  # DEBUG __a => D#584
  # DEBUG __n => D#585
  # DEBUG D#583 => D#585
  # DEBUG D#582 => D#584
  # DEBUG D#580 => D#582
  # DEBUG D#581 => D#583
  # DEBUG __p => _310
  # DEBUG this => D#580
  # DEBUG D.132574 => D#581
  operator delete (_310);

  <bb 442>:
  # DEBUG D#587 => &D#595->_M_impl
  # DEBUG this => D#587
  # DEBUG this => D#587
  # DEBUG this => D#587
  MEM[(struct  &)this_30(D) + 288] ={v} {CLOBBER};
  resx 2

<L78>:
  Router::~Router (_31);
  resx 1

}


