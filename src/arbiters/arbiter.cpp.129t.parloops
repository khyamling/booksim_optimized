
;; Function virtual void Arbiter::Clear() (_ZN7Arbiter5ClearEv, funcdef_no=1519, decl_uid=27608, cgraph_uid=523, symbol_order=524)

Trying loop 2 as candidate
loop 2 is innermost
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) _19 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if _19 <= 0
    # of iterations (unsigned long) ((signed long) _19 + -1), bounded by 9223372036854775806
arbiters/arbiter.cpp:79:6: note: === vect_analyze_loop_form ===
split exit edge.
arbiters/arbiter.cpp:79:6: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) _19 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if _19 <= 0
    # of iterations (unsigned long) ((signed long) _19 + -1), bounded by 9223372036854775806
Applying pattern match.pd:715, generic-match.c:1389
Applying pattern match.pd:49, generic-match.c:3223
arbiters/arbiter.cpp:79:6: note: Symbolic number of iterations is (unsigned long) _19
parallelizing inner loop 7

loop at arbiters/arbiter.cpp:85: 
Updating SSA:
Registering new PHI nodes in block #14
Registering new PHI nodes in block #15
Registering new PHI nodes in block #7
Updating SSA information for statement _25 = (sizetype) graphite_IV.182_2;
Updating SSA information for statement _26 = _25 * 12;
Updating SSA information for statement _27 = pretmp_18 + _26;
Updating SSA information for statement _27->valid = 0;
Updating SSA information for statement graphite_IV.182_9 = graphite_IV.182_2 + 1;
Updating SSA information for statement if (graphite_IV.182_2 < _17)
Registering new PHI nodes in block #8
Registering new PHI nodes in block #16
Registering new PHI nodes in block #12
Updating SSA information for statement _10 = (sizetype) graphite_IV.182_2;
Updating SSA information for statement _11 = _25 * 12;
Updating SSA information for statement _22 = pretmp_18 + _26;
Updating SSA information for statement _27->valid = 0;
Updating SSA information for statement graphite_IV.182_31 = graphite_IV.182_2 + 1;
Updating SSA information for statement if (graphite_IV.182_2 < _17)
Registering new PHI nodes in block #13
Registering new PHI nodes in block #11

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_10 -> { _25 }
_11 -> { _26 }
graphite_IV.182_15 -> { graphite_IV.182_2 }
.MEM_16 -> { .MEM_29 }
_22 -> { _27 }
.MEM_30 -> { .MEM_14 }
graphite_IV.182_31 -> { graphite_IV.182_9 }
Incremental SSA update started at block: 14
Number of blocks in CFG: 17
Number of blocks to update: 7 ( 41%)
Affected blocks: 7 8 11 12 13 15 16


Applying pattern match.pd:114, generic-match.c:6953
Applying pattern match.pd:49, generic-match.c:3223

Updating SSA:
Registering new PHI nodes in block #14
Registering new PHI nodes in block #15
Registering new PHI nodes in block #7
Registering new PHI nodes in block #17
Updating SSA information for statement graphite_IV.182_2 = ivtmp_32;
Updating SSA information for statement _25 = (sizetype) graphite_IV.182_2;
Updating SSA information for statement _26 = _25 * 12;
Updating SSA information for statement _27 = pretmp_18 + _26;
Updating SSA information for statement _27->valid = 0;
Updating SSA information for statement graphite_IV.182_9 = graphite_IV.182_2 + 1;
Registering new PHI nodes in block #8
Updating SSA information for statement ivtmp_33 = ivtmp_32 + 1;
Registering new PHI nodes in block #18
Updating SSA information for statement graphite_IV.182_38 = ivtmp_32;
Updating SSA information for statement _39 = (sizetype) graphite_IV.182_2;
Updating SSA information for statement _40 = _25 * 12;
Updating SSA information for statement _41 = pretmp_18 + _26;
Updating SSA information for statement _27->valid = 0;
Updating SSA information for statement graphite_IV.182_43 = graphite_IV.182_2 + 1;
Registering new PHI nodes in block #16
Registering new PHI nodes in block #12
Registering new PHI nodes in block #13
Registering new PHI nodes in block #11

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_36 -> { .MEM_29 }
ivtmp_37 -> { ivtmp_32 }
graphite_IV.182_38 -> { graphite_IV.182_2 }
_39 -> { _25 }
_40 -> { _26 }
_41 -> { _27 }
.MEM_42 -> { .MEM_14 }
graphite_IV.182_43 -> { graphite_IV.182_9 }
Incremental SSA update started at block: 14
Number of blocks in CFG: 19
Number of blocks to update: 5 ( 26%)
Affected blocks: 7 8 11 17 18



Updating SSA:
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Updating SSA information for statement _6 = this_5(D)->_num_reqs;
Registering new PHI nodes in block #3
Updating SSA information for statement _19 = this_5(D)->_size;
Registering new PHI nodes in block #5
Updating SSA information for statement pretmp_18 = MEM[(struct entry_t * *)this_5(D) + 96B];
Registering new PHI nodes in block #6
Registering new PHI nodes in block #14
Registering new PHI nodes in block #15
Updating SSA information for statement .paral_data_store.185.pretmp = pretmp_18;
Updating SSA information for statement .paral_data_store.185.D.34651 = _8;
Registering new PHI nodes in block #19
Updating SSA information for statement pretmp_45 = .paral_data_load.186_46->pretmp;
Updating SSA information for statement _44 = .paral_data_load.186_46->D.34651;
Registering new PHI nodes in block #21
Registering new PHI nodes in block #7
Registering new PHI nodes in block #17
Updating SSA information for statement _27->valid = 0;
Registering new PHI nodes in block #8
Registering new PHI nodes in block #22
Registering new PHI nodes in block #20
Registering new PHI nodes in block #18
Updating SSA information for statement _41->valid = 0;
Registering new PHI nodes in block #16
Registering new PHI nodes in block #12
Updating SSA information for statement _22->valid = 0;
Registering new PHI nodes in block #13
Registering new PHI nodes in block #11
Registering new PHI nodes in block #9
Registering new PHI nodes in block #4
Updating SSA information for statement this_5(D)->_num_reqs = 0;
Updating SSA information for statement this_5(D)->_selected = -1;
Registering new PHI nodes in block #10
Updating SSA information for statement return;

Symbols to be put in SSA form
{ D.32821 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 23
Number of blocks to update: 22 ( 96%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22


virtual void Arbiter::Clear() (struct Arbiter * const this)
{
  struct  * .paral_data_load.186;
  struct  .paral_data_store.185;
  signed long graphite_IV.183;
  signed long graphite_IV.182;
  int i;
  bool _1;
  int _6;
  unsigned long _8;
  sizetype _10;
  sizetype _11;
  signed long _17;
  struct entry_t * pretmp_18;
  int _19;
  signed long _20;
  signed long _21;
  struct entry_t * _22;
  signed long _23;
  sizetype _25;
  sizetype _26;
  struct entry_t * _27;
  signed long ivtmp_32;
  signed long ivtmp_33;
  signed long ivtmp_35;
  signed long ivtmp_37;
  sizetype _39;
  sizetype _40;
  struct entry_t * _41;
  unsigned long _44;
  struct entry_t * pretmp_45;
  signed long ivtmp_49;

  <bb 2>:
  _6 = this_5(D)->_num_reqs;
  if (_6 > 0)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 3>:
  # DEBUG i => 0
  _19 = this_5(D)->_size;
  if (_19 <= 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  this_5(D)->_num_reqs = 0;
  this_5(D)->_selected = -1;
  goto <bb 10>;

  <bb 5>:
  pretmp_18 = MEM[(struct entry_t * *)this_5(D) + 96B];
  _1 = _19 > 0;
  if (_1 != 0)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 6>:
  _23 = (signed long) _19;
  _17 = _23 + -1;
  _21 = (signed long) _19;
  _20 = _21 + -1;
  _8 = (unsigned long) _20;

  <bb 14>:
  if (_8 > 599)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  .paral_data_store.185.pretmp = pretmp_18;
  .paral_data_store.185.D.34651 = _8;
  #pragma omp parallel num_threads(6) [child fn: virtual_void_Arbiter__Clear__._loopfn.0 (.paral_data_store.185)]

  <bb 19>:
  .paral_data_param_47 = &.paral_data_store.185;
  .paral_data_load.186_46 = (struct  *) .paral_data_param_47;
  pretmp_45 = .paral_data_load.186_46->pretmp;
  _44 = .paral_data_load.186_46->D.34651;

  <bb 21>:
  #pragma omp for schedule(static)
  for (ivtmp_49 = 0; ivtmp_49 < _44; ivtmp_49 =  + 1)

  <bb 7>:
  # ivtmp_35 = PHI <ivtmp_49(21), ivtmp_33(8)>

  <bb 17>:
  # ivtmp_32 = PHI <ivtmp_35(7)>
  graphite_IV.183_2 = ivtmp_32;
  _25 = (sizetype) graphite_IV.183_2;
  _26 = _25 * 12;
  _27 = pretmp_45 + _26;
  _27->valid = 0;
  graphite_IV.183_9 = graphite_IV.183_2 + 1;

  <bb 8>:
  #pragma omp continue (ivtmp_33, ivtmp_35)
  goto <bb 22>;

  <bb 16>:

  <bb 12>:
  # graphite_IV.182_15 = PHI <0(16), graphite_IV.182_31(13)>
  # DEBUG i => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _10 = (sizetype) graphite_IV.182_15;
  _11 = _10 * 12;
  _22 = pretmp_18 + _11;
  _22->valid = 0;
  # DEBUG i => NULL
  # DEBUG i => NULL
  graphite_IV.182_31 = graphite_IV.182_15 + 1;
  if (graphite_IV.182_15 < _17)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 13>:
  goto <bb 12>;

  <bb 22>:
  #pragma omp return(nowait)

  <bb 20>:
  #pragma omp return

  <bb 18>:
  ivtmp_37 = (signed long) _8;
  graphite_IV.182_38 = ivtmp_37;
  # DEBUG i => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _39 = (sizetype) graphite_IV.182_38;
  _40 = _39 * 12;
  _41 = pretmp_18 + _40;
  _41->valid = 0;
  # DEBUG i => NULL
  # DEBUG i => NULL
  graphite_IV.182_43 = graphite_IV.182_38 + 1;

  <bb 11>:

  <bb 9>:
  goto <bb 4>;

  <bb 10>:
  return;

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Arbiter::entry_t; _Alloc = std::allocator<Arbiter::entry_t>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Arbiter::entry_t*, std::vector<Arbiter::entry_t> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Arbiter::entry_t*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Arbiter::entry_t] (_ZNSt6vectorIN7Arbiter7entry_tESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=1610, decl_uid=27505, cgraph_uid=614, symbol_order=615)

Trying loop 1 as candidate
loop 1 is innermost
loop is not parallel according to graphite
Trying loop 2 as candidate
loop 2 is innermost
loop is not parallel according to graphite
Trying loop 3 as candidate
loop 3 is innermost
loop is not parallel according to graphite
Trying loop 4 as candidate
loop 4 is innermost
loop is not parallel according to graphite
void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Arbiter::entry_t; _Alloc = std::allocator<Arbiter::entry_t>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Arbiter::entry_t*, std::vector<Arbiter::entry_t> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Arbiter::entry_t*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Arbiter::entry_t] (struct vector * const this, struct iterator __position, size_type __n, const struct value_type & __x)
{
  const long unsigned int D.34992;
  const size_type __len;
  size_type D.34991;
  size_type __n;
  struct entry_t * D.34982;
  const ptrdiff_t _Num;
  struct entry_t * D.34973;
  int __x_copy$pri;
  int __x_copy$id;
  unsigned char __x_copy;
  struct entry_t * const __position;
  struct entry_t * __first;
  const ptrdiff_t _Num;
  const ptrdiff_t _Num;
  struct entry_t * __first;
  long unsigned int __n;
  struct entry_t * __first;
  const ptrdiff_t _Num;
  struct entry_t * __first;
  struct entry_t * __new_finish;
  const size_type __elems_after;
  struct entry_t * _5;
  long int _6;
  long int _8;
  long int _9;
  long int _10;
  long unsigned int _11;
  struct entry_t * const _17;
  long unsigned int _19;
  difference_type _22;
  long int _23;
  long unsigned int _25;
  long int _27;
  struct entry_t * pretmp_29;
  long unsigned int _39;
  sizetype _40;
  struct entry_t * _41;
  struct entry_t * _44;
  long unsigned int _46;
  struct entry_t * _49;
  long int _50;
  long int __first.6_52;
  struct entry_t * _60;
  long unsigned int _64;
  long int _72;
  long unsigned int _74;
  struct entry_t * _76;
  long unsigned int _80;
  long unsigned int _83;
  long unsigned int pretmp_88;
  long unsigned int pretmp_111;
  long unsigned int prephitmp_112;
  long int _113;
  long unsigned int _115;
  sizetype _116;
  struct entry_t * _117;
  struct entry_t * _121;
  struct entry_t * iftmp.11_122;
  bool _123;
  long int _125;
  long int _126;
  long int _127;
  long unsigned int _129;
  long int prephitmp_130;
  long unsigned int _142;
  long int prephitmp_146;
  long int pretmp_147;
  bool _150;
  long int _151;
  long int _152;
  long int pretmp_153;
  long int pretmp_155;
  struct entry_t * prephitmp_156;
  struct entry_t * pretmp_157;
  struct entry_t * prephitmp_158;
  struct entry_t * pretmp_159;
  long int _160;
  long int _161;
  bool _162;
  long int _163;
  long int _166;
  long int _167;
  long int _168;
  long unsigned int _170;
  long unsigned int prephitmp_172;
  long unsigned int pretmp_173;
  long unsigned int prephitmp_174;
  struct entry_t * pretmp_175;
  struct entry_t * prephitmp_176;
  long unsigned int pretmp_177;
  long unsigned int prephitmp_178;
  struct entry_t * pretmp_182;
  struct entry_t * prephitmp_183;

  <bb 2>:
  # DEBUG D#189 => MEM[(struct __normal_iterator *)&__position]
  # DEBUG __position => D#189
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 43>;

  <bb 4>:
  __position_16 = MEM[(struct __normal_iterator *)&__position];
  _5 = this_4(D)->D.27582._M_impl._M_end_of_storage;
  _6 = (long int) _5;
  __first_7 = this_4(D)->D.27582._M_impl._M_finish;
  _8 = (long int) __first_7;
  _9 = _6 - _8;
  _10 = _9 /[ex] 12;
  _11 = (long unsigned int) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 26>;

  <bb 5>:
  __x_copy_110 = MEM[(const struct entry_t &)__x_21(D)];
  # DEBUG __x_copy => __x_copy_110
  __x_copy$id_107 = MEM[(const struct entry_t &)__x_21(D) + 4];
  # DEBUG __x_copy$id => __x_copy$id_107
  __x_copy$pri_105 = MEM[(const struct entry_t &)__x_21(D) + 8];
  # DEBUG __x_copy$pri => __x_copy$pri_105
  # DEBUG this => this_4(D)
  # DEBUG D#30 => &this_4(D)->D.27582._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#30
  # DEBUG __lhs => &D.31476
  # DEBUG __rhs => &__position
  # DEBUG this => &D.31476
  # DEBUG this => &__position
  _27 = (long int) __position_16;
  _23 = _8 - _27;
  _22 = _23 /[ex] 12;
  __elems_after_36 = (const size_type) _22;
  # DEBUG __elems_after => __elems_after_36
  # DEBUG __old_finish => __first_7
  if (__n_2(D) < __elems_after_36)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  # DEBUG D#146 => &this_4(D)->D.27582
  # DEBUG this => D#146
  _39 = __n_2(D) * 12;
  _40 = -_39;
  _41 = __first_7 + _40;
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __alloc => D#139
  # DEBUG D#138 => D#139
  # DEBUG D#137 => D#138
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG D.34352 => D#137
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __assignable => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => _41
  # DEBUG __last => __first_7
  # DEBUG __result => __first_7
  __first.6_52 = (long int) _41;
  _50 = _8 - __first.6_52;
  _Num_48 = _50 /[ex] 12;
  # DEBUG _Num => _Num_48
  if (_Num_48 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _46 = (long unsigned int) _50;
  __builtin_memmove (__first_7, _41, _46);
  pretmp_182 = this_4(D)->D.27582._M_impl._M_finish;

  <bb 8>:
  # prephitmp_183 = PHI <__first_7(6), pretmp_182(7)>
  _44 = prephitmp_183 + _39;
  this_4(D)->D.27582._M_impl._M_finish = _44;
  # DEBUG this => &__position
  # DEBUG __first => D#189
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#189
  # DEBUG __it => D#189
  # DEBUG __first => D#189
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => _41
  # DEBUG __it => _41
  # DEBUG __it => D#189
  # DEBUG __it => D#189
  # DEBUG __first => D#189
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  # DEBUG __simple => 1
  # DEBUG __first => D#189
  # DEBUG __last => _41
  # DEBUG __result => __first_7
  _113 = __first.6_52 - _27;
  _Num_114 = _113 /[ex] 12;
  # DEBUG _Num => _Num_114
  if (_Num_114 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _115 = (long unsigned int) _113;
  _116 = -_115;
  _117 = __first_7 + _116;
  __builtin_memmove (_117, __position_16, _115);

  <bb 10>:
  # DEBUG this => &__position
  _49 = __position_16 + _39;
  # DEBUG this => &__position
  # DEBUG __first => D#189
  # DEBUG __last => _49
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#189
  if (__position_16 == _49)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:

  <bb 12>:
  # __position_118 = PHI <__position_16(11), __position_15(13)>
  # DEBUG __first => __position_118
  MEM[(struct entry_t *)__position_118] = __x_copy_110;
  MEM[(struct entry_t *)__position_118 + 4B] = __x_copy$id_107;
  MEM[(struct entry_t *)__position_118 + 8B] = __x_copy$pri_105;
  __position_15 = __position_118 + 12;
  # DEBUG __first => __position_15
  # DEBUG __first => __position_15
  if (__position_15 == _49)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  # DEBUG D#147 => &this_4(D)->D.27582
  # DEBUG this => D#147
  __n_54 = __n_2(D) - __elems_after_36;
  # DEBUG __first => __first_7
  # DEBUG __n => __n_54
  # DEBUG __x => &__x_copy
  # DEBUG __niter => __n_54
  # DEBUG __first => __first_7
  if (__n_54 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # __n_120 = PHI <__n_54(15), __n_69(18)>
  # __first_82 = PHI <__first_7(15), __first_70(18)>
  # DEBUG __niter => __n_120
  # DEBUG __first => __first_82
  MEM[(struct entry_t *)__first_82] = __x_copy_110;
  MEM[(struct entry_t *)__first_82 + 4B] = __x_copy$id_107;
  MEM[(struct entry_t *)__first_82 + 8B] = __x_copy$pri_105;
  __n_69 = __n_120 + 18446744073709551615;
  # DEBUG __niter => __n_69
  __first_70 = __first_82 + 12;
  # DEBUG __first => __first_70
  # DEBUG __niter => __n_69
  # DEBUG __first => __first_70
  if (__n_69 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _170 = __n_54 * 12;
  __first_137 = __first_7 + _170;
  goto <bb 19>;

  <bb 18>:
  goto <bb 16>;

  <bb 19>:
  # __first_134 = PHI <__first_137(17), __first_7(14)>
  this_4(D)->D.27582._M_impl._M_finish = __first_134;
  # DEBUG D#148 => &this_4(D)->D.27582
  # DEBUG this => D#148
  # DEBUG this => &__position
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __result => __first_134
  # DEBUG __alloc => D#139
  # DEBUG D#138 => D#139
  # DEBUG D#137 => D#138
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __result => __first_134
  # DEBUG D.34397 => D#137
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __result => __first_134
  # DEBUG __assignable => 1
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __result => __first_134
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __result => __first_134
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#189
  # DEBUG __it => D#189
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __result => __first_134
  # DEBUG __it => __first_134
  # DEBUG __it => __first_134
  # DEBUG __it => __first_7
  # DEBUG __it => __first_7
  # DEBUG __it => D#189
  # DEBUG __it => D#189
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __result => __first_134
  # DEBUG __simple => 1
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __result => __first_134
  # DEBUG _Num => _22
  if (_22 != 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  pretmp_177 = (long unsigned int) _23;
  goto <bb 22>;

  <bb 21>:
  _64 = (long unsigned int) _23;
  __builtin_memmove (__first_134, __position_16, _64);
  pretmp_175 = this_4(D)->D.27582._M_impl._M_finish;

  <bb 22>:
  # prephitmp_176 = PHI <__first_134(20), pretmp_175(21)>
  # prephitmp_178 = PHI <pretmp_177(20), _64(21)>
  _60 = prephitmp_176 + prephitmp_178;
  this_4(D)->D.27582._M_impl._M_finish = _60;
  # DEBUG this => &__position
  # DEBUG __first => D#189
  # DEBUG __last => __first_7
  # DEBUG __value => &__x_copy
  # DEBUG __first => D#189
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 23>;

  <bb 23>:

  <bb 24>:
  # __position_119 = PHI <__position_16(23), __position_63(25)>
  # DEBUG __first => __position_119
  MEM[(struct entry_t *)__position_119] = __x_copy_110;
  MEM[(struct entry_t *)__position_119 + 4B] = __x_copy$id_107;
  MEM[(struct entry_t *)__position_119 + 8B] = __x_copy$pri_105;
  __position_63 = __position_119 + 12;
  # DEBUG __first => __position_63
  # DEBUG __first => __position_63
  if (__first_7 == __position_63)
    goto <bb 3>;
  else
    goto <bb 25>;

  <bb 25>:
  goto <bb 24>;

  <bb 26>:
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __n => __n_2(D)
  # DEBUG __s => "vector::_M_fill_insert"
  # DEBUG D#121 => this_4(D)
  # DEBUG this => D#121
  # DEBUG D#120 => D#121
  # DEBUG D#119 => &D#120->D.27582
  # DEBUG this => D#119
  # DEBUG __a => D#118
  # DEBUG D#117 => D#118
  # DEBUG D#116 => D#117
  # DEBUG this => D#116
  _17 = MEM[(struct entry_t * *)this_4(D)];
  # DEBUG D#29 => this_4(D)
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG this => D#29
  _125 = (long int) _17;
  _126 = _8 - _125;
  _127 = _126 /[ex] 12;
  _128 = (const long unsigned int) _127;
  _129 = 1537228672809129301 - _128;
  if (__n_2(D) > _129)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  std::__throw_length_error ("vector::_M_fill_insert");

  <bb 28>:
  # DEBUG D#29 => this_4(D)
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG this => D#29
  # DEBUG D#29 => this_4(D)
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG this => D#29
  # DEBUG __a => &D.34992
  # DEBUG __b => &__n
  _83 = MAX_EXPR <__n_2(D), _128>;
  __len_133 = _83 + _128;
  # DEBUG __len => __len_133
  # DEBUG D#29 => this_4(D)
  # DEBUG D#29 => this_4(D)
  # DEBUG this => D#29
  # DEBUG this => D#29
  # DEBUG D#121 => this_4(D)
  # DEBUG this => D#121
  # DEBUG D#120 => D#121
  # DEBUG D#119 => &D#120->D.27582
  # DEBUG this => D#119
  # DEBUG __a => D#118
  # DEBUG D#117 => D#118
  # DEBUG D#116 => D#117
  # DEBUG this => D#116
  _162 = __len_133 > 1537228672809129301;
  _150 = _128 > __len_133;
  _123 = _150 | _162;
  if (_123 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 29>:
  pretmp_173 = __len_133 * 12;

  <bb 30>:
  # _166 = PHI <_152(44), _161(29)>
  # _167 = PHI <_151(44), _160(29)>
  # prephitmp_174 = PHI <18446744073709551612(44), pretmp_173(29)>
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#52 => &this_4(D)->D.27582._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#52
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.31509
  # DEBUG this => &__position
  # DEBUG this => &D.31509
  # DEBUG D#162 => _167 /[ex] 12
  # DEBUG __elems_before => (const size_type) D#162
  # DEBUG D#161 => &this_4(D)->D.27582
  # DEBUG D#129 => D#161
  # DEBUG __n => NULL
  # DEBUG this => D#129
  # DEBUG D#128 => D#129
  # DEBUG D#127 => &D#128->_M_impl
  # DEBUG D#126 => D#127
  # DEBUG __n => NULL
  # DEBUG __a => D#126
  # DEBUG D#125 => D#126
  # DEBUG D#123 => D#125
  # DEBUG D#124 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#123
  # DEBUG D.34980 => D#124
  # DEBUG D#122 => D#123
  # DEBUG D#116 => D#122
  # DEBUG this => D#116
  _121 = operator new (prephitmp_174);
  pretmp_29 = this_4(D)->D.27582._M_impl._M_start;
  pretmp_157 = this_4(D)->D.27582._M_impl._M_finish;
  pretmp_159 = _121 + prephitmp_174;
  pretmp_155 = (long int) pretmp_157;
  pretmp_153 = (long int) pretmp_29;
  pretmp_147 = _166 - pretmp_153;

  <bb 31>:
  # iftmp.11_122 = PHI <0B(45), _121(30)>
  # _168 = PHI <_161(45), _166(30)>
  # _163 = PHI <_160(45), _167(30)>
  # prephitmp_156 = PHI <_17(45), pretmp_29(30)>
  # prephitmp_158 = PHI <0B(45), pretmp_159(30)>
  # prephitmp_130 = PHI <_8(45), pretmp_155(30)>
  # prephitmp_146 = PHI <_160(45), pretmp_147(30)>
  # DEBUG __new_start => NULL
  # DEBUG __new_finish => NULL
  # DEBUG D#142 => &this_4(D)->D.27582
  # DEBUG this => D#142
  _19 = (long unsigned int) _163;
  __first_20 = iftmp.11_122 + _19;
  # DEBUG __first => __first_20
  # DEBUG __n => __n_2(D)
  # DEBUG __x => __x_21(D)
  # DEBUG __niter => __n_2(D)
  # DEBUG __first => __first_20

  <bb 32>:
  # __n_141 = PHI <__n_85(33), __n_2(D)(31)>
  # __first_165 = PHI <__first_86(33), __first_20(31)>
  # DEBUG __niter => __n_141
  # DEBUG __first => __first_165
  *__first_165 = MEM[(const struct entry_t &)__x_21(D)];
  __n_85 = __n_141 + 18446744073709551615;
  # DEBUG __niter => __n_85
  __first_86 = __first_165 + 12;
  # DEBUG __first => __first_86
  # DEBUG __niter => __n_85
  # DEBUG __first => __first_86
  if (__n_85 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  goto <bb 32>;

  <bb 34>:
  # DEBUG __new_finish => 0B
  # DEBUG D#143 => &this_4(D)->D.27582
  # DEBUG this => D#143
  # DEBUG this => &__position
  # DEBUG D#188 => this_4(D)->D.27582._M_impl._M_start
  # DEBUG __first => D#188
  # DEBUG __last => D#189
  # DEBUG __result => NULL
  # DEBUG __alloc => D#141
  # DEBUG D#140 => D#141
  # DEBUG D#137 => D#140
  # DEBUG __first => D#188
  # DEBUG __last => D#189
  # DEBUG __result => NULL
  # DEBUG D.34512 => D#137
  # DEBUG __first => D#188
  # DEBUG __last => D#189
  # DEBUG __result => NULL
  # DEBUG __assignable => 1
  # DEBUG __first => D#188
  # DEBUG __last => D#189
  # DEBUG __result => NULL
  # DEBUG __first => D#188
  # DEBUG __last => D#189
  # DEBUG __result => NULL
  # DEBUG __it => D#189
  # DEBUG __it => D#189
  # DEBUG __it => D#188
  # DEBUG __it => D#188
  # DEBUG __first => D#188
  # DEBUG __last => D#189
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG __it => D#189
  # DEBUG __it => D#189
  # DEBUG __it => D#188
  # DEBUG __it => D#188
  # DEBUG __first => D#188
  # DEBUG __last => D#189
  # DEBUG __result => NULL
  # DEBUG __simple => 1
  # DEBUG __first => D#188
  # DEBUG __last => D#189
  # DEBUG __result => NULL
  # DEBUG D#187 => (long int) D#188
  # DEBUG D#186 => _168 - D#187
  _Num_79 = prephitmp_146 /[ex] 12;
  # DEBUG _Num => _Num_79
  if (_Num_79 != 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  pretmp_88 = (long unsigned int) prephitmp_146;
  goto <bb 37>;

  <bb 36>:
  _80 = (long unsigned int) prephitmp_146;
  __builtin_memmove (iftmp.11_122, prephitmp_156, _80);

  <bb 37>:
  # prephitmp_112 = PHI <pretmp_88(35), _80(36)>
  # DEBUG D#185 => (long unsigned int) D#186
  # DEBUG __new_finish => iftmp.11_122 + D#185
  _25 = __n_2(D) * 12;
  _142 = _25 + prephitmp_112;
  __new_finish_26 = iftmp.11_122 + _142;
  # DEBUG __new_finish => __new_finish_26
  # DEBUG D#144 => &this_4(D)->D.27582
  # DEBUG this => D#144
  # DEBUG D#184 => this_4(D)->D.27582._M_impl._M_finish
  # DEBUG this => &__position
  # DEBUG __first => D#189
  # DEBUG __last => D#184
  # DEBUG __result => __new_finish_26
  # DEBUG __alloc => D#141
  # DEBUG D#140 => D#141
  # DEBUG D#137 => D#140
  # DEBUG __first => D#189
  # DEBUG __last => D#184
  # DEBUG __result => __new_finish_26
  # DEBUG D.34473 => D#137
  # DEBUG __first => D#189
  # DEBUG __last => D#184
  # DEBUG __result => __new_finish_26
  # DEBUG __assignable => 1
  # DEBUG __first => D#189
  # DEBUG __last => D#184
  # DEBUG __result => __new_finish_26
  # DEBUG __first => D#189
  # DEBUG __last => D#184
  # DEBUG __result => __new_finish_26
  # DEBUG __it => D#184
  # DEBUG __it => D#184
  # DEBUG __it => D#189
  # DEBUG __it => D#189
  # DEBUG __first => D#189
  # DEBUG __last => D#184
  # DEBUG __result => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => __new_finish_26
  # DEBUG __it => D#184
  # DEBUG __it => D#184
  # DEBUG __it => D#189
  # DEBUG __it => D#189
  # DEBUG __first => D#189
  # DEBUG __last => D#184
  # DEBUG __result => __new_finish_26
  # DEBUG __simple => 1
  # DEBUG __first => D#189
  # DEBUG __last => D#184
  # DEBUG __result => __new_finish_26
  _72 = prephitmp_130 - _168;
  _Num_73 = _72 /[ex] 12;
  # DEBUG _Num => _Num_73
  if (_Num_73 != 0)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 38>:
  pretmp_111 = (long unsigned int) _72;
  goto <bb 40>;

  <bb 39>:
  _74 = (long unsigned int) _72;
  __builtin_memcpy (__new_finish_26, __position_16, _74);

  <bb 40>:
  # prephitmp_172 = PHI <pretmp_111(38), _74(39)>
  _76 = __new_finish_26 + prephitmp_172;
  # DEBUG __new_finish => _76
  # DEBUG D#145 => &this_4(D)->D.27582
  # DEBUG this => D#145
  # DEBUG D#160 => this_4(D)->D.27582._M_impl._M_finish
  # DEBUG D#159 => this_4(D)->D.27582._M_impl._M_start
  # DEBUG __first => D#159
  # DEBUG __last => D#160
  # DEBUG D.34466 => NULL
  # DEBUG D#46 => D#159
  # DEBUG D#47 => D#160
  # DEBUG __first => D#46
  # DEBUG __last => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45
  # DEBUG D.33173 => D#42
  # DEBUG D.33172 => D#43
  # DEBUG D#158 => this_4(D)->D.27582._M_impl._M_end_of_storage
  # DEBUG D#157 => (long int) D#158
  # DEBUG D#156 => (long int) D#188
  # DEBUG D#155 => D#157 - D#156
  # DEBUG D#154 => D#155 /[ex] 12
  # DEBUG D#153 => (long unsigned int) D#154
  # DEBUG D#152 => &this_4(D)->D.27582
  # DEBUG this => D#152
  # DEBUG __p => D#188
  # DEBUG __n => D#153
  if (prephitmp_156 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  # DEBUG D#104 => &D#152->_M_impl
  # DEBUG D#102 => D#104
  # DEBUG D#103 => D#153
  # DEBUG __p => D#188
  # DEBUG __a => D#102
  # DEBUG __n => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#100 => D#102
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#101
  # DEBUG __p => D#188
  # DEBUG this => D#98
  # DEBUG D.34462 => D#99
  operator delete (prephitmp_156);

  <bb 42>:
  this_4(D)->D.27582._M_impl._M_start = iftmp.11_122;
  this_4(D)->D.27582._M_impl._M_finish = _76;
  this_4(D)->D.27582._M_impl._M_end_of_storage = prephitmp_158;

  <bb 43>:
  return;

  <bb 44>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#52 => &this_4(D)->D.27582._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#52
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.31509
  # DEBUG this => &__position
  _152 = (long int) __position_16;
  # DEBUG this => &D.31509
  _151 = _152 - _125;
  # DEBUG D#162 => _151 /[ex] 12
  # DEBUG __elems_before => (const size_type) D#162
  # DEBUG D#161 => &this_4(D)->D.27582
  # DEBUG D#129 => D#161
  # DEBUG __n => NULL
  # DEBUG this => D#129
  # DEBUG D#128 => D#129
  goto <bb 30>;

  <bb 45>:
  # DEBUG __len => NULL
  # DEBUG this => this_4(D)
  # DEBUG D#52 => &this_4(D)->D.27582._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#52
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.31509
  # DEBUG this => &__position
  _161 = (long int) __position_16;
  # DEBUG this => &D.31509
  _160 = _161 - _125;
  # DEBUG D#162 => _160 /[ex] 12
  # DEBUG __elems_before => (const size_type) D#162
  # DEBUG D#161 => &this_4(D)->D.27582
  # DEBUG D#129 => D#161
  # DEBUG __n => NULL
  # DEBUG this => D#129
  # DEBUG D#128 => D#129
  if (__len_133 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

}



;; Function Arbiter::Arbiter(Module*, const string&, int) (_ZN7ArbiterC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi, funcdef_no=1515, decl_uid=27634, cgraph_uid=519, symbol_order=520)

Trying loop 2 as candidate
loop 2 is innermost
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) size_11(D) + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if size_11(D) <= 0
    # of iterations (unsigned long) ((signed long) size_11(D) + -1), bounded by 9223372036854775806
/usr/include/c++/5/bits/vector.tcc:489:45: note: === vect_analyze_loop_form ===
split exit edge.
/usr/include/c++/5/bits/vector.tcc:489:45: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (signed long) size_11(D) + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if size_11(D) <= 0
    # of iterations (unsigned long) ((signed long) size_11(D) + -1), bounded by 9223372036854775806
Applying pattern match.pd:715, generic-match.c:1389
Applying pattern match.pd:49, generic-match.c:3223
/usr/include/c++/5/bits/vector.tcc:489:45: note: Symbolic number of iterations is (unsigned long) size_11(D)
parallelizing inner loop 8

loop at arbiters/arbiter.cpp:51: 
Updating SSA:
Registering new PHI nodes in block #24
Registering new PHI nodes in block #25
Registering new PHI nodes in block #8
Updating SSA information for statement _65 = (sizetype) graphite_IV.240_19;
Updating SSA information for statement _66 = _65 * 12;
Updating SSA information for statement _67 = pretmp_38 + _66;
Updating SSA information for statement _67->valid = 0;
Updating SSA information for statement graphite_IV.240_39 = graphite_IV.240_19 + 1;
Updating SSA information for statement if (graphite_IV.240_19 < _36)
Registering new PHI nodes in block #9
Registering new PHI nodes in block #26
Registering new PHI nodes in block #22
Updating SSA information for statement _26 = (sizetype) graphite_IV.240_19;
Updating SSA information for statement _27 = _65 * 12;
Updating SSA information for statement _43 = pretmp_38 + _66;
Updating SSA information for statement _67->valid = 0;
Updating SSA information for statement graphite_IV.240_75 = graphite_IV.240_19 + 1;
Updating SSA information for statement if (graphite_IV.240_19 < _36)
Registering new PHI nodes in block #23
Registering new PHI nodes in block #21

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_14 -> { .MEM_71 }
graphite_IV.240_25 -> { graphite_IV.240_19 }
_26 -> { _65 }
_27 -> { _66 }
_43 -> { _67 }
.MEM_72 -> { .MEM_30 }
graphite_IV.240_75 -> { graphite_IV.240_39 }
Incremental SSA update started at block: 24
Number of blocks in CFG: 27
Number of blocks to update: 7 ( 26%)
Affected blocks: 8 9 21 22 23 25 26


Applying pattern match.pd:114, generic-match.c:6953
Applying pattern match.pd:49, generic-match.c:3223

Updating SSA:
Registering new PHI nodes in block #24
Registering new PHI nodes in block #25
Registering new PHI nodes in block #8
Registering new PHI nodes in block #27
Updating SSA information for statement graphite_IV.240_19 = ivtmp_76;
Updating SSA information for statement _65 = (sizetype) graphite_IV.240_19;
Updating SSA information for statement _66 = _65 * 12;
Updating SSA information for statement _67 = pretmp_38 + _66;
Updating SSA information for statement _67->valid = 0;
Updating SSA information for statement graphite_IV.240_39 = graphite_IV.240_19 + 1;
Registering new PHI nodes in block #9
Updating SSA information for statement ivtmp_77 = ivtmp_76 + 1;
Registering new PHI nodes in block #28
Updating SSA information for statement graphite_IV.240_41 = ivtmp_76;
Updating SSA information for statement _59 = (sizetype) graphite_IV.240_19;
Updating SSA information for statement _46 = _65 * 12;
Updating SSA information for statement _47 = pretmp_38 + _66;
Updating SSA information for statement _67->valid = 0;
Updating SSA information for statement graphite_IV.240_10 = graphite_IV.240_19 + 1;
Registering new PHI nodes in block #26
Registering new PHI nodes in block #22
Registering new PHI nodes in block #23
Registering new PHI nodes in block #21

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

graphite_IV.240_10 -> { graphite_IV.240_39 }
graphite_IV.240_41 -> { graphite_IV.240_19 }
.MEM_45 -> { .MEM_71 }
_46 -> { _66 }
_47 -> { _67 }
.MEM_48 -> { .MEM_30 }
ivtmp_50 -> { ivtmp_76 }
_59 -> { _65 }
Incremental SSA update started at block: 24
Number of blocks in CFG: 29
Number of blocks to update: 5 ( 17%)
Affected blocks: 8 9 21 27 28



Updating SSA:
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Updating SSA information for statement Module::Module (_4, parent_6(D), name_7(D));
Updating SSA information for statement this_3(D)->D.27639._vptr.Module = &MEM[(void *)&_ZTV7Arbiter + 16B];
Updating SSA information for statement MEM[(struct _Vector_impl *)this_3(D) + 96B]._M_start = 0B;
Updating SSA information for statement MEM[(struct _Vector_impl *)this_3(D) + 96B]._M_finish = 0B;
Updating SSA information for statement MEM[(struct _Vector_impl *)this_3(D) + 96B]._M_end_of_storage = 0B;
Updating SSA information for statement this_3(D)->_size = size_11(D);
Updating SSA information for statement this_3(D)->_selected = -1;
Updating SSA information for statement this_3(D)->_highest_pri = -2147483648;
Updating SSA information for statement this_3(D)->_best_input = -1;
Updating SSA information for statement this_3(D)->_num_reqs = 0;
Updating SSA information for statement MEM[(struct entry_t *)&__x] = 0;
Updating SSA information for statement MEM[(struct entry_t *)&__x + 4B] = 0;
Updating SSA information for statement MEM[(struct entry_t *)&__x + 8B] = 0;
Registering new PHI nodes in block #4
Updating SSA information for statement MEM[(struct __normal_iterator *)&__position] = 0B;
Updating SSA information for statement std::vector<Arbiter::entry_t>::_M_fill_insert (_22, __position, _21, &__x);
Registering new PHI nodes in block #11
Updating SSA information for statement _31 = MEM[(struct _Vector_base *)this_3(D) + 96B]._M_impl._M_start;
Registering new PHI nodes in block #12
Updating SSA information for statement operator delete (_31);
Registering new PHI nodes in block #13
Updating SSA information for statement MEM[(struct  &)this_3(D) + 96] ={v} {CLOBBER};
Registering new PHI nodes in block #14
Updating SSA information for statement MEM[(struct Module *)this_3(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
Updating SSA information for statement _23 = MEM[(struct _Vector_base *)this_3(D) + 72B]._M_impl._M_start;
Registering new PHI nodes in block #15
Updating SSA information for statement operator delete (_23);
Registering new PHI nodes in block #16
Updating SSA information for statement MEM[(struct  &)this_3(D) + 72] ={v} {CLOBBER};
Updating SSA information for statement _51 = MEM[(char * *)this_3(D) + 40B];
Registering new PHI nodes in block #17
Updating SSA information for statement operator delete (_51);
Registering new PHI nodes in block #18
Updating SSA information for statement MEM[(struct  &)this_3(D) + 40] ={v} {CLOBBER};
Updating SSA information for statement _53 = MEM[(char * *)this_3(D) + 8B];
Registering new PHI nodes in block #19
Updating SSA information for statement operator delete (_53);
Registering new PHI nodes in block #20
Updating SSA information for statement MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
Registering new PHI nodes in block #3
Registering new PHI nodes in block #6
Updating SSA information for statement pretmp_38 = MEM[(struct entry_t * *)this_3(D) + 96B];
Registering new PHI nodes in block #7
Registering new PHI nodes in block #24
Registering new PHI nodes in block #25
Updating SSA information for statement .paral_data_store.243.D.35109 = _24;
Updating SSA information for statement .paral_data_store.243.pretmp = pretmp_38;
Registering new PHI nodes in block #29
Updating SSA information for statement _80 = .paral_data_load.244_82->D.35109;
Updating SSA information for statement pretmp_81 = .paral_data_load.244_82->pretmp;
Registering new PHI nodes in block #31
Registering new PHI nodes in block #8
Registering new PHI nodes in block #27
Updating SSA information for statement _67->valid = 0;
Registering new PHI nodes in block #9
Registering new PHI nodes in block #32
Registering new PHI nodes in block #30
Registering new PHI nodes in block #28
Updating SSA information for statement _47->valid = 0;
Registering new PHI nodes in block #26
Registering new PHI nodes in block #22
Updating SSA information for statement _43->valid = 0;
Registering new PHI nodes in block #23
Registering new PHI nodes in block #21
Registering new PHI nodes in block #10
Registering new PHI nodes in block #5
Updating SSA information for statement return;

Symbols to be put in SSA form
{ D.32919 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 33
Number of blocks to update: 32 ( 97%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32


Arbiter::Arbiter(Module*, const string&, int) (struct Arbiter * const this, struct Module * parent, const struct string & name, int size)
{
  struct  * .paral_data_load.244;
  struct  .paral_data_store.243;
  signed long graphite_IV.241;
  signed long graphite_IV.240;
  int SR.238;
  int SR.237;
  unsigned char SR.236;
  struct iterator __position;
  struct value_type __x;
  int i;
  struct entry_t D.32181;
  struct Module * _4;
  bool _20;
  long unsigned int _21;
  struct vector * _22;
  struct Module * * _23;
  unsigned long _24;
  sizetype _26;
  sizetype _27;
  signed long ivtmp_29;
  struct entry_t * _31;
  signed long _36;
  signed long _37;
  struct entry_t * pretmp_38;
  signed long _42;
  struct entry_t * _43;
  signed long _44;
  sizetype _46;
  struct entry_t * _47;
  signed long ivtmp_50;
  char * const _51;
  const char * _52;
  char * const _53;
  const char * _54;
  sizetype _59;
  sizetype _65;
  sizetype _66;
  struct entry_t * _67;
  signed long ivtmp_76;
  signed long ivtmp_77;
  unsigned long _80;
  struct entry_t * pretmp_81;
  signed long ivtmp_85;

  <bb 2>:
  _4 = &this_3(D)->D.27639;
  Module::Module (_4, parent_6(D), name_7(D));
  this_3(D)->D.27639._vptr.Module = &MEM[(void *)&_ZTV7Arbiter + 16B];
  # DEBUG D#165 => &this_3(D)->_request
  # DEBUG this => D#165
  # DEBUG D#97 => &D#165->D.27582
  # DEBUG this => D#97
  # DEBUG D#96 => &D#97->_M_impl
  # DEBUG this => D#96
  # DEBUG this => D#96
  # DEBUG this => D#96
  MEM[(struct _Vector_impl *)this_3(D) + 96B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 96B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D) + 96B]._M_end_of_storage = 0B;
  this_3(D)->_size = size_11(D);
  this_3(D)->_selected = -1;
  this_3(D)->_highest_pri = -2147483648;
  this_3(D)->_best_input = -1;
  this_3(D)->_num_reqs = 0;
  _21 = (long unsigned int) size_11(D);
  # DEBUG D#193 => &this_3(D)->_request
  # DEBUG this => D#193
  # DEBUG __new_size => _21
  MEM[(struct entry_t *)&__x] = 0;
  MEM[(struct entry_t *)&__x + 4B] = 0;
  MEM[(struct entry_t *)&__x + 8B] = 0;
  # DEBUG D#29 => D#193
  # DEBUG D#29 => D#193
  # DEBUG this => D#29
  # DEBUG this => D#29
  if (_21 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  # DEBUG i => 0
  if (size_11(D) <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 4>:
  # DEBUG D#29 => D#193
  # DEBUG D#29 => D#193
  # DEBUG this => D#29
  # DEBUG this => D#29
  # DEBUG this => D#193
  # DEBUG D#30 => &D#193->D.27582._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#30
  # DEBUG this => D#193
  MEM[(struct __normal_iterator *)&__position] = 0B;
  # DEBUG __n => _21
  # DEBUG __x => &__x
  _22 = &this_3(D)->_request;
  std::vector<Arbiter::entry_t>::_M_fill_insert (_22, __position, _21, &__x);
  goto <bb 3>;

  <bb 5>:
  return;

  <bb 6>:
  pretmp_38 = MEM[(struct entry_t * *)this_3(D) + 96B];
  _20 = size_11(D) > 0;
  if (_20 != 0)
    goto <bb 7>;
  else
    goto <bb 10>;

  <bb 7>:
  _37 = (signed long) size_11(D);
  _36 = _37 + -1;
  _42 = (signed long) size_11(D);
  _44 = _42 + -1;
  _24 = (unsigned long) _44;

  <bb 24>:
  if (_24 > 599)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  .paral_data_store.243.D.35109 = _24;
  .paral_data_store.243.pretmp = pretmp_38;
  #pragma omp parallel num_threads(6) [child fn: Arbiter__Arbiter_Module___const_string___int_._loopfn.1 (.paral_data_store.243)]

  <bb 29>:
  .paral_data_param_83 = &.paral_data_store.243;
  .paral_data_load.244_82 = (struct  *) .paral_data_param_83;
  _80 = .paral_data_load.244_82->D.35109;
  pretmp_81 = .paral_data_load.244_82->pretmp;

  <bb 31>:
  #pragma omp for schedule(static)
  for (ivtmp_85 = 0; ivtmp_85 < _80; ivtmp_85 =  + 1)

  <bb 8>:
  # ivtmp_29 = PHI <ivtmp_85(31), ivtmp_77(9)>

  <bb 27>:
  # ivtmp_76 = PHI <ivtmp_29(8)>
  graphite_IV.241_19 = ivtmp_76;
  _65 = (sizetype) graphite_IV.241_19;
  _66 = _65 * 12;
  _67 = pretmp_81 + _66;
  _67->valid = 0;
  graphite_IV.241_39 = graphite_IV.241_19 + 1;

  <bb 9>:
  #pragma omp continue (ivtmp_77, ivtmp_29)
  goto <bb 32>;

  <bb 26>:

  <bb 22>:
  # graphite_IV.240_25 = PHI <0(26), graphite_IV.240_75(23)>
  # DEBUG i => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _26 = (sizetype) graphite_IV.240_25;
  _27 = _26 * 12;
  _43 = pretmp_38 + _27;
  _43->valid = 0;
  # DEBUG i => NULL
  # DEBUG i => NULL
  graphite_IV.240_75 = graphite_IV.240_25 + 1;
  if (graphite_IV.240_25 < _36)
    goto <bb 23>;
  else
    goto <bb 21>;

  <bb 23>:
  goto <bb 22>;

  <bb 32>:
  #pragma omp return(nowait)

  <bb 30>:
  #pragma omp return

  <bb 28>:
  ivtmp_50 = (signed long) _24;
  graphite_IV.240_41 = ivtmp_50;
  # DEBUG i => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  _59 = (sizetype) graphite_IV.240_41;
  _46 = _59 * 12;
  _47 = pretmp_38 + _46;
  _47->valid = 0;
  # DEBUG i => NULL
  # DEBUG i => NULL
  graphite_IV.240_10 = graphite_IV.240_41 + 1;

  <bb 21>:

  <bb 10>:
  goto <bb 5>;

<L3>:
  # DEBUG D#164 => &this_3(D)->_request
  # DEBUG this => D#164
  # DEBUG D#112 => &D#164->D.27582
  # DEBUG this => D#112
  # DEBUG D#115 => D#164->D.27582._M_impl._M_finish
  # DEBUG D#114 => D#164->D.27582._M_impl._M_start
  # DEBUG __first => D#114
  # DEBUG __last => D#115
  # DEBUG D.33522 => NULL
  # DEBUG D#46 => D#114
  # DEBUG D#47 => D#115
  # DEBUG __first => D#46
  # DEBUG __last => D#47
  # DEBUG D#45 => D#47
  # DEBUG D#44 => D#46
  # DEBUG D#42 => D#44
  # DEBUG D#43 => D#45
  # DEBUG D.33173 => D#42
  # DEBUG D.33172 => D#43
  # DEBUG D#113 => &D#164->D.27582
  # DEBUG this => D#113
  # DEBUG D#111 => D#113->_M_impl._M_end_of_storage
  # DEBUG D#110 => (long int) D#111
  _31 = MEM[(struct _Vector_base *)this_3(D) + 96B]._M_impl._M_start;
  # DEBUG D#109 => (long int) _31
  # DEBUG D#108 => D#110 - D#109
  # DEBUG D#107 => D#108 /[ex] 12
  # DEBUG D#106 => (long unsigned int) D#107
  # DEBUG this => D#113
  # DEBUG __p => _31
  # DEBUG __n => D#106
  if (_31 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # DEBUG D#104 => &D#113->_M_impl
  # DEBUG D#102 => D#104
  # DEBUG D#103 => D#106
  # DEBUG __p => _31
  # DEBUG __a => D#102
  # DEBUG __n => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#100 => D#102
  # DEBUG D#98 => D#100
  # DEBUG D#99 => D#101
  # DEBUG __p => _31
  # DEBUG this => D#98
  # DEBUG D.34636 => D#99
  operator delete (_31);

  <bb 13>:
  # DEBUG D#105 => &D#113->_M_impl
  # DEBUG this => D#105
  # DEBUG this => D#105
  # DEBUG this => D#105
  MEM[(struct  &)this_3(D) + 96] ={v} {CLOBBER};
  resx 2

<L4>:
  # DEBUG this => _4
  MEM[(struct Module *)this_3(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
  # DEBUG D#95 => &_4->_children
  # DEBUG this => D#95
  # DEBUG D#89 => &D#95->D.26765
  # DEBUG this => D#89
  # DEBUG D#92 => D#95->D.26765._M_impl._M_finish
  # DEBUG D#91 => D#95->D.26765._M_impl._M_start
  # DEBUG D#39 => D#91
  # DEBUG D#40 => D#92
  # DEBUG __first => D#39
  # DEBUG __last => D#40
  # DEBUG D.33398 => D#41
  # DEBUG D#38 => D#40
  # DEBUG D#37 => D#39
  # DEBUG D#35 => D#37
  # DEBUG D#36 => D#38
  # DEBUG __first => D#35
  # DEBUG __last => D#36
  # DEBUG D#34 => D#36
  # DEBUG D#33 => D#35
  # DEBUG D#31 => D#33
  # DEBUG D#32 => D#34
  # DEBUG D.33135 => D#31
  # DEBUG D.33134 => D#32
  # DEBUG D#90 => &D#95->D.26765
  # DEBUG this => D#90
  # DEBUG D#88 => D#90->_M_impl._M_end_of_storage
  # DEBUG D#87 => (long int) D#88
  _23 = MEM[(struct _Vector_base *)this_3(D) + 72B]._M_impl._M_start;
  # DEBUG D#86 => (long int) _23
  # DEBUG D#85 => D#87 - D#86
  # DEBUG D#84 => D#85 /[ex] 8
  # DEBUG D#81 => D#90
  # DEBUG D#82 => (long unsigned int) D#84
  # DEBUG __p => _23
  # DEBUG this => D#81
  # DEBUG __n => D#82
  # DEBUG D#80 => D#82
  # DEBUG D#79 => D#81
  if (_23 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  # DEBUG D#78 => &D#79->_M_impl
  # DEBUG D#76 => D#78
  # DEBUG D#77 => D#80
  # DEBUG __p => _23
  # DEBUG __a => D#76
  # DEBUG __n => D#77
  # DEBUG D#75 => D#77
  # DEBUG D#74 => D#76
  # DEBUG D#72 => D#74
  # DEBUG D#73 => D#75
  # DEBUG __p => _23
  # DEBUG this => D#72
  # DEBUG D.35066 => D#73
  operator delete (_23);

  <bb 16>:
  # DEBUG D#83 => &D#90->_M_impl
  # DEBUG this => D#83
  # DEBUG this => D#83
  # DEBUG this => D#83
  MEM[(struct  &)this_3(D) + 72] ={v} {CLOBBER};
  # DEBUG D#94 => &_4->_fullname
  # DEBUG this => D#94
  # DEBUG this => D#94
  # DEBUG this => D#94
  _51 = MEM[(char * *)this_3(D) + 40B];
  # DEBUG D#1 => D#94
  # DEBUG this => D#1
  # DEBUG this => D#94
  _52 = &MEM[(const struct basic_string *)this_3(D) + 40B].D.13836._M_local_buf;
  if (_51 != _52)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG D#70 => MEM[(struct basic_string *)D#94].D.13836._M_allocated_capacity
  # DEBUG D#69 => D#70
  # DEBUG this => D#94
  # DEBUG __size => D#69
  # DEBUG D#68 => D#69
  # DEBUG D#1 => D#94
  # DEBUG this => D#1
  # DEBUG this => D#94
  # DEBUG D#67 => &MEM[(struct basic_string *)D#94]._M_dataplus
  # DEBUG D#65 => D#67
  # DEBUG D#66 => D#68 + 1
  # DEBUG __p => _51
  # DEBUG __a => D#65
  # DEBUG __n => D#66
  # DEBUG D#64 => D#66
  # DEBUG D#63 => D#65
  # DEBUG D#61 => D#63
  # DEBUG D#62 => D#64
  # DEBUG __p => _51
  # DEBUG this => D#61
  # DEBUG D.35079 => D#62
  operator delete (_51);

  <bb 18>:
  # DEBUG D#71 => &MEM[(struct basic_string *)D#94]._M_dataplus
  # DEBUG this => D#71
  # DEBUG this => D#71
  # DEBUG this => D#71
  MEM[(struct  &)this_3(D) + 40] ={v} {CLOBBER};
  # DEBUG D#93 => &_4->_name
  # DEBUG this => D#93
  # DEBUG this => D#93
  # DEBUG this => D#93
  _53 = MEM[(char * *)this_3(D) + 8B];
  # DEBUG D#1 => D#93
  # DEBUG this => D#1
  # DEBUG this => D#93
  _54 = &MEM[(const struct basic_string *)this_3(D) + 8B].D.13836._M_local_buf;
  if (_53 != _54)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  # DEBUG D#70 => MEM[(struct basic_string *)D#93].D.13836._M_allocated_capacity
  # DEBUG D#69 => D#70
  # DEBUG this => D#93
  # DEBUG __size => D#69
  # DEBUG D#68 => D#69
  # DEBUG D#1 => D#93
  # DEBUG this => D#1
  # DEBUG this => D#93
  # DEBUG D#67 => &MEM[(struct basic_string *)D#93]._M_dataplus
  # DEBUG D#65 => D#67
  # DEBUG D#66 => D#68 + 1
  # DEBUG __p => _53
  # DEBUG __a => D#65
  # DEBUG __n => D#66
  # DEBUG D#64 => D#66
  # DEBUG D#63 => D#65
  # DEBUG D#61 => D#63
  # DEBUG D#62 => D#64
  # DEBUG __p => _53
  # DEBUG this => D#61
  # DEBUG D.35094 => D#62
  operator delete (_53);

  <bb 20>:
  # DEBUG D#71 => &MEM[(struct basic_string *)D#93]._M_dataplus
  # DEBUG this => D#71
  # DEBUG this => D#71
  # DEBUG this => D#71
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  resx 1

}



;; Function <built-in> (virtual_void_Arbiter__Clear__._loopfn.0, funcdef_no=1745, decl_uid=34654, cgraph_uid=367, symbol_order=1421)

<built-in> (void * .paral_data_param)
{
  signed long graphite_IV.183;
  signed long tt.188;
  signed long q.187;
  struct  * .paral_data_load.186;
  struct entry_t * pretmp_4;
  unsigned long _5;
  int _6;
  signed long _7;
  int _8;
  signed long _9;
  signed long _10;
  signed long _17;
  signed long _18;
  signed long _19;
  signed long ivtmp_21;
  signed long ivtmp_22;
  sizetype _25;
  sizetype _26;
  struct entry_t * _27;

  <bb 2>:
  pretmp_4 = MEM[(struct  *).paral_data_param_1(D)].pretmp;
  _5 = MEM[(struct  *).paral_data_param_1(D)].D.34651;
  _6 = __builtin_omp_get_num_threads ();
  _7 = (signed long) _6;
  _8 = __builtin_omp_get_thread_num ();
  _9 = (signed long) _8;
  _10 = (signed long) _5;
  q.187_11 = _10 / _7;
  tt.188_12 = _10 % _7;
  if (_9 < tt.188_12)
    goto <bb 8>;
  else
    goto <bb 3>;

  <bb 3>:
  # q.187_13 = PHI <q.187_14(8), q.187_11(2)>
  # tt.188_15 = PHI <0(8), tt.188_12(2)>
  _17 = _9 * q.187_13;
  _18 = tt.188_15 + _17;
  _19 = q.187_13 + _18;
  if (_18 >= _19)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  return;

  <bb 5>:

  <bb 6>:
  # ivtmp_21 = PHI <_18(5), ivtmp_22(7)>
  _25 = (sizetype) ivtmp_21;
  _26 = _25 * 12;
  _27 = pretmp_4 + _26;
  _27->valid = 0;
  ivtmp_22 = ivtmp_21 + 1;
  if (_19 > ivtmp_22)
    goto <bb 7>;
  else
    goto <bb 4>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  q.187_14 = q.187_11 + 1;
  goto <bb 3>;

}



;; Function <built-in> (Arbiter__Arbiter_Module___const_string___int_._loopfn.1, funcdef_no=1746, decl_uid=35113, cgraph_uid=583, symbol_order=1425)

<built-in> (void * .paral_data_param)
{
  signed long graphite_IV.241;
  signed long tt.246;
  signed long q.245;
  struct  * .paral_data_load.244;
  unsigned long _4;
  struct entry_t * pretmp_5;
  int _6;
  signed long _7;
  int _8;
  signed long _9;
  signed long _10;
  signed long _17;
  signed long _18;
  signed long _19;
  signed long ivtmp_21;
  signed long ivtmp_22;
  sizetype _25;
  sizetype _26;
  struct entry_t * _27;

  <bb 2>:
  _4 = MEM[(struct  *).paral_data_param_1(D)].D.35109;
  pretmp_5 = MEM[(struct  *).paral_data_param_1(D)].pretmp;
  _6 = __builtin_omp_get_num_threads ();
  _7 = (signed long) _6;
  _8 = __builtin_omp_get_thread_num ();
  _9 = (signed long) _8;
  _10 = (signed long) _4;
  q.245_11 = _10 / _7;
  tt.246_12 = _10 % _7;
  if (_9 < tt.246_12)
    goto <bb 8>;
  else
    goto <bb 3>;

  <bb 3>:
  # q.245_13 = PHI <q.245_14(8), q.245_11(2)>
  # tt.246_15 = PHI <0(8), tt.246_12(2)>
  _17 = _9 * q.245_13;
  _18 = tt.246_15 + _17;
  _19 = q.245_13 + _18;
  if (_18 >= _19)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  return;

  <bb 5>:

  <bb 6>:
  # ivtmp_21 = PHI <_18(5), ivtmp_22(7)>
  _25 = (sizetype) ivtmp_21;
  _26 = _25 * 12;
  _27 = pretmp_5 + _26;
  _27->valid = 0;
  ivtmp_22 = ivtmp_21 + 1;
  if (_19 > ivtmp_22)
    goto <bb 7>;
  else
    goto <bb 4>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  q.245_14 = q.245_11 + 1;
  goto <bb 3>;

}


